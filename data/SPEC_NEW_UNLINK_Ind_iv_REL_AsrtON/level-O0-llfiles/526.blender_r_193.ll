; ModuleID = 'blender/source/blender/blenkernel/intern/mesh.c'
source_filename = "blender/source/blender/blenkernel/intern/mesh.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.EvaluationContext = type { i32 }
%struct.MainLock = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.AnimData = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.Ipo = type { %struct.ID, %struct.ListBase, %struct.rctf, i16, i16, i16, i16 }
%struct.rctf = type { float, float, float, float }
%struct.Key = type { %struct.ID, %struct.AnimData*, %struct.KeyBlock*, [32 x i8], i32, i32, %struct.ListBase, %struct.Ipo*, %struct.ID*, i16, i16, i16, i16, float, i32 }
%struct.KeyBlock = type { %struct.KeyBlock*, %struct.KeyBlock*, float, float, i16, i16, i16, i16, i32, i32, i8*, [64 x i8], [64 x i8], float, float }
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type { %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Path* }
%struct.Path = type { %struct.PathPoint*, i32, float }
%struct.PathPoint = type { [4 x float], [4 x float], float, float }
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.LinkNode = type opaque
%struct.GPUDrawObject = type opaque
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type opaque
%struct.DMFlagMat = type { i16, i8 }
%struct.MeshElemMap = type opaque
%struct.PBVH = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.bNodeTree = type opaque
%struct.Group = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.MSelect = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MLoop = type { i32, i32 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.BMEditMesh = type { %struct.BMesh*, %struct.BMEditMesh*, i32, [3 x %struct.BMLoop*]*, i32, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, [4 x i8]*, i32, [4 x i8]*, i32, i16, i16, %struct.Object*, i32 }
%struct.BMesh = type { i32, i32, i32, i32, i32, i32, i32, i8, i8, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BMVert**, %struct.BMEdge**, %struct.BMFace**, i32, i32, i32, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, i32, %struct.BMOperator*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i16, i32, i32, i32, %struct.ListBase, %struct.BMFace*, %struct.ListBase, i8* }
%struct.BMVert = type { %struct.BMHeader, %struct.BMFlagLayer*, [3 x float], [3 x float], %struct.BMEdge* }
%struct.BMHeader = type { i8*, i32, i8, i8, i8 }
%struct.BMFlagLayer = type { i16 }
%struct.BMEdge = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMVert*, %struct.BMVert*, %struct.BMLoop*, %struct.BMDiskLink, %struct.BMDiskLink }
%struct.BMLoop = type { %struct.BMHeader, %struct.BMVert*, %struct.BMEdge*, %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMDiskLink = type { %struct.BMEdge*, %struct.BMEdge* }
%struct.BLI_mempool = type opaque
%struct.BMOperator = type { [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot], void (%struct.BMesh*, %struct.BMOperator*)*, %struct.MemArena*, i32, i32, i32 }
%struct.BMOpSlot = type { i8*, i32, %union.eBMOpSlotSubType_Union, i32, %union.anon }
%union.eBMOpSlotSubType_Union = type { i32 }
%union.anon = type { i8*, [8 x i8] }
%struct.MemArena = type opaque
%struct.BMFace = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMLoop*, i32, [3 x float], i16 }
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.EdgeHash = type opaque
%struct.MVertSkin = type { [3 x float], i32 }
%struct.BMIter = type { %union.anon.0, void (i8*)*, i8* (i8*)*, i32, i8 }
%union.anon.0 = type { %struct.BMIter__face_of_vert }
%struct.BMIter__face_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMAllocTemplate = type { i32, i32, i32, i32 }
%struct.DispList = type { %struct.DispList*, %struct.DispList*, i16, i16, i32, i32, i16, i16, float*, float*, i32*, i32, i32, i32* }
%struct.Curve = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.ListBase, %struct.EditNurb*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.Key*, %struct.Material**, [3 x float], [3 x float], [3 x float], i16, i16, i16, i16, float, float, i32, i16, i16, i32, float, float, float, i16, i16, i16, i16, i32, i32, [4 x i8], i16, i8, i8, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i8*, %struct.EditFont*, [64 x i8], %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.TextBox*, i32, i32, %struct.CharInfo*, %struct.CharInfo, float, float, float, i8, i8, [2 x i8] }
%struct.EditNurb = type { %struct.ListBase, %struct.GHash*, i32, [4 x i8] }
%struct.EditFont = type opaque
%struct.VFont = type opaque
%struct.TextBox = type { float, float, float, float }
%struct.CharInfo = type { i16, i16, i8, i8, i16 }
%struct.EdgeHashIterator = type { %struct.EdgeHash*, %struct.EdgeEntry*, i32 }
%struct.EdgeEntry = type opaque
%struct.EdgeLink = type { %struct.EdgeLink*, %struct.EdgeLink*, i8* }
%struct.Nurb = type { %struct.Nurb*, %struct.Nurb*, i16, i16, i16, i16, i32, i32, [2 x i16], i16, i16, i16, i16, i16, i16, float*, float*, %struct.BPoint*, %struct.BezTriple*, i16, i16, i32 }
%struct.BPoint = type { [4 x float], float, float, i16, i16, float, float }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.VertLink = type { %struct.Link*, %struct.Link*, i32 }
%struct.Link = type { %struct.Link*, %struct.Link* }
%struct.BMIter__elem_of_mesh = type { %struct.BLI_mempool_iter }
%struct.BLI_mempool_iter = type { %struct.BLI_mempool*, %struct.BLI_mempool_chunk*, i32 }
%struct.BLI_mempool_chunk = type opaque
%struct.BMIter__edge_of_vert = type { %struct.BMVert*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__loop_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__vert_of_edge = type { %struct.BMEdge* }
%struct.BMIter__face_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__vert_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__edge_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_loop = type { %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%struct._eh_Entry = type { i8*, i32, i32, i8* }

@.str = private unnamed_addr constant [26 x i8] c"Requires two input meshes\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"Number of verts don't match\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"Number of edges don't match\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"Number of faces don't match\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"Number of loops don't match\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@CD_MASK_MESH = external dso_local constant i64, align 8
@G = external dso_local global %struct.Global, align 8
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.5 = private unnamed_addr constant [9 x i8] c"boundbox\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"orco mesh\00", align 1
@test_index_face.corner_indices = internal global [4 x i32] [i32 1, i32 2, i32 0, i32 3], align 16, !dbg !0
@test_index_face.corner_indices.7 = internal global [4 x i32] [i32 2, i32 3, i32 0, i32 1], align 16, !dbg !2743
@.str.8 = private unnamed_addr constant [17 x i8] c"nurbs_init mvert\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"nurbs_init medge\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"nurbs_init mloop\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"nurbs_init mloopuv\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"Mesh\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"Orco\00", align 1
@__func__.BKE_mesh_to_curve_nurblist = private unnamed_addr constant [27 x i8] c"BKE_mesh_to_curve_nurblist\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"EdgeLink\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"MeshNurb\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"bpoints\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.17 = private unnamed_addr constant [11 x i8] c"vertexcos1\00", align 1
@__func__.BKE_mesh_ensure_navmesh = private unnamed_addr constant [24 x i8] c"BKE_mesh_ensure_navmesh\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"recastData\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"Mesh selection history\00", align 1
@MEM_reallocN_id = external dso_local global i8* (i8*, i64, i8*)*, align 8
@__func__.BKE_mesh_mselect_validate = private unnamed_addr constant [26 x i8] c"BKE_mesh_mselect_validate\00", align 1
@__func__.BKE_mesh_mselect_active_set = private unnamed_addr constant [28 x i8] c"BKE_mesh_mselect_active_set\00", align 1
@__func__.customdata_compare = private unnamed_addr constant [19 x i8] c"customdata_compare\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"Vertex Weight Mismatch\00", align 1
@.str.21 = private unnamed_addr constant [22 x i8] c"Vertex Group Mismatch\00", align 1
@.str.22 = private unnamed_addr constant [47 x i8] c"Vertex Doesn't Belong To Same Number Of Groups\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"Vertex Color Mismatch\00", align 1
@.str.24 = private unnamed_addr constant [12 x i8] c"UV Mismatch\00", align 1
@.str.25 = private unnamed_addr constant [14 x i8] c"Loop Mismatch\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"Loop Vert Mismatch In Poly Test\00", align 1
@.str.27 = private unnamed_addr constant [19 x i8] c"Loop Vert Mismatch\00", align 1
@.str.28 = private unnamed_addr constant [14 x i8] c"Edge Mismatch\00", align 1
@.str.29 = private unnamed_addr constant [27 x i8] c"Vertex Coordinate Mismatch\00", align 1
@.str.30 = private unnamed_addr constant [32 x i8] c"CustomData Layer Count Mismatch\00", align 1
@.str.31 = private unnamed_addr constant [29 x i8] c"Mesh Comparison Code Unknown\00", align 1
@.str.32 = private unnamed_addr constant [146 x i8] c"%s: warning! Tessellation uvs or vcol data got out of sync, had to reset!\0A    CD_MTFACE: %d != CD_MTEXPOLY: %d || CD_MCOL: %d != CD_MLOOPCOL: %d\0A\00", align 1
@__func__.mesh_ensure_tessellation_customdata = private unnamed_addr constant [36 x i8] c"mesh_ensure_tessellation_customdata\00", align 1
@__func__.make_edges_mdata_extend = private unnamed_addr constant [24 x i8] c"make_edges_mdata_extend\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"VertLink\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BKE_mesh_cmp(%struct.Mesh* %me1, %struct.Mesh* %me2, float %thresh) #0 !dbg !2750 {
entry:
  %retval = alloca i8*, align 8
  %me1.addr = alloca %struct.Mesh*, align 8
  %me2.addr = alloca %struct.Mesh*, align 8
  %thresh.addr = alloca float, align 4
  %c = alloca i32, align 4
  store %struct.Mesh* %me1, %struct.Mesh** %me1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me1.addr, metadata !2753, metadata !DIExpression()), !dbg !2754
  store %struct.Mesh* %me2, %struct.Mesh** %me2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me2.addr, metadata !2755, metadata !DIExpression()), !dbg !2756
  store float %thresh, float* %thresh.addr, align 4
  call void @llvm.dbg.declare(metadata float* %thresh.addr, metadata !2757, metadata !DIExpression()), !dbg !2758
  call void @llvm.dbg.declare(metadata i32* %c, metadata !2759, metadata !DIExpression()), !dbg !2760
  %0 = load %struct.Mesh*, %struct.Mesh** %me1.addr, align 8, !dbg !2761
  %tobool = icmp ne %struct.Mesh* %0, null, !dbg !2761
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !2763

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.Mesh*, %struct.Mesh** %me2.addr, align 8, !dbg !2764
  %tobool1 = icmp ne %struct.Mesh* %1, null, !dbg !2764
  br i1 %tobool1, label %if.end, label %if.then, !dbg !2765

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8** %retval, align 8, !dbg !2766
  br label %return, !dbg !2766

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.Mesh*, %struct.Mesh** %me1.addr, align 8, !dbg !2767
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 26, !dbg !2769
  %3 = load i32, i32* %totvert, align 8, !dbg !2769
  %4 = load %struct.Mesh*, %struct.Mesh** %me2.addr, align 8, !dbg !2770
  %totvert2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 26, !dbg !2771
  %5 = load i32, i32* %totvert2, align 8, !dbg !2771
  %cmp = icmp ne i32 %3, %5, !dbg !2772
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !2773

if.then3:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i8** %retval, align 8, !dbg !2774
  br label %return, !dbg !2774

if.end4:                                          ; preds = %if.end
  %6 = load %struct.Mesh*, %struct.Mesh** %me1.addr, align 8, !dbg !2775
  %totedge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 27, !dbg !2777
  %7 = load i32, i32* %totedge, align 4, !dbg !2777
  %8 = load %struct.Mesh*, %struct.Mesh** %me2.addr, align 8, !dbg !2778
  %totedge5 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 27, !dbg !2779
  %9 = load i32, i32* %totedge5, align 4, !dbg !2779
  %cmp6 = icmp ne i32 %7, %9, !dbg !2780
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !2781

if.then7:                                         ; preds = %if.end4
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0), i8** %retval, align 8, !dbg !2782
  br label %return, !dbg !2782

if.end8:                                          ; preds = %if.end4
  %10 = load %struct.Mesh*, %struct.Mesh** %me1.addr, align 8, !dbg !2783
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 30, !dbg !2785
  %11 = load i32, i32* %totpoly, align 8, !dbg !2785
  %12 = load %struct.Mesh*, %struct.Mesh** %me2.addr, align 8, !dbg !2786
  %totpoly9 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 30, !dbg !2787
  %13 = load i32, i32* %totpoly9, align 8, !dbg !2787
  %cmp10 = icmp ne i32 %11, %13, !dbg !2788
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !2789

if.then11:                                        ; preds = %if.end8
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), i8** %retval, align 8, !dbg !2790
  br label %return, !dbg !2790

if.end12:                                         ; preds = %if.end8
  %14 = load %struct.Mesh*, %struct.Mesh** %me1.addr, align 8, !dbg !2791
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 31, !dbg !2793
  %15 = load i32, i32* %totloop, align 4, !dbg !2793
  %16 = load %struct.Mesh*, %struct.Mesh** %me2.addr, align 8, !dbg !2794
  %totloop13 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %16, i32 0, i32 31, !dbg !2795
  %17 = load i32, i32* %totloop13, align 4, !dbg !2795
  %cmp14 = icmp ne i32 %15, %17, !dbg !2796
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !2797

if.then15:                                        ; preds = %if.end12
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0), i8** %retval, align 8, !dbg !2798
  br label %return, !dbg !2798

if.end16:                                         ; preds = %if.end12
  %18 = load %struct.Mesh*, %struct.Mesh** %me1.addr, align 8, !dbg !2799
  %vdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 21, !dbg !2801
  %19 = load %struct.Mesh*, %struct.Mesh** %me2.addr, align 8, !dbg !2802
  %vdata17 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %19, i32 0, i32 21, !dbg !2803
  %20 = load %struct.Mesh*, %struct.Mesh** %me1.addr, align 8, !dbg !2804
  %21 = load %struct.Mesh*, %struct.Mesh** %me2.addr, align 8, !dbg !2805
  %22 = load float, float* %thresh.addr, align 4, !dbg !2806
  %call = call i32 @customdata_compare(%struct.CustomData* %vdata, %struct.CustomData* %vdata17, %struct.Mesh* %20, %struct.Mesh* %21, float %22), !dbg !2807
  store i32 %call, i32* %c, align 4, !dbg !2808
  %tobool18 = icmp ne i32 %call, 0, !dbg !2808
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !2809

if.then19:                                        ; preds = %if.end16
  %23 = load i32, i32* %c, align 4, !dbg !2810
  %call20 = call i8* @cmpcode_to_str(i32 %23), !dbg !2811
  store i8* %call20, i8** %retval, align 8, !dbg !2812
  br label %return, !dbg !2812

if.end21:                                         ; preds = %if.end16
  %24 = load %struct.Mesh*, %struct.Mesh** %me1.addr, align 8, !dbg !2813
  %edata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %24, i32 0, i32 22, !dbg !2815
  %25 = load %struct.Mesh*, %struct.Mesh** %me2.addr, align 8, !dbg !2816
  %edata22 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %25, i32 0, i32 22, !dbg !2817
  %26 = load %struct.Mesh*, %struct.Mesh** %me1.addr, align 8, !dbg !2818
  %27 = load %struct.Mesh*, %struct.Mesh** %me2.addr, align 8, !dbg !2819
  %28 = load float, float* %thresh.addr, align 4, !dbg !2820
  %call23 = call i32 @customdata_compare(%struct.CustomData* %edata, %struct.CustomData* %edata22, %struct.Mesh* %26, %struct.Mesh* %27, float %28), !dbg !2821
  store i32 %call23, i32* %c, align 4, !dbg !2822
  %tobool24 = icmp ne i32 %call23, 0, !dbg !2822
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !2823

if.then25:                                        ; preds = %if.end21
  %29 = load i32, i32* %c, align 4, !dbg !2824
  %call26 = call i8* @cmpcode_to_str(i32 %29), !dbg !2825
  store i8* %call26, i8** %retval, align 8, !dbg !2826
  br label %return, !dbg !2826

if.end27:                                         ; preds = %if.end21
  %30 = load %struct.Mesh*, %struct.Mesh** %me1.addr, align 8, !dbg !2827
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %30, i32 0, i32 25, !dbg !2829
  %31 = load %struct.Mesh*, %struct.Mesh** %me2.addr, align 8, !dbg !2830
  %ldata28 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %31, i32 0, i32 25, !dbg !2831
  %32 = load %struct.Mesh*, %struct.Mesh** %me1.addr, align 8, !dbg !2832
  %33 = load %struct.Mesh*, %struct.Mesh** %me2.addr, align 8, !dbg !2833
  %34 = load float, float* %thresh.addr, align 4, !dbg !2834
  %call29 = call i32 @customdata_compare(%struct.CustomData* %ldata, %struct.CustomData* %ldata28, %struct.Mesh* %32, %struct.Mesh* %33, float %34), !dbg !2835
  store i32 %call29, i32* %c, align 4, !dbg !2836
  %tobool30 = icmp ne i32 %call29, 0, !dbg !2836
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !2837

if.then31:                                        ; preds = %if.end27
  %35 = load i32, i32* %c, align 4, !dbg !2838
  %call32 = call i8* @cmpcode_to_str(i32 %35), !dbg !2839
  store i8* %call32, i8** %retval, align 8, !dbg !2840
  br label %return, !dbg !2840

if.end33:                                         ; preds = %if.end27
  %36 = load %struct.Mesh*, %struct.Mesh** %me1.addr, align 8, !dbg !2841
  %pdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %36, i32 0, i32 24, !dbg !2843
  %37 = load %struct.Mesh*, %struct.Mesh** %me2.addr, align 8, !dbg !2844
  %pdata34 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %37, i32 0, i32 24, !dbg !2845
  %38 = load %struct.Mesh*, %struct.Mesh** %me1.addr, align 8, !dbg !2846
  %39 = load %struct.Mesh*, %struct.Mesh** %me2.addr, align 8, !dbg !2847
  %40 = load float, float* %thresh.addr, align 4, !dbg !2848
  %call35 = call i32 @customdata_compare(%struct.CustomData* %pdata, %struct.CustomData* %pdata34, %struct.Mesh* %38, %struct.Mesh* %39, float %40), !dbg !2849
  store i32 %call35, i32* %c, align 4, !dbg !2850
  %tobool36 = icmp ne i32 %call35, 0, !dbg !2850
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !2851

if.then37:                                        ; preds = %if.end33
  %41 = load i32, i32* %c, align 4, !dbg !2852
  %call38 = call i8* @cmpcode_to_str(i32 %41), !dbg !2853
  store i8* %call38, i8** %retval, align 8, !dbg !2854
  br label %return, !dbg !2854

if.end39:                                         ; preds = %if.end33
  store i8* null, i8** %retval, align 8, !dbg !2855
  br label %return, !dbg !2855

return:                                           ; preds = %if.end39, %if.then37, %if.then31, %if.then25, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3, %if.then
  %42 = load i8*, i8** %retval, align 8, !dbg !2856
  ret i8* %42, !dbg !2856
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @customdata_compare(%struct.CustomData* %c1, %struct.CustomData* %c2, %struct.Mesh* %m1, %struct.Mesh* %m2, float %thresh) #0 !dbg !2857 {
entry:
  %retval = alloca i32, align 4
  %c1.addr = alloca %struct.CustomData*, align 8
  %c2.addr = alloca %struct.CustomData*, align 8
  %m1.addr = alloca %struct.Mesh*, align 8
  %m2.addr = alloca %struct.Mesh*, align 8
  %thresh.addr = alloca float, align 4
  %thresh_sq = alloca float, align 4
  %l1 = alloca %struct.CustomDataLayer*, align 8
  %l2 = alloca %struct.CustomDataLayer*, align 8
  %i = alloca i32, align 4
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %tot = alloca i32, align 4
  %j = alloca i32, align 4
  %v1 = alloca %struct.MVert*, align 8
  %v2 = alloca %struct.MVert*, align 8
  %vtot = alloca i32, align 4
  %e1 = alloca %struct.MEdge*, align 8
  %e2 = alloca %struct.MEdge*, align 8
  %etot = alloca i32, align 4
  %eh = alloca %struct.EdgeHash*, align 8
  %p1 = alloca %struct.MPoly*, align 8
  %p2 = alloca %struct.MPoly*, align 8
  %ptot = alloca i32, align 4
  %lp1 = alloca %struct.MLoop*, align 8
  %lp2 = alloca %struct.MLoop*, align 8
  %k = alloca i32, align 4
  %lp1234 = alloca %struct.MLoop*, align 8
  %lp2236 = alloca %struct.MLoop*, align 8
  %ltot = alloca i32, align 4
  %lp1256 = alloca %struct.MLoopUV*, align 8
  %lp2258 = alloca %struct.MLoopUV*, align 8
  %ltot260 = alloca i32, align 4
  %lp1281 = alloca %struct.MLoopCol*, align 8
  %lp2283 = alloca %struct.MLoopCol*, align 8
  %ltot285 = alloca i32, align 4
  %dv1 = alloca %struct.MDeformVert*, align 8
  %dv2 = alloca %struct.MDeformVert*, align 8
  %dvtot = alloca i32, align 4
  %k402 = alloca i32, align 4
  %dw1 = alloca %struct.MDeformWeight*, align 8
  %dw2 = alloca %struct.MDeformWeight*, align 8
  store %struct.CustomData* %c1, %struct.CustomData** %c1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %c1.addr, metadata !2860, metadata !DIExpression()), !dbg !2861
  store %struct.CustomData* %c2, %struct.CustomData** %c2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %c2.addr, metadata !2862, metadata !DIExpression()), !dbg !2863
  store %struct.Mesh* %m1, %struct.Mesh** %m1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %m1.addr, metadata !2864, metadata !DIExpression()), !dbg !2865
  store %struct.Mesh* %m2, %struct.Mesh** %m2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %m2.addr, metadata !2866, metadata !DIExpression()), !dbg !2867
  store float %thresh, float* %thresh.addr, align 4
  call void @llvm.dbg.declare(metadata float* %thresh.addr, metadata !2868, metadata !DIExpression()), !dbg !2869
  call void @llvm.dbg.declare(metadata float* %thresh_sq, metadata !2870, metadata !DIExpression()), !dbg !2871
  %0 = load float, float* %thresh.addr, align 4, !dbg !2872
  %1 = load float, float* %thresh.addr, align 4, !dbg !2873
  %mul = fmul float %0, %1, !dbg !2874
  store float %mul, float* %thresh_sq, align 4, !dbg !2871
  call void @llvm.dbg.declare(metadata %struct.CustomDataLayer** %l1, metadata !2875, metadata !DIExpression()), !dbg !2876
  call void @llvm.dbg.declare(metadata %struct.CustomDataLayer** %l2, metadata !2877, metadata !DIExpression()), !dbg !2878
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2879, metadata !DIExpression()), !dbg !2880
  call void @llvm.dbg.declare(metadata i32* %i1, metadata !2881, metadata !DIExpression()), !dbg !2882
  store i32 0, i32* %i1, align 4, !dbg !2882
  call void @llvm.dbg.declare(metadata i32* %i2, metadata !2883, metadata !DIExpression()), !dbg !2884
  store i32 0, i32* %i2, align 4, !dbg !2884
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !2885, metadata !DIExpression()), !dbg !2886
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2887, metadata !DIExpression()), !dbg !2888
  store i32 0, i32* %i, align 4, !dbg !2889
  br label %for.cond, !dbg !2891

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !2892
  %3 = load %struct.CustomData*, %struct.CustomData** %c1.addr, align 8, !dbg !2894
  %totlayer = getelementptr inbounds %struct.CustomData, %struct.CustomData* %3, i32 0, i32 2, !dbg !2895
  %4 = load i32, i32* %totlayer, align 4, !dbg !2895
  %cmp = icmp slt i32 %2, %4, !dbg !2896
  br i1 %cmp, label %for.body, label %for.end, !dbg !2897

for.body:                                         ; preds = %for.cond
  %5 = load %struct.CustomData*, %struct.CustomData** %c1.addr, align 8, !dbg !2898
  %layers = getelementptr inbounds %struct.CustomData, %struct.CustomData* %5, i32 0, i32 0, !dbg !2898
  %6 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers, align 8, !dbg !2898
  %7 = load i32, i32* %i, align 4, !dbg !2898
  %idxprom = sext i32 %7 to i64, !dbg !2898
  %arrayidx = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %6, i64 %idxprom, !dbg !2898
  %type = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx, i32 0, i32 0, !dbg !2898
  %8 = load i32, i32* %type, align 8, !dbg !2898
  %cmp1 = icmp eq i32 %8, 0, !dbg !2898
  br i1 %cmp1, label %if.then, label %lor.lhs.false, !dbg !2898

lor.lhs.false:                                    ; preds = %for.body
  %9 = load %struct.CustomData*, %struct.CustomData** %c1.addr, align 8, !dbg !2898
  %layers2 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %9, i32 0, i32 0, !dbg !2898
  %10 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers2, align 8, !dbg !2898
  %11 = load i32, i32* %i, align 4, !dbg !2898
  %idxprom3 = sext i32 %11 to i64, !dbg !2898
  %arrayidx4 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %10, i64 %idxprom3, !dbg !2898
  %type5 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx4, i32 0, i32 0, !dbg !2898
  %12 = load i32, i32* %type5, align 8, !dbg !2898
  %cmp6 = icmp eq i32 %12, 3, !dbg !2898
  br i1 %cmp6, label %if.then, label %lor.lhs.false7, !dbg !2898

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %13 = load %struct.CustomData*, %struct.CustomData** %c1.addr, align 8, !dbg !2898
  %layers8 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %13, i32 0, i32 0, !dbg !2898
  %14 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers8, align 8, !dbg !2898
  %15 = load i32, i32* %i, align 4, !dbg !2898
  %idxprom9 = sext i32 %15 to i64, !dbg !2898
  %arrayidx10 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %14, i64 %idxprom9, !dbg !2898
  %type11 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx10, i32 0, i32 0, !dbg !2898
  %16 = load i32, i32* %type11, align 8, !dbg !2898
  %cmp12 = icmp eq i32 %16, 25, !dbg !2898
  br i1 %cmp12, label %if.then, label %lor.lhs.false13, !dbg !2898

lor.lhs.false13:                                  ; preds = %lor.lhs.false7
  %17 = load %struct.CustomData*, %struct.CustomData** %c1.addr, align 8, !dbg !2898
  %layers14 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %17, i32 0, i32 0, !dbg !2898
  %18 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers14, align 8, !dbg !2898
  %19 = load i32, i32* %i, align 4, !dbg !2898
  %idxprom15 = sext i32 %19 to i64, !dbg !2898
  %arrayidx16 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %18, i64 %idxprom15, !dbg !2898
  %type17 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx16, i32 0, i32 0, !dbg !2898
  %20 = load i32, i32* %type17, align 8, !dbg !2898
  %cmp18 = icmp eq i32 %20, 16, !dbg !2898
  br i1 %cmp18, label %if.then, label %lor.lhs.false19, !dbg !2898

lor.lhs.false19:                                  ; preds = %lor.lhs.false13
  %21 = load %struct.CustomData*, %struct.CustomData** %c1.addr, align 8, !dbg !2898
  %layers20 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %21, i32 0, i32 0, !dbg !2898
  %22 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers20, align 8, !dbg !2898
  %23 = load i32, i32* %i, align 4, !dbg !2898
  %idxprom21 = sext i32 %23 to i64, !dbg !2898
  %arrayidx22 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %22, i64 %idxprom21, !dbg !2898
  %type23 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx22, i32 0, i32 0, !dbg !2898
  %24 = load i32, i32* %type23, align 8, !dbg !2898
  %cmp24 = icmp eq i32 %24, 17, !dbg !2898
  br i1 %cmp24, label %if.then, label %lor.lhs.false25, !dbg !2898

lor.lhs.false25:                                  ; preds = %lor.lhs.false19
  %25 = load %struct.CustomData*, %struct.CustomData** %c1.addr, align 8, !dbg !2898
  %layers26 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %25, i32 0, i32 0, !dbg !2898
  %26 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers26, align 8, !dbg !2898
  %27 = load i32, i32* %i, align 4, !dbg !2898
  %idxprom27 = sext i32 %27 to i64, !dbg !2898
  %arrayidx28 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %26, i64 %idxprom27, !dbg !2898
  %type29 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx28, i32 0, i32 0, !dbg !2898
  %28 = load i32, i32* %type29, align 8, !dbg !2898
  %cmp30 = icmp eq i32 %28, 15, !dbg !2898
  br i1 %cmp30, label %if.then, label %lor.lhs.false31, !dbg !2898

lor.lhs.false31:                                  ; preds = %lor.lhs.false25
  %29 = load %struct.CustomData*, %struct.CustomData** %c1.addr, align 8, !dbg !2898
  %layers32 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %29, i32 0, i32 0, !dbg !2898
  %30 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers32, align 8, !dbg !2898
  %31 = load i32, i32* %i, align 4, !dbg !2898
  %idxprom33 = sext i32 %31 to i64, !dbg !2898
  %arrayidx34 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %30, i64 %idxprom33, !dbg !2898
  %type35 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx34, i32 0, i32 0, !dbg !2898
  %32 = load i32, i32* %type35, align 8, !dbg !2898
  %cmp36 = icmp eq i32 %32, 2, !dbg !2898
  br i1 %cmp36, label %if.then, label %if.end, !dbg !2901

if.then:                                          ; preds = %lor.lhs.false31, %lor.lhs.false25, %lor.lhs.false19, %lor.lhs.false13, %lor.lhs.false7, %lor.lhs.false, %for.body
  %33 = load i32, i32* %i1, align 4, !dbg !2902
  %inc = add nsw i32 %33, 1, !dbg !2902
  store i32 %inc, i32* %i1, align 4, !dbg !2902
  br label %if.end, !dbg !2904

if.end:                                           ; preds = %if.then, %lor.lhs.false31
  br label %for.inc, !dbg !2905

for.inc:                                          ; preds = %if.end
  %34 = load i32, i32* %i, align 4, !dbg !2906
  %inc37 = add nsw i32 %34, 1, !dbg !2906
  store i32 %inc37, i32* %i, align 4, !dbg !2906
  br label %for.cond, !dbg !2907, !llvm.loop !2908

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !2910
  br label %for.cond38, !dbg !2912

for.cond38:                                       ; preds = %for.inc86, %for.end
  %35 = load i32, i32* %i, align 4, !dbg !2913
  %36 = load %struct.CustomData*, %struct.CustomData** %c2.addr, align 8, !dbg !2915
  %totlayer39 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %36, i32 0, i32 2, !dbg !2916
  %37 = load i32, i32* %totlayer39, align 4, !dbg !2916
  %cmp40 = icmp slt i32 %35, %37, !dbg !2917
  br i1 %cmp40, label %for.body41, label %for.end88, !dbg !2918

for.body41:                                       ; preds = %for.cond38
  %38 = load %struct.CustomData*, %struct.CustomData** %c2.addr, align 8, !dbg !2919
  %layers42 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %38, i32 0, i32 0, !dbg !2919
  %39 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers42, align 8, !dbg !2919
  %40 = load i32, i32* %i, align 4, !dbg !2919
  %idxprom43 = sext i32 %40 to i64, !dbg !2919
  %arrayidx44 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %39, i64 %idxprom43, !dbg !2919
  %type45 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx44, i32 0, i32 0, !dbg !2919
  %41 = load i32, i32* %type45, align 8, !dbg !2919
  %cmp46 = icmp eq i32 %41, 0, !dbg !2919
  br i1 %cmp46, label %if.then83, label %lor.lhs.false47, !dbg !2919

lor.lhs.false47:                                  ; preds = %for.body41
  %42 = load %struct.CustomData*, %struct.CustomData** %c2.addr, align 8, !dbg !2919
  %layers48 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %42, i32 0, i32 0, !dbg !2919
  %43 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers48, align 8, !dbg !2919
  %44 = load i32, i32* %i, align 4, !dbg !2919
  %idxprom49 = sext i32 %44 to i64, !dbg !2919
  %arrayidx50 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %43, i64 %idxprom49, !dbg !2919
  %type51 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx50, i32 0, i32 0, !dbg !2919
  %45 = load i32, i32* %type51, align 8, !dbg !2919
  %cmp52 = icmp eq i32 %45, 3, !dbg !2919
  br i1 %cmp52, label %if.then83, label %lor.lhs.false53, !dbg !2919

lor.lhs.false53:                                  ; preds = %lor.lhs.false47
  %46 = load %struct.CustomData*, %struct.CustomData** %c2.addr, align 8, !dbg !2919
  %layers54 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %46, i32 0, i32 0, !dbg !2919
  %47 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers54, align 8, !dbg !2919
  %48 = load i32, i32* %i, align 4, !dbg !2919
  %idxprom55 = sext i32 %48 to i64, !dbg !2919
  %arrayidx56 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %47, i64 %idxprom55, !dbg !2919
  %type57 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx56, i32 0, i32 0, !dbg !2919
  %49 = load i32, i32* %type57, align 8, !dbg !2919
  %cmp58 = icmp eq i32 %49, 25, !dbg !2919
  br i1 %cmp58, label %if.then83, label %lor.lhs.false59, !dbg !2919

lor.lhs.false59:                                  ; preds = %lor.lhs.false53
  %50 = load %struct.CustomData*, %struct.CustomData** %c2.addr, align 8, !dbg !2919
  %layers60 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %50, i32 0, i32 0, !dbg !2919
  %51 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers60, align 8, !dbg !2919
  %52 = load i32, i32* %i, align 4, !dbg !2919
  %idxprom61 = sext i32 %52 to i64, !dbg !2919
  %arrayidx62 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %51, i64 %idxprom61, !dbg !2919
  %type63 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx62, i32 0, i32 0, !dbg !2919
  %53 = load i32, i32* %type63, align 8, !dbg !2919
  %cmp64 = icmp eq i32 %53, 16, !dbg !2919
  br i1 %cmp64, label %if.then83, label %lor.lhs.false65, !dbg !2919

lor.lhs.false65:                                  ; preds = %lor.lhs.false59
  %54 = load %struct.CustomData*, %struct.CustomData** %c2.addr, align 8, !dbg !2919
  %layers66 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %54, i32 0, i32 0, !dbg !2919
  %55 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers66, align 8, !dbg !2919
  %56 = load i32, i32* %i, align 4, !dbg !2919
  %idxprom67 = sext i32 %56 to i64, !dbg !2919
  %arrayidx68 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %55, i64 %idxprom67, !dbg !2919
  %type69 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx68, i32 0, i32 0, !dbg !2919
  %57 = load i32, i32* %type69, align 8, !dbg !2919
  %cmp70 = icmp eq i32 %57, 17, !dbg !2919
  br i1 %cmp70, label %if.then83, label %lor.lhs.false71, !dbg !2919

lor.lhs.false71:                                  ; preds = %lor.lhs.false65
  %58 = load %struct.CustomData*, %struct.CustomData** %c2.addr, align 8, !dbg !2919
  %layers72 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %58, i32 0, i32 0, !dbg !2919
  %59 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers72, align 8, !dbg !2919
  %60 = load i32, i32* %i, align 4, !dbg !2919
  %idxprom73 = sext i32 %60 to i64, !dbg !2919
  %arrayidx74 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %59, i64 %idxprom73, !dbg !2919
  %type75 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx74, i32 0, i32 0, !dbg !2919
  %61 = load i32, i32* %type75, align 8, !dbg !2919
  %cmp76 = icmp eq i32 %61, 15, !dbg !2919
  br i1 %cmp76, label %if.then83, label %lor.lhs.false77, !dbg !2919

lor.lhs.false77:                                  ; preds = %lor.lhs.false71
  %62 = load %struct.CustomData*, %struct.CustomData** %c2.addr, align 8, !dbg !2919
  %layers78 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %62, i32 0, i32 0, !dbg !2919
  %63 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers78, align 8, !dbg !2919
  %64 = load i32, i32* %i, align 4, !dbg !2919
  %idxprom79 = sext i32 %64 to i64, !dbg !2919
  %arrayidx80 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %63, i64 %idxprom79, !dbg !2919
  %type81 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx80, i32 0, i32 0, !dbg !2919
  %65 = load i32, i32* %type81, align 8, !dbg !2919
  %cmp82 = icmp eq i32 %65, 2, !dbg !2919
  br i1 %cmp82, label %if.then83, label %if.end85, !dbg !2922

if.then83:                                        ; preds = %lor.lhs.false77, %lor.lhs.false71, %lor.lhs.false65, %lor.lhs.false59, %lor.lhs.false53, %lor.lhs.false47, %for.body41
  %66 = load i32, i32* %i2, align 4, !dbg !2923
  %inc84 = add nsw i32 %66, 1, !dbg !2923
  store i32 %inc84, i32* %i2, align 4, !dbg !2923
  br label %if.end85, !dbg !2925

if.end85:                                         ; preds = %if.then83, %lor.lhs.false77
  br label %for.inc86, !dbg !2926

for.inc86:                                        ; preds = %if.end85
  %67 = load i32, i32* %i, align 4, !dbg !2927
  %inc87 = add nsw i32 %67, 1, !dbg !2927
  store i32 %inc87, i32* %i, align 4, !dbg !2927
  br label %for.cond38, !dbg !2928, !llvm.loop !2929

for.end88:                                        ; preds = %for.cond38
  %68 = load i32, i32* %i1, align 4, !dbg !2931
  %69 = load i32, i32* %i2, align 4, !dbg !2933
  %cmp89 = icmp ne i32 %68, %69, !dbg !2934
  br i1 %cmp89, label %if.then90, label %if.end91, !dbg !2935

if.then90:                                        ; preds = %for.end88
  store i32 11, i32* %retval, align 4, !dbg !2936
  br label %return, !dbg !2936

if.end91:                                         ; preds = %for.end88
  %70 = load %struct.CustomData*, %struct.CustomData** %c1.addr, align 8, !dbg !2937
  %layers92 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %70, i32 0, i32 0, !dbg !2938
  %71 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers92, align 8, !dbg !2938
  store %struct.CustomDataLayer* %71, %struct.CustomDataLayer** %l1, align 8, !dbg !2939
  %72 = load %struct.CustomData*, %struct.CustomData** %c2.addr, align 8, !dbg !2940
  %layers93 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %72, i32 0, i32 0, !dbg !2941
  %73 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers93, align 8, !dbg !2941
  store %struct.CustomDataLayer* %73, %struct.CustomDataLayer** %l2, align 8, !dbg !2942
  %74 = load i32, i32* %i1, align 4, !dbg !2943
  store i32 %74, i32* %tot, align 4, !dbg !2944
  store i32 0, i32* %i1, align 4, !dbg !2945
  store i32 0, i32* %i2, align 4, !dbg !2946
  store i32 0, i32* %i, align 4, !dbg !2947
  br label %for.cond94, !dbg !2949

for.cond94:                                       ; preds = %for.inc436, %if.end91
  %75 = load i32, i32* %i, align 4, !dbg !2950
  %76 = load i32, i32* %tot, align 4, !dbg !2952
  %cmp95 = icmp slt i32 %75, %76, !dbg !2953
  br i1 %cmp95, label %for.body96, label %for.end438, !dbg !2954

for.body96:                                       ; preds = %for.cond94
  br label %while.cond, !dbg !2955

while.cond:                                       ; preds = %while.body, %for.body96
  %77 = load i32, i32* %i1, align 4, !dbg !2957
  %78 = load %struct.CustomData*, %struct.CustomData** %c1.addr, align 8, !dbg !2958
  %totlayer97 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %78, i32 0, i32 2, !dbg !2959
  %79 = load i32, i32* %totlayer97, align 4, !dbg !2959
  %cmp98 = icmp slt i32 %77, %79, !dbg !2960
  br i1 %cmp98, label %land.rhs, label %land.end, !dbg !2961

land.rhs:                                         ; preds = %while.cond
  %80 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l1, align 8, !dbg !2962
  %type99 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %80, i32 0, i32 0, !dbg !2962
  %81 = load i32, i32* %type99, align 8, !dbg !2962
  %cmp100 = icmp eq i32 %81, 0, !dbg !2962
  br i1 %cmp100, label %lor.end, label %lor.lhs.false101, !dbg !2962

lor.lhs.false101:                                 ; preds = %land.rhs
  %82 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l1, align 8, !dbg !2962
  %type102 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %82, i32 0, i32 0, !dbg !2962
  %83 = load i32, i32* %type102, align 8, !dbg !2962
  %cmp103 = icmp eq i32 %83, 3, !dbg !2962
  br i1 %cmp103, label %lor.end, label %lor.lhs.false104, !dbg !2962

lor.lhs.false104:                                 ; preds = %lor.lhs.false101
  %84 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l1, align 8, !dbg !2962
  %type105 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %84, i32 0, i32 0, !dbg !2962
  %85 = load i32, i32* %type105, align 8, !dbg !2962
  %cmp106 = icmp eq i32 %85, 25, !dbg !2962
  br i1 %cmp106, label %lor.end, label %lor.lhs.false107, !dbg !2962

lor.lhs.false107:                                 ; preds = %lor.lhs.false104
  %86 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l1, align 8, !dbg !2962
  %type108 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %86, i32 0, i32 0, !dbg !2962
  %87 = load i32, i32* %type108, align 8, !dbg !2962
  %cmp109 = icmp eq i32 %87, 16, !dbg !2962
  br i1 %cmp109, label %lor.end, label %lor.lhs.false110, !dbg !2962

lor.lhs.false110:                                 ; preds = %lor.lhs.false107
  %88 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l1, align 8, !dbg !2962
  %type111 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %88, i32 0, i32 0, !dbg !2962
  %89 = load i32, i32* %type111, align 8, !dbg !2962
  %cmp112 = icmp eq i32 %89, 17, !dbg !2962
  br i1 %cmp112, label %lor.end, label %lor.lhs.false113, !dbg !2962

lor.lhs.false113:                                 ; preds = %lor.lhs.false110
  %90 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l1, align 8, !dbg !2962
  %type114 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %90, i32 0, i32 0, !dbg !2962
  %91 = load i32, i32* %type114, align 8, !dbg !2962
  %cmp115 = icmp eq i32 %91, 15, !dbg !2962
  br i1 %cmp115, label %lor.end, label %lor.rhs, !dbg !2962

lor.rhs:                                          ; preds = %lor.lhs.false113
  %92 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l1, align 8, !dbg !2962
  %type116 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %92, i32 0, i32 0, !dbg !2962
  %93 = load i32, i32* %type116, align 8, !dbg !2962
  %cmp117 = icmp eq i32 %93, 2, !dbg !2962
  br label %lor.end, !dbg !2962

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false113, %lor.lhs.false110, %lor.lhs.false107, %lor.lhs.false104, %lor.lhs.false101, %land.rhs
  %94 = phi i1 [ true, %lor.lhs.false113 ], [ true, %lor.lhs.false110 ], [ true, %lor.lhs.false107 ], [ true, %lor.lhs.false104 ], [ true, %lor.lhs.false101 ], [ true, %land.rhs ], [ %cmp117, %lor.rhs ]
  %lnot = xor i1 %94, true, !dbg !2963
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %95 = phi i1 [ false, %while.cond ], [ %lnot, %lor.end ], !dbg !2964
  br i1 %95, label %while.body, label %while.end, !dbg !2955

while.body:                                       ; preds = %land.end
  %96 = load i32, i32* %i1, align 4, !dbg !2965
  %inc118 = add nsw i32 %96, 1, !dbg !2965
  store i32 %inc118, i32* %i1, align 4, !dbg !2965
  %97 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l1, align 8, !dbg !2967
  %incdec.ptr = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %97, i32 1, !dbg !2967
  store %struct.CustomDataLayer* %incdec.ptr, %struct.CustomDataLayer** %l1, align 8, !dbg !2967
  br label %while.cond, !dbg !2955, !llvm.loop !2968

while.end:                                        ; preds = %land.end
  br label %while.cond119, !dbg !2970

while.cond119:                                    ; preds = %while.body146, %while.end
  %98 = load i32, i32* %i2, align 4, !dbg !2971
  %99 = load %struct.CustomData*, %struct.CustomData** %c2.addr, align 8, !dbg !2972
  %totlayer120 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %99, i32 0, i32 2, !dbg !2973
  %100 = load i32, i32* %totlayer120, align 4, !dbg !2973
  %cmp121 = icmp slt i32 %98, %100, !dbg !2974
  br i1 %cmp121, label %land.rhs122, label %land.end145, !dbg !2975

land.rhs122:                                      ; preds = %while.cond119
  %101 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l2, align 8, !dbg !2976
  %type123 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %101, i32 0, i32 0, !dbg !2976
  %102 = load i32, i32* %type123, align 8, !dbg !2976
  %cmp124 = icmp eq i32 %102, 0, !dbg !2976
  br i1 %cmp124, label %lor.end143, label %lor.lhs.false125, !dbg !2976

lor.lhs.false125:                                 ; preds = %land.rhs122
  %103 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l2, align 8, !dbg !2976
  %type126 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %103, i32 0, i32 0, !dbg !2976
  %104 = load i32, i32* %type126, align 8, !dbg !2976
  %cmp127 = icmp eq i32 %104, 3, !dbg !2976
  br i1 %cmp127, label %lor.end143, label %lor.lhs.false128, !dbg !2976

lor.lhs.false128:                                 ; preds = %lor.lhs.false125
  %105 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l2, align 8, !dbg !2976
  %type129 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %105, i32 0, i32 0, !dbg !2976
  %106 = load i32, i32* %type129, align 8, !dbg !2976
  %cmp130 = icmp eq i32 %106, 25, !dbg !2976
  br i1 %cmp130, label %lor.end143, label %lor.lhs.false131, !dbg !2976

lor.lhs.false131:                                 ; preds = %lor.lhs.false128
  %107 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l2, align 8, !dbg !2976
  %type132 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %107, i32 0, i32 0, !dbg !2976
  %108 = load i32, i32* %type132, align 8, !dbg !2976
  %cmp133 = icmp eq i32 %108, 16, !dbg !2976
  br i1 %cmp133, label %lor.end143, label %lor.lhs.false134, !dbg !2976

lor.lhs.false134:                                 ; preds = %lor.lhs.false131
  %109 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l2, align 8, !dbg !2976
  %type135 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %109, i32 0, i32 0, !dbg !2976
  %110 = load i32, i32* %type135, align 8, !dbg !2976
  %cmp136 = icmp eq i32 %110, 17, !dbg !2976
  br i1 %cmp136, label %lor.end143, label %lor.lhs.false137, !dbg !2976

lor.lhs.false137:                                 ; preds = %lor.lhs.false134
  %111 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l2, align 8, !dbg !2976
  %type138 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %111, i32 0, i32 0, !dbg !2976
  %112 = load i32, i32* %type138, align 8, !dbg !2976
  %cmp139 = icmp eq i32 %112, 15, !dbg !2976
  br i1 %cmp139, label %lor.end143, label %lor.rhs140, !dbg !2976

lor.rhs140:                                       ; preds = %lor.lhs.false137
  %113 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l2, align 8, !dbg !2976
  %type141 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %113, i32 0, i32 0, !dbg !2976
  %114 = load i32, i32* %type141, align 8, !dbg !2976
  %cmp142 = icmp eq i32 %114, 2, !dbg !2976
  br label %lor.end143, !dbg !2976

lor.end143:                                       ; preds = %lor.rhs140, %lor.lhs.false137, %lor.lhs.false134, %lor.lhs.false131, %lor.lhs.false128, %lor.lhs.false125, %land.rhs122
  %115 = phi i1 [ true, %lor.lhs.false137 ], [ true, %lor.lhs.false134 ], [ true, %lor.lhs.false131 ], [ true, %lor.lhs.false128 ], [ true, %lor.lhs.false125 ], [ true, %land.rhs122 ], [ %cmp142, %lor.rhs140 ]
  %lnot144 = xor i1 %115, true, !dbg !2977
  br label %land.end145

land.end145:                                      ; preds = %lor.end143, %while.cond119
  %116 = phi i1 [ false, %while.cond119 ], [ %lnot144, %lor.end143 ], !dbg !2964
  br i1 %116, label %while.body146, label %while.end149, !dbg !2970

while.body146:                                    ; preds = %land.end145
  %117 = load i32, i32* %i2, align 4, !dbg !2978
  %inc147 = add nsw i32 %117, 1, !dbg !2978
  store i32 %inc147, i32* %i2, align 4, !dbg !2978
  %118 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l2, align 8, !dbg !2980
  %incdec.ptr148 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %118, i32 1, !dbg !2980
  store %struct.CustomDataLayer* %incdec.ptr148, %struct.CustomDataLayer** %l2, align 8, !dbg !2980
  br label %while.cond119, !dbg !2970, !llvm.loop !2981

while.end149:                                     ; preds = %land.end145
  %119 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l1, align 8, !dbg !2983
  %type150 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %119, i32 0, i32 0, !dbg !2985
  %120 = load i32, i32* %type150, align 8, !dbg !2985
  %cmp151 = icmp eq i32 %120, 0, !dbg !2986
  br i1 %cmp151, label %if.then152, label %if.end167, !dbg !2987

if.then152:                                       ; preds = %while.end149
  call void @llvm.dbg.declare(metadata %struct.MVert** %v1, metadata !2988, metadata !DIExpression()), !dbg !2990
  %121 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l1, align 8, !dbg !2991
  %data = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %121, i32 0, i32 9, !dbg !2992
  %122 = load i8*, i8** %data, align 8, !dbg !2992
  %123 = bitcast i8* %122 to %struct.MVert*, !dbg !2991
  store %struct.MVert* %123, %struct.MVert** %v1, align 8, !dbg !2990
  call void @llvm.dbg.declare(metadata %struct.MVert** %v2, metadata !2993, metadata !DIExpression()), !dbg !2994
  %124 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l2, align 8, !dbg !2995
  %data153 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %124, i32 0, i32 9, !dbg !2996
  %125 = load i8*, i8** %data153, align 8, !dbg !2996
  %126 = bitcast i8* %125 to %struct.MVert*, !dbg !2995
  store %struct.MVert* %126, %struct.MVert** %v2, align 8, !dbg !2994
  call void @llvm.dbg.declare(metadata i32* %vtot, metadata !2997, metadata !DIExpression()), !dbg !2998
  %127 = load %struct.Mesh*, %struct.Mesh** %m1.addr, align 8, !dbg !2999
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %127, i32 0, i32 26, !dbg !3000
  %128 = load i32, i32* %totvert, align 8, !dbg !3000
  store i32 %128, i32* %vtot, align 4, !dbg !2998
  store i32 0, i32* %j, align 4, !dbg !3001
  br label %for.cond154, !dbg !3003

for.cond154:                                      ; preds = %for.inc162, %if.then152
  %129 = load i32, i32* %j, align 4, !dbg !3004
  %130 = load i32, i32* %vtot, align 4, !dbg !3006
  %cmp155 = icmp slt i32 %129, %130, !dbg !3007
  br i1 %cmp155, label %for.body156, label %for.end166, !dbg !3008

for.body156:                                      ; preds = %for.cond154
  %131 = load %struct.MVert*, %struct.MVert** %v1, align 8, !dbg !3009
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %131, i32 0, i32 0, !dbg !3012
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3009
  %132 = load %struct.MVert*, %struct.MVert** %v2, align 8, !dbg !3013
  %co157 = getelementptr inbounds %struct.MVert, %struct.MVert* %132, i32 0, i32 0, !dbg !3014
  %arraydecay158 = getelementptr inbounds [3 x float], [3 x float]* %co157, i64 0, i64 0, !dbg !3013
  %call = call float @len_squared_v3v3(float* %arraydecay, float* %arraydecay158), !dbg !3015
  %133 = load float, float* %thresh_sq, align 4, !dbg !3016
  %cmp159 = fcmp ogt float %call, %133, !dbg !3017
  br i1 %cmp159, label %if.then160, label %if.end161, !dbg !3018

if.then160:                                       ; preds = %for.body156
  store i32 10, i32* %retval, align 4, !dbg !3019
  br label %return, !dbg !3019

if.end161:                                        ; preds = %for.body156
  br label %for.inc162, !dbg !3020

for.inc162:                                       ; preds = %if.end161
  %134 = load i32, i32* %j, align 4, !dbg !3021
  %inc163 = add nsw i32 %134, 1, !dbg !3021
  store i32 %inc163, i32* %j, align 4, !dbg !3021
  %135 = load %struct.MVert*, %struct.MVert** %v1, align 8, !dbg !3022
  %incdec.ptr164 = getelementptr inbounds %struct.MVert, %struct.MVert* %135, i32 1, !dbg !3022
  store %struct.MVert* %incdec.ptr164, %struct.MVert** %v1, align 8, !dbg !3022
  %136 = load %struct.MVert*, %struct.MVert** %v2, align 8, !dbg !3023
  %incdec.ptr165 = getelementptr inbounds %struct.MVert, %struct.MVert* %136, i32 1, !dbg !3023
  store %struct.MVert* %incdec.ptr165, %struct.MVert** %v2, align 8, !dbg !3023
  br label %for.cond154, !dbg !3024, !llvm.loop !3025

for.end166:                                       ; preds = %for.cond154
  br label %if.end167, !dbg !3027

if.end167:                                        ; preds = %for.end166, %while.end149
  %137 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l1, align 8, !dbg !3028
  %type168 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %137, i32 0, i32 0, !dbg !3030
  %138 = load i32, i32* %type168, align 8, !dbg !3030
  %cmp169 = icmp eq i32 %138, 3, !dbg !3031
  br i1 %cmp169, label %if.then170, label %if.end195, !dbg !3032

if.then170:                                       ; preds = %if.end167
  call void @llvm.dbg.declare(metadata %struct.MEdge** %e1, metadata !3033, metadata !DIExpression()), !dbg !3037
  %139 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l1, align 8, !dbg !3038
  %data171 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %139, i32 0, i32 9, !dbg !3039
  %140 = load i8*, i8** %data171, align 8, !dbg !3039
  %141 = bitcast i8* %140 to %struct.MEdge*, !dbg !3038
  store %struct.MEdge* %141, %struct.MEdge** %e1, align 8, !dbg !3037
  call void @llvm.dbg.declare(metadata %struct.MEdge** %e2, metadata !3040, metadata !DIExpression()), !dbg !3041
  %142 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l2, align 8, !dbg !3042
  %data172 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %142, i32 0, i32 9, !dbg !3043
  %143 = load i8*, i8** %data172, align 8, !dbg !3043
  %144 = bitcast i8* %143 to %struct.MEdge*, !dbg !3042
  store %struct.MEdge* %144, %struct.MEdge** %e2, align 8, !dbg !3041
  call void @llvm.dbg.declare(metadata i32* %etot, metadata !3044, metadata !DIExpression()), !dbg !3045
  %145 = load %struct.Mesh*, %struct.Mesh** %m1.addr, align 8, !dbg !3046
  %totedge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %145, i32 0, i32 27, !dbg !3047
  %146 = load i32, i32* %totedge, align 4, !dbg !3047
  store i32 %146, i32* %etot, align 4, !dbg !3045
  call void @llvm.dbg.declare(metadata %struct.EdgeHash** %eh, metadata !3048, metadata !DIExpression()), !dbg !3052
  %147 = load i32, i32* %etot, align 4, !dbg !3053
  %call173 = call %struct.EdgeHash* @BLI_edgehash_new_ex(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.customdata_compare, i64 0, i64 0), i32 %147), !dbg !3054
  store %struct.EdgeHash* %call173, %struct.EdgeHash** %eh, align 8, !dbg !3052
  store i32 0, i32* %j, align 4, !dbg !3055
  br label %for.cond174, !dbg !3057

for.cond174:                                      ; preds = %for.inc179, %if.then170
  %148 = load i32, i32* %j, align 4, !dbg !3058
  %149 = load i32, i32* %etot, align 4, !dbg !3060
  %cmp175 = icmp slt i32 %148, %149, !dbg !3061
  br i1 %cmp175, label %for.body176, label %for.end182, !dbg !3062

for.body176:                                      ; preds = %for.cond174
  %150 = load %struct.EdgeHash*, %struct.EdgeHash** %eh, align 8, !dbg !3063
  %151 = load %struct.MEdge*, %struct.MEdge** %e1, align 8, !dbg !3065
  %v1177 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %151, i32 0, i32 0, !dbg !3066
  %152 = load i32, i32* %v1177, align 4, !dbg !3066
  %153 = load %struct.MEdge*, %struct.MEdge** %e1, align 8, !dbg !3067
  %v2178 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %153, i32 0, i32 1, !dbg !3068
  %154 = load i32, i32* %v2178, align 4, !dbg !3068
  %155 = load %struct.MEdge*, %struct.MEdge** %e1, align 8, !dbg !3069
  %156 = bitcast %struct.MEdge* %155 to i8*, !dbg !3069
  call void @BLI_edgehash_insert(%struct.EdgeHash* %150, i32 %152, i32 %154, i8* %156), !dbg !3070
  br label %for.inc179, !dbg !3071

for.inc179:                                       ; preds = %for.body176
  %157 = load i32, i32* %j, align 4, !dbg !3072
  %inc180 = add nsw i32 %157, 1, !dbg !3072
  store i32 %inc180, i32* %j, align 4, !dbg !3072
  %158 = load %struct.MEdge*, %struct.MEdge** %e1, align 8, !dbg !3073
  %incdec.ptr181 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %158, i32 1, !dbg !3073
  store %struct.MEdge* %incdec.ptr181, %struct.MEdge** %e1, align 8, !dbg !3073
  br label %for.cond174, !dbg !3074, !llvm.loop !3075

for.end182:                                       ; preds = %for.cond174
  store i32 0, i32* %j, align 4, !dbg !3077
  br label %for.cond183, !dbg !3079

for.cond183:                                      ; preds = %for.inc191, %for.end182
  %159 = load i32, i32* %j, align 4, !dbg !3080
  %160 = load i32, i32* %etot, align 4, !dbg !3082
  %cmp184 = icmp slt i32 %159, %160, !dbg !3083
  br i1 %cmp184, label %for.body185, label %for.end194, !dbg !3084

for.body185:                                      ; preds = %for.cond183
  %161 = load %struct.EdgeHash*, %struct.EdgeHash** %eh, align 8, !dbg !3085
  %162 = load %struct.MEdge*, %struct.MEdge** %e2, align 8, !dbg !3088
  %v1186 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %162, i32 0, i32 0, !dbg !3089
  %163 = load i32, i32* %v1186, align 4, !dbg !3089
  %164 = load %struct.MEdge*, %struct.MEdge** %e2, align 8, !dbg !3090
  %v2187 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %164, i32 0, i32 1, !dbg !3091
  %165 = load i32, i32* %v2187, align 4, !dbg !3091
  %call188 = call i8* @BLI_edgehash_lookup(%struct.EdgeHash* %161, i32 %163, i32 %165), !dbg !3092
  %tobool = icmp ne i8* %call188, null, !dbg !3092
  br i1 %tobool, label %if.end190, label %if.then189, !dbg !3093

if.then189:                                       ; preds = %for.body185
  store i32 9, i32* %retval, align 4, !dbg !3094
  br label %return, !dbg !3094

if.end190:                                        ; preds = %for.body185
  br label %for.inc191, !dbg !3095

for.inc191:                                       ; preds = %if.end190
  %166 = load i32, i32* %j, align 4, !dbg !3096
  %inc192 = add nsw i32 %166, 1, !dbg !3096
  store i32 %inc192, i32* %j, align 4, !dbg !3096
  %167 = load %struct.MEdge*, %struct.MEdge** %e2, align 8, !dbg !3097
  %incdec.ptr193 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %167, i32 1, !dbg !3097
  store %struct.MEdge* %incdec.ptr193, %struct.MEdge** %e2, align 8, !dbg !3097
  br label %for.cond183, !dbg !3098, !llvm.loop !3099

for.end194:                                       ; preds = %for.cond183
  %168 = load %struct.EdgeHash*, %struct.EdgeHash** %eh, align 8, !dbg !3101
  call void @BLI_edgehash_free(%struct.EdgeHash* %168, void (i8*)* null), !dbg !3102
  br label %if.end195, !dbg !3103

if.end195:                                        ; preds = %for.end194, %if.end167
  %169 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l1, align 8, !dbg !3104
  %type196 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %169, i32 0, i32 0, !dbg !3106
  %170 = load i32, i32* %type196, align 8, !dbg !3106
  %cmp197 = icmp eq i32 %170, 25, !dbg !3107
  br i1 %cmp197, label %if.then198, label %if.end230, !dbg !3108

if.then198:                                       ; preds = %if.end195
  call void @llvm.dbg.declare(metadata %struct.MPoly** %p1, metadata !3109, metadata !DIExpression()), !dbg !3111
  %171 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l1, align 8, !dbg !3112
  %data199 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %171, i32 0, i32 9, !dbg !3113
  %172 = load i8*, i8** %data199, align 8, !dbg !3113
  %173 = bitcast i8* %172 to %struct.MPoly*, !dbg !3112
  store %struct.MPoly* %173, %struct.MPoly** %p1, align 8, !dbg !3111
  call void @llvm.dbg.declare(metadata %struct.MPoly** %p2, metadata !3114, metadata !DIExpression()), !dbg !3115
  %174 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l2, align 8, !dbg !3116
  %data200 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %174, i32 0, i32 9, !dbg !3117
  %175 = load i8*, i8** %data200, align 8, !dbg !3117
  %176 = bitcast i8* %175 to %struct.MPoly*, !dbg !3116
  store %struct.MPoly* %176, %struct.MPoly** %p2, align 8, !dbg !3115
  call void @llvm.dbg.declare(metadata i32* %ptot, metadata !3118, metadata !DIExpression()), !dbg !3119
  %177 = load %struct.Mesh*, %struct.Mesh** %m1.addr, align 8, !dbg !3120
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %177, i32 0, i32 30, !dbg !3121
  %178 = load i32, i32* %totpoly, align 8, !dbg !3121
  store i32 %178, i32* %ptot, align 4, !dbg !3119
  store i32 0, i32* %j, align 4, !dbg !3122
  br label %for.cond201, !dbg !3124

for.cond201:                                      ; preds = %for.inc225, %if.then198
  %179 = load i32, i32* %j, align 4, !dbg !3125
  %180 = load i32, i32* %ptot, align 4, !dbg !3127
  %cmp202 = icmp slt i32 %179, %180, !dbg !3128
  br i1 %cmp202, label %for.body203, label %for.end229, !dbg !3129

for.body203:                                      ; preds = %for.cond201
  call void @llvm.dbg.declare(metadata %struct.MLoop** %lp1, metadata !3130, metadata !DIExpression()), !dbg !3134
  call void @llvm.dbg.declare(metadata %struct.MLoop** %lp2, metadata !3135, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.declare(metadata i32* %k, metadata !3137, metadata !DIExpression()), !dbg !3138
  %181 = load %struct.MPoly*, %struct.MPoly** %p1, align 8, !dbg !3139
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %181, i32 0, i32 1, !dbg !3141
  %182 = load i32, i32* %totloop, align 4, !dbg !3141
  %183 = load %struct.MPoly*, %struct.MPoly** %p2, align 8, !dbg !3142
  %totloop204 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %183, i32 0, i32 1, !dbg !3143
  %184 = load i32, i32* %totloop204, align 4, !dbg !3143
  %cmp205 = icmp ne i32 %182, %184, !dbg !3144
  br i1 %cmp205, label %if.then206, label %if.end207, !dbg !3145

if.then206:                                       ; preds = %for.body203
  store i32 8, i32* %retval, align 4, !dbg !3146
  br label %return, !dbg !3146

if.end207:                                        ; preds = %for.body203
  %185 = load %struct.Mesh*, %struct.Mesh** %m1.addr, align 8, !dbg !3147
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %185, i32 0, i32 9, !dbg !3148
  %186 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !3148
  %187 = load %struct.MPoly*, %struct.MPoly** %p1, align 8, !dbg !3149
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %187, i32 0, i32 0, !dbg !3150
  %188 = load i32, i32* %loopstart, align 4, !dbg !3150
  %idx.ext = sext i32 %188 to i64, !dbg !3151
  %add.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %186, i64 %idx.ext, !dbg !3151
  store %struct.MLoop* %add.ptr, %struct.MLoop** %lp1, align 8, !dbg !3152
  %189 = load %struct.Mesh*, %struct.Mesh** %m2.addr, align 8, !dbg !3153
  %mloop208 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %189, i32 0, i32 9, !dbg !3154
  %190 = load %struct.MLoop*, %struct.MLoop** %mloop208, align 8, !dbg !3154
  %191 = load %struct.MPoly*, %struct.MPoly** %p2, align 8, !dbg !3155
  %loopstart209 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %191, i32 0, i32 0, !dbg !3156
  %192 = load i32, i32* %loopstart209, align 4, !dbg !3156
  %idx.ext210 = sext i32 %192 to i64, !dbg !3157
  %add.ptr211 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %190, i64 %idx.ext210, !dbg !3157
  store %struct.MLoop* %add.ptr211, %struct.MLoop** %lp2, align 8, !dbg !3158
  store i32 0, i32* %k, align 4, !dbg !3159
  br label %for.cond212, !dbg !3161

for.cond212:                                      ; preds = %for.inc220, %if.end207
  %193 = load i32, i32* %k, align 4, !dbg !3162
  %194 = load %struct.MPoly*, %struct.MPoly** %p1, align 8, !dbg !3164
  %totloop213 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %194, i32 0, i32 1, !dbg !3165
  %195 = load i32, i32* %totloop213, align 4, !dbg !3165
  %cmp214 = icmp slt i32 %193, %195, !dbg !3166
  br i1 %cmp214, label %for.body215, label %for.end224, !dbg !3167

for.body215:                                      ; preds = %for.cond212
  %196 = load %struct.MLoop*, %struct.MLoop** %lp1, align 8, !dbg !3168
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %196, i32 0, i32 0, !dbg !3171
  %197 = load i32, i32* %v, align 4, !dbg !3171
  %198 = load %struct.MLoop*, %struct.MLoop** %lp2, align 8, !dbg !3172
  %v216 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %198, i32 0, i32 0, !dbg !3173
  %199 = load i32, i32* %v216, align 4, !dbg !3173
  %cmp217 = icmp ne i32 %197, %199, !dbg !3174
  br i1 %cmp217, label %if.then218, label %if.end219, !dbg !3175

if.then218:                                       ; preds = %for.body215
  store i32 7, i32* %retval, align 4, !dbg !3176
  br label %return, !dbg !3176

if.end219:                                        ; preds = %for.body215
  br label %for.inc220, !dbg !3177

for.inc220:                                       ; preds = %if.end219
  %200 = load i32, i32* %k, align 4, !dbg !3178
  %inc221 = add nsw i32 %200, 1, !dbg !3178
  store i32 %inc221, i32* %k, align 4, !dbg !3178
  %201 = load %struct.MLoop*, %struct.MLoop** %lp1, align 8, !dbg !3179
  %incdec.ptr222 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %201, i32 1, !dbg !3179
  store %struct.MLoop* %incdec.ptr222, %struct.MLoop** %lp1, align 8, !dbg !3179
  %202 = load %struct.MLoop*, %struct.MLoop** %lp2, align 8, !dbg !3180
  %incdec.ptr223 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %202, i32 1, !dbg !3180
  store %struct.MLoop* %incdec.ptr223, %struct.MLoop** %lp2, align 8, !dbg !3180
  br label %for.cond212, !dbg !3181, !llvm.loop !3182

for.end224:                                       ; preds = %for.cond212
  br label %for.inc225, !dbg !3184

for.inc225:                                       ; preds = %for.end224
  %203 = load i32, i32* %j, align 4, !dbg !3185
  %inc226 = add nsw i32 %203, 1, !dbg !3185
  store i32 %inc226, i32* %j, align 4, !dbg !3185
  %204 = load %struct.MPoly*, %struct.MPoly** %p1, align 8, !dbg !3186
  %incdec.ptr227 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %204, i32 1, !dbg !3186
  store %struct.MPoly* %incdec.ptr227, %struct.MPoly** %p1, align 8, !dbg !3186
  %205 = load %struct.MPoly*, %struct.MPoly** %p2, align 8, !dbg !3187
  %incdec.ptr228 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %205, i32 1, !dbg !3187
  store %struct.MPoly* %incdec.ptr228, %struct.MPoly** %p2, align 8, !dbg !3187
  br label %for.cond201, !dbg !3188, !llvm.loop !3189

for.end229:                                       ; preds = %for.cond201
  br label %if.end230, !dbg !3191

if.end230:                                        ; preds = %for.end229, %if.end195
  %206 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l1, align 8, !dbg !3192
  %type231 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %206, i32 0, i32 0, !dbg !3194
  %207 = load i32, i32* %type231, align 8, !dbg !3194
  %cmp232 = icmp eq i32 %207, 26, !dbg !3195
  br i1 %cmp232, label %if.then233, label %if.end252, !dbg !3196

if.then233:                                       ; preds = %if.end230
  call void @llvm.dbg.declare(metadata %struct.MLoop** %lp1234, metadata !3197, metadata !DIExpression()), !dbg !3199
  %208 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l1, align 8, !dbg !3200
  %data235 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %208, i32 0, i32 9, !dbg !3201
  %209 = load i8*, i8** %data235, align 8, !dbg !3201
  %210 = bitcast i8* %209 to %struct.MLoop*, !dbg !3200
  store %struct.MLoop* %210, %struct.MLoop** %lp1234, align 8, !dbg !3199
  call void @llvm.dbg.declare(metadata %struct.MLoop** %lp2236, metadata !3202, metadata !DIExpression()), !dbg !3203
  %211 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l2, align 8, !dbg !3204
  %data237 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %211, i32 0, i32 9, !dbg !3205
  %212 = load i8*, i8** %data237, align 8, !dbg !3205
  %213 = bitcast i8* %212 to %struct.MLoop*, !dbg !3204
  store %struct.MLoop* %213, %struct.MLoop** %lp2236, align 8, !dbg !3203
  call void @llvm.dbg.declare(metadata i32* %ltot, metadata !3206, metadata !DIExpression()), !dbg !3207
  %214 = load %struct.Mesh*, %struct.Mesh** %m1.addr, align 8, !dbg !3208
  %totloop238 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %214, i32 0, i32 31, !dbg !3209
  %215 = load i32, i32* %totloop238, align 4, !dbg !3209
  store i32 %215, i32* %ltot, align 4, !dbg !3207
  store i32 0, i32* %j, align 4, !dbg !3210
  br label %for.cond239, !dbg !3212

for.cond239:                                      ; preds = %for.inc247, %if.then233
  %216 = load i32, i32* %j, align 4, !dbg !3213
  %217 = load i32, i32* %ltot, align 4, !dbg !3215
  %cmp240 = icmp slt i32 %216, %217, !dbg !3216
  br i1 %cmp240, label %for.body241, label %for.end251, !dbg !3217

for.body241:                                      ; preds = %for.cond239
  %218 = load %struct.MLoop*, %struct.MLoop** %lp1234, align 8, !dbg !3218
  %v242 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %218, i32 0, i32 0, !dbg !3221
  %219 = load i32, i32* %v242, align 4, !dbg !3221
  %220 = load %struct.MLoop*, %struct.MLoop** %lp2236, align 8, !dbg !3222
  %v243 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %220, i32 0, i32 0, !dbg !3223
  %221 = load i32, i32* %v243, align 4, !dbg !3223
  %cmp244 = icmp ne i32 %219, %221, !dbg !3224
  br i1 %cmp244, label %if.then245, label %if.end246, !dbg !3225

if.then245:                                       ; preds = %for.body241
  store i32 6, i32* %retval, align 4, !dbg !3226
  br label %return, !dbg !3226

if.end246:                                        ; preds = %for.body241
  br label %for.inc247, !dbg !3227

for.inc247:                                       ; preds = %if.end246
  %222 = load i32, i32* %j, align 4, !dbg !3228
  %inc248 = add nsw i32 %222, 1, !dbg !3228
  store i32 %inc248, i32* %j, align 4, !dbg !3228
  %223 = load %struct.MLoop*, %struct.MLoop** %lp1234, align 8, !dbg !3229
  %incdec.ptr249 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %223, i32 1, !dbg !3229
  store %struct.MLoop* %incdec.ptr249, %struct.MLoop** %lp1234, align 8, !dbg !3229
  %224 = load %struct.MLoop*, %struct.MLoop** %lp2236, align 8, !dbg !3230
  %incdec.ptr250 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %224, i32 1, !dbg !3230
  store %struct.MLoop* %incdec.ptr250, %struct.MLoop** %lp2236, align 8, !dbg !3230
  br label %for.cond239, !dbg !3231, !llvm.loop !3232

for.end251:                                       ; preds = %for.cond239
  br label %if.end252, !dbg !3234

if.end252:                                        ; preds = %for.end251, %if.end230
  %225 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l1, align 8, !dbg !3235
  %type253 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %225, i32 0, i32 0, !dbg !3237
  %226 = load i32, i32* %type253, align 8, !dbg !3237
  %cmp254 = icmp eq i32 %226, 16, !dbg !3238
  br i1 %cmp254, label %if.then255, label %if.end277, !dbg !3239

if.then255:                                       ; preds = %if.end252
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %lp1256, metadata !3240, metadata !DIExpression()), !dbg !3244
  %227 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l1, align 8, !dbg !3245
  %data257 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %227, i32 0, i32 9, !dbg !3246
  %228 = load i8*, i8** %data257, align 8, !dbg !3246
  %229 = bitcast i8* %228 to %struct.MLoopUV*, !dbg !3245
  store %struct.MLoopUV* %229, %struct.MLoopUV** %lp1256, align 8, !dbg !3244
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %lp2258, metadata !3247, metadata !DIExpression()), !dbg !3248
  %230 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l2, align 8, !dbg !3249
  %data259 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %230, i32 0, i32 9, !dbg !3250
  %231 = load i8*, i8** %data259, align 8, !dbg !3250
  %232 = bitcast i8* %231 to %struct.MLoopUV*, !dbg !3249
  store %struct.MLoopUV* %232, %struct.MLoopUV** %lp2258, align 8, !dbg !3248
  call void @llvm.dbg.declare(metadata i32* %ltot260, metadata !3251, metadata !DIExpression()), !dbg !3252
  %233 = load %struct.Mesh*, %struct.Mesh** %m1.addr, align 8, !dbg !3253
  %totloop261 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %233, i32 0, i32 31, !dbg !3254
  %234 = load i32, i32* %totloop261, align 4, !dbg !3254
  store i32 %234, i32* %ltot260, align 4, !dbg !3252
  store i32 0, i32* %j, align 4, !dbg !3255
  br label %for.cond262, !dbg !3257

for.cond262:                                      ; preds = %for.inc272, %if.then255
  %235 = load i32, i32* %j, align 4, !dbg !3258
  %236 = load i32, i32* %ltot260, align 4, !dbg !3260
  %cmp263 = icmp slt i32 %235, %236, !dbg !3261
  br i1 %cmp263, label %for.body264, label %for.end276, !dbg !3262

for.body264:                                      ; preds = %for.cond262
  %237 = load %struct.MLoopUV*, %struct.MLoopUV** %lp1256, align 8, !dbg !3263
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %237, i32 0, i32 0, !dbg !3266
  %arraydecay265 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3263
  %238 = load %struct.MLoopUV*, %struct.MLoopUV** %lp2258, align 8, !dbg !3267
  %uv266 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %238, i32 0, i32 0, !dbg !3268
  %arraydecay267 = getelementptr inbounds [2 x float], [2 x float]* %uv266, i64 0, i64 0, !dbg !3267
  %call268 = call float @len_squared_v2v2(float* %arraydecay265, float* %arraydecay267), !dbg !3269
  %239 = load float, float* %thresh_sq, align 4, !dbg !3270
  %cmp269 = fcmp ogt float %call268, %239, !dbg !3271
  br i1 %cmp269, label %if.then270, label %if.end271, !dbg !3272

if.then270:                                       ; preds = %for.body264
  store i32 5, i32* %retval, align 4, !dbg !3273
  br label %return, !dbg !3273

if.end271:                                        ; preds = %for.body264
  br label %for.inc272, !dbg !3274

for.inc272:                                       ; preds = %if.end271
  %240 = load i32, i32* %j, align 4, !dbg !3275
  %inc273 = add nsw i32 %240, 1, !dbg !3275
  store i32 %inc273, i32* %j, align 4, !dbg !3275
  %241 = load %struct.MLoopUV*, %struct.MLoopUV** %lp1256, align 8, !dbg !3276
  %incdec.ptr274 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %241, i32 1, !dbg !3276
  store %struct.MLoopUV* %incdec.ptr274, %struct.MLoopUV** %lp1256, align 8, !dbg !3276
  %242 = load %struct.MLoopUV*, %struct.MLoopUV** %lp2258, align 8, !dbg !3277
  %incdec.ptr275 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %242, i32 1, !dbg !3277
  store %struct.MLoopUV* %incdec.ptr275, %struct.MLoopUV** %lp2258, align 8, !dbg !3277
  br label %for.cond262, !dbg !3278, !llvm.loop !3279

for.end276:                                       ; preds = %for.cond262
  br label %if.end277, !dbg !3281

if.end277:                                        ; preds = %for.end276, %if.end252
  %243 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l1, align 8, !dbg !3282
  %type278 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %243, i32 0, i32 0, !dbg !3284
  %244 = load i32, i32* %type278, align 8, !dbg !3284
  %cmp279 = icmp eq i32 %244, 17, !dbg !3285
  br i1 %cmp279, label %if.then280, label %if.end390, !dbg !3286

if.then280:                                       ; preds = %if.end277
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %lp1281, metadata !3287, metadata !DIExpression()), !dbg !3291
  %245 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l1, align 8, !dbg !3292
  %data282 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %245, i32 0, i32 9, !dbg !3293
  %246 = load i8*, i8** %data282, align 8, !dbg !3293
  %247 = bitcast i8* %246 to %struct.MLoopCol*, !dbg !3292
  store %struct.MLoopCol* %247, %struct.MLoopCol** %lp1281, align 8, !dbg !3291
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %lp2283, metadata !3294, metadata !DIExpression()), !dbg !3295
  %248 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l2, align 8, !dbg !3296
  %data284 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %248, i32 0, i32 9, !dbg !3297
  %249 = load i8*, i8** %data284, align 8, !dbg !3297
  %250 = bitcast i8* %249 to %struct.MLoopCol*, !dbg !3296
  store %struct.MLoopCol* %250, %struct.MLoopCol** %lp2283, align 8, !dbg !3295
  call void @llvm.dbg.declare(metadata i32* %ltot285, metadata !3298, metadata !DIExpression()), !dbg !3299
  %251 = load %struct.Mesh*, %struct.Mesh** %m1.addr, align 8, !dbg !3300
  %totloop286 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %251, i32 0, i32 31, !dbg !3301
  %252 = load i32, i32* %totloop286, align 4, !dbg !3301
  store i32 %252, i32* %ltot285, align 4, !dbg !3299
  store i32 0, i32* %j, align 4, !dbg !3302
  br label %for.cond287, !dbg !3304

for.cond287:                                      ; preds = %for.inc385, %if.then280
  %253 = load i32, i32* %j, align 4, !dbg !3305
  %254 = load i32, i32* %ltot285, align 4, !dbg !3307
  %cmp288 = icmp slt i32 %253, %254, !dbg !3308
  br i1 %cmp288, label %for.body289, label %for.end389, !dbg !3309

for.body289:                                      ; preds = %for.cond287
  %255 = load %struct.MLoopCol*, %struct.MLoopCol** %lp1281, align 8, !dbg !3310
  %r = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %255, i32 0, i32 0, !dbg !3310
  %256 = load i8, i8* %r, align 1, !dbg !3310
  %conv = zext i8 %256 to i32, !dbg !3310
  %257 = load %struct.MLoopCol*, %struct.MLoopCol** %lp2283, align 8, !dbg !3310
  %r290 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %257, i32 0, i32 0, !dbg !3310
  %258 = load i8, i8* %r290, align 1, !dbg !3310
  %conv291 = zext i8 %258 to i32, !dbg !3310
  %sub = sub nsw i32 %conv, %conv291, !dbg !3310
  %cmp292 = icmp slt i32 %sub, 0, !dbg !3310
  br i1 %cmp292, label %cond.true, label %cond.false, !dbg !3310

cond.true:                                        ; preds = %for.body289
  %259 = load %struct.MLoopCol*, %struct.MLoopCol** %lp1281, align 8, !dbg !3310
  %r294 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %259, i32 0, i32 0, !dbg !3310
  %260 = load i8, i8* %r294, align 1, !dbg !3310
  %conv295 = zext i8 %260 to i32, !dbg !3310
  %261 = load %struct.MLoopCol*, %struct.MLoopCol** %lp2283, align 8, !dbg !3310
  %r296 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %261, i32 0, i32 0, !dbg !3310
  %262 = load i8, i8* %r296, align 1, !dbg !3310
  %conv297 = zext i8 %262 to i32, !dbg !3310
  %sub298 = sub nsw i32 %conv295, %conv297, !dbg !3310
  %sub299 = sub nsw i32 0, %sub298, !dbg !3310
  br label %cond.end, !dbg !3310

cond.false:                                       ; preds = %for.body289
  %263 = load %struct.MLoopCol*, %struct.MLoopCol** %lp1281, align 8, !dbg !3310
  %r300 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %263, i32 0, i32 0, !dbg !3310
  %264 = load i8, i8* %r300, align 1, !dbg !3310
  %conv301 = zext i8 %264 to i32, !dbg !3310
  %265 = load %struct.MLoopCol*, %struct.MLoopCol** %lp2283, align 8, !dbg !3310
  %r302 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %265, i32 0, i32 0, !dbg !3310
  %266 = load i8, i8* %r302, align 1, !dbg !3310
  %conv303 = zext i8 %266 to i32, !dbg !3310
  %sub304 = sub nsw i32 %conv301, %conv303, !dbg !3310
  br label %cond.end, !dbg !3310

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub299, %cond.true ], [ %sub304, %cond.false ], !dbg !3310
  %conv305 = sitofp i32 %cond to float, !dbg !3310
  %267 = load float, float* %thresh.addr, align 4, !dbg !3313
  %cmp306 = fcmp ogt float %conv305, %267, !dbg !3314
  br i1 %cmp306, label %if.then383, label %lor.lhs.false308, !dbg !3315

lor.lhs.false308:                                 ; preds = %cond.end
  %268 = load %struct.MLoopCol*, %struct.MLoopCol** %lp1281, align 8, !dbg !3316
  %g = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %268, i32 0, i32 1, !dbg !3316
  %269 = load i8, i8* %g, align 1, !dbg !3316
  %conv309 = zext i8 %269 to i32, !dbg !3316
  %270 = load %struct.MLoopCol*, %struct.MLoopCol** %lp2283, align 8, !dbg !3316
  %g310 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %270, i32 0, i32 1, !dbg !3316
  %271 = load i8, i8* %g310, align 1, !dbg !3316
  %conv311 = zext i8 %271 to i32, !dbg !3316
  %sub312 = sub nsw i32 %conv309, %conv311, !dbg !3316
  %cmp313 = icmp slt i32 %sub312, 0, !dbg !3316
  br i1 %cmp313, label %cond.true315, label %cond.false322, !dbg !3316

cond.true315:                                     ; preds = %lor.lhs.false308
  %272 = load %struct.MLoopCol*, %struct.MLoopCol** %lp1281, align 8, !dbg !3316
  %g316 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %272, i32 0, i32 1, !dbg !3316
  %273 = load i8, i8* %g316, align 1, !dbg !3316
  %conv317 = zext i8 %273 to i32, !dbg !3316
  %274 = load %struct.MLoopCol*, %struct.MLoopCol** %lp2283, align 8, !dbg !3316
  %g318 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %274, i32 0, i32 1, !dbg !3316
  %275 = load i8, i8* %g318, align 1, !dbg !3316
  %conv319 = zext i8 %275 to i32, !dbg !3316
  %sub320 = sub nsw i32 %conv317, %conv319, !dbg !3316
  %sub321 = sub nsw i32 0, %sub320, !dbg !3316
  br label %cond.end328, !dbg !3316

cond.false322:                                    ; preds = %lor.lhs.false308
  %276 = load %struct.MLoopCol*, %struct.MLoopCol** %lp1281, align 8, !dbg !3316
  %g323 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %276, i32 0, i32 1, !dbg !3316
  %277 = load i8, i8* %g323, align 1, !dbg !3316
  %conv324 = zext i8 %277 to i32, !dbg !3316
  %278 = load %struct.MLoopCol*, %struct.MLoopCol** %lp2283, align 8, !dbg !3316
  %g325 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %278, i32 0, i32 1, !dbg !3316
  %279 = load i8, i8* %g325, align 1, !dbg !3316
  %conv326 = zext i8 %279 to i32, !dbg !3316
  %sub327 = sub nsw i32 %conv324, %conv326, !dbg !3316
  br label %cond.end328, !dbg !3316

cond.end328:                                      ; preds = %cond.false322, %cond.true315
  %cond329 = phi i32 [ %sub321, %cond.true315 ], [ %sub327, %cond.false322 ], !dbg !3316
  %conv330 = sitofp i32 %cond329 to float, !dbg !3316
  %280 = load float, float* %thresh.addr, align 4, !dbg !3317
  %cmp331 = fcmp ogt float %conv330, %280, !dbg !3318
  br i1 %cmp331, label %if.then383, label %lor.lhs.false333, !dbg !3319

lor.lhs.false333:                                 ; preds = %cond.end328
  %281 = load %struct.MLoopCol*, %struct.MLoopCol** %lp1281, align 8, !dbg !3320
  %b = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %281, i32 0, i32 2, !dbg !3320
  %282 = load i8, i8* %b, align 1, !dbg !3320
  %conv334 = zext i8 %282 to i32, !dbg !3320
  %283 = load %struct.MLoopCol*, %struct.MLoopCol** %lp2283, align 8, !dbg !3320
  %b335 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %283, i32 0, i32 2, !dbg !3320
  %284 = load i8, i8* %b335, align 1, !dbg !3320
  %conv336 = zext i8 %284 to i32, !dbg !3320
  %sub337 = sub nsw i32 %conv334, %conv336, !dbg !3320
  %cmp338 = icmp slt i32 %sub337, 0, !dbg !3320
  br i1 %cmp338, label %cond.true340, label %cond.false347, !dbg !3320

cond.true340:                                     ; preds = %lor.lhs.false333
  %285 = load %struct.MLoopCol*, %struct.MLoopCol** %lp1281, align 8, !dbg !3320
  %b341 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %285, i32 0, i32 2, !dbg !3320
  %286 = load i8, i8* %b341, align 1, !dbg !3320
  %conv342 = zext i8 %286 to i32, !dbg !3320
  %287 = load %struct.MLoopCol*, %struct.MLoopCol** %lp2283, align 8, !dbg !3320
  %b343 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %287, i32 0, i32 2, !dbg !3320
  %288 = load i8, i8* %b343, align 1, !dbg !3320
  %conv344 = zext i8 %288 to i32, !dbg !3320
  %sub345 = sub nsw i32 %conv342, %conv344, !dbg !3320
  %sub346 = sub nsw i32 0, %sub345, !dbg !3320
  br label %cond.end353, !dbg !3320

cond.false347:                                    ; preds = %lor.lhs.false333
  %289 = load %struct.MLoopCol*, %struct.MLoopCol** %lp1281, align 8, !dbg !3320
  %b348 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %289, i32 0, i32 2, !dbg !3320
  %290 = load i8, i8* %b348, align 1, !dbg !3320
  %conv349 = zext i8 %290 to i32, !dbg !3320
  %291 = load %struct.MLoopCol*, %struct.MLoopCol** %lp2283, align 8, !dbg !3320
  %b350 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %291, i32 0, i32 2, !dbg !3320
  %292 = load i8, i8* %b350, align 1, !dbg !3320
  %conv351 = zext i8 %292 to i32, !dbg !3320
  %sub352 = sub nsw i32 %conv349, %conv351, !dbg !3320
  br label %cond.end353, !dbg !3320

cond.end353:                                      ; preds = %cond.false347, %cond.true340
  %cond354 = phi i32 [ %sub346, %cond.true340 ], [ %sub352, %cond.false347 ], !dbg !3320
  %conv355 = sitofp i32 %cond354 to float, !dbg !3320
  %293 = load float, float* %thresh.addr, align 4, !dbg !3321
  %cmp356 = fcmp ogt float %conv355, %293, !dbg !3322
  br i1 %cmp356, label %if.then383, label %lor.lhs.false358, !dbg !3323

lor.lhs.false358:                                 ; preds = %cond.end353
  %294 = load %struct.MLoopCol*, %struct.MLoopCol** %lp1281, align 8, !dbg !3324
  %a = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %294, i32 0, i32 3, !dbg !3324
  %295 = load i8, i8* %a, align 1, !dbg !3324
  %conv359 = zext i8 %295 to i32, !dbg !3324
  %296 = load %struct.MLoopCol*, %struct.MLoopCol** %lp2283, align 8, !dbg !3324
  %a360 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %296, i32 0, i32 3, !dbg !3324
  %297 = load i8, i8* %a360, align 1, !dbg !3324
  %conv361 = zext i8 %297 to i32, !dbg !3324
  %sub362 = sub nsw i32 %conv359, %conv361, !dbg !3324
  %cmp363 = icmp slt i32 %sub362, 0, !dbg !3324
  br i1 %cmp363, label %cond.true365, label %cond.false372, !dbg !3324

cond.true365:                                     ; preds = %lor.lhs.false358
  %298 = load %struct.MLoopCol*, %struct.MLoopCol** %lp1281, align 8, !dbg !3324
  %a366 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %298, i32 0, i32 3, !dbg !3324
  %299 = load i8, i8* %a366, align 1, !dbg !3324
  %conv367 = zext i8 %299 to i32, !dbg !3324
  %300 = load %struct.MLoopCol*, %struct.MLoopCol** %lp2283, align 8, !dbg !3324
  %a368 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %300, i32 0, i32 3, !dbg !3324
  %301 = load i8, i8* %a368, align 1, !dbg !3324
  %conv369 = zext i8 %301 to i32, !dbg !3324
  %sub370 = sub nsw i32 %conv367, %conv369, !dbg !3324
  %sub371 = sub nsw i32 0, %sub370, !dbg !3324
  br label %cond.end378, !dbg !3324

cond.false372:                                    ; preds = %lor.lhs.false358
  %302 = load %struct.MLoopCol*, %struct.MLoopCol** %lp1281, align 8, !dbg !3324
  %a373 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %302, i32 0, i32 3, !dbg !3324
  %303 = load i8, i8* %a373, align 1, !dbg !3324
  %conv374 = zext i8 %303 to i32, !dbg !3324
  %304 = load %struct.MLoopCol*, %struct.MLoopCol** %lp2283, align 8, !dbg !3324
  %a375 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %304, i32 0, i32 3, !dbg !3324
  %305 = load i8, i8* %a375, align 1, !dbg !3324
  %conv376 = zext i8 %305 to i32, !dbg !3324
  %sub377 = sub nsw i32 %conv374, %conv376, !dbg !3324
  br label %cond.end378, !dbg !3324

cond.end378:                                      ; preds = %cond.false372, %cond.true365
  %cond379 = phi i32 [ %sub371, %cond.true365 ], [ %sub377, %cond.false372 ], !dbg !3324
  %conv380 = sitofp i32 %cond379 to float, !dbg !3324
  %306 = load float, float* %thresh.addr, align 4, !dbg !3325
  %cmp381 = fcmp ogt float %conv380, %306, !dbg !3326
  br i1 %cmp381, label %if.then383, label %if.end384, !dbg !3327

if.then383:                                       ; preds = %cond.end378, %cond.end353, %cond.end328, %cond.end
  store i32 4, i32* %retval, align 4, !dbg !3328
  br label %return, !dbg !3328

if.end384:                                        ; preds = %cond.end378
  br label %for.inc385, !dbg !3330

for.inc385:                                       ; preds = %if.end384
  %307 = load i32, i32* %j, align 4, !dbg !3331
  %inc386 = add nsw i32 %307, 1, !dbg !3331
  store i32 %inc386, i32* %j, align 4, !dbg !3331
  %308 = load %struct.MLoopCol*, %struct.MLoopCol** %lp1281, align 8, !dbg !3332
  %incdec.ptr387 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %308, i32 1, !dbg !3332
  store %struct.MLoopCol* %incdec.ptr387, %struct.MLoopCol** %lp1281, align 8, !dbg !3332
  %309 = load %struct.MLoopCol*, %struct.MLoopCol** %lp2283, align 8, !dbg !3333
  %incdec.ptr388 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %309, i32 1, !dbg !3333
  store %struct.MLoopCol* %incdec.ptr388, %struct.MLoopCol** %lp2283, align 8, !dbg !3333
  br label %for.cond287, !dbg !3334, !llvm.loop !3335

for.end389:                                       ; preds = %for.cond287
  br label %if.end390, !dbg !3337

if.end390:                                        ; preds = %for.end389, %if.end277
  %310 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l1, align 8, !dbg !3338
  %type391 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %310, i32 0, i32 0, !dbg !3340
  %311 = load i32, i32* %type391, align 8, !dbg !3340
  %cmp392 = icmp eq i32 %311, 2, !dbg !3341
  br i1 %cmp392, label %if.then394, label %if.end435, !dbg !3342

if.then394:                                       ; preds = %if.end390
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv1, metadata !3343, metadata !DIExpression()), !dbg !3347
  %312 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l1, align 8, !dbg !3348
  %data395 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %312, i32 0, i32 9, !dbg !3349
  %313 = load i8*, i8** %data395, align 8, !dbg !3349
  %314 = bitcast i8* %313 to %struct.MDeformVert*, !dbg !3348
  store %struct.MDeformVert* %314, %struct.MDeformVert** %dv1, align 8, !dbg !3347
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv2, metadata !3350, metadata !DIExpression()), !dbg !3351
  %315 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l2, align 8, !dbg !3352
  %data396 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %315, i32 0, i32 9, !dbg !3353
  %316 = load i8*, i8** %data396, align 8, !dbg !3353
  %317 = bitcast i8* %316 to %struct.MDeformVert*, !dbg !3352
  store %struct.MDeformVert* %317, %struct.MDeformVert** %dv2, align 8, !dbg !3351
  call void @llvm.dbg.declare(metadata i32* %dvtot, metadata !3354, metadata !DIExpression()), !dbg !3355
  %318 = load %struct.Mesh*, %struct.Mesh** %m1.addr, align 8, !dbg !3356
  %totvert397 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %318, i32 0, i32 26, !dbg !3357
  %319 = load i32, i32* %totvert397, align 8, !dbg !3357
  store i32 %319, i32* %dvtot, align 4, !dbg !3355
  store i32 0, i32* %j, align 4, !dbg !3358
  br label %for.cond398, !dbg !3360

for.cond398:                                      ; preds = %for.inc430, %if.then394
  %320 = load i32, i32* %j, align 4, !dbg !3361
  %321 = load i32, i32* %dvtot, align 4, !dbg !3363
  %cmp399 = icmp slt i32 %320, %321, !dbg !3364
  br i1 %cmp399, label %for.body401, label %for.end434, !dbg !3365

for.body401:                                      ; preds = %for.cond398
  call void @llvm.dbg.declare(metadata i32* %k402, metadata !3366, metadata !DIExpression()), !dbg !3368
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw1, metadata !3369, metadata !DIExpression()), !dbg !3372
  %322 = load %struct.MDeformVert*, %struct.MDeformVert** %dv1, align 8, !dbg !3373
  %dw = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %322, i32 0, i32 0, !dbg !3374
  %323 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !3374
  store %struct.MDeformWeight* %323, %struct.MDeformWeight** %dw1, align 8, !dbg !3372
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw2, metadata !3375, metadata !DIExpression()), !dbg !3376
  %324 = load %struct.MDeformVert*, %struct.MDeformVert** %dv2, align 8, !dbg !3377
  %dw403 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %324, i32 0, i32 0, !dbg !3378
  %325 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw403, align 8, !dbg !3378
  store %struct.MDeformWeight* %325, %struct.MDeformWeight** %dw2, align 8, !dbg !3376
  %326 = load %struct.MDeformVert*, %struct.MDeformVert** %dv1, align 8, !dbg !3379
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %326, i32 0, i32 1, !dbg !3381
  %327 = load i32, i32* %totweight, align 8, !dbg !3381
  %328 = load %struct.MDeformVert*, %struct.MDeformVert** %dv2, align 8, !dbg !3382
  %totweight404 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %328, i32 0, i32 1, !dbg !3383
  %329 = load i32, i32* %totweight404, align 8, !dbg !3383
  %cmp405 = icmp ne i32 %327, %329, !dbg !3384
  br i1 %cmp405, label %if.then407, label %if.end408, !dbg !3385

if.then407:                                       ; preds = %for.body401
  store i32 3, i32* %retval, align 4, !dbg !3386
  br label %return, !dbg !3386

if.end408:                                        ; preds = %for.body401
  store i32 0, i32* %k402, align 4, !dbg !3387
  br label %for.cond409, !dbg !3389

for.cond409:                                      ; preds = %for.inc425, %if.end408
  %330 = load i32, i32* %k402, align 4, !dbg !3390
  %331 = load %struct.MDeformVert*, %struct.MDeformVert** %dv1, align 8, !dbg !3392
  %totweight410 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %331, i32 0, i32 1, !dbg !3393
  %332 = load i32, i32* %totweight410, align 8, !dbg !3393
  %cmp411 = icmp slt i32 %330, %332, !dbg !3394
  br i1 %cmp411, label %for.body413, label %for.end429, !dbg !3395

for.body413:                                      ; preds = %for.cond409
  %333 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw1, align 8, !dbg !3396
  %def_nr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %333, i32 0, i32 0, !dbg !3399
  %334 = load i32, i32* %def_nr, align 4, !dbg !3399
  %335 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw2, align 8, !dbg !3400
  %def_nr414 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %335, i32 0, i32 0, !dbg !3401
  %336 = load i32, i32* %def_nr414, align 4, !dbg !3401
  %cmp415 = icmp ne i32 %334, %336, !dbg !3402
  br i1 %cmp415, label %if.then417, label %if.end418, !dbg !3403

if.then417:                                       ; preds = %for.body413
  store i32 2, i32* %retval, align 4, !dbg !3404
  br label %return, !dbg !3404

if.end418:                                        ; preds = %for.body413
  %337 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw1, align 8, !dbg !3405
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %337, i32 0, i32 1, !dbg !3407
  %338 = load float, float* %weight, align 4, !dbg !3407
  %339 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw2, align 8, !dbg !3408
  %weight419 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %339, i32 0, i32 1, !dbg !3409
  %340 = load float, float* %weight419, align 4, !dbg !3409
  %sub420 = fsub float %338, %340, !dbg !3410
  %341 = call float @llvm.fabs.f32(float %sub420), !dbg !3411
  %342 = load float, float* %thresh.addr, align 4, !dbg !3412
  %cmp421 = fcmp ogt float %341, %342, !dbg !3413
  br i1 %cmp421, label %if.then423, label %if.end424, !dbg !3414

if.then423:                                       ; preds = %if.end418
  store i32 1, i32* %retval, align 4, !dbg !3415
  br label %return, !dbg !3415

if.end424:                                        ; preds = %if.end418
  br label %for.inc425, !dbg !3416

for.inc425:                                       ; preds = %if.end424
  %343 = load i32, i32* %k402, align 4, !dbg !3417
  %inc426 = add nsw i32 %343, 1, !dbg !3417
  store i32 %inc426, i32* %k402, align 4, !dbg !3417
  %344 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw1, align 8, !dbg !3418
  %incdec.ptr427 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %344, i32 1, !dbg !3418
  store %struct.MDeformWeight* %incdec.ptr427, %struct.MDeformWeight** %dw1, align 8, !dbg !3418
  %345 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw2, align 8, !dbg !3419
  %incdec.ptr428 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %345, i32 1, !dbg !3419
  store %struct.MDeformWeight* %incdec.ptr428, %struct.MDeformWeight** %dw2, align 8, !dbg !3419
  br label %for.cond409, !dbg !3420, !llvm.loop !3421

for.end429:                                       ; preds = %for.cond409
  br label %for.inc430, !dbg !3423

for.inc430:                                       ; preds = %for.end429
  %346 = load i32, i32* %j, align 4, !dbg !3424
  %inc431 = add nsw i32 %346, 1, !dbg !3424
  store i32 %inc431, i32* %j, align 4, !dbg !3424
  %347 = load %struct.MDeformVert*, %struct.MDeformVert** %dv1, align 8, !dbg !3425
  %incdec.ptr432 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %347, i32 1, !dbg !3425
  store %struct.MDeformVert* %incdec.ptr432, %struct.MDeformVert** %dv1, align 8, !dbg !3425
  %348 = load %struct.MDeformVert*, %struct.MDeformVert** %dv2, align 8, !dbg !3426
  %incdec.ptr433 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %348, i32 1, !dbg !3426
  store %struct.MDeformVert* %incdec.ptr433, %struct.MDeformVert** %dv2, align 8, !dbg !3426
  br label %for.cond398, !dbg !3427, !llvm.loop !3428

for.end434:                                       ; preds = %for.cond398
  br label %if.end435, !dbg !3430

if.end435:                                        ; preds = %for.end434, %if.end390
  br label %for.inc436, !dbg !3431

for.inc436:                                       ; preds = %if.end435
  %349 = load i32, i32* %i, align 4, !dbg !3432
  %inc437 = add nsw i32 %349, 1, !dbg !3432
  store i32 %inc437, i32* %i, align 4, !dbg !3432
  br label %for.cond94, !dbg !3433, !llvm.loop !3434

for.end438:                                       ; preds = %for.cond94
  store i32 0, i32* %retval, align 4, !dbg !3436
  br label %return, !dbg !3436

return:                                           ; preds = %for.end438, %if.then423, %if.then417, %if.then407, %if.then383, %if.then270, %if.then245, %if.then218, %if.then206, %if.then189, %if.then160, %if.then90
  %350 = load i32, i32* %retval, align 4, !dbg !3437
  ret i32 %350, !dbg !3437
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @cmpcode_to_str(i32 %code) #0 !dbg !3438 {
entry:
  %retval = alloca i8*, align 8
  %code.addr = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !3441, metadata !DIExpression()), !dbg !3442
  %0 = load i32, i32* %code.addr, align 4, !dbg !3443
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
    i32 4, label %sw.bb3
    i32 5, label %sw.bb4
    i32 6, label %sw.bb5
    i32 7, label %sw.bb6
    i32 8, label %sw.bb7
    i32 9, label %sw.bb8
    i32 10, label %sw.bb9
    i32 11, label %sw.bb10
  ], !dbg !3444

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8** %retval, align 8, !dbg !3445
  br label %return, !dbg !3445

sw.bb1:                                           ; preds = %entry
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21, i64 0, i64 0), i8** %retval, align 8, !dbg !3447
  br label %return, !dbg !3447

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.22, i64 0, i64 0), i8** %retval, align 8, !dbg !3448
  br label %return, !dbg !3448

sw.bb3:                                           ; preds = %entry
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i64 0, i64 0), i8** %retval, align 8, !dbg !3449
  br label %return, !dbg !3449

sw.bb4:                                           ; preds = %entry
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24, i64 0, i64 0), i8** %retval, align 8, !dbg !3450
  br label %return, !dbg !3450

sw.bb5:                                           ; preds = %entry
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.25, i64 0, i64 0), i8** %retval, align 8, !dbg !3451
  br label %return, !dbg !3451

sw.bb6:                                           ; preds = %entry
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i64 0, i64 0), i8** %retval, align 8, !dbg !3452
  br label %return, !dbg !3452

sw.bb7:                                           ; preds = %entry
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.27, i64 0, i64 0), i8** %retval, align 8, !dbg !3453
  br label %return, !dbg !3453

sw.bb8:                                           ; preds = %entry
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i64 0, i64 0), i8** %retval, align 8, !dbg !3454
  br label %return, !dbg !3454

sw.bb9:                                           ; preds = %entry
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0), i8** %retval, align 8, !dbg !3455
  br label %return, !dbg !3455

sw.bb10:                                          ; preds = %entry
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.30, i64 0, i64 0), i8** %retval, align 8, !dbg !3456
  br label %return, !dbg !3456

sw.default:                                       ; preds = %entry
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31, i64 0, i64 0), i8** %retval, align 8, !dbg !3457
  br label %return, !dbg !3457

return:                                           ; preds = %sw.default, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %retval, align 8, !dbg !3458
  ret i8* %1, !dbg !3458
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_ensure_skin_customdata(%struct.Mesh* %me) #0 !dbg !3459 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %vs = alloca %struct.MVertSkin*, align 8
  %v = alloca %struct.BMVert*, align 8
  %iter = alloca %struct.BMIter, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !3462, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !3464, metadata !DIExpression()), !dbg !3465
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3466
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 20, !dbg !3467
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !3467
  %tobool = icmp ne %struct.BMEditMesh* %1, null, !dbg !3466
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3466

cond.true:                                        ; preds = %entry
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3468
  %edit_btmesh1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 20, !dbg !3469
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh1, align 8, !dbg !3469
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !3470
  %4 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !3470
  br label %cond.end, !dbg !3466

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3466

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.BMesh* [ %4, %cond.true ], [ null, %cond.false ], !dbg !3466
  store %struct.BMesh* %cond, %struct.BMesh** %bm, align 8, !dbg !3465
  call void @llvm.dbg.declare(metadata %struct.MVertSkin** %vs, metadata !3471, metadata !DIExpression()), !dbg !3478
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3479
  %tobool3 = icmp ne %struct.BMesh* %5, null, !dbg !3479
  br i1 %tobool3, label %if.then, label %if.else, !dbg !3481

if.then:                                          ; preds = %cond.end
  %6 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3482
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %6, i32 0, i32 24, !dbg !3485
  %call = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %vdata, i32 36), !dbg !3486
  %tobool4 = icmp ne i8 %call, 0, !dbg !3486
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !3487

if.then5:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v, metadata !3488, metadata !DIExpression()), !dbg !3490
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !3491, metadata !DIExpression()), !dbg !3579
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3580
  %8 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3581
  %vdata6 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %8, i32 0, i32 24, !dbg !3582
  call void @BM_data_layer_add(%struct.BMesh* %7, %struct.CustomData* %vdata6, i32 36), !dbg !3583
  %9 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3584
  %call7 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %9, i8 zeroext 1, i8* null), !dbg !3584
  %10 = bitcast i8* %call7 to %struct.BMVert*, !dbg !3584
  store %struct.BMVert* %10, %struct.BMVert** %v, align 8, !dbg !3584
  br label %for.cond, !dbg !3584

for.cond:                                         ; preds = %for.inc, %if.then5
  %11 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !3586
  %tobool8 = icmp ne %struct.BMVert* %11, null, !dbg !3584
  br i1 %tobool8, label %for.body, label %for.end, !dbg !3584

for.body:                                         ; preds = %for.cond
  %12 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3588
  %vdata9 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %12, i32 0, i32 24, !dbg !3590
  %13 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !3591
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %13, i32 0, i32 0, !dbg !3592
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !3593
  %14 = load i8*, i8** %data, align 8, !dbg !3593
  %call10 = call i8* @CustomData_bmesh_get(%struct.CustomData* %vdata9, i8* %14, i32 36), !dbg !3594
  %15 = bitcast i8* %call10 to %struct.MVertSkin*, !dbg !3594
  store %struct.MVertSkin* %15, %struct.MVertSkin** %vs, align 8, !dbg !3595
  %16 = load %struct.MVertSkin*, %struct.MVertSkin** %vs, align 8, !dbg !3596
  %flag = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %16, i32 0, i32 1, !dbg !3597
  %17 = load i32, i32* %flag, align 4, !dbg !3598
  %or = or i32 %17, 1, !dbg !3598
  store i32 %or, i32* %flag, align 4, !dbg !3598
  br label %for.end, !dbg !3599

for.inc:                                          ; No predecessors!
  %call11 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !3586
  %18 = bitcast i8* %call11 to %struct.BMVert*, !dbg !3586
  store %struct.BMVert* %18, %struct.BMVert** %v, align 8, !dbg !3586
  br label %for.cond, !dbg !3586, !llvm.loop !3600

for.end:                                          ; preds = %for.body, %for.cond
  br label %if.end, !dbg !3602

if.end:                                           ; preds = %for.end, %if.then
  br label %if.end24, !dbg !3603

if.else:                                          ; preds = %cond.end
  %19 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3604
  %vdata12 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %19, i32 0, i32 21, !dbg !3607
  %call13 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %vdata12, i32 36), !dbg !3608
  %tobool14 = icmp ne i8 %call13, 0, !dbg !3608
  br i1 %tobool14, label %if.end23, label %if.then15, !dbg !3609

if.then15:                                        ; preds = %if.else
  %20 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3610
  %vdata16 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %20, i32 0, i32 21, !dbg !3612
  %21 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3613
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %21, i32 0, i32 26, !dbg !3614
  %22 = load i32, i32* %totvert, align 8, !dbg !3614
  %call17 = call i8* @CustomData_add_layer(%struct.CustomData* %vdata16, i32 36, i32 2, i8* null, i32 %22), !dbg !3615
  %23 = bitcast i8* %call17 to %struct.MVertSkin*, !dbg !3615
  store %struct.MVertSkin* %23, %struct.MVertSkin** %vs, align 8, !dbg !3616
  %24 = load %struct.MVertSkin*, %struct.MVertSkin** %vs, align 8, !dbg !3617
  %tobool18 = icmp ne %struct.MVertSkin* %24, null, !dbg !3617
  br i1 %tobool18, label %if.then19, label %if.end22, !dbg !3619

if.then19:                                        ; preds = %if.then15
  %25 = load %struct.MVertSkin*, %struct.MVertSkin** %vs, align 8, !dbg !3620
  %flag20 = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %25, i32 0, i32 1, !dbg !3622
  %26 = load i32, i32* %flag20, align 4, !dbg !3623
  %or21 = or i32 %26, 1, !dbg !3623
  store i32 %or21, i32* %flag20, align 4, !dbg !3623
  br label %if.end22, !dbg !3624

if.end22:                                         ; preds = %if.then19, %if.then15
  br label %if.end23, !dbg !3625

if.end23:                                         ; preds = %if.end22, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.end
  ret void, !dbg !3626
}

declare dso_local zeroext i8 @CustomData_has_layer(%struct.CustomData*, i32) #2

declare dso_local void @BM_data_layer_add(%struct.BMesh*, %struct.CustomData*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !3627 {
entry:
  %retval = alloca i8*, align 8
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !3632, metadata !DIExpression()), !dbg !3633
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !3634, metadata !DIExpression()), !dbg !3635
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !3636, metadata !DIExpression()), !dbg !3637
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !3638, metadata !DIExpression()), !dbg !3639
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !3640
  %1 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !3640
  %2 = load i8, i8* %itype.addr, align 1, !dbg !3640
  %3 = load i8*, i8** %data.addr, align 8, !dbg !3640
  %call = call zeroext i8 @BM_iter_init(%struct.BMIter* %0, %struct.BMesh* %1, i8 zeroext %2, i8* %3), !dbg !3640
  %tobool = icmp ne i8 %call, 0, !dbg !3640
  br i1 %tobool, label %if.then, label %if.else, !dbg !3642

if.then:                                          ; preds = %entry
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !3643
  %call1 = call i8* @BM_iter_step(%struct.BMIter* %4), !dbg !3645
  store i8* %call1, i8** %retval, align 8, !dbg !3646
  br label %return, !dbg !3646

if.else:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !3647
  br label %return, !dbg !3647

return:                                           ; preds = %if.else, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !3649
  ret i8* %5, !dbg !3649
}

declare dso_local i8* @CustomData_bmesh_get(%struct.CustomData*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_step(%struct.BMIter* %iter) #0 !dbg !3650 {
entry:
  %iter.addr = alloca %struct.BMIter*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !3653, metadata !DIExpression()), !dbg !3654
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !3655
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %0, i32 0, i32 2, !dbg !3656
  %1 = load i8* (i8*)*, i8* (i8*)** %step, align 8, !dbg !3656
  %2 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !3657
  %3 = bitcast %struct.BMIter* %2 to i8*, !dbg !3657
  %call = call i8* %1(i8* %3), !dbg !3655
  ret i8* %call, !dbg !3658
}

declare dso_local i8* @CustomData_add_layer(%struct.CustomData*, i32, i32, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_update_customdata_pointers(%struct.Mesh* %me, i8 zeroext %do_ensure_tess_cd) #0 !dbg !3659 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %do_ensure_tess_cd.addr = alloca i8, align 1
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !3662, metadata !DIExpression()), !dbg !3663
  store i8 %do_ensure_tess_cd, i8* %do_ensure_tess_cd.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_ensure_tess_cd.addr, metadata !3664, metadata !DIExpression()), !dbg !3665
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3666
  %1 = load i8, i8* %do_ensure_tess_cd.addr, align 1, !dbg !3667
  call void @mesh_update_linked_customdata(%struct.Mesh* %0, i8 zeroext %1), !dbg !3668
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3669
  %vdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 21, !dbg !3670
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %vdata, i32 0), !dbg !3671
  %3 = bitcast i8* %call to %struct.MVert*, !dbg !3671
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3672
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 15, !dbg !3673
  store %struct.MVert* %3, %struct.MVert** %mvert, align 8, !dbg !3674
  %5 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3675
  %vdata1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 21, !dbg !3676
  %call2 = call i8* @CustomData_get_layer(%struct.CustomData* %vdata1, i32 2), !dbg !3677
  %6 = bitcast i8* %call2 to %struct.MDeformVert*, !dbg !3677
  %7 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3678
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 17, !dbg !3679
  store %struct.MDeformVert* %6, %struct.MDeformVert** %dvert, align 8, !dbg !3680
  %8 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3681
  %edata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 22, !dbg !3682
  %call3 = call i8* @CustomData_get_layer(%struct.CustomData* %edata, i32 3), !dbg !3683
  %9 = bitcast i8* %call3 to %struct.MEdge*, !dbg !3683
  %10 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3684
  %medge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 16, !dbg !3685
  store %struct.MEdge* %9, %struct.MEdge** %medge, align 8, !dbg !3686
  %11 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3687
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 23, !dbg !3688
  %call4 = call i8* @CustomData_get_layer(%struct.CustomData* %fdata, i32 4), !dbg !3689
  %12 = bitcast i8* %call4 to %struct.MFace*, !dbg !3689
  %13 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3690
  %mface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %13, i32 0, i32 12, !dbg !3691
  store %struct.MFace* %12, %struct.MFace** %mface, align 8, !dbg !3692
  %14 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3693
  %fdata5 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 23, !dbg !3694
  %call6 = call i8* @CustomData_get_layer(%struct.CustomData* %fdata5, i32 6), !dbg !3695
  %15 = bitcast i8* %call6 to %struct.MCol*, !dbg !3695
  %16 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3696
  %mcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %16, i32 0, i32 18, !dbg !3697
  store %struct.MCol* %15, %struct.MCol** %mcol, align 8, !dbg !3698
  %17 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3699
  %fdata7 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 23, !dbg !3700
  %call8 = call i8* @CustomData_get_layer(%struct.CustomData* %fdata7, i32 5), !dbg !3701
  %18 = bitcast i8* %call8 to %struct.MTFace*, !dbg !3701
  %19 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3702
  %mtface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %19, i32 0, i32 13, !dbg !3703
  store %struct.MTFace* %18, %struct.MTFace** %mtface, align 8, !dbg !3704
  %20 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3705
  %pdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %20, i32 0, i32 24, !dbg !3706
  %call9 = call i8* @CustomData_get_layer(%struct.CustomData* %pdata, i32 25), !dbg !3707
  %21 = bitcast i8* %call9 to %struct.MPoly*, !dbg !3707
  %22 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3708
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %22, i32 0, i32 7, !dbg !3709
  store %struct.MPoly* %21, %struct.MPoly** %mpoly, align 8, !dbg !3710
  %23 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3711
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %23, i32 0, i32 25, !dbg !3712
  %call10 = call i8* @CustomData_get_layer(%struct.CustomData* %ldata, i32 26), !dbg !3713
  %24 = bitcast i8* %call10 to %struct.MLoop*, !dbg !3713
  %25 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3714
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %25, i32 0, i32 9, !dbg !3715
  store %struct.MLoop* %24, %struct.MLoop** %mloop, align 8, !dbg !3716
  %26 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3717
  %pdata11 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %26, i32 0, i32 24, !dbg !3718
  %call12 = call i8* @CustomData_get_layer(%struct.CustomData* %pdata11, i32 15), !dbg !3719
  %27 = bitcast i8* %call12 to %struct.MTexPoly*, !dbg !3719
  %28 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3720
  %mtpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %28, i32 0, i32 8, !dbg !3721
  store %struct.MTexPoly* %27, %struct.MTexPoly** %mtpoly, align 8, !dbg !3722
  %29 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3723
  %ldata13 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %29, i32 0, i32 25, !dbg !3724
  %call14 = call i8* @CustomData_get_layer(%struct.CustomData* %ldata13, i32 17), !dbg !3725
  %30 = bitcast i8* %call14 to %struct.MLoopCol*, !dbg !3725
  %31 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3726
  %mloopcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %31, i32 0, i32 11, !dbg !3727
  store %struct.MLoopCol* %30, %struct.MLoopCol** %mloopcol, align 8, !dbg !3728
  %32 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3729
  %ldata15 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %32, i32 0, i32 25, !dbg !3730
  %call16 = call i8* @CustomData_get_layer(%struct.CustomData* %ldata15, i32 16), !dbg !3731
  %33 = bitcast i8* %call16 to %struct.MLoopUV*, !dbg !3731
  %34 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3732
  %mloopuv = getelementptr inbounds %struct.Mesh, %struct.Mesh* %34, i32 0, i32 10, !dbg !3733
  store %struct.MLoopUV* %33, %struct.MLoopUV** %mloopuv, align 8, !dbg !3734
  ret void, !dbg !3735
}

; Function Attrs: noinline nounwind uwtable
define internal void @mesh_update_linked_customdata(%struct.Mesh* %me, i8 zeroext %do_ensure_tess_cd) #0 !dbg !3736 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %do_ensure_tess_cd.addr = alloca i8, align 1
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !3737, metadata !DIExpression()), !dbg !3738
  store i8 %do_ensure_tess_cd, i8* %do_ensure_tess_cd.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_ensure_tess_cd.addr, metadata !3739, metadata !DIExpression()), !dbg !3740
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3741
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 20, !dbg !3743
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !3743
  %tobool = icmp ne %struct.BMEditMesh* %1, null, !dbg !3741
  br i1 %tobool, label %if.then, label %if.end, !dbg !3744

if.then:                                          ; preds = %entry
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3745
  %edit_btmesh1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 20, !dbg !3746
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh1, align 8, !dbg !3746
  call void @BKE_editmesh_update_linked_customdata(%struct.BMEditMesh* %3), !dbg !3747
  br label %if.end, !dbg !3747

if.end:                                           ; preds = %if.then, %entry
  %4 = load i8, i8* %do_ensure_tess_cd.addr, align 1, !dbg !3748
  %tobool2 = icmp ne i8 %4, 0, !dbg !3748
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !3750

if.then3:                                         ; preds = %if.end
  %5 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3751
  call void @mesh_ensure_tessellation_customdata(%struct.Mesh* %5), !dbg !3753
  br label %if.end4, !dbg !3754

if.end4:                                          ; preds = %if.then3, %if.end
  %6 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3755
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 23, !dbg !3756
  %7 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3757
  %pdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 24, !dbg !3758
  %8 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3759
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 25, !dbg !3760
  call void @CustomData_bmesh_update_active_layers(%struct.CustomData* %fdata, %struct.CustomData* %pdata, %struct.CustomData* %ldata), !dbg !3761
  ret void, !dbg !3762
}

declare dso_local i8* @CustomData_get_layer(%struct.CustomData*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_unlink(%struct.Mesh* %me) #0 !dbg !3763 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %a = alloca i32, align 4
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !3764, metadata !DIExpression()), !dbg !3765
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3766, metadata !DIExpression()), !dbg !3767
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3768
  %cmp = icmp eq %struct.Mesh* %0, null, !dbg !3770
  br i1 %cmp, label %if.then, label %if.end, !dbg !3771

if.then:                                          ; preds = %entry
  br label %if.end26, !dbg !3772

if.end:                                           ; preds = %entry
  %1 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3773
  %mat = getelementptr inbounds %struct.Mesh, %struct.Mesh* %1, i32 0, i32 5, !dbg !3775
  %2 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !3775
  %tobool = icmp ne %struct.Material** %2, null, !dbg !3773
  br i1 %tobool, label %if.then1, label %if.end14, !dbg !3776

if.then1:                                         ; preds = %if.end
  store i32 0, i32* %a, align 4, !dbg !3777
  br label %for.cond, !dbg !3780

for.cond:                                         ; preds = %for.inc, %if.then1
  %3 = load i32, i32* %a, align 4, !dbg !3781
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3783
  %totcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 47, !dbg !3784
  %5 = load i16, i16* %totcol, align 2, !dbg !3784
  %conv = sext i16 %5 to i32, !dbg !3783
  %cmp2 = icmp slt i32 %3, %conv, !dbg !3785
  br i1 %cmp2, label %for.body, label %for.end, !dbg !3786

for.body:                                         ; preds = %for.cond
  %6 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3787
  %mat4 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 5, !dbg !3790
  %7 = load %struct.Material**, %struct.Material*** %mat4, align 8, !dbg !3790
  %8 = load i32, i32* %a, align 4, !dbg !3791
  %idxprom = sext i32 %8 to i64, !dbg !3787
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %7, i64 %idxprom, !dbg !3787
  %9 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !3787
  %tobool5 = icmp ne %struct.Material* %9, null, !dbg !3787
  br i1 %tobool5, label %if.then6, label %if.end10, !dbg !3792

if.then6:                                         ; preds = %for.body
  %10 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3793
  %mat7 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 5, !dbg !3794
  %11 = load %struct.Material**, %struct.Material*** %mat7, align 8, !dbg !3794
  %12 = load i32, i32* %a, align 4, !dbg !3795
  %idxprom8 = sext i32 %12 to i64, !dbg !3793
  %arrayidx9 = getelementptr inbounds %struct.Material*, %struct.Material** %11, i64 %idxprom8, !dbg !3793
  %13 = load %struct.Material*, %struct.Material** %arrayidx9, align 8, !dbg !3793
  %id = getelementptr inbounds %struct.Material, %struct.Material* %13, i32 0, i32 0, !dbg !3796
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !3797
  %14 = load i32, i32* %us, align 4, !dbg !3798
  %dec = add nsw i32 %14, -1, !dbg !3798
  store i32 %dec, i32* %us, align 4, !dbg !3798
  br label %if.end10, !dbg !3793

if.end10:                                         ; preds = %if.then6, %for.body
  %15 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3799
  %mat11 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %15, i32 0, i32 5, !dbg !3800
  %16 = load %struct.Material**, %struct.Material*** %mat11, align 8, !dbg !3800
  %17 = load i32, i32* %a, align 4, !dbg !3801
  %idxprom12 = sext i32 %17 to i64, !dbg !3799
  %arrayidx13 = getelementptr inbounds %struct.Material*, %struct.Material** %16, i64 %idxprom12, !dbg !3799
  store %struct.Material* null, %struct.Material** %arrayidx13, align 8, !dbg !3802
  br label %for.inc, !dbg !3803

for.inc:                                          ; preds = %if.end10
  %18 = load i32, i32* %a, align 4, !dbg !3804
  %inc = add nsw i32 %18, 1, !dbg !3804
  store i32 %inc, i32* %a, align 4, !dbg !3804
  br label %for.cond, !dbg !3805, !llvm.loop !3806

for.end:                                          ; preds = %for.cond
  br label %if.end14, !dbg !3808

if.end14:                                         ; preds = %for.end, %if.end
  %19 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3809
  %key = getelementptr inbounds %struct.Mesh, %struct.Mesh* %19, i32 0, i32 4, !dbg !3811
  %20 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !3811
  %tobool15 = icmp ne %struct.Key* %20, null, !dbg !3809
  br i1 %tobool15, label %if.then16, label %if.end21, !dbg !3812

if.then16:                                        ; preds = %if.end14
  %21 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3813
  %key17 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %21, i32 0, i32 4, !dbg !3815
  %22 = load %struct.Key*, %struct.Key** %key17, align 8, !dbg !3815
  %id18 = getelementptr inbounds %struct.Key, %struct.Key* %22, i32 0, i32 0, !dbg !3816
  %us19 = getelementptr inbounds %struct.ID, %struct.ID* %id18, i32 0, i32 6, !dbg !3817
  %23 = load i32, i32* %us19, align 4, !dbg !3818
  %dec20 = add nsw i32 %23, -1, !dbg !3818
  store i32 %dec20, i32* %us19, align 4, !dbg !3818
  br label %if.end21, !dbg !3819

if.end21:                                         ; preds = %if.then16, %if.end14
  %24 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3820
  %key22 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %24, i32 0, i32 4, !dbg !3821
  store %struct.Key* null, %struct.Key** %key22, align 8, !dbg !3822
  %25 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3823
  %texcomesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %25, i32 0, i32 19, !dbg !3825
  %26 = load %struct.Mesh*, %struct.Mesh** %texcomesh, align 8, !dbg !3825
  %tobool23 = icmp ne %struct.Mesh* %26, null, !dbg !3823
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !3826

if.then24:                                        ; preds = %if.end21
  %27 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3827
  %texcomesh25 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %27, i32 0, i32 19, !dbg !3828
  store %struct.Mesh* null, %struct.Mesh** %texcomesh25, align 8, !dbg !3829
  br label %if.end26, !dbg !3827

if.end26:                                         ; preds = %if.then, %if.then24, %if.end21
  ret void, !dbg !3830
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_free(%struct.Mesh* %me, i32 %unlink) #0 !dbg !3831 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %unlink.addr = alloca i32, align 4
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !3834, metadata !DIExpression()), !dbg !3835
  store i32 %unlink, i32* %unlink.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %unlink.addr, metadata !3836, metadata !DIExpression()), !dbg !3837
  %0 = load i32, i32* %unlink.addr, align 4, !dbg !3838
  %tobool = icmp ne i32 %0, 0, !dbg !3838
  br i1 %tobool, label %if.then, label %if.end, !dbg !3840

if.then:                                          ; preds = %entry
  %1 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3841
  call void @BKE_mesh_unlink(%struct.Mesh* %1), !dbg !3842
  br label %if.end, !dbg !3842

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3843
  %vdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 21, !dbg !3844
  %3 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3845
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 26, !dbg !3846
  %4 = load i32, i32* %totvert, align 8, !dbg !3846
  call void @CustomData_free(%struct.CustomData* %vdata, i32 %4), !dbg !3847
  %5 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3848
  %edata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 22, !dbg !3849
  %6 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3850
  %totedge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 27, !dbg !3851
  %7 = load i32, i32* %totedge, align 4, !dbg !3851
  call void @CustomData_free(%struct.CustomData* %edata, i32 %7), !dbg !3852
  %8 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3853
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 23, !dbg !3854
  %9 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3855
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 28, !dbg !3856
  %10 = load i32, i32* %totface, align 8, !dbg !3856
  call void @CustomData_free(%struct.CustomData* %fdata, i32 %10), !dbg !3857
  %11 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3858
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 25, !dbg !3859
  %12 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3860
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 31, !dbg !3861
  %13 = load i32, i32* %totloop, align 4, !dbg !3861
  call void @CustomData_free(%struct.CustomData* %ldata, i32 %13), !dbg !3862
  %14 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3863
  %pdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 24, !dbg !3864
  %15 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3865
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %15, i32 0, i32 30, !dbg !3866
  %16 = load i32, i32* %totpoly, align 8, !dbg !3866
  call void @CustomData_free(%struct.CustomData* %pdata, i32 %16), !dbg !3867
  %17 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3868
  %adt = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 1, !dbg !3870
  %18 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3870
  %tobool1 = icmp ne %struct.AnimData* %18, null, !dbg !3868
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !3871

if.then2:                                         ; preds = %if.end
  %19 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3872
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %19, i32 0, i32 0, !dbg !3874
  call void @BKE_free_animdata(%struct.ID* %id), !dbg !3875
  %20 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3876
  %adt3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %20, i32 0, i32 1, !dbg !3877
  store %struct.AnimData* null, %struct.AnimData** %adt3, align 8, !dbg !3878
  br label %if.end4, !dbg !3879

if.end4:                                          ; preds = %if.then2, %if.end
  %21 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3880
  %mat = getelementptr inbounds %struct.Mesh, %struct.Mesh* %21, i32 0, i32 5, !dbg !3882
  %22 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !3882
  %tobool5 = icmp ne %struct.Material** %22, null, !dbg !3880
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !3883

if.then6:                                         ; preds = %if.end4
  %23 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3884
  %24 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3885
  %mat7 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %24, i32 0, i32 5, !dbg !3886
  %25 = load %struct.Material**, %struct.Material*** %mat7, align 8, !dbg !3886
  %26 = bitcast %struct.Material** %25 to i8*, !dbg !3885
  call void %23(i8* %26), !dbg !3884
  br label %if.end8, !dbg !3884

if.end8:                                          ; preds = %if.then6, %if.end4
  %27 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3887
  %bb = getelementptr inbounds %struct.Mesh, %struct.Mesh* %27, i32 0, i32 2, !dbg !3889
  %28 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !3889
  %tobool9 = icmp ne %struct.BoundBox* %28, null, !dbg !3887
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !3890

if.then10:                                        ; preds = %if.end8
  %29 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3891
  %30 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3892
  %bb11 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %30, i32 0, i32 2, !dbg !3893
  %31 = load %struct.BoundBox*, %struct.BoundBox** %bb11, align 8, !dbg !3893
  %32 = bitcast %struct.BoundBox* %31 to i8*, !dbg !3892
  call void %29(i8* %32), !dbg !3891
  br label %if.end12, !dbg !3891

if.end12:                                         ; preds = %if.then10, %if.end8
  %33 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3894
  %mselect = getelementptr inbounds %struct.Mesh, %struct.Mesh* %33, i32 0, i32 6, !dbg !3896
  %34 = load %struct.MSelect*, %struct.MSelect** %mselect, align 8, !dbg !3896
  %tobool13 = icmp ne %struct.MSelect* %34, null, !dbg !3894
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !3897

if.then14:                                        ; preds = %if.end12
  %35 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3898
  %36 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3899
  %mselect15 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %36, i32 0, i32 6, !dbg !3900
  %37 = load %struct.MSelect*, %struct.MSelect** %mselect15, align 8, !dbg !3900
  %38 = bitcast %struct.MSelect* %37 to i8*, !dbg !3899
  call void %35(i8* %38), !dbg !3898
  br label %if.end16, !dbg !3898

if.end16:                                         ; preds = %if.then14, %if.end12
  %39 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3901
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %39, i32 0, i32 20, !dbg !3903
  %40 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !3903
  %tobool17 = icmp ne %struct.BMEditMesh* %40, null, !dbg !3901
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !3904

if.then18:                                        ; preds = %if.end16
  %41 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3905
  %42 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3906
  %edit_btmesh19 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %42, i32 0, i32 20, !dbg !3907
  %43 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh19, align 8, !dbg !3907
  %44 = bitcast %struct.BMEditMesh* %43 to i8*, !dbg !3906
  call void %41(i8* %44), !dbg !3905
  br label %if.end20, !dbg !3905

if.end20:                                         ; preds = %if.then18, %if.end16
  ret void, !dbg !3908
}

declare dso_local void @CustomData_free(%struct.CustomData*, i32) #2

declare dso_local void @BKE_free_animdata(%struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Mesh* @BKE_mesh_add(%struct.Main* %bmain, i8* %name) #0 !dbg !3909 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %name.addr = alloca i8*, align 8
  %me = alloca %struct.Mesh*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !3976, metadata !DIExpression()), !dbg !3977
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3978, metadata !DIExpression()), !dbg !3979
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !3980, metadata !DIExpression()), !dbg !3981
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !3982
  %1 = load i8*, i8** %name.addr, align 8, !dbg !3983
  %call = call i8* @BKE_libblock_alloc(%struct.Main* %0, i16 signext 17741, i8* %1), !dbg !3984
  %2 = bitcast i8* %call to %struct.Mesh*, !dbg !3984
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !3985
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3986
  %size = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 34, !dbg !3987
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !3986
  store float 1.000000e+00, float* %arrayidx, align 8, !dbg !3988
  %4 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3989
  %size1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 34, !dbg !3990
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %size1, i64 0, i64 1, !dbg !3989
  store float 1.000000e+00, float* %arrayidx2, align 4, !dbg !3991
  %5 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3992
  %size3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 34, !dbg !3993
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %size3, i64 0, i64 0, !dbg !3992
  store float 1.000000e+00, float* %arrayidx4, align 8, !dbg !3994
  %6 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3995
  %smoothresh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 39, !dbg !3996
  store float 3.000000e+01, float* %smoothresh, align 8, !dbg !3997
  %7 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3998
  %texflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 37, !dbg !3999
  store i16 1, i16* %texflag, align 4, !dbg !4000
  %8 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4001
  %drawflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 36, !dbg !4002
  store i32 67, i32* %drawflag, align 8, !dbg !4003
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4004
  %vdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 21, !dbg !4005
  call void @CustomData_reset(%struct.CustomData* %vdata), !dbg !4006
  %10 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4007
  %edata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 22, !dbg !4008
  call void @CustomData_reset(%struct.CustomData* %edata), !dbg !4009
  %11 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4010
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 23, !dbg !4011
  call void @CustomData_reset(%struct.CustomData* %fdata), !dbg !4012
  %12 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4013
  %pdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 24, !dbg !4014
  call void @CustomData_reset(%struct.CustomData* %pdata), !dbg !4015
  %13 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4016
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %13, i32 0, i32 25, !dbg !4017
  call void @CustomData_reset(%struct.CustomData* %ldata), !dbg !4018
  %14 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4019
  ret %struct.Mesh* %14, !dbg !4020
}

declare dso_local i8* @BKE_libblock_alloc(%struct.Main*, i16 signext, i8*) #2

declare dso_local void @CustomData_reset(%struct.CustomData*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Mesh* @BKE_mesh_copy_ex(%struct.Main* %bmain, %struct.Mesh* %me) #0 !dbg !4021 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %me.addr = alloca %struct.Mesh*, align 8
  %men = alloca %struct.Mesh*, align 8
  %tface = alloca %struct.MTFace*, align 8
  %txface = alloca %struct.MTexPoly*, align 8
  %a = alloca i32, align 4
  %i = alloca i32, align 4
  %do_tessface = alloca i32, align 4
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !4024, metadata !DIExpression()), !dbg !4025
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !4026, metadata !DIExpression()), !dbg !4027
  call void @llvm.dbg.declare(metadata %struct.Mesh** %men, metadata !4028, metadata !DIExpression()), !dbg !4029
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tface, metadata !4030, metadata !DIExpression()), !dbg !4031
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %txface, metadata !4032, metadata !DIExpression()), !dbg !4033
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4034, metadata !DIExpression()), !dbg !4035
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4036, metadata !DIExpression()), !dbg !4037
  call void @llvm.dbg.declare(metadata i32* %do_tessface, metadata !4038, metadata !DIExpression()), !dbg !4040
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4041
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 28, !dbg !4042
  %1 = load i32, i32* %totface, align 8, !dbg !4042
  %cmp = icmp ne i32 %1, 0, !dbg !4043
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4044

land.rhs:                                         ; preds = %entry
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4045
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 30, !dbg !4046
  %3 = load i32, i32* %totpoly, align 8, !dbg !4046
  %cmp1 = icmp eq i32 %3, 0, !dbg !4047
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !4048
  %land.ext = zext i1 %4 to i32, !dbg !4044
  store i32 %land.ext, i32* %do_tessface, align 4, !dbg !4040
  %5 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4049
  %6 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4050
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 0, !dbg !4051
  %call = call i8* @BKE_libblock_copy_ex(%struct.Main* %5, %struct.ID* %id), !dbg !4052
  %7 = bitcast i8* %call to %struct.Mesh*, !dbg !4052
  store %struct.Mesh* %7, %struct.Mesh** %men, align 8, !dbg !4053
  %8 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !4054
  %9 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4055
  %mat = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 5, !dbg !4056
  %10 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !4056
  %11 = bitcast %struct.Material** %10 to i8*, !dbg !4055
  %call2 = call i8* %8(i8* %11), !dbg !4054
  %12 = bitcast i8* %call2 to %struct.Material**, !dbg !4054
  %13 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4057
  %mat3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %13, i32 0, i32 5, !dbg !4058
  store %struct.Material** %12, %struct.Material*** %mat3, align 8, !dbg !4059
  store i32 0, i32* %a, align 4, !dbg !4060
  br label %for.cond, !dbg !4062

for.cond:                                         ; preds = %for.inc, %land.end
  %14 = load i32, i32* %a, align 4, !dbg !4063
  %15 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4065
  %totcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %15, i32 0, i32 47, !dbg !4066
  %16 = load i16, i16* %totcol, align 2, !dbg !4066
  %conv = sext i16 %16 to i32, !dbg !4065
  %cmp4 = icmp slt i32 %14, %conv, !dbg !4067
  br i1 %cmp4, label %for.body, label %for.end, !dbg !4068

for.body:                                         ; preds = %for.cond
  %17 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4069
  %mat6 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 5, !dbg !4071
  %18 = load %struct.Material**, %struct.Material*** %mat6, align 8, !dbg !4071
  %19 = load i32, i32* %a, align 4, !dbg !4072
  %idxprom = sext i32 %19 to i64, !dbg !4069
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %18, i64 %idxprom, !dbg !4069
  %20 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !4069
  %21 = bitcast %struct.Material* %20 to %struct.ID*, !dbg !4073
  call void @id_us_plus(%struct.ID* %21), !dbg !4074
  br label %for.inc, !dbg !4075

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %a, align 4, !dbg !4076
  %inc = add nsw i32 %22, 1, !dbg !4076
  store i32 %inc, i32* %a, align 4, !dbg !4076
  br label %for.cond, !dbg !4077, !llvm.loop !4078

for.end:                                          ; preds = %for.cond
  %23 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4080
  %texcomesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %23, i32 0, i32 19, !dbg !4081
  %24 = load %struct.Mesh*, %struct.Mesh** %texcomesh, align 8, !dbg !4081
  %25 = bitcast %struct.Mesh* %24 to %struct.ID*, !dbg !4082
  call void @id_us_plus(%struct.ID* %25), !dbg !4083
  %26 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4084
  %vdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %26, i32 0, i32 21, !dbg !4085
  %27 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4086
  %vdata7 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %27, i32 0, i32 21, !dbg !4087
  %28 = load i64, i64* @CD_MASK_MESH, align 8, !dbg !4088
  %29 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4089
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %29, i32 0, i32 26, !dbg !4090
  %30 = load i32, i32* %totvert, align 8, !dbg !4090
  call void @CustomData_copy(%struct.CustomData* %vdata, %struct.CustomData* %vdata7, i64 %28, i32 4, i32 %30), !dbg !4091
  %31 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4092
  %edata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %31, i32 0, i32 22, !dbg !4093
  %32 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4094
  %edata8 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %32, i32 0, i32 22, !dbg !4095
  %33 = load i64, i64* @CD_MASK_MESH, align 8, !dbg !4096
  %34 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4097
  %totedge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %34, i32 0, i32 27, !dbg !4098
  %35 = load i32, i32* %totedge, align 4, !dbg !4098
  call void @CustomData_copy(%struct.CustomData* %edata, %struct.CustomData* %edata8, i64 %33, i32 4, i32 %35), !dbg !4099
  %36 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4100
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %36, i32 0, i32 25, !dbg !4101
  %37 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4102
  %ldata9 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %37, i32 0, i32 25, !dbg !4103
  %38 = load i64, i64* @CD_MASK_MESH, align 8, !dbg !4104
  %39 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4105
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %39, i32 0, i32 31, !dbg !4106
  %40 = load i32, i32* %totloop, align 4, !dbg !4106
  call void @CustomData_copy(%struct.CustomData* %ldata, %struct.CustomData* %ldata9, i64 %38, i32 4, i32 %40), !dbg !4107
  %41 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4108
  %pdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %41, i32 0, i32 24, !dbg !4109
  %42 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4110
  %pdata10 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %42, i32 0, i32 24, !dbg !4111
  %43 = load i64, i64* @CD_MASK_MESH, align 8, !dbg !4112
  %44 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4113
  %totpoly11 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %44, i32 0, i32 30, !dbg !4114
  %45 = load i32, i32* %totpoly11, align 8, !dbg !4114
  call void @CustomData_copy(%struct.CustomData* %pdata, %struct.CustomData* %pdata10, i64 %43, i32 4, i32 %45), !dbg !4115
  %46 = load i32, i32* %do_tessface, align 4, !dbg !4116
  %tobool = icmp ne i32 %46, 0, !dbg !4116
  br i1 %tobool, label %if.then, label %if.else, !dbg !4118

if.then:                                          ; preds = %for.end
  %47 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4119
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %47, i32 0, i32 23, !dbg !4121
  %48 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4122
  %fdata12 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %48, i32 0, i32 23, !dbg !4123
  %49 = load i64, i64* @CD_MASK_MESH, align 8, !dbg !4124
  %50 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4125
  %totface13 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %50, i32 0, i32 28, !dbg !4126
  %51 = load i32, i32* %totface13, align 8, !dbg !4126
  call void @CustomData_copy(%struct.CustomData* %fdata, %struct.CustomData* %fdata12, i64 %49, i32 4, i32 %51), !dbg !4127
  br label %if.end, !dbg !4128

if.else:                                          ; preds = %for.end
  %52 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4129
  call void @mesh_tessface_clear_intern(%struct.Mesh* %52, i32 0), !dbg !4131
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %53 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4132
  %54 = load i32, i32* %do_tessface, align 4, !dbg !4133
  %conv14 = trunc i32 %54 to i8, !dbg !4133
  call void @BKE_mesh_update_customdata_pointers(%struct.Mesh* %53, i8 zeroext %conv14), !dbg !4134
  store i32 0, i32* %i, align 4, !dbg !4135
  br label %for.cond15, !dbg !4137

for.cond15:                                       ; preds = %for.inc43, %if.end
  %55 = load i32, i32* %i, align 4, !dbg !4138
  %56 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4140
  %fdata16 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %56, i32 0, i32 23, !dbg !4141
  %totlayer = getelementptr inbounds %struct.CustomData, %struct.CustomData* %fdata16, i32 0, i32 2, !dbg !4142
  %57 = load i32, i32* %totlayer, align 4, !dbg !4142
  %cmp17 = icmp slt i32 %55, %57, !dbg !4143
  br i1 %cmp17, label %for.body19, label %for.end45, !dbg !4144

for.body19:                                       ; preds = %for.cond15
  %58 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4145
  %fdata20 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %58, i32 0, i32 23, !dbg !4148
  %layers = getelementptr inbounds %struct.CustomData, %struct.CustomData* %fdata20, i32 0, i32 0, !dbg !4149
  %59 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers, align 8, !dbg !4149
  %60 = load i32, i32* %i, align 4, !dbg !4150
  %idxprom21 = sext i32 %60 to i64, !dbg !4145
  %arrayidx22 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %59, i64 %idxprom21, !dbg !4145
  %type = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx22, i32 0, i32 0, !dbg !4151
  %61 = load i32, i32* %type, align 8, !dbg !4151
  %cmp23 = icmp eq i32 %61, 5, !dbg !4152
  br i1 %cmp23, label %if.then25, label %if.end42, !dbg !4153

if.then25:                                        ; preds = %for.body19
  %62 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4154
  %fdata26 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %62, i32 0, i32 23, !dbg !4156
  %layers27 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %fdata26, i32 0, i32 0, !dbg !4157
  %63 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers27, align 8, !dbg !4157
  %64 = load i32, i32* %i, align 4, !dbg !4158
  %idxprom28 = sext i32 %64 to i64, !dbg !4154
  %arrayidx29 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %63, i64 %idxprom28, !dbg !4154
  %data = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx29, i32 0, i32 9, !dbg !4159
  %65 = load i8*, i8** %data, align 8, !dbg !4159
  %66 = bitcast i8* %65 to %struct.MTFace*, !dbg !4160
  store %struct.MTFace* %66, %struct.MTFace** %tface, align 8, !dbg !4161
  store i32 0, i32* %a, align 4, !dbg !4162
  br label %for.cond30, !dbg !4164

for.cond30:                                       ; preds = %for.inc39, %if.then25
  %67 = load i32, i32* %a, align 4, !dbg !4165
  %68 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4167
  %totface31 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %68, i32 0, i32 28, !dbg !4168
  %69 = load i32, i32* %totface31, align 8, !dbg !4168
  %cmp32 = icmp slt i32 %67, %69, !dbg !4169
  br i1 %cmp32, label %for.body34, label %for.end41, !dbg !4170

for.body34:                                       ; preds = %for.cond30
  %70 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !4171
  %tpage = getelementptr inbounds %struct.MTFace, %struct.MTFace* %70, i32 0, i32 1, !dbg !4173
  %71 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !4173
  %tobool35 = icmp ne %struct.Image* %71, null, !dbg !4171
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !4174

if.then36:                                        ; preds = %for.body34
  %72 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !4175
  %tpage37 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %72, i32 0, i32 1, !dbg !4176
  %73 = load %struct.Image*, %struct.Image** %tpage37, align 8, !dbg !4176
  %74 = bitcast %struct.Image* %73 to %struct.ID*, !dbg !4177
  call void @id_lib_extern(%struct.ID* %74), !dbg !4178
  br label %if.end38, !dbg !4178

if.end38:                                         ; preds = %if.then36, %for.body34
  br label %for.inc39, !dbg !4173

for.inc39:                                        ; preds = %if.end38
  %75 = load i32, i32* %a, align 4, !dbg !4179
  %inc40 = add nsw i32 %75, 1, !dbg !4179
  store i32 %inc40, i32* %a, align 4, !dbg !4179
  %76 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !4180
  %incdec.ptr = getelementptr inbounds %struct.MTFace, %struct.MTFace* %76, i32 1, !dbg !4180
  store %struct.MTFace* %incdec.ptr, %struct.MTFace** %tface, align 8, !dbg !4180
  br label %for.cond30, !dbg !4181, !llvm.loop !4182

for.end41:                                        ; preds = %for.cond30
  br label %if.end42, !dbg !4184

if.end42:                                         ; preds = %for.end41, %for.body19
  br label %for.inc43, !dbg !4185

for.inc43:                                        ; preds = %if.end42
  %77 = load i32, i32* %i, align 4, !dbg !4186
  %inc44 = add nsw i32 %77, 1, !dbg !4186
  store i32 %inc44, i32* %i, align 4, !dbg !4186
  br label %for.cond15, !dbg !4187, !llvm.loop !4188

for.end45:                                        ; preds = %for.cond15
  store i32 0, i32* %i, align 4, !dbg !4190
  br label %for.cond46, !dbg !4192

for.cond46:                                       ; preds = %for.inc80, %for.end45
  %78 = load i32, i32* %i, align 4, !dbg !4193
  %79 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4195
  %pdata47 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %79, i32 0, i32 24, !dbg !4196
  %totlayer48 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %pdata47, i32 0, i32 2, !dbg !4197
  %80 = load i32, i32* %totlayer48, align 4, !dbg !4197
  %cmp49 = icmp slt i32 %78, %80, !dbg !4198
  br i1 %cmp49, label %for.body51, label %for.end82, !dbg !4199

for.body51:                                       ; preds = %for.cond46
  %81 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4200
  %pdata52 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %81, i32 0, i32 24, !dbg !4203
  %layers53 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %pdata52, i32 0, i32 0, !dbg !4204
  %82 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers53, align 8, !dbg !4204
  %83 = load i32, i32* %i, align 4, !dbg !4205
  %idxprom54 = sext i32 %83 to i64, !dbg !4200
  %arrayidx55 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %82, i64 %idxprom54, !dbg !4200
  %type56 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx55, i32 0, i32 0, !dbg !4206
  %84 = load i32, i32* %type56, align 8, !dbg !4206
  %cmp57 = icmp eq i32 %84, 15, !dbg !4207
  br i1 %cmp57, label %if.then59, label %if.end79, !dbg !4208

if.then59:                                        ; preds = %for.body51
  %85 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4209
  %pdata60 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %85, i32 0, i32 24, !dbg !4211
  %layers61 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %pdata60, i32 0, i32 0, !dbg !4212
  %86 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers61, align 8, !dbg !4212
  %87 = load i32, i32* %i, align 4, !dbg !4213
  %idxprom62 = sext i32 %87 to i64, !dbg !4209
  %arrayidx63 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %86, i64 %idxprom62, !dbg !4209
  %data64 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx63, i32 0, i32 9, !dbg !4214
  %88 = load i8*, i8** %data64, align 8, !dbg !4214
  %89 = bitcast i8* %88 to %struct.MTexPoly*, !dbg !4215
  store %struct.MTexPoly* %89, %struct.MTexPoly** %txface, align 8, !dbg !4216
  store i32 0, i32* %a, align 4, !dbg !4217
  br label %for.cond65, !dbg !4219

for.cond65:                                       ; preds = %for.inc75, %if.then59
  %90 = load i32, i32* %a, align 4, !dbg !4220
  %91 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4222
  %totpoly66 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %91, i32 0, i32 30, !dbg !4223
  %92 = load i32, i32* %totpoly66, align 8, !dbg !4223
  %cmp67 = icmp slt i32 %90, %92, !dbg !4224
  br i1 %cmp67, label %for.body69, label %for.end78, !dbg !4225

for.body69:                                       ; preds = %for.cond65
  %93 = load %struct.MTexPoly*, %struct.MTexPoly** %txface, align 8, !dbg !4226
  %tpage70 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %93, i32 0, i32 0, !dbg !4228
  %94 = load %struct.Image*, %struct.Image** %tpage70, align 8, !dbg !4228
  %tobool71 = icmp ne %struct.Image* %94, null, !dbg !4226
  br i1 %tobool71, label %if.then72, label %if.end74, !dbg !4229

if.then72:                                        ; preds = %for.body69
  %95 = load %struct.MTexPoly*, %struct.MTexPoly** %txface, align 8, !dbg !4230
  %tpage73 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %95, i32 0, i32 0, !dbg !4231
  %96 = load %struct.Image*, %struct.Image** %tpage73, align 8, !dbg !4231
  %97 = bitcast %struct.Image* %96 to %struct.ID*, !dbg !4232
  call void @id_lib_extern(%struct.ID* %97), !dbg !4233
  br label %if.end74, !dbg !4233

if.end74:                                         ; preds = %if.then72, %for.body69
  br label %for.inc75, !dbg !4228

for.inc75:                                        ; preds = %if.end74
  %98 = load i32, i32* %a, align 4, !dbg !4234
  %inc76 = add nsw i32 %98, 1, !dbg !4234
  store i32 %inc76, i32* %a, align 4, !dbg !4234
  %99 = load %struct.MTexPoly*, %struct.MTexPoly** %txface, align 8, !dbg !4235
  %incdec.ptr77 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %99, i32 1, !dbg !4235
  store %struct.MTexPoly* %incdec.ptr77, %struct.MTexPoly** %txface, align 8, !dbg !4235
  br label %for.cond65, !dbg !4236, !llvm.loop !4237

for.end78:                                        ; preds = %for.cond65
  br label %if.end79, !dbg !4239

if.end79:                                         ; preds = %for.end78, %for.body51
  br label %for.inc80, !dbg !4240

for.inc80:                                        ; preds = %if.end79
  %100 = load i32, i32* %i, align 4, !dbg !4241
  %inc81 = add nsw i32 %100, 1, !dbg !4241
  store i32 %inc81, i32* %i, align 4, !dbg !4241
  br label %for.cond46, !dbg !4242, !llvm.loop !4243

for.end82:                                        ; preds = %for.cond46
  %101 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4245
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %101, i32 0, i32 20, !dbg !4246
  store %struct.BMEditMesh* null, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !4247
  %102 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !4248
  %103 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4249
  %mselect = getelementptr inbounds %struct.Mesh, %struct.Mesh* %103, i32 0, i32 6, !dbg !4250
  %104 = load %struct.MSelect*, %struct.MSelect** %mselect, align 8, !dbg !4250
  %105 = bitcast %struct.MSelect* %104 to i8*, !dbg !4249
  %call83 = call i8* %102(i8* %105), !dbg !4248
  %106 = bitcast i8* %call83 to %struct.MSelect*, !dbg !4248
  %107 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4251
  %mselect84 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %107, i32 0, i32 6, !dbg !4252
  store %struct.MSelect* %106, %struct.MSelect** %mselect84, align 8, !dbg !4253
  %108 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !4254
  %109 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4255
  %bb = getelementptr inbounds %struct.Mesh, %struct.Mesh* %109, i32 0, i32 2, !dbg !4256
  %110 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !4256
  %111 = bitcast %struct.BoundBox* %110 to i8*, !dbg !4255
  %call85 = call i8* %108(i8* %111), !dbg !4254
  %112 = bitcast i8* %call85 to %struct.BoundBox*, !dbg !4254
  %113 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4257
  %bb86 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %113, i32 0, i32 2, !dbg !4258
  store %struct.BoundBox* %112, %struct.BoundBox** %bb86, align 8, !dbg !4259
  %114 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4260
  %key = getelementptr inbounds %struct.Mesh, %struct.Mesh* %114, i32 0, i32 4, !dbg !4261
  %115 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !4261
  %call87 = call %struct.Key* @BKE_key_copy(%struct.Key* %115), !dbg !4262
  %116 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4263
  %key88 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %116, i32 0, i32 4, !dbg !4264
  store %struct.Key* %call87, %struct.Key** %key88, align 8, !dbg !4265
  %117 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4266
  %key89 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %117, i32 0, i32 4, !dbg !4268
  %118 = load %struct.Key*, %struct.Key** %key89, align 8, !dbg !4268
  %tobool90 = icmp ne %struct.Key* %118, null, !dbg !4266
  br i1 %tobool90, label %if.then91, label %if.end93, !dbg !4269

if.then91:                                        ; preds = %for.end82
  %119 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4270
  %120 = bitcast %struct.Mesh* %119 to %struct.ID*, !dbg !4271
  %121 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4272
  %key92 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %121, i32 0, i32 4, !dbg !4273
  %122 = load %struct.Key*, %struct.Key** %key92, align 8, !dbg !4273
  %from = getelementptr inbounds %struct.Key, %struct.Key* %122, i32 0, i32 8, !dbg !4274
  store %struct.ID* %120, %struct.ID** %from, align 8, !dbg !4275
  br label %if.end93, !dbg !4272

if.end93:                                         ; preds = %if.then91, %for.end82
  %123 = load %struct.Mesh*, %struct.Mesh** %men, align 8, !dbg !4276
  ret %struct.Mesh* %123, !dbg !4277
}

declare dso_local i8* @BKE_libblock_copy_ex(%struct.Main*, %struct.ID*) #2

declare dso_local void @id_us_plus(%struct.ID*) #2

declare dso_local void @CustomData_copy(%struct.CustomData*, %struct.CustomData*, i64, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mesh_tessface_clear_intern(%struct.Mesh* %mesh, i32 %free_customdata) #0 !dbg !4278 {
entry:
  %mesh.addr = alloca %struct.Mesh*, align 8
  %free_customdata.addr = alloca i32, align 4
  store %struct.Mesh* %mesh, %struct.Mesh** %mesh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %mesh.addr, metadata !4279, metadata !DIExpression()), !dbg !4280
  store i32 %free_customdata, i32* %free_customdata.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %free_customdata.addr, metadata !4281, metadata !DIExpression()), !dbg !4282
  %0 = load i32, i32* %free_customdata.addr, align 4, !dbg !4283
  %tobool = icmp ne i32 %0, 0, !dbg !4283
  br i1 %tobool, label %if.then, label %if.else, !dbg !4285

if.then:                                          ; preds = %entry
  %1 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !4286
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %1, i32 0, i32 23, !dbg !4288
  %2 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !4289
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 28, !dbg !4290
  %3 = load i32, i32* %totface, align 8, !dbg !4290
  call void @CustomData_free(%struct.CustomData* %fdata, i32 %3), !dbg !4291
  br label %if.end, !dbg !4292

if.else:                                          ; preds = %entry
  %4 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !4293
  %fdata1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 23, !dbg !4295
  call void @CustomData_reset(%struct.CustomData* %fdata1), !dbg !4296
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !4297
  %mface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 12, !dbg !4298
  store %struct.MFace* null, %struct.MFace** %mface, align 8, !dbg !4299
  %6 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !4300
  %mtface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 13, !dbg !4301
  store %struct.MTFace* null, %struct.MTFace** %mtface, align 8, !dbg !4302
  %7 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !4303
  %mcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 18, !dbg !4304
  store %struct.MCol* null, %struct.MCol** %mcol, align 8, !dbg !4305
  %8 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !4306
  %totface2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 28, !dbg !4307
  store i32 0, i32* %totface2, align 8, !dbg !4308
  ret void, !dbg !4309
}

declare dso_local void @id_lib_extern(%struct.ID*) #2

declare dso_local %struct.Key* @BKE_key_copy(%struct.Key*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Mesh* @BKE_mesh_copy(%struct.Mesh* %me) #0 !dbg !4310 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !4313, metadata !DIExpression()), !dbg !4314
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !4315
  %1 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4316
  %call = call %struct.Mesh* @BKE_mesh_copy_ex(%struct.Main* %0, %struct.Mesh* %1), !dbg !4317
  ret %struct.Mesh* %call, !dbg !4318
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.BMesh* @BKE_mesh_to_bmesh(%struct.Mesh* %me, %struct.Object* %ob) #0 !dbg !4319 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %allocsize = alloca %struct.BMAllocTemplate, align 4
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !4324, metadata !DIExpression()), !dbg !4325
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4326, metadata !DIExpression()), !dbg !4327
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !4328, metadata !DIExpression()), !dbg !4329
  call void @llvm.dbg.declare(metadata %struct.BMAllocTemplate* %allocsize, metadata !4330, metadata !DIExpression()), !dbg !4340
  %totvert = getelementptr inbounds %struct.BMAllocTemplate, %struct.BMAllocTemplate* %allocsize, i32 0, i32 0, !dbg !4341
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4341
  %totvert1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 26, !dbg !4341
  %1 = load i32, i32* %totvert1, align 8, !dbg !4341
  store i32 %1, i32* %totvert, align 4, !dbg !4341
  %totedge = getelementptr inbounds %struct.BMAllocTemplate, %struct.BMAllocTemplate* %allocsize, i32 0, i32 1, !dbg !4341
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4341
  %totedge2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 27, !dbg !4341
  %3 = load i32, i32* %totedge2, align 4, !dbg !4341
  store i32 %3, i32* %totedge, align 4, !dbg !4341
  %totloop = getelementptr inbounds %struct.BMAllocTemplate, %struct.BMAllocTemplate* %allocsize, i32 0, i32 2, !dbg !4341
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4341
  %totloop3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 31, !dbg !4341
  %5 = load i32, i32* %totloop3, align 4, !dbg !4341
  store i32 %5, i32* %totloop, align 4, !dbg !4341
  %totface = getelementptr inbounds %struct.BMAllocTemplate, %struct.BMAllocTemplate* %allocsize, i32 0, i32 3, !dbg !4341
  %6 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4341
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 30, !dbg !4341
  %7 = load i32, i32* %totpoly, align 8, !dbg !4341
  store i32 %7, i32* %totface, align 4, !dbg !4341
  %call = call %struct.BMesh* @BM_mesh_create(%struct.BMAllocTemplate* %allocsize), !dbg !4342
  store %struct.BMesh* %call, %struct.BMesh** %bm, align 8, !dbg !4343
  %8 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4344
  %9 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4345
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4346
  %shapenr = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 115, !dbg !4347
  %11 = load i16, i16* %shapenr, align 2, !dbg !4347
  %conv = sext i16 %11 to i32, !dbg !4346
  call void @BM_mesh_bm_from_me(%struct.BMesh* %8, %struct.Mesh* %9, i8 zeroext 0, i8 zeroext 1, i32 %conv), !dbg !4348
  %12 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4349
  ret %struct.BMesh* %12, !dbg !4350
}

declare dso_local %struct.BMesh* @BM_mesh_create(%struct.BMAllocTemplate*) #2

declare dso_local void @BM_mesh_bm_from_me(%struct.BMesh*, %struct.Mesh*, i8 zeroext, i8 zeroext, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_make_local(%struct.Mesh* %me) #0 !dbg !4351 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %bmain = alloca %struct.Main*, align 8
  %ob = alloca %struct.Object*, align 8
  %is_local = alloca i8, align 1
  %is_lib = alloca i8, align 1
  %me_new = alloca %struct.Mesh*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !4352, metadata !DIExpression()), !dbg !4353
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !4354, metadata !DIExpression()), !dbg !4355
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !4356
  store %struct.Main* %0, %struct.Main** %bmain, align 8, !dbg !4355
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !4357, metadata !DIExpression()), !dbg !4358
  call void @llvm.dbg.declare(metadata i8* %is_local, metadata !4359, metadata !DIExpression()), !dbg !4360
  store i8 0, i8* %is_local, align 1, !dbg !4360
  call void @llvm.dbg.declare(metadata i8* %is_lib, metadata !4361, metadata !DIExpression()), !dbg !4362
  store i8 0, i8* %is_lib, align 1, !dbg !4362
  %1 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4363
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %1, i32 0, i32 0, !dbg !4365
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !4366
  %2 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !4366
  %cmp = icmp eq %struct.Library* %2, null, !dbg !4367
  br i1 %cmp, label %if.then, label %if.end, !dbg !4368

if.then:                                          ; preds = %entry
  br label %if.end61, !dbg !4369

if.end:                                           ; preds = %entry
  %3 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4370
  %id1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 0, !dbg !4372
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id1, i32 0, i32 6, !dbg !4373
  %4 = load i32, i32* %us, align 4, !dbg !4373
  %cmp2 = icmp eq i32 %4, 1, !dbg !4374
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !4375

if.then3:                                         ; preds = %if.end
  %5 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !4376
  %6 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4378
  %id4 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 0, !dbg !4379
  call void @id_clear_lib_data(%struct.Main* %5, %struct.ID* %id4), !dbg !4380
  %7 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4381
  call void @expand_local_mesh(%struct.Mesh* %7), !dbg !4382
  br label %if.end61, !dbg !4383

if.end5:                                          ; preds = %if.end
  %8 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !4384
  %object = getelementptr inbounds %struct.Main, %struct.Main* %8, i32 0, i32 13, !dbg !4386
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object, i32 0, i32 0, !dbg !4387
  %9 = load i8*, i8** %first, align 8, !dbg !4387
  %10 = bitcast i8* %9 to %struct.Object*, !dbg !4384
  store %struct.Object* %10, %struct.Object** %ob, align 8, !dbg !4388
  br label %for.cond, !dbg !4389

for.cond:                                         ; preds = %for.inc, %if.end5
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4390
  %tobool = icmp ne %struct.Object* %11, null, !dbg !4390
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !4392

land.rhs:                                         ; preds = %for.cond
  %12 = load i8, i8* %is_lib, align 1, !dbg !4393
  %conv = zext i8 %12 to i32, !dbg !4393
  %cmp6 = icmp eq i32 0, %conv, !dbg !4393
  br i1 %cmp6, label %lor.end, label %lor.rhs, !dbg !4393

lor.rhs:                                          ; preds = %land.rhs
  %13 = load i8, i8* %is_local, align 1, !dbg !4393
  %conv8 = zext i8 %13 to i32, !dbg !4393
  %cmp9 = icmp eq i32 0, %conv8, !dbg !4393
  br label %lor.end, !dbg !4393

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %14 = phi i1 [ true, %land.rhs ], [ %cmp9, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %for.cond
  %15 = phi i1 [ false, %for.cond ], [ %14, %lor.end ], !dbg !4394
  br i1 %15, label %for.body, label %for.end, !dbg !4395

for.body:                                         ; preds = %land.end
  %16 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4396
  %17 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4399
  %data = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 19, !dbg !4400
  %18 = load i8*, i8** %data, align 8, !dbg !4400
  %19 = bitcast i8* %18 to %struct.Mesh*, !dbg !4399
  %cmp11 = icmp eq %struct.Mesh* %16, %19, !dbg !4401
  br i1 %cmp11, label %if.then13, label %if.end19, !dbg !4402

if.then13:                                        ; preds = %for.body
  %20 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4403
  %id14 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 0, !dbg !4406
  %lib15 = getelementptr inbounds %struct.ID, %struct.ID* %id14, i32 0, i32 3, !dbg !4407
  %21 = load %struct.Library*, %struct.Library** %lib15, align 8, !dbg !4407
  %tobool16 = icmp ne %struct.Library* %21, null, !dbg !4403
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !4408

if.then17:                                        ; preds = %if.then13
  store i8 1, i8* %is_lib, align 1, !dbg !4409
  br label %if.end18, !dbg !4410

if.else:                                          ; preds = %if.then13
  store i8 1, i8* %is_local, align 1, !dbg !4411
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then17
  br label %if.end19, !dbg !4412

if.end19:                                         ; preds = %if.end18, %for.body
  br label %for.inc, !dbg !4413

for.inc:                                          ; preds = %if.end19
  %22 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4414
  %id20 = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 0, !dbg !4415
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id20, i32 0, i32 0, !dbg !4416
  %23 = load i8*, i8** %next, align 8, !dbg !4416
  %24 = bitcast i8* %23 to %struct.Object*, !dbg !4414
  store %struct.Object* %24, %struct.Object** %ob, align 8, !dbg !4417
  br label %for.cond, !dbg !4418, !llvm.loop !4419

for.end:                                          ; preds = %land.end
  %25 = load i8, i8* %is_local, align 1, !dbg !4421
  %conv21 = zext i8 %25 to i32, !dbg !4421
  %tobool22 = icmp ne i32 %conv21, 0, !dbg !4421
  br i1 %tobool22, label %land.lhs.true, label %if.else28, !dbg !4423

land.lhs.true:                                    ; preds = %for.end
  %26 = load i8, i8* %is_lib, align 1, !dbg !4424
  %conv23 = zext i8 %26 to i32, !dbg !4424
  %cmp24 = icmp eq i32 %conv23, 0, !dbg !4425
  br i1 %cmp24, label %if.then26, label %if.else28, !dbg !4426

if.then26:                                        ; preds = %land.lhs.true
  %27 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !4427
  %28 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4429
  %id27 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %28, i32 0, i32 0, !dbg !4430
  call void @id_clear_lib_data(%struct.Main* %27, %struct.ID* %id27), !dbg !4431
  %29 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4432
  call void @expand_local_mesh(%struct.Mesh* %29), !dbg !4433
  br label %if.end61, !dbg !4434

if.else28:                                        ; preds = %land.lhs.true, %for.end
  %30 = load i8, i8* %is_local, align 1, !dbg !4435
  %conv29 = zext i8 %30 to i32, !dbg !4435
  %tobool30 = icmp ne i32 %conv29, 0, !dbg !4435
  br i1 %tobool30, label %land.lhs.true31, label %if.end60, !dbg !4437

land.lhs.true31:                                  ; preds = %if.else28
  %31 = load i8, i8* %is_lib, align 1, !dbg !4438
  %conv32 = zext i8 %31 to i32, !dbg !4438
  %tobool33 = icmp ne i32 %conv32, 0, !dbg !4438
  br i1 %tobool33, label %if.then34, label %if.end60, !dbg !4439

if.then34:                                        ; preds = %land.lhs.true31
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me_new, metadata !4440, metadata !DIExpression()), !dbg !4442
  %32 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4443
  %call = call %struct.Mesh* @BKE_mesh_copy(%struct.Mesh* %32), !dbg !4444
  store %struct.Mesh* %call, %struct.Mesh** %me_new, align 8, !dbg !4442
  %33 = load %struct.Mesh*, %struct.Mesh** %me_new, align 8, !dbg !4445
  %id35 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %33, i32 0, i32 0, !dbg !4446
  %us36 = getelementptr inbounds %struct.ID, %struct.ID* %id35, i32 0, i32 6, !dbg !4447
  store i32 0, i32* %us36, align 4, !dbg !4448
  %34 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !4449
  %35 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4450
  %id37 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %35, i32 0, i32 0, !dbg !4451
  %lib38 = getelementptr inbounds %struct.ID, %struct.ID* %id37, i32 0, i32 3, !dbg !4452
  %36 = load %struct.Library*, %struct.Library** %lib38, align 8, !dbg !4452
  %37 = load %struct.Mesh*, %struct.Mesh** %me_new, align 8, !dbg !4453
  %id39 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %37, i32 0, i32 0, !dbg !4454
  call void @BKE_id_lib_local_paths(%struct.Main* %34, %struct.Library* %36, %struct.ID* %id39), !dbg !4455
  %38 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !4456
  %object40 = getelementptr inbounds %struct.Main, %struct.Main* %38, i32 0, i32 13, !dbg !4458
  %first41 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object40, i32 0, i32 0, !dbg !4459
  %39 = load i8*, i8** %first41, align 8, !dbg !4459
  %40 = bitcast i8* %39 to %struct.Object*, !dbg !4456
  store %struct.Object* %40, %struct.Object** %ob, align 8, !dbg !4460
  br label %for.cond42, !dbg !4461

for.cond42:                                       ; preds = %for.inc56, %if.then34
  %41 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4462
  %tobool43 = icmp ne %struct.Object* %41, null, !dbg !4464
  br i1 %tobool43, label %for.body44, label %for.end59, !dbg !4464

for.body44:                                       ; preds = %for.cond42
  %42 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4465
  %43 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4468
  %data45 = getelementptr inbounds %struct.Object, %struct.Object* %43, i32 0, i32 19, !dbg !4469
  %44 = load i8*, i8** %data45, align 8, !dbg !4469
  %45 = bitcast i8* %44 to %struct.Mesh*, !dbg !4468
  %cmp46 = icmp eq %struct.Mesh* %42, %45, !dbg !4470
  br i1 %cmp46, label %if.then48, label %if.end55, !dbg !4471

if.then48:                                        ; preds = %for.body44
  %46 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4472
  %id49 = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 0, !dbg !4475
  %lib50 = getelementptr inbounds %struct.ID, %struct.ID* %id49, i32 0, i32 3, !dbg !4476
  %47 = load %struct.Library*, %struct.Library** %lib50, align 8, !dbg !4476
  %cmp51 = icmp eq %struct.Library* %47, null, !dbg !4477
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !4478

if.then53:                                        ; preds = %if.then48
  %48 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4479
  %49 = load %struct.Mesh*, %struct.Mesh** %me_new, align 8, !dbg !4481
  call void @BKE_mesh_assign_object(%struct.Object* %48, %struct.Mesh* %49), !dbg !4482
  br label %if.end54, !dbg !4483

if.end54:                                         ; preds = %if.then53, %if.then48
  br label %if.end55, !dbg !4484

if.end55:                                         ; preds = %if.end54, %for.body44
  br label %for.inc56, !dbg !4485

for.inc56:                                        ; preds = %if.end55
  %50 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4486
  %id57 = getelementptr inbounds %struct.Object, %struct.Object* %50, i32 0, i32 0, !dbg !4487
  %next58 = getelementptr inbounds %struct.ID, %struct.ID* %id57, i32 0, i32 0, !dbg !4488
  %51 = load i8*, i8** %next58, align 8, !dbg !4488
  %52 = bitcast i8* %51 to %struct.Object*, !dbg !4486
  store %struct.Object* %52, %struct.Object** %ob, align 8, !dbg !4489
  br label %for.cond42, !dbg !4490, !llvm.loop !4491

for.end59:                                        ; preds = %for.cond42
  br label %if.end60, !dbg !4493

if.end60:                                         ; preds = %for.end59, %land.lhs.true31, %if.else28
  br label %if.end61

if.end61:                                         ; preds = %if.then, %if.then3, %if.end60, %if.then26
  ret void, !dbg !4494
}

declare dso_local void @id_clear_lib_data(%struct.Main*, %struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @expand_local_mesh(%struct.Mesh* %me) #0 !dbg !4495 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %a = alloca i32, align 4
  %i = alloca i32, align 4
  %txface = alloca %struct.MTexPoly*, align 8
  %tface = alloca %struct.MTFace*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !4496, metadata !DIExpression()), !dbg !4497
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4498
  %texcomesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 19, !dbg !4499
  %1 = load %struct.Mesh*, %struct.Mesh** %texcomesh, align 8, !dbg !4499
  %2 = bitcast %struct.Mesh* %1 to %struct.ID*, !dbg !4500
  call void @id_lib_extern(%struct.ID* %2), !dbg !4501
  %3 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4502
  %mtface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 13, !dbg !4504
  %4 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !4504
  %tobool = icmp ne %struct.MTFace* %4, null, !dbg !4502
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !4505

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4506
  %mtpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 8, !dbg !4507
  %6 = load %struct.MTexPoly*, %struct.MTexPoly** %mtpoly, align 8, !dbg !4507
  %tobool1 = icmp ne %struct.MTexPoly* %6, null, !dbg !4506
  br i1 %tobool1, label %if.then, label %if.end51, !dbg !4508

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4509, metadata !DIExpression()), !dbg !4511
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4512, metadata !DIExpression()), !dbg !4513
  store i32 0, i32* %i, align 4, !dbg !4514
  br label %for.cond, !dbg !4516

for.cond:                                         ; preds = %for.inc16, %if.then
  %7 = load i32, i32* %i, align 4, !dbg !4517
  %8 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4519
  %pdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 24, !dbg !4520
  %totlayer = getelementptr inbounds %struct.CustomData, %struct.CustomData* %pdata, i32 0, i32 2, !dbg !4521
  %9 = load i32, i32* %totlayer, align 4, !dbg !4521
  %cmp = icmp slt i32 %7, %9, !dbg !4522
  br i1 %cmp, label %for.body, label %for.end18, !dbg !4523

for.body:                                         ; preds = %for.cond
  %10 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4524
  %pdata2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 24, !dbg !4527
  %layers = getelementptr inbounds %struct.CustomData, %struct.CustomData* %pdata2, i32 0, i32 0, !dbg !4528
  %11 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers, align 8, !dbg !4528
  %12 = load i32, i32* %i, align 4, !dbg !4529
  %idxprom = sext i32 %12 to i64, !dbg !4524
  %arrayidx = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %11, i64 %idxprom, !dbg !4524
  %type = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx, i32 0, i32 0, !dbg !4530
  %13 = load i32, i32* %type, align 8, !dbg !4530
  %cmp3 = icmp eq i32 %13, 15, !dbg !4531
  br i1 %cmp3, label %if.then4, label %if.end15, !dbg !4532

if.then4:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %txface, metadata !4533, metadata !DIExpression()), !dbg !4535
  %14 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4536
  %pdata5 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 24, !dbg !4537
  %layers6 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %pdata5, i32 0, i32 0, !dbg !4538
  %15 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers6, align 8, !dbg !4538
  %16 = load i32, i32* %i, align 4, !dbg !4539
  %idxprom7 = sext i32 %16 to i64, !dbg !4536
  %arrayidx8 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %15, i64 %idxprom7, !dbg !4536
  %data = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx8, i32 0, i32 9, !dbg !4540
  %17 = load i8*, i8** %data, align 8, !dbg !4540
  %18 = bitcast i8* %17 to %struct.MTexPoly*, !dbg !4541
  store %struct.MTexPoly* %18, %struct.MTexPoly** %txface, align 8, !dbg !4535
  store i32 0, i32* %a, align 4, !dbg !4542
  br label %for.cond9, !dbg !4544

for.cond9:                                        ; preds = %for.inc, %if.then4
  %19 = load i32, i32* %a, align 4, !dbg !4545
  %20 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4547
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %20, i32 0, i32 30, !dbg !4548
  %21 = load i32, i32* %totpoly, align 8, !dbg !4548
  %cmp10 = icmp slt i32 %19, %21, !dbg !4549
  br i1 %cmp10, label %for.body11, label %for.end, !dbg !4550

for.body11:                                       ; preds = %for.cond9
  %22 = load %struct.MTexPoly*, %struct.MTexPoly** %txface, align 8, !dbg !4551
  %tpage = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %22, i32 0, i32 0, !dbg !4554
  %23 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !4554
  %tobool12 = icmp ne %struct.Image* %23, null, !dbg !4551
  br i1 %tobool12, label %if.then13, label %if.end, !dbg !4555

if.then13:                                        ; preds = %for.body11
  %24 = load %struct.MTexPoly*, %struct.MTexPoly** %txface, align 8, !dbg !4556
  %tpage14 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %24, i32 0, i32 0, !dbg !4558
  %25 = load %struct.Image*, %struct.Image** %tpage14, align 8, !dbg !4558
  %26 = bitcast %struct.Image* %25 to %struct.ID*, !dbg !4559
  call void @id_lib_extern(%struct.ID* %26), !dbg !4560
  br label %if.end, !dbg !4561

if.end:                                           ; preds = %if.then13, %for.body11
  br label %for.inc, !dbg !4562

for.inc:                                          ; preds = %if.end
  %27 = load i32, i32* %a, align 4, !dbg !4563
  %inc = add nsw i32 %27, 1, !dbg !4563
  store i32 %inc, i32* %a, align 4, !dbg !4563
  %28 = load %struct.MTexPoly*, %struct.MTexPoly** %txface, align 8, !dbg !4564
  %incdec.ptr = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %28, i32 1, !dbg !4564
  store %struct.MTexPoly* %incdec.ptr, %struct.MTexPoly** %txface, align 8, !dbg !4564
  br label %for.cond9, !dbg !4565, !llvm.loop !4566

for.end:                                          ; preds = %for.cond9
  br label %if.end15, !dbg !4568

if.end15:                                         ; preds = %for.end, %for.body
  br label %for.inc16, !dbg !4569

for.inc16:                                        ; preds = %if.end15
  %29 = load i32, i32* %i, align 4, !dbg !4570
  %inc17 = add nsw i32 %29, 1, !dbg !4570
  store i32 %inc17, i32* %i, align 4, !dbg !4570
  br label %for.cond, !dbg !4571, !llvm.loop !4572

for.end18:                                        ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !4574
  br label %for.cond19, !dbg !4576

for.cond19:                                       ; preds = %for.inc48, %for.end18
  %30 = load i32, i32* %i, align 4, !dbg !4577
  %31 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4579
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %31, i32 0, i32 23, !dbg !4580
  %totlayer20 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %fdata, i32 0, i32 2, !dbg !4581
  %32 = load i32, i32* %totlayer20, align 4, !dbg !4581
  %cmp21 = icmp slt i32 %30, %32, !dbg !4582
  br i1 %cmp21, label %for.body22, label %for.end50, !dbg !4583

for.body22:                                       ; preds = %for.cond19
  %33 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4584
  %fdata23 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %33, i32 0, i32 23, !dbg !4587
  %layers24 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %fdata23, i32 0, i32 0, !dbg !4588
  %34 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers24, align 8, !dbg !4588
  %35 = load i32, i32* %i, align 4, !dbg !4589
  %idxprom25 = sext i32 %35 to i64, !dbg !4584
  %arrayidx26 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %34, i64 %idxprom25, !dbg !4584
  %type27 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx26, i32 0, i32 0, !dbg !4590
  %36 = load i32, i32* %type27, align 8, !dbg !4590
  %cmp28 = icmp eq i32 %36, 5, !dbg !4591
  br i1 %cmp28, label %if.then29, label %if.end47, !dbg !4592

if.then29:                                        ; preds = %for.body22
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tface, metadata !4593, metadata !DIExpression()), !dbg !4595
  %37 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4596
  %fdata30 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %37, i32 0, i32 23, !dbg !4597
  %layers31 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %fdata30, i32 0, i32 0, !dbg !4598
  %38 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers31, align 8, !dbg !4598
  %39 = load i32, i32* %i, align 4, !dbg !4599
  %idxprom32 = sext i32 %39 to i64, !dbg !4596
  %arrayidx33 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %38, i64 %idxprom32, !dbg !4596
  %data34 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx33, i32 0, i32 9, !dbg !4600
  %40 = load i8*, i8** %data34, align 8, !dbg !4600
  %41 = bitcast i8* %40 to %struct.MTFace*, !dbg !4601
  store %struct.MTFace* %41, %struct.MTFace** %tface, align 8, !dbg !4595
  store i32 0, i32* %a, align 4, !dbg !4602
  br label %for.cond35, !dbg !4604

for.cond35:                                       ; preds = %for.inc43, %if.then29
  %42 = load i32, i32* %a, align 4, !dbg !4605
  %43 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4607
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %43, i32 0, i32 28, !dbg !4608
  %44 = load i32, i32* %totface, align 8, !dbg !4608
  %cmp36 = icmp slt i32 %42, %44, !dbg !4609
  br i1 %cmp36, label %for.body37, label %for.end46, !dbg !4610

for.body37:                                       ; preds = %for.cond35
  %45 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !4611
  %tpage38 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %45, i32 0, i32 1, !dbg !4614
  %46 = load %struct.Image*, %struct.Image** %tpage38, align 8, !dbg !4614
  %tobool39 = icmp ne %struct.Image* %46, null, !dbg !4611
  br i1 %tobool39, label %if.then40, label %if.end42, !dbg !4615

if.then40:                                        ; preds = %for.body37
  %47 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !4616
  %tpage41 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %47, i32 0, i32 1, !dbg !4618
  %48 = load %struct.Image*, %struct.Image** %tpage41, align 8, !dbg !4618
  %49 = bitcast %struct.Image* %48 to %struct.ID*, !dbg !4619
  call void @id_lib_extern(%struct.ID* %49), !dbg !4620
  br label %if.end42, !dbg !4621

if.end42:                                         ; preds = %if.then40, %for.body37
  br label %for.inc43, !dbg !4622

for.inc43:                                        ; preds = %if.end42
  %50 = load i32, i32* %a, align 4, !dbg !4623
  %inc44 = add nsw i32 %50, 1, !dbg !4623
  store i32 %inc44, i32* %a, align 4, !dbg !4623
  %51 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !4624
  %incdec.ptr45 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %51, i32 1, !dbg !4624
  store %struct.MTFace* %incdec.ptr45, %struct.MTFace** %tface, align 8, !dbg !4624
  br label %for.cond35, !dbg !4625, !llvm.loop !4626

for.end46:                                        ; preds = %for.cond35
  br label %if.end47, !dbg !4628

if.end47:                                         ; preds = %for.end46, %for.body22
  br label %for.inc48, !dbg !4629

for.inc48:                                        ; preds = %if.end47
  %52 = load i32, i32* %i, align 4, !dbg !4630
  %inc49 = add nsw i32 %52, 1, !dbg !4630
  store i32 %inc49, i32* %i, align 4, !dbg !4630
  br label %for.cond19, !dbg !4631, !llvm.loop !4632

for.end50:                                        ; preds = %for.cond19
  br label %if.end51, !dbg !4634

if.end51:                                         ; preds = %for.end50, %lor.lhs.false
  %53 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4635
  %mat = getelementptr inbounds %struct.Mesh, %struct.Mesh* %53, i32 0, i32 5, !dbg !4637
  %54 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !4637
  %tobool52 = icmp ne %struct.Material** %54, null, !dbg !4635
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !4638

if.then53:                                        ; preds = %if.end51
  %55 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4639
  %mat54 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %55, i32 0, i32 5, !dbg !4641
  %56 = load %struct.Material**, %struct.Material*** %mat54, align 8, !dbg !4641
  %57 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4642
  %totcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %57, i32 0, i32 47, !dbg !4643
  %58 = load i16, i16* %totcol, align 2, !dbg !4643
  call void @extern_local_matarar(%struct.Material** %56, i16 signext %58), !dbg !4644
  br label %if.end55, !dbg !4645

if.end55:                                         ; preds = %if.then53, %if.end51
  ret void, !dbg !4646
}

declare dso_local void @BKE_id_lib_local_paths(%struct.Main*, %struct.Library*, %struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_assign_object(%struct.Object* %ob, %struct.Mesh* %me) #0 !dbg !4647 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %me.addr = alloca %struct.Mesh*, align 8
  %old = alloca %struct.Mesh*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4650, metadata !DIExpression()), !dbg !4651
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !4652, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.declare(metadata %struct.Mesh** %old, metadata !4654, metadata !DIExpression()), !dbg !4655
  store %struct.Mesh* null, %struct.Mesh** %old, align 8, !dbg !4655
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4656
  call void @multires_force_update(%struct.Object* %0), !dbg !4657
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4658
  %cmp = icmp eq %struct.Object* %1, null, !dbg !4660
  br i1 %cmp, label %if.then, label %if.end, !dbg !4661

if.then:                                          ; preds = %entry
  br label %return, !dbg !4662

if.end:                                           ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4663
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !4665
  %3 = load i16, i16* %type, align 8, !dbg !4665
  %conv = sext i16 %3 to i32, !dbg !4663
  %cmp1 = icmp eq i32 %conv, 1, !dbg !4666
  br i1 %cmp1, label %if.then3, label %if.end7, !dbg !4667

if.then3:                                         ; preds = %if.end
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4668
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !4670
  %5 = load i8*, i8** %data, align 8, !dbg !4670
  %6 = bitcast i8* %5 to %struct.Mesh*, !dbg !4668
  store %struct.Mesh* %6, %struct.Mesh** %old, align 8, !dbg !4671
  %7 = load %struct.Mesh*, %struct.Mesh** %old, align 8, !dbg !4672
  %tobool = icmp ne %struct.Mesh* %7, null, !dbg !4672
  br i1 %tobool, label %if.then4, label %if.end5, !dbg !4674

if.then4:                                         ; preds = %if.then3
  %8 = load %struct.Mesh*, %struct.Mesh** %old, align 8, !dbg !4675
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 0, !dbg !4676
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !4677
  %9 = load i32, i32* %us, align 4, !dbg !4678
  %dec = add nsw i32 %9, -1, !dbg !4678
  store i32 %dec, i32* %us, align 4, !dbg !4678
  br label %if.end5, !dbg !4675

if.end5:                                          ; preds = %if.then4, %if.then3
  %10 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4679
  %11 = bitcast %struct.Mesh* %10 to i8*, !dbg !4679
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4680
  %data6 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 19, !dbg !4681
  store i8* %11, i8** %data6, align 8, !dbg !4682
  %13 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4683
  %14 = bitcast %struct.Mesh* %13 to %struct.ID*, !dbg !4684
  call void @id_us_plus(%struct.ID* %14), !dbg !4685
  br label %if.end7, !dbg !4686

if.end7:                                          ; preds = %if.end5, %if.end
  %15 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !4687
  %16 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4688
  %17 = bitcast %struct.Mesh* %16 to %struct.ID*, !dbg !4689
  call void @test_object_materials(%struct.Main* %15, %struct.ID* %17), !dbg !4690
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4691
  call void @test_object_modifiers(%struct.Object* %18), !dbg !4692
  br label %return, !dbg !4693

return:                                           ; preds = %if.end7, %if.then
  ret void, !dbg !4693
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_mesh_uv_cdlayer_rename_index(%struct.Mesh* %me, i32 %poly_index, i32 %loop_index, i32 %face_index, i8* %new_name, i8 zeroext %do_tessface) #0 !dbg !4694 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %poly_index.addr = alloca i32, align 4
  %loop_index.addr = alloca i32, align 4
  %face_index.addr = alloca i32, align 4
  %new_name.addr = alloca i8*, align 8
  %do_tessface.addr = alloca i8, align 1
  %pdata = alloca %struct.CustomData*, align 8
  %ldata = alloca %struct.CustomData*, align 8
  %fdata = alloca %struct.CustomData*, align 8
  %cdlp = alloca %struct.CustomDataLayer*, align 8
  %cdlu = alloca %struct.CustomDataLayer*, align 8
  %cdlf = alloca %struct.CustomDataLayer*, align 8
  %step = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !4697, metadata !DIExpression()), !dbg !4698
  store i32 %poly_index, i32* %poly_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %poly_index.addr, metadata !4699, metadata !DIExpression()), !dbg !4700
  store i32 %loop_index, i32* %loop_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %loop_index.addr, metadata !4701, metadata !DIExpression()), !dbg !4702
  store i32 %face_index, i32* %face_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_index.addr, metadata !4703, metadata !DIExpression()), !dbg !4704
  store i8* %new_name, i8** %new_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %new_name.addr, metadata !4705, metadata !DIExpression()), !dbg !4706
  store i8 %do_tessface, i8* %do_tessface.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_tessface.addr, metadata !4707, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.declare(metadata %struct.CustomData** %pdata, metadata !4709, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.declare(metadata %struct.CustomData** %ldata, metadata !4711, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.declare(metadata %struct.CustomData** %fdata, metadata !4713, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.declare(metadata %struct.CustomDataLayer** %cdlp, metadata !4715, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.declare(metadata %struct.CustomDataLayer** %cdlu, metadata !4717, metadata !DIExpression()), !dbg !4718
  call void @llvm.dbg.declare(metadata %struct.CustomDataLayer** %cdlf, metadata !4719, metadata !DIExpression()), !dbg !4720
  call void @llvm.dbg.declare(metadata i32* %step, metadata !4721, metadata !DIExpression()), !dbg !4722
  %0 = load i8, i8* %do_tessface.addr, align 1, !dbg !4723
  %conv = zext i8 %0 to i32, !dbg !4723
  %tobool = icmp ne i32 %conv, 0, !dbg !4723
  %1 = zext i1 %tobool to i64, !dbg !4723
  %cond = select i1 %tobool, i32 3, i32 2, !dbg !4723
  store i32 %cond, i32* %step, align 4, !dbg !4722
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4724, metadata !DIExpression()), !dbg !4725
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4726
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 20, !dbg !4728
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !4728
  %tobool1 = icmp ne %struct.BMEditMesh* %3, null, !dbg !4726
  br i1 %tobool1, label %if.then, label %if.else, !dbg !4729

if.then:                                          ; preds = %entry
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4730
  %edit_btmesh2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 20, !dbg !4732
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh2, align 8, !dbg !4732
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %5, i32 0, i32 0, !dbg !4733
  %6 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4733
  %pdata3 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %6, i32 0, i32 27, !dbg !4734
  store %struct.CustomData* %pdata3, %struct.CustomData** %pdata, align 8, !dbg !4735
  %7 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4736
  %edit_btmesh4 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 20, !dbg !4737
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh4, align 8, !dbg !4737
  %bm5 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %8, i32 0, i32 0, !dbg !4738
  %9 = load %struct.BMesh*, %struct.BMesh** %bm5, align 8, !dbg !4738
  %ldata6 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %9, i32 0, i32 26, !dbg !4739
  store %struct.CustomData* %ldata6, %struct.CustomData** %ldata, align 8, !dbg !4740
  store %struct.CustomData* null, %struct.CustomData** %fdata, align 8, !dbg !4741
  br label %if.end, !dbg !4742

if.else:                                          ; preds = %entry
  %10 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4743
  %pdata7 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 24, !dbg !4745
  store %struct.CustomData* %pdata7, %struct.CustomData** %pdata, align 8, !dbg !4746
  %11 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4747
  %ldata8 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 25, !dbg !4748
  store %struct.CustomData* %ldata8, %struct.CustomData** %ldata, align 8, !dbg !4749
  %12 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4750
  %fdata9 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 23, !dbg !4751
  store %struct.CustomData* %fdata9, %struct.CustomData** %fdata, align 8, !dbg !4752
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.CustomData*, %struct.CustomData** %pdata, align 8, !dbg !4753
  %layers = getelementptr inbounds %struct.CustomData, %struct.CustomData* %13, i32 0, i32 0, !dbg !4754
  %14 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers, align 8, !dbg !4754
  %15 = load i32, i32* %poly_index.addr, align 4, !dbg !4755
  %idxprom = sext i32 %15 to i64, !dbg !4753
  %arrayidx = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %14, i64 %idxprom, !dbg !4753
  store %struct.CustomDataLayer* %arrayidx, %struct.CustomDataLayer** %cdlp, align 8, !dbg !4756
  %16 = load %struct.CustomData*, %struct.CustomData** %ldata, align 8, !dbg !4757
  %layers10 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %16, i32 0, i32 0, !dbg !4758
  %17 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers10, align 8, !dbg !4758
  %18 = load i32, i32* %loop_index.addr, align 4, !dbg !4759
  %idxprom11 = sext i32 %18 to i64, !dbg !4757
  %arrayidx12 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %17, i64 %idxprom11, !dbg !4757
  store %struct.CustomDataLayer* %arrayidx12, %struct.CustomDataLayer** %cdlu, align 8, !dbg !4760
  %19 = load %struct.CustomData*, %struct.CustomData** %fdata, align 8, !dbg !4761
  %tobool13 = icmp ne %struct.CustomData* %19, null, !dbg !4761
  br i1 %tobool13, label %land.lhs.true, label %cond.false, !dbg !4762

land.lhs.true:                                    ; preds = %if.end
  %20 = load i8, i8* %do_tessface.addr, align 1, !dbg !4763
  %conv14 = zext i8 %20 to i32, !dbg !4763
  %tobool15 = icmp ne i32 %conv14, 0, !dbg !4763
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !4761

cond.true:                                        ; preds = %land.lhs.true
  %21 = load %struct.CustomData*, %struct.CustomData** %fdata, align 8, !dbg !4764
  %layers16 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %21, i32 0, i32 0, !dbg !4765
  %22 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers16, align 8, !dbg !4765
  %23 = load i32, i32* %face_index.addr, align 4, !dbg !4766
  %idxprom17 = sext i32 %23 to i64, !dbg !4764
  %arrayidx18 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %22, i64 %idxprom17, !dbg !4764
  br label %cond.end, !dbg !4761

cond.false:                                       ; preds = %land.lhs.true, %if.end
  br label %cond.end, !dbg !4761

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond19 = phi %struct.CustomDataLayer* [ %arrayidx18, %cond.true ], [ null, %cond.false ], !dbg !4761
  store %struct.CustomDataLayer* %cond19, %struct.CustomDataLayer** %cdlf, align 8, !dbg !4767
  %24 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdlp, align 8, !dbg !4768
  %name = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %24, i32 0, i32 8, !dbg !4770
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !4768
  %25 = load i8*, i8** %new_name.addr, align 8, !dbg !4771
  %cmp = icmp ne i8* %arraydecay, %25, !dbg !4772
  br i1 %cmp, label %if.then21, label %if.end26, !dbg !4773

if.then21:                                        ; preds = %cond.end
  %26 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdlp, align 8, !dbg !4774
  %name22 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %26, i32 0, i32 8, !dbg !4776
  %arraydecay23 = getelementptr inbounds [64 x i8], [64 x i8]* %name22, i64 0, i64 0, !dbg !4774
  %27 = load i8*, i8** %new_name.addr, align 8, !dbg !4777
  %call = call i8* @BLI_strncpy(i8* %arraydecay23, i8* %27, i64 64), !dbg !4778
  %28 = load %struct.CustomData*, %struct.CustomData** %pdata, align 8, !dbg !4779
  %29 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdlp, align 8, !dbg !4780
  %30 = load %struct.CustomData*, %struct.CustomData** %pdata, align 8, !dbg !4781
  %layers24 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %30, i32 0, i32 0, !dbg !4782
  %31 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers24, align 8, !dbg !4782
  %sub.ptr.lhs.cast = ptrtoint %struct.CustomDataLayer* %29 to i64, !dbg !4783
  %sub.ptr.rhs.cast = ptrtoint %struct.CustomDataLayer* %31 to i64, !dbg !4783
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4783
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 104, !dbg !4783
  %conv25 = trunc i64 %sub.ptr.div to i32, !dbg !4780
  call void @CustomData_set_layer_unique_name(%struct.CustomData* %28, i32 %conv25), !dbg !4784
  br label %if.end26, !dbg !4785

if.end26:                                         ; preds = %if.then21, %cond.end
  store i32 1, i32* %i, align 4, !dbg !4786
  br label %for.cond, !dbg !4788

for.cond:                                         ; preds = %for.inc, %if.end26
  %32 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdlp, align 8, !dbg !4789
  %name27 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %32, i32 0, i32 8, !dbg !4791
  %arraydecay28 = getelementptr inbounds [64 x i8], [64 x i8]* %name27, i64 0, i64 0, !dbg !4789
  %33 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdlu, align 8, !dbg !4792
  %name29 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %33, i32 0, i32 8, !dbg !4793
  %arraydecay30 = getelementptr inbounds [64 x i8], [64 x i8]* %name29, i64 0, i64 0, !dbg !4792
  %call31 = call i32 @strcmp(i8* %arraydecay28, i8* %arraydecay30) #5, !dbg !4794
  %cmp32 = icmp ne i32 %call31, 0, !dbg !4795
  br i1 %cmp32, label %lor.end, label %lor.rhs, !dbg !4796

lor.rhs:                                          ; preds = %for.cond
  %34 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdlf, align 8, !dbg !4797
  %tobool34 = icmp ne %struct.CustomDataLayer* %34, null, !dbg !4797
  br i1 %tobool34, label %land.rhs, label %land.end, !dbg !4798

land.rhs:                                         ; preds = %lor.rhs
  %35 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdlp, align 8, !dbg !4799
  %name35 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %35, i32 0, i32 8, !dbg !4800
  %arraydecay36 = getelementptr inbounds [64 x i8], [64 x i8]* %name35, i64 0, i64 0, !dbg !4799
  %36 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdlf, align 8, !dbg !4801
  %name37 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %36, i32 0, i32 8, !dbg !4802
  %arraydecay38 = getelementptr inbounds [64 x i8], [64 x i8]* %name37, i64 0, i64 0, !dbg !4801
  %call39 = call i32 @strcmp(i8* %arraydecay36, i8* %arraydecay38) #5, !dbg !4803
  %cmp40 = icmp ne i32 %call39, 0, !dbg !4804
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %37 = phi i1 [ false, %lor.rhs ], [ %cmp40, %land.rhs ], !dbg !4805
  br label %lor.end, !dbg !4796

lor.end:                                          ; preds = %land.end, %for.cond
  %38 = phi i1 [ true, %for.cond ], [ %37, %land.end ]
  br i1 %38, label %for.body, label %for.end, !dbg !4806

for.body:                                         ; preds = %lor.end
  %39 = load i32, i32* %i, align 4, !dbg !4807
  %40 = load i32, i32* %step, align 4, !dbg !4809
  %rem = srem i32 %39, %40, !dbg !4810
  switch i32 %rem, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb53
    i32 2, label %sw.bb65
  ], !dbg !4811

sw.bb:                                            ; preds = %for.body
  %41 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdlp, align 8, !dbg !4812
  %name42 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %41, i32 0, i32 8, !dbg !4814
  %arraydecay43 = getelementptr inbounds [64 x i8], [64 x i8]* %name42, i64 0, i64 0, !dbg !4812
  %42 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdlu, align 8, !dbg !4815
  %name44 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %42, i32 0, i32 8, !dbg !4816
  %arraydecay45 = getelementptr inbounds [64 x i8], [64 x i8]* %name44, i64 0, i64 0, !dbg !4815
  %call46 = call i8* @BLI_strncpy(i8* %arraydecay43, i8* %arraydecay45, i64 64), !dbg !4817
  %43 = load %struct.CustomData*, %struct.CustomData** %pdata, align 8, !dbg !4818
  %44 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdlp, align 8, !dbg !4819
  %45 = load %struct.CustomData*, %struct.CustomData** %pdata, align 8, !dbg !4820
  %layers47 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %45, i32 0, i32 0, !dbg !4821
  %46 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers47, align 8, !dbg !4821
  %sub.ptr.lhs.cast48 = ptrtoint %struct.CustomDataLayer* %44 to i64, !dbg !4822
  %sub.ptr.rhs.cast49 = ptrtoint %struct.CustomDataLayer* %46 to i64, !dbg !4822
  %sub.ptr.sub50 = sub i64 %sub.ptr.lhs.cast48, %sub.ptr.rhs.cast49, !dbg !4822
  %sub.ptr.div51 = sdiv exact i64 %sub.ptr.sub50, 104, !dbg !4822
  %conv52 = trunc i64 %sub.ptr.div51 to i32, !dbg !4819
  call void @CustomData_set_layer_unique_name(%struct.CustomData* %43, i32 %conv52), !dbg !4823
  br label %sw.epilog, !dbg !4824

sw.bb53:                                          ; preds = %for.body
  %47 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdlu, align 8, !dbg !4825
  %name54 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %47, i32 0, i32 8, !dbg !4826
  %arraydecay55 = getelementptr inbounds [64 x i8], [64 x i8]* %name54, i64 0, i64 0, !dbg !4825
  %48 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdlp, align 8, !dbg !4827
  %name56 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %48, i32 0, i32 8, !dbg !4828
  %arraydecay57 = getelementptr inbounds [64 x i8], [64 x i8]* %name56, i64 0, i64 0, !dbg !4827
  %call58 = call i8* @BLI_strncpy(i8* %arraydecay55, i8* %arraydecay57, i64 64), !dbg !4829
  %49 = load %struct.CustomData*, %struct.CustomData** %ldata, align 8, !dbg !4830
  %50 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdlu, align 8, !dbg !4831
  %51 = load %struct.CustomData*, %struct.CustomData** %ldata, align 8, !dbg !4832
  %layers59 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %51, i32 0, i32 0, !dbg !4833
  %52 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers59, align 8, !dbg !4833
  %sub.ptr.lhs.cast60 = ptrtoint %struct.CustomDataLayer* %50 to i64, !dbg !4834
  %sub.ptr.rhs.cast61 = ptrtoint %struct.CustomDataLayer* %52 to i64, !dbg !4834
  %sub.ptr.sub62 = sub i64 %sub.ptr.lhs.cast60, %sub.ptr.rhs.cast61, !dbg !4834
  %sub.ptr.div63 = sdiv exact i64 %sub.ptr.sub62, 104, !dbg !4834
  %conv64 = trunc i64 %sub.ptr.div63 to i32, !dbg !4831
  call void @CustomData_set_layer_unique_name(%struct.CustomData* %49, i32 %conv64), !dbg !4835
  br label %sw.epilog, !dbg !4836

sw.bb65:                                          ; preds = %for.body
  %53 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdlf, align 8, !dbg !4837
  %tobool66 = icmp ne %struct.CustomDataLayer* %53, null, !dbg !4837
  br i1 %tobool66, label %if.then67, label %if.end79, !dbg !4839

if.then67:                                        ; preds = %sw.bb65
  %54 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdlf, align 8, !dbg !4840
  %name68 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %54, i32 0, i32 8, !dbg !4842
  %arraydecay69 = getelementptr inbounds [64 x i8], [64 x i8]* %name68, i64 0, i64 0, !dbg !4840
  %55 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdlp, align 8, !dbg !4843
  %name70 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %55, i32 0, i32 8, !dbg !4844
  %arraydecay71 = getelementptr inbounds [64 x i8], [64 x i8]* %name70, i64 0, i64 0, !dbg !4843
  %call72 = call i8* @BLI_strncpy(i8* %arraydecay69, i8* %arraydecay71, i64 64), !dbg !4845
  %56 = load %struct.CustomData*, %struct.CustomData** %fdata, align 8, !dbg !4846
  %57 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdlf, align 8, !dbg !4847
  %58 = load %struct.CustomData*, %struct.CustomData** %fdata, align 8, !dbg !4848
  %layers73 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %58, i32 0, i32 0, !dbg !4849
  %59 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers73, align 8, !dbg !4849
  %sub.ptr.lhs.cast74 = ptrtoint %struct.CustomDataLayer* %57 to i64, !dbg !4850
  %sub.ptr.rhs.cast75 = ptrtoint %struct.CustomDataLayer* %59 to i64, !dbg !4850
  %sub.ptr.sub76 = sub i64 %sub.ptr.lhs.cast74, %sub.ptr.rhs.cast75, !dbg !4850
  %sub.ptr.div77 = sdiv exact i64 %sub.ptr.sub76, 104, !dbg !4850
  %conv78 = trunc i64 %sub.ptr.div77 to i32, !dbg !4847
  call void @CustomData_set_layer_unique_name(%struct.CustomData* %56, i32 %conv78), !dbg !4851
  br label %if.end79, !dbg !4852

if.end79:                                         ; preds = %if.then67, %sw.bb65
  br label %sw.epilog, !dbg !4853

sw.epilog:                                        ; preds = %for.body, %if.end79, %sw.bb53, %sw.bb
  br label %for.inc, !dbg !4854

for.inc:                                          ; preds = %sw.epilog
  %60 = load i32, i32* %i, align 4, !dbg !4855
  %inc = add nsw i32 %60, 1, !dbg !4855
  store i32 %inc, i32* %i, align 4, !dbg !4855
  br label %for.cond, !dbg !4856, !llvm.loop !4857

for.end:                                          ; preds = %lor.end
  ret i8 1, !dbg !4859
}

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #2

declare dso_local void @CustomData_set_layer_unique_name(%struct.CustomData*, i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_mesh_uv_cdlayer_rename(%struct.Mesh* %me, i8* %old_name, i8* %new_name, i8 zeroext %do_tessface) #0 !dbg !4860 {
entry:
  %retval = alloca i8, align 1
  %me.addr = alloca %struct.Mesh*, align 8
  %old_name.addr = alloca i8*, align 8
  %new_name.addr = alloca i8*, align 8
  %do_tessface.addr = alloca i8, align 1
  %pdata = alloca %struct.CustomData*, align 8
  %ldata = alloca %struct.CustomData*, align 8
  %fdata = alloca %struct.CustomData*, align 8
  %pidx_start = alloca i32, align 4
  %lidx_start = alloca i32, align 4
  %fidx_start = alloca i32, align 4
  %pidx = alloca i32, align 4
  %lidx = alloca i32, align 4
  %fidx = alloca i32, align 4
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !4863, metadata !DIExpression()), !dbg !4864
  store i8* %old_name, i8** %old_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %old_name.addr, metadata !4865, metadata !DIExpression()), !dbg !4866
  store i8* %new_name, i8** %new_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %new_name.addr, metadata !4867, metadata !DIExpression()), !dbg !4868
  store i8 %do_tessface, i8* %do_tessface.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_tessface.addr, metadata !4869, metadata !DIExpression()), !dbg !4870
  call void @llvm.dbg.declare(metadata %struct.CustomData** %pdata, metadata !4871, metadata !DIExpression()), !dbg !4872
  call void @llvm.dbg.declare(metadata %struct.CustomData** %ldata, metadata !4873, metadata !DIExpression()), !dbg !4874
  call void @llvm.dbg.declare(metadata %struct.CustomData** %fdata, metadata !4875, metadata !DIExpression()), !dbg !4876
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4877
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 20, !dbg !4879
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !4879
  %tobool = icmp ne %struct.BMEditMesh* %1, null, !dbg !4877
  br i1 %tobool, label %if.then, label %if.else, !dbg !4880

if.then:                                          ; preds = %entry
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4881
  %edit_btmesh1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 20, !dbg !4883
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh1, align 8, !dbg !4883
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !4884
  %4 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4884
  %pdata2 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 27, !dbg !4885
  store %struct.CustomData* %pdata2, %struct.CustomData** %pdata, align 8, !dbg !4886
  %5 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4887
  %edit_btmesh3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 20, !dbg !4888
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh3, align 8, !dbg !4888
  %bm4 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !4889
  %7 = load %struct.BMesh*, %struct.BMesh** %bm4, align 8, !dbg !4889
  %ldata5 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %7, i32 0, i32 26, !dbg !4890
  store %struct.CustomData* %ldata5, %struct.CustomData** %ldata, align 8, !dbg !4891
  store %struct.CustomData* null, %struct.CustomData** %fdata, align 8, !dbg !4892
  store i8 0, i8* %do_tessface.addr, align 1, !dbg !4893
  br label %if.end, !dbg !4894

if.else:                                          ; preds = %entry
  %8 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4895
  %pdata6 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 24, !dbg !4897
  store %struct.CustomData* %pdata6, %struct.CustomData** %pdata, align 8, !dbg !4898
  %9 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4899
  %ldata7 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 25, !dbg !4900
  store %struct.CustomData* %ldata7, %struct.CustomData** %ldata, align 8, !dbg !4901
  %10 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4902
  %fdata8 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 23, !dbg !4903
  store %struct.CustomData* %fdata8, %struct.CustomData** %fdata, align 8, !dbg !4904
  %11 = load i8, i8* %do_tessface.addr, align 1, !dbg !4905
  %conv = zext i8 %11 to i32, !dbg !4905
  %tobool9 = icmp ne i32 %conv, 0, !dbg !4905
  br i1 %tobool9, label %land.rhs, label %land.end, !dbg !4906

land.rhs:                                         ; preds = %if.else
  %12 = load %struct.CustomData*, %struct.CustomData** %fdata, align 8, !dbg !4907
  %totlayer = getelementptr inbounds %struct.CustomData, %struct.CustomData* %12, i32 0, i32 2, !dbg !4908
  %13 = load i32, i32* %totlayer, align 4, !dbg !4908
  %tobool10 = icmp ne i32 %13, 0, !dbg !4906
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else
  %14 = phi i1 [ false, %if.else ], [ %tobool10, %land.rhs ], !dbg !4909
  %land.ext = zext i1 %14 to i32, !dbg !4906
  %conv11 = trunc i32 %land.ext to i8, !dbg !4910
  store i8 %conv11, i8* %do_tessface.addr, align 1, !dbg !4911
  br label %if.end

if.end:                                           ; preds = %land.end, %if.then
  call void @llvm.dbg.declare(metadata i32* %pidx_start, metadata !4912, metadata !DIExpression()), !dbg !4914
  %15 = load %struct.CustomData*, %struct.CustomData** %pdata, align 8, !dbg !4915
  %call = call i32 @CustomData_get_layer_index(%struct.CustomData* %15, i32 15), !dbg !4916
  store i32 %call, i32* %pidx_start, align 4, !dbg !4914
  call void @llvm.dbg.declare(metadata i32* %lidx_start, metadata !4917, metadata !DIExpression()), !dbg !4918
  %16 = load %struct.CustomData*, %struct.CustomData** %ldata, align 8, !dbg !4919
  %call12 = call i32 @CustomData_get_layer_index(%struct.CustomData* %16, i32 16), !dbg !4920
  store i32 %call12, i32* %lidx_start, align 4, !dbg !4918
  call void @llvm.dbg.declare(metadata i32* %fidx_start, metadata !4921, metadata !DIExpression()), !dbg !4922
  %17 = load i8, i8* %do_tessface.addr, align 1, !dbg !4923
  %conv13 = zext i8 %17 to i32, !dbg !4923
  %tobool14 = icmp ne i32 %conv13, 0, !dbg !4923
  br i1 %tobool14, label %cond.true, label %cond.false, !dbg !4923

cond.true:                                        ; preds = %if.end
  %18 = load %struct.CustomData*, %struct.CustomData** %fdata, align 8, !dbg !4924
  %call15 = call i32 @CustomData_get_layer_index(%struct.CustomData* %18, i32 5), !dbg !4925
  br label %cond.end, !dbg !4923

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !4923

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call15, %cond.true ], [ -1, %cond.false ], !dbg !4923
  store i32 %cond, i32* %fidx_start, align 4, !dbg !4922
  call void @llvm.dbg.declare(metadata i32* %pidx, metadata !4926, metadata !DIExpression()), !dbg !4927
  %19 = load %struct.CustomData*, %struct.CustomData** %pdata, align 8, !dbg !4928
  %20 = load i8*, i8** %old_name.addr, align 8, !dbg !4929
  %call16 = call i32 @CustomData_get_named_layer(%struct.CustomData* %19, i32 15, i8* %20), !dbg !4930
  store i32 %call16, i32* %pidx, align 4, !dbg !4927
  call void @llvm.dbg.declare(metadata i32* %lidx, metadata !4931, metadata !DIExpression()), !dbg !4932
  %21 = load %struct.CustomData*, %struct.CustomData** %ldata, align 8, !dbg !4933
  %22 = load i8*, i8** %old_name.addr, align 8, !dbg !4934
  %call17 = call i32 @CustomData_get_named_layer(%struct.CustomData* %21, i32 16, i8* %22), !dbg !4935
  store i32 %call17, i32* %lidx, align 4, !dbg !4932
  call void @llvm.dbg.declare(metadata i32* %fidx, metadata !4936, metadata !DIExpression()), !dbg !4937
  %23 = load i8, i8* %do_tessface.addr, align 1, !dbg !4938
  %conv18 = zext i8 %23 to i32, !dbg !4938
  %tobool19 = icmp ne i32 %conv18, 0, !dbg !4938
  br i1 %tobool19, label %cond.true20, label %cond.false22, !dbg !4938

cond.true20:                                      ; preds = %cond.end
  %24 = load %struct.CustomData*, %struct.CustomData** %fdata, align 8, !dbg !4939
  %25 = load i8*, i8** %old_name.addr, align 8, !dbg !4940
  %call21 = call i32 @CustomData_get_named_layer(%struct.CustomData* %24, i32 5, i8* %25), !dbg !4941
  br label %cond.end23, !dbg !4938

cond.false22:                                     ; preds = %cond.end
  br label %cond.end23, !dbg !4938

cond.end23:                                       ; preds = %cond.false22, %cond.true20
  %cond24 = phi i32 [ %call21, %cond.true20 ], [ -1, %cond.false22 ], !dbg !4938
  store i32 %cond24, i32* %fidx, align 4, !dbg !4937
  %26 = load i32, i32* %pidx, align 4, !dbg !4942
  %cmp = icmp eq i32 %26, -1, !dbg !4944
  br i1 %cmp, label %if.then26, label %if.else36, !dbg !4945

if.then26:                                        ; preds = %cond.end23
  %27 = load i32, i32* %lidx, align 4, !dbg !4946
  %cmp27 = icmp eq i32 %27, -1, !dbg !4949
  br i1 %cmp27, label %if.then29, label %if.end35, !dbg !4950

if.then29:                                        ; preds = %if.then26
  %28 = load i32, i32* %fidx, align 4, !dbg !4951
  %cmp30 = icmp eq i32 %28, -1, !dbg !4954
  br i1 %cmp30, label %if.then32, label %if.else33, !dbg !4955

if.then32:                                        ; preds = %if.then29
  store i8 0, i8* %retval, align 1, !dbg !4956
  br label %return, !dbg !4956

if.else33:                                        ; preds = %if.then29
  %29 = load i32, i32* %fidx, align 4, !dbg !4958
  store i32 %29, i32* %lidx, align 4, !dbg !4960
  br label %if.end34

if.end34:                                         ; preds = %if.else33
  br label %if.end35, !dbg !4961

if.end35:                                         ; preds = %if.end34, %if.then26
  %30 = load i32, i32* %lidx, align 4, !dbg !4962
  store i32 %30, i32* %pidx, align 4, !dbg !4963
  br label %if.end47, !dbg !4964

if.else36:                                        ; preds = %cond.end23
  %31 = load i32, i32* %lidx, align 4, !dbg !4965
  %cmp37 = icmp eq i32 %31, -1, !dbg !4968
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !4969

if.then39:                                        ; preds = %if.else36
  %32 = load i32, i32* %pidx, align 4, !dbg !4970
  store i32 %32, i32* %lidx, align 4, !dbg !4972
  br label %if.end40, !dbg !4973

if.end40:                                         ; preds = %if.then39, %if.else36
  %33 = load i32, i32* %fidx, align 4, !dbg !4974
  %cmp41 = icmp eq i32 %33, -1, !dbg !4976
  br i1 %cmp41, label %land.lhs.true, label %if.end46, !dbg !4977

land.lhs.true:                                    ; preds = %if.end40
  %34 = load i8, i8* %do_tessface.addr, align 1, !dbg !4978
  %conv43 = zext i8 %34 to i32, !dbg !4978
  %tobool44 = icmp ne i32 %conv43, 0, !dbg !4978
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !4979

if.then45:                                        ; preds = %land.lhs.true
  %35 = load i32, i32* %pidx, align 4, !dbg !4980
  store i32 %35, i32* %fidx, align 4, !dbg !4982
  br label %if.end46, !dbg !4983

if.end46:                                         ; preds = %if.then45, %land.lhs.true, %if.end40
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.end35
  %36 = load i32, i32* %pidx_start, align 4, !dbg !4984
  %37 = load i32, i32* %pidx, align 4, !dbg !4985
  %add = add nsw i32 %37, %36, !dbg !4985
  store i32 %add, i32* %pidx, align 4, !dbg !4985
  %38 = load i32, i32* %lidx_start, align 4, !dbg !4986
  %39 = load i32, i32* %lidx, align 4, !dbg !4987
  %add48 = add nsw i32 %39, %38, !dbg !4987
  store i32 %add48, i32* %lidx, align 4, !dbg !4987
  %40 = load i32, i32* %fidx, align 4, !dbg !4988
  %cmp49 = icmp ne i32 %40, -1, !dbg !4990
  br i1 %cmp49, label %if.then51, label %if.end53, !dbg !4991

if.then51:                                        ; preds = %if.end47
  %41 = load i32, i32* %fidx_start, align 4, !dbg !4992
  %42 = load i32, i32* %fidx, align 4, !dbg !4993
  %add52 = add nsw i32 %42, %41, !dbg !4993
  store i32 %add52, i32* %fidx, align 4, !dbg !4993
  br label %if.end53, !dbg !4994

if.end53:                                         ; preds = %if.then51, %if.end47
  %43 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4995
  %44 = load i32, i32* %pidx, align 4, !dbg !4996
  %45 = load i32, i32* %lidx, align 4, !dbg !4997
  %46 = load i32, i32* %fidx, align 4, !dbg !4998
  %47 = load i8*, i8** %new_name.addr, align 8, !dbg !4999
  %48 = load i8, i8* %do_tessface.addr, align 1, !dbg !5000
  %call54 = call zeroext i8 @BKE_mesh_uv_cdlayer_rename_index(%struct.Mesh* %43, i32 %44, i32 %45, i32 %46, i8* %47, i8 zeroext %48), !dbg !5001
  store i8 %call54, i8* %retval, align 1, !dbg !5002
  br label %return, !dbg !5002

return:                                           ; preds = %if.end53, %if.then32
  %49 = load i8, i8* %retval, align 1, !dbg !5003
  ret i8 %49, !dbg !5003
}

declare dso_local i32 @CustomData_get_layer_index(%struct.CustomData*, i32) #2

declare dso_local i32 @CustomData_get_named_layer(%struct.CustomData*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_boundbox_calc(%struct.Mesh* %me, float* %r_loc, float* %r_size) #0 !dbg !5004 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %r_loc.addr = alloca float*, align 8
  %r_size.addr = alloca float*, align 8
  %bb = alloca %struct.BoundBox*, align 8
  %min = alloca [3 x float], align 4
  %max = alloca [3 x float], align 4
  %mloc = alloca [3 x float], align 4
  %msize = alloca [3 x float], align 4
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !5007, metadata !DIExpression()), !dbg !5008
  store float* %r_loc, float** %r_loc.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_loc.addr, metadata !5009, metadata !DIExpression()), !dbg !5010
  store float* %r_size, float** %r_size.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_size.addr, metadata !5011, metadata !DIExpression()), !dbg !5012
  call void @llvm.dbg.declare(metadata %struct.BoundBox** %bb, metadata !5013, metadata !DIExpression()), !dbg !5016
  call void @llvm.dbg.declare(metadata [3 x float]* %min, metadata !5017, metadata !DIExpression()), !dbg !5018
  call void @llvm.dbg.declare(metadata [3 x float]* %max, metadata !5019, metadata !DIExpression()), !dbg !5020
  call void @llvm.dbg.declare(metadata [3 x float]* %mloc, metadata !5021, metadata !DIExpression()), !dbg !5022
  call void @llvm.dbg.declare(metadata [3 x float]* %msize, metadata !5023, metadata !DIExpression()), !dbg !5024
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5025
  %bb1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 2, !dbg !5027
  %1 = load %struct.BoundBox*, %struct.BoundBox** %bb1, align 8, !dbg !5027
  %cmp = icmp eq %struct.BoundBox* %1, null, !dbg !5028
  br i1 %cmp, label %if.then, label %if.end, !dbg !5029

if.then:                                          ; preds = %entry
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5030
  %call = call i8* %2(i64 104, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0)), !dbg !5030
  %3 = bitcast i8* %call to %struct.BoundBox*, !dbg !5030
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5031
  %bb2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 2, !dbg !5032
  store %struct.BoundBox* %3, %struct.BoundBox** %bb2, align 8, !dbg !5033
  br label %if.end, !dbg !5031

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5034
  %bb3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 2, !dbg !5035
  %6 = load %struct.BoundBox*, %struct.BoundBox** %bb3, align 8, !dbg !5035
  store %struct.BoundBox* %6, %struct.BoundBox** %bb, align 8, !dbg !5036
  %7 = load float*, float** %r_loc.addr, align 8, !dbg !5037
  %tobool = icmp ne float* %7, null, !dbg !5037
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !5039

if.then4:                                         ; preds = %if.end
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %mloc, i64 0, i64 0, !dbg !5040
  store float* %arraydecay, float** %r_loc.addr, align 8, !dbg !5041
  br label %if.end5, !dbg !5042

if.end5:                                          ; preds = %if.then4, %if.end
  %8 = load float*, float** %r_size.addr, align 8, !dbg !5043
  %tobool6 = icmp ne float* %8, null, !dbg !5043
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !5045

if.then7:                                         ; preds = %if.end5
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %msize, i64 0, i64 0, !dbg !5046
  store float* %arraydecay8, float** %r_size.addr, align 8, !dbg !5047
  br label %if.end9, !dbg !5048

if.end9:                                          ; preds = %if.then7, %if.end5
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 2, !dbg !5049
  store float 0x46293E5940000000, float* %arrayidx, align 4, !dbg !5049
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 1, !dbg !5049
  store float 0x46293E5940000000, float* %arrayidx10, align 4, !dbg !5049
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !5049
  store float 0x46293E5940000000, float* %arrayidx11, align 4, !dbg !5049
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 2, !dbg !5049
  store float 0xC6293E5940000000, float* %arrayidx12, align 4, !dbg !5049
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 1, !dbg !5049
  store float 0xC6293E5940000000, float* %arrayidx13, align 4, !dbg !5049
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !5049
  store float 0xC6293E5940000000, float* %arrayidx14, align 4, !dbg !5049
  %9 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5051
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !5053
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !5054
  %call17 = call zeroext i8 @BKE_mesh_minmax(%struct.Mesh* %9, float* %arraydecay15, float* %arraydecay16), !dbg !5055
  %tobool18 = icmp ne i8 %call17, 0, !dbg !5055
  br i1 %tobool18, label %if.end26, label %if.then19, !dbg !5056

if.then19:                                        ; preds = %if.end9
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 2, !dbg !5057
  store float -1.000000e+00, float* %arrayidx20, align 4, !dbg !5059
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 1, !dbg !5060
  store float -1.000000e+00, float* %arrayidx21, align 4, !dbg !5061
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !5062
  store float -1.000000e+00, float* %arrayidx22, align 4, !dbg !5063
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 2, !dbg !5064
  store float 1.000000e+00, float* %arrayidx23, align 4, !dbg !5065
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 1, !dbg !5066
  store float 1.000000e+00, float* %arrayidx24, align 4, !dbg !5067
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !5068
  store float 1.000000e+00, float* %arrayidx25, align 4, !dbg !5069
  br label %if.end26, !dbg !5070

if.end26:                                         ; preds = %if.then19, %if.end9
  %10 = load float*, float** %r_loc.addr, align 8, !dbg !5071
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !5072
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !5073
  call void @mid_v3_v3v3(float* %10, float* %arraydecay27, float* %arraydecay28), !dbg !5074
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !5075
  %11 = load float, float* %arrayidx29, align 4, !dbg !5075
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !5076
  %12 = load float, float* %arrayidx30, align 4, !dbg !5076
  %sub = fsub float %11, %12, !dbg !5077
  %div = fdiv float %sub, 2.000000e+00, !dbg !5078
  %13 = load float*, float** %r_size.addr, align 8, !dbg !5079
  %arrayidx31 = getelementptr inbounds float, float* %13, i64 0, !dbg !5079
  store float %div, float* %arrayidx31, align 4, !dbg !5080
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 1, !dbg !5081
  %14 = load float, float* %arrayidx32, align 4, !dbg !5081
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 1, !dbg !5082
  %15 = load float, float* %arrayidx33, align 4, !dbg !5082
  %sub34 = fsub float %14, %15, !dbg !5083
  %div35 = fdiv float %sub34, 2.000000e+00, !dbg !5084
  %16 = load float*, float** %r_size.addr, align 8, !dbg !5085
  %arrayidx36 = getelementptr inbounds float, float* %16, i64 1, !dbg !5085
  store float %div35, float* %arrayidx36, align 4, !dbg !5086
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 2, !dbg !5087
  %17 = load float, float* %arrayidx37, align 4, !dbg !5087
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 2, !dbg !5088
  %18 = load float, float* %arrayidx38, align 4, !dbg !5088
  %sub39 = fsub float %17, %18, !dbg !5089
  %div40 = fdiv float %sub39, 2.000000e+00, !dbg !5090
  %19 = load float*, float** %r_size.addr, align 8, !dbg !5091
  %arrayidx41 = getelementptr inbounds float, float* %19, i64 2, !dbg !5091
  store float %div40, float* %arrayidx41, align 4, !dbg !5092
  %20 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !5093
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !5094
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !5095
  call void @BKE_boundbox_init_from_minmax(%struct.BoundBox* %20, float* %arraydecay42, float* %arraydecay43), !dbg !5096
  %21 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !5097
  %flag = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %21, i32 0, i32 1, !dbg !5098
  %22 = load i32, i32* %flag, align 4, !dbg !5099
  %and = and i32 %22, -3, !dbg !5099
  store i32 %and, i32* %flag, align 4, !dbg !5099
  ret void, !dbg !5100
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_mesh_minmax(%struct.Mesh* %me, float* %r_min, float* %r_max) #0 !dbg !5101 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %r_min.addr = alloca float*, align 8
  %r_max.addr = alloca float*, align 8
  %i = alloca i32, align 4
  %mvert = alloca %struct.MVert*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !5104, metadata !DIExpression()), !dbg !5105
  store float* %r_min, float** %r_min.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_min.addr, metadata !5106, metadata !DIExpression()), !dbg !5107
  store float* %r_max, float** %r_max.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_max.addr, metadata !5108, metadata !DIExpression()), !dbg !5109
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5110, metadata !DIExpression()), !dbg !5111
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5112
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 26, !dbg !5113
  %1 = load i32, i32* %totvert, align 8, !dbg !5113
  store i32 %1, i32* %i, align 4, !dbg !5111
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !5114, metadata !DIExpression()), !dbg !5115
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5116
  %mvert1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 15, !dbg !5118
  %3 = load %struct.MVert*, %struct.MVert** %mvert1, align 8, !dbg !5118
  store %struct.MVert* %3, %struct.MVert** %mvert, align 8, !dbg !5119
  br label %for.cond, !dbg !5120

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !5121
  %dec = add nsw i32 %4, -1, !dbg !5121
  store i32 %dec, i32* %i, align 4, !dbg !5121
  %tobool = icmp ne i32 %4, 0, !dbg !5123
  br i1 %tobool, label %for.body, label %for.end, !dbg !5123

for.body:                                         ; preds = %for.cond
  %5 = load float*, float** %r_min.addr, align 8, !dbg !5124
  %6 = load float*, float** %r_max.addr, align 8, !dbg !5126
  %7 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !5127
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %7, i32 0, i32 0, !dbg !5128
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5127
  call void @minmax_v3v3_v3(float* %5, float* %6, float* %arraydecay), !dbg !5129
  br label %for.inc, !dbg !5130

for.inc:                                          ; preds = %for.body
  %8 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !5131
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %8, i32 1, !dbg !5131
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mvert, align 8, !dbg !5131
  br label %for.cond, !dbg !5132, !llvm.loop !5133

for.end:                                          ; preds = %for.cond
  %9 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5135
  %totvert2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 26, !dbg !5136
  %10 = load i32, i32* %totvert2, align 8, !dbg !5136
  %cmp = icmp ne i32 %10, 0, !dbg !5137
  %conv = zext i1 %cmp to i32, !dbg !5137
  %conv3 = trunc i32 %conv to i8, !dbg !5138
  ret i8 %conv3, !dbg !5139
}

declare dso_local void @mid_v3_v3v3(float*, float*, float*) #2

declare dso_local void @BKE_boundbox_init_from_minmax(%struct.BoundBox*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_texspace_calc(%struct.Mesh* %me) #0 !dbg !5140 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %loc = alloca [3 x float], align 4
  %size = alloca [3 x float], align 4
  %a = alloca i32, align 4
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !5141, metadata !DIExpression()), !dbg !5142
  call void @llvm.dbg.declare(metadata [3 x float]* %loc, metadata !5143, metadata !DIExpression()), !dbg !5144
  call void @llvm.dbg.declare(metadata [3 x float]* %size, metadata !5145, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5147, metadata !DIExpression()), !dbg !5148
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5149
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !5150
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !5151
  call void @BKE_mesh_boundbox_calc(%struct.Mesh* %0, float* %arraydecay, float* %arraydecay1), !dbg !5152
  %1 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5153
  %texflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %1, i32 0, i32 37, !dbg !5155
  %2 = load i16, i16* %texflag, align 4, !dbg !5155
  %conv = sext i16 %2 to i32, !dbg !5153
  %and = and i32 %conv, 1, !dbg !5156
  %tobool = icmp ne i32 %and, 0, !dbg !5156
  br i1 %tobool, label %if.then, label %if.end41, !dbg !5157

if.then:                                          ; preds = %entry
  store i32 0, i32* %a, align 4, !dbg !5158
  br label %for.cond, !dbg !5161

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load i32, i32* %a, align 4, !dbg !5162
  %cmp = icmp slt i32 %3, 3, !dbg !5164
  br i1 %cmp, label %for.body, label %for.end, !dbg !5165

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %a, align 4, !dbg !5166
  %idxprom = sext i32 %4 to i64, !dbg !5169
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom, !dbg !5169
  %5 = load float, float* %arrayidx, align 4, !dbg !5169
  %cmp3 = fcmp oeq float %5, 0.000000e+00, !dbg !5170
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !5171

if.then5:                                         ; preds = %for.body
  %6 = load i32, i32* %a, align 4, !dbg !5172
  %idxprom6 = sext i32 %6 to i64, !dbg !5173
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom6, !dbg !5173
  store float 1.000000e+00, float* %arrayidx7, align 4, !dbg !5174
  br label %if.end33, !dbg !5173

if.else:                                          ; preds = %for.body
  %7 = load i32, i32* %a, align 4, !dbg !5175
  %idxprom8 = sext i32 %7 to i64, !dbg !5177
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom8, !dbg !5177
  %8 = load float, float* %arrayidx9, align 4, !dbg !5177
  %cmp10 = fcmp ogt float %8, 0.000000e+00, !dbg !5178
  br i1 %cmp10, label %land.lhs.true, label %if.else19, !dbg !5179

land.lhs.true:                                    ; preds = %if.else
  %9 = load i32, i32* %a, align 4, !dbg !5180
  %idxprom12 = sext i32 %9 to i64, !dbg !5181
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom12, !dbg !5181
  %10 = load float, float* %arrayidx13, align 4, !dbg !5181
  %cmp14 = fcmp olt float %10, 0x3EE4F8B580000000, !dbg !5182
  br i1 %cmp14, label %if.then16, label %if.else19, !dbg !5183

if.then16:                                        ; preds = %land.lhs.true
  %11 = load i32, i32* %a, align 4, !dbg !5184
  %idxprom17 = sext i32 %11 to i64, !dbg !5185
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom17, !dbg !5185
  store float 0x3EE4F8B580000000, float* %arrayidx18, align 4, !dbg !5186
  br label %if.end32, !dbg !5185

if.else19:                                        ; preds = %land.lhs.true, %if.else
  %12 = load i32, i32* %a, align 4, !dbg !5187
  %idxprom20 = sext i32 %12 to i64, !dbg !5189
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom20, !dbg !5189
  %13 = load float, float* %arrayidx21, align 4, !dbg !5189
  %cmp22 = fcmp olt float %13, 0.000000e+00, !dbg !5190
  br i1 %cmp22, label %land.lhs.true24, label %if.end, !dbg !5191

land.lhs.true24:                                  ; preds = %if.else19
  %14 = load i32, i32* %a, align 4, !dbg !5192
  %idxprom25 = sext i32 %14 to i64, !dbg !5193
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom25, !dbg !5193
  %15 = load float, float* %arrayidx26, align 4, !dbg !5193
  %cmp27 = fcmp ogt float %15, 0xBEE4F8B580000000, !dbg !5194
  br i1 %cmp27, label %if.then29, label %if.end, !dbg !5195

if.then29:                                        ; preds = %land.lhs.true24
  %16 = load i32, i32* %a, align 4, !dbg !5196
  %idxprom30 = sext i32 %16 to i64, !dbg !5197
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom30, !dbg !5197
  store float 0xBEE4F8B580000000, float* %arrayidx31, align 4, !dbg !5198
  br label %if.end, !dbg !5197

if.end:                                           ; preds = %if.then29, %land.lhs.true24, %if.else19
  br label %if.end32

if.end32:                                         ; preds = %if.end, %if.then16
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then5
  br label %for.inc, !dbg !5199

for.inc:                                          ; preds = %if.end33
  %17 = load i32, i32* %a, align 4, !dbg !5200
  %inc = add nsw i32 %17, 1, !dbg !5200
  store i32 %inc, i32* %a, align 4, !dbg !5200
  br label %for.cond, !dbg !5201, !llvm.loop !5202

for.end:                                          ; preds = %for.cond
  %18 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5204
  %loc34 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 33, !dbg !5205
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %loc34, i64 0, i64 0, !dbg !5204
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !5206
  call void @copy_v3_v3(float* %arraydecay35, float* %arraydecay36), !dbg !5207
  %19 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5208
  %size37 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %19, i32 0, i32 34, !dbg !5209
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %size37, i64 0, i64 0, !dbg !5208
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !5210
  call void @copy_v3_v3(float* %arraydecay38, float* %arraydecay39), !dbg !5211
  %20 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5212
  %rot = getelementptr inbounds %struct.Mesh, %struct.Mesh* %20, i32 0, i32 35, !dbg !5213
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %rot, i64 0, i64 0, !dbg !5212
  call void @zero_v3(float* %arraydecay40), !dbg !5214
  br label %if.end41, !dbg !5215

if.end41:                                         ; preds = %for.end, %entry
  ret void, !dbg !5216
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !5217 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5221, metadata !DIExpression()), !dbg !5222
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5223, metadata !DIExpression()), !dbg !5224
  %0 = load float*, float** %a.addr, align 8, !dbg !5225
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5225
  %1 = load float, float* %arrayidx, align 4, !dbg !5225
  %2 = load float*, float** %r.addr, align 8, !dbg !5226
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5226
  store float %1, float* %arrayidx1, align 4, !dbg !5227
  %3 = load float*, float** %a.addr, align 8, !dbg !5228
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !5228
  %4 = load float, float* %arrayidx2, align 4, !dbg !5228
  %5 = load float*, float** %r.addr, align 8, !dbg !5229
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !5229
  store float %4, float* %arrayidx3, align 4, !dbg !5230
  %6 = load float*, float** %a.addr, align 8, !dbg !5231
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !5231
  %7 = load float, float* %arrayidx4, align 4, !dbg !5231
  %8 = load float*, float** %r.addr, align 8, !dbg !5232
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5232
  store float %7, float* %arrayidx5, align 4, !dbg !5233
  ret void, !dbg !5234
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !5235 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5238, metadata !DIExpression()), !dbg !5239
  %0 = load float*, float** %r.addr, align 8, !dbg !5240
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5240
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !5241
  %1 = load float*, float** %r.addr, align 8, !dbg !5242
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !5242
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !5243
  %2 = load float*, float** %r.addr, align 8, !dbg !5244
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !5244
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !5245
  ret void, !dbg !5246
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.BoundBox* @BKE_mesh_boundbox_get(%struct.Object* %ob) #0 !dbg !5247 {
entry:
  %retval = alloca %struct.BoundBox*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5250, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !5252, metadata !DIExpression()), !dbg !5253
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5254
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !5255
  %1 = load i8*, i8** %data, align 8, !dbg !5255
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !5254
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !5253
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5256
  %bb = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 15, !dbg !5258
  %4 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !5258
  %tobool = icmp ne %struct.BoundBox* %4, null, !dbg !5256
  br i1 %tobool, label %if.then, label %if.end, !dbg !5259

if.then:                                          ; preds = %entry
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5260
  %bb1 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 15, !dbg !5261
  %6 = load %struct.BoundBox*, %struct.BoundBox** %bb1, align 8, !dbg !5261
  store %struct.BoundBox* %6, %struct.BoundBox** %retval, align 8, !dbg !5262
  br label %return, !dbg !5262

if.end:                                           ; preds = %entry
  %7 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5263
  %bb2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 2, !dbg !5265
  %8 = load %struct.BoundBox*, %struct.BoundBox** %bb2, align 8, !dbg !5265
  %cmp = icmp eq %struct.BoundBox* %8, null, !dbg !5266
  br i1 %cmp, label %if.then5, label %lor.lhs.false, !dbg !5267

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5268
  %bb3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 2, !dbg !5269
  %10 = load %struct.BoundBox*, %struct.BoundBox** %bb3, align 8, !dbg !5269
  %flag = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %10, i32 0, i32 1, !dbg !5270
  %11 = load i32, i32* %flag, align 4, !dbg !5270
  %and = and i32 %11, 2, !dbg !5271
  %tobool4 = icmp ne i32 %and, 0, !dbg !5271
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !5272

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  %12 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5273
  call void @BKE_mesh_texspace_calc(%struct.Mesh* %12), !dbg !5275
  br label %if.end6, !dbg !5276

if.end6:                                          ; preds = %if.then5, %lor.lhs.false
  %13 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5277
  %bb7 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %13, i32 0, i32 2, !dbg !5278
  %14 = load %struct.BoundBox*, %struct.BoundBox** %bb7, align 8, !dbg !5278
  store %struct.BoundBox* %14, %struct.BoundBox** %retval, align 8, !dbg !5279
  br label %return, !dbg !5279

return:                                           ; preds = %if.end6, %if.then
  %15 = load %struct.BoundBox*, %struct.BoundBox** %retval, align 8, !dbg !5280
  ret %struct.BoundBox* %15, !dbg !5280
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_texspace_get(%struct.Mesh* %me, float* %r_loc, float* %r_rot, float* %r_size) #0 !dbg !5281 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %r_loc.addr = alloca float*, align 8
  %r_rot.addr = alloca float*, align 8
  %r_size.addr = alloca float*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !5284, metadata !DIExpression()), !dbg !5285
  store float* %r_loc, float** %r_loc.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_loc.addr, metadata !5286, metadata !DIExpression()), !dbg !5287
  store float* %r_rot, float** %r_rot.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_rot.addr, metadata !5288, metadata !DIExpression()), !dbg !5289
  store float* %r_size, float** %r_size.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_size.addr, metadata !5290, metadata !DIExpression()), !dbg !5291
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5292
  %bb = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 2, !dbg !5294
  %1 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !5294
  %cmp = icmp eq %struct.BoundBox* %1, null, !dbg !5295
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5296

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5297
  %bb1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 2, !dbg !5298
  %3 = load %struct.BoundBox*, %struct.BoundBox** %bb1, align 8, !dbg !5298
  %flag = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %3, i32 0, i32 1, !dbg !5299
  %4 = load i32, i32* %flag, align 4, !dbg !5299
  %and = and i32 %4, 2, !dbg !5300
  %tobool = icmp ne i32 %and, 0, !dbg !5300
  br i1 %tobool, label %if.then, label %if.end, !dbg !5301

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5302
  call void @BKE_mesh_texspace_calc(%struct.Mesh* %5), !dbg !5304
  br label %if.end, !dbg !5305

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %6 = load float*, float** %r_loc.addr, align 8, !dbg !5306
  %tobool2 = icmp ne float* %6, null, !dbg !5306
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !5308

if.then3:                                         ; preds = %if.end
  %7 = load float*, float** %r_loc.addr, align 8, !dbg !5309
  %8 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5310
  %loc = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 33, !dbg !5311
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !5310
  call void @copy_v3_v3(float* %7, float* %arraydecay), !dbg !5312
  br label %if.end4, !dbg !5312

if.end4:                                          ; preds = %if.then3, %if.end
  %9 = load float*, float** %r_rot.addr, align 8, !dbg !5313
  %tobool5 = icmp ne float* %9, null, !dbg !5313
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !5315

if.then6:                                         ; preds = %if.end4
  %10 = load float*, float** %r_rot.addr, align 8, !dbg !5316
  %11 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5317
  %rot = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 35, !dbg !5318
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %rot, i64 0, i64 0, !dbg !5317
  call void @copy_v3_v3(float* %10, float* %arraydecay7), !dbg !5319
  br label %if.end8, !dbg !5319

if.end8:                                          ; preds = %if.then6, %if.end4
  %12 = load float*, float** %r_size.addr, align 8, !dbg !5320
  %tobool9 = icmp ne float* %12, null, !dbg !5320
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !5322

if.then10:                                        ; preds = %if.end8
  %13 = load float*, float** %r_size.addr, align 8, !dbg !5323
  %14 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5324
  %size = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 34, !dbg !5325
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !5324
  call void @copy_v3_v3(float* %13, float* %arraydecay11), !dbg !5326
  br label %if.end12, !dbg !5326

if.end12:                                         ; preds = %if.then10, %if.end8
  ret void, !dbg !5327
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_texspace_copy_from_object(%struct.Mesh* %me, %struct.Object* %ob) #0 !dbg !5328 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %texloc = alloca float*, align 8
  %texrot = alloca float*, align 8
  %texsize = alloca float*, align 8
  %texflag = alloca i16*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !5331, metadata !DIExpression()), !dbg !5332
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5333, metadata !DIExpression()), !dbg !5334
  call void @llvm.dbg.declare(metadata float** %texloc, metadata !5335, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.declare(metadata float** %texrot, metadata !5337, metadata !DIExpression()), !dbg !5338
  call void @llvm.dbg.declare(metadata float** %texsize, metadata !5339, metadata !DIExpression()), !dbg !5340
  call void @llvm.dbg.declare(metadata i16** %texflag, metadata !5341, metadata !DIExpression()), !dbg !5342
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5343
  %call = call i32 @BKE_object_obdata_texspace_get(%struct.Object* %0, i16** %texflag, float** %texloc, float** %texsize, float** %texrot), !dbg !5345
  %tobool = icmp ne i32 %call, 0, !dbg !5345
  br i1 %tobool, label %if.then, label %if.end, !dbg !5346

if.then:                                          ; preds = %entry
  %1 = load i16*, i16** %texflag, align 8, !dbg !5347
  %2 = load i16, i16* %1, align 2, !dbg !5349
  %3 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5350
  %texflag1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 37, !dbg !5351
  store i16 %2, i16* %texflag1, align 4, !dbg !5352
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5353
  %loc = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 33, !dbg !5354
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !5353
  %5 = load float*, float** %texloc, align 8, !dbg !5355
  call void @copy_v3_v3(float* %arraydecay, float* %5), !dbg !5356
  %6 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5357
  %size = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 34, !dbg !5358
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !5357
  %7 = load float*, float** %texsize, align 8, !dbg !5359
  call void @copy_v3_v3(float* %arraydecay2, float* %7), !dbg !5360
  %8 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5361
  %rot = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 35, !dbg !5362
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %rot, i64 0, i64 0, !dbg !5361
  %9 = load float*, float** %texrot, align 8, !dbg !5363
  call void @copy_v3_v3(float* %arraydecay3, float* %9), !dbg !5364
  br label %if.end, !dbg !5365

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5366
}

declare dso_local i32 @BKE_object_obdata_texspace_get(%struct.Object*, i16**, float**, float**, float**) #2

; Function Attrs: noinline nounwind uwtable
define dso_local [3 x float]* @BKE_mesh_orco_verts_get(%struct.Object* %ob) #0 !dbg !5367 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %tme = alloca %struct.Mesh*, align 8
  %a = alloca i32, align 4
  %totvert = alloca i32, align 4
  %vcos = alloca [3 x float]*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5370, metadata !DIExpression()), !dbg !5371
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !5372, metadata !DIExpression()), !dbg !5373
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5374
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !5375
  %1 = load i8*, i8** %data, align 8, !dbg !5375
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !5374
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !5373
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !5376, metadata !DIExpression()), !dbg !5377
  store %struct.MVert* null, %struct.MVert** %mvert, align 8, !dbg !5377
  call void @llvm.dbg.declare(metadata %struct.Mesh** %tme, metadata !5378, metadata !DIExpression()), !dbg !5379
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5380
  %texcomesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 19, !dbg !5381
  %4 = load %struct.Mesh*, %struct.Mesh** %texcomesh, align 8, !dbg !5381
  %tobool = icmp ne %struct.Mesh* %4, null, !dbg !5380
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5380

cond.true:                                        ; preds = %entry
  %5 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5382
  %texcomesh1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 19, !dbg !5383
  %6 = load %struct.Mesh*, %struct.Mesh** %texcomesh1, align 8, !dbg !5383
  br label %cond.end, !dbg !5380

cond.false:                                       ; preds = %entry
  %7 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5384
  br label %cond.end, !dbg !5380

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.Mesh* [ %6, %cond.true ], [ %7, %cond.false ], !dbg !5380
  store %struct.Mesh* %cond, %struct.Mesh** %tme, align 8, !dbg !5379
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5385, metadata !DIExpression()), !dbg !5386
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !5387, metadata !DIExpression()), !dbg !5388
  call void @llvm.dbg.declare(metadata [3 x float]** %vcos, metadata !5389, metadata !DIExpression()), !dbg !5390
  store [3 x float]* null, [3 x float]** %vcos, align 8, !dbg !5390
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5391
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5392
  %totvert2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 26, !dbg !5393
  %10 = load i32, i32* %totvert2, align 8, !dbg !5393
  %conv = sext i32 %10 to i64, !dbg !5392
  %mul = mul i64 12, %conv, !dbg !5394
  %call = call i8* %8(i64 %mul, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0)), !dbg !5391
  %11 = bitcast i8* %call to [3 x float]*, !dbg !5391
  store [3 x float]* %11, [3 x float]** %vcos, align 8, !dbg !5395
  %12 = load %struct.Mesh*, %struct.Mesh** %tme, align 8, !dbg !5396
  %mvert3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 15, !dbg !5397
  %13 = load %struct.MVert*, %struct.MVert** %mvert3, align 8, !dbg !5397
  store %struct.MVert* %13, %struct.MVert** %mvert, align 8, !dbg !5398
  %14 = load %struct.Mesh*, %struct.Mesh** %tme, align 8, !dbg !5399
  %totvert4 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 26, !dbg !5400
  %15 = load i32, i32* %totvert4, align 8, !dbg !5400
  %16 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5401
  %totvert5 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %16, i32 0, i32 26, !dbg !5402
  %17 = load i32, i32* %totvert5, align 8, !dbg !5402
  %call6 = call i32 @min_ii(i32 %15, i32 %17), !dbg !5403
  store i32 %call6, i32* %totvert, align 4, !dbg !5404
  store i32 0, i32* %a, align 4, !dbg !5405
  br label %for.cond, !dbg !5407

for.cond:                                         ; preds = %for.inc, %cond.end
  %18 = load i32, i32* %a, align 4, !dbg !5408
  %19 = load i32, i32* %totvert, align 4, !dbg !5410
  %cmp = icmp slt i32 %18, %19, !dbg !5411
  br i1 %cmp, label %for.body, label %for.end, !dbg !5412

for.body:                                         ; preds = %for.cond
  %20 = load [3 x float]*, [3 x float]** %vcos, align 8, !dbg !5413
  %21 = load i32, i32* %a, align 4, !dbg !5415
  %idxprom = sext i32 %21 to i64, !dbg !5413
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %20, i64 %idxprom, !dbg !5413
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !5413
  %22 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !5416
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %22, i32 0, i32 0, !dbg !5417
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5416
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay8), !dbg !5418
  br label %for.inc, !dbg !5419

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %a, align 4, !dbg !5420
  %inc = add nsw i32 %23, 1, !dbg !5420
  store i32 %inc, i32* %a, align 4, !dbg !5420
  %24 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !5421
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %24, i32 1, !dbg !5421
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mvert, align 8, !dbg !5421
  br label %for.cond, !dbg !5422, !llvm.loop !5423

for.end:                                          ; preds = %for.cond
  %25 = load [3 x float]*, [3 x float]** %vcos, align 8, !dbg !5425
  ret [3 x float]* %25, !dbg !5426
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @min_ii(i32 %a, i32 %b) #0 !dbg !5427 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !5431, metadata !DIExpression()), !dbg !5432
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !5433, metadata !DIExpression()), !dbg !5434
  %0 = load i32, i32* %a.addr, align 4, !dbg !5435
  %1 = load i32, i32* %b.addr, align 4, !dbg !5436
  %cmp = icmp slt i32 %0, %1, !dbg !5437
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5438

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !5439
  br label %cond.end, !dbg !5438

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !5440
  br label %cond.end, !dbg !5438

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !5438
  ret i32 %cond, !dbg !5441
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_orco_verts_transform(%struct.Mesh* %me, [3 x float]* %orco, i32 %totvert, i32 %invert) #0 !dbg !5442 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %orco.addr = alloca [3 x float]*, align 8
  %totvert.addr = alloca i32, align 4
  %invert.addr = alloca i32, align 4
  %loc = alloca [3 x float], align 4
  %size = alloca [3 x float], align 4
  %a = alloca i32, align 4
  %co = alloca float*, align 8
  %co10 = alloca float*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !5445, metadata !DIExpression()), !dbg !5446
  store [3 x float]* %orco, [3 x float]** %orco.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %orco.addr, metadata !5447, metadata !DIExpression()), !dbg !5448
  store i32 %totvert, i32* %totvert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totvert.addr, metadata !5449, metadata !DIExpression()), !dbg !5450
  store i32 %invert, i32* %invert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %invert.addr, metadata !5451, metadata !DIExpression()), !dbg !5452
  call void @llvm.dbg.declare(metadata [3 x float]* %loc, metadata !5453, metadata !DIExpression()), !dbg !5454
  call void @llvm.dbg.declare(metadata [3 x float]* %size, metadata !5455, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5457, metadata !DIExpression()), !dbg !5458
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5459
  %texcomesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 19, !dbg !5460
  %1 = load %struct.Mesh*, %struct.Mesh** %texcomesh, align 8, !dbg !5460
  %tobool = icmp ne %struct.Mesh* %1, null, !dbg !5459
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5459

cond.true:                                        ; preds = %entry
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5461
  %texcomesh1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 19, !dbg !5462
  %3 = load %struct.Mesh*, %struct.Mesh** %texcomesh1, align 8, !dbg !5462
  br label %cond.end, !dbg !5459

cond.false:                                       ; preds = %entry
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5463
  br label %cond.end, !dbg !5459

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.Mesh* [ %3, %cond.true ], [ %4, %cond.false ], !dbg !5459
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !5464
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !5465
  call void @BKE_mesh_texspace_get(%struct.Mesh* %cond, float* %arraydecay, float* null, float* %arraydecay2), !dbg !5466
  %5 = load i32, i32* %invert.addr, align 4, !dbg !5467
  %tobool3 = icmp ne i32 %5, 0, !dbg !5467
  br i1 %tobool3, label %if.then, label %if.else, !dbg !5469

if.then:                                          ; preds = %cond.end
  store i32 0, i32* %a, align 4, !dbg !5470
  br label %for.cond, !dbg !5473

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i32, i32* %a, align 4, !dbg !5474
  %7 = load i32, i32* %totvert.addr, align 4, !dbg !5476
  %cmp = icmp slt i32 %6, %7, !dbg !5477
  br i1 %cmp, label %for.body, label %for.end, !dbg !5478

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float** %co, metadata !5479, metadata !DIExpression()), !dbg !5481
  %8 = load [3 x float]*, [3 x float]** %orco.addr, align 8, !dbg !5482
  %9 = load i32, i32* %a, align 4, !dbg !5483
  %idxprom = sext i32 %9 to i64, !dbg !5482
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %8, i64 %idxprom, !dbg !5482
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !5482
  store float* %arraydecay4, float** %co, align 8, !dbg !5481
  %10 = load float*, float** %co, align 8, !dbg !5484
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !5485
  %11 = load float*, float** %co, align 8, !dbg !5486
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !5487
  call void @madd_v3_v3v3v3(float* %10, float* %arraydecay5, float* %11, float* %arraydecay6), !dbg !5488
  br label %for.inc, !dbg !5489

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %a, align 4, !dbg !5490
  %inc = add nsw i32 %12, 1, !dbg !5490
  store i32 %inc, i32* %a, align 4, !dbg !5490
  br label %for.cond, !dbg !5491, !llvm.loop !5492

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !5494

if.else:                                          ; preds = %cond.end
  store i32 0, i32* %a, align 4, !dbg !5495
  br label %for.cond7, !dbg !5498

for.cond7:                                        ; preds = %for.inc30, %if.else
  %13 = load i32, i32* %a, align 4, !dbg !5499
  %14 = load i32, i32* %totvert.addr, align 4, !dbg !5501
  %cmp8 = icmp slt i32 %13, %14, !dbg !5502
  br i1 %cmp8, label %for.body9, label %for.end32, !dbg !5503

for.body9:                                        ; preds = %for.cond7
  call void @llvm.dbg.declare(metadata float** %co10, metadata !5504, metadata !DIExpression()), !dbg !5506
  %15 = load [3 x float]*, [3 x float]** %orco.addr, align 8, !dbg !5507
  %16 = load i32, i32* %a, align 4, !dbg !5508
  %idxprom11 = sext i32 %16 to i64, !dbg !5507
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %15, i64 %idxprom11, !dbg !5507
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx12, i64 0, i64 0, !dbg !5507
  store float* %arraydecay13, float** %co10, align 8, !dbg !5506
  %17 = load float*, float** %co10, align 8, !dbg !5509
  %arrayidx14 = getelementptr inbounds float, float* %17, i64 0, !dbg !5509
  %18 = load float, float* %arrayidx14, align 4, !dbg !5509
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !5510
  %19 = load float, float* %arrayidx15, align 4, !dbg !5510
  %sub = fsub float %18, %19, !dbg !5511
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !5512
  %20 = load float, float* %arrayidx16, align 4, !dbg !5512
  %div = fdiv float %sub, %20, !dbg !5513
  %21 = load float*, float** %co10, align 8, !dbg !5514
  %arrayidx17 = getelementptr inbounds float, float* %21, i64 0, !dbg !5514
  store float %div, float* %arrayidx17, align 4, !dbg !5515
  %22 = load float*, float** %co10, align 8, !dbg !5516
  %arrayidx18 = getelementptr inbounds float, float* %22, i64 1, !dbg !5516
  %23 = load float, float* %arrayidx18, align 4, !dbg !5516
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 1, !dbg !5517
  %24 = load float, float* %arrayidx19, align 4, !dbg !5517
  %sub20 = fsub float %23, %24, !dbg !5518
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !5519
  %25 = load float, float* %arrayidx21, align 4, !dbg !5519
  %div22 = fdiv float %sub20, %25, !dbg !5520
  %26 = load float*, float** %co10, align 8, !dbg !5521
  %arrayidx23 = getelementptr inbounds float, float* %26, i64 1, !dbg !5521
  store float %div22, float* %arrayidx23, align 4, !dbg !5522
  %27 = load float*, float** %co10, align 8, !dbg !5523
  %arrayidx24 = getelementptr inbounds float, float* %27, i64 2, !dbg !5523
  %28 = load float, float* %arrayidx24, align 4, !dbg !5523
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 2, !dbg !5524
  %29 = load float, float* %arrayidx25, align 4, !dbg !5524
  %sub26 = fsub float %28, %29, !dbg !5525
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !5526
  %30 = load float, float* %arrayidx27, align 4, !dbg !5526
  %div28 = fdiv float %sub26, %30, !dbg !5527
  %31 = load float*, float** %co10, align 8, !dbg !5528
  %arrayidx29 = getelementptr inbounds float, float* %31, i64 2, !dbg !5528
  store float %div28, float* %arrayidx29, align 4, !dbg !5529
  br label %for.inc30, !dbg !5530

for.inc30:                                        ; preds = %for.body9
  %32 = load i32, i32* %a, align 4, !dbg !5531
  %inc31 = add nsw i32 %32, 1, !dbg !5531
  store i32 %inc31, i32* %a, align 4, !dbg !5531
  br label %for.cond7, !dbg !5532, !llvm.loop !5533

for.end32:                                        ; preds = %for.cond7
  br label %if.end

if.end:                                           ; preds = %for.end32, %for.end
  ret void, !dbg !5535
}

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3v3v3(float* %r, float* %a, float* %b, float* %c) #0 !dbg !5536 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %c.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5539, metadata !DIExpression()), !dbg !5540
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5541, metadata !DIExpression()), !dbg !5542
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5543, metadata !DIExpression()), !dbg !5544
  store float* %c, float** %c.addr, align 8
  call void @llvm.dbg.declare(metadata float** %c.addr, metadata !5545, metadata !DIExpression()), !dbg !5546
  %0 = load float*, float** %a.addr, align 8, !dbg !5547
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5547
  %1 = load float, float* %arrayidx, align 4, !dbg !5547
  %2 = load float*, float** %b.addr, align 8, !dbg !5548
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5548
  %3 = load float, float* %arrayidx1, align 4, !dbg !5548
  %4 = load float*, float** %c.addr, align 8, !dbg !5549
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !5549
  %5 = load float, float* %arrayidx2, align 4, !dbg !5549
  %mul = fmul float %3, %5, !dbg !5550
  %add = fadd float %1, %mul, !dbg !5551
  %6 = load float*, float** %r.addr, align 8, !dbg !5552
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 0, !dbg !5552
  store float %add, float* %arrayidx3, align 4, !dbg !5553
  %7 = load float*, float** %a.addr, align 8, !dbg !5554
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !5554
  %8 = load float, float* %arrayidx4, align 4, !dbg !5554
  %9 = load float*, float** %b.addr, align 8, !dbg !5555
  %arrayidx5 = getelementptr inbounds float, float* %9, i64 1, !dbg !5555
  %10 = load float, float* %arrayidx5, align 4, !dbg !5555
  %11 = load float*, float** %c.addr, align 8, !dbg !5556
  %arrayidx6 = getelementptr inbounds float, float* %11, i64 1, !dbg !5556
  %12 = load float, float* %arrayidx6, align 4, !dbg !5556
  %mul7 = fmul float %10, %12, !dbg !5557
  %add8 = fadd float %8, %mul7, !dbg !5558
  %13 = load float*, float** %r.addr, align 8, !dbg !5559
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 1, !dbg !5559
  store float %add8, float* %arrayidx9, align 4, !dbg !5560
  %14 = load float*, float** %a.addr, align 8, !dbg !5561
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !5561
  %15 = load float, float* %arrayidx10, align 4, !dbg !5561
  %16 = load float*, float** %b.addr, align 8, !dbg !5562
  %arrayidx11 = getelementptr inbounds float, float* %16, i64 2, !dbg !5562
  %17 = load float, float* %arrayidx11, align 4, !dbg !5562
  %18 = load float*, float** %c.addr, align 8, !dbg !5563
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 2, !dbg !5563
  %19 = load float, float* %arrayidx12, align 4, !dbg !5563
  %mul13 = fmul float %17, %19, !dbg !5564
  %add14 = fadd float %15, %mul13, !dbg !5565
  %20 = load float*, float** %r.addr, align 8, !dbg !5566
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 2, !dbg !5566
  store float %add14, float* %arrayidx15, align 4, !dbg !5567
  ret void, !dbg !5568
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @test_index_face(%struct.MFace* %mface, %struct.CustomData* %fdata, i32 %mfindex, i32 %nr) #0 !dbg !2 {
entry:
  %retval = alloca i32, align 4
  %mface.addr = alloca %struct.MFace*, align 8
  %fdata.addr = alloca %struct.CustomData*, align 8
  %mfindex.addr = alloca i32, align 4
  %nr.addr = alloca i32, align 4
  %sw_ap = alloca i32, align 4
  %sw_ap81 = alloca i32, align 4
  %sw_ap99 = alloca i32, align 4
  %sw_ap104 = alloca i32, align 4
  store %struct.MFace* %mface, %struct.MFace** %mface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface.addr, metadata !5569, metadata !DIExpression()), !dbg !5570
  store %struct.CustomData* %fdata, %struct.CustomData** %fdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %fdata.addr, metadata !5571, metadata !DIExpression()), !dbg !5572
  store i32 %mfindex, i32* %mfindex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mfindex.addr, metadata !5573, metadata !DIExpression()), !dbg !5574
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !5575, metadata !DIExpression()), !dbg !5576
  %0 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5577
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %0, i32 0, i32 2, !dbg !5579
  %1 = load i32, i32* %v3, align 4, !dbg !5579
  %tobool = icmp ne i32 %1, 0, !dbg !5577
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !5580

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %nr.addr, align 4, !dbg !5581
  %cmp = icmp eq i32 %2, 4, !dbg !5582
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5583

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %3 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5584
  %v31 = getelementptr inbounds %struct.MFace, %struct.MFace* %3, i32 0, i32 2, !dbg !5585
  %4 = load i32, i32* %v31, align 4, !dbg !5585
  %5 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5586
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %5, i32 0, i32 3, !dbg !5587
  %6 = load i32, i32* %v4, align 4, !dbg !5587
  %cmp2 = icmp eq i32 %4, %6, !dbg !5588
  br i1 %cmp2, label %if.then, label %if.end, !dbg !5589

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5590
  %v43 = getelementptr inbounds %struct.MFace, %struct.MFace* %7, i32 0, i32 3, !dbg !5592
  store i32 0, i32* %v43, align 4, !dbg !5593
  %8 = load i32, i32* %nr.addr, align 4, !dbg !5594
  %dec = add nsw i32 %8, -1, !dbg !5594
  store i32 %dec, i32* %nr.addr, align 4, !dbg !5594
  br label %if.end, !dbg !5595

if.end:                                           ; preds = %if.then, %land.lhs.true, %lor.lhs.false
  %9 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5596
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %9, i32 0, i32 1, !dbg !5598
  %10 = load i32, i32* %v2, align 4, !dbg !5598
  %tobool4 = icmp ne i32 %10, 0, !dbg !5596
  br i1 %tobool4, label %land.lhs.true8, label %lor.lhs.false5, !dbg !5599

lor.lhs.false5:                                   ; preds = %if.end
  %11 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5600
  %v46 = getelementptr inbounds %struct.MFace, %struct.MFace* %11, i32 0, i32 3, !dbg !5601
  %12 = load i32, i32* %v46, align 4, !dbg !5601
  %tobool7 = icmp ne i32 %12, 0, !dbg !5600
  br i1 %tobool7, label %land.lhs.true8, label %if.end17, !dbg !5602

land.lhs.true8:                                   ; preds = %lor.lhs.false5, %if.end
  %13 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5603
  %v29 = getelementptr inbounds %struct.MFace, %struct.MFace* %13, i32 0, i32 1, !dbg !5604
  %14 = load i32, i32* %v29, align 4, !dbg !5604
  %15 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5605
  %v310 = getelementptr inbounds %struct.MFace, %struct.MFace* %15, i32 0, i32 2, !dbg !5606
  %16 = load i32, i32* %v310, align 4, !dbg !5606
  %cmp11 = icmp eq i32 %14, %16, !dbg !5607
  br i1 %cmp11, label %if.then12, label %if.end17, !dbg !5608

if.then12:                                        ; preds = %land.lhs.true8
  %17 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5609
  %v413 = getelementptr inbounds %struct.MFace, %struct.MFace* %17, i32 0, i32 3, !dbg !5611
  %18 = load i32, i32* %v413, align 4, !dbg !5611
  %19 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5612
  %v314 = getelementptr inbounds %struct.MFace, %struct.MFace* %19, i32 0, i32 2, !dbg !5613
  store i32 %18, i32* %v314, align 4, !dbg !5614
  %20 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5615
  %v415 = getelementptr inbounds %struct.MFace, %struct.MFace* %20, i32 0, i32 3, !dbg !5616
  store i32 0, i32* %v415, align 4, !dbg !5617
  %21 = load i32, i32* %nr.addr, align 4, !dbg !5618
  %dec16 = add nsw i32 %21, -1, !dbg !5618
  store i32 %dec16, i32* %nr.addr, align 4, !dbg !5618
  br label %if.end17, !dbg !5619

if.end17:                                         ; preds = %if.then12, %land.lhs.true8, %lor.lhs.false5
  %22 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5620
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %22, i32 0, i32 0, !dbg !5622
  %23 = load i32, i32* %v1, align 4, !dbg !5622
  %24 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5623
  %v218 = getelementptr inbounds %struct.MFace, %struct.MFace* %24, i32 0, i32 1, !dbg !5624
  %25 = load i32, i32* %v218, align 4, !dbg !5624
  %cmp19 = icmp eq i32 %23, %25, !dbg !5625
  br i1 %cmp19, label %if.then20, label %if.end27, !dbg !5626

if.then20:                                        ; preds = %if.end17
  %26 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5627
  %v321 = getelementptr inbounds %struct.MFace, %struct.MFace* %26, i32 0, i32 2, !dbg !5629
  %27 = load i32, i32* %v321, align 4, !dbg !5629
  %28 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5630
  %v222 = getelementptr inbounds %struct.MFace, %struct.MFace* %28, i32 0, i32 1, !dbg !5631
  store i32 %27, i32* %v222, align 4, !dbg !5632
  %29 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5633
  %v423 = getelementptr inbounds %struct.MFace, %struct.MFace* %29, i32 0, i32 3, !dbg !5634
  %30 = load i32, i32* %v423, align 4, !dbg !5634
  %31 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5635
  %v324 = getelementptr inbounds %struct.MFace, %struct.MFace* %31, i32 0, i32 2, !dbg !5636
  store i32 %30, i32* %v324, align 4, !dbg !5637
  %32 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5638
  %v425 = getelementptr inbounds %struct.MFace, %struct.MFace* %32, i32 0, i32 3, !dbg !5639
  store i32 0, i32* %v425, align 4, !dbg !5640
  %33 = load i32, i32* %nr.addr, align 4, !dbg !5641
  %dec26 = add nsw i32 %33, -1, !dbg !5641
  store i32 %dec26, i32* %nr.addr, align 4, !dbg !5641
  br label %if.end27, !dbg !5642

if.end27:                                         ; preds = %if.then20, %if.end17
  %34 = load i32, i32* %nr.addr, align 4, !dbg !5643
  %cmp28 = icmp eq i32 %34, 3, !dbg !5645
  br i1 %cmp28, label %if.then29, label %if.else, !dbg !5646

if.then29:                                        ; preds = %if.end27
  %35 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5647
  %v130 = getelementptr inbounds %struct.MFace, %struct.MFace* %35, i32 0, i32 0, !dbg !5650
  %36 = load i32, i32* %v130, align 4, !dbg !5650
  %37 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5651
  %v231 = getelementptr inbounds %struct.MFace, %struct.MFace* %37, i32 0, i32 1, !dbg !5652
  %38 = load i32, i32* %v231, align 4, !dbg !5652
  %cmp32 = icmp eq i32 %36, %38, !dbg !5653
  br i1 %cmp32, label %if.then41, label %lor.lhs.false33, !dbg !5654

lor.lhs.false33:                                  ; preds = %if.then29
  %39 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5655
  %v234 = getelementptr inbounds %struct.MFace, %struct.MFace* %39, i32 0, i32 1, !dbg !5656
  %40 = load i32, i32* %v234, align 4, !dbg !5656
  %41 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5657
  %v335 = getelementptr inbounds %struct.MFace, %struct.MFace* %41, i32 0, i32 2, !dbg !5658
  %42 = load i32, i32* %v335, align 4, !dbg !5658
  %cmp36 = icmp eq i32 %40, %42, !dbg !5659
  br i1 %cmp36, label %if.then41, label %lor.lhs.false37, !dbg !5660

lor.lhs.false37:                                  ; preds = %lor.lhs.false33
  %43 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5661
  %v338 = getelementptr inbounds %struct.MFace, %struct.MFace* %43, i32 0, i32 2, !dbg !5662
  %44 = load i32, i32* %v338, align 4, !dbg !5662
  %45 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5663
  %v139 = getelementptr inbounds %struct.MFace, %struct.MFace* %45, i32 0, i32 0, !dbg !5664
  %46 = load i32, i32* %v139, align 4, !dbg !5664
  %cmp40 = icmp eq i32 %44, %46, !dbg !5665
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !5666

if.then41:                                        ; preds = %lor.lhs.false37, %lor.lhs.false33, %if.then29
  store i32 0, i32* %retval, align 4, !dbg !5667
  br label %return, !dbg !5667

if.end42:                                         ; preds = %lor.lhs.false37
  br label %if.end71, !dbg !5669

if.else:                                          ; preds = %if.end27
  %47 = load i32, i32* %nr.addr, align 4, !dbg !5670
  %cmp43 = icmp eq i32 %47, 4, !dbg !5672
  br i1 %cmp43, label %if.then44, label %if.end70, !dbg !5673

if.then44:                                        ; preds = %if.else
  %48 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5674
  %v145 = getelementptr inbounds %struct.MFace, %struct.MFace* %48, i32 0, i32 0, !dbg !5677
  %49 = load i32, i32* %v145, align 4, !dbg !5677
  %50 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5678
  %v246 = getelementptr inbounds %struct.MFace, %struct.MFace* %50, i32 0, i32 1, !dbg !5679
  %51 = load i32, i32* %v246, align 4, !dbg !5679
  %cmp47 = icmp eq i32 %49, %51, !dbg !5680
  br i1 %cmp47, label %if.then68, label %lor.lhs.false48, !dbg !5681

lor.lhs.false48:                                  ; preds = %if.then44
  %52 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5682
  %v249 = getelementptr inbounds %struct.MFace, %struct.MFace* %52, i32 0, i32 1, !dbg !5683
  %53 = load i32, i32* %v249, align 4, !dbg !5683
  %54 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5684
  %v350 = getelementptr inbounds %struct.MFace, %struct.MFace* %54, i32 0, i32 2, !dbg !5685
  %55 = load i32, i32* %v350, align 4, !dbg !5685
  %cmp51 = icmp eq i32 %53, %55, !dbg !5686
  br i1 %cmp51, label %if.then68, label %lor.lhs.false52, !dbg !5687

lor.lhs.false52:                                  ; preds = %lor.lhs.false48
  %56 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5688
  %v353 = getelementptr inbounds %struct.MFace, %struct.MFace* %56, i32 0, i32 2, !dbg !5689
  %57 = load i32, i32* %v353, align 4, !dbg !5689
  %58 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5690
  %v454 = getelementptr inbounds %struct.MFace, %struct.MFace* %58, i32 0, i32 3, !dbg !5691
  %59 = load i32, i32* %v454, align 4, !dbg !5691
  %cmp55 = icmp eq i32 %57, %59, !dbg !5692
  br i1 %cmp55, label %if.then68, label %lor.lhs.false56, !dbg !5693

lor.lhs.false56:                                  ; preds = %lor.lhs.false52
  %60 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5694
  %v457 = getelementptr inbounds %struct.MFace, %struct.MFace* %60, i32 0, i32 3, !dbg !5695
  %61 = load i32, i32* %v457, align 4, !dbg !5695
  %62 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5696
  %v158 = getelementptr inbounds %struct.MFace, %struct.MFace* %62, i32 0, i32 0, !dbg !5697
  %63 = load i32, i32* %v158, align 4, !dbg !5697
  %cmp59 = icmp eq i32 %61, %63, !dbg !5698
  br i1 %cmp59, label %if.then68, label %lor.lhs.false60, !dbg !5699

lor.lhs.false60:                                  ; preds = %lor.lhs.false56
  %64 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5700
  %v161 = getelementptr inbounds %struct.MFace, %struct.MFace* %64, i32 0, i32 0, !dbg !5701
  %65 = load i32, i32* %v161, align 4, !dbg !5701
  %66 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5702
  %v362 = getelementptr inbounds %struct.MFace, %struct.MFace* %66, i32 0, i32 2, !dbg !5703
  %67 = load i32, i32* %v362, align 4, !dbg !5703
  %cmp63 = icmp eq i32 %65, %67, !dbg !5704
  br i1 %cmp63, label %if.then68, label %lor.lhs.false64, !dbg !5705

lor.lhs.false64:                                  ; preds = %lor.lhs.false60
  %68 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5706
  %v265 = getelementptr inbounds %struct.MFace, %struct.MFace* %68, i32 0, i32 1, !dbg !5707
  %69 = load i32, i32* %v265, align 4, !dbg !5707
  %70 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5708
  %v466 = getelementptr inbounds %struct.MFace, %struct.MFace* %70, i32 0, i32 3, !dbg !5709
  %71 = load i32, i32* %v466, align 4, !dbg !5709
  %cmp67 = icmp eq i32 %69, %71, !dbg !5710
  br i1 %cmp67, label %if.then68, label %if.end69, !dbg !5711

if.then68:                                        ; preds = %lor.lhs.false64, %lor.lhs.false60, %lor.lhs.false56, %lor.lhs.false52, %lor.lhs.false48, %if.then44
  store i32 0, i32* %retval, align 4, !dbg !5712
  br label %return, !dbg !5712

if.end69:                                         ; preds = %lor.lhs.false64
  br label %if.end70, !dbg !5714

if.end70:                                         ; preds = %if.end69, %if.else
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.end42
  %72 = load i32, i32* %nr.addr, align 4, !dbg !5715
  %cmp72 = icmp eq i32 %72, 3, !dbg !5717
  br i1 %cmp72, label %if.then73, label %if.else90, !dbg !5718

if.then73:                                        ; preds = %if.end71
  %73 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5719
  %v374 = getelementptr inbounds %struct.MFace, %struct.MFace* %73, i32 0, i32 2, !dbg !5722
  %74 = load i32, i32* %v374, align 4, !dbg !5722
  %cmp75 = icmp eq i32 %74, 0, !dbg !5723
  br i1 %cmp75, label %if.then76, label %if.end89, !dbg !5724

if.then76:                                        ; preds = %if.then73
  call void @llvm.dbg.declare(metadata i32* %sw_ap, metadata !5725, metadata !DIExpression()), !dbg !5728
  %75 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5728
  %v177 = getelementptr inbounds %struct.MFace, %struct.MFace* %75, i32 0, i32 0, !dbg !5728
  %76 = load i32, i32* %v177, align 4, !dbg !5728
  store i32 %76, i32* %sw_ap, align 4, !dbg !5728
  %77 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5728
  %v278 = getelementptr inbounds %struct.MFace, %struct.MFace* %77, i32 0, i32 1, !dbg !5728
  %78 = load i32, i32* %v278, align 4, !dbg !5728
  %79 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5728
  %v179 = getelementptr inbounds %struct.MFace, %struct.MFace* %79, i32 0, i32 0, !dbg !5728
  store i32 %78, i32* %v179, align 4, !dbg !5728
  %80 = load i32, i32* %sw_ap, align 4, !dbg !5728
  %81 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5728
  %v280 = getelementptr inbounds %struct.MFace, %struct.MFace* %81, i32 0, i32 1, !dbg !5728
  store i32 %80, i32* %v280, align 4, !dbg !5728
  call void @llvm.dbg.declare(metadata i32* %sw_ap81, metadata !5729, metadata !DIExpression()), !dbg !5731
  %82 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5731
  %v282 = getelementptr inbounds %struct.MFace, %struct.MFace* %82, i32 0, i32 1, !dbg !5731
  %83 = load i32, i32* %v282, align 4, !dbg !5731
  store i32 %83, i32* %sw_ap81, align 4, !dbg !5731
  %84 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5731
  %v383 = getelementptr inbounds %struct.MFace, %struct.MFace* %84, i32 0, i32 2, !dbg !5731
  %85 = load i32, i32* %v383, align 4, !dbg !5731
  %86 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5731
  %v284 = getelementptr inbounds %struct.MFace, %struct.MFace* %86, i32 0, i32 1, !dbg !5731
  store i32 %85, i32* %v284, align 4, !dbg !5731
  %87 = load i32, i32* %sw_ap81, align 4, !dbg !5731
  %88 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5731
  %v385 = getelementptr inbounds %struct.MFace, %struct.MFace* %88, i32 0, i32 2, !dbg !5731
  store i32 %87, i32* %v385, align 4, !dbg !5731
  %89 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !5732
  %tobool86 = icmp ne %struct.CustomData* %89, null, !dbg !5732
  br i1 %tobool86, label %if.then87, label %if.end88, !dbg !5734

if.then87:                                        ; preds = %if.then76
  %90 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !5735
  %91 = load i32, i32* %mfindex.addr, align 4, !dbg !5736
  call void @CustomData_swap(%struct.CustomData* %90, i32 %91, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @test_index_face.corner_indices, i64 0, i64 0)), !dbg !5737
  br label %if.end88, !dbg !5737

if.end88:                                         ; preds = %if.then87, %if.then76
  br label %if.end89, !dbg !5738

if.end89:                                         ; preds = %if.end88, %if.then73
  br label %if.end114, !dbg !5739

if.else90:                                        ; preds = %if.end71
  %92 = load i32, i32* %nr.addr, align 4, !dbg !5740
  %cmp91 = icmp eq i32 %92, 4, !dbg !5742
  br i1 %cmp91, label %if.then92, label %if.end113, !dbg !5743

if.then92:                                        ; preds = %if.else90
  %93 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5744
  %v393 = getelementptr inbounds %struct.MFace, %struct.MFace* %93, i32 0, i32 2, !dbg !5747
  %94 = load i32, i32* %v393, align 4, !dbg !5747
  %cmp94 = icmp eq i32 %94, 0, !dbg !5748
  br i1 %cmp94, label %if.then98, label %lor.lhs.false95, !dbg !5749

lor.lhs.false95:                                  ; preds = %if.then92
  %95 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5750
  %v496 = getelementptr inbounds %struct.MFace, %struct.MFace* %95, i32 0, i32 3, !dbg !5751
  %96 = load i32, i32* %v496, align 4, !dbg !5751
  %cmp97 = icmp eq i32 %96, 0, !dbg !5752
  br i1 %cmp97, label %if.then98, label %if.end112, !dbg !5753

if.then98:                                        ; preds = %lor.lhs.false95, %if.then92
  call void @llvm.dbg.declare(metadata i32* %sw_ap99, metadata !5754, metadata !DIExpression()), !dbg !5757
  %97 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5757
  %v1100 = getelementptr inbounds %struct.MFace, %struct.MFace* %97, i32 0, i32 0, !dbg !5757
  %98 = load i32, i32* %v1100, align 4, !dbg !5757
  store i32 %98, i32* %sw_ap99, align 4, !dbg !5757
  %99 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5757
  %v3101 = getelementptr inbounds %struct.MFace, %struct.MFace* %99, i32 0, i32 2, !dbg !5757
  %100 = load i32, i32* %v3101, align 4, !dbg !5757
  %101 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5757
  %v1102 = getelementptr inbounds %struct.MFace, %struct.MFace* %101, i32 0, i32 0, !dbg !5757
  store i32 %100, i32* %v1102, align 4, !dbg !5757
  %102 = load i32, i32* %sw_ap99, align 4, !dbg !5757
  %103 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5757
  %v3103 = getelementptr inbounds %struct.MFace, %struct.MFace* %103, i32 0, i32 2, !dbg !5757
  store i32 %102, i32* %v3103, align 4, !dbg !5757
  call void @llvm.dbg.declare(metadata i32* %sw_ap104, metadata !5758, metadata !DIExpression()), !dbg !5760
  %104 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5760
  %v2105 = getelementptr inbounds %struct.MFace, %struct.MFace* %104, i32 0, i32 1, !dbg !5760
  %105 = load i32, i32* %v2105, align 4, !dbg !5760
  store i32 %105, i32* %sw_ap104, align 4, !dbg !5760
  %106 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5760
  %v4106 = getelementptr inbounds %struct.MFace, %struct.MFace* %106, i32 0, i32 3, !dbg !5760
  %107 = load i32, i32* %v4106, align 4, !dbg !5760
  %108 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5760
  %v2107 = getelementptr inbounds %struct.MFace, %struct.MFace* %108, i32 0, i32 1, !dbg !5760
  store i32 %107, i32* %v2107, align 4, !dbg !5760
  %109 = load i32, i32* %sw_ap104, align 4, !dbg !5760
  %110 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5760
  %v4108 = getelementptr inbounds %struct.MFace, %struct.MFace* %110, i32 0, i32 3, !dbg !5760
  store i32 %109, i32* %v4108, align 4, !dbg !5760
  %111 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !5761
  %tobool109 = icmp ne %struct.CustomData* %111, null, !dbg !5761
  br i1 %tobool109, label %if.then110, label %if.end111, !dbg !5763

if.then110:                                       ; preds = %if.then98
  %112 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !5764
  %113 = load i32, i32* %mfindex.addr, align 4, !dbg !5765
  call void @CustomData_swap(%struct.CustomData* %112, i32 %113, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @test_index_face.corner_indices.7, i64 0, i64 0)), !dbg !5766
  br label %if.end111, !dbg !5766

if.end111:                                        ; preds = %if.then110, %if.then98
  br label %if.end112, !dbg !5767

if.end112:                                        ; preds = %if.end111, %lor.lhs.false95
  br label %if.end113, !dbg !5768

if.end113:                                        ; preds = %if.end112, %if.else90
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %if.end89
  %114 = load i32, i32* %nr.addr, align 4, !dbg !5769
  store i32 %114, i32* %retval, align 4, !dbg !5770
  br label %return, !dbg !5770

return:                                           ; preds = %if.end114, %if.then68, %if.then41
  %115 = load i32, i32* %retval, align 4, !dbg !5771
  ret i32 %115, !dbg !5771
}

declare dso_local void @CustomData_swap(%struct.CustomData*, i32, i32*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Mesh* @BKE_mesh_from_object(%struct.Object* %ob) #0 !dbg !5772 {
entry:
  %retval = alloca %struct.Mesh*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5775, metadata !DIExpression()), !dbg !5776
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5777
  %cmp = icmp eq %struct.Object* %0, null, !dbg !5779
  br i1 %cmp, label %if.then, label %if.end, !dbg !5780

if.then:                                          ; preds = %entry
  store %struct.Mesh* null, %struct.Mesh** %retval, align 8, !dbg !5781
  br label %return, !dbg !5781

if.end:                                           ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5782
  %type = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 3, !dbg !5784
  %2 = load i16, i16* %type, align 8, !dbg !5784
  %conv = sext i16 %2 to i32, !dbg !5782
  %cmp1 = icmp eq i32 %conv, 1, !dbg !5785
  br i1 %cmp1, label %if.then3, label %if.else, !dbg !5786

if.then3:                                         ; preds = %if.end
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5787
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !5788
  %4 = load i8*, i8** %data, align 8, !dbg !5788
  %5 = bitcast i8* %4 to %struct.Mesh*, !dbg !5787
  store %struct.Mesh* %5, %struct.Mesh** %retval, align 8, !dbg !5789
  br label %return, !dbg !5789

if.else:                                          ; preds = %if.end
  store %struct.Mesh* null, %struct.Mesh** %retval, align 8, !dbg !5790
  br label %return, !dbg !5790

return:                                           ; preds = %if.else, %if.then3, %if.then
  %6 = load %struct.Mesh*, %struct.Mesh** %retval, align 8, !dbg !5791
  ret %struct.Mesh* %6, !dbg !5791
}

declare dso_local void @multires_force_update(%struct.Object*) #2

declare dso_local void @test_object_materials(%struct.Main*, %struct.ID*) #2

declare dso_local void @test_object_modifiers(%struct.Object*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_from_metaball(%struct.ListBase* %lb, %struct.Mesh* %me) #0 !dbg !5792 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  %me.addr = alloca %struct.Mesh*, align 8
  %dl = alloca %struct.DispList*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %mloop = alloca %struct.MLoop*, align 8
  %allloop = alloca %struct.MLoop*, align 8
  %mpoly = alloca %struct.MPoly*, align 8
  %nors = alloca float*, align 8
  %verts = alloca float*, align 8
  %a = alloca i32, align 4
  %index = alloca i32*, align 8
  %count = alloca i32, align 4
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !5795, metadata !DIExpression()), !dbg !5796
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !5797, metadata !DIExpression()), !dbg !5798
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !5799, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !5821, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop, metadata !5823, metadata !DIExpression()), !dbg !5824
  call void @llvm.dbg.declare(metadata %struct.MLoop** %allloop, metadata !5825, metadata !DIExpression()), !dbg !5826
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly, metadata !5827, metadata !DIExpression()), !dbg !5828
  call void @llvm.dbg.declare(metadata float** %nors, metadata !5829, metadata !DIExpression()), !dbg !5830
  call void @llvm.dbg.declare(metadata float** %verts, metadata !5831, metadata !DIExpression()), !dbg !5832
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5833, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.declare(metadata i32** %index, metadata !5835, metadata !DIExpression()), !dbg !5836
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !5837
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !5838
  %1 = load i8*, i8** %first, align 8, !dbg !5838
  %2 = bitcast i8* %1 to %struct.DispList*, !dbg !5837
  store %struct.DispList* %2, %struct.DispList** %dl, align 8, !dbg !5839
  %3 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5840
  %cmp = icmp eq %struct.DispList* %3, null, !dbg !5842
  br i1 %cmp, label %if.then, label %if.end, !dbg !5843

if.then:                                          ; preds = %entry
  br label %if.end47, !dbg !5844

if.end:                                           ; preds = %entry
  %4 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5845
  %type = getelementptr inbounds %struct.DispList, %struct.DispList* %4, i32 0, i32 2, !dbg !5847
  %5 = load i16, i16* %type, align 8, !dbg !5847
  %conv = sext i16 %5 to i32, !dbg !5845
  %cmp1 = icmp eq i32 %conv, 5, !dbg !5848
  br i1 %cmp1, label %if.then3, label %if.end47, !dbg !5849

if.then3:                                         ; preds = %if.end
  %6 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5850
  %vdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 21, !dbg !5852
  %7 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5853
  %nr = getelementptr inbounds %struct.DispList, %struct.DispList* %7, i32 0, i32 5, !dbg !5854
  %8 = load i32, i32* %nr, align 8, !dbg !5854
  %call = call i8* @CustomData_add_layer(%struct.CustomData* %vdata, i32 0, i32 1, i8* null, i32 %8), !dbg !5855
  %9 = bitcast i8* %call to %struct.MVert*, !dbg !5855
  store %struct.MVert* %9, %struct.MVert** %mvert, align 8, !dbg !5856
  %10 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5857
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 25, !dbg !5858
  %11 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5859
  %parts = getelementptr inbounds %struct.DispList, %struct.DispList* %11, i32 0, i32 4, !dbg !5860
  %12 = load i32, i32* %parts, align 4, !dbg !5860
  %mul = mul nsw i32 %12, 4, !dbg !5861
  %call4 = call i8* @CustomData_add_layer(%struct.CustomData* %ldata, i32 26, i32 1, i8* null, i32 %mul), !dbg !5862
  %13 = bitcast i8* %call4 to %struct.MLoop*, !dbg !5862
  store %struct.MLoop* %13, %struct.MLoop** %mloop, align 8, !dbg !5863
  store %struct.MLoop* %13, %struct.MLoop** %allloop, align 8, !dbg !5864
  %14 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5865
  %pdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 24, !dbg !5866
  %15 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5867
  %parts5 = getelementptr inbounds %struct.DispList, %struct.DispList* %15, i32 0, i32 4, !dbg !5868
  %16 = load i32, i32* %parts5, align 4, !dbg !5868
  %call6 = call i8* @CustomData_add_layer(%struct.CustomData* %pdata, i32 25, i32 1, i8* null, i32 %16), !dbg !5869
  %17 = bitcast i8* %call6 to %struct.MPoly*, !dbg !5869
  store %struct.MPoly* %17, %struct.MPoly** %mpoly, align 8, !dbg !5870
  %18 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !5871
  %19 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5872
  %mvert7 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %19, i32 0, i32 15, !dbg !5873
  store %struct.MVert* %18, %struct.MVert** %mvert7, align 8, !dbg !5874
  %20 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !5875
  %21 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5876
  %mloop8 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %21, i32 0, i32 9, !dbg !5877
  store %struct.MLoop* %20, %struct.MLoop** %mloop8, align 8, !dbg !5878
  %22 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !5879
  %23 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5880
  %mpoly9 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %23, i32 0, i32 7, !dbg !5881
  store %struct.MPoly* %22, %struct.MPoly** %mpoly9, align 8, !dbg !5882
  %24 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5883
  %nr10 = getelementptr inbounds %struct.DispList, %struct.DispList* %24, i32 0, i32 5, !dbg !5884
  %25 = load i32, i32* %nr10, align 8, !dbg !5884
  %26 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5885
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %26, i32 0, i32 26, !dbg !5886
  store i32 %25, i32* %totvert, align 8, !dbg !5887
  %27 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5888
  %parts11 = getelementptr inbounds %struct.DispList, %struct.DispList* %27, i32 0, i32 4, !dbg !5889
  %28 = load i32, i32* %parts11, align 4, !dbg !5889
  %29 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5890
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %29, i32 0, i32 30, !dbg !5891
  store i32 %28, i32* %totpoly, align 8, !dbg !5892
  %30 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5893
  %nr12 = getelementptr inbounds %struct.DispList, %struct.DispList* %30, i32 0, i32 5, !dbg !5894
  %31 = load i32, i32* %nr12, align 8, !dbg !5894
  store i32 %31, i32* %a, align 4, !dbg !5895
  %32 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5896
  %nors13 = getelementptr inbounds %struct.DispList, %struct.DispList* %32, i32 0, i32 9, !dbg !5897
  %33 = load float*, float** %nors13, align 8, !dbg !5897
  store float* %33, float** %nors, align 8, !dbg !5898
  %34 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5899
  %verts14 = getelementptr inbounds %struct.DispList, %struct.DispList* %34, i32 0, i32 8, !dbg !5900
  %35 = load float*, float** %verts14, align 8, !dbg !5900
  store float* %35, float** %verts, align 8, !dbg !5901
  br label %while.cond, !dbg !5902

while.cond:                                       ; preds = %while.body, %if.then3
  %36 = load i32, i32* %a, align 4, !dbg !5903
  %dec = add nsw i32 %36, -1, !dbg !5903
  store i32 %dec, i32* %a, align 4, !dbg !5903
  %tobool = icmp ne i32 %36, 0, !dbg !5902
  br i1 %tobool, label %while.body, label %while.end, !dbg !5902

while.body:                                       ; preds = %while.cond
  %37 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !5904
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %37, i32 0, i32 0, !dbg !5906
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5904
  %38 = load float*, float** %verts, align 8, !dbg !5907
  call void @copy_v3_v3(float* %arraydecay, float* %38), !dbg !5908
  %39 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !5909
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %39, i32 0, i32 1, !dbg !5910
  %arraydecay15 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !5909
  %40 = load float*, float** %nors, align 8, !dbg !5911
  call void @normal_float_to_short_v3(i16* %arraydecay15, float* %40), !dbg !5912
  %41 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !5913
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %41, i32 1, !dbg !5913
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mvert, align 8, !dbg !5913
  %42 = load float*, float** %nors, align 8, !dbg !5914
  %add.ptr = getelementptr inbounds float, float* %42, i64 3, !dbg !5914
  store float* %add.ptr, float** %nors, align 8, !dbg !5914
  %43 = load float*, float** %verts, align 8, !dbg !5915
  %add.ptr16 = getelementptr inbounds float, float* %43, i64 3, !dbg !5915
  store float* %add.ptr16, float** %verts, align 8, !dbg !5915
  br label %while.cond, !dbg !5902, !llvm.loop !5916

while.end:                                        ; preds = %while.cond
  %44 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5918
  %parts17 = getelementptr inbounds %struct.DispList, %struct.DispList* %44, i32 0, i32 4, !dbg !5919
  %45 = load i32, i32* %parts17, align 4, !dbg !5919
  store i32 %45, i32* %a, align 4, !dbg !5920
  %46 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5921
  %index18 = getelementptr inbounds %struct.DispList, %struct.DispList* %46, i32 0, i32 10, !dbg !5922
  %47 = load i32*, i32** %index18, align 8, !dbg !5922
  store i32* %47, i32** %index, align 8, !dbg !5923
  br label %while.cond19, !dbg !5924

while.cond19:                                     ; preds = %if.end40, %while.end
  %48 = load i32, i32* %a, align 4, !dbg !5925
  %dec20 = add nsw i32 %48, -1, !dbg !5925
  store i32 %dec20, i32* %a, align 4, !dbg !5925
  %tobool21 = icmp ne i32 %48, 0, !dbg !5924
  br i1 %tobool21, label %while.body22, label %while.end46, !dbg !5924

while.body22:                                     ; preds = %while.cond19
  call void @llvm.dbg.declare(metadata i32* %count, metadata !5926, metadata !DIExpression()), !dbg !5928
  %49 = load i32*, i32** %index, align 8, !dbg !5929
  %arrayidx = getelementptr inbounds i32, i32* %49, i64 2, !dbg !5929
  %50 = load i32, i32* %arrayidx, align 4, !dbg !5929
  %51 = load i32*, i32** %index, align 8, !dbg !5930
  %arrayidx23 = getelementptr inbounds i32, i32* %51, i64 3, !dbg !5930
  %52 = load i32, i32* %arrayidx23, align 4, !dbg !5930
  %cmp24 = icmp ne i32 %50, %52, !dbg !5931
  %53 = zext i1 %cmp24 to i64, !dbg !5929
  %cond = select i1 %cmp24, i32 4, i32 3, !dbg !5929
  store i32 %cond, i32* %count, align 4, !dbg !5928
  %54 = load i32*, i32** %index, align 8, !dbg !5932
  %arrayidx26 = getelementptr inbounds i32, i32* %54, i64 0, !dbg !5932
  %55 = load i32, i32* %arrayidx26, align 4, !dbg !5932
  %56 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !5933
  %arrayidx27 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %56, i64 0, !dbg !5933
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx27, i32 0, i32 0, !dbg !5934
  store i32 %55, i32* %v, align 4, !dbg !5935
  %57 = load i32*, i32** %index, align 8, !dbg !5936
  %arrayidx28 = getelementptr inbounds i32, i32* %57, i64 1, !dbg !5936
  %58 = load i32, i32* %arrayidx28, align 4, !dbg !5936
  %59 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !5937
  %arrayidx29 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %59, i64 1, !dbg !5937
  %v30 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx29, i32 0, i32 0, !dbg !5938
  store i32 %58, i32* %v30, align 4, !dbg !5939
  %60 = load i32*, i32** %index, align 8, !dbg !5940
  %arrayidx31 = getelementptr inbounds i32, i32* %60, i64 2, !dbg !5940
  %61 = load i32, i32* %arrayidx31, align 4, !dbg !5940
  %62 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !5941
  %arrayidx32 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %62, i64 2, !dbg !5941
  %v33 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx32, i32 0, i32 0, !dbg !5942
  store i32 %61, i32* %v33, align 4, !dbg !5943
  %63 = load i32, i32* %count, align 4, !dbg !5944
  %cmp34 = icmp eq i32 %63, 4, !dbg !5946
  br i1 %cmp34, label %if.then36, label %if.end40, !dbg !5947

if.then36:                                        ; preds = %while.body22
  %64 = load i32*, i32** %index, align 8, !dbg !5948
  %arrayidx37 = getelementptr inbounds i32, i32* %64, i64 3, !dbg !5948
  %65 = load i32, i32* %arrayidx37, align 4, !dbg !5948
  %66 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !5949
  %arrayidx38 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %66, i64 3, !dbg !5949
  %v39 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx38, i32 0, i32 0, !dbg !5950
  store i32 %65, i32* %v39, align 4, !dbg !5951
  br label %if.end40, !dbg !5949

if.end40:                                         ; preds = %if.then36, %while.body22
  %67 = load i32, i32* %count, align 4, !dbg !5952
  %68 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !5953
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %68, i32 0, i32 1, !dbg !5954
  store i32 %67, i32* %totloop, align 4, !dbg !5955
  %69 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !5956
  %70 = load %struct.MLoop*, %struct.MLoop** %allloop, align 8, !dbg !5957
  %sub.ptr.lhs.cast = ptrtoint %struct.MLoop* %69 to i64, !dbg !5958
  %sub.ptr.rhs.cast = ptrtoint %struct.MLoop* %70 to i64, !dbg !5958
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5958
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !5958
  %conv41 = trunc i64 %sub.ptr.div to i32, !dbg !5959
  %71 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !5960
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %71, i32 0, i32 0, !dbg !5961
  store i32 %conv41, i32* %loopstart, align 4, !dbg !5962
  %72 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !5963
  %flag = getelementptr inbounds %struct.MPoly, %struct.MPoly* %72, i32 0, i32 3, !dbg !5964
  store i8 1, i8* %flag, align 2, !dbg !5965
  %73 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !5966
  %incdec.ptr42 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %73, i32 1, !dbg !5966
  store %struct.MPoly* %incdec.ptr42, %struct.MPoly** %mpoly, align 8, !dbg !5966
  %74 = load i32, i32* %count, align 4, !dbg !5967
  %75 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !5968
  %idx.ext = sext i32 %74 to i64, !dbg !5968
  %add.ptr43 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %75, i64 %idx.ext, !dbg !5968
  store %struct.MLoop* %add.ptr43, %struct.MLoop** %mloop, align 8, !dbg !5968
  %76 = load i32, i32* %count, align 4, !dbg !5969
  %77 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5970
  %totloop44 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %77, i32 0, i32 31, !dbg !5971
  %78 = load i32, i32* %totloop44, align 4, !dbg !5972
  %add = add nsw i32 %78, %76, !dbg !5972
  store i32 %add, i32* %totloop44, align 4, !dbg !5972
  %79 = load i32*, i32** %index, align 8, !dbg !5973
  %add.ptr45 = getelementptr inbounds i32, i32* %79, i64 4, !dbg !5973
  store i32* %add.ptr45, i32** %index, align 8, !dbg !5973
  br label %while.cond19, !dbg !5924, !llvm.loop !5974

while.end46:                                      ; preds = %while.cond19
  %80 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5976
  call void @BKE_mesh_update_customdata_pointers(%struct.Mesh* %80, i8 zeroext 1), !dbg !5977
  %81 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5978
  call void @BKE_mesh_calc_normals(%struct.Mesh* %81), !dbg !5979
  %82 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5980
  call void @BKE_mesh_calc_edges(%struct.Mesh* %82, i8 zeroext 1, i8 zeroext 0), !dbg !5981
  br label %if.end47, !dbg !5982

if.end47:                                         ; preds = %if.then, %while.end46, %if.end
  ret void, !dbg !5983
}

; Function Attrs: noinline nounwind uwtable
define internal void @normal_float_to_short_v3(i16* %out, float* %in) #0 !dbg !5984 {
entry:
  %out.addr = alloca i16*, align 8
  %in.addr = alloca float*, align 8
  store i16* %out, i16** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %out.addr, metadata !5987, metadata !DIExpression()), !dbg !5988
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !5989, metadata !DIExpression()), !dbg !5990
  %0 = load float*, float** %in.addr, align 8, !dbg !5991
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5991
  %1 = load float, float* %arrayidx, align 4, !dbg !5991
  %mul = fmul float %1, 3.276700e+04, !dbg !5992
  %conv = fptosi float %mul to i16, !dbg !5993
  %2 = load i16*, i16** %out.addr, align 8, !dbg !5994
  %arrayidx1 = getelementptr inbounds i16, i16* %2, i64 0, !dbg !5994
  store i16 %conv, i16* %arrayidx1, align 2, !dbg !5995
  %3 = load float*, float** %in.addr, align 8, !dbg !5996
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !5996
  %4 = load float, float* %arrayidx2, align 4, !dbg !5996
  %mul3 = fmul float %4, 3.276700e+04, !dbg !5997
  %conv4 = fptosi float %mul3 to i16, !dbg !5998
  %5 = load i16*, i16** %out.addr, align 8, !dbg !5999
  %arrayidx5 = getelementptr inbounds i16, i16* %5, i64 1, !dbg !5999
  store i16 %conv4, i16* %arrayidx5, align 2, !dbg !6000
  %6 = load float*, float** %in.addr, align 8, !dbg !6001
  %arrayidx6 = getelementptr inbounds float, float* %6, i64 2, !dbg !6001
  %7 = load float, float* %arrayidx6, align 4, !dbg !6001
  %mul7 = fmul float %7, 3.276700e+04, !dbg !6002
  %conv8 = fptosi float %mul7 to i16, !dbg !6003
  %8 = load i16*, i16** %out.addr, align 8, !dbg !6004
  %arrayidx9 = getelementptr inbounds i16, i16* %8, i64 2, !dbg !6004
  store i16 %conv8, i16* %arrayidx9, align 2, !dbg !6005
  ret void, !dbg !6006
}

declare dso_local void @BKE_mesh_calc_normals(%struct.Mesh*) #2

declare dso_local void @BKE_mesh_calc_edges(%struct.Mesh*, i8 zeroext, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_mesh_nurbs_to_mdata(%struct.Object* %ob, %struct.MVert** %allvert, i32* %totvert, %struct.MEdge** %alledge, i32* %totedge, %struct.MLoop** %allloop, %struct.MPoly** %allpoly, i32* %totloop, i32* %totpoly) #0 !dbg !6007 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %allvert.addr = alloca %struct.MVert**, align 8
  %totvert.addr = alloca i32*, align 8
  %alledge.addr = alloca %struct.MEdge**, align 8
  %totedge.addr = alloca i32*, align 8
  %allloop.addr = alloca %struct.MLoop**, align 8
  %allpoly.addr = alloca %struct.MPoly**, align 8
  %totloop.addr = alloca i32*, align 8
  %totpoly.addr = alloca i32*, align 8
  %disp = alloca %struct.ListBase, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6014, metadata !DIExpression()), !dbg !6015
  store %struct.MVert** %allvert, %struct.MVert*** %allvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert*** %allvert.addr, metadata !6016, metadata !DIExpression()), !dbg !6017
  store i32* %totvert, i32** %totvert.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %totvert.addr, metadata !6018, metadata !DIExpression()), !dbg !6019
  store %struct.MEdge** %alledge, %struct.MEdge*** %alledge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge*** %alledge.addr, metadata !6020, metadata !DIExpression()), !dbg !6021
  store i32* %totedge, i32** %totedge.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %totedge.addr, metadata !6022, metadata !DIExpression()), !dbg !6023
  store %struct.MLoop** %allloop, %struct.MLoop*** %allloop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop*** %allloop.addr, metadata !6024, metadata !DIExpression()), !dbg !6025
  store %struct.MPoly** %allpoly, %struct.MPoly*** %allpoly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly*** %allpoly.addr, metadata !6026, metadata !DIExpression()), !dbg !6027
  store i32* %totloop, i32** %totloop.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %totloop.addr, metadata !6028, metadata !DIExpression()), !dbg !6029
  store i32* %totpoly, i32** %totpoly.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %totpoly.addr, metadata !6030, metadata !DIExpression()), !dbg !6031
  call void @llvm.dbg.declare(metadata %struct.ListBase* %disp, metadata !6032, metadata !DIExpression()), !dbg !6033
  %0 = bitcast %struct.ListBase* %disp to i8*, !dbg !6033
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !6033
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6034
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 118, !dbg !6036
  %2 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !6036
  %tobool = icmp ne %struct.CurveCache* %2, null, !dbg !6034
  br i1 %tobool, label %if.then, label %if.end, !dbg !6037

if.then:                                          ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6038
  %curve_cache1 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 118, !dbg !6040
  %4 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache1, align 8, !dbg !6040
  %disp2 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %4, i32 0, i32 0, !dbg !6041
  %5 = bitcast %struct.ListBase* %disp to i8*, !dbg !6041
  %6 = bitcast %struct.ListBase* %disp2 to i8*, !dbg !6041
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false), !dbg !6041
  br label %if.end, !dbg !6042

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6043
  %8 = load %struct.MVert**, %struct.MVert*** %allvert.addr, align 8, !dbg !6044
  %9 = load i32*, i32** %totvert.addr, align 8, !dbg !6045
  %10 = load %struct.MEdge**, %struct.MEdge*** %alledge.addr, align 8, !dbg !6046
  %11 = load i32*, i32** %totedge.addr, align 8, !dbg !6047
  %12 = load %struct.MLoop**, %struct.MLoop*** %allloop.addr, align 8, !dbg !6048
  %13 = load %struct.MPoly**, %struct.MPoly*** %allpoly.addr, align 8, !dbg !6049
  %14 = load i32*, i32** %totloop.addr, align 8, !dbg !6050
  %15 = load i32*, i32** %totpoly.addr, align 8, !dbg !6051
  %call = call i32 @BKE_mesh_nurbs_displist_to_mdata(%struct.Object* %7, %struct.ListBase* %disp, %struct.MVert** %8, i32* %9, %struct.MEdge** %10, i32* %11, %struct.MLoop** %12, %struct.MPoly** %13, %struct.MLoopUV** null, i32* %14, i32* %15), !dbg !6052
  ret i32 %call, !dbg !6053
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_mesh_nurbs_displist_to_mdata(%struct.Object* %ob, %struct.ListBase* %dispbase, %struct.MVert** %allvert, i32* %_totvert, %struct.MEdge** %alledge, i32* %_totedge, %struct.MLoop** %allloop, %struct.MPoly** %allpoly, %struct.MLoopUV** %alluv, i32* %_totloop, i32* %_totpoly) #0 !dbg !6054 {
entry:
  %retval = alloca i32, align 4
  %ob.addr = alloca %struct.Object*, align 8
  %dispbase.addr = alloca %struct.ListBase*, align 8
  %allvert.addr = alloca %struct.MVert**, align 8
  %_totvert.addr = alloca i32*, align 8
  %alledge.addr = alloca %struct.MEdge**, align 8
  %_totedge.addr = alloca i32*, align 8
  %allloop.addr = alloca %struct.MLoop**, align 8
  %allpoly.addr = alloca %struct.MPoly**, align 8
  %alluv.addr = alloca %struct.MLoopUV**, align 8
  %_totloop.addr = alloca i32*, align 8
  %_totpoly.addr = alloca i32*, align 8
  %cu = alloca %struct.Curve*, align 8
  %dl = alloca %struct.DispList*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %mpoly = alloca %struct.MPoly*, align 8
  %mloop = alloca %struct.MLoop*, align 8
  %mloopuv = alloca %struct.MLoopUV*, align 8
  %medge = alloca %struct.MEdge*, align 8
  %data1 = alloca float*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %ofs = alloca i32, align 4
  %vertcount = alloca i32, align 4
  %startvert = alloca i32, align 4
  %totvert = alloca i32, align 4
  %totedge = alloca i32, align 4
  %totloop = alloca i32, align 4
  %totvlak = alloca i32, align 4
  %p1 = alloca i32, align 4
  %p2 = alloca i32, align 4
  %p3 = alloca i32, align 4
  %p4 = alloca i32, align 4
  %index = alloca i32*, align 8
  %conv_polys = alloca i8, align 1
  %tot = alloca i32, align 4
  %tot66 = alloca i32, align 4
  %smooth = alloca i32, align 4
  %i = alloca i32, align 4
  %orco_sizeu = alloca i32, align 4
  %orco_sizev = alloca i32, align 4
  %i374 = alloca i32, align 4
  %v401 = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6058, metadata !DIExpression()), !dbg !6059
  store %struct.ListBase* %dispbase, %struct.ListBase** %dispbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %dispbase.addr, metadata !6060, metadata !DIExpression()), !dbg !6061
  store %struct.MVert** %allvert, %struct.MVert*** %allvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert*** %allvert.addr, metadata !6062, metadata !DIExpression()), !dbg !6063
  store i32* %_totvert, i32** %_totvert.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %_totvert.addr, metadata !6064, metadata !DIExpression()), !dbg !6065
  store %struct.MEdge** %alledge, %struct.MEdge*** %alledge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge*** %alledge.addr, metadata !6066, metadata !DIExpression()), !dbg !6067
  store i32* %_totedge, i32** %_totedge.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %_totedge.addr, metadata !6068, metadata !DIExpression()), !dbg !6069
  store %struct.MLoop** %allloop, %struct.MLoop*** %allloop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop*** %allloop.addr, metadata !6070, metadata !DIExpression()), !dbg !6071
  store %struct.MPoly** %allpoly, %struct.MPoly*** %allpoly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly*** %allpoly.addr, metadata !6072, metadata !DIExpression()), !dbg !6073
  store %struct.MLoopUV** %alluv, %struct.MLoopUV*** %alluv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoopUV*** %alluv.addr, metadata !6074, metadata !DIExpression()), !dbg !6075
  store i32* %_totloop, i32** %_totloop.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %_totloop.addr, metadata !6076, metadata !DIExpression()), !dbg !6077
  store i32* %_totpoly, i32** %_totpoly.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %_totpoly.addr, metadata !6078, metadata !DIExpression()), !dbg !6079
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !6080, metadata !DIExpression()), !dbg !6081
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6082
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !6083
  %1 = load i8*, i8** %data, align 8, !dbg !6083
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !6082
  store %struct.Curve* %2, %struct.Curve** %cu, align 8, !dbg !6081
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !6084, metadata !DIExpression()), !dbg !6085
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !6086, metadata !DIExpression()), !dbg !6087
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly, metadata !6088, metadata !DIExpression()), !dbg !6089
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop, metadata !6090, metadata !DIExpression()), !dbg !6091
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %mloopuv, metadata !6092, metadata !DIExpression()), !dbg !6093
  store %struct.MLoopUV* null, %struct.MLoopUV** %mloopuv, align 8, !dbg !6093
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge, metadata !6094, metadata !DIExpression()), !dbg !6095
  call void @llvm.dbg.declare(metadata float** %data1, metadata !6096, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6098, metadata !DIExpression()), !dbg !6099
  call void @llvm.dbg.declare(metadata i32* %b, metadata !6100, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.declare(metadata i32* %ofs, metadata !6102, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.declare(metadata i32* %vertcount, metadata !6104, metadata !DIExpression()), !dbg !6105
  call void @llvm.dbg.declare(metadata i32* %startvert, metadata !6106, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !6108, metadata !DIExpression()), !dbg !6109
  store i32 0, i32* %totvert, align 4, !dbg !6109
  call void @llvm.dbg.declare(metadata i32* %totedge, metadata !6110, metadata !DIExpression()), !dbg !6111
  store i32 0, i32* %totedge, align 4, !dbg !6111
  call void @llvm.dbg.declare(metadata i32* %totloop, metadata !6112, metadata !DIExpression()), !dbg !6113
  store i32 0, i32* %totloop, align 4, !dbg !6113
  call void @llvm.dbg.declare(metadata i32* %totvlak, metadata !6114, metadata !DIExpression()), !dbg !6115
  store i32 0, i32* %totvlak, align 4, !dbg !6115
  call void @llvm.dbg.declare(metadata i32* %p1, metadata !6116, metadata !DIExpression()), !dbg !6117
  call void @llvm.dbg.declare(metadata i32* %p2, metadata !6118, metadata !DIExpression()), !dbg !6119
  call void @llvm.dbg.declare(metadata i32* %p3, metadata !6120, metadata !DIExpression()), !dbg !6121
  call void @llvm.dbg.declare(metadata i32* %p4, metadata !6122, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.declare(metadata i32** %index, metadata !6124, metadata !DIExpression()), !dbg !6125
  call void @llvm.dbg.declare(metadata i8* %conv_polys, metadata !6126, metadata !DIExpression()), !dbg !6127
  %3 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6128
  %flag = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 23, !dbg !6128
  %4 = load i32, i32* %flag, align 4, !dbg !6128
  %and = and i32 %4, 1, !dbg !6128
  %cmp = icmp eq i32 %and, 0, !dbg !6128
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6128

land.rhs:                                         ; preds = %entry
  %5 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6128
  %flag2 = getelementptr inbounds %struct.Curve, %struct.Curve* %5, i32 0, i32 23, !dbg !6128
  %6 = load i32, i32* %flag2, align 4, !dbg !6128
  %and3 = and i32 %6, 6, !dbg !6128
  %cmp4 = icmp ne i32 %and3, 0, !dbg !6128
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp4, %land.rhs ], !dbg !6129
  %land.ext = zext i1 %7 to i32, !dbg !6128
  %cmp5 = icmp eq i32 %land.ext, 0, !dbg !6130
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !6131

lor.rhs:                                          ; preds = %land.end
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6132
  %type = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 3, !dbg !6133
  %9 = load i16, i16* %type, align 8, !dbg !6133
  %conv = sext i16 %9 to i32, !dbg !6132
  %cmp6 = icmp eq i32 %conv, 3, !dbg !6134
  br label %lor.end, !dbg !6131

lor.end:                                          ; preds = %lor.rhs, %land.end
  %10 = phi i1 [ true, %land.end ], [ %cmp6, %lor.rhs ]
  %lor.ext = zext i1 %10 to i32, !dbg !6131
  %conv8 = trunc i32 %lor.ext to i8, !dbg !6135
  store i8 %conv8, i8* %conv_polys, align 1, !dbg !6127
  %11 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !6136
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %11, i32 0, i32 0, !dbg !6137
  %12 = load i8*, i8** %first, align 8, !dbg !6137
  %13 = bitcast i8* %12 to %struct.DispList*, !dbg !6136
  store %struct.DispList* %13, %struct.DispList** %dl, align 8, !dbg !6138
  br label %while.cond, !dbg !6139

while.cond:                                       ; preds = %if.end76, %lor.end
  %14 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6140
  %tobool = icmp ne %struct.DispList* %14, null, !dbg !6139
  br i1 %tobool, label %while.body, label %while.end, !dbg !6139

while.body:                                       ; preds = %while.cond
  %15 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6141
  %type9 = getelementptr inbounds %struct.DispList, %struct.DispList* %15, i32 0, i32 2, !dbg !6144
  %16 = load i16, i16* %type9, align 8, !dbg !6144
  %conv10 = sext i16 %16 to i32, !dbg !6141
  %cmp11 = icmp eq i32 %conv10, 1, !dbg !6145
  br i1 %cmp11, label %if.then, label %if.else, !dbg !6146

if.then:                                          ; preds = %while.body
  %17 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6147
  %parts = getelementptr inbounds %struct.DispList, %struct.DispList* %17, i32 0, i32 4, !dbg !6149
  %18 = load i32, i32* %parts, align 4, !dbg !6149
  %19 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6150
  %nr = getelementptr inbounds %struct.DispList, %struct.DispList* %19, i32 0, i32 5, !dbg !6151
  %20 = load i32, i32* %nr, align 8, !dbg !6151
  %mul = mul nsw i32 %18, %20, !dbg !6152
  %21 = load i32, i32* %totvert, align 4, !dbg !6153
  %add = add nsw i32 %21, %mul, !dbg !6153
  store i32 %add, i32* %totvert, align 4, !dbg !6153
  %22 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6154
  %parts13 = getelementptr inbounds %struct.DispList, %struct.DispList* %22, i32 0, i32 4, !dbg !6155
  %23 = load i32, i32* %parts13, align 4, !dbg !6155
  %24 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6156
  %nr14 = getelementptr inbounds %struct.DispList, %struct.DispList* %24, i32 0, i32 5, !dbg !6157
  %25 = load i32, i32* %nr14, align 8, !dbg !6157
  %sub = sub nsw i32 %25, 1, !dbg !6158
  %mul15 = mul nsw i32 %23, %sub, !dbg !6159
  %26 = load i32, i32* %totedge, align 4, !dbg !6160
  %add16 = add nsw i32 %26, %mul15, !dbg !6160
  store i32 %add16, i32* %totedge, align 4, !dbg !6160
  br label %if.end76, !dbg !6161

if.else:                                          ; preds = %while.body
  %27 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6162
  %type17 = getelementptr inbounds %struct.DispList, %struct.DispList* %27, i32 0, i32 2, !dbg !6164
  %28 = load i16, i16* %type17, align 8, !dbg !6164
  %conv18 = sext i16 %28 to i32, !dbg !6162
  %cmp19 = icmp eq i32 %conv18, 0, !dbg !6165
  br i1 %cmp19, label %if.then21, label %if.else32, !dbg !6166

if.then21:                                        ; preds = %if.else
  %29 = load i8, i8* %conv_polys, align 1, !dbg !6167
  %tobool22 = icmp ne i8 %29, 0, !dbg !6167
  br i1 %tobool22, label %if.then23, label %if.end, !dbg !6170

if.then23:                                        ; preds = %if.then21
  %30 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6171
  %parts24 = getelementptr inbounds %struct.DispList, %struct.DispList* %30, i32 0, i32 4, !dbg !6173
  %31 = load i32, i32* %parts24, align 4, !dbg !6173
  %32 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6174
  %nr25 = getelementptr inbounds %struct.DispList, %struct.DispList* %32, i32 0, i32 5, !dbg !6175
  %33 = load i32, i32* %nr25, align 8, !dbg !6175
  %mul26 = mul nsw i32 %31, %33, !dbg !6176
  %34 = load i32, i32* %totvert, align 4, !dbg !6177
  %add27 = add nsw i32 %34, %mul26, !dbg !6177
  store i32 %add27, i32* %totvert, align 4, !dbg !6177
  %35 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6178
  %parts28 = getelementptr inbounds %struct.DispList, %struct.DispList* %35, i32 0, i32 4, !dbg !6179
  %36 = load i32, i32* %parts28, align 4, !dbg !6179
  %37 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6180
  %nr29 = getelementptr inbounds %struct.DispList, %struct.DispList* %37, i32 0, i32 5, !dbg !6181
  %38 = load i32, i32* %nr29, align 8, !dbg !6181
  %mul30 = mul nsw i32 %36, %38, !dbg !6182
  %39 = load i32, i32* %totedge, align 4, !dbg !6183
  %add31 = add nsw i32 %39, %mul30, !dbg !6183
  store i32 %add31, i32* %totedge, align 4, !dbg !6183
  br label %if.end, !dbg !6184

if.end:                                           ; preds = %if.then23, %if.then21
  br label %if.end75, !dbg !6185

if.else32:                                        ; preds = %if.else
  %40 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6186
  %type33 = getelementptr inbounds %struct.DispList, %struct.DispList* %40, i32 0, i32 2, !dbg !6188
  %41 = load i16, i16* %type33, align 8, !dbg !6188
  %conv34 = sext i16 %41 to i32, !dbg !6186
  %cmp35 = icmp eq i32 %conv34, 2, !dbg !6189
  br i1 %cmp35, label %if.then37, label %if.else60, !dbg !6190

if.then37:                                        ; preds = %if.else32
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !6191, metadata !DIExpression()), !dbg !6193
  %42 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6194
  %parts38 = getelementptr inbounds %struct.DispList, %struct.DispList* %42, i32 0, i32 4, !dbg !6195
  %43 = load i32, i32* %parts38, align 4, !dbg !6195
  %44 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6196
  %nr39 = getelementptr inbounds %struct.DispList, %struct.DispList* %44, i32 0, i32 5, !dbg !6197
  %45 = load i32, i32* %nr39, align 8, !dbg !6197
  %mul40 = mul nsw i32 %43, %45, !dbg !6198
  %46 = load i32, i32* %totvert, align 4, !dbg !6199
  %add41 = add nsw i32 %46, %mul40, !dbg !6199
  store i32 %add41, i32* %totvert, align 4, !dbg !6199
  %47 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6200
  %parts42 = getelementptr inbounds %struct.DispList, %struct.DispList* %47, i32 0, i32 4, !dbg !6201
  %48 = load i32, i32* %parts42, align 4, !dbg !6201
  %sub43 = sub nsw i32 %48, 1, !dbg !6202
  %49 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6203
  %flag44 = getelementptr inbounds %struct.DispList, %struct.DispList* %49, i32 0, i32 3, !dbg !6204
  %50 = load i16, i16* %flag44, align 2, !dbg !6204
  %conv45 = sext i16 %50 to i32, !dbg !6203
  %and46 = and i32 %conv45, 2, !dbg !6205
  %cmp47 = icmp eq i32 %and46, 2, !dbg !6206
  %conv48 = zext i1 %cmp47 to i32, !dbg !6206
  %add49 = add nsw i32 %sub43, %conv48, !dbg !6207
  %51 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6208
  %nr50 = getelementptr inbounds %struct.DispList, %struct.DispList* %51, i32 0, i32 5, !dbg !6209
  %52 = load i32, i32* %nr50, align 8, !dbg !6209
  %sub51 = sub nsw i32 %52, 1, !dbg !6210
  %53 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6211
  %flag52 = getelementptr inbounds %struct.DispList, %struct.DispList* %53, i32 0, i32 3, !dbg !6212
  %54 = load i16, i16* %flag52, align 2, !dbg !6212
  %conv53 = sext i16 %54 to i32, !dbg !6211
  %and54 = and i32 %conv53, 1, !dbg !6213
  %add55 = add nsw i32 %sub51, %and54, !dbg !6214
  %mul56 = mul nsw i32 %add49, %add55, !dbg !6215
  store i32 %mul56, i32* %tot, align 4, !dbg !6216
  %55 = load i32, i32* %tot, align 4, !dbg !6217
  %56 = load i32, i32* %totvlak, align 4, !dbg !6218
  %add57 = add nsw i32 %56, %55, !dbg !6218
  store i32 %add57, i32* %totvlak, align 4, !dbg !6218
  %57 = load i32, i32* %tot, align 4, !dbg !6219
  %mul58 = mul nsw i32 %57, 4, !dbg !6220
  %58 = load i32, i32* %totloop, align 4, !dbg !6221
  %add59 = add nsw i32 %58, %mul58, !dbg !6221
  store i32 %add59, i32* %totloop, align 4, !dbg !6221
  br label %if.end74, !dbg !6222

if.else60:                                        ; preds = %if.else32
  %59 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6223
  %type61 = getelementptr inbounds %struct.DispList, %struct.DispList* %59, i32 0, i32 2, !dbg !6225
  %60 = load i16, i16* %type61, align 8, !dbg !6225
  %conv62 = sext i16 %60 to i32, !dbg !6223
  %cmp63 = icmp eq i32 %conv62, 4, !dbg !6226
  br i1 %cmp63, label %if.then65, label %if.end73, !dbg !6227

if.then65:                                        ; preds = %if.else60
  call void @llvm.dbg.declare(metadata i32* %tot66, metadata !6228, metadata !DIExpression()), !dbg !6230
  %61 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6231
  %nr67 = getelementptr inbounds %struct.DispList, %struct.DispList* %61, i32 0, i32 5, !dbg !6232
  %62 = load i32, i32* %nr67, align 8, !dbg !6232
  %63 = load i32, i32* %totvert, align 4, !dbg !6233
  %add68 = add nsw i32 %63, %62, !dbg !6233
  store i32 %add68, i32* %totvert, align 4, !dbg !6233
  %64 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6234
  %parts69 = getelementptr inbounds %struct.DispList, %struct.DispList* %64, i32 0, i32 4, !dbg !6235
  %65 = load i32, i32* %parts69, align 4, !dbg !6235
  store i32 %65, i32* %tot66, align 4, !dbg !6236
  %66 = load i32, i32* %tot66, align 4, !dbg !6237
  %67 = load i32, i32* %totvlak, align 4, !dbg !6238
  %add70 = add nsw i32 %67, %66, !dbg !6238
  store i32 %add70, i32* %totvlak, align 4, !dbg !6238
  %68 = load i32, i32* %tot66, align 4, !dbg !6239
  %mul71 = mul nsw i32 %68, 3, !dbg !6240
  %69 = load i32, i32* %totloop, align 4, !dbg !6241
  %add72 = add nsw i32 %69, %mul71, !dbg !6241
  store i32 %add72, i32* %totloop, align 4, !dbg !6241
  br label %if.end73, !dbg !6242

if.end73:                                         ; preds = %if.then65, %if.else60
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then37
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.end
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.then
  %70 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6243
  %next = getelementptr inbounds %struct.DispList, %struct.DispList* %70, i32 0, i32 0, !dbg !6244
  %71 = load %struct.DispList*, %struct.DispList** %next, align 8, !dbg !6244
  store %struct.DispList* %71, %struct.DispList** %dl, align 8, !dbg !6245
  br label %while.cond, !dbg !6139, !llvm.loop !6246

while.end:                                        ; preds = %while.cond
  %72 = load i32, i32* %totvert, align 4, !dbg !6248
  %cmp77 = icmp eq i32 %72, 0, !dbg !6250
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !6251

if.then79:                                        ; preds = %while.end
  store i32 -1, i32* %retval, align 4, !dbg !6252
  br label %return, !dbg !6252

if.end80:                                         ; preds = %while.end
  %73 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6254
  %74 = load i32, i32* %totvert, align 4, !dbg !6255
  %conv81 = sext i32 %74 to i64, !dbg !6255
  %mul82 = mul i64 20, %conv81, !dbg !6256
  %call = call i8* %73(i64 %mul82, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0)), !dbg !6254
  %75 = bitcast i8* %call to %struct.MVert*, !dbg !6254
  store %struct.MVert* %75, %struct.MVert** %mvert, align 8, !dbg !6257
  %76 = load %struct.MVert**, %struct.MVert*** %allvert.addr, align 8, !dbg !6258
  store %struct.MVert* %75, %struct.MVert** %76, align 8, !dbg !6259
  %77 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6260
  %78 = load i32, i32* %totedge, align 4, !dbg !6261
  %conv83 = sext i32 %78 to i64, !dbg !6261
  %mul84 = mul i64 12, %conv83, !dbg !6262
  %call85 = call i8* %77(i64 %mul84, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0)), !dbg !6260
  %79 = bitcast i8* %call85 to %struct.MEdge*, !dbg !6260
  store %struct.MEdge* %79, %struct.MEdge** %medge, align 8, !dbg !6263
  %80 = load %struct.MEdge**, %struct.MEdge*** %alledge.addr, align 8, !dbg !6264
  store %struct.MEdge* %79, %struct.MEdge** %80, align 8, !dbg !6265
  %81 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6266
  %82 = load i32, i32* %totvlak, align 4, !dbg !6267
  %conv86 = sext i32 %82 to i64, !dbg !6267
  %mul87 = mul i64 8, %conv86, !dbg !6268
  %mul88 = mul i64 %mul87, 4, !dbg !6269
  %call89 = call i8* %81(i64 %mul88, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0)), !dbg !6266
  %83 = bitcast i8* %call89 to %struct.MLoop*, !dbg !6266
  store %struct.MLoop* %83, %struct.MLoop** %mloop, align 8, !dbg !6270
  %84 = load %struct.MLoop**, %struct.MLoop*** %allloop.addr, align 8, !dbg !6271
  store %struct.MLoop* %83, %struct.MLoop** %84, align 8, !dbg !6272
  %85 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6273
  %86 = load i32, i32* %totvlak, align 4, !dbg !6274
  %conv90 = sext i32 %86 to i64, !dbg !6274
  %mul91 = mul i64 12, %conv90, !dbg !6275
  %call92 = call i8* %85(i64 %mul91, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0)), !dbg !6273
  %87 = bitcast i8* %call92 to %struct.MPoly*, !dbg !6273
  store %struct.MPoly* %87, %struct.MPoly** %mpoly, align 8, !dbg !6276
  %88 = load %struct.MPoly**, %struct.MPoly*** %allpoly.addr, align 8, !dbg !6277
  store %struct.MPoly* %87, %struct.MPoly** %88, align 8, !dbg !6278
  %89 = load %struct.MLoopUV**, %struct.MLoopUV*** %alluv.addr, align 8, !dbg !6279
  %tobool93 = icmp ne %struct.MLoopUV** %89, null, !dbg !6279
  br i1 %tobool93, label %if.then94, label %if.end99, !dbg !6281

if.then94:                                        ; preds = %if.end80
  %90 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6282
  %91 = load i32, i32* %totvlak, align 4, !dbg !6283
  %conv95 = sext i32 %91 to i64, !dbg !6283
  %mul96 = mul i64 12, %conv95, !dbg !6284
  %mul97 = mul i64 %mul96, 4, !dbg !6285
  %call98 = call i8* %90(i64 %mul97, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0)), !dbg !6282
  %92 = bitcast i8* %call98 to %struct.MLoopUV*, !dbg !6282
  store %struct.MLoopUV* %92, %struct.MLoopUV** %mloopuv, align 8, !dbg !6286
  %93 = load %struct.MLoopUV**, %struct.MLoopUV*** %alluv.addr, align 8, !dbg !6287
  store %struct.MLoopUV* %92, %struct.MLoopUV** %93, align 8, !dbg !6288
  br label %if.end99, !dbg !6289

if.end99:                                         ; preds = %if.then94, %if.end80
  store i32 0, i32* %vertcount, align 4, !dbg !6290
  %94 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !6291
  %first100 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %94, i32 0, i32 0, !dbg !6292
  %95 = load i8*, i8** %first100, align 8, !dbg !6292
  %96 = bitcast i8* %95 to %struct.DispList*, !dbg !6291
  store %struct.DispList* %96, %struct.DispList** %dl, align 8, !dbg !6293
  br label %while.cond101, !dbg !6294

while.cond101:                                    ; preds = %if.end471, %if.end99
  %97 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6295
  %tobool102 = icmp ne %struct.DispList* %97, null, !dbg !6294
  br i1 %tobool102, label %while.body103, label %while.end473, !dbg !6294

while.body103:                                    ; preds = %while.cond101
  call void @llvm.dbg.declare(metadata i32* %smooth, metadata !6296, metadata !DIExpression()), !dbg !6298
  %98 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6299
  %rt = getelementptr inbounds %struct.DispList, %struct.DispList* %98, i32 0, i32 7, !dbg !6300
  %99 = load i16, i16* %rt, align 2, !dbg !6300
  %conv104 = sext i16 %99 to i32, !dbg !6299
  %and105 = and i32 %conv104, 1, !dbg !6301
  %tobool106 = icmp ne i32 %and105, 0, !dbg !6299
  %100 = zext i1 %tobool106 to i64, !dbg !6299
  %cond = select i1 %tobool106, i32 1, i32 0, !dbg !6299
  store i32 %cond, i32* %smooth, align 4, !dbg !6298
  %101 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6302
  %type107 = getelementptr inbounds %struct.DispList, %struct.DispList* %101, i32 0, i32 2, !dbg !6304
  %102 = load i16, i16* %type107, align 8, !dbg !6304
  %conv108 = sext i16 %102 to i32, !dbg !6302
  %cmp109 = icmp eq i32 %conv108, 1, !dbg !6305
  br i1 %cmp109, label %if.then111, label %if.else140, !dbg !6306

if.then111:                                       ; preds = %while.body103
  %103 = load i32, i32* %vertcount, align 4, !dbg !6307
  store i32 %103, i32* %startvert, align 4, !dbg !6309
  %104 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6310
  %parts112 = getelementptr inbounds %struct.DispList, %struct.DispList* %104, i32 0, i32 4, !dbg !6311
  %105 = load i32, i32* %parts112, align 4, !dbg !6311
  %106 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6312
  %nr113 = getelementptr inbounds %struct.DispList, %struct.DispList* %106, i32 0, i32 5, !dbg !6313
  %107 = load i32, i32* %nr113, align 8, !dbg !6313
  %mul114 = mul nsw i32 %105, %107, !dbg !6314
  store i32 %mul114, i32* %a, align 4, !dbg !6315
  %108 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6316
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %108, i32 0, i32 8, !dbg !6317
  %109 = load float*, float** %verts, align 8, !dbg !6317
  store float* %109, float** %data1, align 8, !dbg !6318
  br label %while.cond115, !dbg !6319

while.cond115:                                    ; preds = %while.body117, %if.then111
  %110 = load i32, i32* %a, align 4, !dbg !6320
  %dec = add nsw i32 %110, -1, !dbg !6320
  store i32 %dec, i32* %a, align 4, !dbg !6320
  %tobool116 = icmp ne i32 %110, 0, !dbg !6319
  br i1 %tobool116, label %while.body117, label %while.end118, !dbg !6319

while.body117:                                    ; preds = %while.cond115
  %111 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6321
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %111, i32 0, i32 0, !dbg !6323
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6321
  %112 = load float*, float** %data1, align 8, !dbg !6324
  call void @copy_v3_v3(float* %arraydecay, float* %112), !dbg !6325
  %113 = load float*, float** %data1, align 8, !dbg !6326
  %add.ptr = getelementptr inbounds float, float* %113, i64 3, !dbg !6326
  store float* %add.ptr, float** %data1, align 8, !dbg !6326
  %114 = load i32, i32* %vertcount, align 4, !dbg !6327
  %inc = add nsw i32 %114, 1, !dbg !6327
  store i32 %inc, i32* %vertcount, align 4, !dbg !6327
  %115 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6328
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %115, i32 1, !dbg !6328
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mvert, align 8, !dbg !6328
  br label %while.cond115, !dbg !6319, !llvm.loop !6329

while.end118:                                     ; preds = %while.cond115
  store i32 0, i32* %a, align 4, !dbg !6331
  br label %for.cond, !dbg !6333

for.cond:                                         ; preds = %for.inc137, %while.end118
  %116 = load i32, i32* %a, align 4, !dbg !6334
  %117 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6336
  %parts119 = getelementptr inbounds %struct.DispList, %struct.DispList* %117, i32 0, i32 4, !dbg !6337
  %118 = load i32, i32* %parts119, align 4, !dbg !6337
  %cmp120 = icmp slt i32 %116, %118, !dbg !6338
  br i1 %cmp120, label %for.body, label %for.end139, !dbg !6339

for.body:                                         ; preds = %for.cond
  %119 = load i32, i32* %a, align 4, !dbg !6340
  %120 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6342
  %nr122 = getelementptr inbounds %struct.DispList, %struct.DispList* %120, i32 0, i32 5, !dbg !6343
  %121 = load i32, i32* %nr122, align 8, !dbg !6343
  %mul123 = mul nsw i32 %119, %121, !dbg !6344
  store i32 %mul123, i32* %ofs, align 4, !dbg !6345
  store i32 1, i32* %b, align 4, !dbg !6346
  br label %for.cond124, !dbg !6348

for.cond124:                                      ; preds = %for.inc, %for.body
  %122 = load i32, i32* %b, align 4, !dbg !6349
  %123 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6351
  %nr125 = getelementptr inbounds %struct.DispList, %struct.DispList* %123, i32 0, i32 5, !dbg !6352
  %124 = load i32, i32* %nr125, align 8, !dbg !6352
  %cmp126 = icmp slt i32 %122, %124, !dbg !6353
  br i1 %cmp126, label %for.body128, label %for.end, !dbg !6354

for.body128:                                      ; preds = %for.cond124
  %125 = load i32, i32* %startvert, align 4, !dbg !6355
  %126 = load i32, i32* %ofs, align 4, !dbg !6357
  %add129 = add nsw i32 %125, %126, !dbg !6358
  %127 = load i32, i32* %b, align 4, !dbg !6359
  %add130 = add nsw i32 %add129, %127, !dbg !6360
  %sub131 = sub nsw i32 %add130, 1, !dbg !6361
  %128 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !6362
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %128, i32 0, i32 0, !dbg !6363
  store i32 %sub131, i32* %v1, align 4, !dbg !6364
  %129 = load i32, i32* %startvert, align 4, !dbg !6365
  %130 = load i32, i32* %ofs, align 4, !dbg !6366
  %add132 = add nsw i32 %129, %130, !dbg !6367
  %131 = load i32, i32* %b, align 4, !dbg !6368
  %add133 = add nsw i32 %add132, %131, !dbg !6369
  %132 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !6370
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %132, i32 0, i32 1, !dbg !6371
  store i32 %add133, i32* %v2, align 4, !dbg !6372
  %133 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !6373
  %flag134 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %133, i32 0, i32 4, !dbg !6374
  store i16 162, i16* %flag134, align 2, !dbg !6375
  %134 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !6376
  %incdec.ptr135 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %134, i32 1, !dbg !6376
  store %struct.MEdge* %incdec.ptr135, %struct.MEdge** %medge, align 8, !dbg !6376
  br label %for.inc, !dbg !6377

for.inc:                                          ; preds = %for.body128
  %135 = load i32, i32* %b, align 4, !dbg !6378
  %inc136 = add nsw i32 %135, 1, !dbg !6378
  store i32 %inc136, i32* %b, align 4, !dbg !6378
  br label %for.cond124, !dbg !6379, !llvm.loop !6380

for.end:                                          ; preds = %for.cond124
  br label %for.inc137, !dbg !6382

for.inc137:                                       ; preds = %for.end
  %136 = load i32, i32* %a, align 4, !dbg !6383
  %inc138 = add nsw i32 %136, 1, !dbg !6383
  store i32 %inc138, i32* %a, align 4, !dbg !6383
  br label %for.cond, !dbg !6384, !llvm.loop !6385

for.end139:                                       ; preds = %for.cond
  br label %if.end471, !dbg !6387

if.else140:                                       ; preds = %while.body103
  %137 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6388
  %type141 = getelementptr inbounds %struct.DispList, %struct.DispList* %137, i32 0, i32 2, !dbg !6390
  %138 = load i16, i16* %type141, align 8, !dbg !6390
  %conv142 = sext i16 %138 to i32, !dbg !6388
  %cmp143 = icmp eq i32 %conv142, 0, !dbg !6391
  br i1 %cmp143, label %if.then145, label %if.else199, !dbg !6392

if.then145:                                       ; preds = %if.else140
  %139 = load i8, i8* %conv_polys, align 1, !dbg !6393
  %tobool146 = icmp ne i8 %139, 0, !dbg !6393
  br i1 %tobool146, label %if.then147, label %if.end198, !dbg !6396

if.then147:                                       ; preds = %if.then145
  %140 = load i32, i32* %vertcount, align 4, !dbg !6397
  store i32 %140, i32* %startvert, align 4, !dbg !6399
  %141 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6400
  %parts148 = getelementptr inbounds %struct.DispList, %struct.DispList* %141, i32 0, i32 4, !dbg !6401
  %142 = load i32, i32* %parts148, align 4, !dbg !6401
  %143 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6402
  %nr149 = getelementptr inbounds %struct.DispList, %struct.DispList* %143, i32 0, i32 5, !dbg !6403
  %144 = load i32, i32* %nr149, align 8, !dbg !6403
  %mul150 = mul nsw i32 %142, %144, !dbg !6404
  store i32 %mul150, i32* %a, align 4, !dbg !6405
  %145 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6406
  %verts151 = getelementptr inbounds %struct.DispList, %struct.DispList* %145, i32 0, i32 8, !dbg !6407
  %146 = load float*, float** %verts151, align 8, !dbg !6407
  store float* %146, float** %data1, align 8, !dbg !6408
  br label %while.cond152, !dbg !6409

while.cond152:                                    ; preds = %while.body155, %if.then147
  %147 = load i32, i32* %a, align 4, !dbg !6410
  %dec153 = add nsw i32 %147, -1, !dbg !6410
  store i32 %dec153, i32* %a, align 4, !dbg !6410
  %tobool154 = icmp ne i32 %147, 0, !dbg !6409
  br i1 %tobool154, label %while.body155, label %while.end161, !dbg !6409

while.body155:                                    ; preds = %while.cond152
  %148 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6411
  %co156 = getelementptr inbounds %struct.MVert, %struct.MVert* %148, i32 0, i32 0, !dbg !6413
  %arraydecay157 = getelementptr inbounds [3 x float], [3 x float]* %co156, i64 0, i64 0, !dbg !6411
  %149 = load float*, float** %data1, align 8, !dbg !6414
  call void @copy_v3_v3(float* %arraydecay157, float* %149), !dbg !6415
  %150 = load float*, float** %data1, align 8, !dbg !6416
  %add.ptr158 = getelementptr inbounds float, float* %150, i64 3, !dbg !6416
  store float* %add.ptr158, float** %data1, align 8, !dbg !6416
  %151 = load i32, i32* %vertcount, align 4, !dbg !6417
  %inc159 = add nsw i32 %151, 1, !dbg !6417
  store i32 %inc159, i32* %vertcount, align 4, !dbg !6417
  %152 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6418
  %incdec.ptr160 = getelementptr inbounds %struct.MVert, %struct.MVert* %152, i32 1, !dbg !6418
  store %struct.MVert* %incdec.ptr160, %struct.MVert** %mvert, align 8, !dbg !6418
  br label %while.cond152, !dbg !6409, !llvm.loop !6419

while.end161:                                     ; preds = %while.cond152
  store i32 0, i32* %a, align 4, !dbg !6421
  br label %for.cond162, !dbg !6423

for.cond162:                                      ; preds = %for.inc195, %while.end161
  %153 = load i32, i32* %a, align 4, !dbg !6424
  %154 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6426
  %parts163 = getelementptr inbounds %struct.DispList, %struct.DispList* %154, i32 0, i32 4, !dbg !6427
  %155 = load i32, i32* %parts163, align 4, !dbg !6427
  %cmp164 = icmp slt i32 %153, %155, !dbg !6428
  br i1 %cmp164, label %for.body166, label %for.end197, !dbg !6429

for.body166:                                      ; preds = %for.cond162
  %156 = load i32, i32* %a, align 4, !dbg !6430
  %157 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6432
  %nr167 = getelementptr inbounds %struct.DispList, %struct.DispList* %157, i32 0, i32 5, !dbg !6433
  %158 = load i32, i32* %nr167, align 8, !dbg !6433
  %mul168 = mul nsw i32 %156, %158, !dbg !6434
  store i32 %mul168, i32* %ofs, align 4, !dbg !6435
  store i32 0, i32* %b, align 4, !dbg !6436
  br label %for.cond169, !dbg !6438

for.cond169:                                      ; preds = %for.inc192, %for.body166
  %159 = load i32, i32* %b, align 4, !dbg !6439
  %160 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6441
  %nr170 = getelementptr inbounds %struct.DispList, %struct.DispList* %160, i32 0, i32 5, !dbg !6442
  %161 = load i32, i32* %nr170, align 8, !dbg !6442
  %cmp171 = icmp slt i32 %159, %161, !dbg !6443
  br i1 %cmp171, label %for.body173, label %for.end194, !dbg !6444

for.body173:                                      ; preds = %for.cond169
  %162 = load i32, i32* %startvert, align 4, !dbg !6445
  %163 = load i32, i32* %ofs, align 4, !dbg !6447
  %add174 = add nsw i32 %162, %163, !dbg !6448
  %164 = load i32, i32* %b, align 4, !dbg !6449
  %add175 = add nsw i32 %add174, %164, !dbg !6450
  %165 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !6451
  %v1176 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %165, i32 0, i32 0, !dbg !6452
  store i32 %add175, i32* %v1176, align 4, !dbg !6453
  %166 = load i32, i32* %b, align 4, !dbg !6454
  %167 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6456
  %nr177 = getelementptr inbounds %struct.DispList, %struct.DispList* %167, i32 0, i32 5, !dbg !6457
  %168 = load i32, i32* %nr177, align 8, !dbg !6457
  %sub178 = sub nsw i32 %168, 1, !dbg !6458
  %cmp179 = icmp eq i32 %166, %sub178, !dbg !6459
  br i1 %cmp179, label %if.then181, label %if.else184, !dbg !6460

if.then181:                                       ; preds = %for.body173
  %169 = load i32, i32* %startvert, align 4, !dbg !6461
  %170 = load i32, i32* %ofs, align 4, !dbg !6462
  %add182 = add nsw i32 %169, %170, !dbg !6463
  %171 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !6464
  %v2183 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %171, i32 0, i32 1, !dbg !6465
  store i32 %add182, i32* %v2183, align 4, !dbg !6466
  br label %if.end189, !dbg !6464

if.else184:                                       ; preds = %for.body173
  %172 = load i32, i32* %startvert, align 4, !dbg !6467
  %173 = load i32, i32* %ofs, align 4, !dbg !6468
  %add185 = add nsw i32 %172, %173, !dbg !6469
  %174 = load i32, i32* %b, align 4, !dbg !6470
  %add186 = add nsw i32 %add185, %174, !dbg !6471
  %add187 = add nsw i32 %add186, 1, !dbg !6472
  %175 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !6473
  %v2188 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %175, i32 0, i32 1, !dbg !6474
  store i32 %add187, i32* %v2188, align 4, !dbg !6475
  br label %if.end189

if.end189:                                        ; preds = %if.else184, %if.then181
  %176 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !6476
  %flag190 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %176, i32 0, i32 4, !dbg !6477
  store i16 162, i16* %flag190, align 2, !dbg !6478
  %177 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !6479
  %incdec.ptr191 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %177, i32 1, !dbg !6479
  store %struct.MEdge* %incdec.ptr191, %struct.MEdge** %medge, align 8, !dbg !6479
  br label %for.inc192, !dbg !6480

for.inc192:                                       ; preds = %if.end189
  %178 = load i32, i32* %b, align 4, !dbg !6481
  %inc193 = add nsw i32 %178, 1, !dbg !6481
  store i32 %inc193, i32* %b, align 4, !dbg !6481
  br label %for.cond169, !dbg !6482, !llvm.loop !6483

for.end194:                                       ; preds = %for.cond169
  br label %for.inc195, !dbg !6485

for.inc195:                                       ; preds = %for.end194
  %179 = load i32, i32* %a, align 4, !dbg !6486
  %inc196 = add nsw i32 %179, 1, !dbg !6486
  store i32 %inc196, i32* %a, align 4, !dbg !6486
  br label %for.cond162, !dbg !6487, !llvm.loop !6488

for.end197:                                       ; preds = %for.cond162
  br label %if.end198, !dbg !6490

if.end198:                                        ; preds = %for.end197, %if.then145
  br label %if.end470, !dbg !6491

if.else199:                                       ; preds = %if.else140
  %180 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6492
  %type200 = getelementptr inbounds %struct.DispList, %struct.DispList* %180, i32 0, i32 2, !dbg !6494
  %181 = load i16, i16* %type200, align 8, !dbg !6494
  %conv201 = sext i16 %181 to i32, !dbg !6492
  %cmp202 = icmp eq i32 %conv201, 4, !dbg !6495
  br i1 %cmp202, label %if.then204, label %if.else266, !dbg !6496

if.then204:                                       ; preds = %if.else199
  %182 = load i32, i32* %vertcount, align 4, !dbg !6497
  store i32 %182, i32* %startvert, align 4, !dbg !6499
  %183 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6500
  %nr205 = getelementptr inbounds %struct.DispList, %struct.DispList* %183, i32 0, i32 5, !dbg !6501
  %184 = load i32, i32* %nr205, align 8, !dbg !6501
  store i32 %184, i32* %a, align 4, !dbg !6502
  %185 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6503
  %verts206 = getelementptr inbounds %struct.DispList, %struct.DispList* %185, i32 0, i32 8, !dbg !6504
  %186 = load float*, float** %verts206, align 8, !dbg !6504
  store float* %186, float** %data1, align 8, !dbg !6505
  br label %while.cond207, !dbg !6506

while.cond207:                                    ; preds = %while.body210, %if.then204
  %187 = load i32, i32* %a, align 4, !dbg !6507
  %dec208 = add nsw i32 %187, -1, !dbg !6507
  store i32 %dec208, i32* %a, align 4, !dbg !6507
  %tobool209 = icmp ne i32 %187, 0, !dbg !6506
  br i1 %tobool209, label %while.body210, label %while.end216, !dbg !6506

while.body210:                                    ; preds = %while.cond207
  %188 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6508
  %co211 = getelementptr inbounds %struct.MVert, %struct.MVert* %188, i32 0, i32 0, !dbg !6510
  %arraydecay212 = getelementptr inbounds [3 x float], [3 x float]* %co211, i64 0, i64 0, !dbg !6508
  %189 = load float*, float** %data1, align 8, !dbg !6511
  call void @copy_v3_v3(float* %arraydecay212, float* %189), !dbg !6512
  %190 = load float*, float** %data1, align 8, !dbg !6513
  %add.ptr213 = getelementptr inbounds float, float* %190, i64 3, !dbg !6513
  store float* %add.ptr213, float** %data1, align 8, !dbg !6513
  %191 = load i32, i32* %vertcount, align 4, !dbg !6514
  %inc214 = add nsw i32 %191, 1, !dbg !6514
  store i32 %inc214, i32* %vertcount, align 4, !dbg !6514
  %192 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6515
  %incdec.ptr215 = getelementptr inbounds %struct.MVert, %struct.MVert* %192, i32 1, !dbg !6515
  store %struct.MVert* %incdec.ptr215, %struct.MVert** %mvert, align 8, !dbg !6515
  br label %while.cond207, !dbg !6506, !llvm.loop !6516

while.end216:                                     ; preds = %while.cond207
  %193 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6518
  %parts217 = getelementptr inbounds %struct.DispList, %struct.DispList* %193, i32 0, i32 4, !dbg !6519
  %194 = load i32, i32* %parts217, align 4, !dbg !6519
  store i32 %194, i32* %a, align 4, !dbg !6520
  %195 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6521
  %index218 = getelementptr inbounds %struct.DispList, %struct.DispList* %195, i32 0, i32 10, !dbg !6522
  %196 = load i32*, i32** %index218, align 8, !dbg !6522
  store i32* %196, i32** %index, align 8, !dbg !6523
  br label %while.cond219, !dbg !6524

while.cond219:                                    ; preds = %if.end261, %while.end216
  %197 = load i32, i32* %a, align 4, !dbg !6525
  %dec220 = add nsw i32 %197, -1, !dbg !6525
  store i32 %dec220, i32* %a, align 4, !dbg !6525
  %tobool221 = icmp ne i32 %197, 0, !dbg !6524
  br i1 %tobool221, label %while.body222, label %while.end265, !dbg !6524

while.body222:                                    ; preds = %while.cond219
  %198 = load i32, i32* %startvert, align 4, !dbg !6526
  %199 = load i32*, i32** %index, align 8, !dbg !6528
  %arrayidx = getelementptr inbounds i32, i32* %199, i64 0, !dbg !6528
  %200 = load i32, i32* %arrayidx, align 4, !dbg !6528
  %add223 = add nsw i32 %198, %200, !dbg !6529
  %201 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !6530
  %arrayidx224 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %201, i64 0, !dbg !6530
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx224, i32 0, i32 0, !dbg !6531
  store i32 %add223, i32* %v, align 4, !dbg !6532
  %202 = load i32, i32* %startvert, align 4, !dbg !6533
  %203 = load i32*, i32** %index, align 8, !dbg !6534
  %arrayidx225 = getelementptr inbounds i32, i32* %203, i64 2, !dbg !6534
  %204 = load i32, i32* %arrayidx225, align 4, !dbg !6534
  %add226 = add nsw i32 %202, %204, !dbg !6535
  %205 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !6536
  %arrayidx227 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %205, i64 1, !dbg !6536
  %v228 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx227, i32 0, i32 0, !dbg !6537
  store i32 %add226, i32* %v228, align 4, !dbg !6538
  %206 = load i32, i32* %startvert, align 4, !dbg !6539
  %207 = load i32*, i32** %index, align 8, !dbg !6540
  %arrayidx229 = getelementptr inbounds i32, i32* %207, i64 1, !dbg !6540
  %208 = load i32, i32* %arrayidx229, align 4, !dbg !6540
  %add230 = add nsw i32 %206, %208, !dbg !6541
  %209 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !6542
  %arrayidx231 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %209, i64 2, !dbg !6542
  %v232 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx231, i32 0, i32 0, !dbg !6543
  store i32 %add230, i32* %v232, align 4, !dbg !6544
  %210 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !6545
  %211 = load %struct.MLoop**, %struct.MLoop*** %allloop.addr, align 8, !dbg !6546
  %212 = load %struct.MLoop*, %struct.MLoop** %211, align 8, !dbg !6547
  %sub.ptr.lhs.cast = ptrtoint %struct.MLoop* %210 to i64, !dbg !6548
  %sub.ptr.rhs.cast = ptrtoint %struct.MLoop* %212 to i64, !dbg !6548
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6548
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !6548
  %conv233 = trunc i64 %sub.ptr.div to i32, !dbg !6549
  %213 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !6550
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %213, i32 0, i32 0, !dbg !6551
  store i32 %conv233, i32* %loopstart, align 4, !dbg !6552
  %214 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !6553
  %totloop234 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %214, i32 0, i32 1, !dbg !6554
  store i32 3, i32* %totloop234, align 4, !dbg !6555
  %215 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6556
  %col = getelementptr inbounds %struct.DispList, %struct.DispList* %215, i32 0, i32 6, !dbg !6557
  %216 = load i16, i16* %col, align 4, !dbg !6557
  %217 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !6558
  %mat_nr = getelementptr inbounds %struct.MPoly, %struct.MPoly* %217, i32 0, i32 2, !dbg !6559
  store i16 %216, i16* %mat_nr, align 4, !dbg !6560
  %218 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !6561
  %tobool235 = icmp ne %struct.MLoopUV* %218, null, !dbg !6561
  br i1 %tobool235, label %if.then236, label %if.end255, !dbg !6563

if.then236:                                       ; preds = %while.body222
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6564, metadata !DIExpression()), !dbg !6566
  store i32 0, i32* %i, align 4, !dbg !6567
  br label %for.cond237, !dbg !6569

for.cond237:                                      ; preds = %for.inc251, %if.then236
  %219 = load i32, i32* %i, align 4, !dbg !6570
  %cmp238 = icmp slt i32 %219, 3, !dbg !6572
  br i1 %cmp238, label %for.body240, label %for.end254, !dbg !6573

for.body240:                                      ; preds = %for.cond237
  %220 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !6574
  %221 = load i32, i32* %i, align 4, !dbg !6576
  %idxprom = sext i32 %221 to i64, !dbg !6574
  %arrayidx241 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %220, i64 %idxprom, !dbg !6574
  %v242 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx241, i32 0, i32 0, !dbg !6577
  %222 = load i32, i32* %v242, align 4, !dbg !6577
  %223 = load i32, i32* %startvert, align 4, !dbg !6578
  %sub243 = sub i32 %222, %223, !dbg !6579
  %conv244 = uitofp i32 %sub243 to float, !dbg !6580
  %224 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6581
  %nr245 = getelementptr inbounds %struct.DispList, %struct.DispList* %224, i32 0, i32 5, !dbg !6582
  %225 = load i32, i32* %nr245, align 8, !dbg !6582
  %sub246 = sub nsw i32 %225, 1, !dbg !6583
  %conv247 = sitofp i32 %sub246 to float, !dbg !6584
  %div = fdiv float %conv244, %conv247, !dbg !6585
  %226 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !6586
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %226, i32 0, i32 0, !dbg !6587
  %arrayidx248 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !6586
  store float %div, float* %arrayidx248, align 4, !dbg !6588
  %227 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !6589
  %uv249 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %227, i32 0, i32 0, !dbg !6590
  %arrayidx250 = getelementptr inbounds [2 x float], [2 x float]* %uv249, i64 0, i64 1, !dbg !6589
  store float 0.000000e+00, float* %arrayidx250, align 4, !dbg !6591
  br label %for.inc251, !dbg !6592

for.inc251:                                       ; preds = %for.body240
  %228 = load i32, i32* %i, align 4, !dbg !6593
  %inc252 = add nsw i32 %228, 1, !dbg !6593
  store i32 %inc252, i32* %i, align 4, !dbg !6593
  %229 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !6594
  %incdec.ptr253 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %229, i32 1, !dbg !6594
  store %struct.MLoopUV* %incdec.ptr253, %struct.MLoopUV** %mloopuv, align 8, !dbg !6594
  br label %for.cond237, !dbg !6595, !llvm.loop !6596

for.end254:                                       ; preds = %for.cond237
  br label %if.end255, !dbg !6598

if.end255:                                        ; preds = %for.end254, %while.body222
  %230 = load i32, i32* %smooth, align 4, !dbg !6599
  %tobool256 = icmp ne i32 %230, 0, !dbg !6599
  br i1 %tobool256, label %if.then257, label %if.end261, !dbg !6601

if.then257:                                       ; preds = %if.end255
  %231 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !6602
  %flag258 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %231, i32 0, i32 3, !dbg !6603
  %232 = load i8, i8* %flag258, align 2, !dbg !6604
  %conv259 = zext i8 %232 to i32, !dbg !6604
  %or = or i32 %conv259, 1, !dbg !6604
  %conv260 = trunc i32 %or to i8, !dbg !6604
  store i8 %conv260, i8* %flag258, align 2, !dbg !6604
  br label %if.end261, !dbg !6602

if.end261:                                        ; preds = %if.then257, %if.end255
  %233 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !6605
  %incdec.ptr262 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %233, i32 1, !dbg !6605
  store %struct.MPoly* %incdec.ptr262, %struct.MPoly** %mpoly, align 8, !dbg !6605
  %234 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !6606
  %add.ptr263 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %234, i64 3, !dbg !6606
  store %struct.MLoop* %add.ptr263, %struct.MLoop** %mloop, align 8, !dbg !6606
  %235 = load i32*, i32** %index, align 8, !dbg !6607
  %add.ptr264 = getelementptr inbounds i32, i32* %235, i64 3, !dbg !6607
  store i32* %add.ptr264, i32** %index, align 8, !dbg !6607
  br label %while.cond219, !dbg !6524, !llvm.loop !6608

while.end265:                                     ; preds = %while.cond219
  br label %if.end469, !dbg !6610

if.else266:                                       ; preds = %if.else199
  %236 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6611
  %type267 = getelementptr inbounds %struct.DispList, %struct.DispList* %236, i32 0, i32 2, !dbg !6613
  %237 = load i16, i16* %type267, align 8, !dbg !6613
  %conv268 = sext i16 %237 to i32, !dbg !6611
  %cmp269 = icmp eq i32 %conv268, 2, !dbg !6614
  br i1 %cmp269, label %if.then271, label %if.end468, !dbg !6615

if.then271:                                       ; preds = %if.else266
  %238 = load i32, i32* %vertcount, align 4, !dbg !6616
  store i32 %238, i32* %startvert, align 4, !dbg !6618
  %239 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6619
  %parts272 = getelementptr inbounds %struct.DispList, %struct.DispList* %239, i32 0, i32 4, !dbg !6620
  %240 = load i32, i32* %parts272, align 4, !dbg !6620
  %241 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6621
  %nr273 = getelementptr inbounds %struct.DispList, %struct.DispList* %241, i32 0, i32 5, !dbg !6622
  %242 = load i32, i32* %nr273, align 8, !dbg !6622
  %mul274 = mul nsw i32 %240, %242, !dbg !6623
  store i32 %mul274, i32* %a, align 4, !dbg !6624
  %243 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6625
  %verts275 = getelementptr inbounds %struct.DispList, %struct.DispList* %243, i32 0, i32 8, !dbg !6626
  %244 = load float*, float** %verts275, align 8, !dbg !6626
  store float* %244, float** %data1, align 8, !dbg !6627
  br label %while.cond276, !dbg !6628

while.cond276:                                    ; preds = %while.body279, %if.then271
  %245 = load i32, i32* %a, align 4, !dbg !6629
  %dec277 = add nsw i32 %245, -1, !dbg !6629
  store i32 %dec277, i32* %a, align 4, !dbg !6629
  %tobool278 = icmp ne i32 %245, 0, !dbg !6628
  br i1 %tobool278, label %while.body279, label %while.end285, !dbg !6628

while.body279:                                    ; preds = %while.cond276
  %246 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6630
  %co280 = getelementptr inbounds %struct.MVert, %struct.MVert* %246, i32 0, i32 0, !dbg !6632
  %arraydecay281 = getelementptr inbounds [3 x float], [3 x float]* %co280, i64 0, i64 0, !dbg !6630
  %247 = load float*, float** %data1, align 8, !dbg !6633
  call void @copy_v3_v3(float* %arraydecay281, float* %247), !dbg !6634
  %248 = load float*, float** %data1, align 8, !dbg !6635
  %add.ptr282 = getelementptr inbounds float, float* %248, i64 3, !dbg !6635
  store float* %add.ptr282, float** %data1, align 8, !dbg !6635
  %249 = load i32, i32* %vertcount, align 4, !dbg !6636
  %inc283 = add nsw i32 %249, 1, !dbg !6636
  store i32 %inc283, i32* %vertcount, align 4, !dbg !6636
  %250 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6637
  %incdec.ptr284 = getelementptr inbounds %struct.MVert, %struct.MVert* %250, i32 1, !dbg !6637
  store %struct.MVert* %incdec.ptr284, %struct.MVert** %mvert, align 8, !dbg !6637
  br label %while.cond276, !dbg !6628, !llvm.loop !6638

while.end285:                                     ; preds = %while.cond276
  store i32 0, i32* %a, align 4, !dbg !6640
  br label %for.cond286, !dbg !6642

for.cond286:                                      ; preds = %for.inc465, %while.end285
  %251 = load i32, i32* %a, align 4, !dbg !6643
  %252 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6645
  %parts287 = getelementptr inbounds %struct.DispList, %struct.DispList* %252, i32 0, i32 4, !dbg !6646
  %253 = load i32, i32* %parts287, align 4, !dbg !6646
  %cmp288 = icmp slt i32 %251, %253, !dbg !6647
  br i1 %cmp288, label %for.body290, label %for.end467, !dbg !6648

for.body290:                                      ; preds = %for.cond286
  %254 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6649
  %flag291 = getelementptr inbounds %struct.DispList, %struct.DispList* %254, i32 0, i32 3, !dbg !6652
  %255 = load i16, i16* %flag291, align 2, !dbg !6652
  %conv292 = sext i16 %255 to i32, !dbg !6649
  %and293 = and i32 %conv292, 2, !dbg !6653
  %cmp294 = icmp eq i32 %and293, 0, !dbg !6654
  br i1 %cmp294, label %land.lhs.true, label %if.end301, !dbg !6655

land.lhs.true:                                    ; preds = %for.body290
  %256 = load i32, i32* %a, align 4, !dbg !6656
  %257 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6657
  %parts296 = getelementptr inbounds %struct.DispList, %struct.DispList* %257, i32 0, i32 4, !dbg !6658
  %258 = load i32, i32* %parts296, align 4, !dbg !6658
  %sub297 = sub nsw i32 %258, 1, !dbg !6659
  %cmp298 = icmp eq i32 %256, %sub297, !dbg !6660
  br i1 %cmp298, label %if.then300, label %if.end301, !dbg !6661

if.then300:                                       ; preds = %land.lhs.true
  br label %for.end467, !dbg !6662

if.end301:                                        ; preds = %land.lhs.true, %for.body290
  %259 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6663
  %flag302 = getelementptr inbounds %struct.DispList, %struct.DispList* %259, i32 0, i32 3, !dbg !6665
  %260 = load i16, i16* %flag302, align 2, !dbg !6665
  %conv303 = sext i16 %260 to i32, !dbg !6663
  %and304 = and i32 %conv303, 1, !dbg !6666
  %tobool305 = icmp ne i32 %and304, 0, !dbg !6666
  br i1 %tobool305, label %if.then306, label %if.else317, !dbg !6667

if.then306:                                       ; preds = %if.end301
  %261 = load i32, i32* %startvert, align 4, !dbg !6668
  %262 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6670
  %nr307 = getelementptr inbounds %struct.DispList, %struct.DispList* %262, i32 0, i32 5, !dbg !6671
  %263 = load i32, i32* %nr307, align 8, !dbg !6671
  %264 = load i32, i32* %a, align 4, !dbg !6672
  %mul308 = mul nsw i32 %263, %264, !dbg !6673
  %add309 = add nsw i32 %261, %mul308, !dbg !6674
  store i32 %add309, i32* %p1, align 4, !dbg !6675
  %265 = load i32, i32* %p1, align 4, !dbg !6676
  %266 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6677
  %nr310 = getelementptr inbounds %struct.DispList, %struct.DispList* %266, i32 0, i32 5, !dbg !6678
  %267 = load i32, i32* %nr310, align 8, !dbg !6678
  %add311 = add nsw i32 %265, %267, !dbg !6679
  %sub312 = sub nsw i32 %add311, 1, !dbg !6680
  store i32 %sub312, i32* %p2, align 4, !dbg !6681
  %268 = load i32, i32* %p1, align 4, !dbg !6682
  %269 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6683
  %nr313 = getelementptr inbounds %struct.DispList, %struct.DispList* %269, i32 0, i32 5, !dbg !6684
  %270 = load i32, i32* %nr313, align 8, !dbg !6684
  %add314 = add nsw i32 %268, %270, !dbg !6685
  store i32 %add314, i32* %p3, align 4, !dbg !6686
  %271 = load i32, i32* %p2, align 4, !dbg !6687
  %272 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6688
  %nr315 = getelementptr inbounds %struct.DispList, %struct.DispList* %272, i32 0, i32 5, !dbg !6689
  %273 = load i32, i32* %nr315, align 8, !dbg !6689
  %add316 = add nsw i32 %271, %273, !dbg !6690
  store i32 %add316, i32* %p4, align 4, !dbg !6691
  store i32 0, i32* %b, align 4, !dbg !6692
  br label %if.end326, !dbg !6693

if.else317:                                       ; preds = %if.end301
  %274 = load i32, i32* %startvert, align 4, !dbg !6694
  %275 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6696
  %nr318 = getelementptr inbounds %struct.DispList, %struct.DispList* %275, i32 0, i32 5, !dbg !6697
  %276 = load i32, i32* %nr318, align 8, !dbg !6697
  %277 = load i32, i32* %a, align 4, !dbg !6698
  %mul319 = mul nsw i32 %276, %277, !dbg !6699
  %add320 = add nsw i32 %274, %mul319, !dbg !6700
  store i32 %add320, i32* %p2, align 4, !dbg !6701
  %278 = load i32, i32* %p2, align 4, !dbg !6702
  %add321 = add nsw i32 %278, 1, !dbg !6703
  store i32 %add321, i32* %p1, align 4, !dbg !6704
  %279 = load i32, i32* %p2, align 4, !dbg !6705
  %280 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6706
  %nr322 = getelementptr inbounds %struct.DispList, %struct.DispList* %280, i32 0, i32 5, !dbg !6707
  %281 = load i32, i32* %nr322, align 8, !dbg !6707
  %add323 = add nsw i32 %279, %281, !dbg !6708
  store i32 %add323, i32* %p4, align 4, !dbg !6709
  %282 = load i32, i32* %p1, align 4, !dbg !6710
  %283 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6711
  %nr324 = getelementptr inbounds %struct.DispList, %struct.DispList* %283, i32 0, i32 5, !dbg !6712
  %284 = load i32, i32* %nr324, align 8, !dbg !6712
  %add325 = add nsw i32 %282, %284, !dbg !6713
  store i32 %add325, i32* %p3, align 4, !dbg !6714
  store i32 1, i32* %b, align 4, !dbg !6715
  br label %if.end326

if.end326:                                        ; preds = %if.else317, %if.then306
  %285 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6716
  %flag327 = getelementptr inbounds %struct.DispList, %struct.DispList* %285, i32 0, i32 3, !dbg !6718
  %286 = load i16, i16* %flag327, align 2, !dbg !6718
  %conv328 = sext i16 %286 to i32, !dbg !6716
  %and329 = and i32 %conv328, 2, !dbg !6719
  %tobool330 = icmp ne i32 %and329, 0, !dbg !6719
  br i1 %tobool330, label %land.lhs.true331, label %if.end345, !dbg !6720

land.lhs.true331:                                 ; preds = %if.end326
  %287 = load i32, i32* %a, align 4, !dbg !6721
  %288 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6722
  %parts332 = getelementptr inbounds %struct.DispList, %struct.DispList* %288, i32 0, i32 4, !dbg !6723
  %289 = load i32, i32* %parts332, align 4, !dbg !6723
  %sub333 = sub nsw i32 %289, 1, !dbg !6724
  %cmp334 = icmp eq i32 %287, %sub333, !dbg !6725
  br i1 %cmp334, label %if.then336, label %if.end345, !dbg !6726

if.then336:                                       ; preds = %land.lhs.true331
  %290 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6727
  %parts337 = getelementptr inbounds %struct.DispList, %struct.DispList* %290, i32 0, i32 4, !dbg !6729
  %291 = load i32, i32* %parts337, align 4, !dbg !6729
  %292 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6730
  %nr338 = getelementptr inbounds %struct.DispList, %struct.DispList* %292, i32 0, i32 5, !dbg !6731
  %293 = load i32, i32* %nr338, align 8, !dbg !6731
  %mul339 = mul nsw i32 %291, %293, !dbg !6732
  %294 = load i32, i32* %p3, align 4, !dbg !6733
  %sub340 = sub nsw i32 %294, %mul339, !dbg !6733
  store i32 %sub340, i32* %p3, align 4, !dbg !6733
  %295 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6734
  %parts341 = getelementptr inbounds %struct.DispList, %struct.DispList* %295, i32 0, i32 4, !dbg !6735
  %296 = load i32, i32* %parts341, align 4, !dbg !6735
  %297 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6736
  %nr342 = getelementptr inbounds %struct.DispList, %struct.DispList* %297, i32 0, i32 5, !dbg !6737
  %298 = load i32, i32* %nr342, align 8, !dbg !6737
  %mul343 = mul nsw i32 %296, %298, !dbg !6738
  %299 = load i32, i32* %p4, align 4, !dbg !6739
  %sub344 = sub nsw i32 %299, %mul343, !dbg !6739
  store i32 %sub344, i32* %p4, align 4, !dbg !6739
  br label %if.end345, !dbg !6740

if.end345:                                        ; preds = %if.then336, %land.lhs.true331, %if.end326
  br label %for.cond346, !dbg !6741

for.cond346:                                      ; preds = %for.inc462, %if.end345
  %300 = load i32, i32* %b, align 4, !dbg !6742
  %301 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6745
  %nr347 = getelementptr inbounds %struct.DispList, %struct.DispList* %301, i32 0, i32 5, !dbg !6746
  %302 = load i32, i32* %nr347, align 8, !dbg !6746
  %cmp348 = icmp slt i32 %300, %302, !dbg !6747
  br i1 %cmp348, label %for.body350, label %for.end464, !dbg !6748

for.body350:                                      ; preds = %for.cond346
  %303 = load i32, i32* %p1, align 4, !dbg !6749
  %304 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !6751
  %arrayidx351 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %304, i64 0, !dbg !6751
  %v352 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx351, i32 0, i32 0, !dbg !6752
  store i32 %303, i32* %v352, align 4, !dbg !6753
  %305 = load i32, i32* %p3, align 4, !dbg !6754
  %306 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !6755
  %arrayidx353 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %306, i64 1, !dbg !6755
  %v354 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx353, i32 0, i32 0, !dbg !6756
  store i32 %305, i32* %v354, align 4, !dbg !6757
  %307 = load i32, i32* %p4, align 4, !dbg !6758
  %308 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !6759
  %arrayidx355 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %308, i64 2, !dbg !6759
  %v356 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx355, i32 0, i32 0, !dbg !6760
  store i32 %307, i32* %v356, align 4, !dbg !6761
  %309 = load i32, i32* %p2, align 4, !dbg !6762
  %310 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !6763
  %arrayidx357 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %310, i64 3, !dbg !6763
  %v358 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx357, i32 0, i32 0, !dbg !6764
  store i32 %309, i32* %v358, align 4, !dbg !6765
  %311 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !6766
  %312 = load %struct.MLoop**, %struct.MLoop*** %allloop.addr, align 8, !dbg !6767
  %313 = load %struct.MLoop*, %struct.MLoop** %312, align 8, !dbg !6768
  %sub.ptr.lhs.cast359 = ptrtoint %struct.MLoop* %311 to i64, !dbg !6769
  %sub.ptr.rhs.cast360 = ptrtoint %struct.MLoop* %313 to i64, !dbg !6769
  %sub.ptr.sub361 = sub i64 %sub.ptr.lhs.cast359, %sub.ptr.rhs.cast360, !dbg !6769
  %sub.ptr.div362 = sdiv exact i64 %sub.ptr.sub361, 8, !dbg !6769
  %conv363 = trunc i64 %sub.ptr.div362 to i32, !dbg !6770
  %314 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !6771
  %loopstart364 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %314, i32 0, i32 0, !dbg !6772
  store i32 %conv363, i32* %loopstart364, align 4, !dbg !6773
  %315 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !6774
  %totloop365 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %315, i32 0, i32 1, !dbg !6775
  store i32 4, i32* %totloop365, align 4, !dbg !6776
  %316 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6777
  %col366 = getelementptr inbounds %struct.DispList, %struct.DispList* %316, i32 0, i32 6, !dbg !6778
  %317 = load i16, i16* %col366, align 4, !dbg !6778
  %318 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !6779
  %mat_nr367 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %318, i32 0, i32 2, !dbg !6780
  store i16 %317, i16* %mat_nr367, align 4, !dbg !6781
  %319 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !6782
  %tobool368 = icmp ne %struct.MLoopUV* %319, null, !dbg !6782
  br i1 %tobool368, label %if.then369, label %if.end450, !dbg !6784

if.then369:                                       ; preds = %for.body350
  call void @llvm.dbg.declare(metadata i32* %orco_sizeu, metadata !6785, metadata !DIExpression()), !dbg !6787
  %320 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6788
  %nr370 = getelementptr inbounds %struct.DispList, %struct.DispList* %320, i32 0, i32 5, !dbg !6789
  %321 = load i32, i32* %nr370, align 8, !dbg !6789
  %sub371 = sub nsw i32 %321, 1, !dbg !6790
  store i32 %sub371, i32* %orco_sizeu, align 4, !dbg !6787
  call void @llvm.dbg.declare(metadata i32* %orco_sizev, metadata !6791, metadata !DIExpression()), !dbg !6792
  %322 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6793
  %parts372 = getelementptr inbounds %struct.DispList, %struct.DispList* %322, i32 0, i32 4, !dbg !6794
  %323 = load i32, i32* %parts372, align 4, !dbg !6794
  %sub373 = sub nsw i32 %323, 1, !dbg !6795
  store i32 %sub373, i32* %orco_sizev, align 4, !dbg !6792
  call void @llvm.dbg.declare(metadata i32* %i374, metadata !6796, metadata !DIExpression()), !dbg !6797
  %324 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6798
  %flag375 = getelementptr inbounds %struct.DispList, %struct.DispList* %324, i32 0, i32 3, !dbg !6800
  %325 = load i16, i16* %flag375, align 2, !dbg !6800
  %conv376 = sext i16 %325 to i32, !dbg !6798
  %and377 = and i32 %conv376, 1, !dbg !6801
  %tobool378 = icmp ne i32 %and377, 0, !dbg !6801
  br i1 %tobool378, label %if.then379, label %if.else388, !dbg !6802

if.then379:                                       ; preds = %if.then369
  %326 = load i32, i32* %orco_sizeu, align 4, !dbg !6803
  %inc380 = add nsw i32 %326, 1, !dbg !6803
  store i32 %inc380, i32* %orco_sizeu, align 4, !dbg !6803
  %327 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6805
  %flag381 = getelementptr inbounds %struct.DispList, %struct.DispList* %327, i32 0, i32 3, !dbg !6807
  %328 = load i16, i16* %flag381, align 2, !dbg !6807
  %conv382 = sext i16 %328 to i32, !dbg !6805
  %and383 = and i32 %conv382, 2, !dbg !6808
  %tobool384 = icmp ne i32 %and383, 0, !dbg !6808
  br i1 %tobool384, label %if.then385, label %if.end387, !dbg !6809

if.then385:                                       ; preds = %if.then379
  %329 = load i32, i32* %orco_sizev, align 4, !dbg !6810
  %inc386 = add nsw i32 %329, 1, !dbg !6810
  store i32 %inc386, i32* %orco_sizev, align 4, !dbg !6810
  br label %if.end387, !dbg !6811

if.end387:                                        ; preds = %if.then385, %if.then379
  br label %if.end396, !dbg !6812

if.else388:                                       ; preds = %if.then369
  %330 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6813
  %flag389 = getelementptr inbounds %struct.DispList, %struct.DispList* %330, i32 0, i32 3, !dbg !6815
  %331 = load i16, i16* %flag389, align 2, !dbg !6815
  %conv390 = sext i16 %331 to i32, !dbg !6813
  %and391 = and i32 %conv390, 2, !dbg !6816
  %tobool392 = icmp ne i32 %and391, 0, !dbg !6816
  br i1 %tobool392, label %if.then393, label %if.end395, !dbg !6817

if.then393:                                       ; preds = %if.else388
  %332 = load i32, i32* %orco_sizev, align 4, !dbg !6818
  %inc394 = add nsw i32 %332, 1, !dbg !6818
  store i32 %inc394, i32* %orco_sizev, align 4, !dbg !6818
  br label %if.end395, !dbg !6820

if.end395:                                        ; preds = %if.then393, %if.else388
  br label %if.end396

if.end396:                                        ; preds = %if.end395, %if.end387
  store i32 0, i32* %i374, align 4, !dbg !6821
  br label %for.cond397, !dbg !6823

for.cond397:                                      ; preds = %for.inc446, %if.end396
  %333 = load i32, i32* %i374, align 4, !dbg !6824
  %cmp398 = icmp slt i32 %333, 4, !dbg !6826
  br i1 %cmp398, label %for.body400, label %for.end449, !dbg !6827

for.body400:                                      ; preds = %for.cond397
  call void @llvm.dbg.declare(metadata i32* %v401, metadata !6828, metadata !DIExpression()), !dbg !6830
  %334 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !6831
  %335 = load i32, i32* %i374, align 4, !dbg !6832
  %idxprom402 = sext i32 %335 to i64, !dbg !6831
  %arrayidx403 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %334, i64 %idxprom402, !dbg !6831
  %v404 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx403, i32 0, i32 0, !dbg !6833
  %336 = load i32, i32* %v404, align 4, !dbg !6833
  %337 = load i32, i32* %startvert, align 4, !dbg !6834
  %sub405 = sub i32 %336, %337, !dbg !6835
  store i32 %sub405, i32* %v401, align 4, !dbg !6830
  %338 = load i32, i32* %v401, align 4, !dbg !6836
  %339 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6837
  %nr406 = getelementptr inbounds %struct.DispList, %struct.DispList* %339, i32 0, i32 5, !dbg !6838
  %340 = load i32, i32* %nr406, align 8, !dbg !6838
  %div407 = sdiv i32 %338, %340, !dbg !6839
  %conv408 = sitofp i32 %div407 to float, !dbg !6840
  %341 = load i32, i32* %orco_sizev, align 4, !dbg !6841
  %conv409 = sitofp i32 %341 to float, !dbg !6842
  %div410 = fdiv float %conv408, %conv409, !dbg !6843
  %342 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !6844
  %uv411 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %342, i32 0, i32 0, !dbg !6845
  %arrayidx412 = getelementptr inbounds [2 x float], [2 x float]* %uv411, i64 0, i64 0, !dbg !6844
  store float %div410, float* %arrayidx412, align 4, !dbg !6846
  %343 = load i32, i32* %v401, align 4, !dbg !6847
  %344 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6848
  %nr413 = getelementptr inbounds %struct.DispList, %struct.DispList* %344, i32 0, i32 5, !dbg !6849
  %345 = load i32, i32* %nr413, align 8, !dbg !6849
  %rem = srem i32 %343, %345, !dbg !6850
  %conv414 = sitofp i32 %rem to float, !dbg !6851
  %346 = load i32, i32* %orco_sizeu, align 4, !dbg !6852
  %conv415 = sitofp i32 %346 to float, !dbg !6853
  %div416 = fdiv float %conv414, %conv415, !dbg !6854
  %347 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !6855
  %uv417 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %347, i32 0, i32 0, !dbg !6856
  %arrayidx418 = getelementptr inbounds [2 x float], [2 x float]* %uv417, i64 0, i64 1, !dbg !6855
  store float %div416, float* %arrayidx418, align 4, !dbg !6857
  %348 = load i32, i32* %i374, align 4, !dbg !6858
  %cmp419 = icmp eq i32 %348, 1, !dbg !6860
  br i1 %cmp419, label %land.lhs.true423, label %lor.lhs.false, !dbg !6861

lor.lhs.false:                                    ; preds = %for.body400
  %349 = load i32, i32* %i374, align 4, !dbg !6862
  %cmp421 = icmp eq i32 %349, 2, !dbg !6863
  br i1 %cmp421, label %land.lhs.true423, label %if.end431, !dbg !6864

land.lhs.true423:                                 ; preds = %lor.lhs.false, %for.body400
  %350 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !6865
  %uv424 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %350, i32 0, i32 0, !dbg !6866
  %arrayidx425 = getelementptr inbounds [2 x float], [2 x float]* %uv424, i64 0, i64 0, !dbg !6865
  %351 = load float, float* %arrayidx425, align 4, !dbg !6865
  %cmp426 = fcmp oeq float %351, 0.000000e+00, !dbg !6867
  br i1 %cmp426, label %if.then428, label %if.end431, !dbg !6868

if.then428:                                       ; preds = %land.lhs.true423
  %352 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !6869
  %uv429 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %352, i32 0, i32 0, !dbg !6870
  %arrayidx430 = getelementptr inbounds [2 x float], [2 x float]* %uv429, i64 0, i64 0, !dbg !6869
  store float 1.000000e+00, float* %arrayidx430, align 4, !dbg !6871
  br label %if.end431, !dbg !6869

if.end431:                                        ; preds = %if.then428, %land.lhs.true423, %lor.lhs.false
  %353 = load i32, i32* %i374, align 4, !dbg !6872
  %cmp432 = icmp eq i32 %353, 0, !dbg !6874
  br i1 %cmp432, label %land.lhs.true437, label %lor.lhs.false434, !dbg !6875

lor.lhs.false434:                                 ; preds = %if.end431
  %354 = load i32, i32* %i374, align 4, !dbg !6876
  %cmp435 = icmp eq i32 %354, 1, !dbg !6877
  br i1 %cmp435, label %land.lhs.true437, label %if.end445, !dbg !6878

land.lhs.true437:                                 ; preds = %lor.lhs.false434, %if.end431
  %355 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !6879
  %uv438 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %355, i32 0, i32 0, !dbg !6880
  %arrayidx439 = getelementptr inbounds [2 x float], [2 x float]* %uv438, i64 0, i64 1, !dbg !6879
  %356 = load float, float* %arrayidx439, align 4, !dbg !6879
  %cmp440 = fcmp oeq float %356, 0.000000e+00, !dbg !6881
  br i1 %cmp440, label %if.then442, label %if.end445, !dbg !6882

if.then442:                                       ; preds = %land.lhs.true437
  %357 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !6883
  %uv443 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %357, i32 0, i32 0, !dbg !6884
  %arrayidx444 = getelementptr inbounds [2 x float], [2 x float]* %uv443, i64 0, i64 1, !dbg !6883
  store float 1.000000e+00, float* %arrayidx444, align 4, !dbg !6885
  br label %if.end445, !dbg !6883

if.end445:                                        ; preds = %if.then442, %land.lhs.true437, %lor.lhs.false434
  br label %for.inc446, !dbg !6886

for.inc446:                                       ; preds = %if.end445
  %358 = load i32, i32* %i374, align 4, !dbg !6887
  %inc447 = add nsw i32 %358, 1, !dbg !6887
  store i32 %inc447, i32* %i374, align 4, !dbg !6887
  %359 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !6888
  %incdec.ptr448 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %359, i32 1, !dbg !6888
  store %struct.MLoopUV* %incdec.ptr448, %struct.MLoopUV** %mloopuv, align 8, !dbg !6888
  br label %for.cond397, !dbg !6889, !llvm.loop !6890

for.end449:                                       ; preds = %for.cond397
  br label %if.end450, !dbg !6892

if.end450:                                        ; preds = %for.end449, %for.body350
  %360 = load i32, i32* %smooth, align 4, !dbg !6893
  %tobool451 = icmp ne i32 %360, 0, !dbg !6893
  br i1 %tobool451, label %if.then452, label %if.end457, !dbg !6895

if.then452:                                       ; preds = %if.end450
  %361 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !6896
  %flag453 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %361, i32 0, i32 3, !dbg !6897
  %362 = load i8, i8* %flag453, align 2, !dbg !6898
  %conv454 = zext i8 %362 to i32, !dbg !6898
  %or455 = or i32 %conv454, 1, !dbg !6898
  %conv456 = trunc i32 %or455 to i8, !dbg !6898
  store i8 %conv456, i8* %flag453, align 2, !dbg !6898
  br label %if.end457, !dbg !6896

if.end457:                                        ; preds = %if.then452, %if.end450
  %363 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !6899
  %incdec.ptr458 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %363, i32 1, !dbg !6899
  store %struct.MPoly* %incdec.ptr458, %struct.MPoly** %mpoly, align 8, !dbg !6899
  %364 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !6900
  %add.ptr459 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %364, i64 4, !dbg !6900
  store %struct.MLoop* %add.ptr459, %struct.MLoop** %mloop, align 8, !dbg !6900
  %365 = load i32, i32* %p3, align 4, !dbg !6901
  store i32 %365, i32* %p4, align 4, !dbg !6902
  %366 = load i32, i32* %p3, align 4, !dbg !6903
  %inc460 = add nsw i32 %366, 1, !dbg !6903
  store i32 %inc460, i32* %p3, align 4, !dbg !6903
  %367 = load i32, i32* %p1, align 4, !dbg !6904
  store i32 %367, i32* %p2, align 4, !dbg !6905
  %368 = load i32, i32* %p1, align 4, !dbg !6906
  %inc461 = add nsw i32 %368, 1, !dbg !6906
  store i32 %inc461, i32* %p1, align 4, !dbg !6906
  br label %for.inc462, !dbg !6907

for.inc462:                                       ; preds = %if.end457
  %369 = load i32, i32* %b, align 4, !dbg !6908
  %inc463 = add nsw i32 %369, 1, !dbg !6908
  store i32 %inc463, i32* %b, align 4, !dbg !6908
  br label %for.cond346, !dbg !6909, !llvm.loop !6910

for.end464:                                       ; preds = %for.cond346
  br label %for.inc465, !dbg !6912

for.inc465:                                       ; preds = %for.end464
  %370 = load i32, i32* %a, align 4, !dbg !6913
  %inc466 = add nsw i32 %370, 1, !dbg !6913
  store i32 %inc466, i32* %a, align 4, !dbg !6913
  br label %for.cond286, !dbg !6914, !llvm.loop !6915

for.end467:                                       ; preds = %if.then300, %for.cond286
  br label %if.end468, !dbg !6917

if.end468:                                        ; preds = %for.end467, %if.else266
  br label %if.end469

if.end469:                                        ; preds = %if.end468, %while.end265
  br label %if.end470

if.end470:                                        ; preds = %if.end469, %if.end198
  br label %if.end471

if.end471:                                        ; preds = %if.end470, %for.end139
  %371 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6918
  %next472 = getelementptr inbounds %struct.DispList, %struct.DispList* %371, i32 0, i32 0, !dbg !6919
  %372 = load %struct.DispList*, %struct.DispList** %next472, align 8, !dbg !6919
  store %struct.DispList* %372, %struct.DispList** %dl, align 8, !dbg !6920
  br label %while.cond101, !dbg !6294, !llvm.loop !6921

while.end473:                                     ; preds = %while.cond101
  %373 = load i32, i32* %totvlak, align 4, !dbg !6923
  %tobool474 = icmp ne i32 %373, 0, !dbg !6923
  br i1 %tobool474, label %if.then475, label %if.end476, !dbg !6925

if.then475:                                       ; preds = %while.end473
  %374 = load %struct.MEdge**, %struct.MEdge*** %alledge.addr, align 8, !dbg !6926
  %375 = load %struct.MPoly**, %struct.MPoly*** %allpoly.addr, align 8, !dbg !6928
  %376 = load %struct.MPoly*, %struct.MPoly** %375, align 8, !dbg !6929
  %377 = load %struct.MLoop**, %struct.MLoop*** %allloop.addr, align 8, !dbg !6930
  %378 = load %struct.MLoop*, %struct.MLoop** %377, align 8, !dbg !6931
  %379 = load i32, i32* %totvlak, align 4, !dbg !6932
  call void @make_edges_mdata_extend(%struct.MEdge** %374, i32* %totedge, %struct.MPoly* %376, %struct.MLoop* %378, i32 %379), !dbg !6933
  br label %if.end476, !dbg !6934

if.end476:                                        ; preds = %if.then475, %while.end473
  %380 = load i32, i32* %totvlak, align 4, !dbg !6935
  %381 = load i32*, i32** %_totpoly.addr, align 8, !dbg !6936
  store i32 %380, i32* %381, align 4, !dbg !6937
  %382 = load i32, i32* %totloop, align 4, !dbg !6938
  %383 = load i32*, i32** %_totloop.addr, align 8, !dbg !6939
  store i32 %382, i32* %383, align 4, !dbg !6940
  %384 = load i32, i32* %totedge, align 4, !dbg !6941
  %385 = load i32*, i32** %_totedge.addr, align 8, !dbg !6942
  store i32 %384, i32* %385, align 4, !dbg !6943
  %386 = load i32, i32* %totvert, align 4, !dbg !6944
  %387 = load i32*, i32** %_totvert.addr, align 8, !dbg !6945
  store i32 %386, i32* %387, align 4, !dbg !6946
  store i32 0, i32* %retval, align 4, !dbg !6947
  br label %return, !dbg !6947

return:                                           ; preds = %if.end476, %if.then79
  %388 = load i32, i32* %retval, align 4, !dbg !6948
  ret i32 %388, !dbg !6948
}

; Function Attrs: noinline nounwind uwtable
define internal void @make_edges_mdata_extend(%struct.MEdge** %r_alledge, i32* %r_totedge, %struct.MPoly* %mpoly, %struct.MLoop* %mloop, i32 %totpoly) #0 !dbg !6949 {
entry:
  %r_alledge.addr = alloca %struct.MEdge**, align 8
  %r_totedge.addr = alloca i32*, align 8
  %mpoly.addr = alloca %struct.MPoly*, align 8
  %mloop.addr = alloca %struct.MLoop*, align 8
  %totpoly.addr = alloca i32, align 4
  %totedge = alloca i32, align 4
  %totedge_new = alloca i32, align 4
  %eh = alloca %struct.EdgeHash*, align 8
  %eh_reserve = alloca i32, align 4
  %mp = alloca %struct.MPoly*, align 8
  %i = alloca i32, align 4
  %ehi = alloca %struct.EdgeHashIterator*, align 8
  %medge = alloca %struct.MEdge*, align 8
  %e_index = alloca i32, align 4
  %l = alloca %struct.MLoop*, align 8
  %l_prev = alloca %struct.MLoop*, align 8
  %j = alloca i32, align 4
  store %struct.MEdge** %r_alledge, %struct.MEdge*** %r_alledge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge*** %r_alledge.addr, metadata !6954, metadata !DIExpression()), !dbg !6955
  store i32* %r_totedge, i32** %r_totedge.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_totedge.addr, metadata !6956, metadata !DIExpression()), !dbg !6957
  store %struct.MPoly* %mpoly, %struct.MPoly** %mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly.addr, metadata !6958, metadata !DIExpression()), !dbg !6959
  store %struct.MLoop* %mloop, %struct.MLoop** %mloop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop.addr, metadata !6960, metadata !DIExpression()), !dbg !6961
  store i32 %totpoly, i32* %totpoly.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totpoly.addr, metadata !6962, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.declare(metadata i32* %totedge, metadata !6964, metadata !DIExpression()), !dbg !6965
  %0 = load i32*, i32** %r_totedge.addr, align 8, !dbg !6966
  %1 = load i32, i32* %0, align 4, !dbg !6967
  store i32 %1, i32* %totedge, align 4, !dbg !6965
  call void @llvm.dbg.declare(metadata i32* %totedge_new, metadata !6968, metadata !DIExpression()), !dbg !6969
  call void @llvm.dbg.declare(metadata %struct.EdgeHash** %eh, metadata !6970, metadata !DIExpression()), !dbg !6971
  call void @llvm.dbg.declare(metadata i32* %eh_reserve, metadata !6972, metadata !DIExpression()), !dbg !6973
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !6974, metadata !DIExpression()), !dbg !6975
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6976, metadata !DIExpression()), !dbg !6977
  %2 = load i32, i32* %totedge, align 4, !dbg !6978
  %3 = load i32, i32* %totpoly.addr, align 4, !dbg !6979
  %mul = mul nsw i32 %3, 2, !dbg !6979
  %call = call i32 @max_ii(i32 %2, i32 %mul), !dbg !6980
  store i32 %call, i32* %eh_reserve, align 4, !dbg !6981
  %4 = load i32, i32* %eh_reserve, align 4, !dbg !6982
  %call1 = call %struct.EdgeHash* @BLI_edgehash_new_ex(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.make_edges_mdata_extend, i64 0, i64 0), i32 %4), !dbg !6983
  store %struct.EdgeHash* %call1, %struct.EdgeHash** %eh, align 8, !dbg !6984
  store i32 0, i32* %i, align 4, !dbg !6985
  %5 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !6987
  store %struct.MPoly* %5, %struct.MPoly** %mp, align 8, !dbg !6988
  br label %for.cond, !dbg !6989

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !6990
  %7 = load i32, i32* %totpoly.addr, align 4, !dbg !6992
  %cmp = icmp slt i32 %6, %7, !dbg !6993
  br i1 %cmp, label %for.body, label %for.end, !dbg !6994

for.body:                                         ; preds = %for.cond
  %8 = load %struct.EdgeHash*, %struct.EdgeHash** %eh, align 8, !dbg !6995
  %9 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !6997
  %10 = load %struct.MLoop*, %struct.MLoop** %mloop.addr, align 8, !dbg !6998
  %11 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !6999
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %11, i32 0, i32 0, !dbg !7000
  %12 = load i32, i32* %loopstart, align 4, !dbg !7000
  %idx.ext = sext i32 %12 to i64, !dbg !7001
  %add.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %10, i64 %idx.ext, !dbg !7001
  call void @BKE_mesh_poly_edgehash_insert(%struct.EdgeHash* %8, %struct.MPoly* %9, %struct.MLoop* %add.ptr), !dbg !7002
  br label %for.inc, !dbg !7003

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !7004
  %inc = add nsw i32 %13, 1, !dbg !7004
  store i32 %inc, i32* %i, align 4, !dbg !7004
  %14 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !7005
  %incdec.ptr = getelementptr inbounds %struct.MPoly, %struct.MPoly* %14, i32 1, !dbg !7005
  store %struct.MPoly* %incdec.ptr, %struct.MPoly** %mp, align 8, !dbg !7005
  br label %for.cond, !dbg !7006, !llvm.loop !7007

for.end:                                          ; preds = %for.cond
  %15 = load %struct.EdgeHash*, %struct.EdgeHash** %eh, align 8, !dbg !7009
  %call2 = call i32 @BLI_edgehash_size(%struct.EdgeHash* %15), !dbg !7010
  store i32 %call2, i32* %totedge_new, align 4, !dbg !7011
  %16 = load i32, i32* %totedge_new, align 4, !dbg !7012
  %tobool = icmp ne i32 %16, 0, !dbg !7012
  br i1 %tobool, label %if.then, label %if.end, !dbg !7014

if.then:                                          ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.EdgeHashIterator** %ehi, metadata !7015, metadata !DIExpression()), !dbg !7026
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge, metadata !7027, metadata !DIExpression()), !dbg !7028
  call void @llvm.dbg.declare(metadata i32* %e_index, metadata !7029, metadata !DIExpression()), !dbg !7030
  %17 = load i32, i32* %totedge, align 4, !dbg !7031
  store i32 %17, i32* %e_index, align 4, !dbg !7030
  %18 = load %struct.MEdge**, %struct.MEdge*** %r_alledge.addr, align 8, !dbg !7032
  %19 = load %struct.MEdge*, %struct.MEdge** %18, align 8, !dbg !7033
  %tobool3 = icmp ne %struct.MEdge* %19, null, !dbg !7033
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !7033

cond.true:                                        ; preds = %if.then
  %20 = load i8* (i8*, i64, i8*)*, i8* (i8*, i64, i8*)** @MEM_reallocN_id, align 8, !dbg !7034
  %21 = load %struct.MEdge**, %struct.MEdge*** %r_alledge.addr, align 8, !dbg !7034
  %22 = load %struct.MEdge*, %struct.MEdge** %21, align 8, !dbg !7034
  %23 = bitcast %struct.MEdge* %22 to i8*, !dbg !7034
  %24 = load i32, i32* %totedge, align 4, !dbg !7034
  %25 = load i32, i32* %totedge_new, align 4, !dbg !7034
  %add = add nsw i32 %24, %25, !dbg !7034
  %conv = sext i32 %add to i64, !dbg !7034
  %mul4 = mul i64 12, %conv, !dbg !7034
  %call5 = call i8* %20(i8* %23, i64 %mul4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.make_edges_mdata_extend, i64 0, i64 0)), !dbg !7034
  br label %cond.end, !dbg !7033

cond.false:                                       ; preds = %if.then
  %26 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7035
  %27 = load i32, i32* %totedge_new, align 4, !dbg !7036
  %conv6 = sext i32 %27 to i64, !dbg !7036
  %mul7 = mul i64 12, %conv6, !dbg !7037
  %call8 = call i8* %26(i64 %mul7, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.make_edges_mdata_extend, i64 0, i64 0)), !dbg !7035
  br label %cond.end, !dbg !7033

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call5, %cond.true ], [ %call8, %cond.false ], !dbg !7033
  %28 = bitcast i8* %cond to %struct.MEdge*, !dbg !7038
  store %struct.MEdge* %28, %struct.MEdge** %medge, align 8, !dbg !7039
  %29 = load %struct.MEdge**, %struct.MEdge*** %r_alledge.addr, align 8, !dbg !7040
  store %struct.MEdge* %28, %struct.MEdge** %29, align 8, !dbg !7041
  %30 = load i32, i32* %totedge, align 4, !dbg !7042
  %31 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !7043
  %idx.ext9 = sext i32 %30 to i64, !dbg !7043
  %add.ptr10 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %31, i64 %idx.ext9, !dbg !7043
  store %struct.MEdge* %add.ptr10, %struct.MEdge** %medge, align 8, !dbg !7043
  %32 = load i32, i32* %totedge_new, align 4, !dbg !7044
  %33 = load i32, i32* %totedge, align 4, !dbg !7045
  %add11 = add nsw i32 %33, %32, !dbg !7045
  store i32 %add11, i32* %totedge, align 4, !dbg !7045
  %34 = load %struct.EdgeHash*, %struct.EdgeHash** %eh, align 8, !dbg !7046
  %call12 = call %struct.EdgeHashIterator* @BLI_edgehashIterator_new(%struct.EdgeHash* %34), !dbg !7048
  store %struct.EdgeHashIterator* %call12, %struct.EdgeHashIterator** %ehi, align 8, !dbg !7049
  br label %for.cond13, !dbg !7050

for.cond13:                                       ; preds = %for.inc20, %cond.end
  %35 = load %struct.EdgeHashIterator*, %struct.EdgeHashIterator** %ehi, align 8, !dbg !7051
  %call14 = call zeroext i8 @BLI_edgehashIterator_isDone(%struct.EdgeHashIterator* %35), !dbg !7053
  %conv15 = zext i8 %call14 to i32, !dbg !7053
  %cmp16 = icmp eq i32 %conv15, 0, !dbg !7054
  br i1 %cmp16, label %for.body18, label %for.end23, !dbg !7055

for.body18:                                       ; preds = %for.cond13
  %36 = load %struct.EdgeHashIterator*, %struct.EdgeHashIterator** %ehi, align 8, !dbg !7056
  %37 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !7058
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %37, i32 0, i32 0, !dbg !7059
  %38 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !7060
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %38, i32 0, i32 1, !dbg !7061
  call void @BLI_edgehashIterator_getKey(%struct.EdgeHashIterator* %36, i32* %v1, i32* %v2), !dbg !7062
  %39 = load %struct.EdgeHashIterator*, %struct.EdgeHashIterator** %ehi, align 8, !dbg !7063
  %40 = load i32, i32* %e_index, align 4, !dbg !7064
  %conv19 = zext i32 %40 to i64, !dbg !7064
  %41 = inttoptr i64 %conv19 to i8*, !dbg !7064
  call void @BLI_edgehashIterator_setValue(%struct.EdgeHashIterator* %39, i8* %41), !dbg !7065
  %42 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !7066
  %bweight = getelementptr inbounds %struct.MEdge, %struct.MEdge* %42, i32 0, i32 3, !dbg !7067
  store i8 0, i8* %bweight, align 1, !dbg !7068
  %43 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !7069
  %crease = getelementptr inbounds %struct.MEdge, %struct.MEdge* %43, i32 0, i32 2, !dbg !7070
  store i8 0, i8* %crease, align 4, !dbg !7071
  %44 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !7072
  %flag = getelementptr inbounds %struct.MEdge, %struct.MEdge* %44, i32 0, i32 4, !dbg !7073
  store i16 34, i16* %flag, align 2, !dbg !7074
  br label %for.inc20, !dbg !7075

for.inc20:                                        ; preds = %for.body18
  %45 = load %struct.EdgeHashIterator*, %struct.EdgeHashIterator** %ehi, align 8, !dbg !7076
  call void @BLI_edgehashIterator_step(%struct.EdgeHashIterator* %45), !dbg !7077
  %46 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !7078
  %incdec.ptr21 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %46, i32 1, !dbg !7078
  store %struct.MEdge* %incdec.ptr21, %struct.MEdge** %medge, align 8, !dbg !7078
  %47 = load i32, i32* %e_index, align 4, !dbg !7079
  %inc22 = add i32 %47, 1, !dbg !7079
  store i32 %inc22, i32* %e_index, align 4, !dbg !7079
  br label %for.cond13, !dbg !7080, !llvm.loop !7081

for.end23:                                        ; preds = %for.cond13
  %48 = load %struct.EdgeHashIterator*, %struct.EdgeHashIterator** %ehi, align 8, !dbg !7083
  call void @BLI_edgehashIterator_free(%struct.EdgeHashIterator* %48), !dbg !7084
  %49 = load i32, i32* %totedge, align 4, !dbg !7085
  %50 = load i32*, i32** %r_totedge.addr, align 8, !dbg !7086
  store i32 %49, i32* %50, align 4, !dbg !7087
  store i32 0, i32* %i, align 4, !dbg !7088
  %51 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !7090
  store %struct.MPoly* %51, %struct.MPoly** %mp, align 8, !dbg !7091
  br label %for.cond24, !dbg !7092

for.cond24:                                       ; preds = %for.inc43, %for.end23
  %52 = load i32, i32* %i, align 4, !dbg !7093
  %53 = load i32, i32* %totpoly.addr, align 4, !dbg !7095
  %cmp25 = icmp slt i32 %52, %53, !dbg !7096
  br i1 %cmp25, label %for.body27, label %for.end46, !dbg !7097

for.body27:                                       ; preds = %for.cond24
  call void @llvm.dbg.declare(metadata %struct.MLoop** %l, metadata !7098, metadata !DIExpression()), !dbg !7100
  %54 = load %struct.MLoop*, %struct.MLoop** %mloop.addr, align 8, !dbg !7101
  %55 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !7102
  %loopstart28 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %55, i32 0, i32 0, !dbg !7103
  %56 = load i32, i32* %loopstart28, align 4, !dbg !7103
  %idxprom = sext i32 %56 to i64, !dbg !7101
  %arrayidx = getelementptr inbounds %struct.MLoop, %struct.MLoop* %54, i64 %idxprom, !dbg !7101
  store %struct.MLoop* %arrayidx, %struct.MLoop** %l, align 8, !dbg !7100
  call void @llvm.dbg.declare(metadata %struct.MLoop** %l_prev, metadata !7104, metadata !DIExpression()), !dbg !7105
  %57 = load %struct.MLoop*, %struct.MLoop** %l, align 8, !dbg !7106
  %58 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !7107
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %58, i32 0, i32 1, !dbg !7108
  %59 = load i32, i32* %totloop, align 4, !dbg !7108
  %sub = sub nsw i32 %59, 1, !dbg !7109
  %idx.ext29 = sext i32 %sub to i64, !dbg !7110
  %add.ptr30 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %57, i64 %idx.ext29, !dbg !7110
  store %struct.MLoop* %add.ptr30, %struct.MLoop** %l_prev, align 8, !dbg !7105
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7111, metadata !DIExpression()), !dbg !7112
  store i32 0, i32* %j, align 4, !dbg !7113
  br label %for.cond31, !dbg !7115

for.cond31:                                       ; preds = %for.inc39, %for.body27
  %60 = load i32, i32* %j, align 4, !dbg !7116
  %61 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !7118
  %totloop32 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %61, i32 0, i32 1, !dbg !7119
  %62 = load i32, i32* %totloop32, align 4, !dbg !7119
  %cmp33 = icmp slt i32 %60, %62, !dbg !7120
  br i1 %cmp33, label %for.body35, label %for.end42, !dbg !7121

for.body35:                                       ; preds = %for.cond31
  %63 = load %struct.EdgeHash*, %struct.EdgeHash** %eh, align 8, !dbg !7122
  %64 = load %struct.MLoop*, %struct.MLoop** %l_prev, align 8, !dbg !7122
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %64, i32 0, i32 0, !dbg !7122
  %65 = load i32, i32* %v, align 4, !dbg !7122
  %66 = load %struct.MLoop*, %struct.MLoop** %l, align 8, !dbg !7122
  %v36 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %66, i32 0, i32 0, !dbg !7122
  %67 = load i32, i32* %v36, align 4, !dbg !7122
  %call37 = call i8* @BLI_edgehash_lookup(%struct.EdgeHash* %63, i32 %65, i32 %67), !dbg !7122
  %68 = ptrtoint i8* %call37 to i64, !dbg !7122
  %conv38 = trunc i64 %68 to i32, !dbg !7122
  %69 = load %struct.MLoop*, %struct.MLoop** %l_prev, align 8, !dbg !7124
  %e = getelementptr inbounds %struct.MLoop, %struct.MLoop* %69, i32 0, i32 1, !dbg !7125
  store i32 %conv38, i32* %e, align 4, !dbg !7126
  %70 = load %struct.MLoop*, %struct.MLoop** %l, align 8, !dbg !7127
  store %struct.MLoop* %70, %struct.MLoop** %l_prev, align 8, !dbg !7128
  br label %for.inc39, !dbg !7129

for.inc39:                                        ; preds = %for.body35
  %71 = load i32, i32* %j, align 4, !dbg !7130
  %inc40 = add nsw i32 %71, 1, !dbg !7130
  store i32 %inc40, i32* %j, align 4, !dbg !7130
  %72 = load %struct.MLoop*, %struct.MLoop** %l, align 8, !dbg !7131
  %incdec.ptr41 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %72, i32 1, !dbg !7131
  store %struct.MLoop* %incdec.ptr41, %struct.MLoop** %l, align 8, !dbg !7131
  br label %for.cond31, !dbg !7132, !llvm.loop !7133

for.end42:                                        ; preds = %for.cond31
  br label %for.inc43, !dbg !7135

for.inc43:                                        ; preds = %for.end42
  %73 = load i32, i32* %i, align 4, !dbg !7136
  %inc44 = add nsw i32 %73, 1, !dbg !7136
  store i32 %inc44, i32* %i, align 4, !dbg !7136
  %74 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !7137
  %incdec.ptr45 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %74, i32 1, !dbg !7137
  store %struct.MPoly* %incdec.ptr45, %struct.MPoly** %mp, align 8, !dbg !7137
  br label %for.cond24, !dbg !7138, !llvm.loop !7139

for.end46:                                        ; preds = %for.cond24
  br label %if.end, !dbg !7141

if.end:                                           ; preds = %for.end46, %for.end
  %75 = load %struct.EdgeHash*, %struct.EdgeHash** %eh, align 8, !dbg !7142
  call void @BLI_edgehash_free(%struct.EdgeHash* %75, void (i8*)* null), !dbg !7143
  ret void, !dbg !7144
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_from_nurbs_displist(%struct.Object* %ob, %struct.ListBase* %dispbase, i8 zeroext %use_orco_uv) #0 !dbg !7145 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %dispbase.addr = alloca %struct.ListBase*, align 8
  %use_orco_uv.addr = alloca i8, align 1
  %bmain = alloca %struct.Main*, align 8
  %ob1 = alloca %struct.Object*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %me = alloca %struct.Mesh*, align 8
  %cu = alloca %struct.Curve*, align 8
  %allvert = alloca %struct.MVert*, align 8
  %alledge = alloca %struct.MEdge*, align 8
  %allloop = alloca %struct.MLoop*, align 8
  %alluv = alloca %struct.MLoopUV*, align 8
  %allpoly = alloca %struct.MPoly*, align 8
  %totvert = alloca i32, align 4
  %totedge = alloca i32, align 4
  %totloop = alloca i32, align 4
  %totpoly = alloca i32, align 4
  %uvname = alloca i8*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7148, metadata !DIExpression()), !dbg !7149
  store %struct.ListBase* %dispbase, %struct.ListBase** %dispbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %dispbase.addr, metadata !7150, metadata !DIExpression()), !dbg !7151
  store i8 %use_orco_uv, i8* %use_orco_uv.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_orco_uv.addr, metadata !7152, metadata !DIExpression()), !dbg !7153
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !7154, metadata !DIExpression()), !dbg !7155
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !7156
  store %struct.Main* %0, %struct.Main** %bmain, align 8, !dbg !7155
  call void @llvm.dbg.declare(metadata %struct.Object** %ob1, metadata !7157, metadata !DIExpression()), !dbg !7158
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !7159, metadata !DIExpression()), !dbg !7160
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7161
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 120, !dbg !7162
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !7162
  store %struct.DerivedMesh* %2, %struct.DerivedMesh** %dm, align 8, !dbg !7160
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !7163, metadata !DIExpression()), !dbg !7164
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !7165, metadata !DIExpression()), !dbg !7166
  call void @llvm.dbg.declare(metadata %struct.MVert** %allvert, metadata !7167, metadata !DIExpression()), !dbg !7168
  store %struct.MVert* null, %struct.MVert** %allvert, align 8, !dbg !7168
  call void @llvm.dbg.declare(metadata %struct.MEdge** %alledge, metadata !7169, metadata !DIExpression()), !dbg !7170
  store %struct.MEdge* null, %struct.MEdge** %alledge, align 8, !dbg !7170
  call void @llvm.dbg.declare(metadata %struct.MLoop** %allloop, metadata !7171, metadata !DIExpression()), !dbg !7172
  store %struct.MLoop* null, %struct.MLoop** %allloop, align 8, !dbg !7172
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %alluv, metadata !7173, metadata !DIExpression()), !dbg !7174
  store %struct.MLoopUV* null, %struct.MLoopUV** %alluv, align 8, !dbg !7174
  call void @llvm.dbg.declare(metadata %struct.MPoly** %allpoly, metadata !7175, metadata !DIExpression()), !dbg !7176
  store %struct.MPoly* null, %struct.MPoly** %allpoly, align 8, !dbg !7176
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !7177, metadata !DIExpression()), !dbg !7178
  call void @llvm.dbg.declare(metadata i32* %totedge, metadata !7179, metadata !DIExpression()), !dbg !7180
  call void @llvm.dbg.declare(metadata i32* %totloop, metadata !7181, metadata !DIExpression()), !dbg !7182
  call void @llvm.dbg.declare(metadata i32* %totpoly, metadata !7183, metadata !DIExpression()), !dbg !7184
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7185
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !7186
  %4 = load i8*, i8** %data, align 8, !dbg !7186
  %5 = bitcast i8* %4 to %struct.Curve*, !dbg !7185
  store %struct.Curve* %5, %struct.Curve** %cu, align 8, !dbg !7187
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7188
  %cmp = icmp eq %struct.DerivedMesh* %6, null, !dbg !7190
  br i1 %cmp, label %if.then, label %if.else, !dbg !7191

if.then:                                          ; preds = %entry
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7192
  %8 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !7195
  %9 = load i8, i8* %use_orco_uv.addr, align 1, !dbg !7196
  %conv = zext i8 %9 to i32, !dbg !7197
  %tobool = icmp ne i32 %conv, 0, !dbg !7197
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7197

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !7197

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !7197

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.MLoopUV** [ %alluv, %cond.true ], [ null, %cond.false ], !dbg !7197
  %call = call i32 @BKE_mesh_nurbs_displist_to_mdata(%struct.Object* %7, %struct.ListBase* %8, %struct.MVert** %allvert, i32* %totvert, %struct.MEdge** %alledge, i32* %totedge, %struct.MLoop** %allloop, %struct.MPoly** %allpoly, %struct.MLoopUV** %cond, i32* %totloop, i32* %totpoly), !dbg !7198
  %cmp1 = icmp ne i32 %call, 0, !dbg !7199
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !7200

if.then3:                                         ; preds = %cond.end
  br label %while.end, !dbg !7201

if.end:                                           ; preds = %cond.end
  %10 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !7203
  %call4 = call %struct.Mesh* @BKE_mesh_add(%struct.Main* %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0)), !dbg !7204
  store %struct.Mesh* %call4, %struct.Mesh** %me, align 8, !dbg !7205
  %11 = load i32, i32* %totvert, align 4, !dbg !7206
  %12 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7207
  %totvert5 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 26, !dbg !7208
  store i32 %11, i32* %totvert5, align 8, !dbg !7209
  %13 = load i32, i32* %totedge, align 4, !dbg !7210
  %14 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7211
  %totedge6 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 27, !dbg !7212
  store i32 %13, i32* %totedge6, align 4, !dbg !7213
  %15 = load i32, i32* %totloop, align 4, !dbg !7214
  %16 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7215
  %totloop7 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %16, i32 0, i32 31, !dbg !7216
  store i32 %15, i32* %totloop7, align 4, !dbg !7217
  %17 = load i32, i32* %totpoly, align 4, !dbg !7218
  %18 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7219
  %totpoly8 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 30, !dbg !7220
  store i32 %17, i32* %totpoly8, align 8, !dbg !7221
  %19 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7222
  %vdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %19, i32 0, i32 21, !dbg !7223
  %20 = load %struct.MVert*, %struct.MVert** %allvert, align 8, !dbg !7224
  %21 = bitcast %struct.MVert* %20 to i8*, !dbg !7224
  %22 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7225
  %totvert9 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %22, i32 0, i32 26, !dbg !7226
  %23 = load i32, i32* %totvert9, align 8, !dbg !7226
  %call10 = call i8* @CustomData_add_layer(%struct.CustomData* %vdata, i32 0, i32 0, i8* %21, i32 %23), !dbg !7227
  %24 = bitcast i8* %call10 to %struct.MVert*, !dbg !7227
  %25 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7228
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %25, i32 0, i32 15, !dbg !7229
  store %struct.MVert* %24, %struct.MVert** %mvert, align 8, !dbg !7230
  %26 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7231
  %edata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %26, i32 0, i32 22, !dbg !7232
  %27 = load %struct.MEdge*, %struct.MEdge** %alledge, align 8, !dbg !7233
  %28 = bitcast %struct.MEdge* %27 to i8*, !dbg !7233
  %29 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7234
  %totedge11 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %29, i32 0, i32 27, !dbg !7235
  %30 = load i32, i32* %totedge11, align 4, !dbg !7235
  %call12 = call i8* @CustomData_add_layer(%struct.CustomData* %edata, i32 3, i32 0, i8* %28, i32 %30), !dbg !7236
  %31 = bitcast i8* %call12 to %struct.MEdge*, !dbg !7236
  %32 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7237
  %medge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %32, i32 0, i32 16, !dbg !7238
  store %struct.MEdge* %31, %struct.MEdge** %medge, align 8, !dbg !7239
  %33 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7240
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %33, i32 0, i32 25, !dbg !7241
  %34 = load %struct.MLoop*, %struct.MLoop** %allloop, align 8, !dbg !7242
  %35 = bitcast %struct.MLoop* %34 to i8*, !dbg !7242
  %36 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7243
  %totloop13 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %36, i32 0, i32 31, !dbg !7244
  %37 = load i32, i32* %totloop13, align 4, !dbg !7244
  %call14 = call i8* @CustomData_add_layer(%struct.CustomData* %ldata, i32 26, i32 0, i8* %35, i32 %37), !dbg !7245
  %38 = bitcast i8* %call14 to %struct.MLoop*, !dbg !7245
  %39 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7246
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %39, i32 0, i32 9, !dbg !7247
  store %struct.MLoop* %38, %struct.MLoop** %mloop, align 8, !dbg !7248
  %40 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7249
  %pdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %40, i32 0, i32 24, !dbg !7250
  %41 = load %struct.MPoly*, %struct.MPoly** %allpoly, align 8, !dbg !7251
  %42 = bitcast %struct.MPoly* %41 to i8*, !dbg !7251
  %43 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7252
  %totpoly15 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %43, i32 0, i32 30, !dbg !7253
  %44 = load i32, i32* %totpoly15, align 8, !dbg !7253
  %call16 = call i8* @CustomData_add_layer(%struct.CustomData* %pdata, i32 25, i32 0, i8* %42, i32 %44), !dbg !7254
  %45 = bitcast i8* %call16 to %struct.MPoly*, !dbg !7254
  %46 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7255
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %46, i32 0, i32 7, !dbg !7256
  store %struct.MPoly* %45, %struct.MPoly** %mpoly, align 8, !dbg !7257
  %47 = load %struct.MLoopUV*, %struct.MLoopUV** %alluv, align 8, !dbg !7258
  %tobool17 = icmp ne %struct.MLoopUV* %47, null, !dbg !7258
  br i1 %tobool17, label %if.then18, label %if.end25, !dbg !7260

if.then18:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %uvname, metadata !7261, metadata !DIExpression()), !dbg !7263
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8** %uvname, align 8, !dbg !7263
  %48 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7264
  %pdata19 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %48, i32 0, i32 24, !dbg !7265
  %49 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7266
  %totpoly20 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %49, i32 0, i32 30, !dbg !7267
  %50 = load i32, i32* %totpoly20, align 8, !dbg !7267
  %51 = load i8*, i8** %uvname, align 8, !dbg !7268
  %call21 = call i8* @CustomData_add_layer_named(%struct.CustomData* %pdata19, i32 15, i32 2, i8* null, i32 %50, i8* %51), !dbg !7269
  %52 = bitcast i8* %call21 to %struct.MTexPoly*, !dbg !7269
  %53 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7270
  %mtpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %53, i32 0, i32 8, !dbg !7271
  store %struct.MTexPoly* %52, %struct.MTexPoly** %mtpoly, align 8, !dbg !7272
  %54 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7273
  %ldata22 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %54, i32 0, i32 25, !dbg !7274
  %55 = load %struct.MLoopUV*, %struct.MLoopUV** %alluv, align 8, !dbg !7275
  %56 = bitcast %struct.MLoopUV* %55 to i8*, !dbg !7275
  %57 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7276
  %totloop23 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %57, i32 0, i32 31, !dbg !7277
  %58 = load i32, i32* %totloop23, align 4, !dbg !7277
  %59 = load i8*, i8** %uvname, align 8, !dbg !7278
  %call24 = call i8* @CustomData_add_layer_named(%struct.CustomData* %ldata22, i32 16, i32 0, i8* %56, i32 %58, i8* %59), !dbg !7279
  %60 = bitcast i8* %call24 to %struct.MLoopUV*, !dbg !7279
  %61 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7280
  %mloopuv = getelementptr inbounds %struct.Mesh, %struct.Mesh* %61, i32 0, i32 10, !dbg !7281
  store %struct.MLoopUV* %60, %struct.MLoopUV** %mloopuv, align 8, !dbg !7282
  br label %if.end25, !dbg !7283

if.end25:                                         ; preds = %if.then18, %if.end
  %62 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7284
  call void @BKE_mesh_calc_normals(%struct.Mesh* %62), !dbg !7285
  br label %if.end27, !dbg !7286

if.else:                                          ; preds = %entry
  %63 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !7287
  %call26 = call %struct.Mesh* @BKE_mesh_add(%struct.Main* %63, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0)), !dbg !7289
  store %struct.Mesh* %call26, %struct.Mesh** %me, align 8, !dbg !7290
  %64 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7291
  %65 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7292
  %66 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7293
  %67 = load i64, i64* @CD_MASK_MESH, align 8, !dbg !7294
  call void @DM_to_mesh(%struct.DerivedMesh* %64, %struct.Mesh* %65, %struct.Object* %66, i64 %67), !dbg !7295
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.end25
  %68 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7296
  %totcol = getelementptr inbounds %struct.Curve, %struct.Curve* %68, i32 0, i32 22, !dbg !7297
  %69 = load i16, i16* %totcol, align 2, !dbg !7297
  %70 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7298
  %totcol28 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %70, i32 0, i32 47, !dbg !7299
  store i16 %69, i16* %totcol28, align 2, !dbg !7300
  %71 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7301
  %mat = getelementptr inbounds %struct.Curve, %struct.Curve* %71, i32 0, i32 10, !dbg !7302
  %72 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !7302
  %73 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7303
  %mat29 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %73, i32 0, i32 5, !dbg !7304
  store %struct.Material** %72, %struct.Material*** %mat29, align 8, !dbg !7305
  %74 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7306
  call void @BKE_mesh_texspace_calc(%struct.Mesh* %74), !dbg !7307
  %75 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7308
  %mat30 = getelementptr inbounds %struct.Curve, %struct.Curve* %75, i32 0, i32 10, !dbg !7309
  store %struct.Material** null, %struct.Material*** %mat30, align 8, !dbg !7310
  %76 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7311
  %totcol31 = getelementptr inbounds %struct.Curve, %struct.Curve* %76, i32 0, i32 22, !dbg !7312
  store i16 0, i16* %totcol31, align 2, !dbg !7313
  %77 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7314
  %data32 = getelementptr inbounds %struct.Object, %struct.Object* %77, i32 0, i32 19, !dbg !7316
  %78 = load i8*, i8** %data32, align 8, !dbg !7316
  %tobool33 = icmp ne i8* %78, null, !dbg !7314
  br i1 %tobool33, label %if.then34, label %if.end36, !dbg !7317

if.then34:                                        ; preds = %if.end27
  %79 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !7318
  %80 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7320
  %data35 = getelementptr inbounds %struct.Object, %struct.Object* %80, i32 0, i32 19, !dbg !7321
  %81 = load i8*, i8** %data35, align 8, !dbg !7321
  call void @BKE_libblock_free(%struct.Main* %79, i8* %81), !dbg !7322
  br label %if.end36, !dbg !7323

if.end36:                                         ; preds = %if.then34, %if.end27
  %82 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7324
  %83 = bitcast %struct.Mesh* %82 to i8*, !dbg !7324
  %84 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7325
  %data37 = getelementptr inbounds %struct.Object, %struct.Object* %84, i32 0, i32 19, !dbg !7326
  store i8* %83, i8** %data37, align 8, !dbg !7327
  %85 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7328
  %type = getelementptr inbounds %struct.Object, %struct.Object* %85, i32 0, i32 3, !dbg !7329
  store i16 1, i16* %type, align 8, !dbg !7330
  %86 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !7331
  %object = getelementptr inbounds %struct.Main, %struct.Main* %86, i32 0, i32 13, !dbg !7332
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object, i32 0, i32 0, !dbg !7333
  %87 = load i8*, i8** %first, align 8, !dbg !7333
  %88 = bitcast i8* %87 to %struct.Object*, !dbg !7331
  store %struct.Object* %88, %struct.Object** %ob1, align 8, !dbg !7334
  br label %while.cond, !dbg !7335

while.cond:                                       ; preds = %if.end47, %if.end36
  %89 = load %struct.Object*, %struct.Object** %ob1, align 8, !dbg !7336
  %tobool38 = icmp ne %struct.Object* %89, null, !dbg !7335
  br i1 %tobool38, label %while.body, label %while.end, !dbg !7335

while.body:                                       ; preds = %while.cond
  %90 = load %struct.Object*, %struct.Object** %ob1, align 8, !dbg !7337
  %data39 = getelementptr inbounds %struct.Object, %struct.Object* %90, i32 0, i32 19, !dbg !7340
  %91 = load i8*, i8** %data39, align 8, !dbg !7340
  %92 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7341
  %93 = bitcast %struct.Curve* %92 to i8*, !dbg !7341
  %cmp40 = icmp eq i8* %91, %93, !dbg !7342
  br i1 %cmp40, label %if.then42, label %if.end47, !dbg !7343

if.then42:                                        ; preds = %while.body
  %94 = load %struct.Object*, %struct.Object** %ob1, align 8, !dbg !7344
  %type43 = getelementptr inbounds %struct.Object, %struct.Object* %94, i32 0, i32 3, !dbg !7346
  store i16 1, i16* %type43, align 8, !dbg !7347
  %95 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7348
  %data44 = getelementptr inbounds %struct.Object, %struct.Object* %95, i32 0, i32 19, !dbg !7349
  %96 = load i8*, i8** %data44, align 8, !dbg !7349
  %97 = load %struct.Object*, %struct.Object** %ob1, align 8, !dbg !7350
  %data45 = getelementptr inbounds %struct.Object, %struct.Object* %97, i32 0, i32 19, !dbg !7351
  store i8* %96, i8** %data45, align 8, !dbg !7352
  %98 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7353
  %data46 = getelementptr inbounds %struct.Object, %struct.Object* %98, i32 0, i32 19, !dbg !7354
  %99 = load i8*, i8** %data46, align 8, !dbg !7354
  %100 = bitcast i8* %99 to %struct.ID*, !dbg !7355
  call void @id_us_plus(%struct.ID* %100), !dbg !7356
  br label %if.end47, !dbg !7357

if.end47:                                         ; preds = %if.then42, %while.body
  %101 = load %struct.Object*, %struct.Object** %ob1, align 8, !dbg !7358
  %id = getelementptr inbounds %struct.Object, %struct.Object* %101, i32 0, i32 0, !dbg !7359
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 0, !dbg !7360
  %102 = load i8*, i8** %next, align 8, !dbg !7360
  %103 = bitcast i8* %102 to %struct.Object*, !dbg !7358
  store %struct.Object* %103, %struct.Object** %ob1, align 8, !dbg !7361
  br label %while.cond, !dbg !7335, !llvm.loop !7362

while.end:                                        ; preds = %if.then3, %while.cond
  ret void, !dbg !7364
}

declare dso_local i8* @CustomData_add_layer_named(%struct.CustomData*, i32, i32, i8*, i32, i8*) #2

declare dso_local void @DM_to_mesh(%struct.DerivedMesh*, %struct.Mesh*, %struct.Object*, i64) #2

declare dso_local void @BKE_libblock_free(%struct.Main*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_from_nurbs(%struct.Object* %ob) #0 !dbg !7365 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  %use_orco_uv = alloca i8, align 1
  %disp = alloca %struct.ListBase, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7368, metadata !DIExpression()), !dbg !7369
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !7370, metadata !DIExpression()), !dbg !7371
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7372
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !7373
  %1 = load i8*, i8** %data, align 8, !dbg !7373
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !7374
  store %struct.Curve* %2, %struct.Curve** %cu, align 8, !dbg !7371
  call void @llvm.dbg.declare(metadata i8* %use_orco_uv, metadata !7375, metadata !DIExpression()), !dbg !7376
  %3 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7377
  %flag = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 23, !dbg !7378
  %4 = load i32, i32* %flag, align 4, !dbg !7378
  %and = and i32 %4, 32, !dbg !7379
  %cmp = icmp ne i32 %and, 0, !dbg !7380
  %conv = zext i1 %cmp to i32, !dbg !7380
  %conv1 = trunc i32 %conv to i8, !dbg !7381
  store i8 %conv1, i8* %use_orco_uv, align 1, !dbg !7376
  call void @llvm.dbg.declare(metadata %struct.ListBase* %disp, metadata !7382, metadata !DIExpression()), !dbg !7383
  %5 = bitcast %struct.ListBase* %disp to i8*, !dbg !7383
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false), !dbg !7383
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7384
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 118, !dbg !7386
  %7 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !7386
  %tobool = icmp ne %struct.CurveCache* %7, null, !dbg !7384
  br i1 %tobool, label %if.then, label %if.end, !dbg !7387

if.then:                                          ; preds = %entry
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7388
  %curve_cache2 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 118, !dbg !7390
  %9 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache2, align 8, !dbg !7390
  %disp3 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %9, i32 0, i32 0, !dbg !7391
  %10 = bitcast %struct.ListBase* %disp to i8*, !dbg !7391
  %11 = bitcast %struct.ListBase* %disp3 to i8*, !dbg !7391
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 16, i1 false), !dbg !7391
  br label %if.end, !dbg !7392

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7393
  %13 = load i8, i8* %use_orco_uv, align 1, !dbg !7394
  call void @BKE_mesh_from_nurbs_displist(%struct.Object* %12, %struct.ListBase* %disp, i8 zeroext %13), !dbg !7395
  ret void, !dbg !7396
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_to_curve_nurblist(%struct.DerivedMesh* %dm, %struct.ListBase* %nurblist, i32 %edge_users_test) #0 !dbg !7397 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %nurblist.addr = alloca %struct.ListBase*, align 8
  %edge_users_test.addr = alloca i32, align 4
  %mvert = alloca %struct.MVert*, align 8
  %med = alloca %struct.MEdge*, align 8
  %medge = alloca %struct.MEdge*, align 8
  %mp = alloca %struct.MPoly*, align 8
  %mpoly = alloca %struct.MPoly*, align 8
  %mloop = alloca %struct.MLoop*, align 8
  %dm_totedge = alloca i32, align 4
  %dm_totpoly = alloca i32, align 4
  %totedges = alloca i32, align 4
  %i = alloca i32, align 4
  %edge_users = alloca i32*, align 8
  %edges = alloca %struct.ListBase, align 8
  %ml = alloca %struct.MLoop*, align 8
  %j = alloca i32, align 4
  %edl = alloca %struct.EdgeLink*, align 8
  %polyline = alloca %struct.ListBase, align 8
  %closed = alloca i8, align 1
  %totpoly = alloca i32, align 4
  %med_current = alloca %struct.MEdge*, align 8
  %startVert = alloca i32, align 4
  %endVert = alloca i32, align 4
  %ok = alloca i8, align 1
  %edl43 = alloca %struct.EdgeLink*, align 8
  %edl_prev = alloca %struct.EdgeLink*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %vl = alloca %struct.VertLink*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !7400, metadata !DIExpression()), !dbg !7401
  store %struct.ListBase* %nurblist, %struct.ListBase** %nurblist.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nurblist.addr, metadata !7402, metadata !DIExpression()), !dbg !7403
  store i32 %edge_users_test, i32* %edge_users_test.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %edge_users_test.addr, metadata !7404, metadata !DIExpression()), !dbg !7405
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !7406, metadata !DIExpression()), !dbg !7407
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7408
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 31, !dbg !7409
  %1 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !7409
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7410
  %call = call %struct.MVert* %1(%struct.DerivedMesh* %2), !dbg !7408
  store %struct.MVert* %call, %struct.MVert** %mvert, align 8, !dbg !7407
  call void @llvm.dbg.declare(metadata %struct.MEdge** %med, metadata !7411, metadata !DIExpression()), !dbg !7412
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge, metadata !7413, metadata !DIExpression()), !dbg !7414
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7415
  %getEdgeArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 32, !dbg !7416
  %4 = load %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)** %getEdgeArray, align 8, !dbg !7416
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7417
  %call1 = call %struct.MEdge* %4(%struct.DerivedMesh* %5), !dbg !7415
  store %struct.MEdge* %call1, %struct.MEdge** %medge, align 8, !dbg !7414
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !7418, metadata !DIExpression()), !dbg !7419
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly, metadata !7420, metadata !DIExpression()), !dbg !7421
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7422
  %getPolyArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 35, !dbg !7423
  %7 = load %struct.MPoly* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)** %getPolyArray, align 8, !dbg !7423
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7424
  %call2 = call %struct.MPoly* %7(%struct.DerivedMesh* %8), !dbg !7422
  store %struct.MPoly* %call2, %struct.MPoly** %mpoly, align 8, !dbg !7421
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop, metadata !7425, metadata !DIExpression()), !dbg !7426
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7427
  %getLoopArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 34, !dbg !7428
  %10 = load %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)** %getLoopArray, align 8, !dbg !7428
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7429
  %call3 = call %struct.MLoop* %10(%struct.DerivedMesh* %11), !dbg !7427
  store %struct.MLoop* %call3, %struct.MLoop** %mloop, align 8, !dbg !7426
  call void @llvm.dbg.declare(metadata i32* %dm_totedge, metadata !7430, metadata !DIExpression()), !dbg !7431
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7432
  %getNumEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 24, !dbg !7433
  %13 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumEdges, align 8, !dbg !7433
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7434
  %call4 = call i32 %13(%struct.DerivedMesh* %14), !dbg !7432
  store i32 %call4, i32* %dm_totedge, align 4, !dbg !7431
  call void @llvm.dbg.declare(metadata i32* %dm_totpoly, metadata !7435, metadata !DIExpression()), !dbg !7436
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7437
  %getNumPolys = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 27, !dbg !7438
  %16 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumPolys, align 8, !dbg !7438
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7439
  %call5 = call i32 %16(%struct.DerivedMesh* %17), !dbg !7437
  store i32 %call5, i32* %dm_totpoly, align 4, !dbg !7436
  call void @llvm.dbg.declare(metadata i32* %totedges, metadata !7440, metadata !DIExpression()), !dbg !7441
  store i32 0, i32* %totedges, align 4, !dbg !7441
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7442, metadata !DIExpression()), !dbg !7443
  call void @llvm.dbg.declare(metadata i32** %edge_users, metadata !7444, metadata !DIExpression()), !dbg !7445
  call void @llvm.dbg.declare(metadata %struct.ListBase* %edges, metadata !7446, metadata !DIExpression()), !dbg !7447
  %18 = bitcast %struct.ListBase* %edges to i8*, !dbg !7447
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false), !dbg !7447
  %19 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7448
  %20 = load i32, i32* %dm_totedge, align 4, !dbg !7449
  %conv = sext i32 %20 to i64, !dbg !7449
  %mul = mul i64 4, %conv, !dbg !7450
  %call6 = call i8* %19(i64 %mul, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.BKE_mesh_to_curve_nurblist, i64 0, i64 0)), !dbg !7448
  %21 = bitcast i8* %call6 to i32*, !dbg !7448
  store i32* %21, i32** %edge_users, align 8, !dbg !7451
  store i32 0, i32* %i, align 4, !dbg !7452
  %22 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !7454
  store %struct.MPoly* %22, %struct.MPoly** %mp, align 8, !dbg !7455
  br label %for.cond, !dbg !7456

for.cond:                                         ; preds = %for.inc15, %entry
  %23 = load i32, i32* %i, align 4, !dbg !7457
  %24 = load i32, i32* %dm_totpoly, align 4, !dbg !7459
  %cmp = icmp slt i32 %23, %24, !dbg !7460
  br i1 %cmp, label %for.body, label %for.end18, !dbg !7461

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml, metadata !7462, metadata !DIExpression()), !dbg !7464
  %25 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !7465
  %26 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !7466
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %26, i32 0, i32 0, !dbg !7467
  %27 = load i32, i32* %loopstart, align 4, !dbg !7467
  %idxprom = sext i32 %27 to i64, !dbg !7465
  %arrayidx = getelementptr inbounds %struct.MLoop, %struct.MLoop* %25, i64 %idxprom, !dbg !7465
  store %struct.MLoop* %arrayidx, %struct.MLoop** %ml, align 8, !dbg !7464
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7468, metadata !DIExpression()), !dbg !7469
  store i32 0, i32* %j, align 4, !dbg !7470
  br label %for.cond8, !dbg !7472

for.cond8:                                        ; preds = %for.inc, %for.body
  %28 = load i32, i32* %j, align 4, !dbg !7473
  %29 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !7475
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %29, i32 0, i32 1, !dbg !7476
  %30 = load i32, i32* %totloop, align 4, !dbg !7476
  %cmp9 = icmp slt i32 %28, %30, !dbg !7477
  br i1 %cmp9, label %for.body11, label %for.end, !dbg !7478

for.body11:                                       ; preds = %for.cond8
  %31 = load i32*, i32** %edge_users, align 8, !dbg !7479
  %32 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !7481
  %e = getelementptr inbounds %struct.MLoop, %struct.MLoop* %32, i32 0, i32 1, !dbg !7482
  %33 = load i32, i32* %e, align 4, !dbg !7482
  %idxprom12 = zext i32 %33 to i64, !dbg !7479
  %arrayidx13 = getelementptr inbounds i32, i32* %31, i64 %idxprom12, !dbg !7479
  %34 = load i32, i32* %arrayidx13, align 4, !dbg !7483
  %inc = add nsw i32 %34, 1, !dbg !7483
  store i32 %inc, i32* %arrayidx13, align 4, !dbg !7483
  br label %for.inc, !dbg !7484

for.inc:                                          ; preds = %for.body11
  %35 = load i32, i32* %j, align 4, !dbg !7485
  %inc14 = add nsw i32 %35, 1, !dbg !7485
  store i32 %inc14, i32* %j, align 4, !dbg !7485
  %36 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !7486
  %incdec.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %36, i32 1, !dbg !7486
  store %struct.MLoop* %incdec.ptr, %struct.MLoop** %ml, align 8, !dbg !7486
  br label %for.cond8, !dbg !7487, !llvm.loop !7488

for.end:                                          ; preds = %for.cond8
  br label %for.inc15, !dbg !7490

for.inc15:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !7491
  %inc16 = add nsw i32 %37, 1, !dbg !7491
  store i32 %inc16, i32* %i, align 4, !dbg !7491
  %38 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !7492
  %incdec.ptr17 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %38, i32 1, !dbg !7492
  store %struct.MPoly* %incdec.ptr17, %struct.MPoly** %mp, align 8, !dbg !7492
  br label %for.cond, !dbg !7493, !llvm.loop !7494

for.end18:                                        ; preds = %for.cond
  %39 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !7496
  store %struct.MEdge* %39, %struct.MEdge** %med, align 8, !dbg !7497
  store i32 0, i32* %i, align 4, !dbg !7498
  br label %for.cond19, !dbg !7500

for.cond19:                                       ; preds = %for.inc29, %for.end18
  %40 = load i32, i32* %i, align 4, !dbg !7501
  %41 = load i32, i32* %dm_totedge, align 4, !dbg !7503
  %cmp20 = icmp slt i32 %40, %41, !dbg !7504
  br i1 %cmp20, label %for.body22, label %for.end32, !dbg !7505

for.body22:                                       ; preds = %for.cond19
  %42 = load i32*, i32** %edge_users, align 8, !dbg !7506
  %43 = load i32, i32* %i, align 4, !dbg !7509
  %idxprom23 = sext i32 %43 to i64, !dbg !7506
  %arrayidx24 = getelementptr inbounds i32, i32* %42, i64 %idxprom23, !dbg !7506
  %44 = load i32, i32* %arrayidx24, align 4, !dbg !7506
  %45 = load i32, i32* %edge_users_test.addr, align 4, !dbg !7510
  %cmp25 = icmp eq i32 %44, %45, !dbg !7511
  br i1 %cmp25, label %if.then, label %if.end, !dbg !7512

if.then:                                          ; preds = %for.body22
  call void @llvm.dbg.declare(metadata %struct.EdgeLink** %edl, metadata !7513, metadata !DIExpression()), !dbg !7515
  %46 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7516
  %call27 = call i8* %46(i64 24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0)), !dbg !7516
  %47 = bitcast i8* %call27 to %struct.EdgeLink*, !dbg !7516
  store %struct.EdgeLink* %47, %struct.EdgeLink** %edl, align 8, !dbg !7515
  %48 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !7517
  %49 = bitcast %struct.MEdge* %48 to i8*, !dbg !7517
  %50 = load %struct.EdgeLink*, %struct.EdgeLink** %edl, align 8, !dbg !7518
  %edge = getelementptr inbounds %struct.EdgeLink, %struct.EdgeLink* %50, i32 0, i32 2, !dbg !7519
  store i8* %49, i8** %edge, align 8, !dbg !7520
  %51 = load %struct.EdgeLink*, %struct.EdgeLink** %edl, align 8, !dbg !7521
  %52 = bitcast %struct.EdgeLink* %51 to i8*, !dbg !7521
  call void @BLI_addtail(%struct.ListBase* %edges, i8* %52), !dbg !7522
  %53 = load i32, i32* %totedges, align 4, !dbg !7523
  %inc28 = add nsw i32 %53, 1, !dbg !7523
  store i32 %inc28, i32* %totedges, align 4, !dbg !7523
  br label %if.end, !dbg !7524

if.end:                                           ; preds = %if.then, %for.body22
  br label %for.inc29, !dbg !7525

for.inc29:                                        ; preds = %if.end
  %54 = load i32, i32* %i, align 4, !dbg !7526
  %inc30 = add nsw i32 %54, 1, !dbg !7526
  store i32 %inc30, i32* %i, align 4, !dbg !7526
  %55 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !7527
  %incdec.ptr31 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %55, i32 1, !dbg !7527
  store %struct.MEdge* %incdec.ptr31, %struct.MEdge** %med, align 8, !dbg !7527
  br label %for.cond19, !dbg !7528, !llvm.loop !7529

for.end32:                                        ; preds = %for.cond19
  %56 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7531
  %57 = load i32*, i32** %edge_users, align 8, !dbg !7532
  %58 = bitcast i32* %57 to i8*, !dbg !7532
  call void %56(i8* %58), !dbg !7531
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges, i32 0, i32 0, !dbg !7533
  %59 = load i8*, i8** %first, align 8, !dbg !7533
  %tobool = icmp ne i8* %59, null, !dbg !7535
  br i1 %tobool, label %if.then33, label %if.end113, !dbg !7536

if.then33:                                        ; preds = %for.end32
  br label %while.cond, !dbg !7537

while.cond:                                       ; preds = %for.end111, %if.then33
  %first34 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges, i32 0, i32 0, !dbg !7539
  %60 = load i8*, i8** %first34, align 8, !dbg !7539
  %tobool35 = icmp ne i8* %60, null, !dbg !7537
  br i1 %tobool35, label %while.body, label %while.end112, !dbg !7537

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.ListBase* %polyline, metadata !7540, metadata !DIExpression()), !dbg !7542
  %61 = bitcast %struct.ListBase* %polyline to i8*, !dbg !7542
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false), !dbg !7542
  call void @llvm.dbg.declare(metadata i8* %closed, metadata !7543, metadata !DIExpression()), !dbg !7544
  store i8 0, i8* %closed, align 1, !dbg !7544
  call void @llvm.dbg.declare(metadata i32* %totpoly, metadata !7545, metadata !DIExpression()), !dbg !7546
  store i32 0, i32* %totpoly, align 4, !dbg !7546
  call void @llvm.dbg.declare(metadata %struct.MEdge** %med_current, metadata !7547, metadata !DIExpression()), !dbg !7548
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges, i32 0, i32 1, !dbg !7549
  %62 = load i8*, i8** %last, align 8, !dbg !7549
  %63 = bitcast i8* %62 to %struct.EdgeLink*, !dbg !7550
  %edge36 = getelementptr inbounds %struct.EdgeLink, %struct.EdgeLink* %63, i32 0, i32 2, !dbg !7551
  %64 = load i8*, i8** %edge36, align 8, !dbg !7551
  %65 = bitcast i8* %64 to %struct.MEdge*, !dbg !7552
  store %struct.MEdge* %65, %struct.MEdge** %med_current, align 8, !dbg !7548
  call void @llvm.dbg.declare(metadata i32* %startVert, metadata !7553, metadata !DIExpression()), !dbg !7554
  %66 = load %struct.MEdge*, %struct.MEdge** %med_current, align 8, !dbg !7555
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %66, i32 0, i32 0, !dbg !7556
  %67 = load i32, i32* %v1, align 4, !dbg !7556
  store i32 %67, i32* %startVert, align 4, !dbg !7554
  call void @llvm.dbg.declare(metadata i32* %endVert, metadata !7557, metadata !DIExpression()), !dbg !7558
  %68 = load %struct.MEdge*, %struct.MEdge** %med_current, align 8, !dbg !7559
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %68, i32 0, i32 1, !dbg !7560
  %69 = load i32, i32* %v2, align 4, !dbg !7560
  store i32 %69, i32* %endVert, align 4, !dbg !7558
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !7561, metadata !DIExpression()), !dbg !7562
  store i8 1, i8* %ok, align 1, !dbg !7562
  %70 = load i32, i32* %startVert, align 4, !dbg !7563
  call void @appendPolyLineVert(%struct.ListBase* %polyline, i32 %70), !dbg !7564
  %71 = load i32, i32* %totpoly, align 4, !dbg !7565
  %inc37 = add nsw i32 %71, 1, !dbg !7565
  store i32 %inc37, i32* %totpoly, align 4, !dbg !7565
  %72 = load i32, i32* %endVert, align 4, !dbg !7566
  call void @appendPolyLineVert(%struct.ListBase* %polyline, i32 %72), !dbg !7567
  %73 = load i32, i32* %totpoly, align 4, !dbg !7568
  %inc38 = add nsw i32 %73, 1, !dbg !7568
  store i32 %inc38, i32* %totpoly, align 4, !dbg !7568
  %last39 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges, i32 0, i32 1, !dbg !7569
  %74 = load i8*, i8** %last39, align 8, !dbg !7569
  call void @BLI_freelinkN(%struct.ListBase* %edges, i8* %74), !dbg !7570
  %75 = load i32, i32* %totedges, align 4, !dbg !7571
  %dec = add nsw i32 %75, -1, !dbg !7571
  store i32 %dec, i32* %totedges, align 4, !dbg !7571
  br label %while.cond40, !dbg !7572

while.cond40:                                     ; preds = %while.end, %while.body
  %76 = load i8, i8* %ok, align 1, !dbg !7573
  %tobool41 = icmp ne i8 %76, 0, !dbg !7572
  br i1 %tobool41, label %while.body42, label %while.end84, !dbg !7572

while.body42:                                     ; preds = %while.cond40
  call void @llvm.dbg.declare(metadata %struct.EdgeLink** %edl43, metadata !7574, metadata !DIExpression()), !dbg !7576
  %last44 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges, i32 0, i32 1, !dbg !7577
  %77 = load i8*, i8** %last44, align 8, !dbg !7577
  %78 = bitcast i8* %77 to %struct.EdgeLink*, !dbg !7578
  store %struct.EdgeLink* %78, %struct.EdgeLink** %edl43, align 8, !dbg !7576
  store i8 0, i8* %ok, align 1, !dbg !7579
  br label %while.cond45, !dbg !7580

while.cond45:                                     ; preds = %if.end83, %while.body42
  %79 = load %struct.EdgeLink*, %struct.EdgeLink** %edl43, align 8, !dbg !7581
  %tobool46 = icmp ne %struct.EdgeLink* %79, null, !dbg !7580
  br i1 %tobool46, label %while.body47, label %while.end, !dbg !7580

while.body47:                                     ; preds = %while.cond45
  call void @llvm.dbg.declare(metadata %struct.EdgeLink** %edl_prev, metadata !7582, metadata !DIExpression()), !dbg !7584
  %80 = load %struct.EdgeLink*, %struct.EdgeLink** %edl43, align 8, !dbg !7585
  %prev = getelementptr inbounds %struct.EdgeLink, %struct.EdgeLink* %80, i32 0, i32 1, !dbg !7586
  %81 = load %struct.EdgeLink*, %struct.EdgeLink** %prev, align 8, !dbg !7586
  store %struct.EdgeLink* %81, %struct.EdgeLink** %edl_prev, align 8, !dbg !7584
  %82 = load %struct.EdgeLink*, %struct.EdgeLink** %edl43, align 8, !dbg !7587
  %edge48 = getelementptr inbounds %struct.EdgeLink, %struct.EdgeLink* %82, i32 0, i32 2, !dbg !7588
  %83 = load i8*, i8** %edge48, align 8, !dbg !7588
  %84 = bitcast i8* %83 to %struct.MEdge*, !dbg !7587
  store %struct.MEdge* %84, %struct.MEdge** %med, align 8, !dbg !7589
  %85 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !7590
  %v149 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %85, i32 0, i32 0, !dbg !7592
  %86 = load i32, i32* %v149, align 4, !dbg !7592
  %87 = load i32, i32* %endVert, align 4, !dbg !7593
  %cmp50 = icmp eq i32 %86, %87, !dbg !7594
  br i1 %cmp50, label %if.then52, label %if.else, !dbg !7595

if.then52:                                        ; preds = %while.body47
  %88 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !7596
  %v253 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %88, i32 0, i32 1, !dbg !7598
  %89 = load i32, i32* %v253, align 4, !dbg !7598
  store i32 %89, i32* %endVert, align 4, !dbg !7599
  %90 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !7600
  %v254 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %90, i32 0, i32 1, !dbg !7601
  %91 = load i32, i32* %v254, align 4, !dbg !7601
  call void @appendPolyLineVert(%struct.ListBase* %polyline, i32 %91), !dbg !7602
  %92 = load i32, i32* %totpoly, align 4, !dbg !7603
  %inc55 = add nsw i32 %92, 1, !dbg !7603
  store i32 %inc55, i32* %totpoly, align 4, !dbg !7603
  %93 = load %struct.EdgeLink*, %struct.EdgeLink** %edl43, align 8, !dbg !7604
  %94 = bitcast %struct.EdgeLink* %93 to i8*, !dbg !7604
  call void @BLI_freelinkN(%struct.ListBase* %edges, i8* %94), !dbg !7605
  %95 = load i32, i32* %totedges, align 4, !dbg !7606
  %dec56 = add nsw i32 %95, -1, !dbg !7606
  store i32 %dec56, i32* %totedges, align 4, !dbg !7606
  store i8 1, i8* %ok, align 1, !dbg !7607
  br label %if.end83, !dbg !7608

if.else:                                          ; preds = %while.body47
  %96 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !7609
  %v257 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %96, i32 0, i32 1, !dbg !7611
  %97 = load i32, i32* %v257, align 4, !dbg !7611
  %98 = load i32, i32* %endVert, align 4, !dbg !7612
  %cmp58 = icmp eq i32 %97, %98, !dbg !7613
  br i1 %cmp58, label %if.then60, label %if.else64, !dbg !7614

if.then60:                                        ; preds = %if.else
  %99 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !7615
  %v161 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %99, i32 0, i32 0, !dbg !7617
  %100 = load i32, i32* %v161, align 4, !dbg !7617
  store i32 %100, i32* %endVert, align 4, !dbg !7618
  %101 = load i32, i32* %endVert, align 4, !dbg !7619
  call void @appendPolyLineVert(%struct.ListBase* %polyline, i32 %101), !dbg !7620
  %102 = load i32, i32* %totpoly, align 4, !dbg !7621
  %inc62 = add nsw i32 %102, 1, !dbg !7621
  store i32 %inc62, i32* %totpoly, align 4, !dbg !7621
  %103 = load %struct.EdgeLink*, %struct.EdgeLink** %edl43, align 8, !dbg !7622
  %104 = bitcast %struct.EdgeLink* %103 to i8*, !dbg !7622
  call void @BLI_freelinkN(%struct.ListBase* %edges, i8* %104), !dbg !7623
  %105 = load i32, i32* %totedges, align 4, !dbg !7624
  %dec63 = add nsw i32 %105, -1, !dbg !7624
  store i32 %dec63, i32* %totedges, align 4, !dbg !7624
  store i8 1, i8* %ok, align 1, !dbg !7625
  br label %if.end82, !dbg !7626

if.else64:                                        ; preds = %if.else
  %106 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !7627
  %v165 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %106, i32 0, i32 0, !dbg !7629
  %107 = load i32, i32* %v165, align 4, !dbg !7629
  %108 = load i32, i32* %startVert, align 4, !dbg !7630
  %cmp66 = icmp eq i32 %107, %108, !dbg !7631
  br i1 %cmp66, label %if.then68, label %if.else72, !dbg !7632

if.then68:                                        ; preds = %if.else64
  %109 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !7633
  %v269 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %109, i32 0, i32 1, !dbg !7635
  %110 = load i32, i32* %v269, align 4, !dbg !7635
  store i32 %110, i32* %startVert, align 4, !dbg !7636
  %111 = load i32, i32* %startVert, align 4, !dbg !7637
  call void @prependPolyLineVert(%struct.ListBase* %polyline, i32 %111), !dbg !7638
  %112 = load i32, i32* %totpoly, align 4, !dbg !7639
  %inc70 = add nsw i32 %112, 1, !dbg !7639
  store i32 %inc70, i32* %totpoly, align 4, !dbg !7639
  %113 = load %struct.EdgeLink*, %struct.EdgeLink** %edl43, align 8, !dbg !7640
  %114 = bitcast %struct.EdgeLink* %113 to i8*, !dbg !7640
  call void @BLI_freelinkN(%struct.ListBase* %edges, i8* %114), !dbg !7641
  %115 = load i32, i32* %totedges, align 4, !dbg !7642
  %dec71 = add nsw i32 %115, -1, !dbg !7642
  store i32 %dec71, i32* %totedges, align 4, !dbg !7642
  store i8 1, i8* %ok, align 1, !dbg !7643
  br label %if.end81, !dbg !7644

if.else72:                                        ; preds = %if.else64
  %116 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !7645
  %v273 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %116, i32 0, i32 1, !dbg !7647
  %117 = load i32, i32* %v273, align 4, !dbg !7647
  %118 = load i32, i32* %startVert, align 4, !dbg !7648
  %cmp74 = icmp eq i32 %117, %118, !dbg !7649
  br i1 %cmp74, label %if.then76, label %if.end80, !dbg !7650

if.then76:                                        ; preds = %if.else72
  %119 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !7651
  %v177 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %119, i32 0, i32 0, !dbg !7653
  %120 = load i32, i32* %v177, align 4, !dbg !7653
  store i32 %120, i32* %startVert, align 4, !dbg !7654
  %121 = load i32, i32* %startVert, align 4, !dbg !7655
  call void @prependPolyLineVert(%struct.ListBase* %polyline, i32 %121), !dbg !7656
  %122 = load i32, i32* %totpoly, align 4, !dbg !7657
  %inc78 = add nsw i32 %122, 1, !dbg !7657
  store i32 %inc78, i32* %totpoly, align 4, !dbg !7657
  %123 = load %struct.EdgeLink*, %struct.EdgeLink** %edl43, align 8, !dbg !7658
  %124 = bitcast %struct.EdgeLink* %123 to i8*, !dbg !7658
  call void @BLI_freelinkN(%struct.ListBase* %edges, i8* %124), !dbg !7659
  %125 = load i32, i32* %totedges, align 4, !dbg !7660
  %dec79 = add nsw i32 %125, -1, !dbg !7660
  store i32 %dec79, i32* %totedges, align 4, !dbg !7660
  store i8 1, i8* %ok, align 1, !dbg !7661
  br label %if.end80, !dbg !7662

if.end80:                                         ; preds = %if.then76, %if.else72
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.then68
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.then60
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.then52
  %126 = load %struct.EdgeLink*, %struct.EdgeLink** %edl_prev, align 8, !dbg !7663
  store %struct.EdgeLink* %126, %struct.EdgeLink** %edl43, align 8, !dbg !7664
  br label %while.cond45, !dbg !7580, !llvm.loop !7665

while.end:                                        ; preds = %while.cond45
  br label %while.cond40, !dbg !7572, !llvm.loop !7667

while.end84:                                      ; preds = %while.cond40
  %127 = load i32, i32* %startVert, align 4, !dbg !7669
  %128 = load i32, i32* %endVert, align 4, !dbg !7671
  %cmp85 = icmp eq i32 %127, %128, !dbg !7672
  br i1 %cmp85, label %if.then87, label %if.end90, !dbg !7673

if.then87:                                        ; preds = %while.end84
  %last88 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %polyline, i32 0, i32 1, !dbg !7674
  %129 = load i8*, i8** %last88, align 8, !dbg !7674
  call void @BLI_freelinkN(%struct.ListBase* %polyline, i8* %129), !dbg !7676
  %130 = load i32, i32* %totpoly, align 4, !dbg !7677
  %dec89 = add nsw i32 %130, -1, !dbg !7677
  store i32 %dec89, i32* %totpoly, align 4, !dbg !7677
  store i8 1, i8* %closed, align 1, !dbg !7678
  br label %if.end90, !dbg !7679

if.end90:                                         ; preds = %if.then87, %while.end84
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !7680, metadata !DIExpression()), !dbg !7682
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !7683, metadata !DIExpression()), !dbg !7684
  call void @llvm.dbg.declare(metadata %struct.VertLink** %vl, metadata !7685, metadata !DIExpression()), !dbg !7686
  %131 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7687
  %call91 = call i8* %131(i64 88, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0)), !dbg !7687
  %132 = bitcast i8* %call91 to %struct.Nurb*, !dbg !7688
  store %struct.Nurb* %132, %struct.Nurb** %nu, align 8, !dbg !7689
  %133 = load i32, i32* %totpoly, align 4, !dbg !7690
  %134 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7691
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %134, i32 0, i32 6, !dbg !7692
  store i32 %133, i32* %pntsu, align 8, !dbg !7693
  %135 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7694
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %135, i32 0, i32 7, !dbg !7695
  store i32 1, i32* %pntsv, align 4, !dbg !7696
  %136 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7697
  %orderu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %136, i32 0, i32 11, !dbg !7698
  store i16 4, i16* %orderu, align 8, !dbg !7699
  %137 = load i8, i8* %closed, align 1, !dbg !7700
  %conv92 = zext i8 %137 to i32, !dbg !7700
  %tobool93 = icmp ne i32 %conv92, 0, !dbg !7700
  %138 = zext i1 %tobool93 to i64, !dbg !7700
  %cond = select i1 %tobool93, i32 1, i32 0, !dbg !7700
  %or = or i32 2, %cond, !dbg !7701
  %conv94 = trunc i32 %or to i16, !dbg !7702
  %139 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7703
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %139, i32 0, i32 13, !dbg !7704
  store i16 %conv94, i16* %flagu, align 4, !dbg !7705
  %140 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7706
  %resolu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %140, i32 0, i32 9, !dbg !7707
  store i16 12, i16* %resolu, align 4, !dbg !7708
  %141 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7709
  %142 = load i32, i32* %totpoly, align 4, !dbg !7710
  %conv95 = sext i32 %142 to i64, !dbg !7710
  %mul96 = mul i64 36, %conv95, !dbg !7711
  %call97 = call i8* %141(i64 %mul96, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0)), !dbg !7709
  %143 = bitcast i8* %call97 to %struct.BPoint*, !dbg !7712
  %144 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7713
  %bp98 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %144, i32 0, i32 17, !dbg !7714
  store %struct.BPoint* %143, %struct.BPoint** %bp98, align 8, !dbg !7715
  %first99 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %polyline, i32 0, i32 0, !dbg !7716
  %145 = load i8*, i8** %first99, align 8, !dbg !7716
  %146 = bitcast i8* %145 to %struct.VertLink*, !dbg !7717
  store %struct.VertLink* %146, %struct.VertLink** %vl, align 8, !dbg !7718
  store i32 0, i32* %i, align 4, !dbg !7719
  %147 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7721
  %bp100 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %147, i32 0, i32 17, !dbg !7722
  %148 = load %struct.BPoint*, %struct.BPoint** %bp100, align 8, !dbg !7722
  store %struct.BPoint* %148, %struct.BPoint** %bp, align 8, !dbg !7723
  br label %for.cond101, !dbg !7724

for.cond101:                                      ; preds = %for.inc108, %if.end90
  %149 = load i32, i32* %i, align 4, !dbg !7725
  %150 = load i32, i32* %totpoly, align 4, !dbg !7727
  %cmp102 = icmp slt i32 %149, %150, !dbg !7728
  br i1 %cmp102, label %for.body104, label %for.end111, !dbg !7729

for.body104:                                      ; preds = %for.cond101
  %151 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7730
  %vec = getelementptr inbounds %struct.BPoint, %struct.BPoint* %151, i32 0, i32 0, !dbg !7732
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !7730
  %152 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7733
  %153 = load %struct.VertLink*, %struct.VertLink** %vl, align 8, !dbg !7734
  %index = getelementptr inbounds %struct.VertLink, %struct.VertLink* %153, i32 0, i32 2, !dbg !7735
  %154 = load i32, i32* %index, align 8, !dbg !7735
  %idxprom105 = zext i32 %154 to i64, !dbg !7733
  %arrayidx106 = getelementptr inbounds %struct.MVert, %struct.MVert* %152, i64 %idxprom105, !dbg !7733
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx106, i32 0, i32 0, !dbg !7736
  %arraydecay107 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7733
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay107), !dbg !7737
  %155 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7738
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %155, i32 0, i32 3, !dbg !7739
  store i16 1, i16* %f1, align 4, !dbg !7740
  %156 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7741
  %weight = getelementptr inbounds %struct.BPoint, %struct.BPoint* %156, i32 0, i32 2, !dbg !7742
  store float 1.000000e+00, float* %weight, align 4, !dbg !7743
  %157 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7744
  %radius = getelementptr inbounds %struct.BPoint, %struct.BPoint* %157, i32 0, i32 5, !dbg !7745
  store float 1.000000e+00, float* %radius, align 4, !dbg !7746
  br label %for.inc108, !dbg !7747

for.inc108:                                       ; preds = %for.body104
  %158 = load i32, i32* %i, align 4, !dbg !7748
  %inc109 = add nsw i32 %158, 1, !dbg !7748
  store i32 %inc109, i32* %i, align 4, !dbg !7748
  %159 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7749
  %incdec.ptr110 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %159, i32 1, !dbg !7749
  store %struct.BPoint* %incdec.ptr110, %struct.BPoint** %bp, align 8, !dbg !7749
  %160 = load %struct.VertLink*, %struct.VertLink** %vl, align 8, !dbg !7750
  %next = getelementptr inbounds %struct.VertLink, %struct.VertLink* %160, i32 0, i32 0, !dbg !7751
  %161 = load %struct.Link*, %struct.Link** %next, align 8, !dbg !7751
  %162 = bitcast %struct.Link* %161 to %struct.VertLink*, !dbg !7752
  store %struct.VertLink* %162, %struct.VertLink** %vl, align 8, !dbg !7753
  br label %for.cond101, !dbg !7754, !llvm.loop !7755

for.end111:                                       ; preds = %for.cond101
  call void @BLI_freelistN(%struct.ListBase* %polyline), !dbg !7757
  %163 = load %struct.ListBase*, %struct.ListBase** %nurblist.addr, align 8, !dbg !7758
  %164 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7759
  %165 = bitcast %struct.Nurb* %164 to i8*, !dbg !7759
  call void @BLI_addtail(%struct.ListBase* %163, i8* %165), !dbg !7760
  br label %while.cond, !dbg !7537, !llvm.loop !7761

while.end112:                                     ; preds = %while.cond
  br label %if.end113, !dbg !7763

if.end113:                                        ; preds = %while.end112, %for.end32
  ret void, !dbg !7764
}

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @appendPolyLineVert(%struct.ListBase* %lb, i32 %index) #0 !dbg !7765 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  %index.addr = alloca i32, align 4
  %vl = alloca %struct.VertLink*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !7768, metadata !DIExpression()), !dbg !7769
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7770, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.declare(metadata %struct.VertLink** %vl, metadata !7772, metadata !DIExpression()), !dbg !7773
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7774
  %call = call i8* %0(i64 24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i64 0, i64 0)), !dbg !7774
  %1 = bitcast i8* %call to %struct.VertLink*, !dbg !7774
  store %struct.VertLink* %1, %struct.VertLink** %vl, align 8, !dbg !7773
  %2 = load i32, i32* %index.addr, align 4, !dbg !7775
  %3 = load %struct.VertLink*, %struct.VertLink** %vl, align 8, !dbg !7776
  %index1 = getelementptr inbounds %struct.VertLink, %struct.VertLink* %3, i32 0, i32 2, !dbg !7777
  store i32 %2, i32* %index1, align 8, !dbg !7778
  %4 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !7779
  %5 = load %struct.VertLink*, %struct.VertLink** %vl, align 8, !dbg !7780
  %6 = bitcast %struct.VertLink* %5 to i8*, !dbg !7780
  call void @BLI_addtail(%struct.ListBase* %4, i8* %6), !dbg !7781
  ret void, !dbg !7782
}

declare dso_local void @BLI_freelinkN(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @prependPolyLineVert(%struct.ListBase* %lb, i32 %index) #0 !dbg !7783 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  %index.addr = alloca i32, align 4
  %vl = alloca %struct.VertLink*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !7784, metadata !DIExpression()), !dbg !7785
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7786, metadata !DIExpression()), !dbg !7787
  call void @llvm.dbg.declare(metadata %struct.VertLink** %vl, metadata !7788, metadata !DIExpression()), !dbg !7789
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7790
  %call = call i8* %0(i64 24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i64 0, i64 0)), !dbg !7790
  %1 = bitcast i8* %call to %struct.VertLink*, !dbg !7790
  store %struct.VertLink* %1, %struct.VertLink** %vl, align 8, !dbg !7789
  %2 = load i32, i32* %index.addr, align 4, !dbg !7791
  %3 = load %struct.VertLink*, %struct.VertLink** %vl, align 8, !dbg !7792
  %index1 = getelementptr inbounds %struct.VertLink, %struct.VertLink* %3, i32 0, i32 2, !dbg !7793
  store i32 %2, i32* %index1, align 8, !dbg !7794
  %4 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !7795
  %5 = load %struct.VertLink*, %struct.VertLink** %vl, align 8, !dbg !7796
  %6 = bitcast %struct.VertLink* %5 to i8*, !dbg !7796
  call void @BLI_addhead(%struct.ListBase* %4, i8* %6), !dbg !7797
  ret void, !dbg !7798
}

declare dso_local void @BLI_freelistN(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_to_curve(%struct.Scene* %scene, %struct.Object* %ob) #0 !dbg !7799 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %nurblist = alloca %struct.ListBase, align 8
  %needsFree = alloca i8, align 1
  %cu = alloca %struct.Curve*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7804, metadata !DIExpression()), !dbg !7805
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7806, metadata !DIExpression()), !dbg !7807
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !7808, metadata !DIExpression()), !dbg !7809
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7810
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7811
  %2 = load i64, i64* @CD_MASK_MESH, align 8, !dbg !7812
  %call = call %struct.DerivedMesh* @mesh_get_derived_final(%struct.Scene* %0, %struct.Object* %1, i64 %2), !dbg !7813
  store %struct.DerivedMesh* %call, %struct.DerivedMesh** %dm, align 8, !dbg !7809
  call void @llvm.dbg.declare(metadata %struct.ListBase* %nurblist, metadata !7814, metadata !DIExpression()), !dbg !7815
  %3 = bitcast %struct.ListBase* %nurblist to i8*, !dbg !7815
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false), !dbg !7815
  call void @llvm.dbg.declare(metadata i8* %needsFree, metadata !7816, metadata !DIExpression()), !dbg !7817
  store i8 0, i8* %needsFree, align 1, !dbg !7817
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7818
  call void @BKE_mesh_to_curve_nurblist(%struct.DerivedMesh* %4, %struct.ListBase* %nurblist, i32 0), !dbg !7819
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7820
  call void @BKE_mesh_to_curve_nurblist(%struct.DerivedMesh* %5, %struct.ListBase* %nurblist, i32 1), !dbg !7821
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurblist, i32 0, i32 0, !dbg !7822
  %6 = load i8*, i8** %first, align 8, !dbg !7822
  %tobool = icmp ne i8* %6, null, !dbg !7824
  br i1 %tobool, label %if.then, label %if.end, !dbg !7825

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !7826, metadata !DIExpression()), !dbg !7828
  %7 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !7829
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7830
  %id = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 0, !dbg !7831
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !7832
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !7830
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !7833
  %call1 = call %struct.Curve* @BKE_curve_add(%struct.Main* %7, i8* %add.ptr, i32 2), !dbg !7834
  store %struct.Curve* %call1, %struct.Curve** %cu, align 8, !dbg !7828
  %9 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7835
  %flag = getelementptr inbounds %struct.Curve, %struct.Curve* %9, i32 0, i32 23, !dbg !7836
  %10 = load i32, i32* %flag, align 4, !dbg !7837
  %or = or i32 %10, 1, !dbg !7837
  store i32 %or, i32* %flag, align 4, !dbg !7837
  %11 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7838
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %11, i32 0, i32 3, !dbg !7839
  %12 = bitcast %struct.ListBase* %nurb to i8*, !dbg !7840
  %13 = bitcast %struct.ListBase* %nurblist to i8*, !dbg !7840
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false), !dbg !7840
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7841
  %data = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 19, !dbg !7842
  %15 = load i8*, i8** %data, align 8, !dbg !7842
  %16 = bitcast i8* %15 to %struct.Mesh*, !dbg !7843
  %id2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %16, i32 0, i32 0, !dbg !7844
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 6, !dbg !7845
  %17 = load i32, i32* %us, align 4, !dbg !7846
  %dec = add nsw i32 %17, -1, !dbg !7846
  store i32 %dec, i32* %us, align 4, !dbg !7846
  %18 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7847
  %19 = bitcast %struct.Curve* %18 to i8*, !dbg !7847
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7848
  %data3 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 19, !dbg !7849
  store i8* %19, i8** %data3, align 8, !dbg !7850
  %21 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7851
  %type = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 3, !dbg !7852
  store i16 2, i16* %type, align 8, !dbg !7853
  store i8 1, i8* %needsFree, align 1, !dbg !7854
  br label %if.end, !dbg !7855

if.end:                                           ; preds = %if.then, %entry
  %22 = load i8, i8* %needsFree, align 1, !dbg !7856
  %conv = zext i8 %22 to i32, !dbg !7856
  %23 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7857
  %needsFree4 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %23, i32 0, i32 10, !dbg !7858
  store i32 %conv, i32* %needsFree4, align 4, !dbg !7859
  %24 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7860
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %24, i32 0, i32 95, !dbg !7861
  %25 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !7861
  %26 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7862
  call void %25(%struct.DerivedMesh* %26), !dbg !7860
  %27 = load i8, i8* %needsFree, align 1, !dbg !7863
  %tobool5 = icmp ne i8 %27, 0, !dbg !7863
  br i1 %tobool5, label %if.then6, label %if.end12, !dbg !7865

if.then6:                                         ; preds = %if.end
  %28 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7866
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 120, !dbg !7868
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !7869
  %29 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7870
  %bb = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 15, !dbg !7872
  %30 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !7872
  %tobool7 = icmp ne %struct.BoundBox* %30, null, !dbg !7870
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !7873

if.then8:                                         ; preds = %if.then6
  %31 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7874
  %32 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7876
  %bb9 = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 15, !dbg !7877
  %33 = load %struct.BoundBox*, %struct.BoundBox** %bb9, align 8, !dbg !7877
  %34 = bitcast %struct.BoundBox* %33 to i8*, !dbg !7876
  call void %31(i8* %34), !dbg !7874
  %35 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7878
  %bb10 = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 15, !dbg !7879
  store %struct.BoundBox* null, %struct.BoundBox** %bb10, align 8, !dbg !7880
  br label %if.end11, !dbg !7881

if.end11:                                         ; preds = %if.then8, %if.then6
  br label %if.end12, !dbg !7882

if.end12:                                         ; preds = %if.end11, %if.end
  ret void, !dbg !7883
}

declare dso_local %struct.DerivedMesh* @mesh_get_derived_final(%struct.Scene*, %struct.Object*, i64) #2

declare dso_local %struct.Curve* @BKE_curve_add(%struct.Main*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_material_index_remove(%struct.Mesh* %me, i16 signext %index) #0 !dbg !7884 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %index.addr = alloca i16, align 2
  %mp = alloca %struct.MPoly*, align 8
  %mf = alloca %struct.MFace*, align 8
  %i = alloca i32, align 4
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !7887, metadata !DIExpression()), !dbg !7888
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !7889, metadata !DIExpression()), !dbg !7890
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !7891, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !7893, metadata !DIExpression()), !dbg !7894
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7895, metadata !DIExpression()), !dbg !7896
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7897
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 7, !dbg !7899
  %1 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !7899
  store %struct.MPoly* %1, %struct.MPoly** %mp, align 8, !dbg !7900
  store i32 0, i32* %i, align 4, !dbg !7901
  br label %for.cond, !dbg !7902

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !7903
  %3 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7905
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 30, !dbg !7906
  %4 = load i32, i32* %totpoly, align 8, !dbg !7906
  %cmp = icmp slt i32 %2, %4, !dbg !7907
  br i1 %cmp, label %for.body, label %for.end, !dbg !7908

for.body:                                         ; preds = %for.cond
  %5 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !7909
  %mat_nr = getelementptr inbounds %struct.MPoly, %struct.MPoly* %5, i32 0, i32 2, !dbg !7912
  %6 = load i16, i16* %mat_nr, align 4, !dbg !7912
  %conv = sext i16 %6 to i32, !dbg !7909
  %tobool = icmp ne i32 %conv, 0, !dbg !7909
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7913

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !7914
  %mat_nr1 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %7, i32 0, i32 2, !dbg !7915
  %8 = load i16, i16* %mat_nr1, align 4, !dbg !7915
  %conv2 = sext i16 %8 to i32, !dbg !7914
  %9 = load i16, i16* %index.addr, align 2, !dbg !7916
  %conv3 = sext i16 %9 to i32, !dbg !7916
  %cmp4 = icmp sge i32 %conv2, %conv3, !dbg !7917
  br i1 %cmp4, label %if.then, label %if.end, !dbg !7918

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !7919
  %mat_nr6 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %10, i32 0, i32 2, !dbg !7921
  %11 = load i16, i16* %mat_nr6, align 4, !dbg !7922
  %dec = add i16 %11, -1, !dbg !7922
  store i16 %dec, i16* %mat_nr6, align 4, !dbg !7922
  br label %if.end, !dbg !7923

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !7924

for.inc:                                          ; preds = %if.end
  %12 = load i32, i32* %i, align 4, !dbg !7925
  %inc = add nsw i32 %12, 1, !dbg !7925
  store i32 %inc, i32* %i, align 4, !dbg !7925
  %13 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !7926
  %incdec.ptr = getelementptr inbounds %struct.MPoly, %struct.MPoly* %13, i32 1, !dbg !7926
  store %struct.MPoly* %incdec.ptr, %struct.MPoly** %mp, align 8, !dbg !7926
  br label %for.cond, !dbg !7927, !llvm.loop !7928

for.end:                                          ; preds = %for.cond
  %14 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7930
  %mface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 12, !dbg !7932
  %15 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7932
  store %struct.MFace* %15, %struct.MFace** %mf, align 8, !dbg !7933
  store i32 0, i32* %i, align 4, !dbg !7934
  br label %for.cond7, !dbg !7935

for.cond7:                                        ; preds = %for.inc24, %for.end
  %16 = load i32, i32* %i, align 4, !dbg !7936
  %17 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7938
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 28, !dbg !7939
  %18 = load i32, i32* %totface, align 8, !dbg !7939
  %cmp8 = icmp slt i32 %16, %18, !dbg !7940
  br i1 %cmp8, label %for.body10, label %for.end27, !dbg !7941

for.body10:                                       ; preds = %for.cond7
  %19 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !7942
  %mat_nr11 = getelementptr inbounds %struct.MFace, %struct.MFace* %19, i32 0, i32 4, !dbg !7945
  %20 = load i16, i16* %mat_nr11, align 4, !dbg !7945
  %conv12 = sext i16 %20 to i32, !dbg !7942
  %tobool13 = icmp ne i32 %conv12, 0, !dbg !7942
  br i1 %tobool13, label %land.lhs.true14, label %if.end23, !dbg !7946

land.lhs.true14:                                  ; preds = %for.body10
  %21 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !7947
  %mat_nr15 = getelementptr inbounds %struct.MFace, %struct.MFace* %21, i32 0, i32 4, !dbg !7948
  %22 = load i16, i16* %mat_nr15, align 4, !dbg !7948
  %conv16 = sext i16 %22 to i32, !dbg !7947
  %23 = load i16, i16* %index.addr, align 2, !dbg !7949
  %conv17 = sext i16 %23 to i32, !dbg !7949
  %cmp18 = icmp sge i32 %conv16, %conv17, !dbg !7950
  br i1 %cmp18, label %if.then20, label %if.end23, !dbg !7951

if.then20:                                        ; preds = %land.lhs.true14
  %24 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !7952
  %mat_nr21 = getelementptr inbounds %struct.MFace, %struct.MFace* %24, i32 0, i32 4, !dbg !7954
  %25 = load i16, i16* %mat_nr21, align 4, !dbg !7955
  %dec22 = add i16 %25, -1, !dbg !7955
  store i16 %dec22, i16* %mat_nr21, align 4, !dbg !7955
  br label %if.end23, !dbg !7956

if.end23:                                         ; preds = %if.then20, %land.lhs.true14, %for.body10
  br label %for.inc24, !dbg !7957

for.inc24:                                        ; preds = %if.end23
  %26 = load i32, i32* %i, align 4, !dbg !7958
  %inc25 = add nsw i32 %26, 1, !dbg !7958
  store i32 %inc25, i32* %i, align 4, !dbg !7958
  %27 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !7959
  %incdec.ptr26 = getelementptr inbounds %struct.MFace, %struct.MFace* %27, i32 1, !dbg !7959
  store %struct.MFace* %incdec.ptr26, %struct.MFace** %mf, align 8, !dbg !7959
  br label %for.cond7, !dbg !7960, !llvm.loop !7961

for.end27:                                        ; preds = %for.cond7
  ret void, !dbg !7963
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_material_index_clear(%struct.Mesh* %me) #0 !dbg !7964 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %mp = alloca %struct.MPoly*, align 8
  %mf = alloca %struct.MFace*, align 8
  %i = alloca i32, align 4
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !7965, metadata !DIExpression()), !dbg !7966
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !7967, metadata !DIExpression()), !dbg !7968
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !7969, metadata !DIExpression()), !dbg !7970
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7971, metadata !DIExpression()), !dbg !7972
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7973
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 7, !dbg !7975
  %1 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !7975
  store %struct.MPoly* %1, %struct.MPoly** %mp, align 8, !dbg !7976
  store i32 0, i32* %i, align 4, !dbg !7977
  br label %for.cond, !dbg !7978

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !7979
  %3 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7981
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 30, !dbg !7982
  %4 = load i32, i32* %totpoly, align 8, !dbg !7982
  %cmp = icmp slt i32 %2, %4, !dbg !7983
  br i1 %cmp, label %for.body, label %for.end, !dbg !7984

for.body:                                         ; preds = %for.cond
  %5 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !7985
  %mat_nr = getelementptr inbounds %struct.MPoly, %struct.MPoly* %5, i32 0, i32 2, !dbg !7987
  store i16 0, i16* %mat_nr, align 4, !dbg !7988
  br label %for.inc, !dbg !7989

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !7990
  %inc = add nsw i32 %6, 1, !dbg !7990
  store i32 %inc, i32* %i, align 4, !dbg !7990
  %7 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !7991
  %incdec.ptr = getelementptr inbounds %struct.MPoly, %struct.MPoly* %7, i32 1, !dbg !7991
  store %struct.MPoly* %incdec.ptr, %struct.MPoly** %mp, align 8, !dbg !7991
  br label %for.cond, !dbg !7992, !llvm.loop !7993

for.end:                                          ; preds = %for.cond
  %8 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7995
  %mface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 12, !dbg !7997
  %9 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7997
  store %struct.MFace* %9, %struct.MFace** %mf, align 8, !dbg !7998
  store i32 0, i32* %i, align 4, !dbg !7999
  br label %for.cond1, !dbg !8000

for.cond1:                                        ; preds = %for.inc5, %for.end
  %10 = load i32, i32* %i, align 4, !dbg !8001
  %11 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8003
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 28, !dbg !8004
  %12 = load i32, i32* %totface, align 8, !dbg !8004
  %cmp2 = icmp slt i32 %10, %12, !dbg !8005
  br i1 %cmp2, label %for.body3, label %for.end8, !dbg !8006

for.body3:                                        ; preds = %for.cond1
  %13 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8007
  %mat_nr4 = getelementptr inbounds %struct.MFace, %struct.MFace* %13, i32 0, i32 4, !dbg !8009
  store i16 0, i16* %mat_nr4, align 4, !dbg !8010
  br label %for.inc5, !dbg !8011

for.inc5:                                         ; preds = %for.body3
  %14 = load i32, i32* %i, align 4, !dbg !8012
  %inc6 = add nsw i32 %14, 1, !dbg !8012
  store i32 %inc6, i32* %i, align 4, !dbg !8012
  %15 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8013
  %incdec.ptr7 = getelementptr inbounds %struct.MFace, %struct.MFace* %15, i32 1, !dbg !8013
  store %struct.MFace* %incdec.ptr7, %struct.MFace** %mf, align 8, !dbg !8013
  br label %for.cond1, !dbg !8014, !llvm.loop !8015

for.end8:                                         ; preds = %for.cond1
  ret void, !dbg !8017
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_smooth_flag_set(%struct.Object* %meshOb, i32 %enableSmooth) #0 !dbg !8018 {
entry:
  %meshOb.addr = alloca %struct.Object*, align 8
  %enableSmooth.addr = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %i = alloca i32, align 4
  %mp = alloca %struct.MPoly*, align 8
  %mf = alloca %struct.MFace*, align 8
  store %struct.Object* %meshOb, %struct.Object** %meshOb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %meshOb.addr, metadata !8021, metadata !DIExpression()), !dbg !8022
  store i32 %enableSmooth, i32* %enableSmooth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enableSmooth.addr, metadata !8023, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !8025, metadata !DIExpression()), !dbg !8026
  %0 = load %struct.Object*, %struct.Object** %meshOb.addr, align 8, !dbg !8027
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !8028
  %1 = load i8*, i8** %data, align 8, !dbg !8028
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !8027
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !8026
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8029, metadata !DIExpression()), !dbg !8030
  store i32 0, i32* %i, align 4, !dbg !8031
  br label %for.cond, !dbg !8033

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !8034
  %4 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8036
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 30, !dbg !8037
  %5 = load i32, i32* %totpoly, align 8, !dbg !8037
  %cmp = icmp slt i32 %3, %5, !dbg !8038
  br i1 %cmp, label %for.body, label %for.end, !dbg !8039

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !8040, metadata !DIExpression()), !dbg !8042
  %6 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8043
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 7, !dbg !8044
  %7 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !8044
  %8 = load i32, i32* %i, align 4, !dbg !8045
  %idxprom = sext i32 %8 to i64, !dbg !8046
  %arrayidx = getelementptr inbounds %struct.MPoly, %struct.MPoly* %7, i64 %idxprom, !dbg !8046
  store %struct.MPoly* %arrayidx, %struct.MPoly** %mp, align 8, !dbg !8042
  %9 = load i32, i32* %enableSmooth.addr, align 4, !dbg !8047
  %tobool = icmp ne i32 %9, 0, !dbg !8047
  br i1 %tobool, label %if.then, label %if.else, !dbg !8049

if.then:                                          ; preds = %for.body
  %10 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !8050
  %flag = getelementptr inbounds %struct.MPoly, %struct.MPoly* %10, i32 0, i32 3, !dbg !8052
  %11 = load i8, i8* %flag, align 2, !dbg !8053
  %conv = zext i8 %11 to i32, !dbg !8053
  %or = or i32 %conv, 1, !dbg !8053
  %conv1 = trunc i32 %or to i8, !dbg !8053
  store i8 %conv1, i8* %flag, align 2, !dbg !8053
  br label %if.end, !dbg !8054

if.else:                                          ; preds = %for.body
  %12 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !8055
  %flag2 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %12, i32 0, i32 3, !dbg !8057
  %13 = load i8, i8* %flag2, align 2, !dbg !8058
  %conv3 = zext i8 %13 to i32, !dbg !8058
  %and = and i32 %conv3, -2, !dbg !8058
  %conv4 = trunc i32 %and to i8, !dbg !8058
  store i8 %conv4, i8* %flag2, align 2, !dbg !8058
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !8059

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %i, align 4, !dbg !8060
  %inc = add nsw i32 %14, 1, !dbg !8060
  store i32 %inc, i32* %i, align 4, !dbg !8060
  br label %for.cond, !dbg !8061, !llvm.loop !8062

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !8064
  br label %for.cond5, !dbg !8066

for.cond5:                                        ; preds = %for.inc23, %for.end
  %15 = load i32, i32* %i, align 4, !dbg !8067
  %16 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8069
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %16, i32 0, i32 28, !dbg !8070
  %17 = load i32, i32* %totface, align 8, !dbg !8070
  %cmp6 = icmp slt i32 %15, %17, !dbg !8071
  br i1 %cmp6, label %for.body8, label %for.end25, !dbg !8072

for.body8:                                        ; preds = %for.cond5
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !8073, metadata !DIExpression()), !dbg !8075
  %18 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8076
  %mface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 12, !dbg !8077
  %19 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8077
  %20 = load i32, i32* %i, align 4, !dbg !8078
  %idxprom9 = sext i32 %20 to i64, !dbg !8079
  %arrayidx10 = getelementptr inbounds %struct.MFace, %struct.MFace* %19, i64 %idxprom9, !dbg !8079
  store %struct.MFace* %arrayidx10, %struct.MFace** %mf, align 8, !dbg !8075
  %21 = load i32, i32* %enableSmooth.addr, align 4, !dbg !8080
  %tobool11 = icmp ne i32 %21, 0, !dbg !8080
  br i1 %tobool11, label %if.then12, label %if.else17, !dbg !8082

if.then12:                                        ; preds = %for.body8
  %22 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8083
  %flag13 = getelementptr inbounds %struct.MFace, %struct.MFace* %22, i32 0, i32 6, !dbg !8085
  %23 = load i8, i8* %flag13, align 1, !dbg !8086
  %conv14 = zext i8 %23 to i32, !dbg !8086
  %or15 = or i32 %conv14, 1, !dbg !8086
  %conv16 = trunc i32 %or15 to i8, !dbg !8086
  store i8 %conv16, i8* %flag13, align 1, !dbg !8086
  br label %if.end22, !dbg !8087

if.else17:                                        ; preds = %for.body8
  %24 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8088
  %flag18 = getelementptr inbounds %struct.MFace, %struct.MFace* %24, i32 0, i32 6, !dbg !8090
  %25 = load i8, i8* %flag18, align 1, !dbg !8091
  %conv19 = zext i8 %25 to i32, !dbg !8091
  %and20 = and i32 %conv19, -2, !dbg !8091
  %conv21 = trunc i32 %and20 to i8, !dbg !8091
  store i8 %conv21, i8* %flag18, align 1, !dbg !8091
  br label %if.end22

if.end22:                                         ; preds = %if.else17, %if.then12
  br label %for.inc23, !dbg !8092

for.inc23:                                        ; preds = %if.end22
  %26 = load i32, i32* %i, align 4, !dbg !8093
  %inc24 = add nsw i32 %26, 1, !dbg !8093
  store i32 %inc24, i32* %i, align 4, !dbg !8093
  br label %for.cond5, !dbg !8094, !llvm.loop !8095

for.end25:                                        ; preds = %for.cond5
  ret void, !dbg !8097
}

; Function Attrs: noinline nounwind uwtable
define dso_local [3 x float]* @BKE_mesh_vertexCos_get(%struct.Mesh* %me, i32* %r_numVerts) #0 !dbg !8098 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %r_numVerts.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %cos = alloca [3 x float]*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !8101, metadata !DIExpression()), !dbg !8102
  store i32* %r_numVerts, i32** %r_numVerts.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_numVerts.addr, metadata !8103, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8105, metadata !DIExpression()), !dbg !8106
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !8107, metadata !DIExpression()), !dbg !8108
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8109
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 26, !dbg !8110
  %1 = load i32, i32* %totvert, align 8, !dbg !8110
  store i32 %1, i32* %numVerts, align 4, !dbg !8108
  call void @llvm.dbg.declare(metadata [3 x float]** %cos, metadata !8111, metadata !DIExpression()), !dbg !8112
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8113
  %3 = load i32, i32* %numVerts, align 4, !dbg !8114
  %conv = sext i32 %3 to i64, !dbg !8114
  %mul = mul i64 12, %conv, !dbg !8115
  %call = call i8* %2(i64 %mul, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0)), !dbg !8113
  %4 = bitcast i8* %call to [3 x float]*, !dbg !8113
  store [3 x float]* %4, [3 x float]** %cos, align 8, !dbg !8112
  %5 = load i32*, i32** %r_numVerts.addr, align 8, !dbg !8116
  %tobool = icmp ne i32* %5, null, !dbg !8116
  br i1 %tobool, label %if.then, label %if.end, !dbg !8118

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %numVerts, align 4, !dbg !8119
  %7 = load i32*, i32** %r_numVerts.addr, align 8, !dbg !8120
  store i32 %6, i32* %7, align 4, !dbg !8121
  br label %if.end, !dbg !8122

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !8123
  br label %for.cond, !dbg !8125

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %i, align 4, !dbg !8126
  %9 = load i32, i32* %numVerts, align 4, !dbg !8128
  %cmp = icmp slt i32 %8, %9, !dbg !8129
  br i1 %cmp, label %for.body, label %for.end, !dbg !8130

for.body:                                         ; preds = %for.cond
  %10 = load [3 x float]*, [3 x float]** %cos, align 8, !dbg !8131
  %11 = load i32, i32* %i, align 4, !dbg !8132
  %idxprom = sext i32 %11 to i64, !dbg !8131
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %10, i64 %idxprom, !dbg !8131
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !8131
  %12 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8133
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 15, !dbg !8134
  %13 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8134
  %14 = load i32, i32* %i, align 4, !dbg !8135
  %idxprom2 = sext i32 %14 to i64, !dbg !8133
  %arrayidx3 = getelementptr inbounds %struct.MVert, %struct.MVert* %13, i64 %idxprom2, !dbg !8133
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx3, i32 0, i32 0, !dbg !8136
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !8133
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay4), !dbg !8137
  br label %for.inc, !dbg !8137

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !8138
  %inc = add nsw i32 %15, 1, !dbg !8138
  store i32 %inc, i32* %i, align 4, !dbg !8138
  br label %for.cond, !dbg !8139, !llvm.loop !8140

for.end:                                          ; preds = %for.cond
  %16 = load [3 x float]*, [3 x float]** %cos, align 8, !dbg !8142
  ret [3 x float]* %16, !dbg !8143
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @poly_find_loop_from_vert(%struct.MPoly* %poly, %struct.MLoop* %loopstart, i32 %vert) #0 !dbg !8144 {
entry:
  %retval = alloca i32, align 4
  %poly.addr = alloca %struct.MPoly*, align 8
  %loopstart.addr = alloca %struct.MLoop*, align 8
  %vert.addr = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.MPoly* %poly, %struct.MPoly** %poly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %poly.addr, metadata !8149, metadata !DIExpression()), !dbg !8150
  store %struct.MLoop* %loopstart, %struct.MLoop** %loopstart.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %loopstart.addr, metadata !8151, metadata !DIExpression()), !dbg !8152
  store i32 %vert, i32* %vert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vert.addr, metadata !8153, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8155, metadata !DIExpression()), !dbg !8156
  store i32 0, i32* %j, align 4, !dbg !8157
  br label %for.cond, !dbg !8159

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %j, align 4, !dbg !8160
  %1 = load %struct.MPoly*, %struct.MPoly** %poly.addr, align 8, !dbg !8162
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %1, i32 0, i32 1, !dbg !8163
  %2 = load i32, i32* %totloop, align 4, !dbg !8163
  %cmp = icmp slt i32 %0, %2, !dbg !8164
  br i1 %cmp, label %for.body, label %for.end, !dbg !8165

for.body:                                         ; preds = %for.cond
  %3 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !8166
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %3, i32 0, i32 0, !dbg !8169
  %4 = load i32, i32* %v, align 4, !dbg !8169
  %5 = load i32, i32* %vert.addr, align 4, !dbg !8170
  %cmp1 = icmp eq i32 %4, %5, !dbg !8171
  br i1 %cmp1, label %if.then, label %if.end, !dbg !8172

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %j, align 4, !dbg !8173
  store i32 %6, i32* %retval, align 4, !dbg !8174
  br label %return, !dbg !8174

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8175

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %j, align 4, !dbg !8176
  %inc = add nsw i32 %7, 1, !dbg !8176
  store i32 %inc, i32* %j, align 4, !dbg !8176
  %8 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !8177
  %incdec.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %8, i32 1, !dbg !8177
  store %struct.MLoop* %incdec.ptr, %struct.MLoop** %loopstart.addr, align 8, !dbg !8177
  br label %for.cond, !dbg !8178, !llvm.loop !8179

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !8181
  br label %return, !dbg !8181

return:                                           ; preds = %for.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !8182
  ret i32 %9, !dbg !8182
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @poly_get_adj_loops_from_vert(i32* %r_adj, %struct.MPoly* %poly, %struct.MLoop* %mloop, i32 %vert) #0 !dbg !8183 {
entry:
  %r_adj.addr = alloca i32*, align 8
  %poly.addr = alloca %struct.MPoly*, align 8
  %mloop.addr = alloca %struct.MLoop*, align 8
  %vert.addr = alloca i32, align 4
  %corner = alloca i32, align 4
  %ml = alloca %struct.MLoop*, align 8
  store i32* %r_adj, i32** %r_adj.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_adj.addr, metadata !8186, metadata !DIExpression()), !dbg !8187
  store %struct.MPoly* %poly, %struct.MPoly** %poly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %poly.addr, metadata !8188, metadata !DIExpression()), !dbg !8189
  store %struct.MLoop* %mloop, %struct.MLoop** %mloop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop.addr, metadata !8190, metadata !DIExpression()), !dbg !8191
  store i32 %vert, i32* %vert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vert.addr, metadata !8192, metadata !DIExpression()), !dbg !8193
  call void @llvm.dbg.declare(metadata i32* %corner, metadata !8194, metadata !DIExpression()), !dbg !8195
  %0 = load %struct.MPoly*, %struct.MPoly** %poly.addr, align 8, !dbg !8196
  %1 = load %struct.MLoop*, %struct.MLoop** %mloop.addr, align 8, !dbg !8197
  %2 = load %struct.MPoly*, %struct.MPoly** %poly.addr, align 8, !dbg !8198
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %2, i32 0, i32 0, !dbg !8199
  %3 = load i32, i32* %loopstart, align 4, !dbg !8199
  %idxprom = sext i32 %3 to i64, !dbg !8197
  %arrayidx = getelementptr inbounds %struct.MLoop, %struct.MLoop* %1, i64 %idxprom, !dbg !8197
  %4 = load i32, i32* %vert.addr, align 4, !dbg !8200
  %call = call i32 @poly_find_loop_from_vert(%struct.MPoly* %0, %struct.MLoop* %arrayidx, i32 %4), !dbg !8201
  store i32 %call, i32* %corner, align 4, !dbg !8195
  %5 = load i32, i32* %corner, align 4, !dbg !8202
  %cmp = icmp ne i32 %5, -1, !dbg !8204
  br i1 %cmp, label %if.then, label %if.end, !dbg !8205

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml, metadata !8206, metadata !DIExpression()), !dbg !8208
  %6 = load %struct.MLoop*, %struct.MLoop** %mloop.addr, align 8, !dbg !8209
  %7 = load %struct.MPoly*, %struct.MPoly** %poly.addr, align 8, !dbg !8210
  %loopstart1 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %7, i32 0, i32 0, !dbg !8211
  %8 = load i32, i32* %loopstart1, align 4, !dbg !8211
  %9 = load i32, i32* %corner, align 4, !dbg !8212
  %add = add nsw i32 %8, %9, !dbg !8213
  %idxprom2 = sext i32 %add to i64, !dbg !8209
  %arrayidx3 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %6, i64 %idxprom2, !dbg !8209
  store %struct.MLoop* %arrayidx3, %struct.MLoop** %ml, align 8, !dbg !8208
  %10 = load %struct.MLoop*, %struct.MLoop** %mloop.addr, align 8, !dbg !8214
  %11 = load %struct.MPoly*, %struct.MPoly** %poly.addr, align 8, !dbg !8214
  %loopstart4 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %11, i32 0, i32 0, !dbg !8214
  %12 = load i32, i32* %loopstart4, align 4, !dbg !8214
  %13 = load i32, i32* %corner, align 4, !dbg !8214
  %14 = load %struct.MPoly*, %struct.MPoly** %poly.addr, align 8, !dbg !8214
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %14, i32 0, i32 1, !dbg !8214
  %15 = load i32, i32* %totloop, align 4, !dbg !8214
  %add5 = add nsw i32 %13, %15, !dbg !8214
  %sub = sub nsw i32 %add5, 1, !dbg !8214
  %16 = load %struct.MPoly*, %struct.MPoly** %poly.addr, align 8, !dbg !8214
  %totloop6 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %16, i32 0, i32 1, !dbg !8214
  %17 = load i32, i32* %totloop6, align 4, !dbg !8214
  %rem = srem i32 %sub, %17, !dbg !8214
  %add7 = add nsw i32 %12, %rem, !dbg !8214
  %idxprom8 = sext i32 %add7 to i64, !dbg !8214
  %arrayidx9 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %10, i64 %idxprom8, !dbg !8214
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx9, i32 0, i32 0, !dbg !8215
  %18 = load i32, i32* %v, align 4, !dbg !8215
  %19 = load i32*, i32** %r_adj.addr, align 8, !dbg !8216
  %arrayidx10 = getelementptr inbounds i32, i32* %19, i64 0, !dbg !8216
  store i32 %18, i32* %arrayidx10, align 4, !dbg !8217
  %20 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !8218
  %v11 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %20, i32 0, i32 0, !dbg !8219
  %21 = load i32, i32* %v11, align 4, !dbg !8219
  %22 = load i32*, i32** %r_adj.addr, align 8, !dbg !8220
  %arrayidx12 = getelementptr inbounds i32, i32* %22, i64 1, !dbg !8220
  store i32 %21, i32* %arrayidx12, align 4, !dbg !8221
  %23 = load %struct.MLoop*, %struct.MLoop** %mloop.addr, align 8, !dbg !8222
  %24 = load %struct.MPoly*, %struct.MPoly** %poly.addr, align 8, !dbg !8222
  %loopstart13 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %24, i32 0, i32 0, !dbg !8222
  %25 = load i32, i32* %loopstart13, align 4, !dbg !8222
  %26 = load i32, i32* %corner, align 4, !dbg !8222
  %add14 = add nsw i32 %26, 1, !dbg !8222
  %27 = load %struct.MPoly*, %struct.MPoly** %poly.addr, align 8, !dbg !8222
  %totloop15 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %27, i32 0, i32 1, !dbg !8222
  %28 = load i32, i32* %totloop15, align 4, !dbg !8222
  %rem16 = srem i32 %add14, %28, !dbg !8222
  %add17 = add nsw i32 %25, %rem16, !dbg !8222
  %idxprom18 = sext i32 %add17 to i64, !dbg !8222
  %arrayidx19 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %23, i64 %idxprom18, !dbg !8222
  %v20 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx19, i32 0, i32 0, !dbg !8223
  %29 = load i32, i32* %v20, align 4, !dbg !8223
  %30 = load i32*, i32** %r_adj.addr, align 8, !dbg !8224
  %arrayidx21 = getelementptr inbounds i32, i32* %30, i64 2, !dbg !8224
  store i32 %29, i32* %arrayidx21, align 4, !dbg !8225
  br label %if.end, !dbg !8226

if.end:                                           ; preds = %if.then, %entry
  %31 = load i32, i32* %corner, align 4, !dbg !8227
  ret i32 %31, !dbg !8228
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_mesh_edge_other_vert(%struct.MEdge* %e, i32 %v) #0 !dbg !8229 {
entry:
  %retval = alloca i32, align 4
  %e.addr = alloca %struct.MEdge*, align 8
  %v.addr = alloca i32, align 4
  store %struct.MEdge* %e, %struct.MEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %e.addr, metadata !8234, metadata !DIExpression()), !dbg !8235
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !8236, metadata !DIExpression()), !dbg !8237
  %0 = load %struct.MEdge*, %struct.MEdge** %e.addr, align 8, !dbg !8238
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %0, i32 0, i32 0, !dbg !8240
  %1 = load i32, i32* %v1, align 4, !dbg !8240
  %2 = load i32, i32* %v.addr, align 4, !dbg !8241
  %cmp = icmp eq i32 %1, %2, !dbg !8242
  br i1 %cmp, label %if.then, label %if.else, !dbg !8243

if.then:                                          ; preds = %entry
  %3 = load %struct.MEdge*, %struct.MEdge** %e.addr, align 8, !dbg !8244
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %3, i32 0, i32 1, !dbg !8245
  %4 = load i32, i32* %v2, align 4, !dbg !8245
  store i32 %4, i32* %retval, align 4, !dbg !8246
  br label %return, !dbg !8246

if.else:                                          ; preds = %entry
  %5 = load %struct.MEdge*, %struct.MEdge** %e.addr, align 8, !dbg !8247
  %v21 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %5, i32 0, i32 1, !dbg !8249
  %6 = load i32, i32* %v21, align 4, !dbg !8249
  %7 = load i32, i32* %v.addr, align 4, !dbg !8250
  %cmp2 = icmp eq i32 %6, %7, !dbg !8251
  br i1 %cmp2, label %if.then3, label %if.else5, !dbg !8252

if.then3:                                         ; preds = %if.else
  %8 = load %struct.MEdge*, %struct.MEdge** %e.addr, align 8, !dbg !8253
  %v14 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %8, i32 0, i32 0, !dbg !8254
  %9 = load i32, i32* %v14, align 4, !dbg !8254
  store i32 %9, i32* %retval, align 4, !dbg !8255
  br label %return, !dbg !8255

if.else5:                                         ; preds = %if.else
  store i32 -1, i32* %retval, align 4, !dbg !8256
  br label %return, !dbg !8256

return:                                           ; preds = %if.else5, %if.then3, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !8257
  ret i32 %10, !dbg !8257
}

declare dso_local void @minmax_v3v3_v3(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_transform(%struct.Mesh* %me, [4 x float]* %mat, i8 zeroext %do_keys) #0 !dbg !8258 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  %do_keys.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %mvert = alloca %struct.MVert*, align 8
  %kb = alloca %struct.KeyBlock*, align 8
  %fp = alloca float*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !8261, metadata !DIExpression()), !dbg !8262
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !8263, metadata !DIExpression()), !dbg !8264
  store i8 %do_keys, i8* %do_keys.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_keys.addr, metadata !8265, metadata !DIExpression()), !dbg !8266
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8267, metadata !DIExpression()), !dbg !8268
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !8269, metadata !DIExpression()), !dbg !8270
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8271
  %mvert1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 15, !dbg !8272
  %1 = load %struct.MVert*, %struct.MVert** %mvert1, align 8, !dbg !8272
  store %struct.MVert* %1, %struct.MVert** %mvert, align 8, !dbg !8270
  store i32 0, i32* %i, align 4, !dbg !8273
  br label %for.cond, !dbg !8275

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !8276
  %3 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8278
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 26, !dbg !8279
  %4 = load i32, i32* %totvert, align 8, !dbg !8279
  %cmp = icmp slt i32 %2, %4, !dbg !8280
  br i1 %cmp, label %for.body, label %for.end, !dbg !8281

for.body:                                         ; preds = %for.cond
  %5 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !8282
  %6 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8283
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %6, i32 0, i32 0, !dbg !8284
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !8283
  call void @mul_m4_v3([4 x float]* %5, float* %arraydecay), !dbg !8285
  br label %for.inc, !dbg !8285

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !8286
  %inc = add nsw i32 %7, 1, !dbg !8286
  store i32 %inc, i32* %i, align 4, !dbg !8286
  %8 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8287
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %8, i32 1, !dbg !8287
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mvert, align 8, !dbg !8287
  br label %for.cond, !dbg !8288, !llvm.loop !8289

for.end:                                          ; preds = %for.cond
  %9 = load i8, i8* %do_keys.addr, align 1, !dbg !8291
  %conv = zext i8 %9 to i32, !dbg !8291
  %tobool = icmp ne i32 %conv, 0, !dbg !8291
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8293

land.lhs.true:                                    ; preds = %for.end
  %10 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8294
  %key = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 4, !dbg !8295
  %11 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !8295
  %tobool2 = icmp ne %struct.Key* %11, null, !dbg !8294
  br i1 %tobool2, label %if.then, label %if.end, !dbg !8296

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !8297, metadata !DIExpression()), !dbg !8299
  %12 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8300
  %key3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 4, !dbg !8302
  %13 = load %struct.Key*, %struct.Key** %key3, align 8, !dbg !8302
  %block = getelementptr inbounds %struct.Key, %struct.Key* %13, i32 0, i32 6, !dbg !8303
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block, i32 0, i32 0, !dbg !8304
  %14 = load i8*, i8** %first, align 8, !dbg !8304
  %15 = bitcast i8* %14 to %struct.KeyBlock*, !dbg !8300
  store %struct.KeyBlock* %15, %struct.KeyBlock** %kb, align 8, !dbg !8305
  br label %for.cond4, !dbg !8306

for.cond4:                                        ; preds = %for.inc12, %if.then
  %16 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !8307
  %tobool5 = icmp ne %struct.KeyBlock* %16, null, !dbg !8309
  br i1 %tobool5, label %for.body6, label %for.end13, !dbg !8309

for.body6:                                        ; preds = %for.cond4
  call void @llvm.dbg.declare(metadata float** %fp, metadata !8310, metadata !DIExpression()), !dbg !8312
  %17 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !8313
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %17, i32 0, i32 10, !dbg !8314
  %18 = load i8*, i8** %data, align 8, !dbg !8314
  %19 = bitcast i8* %18 to float*, !dbg !8313
  store float* %19, float** %fp, align 8, !dbg !8312
  %20 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !8315
  %totelem = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %20, i32 0, i32 8, !dbg !8317
  %21 = load i32, i32* %totelem, align 8, !dbg !8317
  store i32 %21, i32* %i, align 4, !dbg !8318
  br label %for.cond7, !dbg !8319

for.cond7:                                        ; preds = %for.inc10, %for.body6
  %22 = load i32, i32* %i, align 4, !dbg !8320
  %dec = add nsw i32 %22, -1, !dbg !8320
  store i32 %dec, i32* %i, align 4, !dbg !8320
  %tobool8 = icmp ne i32 %22, 0, !dbg !8322
  br i1 %tobool8, label %for.body9, label %for.end11, !dbg !8322

for.body9:                                        ; preds = %for.cond7
  %23 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !8323
  %24 = load float*, float** %fp, align 8, !dbg !8325
  call void @mul_m4_v3([4 x float]* %23, float* %24), !dbg !8326
  br label %for.inc10, !dbg !8327

for.inc10:                                        ; preds = %for.body9
  %25 = load float*, float** %fp, align 8, !dbg !8328
  %add.ptr = getelementptr inbounds float, float* %25, i64 3, !dbg !8328
  store float* %add.ptr, float** %fp, align 8, !dbg !8328
  br label %for.cond7, !dbg !8329, !llvm.loop !8330

for.end11:                                        ; preds = %for.cond7
  br label %for.inc12, !dbg !8332

for.inc12:                                        ; preds = %for.end11
  %26 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !8333
  %next = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %26, i32 0, i32 0, !dbg !8334
  %27 = load %struct.KeyBlock*, %struct.KeyBlock** %next, align 8, !dbg !8334
  store %struct.KeyBlock* %27, %struct.KeyBlock** %kb, align 8, !dbg !8335
  br label %for.cond4, !dbg !8336, !llvm.loop !8337

for.end13:                                        ; preds = %for.cond4
  br label %if.end, !dbg !8339

if.end:                                           ; preds = %for.end13, %land.lhs.true, %for.end
  ret void, !dbg !8340
}

declare dso_local void @mul_m4_v3([4 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_translate(%struct.Mesh* %me, float* %offset, i8 zeroext %do_keys) #0 !dbg !8341 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %offset.addr = alloca float*, align 8
  %do_keys.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %mvert = alloca %struct.MVert*, align 8
  %kb = alloca %struct.KeyBlock*, align 8
  %fp = alloca float*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !8344, metadata !DIExpression()), !dbg !8345
  store float* %offset, float** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata float** %offset.addr, metadata !8346, metadata !DIExpression()), !dbg !8347
  store i8 %do_keys, i8* %do_keys.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_keys.addr, metadata !8348, metadata !DIExpression()), !dbg !8349
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8350, metadata !DIExpression()), !dbg !8351
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8352
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 26, !dbg !8353
  %1 = load i32, i32* %totvert, align 8, !dbg !8353
  store i32 %1, i32* %i, align 4, !dbg !8351
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !8354, metadata !DIExpression()), !dbg !8355
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8356
  %mvert1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 15, !dbg !8358
  %3 = load %struct.MVert*, %struct.MVert** %mvert1, align 8, !dbg !8358
  store %struct.MVert* %3, %struct.MVert** %mvert, align 8, !dbg !8359
  br label %for.cond, !dbg !8360

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !8361
  %dec = add nsw i32 %4, -1, !dbg !8361
  store i32 %dec, i32* %i, align 4, !dbg !8361
  %tobool = icmp ne i32 %4, 0, !dbg !8363
  br i1 %tobool, label %for.body, label %for.end, !dbg !8363

for.body:                                         ; preds = %for.cond
  %5 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8364
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %5, i32 0, i32 0, !dbg !8366
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !8364
  %6 = load float*, float** %offset.addr, align 8, !dbg !8367
  call void @add_v3_v3(float* %arraydecay, float* %6), !dbg !8368
  br label %for.inc, !dbg !8369

for.inc:                                          ; preds = %for.body
  %7 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8370
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %7, i32 1, !dbg !8370
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mvert, align 8, !dbg !8370
  br label %for.cond, !dbg !8371, !llvm.loop !8372

for.end:                                          ; preds = %for.cond
  %8 = load i8, i8* %do_keys.addr, align 1, !dbg !8374
  %conv = zext i8 %8 to i32, !dbg !8374
  %tobool2 = icmp ne i32 %conv, 0, !dbg !8374
  br i1 %tobool2, label %land.lhs.true, label %if.end, !dbg !8376

land.lhs.true:                                    ; preds = %for.end
  %9 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8377
  %key = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 4, !dbg !8378
  %10 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !8378
  %tobool3 = icmp ne %struct.Key* %10, null, !dbg !8377
  br i1 %tobool3, label %if.then, label %if.end, !dbg !8379

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !8380, metadata !DIExpression()), !dbg !8382
  %11 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8383
  %key4 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 4, !dbg !8385
  %12 = load %struct.Key*, %struct.Key** %key4, align 8, !dbg !8385
  %block = getelementptr inbounds %struct.Key, %struct.Key* %12, i32 0, i32 6, !dbg !8386
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block, i32 0, i32 0, !dbg !8387
  %13 = load i8*, i8** %first, align 8, !dbg !8387
  %14 = bitcast i8* %13 to %struct.KeyBlock*, !dbg !8383
  store %struct.KeyBlock* %14, %struct.KeyBlock** %kb, align 8, !dbg !8388
  br label %for.cond5, !dbg !8389

for.cond5:                                        ; preds = %for.inc14, %if.then
  %15 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !8390
  %tobool6 = icmp ne %struct.KeyBlock* %15, null, !dbg !8392
  br i1 %tobool6, label %for.body7, label %for.end15, !dbg !8392

for.body7:                                        ; preds = %for.cond5
  call void @llvm.dbg.declare(metadata float** %fp, metadata !8393, metadata !DIExpression()), !dbg !8395
  %16 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !8396
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %16, i32 0, i32 10, !dbg !8397
  %17 = load i8*, i8** %data, align 8, !dbg !8397
  %18 = bitcast i8* %17 to float*, !dbg !8396
  store float* %18, float** %fp, align 8, !dbg !8395
  %19 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !8398
  %totelem = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %19, i32 0, i32 8, !dbg !8400
  %20 = load i32, i32* %totelem, align 8, !dbg !8400
  store i32 %20, i32* %i, align 4, !dbg !8401
  br label %for.cond8, !dbg !8402

for.cond8:                                        ; preds = %for.inc12, %for.body7
  %21 = load i32, i32* %i, align 4, !dbg !8403
  %dec9 = add nsw i32 %21, -1, !dbg !8403
  store i32 %dec9, i32* %i, align 4, !dbg !8403
  %tobool10 = icmp ne i32 %21, 0, !dbg !8405
  br i1 %tobool10, label %for.body11, label %for.end13, !dbg !8405

for.body11:                                       ; preds = %for.cond8
  %22 = load float*, float** %fp, align 8, !dbg !8406
  %23 = load float*, float** %offset.addr, align 8, !dbg !8408
  call void @add_v3_v3(float* %22, float* %23), !dbg !8409
  br label %for.inc12, !dbg !8410

for.inc12:                                        ; preds = %for.body11
  %24 = load float*, float** %fp, align 8, !dbg !8411
  %add.ptr = getelementptr inbounds float, float* %24, i64 3, !dbg !8411
  store float* %add.ptr, float** %fp, align 8, !dbg !8411
  br label %for.cond8, !dbg !8412, !llvm.loop !8413

for.end13:                                        ; preds = %for.cond8
  br label %for.inc14, !dbg !8415

for.inc14:                                        ; preds = %for.end13
  %25 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !8416
  %next = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %25, i32 0, i32 0, !dbg !8417
  %26 = load %struct.KeyBlock*, %struct.KeyBlock** %next, align 8, !dbg !8417
  store %struct.KeyBlock* %26, %struct.KeyBlock** %kb, align 8, !dbg !8418
  br label %for.cond5, !dbg !8419, !llvm.loop !8420

for.end15:                                        ; preds = %for.cond5
  br label %if.end, !dbg !8422

if.end:                                           ; preds = %for.end15, %land.lhs.true, %for.end
  ret void, !dbg !8423
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !8424 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8425, metadata !DIExpression()), !dbg !8426
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8427, metadata !DIExpression()), !dbg !8428
  %0 = load float*, float** %a.addr, align 8, !dbg !8429
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8429
  %1 = load float, float* %arrayidx, align 4, !dbg !8429
  %2 = load float*, float** %r.addr, align 8, !dbg !8430
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8430
  %3 = load float, float* %arrayidx1, align 4, !dbg !8431
  %add = fadd float %3, %1, !dbg !8431
  store float %add, float* %arrayidx1, align 4, !dbg !8431
  %4 = load float*, float** %a.addr, align 8, !dbg !8432
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !8432
  %5 = load float, float* %arrayidx2, align 4, !dbg !8432
  %6 = load float*, float** %r.addr, align 8, !dbg !8433
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !8433
  %7 = load float, float* %arrayidx3, align 4, !dbg !8434
  %add4 = fadd float %7, %5, !dbg !8434
  store float %add4, float* %arrayidx3, align 4, !dbg !8434
  %8 = load float*, float** %a.addr, align 8, !dbg !8435
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !8435
  %9 = load float, float* %arrayidx5, align 4, !dbg !8435
  %10 = load float*, float** %r.addr, align 8, !dbg !8436
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !8436
  %11 = load float, float* %arrayidx6, align 4, !dbg !8437
  %add7 = fadd float %11, %9, !dbg !8437
  store float %add7, float* %arrayidx6, align 4, !dbg !8437
  ret void, !dbg !8438
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_ensure_navmesh(%struct.Mesh* %me) #0 !dbg !8439 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %i = alloca i32, align 4
  %numFaces = alloca i32, align 4
  %recastData = alloca i32*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !8440, metadata !DIExpression()), !dbg !8441
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8442
  %pdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 24, !dbg !8444
  %call = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %pdata, i32 24), !dbg !8445
  %tobool = icmp ne i8 %call, 0, !dbg !8445
  br i1 %tobool, label %if.end, label %if.then, !dbg !8446

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8447, metadata !DIExpression()), !dbg !8449
  call void @llvm.dbg.declare(metadata i32* %numFaces, metadata !8450, metadata !DIExpression()), !dbg !8451
  %1 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8452
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %1, i32 0, i32 30, !dbg !8453
  %2 = load i32, i32* %totpoly, align 8, !dbg !8453
  store i32 %2, i32* %numFaces, align 4, !dbg !8451
  call void @llvm.dbg.declare(metadata i32** %recastData, metadata !8454, metadata !DIExpression()), !dbg !8455
  %3 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8456
  %4 = load i32, i32* %numFaces, align 4, !dbg !8457
  %conv = sext i32 %4 to i64, !dbg !8457
  %mul = mul i64 %conv, 4, !dbg !8458
  %call1 = call i8* %3(i64 %mul, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.BKE_mesh_ensure_navmesh, i64 0, i64 0)), !dbg !8456
  %5 = bitcast i8* %call1 to i32*, !dbg !8459
  store i32* %5, i32** %recastData, align 8, !dbg !8460
  store i32 0, i32* %i, align 4, !dbg !8461
  br label %for.cond, !dbg !8463

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i32, i32* %i, align 4, !dbg !8464
  %7 = load i32, i32* %numFaces, align 4, !dbg !8466
  %cmp = icmp slt i32 %6, %7, !dbg !8467
  br i1 %cmp, label %for.body, label %for.end, !dbg !8468

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !8469
  %add = add nsw i32 %8, 1, !dbg !8471
  %9 = load i32*, i32** %recastData, align 8, !dbg !8472
  %10 = load i32, i32* %i, align 4, !dbg !8473
  %idxprom = sext i32 %10 to i64, !dbg !8472
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !8472
  store i32 %add, i32* %arrayidx, align 4, !dbg !8474
  br label %for.inc, !dbg !8475

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !8476
  %inc = add nsw i32 %11, 1, !dbg !8476
  store i32 %inc, i32* %i, align 4, !dbg !8476
  br label %for.cond, !dbg !8477, !llvm.loop !8478

for.end:                                          ; preds = %for.cond
  %12 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8480
  %pdata3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 24, !dbg !8481
  %13 = load i32*, i32** %recastData, align 8, !dbg !8482
  %14 = bitcast i32* %13 to i8*, !dbg !8482
  %15 = load i32, i32* %numFaces, align 4, !dbg !8483
  %call4 = call i8* @CustomData_add_layer_named(%struct.CustomData* %pdata3, i32 24, i32 0, i8* %14, i32 %15, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0)), !dbg !8484
  br label %if.end, !dbg !8485

if.end:                                           ; preds = %for.end, %entry
  ret void, !dbg !8486
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_tessface_calc(%struct.Mesh* %mesh) #0 !dbg !8487 {
entry:
  %mesh.addr = alloca %struct.Mesh*, align 8
  store %struct.Mesh* %mesh, %struct.Mesh** %mesh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %mesh.addr, metadata !8488, metadata !DIExpression()), !dbg !8489
  %0 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !8490
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 23, !dbg !8491
  %1 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !8492
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %1, i32 0, i32 25, !dbg !8493
  %2 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !8494
  %pdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 24, !dbg !8495
  %3 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !8496
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 15, !dbg !8497
  %4 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8497
  %5 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !8498
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 28, !dbg !8499
  %6 = load i32, i32* %totface, align 8, !dbg !8499
  %7 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !8500
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 31, !dbg !8501
  %8 = load i32, i32* %totloop, align 4, !dbg !8501
  %9 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !8502
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 30, !dbg !8503
  %10 = load i32, i32* %totpoly, align 8, !dbg !8503
  %call = call i32 @BKE_mesh_recalc_tessellation(%struct.CustomData* %fdata, %struct.CustomData* %ldata, %struct.CustomData* %pdata, %struct.MVert* %4, i32 %6, i32 %8, i32 %10, i8 zeroext 0), !dbg !8504
  %11 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !8505
  %totface1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 28, !dbg !8506
  store i32 %call, i32* %totface1, align 8, !dbg !8507
  %12 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !8508
  call void @BKE_mesh_update_customdata_pointers(%struct.Mesh* %12, i8 zeroext 1), !dbg !8509
  ret void, !dbg !8510
}

declare dso_local i32 @BKE_mesh_recalc_tessellation(%struct.CustomData*, %struct.CustomData*, %struct.CustomData*, %struct.MVert*, i32, i32, i32, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_tessface_ensure(%struct.Mesh* %mesh) #0 !dbg !8511 {
entry:
  %mesh.addr = alloca %struct.Mesh*, align 8
  store %struct.Mesh* %mesh, %struct.Mesh** %mesh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %mesh.addr, metadata !8512, metadata !DIExpression()), !dbg !8513
  %0 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !8514
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 30, !dbg !8516
  %1 = load i32, i32* %totpoly, align 8, !dbg !8516
  %tobool = icmp ne i32 %1, 0, !dbg !8514
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8517

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !8518
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 28, !dbg !8519
  %3 = load i32, i32* %totface, align 8, !dbg !8519
  %cmp = icmp eq i32 %3, 0, !dbg !8520
  br i1 %cmp, label %if.then, label %if.end, !dbg !8521

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !8522
  call void @BKE_mesh_tessface_calc(%struct.Mesh* %4), !dbg !8524
  br label %if.end, !dbg !8525

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !8526
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_tessface_clear(%struct.Mesh* %mesh) #0 !dbg !8527 {
entry:
  %mesh.addr = alloca %struct.Mesh*, align 8
  store %struct.Mesh* %mesh, %struct.Mesh** %mesh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %mesh.addr, metadata !8528, metadata !DIExpression()), !dbg !8529
  %0 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !8530
  call void @mesh_tessface_clear_intern(%struct.Mesh* %0, i32 1), !dbg !8531
  ret void, !dbg !8532
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_do_versions_cd_flag_init(%struct.Mesh* %mesh) #0 !dbg !8533 {
entry:
  %mesh.addr = alloca %struct.Mesh*, align 8
  %mv = alloca %struct.MVert*, align 8
  %med = alloca %struct.MEdge*, align 8
  %i = alloca i32, align 4
  store %struct.Mesh* %mesh, %struct.Mesh** %mesh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %mesh.addr, metadata !8534, metadata !DIExpression()), !dbg !8535
  %0 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !8536
  %cd_flag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 41, !dbg !8536
  %1 = load i8, i8* %cd_flag, align 8, !dbg !8536
  %tobool = icmp ne i8 %1, 0, !dbg !8536
  br i1 %tobool, label %if.then, label %if.else, !dbg !8538

if.then:                                          ; preds = %entry
  br label %if.end45, !dbg !8539

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !8541, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.declare(metadata %struct.MEdge** %med, metadata !8544, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8546, metadata !DIExpression()), !dbg !8547
  %2 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !8548
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 15, !dbg !8550
  %3 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8550
  store %struct.MVert* %3, %struct.MVert** %mv, align 8, !dbg !8551
  store i32 0, i32* %i, align 4, !dbg !8552
  br label %for.cond, !dbg !8553

for.cond:                                         ; preds = %for.inc, %if.else
  %4 = load i32, i32* %i, align 4, !dbg !8554
  %5 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !8556
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 26, !dbg !8557
  %6 = load i32, i32* %totvert, align 8, !dbg !8557
  %cmp = icmp slt i32 %4, %6, !dbg !8558
  br i1 %cmp, label %for.body, label %for.end, !dbg !8559

for.body:                                         ; preds = %for.cond
  %7 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !8560
  %bweight = getelementptr inbounds %struct.MVert, %struct.MVert* %7, i32 0, i32 3, !dbg !8563
  %8 = load i8, i8* %bweight, align 1, !dbg !8563
  %conv = zext i8 %8 to i32, !dbg !8560
  %cmp1 = icmp ne i32 %conv, 0, !dbg !8564
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !8565

if.then3:                                         ; preds = %for.body
  %9 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !8566
  %cd_flag4 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 41, !dbg !8568
  %10 = load i8, i8* %cd_flag4, align 8, !dbg !8569
  %conv5 = zext i8 %10 to i32, !dbg !8569
  %or = or i32 %conv5, 1, !dbg !8569
  %conv6 = trunc i32 %or to i8, !dbg !8569
  store i8 %conv6, i8* %cd_flag4, align 8, !dbg !8569
  br label %for.end, !dbg !8570

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8571

for.inc:                                          ; preds = %if.end
  %11 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !8572
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %11, i32 1, !dbg !8572
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mv, align 8, !dbg !8572
  %12 = load i32, i32* %i, align 4, !dbg !8573
  %inc = add nsw i32 %12, 1, !dbg !8573
  store i32 %inc, i32* %i, align 4, !dbg !8573
  br label %for.cond, !dbg !8574, !llvm.loop !8575

for.end:                                          ; preds = %if.then3, %for.cond
  %13 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !8577
  %medge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %13, i32 0, i32 16, !dbg !8579
  %14 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !8579
  store %struct.MEdge* %14, %struct.MEdge** %med, align 8, !dbg !8580
  store i32 0, i32* %i, align 4, !dbg !8581
  br label %for.cond7, !dbg !8582

for.cond7:                                        ; preds = %for.inc41, %for.end
  %15 = load i32, i32* %i, align 4, !dbg !8583
  %16 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !8585
  %totedge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %16, i32 0, i32 27, !dbg !8586
  %17 = load i32, i32* %totedge, align 4, !dbg !8586
  %cmp8 = icmp slt i32 %15, %17, !dbg !8587
  br i1 %cmp8, label %for.body10, label %for.end44, !dbg !8588

for.body10:                                       ; preds = %for.cond7
  %18 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !8589
  %bweight11 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %18, i32 0, i32 3, !dbg !8592
  %19 = load i8, i8* %bweight11, align 1, !dbg !8592
  %conv12 = zext i8 %19 to i32, !dbg !8589
  %cmp13 = icmp ne i32 %conv12, 0, !dbg !8593
  br i1 %cmp13, label %if.then15, label %if.end25, !dbg !8594

if.then15:                                        ; preds = %for.body10
  %20 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !8595
  %cd_flag16 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %20, i32 0, i32 41, !dbg !8597
  %21 = load i8, i8* %cd_flag16, align 8, !dbg !8598
  %conv17 = zext i8 %21 to i32, !dbg !8598
  %or18 = or i32 %conv17, 2, !dbg !8598
  %conv19 = trunc i32 %or18 to i8, !dbg !8598
  store i8 %conv19, i8* %cd_flag16, align 8, !dbg !8598
  %22 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !8599
  %cd_flag20 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %22, i32 0, i32 41, !dbg !8601
  %23 = load i8, i8* %cd_flag20, align 8, !dbg !8601
  %conv21 = zext i8 %23 to i32, !dbg !8599
  %and = and i32 %conv21, 4, !dbg !8602
  %tobool22 = icmp ne i32 %and, 0, !dbg !8602
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !8603

if.then23:                                        ; preds = %if.then15
  br label %for.end44, !dbg !8604

if.end24:                                         ; preds = %if.then15
  br label %if.end25, !dbg !8606

if.end25:                                         ; preds = %if.end24, %for.body10
  %24 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !8607
  %crease = getelementptr inbounds %struct.MEdge, %struct.MEdge* %24, i32 0, i32 2, !dbg !8609
  %25 = load i8, i8* %crease, align 4, !dbg !8609
  %conv26 = zext i8 %25 to i32, !dbg !8607
  %cmp27 = icmp ne i32 %conv26, 0, !dbg !8610
  br i1 %cmp27, label %if.then29, label %if.end40, !dbg !8611

if.then29:                                        ; preds = %if.end25
  %26 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !8612
  %cd_flag30 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %26, i32 0, i32 41, !dbg !8614
  %27 = load i8, i8* %cd_flag30, align 8, !dbg !8615
  %conv31 = zext i8 %27 to i32, !dbg !8615
  %or32 = or i32 %conv31, 4, !dbg !8615
  %conv33 = trunc i32 %or32 to i8, !dbg !8615
  store i8 %conv33, i8* %cd_flag30, align 8, !dbg !8615
  %28 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !8616
  %cd_flag34 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %28, i32 0, i32 41, !dbg !8618
  %29 = load i8, i8* %cd_flag34, align 8, !dbg !8618
  %conv35 = zext i8 %29 to i32, !dbg !8616
  %and36 = and i32 %conv35, 2, !dbg !8619
  %tobool37 = icmp ne i32 %and36, 0, !dbg !8619
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !8620

if.then38:                                        ; preds = %if.then29
  br label %for.end44, !dbg !8621

if.end39:                                         ; preds = %if.then29
  br label %if.end40, !dbg !8623

if.end40:                                         ; preds = %if.end39, %if.end25
  br label %for.inc41, !dbg !8624

for.inc41:                                        ; preds = %if.end40
  %30 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !8625
  %incdec.ptr42 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %30, i32 1, !dbg !8625
  store %struct.MEdge* %incdec.ptr42, %struct.MEdge** %med, align 8, !dbg !8625
  %31 = load i32, i32* %i, align 4, !dbg !8626
  %inc43 = add nsw i32 %31, 1, !dbg !8626
  store i32 %inc43, i32* %i, align 4, !dbg !8626
  br label %for.cond7, !dbg !8627, !llvm.loop !8628

for.end44:                                        ; preds = %if.then38, %if.then23, %for.cond7
  br label %if.end45

if.end45:                                         ; preds = %if.then, %for.end44
  ret void, !dbg !8630
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_mselect_clear(%struct.Mesh* %me) #0 !dbg !8631 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !8632, metadata !DIExpression()), !dbg !8633
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8634
  %mselect = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 6, !dbg !8636
  %1 = load %struct.MSelect*, %struct.MSelect** %mselect, align 8, !dbg !8636
  %tobool = icmp ne %struct.MSelect* %1, null, !dbg !8634
  br i1 %tobool, label %if.then, label %if.end, !dbg !8637

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8638
  %3 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8640
  %mselect1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 6, !dbg !8641
  %4 = load %struct.MSelect*, %struct.MSelect** %mselect1, align 8, !dbg !8641
  %5 = bitcast %struct.MSelect* %4 to i8*, !dbg !8640
  call void %2(i8* %5), !dbg !8638
  %6 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8642
  %mselect2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 6, !dbg !8643
  store %struct.MSelect* null, %struct.MSelect** %mselect2, align 8, !dbg !8644
  br label %if.end, !dbg !8645

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8646
  %totselect = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 29, !dbg !8647
  store i32 0, i32* %totselect, align 4, !dbg !8648
  ret void, !dbg !8649
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_mselect_validate(%struct.Mesh* %me) #0 !dbg !8650 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %mselect_src = alloca %struct.MSelect*, align 8
  %mselect_dst = alloca %struct.MSelect*, align 8
  %i_src = alloca i32, align 4
  %i_dst = alloca i32, align 4
  %index = alloca i32, align 4
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !8651, metadata !DIExpression()), !dbg !8652
  call void @llvm.dbg.declare(metadata %struct.MSelect** %mselect_src, metadata !8653, metadata !DIExpression()), !dbg !8656
  call void @llvm.dbg.declare(metadata %struct.MSelect** %mselect_dst, metadata !8657, metadata !DIExpression()), !dbg !8658
  call void @llvm.dbg.declare(metadata i32* %i_src, metadata !8659, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.declare(metadata i32* %i_dst, metadata !8661, metadata !DIExpression()), !dbg !8662
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8663
  %totselect = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 29, !dbg !8665
  %1 = load i32, i32* %totselect, align 4, !dbg !8665
  %cmp = icmp eq i32 %1, 0, !dbg !8666
  br i1 %cmp, label %if.then, label %if.end, !dbg !8667

if.then:                                          ; preds = %entry
  br label %return, !dbg !8668

if.end:                                           ; preds = %entry
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8669
  %mselect = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 6, !dbg !8670
  %3 = load %struct.MSelect*, %struct.MSelect** %mselect, align 8, !dbg !8670
  store %struct.MSelect* %3, %struct.MSelect** %mselect_src, align 8, !dbg !8671
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8672
  %5 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8673
  %totselect1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 29, !dbg !8674
  %6 = load i32, i32* %totselect1, align 4, !dbg !8674
  %conv = sext i32 %6 to i64, !dbg !8675
  %mul = mul i64 8, %conv, !dbg !8676
  %call = call i8* %4(i64 %mul, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0)), !dbg !8672
  %7 = bitcast i8* %call to %struct.MSelect*, !dbg !8672
  store %struct.MSelect* %7, %struct.MSelect** %mselect_dst, align 8, !dbg !8677
  store i32 0, i32* %i_src, align 4, !dbg !8678
  store i32 0, i32* %i_dst, align 4, !dbg !8680
  br label %for.cond, !dbg !8681

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %i_src, align 4, !dbg !8682
  %9 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8684
  %totselect2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 29, !dbg !8685
  %10 = load i32, i32* %totselect2, align 4, !dbg !8685
  %cmp3 = icmp slt i32 %8, %10, !dbg !8686
  br i1 %cmp3, label %for.body, label %for.end, !dbg !8687

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8688, metadata !DIExpression()), !dbg !8690
  %11 = load %struct.MSelect*, %struct.MSelect** %mselect_src, align 8, !dbg !8691
  %12 = load i32, i32* %i_src, align 4, !dbg !8692
  %idxprom = sext i32 %12 to i64, !dbg !8691
  %arrayidx = getelementptr inbounds %struct.MSelect, %struct.MSelect* %11, i64 %idxprom, !dbg !8691
  %index5 = getelementptr inbounds %struct.MSelect, %struct.MSelect* %arrayidx, i32 0, i32 0, !dbg !8693
  %13 = load i32, i32* %index5, align 4, !dbg !8693
  store i32 %13, i32* %index, align 4, !dbg !8690
  %14 = load %struct.MSelect*, %struct.MSelect** %mselect_src, align 8, !dbg !8694
  %15 = load i32, i32* %i_src, align 4, !dbg !8695
  %idxprom6 = sext i32 %15 to i64, !dbg !8694
  %arrayidx7 = getelementptr inbounds %struct.MSelect, %struct.MSelect* %14, i64 %idxprom6, !dbg !8694
  %type = getelementptr inbounds %struct.MSelect, %struct.MSelect* %arrayidx7, i32 0, i32 1, !dbg !8696
  %16 = load i32, i32* %type, align 4, !dbg !8696
  switch i32 %16, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb17
    i32 2, label %sw.bb31
  ], !dbg !8697

sw.bb:                                            ; preds = %for.body
  %17 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8698
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 15, !dbg !8702
  %18 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8702
  %19 = load i32, i32* %index, align 4, !dbg !8703
  %idxprom8 = sext i32 %19 to i64, !dbg !8698
  %arrayidx9 = getelementptr inbounds %struct.MVert, %struct.MVert* %18, i64 %idxprom8, !dbg !8698
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx9, i32 0, i32 2, !dbg !8704
  %20 = load i8, i8* %flag, align 2, !dbg !8704
  %conv10 = zext i8 %20 to i32, !dbg !8698
  %and = and i32 %conv10, 1, !dbg !8705
  %tobool = icmp ne i32 %and, 0, !dbg !8705
  br i1 %tobool, label %if.then11, label %if.end16, !dbg !8706

if.then11:                                        ; preds = %sw.bb
  %21 = load %struct.MSelect*, %struct.MSelect** %mselect_dst, align 8, !dbg !8707
  %22 = load i32, i32* %i_dst, align 4, !dbg !8709
  %idxprom12 = sext i32 %22 to i64, !dbg !8707
  %arrayidx13 = getelementptr inbounds %struct.MSelect, %struct.MSelect* %21, i64 %idxprom12, !dbg !8707
  %23 = load %struct.MSelect*, %struct.MSelect** %mselect_src, align 8, !dbg !8710
  %24 = load i32, i32* %i_src, align 4, !dbg !8711
  %idxprom14 = sext i32 %24 to i64, !dbg !8710
  %arrayidx15 = getelementptr inbounds %struct.MSelect, %struct.MSelect* %23, i64 %idxprom14, !dbg !8710
  %25 = bitcast %struct.MSelect* %arrayidx13 to i8*, !dbg !8710
  %26 = bitcast %struct.MSelect* %arrayidx15 to i8*, !dbg !8710
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %26, i64 8, i1 false), !dbg !8710
  %27 = load i32, i32* %i_dst, align 4, !dbg !8712
  %inc = add nsw i32 %27, 1, !dbg !8712
  store i32 %inc, i32* %i_dst, align 4, !dbg !8712
  br label %if.end16, !dbg !8713

if.end16:                                         ; preds = %if.then11, %sw.bb
  br label %sw.epilog, !dbg !8714

sw.bb17:                                          ; preds = %for.body
  %28 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8715
  %medge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %28, i32 0, i32 16, !dbg !8718
  %29 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !8718
  %30 = load i32, i32* %index, align 4, !dbg !8719
  %idxprom18 = sext i32 %30 to i64, !dbg !8715
  %arrayidx19 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %29, i64 %idxprom18, !dbg !8715
  %flag20 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %arrayidx19, i32 0, i32 4, !dbg !8720
  %31 = load i16, i16* %flag20, align 2, !dbg !8720
  %conv21 = sext i16 %31 to i32, !dbg !8715
  %and22 = and i32 %conv21, 1, !dbg !8721
  %tobool23 = icmp ne i32 %and22, 0, !dbg !8721
  br i1 %tobool23, label %if.then24, label %if.end30, !dbg !8722

if.then24:                                        ; preds = %sw.bb17
  %32 = load %struct.MSelect*, %struct.MSelect** %mselect_dst, align 8, !dbg !8723
  %33 = load i32, i32* %i_dst, align 4, !dbg !8725
  %idxprom25 = sext i32 %33 to i64, !dbg !8723
  %arrayidx26 = getelementptr inbounds %struct.MSelect, %struct.MSelect* %32, i64 %idxprom25, !dbg !8723
  %34 = load %struct.MSelect*, %struct.MSelect** %mselect_src, align 8, !dbg !8726
  %35 = load i32, i32* %i_src, align 4, !dbg !8727
  %idxprom27 = sext i32 %35 to i64, !dbg !8726
  %arrayidx28 = getelementptr inbounds %struct.MSelect, %struct.MSelect* %34, i64 %idxprom27, !dbg !8726
  %36 = bitcast %struct.MSelect* %arrayidx26 to i8*, !dbg !8726
  %37 = bitcast %struct.MSelect* %arrayidx28 to i8*, !dbg !8726
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 8, i1 false), !dbg !8726
  %38 = load i32, i32* %i_dst, align 4, !dbg !8728
  %inc29 = add nsw i32 %38, 1, !dbg !8728
  store i32 %inc29, i32* %i_dst, align 4, !dbg !8728
  br label %if.end30, !dbg !8729

if.end30:                                         ; preds = %if.then24, %sw.bb17
  br label %sw.epilog, !dbg !8730

sw.bb31:                                          ; preds = %for.body
  %39 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8731
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %39, i32 0, i32 7, !dbg !8734
  %40 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !8734
  %41 = load i32, i32* %index, align 4, !dbg !8735
  %idxprom32 = sext i32 %41 to i64, !dbg !8731
  %arrayidx33 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %40, i64 %idxprom32, !dbg !8731
  %flag34 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx33, i32 0, i32 3, !dbg !8736
  %42 = load i8, i8* %flag34, align 2, !dbg !8736
  %conv35 = zext i8 %42 to i32, !dbg !8731
  %and36 = and i32 %conv35, 1, !dbg !8737
  %tobool37 = icmp ne i32 %and36, 0, !dbg !8737
  br i1 %tobool37, label %if.then38, label %if.end44, !dbg !8738

if.then38:                                        ; preds = %sw.bb31
  %43 = load %struct.MSelect*, %struct.MSelect** %mselect_dst, align 8, !dbg !8739
  %44 = load i32, i32* %i_dst, align 4, !dbg !8741
  %idxprom39 = sext i32 %44 to i64, !dbg !8739
  %arrayidx40 = getelementptr inbounds %struct.MSelect, %struct.MSelect* %43, i64 %idxprom39, !dbg !8739
  %45 = load %struct.MSelect*, %struct.MSelect** %mselect_src, align 8, !dbg !8742
  %46 = load i32, i32* %i_src, align 4, !dbg !8743
  %idxprom41 = sext i32 %46 to i64, !dbg !8742
  %arrayidx42 = getelementptr inbounds %struct.MSelect, %struct.MSelect* %45, i64 %idxprom41, !dbg !8742
  %47 = bitcast %struct.MSelect* %arrayidx40 to i8*, !dbg !8742
  %48 = bitcast %struct.MSelect* %arrayidx42 to i8*, !dbg !8742
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* align 4 %48, i64 8, i1 false), !dbg !8742
  %49 = load i32, i32* %i_dst, align 4, !dbg !8744
  %inc43 = add nsw i32 %49, 1, !dbg !8744
  store i32 %inc43, i32* %i_dst, align 4, !dbg !8744
  br label %if.end44, !dbg !8745

if.end44:                                         ; preds = %if.then38, %sw.bb31
  br label %sw.epilog, !dbg !8746

sw.default:                                       ; preds = %for.body
  br label %sw.epilog, !dbg !8747

sw.epilog:                                        ; preds = %sw.default, %if.end44, %if.end30, %if.end16
  br label %for.inc, !dbg !8749

for.inc:                                          ; preds = %sw.epilog
  %50 = load i32, i32* %i_src, align 4, !dbg !8750
  %inc45 = add nsw i32 %50, 1, !dbg !8750
  store i32 %inc45, i32* %i_src, align 4, !dbg !8750
  br label %for.cond, !dbg !8751, !llvm.loop !8752

for.end:                                          ; preds = %for.cond
  %51 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8754
  %52 = load %struct.MSelect*, %struct.MSelect** %mselect_src, align 8, !dbg !8755
  %53 = bitcast %struct.MSelect* %52 to i8*, !dbg !8755
  call void %51(i8* %53), !dbg !8754
  %54 = load i32, i32* %i_dst, align 4, !dbg !8756
  %cmp46 = icmp eq i32 %54, 0, !dbg !8758
  br i1 %cmp46, label %if.then48, label %if.else, !dbg !8759

if.then48:                                        ; preds = %for.end
  %55 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8760
  %56 = load %struct.MSelect*, %struct.MSelect** %mselect_dst, align 8, !dbg !8762
  %57 = bitcast %struct.MSelect* %56 to i8*, !dbg !8762
  call void %55(i8* %57), !dbg !8760
  store %struct.MSelect* null, %struct.MSelect** %mselect_dst, align 8, !dbg !8763
  br label %if.end57, !dbg !8764

if.else:                                          ; preds = %for.end
  %58 = load i32, i32* %i_dst, align 4, !dbg !8765
  %59 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8767
  %totselect49 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %59, i32 0, i32 29, !dbg !8768
  %60 = load i32, i32* %totselect49, align 4, !dbg !8768
  %cmp50 = icmp ne i32 %58, %60, !dbg !8769
  br i1 %cmp50, label %if.then52, label %if.end56, !dbg !8770

if.then52:                                        ; preds = %if.else
  %61 = load i8* (i8*, i64, i8*)*, i8* (i8*, i64, i8*)** @MEM_reallocN_id, align 8, !dbg !8771
  %62 = load %struct.MSelect*, %struct.MSelect** %mselect_dst, align 8, !dbg !8771
  %63 = bitcast %struct.MSelect* %62 to i8*, !dbg !8771
  %64 = load i32, i32* %i_dst, align 4, !dbg !8771
  %conv53 = sext i32 %64 to i64, !dbg !8771
  %mul54 = mul i64 8, %conv53, !dbg !8771
  %call55 = call i8* %61(i8* %63, i64 %mul54, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.BKE_mesh_mselect_validate, i64 0, i64 0)), !dbg !8771
  %65 = bitcast i8* %call55 to %struct.MSelect*, !dbg !8771
  store %struct.MSelect* %65, %struct.MSelect** %mselect_dst, align 8, !dbg !8773
  br label %if.end56, !dbg !8774

if.end56:                                         ; preds = %if.then52, %if.else
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then48
  %66 = load i32, i32* %i_dst, align 4, !dbg !8775
  %67 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8776
  %totselect58 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %67, i32 0, i32 29, !dbg !8777
  store i32 %66, i32* %totselect58, align 4, !dbg !8778
  %68 = load %struct.MSelect*, %struct.MSelect** %mselect_dst, align 8, !dbg !8779
  %69 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8780
  %mselect59 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %69, i32 0, i32 6, !dbg !8781
  store %struct.MSelect* %68, %struct.MSelect** %mselect59, align 8, !dbg !8782
  br label %return, !dbg !8783

return:                                           ; preds = %if.end57, %if.then
  ret void, !dbg !8783
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_mesh_mselect_find(%struct.Mesh* %me, i32 %index, i32 %type) #0 !dbg !8784 {
entry:
  %retval = alloca i32, align 4
  %me.addr = alloca %struct.Mesh*, align 8
  %index.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !8787, metadata !DIExpression()), !dbg !8788
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8789, metadata !DIExpression()), !dbg !8790
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8791, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8793, metadata !DIExpression()), !dbg !8794
  store i32 0, i32* %i, align 4, !dbg !8795
  br label %for.cond, !dbg !8797

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8798
  %1 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8800
  %totselect = getelementptr inbounds %struct.Mesh, %struct.Mesh* %1, i32 0, i32 29, !dbg !8801
  %2 = load i32, i32* %totselect, align 4, !dbg !8801
  %cmp = icmp slt i32 %0, %2, !dbg !8802
  br i1 %cmp, label %for.body, label %for.end, !dbg !8803

for.body:                                         ; preds = %for.cond
  %3 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8804
  %mselect = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 6, !dbg !8807
  %4 = load %struct.MSelect*, %struct.MSelect** %mselect, align 8, !dbg !8807
  %5 = load i32, i32* %i, align 4, !dbg !8808
  %idxprom = sext i32 %5 to i64, !dbg !8804
  %arrayidx = getelementptr inbounds %struct.MSelect, %struct.MSelect* %4, i64 %idxprom, !dbg !8804
  %index1 = getelementptr inbounds %struct.MSelect, %struct.MSelect* %arrayidx, i32 0, i32 0, !dbg !8809
  %6 = load i32, i32* %index1, align 4, !dbg !8809
  %7 = load i32, i32* %index.addr, align 4, !dbg !8810
  %cmp2 = icmp eq i32 %6, %7, !dbg !8811
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !8812

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8813
  %mselect3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 6, !dbg !8814
  %9 = load %struct.MSelect*, %struct.MSelect** %mselect3, align 8, !dbg !8814
  %10 = load i32, i32* %i, align 4, !dbg !8815
  %idxprom4 = sext i32 %10 to i64, !dbg !8813
  %arrayidx5 = getelementptr inbounds %struct.MSelect, %struct.MSelect* %9, i64 %idxprom4, !dbg !8813
  %type6 = getelementptr inbounds %struct.MSelect, %struct.MSelect* %arrayidx5, i32 0, i32 1, !dbg !8816
  %11 = load i32, i32* %type6, align 4, !dbg !8816
  %12 = load i32, i32* %type.addr, align 4, !dbg !8817
  %cmp7 = icmp eq i32 %11, %12, !dbg !8818
  br i1 %cmp7, label %if.then, label %if.end, !dbg !8819

if.then:                                          ; preds = %land.lhs.true
  %13 = load i32, i32* %i, align 4, !dbg !8820
  store i32 %13, i32* %retval, align 4, !dbg !8822
  br label %return, !dbg !8822

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !8823

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %i, align 4, !dbg !8824
  %inc = add nsw i32 %14, 1, !dbg !8824
  store i32 %inc, i32* %i, align 4, !dbg !8824
  br label %for.cond, !dbg !8825, !llvm.loop !8826

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !8828
  br label %return, !dbg !8828

return:                                           ; preds = %for.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !8829
  ret i32 %15, !dbg !8829
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_mesh_mselect_active_get(%struct.Mesh* %me, i32 %type) #0 !dbg !8830 {
entry:
  %retval = alloca i32, align 4
  %me.addr = alloca %struct.Mesh*, align 8
  %type.addr = alloca i32, align 4
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !8833, metadata !DIExpression()), !dbg !8834
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8835, metadata !DIExpression()), !dbg !8836
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8837
  %totselect = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 29, !dbg !8839
  %1 = load i32, i32* %totselect, align 4, !dbg !8839
  %tobool = icmp ne i32 %1, 0, !dbg !8837
  br i1 %tobool, label %if.then, label %if.end9, !dbg !8840

if.then:                                          ; preds = %entry
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8841
  %mselect = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 6, !dbg !8844
  %3 = load %struct.MSelect*, %struct.MSelect** %mselect, align 8, !dbg !8844
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8845
  %totselect1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 29, !dbg !8846
  %5 = load i32, i32* %totselect1, align 4, !dbg !8846
  %sub = sub nsw i32 %5, 1, !dbg !8847
  %idxprom = sext i32 %sub to i64, !dbg !8841
  %arrayidx = getelementptr inbounds %struct.MSelect, %struct.MSelect* %3, i64 %idxprom, !dbg !8841
  %type2 = getelementptr inbounds %struct.MSelect, %struct.MSelect* %arrayidx, i32 0, i32 1, !dbg !8848
  %6 = load i32, i32* %type2, align 4, !dbg !8848
  %7 = load i32, i32* %type.addr, align 4, !dbg !8849
  %cmp = icmp eq i32 %6, %7, !dbg !8850
  br i1 %cmp, label %if.then3, label %if.end, !dbg !8851

if.then3:                                         ; preds = %if.then
  %8 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8852
  %mselect4 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 6, !dbg !8854
  %9 = load %struct.MSelect*, %struct.MSelect** %mselect4, align 8, !dbg !8854
  %10 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8855
  %totselect5 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 29, !dbg !8856
  %11 = load i32, i32* %totselect5, align 4, !dbg !8856
  %sub6 = sub nsw i32 %11, 1, !dbg !8857
  %idxprom7 = sext i32 %sub6 to i64, !dbg !8852
  %arrayidx8 = getelementptr inbounds %struct.MSelect, %struct.MSelect* %9, i64 %idxprom7, !dbg !8852
  %index = getelementptr inbounds %struct.MSelect, %struct.MSelect* %arrayidx8, i32 0, i32 0, !dbg !8858
  %12 = load i32, i32* %index, align 4, !dbg !8858
  store i32 %12, i32* %retval, align 4, !dbg !8859
  br label %return, !dbg !8859

if.end:                                           ; preds = %if.then
  br label %if.end9, !dbg !8860

if.end9:                                          ; preds = %if.end, %entry
  store i32 -1, i32* %retval, align 4, !dbg !8861
  br label %return, !dbg !8861

return:                                           ; preds = %if.end9, %if.then3
  %13 = load i32, i32* %retval, align 4, !dbg !8862
  ret i32 %13, !dbg !8862
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_mselect_active_set(%struct.Mesh* %me, i32 %index, i32 %type) #0 !dbg !8863 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %index.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %msel_index = alloca i32, align 4
  %sw_ap = alloca %struct.MSelect, align 4
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !8866, metadata !DIExpression()), !dbg !8867
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8868, metadata !DIExpression()), !dbg !8869
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8870, metadata !DIExpression()), !dbg !8871
  call void @llvm.dbg.declare(metadata i32* %msel_index, metadata !8872, metadata !DIExpression()), !dbg !8873
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8874
  %1 = load i32, i32* %index.addr, align 4, !dbg !8875
  %2 = load i32, i32* %type.addr, align 4, !dbg !8876
  %call = call i32 @BKE_mesh_mselect_find(%struct.Mesh* %0, i32 %1, i32 %2), !dbg !8877
  store i32 %call, i32* %msel_index, align 4, !dbg !8873
  %3 = load i32, i32* %msel_index, align 4, !dbg !8878
  %cmp = icmp eq i32 %3, -1, !dbg !8880
  br i1 %cmp, label %if.then, label %if.else, !dbg !8881

if.then:                                          ; preds = %entry
  %4 = load i8* (i8*, i64, i8*)*, i8* (i8*, i64, i8*)** @MEM_reallocN_id, align 8, !dbg !8882
  %5 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8882
  %mselect = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 6, !dbg !8882
  %6 = load %struct.MSelect*, %struct.MSelect** %mselect, align 8, !dbg !8882
  %7 = bitcast %struct.MSelect* %6 to i8*, !dbg !8882
  %8 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8882
  %totselect = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 29, !dbg !8882
  %9 = load i32, i32* %totselect, align 4, !dbg !8882
  %add = add nsw i32 %9, 1, !dbg !8882
  %conv = sext i32 %add to i64, !dbg !8882
  %mul = mul i64 8, %conv, !dbg !8882
  %call1 = call i8* %4(i8* %7, i64 %mul, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.BKE_mesh_mselect_active_set, i64 0, i64 0)), !dbg !8882
  %10 = bitcast i8* %call1 to %struct.MSelect*, !dbg !8882
  %11 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8884
  %mselect2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 6, !dbg !8885
  store %struct.MSelect* %10, %struct.MSelect** %mselect2, align 8, !dbg !8886
  %12 = load i32, i32* %index.addr, align 4, !dbg !8887
  %13 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8888
  %mselect3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %13, i32 0, i32 6, !dbg !8889
  %14 = load %struct.MSelect*, %struct.MSelect** %mselect3, align 8, !dbg !8889
  %15 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8890
  %totselect4 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %15, i32 0, i32 29, !dbg !8891
  %16 = load i32, i32* %totselect4, align 4, !dbg !8891
  %idxprom = sext i32 %16 to i64, !dbg !8888
  %arrayidx = getelementptr inbounds %struct.MSelect, %struct.MSelect* %14, i64 %idxprom, !dbg !8888
  %index5 = getelementptr inbounds %struct.MSelect, %struct.MSelect* %arrayidx, i32 0, i32 0, !dbg !8892
  store i32 %12, i32* %index5, align 4, !dbg !8893
  %17 = load i32, i32* %type.addr, align 4, !dbg !8894
  %18 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8895
  %mselect6 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 6, !dbg !8896
  %19 = load %struct.MSelect*, %struct.MSelect** %mselect6, align 8, !dbg !8896
  %20 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8897
  %totselect7 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %20, i32 0, i32 29, !dbg !8898
  %21 = load i32, i32* %totselect7, align 4, !dbg !8898
  %idxprom8 = sext i32 %21 to i64, !dbg !8895
  %arrayidx9 = getelementptr inbounds %struct.MSelect, %struct.MSelect* %19, i64 %idxprom8, !dbg !8895
  %type10 = getelementptr inbounds %struct.MSelect, %struct.MSelect* %arrayidx9, i32 0, i32 1, !dbg !8899
  store i32 %17, i32* %type10, align 4, !dbg !8900
  %22 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8901
  %totselect11 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %22, i32 0, i32 29, !dbg !8902
  %23 = load i32, i32* %totselect11, align 4, !dbg !8903
  %inc = add nsw i32 %23, 1, !dbg !8903
  store i32 %inc, i32* %totselect11, align 4, !dbg !8903
  br label %if.end32, !dbg !8904

if.else:                                          ; preds = %entry
  %24 = load i32, i32* %msel_index, align 4, !dbg !8905
  %25 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8907
  %totselect12 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %25, i32 0, i32 29, !dbg !8908
  %26 = load i32, i32* %totselect12, align 4, !dbg !8908
  %sub = sub nsw i32 %26, 1, !dbg !8909
  %cmp13 = icmp ne i32 %24, %sub, !dbg !8910
  br i1 %cmp13, label %if.then15, label %if.end, !dbg !8911

if.then15:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.MSelect* %sw_ap, metadata !8912, metadata !DIExpression()), !dbg !8915
  %27 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8915
  %mselect16 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %27, i32 0, i32 6, !dbg !8915
  %28 = load %struct.MSelect*, %struct.MSelect** %mselect16, align 8, !dbg !8915
  %29 = load i32, i32* %msel_index, align 4, !dbg !8915
  %idxprom17 = sext i32 %29 to i64, !dbg !8915
  %arrayidx18 = getelementptr inbounds %struct.MSelect, %struct.MSelect* %28, i64 %idxprom17, !dbg !8915
  %30 = bitcast %struct.MSelect* %sw_ap to i8*, !dbg !8915
  %31 = bitcast %struct.MSelect* %arrayidx18 to i8*, !dbg !8915
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* align 4 %31, i64 8, i1 false), !dbg !8915
  %32 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8915
  %mselect19 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %32, i32 0, i32 6, !dbg !8915
  %33 = load %struct.MSelect*, %struct.MSelect** %mselect19, align 8, !dbg !8915
  %34 = load i32, i32* %msel_index, align 4, !dbg !8915
  %idxprom20 = sext i32 %34 to i64, !dbg !8915
  %arrayidx21 = getelementptr inbounds %struct.MSelect, %struct.MSelect* %33, i64 %idxprom20, !dbg !8915
  %35 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8915
  %mselect22 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %35, i32 0, i32 6, !dbg !8915
  %36 = load %struct.MSelect*, %struct.MSelect** %mselect22, align 8, !dbg !8915
  %37 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8915
  %totselect23 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %37, i32 0, i32 29, !dbg !8915
  %38 = load i32, i32* %totselect23, align 4, !dbg !8915
  %sub24 = sub nsw i32 %38, 1, !dbg !8915
  %idxprom25 = sext i32 %sub24 to i64, !dbg !8915
  %arrayidx26 = getelementptr inbounds %struct.MSelect, %struct.MSelect* %36, i64 %idxprom25, !dbg !8915
  %39 = bitcast %struct.MSelect* %arrayidx21 to i8*, !dbg !8915
  %40 = bitcast %struct.MSelect* %arrayidx26 to i8*, !dbg !8915
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 8, i1 false), !dbg !8915
  %41 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8915
  %mselect27 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %41, i32 0, i32 6, !dbg !8915
  %42 = load %struct.MSelect*, %struct.MSelect** %mselect27, align 8, !dbg !8915
  %43 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8915
  %totselect28 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %43, i32 0, i32 29, !dbg !8915
  %44 = load i32, i32* %totselect28, align 4, !dbg !8915
  %sub29 = sub nsw i32 %44, 1, !dbg !8915
  %idxprom30 = sext i32 %sub29 to i64, !dbg !8915
  %arrayidx31 = getelementptr inbounds %struct.MSelect, %struct.MSelect* %42, i64 %idxprom30, !dbg !8915
  %45 = bitcast %struct.MSelect* %arrayidx31 to i8*, !dbg !8915
  %46 = bitcast %struct.MSelect* %sw_ap to i8*, !dbg !8915
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %46, i64 8, i1 false), !dbg !8915
  br label %if.end, !dbg !8916

if.end:                                           ; preds = %if.then15, %if.else
  br label %if.end32

if.end32:                                         ; preds = %if.end, %if.then
  ret void, !dbg !8917
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Mesh* @BKE_mesh_new_from_object(%struct.Main* %bmain, %struct.Scene* %sce, %struct.Object* %ob, i32 %apply_modifiers, i32 %settings, i32 %calc_tessface, i32 %calc_undeformed) #0 !dbg !8918 {
entry:
  %retval = alloca %struct.Mesh*, align 8
  %bmain.addr = alloca %struct.Main*, align 8
  %sce.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %apply_modifiers.addr = alloca i32, align 4
  %settings.addr = alloca i32, align 4
  %calc_tessface.addr = alloca i32, align 4
  %calc_undeformed.addr = alloca i32, align 4
  %tmpmesh = alloca %struct.Mesh*, align 8
  %tmpcu = alloca %struct.Curve*, align 8
  %copycu = alloca %struct.Curve*, align 8
  %tmpobj = alloca %struct.Object*, align 8
  %render = alloca i32, align 4
  %i = alloca i32, align 4
  %cage = alloca i32, align 4
  %dispbase = alloca %struct.ListBase, align 8
  %derivedFinal = alloca %struct.DerivedMesh*, align 8
  %uv_from_orco = alloca i32, align 4
  %basis_ob = alloca %struct.Object*, align 8
  %disp = alloca %struct.ListBase, align 8
  %eval_ctx = alloca %struct.EvaluationContext, align 4
  %disp34 = alloca %struct.ListBase, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %mask = alloca i64, align 8
  %origmesh = alloca %struct.Mesh*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !8921, metadata !DIExpression()), !dbg !8922
  store %struct.Scene* %sce, %struct.Scene** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce.addr, metadata !8923, metadata !DIExpression()), !dbg !8924
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8925, metadata !DIExpression()), !dbg !8926
  store i32 %apply_modifiers, i32* %apply_modifiers.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %apply_modifiers.addr, metadata !8927, metadata !DIExpression()), !dbg !8928
  store i32 %settings, i32* %settings.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %settings.addr, metadata !8929, metadata !DIExpression()), !dbg !8930
  store i32 %calc_tessface, i32* %calc_tessface.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %calc_tessface.addr, metadata !8931, metadata !DIExpression()), !dbg !8932
  store i32 %calc_undeformed, i32* %calc_undeformed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %calc_undeformed.addr, metadata !8933, metadata !DIExpression()), !dbg !8934
  call void @llvm.dbg.declare(metadata %struct.Mesh** %tmpmesh, metadata !8935, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.declare(metadata %struct.Curve** %tmpcu, metadata !8937, metadata !DIExpression()), !dbg !8938
  store %struct.Curve* null, %struct.Curve** %tmpcu, align 8, !dbg !8938
  call void @llvm.dbg.declare(metadata %struct.Curve** %copycu, metadata !8939, metadata !DIExpression()), !dbg !8940
  call void @llvm.dbg.declare(metadata %struct.Object** %tmpobj, metadata !8941, metadata !DIExpression()), !dbg !8942
  store %struct.Object* null, %struct.Object** %tmpobj, align 8, !dbg !8942
  call void @llvm.dbg.declare(metadata i32* %render, metadata !8943, metadata !DIExpression()), !dbg !8944
  %0 = load i32, i32* %settings.addr, align 4, !dbg !8945
  %cmp = icmp eq i32 %0, 2, !dbg !8946
  %conv = zext i1 %cmp to i32, !dbg !8946
  store i32 %conv, i32* %render, align 4, !dbg !8944
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8947, metadata !DIExpression()), !dbg !8948
  call void @llvm.dbg.declare(metadata i32* %cage, metadata !8949, metadata !DIExpression()), !dbg !8950
  %1 = load i32, i32* %apply_modifiers.addr, align 4, !dbg !8951
  %tobool = icmp ne i32 %1, 0, !dbg !8952
  %lnot = xor i1 %tobool, true, !dbg !8952
  %lnot.ext = zext i1 %lnot to i32, !dbg !8952
  store i32 %lnot.ext, i32* %cage, align 4, !dbg !8950
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8953
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !8954
  %3 = load i16, i16* %type, align 8, !dbg !8954
  %conv1 = sext i16 %3 to i32, !dbg !8953
  switch i32 %conv1, label %sw.default [
    i32 4, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 5, label %sw.bb22
    i32 1, label %sw.bb41
  ], !dbg !8955

sw.bb:                                            ; preds = %entry, %entry, %entry
  call void @llvm.dbg.declare(metadata %struct.ListBase* %dispbase, metadata !8956, metadata !DIExpression()), !dbg !8959
  %4 = bitcast %struct.ListBase* %dispbase to i8*, !dbg !8959
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false), !dbg !8959
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %derivedFinal, metadata !8960, metadata !DIExpression()), !dbg !8961
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !8961
  call void @llvm.dbg.declare(metadata i32* %uv_from_orco, metadata !8962, metadata !DIExpression()), !dbg !8963
  %5 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8964
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8965
  %call = call %struct.Object* @BKE_object_copy_ex(%struct.Main* %5, %struct.Object* %6, i8 zeroext 1), !dbg !8966
  store %struct.Object* %call, %struct.Object** %tmpobj, align 8, !dbg !8967
  %7 = load %struct.Object*, %struct.Object** %tmpobj, align 8, !dbg !8968
  %data = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 19, !dbg !8969
  %8 = load i8*, i8** %data, align 8, !dbg !8969
  %9 = bitcast i8* %8 to %struct.Curve*, !dbg !8970
  store %struct.Curve* %9, %struct.Curve** %tmpcu, align 8, !dbg !8971
  %10 = load %struct.Curve*, %struct.Curve** %tmpcu, align 8, !dbg !8972
  %id = getelementptr inbounds %struct.Curve, %struct.Curve* %10, i32 0, i32 0, !dbg !8973
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !8974
  %11 = load i32, i32* %us, align 4, !dbg !8975
  %dec = add nsw i32 %11, -1, !dbg !8975
  store i32 %dec, i32* %us, align 4, !dbg !8975
  %12 = load i32, i32* %cage, align 4, !dbg !8976
  %tobool2 = icmp ne i32 %12, 0, !dbg !8976
  br i1 %tobool2, label %if.then, label %if.end, !dbg !8978

if.then:                                          ; preds = %sw.bb
  %13 = load %struct.Object*, %struct.Object** %tmpobj, align 8, !dbg !8979
  call void @BKE_object_free_modifiers(%struct.Object* %13), !dbg !8980
  br label %if.end, !dbg !8980

if.end:                                           ; preds = %if.then, %sw.bb
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8981
  %data3 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 19, !dbg !8982
  %15 = load i8*, i8** %data3, align 8, !dbg !8982
  %16 = bitcast i8* %15 to %struct.Curve*, !dbg !8983
  %call4 = call %struct.Curve* @BKE_curve_copy(%struct.Curve* %16), !dbg !8984
  %17 = bitcast %struct.Curve* %call4 to i8*, !dbg !8984
  %18 = load %struct.Object*, %struct.Object** %tmpobj, align 8, !dbg !8985
  %data5 = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 19, !dbg !8986
  store i8* %17, i8** %data5, align 8, !dbg !8987
  %19 = bitcast i8* %17 to %struct.Curve*, !dbg !8985
  store %struct.Curve* %19, %struct.Curve** %copycu, align 8, !dbg !8988
  %20 = load %struct.Curve*, %struct.Curve** %tmpcu, align 8, !dbg !8989
  %editfont = getelementptr inbounds %struct.Curve, %struct.Curve* %20, i32 0, i32 53, !dbg !8990
  %21 = load %struct.EditFont*, %struct.EditFont** %editfont, align 8, !dbg !8990
  %22 = load %struct.Curve*, %struct.Curve** %copycu, align 8, !dbg !8991
  %editfont6 = getelementptr inbounds %struct.Curve, %struct.Curve* %22, i32 0, i32 53, !dbg !8992
  store %struct.EditFont* %21, %struct.EditFont** %editfont6, align 8, !dbg !8993
  %23 = load %struct.Curve*, %struct.Curve** %tmpcu, align 8, !dbg !8994
  %editnurb = getelementptr inbounds %struct.Curve, %struct.Curve* %23, i32 0, i32 4, !dbg !8995
  %24 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !8995
  %25 = load %struct.Curve*, %struct.Curve** %copycu, align 8, !dbg !8996
  %editnurb7 = getelementptr inbounds %struct.Curve, %struct.Curve* %25, i32 0, i32 4, !dbg !8997
  store %struct.EditNurb* %24, %struct.EditNurb** %editnurb7, align 8, !dbg !8998
  %26 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8999
  %27 = load %struct.Object*, %struct.Object** %tmpobj, align 8, !dbg !9000
  %28 = load i32, i32* %render, align 4, !dbg !9001
  %conv8 = trunc i32 %28 to i8, !dbg !9001
  call void @BKE_displist_make_curveTypes_forRender(%struct.Scene* %26, %struct.Object* %27, %struct.ListBase* %dispbase, %struct.DerivedMesh** %derivedFinal, i8 zeroext 0, i8 zeroext %conv8), !dbg !9002
  %29 = load %struct.Curve*, %struct.Curve** %copycu, align 8, !dbg !9003
  %editfont9 = getelementptr inbounds %struct.Curve, %struct.Curve* %29, i32 0, i32 53, !dbg !9004
  store %struct.EditFont* null, %struct.EditFont** %editfont9, align 8, !dbg !9005
  %30 = load %struct.Curve*, %struct.Curve** %copycu, align 8, !dbg !9006
  %editnurb10 = getelementptr inbounds %struct.Curve, %struct.Curve* %30, i32 0, i32 4, !dbg !9007
  store %struct.EditNurb* null, %struct.EditNurb** %editnurb10, align 8, !dbg !9008
  %31 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !9009
  %32 = load %struct.Object*, %struct.Object** %tmpobj, align 8, !dbg !9010
  %derivedFinal11 = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 120, !dbg !9011
  store %struct.DerivedMesh* %31, %struct.DerivedMesh** %derivedFinal11, align 8, !dbg !9012
  %33 = load %struct.Curve*, %struct.Curve** %tmpcu, align 8, !dbg !9013
  %flag = getelementptr inbounds %struct.Curve, %struct.Curve* %33, i32 0, i32 23, !dbg !9014
  %34 = load i32, i32* %flag, align 4, !dbg !9014
  %and = and i32 %34, 32, !dbg !9015
  %cmp12 = icmp ne i32 %and, 0, !dbg !9016
  %conv13 = zext i1 %cmp12 to i32, !dbg !9016
  store i32 %conv13, i32* %uv_from_orco, align 4, !dbg !9017
  %35 = load %struct.Object*, %struct.Object** %tmpobj, align 8, !dbg !9018
  %36 = load i32, i32* %uv_from_orco, align 4, !dbg !9019
  %conv14 = trunc i32 %36 to i8, !dbg !9019
  call void @BKE_mesh_from_nurbs_displist(%struct.Object* %35, %struct.ListBase* %dispbase, i8 zeroext %conv14), !dbg !9020
  %37 = load %struct.Object*, %struct.Object** %tmpobj, align 8, !dbg !9021
  %data15 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 19, !dbg !9022
  %38 = load i8*, i8** %data15, align 8, !dbg !9022
  %39 = bitcast i8* %38 to %struct.Mesh*, !dbg !9021
  store %struct.Mesh* %39, %struct.Mesh** %tmpmesh, align 8, !dbg !9023
  call void @BKE_displist_free(%struct.ListBase* %dispbase), !dbg !9024
  %40 = load %struct.Object*, %struct.Object** %tmpobj, align 8, !dbg !9025
  %type16 = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 3, !dbg !9027
  %41 = load i16, i16* %type16, align 8, !dbg !9027
  %conv17 = sext i16 %41 to i32, !dbg !9025
  %cmp18 = icmp ne i32 %conv17, 1, !dbg !9028
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !9029

if.then20:                                        ; preds = %if.end
  %42 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9030
  %43 = load %struct.Object*, %struct.Object** %tmpobj, align 8, !dbg !9032
  %44 = bitcast %struct.Object* %43 to i8*, !dbg !9032
  call void @BKE_libblock_free_us(%struct.Main* %42, i8* %44), !dbg !9033
  store %struct.Mesh* null, %struct.Mesh** %retval, align 8, !dbg !9034
  br label %return, !dbg !9034

if.end21:                                         ; preds = %if.end
  %45 = load %struct.Mesh*, %struct.Mesh** %tmpmesh, align 8, !dbg !9035
  %46 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9036
  call void @BKE_mesh_texspace_copy_from_object(%struct.Mesh* %45, %struct.Object* %46), !dbg !9037
  %47 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9038
  %48 = load %struct.Object*, %struct.Object** %tmpobj, align 8, !dbg !9039
  %49 = bitcast %struct.Object* %48 to i8*, !dbg !9039
  call void @BKE_libblock_free_us(%struct.Main* %47, i8* %49), !dbg !9040
  br label %sw.epilog, !dbg !9041

sw.bb22:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Object** %basis_ob, metadata !9042, metadata !DIExpression()), !dbg !9044
  %50 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !9045
  %51 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9046
  %call23 = call %struct.Object* @BKE_mball_basis_find(%struct.Scene* %50, %struct.Object* %51), !dbg !9047
  store %struct.Object* %call23, %struct.Object** %basis_ob, align 8, !dbg !9044
  %52 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9048
  %53 = load %struct.Object*, %struct.Object** %basis_ob, align 8, !dbg !9050
  %cmp24 = icmp ne %struct.Object* %52, %53, !dbg !9051
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !9052

if.then26:                                        ; preds = %sw.bb22
  store %struct.Mesh* null, %struct.Mesh** %retval, align 8, !dbg !9053
  br label %return, !dbg !9053

if.end27:                                         ; preds = %sw.bb22
  %54 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9054
  %call28 = call %struct.Mesh* @BKE_mesh_add(%struct.Main* %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0)), !dbg !9055
  store %struct.Mesh* %call28, %struct.Mesh** %tmpmesh, align 8, !dbg !9056
  %55 = load %struct.Mesh*, %struct.Mesh** %tmpmesh, align 8, !dbg !9057
  %id29 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %55, i32 0, i32 0, !dbg !9058
  %us30 = getelementptr inbounds %struct.ID, %struct.ID* %id29, i32 0, i32 6, !dbg !9059
  %56 = load i32, i32* %us30, align 4, !dbg !9060
  %dec31 = add nsw i32 %56, -1, !dbg !9060
  store i32 %dec31, i32* %us30, align 4, !dbg !9060
  %57 = load i32, i32* %render, align 4, !dbg !9061
  %tobool32 = icmp ne i32 %57, 0, !dbg !9061
  br i1 %tobool32, label %if.then33, label %if.else, !dbg !9063

if.then33:                                        ; preds = %if.end27
  call void @llvm.dbg.declare(metadata %struct.ListBase* %disp, metadata !9064, metadata !DIExpression()), !dbg !9066
  %58 = bitcast %struct.ListBase* %disp to i8*, !dbg !9066
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false), !dbg !9066
  call void @llvm.dbg.declare(metadata %struct.EvaluationContext* %eval_ctx, metadata !9067, metadata !DIExpression()), !dbg !9069
  %59 = bitcast %struct.EvaluationContext* %eval_ctx to i8*, !dbg !9069
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 4, i1 false), !dbg !9069
  %mode = getelementptr inbounds %struct.EvaluationContext, %struct.EvaluationContext* %eval_ctx, i32 0, i32 0, !dbg !9070
  store i32 2, i32* %mode, align 4, !dbg !9071
  %60 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !9072
  %61 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9073
  call void @BKE_displist_make_mball_forRender(%struct.EvaluationContext* %eval_ctx, %struct.Scene* %60, %struct.Object* %61, %struct.ListBase* %disp), !dbg !9074
  %62 = load %struct.Mesh*, %struct.Mesh** %tmpmesh, align 8, !dbg !9075
  call void @BKE_mesh_from_metaball(%struct.ListBase* %disp, %struct.Mesh* %62), !dbg !9076
  call void @BKE_displist_free(%struct.ListBase* %disp), !dbg !9077
  br label %if.end40, !dbg !9078

if.else:                                          ; preds = %if.end27
  call void @llvm.dbg.declare(metadata %struct.ListBase* %disp34, metadata !9079, metadata !DIExpression()), !dbg !9081
  %63 = bitcast %struct.ListBase* %disp34 to i8*, !dbg !9081
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false), !dbg !9081
  %64 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9082
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %64, i32 0, i32 118, !dbg !9084
  %65 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !9084
  %tobool35 = icmp ne %struct.CurveCache* %65, null, !dbg !9082
  br i1 %tobool35, label %if.then36, label %if.end39, !dbg !9085

if.then36:                                        ; preds = %if.else
  %66 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9086
  %curve_cache37 = getelementptr inbounds %struct.Object, %struct.Object* %66, i32 0, i32 118, !dbg !9088
  %67 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache37, align 8, !dbg !9088
  %disp38 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %67, i32 0, i32 0, !dbg !9089
  %68 = bitcast %struct.ListBase* %disp34 to i8*, !dbg !9089
  %69 = bitcast %struct.ListBase* %disp38 to i8*, !dbg !9089
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 16, i1 false), !dbg !9089
  br label %if.end39, !dbg !9090

if.end39:                                         ; preds = %if.then36, %if.else
  %70 = load %struct.Mesh*, %struct.Mesh** %tmpmesh, align 8, !dbg !9091
  call void @BKE_mesh_from_metaball(%struct.ListBase* %disp34, %struct.Mesh* %70), !dbg !9092
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then33
  %71 = load %struct.Mesh*, %struct.Mesh** %tmpmesh, align 8, !dbg !9093
  %72 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9094
  call void @BKE_mesh_texspace_copy_from_object(%struct.Mesh* %71, %struct.Object* %72), !dbg !9095
  br label %sw.epilog, !dbg !9096

sw.bb41:                                          ; preds = %entry
  %73 = load i32, i32* %cage, align 4, !dbg !9097
  %tobool42 = icmp ne i32 %73, 0, !dbg !9097
  br i1 %tobool42, label %if.then43, label %if.else46, !dbg !9099

if.then43:                                        ; preds = %sw.bb41
  %74 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9100
  %75 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9102
  %data44 = getelementptr inbounds %struct.Object, %struct.Object* %75, i32 0, i32 19, !dbg !9103
  %76 = load i8*, i8** %data44, align 8, !dbg !9103
  %77 = bitcast i8* %76 to %struct.Mesh*, !dbg !9102
  %call45 = call %struct.Mesh* @BKE_mesh_copy_ex(%struct.Main* %74, %struct.Mesh* %77), !dbg !9104
  store %struct.Mesh* %call45, %struct.Mesh** %tmpmesh, align 8, !dbg !9105
  br label %if.end57, !dbg !9106

if.else46:                                        ; preds = %sw.bb41
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !9107, metadata !DIExpression()), !dbg !9109
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !9110, metadata !DIExpression()), !dbg !9111
  %78 = load i64, i64* @CD_MASK_MESH, align 8, !dbg !9112
  store i64 %78, i64* %mask, align 8, !dbg !9111
  %79 = load i32, i32* %calc_undeformed.addr, align 4, !dbg !9113
  %tobool47 = icmp ne i32 %79, 0, !dbg !9113
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !9115

if.then48:                                        ; preds = %if.else46
  %80 = load i64, i64* %mask, align 8, !dbg !9116
  %or = or i64 %80, 16384, !dbg !9116
  store i64 %or, i64* %mask, align 8, !dbg !9116
  br label %if.end49, !dbg !9117

if.end49:                                         ; preds = %if.then48, %if.else46
  %81 = load i32, i32* %render, align 4, !dbg !9118
  %tobool50 = icmp ne i32 %81, 0, !dbg !9118
  br i1 %tobool50, label %if.then51, label %if.else53, !dbg !9120

if.then51:                                        ; preds = %if.end49
  %82 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !9121
  %83 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9122
  %84 = load i64, i64* %mask, align 8, !dbg !9123
  %call52 = call %struct.DerivedMesh* @mesh_create_derived_render(%struct.Scene* %82, %struct.Object* %83, i64 %84), !dbg !9124
  store %struct.DerivedMesh* %call52, %struct.DerivedMesh** %dm, align 8, !dbg !9125
  br label %if.end55, !dbg !9126

if.else53:                                        ; preds = %if.end49
  %85 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !9127
  %86 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9128
  %87 = load i64, i64* %mask, align 8, !dbg !9129
  %call54 = call %struct.DerivedMesh* @mesh_create_derived_view(%struct.Scene* %85, %struct.Object* %86, i64 %87), !dbg !9130
  store %struct.DerivedMesh* %call54, %struct.DerivedMesh** %dm, align 8, !dbg !9131
  br label %if.end55

if.end55:                                         ; preds = %if.else53, %if.then51
  %88 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9132
  %call56 = call %struct.Mesh* @BKE_mesh_add(%struct.Main* %88, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0)), !dbg !9133
  store %struct.Mesh* %call56, %struct.Mesh** %tmpmesh, align 8, !dbg !9134
  %89 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !9135
  %90 = load %struct.Mesh*, %struct.Mesh** %tmpmesh, align 8, !dbg !9136
  %91 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9137
  %92 = load i64, i64* %mask, align 8, !dbg !9138
  call void @DM_to_mesh(%struct.DerivedMesh* %89, %struct.Mesh* %90, %struct.Object* %91, i64 %92), !dbg !9139
  %93 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !9140
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %93, i32 0, i32 95, !dbg !9141
  %94 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !9141
  %95 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !9142
  call void %94(%struct.DerivedMesh* %95), !dbg !9140
  br label %if.end57

if.end57:                                         ; preds = %if.end55, %if.then43
  %96 = load %struct.Mesh*, %struct.Mesh** %tmpmesh, align 8, !dbg !9143
  %id58 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %96, i32 0, i32 0, !dbg !9144
  %us59 = getelementptr inbounds %struct.ID, %struct.ID* %id58, i32 0, i32 6, !dbg !9145
  %97 = load i32, i32* %us59, align 4, !dbg !9146
  %dec60 = add nsw i32 %97, -1, !dbg !9146
  store i32 %dec60, i32* %us59, align 4, !dbg !9146
  br label %sw.epilog, !dbg !9147

sw.default:                                       ; preds = %entry
  store %struct.Mesh* null, %struct.Mesh** %retval, align 8, !dbg !9148
  br label %return, !dbg !9148

sw.epilog:                                        ; preds = %if.end57, %if.end40, %if.end21
  %98 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9149
  %type61 = getelementptr inbounds %struct.Object, %struct.Object* %98, i32 0, i32 3, !dbg !9150
  %99 = load i16, i16* %type61, align 8, !dbg !9150
  %conv62 = sext i16 %99 to i32, !dbg !9149
  switch i32 %conv62, label %sw.epilog150 [
    i32 3, label %sw.bb63
    i32 4, label %sw.bb63
    i32 2, label %sw.bb63
    i32 1, label %sw.bb95
  ], !dbg !9151

sw.bb63:                                          ; preds = %sw.epilog, %sw.epilog, %sw.epilog
  %100 = load %struct.Curve*, %struct.Curve** %tmpcu, align 8, !dbg !9152
  %totcol = getelementptr inbounds %struct.Curve, %struct.Curve* %100, i32 0, i32 22, !dbg !9154
  %101 = load i16, i16* %totcol, align 2, !dbg !9154
  %102 = load %struct.Mesh*, %struct.Mesh** %tmpmesh, align 8, !dbg !9155
  %totcol64 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %102, i32 0, i32 47, !dbg !9156
  store i16 %101, i16* %totcol64, align 2, !dbg !9157
  %103 = load %struct.Curve*, %struct.Curve** %tmpcu, align 8, !dbg !9158
  %mat = getelementptr inbounds %struct.Curve, %struct.Curve* %103, i32 0, i32 10, !dbg !9160
  %104 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !9160
  %tobool65 = icmp ne %struct.Material** %104, null, !dbg !9158
  br i1 %tobool65, label %if.then66, label %if.end94, !dbg !9161

if.then66:                                        ; preds = %sw.bb63
  %105 = load %struct.Curve*, %struct.Curve** %tmpcu, align 8, !dbg !9162
  %totcol67 = getelementptr inbounds %struct.Curve, %struct.Curve* %105, i32 0, i32 22, !dbg !9165
  %106 = load i16, i16* %totcol67, align 2, !dbg !9165
  %conv68 = sext i16 %106 to i32, !dbg !9162
  store i32 %conv68, i32* %i, align 4, !dbg !9166
  br label %for.cond, !dbg !9167

for.cond:                                         ; preds = %if.end93, %if.then66
  %107 = load i32, i32* %i, align 4, !dbg !9168
  %dec69 = add nsw i32 %107, -1, !dbg !9168
  store i32 %dec69, i32* %i, align 4, !dbg !9168
  %cmp70 = icmp sgt i32 %107, 0, !dbg !9170
  br i1 %cmp70, label %for.body, label %for.end, !dbg !9171

for.body:                                         ; preds = %for.cond
  %108 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9172
  %matbits = getelementptr inbounds %struct.Object, %struct.Object* %108, i32 0, i32 30, !dbg !9174
  %109 = load i8*, i8** %matbits, align 8, !dbg !9174
  %110 = load i32, i32* %i, align 4, !dbg !9175
  %idxprom = sext i32 %110 to i64, !dbg !9172
  %arrayidx = getelementptr inbounds i8, i8* %109, i64 %idxprom, !dbg !9172
  %111 = load i8, i8* %arrayidx, align 1, !dbg !9172
  %conv72 = zext i8 %111 to i32, !dbg !9172
  %tobool73 = icmp ne i32 %conv72, 0, !dbg !9172
  br i1 %tobool73, label %cond.true, label %cond.false, !dbg !9172

cond.true:                                        ; preds = %for.body
  %112 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9176
  %mat74 = getelementptr inbounds %struct.Object, %struct.Object* %112, i32 0, i32 29, !dbg !9177
  %113 = load %struct.Material**, %struct.Material*** %mat74, align 8, !dbg !9177
  %114 = load i32, i32* %i, align 4, !dbg !9178
  %idxprom75 = sext i32 %114 to i64, !dbg !9176
  %arrayidx76 = getelementptr inbounds %struct.Material*, %struct.Material** %113, i64 %idxprom75, !dbg !9176
  %115 = load %struct.Material*, %struct.Material** %arrayidx76, align 8, !dbg !9176
  br label %cond.end, !dbg !9172

cond.false:                                       ; preds = %for.body
  %116 = load %struct.Curve*, %struct.Curve** %tmpcu, align 8, !dbg !9179
  %mat77 = getelementptr inbounds %struct.Curve, %struct.Curve* %116, i32 0, i32 10, !dbg !9180
  %117 = load %struct.Material**, %struct.Material*** %mat77, align 8, !dbg !9180
  %118 = load i32, i32* %i, align 4, !dbg !9181
  %idxprom78 = sext i32 %118 to i64, !dbg !9179
  %arrayidx79 = getelementptr inbounds %struct.Material*, %struct.Material** %117, i64 %idxprom78, !dbg !9179
  %119 = load %struct.Material*, %struct.Material** %arrayidx79, align 8, !dbg !9179
  br label %cond.end, !dbg !9172

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.Material* [ %115, %cond.true ], [ %119, %cond.false ], !dbg !9172
  %120 = load %struct.Mesh*, %struct.Mesh** %tmpmesh, align 8, !dbg !9182
  %mat80 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %120, i32 0, i32 5, !dbg !9183
  %121 = load %struct.Material**, %struct.Material*** %mat80, align 8, !dbg !9183
  %122 = load i32, i32* %i, align 4, !dbg !9184
  %idxprom81 = sext i32 %122 to i64, !dbg !9182
  %arrayidx82 = getelementptr inbounds %struct.Material*, %struct.Material** %121, i64 %idxprom81, !dbg !9182
  store %struct.Material* %cond, %struct.Material** %arrayidx82, align 8, !dbg !9185
  %123 = load %struct.Mesh*, %struct.Mesh** %tmpmesh, align 8, !dbg !9186
  %mat83 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %123, i32 0, i32 5, !dbg !9188
  %124 = load %struct.Material**, %struct.Material*** %mat83, align 8, !dbg !9188
  %125 = load i32, i32* %i, align 4, !dbg !9189
  %idxprom84 = sext i32 %125 to i64, !dbg !9186
  %arrayidx85 = getelementptr inbounds %struct.Material*, %struct.Material** %124, i64 %idxprom84, !dbg !9186
  %126 = load %struct.Material*, %struct.Material** %arrayidx85, align 8, !dbg !9186
  %tobool86 = icmp ne %struct.Material* %126, null, !dbg !9186
  br i1 %tobool86, label %if.then87, label %if.end93, !dbg !9190

if.then87:                                        ; preds = %cond.end
  %127 = load %struct.Mesh*, %struct.Mesh** %tmpmesh, align 8, !dbg !9191
  %mat88 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %127, i32 0, i32 5, !dbg !9193
  %128 = load %struct.Material**, %struct.Material*** %mat88, align 8, !dbg !9193
  %129 = load i32, i32* %i, align 4, !dbg !9194
  %idxprom89 = sext i32 %129 to i64, !dbg !9191
  %arrayidx90 = getelementptr inbounds %struct.Material*, %struct.Material** %128, i64 %idxprom89, !dbg !9191
  %130 = load %struct.Material*, %struct.Material** %arrayidx90, align 8, !dbg !9191
  %id91 = getelementptr inbounds %struct.Material, %struct.Material* %130, i32 0, i32 0, !dbg !9195
  %us92 = getelementptr inbounds %struct.ID, %struct.ID* %id91, i32 0, i32 6, !dbg !9196
  %131 = load i32, i32* %us92, align 4, !dbg !9197
  %inc = add nsw i32 %131, 1, !dbg !9197
  store i32 %inc, i32* %us92, align 4, !dbg !9197
  br label %if.end93, !dbg !9198

if.end93:                                         ; preds = %if.then87, %cond.end
  br label %for.cond, !dbg !9199, !llvm.loop !9200

for.end:                                          ; preds = %for.cond
  br label %if.end94, !dbg !9202

if.end94:                                         ; preds = %for.end, %sw.bb63
  br label %sw.epilog150, !dbg !9203

sw.bb95:                                          ; preds = %sw.epilog
  %132 = load i32, i32* %cage, align 4, !dbg !9204
  %tobool96 = icmp ne i32 %132, 0, !dbg !9204
  br i1 %tobool96, label %if.end149, label %if.then97, !dbg !9206

if.then97:                                        ; preds = %sw.bb95
  call void @llvm.dbg.declare(metadata %struct.Mesh** %origmesh, metadata !9207, metadata !DIExpression()), !dbg !9209
  %133 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9210
  %data98 = getelementptr inbounds %struct.Object, %struct.Object* %133, i32 0, i32 19, !dbg !9211
  %134 = load i8*, i8** %data98, align 8, !dbg !9211
  %135 = bitcast i8* %134 to %struct.Mesh*, !dbg !9210
  store %struct.Mesh* %135, %struct.Mesh** %origmesh, align 8, !dbg !9209
  %136 = load %struct.Mesh*, %struct.Mesh** %origmesh, align 8, !dbg !9212
  %flag99 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %136, i32 0, i32 38, !dbg !9213
  %137 = load i16, i16* %flag99, align 2, !dbg !9213
  %138 = load %struct.Mesh*, %struct.Mesh** %tmpmesh, align 8, !dbg !9214
  %flag100 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %138, i32 0, i32 38, !dbg !9215
  store i16 %137, i16* %flag100, align 2, !dbg !9216
  %139 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !9217
  %140 = load %struct.Mesh*, %struct.Mesh** %origmesh, align 8, !dbg !9218
  %mat101 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %140, i32 0, i32 5, !dbg !9219
  %141 = load %struct.Material**, %struct.Material*** %mat101, align 8, !dbg !9219
  %142 = bitcast %struct.Material** %141 to i8*, !dbg !9218
  %call102 = call i8* %139(i8* %142), !dbg !9217
  %143 = bitcast i8* %call102 to %struct.Material**, !dbg !9217
  %144 = load %struct.Mesh*, %struct.Mesh** %tmpmesh, align 8, !dbg !9220
  %mat103 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %144, i32 0, i32 5, !dbg !9221
  store %struct.Material** %143, %struct.Material*** %mat103, align 8, !dbg !9222
  %145 = load %struct.Mesh*, %struct.Mesh** %origmesh, align 8, !dbg !9223
  %totcol104 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %145, i32 0, i32 47, !dbg !9224
  %146 = load i16, i16* %totcol104, align 2, !dbg !9224
  %147 = load %struct.Mesh*, %struct.Mesh** %tmpmesh, align 8, !dbg !9225
  %totcol105 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %147, i32 0, i32 47, !dbg !9226
  store i16 %146, i16* %totcol105, align 2, !dbg !9227
  %148 = load %struct.Mesh*, %struct.Mesh** %origmesh, align 8, !dbg !9228
  %smoothresh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %148, i32 0, i32 39, !dbg !9229
  %149 = load float, float* %smoothresh, align 8, !dbg !9229
  %150 = load %struct.Mesh*, %struct.Mesh** %tmpmesh, align 8, !dbg !9230
  %smoothresh106 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %150, i32 0, i32 39, !dbg !9231
  store float %149, float* %smoothresh106, align 8, !dbg !9232
  %151 = load %struct.Mesh*, %struct.Mesh** %origmesh, align 8, !dbg !9233
  %mat107 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %151, i32 0, i32 5, !dbg !9235
  %152 = load %struct.Material**, %struct.Material*** %mat107, align 8, !dbg !9235
  %tobool108 = icmp ne %struct.Material** %152, null, !dbg !9233
  br i1 %tobool108, label %if.then109, label %if.end148, !dbg !9236

if.then109:                                       ; preds = %if.then97
  %153 = load %struct.Mesh*, %struct.Mesh** %origmesh, align 8, !dbg !9237
  %totcol110 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %153, i32 0, i32 47, !dbg !9240
  %154 = load i16, i16* %totcol110, align 2, !dbg !9240
  %conv111 = sext i16 %154 to i32, !dbg !9237
  store i32 %conv111, i32* %i, align 4, !dbg !9241
  br label %for.cond112, !dbg !9242

for.cond112:                                      ; preds = %if.end146, %if.then109
  %155 = load i32, i32* %i, align 4, !dbg !9243
  %dec113 = add nsw i32 %155, -1, !dbg !9243
  store i32 %dec113, i32* %i, align 4, !dbg !9243
  %cmp114 = icmp sgt i32 %155, 0, !dbg !9245
  br i1 %cmp114, label %for.body116, label %for.end147, !dbg !9246

for.body116:                                      ; preds = %for.cond112
  %156 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9247
  %matbits117 = getelementptr inbounds %struct.Object, %struct.Object* %156, i32 0, i32 30, !dbg !9249
  %157 = load i8*, i8** %matbits117, align 8, !dbg !9249
  %158 = load i32, i32* %i, align 4, !dbg !9250
  %idxprom118 = sext i32 %158 to i64, !dbg !9247
  %arrayidx119 = getelementptr inbounds i8, i8* %157, i64 %idxprom118, !dbg !9247
  %159 = load i8, i8* %arrayidx119, align 1, !dbg !9247
  %conv120 = zext i8 %159 to i32, !dbg !9247
  %tobool121 = icmp ne i32 %conv120, 0, !dbg !9247
  br i1 %tobool121, label %cond.true122, label %cond.false126, !dbg !9247

cond.true122:                                     ; preds = %for.body116
  %160 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9251
  %mat123 = getelementptr inbounds %struct.Object, %struct.Object* %160, i32 0, i32 29, !dbg !9252
  %161 = load %struct.Material**, %struct.Material*** %mat123, align 8, !dbg !9252
  %162 = load i32, i32* %i, align 4, !dbg !9253
  %idxprom124 = sext i32 %162 to i64, !dbg !9251
  %arrayidx125 = getelementptr inbounds %struct.Material*, %struct.Material** %161, i64 %idxprom124, !dbg !9251
  %163 = load %struct.Material*, %struct.Material** %arrayidx125, align 8, !dbg !9251
  br label %cond.end130, !dbg !9247

cond.false126:                                    ; preds = %for.body116
  %164 = load %struct.Mesh*, %struct.Mesh** %origmesh, align 8, !dbg !9254
  %mat127 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %164, i32 0, i32 5, !dbg !9255
  %165 = load %struct.Material**, %struct.Material*** %mat127, align 8, !dbg !9255
  %166 = load i32, i32* %i, align 4, !dbg !9256
  %idxprom128 = sext i32 %166 to i64, !dbg !9254
  %arrayidx129 = getelementptr inbounds %struct.Material*, %struct.Material** %165, i64 %idxprom128, !dbg !9254
  %167 = load %struct.Material*, %struct.Material** %arrayidx129, align 8, !dbg !9254
  br label %cond.end130, !dbg !9247

cond.end130:                                      ; preds = %cond.false126, %cond.true122
  %cond131 = phi %struct.Material* [ %163, %cond.true122 ], [ %167, %cond.false126 ], !dbg !9247
  %168 = load %struct.Mesh*, %struct.Mesh** %tmpmesh, align 8, !dbg !9257
  %mat132 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %168, i32 0, i32 5, !dbg !9258
  %169 = load %struct.Material**, %struct.Material*** %mat132, align 8, !dbg !9258
  %170 = load i32, i32* %i, align 4, !dbg !9259
  %idxprom133 = sext i32 %170 to i64, !dbg !9257
  %arrayidx134 = getelementptr inbounds %struct.Material*, %struct.Material** %169, i64 %idxprom133, !dbg !9257
  store %struct.Material* %cond131, %struct.Material** %arrayidx134, align 8, !dbg !9260
  %171 = load %struct.Mesh*, %struct.Mesh** %tmpmesh, align 8, !dbg !9261
  %mat135 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %171, i32 0, i32 5, !dbg !9263
  %172 = load %struct.Material**, %struct.Material*** %mat135, align 8, !dbg !9263
  %173 = load i32, i32* %i, align 4, !dbg !9264
  %idxprom136 = sext i32 %173 to i64, !dbg !9261
  %arrayidx137 = getelementptr inbounds %struct.Material*, %struct.Material** %172, i64 %idxprom136, !dbg !9261
  %174 = load %struct.Material*, %struct.Material** %arrayidx137, align 8, !dbg !9261
  %tobool138 = icmp ne %struct.Material* %174, null, !dbg !9261
  br i1 %tobool138, label %if.then139, label %if.end146, !dbg !9265

if.then139:                                       ; preds = %cond.end130
  %175 = load %struct.Mesh*, %struct.Mesh** %tmpmesh, align 8, !dbg !9266
  %mat140 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %175, i32 0, i32 5, !dbg !9268
  %176 = load %struct.Material**, %struct.Material*** %mat140, align 8, !dbg !9268
  %177 = load i32, i32* %i, align 4, !dbg !9269
  %idxprom141 = sext i32 %177 to i64, !dbg !9266
  %arrayidx142 = getelementptr inbounds %struct.Material*, %struct.Material** %176, i64 %idxprom141, !dbg !9266
  %178 = load %struct.Material*, %struct.Material** %arrayidx142, align 8, !dbg !9266
  %id143 = getelementptr inbounds %struct.Material, %struct.Material* %178, i32 0, i32 0, !dbg !9270
  %us144 = getelementptr inbounds %struct.ID, %struct.ID* %id143, i32 0, i32 6, !dbg !9271
  %179 = load i32, i32* %us144, align 4, !dbg !9272
  %inc145 = add nsw i32 %179, 1, !dbg !9272
  store i32 %inc145, i32* %us144, align 4, !dbg !9272
  br label %if.end146, !dbg !9273

if.end146:                                        ; preds = %if.then139, %cond.end130
  br label %for.cond112, !dbg !9274, !llvm.loop !9275

for.end147:                                       ; preds = %for.cond112
  br label %if.end148, !dbg !9277

if.end148:                                        ; preds = %for.end147, %if.then97
  br label %if.end149, !dbg !9278

if.end149:                                        ; preds = %if.end148, %sw.bb95
  br label %sw.epilog150, !dbg !9279

sw.epilog150:                                     ; preds = %sw.epilog, %if.end149, %if.end94
  %180 = load i32, i32* %calc_tessface.addr, align 4, !dbg !9280
  %tobool151 = icmp ne i32 %180, 0, !dbg !9280
  br i1 %tobool151, label %if.then152, label %if.end153, !dbg !9282

if.then152:                                       ; preds = %sw.epilog150
  %181 = load %struct.Mesh*, %struct.Mesh** %tmpmesh, align 8, !dbg !9283
  call void @BKE_mesh_tessface_ensure(%struct.Mesh* %181), !dbg !9285
  br label %if.end153, !dbg !9286

if.end153:                                        ; preds = %if.then152, %sw.epilog150
  %182 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9287
  %183 = load %struct.Mesh*, %struct.Mesh** %tmpmesh, align 8, !dbg !9288
  %id154 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %183, i32 0, i32 0, !dbg !9289
  call void @test_object_materials(%struct.Main* %182, %struct.ID* %id154), !dbg !9290
  %184 = load %struct.Mesh*, %struct.Mesh** %tmpmesh, align 8, !dbg !9291
  store %struct.Mesh* %184, %struct.Mesh** %retval, align 8, !dbg !9292
  br label %return, !dbg !9292

return:                                           ; preds = %if.end153, %sw.default, %if.then26, %if.then20
  %185 = load %struct.Mesh*, %struct.Mesh** %retval, align 8, !dbg !9293
  ret %struct.Mesh* %185, !dbg !9293
}

declare dso_local %struct.Object* @BKE_object_copy_ex(%struct.Main*, %struct.Object*, i8 zeroext) #2

declare dso_local void @BKE_object_free_modifiers(%struct.Object*) #2

declare dso_local %struct.Curve* @BKE_curve_copy(%struct.Curve*) #2

declare dso_local void @BKE_displist_make_curveTypes_forRender(%struct.Scene*, %struct.Object*, %struct.ListBase*, %struct.DerivedMesh**, i8 zeroext, i8 zeroext) #2

declare dso_local void @BKE_displist_free(%struct.ListBase*) #2

declare dso_local void @BKE_libblock_free_us(%struct.Main*, i8*) #2

declare dso_local %struct.Object* @BKE_mball_basis_find(%struct.Scene*, %struct.Object*) #2

declare dso_local void @BKE_displist_make_mball_forRender(%struct.EvaluationContext*, %struct.Scene*, %struct.Object*, %struct.ListBase*) #2

declare dso_local %struct.DerivedMesh* @mesh_create_derived_render(%struct.Scene*, %struct.Object*, i64) #2

declare dso_local %struct.DerivedMesh* @mesh_create_derived_view(%struct.Scene*, %struct.Object*, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v3v3(float* %a, float* %b) #0 !dbg !9294 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9297, metadata !DIExpression()), !dbg !9298
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9299, metadata !DIExpression()), !dbg !9300
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !9301, metadata !DIExpression()), !dbg !9302
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !9303
  %0 = load float*, float** %b.addr, align 8, !dbg !9304
  %1 = load float*, float** %a.addr, align 8, !dbg !9305
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !9306
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !9307
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !9308
  %call = call float @dot_v3v3(float* %arraydecay1, float* %arraydecay2), !dbg !9309
  ret float %call, !dbg !9310
}

declare dso_local %struct.EdgeHash* @BLI_edgehash_new_ex(i8*, i32) #2

declare dso_local void @BLI_edgehash_insert(%struct.EdgeHash*, i32, i32, i8*) #2

declare dso_local i8* @BLI_edgehash_lookup(%struct.EdgeHash*, i32, i32) #2

declare dso_local void @BLI_edgehash_free(%struct.EdgeHash*, void (i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v2v2(float* %a, float* %b) #0 !dbg !9311 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [2 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9312, metadata !DIExpression()), !dbg !9313
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9314, metadata !DIExpression()), !dbg !9315
  call void @llvm.dbg.declare(metadata [2 x float]* %d, metadata !9316, metadata !DIExpression()), !dbg !9317
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !9318
  %0 = load float*, float** %b.addr, align 8, !dbg !9319
  %1 = load float*, float** %a.addr, align 8, !dbg !9320
  call void @sub_v2_v2v2(float* %arraydecay, float* %0, float* %1), !dbg !9321
  %arraydecay1 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !9322
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !9323
  %call = call float @dot_v2v2(float* %arraydecay1, float* %arraydecay2), !dbg !9324
  ret float %call, !dbg !9325
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !9326 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9329, metadata !DIExpression()), !dbg !9330
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9331, metadata !DIExpression()), !dbg !9332
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9333, metadata !DIExpression()), !dbg !9334
  %0 = load float*, float** %a.addr, align 8, !dbg !9335
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9335
  %1 = load float, float* %arrayidx, align 4, !dbg !9335
  %2 = load float*, float** %b.addr, align 8, !dbg !9336
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9336
  %3 = load float, float* %arrayidx1, align 4, !dbg !9336
  %sub = fsub float %1, %3, !dbg !9337
  %4 = load float*, float** %r.addr, align 8, !dbg !9338
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !9338
  store float %sub, float* %arrayidx2, align 4, !dbg !9339
  %5 = load float*, float** %a.addr, align 8, !dbg !9340
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !9340
  %6 = load float, float* %arrayidx3, align 4, !dbg !9340
  %7 = load float*, float** %b.addr, align 8, !dbg !9341
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !9341
  %8 = load float, float* %arrayidx4, align 4, !dbg !9341
  %sub5 = fsub float %6, %8, !dbg !9342
  %9 = load float*, float** %r.addr, align 8, !dbg !9343
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !9343
  store float %sub5, float* %arrayidx6, align 4, !dbg !9344
  %10 = load float*, float** %a.addr, align 8, !dbg !9345
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !9345
  %11 = load float, float* %arrayidx7, align 4, !dbg !9345
  %12 = load float*, float** %b.addr, align 8, !dbg !9346
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !9346
  %13 = load float, float* %arrayidx8, align 4, !dbg !9346
  %sub9 = fsub float %11, %13, !dbg !9347
  %14 = load float*, float** %r.addr, align 8, !dbg !9348
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !9348
  store float %sub9, float* %arrayidx10, align 4, !dbg !9349
  ret void, !dbg !9350
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !9351 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9352, metadata !DIExpression()), !dbg !9353
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9354, metadata !DIExpression()), !dbg !9355
  %0 = load float*, float** %a.addr, align 8, !dbg !9356
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9356
  %1 = load float, float* %arrayidx, align 4, !dbg !9356
  %2 = load float*, float** %b.addr, align 8, !dbg !9357
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9357
  %3 = load float, float* %arrayidx1, align 4, !dbg !9357
  %mul = fmul float %1, %3, !dbg !9358
  %4 = load float*, float** %a.addr, align 8, !dbg !9359
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !9359
  %5 = load float, float* %arrayidx2, align 4, !dbg !9359
  %6 = load float*, float** %b.addr, align 8, !dbg !9360
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !9360
  %7 = load float, float* %arrayidx3, align 4, !dbg !9360
  %mul4 = fmul float %5, %7, !dbg !9361
  %add = fadd float %mul, %mul4, !dbg !9362
  %8 = load float*, float** %a.addr, align 8, !dbg !9363
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !9363
  %9 = load float, float* %arrayidx5, align 4, !dbg !9363
  %10 = load float*, float** %b.addr, align 8, !dbg !9364
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !9364
  %11 = load float, float* %arrayidx6, align 4, !dbg !9364
  %mul7 = fmul float %9, %11, !dbg !9365
  %add8 = fadd float %add, %mul7, !dbg !9366
  ret float %add8, !dbg !9367
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v2_v2v2(float* %r, float* %a, float* %b) #0 !dbg !9368 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9369, metadata !DIExpression()), !dbg !9370
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9371, metadata !DIExpression()), !dbg !9372
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9373, metadata !DIExpression()), !dbg !9374
  %0 = load float*, float** %a.addr, align 8, !dbg !9375
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9375
  %1 = load float, float* %arrayidx, align 4, !dbg !9375
  %2 = load float*, float** %b.addr, align 8, !dbg !9376
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9376
  %3 = load float, float* %arrayidx1, align 4, !dbg !9376
  %sub = fsub float %1, %3, !dbg !9377
  %4 = load float*, float** %r.addr, align 8, !dbg !9378
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !9378
  store float %sub, float* %arrayidx2, align 4, !dbg !9379
  %5 = load float*, float** %a.addr, align 8, !dbg !9380
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !9380
  %6 = load float, float* %arrayidx3, align 4, !dbg !9380
  %7 = load float*, float** %b.addr, align 8, !dbg !9381
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !9381
  %8 = load float, float* %arrayidx4, align 4, !dbg !9381
  %sub5 = fsub float %6, %8, !dbg !9382
  %9 = load float*, float** %r.addr, align 8, !dbg !9383
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !9383
  store float %sub5, float* %arrayidx6, align 4, !dbg !9384
  ret void, !dbg !9385
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v2v2(float* %a, float* %b) #0 !dbg !9386 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9387, metadata !DIExpression()), !dbg !9388
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9389, metadata !DIExpression()), !dbg !9390
  %0 = load float*, float** %a.addr, align 8, !dbg !9391
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9391
  %1 = load float, float* %arrayidx, align 4, !dbg !9391
  %2 = load float*, float** %b.addr, align 8, !dbg !9392
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9392
  %3 = load float, float* %arrayidx1, align 4, !dbg !9392
  %mul = fmul float %1, %3, !dbg !9393
  %4 = load float*, float** %a.addr, align 8, !dbg !9394
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !9394
  %5 = load float, float* %arrayidx2, align 4, !dbg !9394
  %6 = load float*, float** %b.addr, align 8, !dbg !9395
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !9395
  %7 = load float, float* %arrayidx3, align 4, !dbg !9395
  %mul4 = fmul float %5, %7, !dbg !9396
  %add = fadd float %mul, %mul4, !dbg !9397
  ret float %add, !dbg !9398
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BM_iter_init(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !9399 {
entry:
  %retval = alloca i8, align 1
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !9402, metadata !DIExpression()), !dbg !9403
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !9404, metadata !DIExpression()), !dbg !9405
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !9406, metadata !DIExpression()), !dbg !9407
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9408, metadata !DIExpression()), !dbg !9409
  %0 = load i8, i8* %itype.addr, align 1, !dbg !9410
  %1 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9411
  %itype1 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %1, i32 0, i32 4, !dbg !9412
  store i8 %0, i8* %itype1, align 4, !dbg !9413
  %2 = load i8, i8* %itype.addr, align 1, !dbg !9414
  %conv = zext i8 %2 to i32, !dbg !9415
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 3, label %sw.bb10
    i32 4, label %sw.bb17
    i32 5, label %sw.bb21
    i32 6, label %sw.bb26
    i32 7, label %sw.bb31
    i32 8, label %sw.bb35
    i32 9, label %sw.bb40
    i32 10, label %sw.bb44
    i32 11, label %sw.bb49
    i32 13, label %sw.bb54
    i32 14, label %sw.bb58
  ], !dbg !9416

sw.bb:                                            ; preds = %entry
  %3 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9417
  %begin = getelementptr inbounds %struct.BMIter, %struct.BMIter* %3, i32 0, i32 1, !dbg !9419
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin, align 8, !dbg !9420
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9421
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %4, i32 0, i32 2, !dbg !9422
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step, align 8, !dbg !9423
  %5 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !9424
  %vpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 9, !dbg !9425
  %6 = load %struct.BLI_mempool*, %struct.BLI_mempool** %vpool, align 8, !dbg !9425
  %7 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9426
  %data2 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %7, i32 0, i32 0, !dbg !9427
  %elem_of_mesh = bitcast %union.anon.0* %data2 to %struct.BMIter__elem_of_mesh*, !dbg !9428
  %pooliter = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh, i32 0, i32 0, !dbg !9429
  %pool = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter, i32 0, i32 0, !dbg !9430
  store %struct.BLI_mempool* %6, %struct.BLI_mempool** %pool, align 8, !dbg !9431
  br label %sw.epilog, !dbg !9432

sw.bb3:                                           ; preds = %entry
  %8 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9433
  %begin4 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %8, i32 0, i32 1, !dbg !9434
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin4, align 8, !dbg !9435
  %9 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9436
  %step5 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %9, i32 0, i32 2, !dbg !9437
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step5, align 8, !dbg !9438
  %10 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !9439
  %epool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 10, !dbg !9440
  %11 = load %struct.BLI_mempool*, %struct.BLI_mempool** %epool, align 8, !dbg !9440
  %12 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9441
  %data6 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %12, i32 0, i32 0, !dbg !9442
  %elem_of_mesh7 = bitcast %union.anon.0* %data6 to %struct.BMIter__elem_of_mesh*, !dbg !9443
  %pooliter8 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh7, i32 0, i32 0, !dbg !9444
  %pool9 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter8, i32 0, i32 0, !dbg !9445
  store %struct.BLI_mempool* %11, %struct.BLI_mempool** %pool9, align 8, !dbg !9446
  br label %sw.epilog, !dbg !9447

sw.bb10:                                          ; preds = %entry
  %13 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9448
  %begin11 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %13, i32 0, i32 1, !dbg !9449
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin11, align 8, !dbg !9450
  %14 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9451
  %step12 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %14, i32 0, i32 2, !dbg !9452
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step12, align 8, !dbg !9453
  %15 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !9454
  %fpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 12, !dbg !9455
  %16 = load %struct.BLI_mempool*, %struct.BLI_mempool** %fpool, align 8, !dbg !9455
  %17 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9456
  %data13 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %17, i32 0, i32 0, !dbg !9457
  %elem_of_mesh14 = bitcast %union.anon.0* %data13 to %struct.BMIter__elem_of_mesh*, !dbg !9458
  %pooliter15 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh14, i32 0, i32 0, !dbg !9459
  %pool16 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter15, i32 0, i32 0, !dbg !9460
  store %struct.BLI_mempool* %16, %struct.BLI_mempool** %pool16, align 8, !dbg !9461
  br label %sw.epilog, !dbg !9462

sw.bb17:                                          ; preds = %entry
  %18 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9463
  %begin18 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %18, i32 0, i32 1, !dbg !9464
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_begin to void (i8*)*), void (i8*)** %begin18, align 8, !dbg !9465
  %19 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9466
  %step19 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %19, i32 0, i32 2, !dbg !9467
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_step to i8* (i8*)*), i8* (i8*)** %step19, align 8, !dbg !9468
  %20 = load i8*, i8** %data.addr, align 8, !dbg !9469
  %21 = bitcast i8* %20 to %struct.BMVert*, !dbg !9470
  %22 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9471
  %data20 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %22, i32 0, i32 0, !dbg !9472
  %edge_of_vert = bitcast %union.anon.0* %data20 to %struct.BMIter__edge_of_vert*, !dbg !9473
  %vdata = getelementptr inbounds %struct.BMIter__edge_of_vert, %struct.BMIter__edge_of_vert* %edge_of_vert, i32 0, i32 0, !dbg !9474
  store %struct.BMVert* %21, %struct.BMVert** %vdata, align 8, !dbg !9475
  br label %sw.epilog, !dbg !9476

sw.bb21:                                          ; preds = %entry
  %23 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9477
  %begin22 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %23, i32 0, i32 1, !dbg !9478
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_begin to void (i8*)*), void (i8*)** %begin22, align 8, !dbg !9479
  %24 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9480
  %step23 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %24, i32 0, i32 2, !dbg !9481
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_step to i8* (i8*)*), i8* (i8*)** %step23, align 8, !dbg !9482
  %25 = load i8*, i8** %data.addr, align 8, !dbg !9483
  %26 = bitcast i8* %25 to %struct.BMVert*, !dbg !9484
  %27 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9485
  %data24 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %27, i32 0, i32 0, !dbg !9486
  %face_of_vert = bitcast %union.anon.0* %data24 to %struct.BMIter__face_of_vert*, !dbg !9487
  %vdata25 = getelementptr inbounds %struct.BMIter__face_of_vert, %struct.BMIter__face_of_vert* %face_of_vert, i32 0, i32 0, !dbg !9488
  store %struct.BMVert* %26, %struct.BMVert** %vdata25, align 8, !dbg !9489
  br label %sw.epilog, !dbg !9490

sw.bb26:                                          ; preds = %entry
  %28 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9491
  %begin27 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %28, i32 0, i32 1, !dbg !9492
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_begin to void (i8*)*), void (i8*)** %begin27, align 8, !dbg !9493
  %29 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9494
  %step28 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %29, i32 0, i32 2, !dbg !9495
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_step to i8* (i8*)*), i8* (i8*)** %step28, align 8, !dbg !9496
  %30 = load i8*, i8** %data.addr, align 8, !dbg !9497
  %31 = bitcast i8* %30 to %struct.BMVert*, !dbg !9498
  %32 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9499
  %data29 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %32, i32 0, i32 0, !dbg !9500
  %loop_of_vert = bitcast %union.anon.0* %data29 to %struct.BMIter__loop_of_vert*, !dbg !9501
  %vdata30 = getelementptr inbounds %struct.BMIter__loop_of_vert, %struct.BMIter__loop_of_vert* %loop_of_vert, i32 0, i32 0, !dbg !9502
  store %struct.BMVert* %31, %struct.BMVert** %vdata30, align 8, !dbg !9503
  br label %sw.epilog, !dbg !9504

sw.bb31:                                          ; preds = %entry
  %33 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9505
  %begin32 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %33, i32 0, i32 1, !dbg !9506
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_begin to void (i8*)*), void (i8*)** %begin32, align 8, !dbg !9507
  %34 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9508
  %step33 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %34, i32 0, i32 2, !dbg !9509
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_step to i8* (i8*)*), i8* (i8*)** %step33, align 8, !dbg !9510
  %35 = load i8*, i8** %data.addr, align 8, !dbg !9511
  %36 = bitcast i8* %35 to %struct.BMEdge*, !dbg !9512
  %37 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9513
  %data34 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %37, i32 0, i32 0, !dbg !9514
  %vert_of_edge = bitcast %union.anon.0* %data34 to %struct.BMIter__vert_of_edge*, !dbg !9515
  %edata = getelementptr inbounds %struct.BMIter__vert_of_edge, %struct.BMIter__vert_of_edge* %vert_of_edge, i32 0, i32 0, !dbg !9516
  store %struct.BMEdge* %36, %struct.BMEdge** %edata, align 8, !dbg !9517
  br label %sw.epilog, !dbg !9518

sw.bb35:                                          ; preds = %entry
  %38 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9519
  %begin36 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %38, i32 0, i32 1, !dbg !9520
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_begin to void (i8*)*), void (i8*)** %begin36, align 8, !dbg !9521
  %39 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9522
  %step37 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %39, i32 0, i32 2, !dbg !9523
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_step to i8* (i8*)*), i8* (i8*)** %step37, align 8, !dbg !9524
  %40 = load i8*, i8** %data.addr, align 8, !dbg !9525
  %41 = bitcast i8* %40 to %struct.BMEdge*, !dbg !9526
  %42 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9527
  %data38 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %42, i32 0, i32 0, !dbg !9528
  %face_of_edge = bitcast %union.anon.0* %data38 to %struct.BMIter__face_of_edge*, !dbg !9529
  %edata39 = getelementptr inbounds %struct.BMIter__face_of_edge, %struct.BMIter__face_of_edge* %face_of_edge, i32 0, i32 0, !dbg !9530
  store %struct.BMEdge* %41, %struct.BMEdge** %edata39, align 8, !dbg !9531
  br label %sw.epilog, !dbg !9532

sw.bb40:                                          ; preds = %entry
  %43 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9533
  %begin41 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %43, i32 0, i32 1, !dbg !9534
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_begin to void (i8*)*), void (i8*)** %begin41, align 8, !dbg !9535
  %44 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9536
  %step42 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %44, i32 0, i32 2, !dbg !9537
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_step to i8* (i8*)*), i8* (i8*)** %step42, align 8, !dbg !9538
  %45 = load i8*, i8** %data.addr, align 8, !dbg !9539
  %46 = bitcast i8* %45 to %struct.BMFace*, !dbg !9540
  %47 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9541
  %data43 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %47, i32 0, i32 0, !dbg !9542
  %vert_of_face = bitcast %union.anon.0* %data43 to %struct.BMIter__vert_of_face*, !dbg !9543
  %pdata = getelementptr inbounds %struct.BMIter__vert_of_face, %struct.BMIter__vert_of_face* %vert_of_face, i32 0, i32 0, !dbg !9544
  store %struct.BMFace* %46, %struct.BMFace** %pdata, align 8, !dbg !9545
  br label %sw.epilog, !dbg !9546

sw.bb44:                                          ; preds = %entry
  %48 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9547
  %begin45 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %48, i32 0, i32 1, !dbg !9548
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_begin to void (i8*)*), void (i8*)** %begin45, align 8, !dbg !9549
  %49 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9550
  %step46 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %49, i32 0, i32 2, !dbg !9551
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_step to i8* (i8*)*), i8* (i8*)** %step46, align 8, !dbg !9552
  %50 = load i8*, i8** %data.addr, align 8, !dbg !9553
  %51 = bitcast i8* %50 to %struct.BMFace*, !dbg !9554
  %52 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9555
  %data47 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %52, i32 0, i32 0, !dbg !9556
  %edge_of_face = bitcast %union.anon.0* %data47 to %struct.BMIter__edge_of_face*, !dbg !9557
  %pdata48 = getelementptr inbounds %struct.BMIter__edge_of_face, %struct.BMIter__edge_of_face* %edge_of_face, i32 0, i32 0, !dbg !9558
  store %struct.BMFace* %51, %struct.BMFace** %pdata48, align 8, !dbg !9559
  br label %sw.epilog, !dbg !9560

sw.bb49:                                          ; preds = %entry
  %53 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9561
  %begin50 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %53, i32 0, i32 1, !dbg !9562
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_begin to void (i8*)*), void (i8*)** %begin50, align 8, !dbg !9563
  %54 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9564
  %step51 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %54, i32 0, i32 2, !dbg !9565
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_step to i8* (i8*)*), i8* (i8*)** %step51, align 8, !dbg !9566
  %55 = load i8*, i8** %data.addr, align 8, !dbg !9567
  %56 = bitcast i8* %55 to %struct.BMFace*, !dbg !9568
  %57 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9569
  %data52 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %57, i32 0, i32 0, !dbg !9570
  %loop_of_face = bitcast %union.anon.0* %data52 to %struct.BMIter__loop_of_face*, !dbg !9571
  %pdata53 = getelementptr inbounds %struct.BMIter__loop_of_face, %struct.BMIter__loop_of_face* %loop_of_face, i32 0, i32 0, !dbg !9572
  store %struct.BMFace* %56, %struct.BMFace** %pdata53, align 8, !dbg !9573
  br label %sw.epilog, !dbg !9574

sw.bb54:                                          ; preds = %entry
  %58 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9575
  %begin55 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %58, i32 0, i32 1, !dbg !9576
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_begin to void (i8*)*), void (i8*)** %begin55, align 8, !dbg !9577
  %59 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9578
  %step56 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %59, i32 0, i32 2, !dbg !9579
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_step to i8* (i8*)*), i8* (i8*)** %step56, align 8, !dbg !9580
  %60 = load i8*, i8** %data.addr, align 8, !dbg !9581
  %61 = bitcast i8* %60 to %struct.BMLoop*, !dbg !9582
  %62 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9583
  %data57 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %62, i32 0, i32 0, !dbg !9584
  %loop_of_loop = bitcast %union.anon.0* %data57 to %struct.BMIter__loop_of_loop*, !dbg !9585
  %ldata = getelementptr inbounds %struct.BMIter__loop_of_loop, %struct.BMIter__loop_of_loop* %loop_of_loop, i32 0, i32 0, !dbg !9586
  store %struct.BMLoop* %61, %struct.BMLoop** %ldata, align 8, !dbg !9587
  br label %sw.epilog, !dbg !9588

sw.bb58:                                          ; preds = %entry
  %63 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9589
  %begin59 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %63, i32 0, i32 1, !dbg !9590
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_begin to void (i8*)*), void (i8*)** %begin59, align 8, !dbg !9591
  %64 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9592
  %step60 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %64, i32 0, i32 2, !dbg !9593
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_step to i8* (i8*)*), i8* (i8*)** %step60, align 8, !dbg !9594
  %65 = load i8*, i8** %data.addr, align 8, !dbg !9595
  %66 = bitcast i8* %65 to %struct.BMEdge*, !dbg !9596
  %67 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9597
  %data61 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %67, i32 0, i32 0, !dbg !9598
  %loop_of_edge = bitcast %union.anon.0* %data61 to %struct.BMIter__loop_of_edge*, !dbg !9599
  %edata62 = getelementptr inbounds %struct.BMIter__loop_of_edge, %struct.BMIter__loop_of_edge* %loop_of_edge, i32 0, i32 0, !dbg !9600
  store %struct.BMEdge* %66, %struct.BMEdge** %edata62, align 8, !dbg !9601
  br label %sw.epilog, !dbg !9602

sw.default:                                       ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !9603
  br label %return, !dbg !9603

sw.epilog:                                        ; preds = %sw.bb58, %sw.bb54, %sw.bb49, %sw.bb44, %sw.bb40, %sw.bb35, %sw.bb31, %sw.bb26, %sw.bb21, %sw.bb17, %sw.bb10, %sw.bb3, %sw.bb
  %68 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9604
  %begin63 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %68, i32 0, i32 1, !dbg !9605
  %69 = load void (i8*)*, void (i8*)** %begin63, align 8, !dbg !9605
  %70 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9606
  %71 = bitcast %struct.BMIter* %70 to i8*, !dbg !9606
  call void %69(i8* %71), !dbg !9604
  store i8 1, i8* %retval, align 1, !dbg !9607
  br label %return, !dbg !9607

return:                                           ; preds = %sw.epilog, %sw.default
  %72 = load i8, i8* %retval, align 1, !dbg !9608
  ret i8 %72, !dbg !9608
}

declare dso_local void @bmiter__elem_of_mesh_begin(%struct.BMIter__elem_of_mesh*) #2

declare dso_local i8* @bmiter__elem_of_mesh_step(%struct.BMIter__elem_of_mesh*) #2

declare dso_local void @bmiter__edge_of_vert_begin(%struct.BMIter__edge_of_vert*) #2

declare dso_local i8* @bmiter__edge_of_vert_step(%struct.BMIter__edge_of_vert*) #2

declare dso_local void @bmiter__face_of_vert_begin(%struct.BMIter__face_of_vert*) #2

declare dso_local i8* @bmiter__face_of_vert_step(%struct.BMIter__face_of_vert*) #2

declare dso_local void @bmiter__loop_of_vert_begin(%struct.BMIter__loop_of_vert*) #2

declare dso_local i8* @bmiter__loop_of_vert_step(%struct.BMIter__loop_of_vert*) #2

declare dso_local void @bmiter__vert_of_edge_begin(%struct.BMIter__vert_of_edge*) #2

declare dso_local i8* @bmiter__vert_of_edge_step(%struct.BMIter__vert_of_edge*) #2

declare dso_local void @bmiter__face_of_edge_begin(%struct.BMIter__face_of_edge*) #2

declare dso_local i8* @bmiter__face_of_edge_step(%struct.BMIter__face_of_edge*) #2

declare dso_local void @bmiter__vert_of_face_begin(%struct.BMIter__vert_of_face*) #2

declare dso_local i8* @bmiter__vert_of_face_step(%struct.BMIter__vert_of_face*) #2

declare dso_local void @bmiter__edge_of_face_begin(%struct.BMIter__edge_of_face*) #2

declare dso_local i8* @bmiter__edge_of_face_step(%struct.BMIter__edge_of_face*) #2

declare dso_local void @bmiter__loop_of_face_begin(%struct.BMIter__loop_of_face*) #2

declare dso_local i8* @bmiter__loop_of_face_step(%struct.BMIter__loop_of_face*) #2

declare dso_local void @bmiter__loop_of_loop_begin(%struct.BMIter__loop_of_loop*) #2

declare dso_local i8* @bmiter__loop_of_loop_step(%struct.BMIter__loop_of_loop*) #2

declare dso_local void @bmiter__loop_of_edge_begin(%struct.BMIter__loop_of_edge*) #2

declare dso_local i8* @bmiter__loop_of_edge_step(%struct.BMIter__loop_of_edge*) #2

declare dso_local void @BKE_editmesh_update_linked_customdata(%struct.BMEditMesh*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mesh_ensure_tessellation_customdata(%struct.Mesh* %me) #0 !dbg !9609 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %tottex_original = alloca i32, align 4
  %totcol_original = alloca i32, align 4
  %tottex_tessface = alloca i32, align 4
  %totcol_tessface = alloca i32, align 4
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !9610, metadata !DIExpression()), !dbg !9611
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9612
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 28, !dbg !9612
  %1 = load i32, i32* %totface, align 8, !dbg !9612
  %cmp = icmp ne i32 %1, 0, !dbg !9612
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !9612

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9612
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 30, !dbg !9612
  %3 = load i32, i32* %totpoly, align 8, !dbg !9612
  %cmp1 = icmp eq i32 %3, 0, !dbg !9612
  br i1 %cmp1, label %if.then, label %if.else, !dbg !9614

if.then:                                          ; preds = %land.lhs.true
  br label %if.end16, !dbg !9615

if.else:                                          ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i32* %tottex_original, metadata !9617, metadata !DIExpression()), !dbg !9619
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9620
  %pdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 24, !dbg !9621
  %call = call i32 @CustomData_number_of_layers(%struct.CustomData* %pdata, i32 15), !dbg !9622
  store i32 %call, i32* %tottex_original, align 4, !dbg !9619
  call void @llvm.dbg.declare(metadata i32* %totcol_original, metadata !9623, metadata !DIExpression()), !dbg !9624
  %5 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9625
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 25, !dbg !9626
  %call2 = call i32 @CustomData_number_of_layers(%struct.CustomData* %ldata, i32 17), !dbg !9627
  store i32 %call2, i32* %totcol_original, align 4, !dbg !9624
  call void @llvm.dbg.declare(metadata i32* %tottex_tessface, metadata !9628, metadata !DIExpression()), !dbg !9629
  %6 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9630
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 23, !dbg !9631
  %call3 = call i32 @CustomData_number_of_layers(%struct.CustomData* %fdata, i32 5), !dbg !9632
  store i32 %call3, i32* %tottex_tessface, align 4, !dbg !9629
  call void @llvm.dbg.declare(metadata i32* %totcol_tessface, metadata !9633, metadata !DIExpression()), !dbg !9634
  %7 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9635
  %fdata4 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 23, !dbg !9636
  %call5 = call i32 @CustomData_number_of_layers(%struct.CustomData* %fdata4, i32 6), !dbg !9637
  store i32 %call5, i32* %totcol_tessface, align 4, !dbg !9634
  %8 = load i32, i32* %tottex_tessface, align 4, !dbg !9638
  %9 = load i32, i32* %tottex_original, align 4, !dbg !9640
  %cmp6 = icmp ne i32 %8, %9, !dbg !9641
  br i1 %cmp6, label %if.then8, label %lor.lhs.false, !dbg !9642

lor.lhs.false:                                    ; preds = %if.else
  %10 = load i32, i32* %totcol_tessface, align 4, !dbg !9643
  %11 = load i32, i32* %totcol_original, align 4, !dbg !9644
  %cmp7 = icmp ne i32 %10, %11, !dbg !9645
  br i1 %cmp7, label %if.then8, label %if.end15, !dbg !9646

if.then8:                                         ; preds = %lor.lhs.false, %if.else
  %12 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9647
  call void @BKE_mesh_tessface_clear(%struct.Mesh* %12), !dbg !9649
  %13 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9650
  %fdata9 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %13, i32 0, i32 23, !dbg !9651
  %14 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9652
  %pdata10 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 24, !dbg !9653
  %15 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9654
  %ldata11 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %15, i32 0, i32 25, !dbg !9655
  %16 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9656
  %totface12 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %16, i32 0, i32 28, !dbg !9657
  %17 = load i32, i32* %totface12, align 8, !dbg !9657
  call void @CustomData_from_bmeshpoly(%struct.CustomData* %fdata9, %struct.CustomData* %pdata10, %struct.CustomData* %ldata11, i32 %17), !dbg !9658
  %18 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !9659
  %and = and i32 %18, 1, !dbg !9661
  %tobool = icmp ne i32 %and, 0, !dbg !9661
  br i1 %tobool, label %if.then13, label %if.end, !dbg !9662

if.then13:                                        ; preds = %if.then8
  %19 = load i32, i32* %tottex_tessface, align 4, !dbg !9663
  %20 = load i32, i32* %tottex_original, align 4, !dbg !9665
  %21 = load i32, i32* %totcol_tessface, align 4, !dbg !9666
  %22 = load i32, i32* %totcol_original, align 4, !dbg !9667
  %call14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([146 x i8], [146 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__func__.mesh_ensure_tessellation_customdata, i64 0, i64 0), i32 %19, i32 %20, i32 %21, i32 %22), !dbg !9668
  br label %if.end, !dbg !9669

if.end:                                           ; preds = %if.then13, %if.then8
  br label %if.end15, !dbg !9670

if.end15:                                         ; preds = %if.end, %lor.lhs.false
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then
  ret void, !dbg !9671
}

declare dso_local void @CustomData_bmesh_update_active_layers(%struct.CustomData*, %struct.CustomData*, %struct.CustomData*) #2

declare dso_local i32 @CustomData_number_of_layers(%struct.CustomData*, i32) #2

declare dso_local void @CustomData_from_bmeshpoly(%struct.CustomData*, %struct.CustomData*, %struct.CustomData*, i32) #2

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local void @extern_local_matarar(%struct.Material**, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @max_ii(i32 %a, i32 %b) #0 !dbg !9672 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !9673, metadata !DIExpression()), !dbg !9674
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !9675, metadata !DIExpression()), !dbg !9676
  %0 = load i32, i32* %b.addr, align 4, !dbg !9677
  %1 = load i32, i32* %a.addr, align 4, !dbg !9678
  %cmp = icmp slt i32 %0, %1, !dbg !9679
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9680

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !9681
  br label %cond.end, !dbg !9680

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !9682
  br label %cond.end, !dbg !9680

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !9680
  ret i32 %cond, !dbg !9683
}

declare dso_local void @BKE_mesh_poly_edgehash_insert(%struct.EdgeHash*, %struct.MPoly*, %struct.MLoop*) #2

declare dso_local i32 @BLI_edgehash_size(%struct.EdgeHash*) #2

declare dso_local %struct.EdgeHashIterator* @BLI_edgehashIterator_new(%struct.EdgeHash*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_edgehashIterator_isDone(%struct.EdgeHashIterator* %ehi) #0 !dbg !9684 {
entry:
  %ehi.addr = alloca %struct.EdgeHashIterator*, align 8
  store %struct.EdgeHashIterator* %ehi, %struct.EdgeHashIterator** %ehi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EdgeHashIterator** %ehi.addr, metadata !9687, metadata !DIExpression()), !dbg !9688
  %0 = load %struct.EdgeHashIterator*, %struct.EdgeHashIterator** %ehi.addr, align 8, !dbg !9689
  %curEntry = getelementptr inbounds %struct.EdgeHashIterator, %struct.EdgeHashIterator* %0, i32 0, i32 1, !dbg !9690
  %1 = load %struct.EdgeEntry*, %struct.EdgeEntry** %curEntry, align 8, !dbg !9690
  %2 = bitcast %struct.EdgeEntry* %1 to %struct._eh_Entry*, !dbg !9691
  %cmp = icmp eq %struct._eh_Entry* %2, null, !dbg !9692
  %conv = zext i1 %cmp to i32, !dbg !9692
  %conv1 = trunc i32 %conv to i8, !dbg !9693
  ret i8 %conv1, !dbg !9694
}

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_edgehashIterator_getKey(%struct.EdgeHashIterator* %ehi, i32* %r_v0, i32* %r_v1) #0 !dbg !9695 {
entry:
  %ehi.addr = alloca %struct.EdgeHashIterator*, align 8
  %r_v0.addr = alloca i32*, align 8
  %r_v1.addr = alloca i32*, align 8
  store %struct.EdgeHashIterator* %ehi, %struct.EdgeHashIterator** %ehi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EdgeHashIterator** %ehi.addr, metadata !9698, metadata !DIExpression()), !dbg !9699
  store i32* %r_v0, i32** %r_v0.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_v0.addr, metadata !9700, metadata !DIExpression()), !dbg !9701
  store i32* %r_v1, i32** %r_v1.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_v1.addr, metadata !9702, metadata !DIExpression()), !dbg !9703
  %0 = load %struct.EdgeHashIterator*, %struct.EdgeHashIterator** %ehi.addr, align 8, !dbg !9704
  %curEntry = getelementptr inbounds %struct.EdgeHashIterator, %struct.EdgeHashIterator* %0, i32 0, i32 1, !dbg !9705
  %1 = load %struct.EdgeEntry*, %struct.EdgeEntry** %curEntry, align 8, !dbg !9705
  %2 = bitcast %struct.EdgeEntry* %1 to %struct._eh_Entry*, !dbg !9706
  %v0 = getelementptr inbounds %struct._eh_Entry, %struct._eh_Entry* %2, i32 0, i32 1, !dbg !9706
  %3 = load i32, i32* %v0, align 8, !dbg !9706
  %4 = load i32*, i32** %r_v0.addr, align 8, !dbg !9707
  store i32 %3, i32* %4, align 4, !dbg !9708
  %5 = load %struct.EdgeHashIterator*, %struct.EdgeHashIterator** %ehi.addr, align 8, !dbg !9709
  %curEntry1 = getelementptr inbounds %struct.EdgeHashIterator, %struct.EdgeHashIterator* %5, i32 0, i32 1, !dbg !9710
  %6 = load %struct.EdgeEntry*, %struct.EdgeEntry** %curEntry1, align 8, !dbg !9710
  %7 = bitcast %struct.EdgeEntry* %6 to %struct._eh_Entry*, !dbg !9711
  %v1 = getelementptr inbounds %struct._eh_Entry, %struct._eh_Entry* %7, i32 0, i32 2, !dbg !9711
  %8 = load i32, i32* %v1, align 4, !dbg !9711
  %9 = load i32*, i32** %r_v1.addr, align 8, !dbg !9712
  store i32 %8, i32* %9, align 4, !dbg !9713
  ret void, !dbg !9714
}

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_edgehashIterator_setValue(%struct.EdgeHashIterator* %ehi, i8* %val) #0 !dbg !9715 {
entry:
  %ehi.addr = alloca %struct.EdgeHashIterator*, align 8
  %val.addr = alloca i8*, align 8
  store %struct.EdgeHashIterator* %ehi, %struct.EdgeHashIterator** %ehi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EdgeHashIterator** %ehi.addr, metadata !9718, metadata !DIExpression()), !dbg !9719
  store i8* %val, i8** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %val.addr, metadata !9720, metadata !DIExpression()), !dbg !9721
  %0 = load i8*, i8** %val.addr, align 8, !dbg !9722
  %1 = load %struct.EdgeHashIterator*, %struct.EdgeHashIterator** %ehi.addr, align 8, !dbg !9723
  %curEntry = getelementptr inbounds %struct.EdgeHashIterator, %struct.EdgeHashIterator* %1, i32 0, i32 1, !dbg !9724
  %2 = load %struct.EdgeEntry*, %struct.EdgeEntry** %curEntry, align 8, !dbg !9724
  %3 = bitcast %struct.EdgeEntry* %2 to %struct._eh_Entry*, !dbg !9725
  %val1 = getelementptr inbounds %struct._eh_Entry, %struct._eh_Entry* %3, i32 0, i32 3, !dbg !9725
  store i8* %0, i8** %val1, align 8, !dbg !9726
  ret void, !dbg !9727
}

declare dso_local void @BLI_edgehashIterator_step(%struct.EdgeHashIterator*) #2

declare dso_local void @BLI_edgehashIterator_free(%struct.EdgeHashIterator*) #2

declare dso_local void @BLI_addhead(%struct.ListBase*, i8*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind readonly }

!llvm.dbg.cu = !{!65}
!llvm.module.flags = !{!2746, !2747, !2748}
!llvm.ident = !{!2749}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "corner_indices", scope: !2, file: !3, line: 969, type: !1111, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "test_index_face", scope: !3, file: !3, line: 921, type: !4, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!3 = !DIFile(filename: "blender/source/blender/blenkernel/intern/mesh.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DISubroutineType(types: !5)
!5 = !{!6, !7, !22, !6, !6}
!6 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!7 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64)
!8 = !DIDerivedType(tag: DW_TAG_typedef, name: "MFace", file: !9, line: 46, baseType: !10)
!9 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !9, line: 42, size: 160, elements: !11)
!11 = !{!12, !14, !15, !16, !17, !19, !21}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !10, file: !9, line: 43, baseType: !13, size: 32)
!13 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !10, file: !9, line: 43, baseType: !13, size: 32, offset: 32)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !10, file: !9, line: 43, baseType: !13, size: 32, offset: 64)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !10, file: !9, line: 43, baseType: !13, size: 32, offset: 96)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !10, file: !9, line: 44, baseType: !18, size: 16, offset: 128)
!18 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !10, file: !9, line: 45, baseType: !20, size: 8, offset: 144)
!20 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !10, file: !9, line: 45, baseType: !20, size: 8, offset: 152)
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !24, line: 73, baseType: !25)
!24 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!25 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !24, line: 64, size: 1600, elements: !26)
!26 = !{!27, !46, !50, !51, !52, !53, !56}
!27 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !25, file: !24, line: 65, baseType: !28, size: 64)
!28 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !29, size: 64)
!29 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !24, line: 53, baseType: !30)
!30 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !24, line: 42, size: 832, elements: !31)
!31 = !{!32, !33, !34, !35, !36, !37, !38, !39, !40, !44}
!32 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !30, file: !24, line: 43, baseType: !6, size: 32)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !30, file: !24, line: 44, baseType: !6, size: 32, offset: 32)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !30, file: !24, line: 45, baseType: !6, size: 32, offset: 64)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !30, file: !24, line: 46, baseType: !6, size: 32, offset: 96)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !30, file: !24, line: 47, baseType: !6, size: 32, offset: 128)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !30, file: !24, line: 48, baseType: !6, size: 32, offset: 160)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !30, file: !24, line: 49, baseType: !6, size: 32, offset: 192)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !30, file: !24, line: 50, baseType: !6, size: 32, offset: 224)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !30, file: !24, line: 51, baseType: !41, size: 512, offset: 256)
!41 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 512, elements: !42)
!42 = !{!43}
!43 = !DISubrange(count: 64)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !30, file: !24, line: 52, baseType: !45, size: 64, offset: 768)
!45 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !25, file: !24, line: 66, baseType: !47, size: 1312, offset: 64)
!47 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 1312, elements: !48)
!48 = !{!49}
!49 = !DISubrange(count: 41)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !25, file: !24, line: 69, baseType: !6, size: 32, offset: 1376)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !25, file: !24, line: 69, baseType: !6, size: 32, offset: 1408)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !25, file: !24, line: 70, baseType: !6, size: 32, offset: 1440)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !25, file: !24, line: 71, baseType: !54, size: 64, offset: 1472)
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!55 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !24, line: 71, flags: DIFlagFwdDecl)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !25, file: !24, line: 72, baseType: !57, size: 64, offset: 1536)
!57 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64)
!58 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !24, line: 59, baseType: !59)
!59 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !24, line: 57, size: 8192, elements: !60)
!60 = !{!61}
!61 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !59, file: !24, line: 58, baseType: !62, size: 8192)
!62 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 8192, elements: !63)
!63 = !{!64}
!64 = !DISubrange(count: 1024)
!65 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !66, retainedTypes: !268, globals: !2742, splitDebugInlining: false, nameTableKind: None)
!66 = !{!67, !73, !78, !82, !88, !94, !105, !111, !117, !125, !132, !175, !192, !196, !201, !214, !218, !226, !237, !243, !256}
!67 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !68, line: 128, baseType: !13, size: 32, elements: !69)
!68 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!69 = !{!70, !71, !72}
!70 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!71 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!72 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!73 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !68, line: 164, baseType: !13, size: 32, elements: !74)
!74 = !{!75, !76, !77}
!75 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!76 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!77 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !68, line: 159, baseType: !13, size: 32, elements: !79)
!79 = !{!80, !81}
!80 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!81 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!82 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !68, line: 134, baseType: !13, size: 32, elements: !83)
!83 = !{!84, !85, !86, !87}
!84 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!85 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!86 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!87 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!88 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !68, line: 152, baseType: !13, size: 32, elements: !89)
!89 = !{!90, !91, !92, !93}
!90 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!93 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!94 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotType", file: !95, line: 94, baseType: !13, size: 32, elements: !96)
!95 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operator_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!96 = !{!97, !98, !99, !100, !101, !102, !103, !104}
!97 = !DIEnumerator(name: "BMO_OP_SLOT_BOOL", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "BMO_OP_SLOT_INT", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "BMO_OP_SLOT_FLT", value: 3, isUnsigned: true)
!100 = !DIEnumerator(name: "BMO_OP_SLOT_PTR", value: 4, isUnsigned: true)
!101 = !DIEnumerator(name: "BMO_OP_SLOT_MAT", value: 5, isUnsigned: true)
!102 = !DIEnumerator(name: "BMO_OP_SLOT_VEC", value: 8, isUnsigned: true)
!103 = !DIEnumerator(name: "BMO_OP_SLOT_ELEMENT_BUF", value: 9, isUnsigned: true)
!104 = !DIEnumerator(name: "BMO_OP_SLOT_MAPPING", value: 10, isUnsigned: true)
!105 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Elem", file: !95, line: 116, baseType: !13, size: 32, elements: !106)
!106 = !{!107, !108, !109, !110}
!107 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_VERT", value: 1, isUnsigned: true)
!108 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_EDGE", value: 2, isUnsigned: true)
!109 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_FACE", value: 8, isUnsigned: true)
!110 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_IS_SINGLE", value: 16, isUnsigned: true)
!111 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Ptr", file: !95, line: 131, baseType: !13, size: 32, elements: !112)
!112 = !{!113, !114, !115, !116}
!113 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_BMESH", value: 100, isUnsigned: true)
!114 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_SCENE", value: 101, isUnsigned: true)
!115 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_OBJECT", value: 102, isUnsigned: true)
!116 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_MESH", value: 103, isUnsigned: true)
!117 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Map", file: !95, line: 123, baseType: !13, size: 32, elements: !118)
!118 = !{!119, !120, !121, !122, !123, !124}
!119 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_EMPTY", value: 64, isUnsigned: true)
!120 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_ELEM", value: 65, isUnsigned: true)
!121 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_FLT", value: 66, isUnsigned: true)
!122 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INT", value: 67, isUnsigned: true)
!123 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_BOOL", value: 68, isUnsigned: true)
!124 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INTERNAL", value: 69, isUnsigned: true)
!125 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !95, line: 182, baseType: !13, size: 32, elements: !126)
!126 = !{!127, !128, !129, !130, !131}
!127 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NOP", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_UNTAN_MULTIRES", value: 1, isUnsigned: true)
!129 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NORMALS_CALC", value: 2, isUnsigned: true)
!130 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_FLUSH", value: 4, isUnsigned: true)
!131 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_VALIDATE", value: 8, isUnsigned: true)
!132 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !24, line: 76, baseType: !13, size: 32, elements: !133)
!133 = !{!134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174}
!134 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!135 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!136 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!137 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!138 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!139 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!140 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!141 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!142 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!143 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!144 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!145 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!146 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!147 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!148 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!149 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!150 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!151 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!152 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!153 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!154 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!155 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!156 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!157 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!158 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!159 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!160 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!161 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!162 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!163 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!164 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!165 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!166 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!167 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!168 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!169 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!170 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!171 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!172 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!173 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!174 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BMIterType", file: !176, line: 57, baseType: !13, size: 32, elements: !177)
!176 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!177 = !{!178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191}
!178 = !DIEnumerator(name: "BM_VERTS_OF_MESH", value: 1, isUnsigned: true)
!179 = !DIEnumerator(name: "BM_EDGES_OF_MESH", value: 2, isUnsigned: true)
!180 = !DIEnumerator(name: "BM_FACES_OF_MESH", value: 3, isUnsigned: true)
!181 = !DIEnumerator(name: "BM_EDGES_OF_VERT", value: 4, isUnsigned: true)
!182 = !DIEnumerator(name: "BM_FACES_OF_VERT", value: 5, isUnsigned: true)
!183 = !DIEnumerator(name: "BM_LOOPS_OF_VERT", value: 6, isUnsigned: true)
!184 = !DIEnumerator(name: "BM_VERTS_OF_EDGE", value: 7, isUnsigned: true)
!185 = !DIEnumerator(name: "BM_FACES_OF_EDGE", value: 8, isUnsigned: true)
!186 = !DIEnumerator(name: "BM_VERTS_OF_FACE", value: 9, isUnsigned: true)
!187 = !DIEnumerator(name: "BM_EDGES_OF_FACE", value: 10, isUnsigned: true)
!188 = !DIEnumerator(name: "BM_LOOPS_OF_FACE", value: 11, isUnsigned: true)
!189 = !DIEnumerator(name: "BM_ALL_LOOPS_OF_FACE", value: 12, isUnsigned: true)
!190 = !DIEnumerator(name: "BM_LOOPS_OF_LOOP", value: 13, isUnsigned: true)
!191 = !DIEnumerator(name: "BM_LOOPS_OF_EDGE", value: 14, isUnsigned: true)
!192 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "MVertSkinFlag", file: !9, line: 263, baseType: !13, size: 32, elements: !193)
!193 = !{!194, !195}
!194 = !DIEnumerator(name: "MVERT_SKIN_ROOT", value: 1, isUnsigned: true)
!195 = !DIEnumerator(name: "MVERT_SKIN_LOOSE", value: 2, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !197, line: 103, baseType: !13, size: 32, elements: !198)
!197 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!198 = !{!199, !200}
!199 = !DIEnumerator(name: "BOUNDBOX_DISABLED", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "BOUNDBOX_DIRTY", value: 2, isUnsigned: true)
!201 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !197, line: 339, baseType: !13, size: 32, elements: !202)
!202 = !{!203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213}
!203 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!204 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!205 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!206 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!207 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!208 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!209 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!210 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!211 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!212 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!213 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!214 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 341, baseType: !13, size: 32, elements: !215)
!215 = !{!216, !217}
!216 = !DIEnumerator(name: "ME_SMOOTH", value: 1, isUnsigned: true)
!217 = !DIEnumerator(name: "ME_FACE_SEL", value: 2, isUnsigned: true)
!218 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 313, baseType: !13, size: 32, elements: !219)
!219 = !{!220, !221, !222, !223, !224, !225}
!220 = !DIEnumerator(name: "ME_EDGEDRAW", value: 2, isUnsigned: true)
!221 = !DIEnumerator(name: "ME_SEAM", value: 4, isUnsigned: true)
!222 = !DIEnumerator(name: "ME_EDGERENDER", value: 32, isUnsigned: true)
!223 = !DIEnumerator(name: "ME_LOOSEEDGE", value: 128, isUnsigned: true)
!224 = !DIEnumerator(name: "ME_EDGE_TMP_TAG", value: 256, isUnsigned: true)
!225 = !DIEnumerator(name: "ME_SHARP", value: 512, isUnsigned: true)
!226 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierMode", file: !227, line: 88, baseType: !6, size: 32, elements: !228)
!227 = !DIFile(filename: "blender/source/blender/makesdna/DNA_modifier_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!228 = !{!229, !230, !231, !232, !233, !234, !235, !236}
!229 = !DIEnumerator(name: "eModifierMode_Realtime", value: 1)
!230 = !DIEnumerator(name: "eModifierMode_Render", value: 2)
!231 = !DIEnumerator(name: "eModifierMode_Editmode", value: 4)
!232 = !DIEnumerator(name: "eModifierMode_OnCage", value: 8)
!233 = !DIEnumerator(name: "eModifierMode_Expanded", value: 16)
!234 = !DIEnumerator(name: "eModifierMode_Virtual", value: 32)
!235 = !DIEnumerator(name: "eModifierMode_ApplyOnSpline", value: 64)
!236 = !DIEnumerator(name: "eModifierMode_DisableTemporary", value: -2147483648)
!237 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eEvaluationMode", file: !238, line: 62, baseType: !13, size: 32, elements: !239)
!238 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_depsgraph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!239 = !{!240, !241, !242}
!240 = !DIEnumerator(name: "DAG_EVAL_VIEWPORT", value: 0, isUnsigned: true)
!241 = !DIEnumerator(name: "DAG_EVAL_PREVIEW", value: 1, isUnsigned: true)
!242 = !DIEnumerator(name: "DAG_EVAL_RENDER", value: 2, isUnsigned: true)
!243 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 65, baseType: !13, size: 32, elements: !244)
!244 = !{!245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255}
!245 = !DIEnumerator(name: "MESHCMP_DVERT_WEIGHTMISMATCH", value: 1, isUnsigned: true)
!246 = !DIEnumerator(name: "MESHCMP_DVERT_GROUPMISMATCH", value: 2, isUnsigned: true)
!247 = !DIEnumerator(name: "MESHCMP_DVERT_TOTGROUPMISMATCH", value: 3, isUnsigned: true)
!248 = !DIEnumerator(name: "MESHCMP_LOOPCOLMISMATCH", value: 4, isUnsigned: true)
!249 = !DIEnumerator(name: "MESHCMP_LOOPUVMISMATCH", value: 5, isUnsigned: true)
!250 = !DIEnumerator(name: "MESHCMP_LOOPMISMATCH", value: 6, isUnsigned: true)
!251 = !DIEnumerator(name: "MESHCMP_POLYVERTMISMATCH", value: 7, isUnsigned: true)
!252 = !DIEnumerator(name: "MESHCMP_POLYMISMATCH", value: 8, isUnsigned: true)
!253 = !DIEnumerator(name: "MESHCMP_EDGEUNKNOWN", value: 9, isUnsigned: true)
!254 = !DIEnumerator(name: "MESHCMP_VERTCOMISMATCH", value: 10, isUnsigned: true)
!255 = !DIEnumerator(name: "MESHCMP_CDLAYERS_MISMATCH", value: 11, isUnsigned: true)
!256 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !257, line: 123, baseType: !13, size: 32, elements: !258)
!257 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_global.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!258 = !{!259, !260, !261, !262, !263, !264, !265, !266, !267}
!259 = !DIEnumerator(name: "G_DEBUG", value: 1, isUnsigned: true)
!260 = !DIEnumerator(name: "G_DEBUG_FFMPEG", value: 2, isUnsigned: true)
!261 = !DIEnumerator(name: "G_DEBUG_PYTHON", value: 4, isUnsigned: true)
!262 = !DIEnumerator(name: "G_DEBUG_EVENTS", value: 8, isUnsigned: true)
!263 = !DIEnumerator(name: "G_DEBUG_HANDLERS", value: 16, isUnsigned: true)
!264 = !DIEnumerator(name: "G_DEBUG_WM", value: 32, isUnsigned: true)
!265 = !DIEnumerator(name: "G_DEBUG_JOBS", value: 64, isUnsigned: true)
!266 = !DIEnumerator(name: "G_DEBUG_FREESTYLE", value: 128, isUnsigned: true)
!267 = !DIEnumerator(name: "G_DEBUG_DEPSGRAPH", value: 256, isUnsigned: true)
!268 = !{!45, !269, !330, !431, !441, !6, !336, !2539, !2641, !2649, !2672, !2707, !2721, !7, !1117, !2723, !2724, !2728, !2332, !2393, !2397, !2375, !18, !2732, !13, !2734}
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64)
!270 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !271, line: 130, baseType: !272)
!271 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !271, line: 117, size: 960, elements: !273)
!273 = !{!274, !275, !276, !278, !293, !297, !298, !299, !300, !301}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !272, file: !271, line: 118, baseType: !45, size: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !272, file: !271, line: 118, baseType: !45, size: 64, offset: 64)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !272, file: !271, line: 119, baseType: !277, size: 64, offset: 128)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !272, file: !271, line: 120, baseType: !279, size: 64, offset: 192)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !271, line: 136, size: 17600, elements: !281)
!281 = !{!282, !283, !284, !287, !288, !289, !290}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !280, file: !271, line: 137, baseType: !270, size: 960)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !280, file: !271, line: 138, baseType: !269, size: 64, offset: 960)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !280, file: !271, line: 139, baseType: !285, size: 64, offset: 1024)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64)
!286 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !271, line: 43, flags: DIFlagFwdDecl)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !280, file: !271, line: 140, baseType: !62, size: 8192, offset: 1088)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !280, file: !271, line: 141, baseType: !62, size: 8192, offset: 9280)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !280, file: !271, line: 148, baseType: !279, size: 64, offset: 17472)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !280, file: !271, line: 150, baseType: !291, size: 64, offset: 17536)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!292 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !271, line: 45, flags: DIFlagFwdDecl)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !272, file: !271, line: 121, baseType: !294, size: 528, offset: 256)
!294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 528, elements: !295)
!295 = !{!296}
!296 = !DISubrange(count: 66)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !272, file: !271, line: 126, baseType: !18, size: 16, offset: 784)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !272, file: !271, line: 127, baseType: !6, size: 32, offset: 800)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !272, file: !271, line: 128, baseType: !6, size: 32, offset: 832)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !272, file: !271, line: 128, baseType: !6, size: 32, offset: 864)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !272, file: !271, line: 129, baseType: !302, size: 64, offset: 896)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !271, line: 75, baseType: !304)
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !271, line: 62, size: 1024, elements: !305)
!305 = !{!306, !308, !309, !310, !311, !312, !313, !314, !328, !329}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !304, file: !271, line: 63, baseType: !307, size: 64)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !304, file: !271, line: 63, baseType: !307, size: 64, offset: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !304, file: !271, line: 64, baseType: !20, size: 8, offset: 128)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !304, file: !271, line: 64, baseType: !20, size: 8, offset: 136)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !304, file: !271, line: 65, baseType: !18, size: 16, offset: 144)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !304, file: !271, line: 66, baseType: !41, size: 512, offset: 160)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !304, file: !271, line: 67, baseType: !6, size: 32, offset: 672)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !304, file: !271, line: 69, baseType: !315, size: 256, offset: 704)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !271, line: 60, baseType: !316)
!316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !271, line: 48, size: 256, elements: !317)
!317 = !{!318, !319, !326, !327}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !316, file: !271, line: 49, baseType: !45, size: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !316, file: !271, line: 58, baseType: !320, size: 128, offset: 64)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !321, line: 71, baseType: !322)
!321 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !321, line: 69, size: 128, elements: !323)
!323 = !{!324, !325}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !322, file: !321, line: 70, baseType: !45, size: 64)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !322, file: !321, line: 70, baseType: !45, size: 64, offset: 64)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !316, file: !271, line: 59, baseType: !6, size: 32, offset: 192)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !316, file: !271, line: 59, baseType: !6, size: 32, offset: 224)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !304, file: !271, line: 70, baseType: !6, size: 32, offset: 960)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !304, file: !271, line: 74, baseType: !6, size: 32, offset: 992)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTFace", file: !9, line: 165, baseType: !332)
!332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !9, line: 160, size: 384, elements: !333)
!333 = !{!334, !340, !426, !427, !428, !429, !430}
!334 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !332, file: !9, line: 161, baseType: !335, size: 256)
!335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 256, elements: !337)
!336 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!337 = !{!338, !339}
!338 = !DISubrange(count: 4)
!339 = !DISubrange(count: 2)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !332, file: !9, line: 162, baseType: !341, size: 64, offset: 256)
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !343, line: 77, size: 15424, elements: !344)
!343 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!344 = !{!345, !346, !347, !350, !353, !356, !359, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !379, !380, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !407, !408, !409, !415, !416, !420}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !342, file: !343, line: 78, baseType: !270, size: 960)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !342, file: !343, line: 80, baseType: !62, size: 8192, offset: 960)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !342, file: !343, line: 82, baseType: !348, size: 64, offset: 9152)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!349 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !343, line: 43, flags: DIFlagFwdDecl)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !342, file: !343, line: 83, baseType: !351, size: 64, offset: 9216)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!352 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !271, line: 46, flags: DIFlagFwdDecl)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !342, file: !343, line: 86, baseType: !354, size: 64, offset: 9280)
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!355 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !343, line: 41, flags: DIFlagFwdDecl)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !342, file: !343, line: 87, baseType: !357, size: 64, offset: 9344)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!358 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !343, line: 44, flags: DIFlagFwdDecl)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !342, file: !343, line: 89, baseType: !360, size: 512, offset: 9408)
!360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !357, size: 512, elements: !361)
!361 = !{!362}
!362 = !DISubrange(count: 8)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !342, file: !343, line: 90, baseType: !18, size: 16, offset: 9920)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !342, file: !343, line: 90, baseType: !18, size: 16, offset: 9936)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !342, file: !343, line: 92, baseType: !18, size: 16, offset: 9952)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !342, file: !343, line: 92, baseType: !18, size: 16, offset: 9968)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !342, file: !343, line: 93, baseType: !18, size: 16, offset: 9984)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !342, file: !343, line: 93, baseType: !18, size: 16, offset: 10000)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !342, file: !343, line: 94, baseType: !6, size: 32, offset: 10016)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !342, file: !343, line: 97, baseType: !18, size: 16, offset: 10048)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !342, file: !343, line: 97, baseType: !18, size: 16, offset: 10064)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !342, file: !343, line: 98, baseType: !18, size: 16, offset: 10080)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !342, file: !343, line: 98, baseType: !18, size: 16, offset: 10096)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !342, file: !343, line: 99, baseType: !18, size: 16, offset: 10112)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !342, file: !343, line: 99, baseType: !18, size: 16, offset: 10128)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !342, file: !343, line: 100, baseType: !13, size: 32, offset: 10144)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !342, file: !343, line: 101, baseType: !378, size: 64, offset: 10176)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !342, file: !343, line: 103, baseType: !291, size: 64, offset: 10240)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !342, file: !343, line: 104, baseType: !381, size: 64, offset: 10304)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !271, line: 159, size: 448, elements: !383)
!383 = !{!384, !387, !388, !390, !391, !393}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !382, file: !271, line: 161, baseType: !385, size: 64)
!385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 64, elements: !386)
!386 = !{!339}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !382, file: !271, line: 162, baseType: !385, size: 64, offset: 64)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !382, file: !271, line: 163, baseType: !389, size: 32, offset: 128)
!389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !18, size: 32, elements: !386)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !382, file: !271, line: 164, baseType: !389, size: 32, offset: 160)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !382, file: !271, line: 165, baseType: !392, size: 128, offset: 192)
!392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 128, elements: !386)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !382, file: !271, line: 166, baseType: !394, size: 128, offset: 320)
!394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 128, elements: !386)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !342, file: !343, line: 107, baseType: !336, size: 32, offset: 10368)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !342, file: !343, line: 108, baseType: !6, size: 32, offset: 10400)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !342, file: !343, line: 109, baseType: !18, size: 16, offset: 10432)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !342, file: !343, line: 110, baseType: !18, size: 16, offset: 10448)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !342, file: !343, line: 113, baseType: !6, size: 32, offset: 10464)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !342, file: !343, line: 113, baseType: !6, size: 32, offset: 10496)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !342, file: !343, line: 114, baseType: !20, size: 8, offset: 10528)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !342, file: !343, line: 114, baseType: !20, size: 8, offset: 10536)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !342, file: !343, line: 115, baseType: !18, size: 16, offset: 10544)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !342, file: !343, line: 116, baseType: !405, size: 128, offset: 10560)
!405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 128, elements: !406)
!406 = !{!338}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !342, file: !343, line: 119, baseType: !336, size: 32, offset: 10688)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !342, file: !343, line: 119, baseType: !336, size: 32, offset: 10720)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !342, file: !343, line: 122, baseType: !410, size: 512, offset: 10752)
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !411, line: 182, baseType: !412)
!411 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !411, line: 180, size: 512, elements: !413)
!413 = !{!414}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !412, file: !411, line: 181, baseType: !41, size: 512)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !342, file: !343, line: 123, baseType: !20, size: 8, offset: 11264)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !342, file: !343, line: 125, baseType: !417, size: 56, offset: 11272)
!417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 56, elements: !418)
!418 = !{!419}
!419 = !DISubrange(count: 7)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !342, file: !343, line: 126, baseType: !421, size: 4096, offset: 11328)
!421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !422, size: 4096, elements: !361)
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !343, line: 69, baseType: !423)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !343, line: 67, size: 512, elements: !424)
!424 = !{!425}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !423, file: !343, line: 68, baseType: !41, size: 512)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !332, file: !9, line: 163, baseType: !20, size: 8, offset: 320)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !332, file: !9, line: 163, baseType: !20, size: 8, offset: 328)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !332, file: !9, line: 164, baseType: !18, size: 16, offset: 336)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !332, file: !9, line: 164, baseType: !18, size: 16, offset: 352)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !332, file: !9, line: 164, baseType: !18, size: 16, offset: 368)
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !432, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTexPoly", file: !9, line: 97, baseType: !433)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !9, line: 93, size: 128, elements: !434)
!434 = !{!435, !436, !437, !438, !439, !440}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !433, file: !9, line: 94, baseType: !341, size: 64)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !433, file: !9, line: 95, baseType: !20, size: 8, offset: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !433, file: !9, line: 95, baseType: !20, size: 8, offset: 72)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !433, file: !9, line: 96, baseType: !18, size: 16, offset: 80)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !433, file: !9, line: 96, baseType: !18, size: 16, offset: 96)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !433, file: !9, line: 96, baseType: !18, size: 16, offset: 112)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !443, line: 133, baseType: !444)
!443 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !443, line: 58, size: 11008, elements: !445)
!445 = !{!446, !447, !451, !461, !481, !524, !2255, !2261, !2262, !2264, !2265, !2271, !2279, !2280, !2281, !2294, !2295, !2296, !2297, !2305, !2307, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518}
!446 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !444, file: !443, line: 59, baseType: !270, size: 960)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !444, file: !443, line: 60, baseType: !448, size: 64, offset: 960)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!449 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !450, line: 58, flags: DIFlagFwdDecl)
!450 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!451 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !444, file: !443, line: 62, baseType: !452, size: 64, offset: 1024)
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !197, line: 97, size: 832, elements: !454)
!454 = !{!455, !459, !460}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !453, file: !197, line: 98, baseType: !456, size: 768)
!456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 768, elements: !457)
!457 = !{!362, !458}
!458 = !DISubrange(count: 3)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !453, file: !197, line: 99, baseType: !6, size: 32, offset: 768)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !453, file: !197, line: 99, baseType: !6, size: 32, offset: 800)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !444, file: !443, line: 64, baseType: !462, size: 64, offset: 1088)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !464, line: 91, size: 1280, elements: !465)
!464 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ipo_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!465 = !{!466, !467, !468, !477, !478, !479, !480}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !463, file: !464, line: 92, baseType: !270, size: 960)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !463, file: !464, line: 94, baseType: !320, size: 128, offset: 960)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !463, file: !464, line: 95, baseType: !469, size: 128, offset: 1088)
!469 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !470, line: 95, baseType: !471)
!470 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !470, line: 92, size: 128, elements: !472)
!472 = !{!473, !474, !475, !476}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !471, file: !470, line: 93, baseType: !336, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !471, file: !470, line: 93, baseType: !336, size: 32, offset: 32)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !471, file: !470, line: 94, baseType: !336, size: 32, offset: 64)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !471, file: !470, line: 94, baseType: !336, size: 32, offset: 96)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "blocktype", scope: !463, file: !464, line: 97, baseType: !18, size: 16, offset: 1216)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "showkey", scope: !463, file: !464, line: 97, baseType: !18, size: 16, offset: 1232)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "muteipo", scope: !463, file: !464, line: 98, baseType: !18, size: 16, offset: 1248)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !463, file: !464, line: 98, baseType: !18, size: 16, offset: 1264)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !444, file: !443, line: 65, baseType: !482, size: 64, offset: 1152)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !484, line: 73, size: 1792, elements: !485)
!484 = !DIFile(filename: "blender/source/blender/makesdna/DNA_key_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!485 = !{!486, !487, !488, !509, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !483, file: !484, line: 74, baseType: !270, size: 960)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !483, file: !484, line: 75, baseType: !448, size: 64, offset: 960)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "refkey", scope: !483, file: !484, line: 80, baseType: !489, size: 64, offset: 1024)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!490 = !DIDerivedType(tag: DW_TAG_typedef, name: "KeyBlock", file: !484, line: 70, baseType: !491)
!491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KeyBlock", file: !484, line: 45, size: 1472, elements: !492)
!492 = !{!493, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !491, file: !484, line: 46, baseType: !494, size: 64)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !491, file: !484, line: 46, baseType: !494, size: 64, offset: 64)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !491, file: !484, line: 48, baseType: !336, size: 32, offset: 128)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !491, file: !484, line: 51, baseType: !336, size: 32, offset: 160)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !491, file: !484, line: 53, baseType: !18, size: 16, offset: 192)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !491, file: !484, line: 54, baseType: !18, size: 16, offset: 208)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "relative", scope: !491, file: !484, line: 56, baseType: !18, size: 16, offset: 224)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !491, file: !484, line: 57, baseType: !18, size: 16, offset: 240)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "totelem", scope: !491, file: !484, line: 59, baseType: !6, size: 32, offset: 256)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !491, file: !484, line: 60, baseType: !6, size: 32, offset: 288)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !491, file: !484, line: 62, baseType: !45, size: 64, offset: 320)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !491, file: !484, line: 63, baseType: !41, size: 512, offset: 384)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !491, file: !484, line: 64, baseType: !41, size: 512, offset: 896)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "slidermin", scope: !491, file: !484, line: 67, baseType: !336, size: 32, offset: 1408)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "slidermax", scope: !491, file: !484, line: 68, baseType: !336, size: 32, offset: 1440)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "elemstr", scope: !483, file: !484, line: 85, baseType: !510, size: 256, offset: 1088)
!510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 256, elements: !511)
!511 = !{!512}
!512 = !DISubrange(count: 32)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !483, file: !484, line: 86, baseType: !6, size: 32, offset: 1344)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !483, file: !484, line: 87, baseType: !6, size: 32, offset: 1376)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !483, file: !484, line: 89, baseType: !320, size: 128, offset: 1408)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !483, file: !484, line: 90, baseType: !462, size: 64, offset: 1536)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !483, file: !484, line: 92, baseType: !269, size: 64, offset: 1600)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !483, file: !484, line: 94, baseType: !18, size: 16, offset: 1664)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !483, file: !484, line: 95, baseType: !18, size: 16, offset: 1680)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "slurph", scope: !483, file: !484, line: 96, baseType: !18, size: 16, offset: 1696)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !483, file: !484, line: 97, baseType: !18, size: 16, offset: 1712)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !483, file: !484, line: 101, baseType: !336, size: 32, offset: 1728)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "uidgen", scope: !483, file: !484, line: 104, baseType: !6, size: 32, offset: 1760)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !444, file: !443, line: 66, baseType: !525, size: 64, offset: 1216)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !528, line: 93, size: 7552, elements: !529)
!528 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!529 = !{!530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !580, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2254}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !527, file: !528, line: 94, baseType: !270, size: 960)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !527, file: !528, line: 95, baseType: !448, size: 64, offset: 960)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !527, file: !528, line: 97, baseType: !18, size: 16, offset: 1024)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !527, file: !528, line: 97, baseType: !18, size: 16, offset: 1040)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !527, file: !528, line: 99, baseType: !336, size: 32, offset: 1056)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !527, file: !528, line: 99, baseType: !336, size: 32, offset: 1088)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !527, file: !528, line: 99, baseType: !336, size: 32, offset: 1120)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !527, file: !528, line: 100, baseType: !336, size: 32, offset: 1152)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !527, file: !528, line: 100, baseType: !336, size: 32, offset: 1184)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !527, file: !528, line: 100, baseType: !336, size: 32, offset: 1216)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !527, file: !528, line: 101, baseType: !336, size: 32, offset: 1248)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !527, file: !528, line: 101, baseType: !336, size: 32, offset: 1280)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !527, file: !528, line: 101, baseType: !336, size: 32, offset: 1312)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !527, file: !528, line: 102, baseType: !336, size: 32, offset: 1344)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !527, file: !528, line: 102, baseType: !336, size: 32, offset: 1376)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !527, file: !528, line: 102, baseType: !336, size: 32, offset: 1408)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !527, file: !528, line: 103, baseType: !336, size: 32, offset: 1440)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !527, file: !528, line: 103, baseType: !336, size: 32, offset: 1472)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !527, file: !528, line: 103, baseType: !336, size: 32, offset: 1504)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !527, file: !528, line: 103, baseType: !336, size: 32, offset: 1536)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !527, file: !528, line: 103, baseType: !336, size: 32, offset: 1568)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !527, file: !528, line: 104, baseType: !336, size: 32, offset: 1600)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !527, file: !528, line: 104, baseType: !336, size: 32, offset: 1632)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !527, file: !528, line: 104, baseType: !336, size: 32, offset: 1664)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !527, file: !528, line: 104, baseType: !336, size: 32, offset: 1696)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !527, file: !528, line: 104, baseType: !336, size: 32, offset: 1728)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !527, file: !528, line: 105, baseType: !336, size: 32, offset: 1760)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !527, file: !528, line: 108, baseType: !558, size: 704, offset: 1792)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !528, line: 53, size: 704, elements: !559)
!559 = !{!560, !561, !562, !563, !564, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !558, file: !528, line: 54, baseType: !336, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !558, file: !528, line: 55, baseType: !336, size: 32, offset: 32)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !558, file: !528, line: 56, baseType: !336, size: 32, offset: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !558, file: !528, line: 57, baseType: !336, size: 32, offset: 96)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !558, file: !528, line: 59, baseType: !565, size: 96, offset: 128)
!565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 96, elements: !566)
!566 = !{!458}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !558, file: !528, line: 60, baseType: !565, size: 96, offset: 224)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !558, file: !528, line: 61, baseType: !565, size: 96, offset: 320)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !558, file: !528, line: 63, baseType: !336, size: 32, offset: 416)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !558, file: !528, line: 64, baseType: !336, size: 32, offset: 448)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !558, file: !528, line: 65, baseType: !336, size: 32, offset: 480)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !558, file: !528, line: 67, baseType: !18, size: 16, offset: 512)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !558, file: !528, line: 68, baseType: !18, size: 16, offset: 528)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !558, file: !528, line: 69, baseType: !18, size: 16, offset: 544)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !558, file: !528, line: 70, baseType: !18, size: 16, offset: 560)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !558, file: !528, line: 72, baseType: !336, size: 32, offset: 576)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !558, file: !528, line: 73, baseType: !336, size: 32, offset: 608)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !558, file: !528, line: 74, baseType: !336, size: 32, offset: 640)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !558, file: !528, line: 75, baseType: !336, size: 32, offset: 672)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !527, file: !528, line: 109, baseType: !581, size: 128, offset: 2496)
!581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !528, line: 79, size: 128, elements: !582)
!582 = !{!583, !584, !585, !586}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !581, file: !528, line: 80, baseType: !6, size: 32)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !581, file: !528, line: 81, baseType: !6, size: 32, offset: 32)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !581, file: !528, line: 82, baseType: !6, size: 32, offset: 64)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !581, file: !528, line: 83, baseType: !6, size: 32, offset: 96)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !527, file: !528, line: 111, baseType: !336, size: 32, offset: 2624)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !527, file: !528, line: 111, baseType: !336, size: 32, offset: 2656)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !527, file: !528, line: 112, baseType: !336, size: 32, offset: 2688)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !527, file: !528, line: 112, baseType: !336, size: 32, offset: 2720)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !527, file: !528, line: 113, baseType: !336, size: 32, offset: 2752)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !527, file: !528, line: 114, baseType: !336, size: 32, offset: 2784)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !527, file: !528, line: 114, baseType: !336, size: 32, offset: 2816)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !527, file: !528, line: 115, baseType: !18, size: 16, offset: 2848)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !527, file: !528, line: 115, baseType: !18, size: 16, offset: 2864)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !527, file: !528, line: 116, baseType: !18, size: 16, offset: 2880)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !527, file: !528, line: 117, baseType: !20, size: 8, offset: 2896)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !527, file: !528, line: 117, baseType: !20, size: 8, offset: 2904)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !527, file: !528, line: 119, baseType: !336, size: 32, offset: 2912)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !527, file: !528, line: 119, baseType: !336, size: 32, offset: 2944)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !527, file: !528, line: 120, baseType: !18, size: 16, offset: 2976)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !527, file: !528, line: 120, baseType: !18, size: 16, offset: 2992)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !527, file: !528, line: 121, baseType: !336, size: 32, offset: 3008)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !527, file: !528, line: 121, baseType: !336, size: 32, offset: 3040)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !527, file: !528, line: 122, baseType: !336, size: 32, offset: 3072)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !527, file: !528, line: 123, baseType: !336, size: 32, offset: 3104)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !527, file: !528, line: 124, baseType: !18, size: 16, offset: 3136)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !527, file: !528, line: 125, baseType: !18, size: 16, offset: 3152)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !527, file: !528, line: 127, baseType: !6, size: 32, offset: 3168)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !527, file: !528, line: 127, baseType: !6, size: 32, offset: 3200)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !527, file: !528, line: 128, baseType: !6, size: 32, offset: 3232)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !527, file: !528, line: 128, baseType: !6, size: 32, offset: 3264)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !527, file: !528, line: 129, baseType: !18, size: 16, offset: 3296)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !527, file: !528, line: 129, baseType: !18, size: 16, offset: 3312)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !527, file: !528, line: 129, baseType: !18, size: 16, offset: 3328)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !527, file: !528, line: 129, baseType: !18, size: 16, offset: 3344)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !527, file: !528, line: 130, baseType: !336, size: 32, offset: 3360)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !527, file: !528, line: 130, baseType: !336, size: 32, offset: 3392)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !527, file: !528, line: 130, baseType: !336, size: 32, offset: 3424)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !527, file: !528, line: 130, baseType: !336, size: 32, offset: 3456)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !527, file: !528, line: 131, baseType: !336, size: 32, offset: 3488)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !527, file: !528, line: 131, baseType: !336, size: 32, offset: 3520)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !527, file: !528, line: 131, baseType: !336, size: 32, offset: 3552)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !527, file: !528, line: 131, baseType: !336, size: 32, offset: 3584)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !527, file: !528, line: 132, baseType: !336, size: 32, offset: 3616)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !527, file: !528, line: 132, baseType: !336, size: 32, offset: 3648)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !527, file: !528, line: 133, baseType: !41, size: 512, offset: 3680)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !527, file: !528, line: 135, baseType: !336, size: 32, offset: 4192)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !527, file: !528, line: 136, baseType: !336, size: 32, offset: 4224)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !527, file: !528, line: 137, baseType: !336, size: 32, offset: 4256)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !527, file: !528, line: 138, baseType: !6, size: 32, offset: 4288)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !527, file: !528, line: 141, baseType: !20, size: 8, offset: 4320)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !527, file: !528, line: 141, baseType: !20, size: 8, offset: 4328)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !527, file: !528, line: 141, baseType: !20, size: 8, offset: 4336)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !527, file: !528, line: 141, baseType: !20, size: 8, offset: 4344)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !527, file: !528, line: 142, baseType: !18, size: 16, offset: 4352)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !527, file: !528, line: 142, baseType: !18, size: 16, offset: 4368)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !527, file: !528, line: 142, baseType: !18, size: 16, offset: 4384)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !527, file: !528, line: 145, baseType: !20, size: 8, offset: 4400)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !527, file: !528, line: 145, baseType: !20, size: 8, offset: 4408)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !527, file: !528, line: 148, baseType: !18, size: 16, offset: 4416)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !527, file: !528, line: 148, baseType: !18, size: 16, offset: 4432)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !527, file: !528, line: 149, baseType: !336, size: 32, offset: 4448)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !527, file: !528, line: 149, baseType: !336, size: 32, offset: 4480)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !527, file: !528, line: 152, baseType: !405, size: 128, offset: 4512)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !527, file: !528, line: 153, baseType: !336, size: 32, offset: 4640)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !527, file: !528, line: 154, baseType: !336, size: 32, offset: 4672)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !527, file: !528, line: 157, baseType: !18, size: 16, offset: 4704)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !527, file: !528, line: 157, baseType: !18, size: 16, offset: 4720)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !527, file: !528, line: 160, baseType: !651, size: 64, offset: 4736)
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 64)
!652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !653, line: 113, size: 6208, elements: !654)
!653 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!654 = !{!655, !656, !657, !658, !659, !660, !664}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !652, file: !653, line: 114, baseType: !18, size: 16)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !652, file: !653, line: 114, baseType: !18, size: 16, offset: 16)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !652, file: !653, line: 115, baseType: !20, size: 8, offset: 32)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !652, file: !653, line: 115, baseType: !20, size: 8, offset: 40)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !652, file: !653, line: 116, baseType: !20, size: 8, offset: 48)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !652, file: !653, line: 117, baseType: !661, size: 8, offset: 56)
!661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 8, elements: !662)
!662 = !{!663}
!663 = !DISubrange(count: 1)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !652, file: !653, line: 119, baseType: !665, size: 6144, offset: 64)
!665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !666, size: 6144, elements: !511)
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !653, line: 109, baseType: !667)
!667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !653, line: 106, size: 192, elements: !668)
!668 = !{!669, !670, !671, !672, !673, !674}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !667, file: !653, line: 107, baseType: !336, size: 32)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !667, file: !653, line: 107, baseType: !336, size: 32, offset: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !667, file: !653, line: 107, baseType: !336, size: 32, offset: 64)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !667, file: !653, line: 107, baseType: !336, size: 32, offset: 96)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !667, file: !653, line: 107, baseType: !336, size: 32, offset: 128)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !667, file: !653, line: 108, baseType: !6, size: 32, offset: 160)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !527, file: !528, line: 161, baseType: !651, size: 64, offset: 4800)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !527, file: !528, line: 162, baseType: !20, size: 8, offset: 4864)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !527, file: !528, line: 162, baseType: !20, size: 8, offset: 4872)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !527, file: !528, line: 163, baseType: !20, size: 8, offset: 4880)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !527, file: !528, line: 163, baseType: !20, size: 8, offset: 4888)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !527, file: !528, line: 164, baseType: !18, size: 16, offset: 4896)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !527, file: !528, line: 164, baseType: !18, size: 16, offset: 4912)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !527, file: !528, line: 165, baseType: !336, size: 32, offset: 4928)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !527, file: !528, line: 165, baseType: !336, size: 32, offset: 4960)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !527, file: !528, line: 167, baseType: !685, size: 1152, offset: 4992)
!685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !686, size: 1152, elements: !2212)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64)
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !653, line: 57, size: 2496, elements: !688)
!688 = !{!689, !690, !691, !692, !693, !2007, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !687, file: !653, line: 59, baseType: !18, size: 16)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !687, file: !653, line: 59, baseType: !18, size: 16, offset: 16)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !687, file: !653, line: 59, baseType: !18, size: 16, offset: 32)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !687, file: !653, line: 59, baseType: !18, size: 16, offset: 48)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !687, file: !653, line: 60, baseType: !694, size: 64, offset: 64)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !197, line: 115, size: 11392, elements: !696)
!696 = !{!697, !698, !699, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !729, !730, !771, !772, !775, !776, !792, !793, !794, !795, !796, !797, !798, !799, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !877, !878, !879, !880, !881, !882, !883, !884, !885, !888, !891, !895, !896, !897, !898, !899, !902, !925, !1273, !1274, !1280, !1281, !1282, !1283, !1284, !1285, !1287, !1290, !1293, !1295, !1995, !1996}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !695, file: !197, line: 116, baseType: !270, size: 960)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !695, file: !197, line: 117, baseType: !448, size: 64, offset: 960)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !695, file: !197, line: 119, baseType: !700, size: 64, offset: 1024)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !197, line: 57, flags: DIFlagFwdDecl)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !695, file: !197, line: 121, baseType: !18, size: 16, offset: 1088)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !695, file: !197, line: 121, baseType: !18, size: 16, offset: 1104)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !695, file: !197, line: 122, baseType: !6, size: 32, offset: 1120)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !695, file: !197, line: 122, baseType: !6, size: 32, offset: 1152)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !695, file: !197, line: 122, baseType: !6, size: 32, offset: 1184)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !695, file: !197, line: 123, baseType: !41, size: 512, offset: 1216)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !695, file: !197, line: 124, baseType: !694, size: 64, offset: 1728)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !695, file: !197, line: 124, baseType: !694, size: 64, offset: 1792)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !695, file: !197, line: 127, baseType: !694, size: 64, offset: 1856)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !695, file: !197, line: 127, baseType: !694, size: 64, offset: 1920)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !695, file: !197, line: 127, baseType: !694, size: 64, offset: 1984)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !695, file: !197, line: 128, baseType: !462, size: 64, offset: 2048)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !695, file: !197, line: 130, baseType: !452, size: 64, offset: 2112)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !695, file: !197, line: 131, baseType: !716, size: 64, offset: 2176)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !718, line: 486, size: 1600, elements: !719)
!718 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!719 = !{!720, !721, !722, !723, !724, !725, !726, !727, !728}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !717, file: !718, line: 487, baseType: !270, size: 960)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !717, file: !718, line: 489, baseType: !320, size: 128, offset: 960)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !717, file: !718, line: 490, baseType: !320, size: 128, offset: 1088)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !717, file: !718, line: 491, baseType: !320, size: 128, offset: 1216)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !717, file: !718, line: 492, baseType: !320, size: 128, offset: 1344)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !717, file: !718, line: 494, baseType: !6, size: 32, offset: 1472)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !717, file: !718, line: 495, baseType: !6, size: 32, offset: 1504)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !717, file: !718, line: 497, baseType: !6, size: 32, offset: 1536)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !717, file: !718, line: 498, baseType: !6, size: 32, offset: 1568)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !695, file: !197, line: 132, baseType: !716, size: 64, offset: 2240)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !695, file: !197, line: 133, baseType: !731, size: 64, offset: 2304)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 64)
!732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !718, line: 334, size: 1728, elements: !733)
!733 = !{!734, !735, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !770}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !732, file: !718, line: 335, baseType: !320, size: 128)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !732, file: !718, line: 336, baseType: !736, size: 64, offset: 128)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !718, line: 47, flags: DIFlagFwdDecl)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !732, file: !718, line: 338, baseType: !18, size: 16, offset: 192)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !732, file: !718, line: 338, baseType: !18, size: 16, offset: 208)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !732, file: !718, line: 339, baseType: !13, size: 32, offset: 224)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !732, file: !718, line: 340, baseType: !6, size: 32, offset: 256)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !732, file: !718, line: 342, baseType: !336, size: 32, offset: 288)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !732, file: !718, line: 343, baseType: !565, size: 96, offset: 320)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !732, file: !718, line: 344, baseType: !565, size: 96, offset: 416)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !732, file: !718, line: 347, baseType: !320, size: 128, offset: 512)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !732, file: !718, line: 349, baseType: !6, size: 32, offset: 640)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !732, file: !718, line: 350, baseType: !6, size: 32, offset: 672)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !732, file: !718, line: 351, baseType: !45, size: 64, offset: 704)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !732, file: !718, line: 352, baseType: !45, size: 64, offset: 768)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !732, file: !718, line: 354, baseType: !751, size: 384, offset: 832)
!751 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !718, line: 116, baseType: !752)
!752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !718, line: 94, size: 384, elements: !753)
!753 = !{!754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !752, file: !718, line: 96, baseType: !6, size: 32)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !752, file: !718, line: 96, baseType: !6, size: 32, offset: 32)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !752, file: !718, line: 97, baseType: !6, size: 32, offset: 64)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !752, file: !718, line: 97, baseType: !6, size: 32, offset: 96)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !752, file: !718, line: 99, baseType: !18, size: 16, offset: 128)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !752, file: !718, line: 100, baseType: !18, size: 16, offset: 144)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !752, file: !718, line: 102, baseType: !18, size: 16, offset: 160)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !752, file: !718, line: 105, baseType: !18, size: 16, offset: 176)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !752, file: !718, line: 108, baseType: !18, size: 16, offset: 192)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !752, file: !718, line: 109, baseType: !18, size: 16, offset: 208)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !752, file: !718, line: 111, baseType: !18, size: 16, offset: 224)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !752, file: !718, line: 112, baseType: !18, size: 16, offset: 240)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !752, file: !718, line: 114, baseType: !6, size: 32, offset: 256)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !752, file: !718, line: 114, baseType: !6, size: 32, offset: 288)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !752, file: !718, line: 115, baseType: !6, size: 32, offset: 320)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !752, file: !718, line: 115, baseType: !6, size: 32, offset: 352)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !732, file: !718, line: 355, baseType: !41, size: 512, offset: 1216)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !695, file: !197, line: 134, baseType: !45, size: 64, offset: 2368)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !695, file: !197, line: 136, baseType: !773, size: 64, offset: 2432)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !450, line: 61, flags: DIFlagFwdDecl)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !695, file: !197, line: 138, baseType: !751, size: 384, offset: 2496)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !695, file: !197, line: 139, baseType: !777, size: 64, offset: 2880)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !718, line: 80, baseType: !779)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !718, line: 72, size: 192, elements: !780)
!780 = !{!781, !788, !789, !790, !791}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !779, file: !718, line: 73, baseType: !782, size: 64)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !718, line: 59, baseType: !784)
!784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !718, line: 56, size: 128, elements: !785)
!785 = !{!786, !787}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !784, file: !718, line: 57, baseType: !565, size: 96)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !784, file: !718, line: 58, baseType: !6, size: 32, offset: 96)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !779, file: !718, line: 74, baseType: !6, size: 32, offset: 64)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !779, file: !718, line: 76, baseType: !6, size: 32, offset: 96)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !779, file: !718, line: 77, baseType: !6, size: 32, offset: 128)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !779, file: !718, line: 79, baseType: !6, size: 32, offset: 160)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !695, file: !197, line: 141, baseType: !320, size: 128, offset: 2944)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !695, file: !197, line: 142, baseType: !320, size: 128, offset: 3072)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !695, file: !197, line: 143, baseType: !320, size: 128, offset: 3200)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !695, file: !197, line: 144, baseType: !320, size: 128, offset: 3328)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !695, file: !197, line: 146, baseType: !6, size: 32, offset: 3456)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !695, file: !197, line: 147, baseType: !6, size: 32, offset: 3488)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !695, file: !197, line: 150, baseType: !525, size: 64, offset: 3520)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !695, file: !197, line: 151, baseType: !800, size: 64, offset: 3584)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !695, file: !197, line: 152, baseType: !6, size: 32, offset: 3648)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !695, file: !197, line: 153, baseType: !6, size: 32, offset: 3680)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !695, file: !197, line: 156, baseType: !565, size: 96, offset: 3712)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !695, file: !197, line: 156, baseType: !565, size: 96, offset: 3808)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !695, file: !197, line: 156, baseType: !565, size: 96, offset: 3904)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !695, file: !197, line: 157, baseType: !565, size: 96, offset: 4000)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !695, file: !197, line: 158, baseType: !565, size: 96, offset: 4096)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !695, file: !197, line: 159, baseType: !565, size: 96, offset: 4192)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !695, file: !197, line: 160, baseType: !565, size: 96, offset: 4288)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !695, file: !197, line: 160, baseType: !565, size: 96, offset: 4384)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !695, file: !197, line: 161, baseType: !405, size: 128, offset: 4480)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !695, file: !197, line: 161, baseType: !405, size: 128, offset: 4608)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !695, file: !197, line: 162, baseType: !565, size: 96, offset: 4736)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !695, file: !197, line: 162, baseType: !565, size: 96, offset: 4832)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !695, file: !197, line: 163, baseType: !336, size: 32, offset: 4928)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !695, file: !197, line: 163, baseType: !336, size: 32, offset: 4960)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !695, file: !197, line: 164, baseType: !818, size: 512, offset: 4992)
!818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 512, elements: !819)
!819 = !{!338, !338}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !695, file: !197, line: 165, baseType: !818, size: 512, offset: 5504)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !695, file: !197, line: 166, baseType: !818, size: 512, offset: 6016)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !695, file: !197, line: 167, baseType: !818, size: 512, offset: 6528)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !695, file: !197, line: 176, baseType: !818, size: 512, offset: 7040)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !695, file: !197, line: 178, baseType: !13, size: 32, offset: 7552)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !695, file: !197, line: 180, baseType: !18, size: 16, offset: 7584)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !695, file: !197, line: 181, baseType: !18, size: 16, offset: 7600)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !695, file: !197, line: 183, baseType: !18, size: 16, offset: 7616)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !695, file: !197, line: 183, baseType: !18, size: 16, offset: 7632)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !695, file: !197, line: 184, baseType: !18, size: 16, offset: 7648)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !695, file: !197, line: 184, baseType: !18, size: 16, offset: 7664)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !695, file: !197, line: 185, baseType: !18, size: 16, offset: 7680)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !695, file: !197, line: 186, baseType: !18, size: 16, offset: 7696)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !695, file: !197, line: 187, baseType: !18, size: 16, offset: 7712)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !695, file: !197, line: 188, baseType: !20, size: 8, offset: 7728)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !695, file: !197, line: 189, baseType: !20, size: 8, offset: 7736)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !695, file: !197, line: 192, baseType: !6, size: 32, offset: 7744)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !695, file: !197, line: 192, baseType: !6, size: 32, offset: 7776)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !695, file: !197, line: 192, baseType: !6, size: 32, offset: 7808)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !695, file: !197, line: 192, baseType: !6, size: 32, offset: 7840)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !695, file: !197, line: 194, baseType: !6, size: 32, offset: 7872)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !695, file: !197, line: 202, baseType: !336, size: 32, offset: 7904)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !695, file: !197, line: 202, baseType: !336, size: 32, offset: 7936)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !695, file: !197, line: 202, baseType: !336, size: 32, offset: 7968)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !695, file: !197, line: 211, baseType: !336, size: 32, offset: 8000)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !695, file: !197, line: 212, baseType: !336, size: 32, offset: 8032)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !695, file: !197, line: 213, baseType: !336, size: 32, offset: 8064)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !695, file: !197, line: 214, baseType: !336, size: 32, offset: 8096)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !695, file: !197, line: 215, baseType: !336, size: 32, offset: 8128)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !695, file: !197, line: 216, baseType: !336, size: 32, offset: 8160)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !695, file: !197, line: 219, baseType: !336, size: 32, offset: 8192)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !695, file: !197, line: 220, baseType: !336, size: 32, offset: 8224)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !695, file: !197, line: 221, baseType: !336, size: 32, offset: 8256)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !695, file: !197, line: 224, baseType: !854, size: 16, offset: 8288)
!854 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !695, file: !197, line: 224, baseType: !854, size: 16, offset: 8304)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !695, file: !197, line: 226, baseType: !18, size: 16, offset: 8320)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !695, file: !197, line: 228, baseType: !20, size: 8, offset: 8336)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !695, file: !197, line: 229, baseType: !20, size: 8, offset: 8344)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !695, file: !197, line: 231, baseType: !18, size: 16, offset: 8352)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !695, file: !197, line: 232, baseType: !20, size: 8, offset: 8368)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !695, file: !197, line: 233, baseType: !20, size: 8, offset: 8376)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !695, file: !197, line: 234, baseType: !336, size: 32, offset: 8384)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !695, file: !197, line: 235, baseType: !336, size: 32, offset: 8416)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !695, file: !197, line: 237, baseType: !320, size: 128, offset: 8448)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !695, file: !197, line: 238, baseType: !320, size: 128, offset: 8576)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !695, file: !197, line: 239, baseType: !320, size: 128, offset: 8704)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !695, file: !197, line: 240, baseType: !320, size: 128, offset: 8832)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !695, file: !197, line: 242, baseType: !336, size: 32, offset: 8960)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !695, file: !197, line: 244, baseType: !18, size: 16, offset: 8992)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !695, file: !197, line: 245, baseType: !854, size: 16, offset: 9008)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !695, file: !197, line: 246, baseType: !405, size: 128, offset: 9024)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !695, file: !197, line: 248, baseType: !6, size: 32, offset: 9152)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !695, file: !197, line: 249, baseType: !6, size: 32, offset: 9184)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !695, file: !197, line: 251, baseType: !875, size: 64, offset: 9216)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!876 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !197, line: 251, flags: DIFlagFwdDecl)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !695, file: !197, line: 253, baseType: !20, size: 8, offset: 9280)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !695, file: !197, line: 254, baseType: !20, size: 8, offset: 9288)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !695, file: !197, line: 255, baseType: !18, size: 16, offset: 9296)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !695, file: !197, line: 256, baseType: !565, size: 96, offset: 9312)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !695, file: !197, line: 258, baseType: !320, size: 128, offset: 9408)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !695, file: !197, line: 259, baseType: !320, size: 128, offset: 9536)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !695, file: !197, line: 260, baseType: !320, size: 128, offset: 9664)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !695, file: !197, line: 261, baseType: !320, size: 128, offset: 9792)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !695, file: !197, line: 263, baseType: !886, size: 64, offset: 9920)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !197, line: 52, flags: DIFlagFwdDecl)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !695, file: !197, line: 264, baseType: !889, size: 64, offset: 9984)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64)
!890 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !197, line: 53, flags: DIFlagFwdDecl)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !695, file: !197, line: 265, baseType: !892, size: 64, offset: 10048)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !894, line: 43, flags: DIFlagFwdDecl)
!894 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!895 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !695, file: !197, line: 267, baseType: !20, size: 8, offset: 10112)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !695, file: !197, line: 268, baseType: !20, size: 8, offset: 10120)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !695, file: !197, line: 269, baseType: !18, size: 16, offset: 10128)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !695, file: !197, line: 270, baseType: !336, size: 32, offset: 10144)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !695, file: !197, line: 272, baseType: !900, size: 64, offset: 10176)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !197, line: 54, flags: DIFlagFwdDecl)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !695, file: !197, line: 275, baseType: !903, size: 64, offset: 10240)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !905, line: 49, size: 448, elements: !906)
!905 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_curve.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!906 = !{!907, !908, !909, !910}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !904, file: !905, line: 50, baseType: !320, size: 128)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "bev", scope: !904, file: !905, line: 51, baseType: !320, size: 128, offset: 128)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "deformed_nurbs", scope: !904, file: !905, line: 52, baseType: !320, size: 128, offset: 256)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !904, file: !905, line: 53, baseType: !911, size: 64, offset: 384)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Path", file: !913, line: 65, size: 128, elements: !914)
!913 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!914 = !{!915, !923, !924}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !912, file: !913, line: 66, baseType: !916, size: 64)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PathPoint", file: !913, line: 56, size: 320, elements: !918)
!918 = !{!919, !920, !921, !922}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !917, file: !913, line: 57, baseType: !405, size: 128)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !917, file: !913, line: 58, baseType: !405, size: 128, offset: 128)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !917, file: !913, line: 59, baseType: !336, size: 32, offset: 256)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !917, file: !913, line: 59, baseType: !336, size: 32, offset: 288)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !912, file: !913, line: 67, baseType: !6, size: 32, offset: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "totdist", scope: !912, file: !913, line: 68, baseType: !336, size: 32, offset: 96)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !695, file: !197, line: 277, baseType: !926, size: 64, offset: 10304)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !68, line: 178, size: 13504, elements: !928)
!928 = !{!929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !946, !949, !951, !952, !954, !955, !956, !957, !963, !968, !969, !973, !974, !975, !976, !977, !989, !1001, !1006, !1010, !1014, !1018, !1027, !1039, !1043, !1047, !1051, !1055, !1059, !1060, !1061, !1062, !1063, !1064, !1068, !1069, !1070, !1071, !1075, !1076, !1077, !1078, !1079, !1083, !1084, !1085, !1086, !1087, !1091, !1092, !1093, !1094, !1095, !1102, !1113, !1118, !1124, !1134, !1139, !1150, !1157, !1164, !1168, !1173, !1177, !1182, !1183, !1184, !1191, !1197, !1198, !1199, !1204, !1205, !1214, !1230, !1234, !1242, !1246, !1250, !1254, !1262, !1272}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !927, file: !68, line: 180, baseType: !23, size: 1600)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !927, file: !68, line: 180, baseType: !23, size: 1600, offset: 1600)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !927, file: !68, line: 180, baseType: !23, size: 1600, offset: 3200)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !927, file: !68, line: 180, baseType: !23, size: 1600, offset: 4800)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !927, file: !68, line: 180, baseType: !23, size: 1600, offset: 6400)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !927, file: !68, line: 181, baseType: !6, size: 32, offset: 8000)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !927, file: !68, line: 181, baseType: !6, size: 32, offset: 8032)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !927, file: !68, line: 181, baseType: !6, size: 32, offset: 8064)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !927, file: !68, line: 181, baseType: !6, size: 32, offset: 8096)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !927, file: !68, line: 181, baseType: !6, size: 32, offset: 8128)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !927, file: !68, line: 182, baseType: !6, size: 32, offset: 8160)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !927, file: !68, line: 183, baseType: !6, size: 32, offset: 8192)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !927, file: !68, line: 184, baseType: !942, size: 64, offset: 8256)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !943, line: 124, baseType: !944)
!943 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64)
!945 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !943, line: 124, flags: DIFlagFwdDecl)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !927, file: !68, line: 185, baseType: !947, size: 64, offset: 8320)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64)
!948 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !68, line: 97, flags: DIFlagFwdDecl)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !927, file: !68, line: 186, baseType: !950, size: 32, offset: 8384)
!950 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !68, line: 132, baseType: !67)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !927, file: !68, line: 187, baseType: !336, size: 32, offset: 8416)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !927, file: !68, line: 188, baseType: !953, size: 32, offset: 8448)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !68, line: 175, baseType: !73)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !927, file: !68, line: 189, baseType: !6, size: 32, offset: 8480)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !927, file: !68, line: 190, baseType: !525, size: 64, offset: 8512)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !927, file: !68, line: 193, baseType: !20, size: 8, offset: 8576)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !927, file: !68, line: 196, baseType: !958, size: 64, offset: 8640)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = !DISubroutineType(types: !960)
!960 = !{null, !961}
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !68, line: 177, baseType: !927)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !927, file: !68, line: 199, baseType: !964, size: 64, offset: 8704)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64)
!965 = !DISubroutineType(types: !966)
!966 = !{null, !961, !967}
!967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !336)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !927, file: !68, line: 202, baseType: !958, size: 64, offset: 8768)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !927, file: !68, line: 207, baseType: !970, size: 64, offset: 8832)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64)
!971 = !DISubroutineType(types: !972)
!972 = !{!6, !961}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !927, file: !68, line: 208, baseType: !970, size: 64, offset: 8896)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !927, file: !68, line: 209, baseType: !970, size: 64, offset: 8960)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !927, file: !68, line: 210, baseType: !970, size: 64, offset: 9024)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !927, file: !68, line: 211, baseType: !970, size: 64, offset: 9088)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !927, file: !68, line: 218, baseType: !978, size: 64, offset: 9152)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!979 = !DISubroutineType(types: !980)
!980 = !{null, !961, !6, !981}
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !9, line: 65, size: 160, elements: !983)
!983 = !{!984, !985, !987, !988}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !982, file: !9, line: 66, baseType: !565, size: 96)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !982, file: !9, line: 67, baseType: !986, size: 48, offset: 96)
!986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !18, size: 48, elements: !566)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !982, file: !9, line: 68, baseType: !20, size: 8, offset: 144)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !982, file: !9, line: 68, baseType: !20, size: 8, offset: 152)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !927, file: !68, line: 219, baseType: !990, size: 64, offset: 9216)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = !DISubroutineType(types: !992)
!992 = !{null, !961, !6, !993}
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !9, line: 48, size: 96, elements: !995)
!995 = !{!996, !997, !998, !999, !1000}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !994, file: !9, line: 49, baseType: !13, size: 32)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !994, file: !9, line: 49, baseType: !13, size: 32, offset: 32)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !994, file: !9, line: 50, baseType: !20, size: 8, offset: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !994, file: !9, line: 50, baseType: !20, size: 8, offset: 72)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !994, file: !9, line: 51, baseType: !18, size: 16, offset: 80)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !927, file: !68, line: 220, baseType: !1002, size: 64, offset: 9280)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1003 = !DISubroutineType(types: !1004)
!1004 = !{null, !961, !6, !1005}
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !927, file: !68, line: 227, baseType: !1007, size: 64, offset: 9344)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!981, !961}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !927, file: !68, line: 228, baseType: !1011, size: 64, offset: 9408)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1012 = !DISubroutineType(types: !1013)
!1013 = !{!993, !961}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !927, file: !68, line: 229, baseType: !1015, size: 64, offset: 9472)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64)
!1016 = !DISubroutineType(types: !1017)
!1017 = !{!1005, !961}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !927, file: !68, line: 230, baseType: !1019, size: 64, offset: 9536)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!1022, !961}
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !9, line: 88, size: 64, elements: !1024)
!1024 = !{!1025, !1026}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !1023, file: !9, line: 89, baseType: !13, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1023, file: !9, line: 90, baseType: !13, size: 32, offset: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !927, file: !68, line: 231, baseType: !1028, size: 64, offset: 9600)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{!1031, !961}
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !9, line: 79, size: 96, elements: !1033)
!1033 = !{!1034, !1035, !1036, !1037, !1038}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !1032, file: !9, line: 81, baseType: !6, size: 32)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !1032, file: !9, line: 82, baseType: !6, size: 32, offset: 32)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1032, file: !9, line: 83, baseType: !18, size: 16, offset: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1032, file: !9, line: 84, baseType: !20, size: 8, offset: 80)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1032, file: !9, line: 84, baseType: !20, size: 8, offset: 88)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !927, file: !68, line: 236, baseType: !1040, size: 64, offset: 9664)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{null, !961, !981}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !927, file: !68, line: 237, baseType: !1044, size: 64, offset: 9728)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{null, !961, !993}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !927, file: !68, line: 238, baseType: !1048, size: 64, offset: 9792)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{null, !961, !1005}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !927, file: !68, line: 239, baseType: !1052, size: 64, offset: 9856)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1053 = !DISubroutineType(types: !1054)
!1054 = !{null, !961, !1022}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !927, file: !68, line: 240, baseType: !1056, size: 64, offset: 9920)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{null, !961, !1031}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !927, file: !68, line: 245, baseType: !1007, size: 64, offset: 9984)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !927, file: !68, line: 246, baseType: !1011, size: 64, offset: 10048)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !927, file: !68, line: 247, baseType: !1015, size: 64, offset: 10112)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !927, file: !68, line: 248, baseType: !1019, size: 64, offset: 10176)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !927, file: !68, line: 249, baseType: !1028, size: 64, offset: 10240)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !927, file: !68, line: 255, baseType: !1065, size: 64, offset: 10304)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = !DISubroutineType(types: !1067)
!1067 = !{!45, !961, !6, !6}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !927, file: !68, line: 256, baseType: !1065, size: 64, offset: 10368)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !927, file: !68, line: 257, baseType: !1065, size: 64, offset: 10432)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !927, file: !68, line: 258, baseType: !1065, size: 64, offset: 10496)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !927, file: !68, line: 264, baseType: !1072, size: 64, offset: 10560)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!45, !961, !6}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !927, file: !68, line: 265, baseType: !1072, size: 64, offset: 10624)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !927, file: !68, line: 266, baseType: !1072, size: 64, offset: 10688)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !927, file: !68, line: 267, baseType: !1072, size: 64, offset: 10752)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !927, file: !68, line: 268, baseType: !1072, size: 64, offset: 10816)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !927, file: !68, line: 272, baseType: !1080, size: 64, offset: 10880)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{!22, !961}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !927, file: !68, line: 273, baseType: !1080, size: 64, offset: 10944)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !927, file: !68, line: 274, baseType: !1080, size: 64, offset: 11008)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !927, file: !68, line: 275, baseType: !1080, size: 64, offset: 11072)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !927, file: !68, line: 276, baseType: !1080, size: 64, offset: 11136)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !927, file: !68, line: 279, baseType: !1088, size: 64, offset: 11200)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{null, !961, !6, !22, !6}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !927, file: !68, line: 280, baseType: !1088, size: 64, offset: 11264)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !927, file: !68, line: 281, baseType: !1088, size: 64, offset: 11328)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !927, file: !68, line: 284, baseType: !970, size: 64, offset: 11392)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !927, file: !68, line: 285, baseType: !970, size: 64, offset: 11456)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !927, file: !68, line: 286, baseType: !1096, size: 64, offset: 11520)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{!1099, !961}
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !68, line: 82, flags: DIFlagFwdDecl)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !927, file: !68, line: 287, baseType: !1103, size: 64, offset: 11584)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{!1106, !961}
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !68, line: 120, baseType: !1108)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !68, line: 117, size: 256, elements: !1109)
!1109 = !{!1110, !1112}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1108, file: !68, line: 118, baseType: !1111, size: 128)
!1111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 128, elements: !406)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !1108, file: !68, line: 119, baseType: !1111, size: 128, offset: 128)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !927, file: !68, line: 288, baseType: !1114, size: 64, offset: 11648)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!1117, !961}
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !927, file: !68, line: 289, baseType: !1119, size: 64, offset: 11712)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{null, !961, !1122}
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !68, line: 83, flags: DIFlagFwdDecl)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !927, file: !68, line: 290, baseType: !1125, size: 64, offset: 11776)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!1128, !961}
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !68, line: 126, baseType: !1130)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !68, line: 123, size: 32, elements: !1131)
!1131 = !{!1132, !1133}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1130, file: !68, line: 124, baseType: !18, size: 16)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1130, file: !68, line: 125, baseType: !20, size: 8, offset: 16)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !927, file: !68, line: 291, baseType: !1135, size: 64, offset: 11840)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{!1138, !961}
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !927, file: !68, line: 299, baseType: !1140, size: 64, offset: 11904)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64)
!1141 = !DISubroutineType(types: !1142)
!1142 = !{null, !961, !1143, !45, !1149}
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64)
!1144 = !DISubroutineType(types: !1145)
!1145 = !{null, !45, !6, !1146, !1146, !1147}
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!1148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !68, line: 162, baseType: !78)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !927, file: !68, line: 309, baseType: !1151, size: 64, offset: 11968)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{null, !961, !1154, !45}
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{null, !45, !6, !1146, !1146}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !927, file: !68, line: 317, baseType: !1158, size: 64, offset: 12032)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = !DISubroutineType(types: !1160)
!1160 = !{null, !961, !1161, !45, !1149}
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{null, !45, !6, !6, !1146, !1146}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !927, file: !68, line: 327, baseType: !1165, size: 64, offset: 12096)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1166 = !DISubroutineType(types: !1167)
!1167 = !{null, !961, !1154, !45, !1149}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !927, file: !68, line: 337, baseType: !1169, size: 64, offset: 12160)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64)
!1170 = !DISubroutineType(types: !1171)
!1171 = !{null, !961, !1172, !1172}
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !927, file: !68, line: 344, baseType: !1174, size: 64, offset: 12224)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{null, !961, !6, !1172}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !927, file: !68, line: 347, baseType: !1178, size: 64, offset: 12288)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{null, !961, !1181}
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !927, file: !68, line: 350, baseType: !1174, size: 64, offset: 12352)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !927, file: !68, line: 351, baseType: !1174, size: 64, offset: 12416)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !927, file: !68, line: 355, baseType: !1185, size: 64, offset: 12480)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 64)
!1186 = !DISubroutineType(types: !1187)
!1187 = !{!1188, !694, !961}
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1190)
!1190 = !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !68, line: 355, flags: DIFlagFwdDecl)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !927, file: !68, line: 359, baseType: !1192, size: 64, offset: 12544)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64)
!1193 = !DISubroutineType(types: !1194)
!1194 = !{!1195, !694, !961}
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!1196 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !68, line: 100, flags: DIFlagFwdDecl)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !927, file: !68, line: 364, baseType: !958, size: 64, offset: 12608)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !927, file: !68, line: 367, baseType: !958, size: 64, offset: 12672)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !927, file: !68, line: 373, baseType: !1200, size: 64, offset: 12736)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DISubroutineType(types: !1202)
!1202 = !{null, !961, !1203, !1203}
!1203 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !927, file: !68, line: 376, baseType: !958, size: 64, offset: 12800)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !927, file: !68, line: 385, baseType: !1206, size: 64, offset: 12864)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64)
!1207 = !DISubroutineType(types: !1208)
!1208 = !{null, !961, !1209, !1203, !1210}
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !68, line: 146, baseType: !1211)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{!6, !6, !45}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !927, file: !68, line: 391, baseType: !1215, size: 64, offset: 12928)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1216 = !DISubroutineType(types: !1217)
!1217 = !{null, !961, !1218, !1225, !45, !1229}
!1218 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !68, line: 150, baseType: !1219)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64)
!1220 = !DISubroutineType(types: !1221)
!1221 = !{!1222, !1223, !1224, !6}
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !68, line: 143, baseType: !82)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1203)
!1225 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !68, line: 147, baseType: !1226)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!1227 = !DISubroutineType(types: !1228)
!1228 = !{!6, !45, !6, !6}
!1229 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !68, line: 157, baseType: !88)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !927, file: !68, line: 400, baseType: !1231, size: 64, offset: 12992)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{null, !961, !1210}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !927, file: !68, line: 415, baseType: !1235, size: 64, offset: 13056)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{null, !961, !1238, !1210, !1225, !45, !1229}
!1238 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !68, line: 149, baseType: !1239)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{!1222, !45, !6}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !927, file: !68, line: 425, baseType: !1243, size: 64, offset: 13120)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1244 = !DISubroutineType(types: !1245)
!1245 = !{null, !961, !1238, !1225, !45, !1229}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !927, file: !68, line: 435, baseType: !1247, size: 64, offset: 13184)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{null, !961, !1210, !1238, !45}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !927, file: !68, line: 444, baseType: !1251, size: 64, offset: 13248)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64)
!1252 = !DISubroutineType(types: !1253)
!1253 = !{null, !961, !1238, !45}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !927, file: !68, line: 455, baseType: !1255, size: 64, offset: 13312)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = !DISubroutineType(types: !1257)
!1257 = !{null, !961, !1238, !1258, !45}
!1258 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !68, line: 148, baseType: !1259)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64)
!1260 = !DISubroutineType(types: !1261)
!1261 = !{null, !45, !6, !336}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !927, file: !68, line: 464, baseType: !1263, size: 64, offset: 13376)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{null, !961, !1266, !1269, !45}
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!1267 = !DISubroutineType(types: !1268)
!1268 = !{null, !45, !6, !45}
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = !DISubroutineType(types: !1271)
!1271 = !{!1203, !45, !6}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !927, file: !68, line: 470, baseType: !958, size: 64, offset: 13440)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !695, file: !197, line: 277, baseType: !926, size: 64, offset: 10368)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !695, file: !197, line: 278, baseType: !1275, size: 64, offset: 10432)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1276, line: 27, baseType: !1277)
!1276 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1278, line: 45, baseType: !1279)
!1278 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1279 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !695, file: !197, line: 279, baseType: !1275, size: 64, offset: 10496)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !695, file: !197, line: 280, baseType: !13, size: 32, offset: 10560)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !695, file: !197, line: 281, baseType: !13, size: 32, offset: 10592)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !695, file: !197, line: 283, baseType: !320, size: 128, offset: 10624)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !695, file: !197, line: 284, baseType: !320, size: 128, offset: 10752)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !695, file: !197, line: 285, baseType: !1286, size: 64, offset: 10880)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !695, file: !197, line: 287, baseType: !1288, size: 64, offset: 10944)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64)
!1289 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !197, line: 59, flags: DIFlagFwdDecl)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !695, file: !197, line: 288, baseType: !1291, size: 64, offset: 11008)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64)
!1292 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !197, line: 288, flags: DIFlagFwdDecl)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !695, file: !197, line: 290, baseType: !1294, size: 64, offset: 11072)
!1294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 64, elements: !386)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !695, file: !197, line: 291, baseType: !1296, size: 64, offset: 11136)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !343, line: 65, baseType: !1298)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !343, line: 50, size: 320, elements: !1299)
!1299 = !{!1300, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1298, file: !343, line: 51, baseType: !1301, size: 64)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !450, line: 1216, size: 39680, elements: !1303)
!1303 = !{!1304, !1305, !1306, !1307, !1310, !1311, !1312, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1338, !1341, !1565, !1568, !1856, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1878, !1879, !1880, !1881, !1882, !1890, !1956, !1963, !1964, !1971, !1974, !1975, !1976, !1977, !1978, !1979}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1302, file: !450, line: 1217, baseType: !270, size: 960)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1302, file: !450, line: 1218, baseType: !448, size: 64, offset: 960)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1302, file: !450, line: 1220, baseType: !694, size: 64, offset: 1024)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !1302, file: !450, line: 1221, baseType: !1308, size: 64, offset: 1088)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1309 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !450, line: 52, flags: DIFlagFwdDecl)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1302, file: !450, line: 1223, baseType: !1301, size: 64, offset: 1152)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1302, file: !450, line: 1225, baseType: !320, size: 128, offset: 1216)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !1302, file: !450, line: 1226, baseType: !1313, size: 64, offset: 1344)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 64)
!1314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !450, line: 69, size: 320, elements: !1315)
!1315 = !{!1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1314, file: !450, line: 70, baseType: !1313, size: 64)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1314, file: !450, line: 70, baseType: !1313, size: 64, offset: 64)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1314, file: !450, line: 71, baseType: !13, size: 32, offset: 128)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1314, file: !450, line: 71, baseType: !13, size: 32, offset: 160)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1314, file: !450, line: 72, baseType: !6, size: 32, offset: 192)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1314, file: !450, line: 73, baseType: !18, size: 16, offset: 224)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1314, file: !450, line: 73, baseType: !18, size: 16, offset: 240)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1314, file: !450, line: 74, baseType: !694, size: 64, offset: 256)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !1302, file: !450, line: 1227, baseType: !694, size: 64, offset: 1408)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1302, file: !450, line: 1229, baseType: !565, size: 96, offset: 1472)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !1302, file: !450, line: 1230, baseType: !565, size: 96, offset: 1568)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !1302, file: !450, line: 1231, baseType: !565, size: 96, offset: 1664)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !1302, file: !450, line: 1231, baseType: !565, size: 96, offset: 1760)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1302, file: !450, line: 1233, baseType: !13, size: 32, offset: 1856)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !1302, file: !450, line: 1234, baseType: !6, size: 32, offset: 1888)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !1302, file: !450, line: 1235, baseType: !13, size: 32, offset: 1920)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1302, file: !450, line: 1237, baseType: !18, size: 16, offset: 1952)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1302, file: !450, line: 1239, baseType: !20, size: 8, offset: 1968)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1302, file: !450, line: 1240, baseType: !661, size: 8, offset: 1976)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1302, file: !450, line: 1242, baseType: !1336, size: 64, offset: 1984)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!1337 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !450, line: 57, flags: DIFlagFwdDecl)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !1302, file: !450, line: 1244, baseType: !1339, size: 64, offset: 2048)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1340 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !450, line: 59, flags: DIFlagFwdDecl)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !1302, file: !450, line: 1246, baseType: !1342, size: 64, offset: 2112)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !450, line: 1067, size: 5184, elements: !1344)
!1344 = !{!1345, !1383, !1384, !1399, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1421, !1437, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1548}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1343, file: !450, line: 1068, baseType: !1346, size: 64)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1347 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !450, line: 934, baseType: !1348)
!1348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !450, line: 925, size: 576, elements: !1349)
!1349 = !{!1350, !1366, !1367, !1368, !1369, !1370, !1382}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1348, file: !450, line: 926, baseType: !1351, size: 320)
!1351 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !450, line: 830, baseType: !1352)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !450, line: 813, size: 320, elements: !1353)
!1353 = !{!1354, !1357, !1360, !1361, !1363, !1364, !1365}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1352, file: !450, line: 814, baseType: !1355, size: 64)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !450, line: 51, flags: DIFlagFwdDecl)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1352, file: !450, line: 815, baseType: !1358, size: 64, offset: 64)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64)
!1359 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !450, line: 815, flags: DIFlagFwdDecl)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1352, file: !450, line: 818, baseType: !45, size: 64, offset: 128)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1352, file: !450, line: 819, baseType: !1362, size: 32, offset: 192)
!1362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1203, size: 32, elements: !406)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1352, file: !450, line: 822, baseType: !6, size: 32, offset: 224)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1352, file: !450, line: 826, baseType: !6, size: 32, offset: 256)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1352, file: !450, line: 829, baseType: !6, size: 32, offset: 288)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1348, file: !450, line: 928, baseType: !18, size: 16, offset: 320)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1348, file: !450, line: 928, baseType: !18, size: 16, offset: 336)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1348, file: !450, line: 929, baseType: !6, size: 32, offset: 352)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1348, file: !450, line: 930, baseType: !378, size: 64, offset: 384)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1348, file: !450, line: 931, baseType: !1371, size: 64, offset: 448)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !9, line: 59, size: 128, elements: !1373)
!1373 = !{!1374, !1380, !1381}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !1372, file: !9, line: 60, baseType: !1375, size: 64)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !9, line: 54, size: 64, elements: !1377)
!1377 = !{!1378, !1379}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !1376, file: !9, line: 55, baseType: !6, size: 32)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1376, file: !9, line: 56, baseType: !336, size: 32, offset: 32)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !1372, file: !9, line: 61, baseType: !6, size: 32, offset: 64)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1372, file: !9, line: 62, baseType: !6, size: 32, offset: 96)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1348, file: !450, line: 933, baseType: !45, size: 64, offset: 512)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1343, file: !450, line: 1069, baseType: !1346, size: 64, offset: 64)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1343, file: !450, line: 1070, baseType: !1385, size: 64, offset: 128)
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 64)
!1386 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !450, line: 916, baseType: !1387)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !450, line: 891, size: 704, elements: !1388)
!1388 = !{!1389, !1390, !1391, !1393, !1394, !1395, !1396, !1397, !1398}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1387, file: !450, line: 892, baseType: !1351, size: 320)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1387, file: !450, line: 896, baseType: !6, size: 32, offset: 320)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1387, file: !450, line: 900, baseType: !1392, size: 96, offset: 352)
!1392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 96, elements: !566)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1387, file: !450, line: 903, baseType: !336, size: 32, offset: 448)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1387, file: !450, line: 906, baseType: !6, size: 32, offset: 480)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1387, file: !450, line: 909, baseType: !336, size: 32, offset: 512)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1387, file: !450, line: 912, baseType: !336, size: 32, offset: 544)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1387, file: !450, line: 914, baseType: !694, size: 64, offset: 576)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1387, file: !450, line: 915, baseType: !45, size: 64, offset: 640)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1343, file: !450, line: 1071, baseType: !1400, size: 64, offset: 192)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 64)
!1401 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !450, line: 920, baseType: !1402)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !450, line: 918, size: 320, elements: !1403)
!1403 = !{!1404}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1402, file: !450, line: 919, baseType: !1351, size: 320)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1343, file: !450, line: 1075, baseType: !336, size: 32, offset: 256)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1343, file: !450, line: 1077, baseType: !336, size: 32, offset: 288)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1343, file: !450, line: 1078, baseType: !336, size: 32, offset: 320)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1343, file: !450, line: 1079, baseType: !18, size: 16, offset: 352)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1343, file: !450, line: 1082, baseType: !18, size: 16, offset: 368)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1343, file: !450, line: 1085, baseType: !20, size: 8, offset: 384)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1343, file: !450, line: 1086, baseType: !20, size: 8, offset: 392)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1343, file: !450, line: 1087, baseType: !20, size: 8, offset: 400)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1343, file: !450, line: 1088, baseType: !20, size: 8, offset: 408)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1343, file: !450, line: 1090, baseType: !336, size: 32, offset: 416)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1343, file: !450, line: 1093, baseType: !18, size: 16, offset: 448)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1343, file: !450, line: 1096, baseType: !20, size: 8, offset: 464)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1343, file: !450, line: 1098, baseType: !1418, size: 40, offset: 472)
!1418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 40, elements: !1419)
!1419 = !{!1420}
!1420 = !DISubrange(count: 5)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1343, file: !450, line: 1101, baseType: !1422, size: 832, offset: 512)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !450, line: 836, size: 832, elements: !1423)
!1423 = !{!1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1422, file: !450, line: 837, baseType: !1351, size: 320)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1422, file: !450, line: 839, baseType: !18, size: 16, offset: 320)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1422, file: !450, line: 839, baseType: !18, size: 16, offset: 336)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1422, file: !450, line: 842, baseType: !18, size: 16, offset: 352)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1422, file: !450, line: 842, baseType: !18, size: 16, offset: 368)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1422, file: !450, line: 843, baseType: !389, size: 32, offset: 384)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1422, file: !450, line: 845, baseType: !6, size: 32, offset: 416)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1422, file: !450, line: 847, baseType: !45, size: 64, offset: 448)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1422, file: !450, line: 848, baseType: !341, size: 64, offset: 512)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1422, file: !450, line: 849, baseType: !341, size: 64, offset: 576)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1422, file: !450, line: 850, baseType: !341, size: 64, offset: 640)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1422, file: !450, line: 851, baseType: !565, size: 96, offset: 704)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1422, file: !450, line: 852, baseType: !336, size: 32, offset: 800)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1343, file: !450, line: 1104, baseType: !1438, size: 1344, offset: 1344)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !450, line: 867, size: 1344, elements: !1439)
!1439 = !{!1440, !1441, !1442, !1443, !1444, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1438, file: !450, line: 868, baseType: !18, size: 16)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1438, file: !450, line: 869, baseType: !18, size: 16, offset: 16)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1438, file: !450, line: 870, baseType: !18, size: 16, offset: 32)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1438, file: !450, line: 871, baseType: !18, size: 16, offset: 48)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1438, file: !450, line: 873, baseType: !1445, size: 896, offset: 64)
!1445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1446, size: 896, elements: !418)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !450, line: 864, baseType: !1447)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !450, line: 859, size: 128, elements: !1448)
!1448 = !{!1449, !1450, !1451, !1452, !1453, !1454}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1447, file: !450, line: 860, baseType: !18, size: 16)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1447, file: !450, line: 861, baseType: !18, size: 16, offset: 16)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1447, file: !450, line: 861, baseType: !18, size: 16, offset: 32)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1447, file: !450, line: 861, baseType: !18, size: 16, offset: 48)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1447, file: !450, line: 862, baseType: !6, size: 32, offset: 64)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1447, file: !450, line: 863, baseType: !336, size: 32, offset: 96)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1438, file: !450, line: 874, baseType: !45, size: 64, offset: 960)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1438, file: !450, line: 876, baseType: !336, size: 32, offset: 1024)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1438, file: !450, line: 876, baseType: !336, size: 32, offset: 1056)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1438, file: !450, line: 878, baseType: !6, size: 32, offset: 1088)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1438, file: !450, line: 879, baseType: !6, size: 32, offset: 1120)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1438, file: !450, line: 881, baseType: !6, size: 32, offset: 1152)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1438, file: !450, line: 881, baseType: !6, size: 32, offset: 1184)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1438, file: !450, line: 883, baseType: !1301, size: 64, offset: 1216)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1438, file: !450, line: 884, baseType: !694, size: 64, offset: 1280)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1343, file: !450, line: 1107, baseType: !336, size: 32, offset: 2688)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1343, file: !450, line: 1110, baseType: !336, size: 32, offset: 2720)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1343, file: !450, line: 1113, baseType: !18, size: 16, offset: 2752)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1343, file: !450, line: 1113, baseType: !18, size: 16, offset: 2768)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1343, file: !450, line: 1116, baseType: !20, size: 8, offset: 2784)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1343, file: !450, line: 1117, baseType: !661, size: 8, offset: 2792)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1343, file: !450, line: 1120, baseType: !18, size: 16, offset: 2800)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1343, file: !450, line: 1121, baseType: !336, size: 32, offset: 2816)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1343, file: !450, line: 1122, baseType: !336, size: 32, offset: 2848)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1343, file: !450, line: 1123, baseType: !336, size: 32, offset: 2880)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1343, file: !450, line: 1124, baseType: !336, size: 32, offset: 2912)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1343, file: !450, line: 1125, baseType: !336, size: 32, offset: 2944)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1343, file: !450, line: 1126, baseType: !336, size: 32, offset: 2976)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1343, file: !450, line: 1127, baseType: !336, size: 32, offset: 3008)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1343, file: !450, line: 1128, baseType: !336, size: 32, offset: 3040)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1343, file: !450, line: 1129, baseType: !336, size: 32, offset: 3072)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1343, file: !450, line: 1130, baseType: !336, size: 32, offset: 3104)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1343, file: !450, line: 1131, baseType: !18, size: 16, offset: 3136)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1343, file: !450, line: 1132, baseType: !20, size: 8, offset: 3152)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1343, file: !450, line: 1133, baseType: !20, size: 8, offset: 3160)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1343, file: !450, line: 1134, baseType: !1485, size: 24, offset: 3168)
!1485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 24, elements: !566)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1343, file: !450, line: 1135, baseType: !20, size: 8, offset: 3192)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1343, file: !450, line: 1138, baseType: !694, size: 64, offset: 3200)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1343, file: !450, line: 1139, baseType: !20, size: 8, offset: 3264)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1343, file: !450, line: 1140, baseType: !20, size: 8, offset: 3272)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1343, file: !450, line: 1141, baseType: !20, size: 8, offset: 3280)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1343, file: !450, line: 1142, baseType: !20, size: 8, offset: 3288)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1343, file: !450, line: 1143, baseType: !20, size: 8, offset: 3296)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1343, file: !450, line: 1144, baseType: !1494, size: 64, offset: 3304)
!1494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 64, elements: !361)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1343, file: !450, line: 1145, baseType: !1494, size: 64, offset: 3368)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1343, file: !450, line: 1148, baseType: !20, size: 8, offset: 3432)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1343, file: !450, line: 1149, baseType: !20, size: 8, offset: 3440)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1343, file: !450, line: 1152, baseType: !20, size: 8, offset: 3448)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1343, file: !450, line: 1152, baseType: !20, size: 8, offset: 3456)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1343, file: !450, line: 1153, baseType: !20, size: 8, offset: 3464)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1343, file: !450, line: 1154, baseType: !18, size: 16, offset: 3472)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1343, file: !450, line: 1154, baseType: !18, size: 16, offset: 3488)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1343, file: !450, line: 1155, baseType: !18, size: 16, offset: 3504)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1343, file: !450, line: 1155, baseType: !18, size: 16, offset: 3520)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1343, file: !450, line: 1156, baseType: !20, size: 8, offset: 3536)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1343, file: !450, line: 1157, baseType: !20, size: 8, offset: 3544)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1343, file: !450, line: 1159, baseType: !20, size: 8, offset: 3552)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1343, file: !450, line: 1160, baseType: !20, size: 8, offset: 3560)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1343, file: !450, line: 1161, baseType: !20, size: 8, offset: 3568)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1343, file: !450, line: 1162, baseType: !20, size: 8, offset: 3576)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1343, file: !450, line: 1165, baseType: !6, size: 32, offset: 3584)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1343, file: !450, line: 1166, baseType: !6, size: 32, offset: 3616)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1343, file: !450, line: 1167, baseType: !6, size: 32, offset: 3648)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1343, file: !450, line: 1168, baseType: !6, size: 32, offset: 3680)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1343, file: !450, line: 1171, baseType: !18, size: 16, offset: 3712)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1343, file: !450, line: 1171, baseType: !18, size: 16, offset: 3728)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1343, file: !450, line: 1172, baseType: !6, size: 32, offset: 3744)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1343, file: !450, line: 1173, baseType: !336, size: 32, offset: 3776)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1343, file: !450, line: 1174, baseType: !336, size: 32, offset: 3808)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1343, file: !450, line: 1177, baseType: !1521, size: 1024, offset: 3840)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !450, line: 963, size: 1024, elements: !1522)
!1522 = !{!1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1546, !1547}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1521, file: !450, line: 965, baseType: !6, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1521, file: !450, line: 968, baseType: !336, size: 32, offset: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1521, file: !450, line: 971, baseType: !336, size: 32, offset: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1521, file: !450, line: 974, baseType: !336, size: 32, offset: 96)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1521, file: !450, line: 977, baseType: !565, size: 96, offset: 128)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1521, file: !450, line: 979, baseType: !565, size: 96, offset: 224)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1521, file: !450, line: 982, baseType: !6, size: 32, offset: 320)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1521, file: !450, line: 987, baseType: !1294, size: 64, offset: 352)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1521, file: !450, line: 989, baseType: !336, size: 32, offset: 416)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1521, file: !450, line: 994, baseType: !6, size: 32, offset: 448)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1521, file: !450, line: 995, baseType: !6, size: 32, offset: 480)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1521, file: !450, line: 997, baseType: !20, size: 8, offset: 512)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1521, file: !450, line: 998, baseType: !417, size: 56, offset: 520)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1521, file: !450, line: 1000, baseType: !336, size: 32, offset: 576)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1521, file: !450, line: 1003, baseType: !1294, size: 64, offset: 608)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1521, file: !450, line: 1006, baseType: !6, size: 32, offset: 672)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1521, file: !450, line: 1009, baseType: !336, size: 32, offset: 704)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1521, file: !450, line: 1012, baseType: !1294, size: 64, offset: 736)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1521, file: !450, line: 1015, baseType: !1294, size: 64, offset: 800)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1521, file: !450, line: 1018, baseType: !6, size: 32, offset: 864)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1521, file: !450, line: 1019, baseType: !1544, size: 64, offset: 896)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64)
!1545 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !450, line: 63, flags: DIFlagFwdDecl)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1521, file: !450, line: 1023, baseType: !336, size: 32, offset: 960)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1521, file: !450, line: 1024, baseType: !6, size: 32, offset: 992)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1343, file: !450, line: 1179, baseType: !1549, size: 320, offset: 4864)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !450, line: 1043, size: 320, elements: !1550)
!1550 = !{!1551, !1552, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1549, file: !450, line: 1044, baseType: !20, size: 8)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1549, file: !450, line: 1045, baseType: !1553, size: 16, offset: 8)
!1553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 16, elements: !386)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1549, file: !450, line: 1048, baseType: !20, size: 8, offset: 24)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1549, file: !450, line: 1049, baseType: !336, size: 32, offset: 32)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1549, file: !450, line: 1049, baseType: !336, size: 32, offset: 64)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1549, file: !450, line: 1052, baseType: !336, size: 32, offset: 96)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1549, file: !450, line: 1052, baseType: !336, size: 32, offset: 128)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1549, file: !450, line: 1053, baseType: !20, size: 8, offset: 160)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1549, file: !450, line: 1054, baseType: !1485, size: 24, offset: 168)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1549, file: !450, line: 1057, baseType: !336, size: 32, offset: 192)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1549, file: !450, line: 1057, baseType: !336, size: 32, offset: 224)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1549, file: !450, line: 1060, baseType: !336, size: 32, offset: 256)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1549, file: !450, line: 1060, baseType: !336, size: 32, offset: 288)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1302, file: !450, line: 1247, baseType: !1566, size: 64, offset: 2176)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 64)
!1567 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !450, line: 60, flags: DIFlagFwdDecl)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1302, file: !450, line: 1251, baseType: !1569, size: 31872, offset: 2240)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !450, line: 403, size: 31872, elements: !1570)
!1570 = !{!1571, !1646, !1666, !1675, !1695, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1835, !1836, !1837, !1838, !1854, !1855}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1569, file: !450, line: 404, baseType: !1572, size: 1984)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !450, line: 259, size: 1984, elements: !1573)
!1573 = !{!1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1591, !1641}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1572, file: !450, line: 260, baseType: !20, size: 8)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1572, file: !450, line: 263, baseType: !20, size: 8, offset: 8)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1572, file: !450, line: 266, baseType: !20, size: 8, offset: 16)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1572, file: !450, line: 267, baseType: !20, size: 8, offset: 24)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1572, file: !450, line: 269, baseType: !20, size: 8, offset: 32)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1572, file: !450, line: 270, baseType: !20, size: 8, offset: 40)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1572, file: !450, line: 276, baseType: !20, size: 8, offset: 48)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1572, file: !450, line: 279, baseType: !20, size: 8, offset: 56)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1572, file: !450, line: 280, baseType: !18, size: 16, offset: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1572, file: !450, line: 280, baseType: !18, size: 16, offset: 80)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1572, file: !450, line: 281, baseType: !336, size: 32, offset: 96)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1572, file: !450, line: 284, baseType: !20, size: 8, offset: 128)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1572, file: !450, line: 285, baseType: !20, size: 8, offset: 136)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1572, file: !450, line: 287, baseType: !1588, size: 48, offset: 144)
!1588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 48, elements: !1589)
!1589 = !{!1590}
!1590 = !DISubrange(count: 6)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1572, file: !450, line: 290, baseType: !1592, size: 1280, offset: 192)
!1592 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !411, line: 174, baseType: !1593)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !411, line: 166, size: 1280, elements: !1594)
!1594 = !{!1595, !1596, !1597, !1598, !1599, !1600, !1601, !1640}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1593, file: !411, line: 167, baseType: !6, size: 32)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1593, file: !411, line: 167, baseType: !6, size: 32, offset: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1593, file: !411, line: 168, baseType: !41, size: 512, offset: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1593, file: !411, line: 169, baseType: !41, size: 512, offset: 576)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1593, file: !411, line: 170, baseType: !336, size: 32, offset: 1088)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1593, file: !411, line: 171, baseType: !336, size: 32, offset: 1120)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1593, file: !411, line: 172, baseType: !1602, size: 64, offset: 1152)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 64)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !411, line: 72, size: 3072, elements: !1604)
!1604 = !{!1605, !1606, !1607, !1608, !1609, !1610, !1611, !1636, !1637, !1638, !1639}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1603, file: !411, line: 73, baseType: !6, size: 32)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1603, file: !411, line: 73, baseType: !6, size: 32, offset: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1603, file: !411, line: 74, baseType: !6, size: 32, offset: 64)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1603, file: !411, line: 75, baseType: !6, size: 32, offset: 96)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1603, file: !411, line: 77, baseType: !469, size: 128, offset: 128)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1603, file: !411, line: 77, baseType: !469, size: 128, offset: 256)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1603, file: !411, line: 79, baseType: !1612, size: 2304, offset: 384)
!1612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1613, size: 2304, elements: !406)
!1613 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !411, line: 67, baseType: !1614)
!1614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !411, line: 55, size: 576, elements: !1615)
!1615 = !{!1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1632, !1633, !1634, !1635}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1614, file: !411, line: 56, baseType: !18, size: 16)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1614, file: !411, line: 56, baseType: !18, size: 16, offset: 16)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1614, file: !411, line: 58, baseType: !336, size: 32, offset: 32)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1614, file: !411, line: 59, baseType: !336, size: 32, offset: 64)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1614, file: !411, line: 59, baseType: !336, size: 32, offset: 96)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1614, file: !411, line: 60, baseType: !1294, size: 64, offset: 128)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1614, file: !411, line: 60, baseType: !1294, size: 64, offset: 192)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1614, file: !411, line: 61, baseType: !1624, size: 64, offset: 256)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 64)
!1625 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !411, line: 47, baseType: !1626)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !411, line: 44, size: 96, elements: !1627)
!1627 = !{!1628, !1629, !1630, !1631}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1626, file: !411, line: 45, baseType: !336, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1626, file: !411, line: 45, baseType: !336, size: 32, offset: 32)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1626, file: !411, line: 46, baseType: !18, size: 16, offset: 64)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1626, file: !411, line: 46, baseType: !18, size: 16, offset: 80)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1614, file: !411, line: 62, baseType: !1624, size: 64, offset: 320)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1614, file: !411, line: 64, baseType: !1624, size: 64, offset: 384)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1614, file: !411, line: 65, baseType: !1294, size: 64, offset: 448)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1614, file: !411, line: 66, baseType: !1294, size: 64, offset: 512)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1603, file: !411, line: 80, baseType: !565, size: 96, offset: 2688)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1603, file: !411, line: 80, baseType: !565, size: 96, offset: 2784)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1603, file: !411, line: 81, baseType: !565, size: 96, offset: 2880)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1603, file: !411, line: 83, baseType: !565, size: 96, offset: 2976)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1593, file: !411, line: 173, baseType: !45, size: 64, offset: 1216)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1572, file: !450, line: 291, baseType: !1642, size: 512, offset: 1472)
!1642 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !411, line: 178, baseType: !1643)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !411, line: 176, size: 512, elements: !1644)
!1644 = !{!1645}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1643, file: !411, line: 177, baseType: !41, size: 512)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1569, file: !450, line: 406, baseType: !1647, size: 64, offset: 1984)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !450, line: 80, size: 1472, elements: !1649)
!1649 = !{!1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1648, file: !450, line: 81, baseType: !45, size: 64)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1648, file: !450, line: 82, baseType: !45, size: 64, offset: 64)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1648, file: !450, line: 83, baseType: !13, size: 32, offset: 128)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1648, file: !450, line: 84, baseType: !13, size: 32, offset: 160)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1648, file: !450, line: 86, baseType: !13, size: 32, offset: 192)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1648, file: !450, line: 87, baseType: !13, size: 32, offset: 224)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1648, file: !450, line: 88, baseType: !13, size: 32, offset: 256)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1648, file: !450, line: 89, baseType: !13, size: 32, offset: 288)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1648, file: !450, line: 90, baseType: !13, size: 32, offset: 320)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1648, file: !450, line: 91, baseType: !13, size: 32, offset: 352)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1648, file: !450, line: 92, baseType: !13, size: 32, offset: 384)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1648, file: !450, line: 93, baseType: !13, size: 32, offset: 416)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1648, file: !450, line: 95, baseType: !1663, size: 1024, offset: 448)
!1663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 1024, elements: !1664)
!1664 = !{!1665}
!1665 = !DISubrange(count: 128)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1569, file: !450, line: 407, baseType: !1667, size: 64, offset: 2048)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 64)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !450, line: 98, size: 1216, elements: !1669)
!1669 = !{!1670, !1671, !1672, !1673, !1674}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1668, file: !450, line: 100, baseType: !45, size: 64)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1668, file: !450, line: 101, baseType: !45, size: 64, offset: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1668, file: !450, line: 103, baseType: !13, size: 32, offset: 128)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1668, file: !450, line: 104, baseType: !13, size: 32, offset: 160)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1668, file: !450, line: 106, baseType: !1663, size: 1024, offset: 192)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1569, file: !450, line: 408, baseType: !1676, size: 512, offset: 2112)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !450, line: 109, size: 512, elements: !1677)
!1677 = !{!1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1676, file: !450, line: 111, baseType: !6, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1676, file: !450, line: 112, baseType: !6, size: 32, offset: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1676, file: !450, line: 115, baseType: !6, size: 32, offset: 64)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1676, file: !450, line: 116, baseType: !6, size: 32, offset: 96)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1676, file: !450, line: 117, baseType: !6, size: 32, offset: 128)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1676, file: !450, line: 118, baseType: !6, size: 32, offset: 160)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1676, file: !450, line: 119, baseType: !6, size: 32, offset: 192)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1676, file: !450, line: 120, baseType: !6, size: 32, offset: 224)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1676, file: !450, line: 121, baseType: !6, size: 32, offset: 256)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1676, file: !450, line: 122, baseType: !6, size: 32, offset: 288)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1676, file: !450, line: 125, baseType: !6, size: 32, offset: 320)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1676, file: !450, line: 126, baseType: !6, size: 32, offset: 352)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1676, file: !450, line: 127, baseType: !18, size: 16, offset: 384)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1676, file: !450, line: 128, baseType: !18, size: 16, offset: 400)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1676, file: !450, line: 129, baseType: !6, size: 32, offset: 416)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1676, file: !450, line: 130, baseType: !6, size: 32, offset: 448)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1676, file: !450, line: 131, baseType: !6, size: 32, offset: 480)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1569, file: !450, line: 409, baseType: !1696, size: 576, offset: 2624)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !450, line: 134, size: 576, elements: !1697)
!1697 = !{!1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1696, file: !450, line: 135, baseType: !6, size: 32)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1696, file: !450, line: 136, baseType: !6, size: 32, offset: 32)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1696, file: !450, line: 137, baseType: !6, size: 32, offset: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1696, file: !450, line: 138, baseType: !6, size: 32, offset: 96)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1696, file: !450, line: 139, baseType: !6, size: 32, offset: 128)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1696, file: !450, line: 140, baseType: !6, size: 32, offset: 160)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1696, file: !450, line: 141, baseType: !6, size: 32, offset: 192)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1696, file: !450, line: 142, baseType: !6, size: 32, offset: 224)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1696, file: !450, line: 143, baseType: !336, size: 32, offset: 256)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1696, file: !450, line: 144, baseType: !6, size: 32, offset: 288)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1696, file: !450, line: 145, baseType: !6, size: 32, offset: 320)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1696, file: !450, line: 147, baseType: !6, size: 32, offset: 352)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1696, file: !450, line: 148, baseType: !6, size: 32, offset: 384)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1696, file: !450, line: 149, baseType: !6, size: 32, offset: 416)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1696, file: !450, line: 150, baseType: !6, size: 32, offset: 448)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1696, file: !450, line: 151, baseType: !6, size: 32, offset: 480)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1696, file: !450, line: 152, baseType: !302, size: 64, offset: 512)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1569, file: !450, line: 411, baseType: !6, size: 32, offset: 3200)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1569, file: !450, line: 411, baseType: !6, size: 32, offset: 3232)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1569, file: !450, line: 411, baseType: !6, size: 32, offset: 3264)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1569, file: !450, line: 412, baseType: !336, size: 32, offset: 3296)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1569, file: !450, line: 413, baseType: !6, size: 32, offset: 3328)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1569, file: !450, line: 413, baseType: !6, size: 32, offset: 3360)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1569, file: !450, line: 415, baseType: !6, size: 32, offset: 3392)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1569, file: !450, line: 415, baseType: !6, size: 32, offset: 3424)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1569, file: !450, line: 416, baseType: !18, size: 16, offset: 3456)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1569, file: !450, line: 416, baseType: !18, size: 16, offset: 3472)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1569, file: !450, line: 418, baseType: !336, size: 32, offset: 3488)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1569, file: !450, line: 418, baseType: !336, size: 32, offset: 3520)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1569, file: !450, line: 421, baseType: !336, size: 32, offset: 3552)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1569, file: !450, line: 421, baseType: !336, size: 32, offset: 3584)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1569, file: !450, line: 421, baseType: !336, size: 32, offset: 3616)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1569, file: !450, line: 425, baseType: !18, size: 16, offset: 3648)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1569, file: !450, line: 425, baseType: !18, size: 16, offset: 3664)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1569, file: !450, line: 425, baseType: !18, size: 16, offset: 3680)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1569, file: !450, line: 426, baseType: !18, size: 16, offset: 3696)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1569, file: !450, line: 428, baseType: !18, size: 16, offset: 3712)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1569, file: !450, line: 428, baseType: !18, size: 16, offset: 3728)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1569, file: !450, line: 431, baseType: !6, size: 32, offset: 3744)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1569, file: !450, line: 433, baseType: !18, size: 16, offset: 3776)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1569, file: !450, line: 435, baseType: !18, size: 16, offset: 3792)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1569, file: !450, line: 437, baseType: !18, size: 16, offset: 3808)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1569, file: !450, line: 439, baseType: !18, size: 16, offset: 3824)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1569, file: !450, line: 441, baseType: !18, size: 16, offset: 3840)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1569, file: !450, line: 443, baseType: !18, size: 16, offset: 3856)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1569, file: !450, line: 449, baseType: !6, size: 32, offset: 3872)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1569, file: !450, line: 453, baseType: !6, size: 32, offset: 3904)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1569, file: !450, line: 458, baseType: !18, size: 16, offset: 3936)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1569, file: !450, line: 462, baseType: !18, size: 16, offset: 3952)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1569, file: !450, line: 467, baseType: !6, size: 32, offset: 3968)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1569, file: !450, line: 467, baseType: !6, size: 32, offset: 4000)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1569, file: !450, line: 469, baseType: !18, size: 16, offset: 4032)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1569, file: !450, line: 469, baseType: !18, size: 16, offset: 4048)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1569, file: !450, line: 469, baseType: !18, size: 16, offset: 4064)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1569, file: !450, line: 469, baseType: !18, size: 16, offset: 4080)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1569, file: !450, line: 474, baseType: !18, size: 16, offset: 4096)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1569, file: !450, line: 475, baseType: !20, size: 8, offset: 4112)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1569, file: !450, line: 476, baseType: !20, size: 8, offset: 4120)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1569, file: !450, line: 481, baseType: !6, size: 32, offset: 4128)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1569, file: !450, line: 486, baseType: !6, size: 32, offset: 4160)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1569, file: !450, line: 491, baseType: !6, size: 32, offset: 4192)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1569, file: !450, line: 496, baseType: !18, size: 16, offset: 4224)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1569, file: !450, line: 498, baseType: !18, size: 16, offset: 4240)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1569, file: !450, line: 501, baseType: !18, size: 16, offset: 4256)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1569, file: !450, line: 502, baseType: !18, size: 16, offset: 4272)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1569, file: !450, line: 508, baseType: !18, size: 16, offset: 4288)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1569, file: !450, line: 513, baseType: !18, size: 16, offset: 4304)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1569, file: !450, line: 515, baseType: !18, size: 16, offset: 4320)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1569, file: !450, line: 515, baseType: !18, size: 16, offset: 4336)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1569, file: !450, line: 519, baseType: !469, size: 128, offset: 4352)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1569, file: !450, line: 519, baseType: !469, size: 128, offset: 4480)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1569, file: !450, line: 520, baseType: !1770, size: 128, offset: 4608)
!1770 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !470, line: 89, baseType: !1771)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !470, line: 86, size: 128, elements: !1772)
!1772 = !{!1773, !1774, !1775, !1776}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1771, file: !470, line: 87, baseType: !6, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1771, file: !470, line: 87, baseType: !6, size: 32, offset: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1771, file: !470, line: 88, baseType: !6, size: 32, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1771, file: !470, line: 88, baseType: !6, size: 32, offset: 96)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1569, file: !450, line: 523, baseType: !320, size: 128, offset: 4736)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1569, file: !450, line: 524, baseType: !18, size: 16, offset: 4864)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1569, file: !450, line: 527, baseType: !18, size: 16, offset: 4880)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1569, file: !450, line: 532, baseType: !336, size: 32, offset: 4896)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1569, file: !450, line: 532, baseType: !336, size: 32, offset: 4928)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1569, file: !450, line: 534, baseType: !336, size: 32, offset: 4960)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1569, file: !450, line: 538, baseType: !336, size: 32, offset: 4992)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1569, file: !450, line: 542, baseType: !6, size: 32, offset: 5024)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1569, file: !450, line: 545, baseType: !336, size: 32, offset: 5056)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1569, file: !450, line: 545, baseType: !336, size: 32, offset: 5088)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1569, file: !450, line: 545, baseType: !336, size: 32, offset: 5120)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1569, file: !450, line: 548, baseType: !336, size: 32, offset: 5152)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1569, file: !450, line: 551, baseType: !18, size: 16, offset: 5184)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1569, file: !450, line: 551, baseType: !18, size: 16, offset: 5200)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1569, file: !450, line: 551, baseType: !18, size: 16, offset: 5216)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1569, file: !450, line: 551, baseType: !18, size: 16, offset: 5232)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1569, file: !450, line: 552, baseType: !18, size: 16, offset: 5248)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1569, file: !450, line: 552, baseType: !18, size: 16, offset: 5264)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1569, file: !450, line: 553, baseType: !336, size: 32, offset: 5280)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1569, file: !450, line: 553, baseType: !336, size: 32, offset: 5312)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1569, file: !450, line: 554, baseType: !18, size: 16, offset: 5344)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1569, file: !450, line: 554, baseType: !18, size: 16, offset: 5360)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1569, file: !450, line: 555, baseType: !336, size: 32, offset: 5376)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1569, file: !450, line: 555, baseType: !336, size: 32, offset: 5408)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1569, file: !450, line: 558, baseType: !62, size: 8192, offset: 5440)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1569, file: !450, line: 561, baseType: !6, size: 32, offset: 13632)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1569, file: !450, line: 562, baseType: !18, size: 16, offset: 13664)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1569, file: !450, line: 562, baseType: !18, size: 16, offset: 13680)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1569, file: !450, line: 565, baseType: !1806, size: 6144, offset: 13696)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 6144, elements: !1807)
!1807 = !{!1808}
!1808 = !DISubrange(count: 768)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1569, file: !450, line: 568, baseType: !405, size: 128, offset: 19840)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1569, file: !450, line: 569, baseType: !405, size: 128, offset: 19968)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1569, file: !450, line: 572, baseType: !20, size: 8, offset: 20096)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1569, file: !450, line: 573, baseType: !20, size: 8, offset: 20104)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1569, file: !450, line: 574, baseType: !20, size: 8, offset: 20112)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1569, file: !450, line: 575, baseType: !1418, size: 40, offset: 20120)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1569, file: !450, line: 578, baseType: !6, size: 32, offset: 20160)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1569, file: !450, line: 579, baseType: !18, size: 16, offset: 20192)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1569, file: !450, line: 580, baseType: !18, size: 16, offset: 20208)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1569, file: !450, line: 581, baseType: !336, size: 32, offset: 20224)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1569, file: !450, line: 582, baseType: !336, size: 32, offset: 20256)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1569, file: !450, line: 585, baseType: !18, size: 16, offset: 20288)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1569, file: !450, line: 585, baseType: !18, size: 16, offset: 20304)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1569, file: !450, line: 586, baseType: !336, size: 32, offset: 20320)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1569, file: !450, line: 589, baseType: !18, size: 16, offset: 20352)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1569, file: !450, line: 589, baseType: !18, size: 16, offset: 20368)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1569, file: !450, line: 590, baseType: !6, size: 32, offset: 20384)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1569, file: !450, line: 593, baseType: !18, size: 16, offset: 20416)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1569, file: !450, line: 593, baseType: !18, size: 16, offset: 20432)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1569, file: !450, line: 594, baseType: !18, size: 16, offset: 20448)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1569, file: !450, line: 594, baseType: !18, size: 16, offset: 20464)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1569, file: !450, line: 595, baseType: !336, size: 32, offset: 20480)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1569, file: !450, line: 596, baseType: !336, size: 32, offset: 20512)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1569, file: !450, line: 597, baseType: !1833, size: 64, offset: 20544)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64)
!1834 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !894, line: 44, flags: DIFlagFwdDecl)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1569, file: !450, line: 600, baseType: !6, size: 32, offset: 20608)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1569, file: !450, line: 601, baseType: !336, size: 32, offset: 20640)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1569, file: !450, line: 604, baseType: !510, size: 256, offset: 20672)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1569, file: !450, line: 607, baseType: !1839, size: 10880, offset: 20928)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !450, line: 364, size: 10880, elements: !1840)
!1840 = !{!1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1839, file: !450, line: 365, baseType: !1572, size: 1984)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1839, file: !450, line: 367, baseType: !62, size: 8192, offset: 1984)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1839, file: !450, line: 369, baseType: !18, size: 16, offset: 10176)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1839, file: !450, line: 369, baseType: !18, size: 16, offset: 10192)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1839, file: !450, line: 370, baseType: !18, size: 16, offset: 10208)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1839, file: !450, line: 370, baseType: !18, size: 16, offset: 10224)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1839, file: !450, line: 372, baseType: !336, size: 32, offset: 10240)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1839, file: !450, line: 373, baseType: !336, size: 32, offset: 10272)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1839, file: !450, line: 375, baseType: !1485, size: 24, offset: 10304)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1839, file: !450, line: 376, baseType: !20, size: 8, offset: 10328)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1839, file: !450, line: 378, baseType: !20, size: 8, offset: 10336)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1839, file: !450, line: 379, baseType: !1485, size: 24, offset: 10344)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1839, file: !450, line: 381, baseType: !41, size: 512, offset: 10368)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1569, file: !450, line: 609, baseType: !6, size: 32, offset: 31808)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1569, file: !450, line: 610, baseType: !6, size: 32, offset: 31840)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !1302, file: !450, line: 1252, baseType: !1857, size: 256, offset: 34112)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !450, line: 158, size: 256, elements: !1858)
!1858 = !{!1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1857, file: !450, line: 159, baseType: !6, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1857, file: !450, line: 160, baseType: !336, size: 32, offset: 32)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1857, file: !450, line: 161, baseType: !336, size: 32, offset: 64)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1857, file: !450, line: 162, baseType: !336, size: 32, offset: 96)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1857, file: !450, line: 163, baseType: !6, size: 32, offset: 128)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1857, file: !450, line: 164, baseType: !18, size: 16, offset: 160)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1857, file: !450, line: 165, baseType: !18, size: 16, offset: 176)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1857, file: !450, line: 166, baseType: !336, size: 32, offset: 192)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1857, file: !450, line: 167, baseType: !336, size: 32, offset: 224)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1302, file: !450, line: 1254, baseType: !320, size: 128, offset: 34368)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !1302, file: !450, line: 1255, baseType: !320, size: 128, offset: 34496)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !1302, file: !450, line: 1257, baseType: !45, size: 64, offset: 34624)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !1302, file: !450, line: 1258, baseType: !45, size: 64, offset: 34688)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !1302, file: !450, line: 1259, baseType: !45, size: 64, offset: 34752)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !1302, file: !450, line: 1260, baseType: !45, size: 64, offset: 34816)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !1302, file: !450, line: 1262, baseType: !45, size: 64, offset: 34880)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !1302, file: !450, line: 1265, baseType: !1876, size: 64, offset: 34944)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 64)
!1877 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !450, line: 1265, flags: DIFlagFwdDecl)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !1302, file: !450, line: 1266, baseType: !18, size: 16, offset: 35008)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1302, file: !450, line: 1267, baseType: !18, size: 16, offset: 35024)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !1302, file: !450, line: 1270, baseType: !6, size: 32, offset: 35040)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !1302, file: !450, line: 1271, baseType: !320, size: 128, offset: 35072)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1302, file: !450, line: 1274, baseType: !1883, size: 128, offset: 35200)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !450, line: 650, size: 128, elements: !1884)
!1884 = !{!1885, !1886, !1887, !1888, !1889}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1883, file: !450, line: 651, baseType: !565, size: 96)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1883, file: !450, line: 652, baseType: !20, size: 8, offset: 96)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1883, file: !450, line: 652, baseType: !20, size: 8, offset: 104)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1883, file: !450, line: 652, baseType: !20, size: 8, offset: 112)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1883, file: !450, line: 652, baseType: !20, size: 8, offset: 120)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !1302, file: !450, line: 1275, baseType: !1891, size: 1472, offset: 35328)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !450, line: 676, size: 1472, elements: !1892)
!1892 = !{!1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1914, !1915, !1916, !1917, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1891, file: !450, line: 679, baseType: !1883, size: 128)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1891, file: !450, line: 680, baseType: !18, size: 16, offset: 128)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1891, file: !450, line: 680, baseType: !18, size: 16, offset: 144)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1891, file: !450, line: 680, baseType: !18, size: 16, offset: 160)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1891, file: !450, line: 680, baseType: !18, size: 16, offset: 176)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1891, file: !450, line: 681, baseType: !18, size: 16, offset: 192)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1891, file: !450, line: 681, baseType: !18, size: 16, offset: 208)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1891, file: !450, line: 681, baseType: !18, size: 16, offset: 224)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1891, file: !450, line: 681, baseType: !18, size: 16, offset: 240)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1891, file: !450, line: 682, baseType: !18, size: 16, offset: 256)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1891, file: !450, line: 682, baseType: !986, size: 48, offset: 272)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1891, file: !450, line: 685, baseType: !1905, size: 192, offset: 320)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !450, line: 633, size: 192, elements: !1906)
!1906 = !{!1907, !1908, !1909, !1910, !1911, !1912, !1913}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1905, file: !450, line: 634, baseType: !18, size: 16)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1905, file: !450, line: 634, baseType: !18, size: 16, offset: 16)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1905, file: !450, line: 635, baseType: !18, size: 16, offset: 32)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1905, file: !450, line: 635, baseType: !18, size: 16, offset: 48)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1905, file: !450, line: 636, baseType: !336, size: 32, offset: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1905, file: !450, line: 636, baseType: !336, size: 32, offset: 96)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1905, file: !450, line: 637, baseType: !1833, size: 64, offset: 128)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1891, file: !450, line: 686, baseType: !18, size: 16, offset: 512)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1891, file: !450, line: 686, baseType: !18, size: 16, offset: 528)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1891, file: !450, line: 687, baseType: !336, size: 32, offset: 544)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1891, file: !450, line: 688, baseType: !1918, size: 448, offset: 576)
!1918 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !450, line: 674, baseType: !1919)
!1919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !450, line: 659, size: 448, elements: !1920)
!1920 = !{!1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935}
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1919, file: !450, line: 660, baseType: !336, size: 32)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1919, file: !450, line: 661, baseType: !336, size: 32, offset: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1919, file: !450, line: 662, baseType: !336, size: 32, offset: 64)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1919, file: !450, line: 663, baseType: !336, size: 32, offset: 96)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1919, file: !450, line: 664, baseType: !336, size: 32, offset: 128)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1919, file: !450, line: 665, baseType: !336, size: 32, offset: 160)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1919, file: !450, line: 666, baseType: !336, size: 32, offset: 192)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1919, file: !450, line: 667, baseType: !336, size: 32, offset: 224)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1919, file: !450, line: 668, baseType: !336, size: 32, offset: 256)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1919, file: !450, line: 669, baseType: !336, size: 32, offset: 288)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1919, file: !450, line: 670, baseType: !6, size: 32, offset: 320)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1919, file: !450, line: 671, baseType: !336, size: 32, offset: 352)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1919, file: !450, line: 672, baseType: !336, size: 32, offset: 384)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1919, file: !450, line: 673, baseType: !18, size: 16, offset: 416)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1919, file: !450, line: 673, baseType: !18, size: 16, offset: 432)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1891, file: !450, line: 692, baseType: !336, size: 32, offset: 1024)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1891, file: !450, line: 697, baseType: !336, size: 32, offset: 1056)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1891, file: !450, line: 703, baseType: !6, size: 32, offset: 1088)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1891, file: !450, line: 704, baseType: !18, size: 16, offset: 1120)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1891, file: !450, line: 704, baseType: !18, size: 16, offset: 1136)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1891, file: !450, line: 705, baseType: !18, size: 16, offset: 1152)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1891, file: !450, line: 706, baseType: !18, size: 16, offset: 1168)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1891, file: !450, line: 707, baseType: !18, size: 16, offset: 1184)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1891, file: !450, line: 708, baseType: !18, size: 16, offset: 1200)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1891, file: !450, line: 709, baseType: !18, size: 16, offset: 1216)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1891, file: !450, line: 709, baseType: !18, size: 16, offset: 1232)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1891, file: !450, line: 709, baseType: !18, size: 16, offset: 1248)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1891, file: !450, line: 709, baseType: !18, size: 16, offset: 1264)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1891, file: !450, line: 710, baseType: !18, size: 16, offset: 1280)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1891, file: !450, line: 711, baseType: !18, size: 16, offset: 1296)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1891, file: !450, line: 712, baseType: !336, size: 32, offset: 1312)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1891, file: !450, line: 713, baseType: !336, size: 32, offset: 1344)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1891, file: !450, line: 713, baseType: !336, size: 32, offset: 1376)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1891, file: !450, line: 713, baseType: !336, size: 32, offset: 1408)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1891, file: !450, line: 713, baseType: !336, size: 32, offset: 1440)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1302, file: !450, line: 1278, baseType: !1957, size: 64, offset: 36800)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !450, line: 1197, size: 64, elements: !1958)
!1958 = !{!1959, !1960, !1961, !1962}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1957, file: !450, line: 1199, baseType: !336, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1957, file: !450, line: 1200, baseType: !20, size: 8, offset: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1957, file: !450, line: 1201, baseType: !20, size: 8, offset: 40)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1957, file: !450, line: 1202, baseType: !18, size: 16, offset: 48)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1302, file: !450, line: 1281, baseType: !773, size: 64, offset: 36864)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !1302, file: !450, line: 1284, baseType: !1965, size: 192, offset: 36928)
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !450, line: 1208, size: 192, elements: !1966)
!1966 = !{!1967, !1968, !1969, !1970}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1965, file: !450, line: 1209, baseType: !565, size: 96)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1965, file: !450, line: 1210, baseType: !6, size: 32, offset: 96)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1965, file: !450, line: 1210, baseType: !6, size: 32, offset: 128)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1965, file: !450, line: 1210, baseType: !6, size: 32, offset: 160)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1302, file: !450, line: 1287, baseType: !1972, size: 64, offset: 37120)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 64)
!1973 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !450, line: 62, flags: DIFlagFwdDecl)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1302, file: !450, line: 1289, baseType: !1275, size: 64, offset: 37184)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !1302, file: !450, line: 1290, baseType: !1275, size: 64, offset: 37248)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1302, file: !450, line: 1293, baseType: !1592, size: 1280, offset: 37312)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1302, file: !450, line: 1294, baseType: !1642, size: 512, offset: 38592)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !1302, file: !450, line: 1295, baseType: !410, size: 512, offset: 39104)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !1302, file: !450, line: 1298, baseType: !1980, size: 64, offset: 39616)
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 64)
!1981 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !450, line: 1298, flags: DIFlagFwdDecl)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1298, file: !343, line: 53, baseType: !6, size: 32, offset: 64)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1298, file: !343, line: 54, baseType: !6, size: 32, offset: 96)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1298, file: !343, line: 55, baseType: !6, size: 32, offset: 128)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1298, file: !343, line: 55, baseType: !6, size: 32, offset: 160)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1298, file: !343, line: 56, baseType: !20, size: 8, offset: 192)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !1298, file: !343, line: 56, baseType: !20, size: 8, offset: 200)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1298, file: !343, line: 57, baseType: !20, size: 8, offset: 208)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1298, file: !343, line: 57, baseType: !20, size: 8, offset: 216)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !1298, file: !343, line: 59, baseType: !18, size: 16, offset: 224)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1298, file: !343, line: 59, baseType: !18, size: 16, offset: 240)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1298, file: !343, line: 59, baseType: !18, size: 16, offset: 256)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1298, file: !343, line: 61, baseType: !18, size: 16, offset: 272)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1298, file: !343, line: 63, baseType: !6, size: 32, offset: 288)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !695, file: !197, line: 293, baseType: !320, size: 128, offset: 11200)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !695, file: !197, line: 294, baseType: !1997, size: 64, offset: 11328)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !197, line: 113, baseType: !1999)
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !197, line: 108, size: 256, elements: !2000)
!2000 = !{!2001, !2003, !2004, !2005, !2006}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1999, file: !197, line: 109, baseType: !2002, size: 64)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1999, file: !197, line: 109, baseType: !2002, size: 64, offset: 64)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1999, file: !197, line: 110, baseType: !694, size: 64, offset: 128)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1999, file: !197, line: 111, baseType: !6, size: 32, offset: 192)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1999, file: !197, line: 112, baseType: !336, size: 32, offset: 224)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !687, file: !653, line: 61, baseType: !2008, size: 64, offset: 128)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!2009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !653, line: 202, size: 3328, elements: !2010)
!2010 = !{!2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2093, !2094, !2123, !2143, !2151, !2152}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2009, file: !653, line: 203, baseType: !270, size: 960)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2009, file: !653, line: 204, baseType: !448, size: 64, offset: 960)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !2009, file: !653, line: 206, baseType: !336, size: 32, offset: 1024)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !2009, file: !653, line: 206, baseType: !336, size: 32, offset: 1056)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !2009, file: !653, line: 207, baseType: !336, size: 32, offset: 1088)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !2009, file: !653, line: 207, baseType: !336, size: 32, offset: 1120)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !2009, file: !653, line: 207, baseType: !336, size: 32, offset: 1152)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !2009, file: !653, line: 207, baseType: !336, size: 32, offset: 1184)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !2009, file: !653, line: 207, baseType: !336, size: 32, offset: 1216)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !2009, file: !653, line: 207, baseType: !336, size: 32, offset: 1248)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !2009, file: !653, line: 208, baseType: !336, size: 32, offset: 1280)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2009, file: !653, line: 208, baseType: !336, size: 32, offset: 1312)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !2009, file: !653, line: 211, baseType: !336, size: 32, offset: 1344)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !2009, file: !653, line: 211, baseType: !336, size: 32, offset: 1376)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !2009, file: !653, line: 211, baseType: !336, size: 32, offset: 1408)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !2009, file: !653, line: 211, baseType: !336, size: 32, offset: 1440)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !2009, file: !653, line: 211, baseType: !336, size: 32, offset: 1472)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !2009, file: !653, line: 214, baseType: !336, size: 32, offset: 1504)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !2009, file: !653, line: 214, baseType: !336, size: 32, offset: 1536)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !2009, file: !653, line: 217, baseType: !336, size: 32, offset: 1568)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !2009, file: !653, line: 218, baseType: !336, size: 32, offset: 1600)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !2009, file: !653, line: 219, baseType: !336, size: 32, offset: 1632)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !2009, file: !653, line: 220, baseType: !336, size: 32, offset: 1664)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !2009, file: !653, line: 221, baseType: !336, size: 32, offset: 1696)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !2009, file: !653, line: 222, baseType: !18, size: 16, offset: 1728)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !2009, file: !653, line: 222, baseType: !18, size: 16, offset: 1744)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !2009, file: !653, line: 224, baseType: !18, size: 16, offset: 1760)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !2009, file: !653, line: 224, baseType: !18, size: 16, offset: 1776)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !2009, file: !653, line: 227, baseType: !18, size: 16, offset: 1792)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !2009, file: !653, line: 227, baseType: !18, size: 16, offset: 1808)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !2009, file: !653, line: 229, baseType: !18, size: 16, offset: 1824)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2009, file: !653, line: 229, baseType: !18, size: 16, offset: 1840)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2009, file: !653, line: 230, baseType: !18, size: 16, offset: 1856)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !2009, file: !653, line: 230, baseType: !18, size: 16, offset: 1872)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !2009, file: !653, line: 232, baseType: !336, size: 32, offset: 1888)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !2009, file: !653, line: 232, baseType: !336, size: 32, offset: 1920)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !2009, file: !653, line: 232, baseType: !336, size: 32, offset: 1952)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !2009, file: !653, line: 232, baseType: !336, size: 32, offset: 1984)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !2009, file: !653, line: 233, baseType: !6, size: 32, offset: 2016)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !2009, file: !653, line: 234, baseType: !6, size: 32, offset: 2048)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !2009, file: !653, line: 235, baseType: !18, size: 16, offset: 2080)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !2009, file: !653, line: 235, baseType: !18, size: 16, offset: 2096)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !2009, file: !653, line: 236, baseType: !18, size: 16, offset: 2112)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !2009, file: !653, line: 239, baseType: !18, size: 16, offset: 2128)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2009, file: !653, line: 240, baseType: !6, size: 32, offset: 2144)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2009, file: !653, line: 241, baseType: !6, size: 32, offset: 2176)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2009, file: !653, line: 241, baseType: !6, size: 32, offset: 2208)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2009, file: !653, line: 241, baseType: !6, size: 32, offset: 2240)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !2009, file: !653, line: 243, baseType: !336, size: 32, offset: 2272)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !2009, file: !653, line: 243, baseType: !336, size: 32, offset: 2304)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2009, file: !653, line: 244, baseType: !336, size: 32, offset: 2336)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !2009, file: !653, line: 246, baseType: !1298, size: 320, offset: 2368)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2009, file: !653, line: 248, baseType: !1336, size: 64, offset: 2688)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2009, file: !653, line: 249, baseType: !462, size: 64, offset: 2752)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2009, file: !653, line: 250, baseType: !341, size: 64, offset: 2816)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !2009, file: !653, line: 251, baseType: !651, size: 64, offset: 2880)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !2009, file: !653, line: 252, baseType: !2068, size: 64, offset: 2944)
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 64)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !653, line: 122, size: 1600, elements: !2070)
!2070 = !{!2071, !2072, !2073, !2077, !2078, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2069, file: !653, line: 123, baseType: !694, size: 64)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2069, file: !653, line: 124, baseType: !341, size: 64, offset: 64)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !2069, file: !653, line: 125, baseType: !2074, size: 384, offset: 128)
!2074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2075, size: 384, elements: !1589)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64)
!2076 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !411, line: 136, flags: DIFlagFwdDecl)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2069, file: !653, line: 126, baseType: !818, size: 512, offset: 512)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !2069, file: !653, line: 127, baseType: !2079, size: 288, offset: 1024)
!2079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 288, elements: !2080)
!2080 = !{!458, !458}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2069, file: !653, line: 128, baseType: !18, size: 16, offset: 1312)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !2069, file: !653, line: 128, baseType: !18, size: 16, offset: 1328)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !2069, file: !653, line: 129, baseType: !336, size: 32, offset: 1344)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !2069, file: !653, line: 129, baseType: !336, size: 32, offset: 1376)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !2069, file: !653, line: 130, baseType: !336, size: 32, offset: 1408)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !2069, file: !653, line: 131, baseType: !13, size: 32, offset: 1440)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !2069, file: !653, line: 132, baseType: !18, size: 16, offset: 1472)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2069, file: !653, line: 132, baseType: !18, size: 16, offset: 1488)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2069, file: !653, line: 133, baseType: !6, size: 32, offset: 1504)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2069, file: !653, line: 133, baseType: !6, size: 32, offset: 1536)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !2069, file: !653, line: 134, baseType: !18, size: 16, offset: 1568)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !2069, file: !653, line: 134, baseType: !18, size: 16, offset: 1584)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2009, file: !653, line: 253, baseType: !381, size: 64, offset: 3008)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !2009, file: !653, line: 254, baseType: !2095, size: 64, offset: 3072)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 64)
!2096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !653, line: 137, size: 832, elements: !2097)
!2097 = !{!2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2096, file: !653, line: 138, baseType: !18, size: 16)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !2096, file: !653, line: 140, baseType: !18, size: 16, offset: 16)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !2096, file: !653, line: 141, baseType: !336, size: 32, offset: 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !2096, file: !653, line: 142, baseType: !336, size: 32, offset: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2096, file: !653, line: 143, baseType: !18, size: 16, offset: 96)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !2096, file: !653, line: 144, baseType: !18, size: 16, offset: 112)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !2096, file: !653, line: 145, baseType: !6, size: 32, offset: 128)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !2096, file: !653, line: 147, baseType: !6, size: 32, offset: 160)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2096, file: !653, line: 149, baseType: !694, size: 64, offset: 192)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !2096, file: !653, line: 150, baseType: !6, size: 32, offset: 256)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !2096, file: !653, line: 151, baseType: !18, size: 16, offset: 288)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !2096, file: !653, line: 152, baseType: !18, size: 16, offset: 304)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !2096, file: !653, line: 154, baseType: !45, size: 64, offset: 320)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !2096, file: !653, line: 155, baseType: !1172, size: 64, offset: 384)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !2096, file: !653, line: 157, baseType: !336, size: 32, offset: 448)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !2096, file: !653, line: 158, baseType: !18, size: 16, offset: 480)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !2096, file: !653, line: 159, baseType: !18, size: 16, offset: 496)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !2096, file: !653, line: 160, baseType: !18, size: 16, offset: 512)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !2096, file: !653, line: 161, baseType: !986, size: 48, offset: 528)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !2096, file: !653, line: 162, baseType: !336, size: 32, offset: 576)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !2096, file: !653, line: 164, baseType: !336, size: 32, offset: 608)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !2096, file: !653, line: 164, baseType: !336, size: 32, offset: 640)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !2096, file: !653, line: 164, baseType: !336, size: 32, offset: 672)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !2096, file: !653, line: 165, baseType: !651, size: 64, offset: 704)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !2096, file: !653, line: 167, baseType: !1602, size: 64, offset: 768)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !2009, file: !653, line: 255, baseType: !2124, size: 64, offset: 3136)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !653, line: 170, size: 8704, elements: !2126)
!2126 = !{!2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !2125, file: !653, line: 171, baseType: !1392, size: 96)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !2125, file: !653, line: 172, baseType: !6, size: 32, offset: 96)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !2125, file: !653, line: 173, baseType: !18, size: 16, offset: 128)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2125, file: !653, line: 174, baseType: !18, size: 16, offset: 144)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !2125, file: !653, line: 175, baseType: !18, size: 16, offset: 160)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !2125, file: !653, line: 176, baseType: !18, size: 16, offset: 176)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !2125, file: !653, line: 177, baseType: !18, size: 16, offset: 192)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2125, file: !653, line: 178, baseType: !18, size: 16, offset: 208)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !2125, file: !653, line: 179, baseType: !6, size: 32, offset: 224)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2125, file: !653, line: 181, baseType: !694, size: 64, offset: 256)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !2125, file: !653, line: 182, baseType: !336, size: 32, offset: 320)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !2125, file: !653, line: 183, baseType: !6, size: 32, offset: 352)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !2125, file: !653, line: 184, baseType: !62, size: 8192, offset: 384)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !2125, file: !653, line: 187, baseType: !1172, size: 64, offset: 8576)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !2125, file: !653, line: 188, baseType: !6, size: 32, offset: 8640)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2125, file: !653, line: 189, baseType: !6, size: 32, offset: 8672)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !2009, file: !653, line: 256, baseType: !2144, size: 64, offset: 3200)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !653, line: 193, size: 640, elements: !2146)
!2146 = !{!2147, !2148, !2149, !2150}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2145, file: !653, line: 194, baseType: !694, size: 64)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !2145, file: !653, line: 195, baseType: !41, size: 512, offset: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2145, file: !653, line: 197, baseType: !6, size: 32, offset: 576)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2145, file: !653, line: 198, baseType: !6, size: 32, offset: 608)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !2009, file: !653, line: 258, baseType: !20, size: 8, offset: 3264)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2009, file: !653, line: 259, baseType: !417, size: 56, offset: 3272)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !687, file: !653, line: 62, baseType: !41, size: 512, offset: 192)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !687, file: !653, line: 64, baseType: !20, size: 8, offset: 704)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !687, file: !653, line: 64, baseType: !20, size: 8, offset: 712)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !687, file: !653, line: 64, baseType: !20, size: 8, offset: 720)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !687, file: !653, line: 64, baseType: !20, size: 8, offset: 728)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !687, file: !653, line: 65, baseType: !565, size: 96, offset: 736)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !687, file: !653, line: 65, baseType: !565, size: 96, offset: 832)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !687, file: !653, line: 65, baseType: !336, size: 32, offset: 928)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !687, file: !653, line: 67, baseType: !18, size: 16, offset: 960)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !687, file: !653, line: 67, baseType: !18, size: 16, offset: 976)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !687, file: !653, line: 67, baseType: !18, size: 16, offset: 992)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !687, file: !653, line: 67, baseType: !18, size: 16, offset: 1008)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !687, file: !653, line: 68, baseType: !18, size: 16, offset: 1024)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !687, file: !653, line: 68, baseType: !18, size: 16, offset: 1040)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !687, file: !653, line: 69, baseType: !20, size: 8, offset: 1056)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !687, file: !653, line: 69, baseType: !417, size: 56, offset: 1064)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !687, file: !653, line: 70, baseType: !336, size: 32, offset: 1120)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !687, file: !653, line: 70, baseType: !336, size: 32, offset: 1152)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !687, file: !653, line: 70, baseType: !336, size: 32, offset: 1184)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !687, file: !653, line: 70, baseType: !336, size: 32, offset: 1216)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !687, file: !653, line: 71, baseType: !336, size: 32, offset: 1248)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !687, file: !653, line: 71, baseType: !336, size: 32, offset: 1280)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !687, file: !653, line: 74, baseType: !336, size: 32, offset: 1312)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !687, file: !653, line: 74, baseType: !336, size: 32, offset: 1344)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !687, file: !653, line: 77, baseType: !336, size: 32, offset: 1376)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !687, file: !653, line: 77, baseType: !336, size: 32, offset: 1408)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !687, file: !653, line: 77, baseType: !336, size: 32, offset: 1440)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !687, file: !653, line: 78, baseType: !336, size: 32, offset: 1472)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !687, file: !653, line: 78, baseType: !336, size: 32, offset: 1504)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !687, file: !653, line: 78, baseType: !336, size: 32, offset: 1536)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !687, file: !653, line: 79, baseType: !336, size: 32, offset: 1568)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !687, file: !653, line: 79, baseType: !336, size: 32, offset: 1600)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !687, file: !653, line: 79, baseType: !336, size: 32, offset: 1632)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !687, file: !653, line: 79, baseType: !336, size: 32, offset: 1664)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !687, file: !653, line: 80, baseType: !336, size: 32, offset: 1696)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !687, file: !653, line: 80, baseType: !336, size: 32, offset: 1728)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !687, file: !653, line: 80, baseType: !336, size: 32, offset: 1760)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !687, file: !653, line: 81, baseType: !336, size: 32, offset: 1792)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !687, file: !653, line: 81, baseType: !336, size: 32, offset: 1824)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !687, file: !653, line: 81, baseType: !336, size: 32, offset: 1856)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !687, file: !653, line: 82, baseType: !336, size: 32, offset: 1888)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !687, file: !653, line: 82, baseType: !336, size: 32, offset: 1920)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !687, file: !653, line: 82, baseType: !336, size: 32, offset: 1952)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !687, file: !653, line: 85, baseType: !336, size: 32, offset: 1984)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !687, file: !653, line: 85, baseType: !336, size: 32, offset: 2016)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !687, file: !653, line: 85, baseType: !336, size: 32, offset: 2048)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !687, file: !653, line: 85, baseType: !336, size: 32, offset: 2080)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !687, file: !653, line: 86, baseType: !336, size: 32, offset: 2112)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !687, file: !653, line: 86, baseType: !336, size: 32, offset: 2144)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !687, file: !653, line: 86, baseType: !336, size: 32, offset: 2176)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !687, file: !653, line: 86, baseType: !336, size: 32, offset: 2208)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !687, file: !653, line: 87, baseType: !336, size: 32, offset: 2240)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !687, file: !653, line: 87, baseType: !336, size: 32, offset: 2272)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !687, file: !653, line: 87, baseType: !336, size: 32, offset: 2304)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !687, file: !653, line: 87, baseType: !336, size: 32, offset: 2336)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !687, file: !653, line: 90, baseType: !336, size: 32, offset: 2368)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !687, file: !653, line: 93, baseType: !336, size: 32, offset: 2400)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !687, file: !653, line: 93, baseType: !336, size: 32, offset: 2432)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !687, file: !653, line: 93, baseType: !336, size: 32, offset: 2464)
!2212 = !{!2213}
!2213 = !DISubrange(count: 18)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !527, file: !528, line: 168, baseType: !1336, size: 64, offset: 6144)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !527, file: !528, line: 169, baseType: !462, size: 64, offset: 6208)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !527, file: !528, line: 170, baseType: !892, size: 64, offset: 6272)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !527, file: !528, line: 171, baseType: !381, size: 64, offset: 6336)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !527, file: !528, line: 174, baseType: !336, size: 32, offset: 6400)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !527, file: !528, line: 174, baseType: !336, size: 32, offset: 6432)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !527, file: !528, line: 174, baseType: !336, size: 32, offset: 6464)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !527, file: !528, line: 175, baseType: !336, size: 32, offset: 6496)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !527, file: !528, line: 175, baseType: !336, size: 32, offset: 6528)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !527, file: !528, line: 176, baseType: !18, size: 16, offset: 6560)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !527, file: !528, line: 176, baseType: !18, size: 16, offset: 6576)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !527, file: !528, line: 179, baseType: !565, size: 96, offset: 6592)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !527, file: !528, line: 179, baseType: !565, size: 96, offset: 6688)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !527, file: !528, line: 180, baseType: !336, size: 32, offset: 6784)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !527, file: !528, line: 180, baseType: !336, size: 32, offset: 6816)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !527, file: !528, line: 180, baseType: !336, size: 32, offset: 6848)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !527, file: !528, line: 181, baseType: !336, size: 32, offset: 6880)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !527, file: !528, line: 181, baseType: !336, size: 32, offset: 6912)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !527, file: !528, line: 182, baseType: !336, size: 32, offset: 6944)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !527, file: !528, line: 182, baseType: !336, size: 32, offset: 6976)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !527, file: !528, line: 183, baseType: !18, size: 16, offset: 7008)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !527, file: !528, line: 183, baseType: !18, size: 16, offset: 7024)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !527, file: !528, line: 185, baseType: !6, size: 32, offset: 7040)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !527, file: !528, line: 186, baseType: !18, size: 16, offset: 7072)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !527, file: !528, line: 187, baseType: !18, size: 16, offset: 7088)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !527, file: !528, line: 190, baseType: !405, size: 128, offset: 7104)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !527, file: !528, line: 191, baseType: !18, size: 16, offset: 7232)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !527, file: !528, line: 192, baseType: !18, size: 16, offset: 7248)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !527, file: !528, line: 195, baseType: !18, size: 16, offset: 7264)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !527, file: !528, line: 196, baseType: !18, size: 16, offset: 7280)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !527, file: !528, line: 197, baseType: !18, size: 16, offset: 7296)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !527, file: !528, line: 198, baseType: !986, size: 48, offset: 7312)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !527, file: !528, line: 200, baseType: !2247, size: 64, offset: 7360)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 64)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !528, line: 86, size: 192, elements: !2249)
!2249 = !{!2250, !2251, !2252, !2253}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2248, file: !528, line: 87, baseType: !341, size: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !2248, file: !528, line: 88, baseType: !800, size: 64, offset: 64)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2248, file: !528, line: 89, baseType: !6, size: 32, offset: 128)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2248, file: !528, line: 90, baseType: !6, size: 32, offset: 160)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !527, file: !528, line: 202, baseType: !320, size: 128, offset: 7424)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !444, file: !443, line: 67, baseType: !2256, size: 64, offset: 1280)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 64)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !9, line: 154, size: 64, elements: !2258)
!2258 = !{!2259, !2260}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2257, file: !9, line: 155, baseType: !6, size: 32)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2257, file: !9, line: 156, baseType: !6, size: 32, offset: 32)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !444, file: !443, line: 71, baseType: !1031, size: 64, offset: 1344)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !444, file: !443, line: 72, baseType: !2263, size: 64, offset: 1408)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !444, file: !443, line: 73, baseType: !1022, size: 64, offset: 1472)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !444, file: !443, line: 74, baseType: !2266, size: 64, offset: 1536)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !9, line: 109, size: 96, elements: !2268)
!2268 = !{!2269, !2270}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2267, file: !9, line: 110, baseType: !1294, size: 64)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2267, file: !9, line: 111, baseType: !6, size: 32, offset: 64)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !444, file: !443, line: 75, baseType: !2272, size: 64, offset: 1600)
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !9, line: 129, size: 32, elements: !2274)
!2274 = !{!2275, !2276, !2277, !2278}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2273, file: !9, line: 130, baseType: !20, size: 8)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2273, file: !9, line: 130, baseType: !20, size: 8, offset: 8)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2273, file: !9, line: 130, baseType: !20, size: 8, offset: 16)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2273, file: !9, line: 130, baseType: !20, size: 8, offset: 24)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !444, file: !443, line: 80, baseType: !1005, size: 64, offset: 1664)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !444, file: !443, line: 81, baseType: !1223, size: 64, offset: 1728)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !444, file: !443, line: 82, baseType: !2282, size: 64, offset: 1792)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 64)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !443, line: 136, size: 512, elements: !2284)
!2284 = !{!2285, !2286, !2287, !2289, !2290, !2291, !2292, !2293}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !2283, file: !443, line: 137, baseType: !45, size: 64)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2283, file: !443, line: 138, baseType: !335, size: 256, offset: 64)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2283, file: !443, line: 139, baseType: !2288, size: 128, offset: 320)
!2288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 128, elements: !406)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2283, file: !443, line: 140, baseType: !20, size: 8, offset: 448)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !2283, file: !443, line: 140, baseType: !20, size: 8, offset: 456)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2283, file: !443, line: 141, baseType: !18, size: 16, offset: 464)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !2283, file: !443, line: 141, baseType: !18, size: 16, offset: 480)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !2283, file: !443, line: 141, baseType: !18, size: 16, offset: 496)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !444, file: !443, line: 83, baseType: !981, size: 64, offset: 1856)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !444, file: !443, line: 84, baseType: !993, size: 64, offset: 1920)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !444, file: !443, line: 85, baseType: !1371, size: 64, offset: 1984)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !444, file: !443, line: 89, baseType: !2298, size: 64, offset: 2048)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 64)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !9, line: 74, size: 32, elements: !2300)
!2300 = !{!2301, !2302, !2303, !2304}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2299, file: !9, line: 75, baseType: !20, size: 8)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2299, file: !9, line: 75, baseType: !20, size: 8, offset: 8)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2299, file: !9, line: 75, baseType: !20, size: 8, offset: 16)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2299, file: !9, line: 75, baseType: !20, size: 8, offset: 24)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !444, file: !443, line: 90, baseType: !2306, size: 64, offset: 2112)
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !444, file: !443, line: 93, baseType: !2308, size: 64, offset: 2176)
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 64)
!2309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !2310, line: 54, size: 896, elements: !2311)
!2310 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_editmesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2311 = !{!2312, !2471, !2472, !2473, !2476, !2477, !2478, !2479, !2482, !2484, !2485, !2486, !2487, !2488, !2489, !2490}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !2309, file: !2310, line: 55, baseType: !2313, size: 64)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 64)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !2315, line: 186, size: 8064, elements: !2316)
!2315 = !DIFile(filename: "blender/source/blender/bmesh/bmesh_class.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2316 = !{!2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2391, !2395, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2314, file: !2315, line: 187, baseType: !6, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !2314, file: !2315, line: 187, baseType: !6, size: 32, offset: 32)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !2314, file: !2315, line: 187, baseType: !6, size: 32, offset: 64)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !2314, file: !2315, line: 187, baseType: !6, size: 32, offset: 96)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "totvertsel", scope: !2314, file: !2315, line: 188, baseType: !6, size: 32, offset: 128)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "totedgesel", scope: !2314, file: !2315, line: 188, baseType: !6, size: 32, offset: 160)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "totfacesel", scope: !2314, file: !2315, line: 188, baseType: !6, size: 32, offset: 192)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "elem_index_dirty", scope: !2314, file: !2315, line: 193, baseType: !20, size: 8, offset: 224)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "elem_table_dirty", scope: !2314, file: !2315, line: 197, baseType: !20, size: 8, offset: 232)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "vpool", scope: !2314, file: !2315, line: 201, baseType: !54, size: 64, offset: 256)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "epool", scope: !2314, file: !2315, line: 201, baseType: !54, size: 64, offset: 320)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "lpool", scope: !2314, file: !2315, line: 201, baseType: !54, size: 64, offset: 384)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "fpool", scope: !2314, file: !2315, line: 201, baseType: !54, size: 64, offset: 448)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !2314, file: !2315, line: 208, baseType: !2331, size: 64, offset: 512)
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 64)
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2333, size: 64)
!2333 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMVert", file: !2315, line: 103, baseType: !2334)
!2334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMVert", file: !2315, line: 90, size: 448, elements: !2335)
!2335 = !{!2336, !2345, !2350, !2351, !2352}
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2334, file: !2315, line: 91, baseType: !2337, size: 128)
!2337 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMHeader", file: !2315, line: 82, baseType: !2338)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMHeader", file: !2315, line: 64, size: 128, elements: !2339)
!2339 = !{!2340, !2341, !2342, !2343, !2344}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2338, file: !2315, line: 65, baseType: !45, size: 64)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2338, file: !2315, line: 66, baseType: !6, size: 32, offset: 64)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "htype", scope: !2338, file: !2315, line: 73, baseType: !20, size: 8, offset: 96)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "hflag", scope: !2338, file: !2315, line: 74, baseType: !20, size: 8, offset: 104)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "api_flag", scope: !2338, file: !2315, line: 80, baseType: !20, size: 8, offset: 112)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !2334, file: !2315, line: 92, baseType: !2346, size: 64, offset: 128)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 64)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFlagLayer", file: !2315, line: 180, size: 16, elements: !2348)
!2348 = !{!2349}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2347, file: !2315, line: 181, baseType: !18, size: 16)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2334, file: !2315, line: 94, baseType: !565, size: 96, offset: 192)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !2334, file: !2315, line: 95, baseType: !565, size: 96, offset: 288)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !2334, file: !2315, line: 102, baseType: !2353, size: 64, offset: 384)
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 64)
!2354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEdge", file: !2315, line: 110, size: 640, elements: !2355)
!2355 = !{!2356, !2357, !2358, !2360, !2361, !2384, !2390}
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2354, file: !2315, line: 111, baseType: !2337, size: 128)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !2354, file: !2315, line: 112, baseType: !2346, size: 64, offset: 128)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2354, file: !2315, line: 114, baseType: !2359, size: 64, offset: 192)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 64)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2354, file: !2315, line: 114, baseType: !2359, size: 64, offset: 256)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2354, file: !2315, line: 118, baseType: !2362, size: 64, offset: 320)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 64)
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMLoop", file: !2315, line: 125, size: 576, elements: !2364)
!2364 = !{!2365, !2366, !2367, !2368, !2380, !2381, !2382, !2383}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2363, file: !2315, line: 126, baseType: !2337, size: 128)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !2363, file: !2315, line: 129, baseType: !2359, size: 64, offset: 128)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !2363, file: !2315, line: 130, baseType: !2353, size: 64, offset: 192)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2363, file: !2315, line: 131, baseType: !2369, size: 64, offset: 256)
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 64)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFace", file: !2315, line: 164, size: 448, elements: !2371)
!2371 = !{!2372, !2373, !2374, !2377, !2378, !2379}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2370, file: !2315, line: 165, baseType: !2337, size: 128)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !2370, file: !2315, line: 166, baseType: !2346, size: 64, offset: 128)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !2370, file: !2315, line: 172, baseType: !2375, size: 64, offset: 192)
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 64)
!2376 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMLoop", file: !2315, line: 140, baseType: !2363)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2370, file: !2315, line: 174, baseType: !6, size: 32, offset: 256)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !2370, file: !2315, line: 175, baseType: !565, size: 96, offset: 288)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2370, file: !2315, line: 176, baseType: !18, size: 16, offset: 384)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "radial_next", scope: !2363, file: !2315, line: 135, baseType: !2362, size: 64, offset: 320)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "radial_prev", scope: !2363, file: !2315, line: 135, baseType: !2362, size: 64, offset: 384)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2363, file: !2315, line: 139, baseType: !2362, size: 64, offset: 448)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2363, file: !2315, line: 139, baseType: !2362, size: 64, offset: 512)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "v1_disk_link", scope: !2354, file: !2315, line: 122, baseType: !2385, size: 128, offset: 384)
!2385 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMDiskLink", file: !2315, line: 108, baseType: !2386)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMDiskLink", file: !2315, line: 106, size: 128, elements: !2387)
!2387 = !{!2388, !2389}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2386, file: !2315, line: 107, baseType: !2353, size: 64)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2386, file: !2315, line: 107, baseType: !2353, size: 64, offset: 64)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "v2_disk_link", scope: !2354, file: !2315, line: 122, baseType: !2385, size: 128, offset: 512)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "etable", scope: !2314, file: !2315, line: 209, baseType: !2392, size: 64, offset: 576)
!2392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 64)
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 64)
!2394 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEdge", file: !2315, line: 123, baseType: !2354)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "ftable", scope: !2314, file: !2315, line: 210, baseType: !2396, size: 64, offset: 640)
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64)
!2397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 64)
!2398 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMFace", file: !2315, line: 178, baseType: !2370)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_tot", scope: !2314, file: !2315, line: 213, baseType: !6, size: 32, offset: 704)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "etable_tot", scope: !2314, file: !2315, line: 214, baseType: !6, size: 32, offset: 736)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "ftable_tot", scope: !2314, file: !2315, line: 215, baseType: !6, size: 32, offset: 768)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "vtoolflagpool", scope: !2314, file: !2315, line: 218, baseType: !54, size: 64, offset: 832)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "etoolflagpool", scope: !2314, file: !2315, line: 218, baseType: !54, size: 64, offset: 896)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "ftoolflagpool", scope: !2314, file: !2315, line: 218, baseType: !54, size: 64, offset: 960)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "stackdepth", scope: !2314, file: !2315, line: 220, baseType: !6, size: 32, offset: 1024)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "currentop", scope: !2314, file: !2315, line: 221, baseType: !2407, size: 64, offset: 1088)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 64)
!2408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOperator", file: !95, line: 190, size: 10496, elements: !2409)
!2409 = !{!2410, !2445, !2446, !2452, !2455, !2456, !2458}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "slots_in", scope: !2408, file: !95, line: 191, baseType: !2411, size: 5120)
!2411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2412, size: 5120, elements: !2443)
!2412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOpSlot", file: !95, line: 147, size: 320, elements: !2413)
!2413 = !{!2414, !2417, !2419, !2429, !2430}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "slot_name", scope: !2412, file: !95, line: 148, baseType: !2415, size: 64)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 64)
!2416 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !20)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "slot_type", scope: !2412, file: !95, line: 149, baseType: !2418, size: 32, offset: 64)
!2418 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotType", file: !95, line: 112, baseType: !94)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "slot_subtype", scope: !2412, file: !95, line: 150, baseType: !2420, size: 32, offset: 96)
!2420 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Union", file: !95, line: 142, baseType: !2421)
!2421 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eBMOpSlotSubType_Union", file: !95, line: 138, size: 32, elements: !2422)
!2422 = !{!2423, !2425, !2427}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !2421, file: !95, line: 139, baseType: !2424, size: 32)
!2424 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Elem", file: !95, line: 122, baseType: !105)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2421, file: !95, line: 140, baseType: !2426, size: 32)
!2426 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Ptr", file: !95, line: 136, baseType: !111)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2421, file: !95, line: 141, baseType: !2428, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Map", file: !95, line: 130, baseType: !117)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2412, file: !95, line: 152, baseType: !6, size: 32, offset: 128)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2412, file: !95, line: 162, baseType: !2431, size: 128, offset: 192)
!2431 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2412, file: !95, line: 155, size: 128, elements: !2432)
!2432 = !{!2433, !2434, !2435, !2436, !2437, !2439}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !2431, file: !95, line: 156, baseType: !6, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2431, file: !95, line: 157, baseType: !336, size: 32)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2431, file: !95, line: 158, baseType: !45, size: 64)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2431, file: !95, line: 159, baseType: !565, size: 96)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2431, file: !95, line: 160, baseType: !2438, size: 64)
!2438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !2431, file: !95, line: 161, baseType: !2440, size: 64)
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 64)
!2441 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !2442, line: 48, baseType: !737)
!2442 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2443 = !{!2444}
!2444 = !DISubrange(count: 16)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "slots_out", scope: !2408, file: !95, line: 192, baseType: !2411, size: 5120, offset: 5120)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !2408, file: !95, line: 193, baseType: !2447, size: 64, offset: 10240)
!2447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2448, size: 64)
!2448 = !DISubroutineType(types: !2449)
!2449 = !{null, !2450, !2407}
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMesh", file: !2315, line: 246, baseType: !2314)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !2408, file: !95, line: 194, baseType: !2453, size: 64, offset: 10304)
!2453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 64)
!2454 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !95, line: 194, flags: DIFlagFwdDecl)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2408, file: !95, line: 195, baseType: !6, size: 32, offset: 10368)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "type_flag", scope: !2408, file: !95, line: 196, baseType: !2457, size: 32, offset: 10400)
!2457 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOpTypeFlag", file: !95, line: 188, baseType: !125)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2408, file: !95, line: 197, baseType: !6, size: 32, offset: 10432)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !2314, file: !2315, line: 223, baseType: !23, size: 1600, offset: 1152)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !2314, file: !2315, line: 223, baseType: !23, size: 1600, offset: 2752)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !2314, file: !2315, line: 223, baseType: !23, size: 1600, offset: 4352)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !2314, file: !2315, line: 223, baseType: !23, size: 1600, offset: 5952)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2314, file: !2315, line: 233, baseType: !18, size: 16, offset: 7552)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !2314, file: !2315, line: 236, baseType: !6, size: 32, offset: 7584)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !2314, file: !2315, line: 238, baseType: !6, size: 32, offset: 7616)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "totflags", scope: !2314, file: !2315, line: 238, baseType: !6, size: 32, offset: 7648)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "selected", scope: !2314, file: !2315, line: 239, baseType: !320, size: 128, offset: 7680)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !2314, file: !2315, line: 241, baseType: !2397, size: 64, offset: 7808)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "errorstack", scope: !2314, file: !2315, line: 243, baseType: !320, size: 128, offset: 7872)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "py_handle", scope: !2314, file: !2315, line: 245, baseType: !45, size: 64, offset: 8000)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "emcopy", scope: !2309, file: !2310, line: 58, baseType: !2308, size: 64, offset: 64)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "emcopyusers", scope: !2309, file: !2310, line: 59, baseType: !6, size: 32, offset: 128)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "looptris", scope: !2309, file: !2310, line: 63, baseType: !2474, size: 64, offset: 192)
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 64)
!2475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2362, size: 192, elements: !566)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "tottri", scope: !2309, file: !2310, line: 64, baseType: !6, size: 32, offset: 256)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !2309, file: !2310, line: 67, baseType: !926, size: 64, offset: 320)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "derivedCage", scope: !2309, file: !2310, line: 67, baseType: !926, size: 64, offset: 384)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !2309, file: !2310, line: 68, baseType: !2480, size: 64, offset: 448)
!2480 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataMask", file: !2481, line: 48, baseType: !1275)
!2481 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColor", scope: !2309, file: !2310, line: 69, baseType: !2483, size: 64, offset: 512)
!2483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColorLen", scope: !2309, file: !2310, line: 70, baseType: !6, size: 32, offset: 576)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColor", scope: !2309, file: !2310, line: 71, baseType: !2483, size: 64, offset: 640)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColorLen", scope: !2309, file: !2310, line: 72, baseType: !6, size: 32, offset: 704)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2309, file: !2310, line: 75, baseType: !18, size: 16, offset: 736)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2309, file: !2310, line: 76, baseType: !18, size: 16, offset: 752)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2309, file: !2310, line: 79, baseType: !694, size: 64, offset: 768)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cdlayer", scope: !2309, file: !2310, line: 82, baseType: !6, size: 32, offset: 832)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !444, file: !443, line: 95, baseType: !25, size: 1600, offset: 2240)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !444, file: !443, line: 95, baseType: !25, size: 1600, offset: 3840)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !444, file: !443, line: 95, baseType: !25, size: 1600, offset: 5440)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !444, file: !443, line: 98, baseType: !25, size: 1600, offset: 7040)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !444, file: !443, line: 98, baseType: !25, size: 1600, offset: 8640)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !444, file: !443, line: 101, baseType: !6, size: 32, offset: 10240)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !444, file: !443, line: 101, baseType: !6, size: 32, offset: 10272)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !444, file: !443, line: 101, baseType: !6, size: 32, offset: 10304)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !444, file: !443, line: 101, baseType: !6, size: 32, offset: 10336)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !444, file: !443, line: 104, baseType: !6, size: 32, offset: 10368)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !444, file: !443, line: 104, baseType: !6, size: 32, offset: 10400)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !444, file: !443, line: 111, baseType: !6, size: 32, offset: 10432)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !444, file: !443, line: 114, baseType: !565, size: 96, offset: 10464)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !444, file: !443, line: 115, baseType: !565, size: 96, offset: 10560)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !444, file: !443, line: 116, baseType: !565, size: 96, offset: 10656)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !444, file: !443, line: 118, baseType: !6, size: 32, offset: 10752)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !444, file: !443, line: 119, baseType: !18, size: 16, offset: 10784)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !444, file: !443, line: 119, baseType: !18, size: 16, offset: 10800)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !444, file: !443, line: 120, baseType: !336, size: 32, offset: 10816)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !444, file: !443, line: 121, baseType: !6, size: 32, offset: 10848)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !444, file: !443, line: 124, baseType: !20, size: 8, offset: 10880)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !444, file: !443, line: 124, baseType: !20, size: 8, offset: 10888)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !444, file: !443, line: 126, baseType: !20, size: 8, offset: 10896)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !444, file: !443, line: 126, baseType: !20, size: 8, offset: 10904)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !444, file: !443, line: 127, baseType: !20, size: 8, offset: 10912)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !444, file: !443, line: 128, baseType: !20, size: 8, offset: 10920)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !444, file: !443, line: 130, baseType: !18, size: 16, offset: 10928)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !444, file: !443, line: 132, baseType: !2519, size: 64, offset: 10944)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 64)
!2520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !9, line: 233, size: 3584, elements: !2521)
!2521 = !{!2522, !2523, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2538}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !2520, file: !9, line: 234, baseType: !320, size: 128)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !2520, file: !9, line: 235, baseType: !2524, size: 64, offset: 128)
!2524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2525, size: 64)
!2525 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !9, line: 69, baseType: !982)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !2520, file: !9, line: 237, baseType: !1203, size: 8, offset: 192)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2520, file: !9, line: 237, baseType: !1203, size: 8, offset: 200)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !2520, file: !9, line: 237, baseType: !1203, size: 8, offset: 208)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !2520, file: !9, line: 237, baseType: !1203, size: 8, offset: 216)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !2520, file: !9, line: 237, baseType: !1203, size: 8, offset: 224)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !2520, file: !9, line: 237, baseType: !1203, size: 8, offset: 232)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !2520, file: !9, line: 238, baseType: !1203, size: 8, offset: 240)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2520, file: !9, line: 238, baseType: !1203, size: 8, offset: 248)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !2520, file: !9, line: 241, baseType: !23, size: 1600, offset: 256)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !2520, file: !9, line: 242, baseType: !23, size: 1600, offset: 1856)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !2520, file: !9, line: 243, baseType: !2537, size: 64, offset: 3456)
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18, size: 64)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !2520, file: !9, line: 244, baseType: !800, size: 64, offset: 3520)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 64)
!2540 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curve", file: !913, line: 273, baseType: !2541)
!2541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Curve", file: !913, line: 193, size: 4224, elements: !2542)
!2542 = !{!2543, !2544, !2545, !2546, !2547, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2608, !2609, !2612, !2613, !2614, !2615, !2623, !2624, !2625, !2634, !2635, !2636, !2637, !2638, !2639, !2640}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2541, file: !913, line: 194, baseType: !270, size: 960)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2541, file: !913, line: 195, baseType: !448, size: 64, offset: 960)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2541, file: !913, line: 197, baseType: !452, size: 64, offset: 1024)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "nurb", scope: !2541, file: !913, line: 199, baseType: !320, size: 128, offset: 1088)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "editnurb", scope: !2541, file: !913, line: 201, baseType: !2548, size: 64, offset: 1216)
!2548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2549, size: 64)
!2549 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditNurb", file: !913, line: 191, baseType: !2550)
!2550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditNurb", file: !913, line: 180, size: 256, elements: !2551)
!2551 = !{!2552, !2553, !2554, !2555}
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "nurbs", scope: !2550, file: !913, line: 182, baseType: !320, size: 128)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "keyindex", scope: !2550, file: !913, line: 185, baseType: !736, size: 64, offset: 128)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !2550, file: !913, line: 188, baseType: !6, size: 32, offset: 192)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2550, file: !913, line: 190, baseType: !2556, size: 32, offset: 224)
!2556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 32, elements: !406)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "bevobj", scope: !2541, file: !913, line: 203, baseType: !694, size: 64, offset: 1280)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "taperobj", scope: !2541, file: !913, line: 203, baseType: !694, size: 64, offset: 1344)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "textoncurve", scope: !2541, file: !913, line: 203, baseType: !694, size: 64, offset: 1408)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2541, file: !913, line: 204, baseType: !462, size: 64, offset: 1472)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2541, file: !913, line: 205, baseType: !482, size: 64, offset: 1536)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2541, file: !913, line: 206, baseType: !525, size: 64, offset: 1600)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2541, file: !913, line: 209, baseType: !565, size: 96, offset: 1664)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2541, file: !913, line: 210, baseType: !565, size: 96, offset: 1760)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !2541, file: !913, line: 211, baseType: !565, size: 96, offset: 1856)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2541, file: !913, line: 213, baseType: !18, size: 16, offset: 1952)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !2541, file: !913, line: 215, baseType: !18, size: 16, offset: 1968)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !2541, file: !913, line: 216, baseType: !18, size: 16, offset: 1984)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "twist_mode", scope: !2541, file: !913, line: 216, baseType: !18, size: 16, offset: 2000)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "twist_smooth", scope: !2541, file: !913, line: 217, baseType: !336, size: 32, offset: 2016)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "smallcaps_scale", scope: !2541, file: !913, line: 217, baseType: !336, size: 32, offset: 2048)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "pathlen", scope: !2541, file: !913, line: 219, baseType: !6, size: 32, offset: 2080)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "bevresol", scope: !2541, file: !913, line: 220, baseType: !18, size: 16, offset: 2112)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !2541, file: !913, line: 220, baseType: !18, size: 16, offset: 2128)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2541, file: !913, line: 221, baseType: !6, size: 32, offset: 2144)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2541, file: !913, line: 222, baseType: !336, size: 32, offset: 2176)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "ext1", scope: !2541, file: !913, line: 222, baseType: !336, size: 32, offset: 2208)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "ext2", scope: !2541, file: !913, line: 222, baseType: !336, size: 32, offset: 2240)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !2541, file: !913, line: 225, baseType: !18, size: 16, offset: 2272)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !2541, file: !913, line: 225, baseType: !18, size: 16, offset: 2288)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "resolu_ren", scope: !2541, file: !913, line: 226, baseType: !18, size: 16, offset: 2304)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "resolv_ren", scope: !2541, file: !913, line: 226, baseType: !18, size: 16, offset: 2320)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "actnu", scope: !2541, file: !913, line: 229, baseType: !6, size: 32, offset: 2336)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "actvert", scope: !2541, file: !913, line: 231, baseType: !6, size: 32, offset: 2368)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2541, file: !913, line: 233, baseType: !2556, size: 32, offset: 2400)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !2541, file: !913, line: 236, baseType: !18, size: 16, offset: 2432)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "spacemode", scope: !2541, file: !913, line: 237, baseType: !20, size: 8, offset: 2448)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2541, file: !913, line: 237, baseType: !20, size: 8, offset: 2456)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !2541, file: !913, line: 238, baseType: !336, size: 32, offset: 2464)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "linedist", scope: !2541, file: !913, line: 238, baseType: !336, size: 32, offset: 2496)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "shear", scope: !2541, file: !913, line: 238, baseType: !336, size: 32, offset: 2528)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !2541, file: !913, line: 238, baseType: !336, size: 32, offset: 2560)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "wordspace", scope: !2541, file: !913, line: 238, baseType: !336, size: 32, offset: 2592)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "ulpos", scope: !2541, file: !913, line: 238, baseType: !336, size: 32, offset: 2624)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "ulheight", scope: !2541, file: !913, line: 238, baseType: !336, size: 32, offset: 2656)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !2541, file: !913, line: 239, baseType: !336, size: 32, offset: 2688)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !2541, file: !913, line: 239, baseType: !336, size: 32, offset: 2720)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "linewidth", scope: !2541, file: !913, line: 240, baseType: !336, size: 32, offset: 2752)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2541, file: !913, line: 244, baseType: !6, size: 32, offset: 2784)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "selstart", scope: !2541, file: !913, line: 245, baseType: !6, size: 32, offset: 2816)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "selend", scope: !2541, file: !913, line: 245, baseType: !6, size: 32, offset: 2848)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "len_wchar", scope: !2541, file: !913, line: 248, baseType: !6, size: 32, offset: 2880)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2541, file: !913, line: 249, baseType: !6, size: 32, offset: 2912)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2541, file: !913, line: 250, baseType: !800, size: 64, offset: 2944)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "editfont", scope: !2541, file: !913, line: 251, baseType: !2606, size: 64, offset: 3008)
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 64)
!2607 = !DICompositeType(tag: DW_TAG_structure_type, name: "EditFont", file: !913, line: 50, flags: DIFlagFwdDecl)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2541, file: !913, line: 253, baseType: !41, size: 512, offset: 3072)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !2541, file: !913, line: 254, baseType: !2610, size: 64, offset: 3584)
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 64)
!2611 = !DICompositeType(tag: DW_TAG_structure_type, name: "VFont", file: !913, line: 47, flags: DIFlagFwdDecl)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "vfontb", scope: !2541, file: !913, line: 255, baseType: !2610, size: 64, offset: 3648)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "vfonti", scope: !2541, file: !913, line: 256, baseType: !2610, size: 64, offset: 3712)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "vfontbi", scope: !2541, file: !913, line: 257, baseType: !2610, size: 64, offset: 3776)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "tb", scope: !2541, file: !913, line: 259, baseType: !2616, size: 64, offset: 3840)
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 64)
!2617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextBox", file: !913, line: 176, size: 128, elements: !2618)
!2618 = !{!2619, !2620, !2621, !2622}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2617, file: !913, line: 177, baseType: !336, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2617, file: !913, line: 177, baseType: !336, size: 32, offset: 32)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2617, file: !913, line: 177, baseType: !336, size: 32, offset: 64)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !2617, file: !913, line: 177, baseType: !336, size: 32, offset: 96)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "totbox", scope: !2541, file: !913, line: 260, baseType: !6, size: 32, offset: 3904)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "actbox", scope: !2541, file: !913, line: 260, baseType: !6, size: 32, offset: 3936)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "strinfo", scope: !2541, file: !913, line: 262, baseType: !2626, size: 64, offset: 3968)
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 64)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CharInfo", file: !913, line: 168, size: 64, elements: !2628)
!2628 = !{!2629, !2630, !2631, !2632, !2633}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "kern", scope: !2627, file: !913, line: 169, baseType: !18, size: 16)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2627, file: !913, line: 170, baseType: !18, size: 16, offset: 16)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2627, file: !913, line: 171, baseType: !20, size: 8, offset: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2627, file: !913, line: 172, baseType: !20, size: 8, offset: 40)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2627, file: !913, line: 173, baseType: !18, size: 16, offset: 48)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "curinfo", scope: !2541, file: !913, line: 263, baseType: !2627, size: 64, offset: 4032)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !2541, file: !913, line: 267, baseType: !336, size: 32, offset: 4096)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1", scope: !2541, file: !913, line: 268, baseType: !336, size: 32, offset: 4128)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2", scope: !2541, file: !913, line: 268, baseType: !336, size: 32, offset: 4160)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1_mapping", scope: !2541, file: !913, line: 269, baseType: !20, size: 8, offset: 4192)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2_mapping", scope: !2541, file: !913, line: 269, baseType: !20, size: 8, offset: 4200)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2541, file: !913, line: 271, baseType: !1553, size: 16, offset: 4208)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 64)
!2642 = !DIDerivedType(tag: DW_TAG_typedef, name: "EdgeLink", file: !3, line: 1536, baseType: !2643)
!2643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EdgeLink", file: !3, line: 1533, size: 192, elements: !2644)
!2644 = !{!2645, !2647, !2648}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2643, file: !3, line: 1534, baseType: !2646, size: 64)
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 64)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2643, file: !3, line: 1534, baseType: !2646, size: 64, offset: 64)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "edge", scope: !2643, file: !3, line: 1535, baseType: !45, size: 64, offset: 128)
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 64)
!2650 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nurb", file: !913, line: 166, baseType: !2651)
!2651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Nurb", file: !913, line: 147, size: 704, elements: !2652)
!2652 = !{!2653, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2683, !2704, !2705, !2706}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2651, file: !913, line: 148, baseType: !2654, size: 64)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 64)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2651, file: !913, line: 148, baseType: !2654, size: 64, offset: 64)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2651, file: !913, line: 149, baseType: !18, size: 16, offset: 128)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2651, file: !913, line: 150, baseType: !18, size: 16, offset: 144)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !2651, file: !913, line: 151, baseType: !18, size: 16, offset: 160)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2651, file: !913, line: 151, baseType: !18, size: 16, offset: 176)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "pntsu", scope: !2651, file: !913, line: 152, baseType: !6, size: 32, offset: 192)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "pntsv", scope: !2651, file: !913, line: 152, baseType: !6, size: 32, offset: 224)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2651, file: !913, line: 153, baseType: !389, size: 32, offset: 256)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !2651, file: !913, line: 154, baseType: !18, size: 16, offset: 288)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !2651, file: !913, line: 154, baseType: !18, size: 16, offset: 304)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "orderu", scope: !2651, file: !913, line: 155, baseType: !18, size: 16, offset: 320)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "orderv", scope: !2651, file: !913, line: 155, baseType: !18, size: 16, offset: 336)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "flagu", scope: !2651, file: !913, line: 156, baseType: !18, size: 16, offset: 352)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "flagv", scope: !2651, file: !913, line: 156, baseType: !18, size: 16, offset: 368)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "knotsu", scope: !2651, file: !913, line: 158, baseType: !1172, size: 64, offset: 384)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "knotsv", scope: !2651, file: !913, line: 158, baseType: !1172, size: 64, offset: 448)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2651, file: !913, line: 159, baseType: !2672, size: 64, offset: 512)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 64)
!2673 = !DIDerivedType(tag: DW_TAG_typedef, name: "BPoint", file: !913, line: 141, baseType: !2674)
!2674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BPoint", file: !913, line: 136, size: 288, elements: !2675)
!2675 = !{!2676, !2677, !2678, !2679, !2680, !2681, !2682}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2674, file: !913, line: 137, baseType: !405, size: 128)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !2674, file: !913, line: 138, baseType: !336, size: 32, offset: 128)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2674, file: !913, line: 138, baseType: !336, size: 32, offset: 160)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !2674, file: !913, line: 139, baseType: !18, size: 16, offset: 192)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !2674, file: !913, line: 139, baseType: !18, size: 16, offset: 208)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !2674, file: !913, line: 140, baseType: !336, size: 32, offset: 224)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2674, file: !913, line: 140, baseType: !336, size: 32, offset: 256)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !2651, file: !913, line: 160, baseType: !2684, size: 64, offset: 576)
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 64)
!2685 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !913, line: 133, baseType: !2686)
!2686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !913, line: 117, size: 576, elements: !2687)
!2687 = !{!2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2686, file: !913, line: 118, baseType: !2079, size: 288)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !2686, file: !913, line: 119, baseType: !336, size: 32, offset: 288)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2686, file: !913, line: 119, baseType: !336, size: 32, offset: 320)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !2686, file: !913, line: 119, baseType: !336, size: 32, offset: 352)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2686, file: !913, line: 121, baseType: !20, size: 8, offset: 384)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !2686, file: !913, line: 123, baseType: !20, size: 8, offset: 392)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !2686, file: !913, line: 123, baseType: !20, size: 8, offset: 400)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !2686, file: !913, line: 124, baseType: !20, size: 8, offset: 408)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !2686, file: !913, line: 124, baseType: !20, size: 8, offset: 416)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !2686, file: !913, line: 124, baseType: !20, size: 8, offset: 424)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !2686, file: !913, line: 126, baseType: !20, size: 8, offset: 432)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !2686, file: !913, line: 128, baseType: !20, size: 8, offset: 440)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2686, file: !913, line: 129, baseType: !336, size: 32, offset: 448)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !2686, file: !913, line: 130, baseType: !336, size: 32, offset: 480)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !2686, file: !913, line: 130, baseType: !336, size: 32, offset: 512)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2686, file: !913, line: 132, baseType: !2556, size: 32, offset: 544)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "tilt_interp", scope: !2651, file: !913, line: 162, baseType: !18, size: 16, offset: 640)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "radius_interp", scope: !2651, file: !913, line: 163, baseType: !18, size: 16, offset: 656)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "charidx", scope: !2651, file: !913, line: 165, baseType: !6, size: 32, offset: 672)
!2707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2708, size: 64)
!2708 = !DIDerivedType(tag: DW_TAG_typedef, name: "VertLink", file: !3, line: 1541, baseType: !2709)
!2709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VertLink", file: !3, line: 1538, size: 192, elements: !2710)
!2710 = !{!2711, !2719, !2720}
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2709, file: !3, line: 1539, baseType: !2712, size: 64)
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2713, size: 64)
!2713 = !DIDerivedType(tag: DW_TAG_typedef, name: "Link", file: !321, line: 59, baseType: !2714)
!2714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Link", file: !321, line: 57, size: 128, elements: !2715)
!2715 = !{!2716, !2718}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2714, file: !321, line: 58, baseType: !2717, size: 64)
!2717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2714, size: 64)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2714, file: !321, line: 58, baseType: !2717, size: 64, offset: 64)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2709, file: !3, line: 1539, baseType: !2712, size: 64, offset: 64)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2709, file: !3, line: 1540, baseType: !13, size: 32, offset: 128)
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2722, size: 64)
!2722 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPoly", file: !9, line: 85, baseType: !1032)
!2723 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIterType", file: !176, line: 79, baseType: !175)
!2724 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__begin_cb", file: !176, line: 158, baseType: !2725)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!2726 = !DISubroutineType(types: !2727)
!2727 = !{null, !45}
!2728 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__step_cb", file: !176, line: 159, baseType: !2729)
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2730, size: 64)
!2730 = !DISubroutineType(types: !2731)
!2731 = !{!45, !45}
!2732 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !2733, line: 90, baseType: !1279)
!2733 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2735, size: 64)
!2735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_eh_Entry", file: !2736, line: 77, size: 192, elements: !2737)
!2736 = !DIFile(filename: "blender/source/blender/blenlib/BLI_edgehash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2737 = !{!2738, !2739, !2740, !2741}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2735, file: !2736, line: 77, baseType: !45, size: 64)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "v0", scope: !2735, file: !2736, line: 77, baseType: !13, size: 32, offset: 64)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2735, file: !2736, line: 77, baseType: !13, size: 32, offset: 96)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2735, file: !2736, line: 77, baseType: !45, size: 64, offset: 128)
!2742 = !{!0, !2743}
!2743 = !DIGlobalVariableExpression(var: !2744, expr: !DIExpression())
!2744 = distinct !DIGlobalVariable(name: "corner_indices", scope: !2, file: !3, line: 980, type: !1111, isLocal: true, isDefinition: true)
!2745 = !{}
!2746 = !{i32 7, !"Dwarf Version", i32 4}
!2747 = !{i32 2, !"Debug Info Version", i32 3}
!2748 = !{i32 1, !"wchar_size", i32 4}
!2749 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2750 = distinct !DISubprogram(name: "BKE_mesh_cmp", scope: !3, file: !3, line: 271, type: !2751, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!2751 = !DISubroutineType(types: !2752)
!2752 = !{!2415, !441, !441, !336}
!2753 = !DILocalVariable(name: "me1", arg: 1, scope: !2750, file: !3, line: 271, type: !441)
!2754 = !DILocation(line: 271, column: 32, scope: !2750)
!2755 = !DILocalVariable(name: "me2", arg: 2, scope: !2750, file: !3, line: 271, type: !441)
!2756 = !DILocation(line: 271, column: 43, scope: !2750)
!2757 = !DILocalVariable(name: "thresh", arg: 3, scope: !2750, file: !3, line: 271, type: !336)
!2758 = !DILocation(line: 271, column: 54, scope: !2750)
!2759 = !DILocalVariable(name: "c", scope: !2750, file: !3, line: 273, type: !6)
!2760 = !DILocation(line: 273, column: 6, scope: !2750)
!2761 = !DILocation(line: 275, column: 7, scope: !2762)
!2762 = distinct !DILexicalBlock(scope: !2750, file: !3, line: 275, column: 6)
!2763 = !DILocation(line: 275, column: 11, scope: !2762)
!2764 = !DILocation(line: 275, column: 15, scope: !2762)
!2765 = !DILocation(line: 275, column: 6, scope: !2750)
!2766 = !DILocation(line: 276, column: 3, scope: !2762)
!2767 = !DILocation(line: 278, column: 6, scope: !2768)
!2768 = distinct !DILexicalBlock(scope: !2750, file: !3, line: 278, column: 6)
!2769 = !DILocation(line: 278, column: 11, scope: !2768)
!2770 = !DILocation(line: 278, column: 22, scope: !2768)
!2771 = !DILocation(line: 278, column: 27, scope: !2768)
!2772 = !DILocation(line: 278, column: 19, scope: !2768)
!2773 = !DILocation(line: 278, column: 6, scope: !2750)
!2774 = !DILocation(line: 279, column: 3, scope: !2768)
!2775 = !DILocation(line: 281, column: 6, scope: !2776)
!2776 = distinct !DILexicalBlock(scope: !2750, file: !3, line: 281, column: 6)
!2777 = !DILocation(line: 281, column: 11, scope: !2776)
!2778 = !DILocation(line: 281, column: 22, scope: !2776)
!2779 = !DILocation(line: 281, column: 27, scope: !2776)
!2780 = !DILocation(line: 281, column: 19, scope: !2776)
!2781 = !DILocation(line: 281, column: 6, scope: !2750)
!2782 = !DILocation(line: 282, column: 3, scope: !2776)
!2783 = !DILocation(line: 284, column: 6, scope: !2784)
!2784 = distinct !DILexicalBlock(scope: !2750, file: !3, line: 284, column: 6)
!2785 = !DILocation(line: 284, column: 11, scope: !2784)
!2786 = !DILocation(line: 284, column: 22, scope: !2784)
!2787 = !DILocation(line: 284, column: 27, scope: !2784)
!2788 = !DILocation(line: 284, column: 19, scope: !2784)
!2789 = !DILocation(line: 284, column: 6, scope: !2750)
!2790 = !DILocation(line: 285, column: 3, scope: !2784)
!2791 = !DILocation(line: 287, column: 6, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !2750, file: !3, line: 287, column: 6)
!2793 = !DILocation(line: 287, column: 11, scope: !2792)
!2794 = !DILocation(line: 287, column: 22, scope: !2792)
!2795 = !DILocation(line: 287, column: 27, scope: !2792)
!2796 = !DILocation(line: 287, column: 19, scope: !2792)
!2797 = !DILocation(line: 287, column: 6, scope: !2750)
!2798 = !DILocation(line: 288, column: 3, scope: !2792)
!2799 = !DILocation(line: 290, column: 31, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !2750, file: !3, line: 290, column: 6)
!2801 = !DILocation(line: 290, column: 36, scope: !2800)
!2802 = !DILocation(line: 290, column: 44, scope: !2800)
!2803 = !DILocation(line: 290, column: 49, scope: !2800)
!2804 = !DILocation(line: 290, column: 56, scope: !2800)
!2805 = !DILocation(line: 290, column: 61, scope: !2800)
!2806 = !DILocation(line: 290, column: 66, scope: !2800)
!2807 = !DILocation(line: 290, column: 11, scope: !2800)
!2808 = !DILocation(line: 290, column: 9, scope: !2800)
!2809 = !DILocation(line: 290, column: 6, scope: !2750)
!2810 = !DILocation(line: 291, column: 25, scope: !2800)
!2811 = !DILocation(line: 291, column: 10, scope: !2800)
!2812 = !DILocation(line: 291, column: 3, scope: !2800)
!2813 = !DILocation(line: 293, column: 31, scope: !2814)
!2814 = distinct !DILexicalBlock(scope: !2750, file: !3, line: 293, column: 6)
!2815 = !DILocation(line: 293, column: 36, scope: !2814)
!2816 = !DILocation(line: 293, column: 44, scope: !2814)
!2817 = !DILocation(line: 293, column: 49, scope: !2814)
!2818 = !DILocation(line: 293, column: 56, scope: !2814)
!2819 = !DILocation(line: 293, column: 61, scope: !2814)
!2820 = !DILocation(line: 293, column: 66, scope: !2814)
!2821 = !DILocation(line: 293, column: 11, scope: !2814)
!2822 = !DILocation(line: 293, column: 9, scope: !2814)
!2823 = !DILocation(line: 293, column: 6, scope: !2750)
!2824 = !DILocation(line: 294, column: 25, scope: !2814)
!2825 = !DILocation(line: 294, column: 10, scope: !2814)
!2826 = !DILocation(line: 294, column: 3, scope: !2814)
!2827 = !DILocation(line: 296, column: 31, scope: !2828)
!2828 = distinct !DILexicalBlock(scope: !2750, file: !3, line: 296, column: 6)
!2829 = !DILocation(line: 296, column: 36, scope: !2828)
!2830 = !DILocation(line: 296, column: 44, scope: !2828)
!2831 = !DILocation(line: 296, column: 49, scope: !2828)
!2832 = !DILocation(line: 296, column: 56, scope: !2828)
!2833 = !DILocation(line: 296, column: 61, scope: !2828)
!2834 = !DILocation(line: 296, column: 66, scope: !2828)
!2835 = !DILocation(line: 296, column: 11, scope: !2828)
!2836 = !DILocation(line: 296, column: 9, scope: !2828)
!2837 = !DILocation(line: 296, column: 6, scope: !2750)
!2838 = !DILocation(line: 297, column: 25, scope: !2828)
!2839 = !DILocation(line: 297, column: 10, scope: !2828)
!2840 = !DILocation(line: 297, column: 3, scope: !2828)
!2841 = !DILocation(line: 299, column: 31, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2750, file: !3, line: 299, column: 6)
!2843 = !DILocation(line: 299, column: 36, scope: !2842)
!2844 = !DILocation(line: 299, column: 44, scope: !2842)
!2845 = !DILocation(line: 299, column: 49, scope: !2842)
!2846 = !DILocation(line: 299, column: 56, scope: !2842)
!2847 = !DILocation(line: 299, column: 61, scope: !2842)
!2848 = !DILocation(line: 299, column: 66, scope: !2842)
!2849 = !DILocation(line: 299, column: 11, scope: !2842)
!2850 = !DILocation(line: 299, column: 9, scope: !2842)
!2851 = !DILocation(line: 299, column: 6, scope: !2750)
!2852 = !DILocation(line: 300, column: 25, scope: !2842)
!2853 = !DILocation(line: 300, column: 10, scope: !2842)
!2854 = !DILocation(line: 300, column: 3, scope: !2842)
!2855 = !DILocation(line: 302, column: 2, scope: !2750)
!2856 = !DILocation(line: 303, column: 1, scope: !2750)
!2857 = distinct !DISubprogram(name: "customdata_compare", scope: !3, file: !3, line: 111, type: !2858, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!2858 = !DISubroutineType(types: !2859)
!2859 = !{!6, !22, !22, !441, !441, !967}
!2860 = !DILocalVariable(name: "c1", arg: 1, scope: !2857, file: !3, line: 111, type: !22)
!2861 = !DILocation(line: 111, column: 43, scope: !2857)
!2862 = !DILocalVariable(name: "c2", arg: 2, scope: !2857, file: !3, line: 111, type: !22)
!2863 = !DILocation(line: 111, column: 59, scope: !2857)
!2864 = !DILocalVariable(name: "m1", arg: 3, scope: !2857, file: !3, line: 111, type: !441)
!2865 = !DILocation(line: 111, column: 69, scope: !2857)
!2866 = !DILocalVariable(name: "m2", arg: 4, scope: !2857, file: !3, line: 111, type: !441)
!2867 = !DILocation(line: 111, column: 79, scope: !2857)
!2868 = !DILocalVariable(name: "thresh", arg: 5, scope: !2857, file: !3, line: 111, type: !967)
!2869 = !DILocation(line: 111, column: 95, scope: !2857)
!2870 = !DILocalVariable(name: "thresh_sq", scope: !2857, file: !3, line: 113, type: !967)
!2871 = !DILocation(line: 113, column: 14, scope: !2857)
!2872 = !DILocation(line: 113, column: 26, scope: !2857)
!2873 = !DILocation(line: 113, column: 35, scope: !2857)
!2874 = !DILocation(line: 113, column: 33, scope: !2857)
!2875 = !DILocalVariable(name: "l1", scope: !2857, file: !3, line: 114, type: !28)
!2876 = !DILocation(line: 114, column: 19, scope: !2857)
!2877 = !DILocalVariable(name: "l2", scope: !2857, file: !3, line: 114, type: !28)
!2878 = !DILocation(line: 114, column: 24, scope: !2857)
!2879 = !DILocalVariable(name: "i", scope: !2857, file: !3, line: 115, type: !6)
!2880 = !DILocation(line: 115, column: 6, scope: !2857)
!2881 = !DILocalVariable(name: "i1", scope: !2857, file: !3, line: 115, type: !6)
!2882 = !DILocation(line: 115, column: 9, scope: !2857)
!2883 = !DILocalVariable(name: "i2", scope: !2857, file: !3, line: 115, type: !6)
!2884 = !DILocation(line: 115, column: 17, scope: !2857)
!2885 = !DILocalVariable(name: "tot", scope: !2857, file: !3, line: 115, type: !6)
!2886 = !DILocation(line: 115, column: 25, scope: !2857)
!2887 = !DILocalVariable(name: "j", scope: !2857, file: !3, line: 115, type: !6)
!2888 = !DILocation(line: 115, column: 30, scope: !2857)
!2889 = !DILocation(line: 117, column: 9, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !2857, file: !3, line: 117, column: 2)
!2891 = !DILocation(line: 117, column: 7, scope: !2890)
!2892 = !DILocation(line: 117, column: 14, scope: !2893)
!2893 = distinct !DILexicalBlock(scope: !2890, file: !3, line: 117, column: 2)
!2894 = !DILocation(line: 117, column: 18, scope: !2893)
!2895 = !DILocation(line: 117, column: 22, scope: !2893)
!2896 = !DILocation(line: 117, column: 16, scope: !2893)
!2897 = !DILocation(line: 117, column: 2, scope: !2890)
!2898 = !DILocation(line: 118, column: 7, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2900, file: !3, line: 118, column: 7)
!2900 = distinct !DILexicalBlock(scope: !2893, file: !3, line: 117, column: 37)
!2901 = !DILocation(line: 118, column: 7, scope: !2900)
!2902 = !DILocation(line: 121, column: 6, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2899, file: !3, line: 120, column: 3)
!2904 = !DILocation(line: 122, column: 3, scope: !2903)
!2905 = !DILocation(line: 123, column: 2, scope: !2900)
!2906 = !DILocation(line: 117, column: 33, scope: !2893)
!2907 = !DILocation(line: 117, column: 2, scope: !2893)
!2908 = distinct !{!2908, !2897, !2909}
!2909 = !DILocation(line: 123, column: 2, scope: !2890)
!2910 = !DILocation(line: 125, column: 9, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2857, file: !3, line: 125, column: 2)
!2912 = !DILocation(line: 125, column: 7, scope: !2911)
!2913 = !DILocation(line: 125, column: 14, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2911, file: !3, line: 125, column: 2)
!2915 = !DILocation(line: 125, column: 18, scope: !2914)
!2916 = !DILocation(line: 125, column: 22, scope: !2914)
!2917 = !DILocation(line: 125, column: 16, scope: !2914)
!2918 = !DILocation(line: 125, column: 2, scope: !2911)
!2919 = !DILocation(line: 126, column: 7, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !2921, file: !3, line: 126, column: 7)
!2921 = distinct !DILexicalBlock(scope: !2914, file: !3, line: 125, column: 37)
!2922 = !DILocation(line: 126, column: 7, scope: !2921)
!2923 = !DILocation(line: 129, column: 6, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2920, file: !3, line: 128, column: 3)
!2925 = !DILocation(line: 130, column: 3, scope: !2924)
!2926 = !DILocation(line: 131, column: 2, scope: !2921)
!2927 = !DILocation(line: 125, column: 33, scope: !2914)
!2928 = !DILocation(line: 125, column: 2, scope: !2914)
!2929 = distinct !{!2929, !2918, !2930}
!2930 = !DILocation(line: 131, column: 2, scope: !2911)
!2931 = !DILocation(line: 133, column: 6, scope: !2932)
!2932 = distinct !DILexicalBlock(scope: !2857, file: !3, line: 133, column: 6)
!2933 = !DILocation(line: 133, column: 12, scope: !2932)
!2934 = !DILocation(line: 133, column: 9, scope: !2932)
!2935 = !DILocation(line: 133, column: 6, scope: !2857)
!2936 = !DILocation(line: 134, column: 3, scope: !2932)
!2937 = !DILocation(line: 136, column: 7, scope: !2857)
!2938 = !DILocation(line: 136, column: 11, scope: !2857)
!2939 = !DILocation(line: 136, column: 5, scope: !2857)
!2940 = !DILocation(line: 136, column: 24, scope: !2857)
!2941 = !DILocation(line: 136, column: 28, scope: !2857)
!2942 = !DILocation(line: 136, column: 22, scope: !2857)
!2943 = !DILocation(line: 137, column: 8, scope: !2857)
!2944 = !DILocation(line: 137, column: 6, scope: !2857)
!2945 = !DILocation(line: 138, column: 5, scope: !2857)
!2946 = !DILocation(line: 138, column: 13, scope: !2857)
!2947 = !DILocation(line: 139, column: 9, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2857, file: !3, line: 139, column: 2)
!2949 = !DILocation(line: 139, column: 7, scope: !2948)
!2950 = !DILocation(line: 139, column: 14, scope: !2951)
!2951 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 139, column: 2)
!2952 = !DILocation(line: 139, column: 18, scope: !2951)
!2953 = !DILocation(line: 139, column: 16, scope: !2951)
!2954 = !DILocation(line: 139, column: 2, scope: !2948)
!2955 = !DILocation(line: 140, column: 3, scope: !2956)
!2956 = distinct !DILexicalBlock(scope: !2951, file: !3, line: 139, column: 28)
!2957 = !DILocation(line: 140, column: 10, scope: !2956)
!2958 = !DILocation(line: 140, column: 15, scope: !2956)
!2959 = !DILocation(line: 140, column: 19, scope: !2956)
!2960 = !DILocation(line: 140, column: 13, scope: !2956)
!2961 = !DILocation(line: 140, column: 28, scope: !2956)
!2962 = !DILocation(line: 140, column: 32, scope: !2956)
!2963 = !DILocation(line: 140, column: 31, scope: !2956)
!2964 = !DILocation(line: 0, scope: !2956)
!2965 = !DILocation(line: 143, column: 6, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !2956, file: !3, line: 142, column: 3)
!2967 = !DILocation(line: 143, column: 12, scope: !2966)
!2968 = distinct !{!2968, !2955, !2969}
!2969 = !DILocation(line: 144, column: 3, scope: !2956)
!2970 = !DILocation(line: 146, column: 3, scope: !2956)
!2971 = !DILocation(line: 146, column: 10, scope: !2956)
!2972 = !DILocation(line: 146, column: 15, scope: !2956)
!2973 = !DILocation(line: 146, column: 19, scope: !2956)
!2974 = !DILocation(line: 146, column: 13, scope: !2956)
!2975 = !DILocation(line: 146, column: 28, scope: !2956)
!2976 = !DILocation(line: 146, column: 32, scope: !2956)
!2977 = !DILocation(line: 146, column: 31, scope: !2956)
!2978 = !DILocation(line: 149, column: 6, scope: !2979)
!2979 = distinct !DILexicalBlock(scope: !2956, file: !3, line: 148, column: 3)
!2980 = !DILocation(line: 149, column: 12, scope: !2979)
!2981 = distinct !{!2981, !2970, !2982}
!2982 = !DILocation(line: 150, column: 3, scope: !2956)
!2983 = !DILocation(line: 152, column: 7, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2956, file: !3, line: 152, column: 7)
!2985 = !DILocation(line: 152, column: 11, scope: !2984)
!2986 = !DILocation(line: 152, column: 16, scope: !2984)
!2987 = !DILocation(line: 152, column: 7, scope: !2956)
!2988 = !DILocalVariable(name: "v1", scope: !2989, file: !3, line: 153, type: !2524)
!2989 = distinct !DILexicalBlock(scope: !2984, file: !3, line: 152, column: 29)
!2990 = !DILocation(line: 153, column: 11, scope: !2989)
!2991 = !DILocation(line: 153, column: 16, scope: !2989)
!2992 = !DILocation(line: 153, column: 20, scope: !2989)
!2993 = !DILocalVariable(name: "v2", scope: !2989, file: !3, line: 154, type: !2524)
!2994 = !DILocation(line: 154, column: 11, scope: !2989)
!2995 = !DILocation(line: 154, column: 16, scope: !2989)
!2996 = !DILocation(line: 154, column: 20, scope: !2989)
!2997 = !DILocalVariable(name: "vtot", scope: !2989, file: !3, line: 155, type: !6)
!2998 = !DILocation(line: 155, column: 8, scope: !2989)
!2999 = !DILocation(line: 155, column: 15, scope: !2989)
!3000 = !DILocation(line: 155, column: 19, scope: !2989)
!3001 = !DILocation(line: 157, column: 11, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2989, file: !3, line: 157, column: 4)
!3003 = !DILocation(line: 157, column: 9, scope: !3002)
!3004 = !DILocation(line: 157, column: 16, scope: !3005)
!3005 = distinct !DILexicalBlock(scope: !3002, file: !3, line: 157, column: 4)
!3006 = !DILocation(line: 157, column: 20, scope: !3005)
!3007 = !DILocation(line: 157, column: 18, scope: !3005)
!3008 = !DILocation(line: 157, column: 4, scope: !3002)
!3009 = !DILocation(line: 158, column: 26, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !3011, file: !3, line: 158, column: 9)
!3011 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 157, column: 43)
!3012 = !DILocation(line: 158, column: 30, scope: !3010)
!3013 = !DILocation(line: 158, column: 34, scope: !3010)
!3014 = !DILocation(line: 158, column: 38, scope: !3010)
!3015 = !DILocation(line: 158, column: 9, scope: !3010)
!3016 = !DILocation(line: 158, column: 44, scope: !3010)
!3017 = !DILocation(line: 158, column: 42, scope: !3010)
!3018 = !DILocation(line: 158, column: 9, scope: !3011)
!3019 = !DILocation(line: 159, column: 6, scope: !3010)
!3020 = !DILocation(line: 161, column: 4, scope: !3011)
!3021 = !DILocation(line: 157, column: 27, scope: !3005)
!3022 = !DILocation(line: 157, column: 33, scope: !3005)
!3023 = !DILocation(line: 157, column: 39, scope: !3005)
!3024 = !DILocation(line: 157, column: 4, scope: !3005)
!3025 = distinct !{!3025, !3008, !3026}
!3026 = !DILocation(line: 161, column: 4, scope: !3002)
!3027 = !DILocation(line: 162, column: 3, scope: !2989)
!3028 = !DILocation(line: 165, column: 7, scope: !3029)
!3029 = distinct !DILexicalBlock(scope: !2956, file: !3, line: 165, column: 7)
!3030 = !DILocation(line: 165, column: 11, scope: !3029)
!3031 = !DILocation(line: 165, column: 16, scope: !3029)
!3032 = !DILocation(line: 165, column: 7, scope: !2956)
!3033 = !DILocalVariable(name: "e1", scope: !3034, file: !3, line: 166, type: !3035)
!3034 = distinct !DILexicalBlock(scope: !3029, file: !3, line: 165, column: 29)
!3035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3036, size: 64)
!3036 = !DIDerivedType(tag: DW_TAG_typedef, name: "MEdge", file: !9, line: 52, baseType: !994)
!3037 = !DILocation(line: 166, column: 11, scope: !3034)
!3038 = !DILocation(line: 166, column: 16, scope: !3034)
!3039 = !DILocation(line: 166, column: 20, scope: !3034)
!3040 = !DILocalVariable(name: "e2", scope: !3034, file: !3, line: 167, type: !3035)
!3041 = !DILocation(line: 167, column: 11, scope: !3034)
!3042 = !DILocation(line: 167, column: 16, scope: !3034)
!3043 = !DILocation(line: 167, column: 20, scope: !3034)
!3044 = !DILocalVariable(name: "etot", scope: !3034, file: !3, line: 168, type: !6)
!3045 = !DILocation(line: 168, column: 8, scope: !3034)
!3046 = !DILocation(line: 168, column: 15, scope: !3034)
!3047 = !DILocation(line: 168, column: 19, scope: !3034)
!3048 = !DILocalVariable(name: "eh", scope: !3034, file: !3, line: 169, type: !3049)
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3050, size: 64)
!3050 = !DIDerivedType(tag: DW_TAG_typedef, name: "EdgeHash", file: !2736, line: 35, baseType: !3051)
!3051 = !DICompositeType(tag: DW_TAG_structure_type, name: "EdgeHash", file: !2736, line: 34, flags: DIFlagFwdDecl)
!3052 = !DILocation(line: 169, column: 14, scope: !3034)
!3053 = !DILocation(line: 169, column: 49, scope: !3034)
!3054 = !DILocation(line: 169, column: 19, scope: !3034)
!3055 = !DILocation(line: 171, column: 11, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !3034, file: !3, line: 171, column: 4)
!3057 = !DILocation(line: 171, column: 9, scope: !3056)
!3058 = !DILocation(line: 171, column: 16, scope: !3059)
!3059 = distinct !DILexicalBlock(scope: !3056, file: !3, line: 171, column: 4)
!3060 = !DILocation(line: 171, column: 20, scope: !3059)
!3061 = !DILocation(line: 171, column: 18, scope: !3059)
!3062 = !DILocation(line: 171, column: 4, scope: !3056)
!3063 = !DILocation(line: 172, column: 25, scope: !3064)
!3064 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 171, column: 37)
!3065 = !DILocation(line: 172, column: 29, scope: !3064)
!3066 = !DILocation(line: 172, column: 33, scope: !3064)
!3067 = !DILocation(line: 172, column: 37, scope: !3064)
!3068 = !DILocation(line: 172, column: 41, scope: !3064)
!3069 = !DILocation(line: 172, column: 45, scope: !3064)
!3070 = !DILocation(line: 172, column: 5, scope: !3064)
!3071 = !DILocation(line: 173, column: 4, scope: !3064)
!3072 = !DILocation(line: 171, column: 27, scope: !3059)
!3073 = !DILocation(line: 171, column: 33, scope: !3059)
!3074 = !DILocation(line: 171, column: 4, scope: !3059)
!3075 = distinct !{!3075, !3062, !3076}
!3076 = !DILocation(line: 173, column: 4, scope: !3056)
!3077 = !DILocation(line: 175, column: 11, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3034, file: !3, line: 175, column: 4)
!3079 = !DILocation(line: 175, column: 9, scope: !3078)
!3080 = !DILocation(line: 175, column: 16, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3078, file: !3, line: 175, column: 4)
!3082 = !DILocation(line: 175, column: 20, scope: !3081)
!3083 = !DILocation(line: 175, column: 18, scope: !3081)
!3084 = !DILocation(line: 175, column: 4, scope: !3078)
!3085 = !DILocation(line: 176, column: 30, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 176, column: 9)
!3087 = distinct !DILexicalBlock(scope: !3081, file: !3, line: 175, column: 37)
!3088 = !DILocation(line: 176, column: 34, scope: !3086)
!3089 = !DILocation(line: 176, column: 38, scope: !3086)
!3090 = !DILocation(line: 176, column: 42, scope: !3086)
!3091 = !DILocation(line: 176, column: 46, scope: !3086)
!3092 = !DILocation(line: 176, column: 10, scope: !3086)
!3093 = !DILocation(line: 176, column: 9, scope: !3087)
!3094 = !DILocation(line: 177, column: 6, scope: !3086)
!3095 = !DILocation(line: 178, column: 4, scope: !3087)
!3096 = !DILocation(line: 175, column: 27, scope: !3081)
!3097 = !DILocation(line: 175, column: 33, scope: !3081)
!3098 = !DILocation(line: 175, column: 4, scope: !3081)
!3099 = distinct !{!3099, !3084, !3100}
!3100 = !DILocation(line: 178, column: 4, scope: !3078)
!3101 = !DILocation(line: 179, column: 22, scope: !3034)
!3102 = !DILocation(line: 179, column: 4, scope: !3034)
!3103 = !DILocation(line: 180, column: 3, scope: !3034)
!3104 = !DILocation(line: 182, column: 7, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !2956, file: !3, line: 182, column: 7)
!3106 = !DILocation(line: 182, column: 11, scope: !3105)
!3107 = !DILocation(line: 182, column: 16, scope: !3105)
!3108 = !DILocation(line: 182, column: 7, scope: !2956)
!3109 = !DILocalVariable(name: "p1", scope: !3110, file: !3, line: 183, type: !2721)
!3110 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 182, column: 29)
!3111 = !DILocation(line: 183, column: 11, scope: !3110)
!3112 = !DILocation(line: 183, column: 16, scope: !3110)
!3113 = !DILocation(line: 183, column: 20, scope: !3110)
!3114 = !DILocalVariable(name: "p2", scope: !3110, file: !3, line: 184, type: !2721)
!3115 = !DILocation(line: 184, column: 11, scope: !3110)
!3116 = !DILocation(line: 184, column: 16, scope: !3110)
!3117 = !DILocation(line: 184, column: 20, scope: !3110)
!3118 = !DILocalVariable(name: "ptot", scope: !3110, file: !3, line: 185, type: !6)
!3119 = !DILocation(line: 185, column: 8, scope: !3110)
!3120 = !DILocation(line: 185, column: 15, scope: !3110)
!3121 = !DILocation(line: 185, column: 19, scope: !3110)
!3122 = !DILocation(line: 187, column: 11, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3110, file: !3, line: 187, column: 4)
!3124 = !DILocation(line: 187, column: 9, scope: !3123)
!3125 = !DILocation(line: 187, column: 16, scope: !3126)
!3126 = distinct !DILexicalBlock(scope: !3123, file: !3, line: 187, column: 4)
!3127 = !DILocation(line: 187, column: 20, scope: !3126)
!3128 = !DILocation(line: 187, column: 18, scope: !3126)
!3129 = !DILocation(line: 187, column: 4, scope: !3123)
!3130 = !DILocalVariable(name: "lp1", scope: !3131, file: !3, line: 188, type: !3132)
!3131 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 187, column: 43)
!3132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3133, size: 64)
!3133 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoop", file: !9, line: 91, baseType: !1023)
!3134 = !DILocation(line: 188, column: 12, scope: !3131)
!3135 = !DILocalVariable(name: "lp2", scope: !3131, file: !3, line: 188, type: !3132)
!3136 = !DILocation(line: 188, column: 18, scope: !3131)
!3137 = !DILocalVariable(name: "k", scope: !3131, file: !3, line: 189, type: !6)
!3138 = !DILocation(line: 189, column: 9, scope: !3131)
!3139 = !DILocation(line: 191, column: 9, scope: !3140)
!3140 = distinct !DILexicalBlock(scope: !3131, file: !3, line: 191, column: 9)
!3141 = !DILocation(line: 191, column: 13, scope: !3140)
!3142 = !DILocation(line: 191, column: 24, scope: !3140)
!3143 = !DILocation(line: 191, column: 28, scope: !3140)
!3144 = !DILocation(line: 191, column: 21, scope: !3140)
!3145 = !DILocation(line: 191, column: 9, scope: !3131)
!3146 = !DILocation(line: 192, column: 6, scope: !3140)
!3147 = !DILocation(line: 194, column: 11, scope: !3131)
!3148 = !DILocation(line: 194, column: 15, scope: !3131)
!3149 = !DILocation(line: 194, column: 23, scope: !3131)
!3150 = !DILocation(line: 194, column: 27, scope: !3131)
!3151 = !DILocation(line: 194, column: 21, scope: !3131)
!3152 = !DILocation(line: 194, column: 9, scope: !3131)
!3153 = !DILocation(line: 195, column: 11, scope: !3131)
!3154 = !DILocation(line: 195, column: 15, scope: !3131)
!3155 = !DILocation(line: 195, column: 23, scope: !3131)
!3156 = !DILocation(line: 195, column: 27, scope: !3131)
!3157 = !DILocation(line: 195, column: 21, scope: !3131)
!3158 = !DILocation(line: 195, column: 9, scope: !3131)
!3159 = !DILocation(line: 197, column: 12, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3131, file: !3, line: 197, column: 5)
!3161 = !DILocation(line: 197, column: 10, scope: !3160)
!3162 = !DILocation(line: 197, column: 17, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 197, column: 5)
!3164 = !DILocation(line: 197, column: 21, scope: !3163)
!3165 = !DILocation(line: 197, column: 25, scope: !3163)
!3166 = !DILocation(line: 197, column: 19, scope: !3163)
!3167 = !DILocation(line: 197, column: 5, scope: !3160)
!3168 = !DILocation(line: 198, column: 10, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3170, file: !3, line: 198, column: 10)
!3170 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 197, column: 53)
!3171 = !DILocation(line: 198, column: 15, scope: !3169)
!3172 = !DILocation(line: 198, column: 20, scope: !3169)
!3173 = !DILocation(line: 198, column: 25, scope: !3169)
!3174 = !DILocation(line: 198, column: 17, scope: !3169)
!3175 = !DILocation(line: 198, column: 10, scope: !3170)
!3176 = !DILocation(line: 199, column: 7, scope: !3169)
!3177 = !DILocation(line: 200, column: 5, scope: !3170)
!3178 = !DILocation(line: 197, column: 35, scope: !3163)
!3179 = !DILocation(line: 197, column: 42, scope: !3163)
!3180 = !DILocation(line: 197, column: 49, scope: !3163)
!3181 = !DILocation(line: 197, column: 5, scope: !3163)
!3182 = distinct !{!3182, !3167, !3183}
!3183 = !DILocation(line: 200, column: 5, scope: !3160)
!3184 = !DILocation(line: 201, column: 4, scope: !3131)
!3185 = !DILocation(line: 187, column: 27, scope: !3126)
!3186 = !DILocation(line: 187, column: 33, scope: !3126)
!3187 = !DILocation(line: 187, column: 39, scope: !3126)
!3188 = !DILocation(line: 187, column: 4, scope: !3126)
!3189 = distinct !{!3189, !3129, !3190}
!3190 = !DILocation(line: 201, column: 4, scope: !3123)
!3191 = !DILocation(line: 202, column: 3, scope: !3110)
!3192 = !DILocation(line: 203, column: 7, scope: !3193)
!3193 = distinct !DILexicalBlock(scope: !2956, file: !3, line: 203, column: 7)
!3194 = !DILocation(line: 203, column: 11, scope: !3193)
!3195 = !DILocation(line: 203, column: 16, scope: !3193)
!3196 = !DILocation(line: 203, column: 7, scope: !2956)
!3197 = !DILocalVariable(name: "lp1", scope: !3198, file: !3, line: 204, type: !3132)
!3198 = distinct !DILexicalBlock(scope: !3193, file: !3, line: 203, column: 29)
!3199 = !DILocation(line: 204, column: 11, scope: !3198)
!3200 = !DILocation(line: 204, column: 17, scope: !3198)
!3201 = !DILocation(line: 204, column: 21, scope: !3198)
!3202 = !DILocalVariable(name: "lp2", scope: !3198, file: !3, line: 205, type: !3132)
!3203 = !DILocation(line: 205, column: 11, scope: !3198)
!3204 = !DILocation(line: 205, column: 17, scope: !3198)
!3205 = !DILocation(line: 205, column: 21, scope: !3198)
!3206 = !DILocalVariable(name: "ltot", scope: !3198, file: !3, line: 206, type: !6)
!3207 = !DILocation(line: 206, column: 8, scope: !3198)
!3208 = !DILocation(line: 206, column: 15, scope: !3198)
!3209 = !DILocation(line: 206, column: 19, scope: !3198)
!3210 = !DILocation(line: 208, column: 11, scope: !3211)
!3211 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 208, column: 4)
!3212 = !DILocation(line: 208, column: 9, scope: !3211)
!3213 = !DILocation(line: 208, column: 16, scope: !3214)
!3214 = distinct !DILexicalBlock(scope: !3211, file: !3, line: 208, column: 4)
!3215 = !DILocation(line: 208, column: 20, scope: !3214)
!3216 = !DILocation(line: 208, column: 18, scope: !3214)
!3217 = !DILocation(line: 208, column: 4, scope: !3211)
!3218 = !DILocation(line: 209, column: 9, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3220, file: !3, line: 209, column: 9)
!3220 = distinct !DILexicalBlock(scope: !3214, file: !3, line: 208, column: 45)
!3221 = !DILocation(line: 209, column: 14, scope: !3219)
!3222 = !DILocation(line: 209, column: 19, scope: !3219)
!3223 = !DILocation(line: 209, column: 24, scope: !3219)
!3224 = !DILocation(line: 209, column: 16, scope: !3219)
!3225 = !DILocation(line: 209, column: 9, scope: !3220)
!3226 = !DILocation(line: 210, column: 6, scope: !3219)
!3227 = !DILocation(line: 211, column: 4, scope: !3220)
!3228 = !DILocation(line: 208, column: 27, scope: !3214)
!3229 = !DILocation(line: 208, column: 34, scope: !3214)
!3230 = !DILocation(line: 208, column: 41, scope: !3214)
!3231 = !DILocation(line: 208, column: 4, scope: !3214)
!3232 = distinct !{!3232, !3217, !3233}
!3233 = !DILocation(line: 211, column: 4, scope: !3211)
!3234 = !DILocation(line: 212, column: 3, scope: !3198)
!3235 = !DILocation(line: 213, column: 7, scope: !3236)
!3236 = distinct !DILexicalBlock(scope: !2956, file: !3, line: 213, column: 7)
!3237 = !DILocation(line: 213, column: 11, scope: !3236)
!3238 = !DILocation(line: 213, column: 16, scope: !3236)
!3239 = !DILocation(line: 213, column: 7, scope: !2956)
!3240 = !DILocalVariable(name: "lp1", scope: !3241, file: !3, line: 214, type: !3242)
!3241 = distinct !DILexicalBlock(scope: !3236, file: !3, line: 213, column: 31)
!3242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3243, size: 64)
!3243 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoopUV", file: !9, line: 112, baseType: !2267)
!3244 = !DILocation(line: 214, column: 13, scope: !3241)
!3245 = !DILocation(line: 214, column: 19, scope: !3241)
!3246 = !DILocation(line: 214, column: 23, scope: !3241)
!3247 = !DILocalVariable(name: "lp2", scope: !3241, file: !3, line: 215, type: !3242)
!3248 = !DILocation(line: 215, column: 13, scope: !3241)
!3249 = !DILocation(line: 215, column: 19, scope: !3241)
!3250 = !DILocation(line: 215, column: 23, scope: !3241)
!3251 = !DILocalVariable(name: "ltot", scope: !3241, file: !3, line: 216, type: !6)
!3252 = !DILocation(line: 216, column: 8, scope: !3241)
!3253 = !DILocation(line: 216, column: 15, scope: !3241)
!3254 = !DILocation(line: 216, column: 19, scope: !3241)
!3255 = !DILocation(line: 218, column: 11, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3241, file: !3, line: 218, column: 4)
!3257 = !DILocation(line: 218, column: 9, scope: !3256)
!3258 = !DILocation(line: 218, column: 16, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3256, file: !3, line: 218, column: 4)
!3260 = !DILocation(line: 218, column: 20, scope: !3259)
!3261 = !DILocation(line: 218, column: 18, scope: !3259)
!3262 = !DILocation(line: 218, column: 4, scope: !3256)
!3263 = !DILocation(line: 219, column: 26, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 219, column: 9)
!3265 = distinct !DILexicalBlock(scope: !3259, file: !3, line: 218, column: 45)
!3266 = !DILocation(line: 219, column: 31, scope: !3264)
!3267 = !DILocation(line: 219, column: 35, scope: !3264)
!3268 = !DILocation(line: 219, column: 40, scope: !3264)
!3269 = !DILocation(line: 219, column: 9, scope: !3264)
!3270 = !DILocation(line: 219, column: 46, scope: !3264)
!3271 = !DILocation(line: 219, column: 44, scope: !3264)
!3272 = !DILocation(line: 219, column: 9, scope: !3265)
!3273 = !DILocation(line: 220, column: 6, scope: !3264)
!3274 = !DILocation(line: 221, column: 4, scope: !3265)
!3275 = !DILocation(line: 218, column: 27, scope: !3259)
!3276 = !DILocation(line: 218, column: 34, scope: !3259)
!3277 = !DILocation(line: 218, column: 41, scope: !3259)
!3278 = !DILocation(line: 218, column: 4, scope: !3259)
!3279 = distinct !{!3279, !3262, !3280}
!3280 = !DILocation(line: 221, column: 4, scope: !3256)
!3281 = !DILocation(line: 222, column: 3, scope: !3241)
!3282 = !DILocation(line: 224, column: 7, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !2956, file: !3, line: 224, column: 7)
!3284 = !DILocation(line: 224, column: 11, scope: !3283)
!3285 = !DILocation(line: 224, column: 16, scope: !3283)
!3286 = !DILocation(line: 224, column: 7, scope: !2956)
!3287 = !DILocalVariable(name: "lp1", scope: !3288, file: !3, line: 225, type: !3289)
!3288 = distinct !DILexicalBlock(scope: !3283, file: !3, line: 224, column: 32)
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3290, size: 64)
!3290 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoopCol", file: !9, line: 131, baseType: !2273)
!3291 = !DILocation(line: 225, column: 14, scope: !3288)
!3292 = !DILocation(line: 225, column: 20, scope: !3288)
!3293 = !DILocation(line: 225, column: 24, scope: !3288)
!3294 = !DILocalVariable(name: "lp2", scope: !3288, file: !3, line: 226, type: !3289)
!3295 = !DILocation(line: 226, column: 14, scope: !3288)
!3296 = !DILocation(line: 226, column: 20, scope: !3288)
!3297 = !DILocation(line: 226, column: 24, scope: !3288)
!3298 = !DILocalVariable(name: "ltot", scope: !3288, file: !3, line: 227, type: !6)
!3299 = !DILocation(line: 227, column: 8, scope: !3288)
!3300 = !DILocation(line: 227, column: 15, scope: !3288)
!3301 = !DILocation(line: 227, column: 19, scope: !3288)
!3302 = !DILocation(line: 229, column: 11, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3288, file: !3, line: 229, column: 4)
!3304 = !DILocation(line: 229, column: 9, scope: !3303)
!3305 = !DILocation(line: 229, column: 16, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3303, file: !3, line: 229, column: 4)
!3307 = !DILocation(line: 229, column: 20, scope: !3306)
!3308 = !DILocation(line: 229, column: 18, scope: !3306)
!3309 = !DILocation(line: 229, column: 4, scope: !3303)
!3310 = !DILocation(line: 230, column: 9, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3312, file: !3, line: 230, column: 9)
!3312 = distinct !DILexicalBlock(scope: !3306, file: !3, line: 229, column: 45)
!3313 = !DILocation(line: 230, column: 32, scope: !3311)
!3314 = !DILocation(line: 230, column: 30, scope: !3311)
!3315 = !DILocation(line: 230, column: 39, scope: !3311)
!3316 = !DILocation(line: 231, column: 9, scope: !3311)
!3317 = !DILocation(line: 231, column: 32, scope: !3311)
!3318 = !DILocation(line: 231, column: 30, scope: !3311)
!3319 = !DILocation(line: 231, column: 39, scope: !3311)
!3320 = !DILocation(line: 232, column: 9, scope: !3311)
!3321 = !DILocation(line: 232, column: 32, scope: !3311)
!3322 = !DILocation(line: 232, column: 30, scope: !3311)
!3323 = !DILocation(line: 232, column: 39, scope: !3311)
!3324 = !DILocation(line: 233, column: 9, scope: !3311)
!3325 = !DILocation(line: 233, column: 32, scope: !3311)
!3326 = !DILocation(line: 233, column: 30, scope: !3311)
!3327 = !DILocation(line: 230, column: 9, scope: !3312)
!3328 = !DILocation(line: 235, column: 6, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3311, file: !3, line: 234, column: 5)
!3330 = !DILocation(line: 237, column: 4, scope: !3312)
!3331 = !DILocation(line: 229, column: 27, scope: !3306)
!3332 = !DILocation(line: 229, column: 34, scope: !3306)
!3333 = !DILocation(line: 229, column: 41, scope: !3306)
!3334 = !DILocation(line: 229, column: 4, scope: !3306)
!3335 = distinct !{!3335, !3309, !3336}
!3336 = !DILocation(line: 237, column: 4, scope: !3303)
!3337 = !DILocation(line: 238, column: 3, scope: !3288)
!3338 = !DILocation(line: 240, column: 7, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !2956, file: !3, line: 240, column: 7)
!3340 = !DILocation(line: 240, column: 11, scope: !3339)
!3341 = !DILocation(line: 240, column: 16, scope: !3339)
!3342 = !DILocation(line: 240, column: 7, scope: !2956)
!3343 = !DILocalVariable(name: "dv1", scope: !3344, file: !3, line: 241, type: !3345)
!3344 = distinct !DILexicalBlock(scope: !3339, file: !3, line: 240, column: 35)
!3345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3346, size: 64)
!3346 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDeformVert", file: !9, line: 63, baseType: !1372)
!3347 = !DILocation(line: 241, column: 17, scope: !3344)
!3348 = !DILocation(line: 241, column: 23, scope: !3344)
!3349 = !DILocation(line: 241, column: 27, scope: !3344)
!3350 = !DILocalVariable(name: "dv2", scope: !3344, file: !3, line: 242, type: !3345)
!3351 = !DILocation(line: 242, column: 17, scope: !3344)
!3352 = !DILocation(line: 242, column: 23, scope: !3344)
!3353 = !DILocation(line: 242, column: 27, scope: !3344)
!3354 = !DILocalVariable(name: "dvtot", scope: !3344, file: !3, line: 243, type: !6)
!3355 = !DILocation(line: 243, column: 8, scope: !3344)
!3356 = !DILocation(line: 243, column: 16, scope: !3344)
!3357 = !DILocation(line: 243, column: 20, scope: !3344)
!3358 = !DILocation(line: 245, column: 11, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3344, file: !3, line: 245, column: 4)
!3360 = !DILocation(line: 245, column: 9, scope: !3359)
!3361 = !DILocation(line: 245, column: 16, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3359, file: !3, line: 245, column: 4)
!3363 = !DILocation(line: 245, column: 20, scope: !3362)
!3364 = !DILocation(line: 245, column: 18, scope: !3362)
!3365 = !DILocation(line: 245, column: 4, scope: !3359)
!3366 = !DILocalVariable(name: "k", scope: !3367, file: !3, line: 246, type: !6)
!3367 = distinct !DILexicalBlock(scope: !3362, file: !3, line: 245, column: 46)
!3368 = !DILocation(line: 246, column: 9, scope: !3367)
!3369 = !DILocalVariable(name: "dw1", scope: !3367, file: !3, line: 247, type: !3370)
!3370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3371, size: 64)
!3371 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDeformWeight", file: !9, line: 57, baseType: !1376)
!3372 = !DILocation(line: 247, column: 20, scope: !3367)
!3373 = !DILocation(line: 247, column: 26, scope: !3367)
!3374 = !DILocation(line: 247, column: 31, scope: !3367)
!3375 = !DILocalVariable(name: "dw2", scope: !3367, file: !3, line: 247, type: !3370)
!3376 = !DILocation(line: 247, column: 36, scope: !3367)
!3377 = !DILocation(line: 247, column: 42, scope: !3367)
!3378 = !DILocation(line: 247, column: 47, scope: !3367)
!3379 = !DILocation(line: 249, column: 9, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3367, file: !3, line: 249, column: 9)
!3381 = !DILocation(line: 249, column: 14, scope: !3380)
!3382 = !DILocation(line: 249, column: 27, scope: !3380)
!3383 = !DILocation(line: 249, column: 32, scope: !3380)
!3384 = !DILocation(line: 249, column: 24, scope: !3380)
!3385 = !DILocation(line: 249, column: 9, scope: !3367)
!3386 = !DILocation(line: 250, column: 6, scope: !3380)
!3387 = !DILocation(line: 252, column: 12, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3367, file: !3, line: 252, column: 5)
!3389 = !DILocation(line: 252, column: 10, scope: !3388)
!3390 = !DILocation(line: 252, column: 17, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3388, file: !3, line: 252, column: 5)
!3392 = !DILocation(line: 252, column: 21, scope: !3391)
!3393 = !DILocation(line: 252, column: 26, scope: !3391)
!3394 = !DILocation(line: 252, column: 19, scope: !3391)
!3395 = !DILocation(line: 252, column: 5, scope: !3388)
!3396 = !DILocation(line: 253, column: 10, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3398, file: !3, line: 253, column: 10)
!3398 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 252, column: 56)
!3399 = !DILocation(line: 253, column: 15, scope: !3397)
!3400 = !DILocation(line: 253, column: 25, scope: !3397)
!3401 = !DILocation(line: 253, column: 30, scope: !3397)
!3402 = !DILocation(line: 253, column: 22, scope: !3397)
!3403 = !DILocation(line: 253, column: 10, scope: !3398)
!3404 = !DILocation(line: 254, column: 7, scope: !3397)
!3405 = !DILocation(line: 255, column: 16, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3398, file: !3, line: 255, column: 10)
!3407 = !DILocation(line: 255, column: 21, scope: !3406)
!3408 = !DILocation(line: 255, column: 30, scope: !3406)
!3409 = !DILocation(line: 255, column: 35, scope: !3406)
!3410 = !DILocation(line: 255, column: 28, scope: !3406)
!3411 = !DILocation(line: 255, column: 10, scope: !3406)
!3412 = !DILocation(line: 255, column: 45, scope: !3406)
!3413 = !DILocation(line: 255, column: 43, scope: !3406)
!3414 = !DILocation(line: 255, column: 10, scope: !3398)
!3415 = !DILocation(line: 256, column: 7, scope: !3406)
!3416 = !DILocation(line: 257, column: 5, scope: !3398)
!3417 = !DILocation(line: 252, column: 38, scope: !3391)
!3418 = !DILocation(line: 252, column: 45, scope: !3391)
!3419 = !DILocation(line: 252, column: 52, scope: !3391)
!3420 = !DILocation(line: 252, column: 5, scope: !3391)
!3421 = distinct !{!3421, !3395, !3422}
!3422 = !DILocation(line: 257, column: 5, scope: !3388)
!3423 = !DILocation(line: 258, column: 4, scope: !3367)
!3424 = !DILocation(line: 245, column: 28, scope: !3362)
!3425 = !DILocation(line: 245, column: 35, scope: !3362)
!3426 = !DILocation(line: 245, column: 42, scope: !3362)
!3427 = !DILocation(line: 245, column: 4, scope: !3362)
!3428 = distinct !{!3428, !3365, !3429}
!3429 = !DILocation(line: 258, column: 4, scope: !3359)
!3430 = !DILocation(line: 259, column: 3, scope: !3344)
!3431 = !DILocation(line: 260, column: 2, scope: !2956)
!3432 = !DILocation(line: 139, column: 24, scope: !2951)
!3433 = !DILocation(line: 139, column: 2, scope: !2951)
!3434 = distinct !{!3434, !2954, !3435}
!3435 = !DILocation(line: 260, column: 2, scope: !2948)
!3436 = !DILocation(line: 262, column: 2, scope: !2857)
!3437 = !DILocation(line: 263, column: 1, scope: !2857)
!3438 = distinct !DISubprogram(name: "cmpcode_to_str", scope: !3, file: !3, line: 79, type: !3439, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!3439 = !DISubroutineType(types: !3440)
!3440 = !{!2415, !6}
!3441 = !DILocalVariable(name: "code", arg: 1, scope: !3438, file: !3, line: 79, type: !6)
!3442 = !DILocation(line: 79, column: 39, scope: !3438)
!3443 = !DILocation(line: 81, column: 10, scope: !3438)
!3444 = !DILocation(line: 81, column: 2, scope: !3438)
!3445 = !DILocation(line: 83, column: 4, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3438, file: !3, line: 81, column: 16)
!3447 = !DILocation(line: 85, column: 4, scope: !3446)
!3448 = !DILocation(line: 87, column: 4, scope: !3446)
!3449 = !DILocation(line: 89, column: 4, scope: !3446)
!3450 = !DILocation(line: 91, column: 4, scope: !3446)
!3451 = !DILocation(line: 93, column: 4, scope: !3446)
!3452 = !DILocation(line: 95, column: 4, scope: !3446)
!3453 = !DILocation(line: 97, column: 4, scope: !3446)
!3454 = !DILocation(line: 99, column: 4, scope: !3446)
!3455 = !DILocation(line: 101, column: 4, scope: !3446)
!3456 = !DILocation(line: 103, column: 4, scope: !3446)
!3457 = !DILocation(line: 105, column: 4, scope: !3446)
!3458 = !DILocation(line: 107, column: 1, scope: !3438)
!3459 = distinct !DISubprogram(name: "BKE_mesh_ensure_skin_customdata", scope: !3, file: !3, line: 341, type: !3460, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!3460 = !DISubroutineType(types: !3461)
!3461 = !{null, !441}
!3462 = !DILocalVariable(name: "me", arg: 1, scope: !3459, file: !3, line: 341, type: !441)
!3463 = !DILocation(line: 341, column: 44, scope: !3459)
!3464 = !DILocalVariable(name: "bm", scope: !3459, file: !3, line: 343, type: !2450)
!3465 = !DILocation(line: 343, column: 9, scope: !3459)
!3466 = !DILocation(line: 343, column: 14, scope: !3459)
!3467 = !DILocation(line: 343, column: 18, scope: !3459)
!3468 = !DILocation(line: 343, column: 32, scope: !3459)
!3469 = !DILocation(line: 343, column: 36, scope: !3459)
!3470 = !DILocation(line: 343, column: 49, scope: !3459)
!3471 = !DILocalVariable(name: "vs", scope: !3459, file: !3, line: 344, type: !3472)
!3472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3473, size: 64)
!3473 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVertSkin", file: !9, line: 281, baseType: !3474)
!3474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVertSkin", file: !9, line: 275, size: 128, elements: !3475)
!3475 = !{!3476, !3477}
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !3474, file: !9, line: 277, baseType: !565, size: 96)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3474, file: !9, line: 280, baseType: !6, size: 32, offset: 96)
!3478 = !DILocation(line: 344, column: 13, scope: !3459)
!3479 = !DILocation(line: 346, column: 6, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3459, file: !3, line: 346, column: 6)
!3481 = !DILocation(line: 346, column: 6, scope: !3459)
!3482 = !DILocation(line: 347, column: 30, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3484, file: !3, line: 347, column: 7)
!3484 = distinct !DILexicalBlock(scope: !3480, file: !3, line: 346, column: 10)
!3485 = !DILocation(line: 347, column: 34, scope: !3483)
!3486 = !DILocation(line: 347, column: 8, scope: !3483)
!3487 = !DILocation(line: 347, column: 7, scope: !3484)
!3488 = !DILocalVariable(name: "v", scope: !3489, file: !3, line: 348, type: !2332)
!3489 = distinct !DILexicalBlock(scope: !3483, file: !3, line: 347, column: 57)
!3490 = !DILocation(line: 348, column: 12, scope: !3489)
!3491 = !DILocalVariable(name: "iter", scope: !3489, file: !3, line: 349, type: !3492)
!3492 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter", file: !176, line: 186, baseType: !3493)
!3493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter", file: !176, line: 164, size: 512, elements: !3494)
!3494 = !{!3495, !3575, !3576, !3577, !3578}
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3493, file: !176, line: 179, baseType: !3496, size: 320)
!3496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3493, file: !176, line: 166, size: 320, elements: !3497)
!3497 = !{!3498, !3513, !3519, !3527, !3535, !3541, !3547, !3553, !3557, !3563, !3569}
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "elem_of_mesh", scope: !3496, file: !176, line: 167, baseType: !3499, size: 192)
!3499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__elem_of_mesh", file: !176, line: 113, size: 192, elements: !3500)
!3500 = !{!3501}
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "pooliter", scope: !3499, file: !176, line: 114, baseType: !3502, size: 192)
!3502 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool_iter", file: !3503, line: 80, baseType: !3504)
!3503 = !DIFile(filename: "blender/source/blender/blenlib/BLI_mempool.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_iter", file: !3503, line: 76, size: 192, elements: !3505)
!3505 = !{!3506, !3509, !3512}
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !3504, file: !3503, line: 77, baseType: !3507, size: 64)
!3507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3508, size: 64)
!3508 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool", file: !3503, line: 47, baseType: !55)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "curchunk", scope: !3504, file: !3503, line: 78, baseType: !3510, size: 64, offset: 64)
!3510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3511, size: 64)
!3511 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_chunk", file: !3503, line: 45, flags: DIFlagFwdDecl)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "curindex", scope: !3504, file: !3503, line: 79, baseType: !13, size: 32, offset: 128)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_vert", scope: !3496, file: !176, line: 169, baseType: !3514, size: 192)
!3514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_vert", file: !176, line: 116, size: 192, elements: !3515)
!3515 = !{!3516, !3517, !3518}
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3514, file: !176, line: 117, baseType: !2332, size: 64)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !3514, file: !176, line: 118, baseType: !2393, size: 64, offset: 64)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !3514, file: !176, line: 118, baseType: !2393, size: 64, offset: 128)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_vert", scope: !3496, file: !176, line: 170, baseType: !3520, size: 320)
!3520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_vert", file: !176, line: 120, size: 320, elements: !3521)
!3521 = !{!3522, !3523, !3524, !3525, !3526}
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3520, file: !176, line: 121, baseType: !2332, size: 64)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3520, file: !176, line: 122, baseType: !2375, size: 64, offset: 64)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3520, file: !176, line: 122, baseType: !2375, size: 64, offset: 128)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !3520, file: !176, line: 123, baseType: !2393, size: 64, offset: 192)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !3520, file: !176, line: 123, baseType: !2393, size: 64, offset: 256)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_vert", scope: !3496, file: !176, line: 171, baseType: !3528, size: 320)
!3528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_vert", file: !176, line: 125, size: 320, elements: !3529)
!3529 = !{!3530, !3531, !3532, !3533, !3534}
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3528, file: !176, line: 126, baseType: !2332, size: 64)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3528, file: !176, line: 127, baseType: !2375, size: 64, offset: 64)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3528, file: !176, line: 127, baseType: !2375, size: 64, offset: 128)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !3528, file: !176, line: 128, baseType: !2393, size: 64, offset: 192)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !3528, file: !176, line: 128, baseType: !2393, size: 64, offset: 256)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_edge", scope: !3496, file: !176, line: 172, baseType: !3536, size: 192)
!3536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_edge", file: !176, line: 130, size: 192, elements: !3537)
!3537 = !{!3538, !3539, !3540}
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3536, file: !176, line: 131, baseType: !2393, size: 64)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3536, file: !176, line: 132, baseType: !2375, size: 64, offset: 64)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3536, file: !176, line: 132, baseType: !2375, size: 64, offset: 128)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_loop", scope: !3496, file: !176, line: 173, baseType: !3542, size: 192)
!3542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_loop", file: !176, line: 134, size: 192, elements: !3543)
!3543 = !{!3544, !3545, !3546}
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !3542, file: !176, line: 135, baseType: !2375, size: 64)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3542, file: !176, line: 136, baseType: !2375, size: 64, offset: 64)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3542, file: !176, line: 136, baseType: !2375, size: 64, offset: 128)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_edge", scope: !3496, file: !176, line: 174, baseType: !3548, size: 192)
!3548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_edge", file: !176, line: 138, size: 192, elements: !3549)
!3549 = !{!3550, !3551, !3552}
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3548, file: !176, line: 139, baseType: !2393, size: 64)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3548, file: !176, line: 140, baseType: !2375, size: 64, offset: 64)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3548, file: !176, line: 140, baseType: !2375, size: 64, offset: 128)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_edge", scope: !3496, file: !176, line: 175, baseType: !3554, size: 64)
!3554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_edge", file: !176, line: 142, size: 64, elements: !3555)
!3555 = !{!3556}
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3554, file: !176, line: 143, baseType: !2393, size: 64)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_face", scope: !3496, file: !176, line: 176, baseType: !3558, size: 192)
!3558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_face", file: !176, line: 145, size: 192, elements: !3559)
!3559 = !{!3560, !3561, !3562}
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3558, file: !176, line: 146, baseType: !2397, size: 64)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3558, file: !176, line: 147, baseType: !2375, size: 64, offset: 64)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3558, file: !176, line: 147, baseType: !2375, size: 64, offset: 128)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_face", scope: !3496, file: !176, line: 177, baseType: !3564, size: 192)
!3564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_face", file: !176, line: 149, size: 192, elements: !3565)
!3565 = !{!3566, !3567, !3568}
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3564, file: !176, line: 150, baseType: !2397, size: 64)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3564, file: !176, line: 151, baseType: !2375, size: 64, offset: 64)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3564, file: !176, line: 151, baseType: !2375, size: 64, offset: 128)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_face", scope: !3496, file: !176, line: 178, baseType: !3570, size: 192)
!3570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_face", file: !176, line: 153, size: 192, elements: !3571)
!3571 = !{!3572, !3573, !3574}
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3570, file: !176, line: 154, baseType: !2397, size: 64)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3570, file: !176, line: 155, baseType: !2375, size: 64, offset: 64)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3570, file: !176, line: 155, baseType: !2375, size: 64, offset: 128)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !3493, file: !176, line: 181, baseType: !2724, size: 64, offset: 320)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !3493, file: !176, line: 182, baseType: !2728, size: 64, offset: 384)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3493, file: !176, line: 184, baseType: !6, size: 32, offset: 448)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "itype", scope: !3493, file: !176, line: 185, baseType: !20, size: 8, offset: 480)
!3579 = !DILocation(line: 349, column: 11, scope: !3489)
!3580 = !DILocation(line: 351, column: 22, scope: !3489)
!3581 = !DILocation(line: 351, column: 27, scope: !3489)
!3582 = !DILocation(line: 351, column: 31, scope: !3489)
!3583 = !DILocation(line: 351, column: 4, scope: !3489)
!3584 = !DILocation(line: 354, column: 4, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3489, file: !3, line: 354, column: 4)
!3586 = !DILocation(line: 354, column: 4, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3585, file: !3, line: 354, column: 4)
!3588 = !DILocation(line: 355, column: 32, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3587, file: !3, line: 354, column: 50)
!3590 = !DILocation(line: 355, column: 36, scope: !3589)
!3591 = !DILocation(line: 355, column: 43, scope: !3589)
!3592 = !DILocation(line: 355, column: 46, scope: !3589)
!3593 = !DILocation(line: 355, column: 51, scope: !3589)
!3594 = !DILocation(line: 355, column: 10, scope: !3589)
!3595 = !DILocation(line: 355, column: 8, scope: !3589)
!3596 = !DILocation(line: 357, column: 5, scope: !3589)
!3597 = !DILocation(line: 357, column: 9, scope: !3589)
!3598 = !DILocation(line: 357, column: 14, scope: !3589)
!3599 = !DILocation(line: 358, column: 5, scope: !3589)
!3600 = distinct !{!3600, !3584, !3601}
!3601 = !DILocation(line: 359, column: 4, scope: !3585)
!3602 = !DILocation(line: 360, column: 3, scope: !3489)
!3603 = !DILocation(line: 361, column: 2, scope: !3484)
!3604 = !DILocation(line: 363, column: 30, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3606, file: !3, line: 363, column: 7)
!3606 = distinct !DILexicalBlock(scope: !3480, file: !3, line: 362, column: 7)
!3607 = !DILocation(line: 363, column: 34, scope: !3605)
!3608 = !DILocation(line: 363, column: 8, scope: !3605)
!3609 = !DILocation(line: 363, column: 7, scope: !3606)
!3610 = !DILocation(line: 364, column: 31, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3605, file: !3, line: 363, column: 57)
!3612 = !DILocation(line: 364, column: 35, scope: !3611)
!3613 = !DILocation(line: 368, column: 30, scope: !3611)
!3614 = !DILocation(line: 368, column: 34, scope: !3611)
!3615 = !DILocation(line: 364, column: 9, scope: !3611)
!3616 = !DILocation(line: 364, column: 7, scope: !3611)
!3617 = !DILocation(line: 371, column: 8, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3611, file: !3, line: 371, column: 8)
!3619 = !DILocation(line: 371, column: 8, scope: !3611)
!3620 = !DILocation(line: 372, column: 5, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3618, file: !3, line: 371, column: 12)
!3622 = !DILocation(line: 372, column: 9, scope: !3621)
!3623 = !DILocation(line: 372, column: 14, scope: !3621)
!3624 = !DILocation(line: 373, column: 4, scope: !3621)
!3625 = !DILocation(line: 374, column: 3, scope: !3611)
!3626 = !DILocation(line: 376, column: 1, scope: !3459)
!3627 = distinct !DISubprogram(name: "BM_iter_new", scope: !3628, file: !3628, line: 172, type: !3629, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!3628 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3629 = !DISubroutineType(types: !3630)
!3630 = !{!45, !3631, !2450, !2416, !45}
!3631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3492, size: 64)
!3632 = !DILocalVariable(name: "iter", arg: 1, scope: !3627, file: !3628, line: 172, type: !3631)
!3633 = !DILocation(line: 172, column: 38, scope: !3627)
!3634 = !DILocalVariable(name: "bm", arg: 2, scope: !3627, file: !3628, line: 172, type: !2450)
!3635 = !DILocation(line: 172, column: 51, scope: !3627)
!3636 = !DILocalVariable(name: "itype", arg: 3, scope: !3627, file: !3628, line: 172, type: !2416)
!3637 = !DILocation(line: 172, column: 66, scope: !3627)
!3638 = !DILocalVariable(name: "data", arg: 4, scope: !3627, file: !3628, line: 172, type: !45)
!3639 = !DILocation(line: 172, column: 79, scope: !3627)
!3640 = !DILocation(line: 174, column: 6, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3627, file: !3628, line: 174, column: 6)
!3642 = !DILocation(line: 174, column: 6, scope: !3627)
!3643 = !DILocation(line: 175, column: 23, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3641, file: !3628, line: 174, column: 51)
!3645 = !DILocation(line: 175, column: 10, scope: !3644)
!3646 = !DILocation(line: 175, column: 3, scope: !3644)
!3647 = !DILocation(line: 178, column: 3, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3641, file: !3628, line: 177, column: 7)
!3649 = !DILocation(line: 180, column: 1, scope: !3627)
!3650 = distinct !DISubprogram(name: "BM_iter_step", scope: !3628, file: !3628, line: 40, type: !3651, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!3651 = !DISubroutineType(types: !3652)
!3652 = !{!45, !3631}
!3653 = !DILocalVariable(name: "iter", arg: 1, scope: !3650, file: !3628, line: 40, type: !3631)
!3654 = !DILocation(line: 40, column: 39, scope: !3650)
!3655 = !DILocation(line: 42, column: 9, scope: !3650)
!3656 = !DILocation(line: 42, column: 15, scope: !3650)
!3657 = !DILocation(line: 42, column: 20, scope: !3650)
!3658 = !DILocation(line: 42, column: 2, scope: !3650)
!3659 = distinct !DISubprogram(name: "BKE_mesh_update_customdata_pointers", scope: !3, file: !3, line: 396, type: !3660, scopeLine: 397, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!3660 = !DISubroutineType(types: !3661)
!3661 = !{null, !441, !1224}
!3662 = !DILocalVariable(name: "me", arg: 1, scope: !3659, file: !3, line: 396, type: !441)
!3663 = !DILocation(line: 396, column: 48, scope: !3659)
!3664 = !DILocalVariable(name: "do_ensure_tess_cd", arg: 2, scope: !3659, file: !3, line: 396, type: !1224)
!3665 = !DILocation(line: 396, column: 63, scope: !3659)
!3666 = !DILocation(line: 398, column: 32, scope: !3659)
!3667 = !DILocation(line: 398, column: 36, scope: !3659)
!3668 = !DILocation(line: 398, column: 2, scope: !3659)
!3669 = !DILocation(line: 400, column: 36, scope: !3659)
!3670 = !DILocation(line: 400, column: 40, scope: !3659)
!3671 = !DILocation(line: 400, column: 14, scope: !3659)
!3672 = !DILocation(line: 400, column: 2, scope: !3659)
!3673 = !DILocation(line: 400, column: 6, scope: !3659)
!3674 = !DILocation(line: 400, column: 12, scope: !3659)
!3675 = !DILocation(line: 401, column: 36, scope: !3659)
!3676 = !DILocation(line: 401, column: 40, scope: !3659)
!3677 = !DILocation(line: 401, column: 14, scope: !3659)
!3678 = !DILocation(line: 401, column: 2, scope: !3659)
!3679 = !DILocation(line: 401, column: 6, scope: !3659)
!3680 = !DILocation(line: 401, column: 12, scope: !3659)
!3681 = !DILocation(line: 403, column: 36, scope: !3659)
!3682 = !DILocation(line: 403, column: 40, scope: !3659)
!3683 = !DILocation(line: 403, column: 14, scope: !3659)
!3684 = !DILocation(line: 403, column: 2, scope: !3659)
!3685 = !DILocation(line: 403, column: 6, scope: !3659)
!3686 = !DILocation(line: 403, column: 12, scope: !3659)
!3687 = !DILocation(line: 405, column: 36, scope: !3659)
!3688 = !DILocation(line: 405, column: 40, scope: !3659)
!3689 = !DILocation(line: 405, column: 14, scope: !3659)
!3690 = !DILocation(line: 405, column: 2, scope: !3659)
!3691 = !DILocation(line: 405, column: 6, scope: !3659)
!3692 = !DILocation(line: 405, column: 12, scope: !3659)
!3693 = !DILocation(line: 406, column: 35, scope: !3659)
!3694 = !DILocation(line: 406, column: 39, scope: !3659)
!3695 = !DILocation(line: 406, column: 13, scope: !3659)
!3696 = !DILocation(line: 406, column: 2, scope: !3659)
!3697 = !DILocation(line: 406, column: 6, scope: !3659)
!3698 = !DILocation(line: 406, column: 11, scope: !3659)
!3699 = !DILocation(line: 407, column: 37, scope: !3659)
!3700 = !DILocation(line: 407, column: 41, scope: !3659)
!3701 = !DILocation(line: 407, column: 15, scope: !3659)
!3702 = !DILocation(line: 407, column: 2, scope: !3659)
!3703 = !DILocation(line: 407, column: 6, scope: !3659)
!3704 = !DILocation(line: 407, column: 13, scope: !3659)
!3705 = !DILocation(line: 409, column: 36, scope: !3659)
!3706 = !DILocation(line: 409, column: 40, scope: !3659)
!3707 = !DILocation(line: 409, column: 14, scope: !3659)
!3708 = !DILocation(line: 409, column: 2, scope: !3659)
!3709 = !DILocation(line: 409, column: 6, scope: !3659)
!3710 = !DILocation(line: 409, column: 12, scope: !3659)
!3711 = !DILocation(line: 410, column: 36, scope: !3659)
!3712 = !DILocation(line: 410, column: 40, scope: !3659)
!3713 = !DILocation(line: 410, column: 14, scope: !3659)
!3714 = !DILocation(line: 410, column: 2, scope: !3659)
!3715 = !DILocation(line: 410, column: 6, scope: !3659)
!3716 = !DILocation(line: 410, column: 12, scope: !3659)
!3717 = !DILocation(line: 412, column: 37, scope: !3659)
!3718 = !DILocation(line: 412, column: 41, scope: !3659)
!3719 = !DILocation(line: 412, column: 15, scope: !3659)
!3720 = !DILocation(line: 412, column: 2, scope: !3659)
!3721 = !DILocation(line: 412, column: 6, scope: !3659)
!3722 = !DILocation(line: 412, column: 13, scope: !3659)
!3723 = !DILocation(line: 413, column: 39, scope: !3659)
!3724 = !DILocation(line: 413, column: 43, scope: !3659)
!3725 = !DILocation(line: 413, column: 17, scope: !3659)
!3726 = !DILocation(line: 413, column: 2, scope: !3659)
!3727 = !DILocation(line: 413, column: 6, scope: !3659)
!3728 = !DILocation(line: 413, column: 15, scope: !3659)
!3729 = !DILocation(line: 414, column: 38, scope: !3659)
!3730 = !DILocation(line: 414, column: 42, scope: !3659)
!3731 = !DILocation(line: 414, column: 16, scope: !3659)
!3732 = !DILocation(line: 414, column: 2, scope: !3659)
!3733 = !DILocation(line: 414, column: 6, scope: !3659)
!3734 = !DILocation(line: 414, column: 14, scope: !3659)
!3735 = !DILocation(line: 415, column: 1, scope: !3659)
!3736 = distinct !DISubprogram(name: "mesh_update_linked_customdata", scope: !3, file: !3, line: 384, type: !3660, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!3737 = !DILocalVariable(name: "me", arg: 1, scope: !3736, file: !3, line: 384, type: !441)
!3738 = !DILocation(line: 384, column: 49, scope: !3736)
!3739 = !DILocalVariable(name: "do_ensure_tess_cd", arg: 2, scope: !3736, file: !3, line: 384, type: !1224)
!3740 = !DILocation(line: 384, column: 64, scope: !3736)
!3741 = !DILocation(line: 386, column: 6, scope: !3742)
!3742 = distinct !DILexicalBlock(scope: !3736, file: !3, line: 386, column: 6)
!3743 = !DILocation(line: 386, column: 10, scope: !3742)
!3744 = !DILocation(line: 386, column: 6, scope: !3736)
!3745 = !DILocation(line: 387, column: 41, scope: !3742)
!3746 = !DILocation(line: 387, column: 45, scope: !3742)
!3747 = !DILocation(line: 387, column: 3, scope: !3742)
!3748 = !DILocation(line: 389, column: 6, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3736, file: !3, line: 389, column: 6)
!3750 = !DILocation(line: 389, column: 6, scope: !3736)
!3751 = !DILocation(line: 390, column: 39, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3749, file: !3, line: 389, column: 25)
!3753 = !DILocation(line: 390, column: 3, scope: !3752)
!3754 = !DILocation(line: 391, column: 2, scope: !3752)
!3755 = !DILocation(line: 393, column: 41, scope: !3736)
!3756 = !DILocation(line: 393, column: 45, scope: !3736)
!3757 = !DILocation(line: 393, column: 53, scope: !3736)
!3758 = !DILocation(line: 393, column: 57, scope: !3736)
!3759 = !DILocation(line: 393, column: 65, scope: !3736)
!3760 = !DILocation(line: 393, column: 69, scope: !3736)
!3761 = !DILocation(line: 393, column: 2, scope: !3736)
!3762 = !DILocation(line: 394, column: 1, scope: !3736)
!3763 = distinct !DISubprogram(name: "BKE_mesh_unlink", scope: !3, file: !3, line: 422, type: !3460, scopeLine: 423, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!3764 = !DILocalVariable(name: "me", arg: 1, scope: !3763, file: !3, line: 422, type: !441)
!3765 = !DILocation(line: 422, column: 28, scope: !3763)
!3766 = !DILocalVariable(name: "a", scope: !3763, file: !3, line: 424, type: !6)
!3767 = !DILocation(line: 424, column: 6, scope: !3763)
!3768 = !DILocation(line: 426, column: 6, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 426, column: 6)
!3770 = !DILocation(line: 426, column: 9, scope: !3769)
!3771 = !DILocation(line: 426, column: 6, scope: !3763)
!3772 = !DILocation(line: 426, column: 18, scope: !3769)
!3773 = !DILocation(line: 428, column: 6, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 428, column: 6)
!3775 = !DILocation(line: 428, column: 10, scope: !3774)
!3776 = !DILocation(line: 428, column: 6, scope: !3763)
!3777 = !DILocation(line: 429, column: 10, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3779, file: !3, line: 429, column: 3)
!3779 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 428, column: 15)
!3780 = !DILocation(line: 429, column: 8, scope: !3778)
!3781 = !DILocation(line: 429, column: 15, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3778, file: !3, line: 429, column: 3)
!3783 = !DILocation(line: 429, column: 19, scope: !3782)
!3784 = !DILocation(line: 429, column: 23, scope: !3782)
!3785 = !DILocation(line: 429, column: 17, scope: !3782)
!3786 = !DILocation(line: 429, column: 3, scope: !3778)
!3787 = !DILocation(line: 430, column: 8, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3789, file: !3, line: 430, column: 8)
!3789 = distinct !DILexicalBlock(scope: !3782, file: !3, line: 429, column: 36)
!3790 = !DILocation(line: 430, column: 12, scope: !3788)
!3791 = !DILocation(line: 430, column: 16, scope: !3788)
!3792 = !DILocation(line: 430, column: 8, scope: !3789)
!3793 = !DILocation(line: 430, column: 20, scope: !3788)
!3794 = !DILocation(line: 430, column: 24, scope: !3788)
!3795 = !DILocation(line: 430, column: 28, scope: !3788)
!3796 = !DILocation(line: 430, column: 32, scope: !3788)
!3797 = !DILocation(line: 430, column: 35, scope: !3788)
!3798 = !DILocation(line: 430, column: 37, scope: !3788)
!3799 = !DILocation(line: 431, column: 4, scope: !3789)
!3800 = !DILocation(line: 431, column: 8, scope: !3789)
!3801 = !DILocation(line: 431, column: 12, scope: !3789)
!3802 = !DILocation(line: 431, column: 15, scope: !3789)
!3803 = !DILocation(line: 432, column: 3, scope: !3789)
!3804 = !DILocation(line: 429, column: 32, scope: !3782)
!3805 = !DILocation(line: 429, column: 3, scope: !3782)
!3806 = distinct !{!3806, !3786, !3807}
!3807 = !DILocation(line: 432, column: 3, scope: !3778)
!3808 = !DILocation(line: 433, column: 2, scope: !3779)
!3809 = !DILocation(line: 435, column: 6, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 435, column: 6)
!3811 = !DILocation(line: 435, column: 10, scope: !3810)
!3812 = !DILocation(line: 435, column: 6, scope: !3763)
!3813 = !DILocation(line: 436, column: 3, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3810, file: !3, line: 435, column: 15)
!3815 = !DILocation(line: 436, column: 7, scope: !3814)
!3816 = !DILocation(line: 436, column: 12, scope: !3814)
!3817 = !DILocation(line: 436, column: 15, scope: !3814)
!3818 = !DILocation(line: 436, column: 17, scope: !3814)
!3819 = !DILocation(line: 437, column: 2, scope: !3814)
!3820 = !DILocation(line: 438, column: 2, scope: !3763)
!3821 = !DILocation(line: 438, column: 6, scope: !3763)
!3822 = !DILocation(line: 438, column: 10, scope: !3763)
!3823 = !DILocation(line: 440, column: 6, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 440, column: 6)
!3825 = !DILocation(line: 440, column: 10, scope: !3824)
!3826 = !DILocation(line: 440, column: 6, scope: !3763)
!3827 = !DILocation(line: 440, column: 21, scope: !3824)
!3828 = !DILocation(line: 440, column: 25, scope: !3824)
!3829 = !DILocation(line: 440, column: 35, scope: !3824)
!3830 = !DILocation(line: 441, column: 1, scope: !3763)
!3831 = distinct !DISubprogram(name: "BKE_mesh_free", scope: !3, file: !3, line: 444, type: !3832, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!3832 = !DISubroutineType(types: !3833)
!3833 = !{null, !441, !6}
!3834 = !DILocalVariable(name: "me", arg: 1, scope: !3831, file: !3, line: 444, type: !441)
!3835 = !DILocation(line: 444, column: 26, scope: !3831)
!3836 = !DILocalVariable(name: "unlink", arg: 2, scope: !3831, file: !3, line: 444, type: !6)
!3837 = !DILocation(line: 444, column: 34, scope: !3831)
!3838 = !DILocation(line: 446, column: 6, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 446, column: 6)
!3840 = !DILocation(line: 446, column: 6, scope: !3831)
!3841 = !DILocation(line: 447, column: 19, scope: !3839)
!3842 = !DILocation(line: 447, column: 3, scope: !3839)
!3843 = !DILocation(line: 449, column: 19, scope: !3831)
!3844 = !DILocation(line: 449, column: 23, scope: !3831)
!3845 = !DILocation(line: 449, column: 30, scope: !3831)
!3846 = !DILocation(line: 449, column: 34, scope: !3831)
!3847 = !DILocation(line: 449, column: 2, scope: !3831)
!3848 = !DILocation(line: 450, column: 19, scope: !3831)
!3849 = !DILocation(line: 450, column: 23, scope: !3831)
!3850 = !DILocation(line: 450, column: 30, scope: !3831)
!3851 = !DILocation(line: 450, column: 34, scope: !3831)
!3852 = !DILocation(line: 450, column: 2, scope: !3831)
!3853 = !DILocation(line: 451, column: 19, scope: !3831)
!3854 = !DILocation(line: 451, column: 23, scope: !3831)
!3855 = !DILocation(line: 451, column: 30, scope: !3831)
!3856 = !DILocation(line: 451, column: 34, scope: !3831)
!3857 = !DILocation(line: 451, column: 2, scope: !3831)
!3858 = !DILocation(line: 452, column: 19, scope: !3831)
!3859 = !DILocation(line: 452, column: 23, scope: !3831)
!3860 = !DILocation(line: 452, column: 30, scope: !3831)
!3861 = !DILocation(line: 452, column: 34, scope: !3831)
!3862 = !DILocation(line: 452, column: 2, scope: !3831)
!3863 = !DILocation(line: 453, column: 19, scope: !3831)
!3864 = !DILocation(line: 453, column: 23, scope: !3831)
!3865 = !DILocation(line: 453, column: 30, scope: !3831)
!3866 = !DILocation(line: 453, column: 34, scope: !3831)
!3867 = !DILocation(line: 453, column: 2, scope: !3831)
!3868 = !DILocation(line: 455, column: 6, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 455, column: 6)
!3870 = !DILocation(line: 455, column: 10, scope: !3869)
!3871 = !DILocation(line: 455, column: 6, scope: !3831)
!3872 = !DILocation(line: 456, column: 22, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3869, file: !3, line: 455, column: 15)
!3874 = !DILocation(line: 456, column: 26, scope: !3873)
!3875 = !DILocation(line: 456, column: 3, scope: !3873)
!3876 = !DILocation(line: 457, column: 3, scope: !3873)
!3877 = !DILocation(line: 457, column: 7, scope: !3873)
!3878 = !DILocation(line: 457, column: 11, scope: !3873)
!3879 = !DILocation(line: 458, column: 2, scope: !3873)
!3880 = !DILocation(line: 460, column: 6, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 460, column: 6)
!3882 = !DILocation(line: 460, column: 10, scope: !3881)
!3883 = !DILocation(line: 460, column: 6, scope: !3831)
!3884 = !DILocation(line: 460, column: 15, scope: !3881)
!3885 = !DILocation(line: 460, column: 25, scope: !3881)
!3886 = !DILocation(line: 460, column: 29, scope: !3881)
!3887 = !DILocation(line: 462, column: 6, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 462, column: 6)
!3889 = !DILocation(line: 462, column: 10, scope: !3888)
!3890 = !DILocation(line: 462, column: 6, scope: !3831)
!3891 = !DILocation(line: 462, column: 14, scope: !3888)
!3892 = !DILocation(line: 462, column: 24, scope: !3888)
!3893 = !DILocation(line: 462, column: 28, scope: !3888)
!3894 = !DILocation(line: 463, column: 6, scope: !3895)
!3895 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 463, column: 6)
!3896 = !DILocation(line: 463, column: 10, scope: !3895)
!3897 = !DILocation(line: 463, column: 6, scope: !3831)
!3898 = !DILocation(line: 463, column: 19, scope: !3895)
!3899 = !DILocation(line: 463, column: 29, scope: !3895)
!3900 = !DILocation(line: 463, column: 33, scope: !3895)
!3901 = !DILocation(line: 464, column: 6, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 464, column: 6)
!3903 = !DILocation(line: 464, column: 10, scope: !3902)
!3904 = !DILocation(line: 464, column: 6, scope: !3831)
!3905 = !DILocation(line: 464, column: 23, scope: !3902)
!3906 = !DILocation(line: 464, column: 33, scope: !3902)
!3907 = !DILocation(line: 464, column: 37, scope: !3902)
!3908 = !DILocation(line: 465, column: 1, scope: !3831)
!3909 = distinct !DISubprogram(name: "BKE_mesh_add", scope: !3, file: !3, line: 482, type: !3910, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!3910 = !DISubroutineType(types: !3911)
!3911 = !{!2306, !3912, !2415}
!3912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3913, size: 64)
!3913 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !3914, line: 104, baseType: !3915)
!3914 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !3914, line: 53, size: 15232, elements: !3916)
!3916 = !{!3917, !3919, !3920, !3921, !3922, !3923, !3924, !3925, !3926, !3928, !3929, !3930, !3931, !3932, !3933, !3934, !3935, !3936, !3937, !3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3948, !3949, !3950, !3951, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3963, !3964, !3968, !3973}
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3915, file: !3914, line: 54, baseType: !3918, size: 64)
!3918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3915, size: 64)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3915, file: !3914, line: 54, baseType: !3918, size: 64, offset: 64)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3915, file: !3914, line: 55, baseType: !62, size: 8192, offset: 128)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !3915, file: !3914, line: 56, baseType: !18, size: 16, offset: 8320)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !3915, file: !3914, line: 56, baseType: !18, size: 16, offset: 8336)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !3915, file: !3914, line: 57, baseType: !18, size: 16, offset: 8352)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !3915, file: !3914, line: 57, baseType: !18, size: 16, offset: 8368)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !3915, file: !3914, line: 58, baseType: !1275, size: 64, offset: 8384)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !3915, file: !3914, line: 59, baseType: !3927, size: 128, offset: 8448)
!3927 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 128, elements: !2443)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !3915, file: !3914, line: 60, baseType: !18, size: 16, offset: 8576)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !3915, file: !3914, line: 62, baseType: !279, size: 64, offset: 8640)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3915, file: !3914, line: 63, baseType: !320, size: 128, offset: 8704)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !3915, file: !3914, line: 64, baseType: !320, size: 128, offset: 8832)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3915, file: !3914, line: 65, baseType: !320, size: 128, offset: 8960)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !3915, file: !3914, line: 66, baseType: !320, size: 128, offset: 9088)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !3915, file: !3914, line: 67, baseType: !320, size: 128, offset: 9216)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !3915, file: !3914, line: 68, baseType: !320, size: 128, offset: 9344)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3915, file: !3914, line: 69, baseType: !320, size: 128, offset: 9472)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !3915, file: !3914, line: 70, baseType: !320, size: 128, offset: 9600)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3915, file: !3914, line: 71, baseType: !320, size: 128, offset: 9728)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !3915, file: !3914, line: 72, baseType: !320, size: 128, offset: 9856)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !3915, file: !3914, line: 73, baseType: !320, size: 128, offset: 9984)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !3915, file: !3914, line: 74, baseType: !320, size: 128, offset: 10112)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3915, file: !3914, line: 75, baseType: !320, size: 128, offset: 10240)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3915, file: !3914, line: 76, baseType: !320, size: 128, offset: 10368)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !3915, file: !3914, line: 77, baseType: !320, size: 128, offset: 10496)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !3915, file: !3914, line: 78, baseType: !320, size: 128, offset: 10624)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !3915, file: !3914, line: 79, baseType: !320, size: 128, offset: 10752)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !3915, file: !3914, line: 80, baseType: !320, size: 128, offset: 10880)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !3915, file: !3914, line: 81, baseType: !320, size: 128, offset: 11008)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !3915, file: !3914, line: 82, baseType: !320, size: 128, offset: 11136)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !3915, file: !3914, line: 83, baseType: !320, size: 128, offset: 11264)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !3915, file: !3914, line: 84, baseType: !320, size: 128, offset: 11392)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !3915, file: !3914, line: 85, baseType: !320, size: 128, offset: 11520)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3915, file: !3914, line: 86, baseType: !320, size: 128, offset: 11648)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !3915, file: !3914, line: 87, baseType: !320, size: 128, offset: 11776)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !3915, file: !3914, line: 88, baseType: !320, size: 128, offset: 11904)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !3915, file: !3914, line: 89, baseType: !320, size: 128, offset: 12032)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !3915, file: !3914, line: 90, baseType: !320, size: 128, offset: 12160)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !3915, file: !3914, line: 91, baseType: !320, size: 128, offset: 12288)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !3915, file: !3914, line: 92, baseType: !320, size: 128, offset: 12416)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !3915, file: !3914, line: 93, baseType: !320, size: 128, offset: 12544)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !3915, file: !3914, line: 94, baseType: !320, size: 128, offset: 12672)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3915, file: !3914, line: 95, baseType: !320, size: 128, offset: 12800)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !3915, file: !3914, line: 96, baseType: !320, size: 128, offset: 12928)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !3915, file: !3914, line: 98, baseType: !3965, size: 2048, offset: 13056)
!3965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 2048, elements: !3966)
!3966 = !{!3967}
!3967 = !DISubrange(count: 256)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !3915, file: !3914, line: 101, baseType: !3969, size: 64, offset: 15104)
!3969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3970, size: 64)
!3970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !238, line: 58, size: 32, elements: !3971)
!3971 = !{!3972}
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3970, file: !238, line: 59, baseType: !6, size: 32)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3915, file: !3914, line: 103, baseType: !3974, size: 64, offset: 15168)
!3974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3975, size: 64)
!3975 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !3914, line: 51, flags: DIFlagFwdDecl)
!3976 = !DILocalVariable(name: "bmain", arg: 1, scope: !3909, file: !3, line: 482, type: !3912)
!3977 = !DILocation(line: 482, column: 26, scope: !3909)
!3978 = !DILocalVariable(name: "name", arg: 2, scope: !3909, file: !3, line: 482, type: !2415)
!3979 = !DILocation(line: 482, column: 45, scope: !3909)
!3980 = !DILocalVariable(name: "me", scope: !3909, file: !3, line: 484, type: !441)
!3981 = !DILocation(line: 484, column: 8, scope: !3909)
!3982 = !DILocation(line: 486, column: 26, scope: !3909)
!3983 = !DILocation(line: 486, column: 40, scope: !3909)
!3984 = !DILocation(line: 486, column: 7, scope: !3909)
!3985 = !DILocation(line: 486, column: 5, scope: !3909)
!3986 = !DILocation(line: 488, column: 30, scope: !3909)
!3987 = !DILocation(line: 488, column: 34, scope: !3909)
!3988 = !DILocation(line: 488, column: 42, scope: !3909)
!3989 = !DILocation(line: 488, column: 16, scope: !3909)
!3990 = !DILocation(line: 488, column: 20, scope: !3909)
!3991 = !DILocation(line: 488, column: 28, scope: !3909)
!3992 = !DILocation(line: 488, column: 2, scope: !3909)
!3993 = !DILocation(line: 488, column: 6, scope: !3909)
!3994 = !DILocation(line: 488, column: 14, scope: !3909)
!3995 = !DILocation(line: 489, column: 2, scope: !3909)
!3996 = !DILocation(line: 489, column: 6, scope: !3909)
!3997 = !DILocation(line: 489, column: 17, scope: !3909)
!3998 = !DILocation(line: 490, column: 2, scope: !3909)
!3999 = !DILocation(line: 490, column: 6, scope: !3909)
!4000 = !DILocation(line: 490, column: 14, scope: !3909)
!4001 = !DILocation(line: 496, column: 2, scope: !3909)
!4002 = !DILocation(line: 496, column: 6, scope: !3909)
!4003 = !DILocation(line: 496, column: 15, scope: !3909)
!4004 = !DILocation(line: 498, column: 20, scope: !3909)
!4005 = !DILocation(line: 498, column: 24, scope: !3909)
!4006 = !DILocation(line: 498, column: 2, scope: !3909)
!4007 = !DILocation(line: 499, column: 20, scope: !3909)
!4008 = !DILocation(line: 499, column: 24, scope: !3909)
!4009 = !DILocation(line: 499, column: 2, scope: !3909)
!4010 = !DILocation(line: 500, column: 20, scope: !3909)
!4011 = !DILocation(line: 500, column: 24, scope: !3909)
!4012 = !DILocation(line: 500, column: 2, scope: !3909)
!4013 = !DILocation(line: 501, column: 20, scope: !3909)
!4014 = !DILocation(line: 501, column: 24, scope: !3909)
!4015 = !DILocation(line: 501, column: 2, scope: !3909)
!4016 = !DILocation(line: 502, column: 20, scope: !3909)
!4017 = !DILocation(line: 502, column: 24, scope: !3909)
!4018 = !DILocation(line: 502, column: 2, scope: !3909)
!4019 = !DILocation(line: 504, column: 9, scope: !3909)
!4020 = !DILocation(line: 504, column: 2, scope: !3909)
!4021 = distinct !DISubprogram(name: "BKE_mesh_copy_ex", scope: !3, file: !3, line: 507, type: !4022, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!4022 = !DISubroutineType(types: !4023)
!4023 = !{!2306, !3912, !441}
!4024 = !DILocalVariable(name: "bmain", arg: 1, scope: !4021, file: !3, line: 507, type: !3912)
!4025 = !DILocation(line: 507, column: 30, scope: !4021)
!4026 = !DILocalVariable(name: "me", arg: 2, scope: !4021, file: !3, line: 507, type: !441)
!4027 = !DILocation(line: 507, column: 43, scope: !4021)
!4028 = !DILocalVariable(name: "men", scope: !4021, file: !3, line: 509, type: !441)
!4029 = !DILocation(line: 509, column: 8, scope: !4021)
!4030 = !DILocalVariable(name: "tface", scope: !4021, file: !3, line: 510, type: !330)
!4031 = !DILocation(line: 510, column: 10, scope: !4021)
!4032 = !DILocalVariable(name: "txface", scope: !4021, file: !3, line: 511, type: !431)
!4033 = !DILocation(line: 511, column: 12, scope: !4021)
!4034 = !DILocalVariable(name: "a", scope: !4021, file: !3, line: 512, type: !6)
!4035 = !DILocation(line: 512, column: 6, scope: !4021)
!4036 = !DILocalVariable(name: "i", scope: !4021, file: !3, line: 512, type: !6)
!4037 = !DILocation(line: 512, column: 9, scope: !4021)
!4038 = !DILocalVariable(name: "do_tessface", scope: !4021, file: !3, line: 513, type: !4039)
!4039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6)
!4040 = !DILocation(line: 513, column: 12, scope: !4021)
!4041 = !DILocation(line: 513, column: 28, scope: !4021)
!4042 = !DILocation(line: 513, column: 32, scope: !4021)
!4043 = !DILocation(line: 513, column: 40, scope: !4021)
!4044 = !DILocation(line: 513, column: 46, scope: !4021)
!4045 = !DILocation(line: 513, column: 50, scope: !4021)
!4046 = !DILocation(line: 513, column: 54, scope: !4021)
!4047 = !DILocation(line: 513, column: 62, scope: !4021)
!4048 = !DILocation(line: 0, scope: !4021)
!4049 = !DILocation(line: 515, column: 29, scope: !4021)
!4050 = !DILocation(line: 515, column: 37, scope: !4021)
!4051 = !DILocation(line: 515, column: 41, scope: !4021)
!4052 = !DILocation(line: 515, column: 8, scope: !4021)
!4053 = !DILocation(line: 515, column: 6, scope: !4021)
!4054 = !DILocation(line: 517, column: 13, scope: !4021)
!4055 = !DILocation(line: 517, column: 27, scope: !4021)
!4056 = !DILocation(line: 517, column: 31, scope: !4021)
!4057 = !DILocation(line: 517, column: 2, scope: !4021)
!4058 = !DILocation(line: 517, column: 7, scope: !4021)
!4059 = !DILocation(line: 517, column: 11, scope: !4021)
!4060 = !DILocation(line: 518, column: 9, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4021, file: !3, line: 518, column: 2)
!4062 = !DILocation(line: 518, column: 7, scope: !4061)
!4063 = !DILocation(line: 518, column: 14, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4061, file: !3, line: 518, column: 2)
!4065 = !DILocation(line: 518, column: 18, scope: !4064)
!4066 = !DILocation(line: 518, column: 23, scope: !4064)
!4067 = !DILocation(line: 518, column: 16, scope: !4064)
!4068 = !DILocation(line: 518, column: 2, scope: !4061)
!4069 = !DILocation(line: 519, column: 20, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !4064, file: !3, line: 518, column: 36)
!4071 = !DILocation(line: 519, column: 25, scope: !4070)
!4072 = !DILocation(line: 519, column: 29, scope: !4070)
!4073 = !DILocation(line: 519, column: 14, scope: !4070)
!4074 = !DILocation(line: 519, column: 3, scope: !4070)
!4075 = !DILocation(line: 520, column: 2, scope: !4070)
!4076 = !DILocation(line: 518, column: 32, scope: !4064)
!4077 = !DILocation(line: 518, column: 2, scope: !4064)
!4078 = distinct !{!4078, !4068, !4079}
!4079 = !DILocation(line: 520, column: 2, scope: !4061)
!4080 = !DILocation(line: 521, column: 19, scope: !4021)
!4081 = !DILocation(line: 521, column: 24, scope: !4021)
!4082 = !DILocation(line: 521, column: 13, scope: !4021)
!4083 = !DILocation(line: 521, column: 2, scope: !4021)
!4084 = !DILocation(line: 523, column: 19, scope: !4021)
!4085 = !DILocation(line: 523, column: 23, scope: !4021)
!4086 = !DILocation(line: 523, column: 31, scope: !4021)
!4087 = !DILocation(line: 523, column: 36, scope: !4021)
!4088 = !DILocation(line: 523, column: 43, scope: !4021)
!4089 = !DILocation(line: 523, column: 71, scope: !4021)
!4090 = !DILocation(line: 523, column: 76, scope: !4021)
!4091 = !DILocation(line: 523, column: 2, scope: !4021)
!4092 = !DILocation(line: 524, column: 19, scope: !4021)
!4093 = !DILocation(line: 524, column: 23, scope: !4021)
!4094 = !DILocation(line: 524, column: 31, scope: !4021)
!4095 = !DILocation(line: 524, column: 36, scope: !4021)
!4096 = !DILocation(line: 524, column: 43, scope: !4021)
!4097 = !DILocation(line: 524, column: 71, scope: !4021)
!4098 = !DILocation(line: 524, column: 76, scope: !4021)
!4099 = !DILocation(line: 524, column: 2, scope: !4021)
!4100 = !DILocation(line: 525, column: 19, scope: !4021)
!4101 = !DILocation(line: 525, column: 23, scope: !4021)
!4102 = !DILocation(line: 525, column: 31, scope: !4021)
!4103 = !DILocation(line: 525, column: 36, scope: !4021)
!4104 = !DILocation(line: 525, column: 43, scope: !4021)
!4105 = !DILocation(line: 525, column: 71, scope: !4021)
!4106 = !DILocation(line: 525, column: 76, scope: !4021)
!4107 = !DILocation(line: 525, column: 2, scope: !4021)
!4108 = !DILocation(line: 526, column: 19, scope: !4021)
!4109 = !DILocation(line: 526, column: 23, scope: !4021)
!4110 = !DILocation(line: 526, column: 31, scope: !4021)
!4111 = !DILocation(line: 526, column: 36, scope: !4021)
!4112 = !DILocation(line: 526, column: 43, scope: !4021)
!4113 = !DILocation(line: 526, column: 71, scope: !4021)
!4114 = !DILocation(line: 526, column: 76, scope: !4021)
!4115 = !DILocation(line: 526, column: 2, scope: !4021)
!4116 = !DILocation(line: 527, column: 6, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4021, file: !3, line: 527, column: 6)
!4118 = !DILocation(line: 527, column: 6, scope: !4021)
!4119 = !DILocation(line: 528, column: 20, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4117, file: !3, line: 527, column: 19)
!4121 = !DILocation(line: 528, column: 24, scope: !4120)
!4122 = !DILocation(line: 528, column: 32, scope: !4120)
!4123 = !DILocation(line: 528, column: 37, scope: !4120)
!4124 = !DILocation(line: 528, column: 44, scope: !4120)
!4125 = !DILocation(line: 528, column: 72, scope: !4120)
!4126 = !DILocation(line: 528, column: 77, scope: !4120)
!4127 = !DILocation(line: 528, column: 3, scope: !4120)
!4128 = !DILocation(line: 529, column: 2, scope: !4120)
!4129 = !DILocation(line: 531, column: 30, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4117, file: !3, line: 530, column: 7)
!4131 = !DILocation(line: 531, column: 3, scope: !4130)
!4132 = !DILocation(line: 534, column: 38, scope: !4021)
!4133 = !DILocation(line: 534, column: 43, scope: !4021)
!4134 = !DILocation(line: 534, column: 2, scope: !4021)
!4135 = !DILocation(line: 537, column: 9, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4021, file: !3, line: 537, column: 2)
!4137 = !DILocation(line: 537, column: 7, scope: !4136)
!4138 = !DILocation(line: 537, column: 14, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4136, file: !3, line: 537, column: 2)
!4140 = !DILocation(line: 537, column: 18, scope: !4139)
!4141 = !DILocation(line: 537, column: 22, scope: !4139)
!4142 = !DILocation(line: 537, column: 28, scope: !4139)
!4143 = !DILocation(line: 537, column: 16, scope: !4139)
!4144 = !DILocation(line: 537, column: 2, scope: !4136)
!4145 = !DILocation(line: 538, column: 7, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4147, file: !3, line: 538, column: 7)
!4147 = distinct !DILexicalBlock(scope: !4139, file: !3, line: 537, column: 43)
!4148 = !DILocation(line: 538, column: 11, scope: !4146)
!4149 = !DILocation(line: 538, column: 17, scope: !4146)
!4150 = !DILocation(line: 538, column: 24, scope: !4146)
!4151 = !DILocation(line: 538, column: 27, scope: !4146)
!4152 = !DILocation(line: 538, column: 32, scope: !4146)
!4153 = !DILocation(line: 538, column: 7, scope: !4147)
!4154 = !DILocation(line: 539, column: 22, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4146, file: !3, line: 538, column: 46)
!4156 = !DILocation(line: 539, column: 26, scope: !4155)
!4157 = !DILocation(line: 539, column: 32, scope: !4155)
!4158 = !DILocation(line: 539, column: 39, scope: !4155)
!4159 = !DILocation(line: 539, column: 42, scope: !4155)
!4160 = !DILocation(line: 539, column: 12, scope: !4155)
!4161 = !DILocation(line: 539, column: 10, scope: !4155)
!4162 = !DILocation(line: 541, column: 11, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4155, file: !3, line: 541, column: 4)
!4164 = !DILocation(line: 541, column: 9, scope: !4163)
!4165 = !DILocation(line: 541, column: 16, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4163, file: !3, line: 541, column: 4)
!4167 = !DILocation(line: 541, column: 20, scope: !4166)
!4168 = !DILocation(line: 541, column: 24, scope: !4166)
!4169 = !DILocation(line: 541, column: 18, scope: !4166)
!4170 = !DILocation(line: 541, column: 4, scope: !4163)
!4171 = !DILocation(line: 542, column: 9, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4166, file: !3, line: 542, column: 9)
!4173 = !DILocation(line: 542, column: 16, scope: !4172)
!4174 = !DILocation(line: 542, column: 9, scope: !4166)
!4175 = !DILocation(line: 543, column: 26, scope: !4172)
!4176 = !DILocation(line: 543, column: 33, scope: !4172)
!4177 = !DILocation(line: 543, column: 20, scope: !4172)
!4178 = !DILocation(line: 543, column: 6, scope: !4172)
!4179 = !DILocation(line: 541, column: 34, scope: !4166)
!4180 = !DILocation(line: 541, column: 43, scope: !4166)
!4181 = !DILocation(line: 541, column: 4, scope: !4166)
!4182 = distinct !{!4182, !4170, !4183}
!4183 = !DILocation(line: 543, column: 38, scope: !4163)
!4184 = !DILocation(line: 544, column: 3, scope: !4155)
!4185 = !DILocation(line: 545, column: 2, scope: !4147)
!4186 = !DILocation(line: 537, column: 39, scope: !4139)
!4187 = !DILocation(line: 537, column: 2, scope: !4139)
!4188 = distinct !{!4188, !4144, !4189}
!4189 = !DILocation(line: 545, column: 2, scope: !4136)
!4190 = !DILocation(line: 547, column: 9, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4021, file: !3, line: 547, column: 2)
!4192 = !DILocation(line: 547, column: 7, scope: !4191)
!4193 = !DILocation(line: 547, column: 14, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !4191, file: !3, line: 547, column: 2)
!4195 = !DILocation(line: 547, column: 18, scope: !4194)
!4196 = !DILocation(line: 547, column: 22, scope: !4194)
!4197 = !DILocation(line: 547, column: 28, scope: !4194)
!4198 = !DILocation(line: 547, column: 16, scope: !4194)
!4199 = !DILocation(line: 547, column: 2, scope: !4191)
!4200 = !DILocation(line: 548, column: 7, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4202, file: !3, line: 548, column: 7)
!4202 = distinct !DILexicalBlock(scope: !4194, file: !3, line: 547, column: 43)
!4203 = !DILocation(line: 548, column: 11, scope: !4201)
!4204 = !DILocation(line: 548, column: 17, scope: !4201)
!4205 = !DILocation(line: 548, column: 24, scope: !4201)
!4206 = !DILocation(line: 548, column: 27, scope: !4201)
!4207 = !DILocation(line: 548, column: 32, scope: !4201)
!4208 = !DILocation(line: 548, column: 7, scope: !4202)
!4209 = !DILocation(line: 549, column: 25, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4201, file: !3, line: 548, column: 48)
!4211 = !DILocation(line: 549, column: 29, scope: !4210)
!4212 = !DILocation(line: 549, column: 35, scope: !4210)
!4213 = !DILocation(line: 549, column: 42, scope: !4210)
!4214 = !DILocation(line: 549, column: 45, scope: !4210)
!4215 = !DILocation(line: 549, column: 13, scope: !4210)
!4216 = !DILocation(line: 549, column: 11, scope: !4210)
!4217 = !DILocation(line: 551, column: 11, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4210, file: !3, line: 551, column: 4)
!4219 = !DILocation(line: 551, column: 9, scope: !4218)
!4220 = !DILocation(line: 551, column: 16, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4218, file: !3, line: 551, column: 4)
!4222 = !DILocation(line: 551, column: 20, scope: !4221)
!4223 = !DILocation(line: 551, column: 24, scope: !4221)
!4224 = !DILocation(line: 551, column: 18, scope: !4221)
!4225 = !DILocation(line: 551, column: 4, scope: !4218)
!4226 = !DILocation(line: 552, column: 9, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4221, file: !3, line: 552, column: 9)
!4228 = !DILocation(line: 552, column: 17, scope: !4227)
!4229 = !DILocation(line: 552, column: 9, scope: !4221)
!4230 = !DILocation(line: 553, column: 26, scope: !4227)
!4231 = !DILocation(line: 553, column: 34, scope: !4227)
!4232 = !DILocation(line: 553, column: 20, scope: !4227)
!4233 = !DILocation(line: 553, column: 6, scope: !4227)
!4234 = !DILocation(line: 551, column: 34, scope: !4221)
!4235 = !DILocation(line: 551, column: 44, scope: !4221)
!4236 = !DILocation(line: 551, column: 4, scope: !4221)
!4237 = distinct !{!4237, !4225, !4238}
!4238 = !DILocation(line: 553, column: 39, scope: !4218)
!4239 = !DILocation(line: 554, column: 3, scope: !4210)
!4240 = !DILocation(line: 555, column: 2, scope: !4202)
!4241 = !DILocation(line: 547, column: 39, scope: !4194)
!4242 = !DILocation(line: 547, column: 2, scope: !4194)
!4243 = distinct !{!4243, !4199, !4244}
!4244 = !DILocation(line: 555, column: 2, scope: !4191)
!4245 = !DILocation(line: 557, column: 2, scope: !4021)
!4246 = !DILocation(line: 557, column: 7, scope: !4021)
!4247 = !DILocation(line: 557, column: 19, scope: !4021)
!4248 = !DILocation(line: 559, column: 17, scope: !4021)
!4249 = !DILocation(line: 559, column: 31, scope: !4021)
!4250 = !DILocation(line: 559, column: 36, scope: !4021)
!4251 = !DILocation(line: 559, column: 2, scope: !4021)
!4252 = !DILocation(line: 559, column: 7, scope: !4021)
!4253 = !DILocation(line: 559, column: 15, scope: !4021)
!4254 = !DILocation(line: 560, column: 12, scope: !4021)
!4255 = !DILocation(line: 560, column: 26, scope: !4021)
!4256 = !DILocation(line: 560, column: 31, scope: !4021)
!4257 = !DILocation(line: 560, column: 2, scope: !4021)
!4258 = !DILocation(line: 560, column: 7, scope: !4021)
!4259 = !DILocation(line: 560, column: 10, scope: !4021)
!4260 = !DILocation(line: 562, column: 26, scope: !4021)
!4261 = !DILocation(line: 562, column: 30, scope: !4021)
!4262 = !DILocation(line: 562, column: 13, scope: !4021)
!4263 = !DILocation(line: 562, column: 2, scope: !4021)
!4264 = !DILocation(line: 562, column: 7, scope: !4021)
!4265 = !DILocation(line: 562, column: 11, scope: !4021)
!4266 = !DILocation(line: 563, column: 6, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4021, file: !3, line: 563, column: 6)
!4268 = !DILocation(line: 563, column: 11, scope: !4267)
!4269 = !DILocation(line: 563, column: 6, scope: !4021)
!4270 = !DILocation(line: 563, column: 39, scope: !4267)
!4271 = !DILocation(line: 563, column: 33, scope: !4267)
!4272 = !DILocation(line: 563, column: 16, scope: !4267)
!4273 = !DILocation(line: 563, column: 21, scope: !4267)
!4274 = !DILocation(line: 563, column: 26, scope: !4267)
!4275 = !DILocation(line: 563, column: 31, scope: !4267)
!4276 = !DILocation(line: 565, column: 9, scope: !4021)
!4277 = !DILocation(line: 565, column: 2, scope: !4021)
!4278 = distinct !DISubprogram(name: "mesh_tessface_clear_intern", scope: !3, file: !3, line: 467, type: !3832, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!4279 = !DILocalVariable(name: "mesh", arg: 1, scope: !4278, file: !3, line: 467, type: !441)
!4280 = !DILocation(line: 467, column: 46, scope: !4278)
!4281 = !DILocalVariable(name: "free_customdata", arg: 2, scope: !4278, file: !3, line: 467, type: !6)
!4282 = !DILocation(line: 467, column: 56, scope: !4278)
!4283 = !DILocation(line: 469, column: 6, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4278, file: !3, line: 469, column: 6)
!4285 = !DILocation(line: 469, column: 6, scope: !4278)
!4286 = !DILocation(line: 470, column: 20, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4284, file: !3, line: 469, column: 23)
!4288 = !DILocation(line: 470, column: 26, scope: !4287)
!4289 = !DILocation(line: 470, column: 33, scope: !4287)
!4290 = !DILocation(line: 470, column: 39, scope: !4287)
!4291 = !DILocation(line: 470, column: 3, scope: !4287)
!4292 = !DILocation(line: 471, column: 2, scope: !4287)
!4293 = !DILocation(line: 473, column: 21, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4284, file: !3, line: 472, column: 7)
!4295 = !DILocation(line: 473, column: 27, scope: !4294)
!4296 = !DILocation(line: 473, column: 3, scope: !4294)
!4297 = !DILocation(line: 476, column: 2, scope: !4278)
!4298 = !DILocation(line: 476, column: 8, scope: !4278)
!4299 = !DILocation(line: 476, column: 14, scope: !4278)
!4300 = !DILocation(line: 477, column: 2, scope: !4278)
!4301 = !DILocation(line: 477, column: 8, scope: !4278)
!4302 = !DILocation(line: 477, column: 15, scope: !4278)
!4303 = !DILocation(line: 478, column: 2, scope: !4278)
!4304 = !DILocation(line: 478, column: 8, scope: !4278)
!4305 = !DILocation(line: 478, column: 13, scope: !4278)
!4306 = !DILocation(line: 479, column: 2, scope: !4278)
!4307 = !DILocation(line: 479, column: 8, scope: !4278)
!4308 = !DILocation(line: 479, column: 16, scope: !4278)
!4309 = !DILocation(line: 480, column: 1, scope: !4278)
!4310 = distinct !DISubprogram(name: "BKE_mesh_copy", scope: !3, file: !3, line: 568, type: !4311, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!4311 = !DISubroutineType(types: !4312)
!4312 = !{!2306, !441}
!4313 = !DILocalVariable(name: "me", arg: 1, scope: !4310, file: !3, line: 568, type: !441)
!4314 = !DILocation(line: 568, column: 27, scope: !4310)
!4315 = !DILocation(line: 570, column: 28, scope: !4310)
!4316 = !DILocation(line: 570, column: 34, scope: !4310)
!4317 = !DILocation(line: 570, column: 9, scope: !4310)
!4318 = !DILocation(line: 570, column: 2, scope: !4310)
!4319 = distinct !DISubprogram(name: "BKE_mesh_to_bmesh", scope: !3, file: !3, line: 573, type: !4320, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!4320 = !DISubroutineType(types: !4321)
!4321 = !{!2313, !441, !4322}
!4322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4323, size: 64)
!4323 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !197, line: 295, baseType: !695)
!4324 = !DILocalVariable(name: "me", arg: 1, scope: !4319, file: !3, line: 573, type: !441)
!4325 = !DILocation(line: 573, column: 32, scope: !4319)
!4326 = !DILocalVariable(name: "ob", arg: 2, scope: !4319, file: !3, line: 573, type: !4322)
!4327 = !DILocation(line: 573, column: 44, scope: !4319)
!4328 = !DILocalVariable(name: "bm", scope: !4319, file: !3, line: 575, type: !2450)
!4329 = !DILocation(line: 575, column: 9, scope: !4319)
!4330 = !DILocalVariable(name: "allocsize", scope: !4319, file: !3, line: 576, type: !4331)
!4331 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4332)
!4332 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMAllocTemplate", file: !4333, line: 80, baseType: !4334)
!4333 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_mesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMAllocTemplate", file: !4333, line: 78, size: 128, elements: !4335)
!4335 = !{!4336, !4337, !4338, !4339}
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !4334, file: !4333, line: 79, baseType: !6, size: 32)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !4334, file: !4333, line: 79, baseType: !6, size: 32, offset: 32)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !4334, file: !4333, line: 79, baseType: !6, size: 32, offset: 64)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !4334, file: !4333, line: 79, baseType: !6, size: 32, offset: 96)
!4340 = !DILocation(line: 576, column: 24, scope: !4319)
!4341 = !DILocation(line: 576, column: 36, scope: !4319)
!4342 = !DILocation(line: 578, column: 7, scope: !4319)
!4343 = !DILocation(line: 578, column: 5, scope: !4319)
!4344 = !DILocation(line: 580, column: 21, scope: !4319)
!4345 = !DILocation(line: 580, column: 25, scope: !4319)
!4346 = !DILocation(line: 580, column: 42, scope: !4319)
!4347 = !DILocation(line: 580, column: 46, scope: !4319)
!4348 = !DILocation(line: 580, column: 2, scope: !4319)
!4349 = !DILocation(line: 582, column: 9, scope: !4319)
!4350 = !DILocation(line: 582, column: 2, scope: !4319)
!4351 = distinct !DISubprogram(name: "BKE_mesh_make_local", scope: !3, file: !3, line: 624, type: !3460, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!4352 = !DILocalVariable(name: "me", arg: 1, scope: !4351, file: !3, line: 624, type: !441)
!4353 = !DILocation(line: 624, column: 32, scope: !4351)
!4354 = !DILocalVariable(name: "bmain", scope: !4351, file: !3, line: 626, type: !3912)
!4355 = !DILocation(line: 626, column: 8, scope: !4351)
!4356 = !DILocation(line: 626, column: 18, scope: !4351)
!4357 = !DILocalVariable(name: "ob", scope: !4351, file: !3, line: 627, type: !4322)
!4358 = !DILocation(line: 627, column: 10, scope: !4351)
!4359 = !DILocalVariable(name: "is_local", scope: !4351, file: !3, line: 628, type: !1203)
!4360 = !DILocation(line: 628, column: 7, scope: !4351)
!4361 = !DILocalVariable(name: "is_lib", scope: !4351, file: !3, line: 628, type: !1203)
!4362 = !DILocation(line: 628, column: 25, scope: !4351)
!4363 = !DILocation(line: 635, column: 6, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4351, file: !3, line: 635, column: 6)
!4365 = !DILocation(line: 635, column: 10, scope: !4364)
!4366 = !DILocation(line: 635, column: 13, scope: !4364)
!4367 = !DILocation(line: 635, column: 17, scope: !4364)
!4368 = !DILocation(line: 635, column: 6, scope: !4351)
!4369 = !DILocation(line: 635, column: 26, scope: !4364)
!4370 = !DILocation(line: 636, column: 6, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4351, file: !3, line: 636, column: 6)
!4372 = !DILocation(line: 636, column: 10, scope: !4371)
!4373 = !DILocation(line: 636, column: 13, scope: !4371)
!4374 = !DILocation(line: 636, column: 16, scope: !4371)
!4375 = !DILocation(line: 636, column: 6, scope: !4351)
!4376 = !DILocation(line: 637, column: 21, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 636, column: 22)
!4378 = !DILocation(line: 637, column: 29, scope: !4377)
!4379 = !DILocation(line: 637, column: 33, scope: !4377)
!4380 = !DILocation(line: 637, column: 3, scope: !4377)
!4381 = !DILocation(line: 638, column: 21, scope: !4377)
!4382 = !DILocation(line: 638, column: 3, scope: !4377)
!4383 = !DILocation(line: 639, column: 3, scope: !4377)
!4384 = !DILocation(line: 642, column: 12, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4351, file: !3, line: 642, column: 2)
!4386 = !DILocation(line: 642, column: 19, scope: !4385)
!4387 = !DILocation(line: 642, column: 26, scope: !4385)
!4388 = !DILocation(line: 642, column: 10, scope: !4385)
!4389 = !DILocation(line: 642, column: 7, scope: !4385)
!4390 = !DILocation(line: 642, column: 33, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4385, file: !3, line: 642, column: 2)
!4392 = !DILocation(line: 642, column: 36, scope: !4391)
!4393 = !DILocation(line: 642, column: 39, scope: !4391)
!4394 = !DILocation(line: 0, scope: !4391)
!4395 = !DILocation(line: 642, column: 2, scope: !4385)
!4396 = !DILocation(line: 643, column: 7, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4398, file: !3, line: 643, column: 7)
!4398 = distinct !DILexicalBlock(scope: !4391, file: !3, line: 642, column: 84)
!4399 = !DILocation(line: 643, column: 13, scope: !4397)
!4400 = !DILocation(line: 643, column: 17, scope: !4397)
!4401 = !DILocation(line: 643, column: 10, scope: !4397)
!4402 = !DILocation(line: 643, column: 7, scope: !4398)
!4403 = !DILocation(line: 644, column: 8, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4405, file: !3, line: 644, column: 8)
!4405 = distinct !DILexicalBlock(scope: !4397, file: !3, line: 643, column: 23)
!4406 = !DILocation(line: 644, column: 12, scope: !4404)
!4407 = !DILocation(line: 644, column: 15, scope: !4404)
!4408 = !DILocation(line: 644, column: 8, scope: !4405)
!4409 = !DILocation(line: 644, column: 27, scope: !4404)
!4410 = !DILocation(line: 644, column: 20, scope: !4404)
!4411 = !DILocation(line: 645, column: 18, scope: !4404)
!4412 = !DILocation(line: 646, column: 3, scope: !4405)
!4413 = !DILocation(line: 647, column: 2, scope: !4398)
!4414 = !DILocation(line: 642, column: 71, scope: !4391)
!4415 = !DILocation(line: 642, column: 75, scope: !4391)
!4416 = !DILocation(line: 642, column: 78, scope: !4391)
!4417 = !DILocation(line: 642, column: 69, scope: !4391)
!4418 = !DILocation(line: 642, column: 2, scope: !4391)
!4419 = distinct !{!4419, !4395, !4420}
!4420 = !DILocation(line: 647, column: 2, scope: !4385)
!4421 = !DILocation(line: 649, column: 6, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4351, file: !3, line: 649, column: 6)
!4423 = !DILocation(line: 649, column: 15, scope: !4422)
!4424 = !DILocation(line: 649, column: 18, scope: !4422)
!4425 = !DILocation(line: 649, column: 25, scope: !4422)
!4426 = !DILocation(line: 649, column: 6, scope: !4351)
!4427 = !DILocation(line: 650, column: 21, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4422, file: !3, line: 649, column: 35)
!4429 = !DILocation(line: 650, column: 29, scope: !4428)
!4430 = !DILocation(line: 650, column: 33, scope: !4428)
!4431 = !DILocation(line: 650, column: 3, scope: !4428)
!4432 = !DILocation(line: 651, column: 21, scope: !4428)
!4433 = !DILocation(line: 651, column: 3, scope: !4428)
!4434 = !DILocation(line: 652, column: 2, scope: !4428)
!4435 = !DILocation(line: 653, column: 11, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4422, file: !3, line: 653, column: 11)
!4437 = !DILocation(line: 653, column: 20, scope: !4436)
!4438 = !DILocation(line: 653, column: 23, scope: !4436)
!4439 = !DILocation(line: 653, column: 11, scope: !4422)
!4440 = !DILocalVariable(name: "me_new", scope: !4441, file: !3, line: 654, type: !441)
!4441 = distinct !DILexicalBlock(scope: !4436, file: !3, line: 653, column: 31)
!4442 = !DILocation(line: 654, column: 9, scope: !4441)
!4443 = !DILocation(line: 654, column: 32, scope: !4441)
!4444 = !DILocation(line: 654, column: 18, scope: !4441)
!4445 = !DILocation(line: 655, column: 3, scope: !4441)
!4446 = !DILocation(line: 655, column: 11, scope: !4441)
!4447 = !DILocation(line: 655, column: 14, scope: !4441)
!4448 = !DILocation(line: 655, column: 17, scope: !4441)
!4449 = !DILocation(line: 659, column: 26, scope: !4441)
!4450 = !DILocation(line: 659, column: 33, scope: !4441)
!4451 = !DILocation(line: 659, column: 37, scope: !4441)
!4452 = !DILocation(line: 659, column: 40, scope: !4441)
!4453 = !DILocation(line: 659, column: 46, scope: !4441)
!4454 = !DILocation(line: 659, column: 54, scope: !4441)
!4455 = !DILocation(line: 659, column: 3, scope: !4441)
!4456 = !DILocation(line: 661, column: 13, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4441, file: !3, line: 661, column: 3)
!4458 = !DILocation(line: 661, column: 20, scope: !4457)
!4459 = !DILocation(line: 661, column: 27, scope: !4457)
!4460 = !DILocation(line: 661, column: 11, scope: !4457)
!4461 = !DILocation(line: 661, column: 8, scope: !4457)
!4462 = !DILocation(line: 661, column: 34, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4457, file: !3, line: 661, column: 3)
!4464 = !DILocation(line: 661, column: 3, scope: !4457)
!4465 = !DILocation(line: 662, column: 8, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4467, file: !3, line: 662, column: 8)
!4467 = distinct !DILexicalBlock(scope: !4463, file: !3, line: 661, column: 56)
!4468 = !DILocation(line: 662, column: 14, scope: !4466)
!4469 = !DILocation(line: 662, column: 18, scope: !4466)
!4470 = !DILocation(line: 662, column: 11, scope: !4466)
!4471 = !DILocation(line: 662, column: 8, scope: !4467)
!4472 = !DILocation(line: 663, column: 9, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4474, file: !3, line: 663, column: 9)
!4474 = distinct !DILexicalBlock(scope: !4466, file: !3, line: 662, column: 24)
!4475 = !DILocation(line: 663, column: 13, scope: !4473)
!4476 = !DILocation(line: 663, column: 16, scope: !4473)
!4477 = !DILocation(line: 663, column: 20, scope: !4473)
!4478 = !DILocation(line: 663, column: 9, scope: !4474)
!4479 = !DILocation(line: 664, column: 29, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4473, file: !3, line: 663, column: 29)
!4481 = !DILocation(line: 664, column: 33, scope: !4480)
!4482 = !DILocation(line: 664, column: 6, scope: !4480)
!4483 = !DILocation(line: 665, column: 5, scope: !4480)
!4484 = !DILocation(line: 666, column: 4, scope: !4474)
!4485 = !DILocation(line: 667, column: 3, scope: !4467)
!4486 = !DILocation(line: 661, column: 43, scope: !4463)
!4487 = !DILocation(line: 661, column: 47, scope: !4463)
!4488 = !DILocation(line: 661, column: 50, scope: !4463)
!4489 = !DILocation(line: 661, column: 41, scope: !4463)
!4490 = !DILocation(line: 661, column: 3, scope: !4463)
!4491 = distinct !{!4491, !4464, !4492}
!4492 = !DILocation(line: 667, column: 3, scope: !4457)
!4493 = !DILocation(line: 668, column: 2, scope: !4441)
!4494 = !DILocation(line: 669, column: 1, scope: !4351)
!4495 = distinct !DISubprogram(name: "expand_local_mesh", scope: !3, file: !3, line: 585, type: !3460, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!4496 = !DILocalVariable(name: "me", arg: 1, scope: !4495, file: !3, line: 585, type: !441)
!4497 = !DILocation(line: 585, column: 37, scope: !4495)
!4498 = !DILocation(line: 587, column: 22, scope: !4495)
!4499 = !DILocation(line: 587, column: 26, scope: !4495)
!4500 = !DILocation(line: 587, column: 16, scope: !4495)
!4501 = !DILocation(line: 587, column: 2, scope: !4495)
!4502 = !DILocation(line: 589, column: 6, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4495, file: !3, line: 589, column: 6)
!4504 = !DILocation(line: 589, column: 10, scope: !4503)
!4505 = !DILocation(line: 589, column: 17, scope: !4503)
!4506 = !DILocation(line: 589, column: 20, scope: !4503)
!4507 = !DILocation(line: 589, column: 24, scope: !4503)
!4508 = !DILocation(line: 589, column: 6, scope: !4495)
!4509 = !DILocalVariable(name: "a", scope: !4510, file: !3, line: 590, type: !6)
!4510 = distinct !DILexicalBlock(scope: !4503, file: !3, line: 589, column: 32)
!4511 = !DILocation(line: 590, column: 7, scope: !4510)
!4512 = !DILocalVariable(name: "i", scope: !4510, file: !3, line: 590, type: !6)
!4513 = !DILocation(line: 590, column: 10, scope: !4510)
!4514 = !DILocation(line: 592, column: 10, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4510, file: !3, line: 592, column: 3)
!4516 = !DILocation(line: 592, column: 8, scope: !4515)
!4517 = !DILocation(line: 592, column: 15, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4515, file: !3, line: 592, column: 3)
!4519 = !DILocation(line: 592, column: 19, scope: !4518)
!4520 = !DILocation(line: 592, column: 23, scope: !4518)
!4521 = !DILocation(line: 592, column: 29, scope: !4518)
!4522 = !DILocation(line: 592, column: 17, scope: !4518)
!4523 = !DILocation(line: 592, column: 3, scope: !4515)
!4524 = !DILocation(line: 593, column: 8, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4526, file: !3, line: 593, column: 8)
!4526 = distinct !DILexicalBlock(scope: !4518, file: !3, line: 592, column: 44)
!4527 = !DILocation(line: 593, column: 12, scope: !4525)
!4528 = !DILocation(line: 593, column: 18, scope: !4525)
!4529 = !DILocation(line: 593, column: 25, scope: !4525)
!4530 = !DILocation(line: 593, column: 28, scope: !4525)
!4531 = !DILocation(line: 593, column: 33, scope: !4525)
!4532 = !DILocation(line: 593, column: 8, scope: !4526)
!4533 = !DILocalVariable(name: "txface", scope: !4534, file: !3, line: 594, type: !431)
!4534 = distinct !DILexicalBlock(scope: !4525, file: !3, line: 593, column: 49)
!4535 = !DILocation(line: 594, column: 15, scope: !4534)
!4536 = !DILocation(line: 594, column: 36, scope: !4534)
!4537 = !DILocation(line: 594, column: 40, scope: !4534)
!4538 = !DILocation(line: 594, column: 46, scope: !4534)
!4539 = !DILocation(line: 594, column: 53, scope: !4534)
!4540 = !DILocation(line: 594, column: 56, scope: !4534)
!4541 = !DILocation(line: 594, column: 24, scope: !4534)
!4542 = !DILocation(line: 596, column: 12, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 596, column: 5)
!4544 = !DILocation(line: 596, column: 10, scope: !4543)
!4545 = !DILocation(line: 596, column: 17, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 596, column: 5)
!4547 = !DILocation(line: 596, column: 21, scope: !4546)
!4548 = !DILocation(line: 596, column: 25, scope: !4546)
!4549 = !DILocation(line: 596, column: 19, scope: !4546)
!4550 = !DILocation(line: 596, column: 5, scope: !4543)
!4551 = !DILocation(line: 598, column: 10, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4553, file: !3, line: 598, column: 10)
!4553 = distinct !DILexicalBlock(scope: !4546, file: !3, line: 596, column: 49)
!4554 = !DILocation(line: 598, column: 18, scope: !4552)
!4555 = !DILocation(line: 598, column: 10, scope: !4553)
!4556 = !DILocation(line: 599, column: 27, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4552, file: !3, line: 598, column: 25)
!4558 = !DILocation(line: 599, column: 35, scope: !4557)
!4559 = !DILocation(line: 599, column: 21, scope: !4557)
!4560 = !DILocation(line: 599, column: 7, scope: !4557)
!4561 = !DILocation(line: 600, column: 6, scope: !4557)
!4562 = !DILocation(line: 601, column: 5, scope: !4553)
!4563 = !DILocation(line: 596, column: 35, scope: !4546)
!4564 = !DILocation(line: 596, column: 45, scope: !4546)
!4565 = !DILocation(line: 596, column: 5, scope: !4546)
!4566 = distinct !{!4566, !4550, !4567}
!4567 = !DILocation(line: 601, column: 5, scope: !4543)
!4568 = !DILocation(line: 602, column: 4, scope: !4534)
!4569 = !DILocation(line: 603, column: 3, scope: !4526)
!4570 = !DILocation(line: 592, column: 40, scope: !4518)
!4571 = !DILocation(line: 592, column: 3, scope: !4518)
!4572 = distinct !{!4572, !4523, !4573}
!4573 = !DILocation(line: 603, column: 3, scope: !4515)
!4574 = !DILocation(line: 605, column: 10, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4510, file: !3, line: 605, column: 3)
!4576 = !DILocation(line: 605, column: 8, scope: !4575)
!4577 = !DILocation(line: 605, column: 15, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4575, file: !3, line: 605, column: 3)
!4579 = !DILocation(line: 605, column: 19, scope: !4578)
!4580 = !DILocation(line: 605, column: 23, scope: !4578)
!4581 = !DILocation(line: 605, column: 29, scope: !4578)
!4582 = !DILocation(line: 605, column: 17, scope: !4578)
!4583 = !DILocation(line: 605, column: 3, scope: !4575)
!4584 = !DILocation(line: 606, column: 8, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4586, file: !3, line: 606, column: 8)
!4586 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 605, column: 44)
!4587 = !DILocation(line: 606, column: 12, scope: !4585)
!4588 = !DILocation(line: 606, column: 18, scope: !4585)
!4589 = !DILocation(line: 606, column: 25, scope: !4585)
!4590 = !DILocation(line: 606, column: 28, scope: !4585)
!4591 = !DILocation(line: 606, column: 33, scope: !4585)
!4592 = !DILocation(line: 606, column: 8, scope: !4586)
!4593 = !DILocalVariable(name: "tface", scope: !4594, file: !3, line: 607, type: !330)
!4594 = distinct !DILexicalBlock(scope: !4585, file: !3, line: 606, column: 47)
!4595 = !DILocation(line: 607, column: 13, scope: !4594)
!4596 = !DILocation(line: 607, column: 31, scope: !4594)
!4597 = !DILocation(line: 607, column: 35, scope: !4594)
!4598 = !DILocation(line: 607, column: 41, scope: !4594)
!4599 = !DILocation(line: 607, column: 48, scope: !4594)
!4600 = !DILocation(line: 607, column: 51, scope: !4594)
!4601 = !DILocation(line: 607, column: 21, scope: !4594)
!4602 = !DILocation(line: 609, column: 12, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4594, file: !3, line: 609, column: 5)
!4604 = !DILocation(line: 609, column: 10, scope: !4603)
!4605 = !DILocation(line: 609, column: 17, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4603, file: !3, line: 609, column: 5)
!4607 = !DILocation(line: 609, column: 21, scope: !4606)
!4608 = !DILocation(line: 609, column: 25, scope: !4606)
!4609 = !DILocation(line: 609, column: 19, scope: !4606)
!4610 = !DILocation(line: 609, column: 5, scope: !4603)
!4611 = !DILocation(line: 611, column: 10, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4613, file: !3, line: 611, column: 10)
!4613 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 609, column: 48)
!4614 = !DILocation(line: 611, column: 17, scope: !4612)
!4615 = !DILocation(line: 611, column: 10, scope: !4613)
!4616 = !DILocation(line: 612, column: 27, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4612, file: !3, line: 611, column: 24)
!4618 = !DILocation(line: 612, column: 34, scope: !4617)
!4619 = !DILocation(line: 612, column: 21, scope: !4617)
!4620 = !DILocation(line: 612, column: 7, scope: !4617)
!4621 = !DILocation(line: 613, column: 6, scope: !4617)
!4622 = !DILocation(line: 614, column: 5, scope: !4613)
!4623 = !DILocation(line: 609, column: 35, scope: !4606)
!4624 = !DILocation(line: 609, column: 44, scope: !4606)
!4625 = !DILocation(line: 609, column: 5, scope: !4606)
!4626 = distinct !{!4626, !4610, !4627}
!4627 = !DILocation(line: 614, column: 5, scope: !4603)
!4628 = !DILocation(line: 615, column: 4, scope: !4594)
!4629 = !DILocation(line: 616, column: 3, scope: !4586)
!4630 = !DILocation(line: 605, column: 40, scope: !4578)
!4631 = !DILocation(line: 605, column: 3, scope: !4578)
!4632 = distinct !{!4632, !4583, !4633}
!4633 = !DILocation(line: 616, column: 3, scope: !4575)
!4634 = !DILocation(line: 617, column: 2, scope: !4510)
!4635 = !DILocation(line: 619, column: 6, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4495, file: !3, line: 619, column: 6)
!4637 = !DILocation(line: 619, column: 10, scope: !4636)
!4638 = !DILocation(line: 619, column: 6, scope: !4495)
!4639 = !DILocation(line: 620, column: 24, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4636, file: !3, line: 619, column: 15)
!4641 = !DILocation(line: 620, column: 28, scope: !4640)
!4642 = !DILocation(line: 620, column: 33, scope: !4640)
!4643 = !DILocation(line: 620, column: 37, scope: !4640)
!4644 = !DILocation(line: 620, column: 3, scope: !4640)
!4645 = !DILocation(line: 621, column: 2, scope: !4640)
!4646 = !DILocation(line: 622, column: 1, scope: !4495)
!4647 = distinct !DISubprogram(name: "BKE_mesh_assign_object", scope: !3, file: !3, line: 1001, type: !4648, scopeLine: 1002, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!4648 = !DISubroutineType(types: !4649)
!4649 = !{null, !4322, !441}
!4650 = !DILocalVariable(name: "ob", arg: 1, scope: !4647, file: !3, line: 1001, type: !4322)
!4651 = !DILocation(line: 1001, column: 37, scope: !4647)
!4652 = !DILocalVariable(name: "me", arg: 2, scope: !4647, file: !3, line: 1001, type: !441)
!4653 = !DILocation(line: 1001, column: 47, scope: !4647)
!4654 = !DILocalVariable(name: "old", scope: !4647, file: !3, line: 1003, type: !441)
!4655 = !DILocation(line: 1003, column: 8, scope: !4647)
!4656 = !DILocation(line: 1005, column: 24, scope: !4647)
!4657 = !DILocation(line: 1005, column: 2, scope: !4647)
!4658 = !DILocation(line: 1007, column: 6, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4647, file: !3, line: 1007, column: 6)
!4660 = !DILocation(line: 1007, column: 9, scope: !4659)
!4661 = !DILocation(line: 1007, column: 6, scope: !4647)
!4662 = !DILocation(line: 1007, column: 18, scope: !4659)
!4663 = !DILocation(line: 1009, column: 6, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4647, file: !3, line: 1009, column: 6)
!4665 = !DILocation(line: 1009, column: 10, scope: !4664)
!4666 = !DILocation(line: 1009, column: 15, scope: !4664)
!4667 = !DILocation(line: 1009, column: 6, scope: !4647)
!4668 = !DILocation(line: 1010, column: 9, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 1009, column: 27)
!4670 = !DILocation(line: 1010, column: 13, scope: !4669)
!4671 = !DILocation(line: 1010, column: 7, scope: !4669)
!4672 = !DILocation(line: 1011, column: 7, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4669, file: !3, line: 1011, column: 7)
!4674 = !DILocation(line: 1011, column: 7, scope: !4669)
!4675 = !DILocation(line: 1012, column: 4, scope: !4673)
!4676 = !DILocation(line: 1012, column: 9, scope: !4673)
!4677 = !DILocation(line: 1012, column: 12, scope: !4673)
!4678 = !DILocation(line: 1012, column: 14, scope: !4673)
!4679 = !DILocation(line: 1013, column: 14, scope: !4669)
!4680 = !DILocation(line: 1013, column: 3, scope: !4669)
!4681 = !DILocation(line: 1013, column: 7, scope: !4669)
!4682 = !DILocation(line: 1013, column: 12, scope: !4669)
!4683 = !DILocation(line: 1014, column: 20, scope: !4669)
!4684 = !DILocation(line: 1014, column: 14, scope: !4669)
!4685 = !DILocation(line: 1014, column: 3, scope: !4669)
!4686 = !DILocation(line: 1015, column: 2, scope: !4669)
!4687 = !DILocation(line: 1017, column: 26, scope: !4647)
!4688 = !DILocation(line: 1017, column: 38, scope: !4647)
!4689 = !DILocation(line: 1017, column: 32, scope: !4647)
!4690 = !DILocation(line: 1017, column: 2, scope: !4647)
!4691 = !DILocation(line: 1019, column: 24, scope: !4647)
!4692 = !DILocation(line: 1019, column: 2, scope: !4647)
!4693 = !DILocation(line: 1020, column: 1, scope: !4647)
!4694 = distinct !DISubprogram(name: "BKE_mesh_uv_cdlayer_rename_index", scope: !3, file: !3, line: 671, type: !4695, scopeLine: 673, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!4695 = !DISubroutineType(types: !4696)
!4696 = !{!1203, !441, !4039, !4039, !4039, !2415, !1224}
!4697 = !DILocalVariable(name: "me", arg: 1, scope: !4694, file: !3, line: 671, type: !441)
!4698 = !DILocation(line: 671, column: 45, scope: !4694)
!4699 = !DILocalVariable(name: "poly_index", arg: 2, scope: !4694, file: !3, line: 671, type: !4039)
!4700 = !DILocation(line: 671, column: 59, scope: !4694)
!4701 = !DILocalVariable(name: "loop_index", arg: 3, scope: !4694, file: !3, line: 671, type: !4039)
!4702 = !DILocation(line: 671, column: 81, scope: !4694)
!4703 = !DILocalVariable(name: "face_index", arg: 4, scope: !4694, file: !3, line: 671, type: !4039)
!4704 = !DILocation(line: 671, column: 103, scope: !4694)
!4705 = !DILocalVariable(name: "new_name", arg: 5, scope: !4694, file: !3, line: 672, type: !2415)
!4706 = !DILocation(line: 672, column: 51, scope: !4694)
!4707 = !DILocalVariable(name: "do_tessface", arg: 6, scope: !4694, file: !3, line: 672, type: !1224)
!4708 = !DILocation(line: 672, column: 72, scope: !4694)
!4709 = !DILocalVariable(name: "pdata", scope: !4694, file: !3, line: 674, type: !22)
!4710 = !DILocation(line: 674, column: 14, scope: !4694)
!4711 = !DILocalVariable(name: "ldata", scope: !4694, file: !3, line: 674, type: !22)
!4712 = !DILocation(line: 674, column: 22, scope: !4694)
!4713 = !DILocalVariable(name: "fdata", scope: !4694, file: !3, line: 674, type: !22)
!4714 = !DILocation(line: 674, column: 30, scope: !4694)
!4715 = !DILocalVariable(name: "cdlp", scope: !4694, file: !3, line: 675, type: !28)
!4716 = !DILocation(line: 675, column: 19, scope: !4694)
!4717 = !DILocalVariable(name: "cdlu", scope: !4694, file: !3, line: 675, type: !28)
!4718 = !DILocation(line: 675, column: 26, scope: !4694)
!4719 = !DILocalVariable(name: "cdlf", scope: !4694, file: !3, line: 675, type: !28)
!4720 = !DILocation(line: 675, column: 33, scope: !4694)
!4721 = !DILocalVariable(name: "step", scope: !4694, file: !3, line: 676, type: !4039)
!4722 = !DILocation(line: 676, column: 12, scope: !4694)
!4723 = !DILocation(line: 676, column: 19, scope: !4694)
!4724 = !DILocalVariable(name: "i", scope: !4694, file: !3, line: 677, type: !6)
!4725 = !DILocation(line: 677, column: 6, scope: !4694)
!4726 = !DILocation(line: 679, column: 6, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4694, file: !3, line: 679, column: 6)
!4728 = !DILocation(line: 679, column: 10, scope: !4727)
!4729 = !DILocation(line: 679, column: 6, scope: !4694)
!4730 = !DILocation(line: 680, column: 12, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 679, column: 23)
!4732 = !DILocation(line: 680, column: 16, scope: !4731)
!4733 = !DILocation(line: 680, column: 29, scope: !4731)
!4734 = !DILocation(line: 680, column: 33, scope: !4731)
!4735 = !DILocation(line: 680, column: 9, scope: !4731)
!4736 = !DILocation(line: 681, column: 12, scope: !4731)
!4737 = !DILocation(line: 681, column: 16, scope: !4731)
!4738 = !DILocation(line: 681, column: 29, scope: !4731)
!4739 = !DILocation(line: 681, column: 33, scope: !4731)
!4740 = !DILocation(line: 681, column: 9, scope: !4731)
!4741 = !DILocation(line: 682, column: 9, scope: !4731)
!4742 = !DILocation(line: 683, column: 2, scope: !4731)
!4743 = !DILocation(line: 685, column: 12, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 684, column: 7)
!4745 = !DILocation(line: 685, column: 16, scope: !4744)
!4746 = !DILocation(line: 685, column: 9, scope: !4744)
!4747 = !DILocation(line: 686, column: 12, scope: !4744)
!4748 = !DILocation(line: 686, column: 16, scope: !4744)
!4749 = !DILocation(line: 686, column: 9, scope: !4744)
!4750 = !DILocation(line: 687, column: 12, scope: !4744)
!4751 = !DILocation(line: 687, column: 16, scope: !4744)
!4752 = !DILocation(line: 687, column: 9, scope: !4744)
!4753 = !DILocation(line: 689, column: 10, scope: !4694)
!4754 = !DILocation(line: 689, column: 17, scope: !4694)
!4755 = !DILocation(line: 689, column: 24, scope: !4694)
!4756 = !DILocation(line: 689, column: 7, scope: !4694)
!4757 = !DILocation(line: 690, column: 10, scope: !4694)
!4758 = !DILocation(line: 690, column: 17, scope: !4694)
!4759 = !DILocation(line: 690, column: 24, scope: !4694)
!4760 = !DILocation(line: 690, column: 7, scope: !4694)
!4761 = !DILocation(line: 691, column: 9, scope: !4694)
!4762 = !DILocation(line: 691, column: 15, scope: !4694)
!4763 = !DILocation(line: 691, column: 18, scope: !4694)
!4764 = !DILocation(line: 691, column: 33, scope: !4694)
!4765 = !DILocation(line: 691, column: 40, scope: !4694)
!4766 = !DILocation(line: 691, column: 47, scope: !4694)
!4767 = !DILocation(line: 691, column: 7, scope: !4694)
!4768 = !DILocation(line: 693, column: 6, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4694, file: !3, line: 693, column: 6)
!4770 = !DILocation(line: 693, column: 12, scope: !4769)
!4771 = !DILocation(line: 693, column: 20, scope: !4769)
!4772 = !DILocation(line: 693, column: 17, scope: !4769)
!4773 = !DILocation(line: 693, column: 6, scope: !4694)
!4774 = !DILocation(line: 697, column: 15, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4769, file: !3, line: 693, column: 30)
!4776 = !DILocation(line: 697, column: 21, scope: !4775)
!4777 = !DILocation(line: 697, column: 27, scope: !4775)
!4778 = !DILocation(line: 697, column: 3, scope: !4775)
!4779 = !DILocation(line: 698, column: 36, scope: !4775)
!4780 = !DILocation(line: 698, column: 43, scope: !4775)
!4781 = !DILocation(line: 698, column: 50, scope: !4775)
!4782 = !DILocation(line: 698, column: 57, scope: !4775)
!4783 = !DILocation(line: 698, column: 48, scope: !4775)
!4784 = !DILocation(line: 698, column: 3, scope: !4775)
!4785 = !DILocation(line: 699, column: 2, scope: !4775)
!4786 = !DILocation(line: 702, column: 9, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4694, file: !3, line: 702, column: 2)
!4788 = !DILocation(line: 702, column: 7, scope: !4787)
!4789 = !DILocation(line: 702, column: 22, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4787, file: !3, line: 702, column: 2)
!4791 = !DILocation(line: 702, column: 28, scope: !4790)
!4792 = !DILocation(line: 702, column: 34, scope: !4790)
!4793 = !DILocation(line: 702, column: 40, scope: !4790)
!4794 = !DILocation(line: 702, column: 15, scope: !4790)
!4795 = !DILocation(line: 702, column: 46, scope: !4790)
!4796 = !DILocation(line: 702, column: 51, scope: !4790)
!4797 = !DILocation(line: 702, column: 55, scope: !4790)
!4798 = !DILocation(line: 702, column: 60, scope: !4790)
!4799 = !DILocation(line: 702, column: 70, scope: !4790)
!4800 = !DILocation(line: 702, column: 76, scope: !4790)
!4801 = !DILocation(line: 702, column: 82, scope: !4790)
!4802 = !DILocation(line: 702, column: 88, scope: !4790)
!4803 = !DILocation(line: 702, column: 63, scope: !4790)
!4804 = !DILocation(line: 702, column: 94, scope: !4790)
!4805 = !DILocation(line: 0, scope: !4790)
!4806 = !DILocation(line: 702, column: 2, scope: !4787)
!4807 = !DILocation(line: 703, column: 11, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4790, file: !3, line: 702, column: 107)
!4809 = !DILocation(line: 703, column: 15, scope: !4808)
!4810 = !DILocation(line: 703, column: 13, scope: !4808)
!4811 = !DILocation(line: 703, column: 3, scope: !4808)
!4812 = !DILocation(line: 705, column: 17, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4808, file: !3, line: 703, column: 21)
!4814 = !DILocation(line: 705, column: 23, scope: !4813)
!4815 = !DILocation(line: 705, column: 29, scope: !4813)
!4816 = !DILocation(line: 705, column: 35, scope: !4813)
!4817 = !DILocation(line: 705, column: 5, scope: !4813)
!4818 = !DILocation(line: 706, column: 38, scope: !4813)
!4819 = !DILocation(line: 706, column: 45, scope: !4813)
!4820 = !DILocation(line: 706, column: 52, scope: !4813)
!4821 = !DILocation(line: 706, column: 59, scope: !4813)
!4822 = !DILocation(line: 706, column: 50, scope: !4813)
!4823 = !DILocation(line: 706, column: 5, scope: !4813)
!4824 = !DILocation(line: 707, column: 5, scope: !4813)
!4825 = !DILocation(line: 709, column: 17, scope: !4813)
!4826 = !DILocation(line: 709, column: 23, scope: !4813)
!4827 = !DILocation(line: 709, column: 29, scope: !4813)
!4828 = !DILocation(line: 709, column: 35, scope: !4813)
!4829 = !DILocation(line: 709, column: 5, scope: !4813)
!4830 = !DILocation(line: 710, column: 38, scope: !4813)
!4831 = !DILocation(line: 710, column: 45, scope: !4813)
!4832 = !DILocation(line: 710, column: 52, scope: !4813)
!4833 = !DILocation(line: 710, column: 59, scope: !4813)
!4834 = !DILocation(line: 710, column: 50, scope: !4813)
!4835 = !DILocation(line: 710, column: 5, scope: !4813)
!4836 = !DILocation(line: 711, column: 5, scope: !4813)
!4837 = !DILocation(line: 713, column: 9, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4813, file: !3, line: 713, column: 9)
!4839 = !DILocation(line: 713, column: 9, scope: !4813)
!4840 = !DILocation(line: 714, column: 18, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4838, file: !3, line: 713, column: 15)
!4842 = !DILocation(line: 714, column: 24, scope: !4841)
!4843 = !DILocation(line: 714, column: 30, scope: !4841)
!4844 = !DILocation(line: 714, column: 36, scope: !4841)
!4845 = !DILocation(line: 714, column: 6, scope: !4841)
!4846 = !DILocation(line: 715, column: 39, scope: !4841)
!4847 = !DILocation(line: 715, column: 46, scope: !4841)
!4848 = !DILocation(line: 715, column: 53, scope: !4841)
!4849 = !DILocation(line: 715, column: 60, scope: !4841)
!4850 = !DILocation(line: 715, column: 51, scope: !4841)
!4851 = !DILocation(line: 715, column: 6, scope: !4841)
!4852 = !DILocation(line: 716, column: 5, scope: !4841)
!4853 = !DILocation(line: 717, column: 5, scope: !4813)
!4854 = !DILocation(line: 719, column: 2, scope: !4808)
!4855 = !DILocation(line: 702, column: 103, scope: !4790)
!4856 = !DILocation(line: 702, column: 2, scope: !4790)
!4857 = distinct !{!4857, !4806, !4858}
!4858 = !DILocation(line: 719, column: 2, scope: !4787)
!4859 = !DILocation(line: 721, column: 2, scope: !4694)
!4860 = distinct !DISubprogram(name: "BKE_mesh_uv_cdlayer_rename", scope: !3, file: !3, line: 724, type: !4861, scopeLine: 725, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!4861 = !DISubroutineType(types: !4862)
!4862 = !{!1203, !441, !2415, !2415, !1203}
!4863 = !DILocalVariable(name: "me", arg: 1, scope: !4860, file: !3, line: 724, type: !441)
!4864 = !DILocation(line: 724, column: 39, scope: !4860)
!4865 = !DILocalVariable(name: "old_name", arg: 2, scope: !4860, file: !3, line: 724, type: !2415)
!4866 = !DILocation(line: 724, column: 55, scope: !4860)
!4867 = !DILocalVariable(name: "new_name", arg: 3, scope: !4860, file: !3, line: 724, type: !2415)
!4868 = !DILocation(line: 724, column: 77, scope: !4860)
!4869 = !DILocalVariable(name: "do_tessface", arg: 4, scope: !4860, file: !3, line: 724, type: !1203)
!4870 = !DILocation(line: 724, column: 92, scope: !4860)
!4871 = !DILocalVariable(name: "pdata", scope: !4860, file: !3, line: 726, type: !22)
!4872 = !DILocation(line: 726, column: 14, scope: !4860)
!4873 = !DILocalVariable(name: "ldata", scope: !4860, file: !3, line: 726, type: !22)
!4874 = !DILocation(line: 726, column: 22, scope: !4860)
!4875 = !DILocalVariable(name: "fdata", scope: !4860, file: !3, line: 726, type: !22)
!4876 = !DILocation(line: 726, column: 30, scope: !4860)
!4877 = !DILocation(line: 727, column: 6, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4860, file: !3, line: 727, column: 6)
!4879 = !DILocation(line: 727, column: 10, scope: !4878)
!4880 = !DILocation(line: 727, column: 6, scope: !4860)
!4881 = !DILocation(line: 728, column: 12, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4878, file: !3, line: 727, column: 23)
!4883 = !DILocation(line: 728, column: 16, scope: !4882)
!4884 = !DILocation(line: 728, column: 29, scope: !4882)
!4885 = !DILocation(line: 728, column: 33, scope: !4882)
!4886 = !DILocation(line: 728, column: 9, scope: !4882)
!4887 = !DILocation(line: 729, column: 12, scope: !4882)
!4888 = !DILocation(line: 729, column: 16, scope: !4882)
!4889 = !DILocation(line: 729, column: 29, scope: !4882)
!4890 = !DILocation(line: 729, column: 33, scope: !4882)
!4891 = !DILocation(line: 729, column: 9, scope: !4882)
!4892 = !DILocation(line: 731, column: 9, scope: !4882)
!4893 = !DILocation(line: 732, column: 15, scope: !4882)
!4894 = !DILocation(line: 733, column: 2, scope: !4882)
!4895 = !DILocation(line: 735, column: 12, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4878, file: !3, line: 734, column: 7)
!4897 = !DILocation(line: 735, column: 16, scope: !4896)
!4898 = !DILocation(line: 735, column: 9, scope: !4896)
!4899 = !DILocation(line: 736, column: 12, scope: !4896)
!4900 = !DILocation(line: 736, column: 16, scope: !4896)
!4901 = !DILocation(line: 736, column: 9, scope: !4896)
!4902 = !DILocation(line: 737, column: 12, scope: !4896)
!4903 = !DILocation(line: 737, column: 16, scope: !4896)
!4904 = !DILocation(line: 737, column: 9, scope: !4896)
!4905 = !DILocation(line: 738, column: 18, scope: !4896)
!4906 = !DILocation(line: 738, column: 30, scope: !4896)
!4907 = !DILocation(line: 738, column: 33, scope: !4896)
!4908 = !DILocation(line: 738, column: 40, scope: !4896)
!4909 = !DILocation(line: 0, scope: !4896)
!4910 = !DILocation(line: 738, column: 17, scope: !4896)
!4911 = !DILocation(line: 738, column: 15, scope: !4896)
!4912 = !DILocalVariable(name: "pidx_start", scope: !4913, file: !3, line: 742, type: !4039)
!4913 = distinct !DILexicalBlock(scope: !4860, file: !3, line: 741, column: 2)
!4914 = !DILocation(line: 742, column: 13, scope: !4913)
!4915 = !DILocation(line: 742, column: 53, scope: !4913)
!4916 = !DILocation(line: 742, column: 26, scope: !4913)
!4917 = !DILocalVariable(name: "lidx_start", scope: !4913, file: !3, line: 743, type: !4039)
!4918 = !DILocation(line: 743, column: 13, scope: !4913)
!4919 = !DILocation(line: 743, column: 53, scope: !4913)
!4920 = !DILocation(line: 743, column: 26, scope: !4913)
!4921 = !DILocalVariable(name: "fidx_start", scope: !4913, file: !3, line: 744, type: !4039)
!4922 = !DILocation(line: 744, column: 13, scope: !4913)
!4923 = !DILocation(line: 744, column: 26, scope: !4913)
!4924 = !DILocation(line: 744, column: 67, scope: !4913)
!4925 = !DILocation(line: 744, column: 40, scope: !4913)
!4926 = !DILocalVariable(name: "pidx", scope: !4913, file: !3, line: 745, type: !6)
!4927 = !DILocation(line: 745, column: 7, scope: !4913)
!4928 = !DILocation(line: 745, column: 41, scope: !4913)
!4929 = !DILocation(line: 745, column: 61, scope: !4913)
!4930 = !DILocation(line: 745, column: 14, scope: !4913)
!4931 = !DILocalVariable(name: "lidx", scope: !4913, file: !3, line: 746, type: !6)
!4932 = !DILocation(line: 746, column: 7, scope: !4913)
!4933 = !DILocation(line: 746, column: 41, scope: !4913)
!4934 = !DILocation(line: 746, column: 60, scope: !4913)
!4935 = !DILocation(line: 746, column: 14, scope: !4913)
!4936 = !DILocalVariable(name: "fidx", scope: !4913, file: !3, line: 747, type: !6)
!4937 = !DILocation(line: 747, column: 7, scope: !4913)
!4938 = !DILocation(line: 747, column: 14, scope: !4913)
!4939 = !DILocation(line: 747, column: 55, scope: !4913)
!4940 = !DILocation(line: 747, column: 73, scope: !4913)
!4941 = !DILocation(line: 747, column: 28, scope: !4913)
!4942 = !DILocation(line: 752, column: 7, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4913, file: !3, line: 752, column: 7)
!4944 = !DILocation(line: 752, column: 12, scope: !4943)
!4945 = !DILocation(line: 752, column: 7, scope: !4913)
!4946 = !DILocation(line: 753, column: 8, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4948, file: !3, line: 753, column: 8)
!4948 = distinct !DILexicalBlock(scope: !4943, file: !3, line: 752, column: 19)
!4949 = !DILocation(line: 753, column: 13, scope: !4947)
!4950 = !DILocation(line: 753, column: 8, scope: !4948)
!4951 = !DILocation(line: 754, column: 9, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4953, file: !3, line: 754, column: 9)
!4953 = distinct !DILexicalBlock(scope: !4947, file: !3, line: 753, column: 20)
!4954 = !DILocation(line: 754, column: 14, scope: !4952)
!4955 = !DILocation(line: 754, column: 9, scope: !4953)
!4956 = !DILocation(line: 756, column: 6, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4952, file: !3, line: 754, column: 21)
!4958 = !DILocation(line: 759, column: 13, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4952, file: !3, line: 758, column: 10)
!4960 = !DILocation(line: 759, column: 11, scope: !4959)
!4961 = !DILocation(line: 761, column: 4, scope: !4953)
!4962 = !DILocation(line: 762, column: 11, scope: !4948)
!4963 = !DILocation(line: 762, column: 9, scope: !4948)
!4964 = !DILocation(line: 763, column: 3, scope: !4948)
!4965 = !DILocation(line: 765, column: 8, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 765, column: 8)
!4967 = distinct !DILexicalBlock(scope: !4943, file: !3, line: 764, column: 8)
!4968 = !DILocation(line: 765, column: 13, scope: !4966)
!4969 = !DILocation(line: 765, column: 8, scope: !4967)
!4970 = !DILocation(line: 766, column: 12, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4966, file: !3, line: 765, column: 20)
!4972 = !DILocation(line: 766, column: 10, scope: !4971)
!4973 = !DILocation(line: 767, column: 4, scope: !4971)
!4974 = !DILocation(line: 768, column: 8, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 768, column: 8)
!4976 = !DILocation(line: 768, column: 13, scope: !4975)
!4977 = !DILocation(line: 768, column: 19, scope: !4975)
!4978 = !DILocation(line: 768, column: 22, scope: !4975)
!4979 = !DILocation(line: 768, column: 8, scope: !4967)
!4980 = !DILocation(line: 769, column: 12, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4975, file: !3, line: 768, column: 35)
!4982 = !DILocation(line: 769, column: 10, scope: !4981)
!4983 = !DILocation(line: 770, column: 4, scope: !4981)
!4984 = !DILocation(line: 780, column: 11, scope: !4913)
!4985 = !DILocation(line: 780, column: 8, scope: !4913)
!4986 = !DILocation(line: 781, column: 11, scope: !4913)
!4987 = !DILocation(line: 781, column: 8, scope: !4913)
!4988 = !DILocation(line: 782, column: 7, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4913, file: !3, line: 782, column: 7)
!4990 = !DILocation(line: 782, column: 12, scope: !4989)
!4991 = !DILocation(line: 782, column: 7, scope: !4913)
!4992 = !DILocation(line: 783, column: 12, scope: !4989)
!4993 = !DILocation(line: 783, column: 9, scope: !4989)
!4994 = !DILocation(line: 783, column: 4, scope: !4989)
!4995 = !DILocation(line: 785, column: 43, scope: !4913)
!4996 = !DILocation(line: 785, column: 47, scope: !4913)
!4997 = !DILocation(line: 785, column: 53, scope: !4913)
!4998 = !DILocation(line: 785, column: 59, scope: !4913)
!4999 = !DILocation(line: 785, column: 65, scope: !4913)
!5000 = !DILocation(line: 785, column: 75, scope: !4913)
!5001 = !DILocation(line: 785, column: 10, scope: !4913)
!5002 = !DILocation(line: 785, column: 3, scope: !4913)
!5003 = !DILocation(line: 787, column: 1, scope: !4860)
!5004 = distinct !DISubprogram(name: "BKE_mesh_boundbox_calc", scope: !3, file: !3, line: 789, type: !5005, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!5005 = !DISubroutineType(types: !5006)
!5006 = !{null, !441, !1172, !1172}
!5007 = !DILocalVariable(name: "me", arg: 1, scope: !5004, file: !3, line: 789, type: !441)
!5008 = !DILocation(line: 789, column: 35, scope: !5004)
!5009 = !DILocalVariable(name: "r_loc", arg: 2, scope: !5004, file: !3, line: 789, type: !1172)
!5010 = !DILocation(line: 789, column: 45, scope: !5004)
!5011 = !DILocalVariable(name: "r_size", arg: 3, scope: !5004, file: !3, line: 789, type: !1172)
!5012 = !DILocation(line: 789, column: 61, scope: !5004)
!5013 = !DILocalVariable(name: "bb", scope: !5004, file: !3, line: 791, type: !5014)
!5014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5015, size: 64)
!5015 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoundBox", file: !197, line: 100, baseType: !453)
!5016 = !DILocation(line: 791, column: 12, scope: !5004)
!5017 = !DILocalVariable(name: "min", scope: !5004, file: !3, line: 792, type: !565)
!5018 = !DILocation(line: 792, column: 8, scope: !5004)
!5019 = !DILocalVariable(name: "max", scope: !5004, file: !3, line: 792, type: !565)
!5020 = !DILocation(line: 792, column: 16, scope: !5004)
!5021 = !DILocalVariable(name: "mloc", scope: !5004, file: !3, line: 793, type: !565)
!5022 = !DILocation(line: 793, column: 8, scope: !5004)
!5023 = !DILocalVariable(name: "msize", scope: !5004, file: !3, line: 793, type: !565)
!5024 = !DILocation(line: 793, column: 17, scope: !5004)
!5025 = !DILocation(line: 795, column: 6, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 795, column: 6)
!5027 = !DILocation(line: 795, column: 10, scope: !5026)
!5028 = !DILocation(line: 795, column: 13, scope: !5026)
!5029 = !DILocation(line: 795, column: 6, scope: !5004)
!5030 = !DILocation(line: 795, column: 31, scope: !5026)
!5031 = !DILocation(line: 795, column: 22, scope: !5026)
!5032 = !DILocation(line: 795, column: 26, scope: !5026)
!5033 = !DILocation(line: 795, column: 29, scope: !5026)
!5034 = !DILocation(line: 796, column: 7, scope: !5004)
!5035 = !DILocation(line: 796, column: 11, scope: !5004)
!5036 = !DILocation(line: 796, column: 5, scope: !5004)
!5037 = !DILocation(line: 798, column: 7, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 798, column: 6)
!5039 = !DILocation(line: 798, column: 6, scope: !5004)
!5040 = !DILocation(line: 798, column: 22, scope: !5038)
!5041 = !DILocation(line: 798, column: 20, scope: !5038)
!5042 = !DILocation(line: 798, column: 14, scope: !5038)
!5043 = !DILocation(line: 799, column: 7, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 799, column: 6)
!5045 = !DILocation(line: 799, column: 6, scope: !5004)
!5046 = !DILocation(line: 799, column: 24, scope: !5044)
!5047 = !DILocation(line: 799, column: 22, scope: !5044)
!5048 = !DILocation(line: 799, column: 15, scope: !5044)
!5049 = !DILocation(line: 801, column: 2, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 801, column: 2)
!5051 = !DILocation(line: 802, column: 23, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 802, column: 6)
!5053 = !DILocation(line: 802, column: 27, scope: !5052)
!5054 = !DILocation(line: 802, column: 32, scope: !5052)
!5055 = !DILocation(line: 802, column: 7, scope: !5052)
!5056 = !DILocation(line: 802, column: 6, scope: !5004)
!5057 = !DILocation(line: 803, column: 21, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5052, file: !3, line: 802, column: 38)
!5059 = !DILocation(line: 803, column: 28, scope: !5058)
!5060 = !DILocation(line: 803, column: 12, scope: !5058)
!5061 = !DILocation(line: 803, column: 19, scope: !5058)
!5062 = !DILocation(line: 803, column: 3, scope: !5058)
!5063 = !DILocation(line: 803, column: 10, scope: !5058)
!5064 = !DILocation(line: 804, column: 21, scope: !5058)
!5065 = !DILocation(line: 804, column: 28, scope: !5058)
!5066 = !DILocation(line: 804, column: 12, scope: !5058)
!5067 = !DILocation(line: 804, column: 19, scope: !5058)
!5068 = !DILocation(line: 804, column: 3, scope: !5058)
!5069 = !DILocation(line: 804, column: 10, scope: !5058)
!5070 = !DILocation(line: 805, column: 2, scope: !5058)
!5071 = !DILocation(line: 807, column: 14, scope: !5004)
!5072 = !DILocation(line: 807, column: 21, scope: !5004)
!5073 = !DILocation(line: 807, column: 26, scope: !5004)
!5074 = !DILocation(line: 807, column: 2, scope: !5004)
!5075 = !DILocation(line: 809, column: 15, scope: !5004)
!5076 = !DILocation(line: 809, column: 24, scope: !5004)
!5077 = !DILocation(line: 809, column: 22, scope: !5004)
!5078 = !DILocation(line: 809, column: 32, scope: !5004)
!5079 = !DILocation(line: 809, column: 2, scope: !5004)
!5080 = !DILocation(line: 809, column: 12, scope: !5004)
!5081 = !DILocation(line: 810, column: 15, scope: !5004)
!5082 = !DILocation(line: 810, column: 24, scope: !5004)
!5083 = !DILocation(line: 810, column: 22, scope: !5004)
!5084 = !DILocation(line: 810, column: 32, scope: !5004)
!5085 = !DILocation(line: 810, column: 2, scope: !5004)
!5086 = !DILocation(line: 810, column: 12, scope: !5004)
!5087 = !DILocation(line: 811, column: 15, scope: !5004)
!5088 = !DILocation(line: 811, column: 24, scope: !5004)
!5089 = !DILocation(line: 811, column: 22, scope: !5004)
!5090 = !DILocation(line: 811, column: 32, scope: !5004)
!5091 = !DILocation(line: 811, column: 2, scope: !5004)
!5092 = !DILocation(line: 811, column: 12, scope: !5004)
!5093 = !DILocation(line: 813, column: 32, scope: !5004)
!5094 = !DILocation(line: 813, column: 36, scope: !5004)
!5095 = !DILocation(line: 813, column: 41, scope: !5004)
!5096 = !DILocation(line: 813, column: 2, scope: !5004)
!5097 = !DILocation(line: 815, column: 2, scope: !5004)
!5098 = !DILocation(line: 815, column: 6, scope: !5004)
!5099 = !DILocation(line: 815, column: 11, scope: !5004)
!5100 = !DILocation(line: 816, column: 1, scope: !5004)
!5101 = distinct !DISubprogram(name: "BKE_mesh_minmax", scope: !3, file: !3, line: 1861, type: !5102, scopeLine: 1862, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!5102 = !DISubroutineType(types: !5103)
!5103 = !{!1203, !441, !1172, !1172}
!5104 = !DILocalVariable(name: "me", arg: 1, scope: !5101, file: !3, line: 1861, type: !441)
!5105 = !DILocation(line: 1861, column: 28, scope: !5101)
!5106 = !DILocalVariable(name: "r_min", arg: 2, scope: !5101, file: !3, line: 1861, type: !1172)
!5107 = !DILocation(line: 1861, column: 38, scope: !5101)
!5108 = !DILocalVariable(name: "r_max", arg: 3, scope: !5101, file: !3, line: 1861, type: !1172)
!5109 = !DILocation(line: 1861, column: 54, scope: !5101)
!5110 = !DILocalVariable(name: "i", scope: !5101, file: !3, line: 1863, type: !6)
!5111 = !DILocation(line: 1863, column: 6, scope: !5101)
!5112 = !DILocation(line: 1863, column: 10, scope: !5101)
!5113 = !DILocation(line: 1863, column: 14, scope: !5101)
!5114 = !DILocalVariable(name: "mvert", scope: !5101, file: !3, line: 1864, type: !2524)
!5115 = !DILocation(line: 1864, column: 9, scope: !5101)
!5116 = !DILocation(line: 1865, column: 15, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 1865, column: 2)
!5118 = !DILocation(line: 1865, column: 19, scope: !5117)
!5119 = !DILocation(line: 1865, column: 13, scope: !5117)
!5120 = !DILocation(line: 1865, column: 7, scope: !5117)
!5121 = !DILocation(line: 1865, column: 27, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5117, file: !3, line: 1865, column: 2)
!5123 = !DILocation(line: 1865, column: 2, scope: !5117)
!5124 = !DILocation(line: 1866, column: 18, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5122, file: !3, line: 1865, column: 40)
!5126 = !DILocation(line: 1866, column: 25, scope: !5125)
!5127 = !DILocation(line: 1866, column: 32, scope: !5125)
!5128 = !DILocation(line: 1866, column: 39, scope: !5125)
!5129 = !DILocation(line: 1866, column: 3, scope: !5125)
!5130 = !DILocation(line: 1867, column: 2, scope: !5125)
!5131 = !DILocation(line: 1865, column: 36, scope: !5122)
!5132 = !DILocation(line: 1865, column: 2, scope: !5122)
!5133 = distinct !{!5133, !5123, !5134}
!5134 = !DILocation(line: 1867, column: 2, scope: !5117)
!5135 = !DILocation(line: 1869, column: 10, scope: !5101)
!5136 = !DILocation(line: 1869, column: 14, scope: !5101)
!5137 = !DILocation(line: 1869, column: 22, scope: !5101)
!5138 = !DILocation(line: 1869, column: 9, scope: !5101)
!5139 = !DILocation(line: 1869, column: 2, scope: !5101)
!5140 = distinct !DISubprogram(name: "BKE_mesh_texspace_calc", scope: !3, file: !3, line: 818, type: !3460, scopeLine: 819, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!5141 = !DILocalVariable(name: "me", arg: 1, scope: !5140, file: !3, line: 818, type: !441)
!5142 = !DILocation(line: 818, column: 35, scope: !5140)
!5143 = !DILocalVariable(name: "loc", scope: !5140, file: !3, line: 820, type: !565)
!5144 = !DILocation(line: 820, column: 8, scope: !5140)
!5145 = !DILocalVariable(name: "size", scope: !5140, file: !3, line: 820, type: !565)
!5146 = !DILocation(line: 820, column: 16, scope: !5140)
!5147 = !DILocalVariable(name: "a", scope: !5140, file: !3, line: 821, type: !6)
!5148 = !DILocation(line: 821, column: 6, scope: !5140)
!5149 = !DILocation(line: 823, column: 25, scope: !5140)
!5150 = !DILocation(line: 823, column: 29, scope: !5140)
!5151 = !DILocation(line: 823, column: 34, scope: !5140)
!5152 = !DILocation(line: 823, column: 2, scope: !5140)
!5153 = !DILocation(line: 825, column: 6, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 825, column: 6)
!5155 = !DILocation(line: 825, column: 10, scope: !5154)
!5156 = !DILocation(line: 825, column: 18, scope: !5154)
!5157 = !DILocation(line: 825, column: 6, scope: !5140)
!5158 = !DILocation(line: 826, column: 10, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5160, file: !3, line: 826, column: 3)
!5160 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 825, column: 34)
!5161 = !DILocation(line: 826, column: 8, scope: !5159)
!5162 = !DILocation(line: 826, column: 15, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 826, column: 3)
!5164 = !DILocation(line: 826, column: 17, scope: !5163)
!5165 = !DILocation(line: 826, column: 3, scope: !5159)
!5166 = !DILocation(line: 827, column: 13, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5168, file: !3, line: 827, column: 8)
!5168 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 826, column: 27)
!5169 = !DILocation(line: 827, column: 8, scope: !5167)
!5170 = !DILocation(line: 827, column: 16, scope: !5167)
!5171 = !DILocation(line: 827, column: 8, scope: !5168)
!5172 = !DILocation(line: 827, column: 30, scope: !5167)
!5173 = !DILocation(line: 827, column: 25, scope: !5167)
!5174 = !DILocation(line: 827, column: 33, scope: !5167)
!5175 = !DILocation(line: 828, column: 18, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5167, file: !3, line: 828, column: 13)
!5177 = !DILocation(line: 828, column: 13, scope: !5176)
!5178 = !DILocation(line: 828, column: 21, scope: !5176)
!5179 = !DILocation(line: 828, column: 28, scope: !5176)
!5180 = !DILocation(line: 828, column: 36, scope: !5176)
!5181 = !DILocation(line: 828, column: 31, scope: !5176)
!5182 = !DILocation(line: 828, column: 39, scope: !5176)
!5183 = !DILocation(line: 828, column: 13, scope: !5167)
!5184 = !DILocation(line: 828, column: 56, scope: !5176)
!5185 = !DILocation(line: 828, column: 51, scope: !5176)
!5186 = !DILocation(line: 828, column: 59, scope: !5176)
!5187 = !DILocation(line: 829, column: 18, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 829, column: 13)
!5189 = !DILocation(line: 829, column: 13, scope: !5188)
!5190 = !DILocation(line: 829, column: 21, scope: !5188)
!5191 = !DILocation(line: 829, column: 28, scope: !5188)
!5192 = !DILocation(line: 829, column: 36, scope: !5188)
!5193 = !DILocation(line: 829, column: 31, scope: !5188)
!5194 = !DILocation(line: 829, column: 39, scope: !5188)
!5195 = !DILocation(line: 829, column: 13, scope: !5176)
!5196 = !DILocation(line: 829, column: 57, scope: !5188)
!5197 = !DILocation(line: 829, column: 52, scope: !5188)
!5198 = !DILocation(line: 829, column: 60, scope: !5188)
!5199 = !DILocation(line: 830, column: 3, scope: !5168)
!5200 = !DILocation(line: 826, column: 23, scope: !5163)
!5201 = !DILocation(line: 826, column: 3, scope: !5163)
!5202 = distinct !{!5202, !5165, !5203}
!5203 = !DILocation(line: 830, column: 3, scope: !5159)
!5204 = !DILocation(line: 832, column: 14, scope: !5160)
!5205 = !DILocation(line: 832, column: 18, scope: !5160)
!5206 = !DILocation(line: 832, column: 23, scope: !5160)
!5207 = !DILocation(line: 832, column: 3, scope: !5160)
!5208 = !DILocation(line: 833, column: 14, scope: !5160)
!5209 = !DILocation(line: 833, column: 18, scope: !5160)
!5210 = !DILocation(line: 833, column: 24, scope: !5160)
!5211 = !DILocation(line: 833, column: 3, scope: !5160)
!5212 = !DILocation(line: 834, column: 11, scope: !5160)
!5213 = !DILocation(line: 834, column: 15, scope: !5160)
!5214 = !DILocation(line: 834, column: 3, scope: !5160)
!5215 = !DILocation(line: 835, column: 2, scope: !5160)
!5216 = !DILocation(line: 836, column: 1, scope: !5140)
!5217 = distinct !DISubprogram(name: "copy_v3_v3", scope: !5218, file: !5218, line: 64, type: !5219, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!5218 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5219 = !DISubroutineType(types: !5220)
!5220 = !{null, !1172, !1146}
!5221 = !DILocalVariable(name: "r", arg: 1, scope: !5217, file: !5218, line: 64, type: !1172)
!5222 = !DILocation(line: 64, column: 31, scope: !5217)
!5223 = !DILocalVariable(name: "a", arg: 2, scope: !5217, file: !5218, line: 64, type: !1146)
!5224 = !DILocation(line: 64, column: 49, scope: !5217)
!5225 = !DILocation(line: 66, column: 9, scope: !5217)
!5226 = !DILocation(line: 66, column: 2, scope: !5217)
!5227 = !DILocation(line: 66, column: 7, scope: !5217)
!5228 = !DILocation(line: 67, column: 9, scope: !5217)
!5229 = !DILocation(line: 67, column: 2, scope: !5217)
!5230 = !DILocation(line: 67, column: 7, scope: !5217)
!5231 = !DILocation(line: 68, column: 9, scope: !5217)
!5232 = !DILocation(line: 68, column: 2, scope: !5217)
!5233 = !DILocation(line: 68, column: 7, scope: !5217)
!5234 = !DILocation(line: 69, column: 1, scope: !5217)
!5235 = distinct !DISubprogram(name: "zero_v3", scope: !5218, file: !5218, line: 43, type: !5236, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!5236 = !DISubroutineType(types: !5237)
!5237 = !{null, !1172}
!5238 = !DILocalVariable(name: "r", arg: 1, scope: !5235, file: !5218, line: 43, type: !1172)
!5239 = !DILocation(line: 43, column: 28, scope: !5235)
!5240 = !DILocation(line: 45, column: 2, scope: !5235)
!5241 = !DILocation(line: 45, column: 7, scope: !5235)
!5242 = !DILocation(line: 46, column: 2, scope: !5235)
!5243 = !DILocation(line: 46, column: 7, scope: !5235)
!5244 = !DILocation(line: 47, column: 2, scope: !5235)
!5245 = !DILocation(line: 47, column: 7, scope: !5235)
!5246 = !DILocation(line: 48, column: 1, scope: !5235)
!5247 = distinct !DISubprogram(name: "BKE_mesh_boundbox_get", scope: !3, file: !3, line: 838, type: !5248, scopeLine: 839, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!5248 = !DISubroutineType(types: !5249)
!5249 = !{!452, !4322}
!5250 = !DILocalVariable(name: "ob", arg: 1, scope: !5247, file: !3, line: 838, type: !4322)
!5251 = !DILocation(line: 838, column: 41, scope: !5247)
!5252 = !DILocalVariable(name: "me", scope: !5247, file: !3, line: 840, type: !441)
!5253 = !DILocation(line: 840, column: 8, scope: !5247)
!5254 = !DILocation(line: 840, column: 13, scope: !5247)
!5255 = !DILocation(line: 840, column: 17, scope: !5247)
!5256 = !DILocation(line: 842, column: 6, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5247, file: !3, line: 842, column: 6)
!5258 = !DILocation(line: 842, column: 10, scope: !5257)
!5259 = !DILocation(line: 842, column: 6, scope: !5247)
!5260 = !DILocation(line: 843, column: 10, scope: !5257)
!5261 = !DILocation(line: 843, column: 14, scope: !5257)
!5262 = !DILocation(line: 843, column: 3, scope: !5257)
!5263 = !DILocation(line: 845, column: 6, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5247, file: !3, line: 845, column: 6)
!5265 = !DILocation(line: 845, column: 10, scope: !5264)
!5266 = !DILocation(line: 845, column: 13, scope: !5264)
!5267 = !DILocation(line: 845, column: 21, scope: !5264)
!5268 = !DILocation(line: 845, column: 25, scope: !5264)
!5269 = !DILocation(line: 845, column: 29, scope: !5264)
!5270 = !DILocation(line: 845, column: 33, scope: !5264)
!5271 = !DILocation(line: 845, column: 38, scope: !5264)
!5272 = !DILocation(line: 845, column: 6, scope: !5247)
!5273 = !DILocation(line: 846, column: 26, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5264, file: !3, line: 845, column: 57)
!5275 = !DILocation(line: 846, column: 3, scope: !5274)
!5276 = !DILocation(line: 847, column: 2, scope: !5274)
!5277 = !DILocation(line: 849, column: 9, scope: !5247)
!5278 = !DILocation(line: 849, column: 13, scope: !5247)
!5279 = !DILocation(line: 849, column: 2, scope: !5247)
!5280 = !DILocation(line: 850, column: 1, scope: !5247)
!5281 = distinct !DISubprogram(name: "BKE_mesh_texspace_get", scope: !3, file: !3, line: 852, type: !5282, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!5282 = !DISubroutineType(types: !5283)
!5283 = !{null, !441, !1172, !1172, !1172}
!5284 = !DILocalVariable(name: "me", arg: 1, scope: !5281, file: !3, line: 852, type: !441)
!5285 = !DILocation(line: 852, column: 34, scope: !5281)
!5286 = !DILocalVariable(name: "r_loc", arg: 2, scope: !5281, file: !3, line: 852, type: !1172)
!5287 = !DILocation(line: 852, column: 44, scope: !5281)
!5288 = !DILocalVariable(name: "r_rot", arg: 3, scope: !5281, file: !3, line: 852, type: !1172)
!5289 = !DILocation(line: 852, column: 60, scope: !5281)
!5290 = !DILocalVariable(name: "r_size", arg: 4, scope: !5281, file: !3, line: 852, type: !1172)
!5291 = !DILocation(line: 852, column: 76, scope: !5281)
!5292 = !DILocation(line: 854, column: 6, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 854, column: 6)
!5294 = !DILocation(line: 854, column: 10, scope: !5293)
!5295 = !DILocation(line: 854, column: 13, scope: !5293)
!5296 = !DILocation(line: 854, column: 21, scope: !5293)
!5297 = !DILocation(line: 854, column: 25, scope: !5293)
!5298 = !DILocation(line: 854, column: 29, scope: !5293)
!5299 = !DILocation(line: 854, column: 33, scope: !5293)
!5300 = !DILocation(line: 854, column: 38, scope: !5293)
!5301 = !DILocation(line: 854, column: 6, scope: !5281)
!5302 = !DILocation(line: 855, column: 26, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5293, file: !3, line: 854, column: 57)
!5304 = !DILocation(line: 855, column: 3, scope: !5303)
!5305 = !DILocation(line: 856, column: 2, scope: !5303)
!5306 = !DILocation(line: 858, column: 6, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 858, column: 6)
!5308 = !DILocation(line: 858, column: 6, scope: !5281)
!5309 = !DILocation(line: 858, column: 24, scope: !5307)
!5310 = !DILocation(line: 858, column: 32, scope: !5307)
!5311 = !DILocation(line: 858, column: 36, scope: !5307)
!5312 = !DILocation(line: 858, column: 13, scope: !5307)
!5313 = !DILocation(line: 859, column: 6, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 859, column: 6)
!5315 = !DILocation(line: 859, column: 6, scope: !5281)
!5316 = !DILocation(line: 859, column: 24, scope: !5314)
!5317 = !DILocation(line: 859, column: 32, scope: !5314)
!5318 = !DILocation(line: 859, column: 36, scope: !5314)
!5319 = !DILocation(line: 859, column: 13, scope: !5314)
!5320 = !DILocation(line: 860, column: 6, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 860, column: 6)
!5322 = !DILocation(line: 860, column: 6, scope: !5281)
!5323 = !DILocation(line: 860, column: 25, scope: !5321)
!5324 = !DILocation(line: 860, column: 33, scope: !5321)
!5325 = !DILocation(line: 860, column: 37, scope: !5321)
!5326 = !DILocation(line: 860, column: 14, scope: !5321)
!5327 = !DILocation(line: 861, column: 1, scope: !5281)
!5328 = distinct !DISubprogram(name: "BKE_mesh_texspace_copy_from_object", scope: !3, file: !3, line: 863, type: !5329, scopeLine: 864, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!5329 = !DISubroutineType(types: !5330)
!5330 = !{null, !441, !4322}
!5331 = !DILocalVariable(name: "me", arg: 1, scope: !5328, file: !3, line: 863, type: !441)
!5332 = !DILocation(line: 863, column: 47, scope: !5328)
!5333 = !DILocalVariable(name: "ob", arg: 2, scope: !5328, file: !3, line: 863, type: !4322)
!5334 = !DILocation(line: 863, column: 59, scope: !5328)
!5335 = !DILocalVariable(name: "texloc", scope: !5328, file: !3, line: 865, type: !1172)
!5336 = !DILocation(line: 865, column: 9, scope: !5328)
!5337 = !DILocalVariable(name: "texrot", scope: !5328, file: !3, line: 865, type: !1172)
!5338 = !DILocation(line: 865, column: 18, scope: !5328)
!5339 = !DILocalVariable(name: "texsize", scope: !5328, file: !3, line: 865, type: !1172)
!5340 = !DILocation(line: 865, column: 27, scope: !5328)
!5341 = !DILocalVariable(name: "texflag", scope: !5328, file: !3, line: 866, type: !2537)
!5342 = !DILocation(line: 866, column: 9, scope: !5328)
!5343 = !DILocation(line: 868, column: 37, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5328, file: !3, line: 868, column: 6)
!5345 = !DILocation(line: 868, column: 6, scope: !5344)
!5346 = !DILocation(line: 868, column: 6, scope: !5328)
!5347 = !DILocation(line: 869, column: 18, scope: !5348)
!5348 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 868, column: 80)
!5349 = !DILocation(line: 869, column: 17, scope: !5348)
!5350 = !DILocation(line: 869, column: 3, scope: !5348)
!5351 = !DILocation(line: 869, column: 7, scope: !5348)
!5352 = !DILocation(line: 869, column: 15, scope: !5348)
!5353 = !DILocation(line: 870, column: 14, scope: !5348)
!5354 = !DILocation(line: 870, column: 18, scope: !5348)
!5355 = !DILocation(line: 870, column: 23, scope: !5348)
!5356 = !DILocation(line: 870, column: 3, scope: !5348)
!5357 = !DILocation(line: 871, column: 14, scope: !5348)
!5358 = !DILocation(line: 871, column: 18, scope: !5348)
!5359 = !DILocation(line: 871, column: 24, scope: !5348)
!5360 = !DILocation(line: 871, column: 3, scope: !5348)
!5361 = !DILocation(line: 872, column: 14, scope: !5348)
!5362 = !DILocation(line: 872, column: 18, scope: !5348)
!5363 = !DILocation(line: 872, column: 23, scope: !5348)
!5364 = !DILocation(line: 872, column: 3, scope: !5348)
!5365 = !DILocation(line: 873, column: 2, scope: !5348)
!5366 = !DILocation(line: 874, column: 1, scope: !5328)
!5367 = distinct !DISubprogram(name: "BKE_mesh_orco_verts_get", scope: !3, file: !3, line: 876, type: !5368, scopeLine: 877, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!5368 = !DISubroutineType(types: !5369)
!5369 = !{!1181, !4322}
!5370 = !DILocalVariable(name: "ob", arg: 1, scope: !5367, file: !3, line: 876, type: !4322)
!5371 = !DILocation(line: 876, column: 41, scope: !5367)
!5372 = !DILocalVariable(name: "me", scope: !5367, file: !3, line: 878, type: !441)
!5373 = !DILocation(line: 878, column: 8, scope: !5367)
!5374 = !DILocation(line: 878, column: 13, scope: !5367)
!5375 = !DILocation(line: 878, column: 17, scope: !5367)
!5376 = !DILocalVariable(name: "mvert", scope: !5367, file: !3, line: 879, type: !2524)
!5377 = !DILocation(line: 879, column: 9, scope: !5367)
!5378 = !DILocalVariable(name: "tme", scope: !5367, file: !3, line: 880, type: !441)
!5379 = !DILocation(line: 880, column: 8, scope: !5367)
!5380 = !DILocation(line: 880, column: 14, scope: !5367)
!5381 = !DILocation(line: 880, column: 18, scope: !5367)
!5382 = !DILocation(line: 880, column: 30, scope: !5367)
!5383 = !DILocation(line: 880, column: 34, scope: !5367)
!5384 = !DILocation(line: 880, column: 46, scope: !5367)
!5385 = !DILocalVariable(name: "a", scope: !5367, file: !3, line: 881, type: !6)
!5386 = !DILocation(line: 881, column: 6, scope: !5367)
!5387 = !DILocalVariable(name: "totvert", scope: !5367, file: !3, line: 881, type: !6)
!5388 = !DILocation(line: 881, column: 9, scope: !5367)
!5389 = !DILocalVariable(name: "vcos", scope: !5367, file: !3, line: 882, type: !1181)
!5390 = !DILocation(line: 882, column: 10, scope: !5367)
!5391 = !DILocation(line: 885, column: 9, scope: !5367)
!5392 = !DILocation(line: 885, column: 37, scope: !5367)
!5393 = !DILocation(line: 885, column: 41, scope: !5367)
!5394 = !DILocation(line: 885, column: 35, scope: !5367)
!5395 = !DILocation(line: 885, column: 7, scope: !5367)
!5396 = !DILocation(line: 886, column: 10, scope: !5367)
!5397 = !DILocation(line: 886, column: 15, scope: !5367)
!5398 = !DILocation(line: 886, column: 8, scope: !5367)
!5399 = !DILocation(line: 887, column: 19, scope: !5367)
!5400 = !DILocation(line: 887, column: 24, scope: !5367)
!5401 = !DILocation(line: 887, column: 33, scope: !5367)
!5402 = !DILocation(line: 887, column: 37, scope: !5367)
!5403 = !DILocation(line: 887, column: 12, scope: !5367)
!5404 = !DILocation(line: 887, column: 10, scope: !5367)
!5405 = !DILocation(line: 889, column: 9, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5367, file: !3, line: 889, column: 2)
!5407 = !DILocation(line: 889, column: 7, scope: !5406)
!5408 = !DILocation(line: 889, column: 14, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5406, file: !3, line: 889, column: 2)
!5410 = !DILocation(line: 889, column: 18, scope: !5409)
!5411 = !DILocation(line: 889, column: 16, scope: !5409)
!5412 = !DILocation(line: 889, column: 2, scope: !5406)
!5413 = !DILocation(line: 890, column: 14, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5409, file: !3, line: 889, column: 41)
!5415 = !DILocation(line: 890, column: 19, scope: !5414)
!5416 = !DILocation(line: 890, column: 23, scope: !5414)
!5417 = !DILocation(line: 890, column: 30, scope: !5414)
!5418 = !DILocation(line: 890, column: 3, scope: !5414)
!5419 = !DILocation(line: 891, column: 2, scope: !5414)
!5420 = !DILocation(line: 889, column: 28, scope: !5409)
!5421 = !DILocation(line: 889, column: 37, scope: !5409)
!5422 = !DILocation(line: 889, column: 2, scope: !5409)
!5423 = distinct !{!5423, !5412, !5424}
!5424 = !DILocation(line: 891, column: 2, scope: !5406)
!5425 = !DILocation(line: 893, column: 9, scope: !5367)
!5426 = !DILocation(line: 893, column: 2, scope: !5367)
!5427 = distinct !DISubprogram(name: "min_ii", scope: !5428, file: !5428, line: 211, type: !5429, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!5428 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5429 = !DISubroutineType(types: !5430)
!5430 = !{!6, !6, !6}
!5431 = !DILocalVariable(name: "a", arg: 1, scope: !5427, file: !5428, line: 211, type: !6)
!5432 = !DILocation(line: 211, column: 24, scope: !5427)
!5433 = !DILocalVariable(name: "b", arg: 2, scope: !5427, file: !5428, line: 211, type: !6)
!5434 = !DILocation(line: 211, column: 31, scope: !5427)
!5435 = !DILocation(line: 213, column: 10, scope: !5427)
!5436 = !DILocation(line: 213, column: 14, scope: !5427)
!5437 = !DILocation(line: 213, column: 12, scope: !5427)
!5438 = !DILocation(line: 213, column: 9, scope: !5427)
!5439 = !DILocation(line: 213, column: 19, scope: !5427)
!5440 = !DILocation(line: 213, column: 23, scope: !5427)
!5441 = !DILocation(line: 213, column: 2, scope: !5427)
!5442 = distinct !DISubprogram(name: "BKE_mesh_orco_verts_transform", scope: !3, file: !3, line: 896, type: !5443, scopeLine: 897, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!5443 = !DISubroutineType(types: !5444)
!5444 = !{null, !441, !1181, !6, !6}
!5445 = !DILocalVariable(name: "me", arg: 1, scope: !5442, file: !3, line: 896, type: !441)
!5446 = !DILocation(line: 896, column: 42, scope: !5442)
!5447 = !DILocalVariable(name: "orco", arg: 2, scope: !5442, file: !3, line: 896, type: !1181)
!5448 = !DILocation(line: 896, column: 54, scope: !5442)
!5449 = !DILocalVariable(name: "totvert", arg: 3, scope: !5442, file: !3, line: 896, type: !6)
!5450 = !DILocation(line: 896, column: 68, scope: !5442)
!5451 = !DILocalVariable(name: "invert", arg: 4, scope: !5442, file: !3, line: 896, type: !6)
!5452 = !DILocation(line: 896, column: 81, scope: !5442)
!5453 = !DILocalVariable(name: "loc", scope: !5442, file: !3, line: 898, type: !565)
!5454 = !DILocation(line: 898, column: 8, scope: !5442)
!5455 = !DILocalVariable(name: "size", scope: !5442, file: !3, line: 898, type: !565)
!5456 = !DILocation(line: 898, column: 16, scope: !5442)
!5457 = !DILocalVariable(name: "a", scope: !5442, file: !3, line: 899, type: !6)
!5458 = !DILocation(line: 899, column: 6, scope: !5442)
!5459 = !DILocation(line: 901, column: 24, scope: !5442)
!5460 = !DILocation(line: 901, column: 28, scope: !5442)
!5461 = !DILocation(line: 901, column: 40, scope: !5442)
!5462 = !DILocation(line: 901, column: 44, scope: !5442)
!5463 = !DILocation(line: 901, column: 56, scope: !5442)
!5464 = !DILocation(line: 901, column: 60, scope: !5442)
!5465 = !DILocation(line: 901, column: 71, scope: !5442)
!5466 = !DILocation(line: 901, column: 2, scope: !5442)
!5467 = !DILocation(line: 903, column: 6, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5442, file: !3, line: 903, column: 6)
!5469 = !DILocation(line: 903, column: 6, scope: !5442)
!5470 = !DILocation(line: 904, column: 10, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5472, file: !3, line: 904, column: 3)
!5472 = distinct !DILexicalBlock(scope: !5468, file: !3, line: 903, column: 14)
!5473 = !DILocation(line: 904, column: 8, scope: !5471)
!5474 = !DILocation(line: 904, column: 15, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5471, file: !3, line: 904, column: 3)
!5476 = !DILocation(line: 904, column: 19, scope: !5475)
!5477 = !DILocation(line: 904, column: 17, scope: !5475)
!5478 = !DILocation(line: 904, column: 3, scope: !5471)
!5479 = !DILocalVariable(name: "co", scope: !5480, file: !3, line: 905, type: !1172)
!5480 = distinct !DILexicalBlock(scope: !5475, file: !3, line: 904, column: 33)
!5481 = !DILocation(line: 905, column: 11, scope: !5480)
!5482 = !DILocation(line: 905, column: 16, scope: !5480)
!5483 = !DILocation(line: 905, column: 21, scope: !5480)
!5484 = !DILocation(line: 906, column: 19, scope: !5480)
!5485 = !DILocation(line: 906, column: 23, scope: !5480)
!5486 = !DILocation(line: 906, column: 28, scope: !5480)
!5487 = !DILocation(line: 906, column: 32, scope: !5480)
!5488 = !DILocation(line: 906, column: 4, scope: !5480)
!5489 = !DILocation(line: 907, column: 3, scope: !5480)
!5490 = !DILocation(line: 904, column: 29, scope: !5475)
!5491 = !DILocation(line: 904, column: 3, scope: !5475)
!5492 = distinct !{!5492, !5478, !5493}
!5493 = !DILocation(line: 907, column: 3, scope: !5471)
!5494 = !DILocation(line: 908, column: 2, scope: !5472)
!5495 = !DILocation(line: 910, column: 10, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5497, file: !3, line: 910, column: 3)
!5497 = distinct !DILexicalBlock(scope: !5468, file: !3, line: 909, column: 7)
!5498 = !DILocation(line: 910, column: 8, scope: !5496)
!5499 = !DILocation(line: 910, column: 15, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 910, column: 3)
!5501 = !DILocation(line: 910, column: 19, scope: !5500)
!5502 = !DILocation(line: 910, column: 17, scope: !5500)
!5503 = !DILocation(line: 910, column: 3, scope: !5496)
!5504 = !DILocalVariable(name: "co", scope: !5505, file: !3, line: 911, type: !1172)
!5505 = distinct !DILexicalBlock(scope: !5500, file: !3, line: 910, column: 33)
!5506 = !DILocation(line: 911, column: 11, scope: !5505)
!5507 = !DILocation(line: 911, column: 16, scope: !5505)
!5508 = !DILocation(line: 911, column: 21, scope: !5505)
!5509 = !DILocation(line: 912, column: 13, scope: !5505)
!5510 = !DILocation(line: 912, column: 21, scope: !5505)
!5511 = !DILocation(line: 912, column: 19, scope: !5505)
!5512 = !DILocation(line: 912, column: 31, scope: !5505)
!5513 = !DILocation(line: 912, column: 29, scope: !5505)
!5514 = !DILocation(line: 912, column: 4, scope: !5505)
!5515 = !DILocation(line: 912, column: 10, scope: !5505)
!5516 = !DILocation(line: 913, column: 13, scope: !5505)
!5517 = !DILocation(line: 913, column: 21, scope: !5505)
!5518 = !DILocation(line: 913, column: 19, scope: !5505)
!5519 = !DILocation(line: 913, column: 31, scope: !5505)
!5520 = !DILocation(line: 913, column: 29, scope: !5505)
!5521 = !DILocation(line: 913, column: 4, scope: !5505)
!5522 = !DILocation(line: 913, column: 10, scope: !5505)
!5523 = !DILocation(line: 914, column: 13, scope: !5505)
!5524 = !DILocation(line: 914, column: 21, scope: !5505)
!5525 = !DILocation(line: 914, column: 19, scope: !5505)
!5526 = !DILocation(line: 914, column: 31, scope: !5505)
!5527 = !DILocation(line: 914, column: 29, scope: !5505)
!5528 = !DILocation(line: 914, column: 4, scope: !5505)
!5529 = !DILocation(line: 914, column: 10, scope: !5505)
!5530 = !DILocation(line: 915, column: 3, scope: !5505)
!5531 = !DILocation(line: 910, column: 29, scope: !5500)
!5532 = !DILocation(line: 910, column: 3, scope: !5500)
!5533 = distinct !{!5533, !5503, !5534}
!5534 = !DILocation(line: 915, column: 3, scope: !5496)
!5535 = !DILocation(line: 917, column: 1, scope: !5442)
!5536 = distinct !DISubprogram(name: "madd_v3_v3v3v3", scope: !5218, file: !5218, line: 534, type: !5537, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!5537 = !DISubroutineType(types: !5538)
!5538 = !{null, !1172, !1146, !1146, !1146}
!5539 = !DILocalVariable(name: "r", arg: 1, scope: !5536, file: !5218, line: 534, type: !1172)
!5540 = !DILocation(line: 534, column: 35, scope: !5536)
!5541 = !DILocalVariable(name: "a", arg: 2, scope: !5536, file: !5218, line: 534, type: !1146)
!5542 = !DILocation(line: 534, column: 53, scope: !5536)
!5543 = !DILocalVariable(name: "b", arg: 3, scope: !5536, file: !5218, line: 534, type: !1146)
!5544 = !DILocation(line: 534, column: 71, scope: !5536)
!5545 = !DILocalVariable(name: "c", arg: 4, scope: !5536, file: !5218, line: 534, type: !1146)
!5546 = !DILocation(line: 534, column: 89, scope: !5536)
!5547 = !DILocation(line: 536, column: 9, scope: !5536)
!5548 = !DILocation(line: 536, column: 16, scope: !5536)
!5549 = !DILocation(line: 536, column: 23, scope: !5536)
!5550 = !DILocation(line: 536, column: 21, scope: !5536)
!5551 = !DILocation(line: 536, column: 14, scope: !5536)
!5552 = !DILocation(line: 536, column: 2, scope: !5536)
!5553 = !DILocation(line: 536, column: 7, scope: !5536)
!5554 = !DILocation(line: 537, column: 9, scope: !5536)
!5555 = !DILocation(line: 537, column: 16, scope: !5536)
!5556 = !DILocation(line: 537, column: 23, scope: !5536)
!5557 = !DILocation(line: 537, column: 21, scope: !5536)
!5558 = !DILocation(line: 537, column: 14, scope: !5536)
!5559 = !DILocation(line: 537, column: 2, scope: !5536)
!5560 = !DILocation(line: 537, column: 7, scope: !5536)
!5561 = !DILocation(line: 538, column: 9, scope: !5536)
!5562 = !DILocation(line: 538, column: 16, scope: !5536)
!5563 = !DILocation(line: 538, column: 23, scope: !5536)
!5564 = !DILocation(line: 538, column: 21, scope: !5536)
!5565 = !DILocation(line: 538, column: 14, scope: !5536)
!5566 = !DILocation(line: 538, column: 2, scope: !5536)
!5567 = !DILocation(line: 538, column: 7, scope: !5536)
!5568 = !DILocation(line: 539, column: 1, scope: !5536)
!5569 = !DILocalVariable(name: "mface", arg: 1, scope: !2, file: !3, line: 921, type: !7)
!5570 = !DILocation(line: 921, column: 28, scope: !2)
!5571 = !DILocalVariable(name: "fdata", arg: 2, scope: !2, file: !3, line: 921, type: !22)
!5572 = !DILocation(line: 921, column: 47, scope: !2)
!5573 = !DILocalVariable(name: "mfindex", arg: 3, scope: !2, file: !3, line: 921, type: !6)
!5574 = !DILocation(line: 921, column: 58, scope: !2)
!5575 = !DILocalVariable(name: "nr", arg: 4, scope: !2, file: !3, line: 921, type: !6)
!5576 = !DILocation(line: 921, column: 71, scope: !2)
!5577 = !DILocation(line: 924, column: 7, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !2, file: !3, line: 924, column: 6)
!5579 = !DILocation(line: 924, column: 14, scope: !5578)
!5580 = !DILocation(line: 924, column: 17, scope: !5578)
!5581 = !DILocation(line: 924, column: 20, scope: !5578)
!5582 = !DILocation(line: 924, column: 23, scope: !5578)
!5583 = !DILocation(line: 924, column: 29, scope: !5578)
!5584 = !DILocation(line: 924, column: 32, scope: !5578)
!5585 = !DILocation(line: 924, column: 39, scope: !5578)
!5586 = !DILocation(line: 924, column: 45, scope: !5578)
!5587 = !DILocation(line: 924, column: 52, scope: !5578)
!5588 = !DILocation(line: 924, column: 42, scope: !5578)
!5589 = !DILocation(line: 924, column: 6, scope: !2)
!5590 = !DILocation(line: 925, column: 3, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5578, file: !3, line: 924, column: 56)
!5592 = !DILocation(line: 925, column: 10, scope: !5591)
!5593 = !DILocation(line: 925, column: 13, scope: !5591)
!5594 = !DILocation(line: 926, column: 5, scope: !5591)
!5595 = !DILocation(line: 927, column: 2, scope: !5591)
!5596 = !DILocation(line: 928, column: 7, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !2, file: !3, line: 928, column: 6)
!5598 = !DILocation(line: 928, column: 14, scope: !5597)
!5599 = !DILocation(line: 928, column: 17, scope: !5597)
!5600 = !DILocation(line: 928, column: 20, scope: !5597)
!5601 = !DILocation(line: 928, column: 27, scope: !5597)
!5602 = !DILocation(line: 928, column: 31, scope: !5597)
!5603 = !DILocation(line: 928, column: 34, scope: !5597)
!5604 = !DILocation(line: 928, column: 41, scope: !5597)
!5605 = !DILocation(line: 928, column: 47, scope: !5597)
!5606 = !DILocation(line: 928, column: 54, scope: !5597)
!5607 = !DILocation(line: 928, column: 44, scope: !5597)
!5608 = !DILocation(line: 928, column: 6, scope: !2)
!5609 = !DILocation(line: 929, column: 15, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5597, file: !3, line: 928, column: 58)
!5611 = !DILocation(line: 929, column: 22, scope: !5610)
!5612 = !DILocation(line: 929, column: 3, scope: !5610)
!5613 = !DILocation(line: 929, column: 10, scope: !5610)
!5614 = !DILocation(line: 929, column: 13, scope: !5610)
!5615 = !DILocation(line: 930, column: 3, scope: !5610)
!5616 = !DILocation(line: 930, column: 10, scope: !5610)
!5617 = !DILocation(line: 930, column: 13, scope: !5610)
!5618 = !DILocation(line: 931, column: 5, scope: !5610)
!5619 = !DILocation(line: 932, column: 2, scope: !5610)
!5620 = !DILocation(line: 933, column: 6, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !2, file: !3, line: 933, column: 6)
!5622 = !DILocation(line: 933, column: 13, scope: !5621)
!5623 = !DILocation(line: 933, column: 19, scope: !5621)
!5624 = !DILocation(line: 933, column: 26, scope: !5621)
!5625 = !DILocation(line: 933, column: 16, scope: !5621)
!5626 = !DILocation(line: 933, column: 6, scope: !2)
!5627 = !DILocation(line: 934, column: 15, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5621, file: !3, line: 933, column: 30)
!5629 = !DILocation(line: 934, column: 22, scope: !5628)
!5630 = !DILocation(line: 934, column: 3, scope: !5628)
!5631 = !DILocation(line: 934, column: 10, scope: !5628)
!5632 = !DILocation(line: 934, column: 13, scope: !5628)
!5633 = !DILocation(line: 935, column: 15, scope: !5628)
!5634 = !DILocation(line: 935, column: 22, scope: !5628)
!5635 = !DILocation(line: 935, column: 3, scope: !5628)
!5636 = !DILocation(line: 935, column: 10, scope: !5628)
!5637 = !DILocation(line: 935, column: 13, scope: !5628)
!5638 = !DILocation(line: 936, column: 3, scope: !5628)
!5639 = !DILocation(line: 936, column: 10, scope: !5628)
!5640 = !DILocation(line: 936, column: 13, scope: !5628)
!5641 = !DILocation(line: 937, column: 5, scope: !5628)
!5642 = !DILocation(line: 938, column: 2, scope: !5628)
!5643 = !DILocation(line: 941, column: 6, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !2, file: !3, line: 941, column: 6)
!5645 = !DILocation(line: 941, column: 9, scope: !5644)
!5646 = !DILocation(line: 941, column: 6, scope: !2)
!5647 = !DILocation(line: 944, column: 7, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 944, column: 7)
!5649 = distinct !DILexicalBlock(scope: !5644, file: !3, line: 941, column: 15)
!5650 = !DILocation(line: 944, column: 14, scope: !5648)
!5651 = !DILocation(line: 944, column: 20, scope: !5648)
!5652 = !DILocation(line: 944, column: 27, scope: !5648)
!5653 = !DILocation(line: 944, column: 17, scope: !5648)
!5654 = !DILocation(line: 944, column: 30, scope: !5648)
!5655 = !DILocation(line: 945, column: 7, scope: !5648)
!5656 = !DILocation(line: 945, column: 14, scope: !5648)
!5657 = !DILocation(line: 945, column: 20, scope: !5648)
!5658 = !DILocation(line: 945, column: 27, scope: !5648)
!5659 = !DILocation(line: 945, column: 17, scope: !5648)
!5660 = !DILocation(line: 945, column: 30, scope: !5648)
!5661 = !DILocation(line: 946, column: 7, scope: !5648)
!5662 = !DILocation(line: 946, column: 14, scope: !5648)
!5663 = !DILocation(line: 946, column: 20, scope: !5648)
!5664 = !DILocation(line: 946, column: 27, scope: !5648)
!5665 = !DILocation(line: 946, column: 17, scope: !5648)
!5666 = !DILocation(line: 944, column: 7, scope: !5649)
!5667 = !DILocation(line: 948, column: 4, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 947, column: 3)
!5669 = !DILocation(line: 950, column: 2, scope: !5649)
!5670 = !DILocation(line: 951, column: 11, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5644, file: !3, line: 951, column: 11)
!5672 = !DILocation(line: 951, column: 14, scope: !5671)
!5673 = !DILocation(line: 951, column: 11, scope: !5644)
!5674 = !DILocation(line: 954, column: 7, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5676, file: !3, line: 954, column: 7)
!5676 = distinct !DILexicalBlock(scope: !5671, file: !3, line: 951, column: 20)
!5677 = !DILocation(line: 954, column: 14, scope: !5675)
!5678 = !DILocation(line: 954, column: 20, scope: !5675)
!5679 = !DILocation(line: 954, column: 27, scope: !5675)
!5680 = !DILocation(line: 954, column: 17, scope: !5675)
!5681 = !DILocation(line: 954, column: 30, scope: !5675)
!5682 = !DILocation(line: 955, column: 7, scope: !5675)
!5683 = !DILocation(line: 955, column: 14, scope: !5675)
!5684 = !DILocation(line: 955, column: 20, scope: !5675)
!5685 = !DILocation(line: 955, column: 27, scope: !5675)
!5686 = !DILocation(line: 955, column: 17, scope: !5675)
!5687 = !DILocation(line: 955, column: 30, scope: !5675)
!5688 = !DILocation(line: 956, column: 7, scope: !5675)
!5689 = !DILocation(line: 956, column: 14, scope: !5675)
!5690 = !DILocation(line: 956, column: 20, scope: !5675)
!5691 = !DILocation(line: 956, column: 27, scope: !5675)
!5692 = !DILocation(line: 956, column: 17, scope: !5675)
!5693 = !DILocation(line: 956, column: 30, scope: !5675)
!5694 = !DILocation(line: 957, column: 7, scope: !5675)
!5695 = !DILocation(line: 957, column: 14, scope: !5675)
!5696 = !DILocation(line: 957, column: 20, scope: !5675)
!5697 = !DILocation(line: 957, column: 27, scope: !5675)
!5698 = !DILocation(line: 957, column: 17, scope: !5675)
!5699 = !DILocation(line: 957, column: 30, scope: !5675)
!5700 = !DILocation(line: 959, column: 7, scope: !5675)
!5701 = !DILocation(line: 959, column: 14, scope: !5675)
!5702 = !DILocation(line: 959, column: 20, scope: !5675)
!5703 = !DILocation(line: 959, column: 27, scope: !5675)
!5704 = !DILocation(line: 959, column: 17, scope: !5675)
!5705 = !DILocation(line: 959, column: 30, scope: !5675)
!5706 = !DILocation(line: 960, column: 7, scope: !5675)
!5707 = !DILocation(line: 960, column: 14, scope: !5675)
!5708 = !DILocation(line: 960, column: 20, scope: !5675)
!5709 = !DILocation(line: 960, column: 27, scope: !5675)
!5710 = !DILocation(line: 960, column: 17, scope: !5675)
!5711 = !DILocation(line: 954, column: 7, scope: !5676)
!5712 = !DILocation(line: 962, column: 4, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5675, file: !3, line: 961, column: 3)
!5714 = !DILocation(line: 964, column: 2, scope: !5676)
!5715 = !DILocation(line: 967, column: 6, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !2, file: !3, line: 967, column: 6)
!5717 = !DILocation(line: 967, column: 9, scope: !5716)
!5718 = !DILocation(line: 967, column: 6, scope: !2)
!5719 = !DILocation(line: 968, column: 7, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5721, file: !3, line: 968, column: 7)
!5721 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 967, column: 15)
!5722 = !DILocation(line: 968, column: 14, scope: !5720)
!5723 = !DILocation(line: 968, column: 17, scope: !5720)
!5724 = !DILocation(line: 968, column: 7, scope: !5721)
!5725 = !DILocalVariable(name: "sw_ap", scope: !5726, file: !3, line: 971, type: !13)
!5726 = distinct !DILexicalBlock(scope: !5727, file: !3, line: 971, column: 4)
!5727 = distinct !DILexicalBlock(scope: !5720, file: !3, line: 968, column: 23)
!5728 = !DILocation(line: 971, column: 4, scope: !5726)
!5729 = !DILocalVariable(name: "sw_ap", scope: !5730, file: !3, line: 972, type: !13)
!5730 = distinct !DILexicalBlock(scope: !5727, file: !3, line: 972, column: 4)
!5731 = !DILocation(line: 972, column: 4, scope: !5730)
!5732 = !DILocation(line: 974, column: 8, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5727, file: !3, line: 974, column: 8)
!5734 = !DILocation(line: 974, column: 8, scope: !5727)
!5735 = !DILocation(line: 975, column: 21, scope: !5733)
!5736 = !DILocation(line: 975, column: 28, scope: !5733)
!5737 = !DILocation(line: 975, column: 5, scope: !5733)
!5738 = !DILocation(line: 976, column: 3, scope: !5727)
!5739 = !DILocation(line: 977, column: 2, scope: !5721)
!5740 = !DILocation(line: 978, column: 11, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 978, column: 11)
!5742 = !DILocation(line: 978, column: 14, scope: !5741)
!5743 = !DILocation(line: 978, column: 11, scope: !5716)
!5744 = !DILocation(line: 979, column: 7, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5746, file: !3, line: 979, column: 7)
!5746 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 978, column: 20)
!5747 = !DILocation(line: 979, column: 14, scope: !5745)
!5748 = !DILocation(line: 979, column: 17, scope: !5745)
!5749 = !DILocation(line: 979, column: 22, scope: !5745)
!5750 = !DILocation(line: 979, column: 25, scope: !5745)
!5751 = !DILocation(line: 979, column: 32, scope: !5745)
!5752 = !DILocation(line: 979, column: 35, scope: !5745)
!5753 = !DILocation(line: 979, column: 7, scope: !5746)
!5754 = !DILocalVariable(name: "sw_ap", scope: !5755, file: !3, line: 982, type: !13)
!5755 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 982, column: 4)
!5756 = distinct !DILexicalBlock(scope: !5745, file: !3, line: 979, column: 41)
!5757 = !DILocation(line: 982, column: 4, scope: !5755)
!5758 = !DILocalVariable(name: "sw_ap", scope: !5759, file: !3, line: 983, type: !13)
!5759 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 983, column: 4)
!5760 = !DILocation(line: 983, column: 4, scope: !5759)
!5761 = !DILocation(line: 985, column: 8, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 985, column: 8)
!5763 = !DILocation(line: 985, column: 8, scope: !5756)
!5764 = !DILocation(line: 986, column: 21, scope: !5762)
!5765 = !DILocation(line: 986, column: 28, scope: !5762)
!5766 = !DILocation(line: 986, column: 5, scope: !5762)
!5767 = !DILocation(line: 987, column: 3, scope: !5756)
!5768 = !DILocation(line: 988, column: 2, scope: !5746)
!5769 = !DILocation(line: 990, column: 9, scope: !2)
!5770 = !DILocation(line: 990, column: 2, scope: !2)
!5771 = !DILocation(line: 991, column: 1, scope: !2)
!5772 = distinct !DISubprogram(name: "BKE_mesh_from_object", scope: !3, file: !3, line: 993, type: !5773, scopeLine: 994, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!5773 = !DISubroutineType(types: !5774)
!5774 = !{!2306, !4322}
!5775 = !DILocalVariable(name: "ob", arg: 1, scope: !5772, file: !3, line: 993, type: !4322)
!5776 = !DILocation(line: 993, column: 36, scope: !5772)
!5777 = !DILocation(line: 996, column: 6, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 996, column: 6)
!5779 = !DILocation(line: 996, column: 9, scope: !5778)
!5780 = !DILocation(line: 996, column: 6, scope: !5772)
!5781 = !DILocation(line: 996, column: 18, scope: !5778)
!5782 = !DILocation(line: 997, column: 6, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 997, column: 6)
!5784 = !DILocation(line: 997, column: 10, scope: !5783)
!5785 = !DILocation(line: 997, column: 15, scope: !5783)
!5786 = !DILocation(line: 997, column: 6, scope: !5772)
!5787 = !DILocation(line: 997, column: 34, scope: !5783)
!5788 = !DILocation(line: 997, column: 38, scope: !5783)
!5789 = !DILocation(line: 997, column: 27, scope: !5783)
!5790 = !DILocation(line: 998, column: 7, scope: !5783)
!5791 = !DILocation(line: 999, column: 1, scope: !5772)
!5792 = distinct !DISubprogram(name: "BKE_mesh_from_metaball", scope: !3, file: !3, line: 1022, type: !5793, scopeLine: 1023, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!5793 = !DISubroutineType(types: !5794)
!5794 = !{null, !1286, !441}
!5795 = !DILocalVariable(name: "lb", arg: 1, scope: !5792, file: !3, line: 1022, type: !1286)
!5796 = !DILocation(line: 1022, column: 39, scope: !5792)
!5797 = !DILocalVariable(name: "me", arg: 2, scope: !5792, file: !3, line: 1022, type: !441)
!5798 = !DILocation(line: 1022, column: 49, scope: !5792)
!5799 = !DILocalVariable(name: "dl", scope: !5792, file: !3, line: 1024, type: !5800)
!5800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5801, size: 64)
!5801 = !DIDerivedType(tag: DW_TAG_typedef, name: "DispList", file: !5802, line: 79, baseType: !5803)
!5802 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_displist.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DispList", file: !5802, line: 68, size: 576, elements: !5804)
!5804 = !{!5805, !5807, !5808, !5809, !5810, !5811, !5812, !5813, !5814, !5815, !5816, !5817, !5818, !5819}
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5803, file: !5802, line: 69, baseType: !5806, size: 64)
!5806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5803, size: 64)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5803, file: !5802, line: 69, baseType: !5806, size: 64, offset: 64)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5803, file: !5802, line: 70, baseType: !18, size: 16, offset: 128)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5803, file: !5802, line: 70, baseType: !18, size: 16, offset: 144)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "parts", scope: !5803, file: !5802, line: 71, baseType: !6, size: 32, offset: 160)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !5803, file: !5802, line: 71, baseType: !6, size: 32, offset: 192)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !5803, file: !5802, line: 72, baseType: !18, size: 16, offset: 224)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !5803, file: !5802, line: 72, baseType: !18, size: 16, offset: 240)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !5803, file: !5802, line: 73, baseType: !1172, size: 64, offset: 256)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "nors", scope: !5803, file: !5802, line: 73, baseType: !1172, size: 64, offset: 320)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5803, file: !5802, line: 74, baseType: !1117, size: 64, offset: 384)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "charidx", scope: !5803, file: !5802, line: 75, baseType: !6, size: 32, offset: 448)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "totindex", scope: !5803, file: !5802, line: 76, baseType: !6, size: 32, offset: 480)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "bevelSplitFlag", scope: !5803, file: !5802, line: 78, baseType: !378, size: 64, offset: 512)
!5820 = !DILocation(line: 1024, column: 12, scope: !5792)
!5821 = !DILocalVariable(name: "mvert", scope: !5792, file: !3, line: 1025, type: !2524)
!5822 = !DILocation(line: 1025, column: 9, scope: !5792)
!5823 = !DILocalVariable(name: "mloop", scope: !5792, file: !3, line: 1026, type: !3132)
!5824 = !DILocation(line: 1026, column: 9, scope: !5792)
!5825 = !DILocalVariable(name: "allloop", scope: !5792, file: !3, line: 1026, type: !3132)
!5826 = !DILocation(line: 1026, column: 17, scope: !5792)
!5827 = !DILocalVariable(name: "mpoly", scope: !5792, file: !3, line: 1027, type: !2721)
!5828 = !DILocation(line: 1027, column: 9, scope: !5792)
!5829 = !DILocalVariable(name: "nors", scope: !5792, file: !3, line: 1028, type: !1146)
!5830 = !DILocation(line: 1028, column: 15, scope: !5792)
!5831 = !DILocalVariable(name: "verts", scope: !5792, file: !3, line: 1028, type: !1146)
!5832 = !DILocation(line: 1028, column: 22, scope: !5792)
!5833 = !DILocalVariable(name: "a", scope: !5792, file: !3, line: 1029, type: !6)
!5834 = !DILocation(line: 1029, column: 6, scope: !5792)
!5835 = !DILocalVariable(name: "index", scope: !5792, file: !3, line: 1029, type: !1117)
!5836 = !DILocation(line: 1029, column: 10, scope: !5792)
!5837 = !DILocation(line: 1031, column: 7, scope: !5792)
!5838 = !DILocation(line: 1031, column: 11, scope: !5792)
!5839 = !DILocation(line: 1031, column: 5, scope: !5792)
!5840 = !DILocation(line: 1032, column: 6, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5792, file: !3, line: 1032, column: 6)
!5842 = !DILocation(line: 1032, column: 9, scope: !5841)
!5843 = !DILocation(line: 1032, column: 6, scope: !5792)
!5844 = !DILocation(line: 1032, column: 18, scope: !5841)
!5845 = !DILocation(line: 1034, column: 6, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5792, file: !3, line: 1034, column: 6)
!5847 = !DILocation(line: 1034, column: 10, scope: !5846)
!5848 = !DILocation(line: 1034, column: 15, scope: !5846)
!5849 = !DILocation(line: 1034, column: 6, scope: !5792)
!5850 = !DILocation(line: 1035, column: 33, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 1034, column: 29)
!5852 = !DILocation(line: 1035, column: 37, scope: !5851)
!5853 = !DILocation(line: 1035, column: 71, scope: !5851)
!5854 = !DILocation(line: 1035, column: 75, scope: !5851)
!5855 = !DILocation(line: 1035, column: 11, scope: !5851)
!5856 = !DILocation(line: 1035, column: 9, scope: !5851)
!5857 = !DILocation(line: 1036, column: 43, scope: !5851)
!5858 = !DILocation(line: 1036, column: 47, scope: !5851)
!5859 = !DILocation(line: 1036, column: 81, scope: !5851)
!5860 = !DILocation(line: 1036, column: 85, scope: !5851)
!5861 = !DILocation(line: 1036, column: 91, scope: !5851)
!5862 = !DILocation(line: 1036, column: 21, scope: !5851)
!5863 = !DILocation(line: 1036, column: 19, scope: !5851)
!5864 = !DILocation(line: 1036, column: 11, scope: !5851)
!5865 = !DILocation(line: 1037, column: 33, scope: !5851)
!5866 = !DILocation(line: 1037, column: 37, scope: !5851)
!5867 = !DILocation(line: 1037, column: 71, scope: !5851)
!5868 = !DILocation(line: 1037, column: 75, scope: !5851)
!5869 = !DILocation(line: 1037, column: 11, scope: !5851)
!5870 = !DILocation(line: 1037, column: 9, scope: !5851)
!5871 = !DILocation(line: 1038, column: 15, scope: !5851)
!5872 = !DILocation(line: 1038, column: 3, scope: !5851)
!5873 = !DILocation(line: 1038, column: 7, scope: !5851)
!5874 = !DILocation(line: 1038, column: 13, scope: !5851)
!5875 = !DILocation(line: 1039, column: 15, scope: !5851)
!5876 = !DILocation(line: 1039, column: 3, scope: !5851)
!5877 = !DILocation(line: 1039, column: 7, scope: !5851)
!5878 = !DILocation(line: 1039, column: 13, scope: !5851)
!5879 = !DILocation(line: 1040, column: 15, scope: !5851)
!5880 = !DILocation(line: 1040, column: 3, scope: !5851)
!5881 = !DILocation(line: 1040, column: 7, scope: !5851)
!5882 = !DILocation(line: 1040, column: 13, scope: !5851)
!5883 = !DILocation(line: 1041, column: 17, scope: !5851)
!5884 = !DILocation(line: 1041, column: 21, scope: !5851)
!5885 = !DILocation(line: 1041, column: 3, scope: !5851)
!5886 = !DILocation(line: 1041, column: 7, scope: !5851)
!5887 = !DILocation(line: 1041, column: 15, scope: !5851)
!5888 = !DILocation(line: 1042, column: 17, scope: !5851)
!5889 = !DILocation(line: 1042, column: 21, scope: !5851)
!5890 = !DILocation(line: 1042, column: 3, scope: !5851)
!5891 = !DILocation(line: 1042, column: 7, scope: !5851)
!5892 = !DILocation(line: 1042, column: 15, scope: !5851)
!5893 = !DILocation(line: 1044, column: 7, scope: !5851)
!5894 = !DILocation(line: 1044, column: 11, scope: !5851)
!5895 = !DILocation(line: 1044, column: 5, scope: !5851)
!5896 = !DILocation(line: 1045, column: 10, scope: !5851)
!5897 = !DILocation(line: 1045, column: 14, scope: !5851)
!5898 = !DILocation(line: 1045, column: 8, scope: !5851)
!5899 = !DILocation(line: 1046, column: 11, scope: !5851)
!5900 = !DILocation(line: 1046, column: 15, scope: !5851)
!5901 = !DILocation(line: 1046, column: 9, scope: !5851)
!5902 = !DILocation(line: 1047, column: 3, scope: !5851)
!5903 = !DILocation(line: 1047, column: 11, scope: !5851)
!5904 = !DILocation(line: 1048, column: 15, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 1047, column: 15)
!5906 = !DILocation(line: 1048, column: 22, scope: !5905)
!5907 = !DILocation(line: 1048, column: 26, scope: !5905)
!5908 = !DILocation(line: 1048, column: 4, scope: !5905)
!5909 = !DILocation(line: 1049, column: 29, scope: !5905)
!5910 = !DILocation(line: 1049, column: 36, scope: !5905)
!5911 = !DILocation(line: 1049, column: 40, scope: !5905)
!5912 = !DILocation(line: 1049, column: 4, scope: !5905)
!5913 = !DILocation(line: 1050, column: 9, scope: !5905)
!5914 = !DILocation(line: 1051, column: 9, scope: !5905)
!5915 = !DILocation(line: 1052, column: 10, scope: !5905)
!5916 = distinct !{!5916, !5902, !5917}
!5917 = !DILocation(line: 1053, column: 3, scope: !5851)
!5918 = !DILocation(line: 1055, column: 7, scope: !5851)
!5919 = !DILocation(line: 1055, column: 11, scope: !5851)
!5920 = !DILocation(line: 1055, column: 5, scope: !5851)
!5921 = !DILocation(line: 1056, column: 11, scope: !5851)
!5922 = !DILocation(line: 1056, column: 15, scope: !5851)
!5923 = !DILocation(line: 1056, column: 9, scope: !5851)
!5924 = !DILocation(line: 1057, column: 3, scope: !5851)
!5925 = !DILocation(line: 1057, column: 11, scope: !5851)
!5926 = !DILocalVariable(name: "count", scope: !5927, file: !3, line: 1058, type: !6)
!5927 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 1057, column: 15)
!5928 = !DILocation(line: 1058, column: 8, scope: !5927)
!5929 = !DILocation(line: 1058, column: 16, scope: !5927)
!5930 = !DILocation(line: 1058, column: 28, scope: !5927)
!5931 = !DILocation(line: 1058, column: 25, scope: !5927)
!5932 = !DILocation(line: 1060, column: 17, scope: !5927)
!5933 = !DILocation(line: 1060, column: 4, scope: !5927)
!5934 = !DILocation(line: 1060, column: 13, scope: !5927)
!5935 = !DILocation(line: 1060, column: 15, scope: !5927)
!5936 = !DILocation(line: 1061, column: 17, scope: !5927)
!5937 = !DILocation(line: 1061, column: 4, scope: !5927)
!5938 = !DILocation(line: 1061, column: 13, scope: !5927)
!5939 = !DILocation(line: 1061, column: 15, scope: !5927)
!5940 = !DILocation(line: 1062, column: 17, scope: !5927)
!5941 = !DILocation(line: 1062, column: 4, scope: !5927)
!5942 = !DILocation(line: 1062, column: 13, scope: !5927)
!5943 = !DILocation(line: 1062, column: 15, scope: !5927)
!5944 = !DILocation(line: 1063, column: 8, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5927, file: !3, line: 1063, column: 8)
!5946 = !DILocation(line: 1063, column: 14, scope: !5945)
!5947 = !DILocation(line: 1063, column: 8, scope: !5927)
!5948 = !DILocation(line: 1064, column: 18, scope: !5945)
!5949 = !DILocation(line: 1064, column: 5, scope: !5945)
!5950 = !DILocation(line: 1064, column: 14, scope: !5945)
!5951 = !DILocation(line: 1064, column: 16, scope: !5945)
!5952 = !DILocation(line: 1066, column: 21, scope: !5927)
!5953 = !DILocation(line: 1066, column: 4, scope: !5927)
!5954 = !DILocation(line: 1066, column: 11, scope: !5927)
!5955 = !DILocation(line: 1066, column: 19, scope: !5927)
!5956 = !DILocation(line: 1067, column: 29, scope: !5927)
!5957 = !DILocation(line: 1067, column: 37, scope: !5927)
!5958 = !DILocation(line: 1067, column: 35, scope: !5927)
!5959 = !DILocation(line: 1067, column: 23, scope: !5927)
!5960 = !DILocation(line: 1067, column: 4, scope: !5927)
!5961 = !DILocation(line: 1067, column: 11, scope: !5927)
!5962 = !DILocation(line: 1067, column: 21, scope: !5927)
!5963 = !DILocation(line: 1068, column: 4, scope: !5927)
!5964 = !DILocation(line: 1068, column: 11, scope: !5927)
!5965 = !DILocation(line: 1068, column: 16, scope: !5927)
!5966 = !DILocation(line: 1071, column: 9, scope: !5927)
!5967 = !DILocation(line: 1072, column: 13, scope: !5927)
!5968 = !DILocation(line: 1072, column: 10, scope: !5927)
!5969 = !DILocation(line: 1073, column: 19, scope: !5927)
!5970 = !DILocation(line: 1073, column: 4, scope: !5927)
!5971 = !DILocation(line: 1073, column: 8, scope: !5927)
!5972 = !DILocation(line: 1073, column: 16, scope: !5927)
!5973 = !DILocation(line: 1074, column: 10, scope: !5927)
!5974 = distinct !{!5974, !5924, !5975}
!5975 = !DILocation(line: 1075, column: 3, scope: !5851)
!5976 = !DILocation(line: 1077, column: 39, scope: !5851)
!5977 = !DILocation(line: 1077, column: 3, scope: !5851)
!5978 = !DILocation(line: 1079, column: 25, scope: !5851)
!5979 = !DILocation(line: 1079, column: 3, scope: !5851)
!5980 = !DILocation(line: 1081, column: 23, scope: !5851)
!5981 = !DILocation(line: 1081, column: 3, scope: !5851)
!5982 = !DILocation(line: 1082, column: 2, scope: !5851)
!5983 = !DILocation(line: 1083, column: 1, scope: !5792)
!5984 = distinct !DISubprogram(name: "normal_float_to_short_v3", scope: !5218, file: !5218, line: 842, type: !5985, scopeLine: 843, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!5985 = !DISubroutineType(types: !5986)
!5986 = !{null, !2537, !1146}
!5987 = !DILocalVariable(name: "out", arg: 1, scope: !5984, file: !5218, line: 842, type: !2537)
!5988 = !DILocation(line: 842, column: 45, scope: !5984)
!5989 = !DILocalVariable(name: "in", arg: 2, scope: !5984, file: !5218, line: 842, type: !1146)
!5990 = !DILocation(line: 842, column: 65, scope: !5984)
!5991 = !DILocation(line: 844, column: 20, scope: !5984)
!5992 = !DILocation(line: 844, column: 26, scope: !5984)
!5993 = !DILocation(line: 844, column: 11, scope: !5984)
!5994 = !DILocation(line: 844, column: 2, scope: !5984)
!5995 = !DILocation(line: 844, column: 9, scope: !5984)
!5996 = !DILocation(line: 845, column: 20, scope: !5984)
!5997 = !DILocation(line: 845, column: 26, scope: !5984)
!5998 = !DILocation(line: 845, column: 11, scope: !5984)
!5999 = !DILocation(line: 845, column: 2, scope: !5984)
!6000 = !DILocation(line: 845, column: 9, scope: !5984)
!6001 = !DILocation(line: 846, column: 20, scope: !5984)
!6002 = !DILocation(line: 846, column: 26, scope: !5984)
!6003 = !DILocation(line: 846, column: 11, scope: !5984)
!6004 = !DILocation(line: 846, column: 2, scope: !5984)
!6005 = !DILocation(line: 846, column: 9, scope: !5984)
!6006 = !DILocation(line: 847, column: 1, scope: !5984)
!6007 = distinct !DISubprogram(name: "BKE_mesh_nurbs_to_mdata", scope: !3, file: !3, line: 1163, type: !6008, scopeLine: 1166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!6008 = !DISubroutineType(types: !6009)
!6009 = !{!6, !4322, !6010, !1117, !6011, !1117, !6012, !6013, !1117, !1117}
!6010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 64)
!6011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3035, size: 64)
!6012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3132, size: 64)
!6013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2721, size: 64)
!6014 = !DILocalVariable(name: "ob", arg: 1, scope: !6007, file: !3, line: 1163, type: !4322)
!6015 = !DILocation(line: 1163, column: 37, scope: !6007)
!6016 = !DILocalVariable(name: "allvert", arg: 2, scope: !6007, file: !3, line: 1163, type: !6010)
!6017 = !DILocation(line: 1163, column: 49, scope: !6007)
!6018 = !DILocalVariable(name: "totvert", arg: 3, scope: !6007, file: !3, line: 1163, type: !1117)
!6019 = !DILocation(line: 1163, column: 63, scope: !6007)
!6020 = !DILocalVariable(name: "alledge", arg: 4, scope: !6007, file: !3, line: 1164, type: !6011)
!6021 = !DILocation(line: 1164, column: 37, scope: !6007)
!6022 = !DILocalVariable(name: "totedge", arg: 5, scope: !6007, file: !3, line: 1164, type: !1117)
!6023 = !DILocation(line: 1164, column: 51, scope: !6007)
!6024 = !DILocalVariable(name: "allloop", arg: 6, scope: !6007, file: !3, line: 1164, type: !6012)
!6025 = !DILocation(line: 1164, column: 68, scope: !6007)
!6026 = !DILocalVariable(name: "allpoly", arg: 7, scope: !6007, file: !3, line: 1164, type: !6013)
!6027 = !DILocation(line: 1164, column: 85, scope: !6007)
!6028 = !DILocalVariable(name: "totloop", arg: 8, scope: !6007, file: !3, line: 1165, type: !1117)
!6029 = !DILocation(line: 1165, column: 34, scope: !6007)
!6030 = !DILocalVariable(name: "totpoly", arg: 9, scope: !6007, file: !3, line: 1165, type: !1117)
!6031 = !DILocation(line: 1165, column: 48, scope: !6007)
!6032 = !DILocalVariable(name: "disp", scope: !6007, file: !3, line: 1167, type: !320)
!6033 = !DILocation(line: 1167, column: 11, scope: !6007)
!6034 = !DILocation(line: 1169, column: 6, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 1169, column: 6)
!6036 = !DILocation(line: 1169, column: 10, scope: !6035)
!6037 = !DILocation(line: 1169, column: 6, scope: !6007)
!6038 = !DILocation(line: 1170, column: 10, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6035, file: !3, line: 1169, column: 23)
!6040 = !DILocation(line: 1170, column: 14, scope: !6039)
!6041 = !DILocation(line: 1170, column: 27, scope: !6039)
!6042 = !DILocation(line: 1171, column: 2, scope: !6039)
!6043 = !DILocation(line: 1173, column: 42, scope: !6007)
!6044 = !DILocation(line: 1174, column: 42, scope: !6007)
!6045 = !DILocation(line: 1174, column: 51, scope: !6007)
!6046 = !DILocation(line: 1175, column: 42, scope: !6007)
!6047 = !DILocation(line: 1175, column: 51, scope: !6007)
!6048 = !DILocation(line: 1176, column: 42, scope: !6007)
!6049 = !DILocation(line: 1176, column: 51, scope: !6007)
!6050 = !DILocation(line: 1177, column: 42, scope: !6007)
!6051 = !DILocation(line: 1177, column: 51, scope: !6007)
!6052 = !DILocation(line: 1173, column: 9, scope: !6007)
!6053 = !DILocation(line: 1173, column: 2, scope: !6007)
!6054 = distinct !DISubprogram(name: "BKE_mesh_nurbs_displist_to_mdata", scope: !3, file: !3, line: 1185, type: !6055, scopeLine: 1191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!6055 = !DISubroutineType(types: !6056)
!6056 = !{!6, !4322, !1286, !6010, !1117, !6011, !1117, !6012, !6013, !6057, !1117, !1117}
!6057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3242, size: 64)
!6058 = !DILocalVariable(name: "ob", arg: 1, scope: !6054, file: !3, line: 1185, type: !4322)
!6059 = !DILocation(line: 1185, column: 46, scope: !6054)
!6060 = !DILocalVariable(name: "dispbase", arg: 2, scope: !6054, file: !3, line: 1185, type: !1286)
!6061 = !DILocation(line: 1185, column: 60, scope: !6054)
!6062 = !DILocalVariable(name: "allvert", arg: 3, scope: !6054, file: !3, line: 1186, type: !6010)
!6063 = !DILocation(line: 1186, column: 46, scope: !6054)
!6064 = !DILocalVariable(name: "_totvert", arg: 4, scope: !6054, file: !3, line: 1186, type: !1117)
!6065 = !DILocation(line: 1186, column: 60, scope: !6054)
!6066 = !DILocalVariable(name: "alledge", arg: 5, scope: !6054, file: !3, line: 1187, type: !6011)
!6067 = !DILocation(line: 1187, column: 46, scope: !6054)
!6068 = !DILocalVariable(name: "_totedge", arg: 6, scope: !6054, file: !3, line: 1187, type: !1117)
!6069 = !DILocation(line: 1187, column: 60, scope: !6054)
!6070 = !DILocalVariable(name: "allloop", arg: 7, scope: !6054, file: !3, line: 1188, type: !6012)
!6071 = !DILocation(line: 1188, column: 46, scope: !6054)
!6072 = !DILocalVariable(name: "allpoly", arg: 8, scope: !6054, file: !3, line: 1188, type: !6013)
!6073 = !DILocation(line: 1188, column: 63, scope: !6054)
!6074 = !DILocalVariable(name: "alluv", arg: 9, scope: !6054, file: !3, line: 1189, type: !6057)
!6075 = !DILocation(line: 1189, column: 48, scope: !6054)
!6076 = !DILocalVariable(name: "_totloop", arg: 10, scope: !6054, file: !3, line: 1190, type: !1117)
!6077 = !DILocation(line: 1190, column: 43, scope: !6054)
!6078 = !DILocalVariable(name: "_totpoly", arg: 11, scope: !6054, file: !3, line: 1190, type: !1117)
!6079 = !DILocation(line: 1190, column: 58, scope: !6054)
!6080 = !DILocalVariable(name: "cu", scope: !6054, file: !3, line: 1192, type: !2539)
!6081 = !DILocation(line: 1192, column: 9, scope: !6054)
!6082 = !DILocation(line: 1192, column: 14, scope: !6054)
!6083 = !DILocation(line: 1192, column: 18, scope: !6054)
!6084 = !DILocalVariable(name: "dl", scope: !6054, file: !3, line: 1193, type: !5800)
!6085 = !DILocation(line: 1193, column: 12, scope: !6054)
!6086 = !DILocalVariable(name: "mvert", scope: !6054, file: !3, line: 1194, type: !2524)
!6087 = !DILocation(line: 1194, column: 9, scope: !6054)
!6088 = !DILocalVariable(name: "mpoly", scope: !6054, file: !3, line: 1195, type: !2721)
!6089 = !DILocation(line: 1195, column: 9, scope: !6054)
!6090 = !DILocalVariable(name: "mloop", scope: !6054, file: !3, line: 1196, type: !3132)
!6091 = !DILocation(line: 1196, column: 9, scope: !6054)
!6092 = !DILocalVariable(name: "mloopuv", scope: !6054, file: !3, line: 1197, type: !3242)
!6093 = !DILocation(line: 1197, column: 11, scope: !6054)
!6094 = !DILocalVariable(name: "medge", scope: !6054, file: !3, line: 1198, type: !3035)
!6095 = !DILocation(line: 1198, column: 9, scope: !6054)
!6096 = !DILocalVariable(name: "data", scope: !6054, file: !3, line: 1199, type: !1146)
!6097 = !DILocation(line: 1199, column: 15, scope: !6054)
!6098 = !DILocalVariable(name: "a", scope: !6054, file: !3, line: 1200, type: !6)
!6099 = !DILocation(line: 1200, column: 6, scope: !6054)
!6100 = !DILocalVariable(name: "b", scope: !6054, file: !3, line: 1200, type: !6)
!6101 = !DILocation(line: 1200, column: 9, scope: !6054)
!6102 = !DILocalVariable(name: "ofs", scope: !6054, file: !3, line: 1200, type: !6)
!6103 = !DILocation(line: 1200, column: 12, scope: !6054)
!6104 = !DILocalVariable(name: "vertcount", scope: !6054, file: !3, line: 1200, type: !6)
!6105 = !DILocation(line: 1200, column: 17, scope: !6054)
!6106 = !DILocalVariable(name: "startvert", scope: !6054, file: !3, line: 1200, type: !6)
!6107 = !DILocation(line: 1200, column: 28, scope: !6054)
!6108 = !DILocalVariable(name: "totvert", scope: !6054, file: !3, line: 1200, type: !6)
!6109 = !DILocation(line: 1200, column: 39, scope: !6054)
!6110 = !DILocalVariable(name: "totedge", scope: !6054, file: !3, line: 1200, type: !6)
!6111 = !DILocation(line: 1200, column: 52, scope: !6054)
!6112 = !DILocalVariable(name: "totloop", scope: !6054, file: !3, line: 1200, type: !6)
!6113 = !DILocation(line: 1200, column: 65, scope: !6054)
!6114 = !DILocalVariable(name: "totvlak", scope: !6054, file: !3, line: 1200, type: !6)
!6115 = !DILocation(line: 1200, column: 78, scope: !6054)
!6116 = !DILocalVariable(name: "p1", scope: !6054, file: !3, line: 1201, type: !6)
!6117 = !DILocation(line: 1201, column: 6, scope: !6054)
!6118 = !DILocalVariable(name: "p2", scope: !6054, file: !3, line: 1201, type: !6)
!6119 = !DILocation(line: 1201, column: 10, scope: !6054)
!6120 = !DILocalVariable(name: "p3", scope: !6054, file: !3, line: 1201, type: !6)
!6121 = !DILocation(line: 1201, column: 14, scope: !6054)
!6122 = !DILocalVariable(name: "p4", scope: !6054, file: !3, line: 1201, type: !6)
!6123 = !DILocation(line: 1201, column: 18, scope: !6054)
!6124 = !DILocalVariable(name: "index", scope: !6054, file: !3, line: 1201, type: !1117)
!6125 = !DILocation(line: 1201, column: 23, scope: !6054)
!6126 = !DILocalVariable(name: "conv_polys", scope: !6054, file: !3, line: 1202, type: !1224)
!6127 = !DILocation(line: 1202, column: 13, scope: !6054)
!6128 = !DILocation(line: 1202, column: 28, scope: !6054)
!6129 = !DILocation(line: 0, scope: !6054)
!6130 = !DILocation(line: 1202, column: 45, scope: !6054)
!6131 = !DILocation(line: 1202, column: 55, scope: !6054)
!6132 = !DILocation(line: 1203, column: 28, scope: !6054)
!6133 = !DILocation(line: 1203, column: 32, scope: !6054)
!6134 = !DILocation(line: 1203, column: 37, scope: !6054)
!6135 = !DILocation(line: 1202, column: 26, scope: !6054)
!6136 = !DILocation(line: 1206, column: 7, scope: !6054)
!6137 = !DILocation(line: 1206, column: 17, scope: !6054)
!6138 = !DILocation(line: 1206, column: 5, scope: !6054)
!6139 = !DILocation(line: 1207, column: 2, scope: !6054)
!6140 = !DILocation(line: 1207, column: 9, scope: !6054)
!6141 = !DILocation(line: 1208, column: 7, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6143, file: !3, line: 1208, column: 7)
!6143 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 1207, column: 13)
!6144 = !DILocation(line: 1208, column: 11, scope: !6142)
!6145 = !DILocation(line: 1208, column: 16, scope: !6142)
!6146 = !DILocation(line: 1208, column: 7, scope: !6143)
!6147 = !DILocation(line: 1209, column: 15, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 1208, column: 28)
!6149 = !DILocation(line: 1209, column: 19, scope: !6148)
!6150 = !DILocation(line: 1209, column: 27, scope: !6148)
!6151 = !DILocation(line: 1209, column: 31, scope: !6148)
!6152 = !DILocation(line: 1209, column: 25, scope: !6148)
!6153 = !DILocation(line: 1209, column: 12, scope: !6148)
!6154 = !DILocation(line: 1210, column: 15, scope: !6148)
!6155 = !DILocation(line: 1210, column: 19, scope: !6148)
!6156 = !DILocation(line: 1210, column: 28, scope: !6148)
!6157 = !DILocation(line: 1210, column: 32, scope: !6148)
!6158 = !DILocation(line: 1210, column: 35, scope: !6148)
!6159 = !DILocation(line: 1210, column: 25, scope: !6148)
!6160 = !DILocation(line: 1210, column: 12, scope: !6148)
!6161 = !DILocation(line: 1211, column: 3, scope: !6148)
!6162 = !DILocation(line: 1212, column: 12, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 1212, column: 12)
!6164 = !DILocation(line: 1212, column: 16, scope: !6163)
!6165 = !DILocation(line: 1212, column: 21, scope: !6163)
!6166 = !DILocation(line: 1212, column: 12, scope: !6142)
!6167 = !DILocation(line: 1213, column: 8, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6169, file: !3, line: 1213, column: 8)
!6169 = distinct !DILexicalBlock(scope: !6163, file: !3, line: 1212, column: 33)
!6170 = !DILocation(line: 1213, column: 8, scope: !6169)
!6171 = !DILocation(line: 1214, column: 16, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 1213, column: 20)
!6173 = !DILocation(line: 1214, column: 20, scope: !6172)
!6174 = !DILocation(line: 1214, column: 28, scope: !6172)
!6175 = !DILocation(line: 1214, column: 32, scope: !6172)
!6176 = !DILocation(line: 1214, column: 26, scope: !6172)
!6177 = !DILocation(line: 1214, column: 13, scope: !6172)
!6178 = !DILocation(line: 1215, column: 16, scope: !6172)
!6179 = !DILocation(line: 1215, column: 20, scope: !6172)
!6180 = !DILocation(line: 1215, column: 28, scope: !6172)
!6181 = !DILocation(line: 1215, column: 32, scope: !6172)
!6182 = !DILocation(line: 1215, column: 26, scope: !6172)
!6183 = !DILocation(line: 1215, column: 13, scope: !6172)
!6184 = !DILocation(line: 1216, column: 4, scope: !6172)
!6185 = !DILocation(line: 1217, column: 3, scope: !6169)
!6186 = !DILocation(line: 1218, column: 12, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6163, file: !3, line: 1218, column: 12)
!6188 = !DILocation(line: 1218, column: 16, scope: !6187)
!6189 = !DILocation(line: 1218, column: 21, scope: !6187)
!6190 = !DILocation(line: 1218, column: 12, scope: !6163)
!6191 = !DILocalVariable(name: "tot", scope: !6192, file: !3, line: 1219, type: !6)
!6192 = distinct !DILexicalBlock(scope: !6187, file: !3, line: 1218, column: 33)
!6193 = !DILocation(line: 1219, column: 8, scope: !6192)
!6194 = !DILocation(line: 1220, column: 15, scope: !6192)
!6195 = !DILocation(line: 1220, column: 19, scope: !6192)
!6196 = !DILocation(line: 1220, column: 27, scope: !6192)
!6197 = !DILocation(line: 1220, column: 31, scope: !6192)
!6198 = !DILocation(line: 1220, column: 25, scope: !6192)
!6199 = !DILocation(line: 1220, column: 12, scope: !6192)
!6200 = !DILocation(line: 1221, column: 11, scope: !6192)
!6201 = !DILocation(line: 1221, column: 15, scope: !6192)
!6202 = !DILocation(line: 1221, column: 21, scope: !6192)
!6203 = !DILocation(line: 1221, column: 29, scope: !6192)
!6204 = !DILocation(line: 1221, column: 33, scope: !6192)
!6205 = !DILocation(line: 1221, column: 38, scope: !6192)
!6206 = !DILocation(line: 1221, column: 51, scope: !6192)
!6207 = !DILocation(line: 1221, column: 25, scope: !6192)
!6208 = !DILocation(line: 1221, column: 61, scope: !6192)
!6209 = !DILocation(line: 1221, column: 65, scope: !6192)
!6210 = !DILocation(line: 1221, column: 68, scope: !6192)
!6211 = !DILocation(line: 1221, column: 75, scope: !6192)
!6212 = !DILocation(line: 1221, column: 79, scope: !6192)
!6213 = !DILocation(line: 1221, column: 84, scope: !6192)
!6214 = !DILocation(line: 1221, column: 72, scope: !6192)
!6215 = !DILocation(line: 1221, column: 58, scope: !6192)
!6216 = !DILocation(line: 1221, column: 8, scope: !6192)
!6217 = !DILocation(line: 1222, column: 15, scope: !6192)
!6218 = !DILocation(line: 1222, column: 12, scope: !6192)
!6219 = !DILocation(line: 1223, column: 15, scope: !6192)
!6220 = !DILocation(line: 1223, column: 19, scope: !6192)
!6221 = !DILocation(line: 1223, column: 12, scope: !6192)
!6222 = !DILocation(line: 1224, column: 3, scope: !6192)
!6223 = !DILocation(line: 1225, column: 12, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6187, file: !3, line: 1225, column: 12)
!6225 = !DILocation(line: 1225, column: 16, scope: !6224)
!6226 = !DILocation(line: 1225, column: 21, scope: !6224)
!6227 = !DILocation(line: 1225, column: 12, scope: !6187)
!6228 = !DILocalVariable(name: "tot", scope: !6229, file: !3, line: 1226, type: !6)
!6229 = distinct !DILexicalBlock(scope: !6224, file: !3, line: 1225, column: 35)
!6230 = !DILocation(line: 1226, column: 8, scope: !6229)
!6231 = !DILocation(line: 1227, column: 15, scope: !6229)
!6232 = !DILocation(line: 1227, column: 19, scope: !6229)
!6233 = !DILocation(line: 1227, column: 12, scope: !6229)
!6234 = !DILocation(line: 1228, column: 10, scope: !6229)
!6235 = !DILocation(line: 1228, column: 14, scope: !6229)
!6236 = !DILocation(line: 1228, column: 8, scope: !6229)
!6237 = !DILocation(line: 1229, column: 15, scope: !6229)
!6238 = !DILocation(line: 1229, column: 12, scope: !6229)
!6239 = !DILocation(line: 1230, column: 15, scope: !6229)
!6240 = !DILocation(line: 1230, column: 19, scope: !6229)
!6241 = !DILocation(line: 1230, column: 12, scope: !6229)
!6242 = !DILocation(line: 1231, column: 3, scope: !6229)
!6243 = !DILocation(line: 1232, column: 8, scope: !6143)
!6244 = !DILocation(line: 1232, column: 12, scope: !6143)
!6245 = !DILocation(line: 1232, column: 6, scope: !6143)
!6246 = distinct !{!6246, !6139, !6247}
!6247 = !DILocation(line: 1233, column: 2, scope: !6054)
!6248 = !DILocation(line: 1235, column: 6, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 1235, column: 6)
!6250 = !DILocation(line: 1235, column: 14, scope: !6249)
!6251 = !DILocation(line: 1235, column: 6, scope: !6054)
!6252 = !DILocation(line: 1238, column: 3, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6249, file: !3, line: 1235, column: 20)
!6254 = !DILocation(line: 1241, column: 21, scope: !6054)
!6255 = !DILocation(line: 1241, column: 49, scope: !6054)
!6256 = !DILocation(line: 1241, column: 47, scope: !6054)
!6257 = !DILocation(line: 1241, column: 19, scope: !6054)
!6258 = !DILocation(line: 1241, column: 3, scope: !6054)
!6259 = !DILocation(line: 1241, column: 11, scope: !6054)
!6260 = !DILocation(line: 1242, column: 21, scope: !6054)
!6261 = !DILocation(line: 1242, column: 49, scope: !6054)
!6262 = !DILocation(line: 1242, column: 47, scope: !6054)
!6263 = !DILocation(line: 1242, column: 19, scope: !6054)
!6264 = !DILocation(line: 1242, column: 3, scope: !6054)
!6265 = !DILocation(line: 1242, column: 11, scope: !6054)
!6266 = !DILocation(line: 1243, column: 21, scope: !6054)
!6267 = !DILocation(line: 1243, column: 49, scope: !6054)
!6268 = !DILocation(line: 1243, column: 47, scope: !6054)
!6269 = !DILocation(line: 1243, column: 57, scope: !6054)
!6270 = !DILocation(line: 1243, column: 19, scope: !6054)
!6271 = !DILocation(line: 1243, column: 3, scope: !6054)
!6272 = !DILocation(line: 1243, column: 11, scope: !6054)
!6273 = !DILocation(line: 1244, column: 21, scope: !6054)
!6274 = !DILocation(line: 1244, column: 49, scope: !6054)
!6275 = !DILocation(line: 1244, column: 47, scope: !6054)
!6276 = !DILocation(line: 1244, column: 19, scope: !6054)
!6277 = !DILocation(line: 1244, column: 3, scope: !6054)
!6278 = !DILocation(line: 1244, column: 11, scope: !6054)
!6279 = !DILocation(line: 1246, column: 6, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 1246, column: 6)
!6281 = !DILocation(line: 1246, column: 6, scope: !6054)
!6282 = !DILocation(line: 1247, column: 22, scope: !6280)
!6283 = !DILocation(line: 1247, column: 52, scope: !6280)
!6284 = !DILocation(line: 1247, column: 50, scope: !6280)
!6285 = !DILocation(line: 1247, column: 60, scope: !6280)
!6286 = !DILocation(line: 1247, column: 20, scope: !6280)
!6287 = !DILocation(line: 1247, column: 4, scope: !6280)
!6288 = !DILocation(line: 1247, column: 10, scope: !6280)
!6289 = !DILocation(line: 1247, column: 3, scope: !6280)
!6290 = !DILocation(line: 1250, column: 12, scope: !6054)
!6291 = !DILocation(line: 1252, column: 7, scope: !6054)
!6292 = !DILocation(line: 1252, column: 17, scope: !6054)
!6293 = !DILocation(line: 1252, column: 5, scope: !6054)
!6294 = !DILocation(line: 1253, column: 2, scope: !6054)
!6295 = !DILocation(line: 1253, column: 9, scope: !6054)
!6296 = !DILocalVariable(name: "smooth", scope: !6297, file: !3, line: 1254, type: !6)
!6297 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 1253, column: 13)
!6298 = !DILocation(line: 1254, column: 7, scope: !6297)
!6299 = !DILocation(line: 1254, column: 16, scope: !6297)
!6300 = !DILocation(line: 1254, column: 20, scope: !6297)
!6301 = !DILocation(line: 1254, column: 23, scope: !6297)
!6302 = !DILocation(line: 1256, column: 7, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6297, file: !3, line: 1256, column: 7)
!6304 = !DILocation(line: 1256, column: 11, scope: !6303)
!6305 = !DILocation(line: 1256, column: 16, scope: !6303)
!6306 = !DILocation(line: 1256, column: 7, scope: !6297)
!6307 = !DILocation(line: 1257, column: 16, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6303, file: !3, line: 1256, column: 28)
!6309 = !DILocation(line: 1257, column: 14, scope: !6308)
!6310 = !DILocation(line: 1258, column: 8, scope: !6308)
!6311 = !DILocation(line: 1258, column: 12, scope: !6308)
!6312 = !DILocation(line: 1258, column: 20, scope: !6308)
!6313 = !DILocation(line: 1258, column: 24, scope: !6308)
!6314 = !DILocation(line: 1258, column: 18, scope: !6308)
!6315 = !DILocation(line: 1258, column: 6, scope: !6308)
!6316 = !DILocation(line: 1259, column: 11, scope: !6308)
!6317 = !DILocation(line: 1259, column: 15, scope: !6308)
!6318 = !DILocation(line: 1259, column: 9, scope: !6308)
!6319 = !DILocation(line: 1260, column: 4, scope: !6308)
!6320 = !DILocation(line: 1260, column: 12, scope: !6308)
!6321 = !DILocation(line: 1261, column: 16, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6308, file: !3, line: 1260, column: 16)
!6323 = !DILocation(line: 1261, column: 23, scope: !6322)
!6324 = !DILocation(line: 1261, column: 27, scope: !6322)
!6325 = !DILocation(line: 1261, column: 5, scope: !6322)
!6326 = !DILocation(line: 1262, column: 10, scope: !6322)
!6327 = !DILocation(line: 1263, column: 14, scope: !6322)
!6328 = !DILocation(line: 1264, column: 10, scope: !6322)
!6329 = distinct !{!6329, !6319, !6330}
!6330 = !DILocation(line: 1265, column: 4, scope: !6308)
!6331 = !DILocation(line: 1267, column: 11, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6308, file: !3, line: 1267, column: 4)
!6333 = !DILocation(line: 1267, column: 9, scope: !6332)
!6334 = !DILocation(line: 1267, column: 16, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 1267, column: 4)
!6336 = !DILocation(line: 1267, column: 20, scope: !6335)
!6337 = !DILocation(line: 1267, column: 24, scope: !6335)
!6338 = !DILocation(line: 1267, column: 18, scope: !6335)
!6339 = !DILocation(line: 1267, column: 4, scope: !6332)
!6340 = !DILocation(line: 1268, column: 11, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6335, file: !3, line: 1267, column: 36)
!6342 = !DILocation(line: 1268, column: 15, scope: !6341)
!6343 = !DILocation(line: 1268, column: 19, scope: !6341)
!6344 = !DILocation(line: 1268, column: 13, scope: !6341)
!6345 = !DILocation(line: 1268, column: 9, scope: !6341)
!6346 = !DILocation(line: 1269, column: 12, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6341, file: !3, line: 1269, column: 5)
!6348 = !DILocation(line: 1269, column: 10, scope: !6347)
!6349 = !DILocation(line: 1269, column: 17, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6347, file: !3, line: 1269, column: 5)
!6351 = !DILocation(line: 1269, column: 21, scope: !6350)
!6352 = !DILocation(line: 1269, column: 25, scope: !6350)
!6353 = !DILocation(line: 1269, column: 19, scope: !6350)
!6354 = !DILocation(line: 1269, column: 5, scope: !6347)
!6355 = !DILocation(line: 1270, column: 18, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6350, file: !3, line: 1269, column: 34)
!6357 = !DILocation(line: 1270, column: 30, scope: !6356)
!6358 = !DILocation(line: 1270, column: 28, scope: !6356)
!6359 = !DILocation(line: 1270, column: 36, scope: !6356)
!6360 = !DILocation(line: 1270, column: 34, scope: !6356)
!6361 = !DILocation(line: 1270, column: 38, scope: !6356)
!6362 = !DILocation(line: 1270, column: 6, scope: !6356)
!6363 = !DILocation(line: 1270, column: 13, scope: !6356)
!6364 = !DILocation(line: 1270, column: 16, scope: !6356)
!6365 = !DILocation(line: 1271, column: 18, scope: !6356)
!6366 = !DILocation(line: 1271, column: 30, scope: !6356)
!6367 = !DILocation(line: 1271, column: 28, scope: !6356)
!6368 = !DILocation(line: 1271, column: 36, scope: !6356)
!6369 = !DILocation(line: 1271, column: 34, scope: !6356)
!6370 = !DILocation(line: 1271, column: 6, scope: !6356)
!6371 = !DILocation(line: 1271, column: 13, scope: !6356)
!6372 = !DILocation(line: 1271, column: 16, scope: !6356)
!6373 = !DILocation(line: 1272, column: 6, scope: !6356)
!6374 = !DILocation(line: 1272, column: 13, scope: !6356)
!6375 = !DILocation(line: 1272, column: 18, scope: !6356)
!6376 = !DILocation(line: 1274, column: 11, scope: !6356)
!6377 = !DILocation(line: 1275, column: 5, scope: !6356)
!6378 = !DILocation(line: 1269, column: 30, scope: !6350)
!6379 = !DILocation(line: 1269, column: 5, scope: !6350)
!6380 = distinct !{!6380, !6354, !6381}
!6381 = !DILocation(line: 1275, column: 5, scope: !6347)
!6382 = !DILocation(line: 1276, column: 4, scope: !6341)
!6383 = !DILocation(line: 1267, column: 32, scope: !6335)
!6384 = !DILocation(line: 1267, column: 4, scope: !6335)
!6385 = distinct !{!6385, !6339, !6386}
!6386 = !DILocation(line: 1276, column: 4, scope: !6332)
!6387 = !DILocation(line: 1278, column: 3, scope: !6308)
!6388 = !DILocation(line: 1279, column: 12, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6303, file: !3, line: 1279, column: 12)
!6390 = !DILocation(line: 1279, column: 16, scope: !6389)
!6391 = !DILocation(line: 1279, column: 21, scope: !6389)
!6392 = !DILocation(line: 1279, column: 12, scope: !6303)
!6393 = !DILocation(line: 1280, column: 8, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 1280, column: 8)
!6395 = distinct !DILexicalBlock(scope: !6389, file: !3, line: 1279, column: 33)
!6396 = !DILocation(line: 1280, column: 8, scope: !6395)
!6397 = !DILocation(line: 1281, column: 17, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 1280, column: 20)
!6399 = !DILocation(line: 1281, column: 15, scope: !6398)
!6400 = !DILocation(line: 1282, column: 9, scope: !6398)
!6401 = !DILocation(line: 1282, column: 13, scope: !6398)
!6402 = !DILocation(line: 1282, column: 21, scope: !6398)
!6403 = !DILocation(line: 1282, column: 25, scope: !6398)
!6404 = !DILocation(line: 1282, column: 19, scope: !6398)
!6405 = !DILocation(line: 1282, column: 7, scope: !6398)
!6406 = !DILocation(line: 1283, column: 12, scope: !6398)
!6407 = !DILocation(line: 1283, column: 16, scope: !6398)
!6408 = !DILocation(line: 1283, column: 10, scope: !6398)
!6409 = !DILocation(line: 1284, column: 5, scope: !6398)
!6410 = !DILocation(line: 1284, column: 13, scope: !6398)
!6411 = !DILocation(line: 1285, column: 17, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 1284, column: 17)
!6413 = !DILocation(line: 1285, column: 24, scope: !6412)
!6414 = !DILocation(line: 1285, column: 28, scope: !6412)
!6415 = !DILocation(line: 1285, column: 6, scope: !6412)
!6416 = !DILocation(line: 1286, column: 11, scope: !6412)
!6417 = !DILocation(line: 1287, column: 15, scope: !6412)
!6418 = !DILocation(line: 1288, column: 11, scope: !6412)
!6419 = distinct !{!6419, !6409, !6420}
!6420 = !DILocation(line: 1289, column: 5, scope: !6398)
!6421 = !DILocation(line: 1291, column: 12, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 1291, column: 5)
!6423 = !DILocation(line: 1291, column: 10, scope: !6422)
!6424 = !DILocation(line: 1291, column: 17, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6422, file: !3, line: 1291, column: 5)
!6426 = !DILocation(line: 1291, column: 21, scope: !6425)
!6427 = !DILocation(line: 1291, column: 25, scope: !6425)
!6428 = !DILocation(line: 1291, column: 19, scope: !6425)
!6429 = !DILocation(line: 1291, column: 5, scope: !6422)
!6430 = !DILocation(line: 1292, column: 12, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 1291, column: 37)
!6432 = !DILocation(line: 1292, column: 16, scope: !6431)
!6433 = !DILocation(line: 1292, column: 20, scope: !6431)
!6434 = !DILocation(line: 1292, column: 14, scope: !6431)
!6435 = !DILocation(line: 1292, column: 10, scope: !6431)
!6436 = !DILocation(line: 1293, column: 13, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 1293, column: 6)
!6438 = !DILocation(line: 1293, column: 11, scope: !6437)
!6439 = !DILocation(line: 1293, column: 18, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6437, file: !3, line: 1293, column: 6)
!6441 = !DILocation(line: 1293, column: 22, scope: !6440)
!6442 = !DILocation(line: 1293, column: 26, scope: !6440)
!6443 = !DILocation(line: 1293, column: 20, scope: !6440)
!6444 = !DILocation(line: 1293, column: 6, scope: !6437)
!6445 = !DILocation(line: 1294, column: 19, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 1293, column: 35)
!6447 = !DILocation(line: 1294, column: 31, scope: !6446)
!6448 = !DILocation(line: 1294, column: 29, scope: !6446)
!6449 = !DILocation(line: 1294, column: 37, scope: !6446)
!6450 = !DILocation(line: 1294, column: 35, scope: !6446)
!6451 = !DILocation(line: 1294, column: 7, scope: !6446)
!6452 = !DILocation(line: 1294, column: 14, scope: !6446)
!6453 = !DILocation(line: 1294, column: 17, scope: !6446)
!6454 = !DILocation(line: 1295, column: 11, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6446, file: !3, line: 1295, column: 11)
!6456 = !DILocation(line: 1295, column: 16, scope: !6455)
!6457 = !DILocation(line: 1295, column: 20, scope: !6455)
!6458 = !DILocation(line: 1295, column: 23, scope: !6455)
!6459 = !DILocation(line: 1295, column: 13, scope: !6455)
!6460 = !DILocation(line: 1295, column: 11, scope: !6446)
!6461 = !DILocation(line: 1295, column: 40, scope: !6455)
!6462 = !DILocation(line: 1295, column: 52, scope: !6455)
!6463 = !DILocation(line: 1295, column: 50, scope: !6455)
!6464 = !DILocation(line: 1295, column: 28, scope: !6455)
!6465 = !DILocation(line: 1295, column: 35, scope: !6455)
!6466 = !DILocation(line: 1295, column: 38, scope: !6455)
!6467 = !DILocation(line: 1296, column: 24, scope: !6455)
!6468 = !DILocation(line: 1296, column: 36, scope: !6455)
!6469 = !DILocation(line: 1296, column: 34, scope: !6455)
!6470 = !DILocation(line: 1296, column: 42, scope: !6455)
!6471 = !DILocation(line: 1296, column: 40, scope: !6455)
!6472 = !DILocation(line: 1296, column: 44, scope: !6455)
!6473 = !DILocation(line: 1296, column: 12, scope: !6455)
!6474 = !DILocation(line: 1296, column: 19, scope: !6455)
!6475 = !DILocation(line: 1296, column: 22, scope: !6455)
!6476 = !DILocation(line: 1297, column: 7, scope: !6446)
!6477 = !DILocation(line: 1297, column: 14, scope: !6446)
!6478 = !DILocation(line: 1297, column: 19, scope: !6446)
!6479 = !DILocation(line: 1298, column: 12, scope: !6446)
!6480 = !DILocation(line: 1299, column: 6, scope: !6446)
!6481 = !DILocation(line: 1293, column: 31, scope: !6440)
!6482 = !DILocation(line: 1293, column: 6, scope: !6440)
!6483 = distinct !{!6483, !6444, !6484}
!6484 = !DILocation(line: 1299, column: 6, scope: !6437)
!6485 = !DILocation(line: 1300, column: 5, scope: !6431)
!6486 = !DILocation(line: 1291, column: 33, scope: !6425)
!6487 = !DILocation(line: 1291, column: 5, scope: !6425)
!6488 = distinct !{!6488, !6429, !6489}
!6489 = !DILocation(line: 1300, column: 5, scope: !6422)
!6490 = !DILocation(line: 1301, column: 4, scope: !6398)
!6491 = !DILocation(line: 1302, column: 3, scope: !6395)
!6492 = !DILocation(line: 1303, column: 12, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6389, file: !3, line: 1303, column: 12)
!6494 = !DILocation(line: 1303, column: 16, scope: !6493)
!6495 = !DILocation(line: 1303, column: 21, scope: !6493)
!6496 = !DILocation(line: 1303, column: 12, scope: !6389)
!6497 = !DILocation(line: 1304, column: 16, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6493, file: !3, line: 1303, column: 35)
!6499 = !DILocation(line: 1304, column: 14, scope: !6498)
!6500 = !DILocation(line: 1305, column: 8, scope: !6498)
!6501 = !DILocation(line: 1305, column: 12, scope: !6498)
!6502 = !DILocation(line: 1305, column: 6, scope: !6498)
!6503 = !DILocation(line: 1306, column: 11, scope: !6498)
!6504 = !DILocation(line: 1306, column: 15, scope: !6498)
!6505 = !DILocation(line: 1306, column: 9, scope: !6498)
!6506 = !DILocation(line: 1307, column: 4, scope: !6498)
!6507 = !DILocation(line: 1307, column: 12, scope: !6498)
!6508 = !DILocation(line: 1308, column: 16, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6498, file: !3, line: 1307, column: 16)
!6510 = !DILocation(line: 1308, column: 23, scope: !6509)
!6511 = !DILocation(line: 1308, column: 27, scope: !6509)
!6512 = !DILocation(line: 1308, column: 5, scope: !6509)
!6513 = !DILocation(line: 1309, column: 10, scope: !6509)
!6514 = !DILocation(line: 1310, column: 14, scope: !6509)
!6515 = !DILocation(line: 1311, column: 10, scope: !6509)
!6516 = distinct !{!6516, !6506, !6517}
!6517 = !DILocation(line: 1312, column: 4, scope: !6498)
!6518 = !DILocation(line: 1314, column: 8, scope: !6498)
!6519 = !DILocation(line: 1314, column: 12, scope: !6498)
!6520 = !DILocation(line: 1314, column: 6, scope: !6498)
!6521 = !DILocation(line: 1315, column: 12, scope: !6498)
!6522 = !DILocation(line: 1315, column: 16, scope: !6498)
!6523 = !DILocation(line: 1315, column: 10, scope: !6498)
!6524 = !DILocation(line: 1316, column: 4, scope: !6498)
!6525 = !DILocation(line: 1316, column: 12, scope: !6498)
!6526 = !DILocation(line: 1317, column: 18, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6498, file: !3, line: 1316, column: 16)
!6528 = !DILocation(line: 1317, column: 30, scope: !6527)
!6529 = !DILocation(line: 1317, column: 28, scope: !6527)
!6530 = !DILocation(line: 1317, column: 5, scope: !6527)
!6531 = !DILocation(line: 1317, column: 14, scope: !6527)
!6532 = !DILocation(line: 1317, column: 16, scope: !6527)
!6533 = !DILocation(line: 1318, column: 18, scope: !6527)
!6534 = !DILocation(line: 1318, column: 30, scope: !6527)
!6535 = !DILocation(line: 1318, column: 28, scope: !6527)
!6536 = !DILocation(line: 1318, column: 5, scope: !6527)
!6537 = !DILocation(line: 1318, column: 14, scope: !6527)
!6538 = !DILocation(line: 1318, column: 16, scope: !6527)
!6539 = !DILocation(line: 1319, column: 18, scope: !6527)
!6540 = !DILocation(line: 1319, column: 30, scope: !6527)
!6541 = !DILocation(line: 1319, column: 28, scope: !6527)
!6542 = !DILocation(line: 1319, column: 5, scope: !6527)
!6543 = !DILocation(line: 1319, column: 14, scope: !6527)
!6544 = !DILocation(line: 1319, column: 16, scope: !6527)
!6545 = !DILocation(line: 1320, column: 30, scope: !6527)
!6546 = !DILocation(line: 1320, column: 40, scope: !6527)
!6547 = !DILocation(line: 1320, column: 39, scope: !6527)
!6548 = !DILocation(line: 1320, column: 36, scope: !6527)
!6549 = !DILocation(line: 1320, column: 24, scope: !6527)
!6550 = !DILocation(line: 1320, column: 5, scope: !6527)
!6551 = !DILocation(line: 1320, column: 12, scope: !6527)
!6552 = !DILocation(line: 1320, column: 22, scope: !6527)
!6553 = !DILocation(line: 1321, column: 5, scope: !6527)
!6554 = !DILocation(line: 1321, column: 12, scope: !6527)
!6555 = !DILocation(line: 1321, column: 20, scope: !6527)
!6556 = !DILocation(line: 1322, column: 21, scope: !6527)
!6557 = !DILocation(line: 1322, column: 25, scope: !6527)
!6558 = !DILocation(line: 1322, column: 5, scope: !6527)
!6559 = !DILocation(line: 1322, column: 12, scope: !6527)
!6560 = !DILocation(line: 1322, column: 19, scope: !6527)
!6561 = !DILocation(line: 1324, column: 9, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 1324, column: 9)
!6563 = !DILocation(line: 1324, column: 9, scope: !6527)
!6564 = !DILocalVariable(name: "i", scope: !6565, file: !3, line: 1325, type: !6)
!6565 = distinct !DILexicalBlock(scope: !6562, file: !3, line: 1324, column: 18)
!6566 = !DILocation(line: 1325, column: 10, scope: !6565)
!6567 = !DILocation(line: 1327, column: 13, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6565, file: !3, line: 1327, column: 6)
!6569 = !DILocation(line: 1327, column: 11, scope: !6568)
!6570 = !DILocation(line: 1327, column: 18, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6568, file: !3, line: 1327, column: 6)
!6572 = !DILocation(line: 1327, column: 20, scope: !6571)
!6573 = !DILocation(line: 1327, column: 6, scope: !6568)
!6574 = !DILocation(line: 1328, column: 25, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6571, file: !3, line: 1327, column: 41)
!6576 = !DILocation(line: 1328, column: 31, scope: !6575)
!6577 = !DILocation(line: 1328, column: 34, scope: !6575)
!6578 = !DILocation(line: 1328, column: 38, scope: !6575)
!6579 = !DILocation(line: 1328, column: 36, scope: !6575)
!6580 = !DILocation(line: 1328, column: 24, scope: !6575)
!6581 = !DILocation(line: 1328, column: 59, scope: !6575)
!6582 = !DILocation(line: 1328, column: 63, scope: !6575)
!6583 = !DILocation(line: 1328, column: 66, scope: !6575)
!6584 = !DILocation(line: 1328, column: 51, scope: !6575)
!6585 = !DILocation(line: 1328, column: 49, scope: !6575)
!6586 = !DILocation(line: 1328, column: 7, scope: !6575)
!6587 = !DILocation(line: 1328, column: 16, scope: !6575)
!6588 = !DILocation(line: 1328, column: 22, scope: !6575)
!6589 = !DILocation(line: 1329, column: 7, scope: !6575)
!6590 = !DILocation(line: 1329, column: 16, scope: !6575)
!6591 = !DILocation(line: 1329, column: 22, scope: !6575)
!6592 = !DILocation(line: 1330, column: 6, scope: !6575)
!6593 = !DILocation(line: 1327, column: 26, scope: !6571)
!6594 = !DILocation(line: 1327, column: 37, scope: !6571)
!6595 = !DILocation(line: 1327, column: 6, scope: !6571)
!6596 = distinct !{!6596, !6573, !6597}
!6597 = !DILocation(line: 1330, column: 6, scope: !6568)
!6598 = !DILocation(line: 1331, column: 5, scope: !6565)
!6599 = !DILocation(line: 1333, column: 9, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 1333, column: 9)
!6601 = !DILocation(line: 1333, column: 9, scope: !6527)
!6602 = !DILocation(line: 1333, column: 17, scope: !6600)
!6603 = !DILocation(line: 1333, column: 24, scope: !6600)
!6604 = !DILocation(line: 1333, column: 29, scope: !6600)
!6605 = !DILocation(line: 1334, column: 10, scope: !6527)
!6606 = !DILocation(line: 1335, column: 11, scope: !6527)
!6607 = !DILocation(line: 1336, column: 11, scope: !6527)
!6608 = distinct !{!6608, !6524, !6609}
!6609 = !DILocation(line: 1337, column: 4, scope: !6498)
!6610 = !DILocation(line: 1338, column: 3, scope: !6498)
!6611 = !DILocation(line: 1339, column: 12, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6493, file: !3, line: 1339, column: 12)
!6613 = !DILocation(line: 1339, column: 16, scope: !6612)
!6614 = !DILocation(line: 1339, column: 21, scope: !6612)
!6615 = !DILocation(line: 1339, column: 12, scope: !6493)
!6616 = !DILocation(line: 1340, column: 16, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6612, file: !3, line: 1339, column: 33)
!6618 = !DILocation(line: 1340, column: 14, scope: !6617)
!6619 = !DILocation(line: 1341, column: 8, scope: !6617)
!6620 = !DILocation(line: 1341, column: 12, scope: !6617)
!6621 = !DILocation(line: 1341, column: 20, scope: !6617)
!6622 = !DILocation(line: 1341, column: 24, scope: !6617)
!6623 = !DILocation(line: 1341, column: 18, scope: !6617)
!6624 = !DILocation(line: 1341, column: 6, scope: !6617)
!6625 = !DILocation(line: 1342, column: 11, scope: !6617)
!6626 = !DILocation(line: 1342, column: 15, scope: !6617)
!6627 = !DILocation(line: 1342, column: 9, scope: !6617)
!6628 = !DILocation(line: 1343, column: 4, scope: !6617)
!6629 = !DILocation(line: 1343, column: 12, scope: !6617)
!6630 = !DILocation(line: 1344, column: 16, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 1343, column: 16)
!6632 = !DILocation(line: 1344, column: 23, scope: !6631)
!6633 = !DILocation(line: 1344, column: 27, scope: !6631)
!6634 = !DILocation(line: 1344, column: 5, scope: !6631)
!6635 = !DILocation(line: 1345, column: 10, scope: !6631)
!6636 = !DILocation(line: 1346, column: 14, scope: !6631)
!6637 = !DILocation(line: 1347, column: 10, scope: !6631)
!6638 = distinct !{!6638, !6628, !6639}
!6639 = !DILocation(line: 1348, column: 4, scope: !6617)
!6640 = !DILocation(line: 1350, column: 11, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 1350, column: 4)
!6642 = !DILocation(line: 1350, column: 9, scope: !6641)
!6643 = !DILocation(line: 1350, column: 16, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6641, file: !3, line: 1350, column: 4)
!6645 = !DILocation(line: 1350, column: 20, scope: !6644)
!6646 = !DILocation(line: 1350, column: 24, scope: !6644)
!6647 = !DILocation(line: 1350, column: 18, scope: !6644)
!6648 = !DILocation(line: 1350, column: 4, scope: !6641)
!6649 = !DILocation(line: 1352, column: 11, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 1352, column: 10)
!6651 = distinct !DILexicalBlock(scope: !6644, file: !3, line: 1350, column: 36)
!6652 = !DILocation(line: 1352, column: 15, scope: !6650)
!6653 = !DILocation(line: 1352, column: 20, scope: !6650)
!6654 = !DILocation(line: 1352, column: 33, scope: !6650)
!6655 = !DILocation(line: 1352, column: 38, scope: !6650)
!6656 = !DILocation(line: 1352, column: 41, scope: !6650)
!6657 = !DILocation(line: 1352, column: 46, scope: !6650)
!6658 = !DILocation(line: 1352, column: 50, scope: !6650)
!6659 = !DILocation(line: 1352, column: 56, scope: !6650)
!6660 = !DILocation(line: 1352, column: 43, scope: !6650)
!6661 = !DILocation(line: 1352, column: 10, scope: !6651)
!6662 = !DILocation(line: 1352, column: 61, scope: !6650)
!6663 = !DILocation(line: 1354, column: 9, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 1354, column: 9)
!6665 = !DILocation(line: 1354, column: 13, scope: !6664)
!6666 = !DILocation(line: 1354, column: 18, scope: !6664)
!6667 = !DILocation(line: 1354, column: 9, scope: !6651)
!6668 = !DILocation(line: 1355, column: 11, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6664, file: !3, line: 1354, column: 31)
!6670 = !DILocation(line: 1355, column: 23, scope: !6669)
!6671 = !DILocation(line: 1355, column: 27, scope: !6669)
!6672 = !DILocation(line: 1355, column: 32, scope: !6669)
!6673 = !DILocation(line: 1355, column: 30, scope: !6669)
!6674 = !DILocation(line: 1355, column: 21, scope: !6669)
!6675 = !DILocation(line: 1355, column: 9, scope: !6669)
!6676 = !DILocation(line: 1356, column: 11, scope: !6669)
!6677 = !DILocation(line: 1356, column: 16, scope: !6669)
!6678 = !DILocation(line: 1356, column: 20, scope: !6669)
!6679 = !DILocation(line: 1356, column: 14, scope: !6669)
!6680 = !DILocation(line: 1356, column: 23, scope: !6669)
!6681 = !DILocation(line: 1356, column: 9, scope: !6669)
!6682 = !DILocation(line: 1357, column: 11, scope: !6669)
!6683 = !DILocation(line: 1357, column: 16, scope: !6669)
!6684 = !DILocation(line: 1357, column: 20, scope: !6669)
!6685 = !DILocation(line: 1357, column: 14, scope: !6669)
!6686 = !DILocation(line: 1357, column: 9, scope: !6669)
!6687 = !DILocation(line: 1358, column: 11, scope: !6669)
!6688 = !DILocation(line: 1358, column: 16, scope: !6669)
!6689 = !DILocation(line: 1358, column: 20, scope: !6669)
!6690 = !DILocation(line: 1358, column: 14, scope: !6669)
!6691 = !DILocation(line: 1358, column: 9, scope: !6669)
!6692 = !DILocation(line: 1359, column: 8, scope: !6669)
!6693 = !DILocation(line: 1360, column: 5, scope: !6669)
!6694 = !DILocation(line: 1362, column: 11, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6664, file: !3, line: 1361, column: 10)
!6696 = !DILocation(line: 1362, column: 23, scope: !6695)
!6697 = !DILocation(line: 1362, column: 27, scope: !6695)
!6698 = !DILocation(line: 1362, column: 32, scope: !6695)
!6699 = !DILocation(line: 1362, column: 30, scope: !6695)
!6700 = !DILocation(line: 1362, column: 21, scope: !6695)
!6701 = !DILocation(line: 1362, column: 9, scope: !6695)
!6702 = !DILocation(line: 1363, column: 11, scope: !6695)
!6703 = !DILocation(line: 1363, column: 14, scope: !6695)
!6704 = !DILocation(line: 1363, column: 9, scope: !6695)
!6705 = !DILocation(line: 1364, column: 11, scope: !6695)
!6706 = !DILocation(line: 1364, column: 16, scope: !6695)
!6707 = !DILocation(line: 1364, column: 20, scope: !6695)
!6708 = !DILocation(line: 1364, column: 14, scope: !6695)
!6709 = !DILocation(line: 1364, column: 9, scope: !6695)
!6710 = !DILocation(line: 1365, column: 11, scope: !6695)
!6711 = !DILocation(line: 1365, column: 16, scope: !6695)
!6712 = !DILocation(line: 1365, column: 20, scope: !6695)
!6713 = !DILocation(line: 1365, column: 14, scope: !6695)
!6714 = !DILocation(line: 1365, column: 9, scope: !6695)
!6715 = !DILocation(line: 1366, column: 8, scope: !6695)
!6716 = !DILocation(line: 1368, column: 11, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 1368, column: 10)
!6718 = !DILocation(line: 1368, column: 15, scope: !6717)
!6719 = !DILocation(line: 1368, column: 20, scope: !6717)
!6720 = !DILocation(line: 1368, column: 33, scope: !6717)
!6721 = !DILocation(line: 1368, column: 36, scope: !6717)
!6722 = !DILocation(line: 1368, column: 41, scope: !6717)
!6723 = !DILocation(line: 1368, column: 45, scope: !6717)
!6724 = !DILocation(line: 1368, column: 51, scope: !6717)
!6725 = !DILocation(line: 1368, column: 38, scope: !6717)
!6726 = !DILocation(line: 1368, column: 10, scope: !6651)
!6727 = !DILocation(line: 1369, column: 12, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6717, file: !3, line: 1368, column: 56)
!6729 = !DILocation(line: 1369, column: 16, scope: !6728)
!6730 = !DILocation(line: 1369, column: 24, scope: !6728)
!6731 = !DILocation(line: 1369, column: 28, scope: !6728)
!6732 = !DILocation(line: 1369, column: 22, scope: !6728)
!6733 = !DILocation(line: 1369, column: 9, scope: !6728)
!6734 = !DILocation(line: 1370, column: 12, scope: !6728)
!6735 = !DILocation(line: 1370, column: 16, scope: !6728)
!6736 = !DILocation(line: 1370, column: 24, scope: !6728)
!6737 = !DILocation(line: 1370, column: 28, scope: !6728)
!6738 = !DILocation(line: 1370, column: 22, scope: !6728)
!6739 = !DILocation(line: 1370, column: 9, scope: !6728)
!6740 = !DILocation(line: 1371, column: 5, scope: !6728)
!6741 = !DILocation(line: 1373, column: 5, scope: !6651)
!6742 = !DILocation(line: 1373, column: 12, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6744, file: !3, line: 1373, column: 5)
!6744 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 1373, column: 5)
!6745 = !DILocation(line: 1373, column: 16, scope: !6743)
!6746 = !DILocation(line: 1373, column: 20, scope: !6743)
!6747 = !DILocation(line: 1373, column: 14, scope: !6743)
!6748 = !DILocation(line: 1373, column: 5, scope: !6744)
!6749 = !DILocation(line: 1374, column: 19, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 1373, column: 29)
!6751 = !DILocation(line: 1374, column: 6, scope: !6750)
!6752 = !DILocation(line: 1374, column: 15, scope: !6750)
!6753 = !DILocation(line: 1374, column: 17, scope: !6750)
!6754 = !DILocation(line: 1375, column: 19, scope: !6750)
!6755 = !DILocation(line: 1375, column: 6, scope: !6750)
!6756 = !DILocation(line: 1375, column: 15, scope: !6750)
!6757 = !DILocation(line: 1375, column: 17, scope: !6750)
!6758 = !DILocation(line: 1376, column: 19, scope: !6750)
!6759 = !DILocation(line: 1376, column: 6, scope: !6750)
!6760 = !DILocation(line: 1376, column: 15, scope: !6750)
!6761 = !DILocation(line: 1376, column: 17, scope: !6750)
!6762 = !DILocation(line: 1377, column: 19, scope: !6750)
!6763 = !DILocation(line: 1377, column: 6, scope: !6750)
!6764 = !DILocation(line: 1377, column: 15, scope: !6750)
!6765 = !DILocation(line: 1377, column: 17, scope: !6750)
!6766 = !DILocation(line: 1378, column: 31, scope: !6750)
!6767 = !DILocation(line: 1378, column: 41, scope: !6750)
!6768 = !DILocation(line: 1378, column: 40, scope: !6750)
!6769 = !DILocation(line: 1378, column: 37, scope: !6750)
!6770 = !DILocation(line: 1378, column: 25, scope: !6750)
!6771 = !DILocation(line: 1378, column: 6, scope: !6750)
!6772 = !DILocation(line: 1378, column: 13, scope: !6750)
!6773 = !DILocation(line: 1378, column: 23, scope: !6750)
!6774 = !DILocation(line: 1379, column: 6, scope: !6750)
!6775 = !DILocation(line: 1379, column: 13, scope: !6750)
!6776 = !DILocation(line: 1379, column: 21, scope: !6750)
!6777 = !DILocation(line: 1380, column: 22, scope: !6750)
!6778 = !DILocation(line: 1380, column: 26, scope: !6750)
!6779 = !DILocation(line: 1380, column: 6, scope: !6750)
!6780 = !DILocation(line: 1380, column: 13, scope: !6750)
!6781 = !DILocation(line: 1380, column: 20, scope: !6750)
!6782 = !DILocation(line: 1382, column: 10, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6750, file: !3, line: 1382, column: 10)
!6784 = !DILocation(line: 1382, column: 10, scope: !6750)
!6785 = !DILocalVariable(name: "orco_sizeu", scope: !6786, file: !3, line: 1383, type: !6)
!6786 = distinct !DILexicalBlock(scope: !6783, file: !3, line: 1382, column: 19)
!6787 = !DILocation(line: 1383, column: 11, scope: !6786)
!6788 = !DILocation(line: 1383, column: 24, scope: !6786)
!6789 = !DILocation(line: 1383, column: 28, scope: !6786)
!6790 = !DILocation(line: 1383, column: 31, scope: !6786)
!6791 = !DILocalVariable(name: "orco_sizev", scope: !6786, file: !3, line: 1384, type: !6)
!6792 = !DILocation(line: 1384, column: 11, scope: !6786)
!6793 = !DILocation(line: 1384, column: 24, scope: !6786)
!6794 = !DILocation(line: 1384, column: 28, scope: !6786)
!6795 = !DILocation(line: 1384, column: 34, scope: !6786)
!6796 = !DILocalVariable(name: "i", scope: !6786, file: !3, line: 1385, type: !6)
!6797 = !DILocation(line: 1385, column: 11, scope: !6786)
!6798 = !DILocation(line: 1388, column: 11, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6786, file: !3, line: 1388, column: 11)
!6800 = !DILocation(line: 1388, column: 15, scope: !6799)
!6801 = !DILocation(line: 1388, column: 20, scope: !6799)
!6802 = !DILocation(line: 1388, column: 11, scope: !6786)
!6803 = !DILocation(line: 1389, column: 18, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1388, column: 33)
!6805 = !DILocation(line: 1390, column: 12, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6804, file: !3, line: 1390, column: 12)
!6807 = !DILocation(line: 1390, column: 16, scope: !6806)
!6808 = !DILocation(line: 1390, column: 21, scope: !6806)
!6809 = !DILocation(line: 1390, column: 12, scope: !6804)
!6810 = !DILocation(line: 1391, column: 19, scope: !6806)
!6811 = !DILocation(line: 1391, column: 9, scope: !6806)
!6812 = !DILocation(line: 1392, column: 7, scope: !6804)
!6813 = !DILocation(line: 1393, column: 16, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1393, column: 16)
!6815 = !DILocation(line: 1393, column: 20, scope: !6814)
!6816 = !DILocation(line: 1393, column: 25, scope: !6814)
!6817 = !DILocation(line: 1393, column: 16, scope: !6799)
!6818 = !DILocation(line: 1394, column: 18, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 1393, column: 38)
!6820 = !DILocation(line: 1395, column: 7, scope: !6819)
!6821 = !DILocation(line: 1397, column: 14, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6786, file: !3, line: 1397, column: 7)
!6823 = !DILocation(line: 1397, column: 12, scope: !6822)
!6824 = !DILocation(line: 1397, column: 19, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6822, file: !3, line: 1397, column: 7)
!6826 = !DILocation(line: 1397, column: 21, scope: !6825)
!6827 = !DILocation(line: 1397, column: 7, scope: !6822)
!6828 = !DILocalVariable(name: "v", scope: !6829, file: !3, line: 1399, type: !6)
!6829 = distinct !DILexicalBlock(scope: !6825, file: !3, line: 1397, column: 42)
!6830 = !DILocation(line: 1399, column: 12, scope: !6829)
!6831 = !DILocation(line: 1399, column: 16, scope: !6829)
!6832 = !DILocation(line: 1399, column: 22, scope: !6829)
!6833 = !DILocation(line: 1399, column: 25, scope: !6829)
!6834 = !DILocation(line: 1399, column: 29, scope: !6829)
!6835 = !DILocation(line: 1399, column: 27, scope: !6829)
!6836 = !DILocation(line: 1401, column: 26, scope: !6829)
!6837 = !DILocation(line: 1401, column: 30, scope: !6829)
!6838 = !DILocation(line: 1401, column: 34, scope: !6829)
!6839 = !DILocation(line: 1401, column: 28, scope: !6829)
!6840 = !DILocation(line: 1401, column: 25, scope: !6829)
!6841 = !DILocation(line: 1401, column: 47, scope: !6829)
!6842 = !DILocation(line: 1401, column: 40, scope: !6829)
!6843 = !DILocation(line: 1401, column: 38, scope: !6829)
!6844 = !DILocation(line: 1401, column: 8, scope: !6829)
!6845 = !DILocation(line: 1401, column: 17, scope: !6829)
!6846 = !DILocation(line: 1401, column: 23, scope: !6829)
!6847 = !DILocation(line: 1402, column: 26, scope: !6829)
!6848 = !DILocation(line: 1402, column: 30, scope: !6829)
!6849 = !DILocation(line: 1402, column: 34, scope: !6829)
!6850 = !DILocation(line: 1402, column: 28, scope: !6829)
!6851 = !DILocation(line: 1402, column: 25, scope: !6829)
!6852 = !DILocation(line: 1402, column: 47, scope: !6829)
!6853 = !DILocation(line: 1402, column: 40, scope: !6829)
!6854 = !DILocation(line: 1402, column: 38, scope: !6829)
!6855 = !DILocation(line: 1402, column: 8, scope: !6829)
!6856 = !DILocation(line: 1402, column: 17, scope: !6829)
!6857 = !DILocation(line: 1402, column: 23, scope: !6829)
!6858 = !DILocation(line: 1405, column: 13, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 1405, column: 12)
!6860 = !DILocation(line: 1405, column: 15, scope: !6859)
!6861 = !DILocation(line: 1405, column: 20, scope: !6859)
!6862 = !DILocation(line: 1405, column: 23, scope: !6859)
!6863 = !DILocation(line: 1405, column: 25, scope: !6859)
!6864 = !DILocation(line: 1405, column: 31, scope: !6859)
!6865 = !DILocation(line: 1405, column: 34, scope: !6859)
!6866 = !DILocation(line: 1405, column: 43, scope: !6859)
!6867 = !DILocation(line: 1405, column: 49, scope: !6859)
!6868 = !DILocation(line: 1405, column: 12, scope: !6829)
!6869 = !DILocation(line: 1406, column: 9, scope: !6859)
!6870 = !DILocation(line: 1406, column: 18, scope: !6859)
!6871 = !DILocation(line: 1406, column: 24, scope: !6859)
!6872 = !DILocation(line: 1407, column: 13, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 1407, column: 12)
!6874 = !DILocation(line: 1407, column: 15, scope: !6873)
!6875 = !DILocation(line: 1407, column: 20, scope: !6873)
!6876 = !DILocation(line: 1407, column: 23, scope: !6873)
!6877 = !DILocation(line: 1407, column: 25, scope: !6873)
!6878 = !DILocation(line: 1407, column: 31, scope: !6873)
!6879 = !DILocation(line: 1407, column: 34, scope: !6873)
!6880 = !DILocation(line: 1407, column: 43, scope: !6873)
!6881 = !DILocation(line: 1407, column: 49, scope: !6873)
!6882 = !DILocation(line: 1407, column: 12, scope: !6829)
!6883 = !DILocation(line: 1408, column: 9, scope: !6873)
!6884 = !DILocation(line: 1408, column: 18, scope: !6873)
!6885 = !DILocation(line: 1408, column: 24, scope: !6873)
!6886 = !DILocation(line: 1409, column: 7, scope: !6829)
!6887 = !DILocation(line: 1397, column: 27, scope: !6825)
!6888 = !DILocation(line: 1397, column: 38, scope: !6825)
!6889 = !DILocation(line: 1397, column: 7, scope: !6825)
!6890 = distinct !{!6890, !6827, !6891}
!6891 = !DILocation(line: 1409, column: 7, scope: !6822)
!6892 = !DILocation(line: 1410, column: 6, scope: !6786)
!6893 = !DILocation(line: 1412, column: 10, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6750, file: !3, line: 1412, column: 10)
!6895 = !DILocation(line: 1412, column: 10, scope: !6750)
!6896 = !DILocation(line: 1412, column: 18, scope: !6894)
!6897 = !DILocation(line: 1412, column: 25, scope: !6894)
!6898 = !DILocation(line: 1412, column: 30, scope: !6894)
!6899 = !DILocation(line: 1413, column: 11, scope: !6750)
!6900 = !DILocation(line: 1414, column: 12, scope: !6750)
!6901 = !DILocation(line: 1416, column: 11, scope: !6750)
!6902 = !DILocation(line: 1416, column: 9, scope: !6750)
!6903 = !DILocation(line: 1417, column: 8, scope: !6750)
!6904 = !DILocation(line: 1418, column: 11, scope: !6750)
!6905 = !DILocation(line: 1418, column: 9, scope: !6750)
!6906 = !DILocation(line: 1419, column: 8, scope: !6750)
!6907 = !DILocation(line: 1420, column: 5, scope: !6750)
!6908 = !DILocation(line: 1373, column: 25, scope: !6743)
!6909 = !DILocation(line: 1373, column: 5, scope: !6743)
!6910 = distinct !{!6910, !6748, !6911}
!6911 = !DILocation(line: 1420, column: 5, scope: !6744)
!6912 = !DILocation(line: 1421, column: 4, scope: !6651)
!6913 = !DILocation(line: 1350, column: 32, scope: !6644)
!6914 = !DILocation(line: 1350, column: 4, scope: !6644)
!6915 = distinct !{!6915, !6648, !6916}
!6916 = !DILocation(line: 1421, column: 4, scope: !6641)
!6917 = !DILocation(line: 1422, column: 3, scope: !6617)
!6918 = !DILocation(line: 1424, column: 8, scope: !6297)
!6919 = !DILocation(line: 1424, column: 12, scope: !6297)
!6920 = !DILocation(line: 1424, column: 6, scope: !6297)
!6921 = distinct !{!6921, !6294, !6922}
!6922 = !DILocation(line: 1425, column: 2, scope: !6054)
!6923 = !DILocation(line: 1427, column: 6, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 1427, column: 6)
!6925 = !DILocation(line: 1427, column: 6, scope: !6054)
!6926 = !DILocation(line: 1428, column: 27, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 1427, column: 15)
!6928 = !DILocation(line: 1429, column: 28, scope: !6927)
!6929 = !DILocation(line: 1429, column: 27, scope: !6927)
!6930 = !DILocation(line: 1429, column: 38, scope: !6927)
!6931 = !DILocation(line: 1429, column: 37, scope: !6927)
!6932 = !DILocation(line: 1429, column: 47, scope: !6927)
!6933 = !DILocation(line: 1428, column: 3, scope: !6927)
!6934 = !DILocation(line: 1430, column: 2, scope: !6927)
!6935 = !DILocation(line: 1432, column: 14, scope: !6054)
!6936 = !DILocation(line: 1432, column: 3, scope: !6054)
!6937 = !DILocation(line: 1432, column: 12, scope: !6054)
!6938 = !DILocation(line: 1433, column: 14, scope: !6054)
!6939 = !DILocation(line: 1433, column: 3, scope: !6054)
!6940 = !DILocation(line: 1433, column: 12, scope: !6054)
!6941 = !DILocation(line: 1434, column: 14, scope: !6054)
!6942 = !DILocation(line: 1434, column: 3, scope: !6054)
!6943 = !DILocation(line: 1434, column: 12, scope: !6054)
!6944 = !DILocation(line: 1435, column: 14, scope: !6054)
!6945 = !DILocation(line: 1435, column: 3, scope: !6054)
!6946 = !DILocation(line: 1435, column: 12, scope: !6054)
!6947 = !DILocation(line: 1437, column: 2, scope: !6054)
!6948 = !DILocation(line: 1438, column: 1, scope: !6054)
!6949 = distinct !DISubprogram(name: "make_edges_mdata_extend", scope: !3, file: !3, line: 1088, type: !6950, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!6950 = !DISubroutineType(types: !6951)
!6951 = !{null, !6011, !1117, !6952, !3132, !4039}
!6952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6953, size: 64)
!6953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2722)
!6954 = !DILocalVariable(name: "r_alledge", arg: 1, scope: !6949, file: !3, line: 1088, type: !6011)
!6955 = !DILocation(line: 1088, column: 45, scope: !6949)
!6956 = !DILocalVariable(name: "r_totedge", arg: 2, scope: !6949, file: !3, line: 1088, type: !1117)
!6957 = !DILocation(line: 1088, column: 61, scope: !6949)
!6958 = !DILocalVariable(name: "mpoly", arg: 3, scope: !6949, file: !3, line: 1089, type: !6952)
!6959 = !DILocation(line: 1089, column: 50, scope: !6949)
!6960 = !DILocalVariable(name: "mloop", arg: 4, scope: !6949, file: !3, line: 1089, type: !3132)
!6961 = !DILocation(line: 1089, column: 64, scope: !6949)
!6962 = !DILocalVariable(name: "totpoly", arg: 5, scope: !6949, file: !3, line: 1090, type: !4039)
!6963 = !DILocation(line: 1090, column: 47, scope: !6949)
!6964 = !DILocalVariable(name: "totedge", scope: !6949, file: !3, line: 1092, type: !6)
!6965 = !DILocation(line: 1092, column: 6, scope: !6949)
!6966 = !DILocation(line: 1092, column: 17, scope: !6949)
!6967 = !DILocation(line: 1092, column: 16, scope: !6949)
!6968 = !DILocalVariable(name: "totedge_new", scope: !6949, file: !3, line: 1093, type: !6)
!6969 = !DILocation(line: 1093, column: 6, scope: !6949)
!6970 = !DILocalVariable(name: "eh", scope: !6949, file: !3, line: 1094, type: !3049)
!6971 = !DILocation(line: 1094, column: 12, scope: !6949)
!6972 = !DILocalVariable(name: "eh_reserve", scope: !6949, file: !3, line: 1095, type: !13)
!6973 = !DILocation(line: 1095, column: 15, scope: !6949)
!6974 = !DILocalVariable(name: "mp", scope: !6949, file: !3, line: 1096, type: !6952)
!6975 = !DILocation(line: 1096, column: 15, scope: !6949)
!6976 = !DILocalVariable(name: "i", scope: !6949, file: !3, line: 1097, type: !6)
!6977 = !DILocation(line: 1097, column: 6, scope: !6949)
!6978 = !DILocation(line: 1099, column: 22, scope: !6949)
!6979 = !DILocation(line: 1099, column: 31, scope: !6949)
!6980 = !DILocation(line: 1099, column: 15, scope: !6949)
!6981 = !DILocation(line: 1099, column: 13, scope: !6949)
!6982 = !DILocation(line: 1100, column: 37, scope: !6949)
!6983 = !DILocation(line: 1100, column: 7, scope: !6949)
!6984 = !DILocation(line: 1100, column: 5, scope: !6949)
!6985 = !DILocation(line: 1102, column: 9, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 1102, column: 2)
!6987 = !DILocation(line: 1102, column: 19, scope: !6986)
!6988 = !DILocation(line: 1102, column: 17, scope: !6986)
!6989 = !DILocation(line: 1102, column: 7, scope: !6986)
!6990 = !DILocation(line: 1102, column: 26, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6986, file: !3, line: 1102, column: 2)
!6992 = !DILocation(line: 1102, column: 30, scope: !6991)
!6993 = !DILocation(line: 1102, column: 28, scope: !6991)
!6994 = !DILocation(line: 1102, column: 2, scope: !6986)
!6995 = !DILocation(line: 1103, column: 33, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6991, file: !3, line: 1102, column: 50)
!6997 = !DILocation(line: 1103, column: 37, scope: !6996)
!6998 = !DILocation(line: 1103, column: 41, scope: !6996)
!6999 = !DILocation(line: 1103, column: 49, scope: !6996)
!7000 = !DILocation(line: 1103, column: 53, scope: !6996)
!7001 = !DILocation(line: 1103, column: 47, scope: !6996)
!7002 = !DILocation(line: 1103, column: 3, scope: !6996)
!7003 = !DILocation(line: 1104, column: 2, scope: !6996)
!7004 = !DILocation(line: 1102, column: 40, scope: !6991)
!7005 = !DILocation(line: 1102, column: 46, scope: !6991)
!7006 = !DILocation(line: 1102, column: 2, scope: !6991)
!7007 = distinct !{!7007, !6994, !7008}
!7008 = !DILocation(line: 1104, column: 2, scope: !6986)
!7009 = !DILocation(line: 1106, column: 34, scope: !6949)
!7010 = !DILocation(line: 1106, column: 16, scope: !6949)
!7011 = !DILocation(line: 1106, column: 14, scope: !6949)
!7012 = !DILocation(line: 1118, column: 6, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 1118, column: 6)
!7014 = !DILocation(line: 1118, column: 6, scope: !6949)
!7015 = !DILocalVariable(name: "ehi", scope: !7016, file: !3, line: 1119, type: !7017)
!7016 = distinct !DILexicalBlock(scope: !7013, file: !3, line: 1118, column: 19)
!7017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7018, size: 64)
!7018 = !DIDerivedType(tag: DW_TAG_typedef, name: "EdgeHashIterator", file: !2736, line: 41, baseType: !7019)
!7019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EdgeHashIterator", file: !2736, line: 37, size: 192, elements: !7020)
!7020 = !{!7021, !7022, !7025}
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !7019, file: !2736, line: 38, baseType: !3049, size: 64)
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "curEntry", scope: !7019, file: !2736, line: 39, baseType: !7023, size: 64, offset: 64)
!7023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7024, size: 64)
!7024 = !DICompositeType(tag: DW_TAG_structure_type, name: "EdgeEntry", file: !2736, line: 39, flags: DIFlagFwdDecl)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "curBucket", scope: !7019, file: !2736, line: 40, baseType: !13, size: 32, offset: 128)
!7026 = !DILocation(line: 1119, column: 21, scope: !7016)
!7027 = !DILocalVariable(name: "medge", scope: !7016, file: !3, line: 1120, type: !3035)
!7028 = !DILocation(line: 1120, column: 10, scope: !7016)
!7029 = !DILocalVariable(name: "e_index", scope: !7016, file: !3, line: 1121, type: !13)
!7030 = !DILocation(line: 1121, column: 16, scope: !7016)
!7031 = !DILocation(line: 1121, column: 26, scope: !7016)
!7032 = !DILocation(line: 1123, column: 26, scope: !7016)
!7033 = !DILocation(line: 1123, column: 25, scope: !7016)
!7034 = !DILocation(line: 1123, column: 38, scope: !7016)
!7035 = !DILocation(line: 1124, column: 38, scope: !7016)
!7036 = !DILocation(line: 1124, column: 66, scope: !7016)
!7037 = !DILocation(line: 1124, column: 64, scope: !7016)
!7038 = !DILocation(line: 1123, column: 24, scope: !7016)
!7039 = !DILocation(line: 1123, column: 22, scope: !7016)
!7040 = !DILocation(line: 1123, column: 4, scope: !7016)
!7041 = !DILocation(line: 1123, column: 14, scope: !7016)
!7042 = !DILocation(line: 1125, column: 12, scope: !7016)
!7043 = !DILocation(line: 1125, column: 9, scope: !7016)
!7044 = !DILocation(line: 1127, column: 14, scope: !7016)
!7045 = !DILocation(line: 1127, column: 11, scope: !7016)
!7046 = !DILocation(line: 1130, column: 39, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7016, file: !3, line: 1130, column: 3)
!7048 = !DILocation(line: 1130, column: 14, scope: !7047)
!7049 = !DILocation(line: 1130, column: 12, scope: !7047)
!7050 = !DILocation(line: 1130, column: 8, scope: !7047)
!7051 = !DILocation(line: 1131, column: 36, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7047, file: !3, line: 1130, column: 3)
!7053 = !DILocation(line: 1131, column: 8, scope: !7052)
!7054 = !DILocation(line: 1131, column: 41, scope: !7052)
!7055 = !DILocation(line: 1130, column: 3, scope: !7047)
!7056 = !DILocation(line: 1134, column: 32, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7052, file: !3, line: 1133, column: 3)
!7058 = !DILocation(line: 1134, column: 38, scope: !7057)
!7059 = !DILocation(line: 1134, column: 45, scope: !7057)
!7060 = !DILocation(line: 1134, column: 50, scope: !7057)
!7061 = !DILocation(line: 1134, column: 57, scope: !7057)
!7062 = !DILocation(line: 1134, column: 4, scope: !7057)
!7063 = !DILocation(line: 1135, column: 34, scope: !7057)
!7064 = !DILocation(line: 1135, column: 39, scope: !7057)
!7065 = !DILocation(line: 1135, column: 4, scope: !7057)
!7066 = !DILocation(line: 1137, column: 20, scope: !7057)
!7067 = !DILocation(line: 1137, column: 27, scope: !7057)
!7068 = !DILocation(line: 1137, column: 35, scope: !7057)
!7069 = !DILocation(line: 1137, column: 4, scope: !7057)
!7070 = !DILocation(line: 1137, column: 11, scope: !7057)
!7071 = !DILocation(line: 1137, column: 18, scope: !7057)
!7072 = !DILocation(line: 1138, column: 4, scope: !7057)
!7073 = !DILocation(line: 1138, column: 11, scope: !7057)
!7074 = !DILocation(line: 1138, column: 16, scope: !7057)
!7075 = !DILocation(line: 1139, column: 3, scope: !7057)
!7076 = !DILocation(line: 1132, column: 34, scope: !7052)
!7077 = !DILocation(line: 1132, column: 8, scope: !7052)
!7078 = !DILocation(line: 1132, column: 40, scope: !7052)
!7079 = !DILocation(line: 1132, column: 56, scope: !7052)
!7080 = !DILocation(line: 1130, column: 3, scope: !7052)
!7081 = distinct !{!7081, !7055, !7082}
!7082 = !DILocation(line: 1139, column: 3, scope: !7047)
!7083 = !DILocation(line: 1140, column: 29, scope: !7016)
!7084 = !DILocation(line: 1140, column: 3, scope: !7016)
!7085 = !DILocation(line: 1142, column: 16, scope: !7016)
!7086 = !DILocation(line: 1142, column: 4, scope: !7016)
!7087 = !DILocation(line: 1142, column: 14, scope: !7016)
!7088 = !DILocation(line: 1145, column: 10, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7016, file: !3, line: 1145, column: 3)
!7090 = !DILocation(line: 1145, column: 20, scope: !7089)
!7091 = !DILocation(line: 1145, column: 18, scope: !7089)
!7092 = !DILocation(line: 1145, column: 8, scope: !7089)
!7093 = !DILocation(line: 1145, column: 27, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7089, file: !3, line: 1145, column: 3)
!7095 = !DILocation(line: 1145, column: 31, scope: !7094)
!7096 = !DILocation(line: 1145, column: 29, scope: !7094)
!7097 = !DILocation(line: 1145, column: 3, scope: !7089)
!7098 = !DILocalVariable(name: "l", scope: !7099, file: !3, line: 1146, type: !3132)
!7099 = distinct !DILexicalBlock(scope: !7094, file: !3, line: 1145, column: 51)
!7100 = !DILocation(line: 1146, column: 11, scope: !7099)
!7101 = !DILocation(line: 1146, column: 16, scope: !7099)
!7102 = !DILocation(line: 1146, column: 22, scope: !7099)
!7103 = !DILocation(line: 1146, column: 26, scope: !7099)
!7104 = !DILocalVariable(name: "l_prev", scope: !7099, file: !3, line: 1147, type: !3132)
!7105 = !DILocation(line: 1147, column: 11, scope: !7099)
!7106 = !DILocation(line: 1147, column: 21, scope: !7099)
!7107 = !DILocation(line: 1147, column: 26, scope: !7099)
!7108 = !DILocation(line: 1147, column: 30, scope: !7099)
!7109 = !DILocation(line: 1147, column: 38, scope: !7099)
!7110 = !DILocation(line: 1147, column: 23, scope: !7099)
!7111 = !DILocalVariable(name: "j", scope: !7099, file: !3, line: 1148, type: !6)
!7112 = !DILocation(line: 1148, column: 8, scope: !7099)
!7113 = !DILocation(line: 1149, column: 11, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 1149, column: 4)
!7115 = !DILocation(line: 1149, column: 9, scope: !7114)
!7116 = !DILocation(line: 1149, column: 16, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 1149, column: 4)
!7118 = !DILocation(line: 1149, column: 20, scope: !7117)
!7119 = !DILocation(line: 1149, column: 24, scope: !7117)
!7120 = !DILocation(line: 1149, column: 18, scope: !7117)
!7121 = !DILocation(line: 1149, column: 4, scope: !7114)
!7122 = !DILocation(line: 1151, column: 17, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7117, file: !3, line: 1149, column: 43)
!7124 = !DILocation(line: 1151, column: 5, scope: !7123)
!7125 = !DILocation(line: 1151, column: 13, scope: !7123)
!7126 = !DILocation(line: 1151, column: 15, scope: !7123)
!7127 = !DILocation(line: 1152, column: 14, scope: !7123)
!7128 = !DILocation(line: 1152, column: 12, scope: !7123)
!7129 = !DILocation(line: 1153, column: 4, scope: !7123)
!7130 = !DILocation(line: 1149, column: 34, scope: !7117)
!7131 = !DILocation(line: 1149, column: 39, scope: !7117)
!7132 = !DILocation(line: 1149, column: 4, scope: !7117)
!7133 = distinct !{!7133, !7121, !7134}
!7134 = !DILocation(line: 1153, column: 4, scope: !7114)
!7135 = !DILocation(line: 1154, column: 3, scope: !7099)
!7136 = !DILocation(line: 1145, column: 41, scope: !7094)
!7137 = !DILocation(line: 1145, column: 47, scope: !7094)
!7138 = !DILocation(line: 1145, column: 3, scope: !7094)
!7139 = distinct !{!7139, !7097, !7140}
!7140 = !DILocation(line: 1154, column: 3, scope: !7089)
!7141 = !DILocation(line: 1155, column: 2, scope: !7016)
!7142 = !DILocation(line: 1157, column: 20, scope: !6949)
!7143 = !DILocation(line: 1157, column: 2, scope: !6949)
!7144 = !DILocation(line: 1158, column: 1, scope: !6949)
!7145 = distinct !DISubprogram(name: "BKE_mesh_from_nurbs_displist", scope: !3, file: !3, line: 1442, type: !7146, scopeLine: 1443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!7146 = !DISubroutineType(types: !7147)
!7147 = !{null, !4322, !1286, !1224}
!7148 = !DILocalVariable(name: "ob", arg: 1, scope: !7145, file: !3, line: 1442, type: !4322)
!7149 = !DILocation(line: 1442, column: 43, scope: !7145)
!7150 = !DILocalVariable(name: "dispbase", arg: 2, scope: !7145, file: !3, line: 1442, type: !1286)
!7151 = !DILocation(line: 1442, column: 57, scope: !7145)
!7152 = !DILocalVariable(name: "use_orco_uv", arg: 3, scope: !7145, file: !3, line: 1442, type: !1224)
!7153 = !DILocation(line: 1442, column: 78, scope: !7145)
!7154 = !DILocalVariable(name: "bmain", scope: !7145, file: !3, line: 1444, type: !3912)
!7155 = !DILocation(line: 1444, column: 8, scope: !7145)
!7156 = !DILocation(line: 1444, column: 18, scope: !7145)
!7157 = !DILocalVariable(name: "ob1", scope: !7145, file: !3, line: 1445, type: !4322)
!7158 = !DILocation(line: 1445, column: 10, scope: !7145)
!7159 = !DILocalVariable(name: "dm", scope: !7145, file: !3, line: 1446, type: !961)
!7160 = !DILocation(line: 1446, column: 15, scope: !7145)
!7161 = !DILocation(line: 1446, column: 20, scope: !7145)
!7162 = !DILocation(line: 1446, column: 24, scope: !7145)
!7163 = !DILocalVariable(name: "me", scope: !7145, file: !3, line: 1447, type: !441)
!7164 = !DILocation(line: 1447, column: 8, scope: !7145)
!7165 = !DILocalVariable(name: "cu", scope: !7145, file: !3, line: 1448, type: !2539)
!7166 = !DILocation(line: 1448, column: 9, scope: !7145)
!7167 = !DILocalVariable(name: "allvert", scope: !7145, file: !3, line: 1449, type: !2524)
!7168 = !DILocation(line: 1449, column: 9, scope: !7145)
!7169 = !DILocalVariable(name: "alledge", scope: !7145, file: !3, line: 1450, type: !3035)
!7170 = !DILocation(line: 1450, column: 9, scope: !7145)
!7171 = !DILocalVariable(name: "allloop", scope: !7145, file: !3, line: 1451, type: !3132)
!7172 = !DILocation(line: 1451, column: 9, scope: !7145)
!7173 = !DILocalVariable(name: "alluv", scope: !7145, file: !3, line: 1452, type: !3242)
!7174 = !DILocation(line: 1452, column: 11, scope: !7145)
!7175 = !DILocalVariable(name: "allpoly", scope: !7145, file: !3, line: 1453, type: !2721)
!7176 = !DILocation(line: 1453, column: 9, scope: !7145)
!7177 = !DILocalVariable(name: "totvert", scope: !7145, file: !3, line: 1454, type: !6)
!7178 = !DILocation(line: 1454, column: 6, scope: !7145)
!7179 = !DILocalVariable(name: "totedge", scope: !7145, file: !3, line: 1454, type: !6)
!7180 = !DILocation(line: 1454, column: 15, scope: !7145)
!7181 = !DILocalVariable(name: "totloop", scope: !7145, file: !3, line: 1454, type: !6)
!7182 = !DILocation(line: 1454, column: 24, scope: !7145)
!7183 = !DILocalVariable(name: "totpoly", scope: !7145, file: !3, line: 1454, type: !6)
!7184 = !DILocation(line: 1454, column: 33, scope: !7145)
!7185 = !DILocation(line: 1456, column: 7, scope: !7145)
!7186 = !DILocation(line: 1456, column: 11, scope: !7145)
!7187 = !DILocation(line: 1456, column: 5, scope: !7145)
!7188 = !DILocation(line: 1458, column: 6, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7145, file: !3, line: 1458, column: 6)
!7190 = !DILocation(line: 1458, column: 9, scope: !7189)
!7191 = !DILocation(line: 1458, column: 6, scope: !7145)
!7192 = !DILocation(line: 1459, column: 40, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7194, file: !3, line: 1459, column: 7)
!7194 = distinct !DILexicalBlock(scope: !7189, file: !3, line: 1458, column: 18)
!7195 = !DILocation(line: 1459, column: 44, scope: !7193)
!7196 = !DILocation(line: 1461, column: 51, scope: !7193)
!7197 = !DILocation(line: 1461, column: 50, scope: !7193)
!7198 = !DILocation(line: 1459, column: 7, scope: !7193)
!7199 = !DILocation(line: 1462, column: 60, scope: !7193)
!7200 = !DILocation(line: 1459, column: 7, scope: !7194)
!7201 = !DILocation(line: 1465, column: 4, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 1463, column: 3)
!7203 = !DILocation(line: 1469, column: 23, scope: !7194)
!7204 = !DILocation(line: 1469, column: 8, scope: !7194)
!7205 = !DILocation(line: 1469, column: 6, scope: !7194)
!7206 = !DILocation(line: 1470, column: 17, scope: !7194)
!7207 = !DILocation(line: 1470, column: 3, scope: !7194)
!7208 = !DILocation(line: 1470, column: 7, scope: !7194)
!7209 = !DILocation(line: 1470, column: 15, scope: !7194)
!7210 = !DILocation(line: 1471, column: 17, scope: !7194)
!7211 = !DILocation(line: 1471, column: 3, scope: !7194)
!7212 = !DILocation(line: 1471, column: 7, scope: !7194)
!7213 = !DILocation(line: 1471, column: 15, scope: !7194)
!7214 = !DILocation(line: 1472, column: 17, scope: !7194)
!7215 = !DILocation(line: 1472, column: 3, scope: !7194)
!7216 = !DILocation(line: 1472, column: 7, scope: !7194)
!7217 = !DILocation(line: 1472, column: 15, scope: !7194)
!7218 = !DILocation(line: 1473, column: 17, scope: !7194)
!7219 = !DILocation(line: 1473, column: 3, scope: !7194)
!7220 = !DILocation(line: 1473, column: 7, scope: !7194)
!7221 = !DILocation(line: 1473, column: 15, scope: !7194)
!7222 = !DILocation(line: 1475, column: 37, scope: !7194)
!7223 = !DILocation(line: 1475, column: 41, scope: !7194)
!7224 = !DILocation(line: 1475, column: 69, scope: !7194)
!7225 = !DILocation(line: 1475, column: 78, scope: !7194)
!7226 = !DILocation(line: 1475, column: 82, scope: !7194)
!7227 = !DILocation(line: 1475, column: 15, scope: !7194)
!7228 = !DILocation(line: 1475, column: 3, scope: !7194)
!7229 = !DILocation(line: 1475, column: 7, scope: !7194)
!7230 = !DILocation(line: 1475, column: 13, scope: !7194)
!7231 = !DILocation(line: 1476, column: 37, scope: !7194)
!7232 = !DILocation(line: 1476, column: 41, scope: !7194)
!7233 = !DILocation(line: 1476, column: 69, scope: !7194)
!7234 = !DILocation(line: 1476, column: 78, scope: !7194)
!7235 = !DILocation(line: 1476, column: 82, scope: !7194)
!7236 = !DILocation(line: 1476, column: 15, scope: !7194)
!7237 = !DILocation(line: 1476, column: 3, scope: !7194)
!7238 = !DILocation(line: 1476, column: 7, scope: !7194)
!7239 = !DILocation(line: 1476, column: 13, scope: !7194)
!7240 = !DILocation(line: 1477, column: 37, scope: !7194)
!7241 = !DILocation(line: 1477, column: 41, scope: !7194)
!7242 = !DILocation(line: 1477, column: 69, scope: !7194)
!7243 = !DILocation(line: 1477, column: 78, scope: !7194)
!7244 = !DILocation(line: 1477, column: 82, scope: !7194)
!7245 = !DILocation(line: 1477, column: 15, scope: !7194)
!7246 = !DILocation(line: 1477, column: 3, scope: !7194)
!7247 = !DILocation(line: 1477, column: 7, scope: !7194)
!7248 = !DILocation(line: 1477, column: 13, scope: !7194)
!7249 = !DILocation(line: 1478, column: 37, scope: !7194)
!7250 = !DILocation(line: 1478, column: 41, scope: !7194)
!7251 = !DILocation(line: 1478, column: 69, scope: !7194)
!7252 = !DILocation(line: 1478, column: 78, scope: !7194)
!7253 = !DILocation(line: 1478, column: 82, scope: !7194)
!7254 = !DILocation(line: 1478, column: 15, scope: !7194)
!7255 = !DILocation(line: 1478, column: 3, scope: !7194)
!7256 = !DILocation(line: 1478, column: 7, scope: !7194)
!7257 = !DILocation(line: 1478, column: 13, scope: !7194)
!7258 = !DILocation(line: 1480, column: 7, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7194, file: !3, line: 1480, column: 7)
!7260 = !DILocation(line: 1480, column: 7, scope: !7194)
!7261 = !DILocalVariable(name: "uvname", scope: !7262, file: !3, line: 1481, type: !2415)
!7262 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 1480, column: 14)
!7263 = !DILocation(line: 1481, column: 16, scope: !7262)
!7264 = !DILocation(line: 1482, column: 45, scope: !7262)
!7265 = !DILocation(line: 1482, column: 49, scope: !7262)
!7266 = !DILocation(line: 1482, column: 87, scope: !7262)
!7267 = !DILocation(line: 1482, column: 91, scope: !7262)
!7268 = !DILocation(line: 1482, column: 100, scope: !7262)
!7269 = !DILocation(line: 1482, column: 17, scope: !7262)
!7270 = !DILocation(line: 1482, column: 4, scope: !7262)
!7271 = !DILocation(line: 1482, column: 8, scope: !7262)
!7272 = !DILocation(line: 1482, column: 15, scope: !7262)
!7273 = !DILocation(line: 1483, column: 46, scope: !7262)
!7274 = !DILocation(line: 1483, column: 50, scope: !7262)
!7275 = !DILocation(line: 1483, column: 80, scope: !7262)
!7276 = !DILocation(line: 1483, column: 87, scope: !7262)
!7277 = !DILocation(line: 1483, column: 91, scope: !7262)
!7278 = !DILocation(line: 1483, column: 100, scope: !7262)
!7279 = !DILocation(line: 1483, column: 18, scope: !7262)
!7280 = !DILocation(line: 1483, column: 4, scope: !7262)
!7281 = !DILocation(line: 1483, column: 8, scope: !7262)
!7282 = !DILocation(line: 1483, column: 16, scope: !7262)
!7283 = !DILocation(line: 1484, column: 3, scope: !7262)
!7284 = !DILocation(line: 1486, column: 25, scope: !7194)
!7285 = !DILocation(line: 1486, column: 3, scope: !7194)
!7286 = !DILocation(line: 1487, column: 2, scope: !7194)
!7287 = !DILocation(line: 1489, column: 23, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7189, file: !3, line: 1488, column: 7)
!7289 = !DILocation(line: 1489, column: 8, scope: !7288)
!7290 = !DILocation(line: 1489, column: 6, scope: !7288)
!7291 = !DILocation(line: 1490, column: 14, scope: !7288)
!7292 = !DILocation(line: 1490, column: 18, scope: !7288)
!7293 = !DILocation(line: 1490, column: 22, scope: !7288)
!7294 = !DILocation(line: 1490, column: 26, scope: !7288)
!7295 = !DILocation(line: 1490, column: 3, scope: !7288)
!7296 = !DILocation(line: 1493, column: 15, scope: !7145)
!7297 = !DILocation(line: 1493, column: 19, scope: !7145)
!7298 = !DILocation(line: 1493, column: 2, scope: !7145)
!7299 = !DILocation(line: 1493, column: 6, scope: !7145)
!7300 = !DILocation(line: 1493, column: 13, scope: !7145)
!7301 = !DILocation(line: 1494, column: 12, scope: !7145)
!7302 = !DILocation(line: 1494, column: 16, scope: !7145)
!7303 = !DILocation(line: 1494, column: 2, scope: !7145)
!7304 = !DILocation(line: 1494, column: 6, scope: !7145)
!7305 = !DILocation(line: 1494, column: 10, scope: !7145)
!7306 = !DILocation(line: 1496, column: 25, scope: !7145)
!7307 = !DILocation(line: 1496, column: 2, scope: !7145)
!7308 = !DILocation(line: 1498, column: 2, scope: !7145)
!7309 = !DILocation(line: 1498, column: 6, scope: !7145)
!7310 = !DILocation(line: 1498, column: 10, scope: !7145)
!7311 = !DILocation(line: 1499, column: 2, scope: !7145)
!7312 = !DILocation(line: 1499, column: 6, scope: !7145)
!7313 = !DILocation(line: 1499, column: 13, scope: !7145)
!7314 = !DILocation(line: 1501, column: 6, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7145, file: !3, line: 1501, column: 6)
!7316 = !DILocation(line: 1501, column: 10, scope: !7315)
!7317 = !DILocation(line: 1501, column: 6, scope: !7145)
!7318 = !DILocation(line: 1502, column: 21, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 1501, column: 16)
!7320 = !DILocation(line: 1502, column: 28, scope: !7319)
!7321 = !DILocation(line: 1502, column: 32, scope: !7319)
!7322 = !DILocation(line: 1502, column: 3, scope: !7319)
!7323 = !DILocation(line: 1503, column: 2, scope: !7319)
!7324 = !DILocation(line: 1504, column: 13, scope: !7145)
!7325 = !DILocation(line: 1504, column: 2, scope: !7145)
!7326 = !DILocation(line: 1504, column: 6, scope: !7145)
!7327 = !DILocation(line: 1504, column: 11, scope: !7145)
!7328 = !DILocation(line: 1505, column: 2, scope: !7145)
!7329 = !DILocation(line: 1505, column: 6, scope: !7145)
!7330 = !DILocation(line: 1505, column: 11, scope: !7145)
!7331 = !DILocation(line: 1508, column: 8, scope: !7145)
!7332 = !DILocation(line: 1508, column: 15, scope: !7145)
!7333 = !DILocation(line: 1508, column: 22, scope: !7145)
!7334 = !DILocation(line: 1508, column: 6, scope: !7145)
!7335 = !DILocation(line: 1509, column: 2, scope: !7145)
!7336 = !DILocation(line: 1509, column: 9, scope: !7145)
!7337 = !DILocation(line: 1510, column: 7, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7339, file: !3, line: 1510, column: 7)
!7339 = distinct !DILexicalBlock(scope: !7145, file: !3, line: 1509, column: 14)
!7340 = !DILocation(line: 1510, column: 12, scope: !7338)
!7341 = !DILocation(line: 1510, column: 20, scope: !7338)
!7342 = !DILocation(line: 1510, column: 17, scope: !7338)
!7343 = !DILocation(line: 1510, column: 7, scope: !7339)
!7344 = !DILocation(line: 1511, column: 4, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7338, file: !3, line: 1510, column: 24)
!7346 = !DILocation(line: 1511, column: 9, scope: !7345)
!7347 = !DILocation(line: 1511, column: 14, scope: !7345)
!7348 = !DILocation(line: 1513, column: 16, scope: !7345)
!7349 = !DILocation(line: 1513, column: 20, scope: !7345)
!7350 = !DILocation(line: 1513, column: 4, scope: !7345)
!7351 = !DILocation(line: 1513, column: 9, scope: !7345)
!7352 = !DILocation(line: 1513, column: 14, scope: !7345)
!7353 = !DILocation(line: 1514, column: 21, scope: !7345)
!7354 = !DILocation(line: 1514, column: 25, scope: !7345)
!7355 = !DILocation(line: 1514, column: 15, scope: !7345)
!7356 = !DILocation(line: 1514, column: 4, scope: !7345)
!7357 = !DILocation(line: 1515, column: 3, scope: !7345)
!7358 = !DILocation(line: 1516, column: 9, scope: !7339)
!7359 = !DILocation(line: 1516, column: 14, scope: !7339)
!7360 = !DILocation(line: 1516, column: 17, scope: !7339)
!7361 = !DILocation(line: 1516, column: 7, scope: !7339)
!7362 = distinct !{!7362, !7335, !7363}
!7363 = !DILocation(line: 1517, column: 2, scope: !7145)
!7364 = !DILocation(line: 1518, column: 1, scope: !7145)
!7365 = distinct !DISubprogram(name: "BKE_mesh_from_nurbs", scope: !3, file: !3, line: 1520, type: !7366, scopeLine: 1521, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!7366 = !DISubroutineType(types: !7367)
!7367 = !{null, !4322}
!7368 = !DILocalVariable(name: "ob", arg: 1, scope: !7365, file: !3, line: 1520, type: !4322)
!7369 = !DILocation(line: 1520, column: 34, scope: !7365)
!7370 = !DILocalVariable(name: "cu", scope: !7365, file: !3, line: 1522, type: !2539)
!7371 = !DILocation(line: 1522, column: 9, scope: !7365)
!7372 = !DILocation(line: 1522, column: 24, scope: !7365)
!7373 = !DILocation(line: 1522, column: 28, scope: !7365)
!7374 = !DILocation(line: 1522, column: 14, scope: !7365)
!7375 = !DILocalVariable(name: "use_orco_uv", scope: !7365, file: !3, line: 1523, type: !1203)
!7376 = !DILocation(line: 1523, column: 7, scope: !7365)
!7377 = !DILocation(line: 1523, column: 22, scope: !7365)
!7378 = !DILocation(line: 1523, column: 26, scope: !7365)
!7379 = !DILocation(line: 1523, column: 31, scope: !7365)
!7380 = !DILocation(line: 1523, column: 45, scope: !7365)
!7381 = !DILocation(line: 1523, column: 21, scope: !7365)
!7382 = !DILocalVariable(name: "disp", scope: !7365, file: !3, line: 1524, type: !320)
!7383 = !DILocation(line: 1524, column: 11, scope: !7365)
!7384 = !DILocation(line: 1526, column: 6, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7365, file: !3, line: 1526, column: 6)
!7386 = !DILocation(line: 1526, column: 10, scope: !7385)
!7387 = !DILocation(line: 1526, column: 6, scope: !7365)
!7388 = !DILocation(line: 1527, column: 10, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7385, file: !3, line: 1526, column: 23)
!7390 = !DILocation(line: 1527, column: 14, scope: !7389)
!7391 = !DILocation(line: 1527, column: 27, scope: !7389)
!7392 = !DILocation(line: 1528, column: 2, scope: !7389)
!7393 = !DILocation(line: 1530, column: 31, scope: !7365)
!7394 = !DILocation(line: 1530, column: 42, scope: !7365)
!7395 = !DILocation(line: 1530, column: 2, scope: !7365)
!7396 = !DILocation(line: 1531, column: 1, scope: !7365)
!7397 = distinct !DISubprogram(name: "BKE_mesh_to_curve_nurblist", scope: !3, file: !3, line: 1557, type: !7398, scopeLine: 1558, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!7398 = !DISubroutineType(types: !7399)
!7399 = !{null, !961, !1286, !4039}
!7400 = !DILocalVariable(name: "dm", arg: 1, scope: !7397, file: !3, line: 1557, type: !961)
!7401 = !DILocation(line: 1557, column: 46, scope: !7397)
!7402 = !DILocalVariable(name: "nurblist", arg: 2, scope: !7397, file: !3, line: 1557, type: !1286)
!7403 = !DILocation(line: 1557, column: 60, scope: !7397)
!7404 = !DILocalVariable(name: "edge_users_test", arg: 3, scope: !7397, file: !3, line: 1557, type: !4039)
!7405 = !DILocation(line: 1557, column: 80, scope: !7397)
!7406 = !DILocalVariable(name: "mvert", scope: !7397, file: !3, line: 1559, type: !2524)
!7407 = !DILocation(line: 1559, column: 15, scope: !7397)
!7408 = !DILocation(line: 1559, column: 23, scope: !7397)
!7409 = !DILocation(line: 1559, column: 27, scope: !7397)
!7410 = !DILocation(line: 1559, column: 40, scope: !7397)
!7411 = !DILocalVariable(name: "med", scope: !7397, file: !3, line: 1560, type: !3035)
!7412 = !DILocation(line: 1560, column: 9, scope: !7397)
!7413 = !DILocalVariable(name: "medge", scope: !7397, file: !3, line: 1560, type: !3035)
!7414 = !DILocation(line: 1560, column: 15, scope: !7397)
!7415 = !DILocation(line: 1560, column: 23, scope: !7397)
!7416 = !DILocation(line: 1560, column: 27, scope: !7397)
!7417 = !DILocation(line: 1560, column: 40, scope: !7397)
!7418 = !DILocalVariable(name: "mp", scope: !7397, file: !3, line: 1561, type: !2721)
!7419 = !DILocation(line: 1561, column: 9, scope: !7397)
!7420 = !DILocalVariable(name: "mpoly", scope: !7397, file: !3, line: 1561, type: !2721)
!7421 = !DILocation(line: 1561, column: 15, scope: !7397)
!7422 = !DILocation(line: 1561, column: 23, scope: !7397)
!7423 = !DILocation(line: 1561, column: 27, scope: !7397)
!7424 = !DILocation(line: 1561, column: 40, scope: !7397)
!7425 = !DILocalVariable(name: "mloop", scope: !7397, file: !3, line: 1562, type: !3132)
!7426 = !DILocation(line: 1562, column: 15, scope: !7397)
!7427 = !DILocation(line: 1562, column: 23, scope: !7397)
!7428 = !DILocation(line: 1562, column: 27, scope: !7397)
!7429 = !DILocation(line: 1562, column: 40, scope: !7397)
!7430 = !DILocalVariable(name: "dm_totedge", scope: !7397, file: !3, line: 1564, type: !6)
!7431 = !DILocation(line: 1564, column: 6, scope: !7397)
!7432 = !DILocation(line: 1564, column: 19, scope: !7397)
!7433 = !DILocation(line: 1564, column: 23, scope: !7397)
!7434 = !DILocation(line: 1564, column: 35, scope: !7397)
!7435 = !DILocalVariable(name: "dm_totpoly", scope: !7397, file: !3, line: 1565, type: !6)
!7436 = !DILocation(line: 1565, column: 6, scope: !7397)
!7437 = !DILocation(line: 1565, column: 19, scope: !7397)
!7438 = !DILocation(line: 1565, column: 23, scope: !7397)
!7439 = !DILocation(line: 1565, column: 35, scope: !7397)
!7440 = !DILocalVariable(name: "totedges", scope: !7397, file: !3, line: 1566, type: !6)
!7441 = !DILocation(line: 1566, column: 6, scope: !7397)
!7442 = !DILocalVariable(name: "i", scope: !7397, file: !3, line: 1567, type: !6)
!7443 = !DILocation(line: 1567, column: 6, scope: !7397)
!7444 = !DILocalVariable(name: "edge_users", scope: !7397, file: !3, line: 1570, type: !1117)
!7445 = !DILocation(line: 1570, column: 7, scope: !7397)
!7446 = !DILocalVariable(name: "edges", scope: !7397, file: !3, line: 1572, type: !320)
!7447 = !DILocation(line: 1572, column: 11, scope: !7397)
!7448 = !DILocation(line: 1575, column: 15, scope: !7397)
!7449 = !DILocation(line: 1575, column: 41, scope: !7397)
!7450 = !DILocation(line: 1575, column: 39, scope: !7397)
!7451 = !DILocation(line: 1575, column: 13, scope: !7397)
!7452 = !DILocation(line: 1576, column: 9, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7397, file: !3, line: 1576, column: 2)
!7454 = !DILocation(line: 1576, column: 19, scope: !7453)
!7455 = !DILocation(line: 1576, column: 17, scope: !7453)
!7456 = !DILocation(line: 1576, column: 7, scope: !7453)
!7457 = !DILocation(line: 1576, column: 26, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7453, file: !3, line: 1576, column: 2)
!7459 = !DILocation(line: 1576, column: 30, scope: !7458)
!7460 = !DILocation(line: 1576, column: 28, scope: !7458)
!7461 = !DILocation(line: 1576, column: 2, scope: !7453)
!7462 = !DILocalVariable(name: "ml", scope: !7463, file: !3, line: 1577, type: !3132)
!7463 = distinct !DILexicalBlock(scope: !7458, file: !3, line: 1576, column: 53)
!7464 = !DILocation(line: 1577, column: 10, scope: !7463)
!7465 = !DILocation(line: 1577, column: 16, scope: !7463)
!7466 = !DILocation(line: 1577, column: 22, scope: !7463)
!7467 = !DILocation(line: 1577, column: 26, scope: !7463)
!7468 = !DILocalVariable(name: "j", scope: !7463, file: !3, line: 1578, type: !6)
!7469 = !DILocation(line: 1578, column: 7, scope: !7463)
!7470 = !DILocation(line: 1579, column: 10, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7463, file: !3, line: 1579, column: 3)
!7472 = !DILocation(line: 1579, column: 8, scope: !7471)
!7473 = !DILocation(line: 1579, column: 15, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7471, file: !3, line: 1579, column: 3)
!7475 = !DILocation(line: 1579, column: 19, scope: !7474)
!7476 = !DILocation(line: 1579, column: 23, scope: !7474)
!7477 = !DILocation(line: 1579, column: 17, scope: !7474)
!7478 = !DILocation(line: 1579, column: 3, scope: !7471)
!7479 = !DILocation(line: 1580, column: 4, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7474, file: !3, line: 1579, column: 43)
!7481 = !DILocation(line: 1580, column: 15, scope: !7480)
!7482 = !DILocation(line: 1580, column: 19, scope: !7480)
!7483 = !DILocation(line: 1580, column: 21, scope: !7480)
!7484 = !DILocation(line: 1581, column: 3, scope: !7480)
!7485 = !DILocation(line: 1579, column: 33, scope: !7474)
!7486 = !DILocation(line: 1579, column: 39, scope: !7474)
!7487 = !DILocation(line: 1579, column: 3, scope: !7474)
!7488 = distinct !{!7488, !7478, !7489}
!7489 = !DILocation(line: 1581, column: 3, scope: !7471)
!7490 = !DILocation(line: 1582, column: 2, scope: !7463)
!7491 = !DILocation(line: 1576, column: 43, scope: !7458)
!7492 = !DILocation(line: 1576, column: 49, scope: !7458)
!7493 = !DILocation(line: 1576, column: 2, scope: !7458)
!7494 = distinct !{!7494, !7461, !7495}
!7495 = !DILocation(line: 1582, column: 2, scope: !7453)
!7496 = !DILocation(line: 1585, column: 8, scope: !7397)
!7497 = !DILocation(line: 1585, column: 6, scope: !7397)
!7498 = !DILocation(line: 1586, column: 9, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7397, file: !3, line: 1586, column: 2)
!7500 = !DILocation(line: 1586, column: 7, scope: !7499)
!7501 = !DILocation(line: 1586, column: 14, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 1586, column: 2)
!7503 = !DILocation(line: 1586, column: 18, scope: !7502)
!7504 = !DILocation(line: 1586, column: 16, scope: !7502)
!7505 = !DILocation(line: 1586, column: 2, scope: !7499)
!7506 = !DILocation(line: 1587, column: 7, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 1587, column: 7)
!7508 = distinct !DILexicalBlock(scope: !7502, file: !3, line: 1586, column: 42)
!7509 = !DILocation(line: 1587, column: 18, scope: !7507)
!7510 = !DILocation(line: 1587, column: 24, scope: !7507)
!7511 = !DILocation(line: 1587, column: 21, scope: !7507)
!7512 = !DILocation(line: 1587, column: 7, scope: !7508)
!7513 = !DILocalVariable(name: "edl", scope: !7514, file: !3, line: 1588, type: !2641)
!7514 = distinct !DILexicalBlock(scope: !7507, file: !3, line: 1587, column: 41)
!7515 = !DILocation(line: 1588, column: 14, scope: !7514)
!7516 = !DILocation(line: 1588, column: 20, scope: !7514)
!7517 = !DILocation(line: 1589, column: 16, scope: !7514)
!7518 = !DILocation(line: 1589, column: 4, scope: !7514)
!7519 = !DILocation(line: 1589, column: 9, scope: !7514)
!7520 = !DILocation(line: 1589, column: 14, scope: !7514)
!7521 = !DILocation(line: 1591, column: 24, scope: !7514)
!7522 = !DILocation(line: 1591, column: 4, scope: !7514)
!7523 = !DILocation(line: 1591, column: 40, scope: !7514)
!7524 = !DILocation(line: 1592, column: 3, scope: !7514)
!7525 = !DILocation(line: 1593, column: 2, scope: !7508)
!7526 = !DILocation(line: 1586, column: 31, scope: !7502)
!7527 = !DILocation(line: 1586, column: 38, scope: !7502)
!7528 = !DILocation(line: 1586, column: 2, scope: !7502)
!7529 = distinct !{!7529, !7505, !7530}
!7530 = !DILocation(line: 1593, column: 2, scope: !7499)
!7531 = !DILocation(line: 1594, column: 2, scope: !7397)
!7532 = !DILocation(line: 1594, column: 12, scope: !7397)
!7533 = !DILocation(line: 1596, column: 12, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7397, file: !3, line: 1596, column: 6)
!7535 = !DILocation(line: 1596, column: 6, scope: !7534)
!7536 = !DILocation(line: 1596, column: 6, scope: !7397)
!7537 = !DILocation(line: 1597, column: 3, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7534, file: !3, line: 1596, column: 19)
!7539 = !DILocation(line: 1597, column: 16, scope: !7538)
!7540 = !DILocalVariable(name: "polyline", scope: !7541, file: !3, line: 1600, type: !320)
!7541 = distinct !DILexicalBlock(scope: !7538, file: !3, line: 1597, column: 23)
!7542 = !DILocation(line: 1600, column: 13, scope: !7541)
!7543 = !DILocalVariable(name: "closed", scope: !7541, file: !3, line: 1601, type: !1203)
!7544 = !DILocation(line: 1601, column: 9, scope: !7541)
!7545 = !DILocalVariable(name: "totpoly", scope: !7541, file: !3, line: 1602, type: !6)
!7546 = !DILocation(line: 1602, column: 8, scope: !7541)
!7547 = !DILocalVariable(name: "med_current", scope: !7541, file: !3, line: 1603, type: !3035)
!7548 = !DILocation(line: 1603, column: 11, scope: !7541)
!7549 = !DILocation(line: 1603, column: 44, scope: !7541)
!7550 = !DILocation(line: 1603, column: 26, scope: !7541)
!7551 = !DILocation(line: 1603, column: 51, scope: !7541)
!7552 = !DILocation(line: 1603, column: 25, scope: !7541)
!7553 = !DILocalVariable(name: "startVert", scope: !7541, file: !3, line: 1604, type: !13)
!7554 = !DILocation(line: 1604, column: 17, scope: !7541)
!7555 = !DILocation(line: 1604, column: 29, scope: !7541)
!7556 = !DILocation(line: 1604, column: 42, scope: !7541)
!7557 = !DILocalVariable(name: "endVert", scope: !7541, file: !3, line: 1605, type: !13)
!7558 = !DILocation(line: 1605, column: 17, scope: !7541)
!7559 = !DILocation(line: 1605, column: 27, scope: !7541)
!7560 = !DILocation(line: 1605, column: 40, scope: !7541)
!7561 = !DILocalVariable(name: "ok", scope: !7541, file: !3, line: 1606, type: !1203)
!7562 = !DILocation(line: 1606, column: 9, scope: !7541)
!7563 = !DILocation(line: 1608, column: 34, scope: !7541)
!7564 = !DILocation(line: 1608, column: 4, scope: !7541)
!7565 = !DILocation(line: 1608, column: 55, scope: !7541)
!7566 = !DILocation(line: 1609, column: 34, scope: !7541)
!7567 = !DILocation(line: 1609, column: 4, scope: !7541)
!7568 = !DILocation(line: 1609, column: 55, scope: !7541)
!7569 = !DILocation(line: 1610, column: 32, scope: !7541)
!7570 = !DILocation(line: 1610, column: 4, scope: !7541)
!7571 = !DILocation(line: 1610, column: 56, scope: !7541)
!7572 = !DILocation(line: 1612, column: 4, scope: !7541)
!7573 = !DILocation(line: 1612, column: 11, scope: !7541)
!7574 = !DILocalVariable(name: "edl", scope: !7575, file: !3, line: 1613, type: !2641)
!7575 = distinct !DILexicalBlock(scope: !7541, file: !3, line: 1612, column: 15)
!7576 = !DILocation(line: 1613, column: 15, scope: !7575)
!7577 = !DILocation(line: 1613, column: 27, scope: !7575)
!7578 = !DILocation(line: 1613, column: 21, scope: !7575)
!7579 = !DILocation(line: 1614, column: 8, scope: !7575)
!7580 = !DILocation(line: 1615, column: 5, scope: !7575)
!7581 = !DILocation(line: 1615, column: 12, scope: !7575)
!7582 = !DILocalVariable(name: "edl_prev", scope: !7583, file: !3, line: 1616, type: !2641)
!7583 = distinct !DILexicalBlock(scope: !7575, file: !3, line: 1615, column: 17)
!7584 = !DILocation(line: 1616, column: 16, scope: !7583)
!7585 = !DILocation(line: 1616, column: 27, scope: !7583)
!7586 = !DILocation(line: 1616, column: 32, scope: !7583)
!7587 = !DILocation(line: 1618, column: 12, scope: !7583)
!7588 = !DILocation(line: 1618, column: 17, scope: !7583)
!7589 = !DILocation(line: 1618, column: 10, scope: !7583)
!7590 = !DILocation(line: 1620, column: 10, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7583, file: !3, line: 1620, column: 10)
!7592 = !DILocation(line: 1620, column: 15, scope: !7591)
!7593 = !DILocation(line: 1620, column: 21, scope: !7591)
!7594 = !DILocation(line: 1620, column: 18, scope: !7591)
!7595 = !DILocation(line: 1620, column: 10, scope: !7583)
!7596 = !DILocation(line: 1621, column: 17, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7591, file: !3, line: 1620, column: 30)
!7598 = !DILocation(line: 1621, column: 22, scope: !7597)
!7599 = !DILocation(line: 1621, column: 15, scope: !7597)
!7600 = !DILocation(line: 1622, column: 37, scope: !7597)
!7601 = !DILocation(line: 1622, column: 42, scope: !7597)
!7602 = !DILocation(line: 1622, column: 7, scope: !7597)
!7603 = !DILocation(line: 1622, column: 54, scope: !7597)
!7604 = !DILocation(line: 1623, column: 29, scope: !7597)
!7605 = !DILocation(line: 1623, column: 7, scope: !7597)
!7606 = !DILocation(line: 1623, column: 55, scope: !7597)
!7607 = !DILocation(line: 1624, column: 10, scope: !7597)
!7608 = !DILocation(line: 1625, column: 6, scope: !7597)
!7609 = !DILocation(line: 1626, column: 15, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7591, file: !3, line: 1626, column: 15)
!7611 = !DILocation(line: 1626, column: 20, scope: !7610)
!7612 = !DILocation(line: 1626, column: 26, scope: !7610)
!7613 = !DILocation(line: 1626, column: 23, scope: !7610)
!7614 = !DILocation(line: 1626, column: 15, scope: !7591)
!7615 = !DILocation(line: 1627, column: 17, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7610, file: !3, line: 1626, column: 35)
!7617 = !DILocation(line: 1627, column: 22, scope: !7616)
!7618 = !DILocation(line: 1627, column: 15, scope: !7616)
!7619 = !DILocation(line: 1628, column: 37, scope: !7616)
!7620 = !DILocation(line: 1628, column: 7, scope: !7616)
!7621 = !DILocation(line: 1628, column: 54, scope: !7616)
!7622 = !DILocation(line: 1629, column: 29, scope: !7616)
!7623 = !DILocation(line: 1629, column: 7, scope: !7616)
!7624 = !DILocation(line: 1629, column: 55, scope: !7616)
!7625 = !DILocation(line: 1630, column: 10, scope: !7616)
!7626 = !DILocation(line: 1631, column: 6, scope: !7616)
!7627 = !DILocation(line: 1632, column: 15, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7610, file: !3, line: 1632, column: 15)
!7629 = !DILocation(line: 1632, column: 20, scope: !7628)
!7630 = !DILocation(line: 1632, column: 26, scope: !7628)
!7631 = !DILocation(line: 1632, column: 23, scope: !7628)
!7632 = !DILocation(line: 1632, column: 15, scope: !7610)
!7633 = !DILocation(line: 1633, column: 19, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !7628, file: !3, line: 1632, column: 37)
!7635 = !DILocation(line: 1633, column: 24, scope: !7634)
!7636 = !DILocation(line: 1633, column: 17, scope: !7634)
!7637 = !DILocation(line: 1634, column: 38, scope: !7634)
!7638 = !DILocation(line: 1634, column: 7, scope: !7634)
!7639 = !DILocation(line: 1634, column: 58, scope: !7634)
!7640 = !DILocation(line: 1635, column: 29, scope: !7634)
!7641 = !DILocation(line: 1635, column: 7, scope: !7634)
!7642 = !DILocation(line: 1635, column: 59, scope: !7634)
!7643 = !DILocation(line: 1636, column: 10, scope: !7634)
!7644 = !DILocation(line: 1637, column: 6, scope: !7634)
!7645 = !DILocation(line: 1638, column: 15, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7628, file: !3, line: 1638, column: 15)
!7647 = !DILocation(line: 1638, column: 20, scope: !7646)
!7648 = !DILocation(line: 1638, column: 26, scope: !7646)
!7649 = !DILocation(line: 1638, column: 23, scope: !7646)
!7650 = !DILocation(line: 1638, column: 15, scope: !7628)
!7651 = !DILocation(line: 1639, column: 19, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7646, file: !3, line: 1638, column: 37)
!7653 = !DILocation(line: 1639, column: 24, scope: !7652)
!7654 = !DILocation(line: 1639, column: 17, scope: !7652)
!7655 = !DILocation(line: 1640, column: 38, scope: !7652)
!7656 = !DILocation(line: 1640, column: 7, scope: !7652)
!7657 = !DILocation(line: 1640, column: 58, scope: !7652)
!7658 = !DILocation(line: 1641, column: 29, scope: !7652)
!7659 = !DILocation(line: 1641, column: 7, scope: !7652)
!7660 = !DILocation(line: 1641, column: 59, scope: !7652)
!7661 = !DILocation(line: 1642, column: 10, scope: !7652)
!7662 = !DILocation(line: 1643, column: 6, scope: !7652)
!7663 = !DILocation(line: 1645, column: 12, scope: !7583)
!7664 = !DILocation(line: 1645, column: 10, scope: !7583)
!7665 = distinct !{!7665, !7580, !7666}
!7666 = !DILocation(line: 1646, column: 5, scope: !7575)
!7667 = distinct !{!7667, !7572, !7668}
!7668 = !DILocation(line: 1647, column: 4, scope: !7541)
!7669 = !DILocation(line: 1650, column: 8, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7541, file: !3, line: 1650, column: 8)
!7671 = !DILocation(line: 1650, column: 21, scope: !7670)
!7672 = !DILocation(line: 1650, column: 18, scope: !7670)
!7673 = !DILocation(line: 1650, column: 8, scope: !7541)
!7674 = !DILocation(line: 1651, column: 39, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7670, file: !3, line: 1650, column: 30)
!7676 = !DILocation(line: 1651, column: 5, scope: !7675)
!7677 = !DILocation(line: 1652, column: 12, scope: !7675)
!7678 = !DILocation(line: 1653, column: 12, scope: !7675)
!7679 = !DILocation(line: 1654, column: 4, scope: !7675)
!7680 = !DILocalVariable(name: "nu", scope: !7681, file: !3, line: 1658, type: !2649)
!7681 = distinct !DILexicalBlock(scope: !7541, file: !3, line: 1657, column: 4)
!7682 = !DILocation(line: 1658, column: 11, scope: !7681)
!7683 = !DILocalVariable(name: "bp", scope: !7681, file: !3, line: 1659, type: !2672)
!7684 = !DILocation(line: 1659, column: 13, scope: !7681)
!7685 = !DILocalVariable(name: "vl", scope: !7681, file: !3, line: 1660, type: !2707)
!7686 = !DILocation(line: 1660, column: 15, scope: !7681)
!7687 = !DILocation(line: 1663, column: 18, scope: !7681)
!7688 = !DILocation(line: 1663, column: 10, scope: !7681)
!7689 = !DILocation(line: 1663, column: 8, scope: !7681)
!7690 = !DILocation(line: 1665, column: 17, scope: !7681)
!7691 = !DILocation(line: 1665, column: 5, scope: !7681)
!7692 = !DILocation(line: 1665, column: 9, scope: !7681)
!7693 = !DILocation(line: 1665, column: 15, scope: !7681)
!7694 = !DILocation(line: 1666, column: 5, scope: !7681)
!7695 = !DILocation(line: 1666, column: 9, scope: !7681)
!7696 = !DILocation(line: 1666, column: 15, scope: !7681)
!7697 = !DILocation(line: 1667, column: 5, scope: !7681)
!7698 = !DILocation(line: 1667, column: 9, scope: !7681)
!7699 = !DILocation(line: 1667, column: 16, scope: !7681)
!7700 = !DILocation(line: 1668, column: 37, scope: !7681)
!7701 = !DILocation(line: 1668, column: 34, scope: !7681)
!7702 = !DILocation(line: 1668, column: 17, scope: !7681)
!7703 = !DILocation(line: 1668, column: 5, scope: !7681)
!7704 = !DILocation(line: 1668, column: 9, scope: !7681)
!7705 = !DILocation(line: 1668, column: 15, scope: !7681)
!7706 = !DILocation(line: 1669, column: 5, scope: !7681)
!7707 = !DILocation(line: 1669, column: 9, scope: !7681)
!7708 = !DILocation(line: 1669, column: 16, scope: !7681)
!7709 = !DILocation(line: 1671, column: 24, scope: !7681)
!7710 = !DILocation(line: 1671, column: 53, scope: !7681)
!7711 = !DILocation(line: 1671, column: 51, scope: !7681)
!7712 = !DILocation(line: 1671, column: 14, scope: !7681)
!7713 = !DILocation(line: 1671, column: 5, scope: !7681)
!7714 = !DILocation(line: 1671, column: 9, scope: !7681)
!7715 = !DILocation(line: 1671, column: 12, scope: !7681)
!7716 = !DILocation(line: 1674, column: 19, scope: !7681)
!7717 = !DILocation(line: 1674, column: 10, scope: !7681)
!7718 = !DILocation(line: 1674, column: 8, scope: !7681)
!7719 = !DILocation(line: 1675, column: 12, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7681, file: !3, line: 1675, column: 5)
!7721 = !DILocation(line: 1675, column: 22, scope: !7720)
!7722 = !DILocation(line: 1675, column: 26, scope: !7720)
!7723 = !DILocation(line: 1675, column: 20, scope: !7720)
!7724 = !DILocation(line: 1675, column: 10, scope: !7720)
!7725 = !DILocation(line: 1675, column: 30, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 1675, column: 5)
!7727 = !DILocation(line: 1675, column: 34, scope: !7726)
!7728 = !DILocation(line: 1675, column: 32, scope: !7726)
!7729 = !DILocation(line: 1675, column: 5, scope: !7720)
!7730 = !DILocation(line: 1676, column: 17, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7726, file: !3, line: 1675, column: 81)
!7732 = !DILocation(line: 1676, column: 21, scope: !7731)
!7733 = !DILocation(line: 1676, column: 26, scope: !7731)
!7734 = !DILocation(line: 1676, column: 32, scope: !7731)
!7735 = !DILocation(line: 1676, column: 36, scope: !7731)
!7736 = !DILocation(line: 1676, column: 43, scope: !7731)
!7737 = !DILocation(line: 1676, column: 6, scope: !7731)
!7738 = !DILocation(line: 1677, column: 6, scope: !7731)
!7739 = !DILocation(line: 1677, column: 10, scope: !7731)
!7740 = !DILocation(line: 1677, column: 13, scope: !7731)
!7741 = !DILocation(line: 1678, column: 19, scope: !7731)
!7742 = !DILocation(line: 1678, column: 23, scope: !7731)
!7743 = !DILocation(line: 1678, column: 30, scope: !7731)
!7744 = !DILocation(line: 1678, column: 6, scope: !7731)
!7745 = !DILocation(line: 1678, column: 10, scope: !7731)
!7746 = !DILocation(line: 1678, column: 17, scope: !7731)
!7747 = !DILocation(line: 1679, column: 5, scope: !7731)
!7748 = !DILocation(line: 1675, column: 44, scope: !7726)
!7749 = !DILocation(line: 1675, column: 50, scope: !7726)
!7750 = !DILocation(line: 1675, column: 71, scope: !7726)
!7751 = !DILocation(line: 1675, column: 75, scope: !7726)
!7752 = !DILocation(line: 1675, column: 59, scope: !7726)
!7753 = !DILocation(line: 1675, column: 57, scope: !7726)
!7754 = !DILocation(line: 1675, column: 5, scope: !7726)
!7755 = distinct !{!7755, !7729, !7756}
!7756 = !DILocation(line: 1679, column: 5, scope: !7720)
!7757 = !DILocation(line: 1680, column: 5, scope: !7681)
!7758 = !DILocation(line: 1683, column: 17, scope: !7681)
!7759 = !DILocation(line: 1683, column: 27, scope: !7681)
!7760 = !DILocation(line: 1683, column: 5, scope: !7681)
!7761 = distinct !{!7761, !7537, !7762}
!7762 = !DILocation(line: 1686, column: 3, scope: !7538)
!7763 = !DILocation(line: 1687, column: 2, scope: !7538)
!7764 = !DILocation(line: 1688, column: 1, scope: !7397)
!7765 = distinct !DISubprogram(name: "appendPolyLineVert", scope: !3, file: !3, line: 1550, type: !7766, scopeLine: 1551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!7766 = !DISubroutineType(types: !7767)
!7767 = !{null, !1286, !13}
!7768 = !DILocalVariable(name: "lb", arg: 1, scope: !7765, file: !3, line: 1550, type: !1286)
!7769 = !DILocation(line: 1550, column: 42, scope: !7765)
!7770 = !DILocalVariable(name: "index", arg: 2, scope: !7765, file: !3, line: 1550, type: !13)
!7771 = !DILocation(line: 1550, column: 59, scope: !7765)
!7772 = !DILocalVariable(name: "vl", scope: !7765, file: !3, line: 1552, type: !2707)
!7773 = !DILocation(line: 1552, column: 12, scope: !7765)
!7774 = !DILocation(line: 1552, column: 17, scope: !7765)
!7775 = !DILocation(line: 1553, column: 14, scope: !7765)
!7776 = !DILocation(line: 1553, column: 2, scope: !7765)
!7777 = !DILocation(line: 1553, column: 6, scope: !7765)
!7778 = !DILocation(line: 1553, column: 12, scope: !7765)
!7779 = !DILocation(line: 1554, column: 14, scope: !7765)
!7780 = !DILocation(line: 1554, column: 18, scope: !7765)
!7781 = !DILocation(line: 1554, column: 2, scope: !7765)
!7782 = !DILocation(line: 1555, column: 1, scope: !7765)
!7783 = distinct !DISubprogram(name: "prependPolyLineVert", scope: !3, file: !3, line: 1543, type: !7766, scopeLine: 1544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!7784 = !DILocalVariable(name: "lb", arg: 1, scope: !7783, file: !3, line: 1543, type: !1286)
!7785 = !DILocation(line: 1543, column: 43, scope: !7783)
!7786 = !DILocalVariable(name: "index", arg: 2, scope: !7783, file: !3, line: 1543, type: !13)
!7787 = !DILocation(line: 1543, column: 60, scope: !7783)
!7788 = !DILocalVariable(name: "vl", scope: !7783, file: !3, line: 1545, type: !2707)
!7789 = !DILocation(line: 1545, column: 12, scope: !7783)
!7790 = !DILocation(line: 1545, column: 17, scope: !7783)
!7791 = !DILocation(line: 1546, column: 14, scope: !7783)
!7792 = !DILocation(line: 1546, column: 2, scope: !7783)
!7793 = !DILocation(line: 1546, column: 6, scope: !7783)
!7794 = !DILocation(line: 1546, column: 12, scope: !7783)
!7795 = !DILocation(line: 1547, column: 14, scope: !7783)
!7796 = !DILocation(line: 1547, column: 18, scope: !7783)
!7797 = !DILocation(line: 1547, column: 2, scope: !7783)
!7798 = !DILocation(line: 1548, column: 1, scope: !7783)
!7799 = distinct !DISubprogram(name: "BKE_mesh_to_curve", scope: !3, file: !3, line: 1690, type: !7800, scopeLine: 1691, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!7800 = !DISubroutineType(types: !7801)
!7801 = !{null, !7802, !4322}
!7802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7803, size: 64)
!7803 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !450, line: 1299, baseType: !1302)
!7804 = !DILocalVariable(name: "scene", arg: 1, scope: !7799, file: !3, line: 1690, type: !7802)
!7805 = !DILocation(line: 1690, column: 31, scope: !7799)
!7806 = !DILocalVariable(name: "ob", arg: 2, scope: !7799, file: !3, line: 1690, type: !4322)
!7807 = !DILocation(line: 1690, column: 46, scope: !7799)
!7808 = !DILocalVariable(name: "dm", scope: !7799, file: !3, line: 1693, type: !961)
!7809 = !DILocation(line: 1693, column: 15, scope: !7799)
!7810 = !DILocation(line: 1693, column: 43, scope: !7799)
!7811 = !DILocation(line: 1693, column: 50, scope: !7799)
!7812 = !DILocation(line: 1693, column: 54, scope: !7799)
!7813 = !DILocation(line: 1693, column: 20, scope: !7799)
!7814 = !DILocalVariable(name: "nurblist", scope: !7799, file: !3, line: 1694, type: !320)
!7815 = !DILocation(line: 1694, column: 11, scope: !7799)
!7816 = !DILocalVariable(name: "needsFree", scope: !7799, file: !3, line: 1695, type: !1203)
!7817 = !DILocation(line: 1695, column: 7, scope: !7799)
!7818 = !DILocation(line: 1697, column: 29, scope: !7799)
!7819 = !DILocation(line: 1697, column: 2, scope: !7799)
!7820 = !DILocation(line: 1698, column: 29, scope: !7799)
!7821 = !DILocation(line: 1698, column: 2, scope: !7799)
!7822 = !DILocation(line: 1700, column: 15, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7799, file: !3, line: 1700, column: 6)
!7824 = !DILocation(line: 1700, column: 6, scope: !7823)
!7825 = !DILocation(line: 1700, column: 6, scope: !7799)
!7826 = !DILocalVariable(name: "cu", scope: !7827, file: !3, line: 1701, type: !2539)
!7827 = distinct !DILexicalBlock(scope: !7823, file: !3, line: 1700, column: 22)
!7828 = !DILocation(line: 1701, column: 10, scope: !7827)
!7829 = !DILocation(line: 1701, column: 31, scope: !7827)
!7830 = !DILocation(line: 1701, column: 37, scope: !7827)
!7831 = !DILocation(line: 1701, column: 41, scope: !7827)
!7832 = !DILocation(line: 1701, column: 44, scope: !7827)
!7833 = !DILocation(line: 1701, column: 49, scope: !7827)
!7834 = !DILocation(line: 1701, column: 15, scope: !7827)
!7835 = !DILocation(line: 1702, column: 3, scope: !7827)
!7836 = !DILocation(line: 1702, column: 7, scope: !7827)
!7837 = !DILocation(line: 1702, column: 12, scope: !7827)
!7838 = !DILocation(line: 1704, column: 3, scope: !7827)
!7839 = !DILocation(line: 1704, column: 7, scope: !7827)
!7840 = !DILocation(line: 1704, column: 14, scope: !7827)
!7841 = !DILocation(line: 1706, column: 12, scope: !7827)
!7842 = !DILocation(line: 1706, column: 16, scope: !7827)
!7843 = !DILocation(line: 1706, column: 4, scope: !7827)
!7844 = !DILocation(line: 1706, column: 23, scope: !7827)
!7845 = !DILocation(line: 1706, column: 26, scope: !7827)
!7846 = !DILocation(line: 1706, column: 28, scope: !7827)
!7847 = !DILocation(line: 1707, column: 14, scope: !7827)
!7848 = !DILocation(line: 1707, column: 3, scope: !7827)
!7849 = !DILocation(line: 1707, column: 7, scope: !7827)
!7850 = !DILocation(line: 1707, column: 12, scope: !7827)
!7851 = !DILocation(line: 1708, column: 3, scope: !7827)
!7852 = !DILocation(line: 1708, column: 7, scope: !7827)
!7853 = !DILocation(line: 1708, column: 12, scope: !7827)
!7854 = !DILocation(line: 1711, column: 13, scope: !7827)
!7855 = !DILocation(line: 1712, column: 2, scope: !7827)
!7856 = !DILocation(line: 1714, column: 18, scope: !7799)
!7857 = !DILocation(line: 1714, column: 2, scope: !7799)
!7858 = !DILocation(line: 1714, column: 6, scope: !7799)
!7859 = !DILocation(line: 1714, column: 16, scope: !7799)
!7860 = !DILocation(line: 1715, column: 2, scope: !7799)
!7861 = !DILocation(line: 1715, column: 6, scope: !7799)
!7862 = !DILocation(line: 1715, column: 14, scope: !7799)
!7863 = !DILocation(line: 1717, column: 6, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7799, file: !3, line: 1717, column: 6)
!7865 = !DILocation(line: 1717, column: 6, scope: !7799)
!7866 = !DILocation(line: 1718, column: 3, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7864, file: !3, line: 1717, column: 17)
!7868 = !DILocation(line: 1718, column: 7, scope: !7867)
!7869 = !DILocation(line: 1718, column: 20, scope: !7867)
!7870 = !DILocation(line: 1721, column: 7, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7867, file: !3, line: 1721, column: 7)
!7872 = !DILocation(line: 1721, column: 11, scope: !7871)
!7873 = !DILocation(line: 1721, column: 7, scope: !7867)
!7874 = !DILocation(line: 1722, column: 4, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7871, file: !3, line: 1721, column: 15)
!7876 = !DILocation(line: 1722, column: 14, scope: !7875)
!7877 = !DILocation(line: 1722, column: 18, scope: !7875)
!7878 = !DILocation(line: 1723, column: 4, scope: !7875)
!7879 = !DILocation(line: 1723, column: 8, scope: !7875)
!7880 = !DILocation(line: 1723, column: 11, scope: !7875)
!7881 = !DILocation(line: 1724, column: 3, scope: !7875)
!7882 = !DILocation(line: 1725, column: 2, scope: !7867)
!7883 = !DILocation(line: 1726, column: 1, scope: !7799)
!7884 = distinct !DISubprogram(name: "BKE_mesh_material_index_remove", scope: !3, file: !3, line: 1728, type: !7885, scopeLine: 1729, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!7885 = !DISubroutineType(types: !7886)
!7886 = !{null, !441, !18}
!7887 = !DILocalVariable(name: "me", arg: 1, scope: !7884, file: !3, line: 1728, type: !441)
!7888 = !DILocation(line: 1728, column: 43, scope: !7884)
!7889 = !DILocalVariable(name: "index", arg: 2, scope: !7884, file: !3, line: 1728, type: !18)
!7890 = !DILocation(line: 1728, column: 53, scope: !7884)
!7891 = !DILocalVariable(name: "mp", scope: !7884, file: !3, line: 1730, type: !2721)
!7892 = !DILocation(line: 1730, column: 9, scope: !7884)
!7893 = !DILocalVariable(name: "mf", scope: !7884, file: !3, line: 1731, type: !7)
!7894 = !DILocation(line: 1731, column: 9, scope: !7884)
!7895 = !DILocalVariable(name: "i", scope: !7884, file: !3, line: 1732, type: !6)
!7896 = !DILocation(line: 1732, column: 6, scope: !7884)
!7897 = !DILocation(line: 1734, column: 12, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7884, file: !3, line: 1734, column: 2)
!7899 = !DILocation(line: 1734, column: 16, scope: !7898)
!7900 = !DILocation(line: 1734, column: 10, scope: !7898)
!7901 = !DILocation(line: 1734, column: 25, scope: !7898)
!7902 = !DILocation(line: 1734, column: 7, scope: !7898)
!7903 = !DILocation(line: 1734, column: 30, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7898, file: !3, line: 1734, column: 2)
!7905 = !DILocation(line: 1734, column: 34, scope: !7904)
!7906 = !DILocation(line: 1734, column: 38, scope: !7904)
!7907 = !DILocation(line: 1734, column: 32, scope: !7904)
!7908 = !DILocation(line: 1734, column: 2, scope: !7898)
!7909 = !DILocation(line: 1735, column: 7, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7911, file: !3, line: 1735, column: 7)
!7911 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 1734, column: 58)
!7912 = !DILocation(line: 1735, column: 11, scope: !7910)
!7913 = !DILocation(line: 1735, column: 18, scope: !7910)
!7914 = !DILocation(line: 1735, column: 21, scope: !7910)
!7915 = !DILocation(line: 1735, column: 25, scope: !7910)
!7916 = !DILocation(line: 1735, column: 35, scope: !7910)
!7917 = !DILocation(line: 1735, column: 32, scope: !7910)
!7918 = !DILocation(line: 1735, column: 7, scope: !7911)
!7919 = !DILocation(line: 1736, column: 4, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7910, file: !3, line: 1735, column: 42)
!7921 = !DILocation(line: 1736, column: 8, scope: !7920)
!7922 = !DILocation(line: 1736, column: 14, scope: !7920)
!7923 = !DILocation(line: 1737, column: 3, scope: !7920)
!7924 = !DILocation(line: 1738, column: 2, scope: !7911)
!7925 = !DILocation(line: 1734, column: 48, scope: !7904)
!7926 = !DILocation(line: 1734, column: 54, scope: !7904)
!7927 = !DILocation(line: 1734, column: 2, scope: !7904)
!7928 = distinct !{!7928, !7908, !7929}
!7929 = !DILocation(line: 1738, column: 2, scope: !7898)
!7930 = !DILocation(line: 1740, column: 12, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7884, file: !3, line: 1740, column: 2)
!7932 = !DILocation(line: 1740, column: 16, scope: !7931)
!7933 = !DILocation(line: 1740, column: 10, scope: !7931)
!7934 = !DILocation(line: 1740, column: 25, scope: !7931)
!7935 = !DILocation(line: 1740, column: 7, scope: !7931)
!7936 = !DILocation(line: 1740, column: 30, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 1740, column: 2)
!7938 = !DILocation(line: 1740, column: 34, scope: !7937)
!7939 = !DILocation(line: 1740, column: 38, scope: !7937)
!7940 = !DILocation(line: 1740, column: 32, scope: !7937)
!7941 = !DILocation(line: 1740, column: 2, scope: !7931)
!7942 = !DILocation(line: 1741, column: 7, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7944, file: !3, line: 1741, column: 7)
!7944 = distinct !DILexicalBlock(scope: !7937, file: !3, line: 1740, column: 58)
!7945 = !DILocation(line: 1741, column: 11, scope: !7943)
!7946 = !DILocation(line: 1741, column: 18, scope: !7943)
!7947 = !DILocation(line: 1741, column: 21, scope: !7943)
!7948 = !DILocation(line: 1741, column: 25, scope: !7943)
!7949 = !DILocation(line: 1741, column: 35, scope: !7943)
!7950 = !DILocation(line: 1741, column: 32, scope: !7943)
!7951 = !DILocation(line: 1741, column: 7, scope: !7944)
!7952 = !DILocation(line: 1742, column: 4, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7943, file: !3, line: 1741, column: 42)
!7954 = !DILocation(line: 1742, column: 8, scope: !7953)
!7955 = !DILocation(line: 1742, column: 14, scope: !7953)
!7956 = !DILocation(line: 1743, column: 3, scope: !7953)
!7957 = !DILocation(line: 1744, column: 2, scope: !7944)
!7958 = !DILocation(line: 1740, column: 48, scope: !7937)
!7959 = !DILocation(line: 1740, column: 54, scope: !7937)
!7960 = !DILocation(line: 1740, column: 2, scope: !7937)
!7961 = distinct !{!7961, !7941, !7962}
!7962 = !DILocation(line: 1744, column: 2, scope: !7931)
!7963 = !DILocation(line: 1745, column: 1, scope: !7884)
!7964 = distinct !DISubprogram(name: "BKE_mesh_material_index_clear", scope: !3, file: !3, line: 1747, type: !3460, scopeLine: 1748, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!7965 = !DILocalVariable(name: "me", arg: 1, scope: !7964, file: !3, line: 1747, type: !441)
!7966 = !DILocation(line: 1747, column: 42, scope: !7964)
!7967 = !DILocalVariable(name: "mp", scope: !7964, file: !3, line: 1749, type: !2721)
!7968 = !DILocation(line: 1749, column: 9, scope: !7964)
!7969 = !DILocalVariable(name: "mf", scope: !7964, file: !3, line: 1750, type: !7)
!7970 = !DILocation(line: 1750, column: 9, scope: !7964)
!7971 = !DILocalVariable(name: "i", scope: !7964, file: !3, line: 1751, type: !6)
!7972 = !DILocation(line: 1751, column: 6, scope: !7964)
!7973 = !DILocation(line: 1753, column: 12, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7964, file: !3, line: 1753, column: 2)
!7975 = !DILocation(line: 1753, column: 16, scope: !7974)
!7976 = !DILocation(line: 1753, column: 10, scope: !7974)
!7977 = !DILocation(line: 1753, column: 25, scope: !7974)
!7978 = !DILocation(line: 1753, column: 7, scope: !7974)
!7979 = !DILocation(line: 1753, column: 30, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 1753, column: 2)
!7981 = !DILocation(line: 1753, column: 34, scope: !7980)
!7982 = !DILocation(line: 1753, column: 38, scope: !7980)
!7983 = !DILocation(line: 1753, column: 32, scope: !7980)
!7984 = !DILocation(line: 1753, column: 2, scope: !7974)
!7985 = !DILocation(line: 1754, column: 3, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 1753, column: 58)
!7987 = !DILocation(line: 1754, column: 7, scope: !7986)
!7988 = !DILocation(line: 1754, column: 14, scope: !7986)
!7989 = !DILocation(line: 1755, column: 2, scope: !7986)
!7990 = !DILocation(line: 1753, column: 48, scope: !7980)
!7991 = !DILocation(line: 1753, column: 54, scope: !7980)
!7992 = !DILocation(line: 1753, column: 2, scope: !7980)
!7993 = distinct !{!7993, !7984, !7994}
!7994 = !DILocation(line: 1755, column: 2, scope: !7974)
!7995 = !DILocation(line: 1757, column: 12, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7964, file: !3, line: 1757, column: 2)
!7997 = !DILocation(line: 1757, column: 16, scope: !7996)
!7998 = !DILocation(line: 1757, column: 10, scope: !7996)
!7999 = !DILocation(line: 1757, column: 25, scope: !7996)
!8000 = !DILocation(line: 1757, column: 7, scope: !7996)
!8001 = !DILocation(line: 1757, column: 30, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 1757, column: 2)
!8003 = !DILocation(line: 1757, column: 34, scope: !8002)
!8004 = !DILocation(line: 1757, column: 38, scope: !8002)
!8005 = !DILocation(line: 1757, column: 32, scope: !8002)
!8006 = !DILocation(line: 1757, column: 2, scope: !7996)
!8007 = !DILocation(line: 1758, column: 3, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 1757, column: 58)
!8009 = !DILocation(line: 1758, column: 7, scope: !8008)
!8010 = !DILocation(line: 1758, column: 14, scope: !8008)
!8011 = !DILocation(line: 1759, column: 2, scope: !8008)
!8012 = !DILocation(line: 1757, column: 48, scope: !8002)
!8013 = !DILocation(line: 1757, column: 54, scope: !8002)
!8014 = !DILocation(line: 1757, column: 2, scope: !8002)
!8015 = distinct !{!8015, !8006, !8016}
!8016 = !DILocation(line: 1759, column: 2, scope: !7996)
!8017 = !DILocation(line: 1760, column: 1, scope: !7964)
!8018 = distinct !DISubprogram(name: "BKE_mesh_smooth_flag_set", scope: !3, file: !3, line: 1762, type: !8019, scopeLine: 1763, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!8019 = !DISubroutineType(types: !8020)
!8020 = !{null, !4322, !6}
!8021 = !DILocalVariable(name: "meshOb", arg: 1, scope: !8018, file: !3, line: 1762, type: !4322)
!8022 = !DILocation(line: 1762, column: 39, scope: !8018)
!8023 = !DILocalVariable(name: "enableSmooth", arg: 2, scope: !8018, file: !3, line: 1762, type: !6)
!8024 = !DILocation(line: 1762, column: 51, scope: !8018)
!8025 = !DILocalVariable(name: "me", scope: !8018, file: !3, line: 1764, type: !441)
!8026 = !DILocation(line: 1764, column: 8, scope: !8018)
!8027 = !DILocation(line: 1764, column: 13, scope: !8018)
!8028 = !DILocation(line: 1764, column: 21, scope: !8018)
!8029 = !DILocalVariable(name: "i", scope: !8018, file: !3, line: 1765, type: !6)
!8030 = !DILocation(line: 1765, column: 6, scope: !8018)
!8031 = !DILocation(line: 1767, column: 9, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8018, file: !3, line: 1767, column: 2)
!8033 = !DILocation(line: 1767, column: 7, scope: !8032)
!8034 = !DILocation(line: 1767, column: 14, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8032, file: !3, line: 1767, column: 2)
!8036 = !DILocation(line: 1767, column: 18, scope: !8035)
!8037 = !DILocation(line: 1767, column: 22, scope: !8035)
!8038 = !DILocation(line: 1767, column: 16, scope: !8035)
!8039 = !DILocation(line: 1767, column: 2, scope: !8032)
!8040 = !DILocalVariable(name: "mp", scope: !8041, file: !3, line: 1768, type: !2721)
!8041 = distinct !DILexicalBlock(scope: !8035, file: !3, line: 1767, column: 36)
!8042 = !DILocation(line: 1768, column: 10, scope: !8041)
!8043 = !DILocation(line: 1768, column: 27, scope: !8041)
!8044 = !DILocation(line: 1768, column: 31, scope: !8041)
!8045 = !DILocation(line: 1768, column: 38, scope: !8041)
!8046 = !DILocation(line: 1768, column: 16, scope: !8041)
!8047 = !DILocation(line: 1770, column: 7, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8041, file: !3, line: 1770, column: 7)
!8049 = !DILocation(line: 1770, column: 7, scope: !8041)
!8050 = !DILocation(line: 1771, column: 4, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 1770, column: 21)
!8052 = !DILocation(line: 1771, column: 8, scope: !8051)
!8053 = !DILocation(line: 1771, column: 13, scope: !8051)
!8054 = !DILocation(line: 1772, column: 3, scope: !8051)
!8055 = !DILocation(line: 1774, column: 4, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 1773, column: 8)
!8057 = !DILocation(line: 1774, column: 8, scope: !8056)
!8058 = !DILocation(line: 1774, column: 13, scope: !8056)
!8059 = !DILocation(line: 1776, column: 2, scope: !8041)
!8060 = !DILocation(line: 1767, column: 32, scope: !8035)
!8061 = !DILocation(line: 1767, column: 2, scope: !8035)
!8062 = distinct !{!8062, !8039, !8063}
!8063 = !DILocation(line: 1776, column: 2, scope: !8032)
!8064 = !DILocation(line: 1778, column: 9, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8018, file: !3, line: 1778, column: 2)
!8066 = !DILocation(line: 1778, column: 7, scope: !8065)
!8067 = !DILocation(line: 1778, column: 14, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8065, file: !3, line: 1778, column: 2)
!8069 = !DILocation(line: 1778, column: 18, scope: !8068)
!8070 = !DILocation(line: 1778, column: 22, scope: !8068)
!8071 = !DILocation(line: 1778, column: 16, scope: !8068)
!8072 = !DILocation(line: 1778, column: 2, scope: !8065)
!8073 = !DILocalVariable(name: "mf", scope: !8074, file: !3, line: 1779, type: !7)
!8074 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 1778, column: 36)
!8075 = !DILocation(line: 1779, column: 10, scope: !8074)
!8076 = !DILocation(line: 1779, column: 27, scope: !8074)
!8077 = !DILocation(line: 1779, column: 31, scope: !8074)
!8078 = !DILocation(line: 1779, column: 38, scope: !8074)
!8079 = !DILocation(line: 1779, column: 16, scope: !8074)
!8080 = !DILocation(line: 1781, column: 7, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 1781, column: 7)
!8082 = !DILocation(line: 1781, column: 7, scope: !8074)
!8083 = !DILocation(line: 1782, column: 4, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8081, file: !3, line: 1781, column: 21)
!8085 = !DILocation(line: 1782, column: 8, scope: !8084)
!8086 = !DILocation(line: 1782, column: 13, scope: !8084)
!8087 = !DILocation(line: 1783, column: 3, scope: !8084)
!8088 = !DILocation(line: 1785, column: 4, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8081, file: !3, line: 1784, column: 8)
!8090 = !DILocation(line: 1785, column: 8, scope: !8089)
!8091 = !DILocation(line: 1785, column: 13, scope: !8089)
!8092 = !DILocation(line: 1787, column: 2, scope: !8074)
!8093 = !DILocation(line: 1778, column: 32, scope: !8068)
!8094 = !DILocation(line: 1778, column: 2, scope: !8068)
!8095 = distinct !{!8095, !8072, !8096}
!8096 = !DILocation(line: 1787, column: 2, scope: !8065)
!8097 = !DILocation(line: 1788, column: 1, scope: !8018)
!8098 = distinct !DISubprogram(name: "BKE_mesh_vertexCos_get", scope: !3, file: !3, line: 1794, type: !8099, scopeLine: 1795, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!8099 = !DISubroutineType(types: !8100)
!8100 = !{!1181, !441, !1117}
!8101 = !DILocalVariable(name: "me", arg: 1, scope: !8098, file: !3, line: 1794, type: !441)
!8102 = !DILocation(line: 1794, column: 38, scope: !8098)
!8103 = !DILocalVariable(name: "r_numVerts", arg: 2, scope: !8098, file: !3, line: 1794, type: !1117)
!8104 = !DILocation(line: 1794, column: 47, scope: !8098)
!8105 = !DILocalVariable(name: "i", scope: !8098, file: !3, line: 1796, type: !6)
!8106 = !DILocation(line: 1796, column: 6, scope: !8098)
!8107 = !DILocalVariable(name: "numVerts", scope: !8098, file: !3, line: 1796, type: !6)
!8108 = !DILocation(line: 1796, column: 9, scope: !8098)
!8109 = !DILocation(line: 1796, column: 20, scope: !8098)
!8110 = !DILocation(line: 1796, column: 24, scope: !8098)
!8111 = !DILocalVariable(name: "cos", scope: !8098, file: !3, line: 1797, type: !1181)
!8112 = !DILocation(line: 1797, column: 10, scope: !8098)
!8113 = !DILocation(line: 1797, column: 20, scope: !8098)
!8114 = !DILocation(line: 1797, column: 47, scope: !8098)
!8115 = !DILocation(line: 1797, column: 45, scope: !8098)
!8116 = !DILocation(line: 1799, column: 6, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8098, file: !3, line: 1799, column: 6)
!8118 = !DILocation(line: 1799, column: 6, scope: !8098)
!8119 = !DILocation(line: 1799, column: 32, scope: !8117)
!8120 = !DILocation(line: 1799, column: 19, scope: !8117)
!8121 = !DILocation(line: 1799, column: 30, scope: !8117)
!8122 = !DILocation(line: 1799, column: 18, scope: !8117)
!8123 = !DILocation(line: 1800, column: 9, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8098, file: !3, line: 1800, column: 2)
!8125 = !DILocation(line: 1800, column: 7, scope: !8124)
!8126 = !DILocation(line: 1800, column: 14, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8124, file: !3, line: 1800, column: 2)
!8128 = !DILocation(line: 1800, column: 18, scope: !8127)
!8129 = !DILocation(line: 1800, column: 16, scope: !8127)
!8130 = !DILocation(line: 1800, column: 2, scope: !8124)
!8131 = !DILocation(line: 1801, column: 14, scope: !8127)
!8132 = !DILocation(line: 1801, column: 18, scope: !8127)
!8133 = !DILocation(line: 1801, column: 22, scope: !8127)
!8134 = !DILocation(line: 1801, column: 26, scope: !8127)
!8135 = !DILocation(line: 1801, column: 32, scope: !8127)
!8136 = !DILocation(line: 1801, column: 35, scope: !8127)
!8137 = !DILocation(line: 1801, column: 3, scope: !8127)
!8138 = !DILocation(line: 1800, column: 29, scope: !8127)
!8139 = !DILocation(line: 1800, column: 2, scope: !8127)
!8140 = distinct !{!8140, !8130, !8141}
!8141 = !DILocation(line: 1801, column: 37, scope: !8124)
!8142 = !DILocation(line: 1803, column: 9, scope: !8098)
!8143 = !DILocation(line: 1803, column: 2, scope: !8098)
!8144 = distinct !DISubprogram(name: "poly_find_loop_from_vert", scope: !3, file: !3, line: 1810, type: !8145, scopeLine: 1812, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!8145 = !DISubroutineType(types: !8146)
!8146 = !{!6, !6952, !8147, !13}
!8147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8148, size: 64)
!8148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3133)
!8149 = !DILocalVariable(name: "poly", arg: 1, scope: !8144, file: !3, line: 1810, type: !6952)
!8150 = !DILocation(line: 1810, column: 43, scope: !8144)
!8151 = !DILocalVariable(name: "loopstart", arg: 2, scope: !8144, file: !3, line: 1810, type: !8147)
!8152 = !DILocation(line: 1810, column: 62, scope: !8144)
!8153 = !DILocalVariable(name: "vert", arg: 3, scope: !8144, file: !3, line: 1811, type: !13)
!8154 = !DILocation(line: 1811, column: 39, scope: !8144)
!8155 = !DILocalVariable(name: "j", scope: !8144, file: !3, line: 1813, type: !6)
!8156 = !DILocation(line: 1813, column: 6, scope: !8144)
!8157 = !DILocation(line: 1814, column: 9, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8144, file: !3, line: 1814, column: 2)
!8159 = !DILocation(line: 1814, column: 7, scope: !8158)
!8160 = !DILocation(line: 1814, column: 14, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 1814, column: 2)
!8162 = !DILocation(line: 1814, column: 18, scope: !8161)
!8163 = !DILocation(line: 1814, column: 24, scope: !8161)
!8164 = !DILocation(line: 1814, column: 16, scope: !8161)
!8165 = !DILocation(line: 1814, column: 2, scope: !8158)
!8166 = !DILocation(line: 1815, column: 7, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8168, file: !3, line: 1815, column: 7)
!8168 = distinct !DILexicalBlock(scope: !8161, file: !3, line: 1814, column: 51)
!8169 = !DILocation(line: 1815, column: 18, scope: !8167)
!8170 = !DILocation(line: 1815, column: 23, scope: !8167)
!8171 = !DILocation(line: 1815, column: 20, scope: !8167)
!8172 = !DILocation(line: 1815, column: 7, scope: !8168)
!8173 = !DILocation(line: 1816, column: 11, scope: !8167)
!8174 = !DILocation(line: 1816, column: 4, scope: !8167)
!8175 = !DILocation(line: 1817, column: 2, scope: !8168)
!8176 = !DILocation(line: 1814, column: 34, scope: !8161)
!8177 = !DILocation(line: 1814, column: 47, scope: !8161)
!8178 = !DILocation(line: 1814, column: 2, scope: !8161)
!8179 = distinct !{!8179, !8165, !8180}
!8180 = !DILocation(line: 1817, column: 2, scope: !8158)
!8181 = !DILocation(line: 1819, column: 2, scope: !8144)
!8182 = !DILocation(line: 1820, column: 1, scope: !8144)
!8183 = distinct !DISubprogram(name: "poly_get_adj_loops_from_vert", scope: !3, file: !3, line: 1827, type: !8184, scopeLine: 1829, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!8184 = !DISubroutineType(types: !8185)
!8185 = !{!6, !378, !6952, !8147, !13}
!8186 = !DILocalVariable(name: "r_adj", arg: 1, scope: !8183, file: !3, line: 1827, type: !378)
!8187 = !DILocation(line: 1827, column: 43, scope: !8183)
!8188 = !DILocalVariable(name: "poly", arg: 2, scope: !8183, file: !3, line: 1827, type: !6952)
!8189 = !DILocation(line: 1827, column: 66, scope: !8183)
!8190 = !DILocalVariable(name: "mloop", arg: 3, scope: !8183, file: !3, line: 1828, type: !8147)
!8191 = !DILocation(line: 1828, column: 47, scope: !8183)
!8192 = !DILocalVariable(name: "vert", arg: 4, scope: !8183, file: !3, line: 1828, type: !13)
!8193 = !DILocation(line: 1828, column: 63, scope: !8183)
!8194 = !DILocalVariable(name: "corner", scope: !8183, file: !3, line: 1830, type: !6)
!8195 = !DILocation(line: 1830, column: 6, scope: !8183)
!8196 = !DILocation(line: 1830, column: 40, scope: !8183)
!8197 = !DILocation(line: 1831, column: 41, scope: !8183)
!8198 = !DILocation(line: 1831, column: 47, scope: !8183)
!8199 = !DILocation(line: 1831, column: 53, scope: !8183)
!8200 = !DILocation(line: 1832, column: 40, scope: !8183)
!8201 = !DILocation(line: 1830, column: 15, scope: !8183)
!8202 = !DILocation(line: 1834, column: 6, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8183, file: !3, line: 1834, column: 6)
!8204 = !DILocation(line: 1834, column: 13, scope: !8203)
!8205 = !DILocation(line: 1834, column: 6, scope: !8183)
!8206 = !DILocalVariable(name: "ml", scope: !8207, file: !3, line: 1835, type: !8147)
!8207 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 1834, column: 20)
!8208 = !DILocation(line: 1835, column: 16, scope: !8207)
!8209 = !DILocation(line: 1835, column: 22, scope: !8207)
!8210 = !DILocation(line: 1835, column: 28, scope: !8207)
!8211 = !DILocation(line: 1835, column: 34, scope: !8207)
!8212 = !DILocation(line: 1835, column: 46, scope: !8207)
!8213 = !DILocation(line: 1835, column: 44, scope: !8207)
!8214 = !DILocation(line: 1838, column: 14, scope: !8207)
!8215 = !DILocation(line: 1838, column: 54, scope: !8207)
!8216 = !DILocation(line: 1838, column: 3, scope: !8207)
!8217 = !DILocation(line: 1838, column: 12, scope: !8207)
!8218 = !DILocation(line: 1839, column: 14, scope: !8207)
!8219 = !DILocation(line: 1839, column: 18, scope: !8207)
!8220 = !DILocation(line: 1839, column: 3, scope: !8207)
!8221 = !DILocation(line: 1839, column: 12, scope: !8207)
!8222 = !DILocation(line: 1840, column: 14, scope: !8207)
!8223 = !DILocation(line: 1840, column: 54, scope: !8207)
!8224 = !DILocation(line: 1840, column: 3, scope: !8207)
!8225 = !DILocation(line: 1840, column: 12, scope: !8207)
!8226 = !DILocation(line: 1841, column: 2, scope: !8207)
!8227 = !DILocation(line: 1843, column: 9, scope: !8183)
!8228 = !DILocation(line: 1843, column: 2, scope: !8183)
!8229 = distinct !DISubprogram(name: "BKE_mesh_edge_other_vert", scope: !3, file: !3, line: 1850, type: !8230, scopeLine: 1851, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!8230 = !DISubroutineType(types: !8231)
!8231 = !{!6, !8232, !6}
!8232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8233, size: 64)
!8233 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3036)
!8234 = !DILocalVariable(name: "e", arg: 1, scope: !8229, file: !3, line: 1850, type: !8232)
!8235 = !DILocation(line: 1850, column: 43, scope: !8229)
!8236 = !DILocalVariable(name: "v", arg: 2, scope: !8229, file: !3, line: 1850, type: !6)
!8237 = !DILocation(line: 1850, column: 50, scope: !8229)
!8238 = !DILocation(line: 1852, column: 6, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8229, file: !3, line: 1852, column: 6)
!8240 = !DILocation(line: 1852, column: 9, scope: !8239)
!8241 = !DILocation(line: 1852, column: 15, scope: !8239)
!8242 = !DILocation(line: 1852, column: 12, scope: !8239)
!8243 = !DILocation(line: 1852, column: 6, scope: !8229)
!8244 = !DILocation(line: 1853, column: 10, scope: !8239)
!8245 = !DILocation(line: 1853, column: 13, scope: !8239)
!8246 = !DILocation(line: 1853, column: 3, scope: !8239)
!8247 = !DILocation(line: 1854, column: 11, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8239, file: !3, line: 1854, column: 11)
!8249 = !DILocation(line: 1854, column: 14, scope: !8248)
!8250 = !DILocation(line: 1854, column: 20, scope: !8248)
!8251 = !DILocation(line: 1854, column: 17, scope: !8248)
!8252 = !DILocation(line: 1854, column: 11, scope: !8239)
!8253 = !DILocation(line: 1855, column: 10, scope: !8248)
!8254 = !DILocation(line: 1855, column: 13, scope: !8248)
!8255 = !DILocation(line: 1855, column: 3, scope: !8248)
!8256 = !DILocation(line: 1857, column: 3, scope: !8248)
!8257 = !DILocation(line: 1858, column: 1, scope: !8229)
!8258 = distinct !DISubprogram(name: "BKE_mesh_transform", scope: !3, file: !3, line: 1872, type: !8259, scopeLine: 1873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!8259 = !DISubroutineType(types: !8260)
!8260 = !{null, !441, !1209, !1203}
!8261 = !DILocalVariable(name: "me", arg: 1, scope: !8258, file: !3, line: 1872, type: !441)
!8262 = !DILocation(line: 1872, column: 31, scope: !8258)
!8263 = !DILocalVariable(name: "mat", arg: 2, scope: !8258, file: !3, line: 1872, type: !1209)
!8264 = !DILocation(line: 1872, column: 41, scope: !8258)
!8265 = !DILocalVariable(name: "do_keys", arg: 3, scope: !8258, file: !3, line: 1872, type: !1203)
!8266 = !DILocation(line: 1872, column: 57, scope: !8258)
!8267 = !DILocalVariable(name: "i", scope: !8258, file: !3, line: 1874, type: !6)
!8268 = !DILocation(line: 1874, column: 6, scope: !8258)
!8269 = !DILocalVariable(name: "mvert", scope: !8258, file: !3, line: 1875, type: !2524)
!8270 = !DILocation(line: 1875, column: 9, scope: !8258)
!8271 = !DILocation(line: 1875, column: 17, scope: !8258)
!8272 = !DILocation(line: 1875, column: 21, scope: !8258)
!8273 = !DILocation(line: 1877, column: 9, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8258, file: !3, line: 1877, column: 2)
!8275 = !DILocation(line: 1877, column: 7, scope: !8274)
!8276 = !DILocation(line: 1877, column: 14, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8274, file: !3, line: 1877, column: 2)
!8278 = !DILocation(line: 1877, column: 18, scope: !8277)
!8279 = !DILocation(line: 1877, column: 22, scope: !8277)
!8280 = !DILocation(line: 1877, column: 16, scope: !8277)
!8281 = !DILocation(line: 1877, column: 2, scope: !8274)
!8282 = !DILocation(line: 1878, column: 13, scope: !8277)
!8283 = !DILocation(line: 1878, column: 18, scope: !8277)
!8284 = !DILocation(line: 1878, column: 25, scope: !8277)
!8285 = !DILocation(line: 1878, column: 3, scope: !8277)
!8286 = !DILocation(line: 1877, column: 32, scope: !8277)
!8287 = !DILocation(line: 1877, column: 41, scope: !8277)
!8288 = !DILocation(line: 1877, column: 2, scope: !8277)
!8289 = distinct !{!8289, !8281, !8290}
!8290 = !DILocation(line: 1878, column: 27, scope: !8274)
!8291 = !DILocation(line: 1880, column: 6, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8258, file: !3, line: 1880, column: 6)
!8293 = !DILocation(line: 1880, column: 14, scope: !8292)
!8294 = !DILocation(line: 1880, column: 17, scope: !8292)
!8295 = !DILocation(line: 1880, column: 21, scope: !8292)
!8296 = !DILocation(line: 1880, column: 6, scope: !8258)
!8297 = !DILocalVariable(name: "kb", scope: !8298, file: !3, line: 1881, type: !489)
!8298 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 1880, column: 26)
!8299 = !DILocation(line: 1881, column: 13, scope: !8298)
!8300 = !DILocation(line: 1882, column: 13, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8298, file: !3, line: 1882, column: 3)
!8302 = !DILocation(line: 1882, column: 17, scope: !8301)
!8303 = !DILocation(line: 1882, column: 22, scope: !8301)
!8304 = !DILocation(line: 1882, column: 28, scope: !8301)
!8305 = !DILocation(line: 1882, column: 11, scope: !8301)
!8306 = !DILocation(line: 1882, column: 8, scope: !8301)
!8307 = !DILocation(line: 1882, column: 35, scope: !8308)
!8308 = distinct !DILexicalBlock(scope: !8301, file: !3, line: 1882, column: 3)
!8309 = !DILocation(line: 1882, column: 3, scope: !8301)
!8310 = !DILocalVariable(name: "fp", scope: !8311, file: !3, line: 1883, type: !1172)
!8311 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 1882, column: 54)
!8312 = !DILocation(line: 1883, column: 11, scope: !8311)
!8313 = !DILocation(line: 1883, column: 16, scope: !8311)
!8314 = !DILocation(line: 1883, column: 20, scope: !8311)
!8315 = !DILocation(line: 1884, column: 13, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 1884, column: 4)
!8317 = !DILocation(line: 1884, column: 17, scope: !8316)
!8318 = !DILocation(line: 1884, column: 11, scope: !8316)
!8319 = !DILocation(line: 1884, column: 9, scope: !8316)
!8320 = !DILocation(line: 1884, column: 27, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8316, file: !3, line: 1884, column: 4)
!8322 = !DILocation(line: 1884, column: 4, scope: !8316)
!8323 = !DILocation(line: 1885, column: 15, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8321, file: !3, line: 1884, column: 40)
!8325 = !DILocation(line: 1885, column: 20, scope: !8324)
!8326 = !DILocation(line: 1885, column: 5, scope: !8324)
!8327 = !DILocation(line: 1886, column: 4, scope: !8324)
!8328 = !DILocation(line: 1884, column: 34, scope: !8321)
!8329 = !DILocation(line: 1884, column: 4, scope: !8321)
!8330 = distinct !{!8330, !8322, !8331}
!8331 = !DILocation(line: 1886, column: 4, scope: !8316)
!8332 = !DILocation(line: 1887, column: 3, scope: !8311)
!8333 = !DILocation(line: 1882, column: 44, scope: !8308)
!8334 = !DILocation(line: 1882, column: 48, scope: !8308)
!8335 = !DILocation(line: 1882, column: 42, scope: !8308)
!8336 = !DILocation(line: 1882, column: 3, scope: !8308)
!8337 = distinct !{!8337, !8309, !8338}
!8338 = !DILocation(line: 1887, column: 3, scope: !8301)
!8339 = !DILocation(line: 1888, column: 2, scope: !8298)
!8340 = !DILocation(line: 1891, column: 1, scope: !8258)
!8341 = distinct !DISubprogram(name: "BKE_mesh_translate", scope: !3, file: !3, line: 1893, type: !8342, scopeLine: 1894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!8342 = !DISubroutineType(types: !8343)
!8343 = !{null, !441, !1146, !1224}
!8344 = !DILocalVariable(name: "me", arg: 1, scope: !8341, file: !3, line: 1893, type: !441)
!8345 = !DILocation(line: 1893, column: 31, scope: !8341)
!8346 = !DILocalVariable(name: "offset", arg: 2, scope: !8341, file: !3, line: 1893, type: !1146)
!8347 = !DILocation(line: 1893, column: 47, scope: !8341)
!8348 = !DILocalVariable(name: "do_keys", arg: 3, scope: !8341, file: !3, line: 1893, type: !1224)
!8349 = !DILocation(line: 1893, column: 69, scope: !8341)
!8350 = !DILocalVariable(name: "i", scope: !8341, file: !3, line: 1895, type: !6)
!8351 = !DILocation(line: 1895, column: 6, scope: !8341)
!8352 = !DILocation(line: 1895, column: 10, scope: !8341)
!8353 = !DILocation(line: 1895, column: 14, scope: !8341)
!8354 = !DILocalVariable(name: "mvert", scope: !8341, file: !3, line: 1896, type: !2524)
!8355 = !DILocation(line: 1896, column: 9, scope: !8341)
!8356 = !DILocation(line: 1897, column: 15, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8341, file: !3, line: 1897, column: 2)
!8358 = !DILocation(line: 1897, column: 19, scope: !8357)
!8359 = !DILocation(line: 1897, column: 13, scope: !8357)
!8360 = !DILocation(line: 1897, column: 7, scope: !8357)
!8361 = !DILocation(line: 1897, column: 27, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8357, file: !3, line: 1897, column: 2)
!8363 = !DILocation(line: 1897, column: 2, scope: !8357)
!8364 = !DILocation(line: 1898, column: 13, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8362, file: !3, line: 1897, column: 40)
!8366 = !DILocation(line: 1898, column: 20, scope: !8365)
!8367 = !DILocation(line: 1898, column: 24, scope: !8365)
!8368 = !DILocation(line: 1898, column: 3, scope: !8365)
!8369 = !DILocation(line: 1899, column: 2, scope: !8365)
!8370 = !DILocation(line: 1897, column: 36, scope: !8362)
!8371 = !DILocation(line: 1897, column: 2, scope: !8362)
!8372 = distinct !{!8372, !8363, !8373}
!8373 = !DILocation(line: 1899, column: 2, scope: !8357)
!8374 = !DILocation(line: 1901, column: 6, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8341, file: !3, line: 1901, column: 6)
!8376 = !DILocation(line: 1901, column: 14, scope: !8375)
!8377 = !DILocation(line: 1901, column: 17, scope: !8375)
!8378 = !DILocation(line: 1901, column: 21, scope: !8375)
!8379 = !DILocation(line: 1901, column: 6, scope: !8341)
!8380 = !DILocalVariable(name: "kb", scope: !8381, file: !3, line: 1902, type: !489)
!8381 = distinct !DILexicalBlock(scope: !8375, file: !3, line: 1901, column: 26)
!8382 = !DILocation(line: 1902, column: 13, scope: !8381)
!8383 = !DILocation(line: 1903, column: 13, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8381, file: !3, line: 1903, column: 3)
!8385 = !DILocation(line: 1903, column: 17, scope: !8384)
!8386 = !DILocation(line: 1903, column: 22, scope: !8384)
!8387 = !DILocation(line: 1903, column: 28, scope: !8384)
!8388 = !DILocation(line: 1903, column: 11, scope: !8384)
!8389 = !DILocation(line: 1903, column: 8, scope: !8384)
!8390 = !DILocation(line: 1903, column: 35, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8384, file: !3, line: 1903, column: 3)
!8392 = !DILocation(line: 1903, column: 3, scope: !8384)
!8393 = !DILocalVariable(name: "fp", scope: !8394, file: !3, line: 1904, type: !1172)
!8394 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 1903, column: 54)
!8395 = !DILocation(line: 1904, column: 11, scope: !8394)
!8396 = !DILocation(line: 1904, column: 16, scope: !8394)
!8397 = !DILocation(line: 1904, column: 20, scope: !8394)
!8398 = !DILocation(line: 1905, column: 13, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8394, file: !3, line: 1905, column: 4)
!8400 = !DILocation(line: 1905, column: 17, scope: !8399)
!8401 = !DILocation(line: 1905, column: 11, scope: !8399)
!8402 = !DILocation(line: 1905, column: 9, scope: !8399)
!8403 = !DILocation(line: 1905, column: 27, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8399, file: !3, line: 1905, column: 4)
!8405 = !DILocation(line: 1905, column: 4, scope: !8399)
!8406 = !DILocation(line: 1906, column: 15, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8404, file: !3, line: 1905, column: 40)
!8408 = !DILocation(line: 1906, column: 19, scope: !8407)
!8409 = !DILocation(line: 1906, column: 5, scope: !8407)
!8410 = !DILocation(line: 1907, column: 4, scope: !8407)
!8411 = !DILocation(line: 1905, column: 34, scope: !8404)
!8412 = !DILocation(line: 1905, column: 4, scope: !8404)
!8413 = distinct !{!8413, !8405, !8414}
!8414 = !DILocation(line: 1907, column: 4, scope: !8399)
!8415 = !DILocation(line: 1908, column: 3, scope: !8394)
!8416 = !DILocation(line: 1903, column: 44, scope: !8391)
!8417 = !DILocation(line: 1903, column: 48, scope: !8391)
!8418 = !DILocation(line: 1903, column: 42, scope: !8391)
!8419 = !DILocation(line: 1903, column: 3, scope: !8391)
!8420 = distinct !{!8420, !8392, !8421}
!8421 = !DILocation(line: 1908, column: 3, scope: !8384)
!8422 = !DILocation(line: 1909, column: 2, scope: !8381)
!8423 = !DILocation(line: 1910, column: 1, scope: !8341)
!8424 = distinct !DISubprogram(name: "add_v3_v3", scope: !5218, file: !5218, line: 302, type: !5219, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!8425 = !DILocalVariable(name: "r", arg: 1, scope: !8424, file: !5218, line: 302, type: !1172)
!8426 = !DILocation(line: 302, column: 30, scope: !8424)
!8427 = !DILocalVariable(name: "a", arg: 2, scope: !8424, file: !5218, line: 302, type: !1146)
!8428 = !DILocation(line: 302, column: 48, scope: !8424)
!8429 = !DILocation(line: 304, column: 10, scope: !8424)
!8430 = !DILocation(line: 304, column: 2, scope: !8424)
!8431 = !DILocation(line: 304, column: 7, scope: !8424)
!8432 = !DILocation(line: 305, column: 10, scope: !8424)
!8433 = !DILocation(line: 305, column: 2, scope: !8424)
!8434 = !DILocation(line: 305, column: 7, scope: !8424)
!8435 = !DILocation(line: 306, column: 10, scope: !8424)
!8436 = !DILocation(line: 306, column: 2, scope: !8424)
!8437 = !DILocation(line: 306, column: 7, scope: !8424)
!8438 = !DILocation(line: 307, column: 1, scope: !8424)
!8439 = distinct !DISubprogram(name: "BKE_mesh_ensure_navmesh", scope: !3, file: !3, line: 1912, type: !3460, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!8440 = !DILocalVariable(name: "me", arg: 1, scope: !8439, file: !3, line: 1912, type: !441)
!8441 = !DILocation(line: 1912, column: 36, scope: !8439)
!8442 = !DILocation(line: 1914, column: 29, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8439, file: !3, line: 1914, column: 6)
!8444 = !DILocation(line: 1914, column: 33, scope: !8443)
!8445 = !DILocation(line: 1914, column: 7, scope: !8443)
!8446 = !DILocation(line: 1914, column: 6, scope: !8439)
!8447 = !DILocalVariable(name: "i", scope: !8448, file: !3, line: 1915, type: !6)
!8448 = distinct !DILexicalBlock(scope: !8443, file: !3, line: 1914, column: 52)
!8449 = !DILocation(line: 1915, column: 7, scope: !8448)
!8450 = !DILocalVariable(name: "numFaces", scope: !8448, file: !3, line: 1916, type: !6)
!8451 = !DILocation(line: 1916, column: 7, scope: !8448)
!8452 = !DILocation(line: 1916, column: 18, scope: !8448)
!8453 = !DILocation(line: 1916, column: 22, scope: !8448)
!8454 = !DILocalVariable(name: "recastData", scope: !8448, file: !3, line: 1917, type: !1117)
!8455 = !DILocation(line: 1917, column: 8, scope: !8448)
!8456 = !DILocation(line: 1918, column: 23, scope: !8448)
!8457 = !DILocation(line: 1918, column: 35, scope: !8448)
!8458 = !DILocation(line: 1918, column: 44, scope: !8448)
!8459 = !DILocation(line: 1918, column: 16, scope: !8448)
!8460 = !DILocation(line: 1918, column: 14, scope: !8448)
!8461 = !DILocation(line: 1919, column: 10, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8448, file: !3, line: 1919, column: 3)
!8463 = !DILocation(line: 1919, column: 8, scope: !8462)
!8464 = !DILocation(line: 1919, column: 15, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 1919, column: 3)
!8466 = !DILocation(line: 1919, column: 19, scope: !8465)
!8467 = !DILocation(line: 1919, column: 17, scope: !8465)
!8468 = !DILocation(line: 1919, column: 3, scope: !8462)
!8469 = !DILocation(line: 1920, column: 20, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 1919, column: 34)
!8471 = !DILocation(line: 1920, column: 22, scope: !8470)
!8472 = !DILocation(line: 1920, column: 4, scope: !8470)
!8473 = !DILocation(line: 1920, column: 15, scope: !8470)
!8474 = !DILocation(line: 1920, column: 18, scope: !8470)
!8475 = !DILocation(line: 1921, column: 3, scope: !8470)
!8476 = !DILocation(line: 1919, column: 30, scope: !8465)
!8477 = !DILocation(line: 1919, column: 3, scope: !8465)
!8478 = distinct !{!8478, !8468, !8479}
!8479 = !DILocation(line: 1921, column: 3, scope: !8462)
!8480 = !DILocation(line: 1922, column: 31, scope: !8448)
!8481 = !DILocation(line: 1922, column: 35, scope: !8448)
!8482 = !DILocation(line: 1922, column: 64, scope: !8448)
!8483 = !DILocation(line: 1922, column: 76, scope: !8448)
!8484 = !DILocation(line: 1922, column: 3, scope: !8448)
!8485 = !DILocation(line: 1923, column: 2, scope: !8448)
!8486 = !DILocation(line: 1924, column: 1, scope: !8439)
!8487 = distinct !DISubprogram(name: "BKE_mesh_tessface_calc", scope: !3, file: !3, line: 1926, type: !3460, scopeLine: 1927, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!8488 = !DILocalVariable(name: "mesh", arg: 1, scope: !8487, file: !3, line: 1926, type: !441)
!8489 = !DILocation(line: 1926, column: 35, scope: !8487)
!8490 = !DILocation(line: 1928, column: 48, scope: !8487)
!8491 = !DILocation(line: 1928, column: 54, scope: !8487)
!8492 = !DILocation(line: 1928, column: 62, scope: !8487)
!8493 = !DILocation(line: 1928, column: 68, scope: !8487)
!8494 = !DILocation(line: 1928, column: 76, scope: !8487)
!8495 = !DILocation(line: 1928, column: 82, scope: !8487)
!8496 = !DILocation(line: 1929, column: 47, scope: !8487)
!8497 = !DILocation(line: 1929, column: 53, scope: !8487)
!8498 = !DILocation(line: 1930, column: 47, scope: !8487)
!8499 = !DILocation(line: 1930, column: 53, scope: !8487)
!8500 = !DILocation(line: 1930, column: 62, scope: !8487)
!8501 = !DILocation(line: 1930, column: 68, scope: !8487)
!8502 = !DILocation(line: 1930, column: 77, scope: !8487)
!8503 = !DILocation(line: 1930, column: 83, scope: !8487)
!8504 = !DILocation(line: 1928, column: 18, scope: !8487)
!8505 = !DILocation(line: 1928, column: 2, scope: !8487)
!8506 = !DILocation(line: 1928, column: 8, scope: !8487)
!8507 = !DILocation(line: 1928, column: 16, scope: !8487)
!8508 = !DILocation(line: 1934, column: 38, scope: !8487)
!8509 = !DILocation(line: 1934, column: 2, scope: !8487)
!8510 = !DILocation(line: 1935, column: 1, scope: !8487)
!8511 = distinct !DISubprogram(name: "BKE_mesh_tessface_ensure", scope: !3, file: !3, line: 1937, type: !3460, scopeLine: 1938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!8512 = !DILocalVariable(name: "mesh", arg: 1, scope: !8511, file: !3, line: 1937, type: !441)
!8513 = !DILocation(line: 1937, column: 37, scope: !8511)
!8514 = !DILocation(line: 1939, column: 6, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8511, file: !3, line: 1939, column: 6)
!8516 = !DILocation(line: 1939, column: 12, scope: !8515)
!8517 = !DILocation(line: 1939, column: 20, scope: !8515)
!8518 = !DILocation(line: 1939, column: 23, scope: !8515)
!8519 = !DILocation(line: 1939, column: 29, scope: !8515)
!8520 = !DILocation(line: 1939, column: 37, scope: !8515)
!8521 = !DILocation(line: 1939, column: 6, scope: !8511)
!8522 = !DILocation(line: 1940, column: 26, scope: !8523)
!8523 = distinct !DILexicalBlock(scope: !8515, file: !3, line: 1939, column: 43)
!8524 = !DILocation(line: 1940, column: 3, scope: !8523)
!8525 = !DILocation(line: 1941, column: 2, scope: !8523)
!8526 = !DILocation(line: 1942, column: 1, scope: !8511)
!8527 = distinct !DISubprogram(name: "BKE_mesh_tessface_clear", scope: !3, file: !3, line: 1944, type: !3460, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!8528 = !DILocalVariable(name: "mesh", arg: 1, scope: !8527, file: !3, line: 1944, type: !441)
!8529 = !DILocation(line: 1944, column: 36, scope: !8527)
!8530 = !DILocation(line: 1946, column: 29, scope: !8527)
!8531 = !DILocation(line: 1946, column: 2, scope: !8527)
!8532 = !DILocation(line: 1947, column: 1, scope: !8527)
!8533 = distinct !DISubprogram(name: "BKE_mesh_do_versions_cd_flag_init", scope: !3, file: !3, line: 1949, type: !3460, scopeLine: 1950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!8534 = !DILocalVariable(name: "mesh", arg: 1, scope: !8533, file: !3, line: 1949, type: !441)
!8535 = !DILocation(line: 1949, column: 46, scope: !8533)
!8536 = !DILocation(line: 1951, column: 6, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8533, file: !3, line: 1951, column: 6)
!8538 = !DILocation(line: 1951, column: 6, scope: !8533)
!8539 = !DILocation(line: 1952, column: 3, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 1951, column: 31)
!8541 = !DILocalVariable(name: "mv", scope: !8542, file: !3, line: 1955, type: !2524)
!8542 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 1954, column: 7)
!8543 = !DILocation(line: 1955, column: 10, scope: !8542)
!8544 = !DILocalVariable(name: "med", scope: !8542, file: !3, line: 1956, type: !3035)
!8545 = !DILocation(line: 1956, column: 10, scope: !8542)
!8546 = !DILocalVariable(name: "i", scope: !8542, file: !3, line: 1957, type: !6)
!8547 = !DILocation(line: 1957, column: 7, scope: !8542)
!8548 = !DILocation(line: 1959, column: 13, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 1959, column: 3)
!8550 = !DILocation(line: 1959, column: 19, scope: !8549)
!8551 = !DILocation(line: 1959, column: 11, scope: !8549)
!8552 = !DILocation(line: 1959, column: 28, scope: !8549)
!8553 = !DILocation(line: 1959, column: 8, scope: !8549)
!8554 = !DILocation(line: 1959, column: 33, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8549, file: !3, line: 1959, column: 3)
!8556 = !DILocation(line: 1959, column: 37, scope: !8555)
!8557 = !DILocation(line: 1959, column: 43, scope: !8555)
!8558 = !DILocation(line: 1959, column: 35, scope: !8555)
!8559 = !DILocation(line: 1959, column: 3, scope: !8549)
!8560 = !DILocation(line: 1960, column: 8, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8562, file: !3, line: 1960, column: 8)
!8562 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 1959, column: 63)
!8563 = !DILocation(line: 1960, column: 12, scope: !8561)
!8564 = !DILocation(line: 1960, column: 20, scope: !8561)
!8565 = !DILocation(line: 1960, column: 8, scope: !8562)
!8566 = !DILocation(line: 1961, column: 5, scope: !8567)
!8567 = distinct !DILexicalBlock(scope: !8561, file: !3, line: 1960, column: 26)
!8568 = !DILocation(line: 1961, column: 11, scope: !8567)
!8569 = !DILocation(line: 1961, column: 19, scope: !8567)
!8570 = !DILocation(line: 1962, column: 5, scope: !8567)
!8571 = !DILocation(line: 1964, column: 3, scope: !8562)
!8572 = !DILocation(line: 1959, column: 54, scope: !8555)
!8573 = !DILocation(line: 1959, column: 59, scope: !8555)
!8574 = !DILocation(line: 1959, column: 3, scope: !8555)
!8575 = distinct !{!8575, !8559, !8576}
!8576 = !DILocation(line: 1964, column: 3, scope: !8549)
!8577 = !DILocation(line: 1966, column: 14, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 1966, column: 3)
!8579 = !DILocation(line: 1966, column: 20, scope: !8578)
!8580 = !DILocation(line: 1966, column: 12, scope: !8578)
!8581 = !DILocation(line: 1966, column: 29, scope: !8578)
!8582 = !DILocation(line: 1966, column: 8, scope: !8578)
!8583 = !DILocation(line: 1966, column: 34, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !8578, file: !3, line: 1966, column: 3)
!8585 = !DILocation(line: 1966, column: 38, scope: !8584)
!8586 = !DILocation(line: 1966, column: 44, scope: !8584)
!8587 = !DILocation(line: 1966, column: 36, scope: !8584)
!8588 = !DILocation(line: 1966, column: 3, scope: !8578)
!8589 = !DILocation(line: 1967, column: 8, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8591, file: !3, line: 1967, column: 8)
!8591 = distinct !DILexicalBlock(scope: !8584, file: !3, line: 1966, column: 65)
!8592 = !DILocation(line: 1967, column: 13, scope: !8590)
!8593 = !DILocation(line: 1967, column: 21, scope: !8590)
!8594 = !DILocation(line: 1967, column: 8, scope: !8591)
!8595 = !DILocation(line: 1968, column: 5, scope: !8596)
!8596 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 1967, column: 27)
!8597 = !DILocation(line: 1968, column: 11, scope: !8596)
!8598 = !DILocation(line: 1968, column: 19, scope: !8596)
!8599 = !DILocation(line: 1969, column: 9, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8596, file: !3, line: 1969, column: 9)
!8601 = !DILocation(line: 1969, column: 15, scope: !8600)
!8602 = !DILocation(line: 1969, column: 23, scope: !8600)
!8603 = !DILocation(line: 1969, column: 9, scope: !8596)
!8604 = !DILocation(line: 1970, column: 6, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8600, file: !3, line: 1969, column: 48)
!8606 = !DILocation(line: 1972, column: 4, scope: !8596)
!8607 = !DILocation(line: 1973, column: 8, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8591, file: !3, line: 1973, column: 8)
!8609 = !DILocation(line: 1973, column: 13, scope: !8608)
!8610 = !DILocation(line: 1973, column: 20, scope: !8608)
!8611 = !DILocation(line: 1973, column: 8, scope: !8591)
!8612 = !DILocation(line: 1974, column: 5, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8608, file: !3, line: 1973, column: 26)
!8614 = !DILocation(line: 1974, column: 11, scope: !8613)
!8615 = !DILocation(line: 1974, column: 19, scope: !8613)
!8616 = !DILocation(line: 1975, column: 9, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8613, file: !3, line: 1975, column: 9)
!8618 = !DILocation(line: 1975, column: 15, scope: !8617)
!8619 = !DILocation(line: 1975, column: 23, scope: !8617)
!8620 = !DILocation(line: 1975, column: 9, scope: !8613)
!8621 = !DILocation(line: 1976, column: 6, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 1975, column: 49)
!8623 = !DILocation(line: 1978, column: 4, scope: !8613)
!8624 = !DILocation(line: 1979, column: 3, scope: !8591)
!8625 = !DILocation(line: 1966, column: 56, scope: !8584)
!8626 = !DILocation(line: 1966, column: 61, scope: !8584)
!8627 = !DILocation(line: 1966, column: 3, scope: !8584)
!8628 = distinct !{!8628, !8588, !8629}
!8629 = !DILocation(line: 1979, column: 3, scope: !8578)
!8630 = !DILocation(line: 1982, column: 1, scope: !8533)
!8631 = distinct !DISubprogram(name: "BKE_mesh_mselect_clear", scope: !3, file: !3, line: 1988, type: !3460, scopeLine: 1989, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!8632 = !DILocalVariable(name: "me", arg: 1, scope: !8631, file: !3, line: 1988, type: !441)
!8633 = !DILocation(line: 1988, column: 35, scope: !8631)
!8634 = !DILocation(line: 1990, column: 6, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 1990, column: 6)
!8636 = !DILocation(line: 1990, column: 10, scope: !8635)
!8637 = !DILocation(line: 1990, column: 6, scope: !8631)
!8638 = !DILocation(line: 1991, column: 3, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8635, file: !3, line: 1990, column: 19)
!8640 = !DILocation(line: 1991, column: 13, scope: !8639)
!8641 = !DILocation(line: 1991, column: 17, scope: !8639)
!8642 = !DILocation(line: 1992, column: 3, scope: !8639)
!8643 = !DILocation(line: 1992, column: 7, scope: !8639)
!8644 = !DILocation(line: 1992, column: 15, scope: !8639)
!8645 = !DILocation(line: 1993, column: 2, scope: !8639)
!8646 = !DILocation(line: 1994, column: 2, scope: !8631)
!8647 = !DILocation(line: 1994, column: 6, scope: !8631)
!8648 = !DILocation(line: 1994, column: 16, scope: !8631)
!8649 = !DILocation(line: 1995, column: 1, scope: !8631)
!8650 = distinct !DISubprogram(name: "BKE_mesh_mselect_validate", scope: !3, file: !3, line: 1997, type: !3460, scopeLine: 1998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!8651 = !DILocalVariable(name: "me", arg: 1, scope: !8650, file: !3, line: 1997, type: !441)
!8652 = !DILocation(line: 1997, column: 38, scope: !8650)
!8653 = !DILocalVariable(name: "mselect_src", scope: !8650, file: !3, line: 1999, type: !8654)
!8654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8655, size: 64)
!8655 = !DIDerivedType(tag: DW_TAG_typedef, name: "MSelect", file: !9, line: 157, baseType: !2257)
!8656 = !DILocation(line: 1999, column: 11, scope: !8650)
!8657 = !DILocalVariable(name: "mselect_dst", scope: !8650, file: !3, line: 1999, type: !8654)
!8658 = !DILocation(line: 1999, column: 25, scope: !8650)
!8659 = !DILocalVariable(name: "i_src", scope: !8650, file: !3, line: 2000, type: !6)
!8660 = !DILocation(line: 2000, column: 6, scope: !8650)
!8661 = !DILocalVariable(name: "i_dst", scope: !8650, file: !3, line: 2000, type: !6)
!8662 = !DILocation(line: 2000, column: 13, scope: !8650)
!8663 = !DILocation(line: 2002, column: 6, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8650, file: !3, line: 2002, column: 6)
!8665 = !DILocation(line: 2002, column: 10, scope: !8664)
!8666 = !DILocation(line: 2002, column: 20, scope: !8664)
!8667 = !DILocation(line: 2002, column: 6, scope: !8650)
!8668 = !DILocation(line: 2003, column: 3, scope: !8664)
!8669 = !DILocation(line: 2005, column: 16, scope: !8650)
!8670 = !DILocation(line: 2005, column: 20, scope: !8650)
!8671 = !DILocation(line: 2005, column: 14, scope: !8650)
!8672 = !DILocation(line: 2006, column: 16, scope: !8650)
!8673 = !DILocation(line: 2006, column: 47, scope: !8650)
!8674 = !DILocation(line: 2006, column: 51, scope: !8650)
!8675 = !DILocation(line: 2006, column: 46, scope: !8650)
!8676 = !DILocation(line: 2006, column: 44, scope: !8650)
!8677 = !DILocation(line: 2006, column: 14, scope: !8650)
!8678 = !DILocation(line: 2008, column: 13, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8650, file: !3, line: 2008, column: 2)
!8680 = !DILocation(line: 2008, column: 24, scope: !8679)
!8681 = !DILocation(line: 2008, column: 7, scope: !8679)
!8682 = !DILocation(line: 2008, column: 29, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8679, file: !3, line: 2008, column: 2)
!8684 = !DILocation(line: 2008, column: 37, scope: !8683)
!8685 = !DILocation(line: 2008, column: 41, scope: !8683)
!8686 = !DILocation(line: 2008, column: 35, scope: !8683)
!8687 = !DILocation(line: 2008, column: 2, scope: !8679)
!8688 = !DILocalVariable(name: "index", scope: !8689, file: !3, line: 2009, type: !6)
!8689 = distinct !DILexicalBlock(scope: !8683, file: !3, line: 2008, column: 61)
!8690 = !DILocation(line: 2009, column: 7, scope: !8689)
!8691 = !DILocation(line: 2009, column: 15, scope: !8689)
!8692 = !DILocation(line: 2009, column: 27, scope: !8689)
!8693 = !DILocation(line: 2009, column: 34, scope: !8689)
!8694 = !DILocation(line: 2010, column: 11, scope: !8689)
!8695 = !DILocation(line: 2010, column: 23, scope: !8689)
!8696 = !DILocation(line: 2010, column: 30, scope: !8689)
!8697 = !DILocation(line: 2010, column: 3, scope: !8689)
!8698 = !DILocation(line: 2013, column: 9, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8700, file: !3, line: 2013, column: 9)
!8700 = distinct !DILexicalBlock(scope: !8701, file: !3, line: 2012, column: 4)
!8701 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 2010, column: 36)
!8702 = !DILocation(line: 2013, column: 13, scope: !8699)
!8703 = !DILocation(line: 2013, column: 19, scope: !8699)
!8704 = !DILocation(line: 2013, column: 26, scope: !8699)
!8705 = !DILocation(line: 2013, column: 31, scope: !8699)
!8706 = !DILocation(line: 2013, column: 9, scope: !8700)
!8707 = !DILocation(line: 2014, column: 6, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8699, file: !3, line: 2013, column: 41)
!8709 = !DILocation(line: 2014, column: 18, scope: !8708)
!8710 = !DILocation(line: 2014, column: 27, scope: !8708)
!8711 = !DILocation(line: 2014, column: 39, scope: !8708)
!8712 = !DILocation(line: 2015, column: 11, scope: !8708)
!8713 = !DILocation(line: 2016, column: 5, scope: !8708)
!8714 = !DILocation(line: 2017, column: 5, scope: !8700)
!8715 = !DILocation(line: 2021, column: 9, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8717, file: !3, line: 2021, column: 9)
!8717 = distinct !DILexicalBlock(scope: !8701, file: !3, line: 2020, column: 4)
!8718 = !DILocation(line: 2021, column: 13, scope: !8716)
!8719 = !DILocation(line: 2021, column: 19, scope: !8716)
!8720 = !DILocation(line: 2021, column: 26, scope: !8716)
!8721 = !DILocation(line: 2021, column: 31, scope: !8716)
!8722 = !DILocation(line: 2021, column: 9, scope: !8717)
!8723 = !DILocation(line: 2022, column: 6, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8716, file: !3, line: 2021, column: 41)
!8725 = !DILocation(line: 2022, column: 18, scope: !8724)
!8726 = !DILocation(line: 2022, column: 27, scope: !8724)
!8727 = !DILocation(line: 2022, column: 39, scope: !8724)
!8728 = !DILocation(line: 2023, column: 11, scope: !8724)
!8729 = !DILocation(line: 2024, column: 5, scope: !8724)
!8730 = !DILocation(line: 2025, column: 5, scope: !8717)
!8731 = !DILocation(line: 2029, column: 9, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8733, file: !3, line: 2029, column: 9)
!8733 = distinct !DILexicalBlock(scope: !8701, file: !3, line: 2028, column: 4)
!8734 = !DILocation(line: 2029, column: 13, scope: !8732)
!8735 = !DILocation(line: 2029, column: 19, scope: !8732)
!8736 = !DILocation(line: 2029, column: 26, scope: !8732)
!8737 = !DILocation(line: 2029, column: 31, scope: !8732)
!8738 = !DILocation(line: 2029, column: 9, scope: !8733)
!8739 = !DILocation(line: 2030, column: 6, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 2029, column: 41)
!8741 = !DILocation(line: 2030, column: 18, scope: !8740)
!8742 = !DILocation(line: 2030, column: 27, scope: !8740)
!8743 = !DILocation(line: 2030, column: 39, scope: !8740)
!8744 = !DILocation(line: 2031, column: 11, scope: !8740)
!8745 = !DILocation(line: 2032, column: 5, scope: !8740)
!8746 = !DILocation(line: 2033, column: 5, scope: !8733)
!8747 = !DILocation(line: 2038, column: 5, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8701, file: !3, line: 2036, column: 4)
!8749 = !DILocation(line: 2041, column: 2, scope: !8689)
!8750 = !DILocation(line: 2008, column: 57, scope: !8683)
!8751 = !DILocation(line: 2008, column: 2, scope: !8683)
!8752 = distinct !{!8752, !8687, !8753}
!8753 = !DILocation(line: 2041, column: 2, scope: !8679)
!8754 = !DILocation(line: 2043, column: 2, scope: !8650)
!8755 = !DILocation(line: 2043, column: 12, scope: !8650)
!8756 = !DILocation(line: 2045, column: 6, scope: !8757)
!8757 = distinct !DILexicalBlock(scope: !8650, file: !3, line: 2045, column: 6)
!8758 = !DILocation(line: 2045, column: 12, scope: !8757)
!8759 = !DILocation(line: 2045, column: 6, scope: !8650)
!8760 = !DILocation(line: 2046, column: 3, scope: !8761)
!8761 = distinct !DILexicalBlock(scope: !8757, file: !3, line: 2045, column: 18)
!8762 = !DILocation(line: 2046, column: 13, scope: !8761)
!8763 = !DILocation(line: 2047, column: 15, scope: !8761)
!8764 = !DILocation(line: 2048, column: 2, scope: !8761)
!8765 = !DILocation(line: 2049, column: 11, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8757, file: !3, line: 2049, column: 11)
!8767 = !DILocation(line: 2049, column: 20, scope: !8766)
!8768 = !DILocation(line: 2049, column: 24, scope: !8766)
!8769 = !DILocation(line: 2049, column: 17, scope: !8766)
!8770 = !DILocation(line: 2049, column: 11, scope: !8757)
!8771 = !DILocation(line: 2050, column: 17, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8766, file: !3, line: 2049, column: 35)
!8773 = !DILocation(line: 2050, column: 15, scope: !8772)
!8774 = !DILocation(line: 2051, column: 2, scope: !8772)
!8775 = !DILocation(line: 2053, column: 18, scope: !8650)
!8776 = !DILocation(line: 2053, column: 2, scope: !8650)
!8777 = !DILocation(line: 2053, column: 6, scope: !8650)
!8778 = !DILocation(line: 2053, column: 16, scope: !8650)
!8779 = !DILocation(line: 2054, column: 16, scope: !8650)
!8780 = !DILocation(line: 2054, column: 2, scope: !8650)
!8781 = !DILocation(line: 2054, column: 6, scope: !8650)
!8782 = !DILocation(line: 2054, column: 14, scope: !8650)
!8783 = !DILocation(line: 2056, column: 1, scope: !8650)
!8784 = distinct !DISubprogram(name: "BKE_mesh_mselect_find", scope: !3, file: !3, line: 2061, type: !8785, scopeLine: 2062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!8785 = !DISubroutineType(types: !8786)
!8786 = !{!6, !441, !6, !6}
!8787 = !DILocalVariable(name: "me", arg: 1, scope: !8784, file: !3, line: 2061, type: !441)
!8788 = !DILocation(line: 2061, column: 33, scope: !8784)
!8789 = !DILocalVariable(name: "index", arg: 2, scope: !8784, file: !3, line: 2061, type: !6)
!8790 = !DILocation(line: 2061, column: 41, scope: !8784)
!8791 = !DILocalVariable(name: "type", arg: 3, scope: !8784, file: !3, line: 2061, type: !6)
!8792 = !DILocation(line: 2061, column: 52, scope: !8784)
!8793 = !DILocalVariable(name: "i", scope: !8784, file: !3, line: 2063, type: !6)
!8794 = !DILocation(line: 2063, column: 6, scope: !8784)
!8795 = !DILocation(line: 2067, column: 9, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8784, file: !3, line: 2067, column: 2)
!8797 = !DILocation(line: 2067, column: 7, scope: !8796)
!8798 = !DILocation(line: 2067, column: 14, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8796, file: !3, line: 2067, column: 2)
!8800 = !DILocation(line: 2067, column: 18, scope: !8799)
!8801 = !DILocation(line: 2067, column: 22, scope: !8799)
!8802 = !DILocation(line: 2067, column: 16, scope: !8799)
!8803 = !DILocation(line: 2067, column: 2, scope: !8796)
!8804 = !DILocation(line: 2068, column: 8, scope: !8805)
!8805 = distinct !DILexicalBlock(scope: !8806, file: !3, line: 2068, column: 7)
!8806 = distinct !DILexicalBlock(scope: !8799, file: !3, line: 2067, column: 38)
!8807 = !DILocation(line: 2068, column: 12, scope: !8805)
!8808 = !DILocation(line: 2068, column: 20, scope: !8805)
!8809 = !DILocation(line: 2068, column: 23, scope: !8805)
!8810 = !DILocation(line: 2068, column: 32, scope: !8805)
!8811 = !DILocation(line: 2068, column: 29, scope: !8805)
!8812 = !DILocation(line: 2068, column: 39, scope: !8805)
!8813 = !DILocation(line: 2069, column: 8, scope: !8805)
!8814 = !DILocation(line: 2069, column: 12, scope: !8805)
!8815 = !DILocation(line: 2069, column: 20, scope: !8805)
!8816 = !DILocation(line: 2069, column: 23, scope: !8805)
!8817 = !DILocation(line: 2069, column: 31, scope: !8805)
!8818 = !DILocation(line: 2069, column: 28, scope: !8805)
!8819 = !DILocation(line: 2068, column: 7, scope: !8806)
!8820 = !DILocation(line: 2071, column: 11, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8805, file: !3, line: 2070, column: 3)
!8822 = !DILocation(line: 2071, column: 4, scope: !8821)
!8823 = !DILocation(line: 2073, column: 2, scope: !8806)
!8824 = !DILocation(line: 2067, column: 34, scope: !8799)
!8825 = !DILocation(line: 2067, column: 2, scope: !8799)
!8826 = distinct !{!8826, !8803, !8827}
!8827 = !DILocation(line: 2073, column: 2, scope: !8796)
!8828 = !DILocation(line: 2075, column: 2, scope: !8784)
!8829 = !DILocation(line: 2076, column: 1, scope: !8784)
!8830 = distinct !DISubprogram(name: "BKE_mesh_mselect_active_get", scope: !3, file: !3, line: 2081, type: !8831, scopeLine: 2082, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!8831 = !DISubroutineType(types: !8832)
!8832 = !{!6, !441, !6}
!8833 = !DILocalVariable(name: "me", arg: 1, scope: !8830, file: !3, line: 2081, type: !441)
!8834 = !DILocation(line: 2081, column: 39, scope: !8830)
!8835 = !DILocalVariable(name: "type", arg: 2, scope: !8830, file: !3, line: 2081, type: !6)
!8836 = !DILocation(line: 2081, column: 47, scope: !8830)
!8837 = !DILocation(line: 2085, column: 6, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8830, file: !3, line: 2085, column: 6)
!8839 = !DILocation(line: 2085, column: 10, scope: !8838)
!8840 = !DILocation(line: 2085, column: 6, scope: !8830)
!8841 = !DILocation(line: 2086, column: 7, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 2086, column: 7)
!8843 = distinct !DILexicalBlock(scope: !8838, file: !3, line: 2085, column: 21)
!8844 = !DILocation(line: 2086, column: 11, scope: !8842)
!8845 = !DILocation(line: 2086, column: 19, scope: !8842)
!8846 = !DILocation(line: 2086, column: 23, scope: !8842)
!8847 = !DILocation(line: 2086, column: 33, scope: !8842)
!8848 = !DILocation(line: 2086, column: 38, scope: !8842)
!8849 = !DILocation(line: 2086, column: 46, scope: !8842)
!8850 = !DILocation(line: 2086, column: 43, scope: !8842)
!8851 = !DILocation(line: 2086, column: 7, scope: !8843)
!8852 = !DILocation(line: 2087, column: 11, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8842, file: !3, line: 2086, column: 52)
!8854 = !DILocation(line: 2087, column: 15, scope: !8853)
!8855 = !DILocation(line: 2087, column: 23, scope: !8853)
!8856 = !DILocation(line: 2087, column: 27, scope: !8853)
!8857 = !DILocation(line: 2087, column: 37, scope: !8853)
!8858 = !DILocation(line: 2087, column: 42, scope: !8853)
!8859 = !DILocation(line: 2087, column: 4, scope: !8853)
!8860 = !DILocation(line: 2089, column: 2, scope: !8843)
!8861 = !DILocation(line: 2090, column: 2, scope: !8830)
!8862 = !DILocation(line: 2091, column: 1, scope: !8830)
!8863 = distinct !DISubprogram(name: "BKE_mesh_mselect_active_set", scope: !3, file: !3, line: 2093, type: !8864, scopeLine: 2094, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!8864 = !DISubroutineType(types: !8865)
!8865 = !{null, !441, !6, !6}
!8866 = !DILocalVariable(name: "me", arg: 1, scope: !8863, file: !3, line: 2093, type: !441)
!8867 = !DILocation(line: 2093, column: 40, scope: !8863)
!8868 = !DILocalVariable(name: "index", arg: 2, scope: !8863, file: !3, line: 2093, type: !6)
!8869 = !DILocation(line: 2093, column: 48, scope: !8863)
!8870 = !DILocalVariable(name: "type", arg: 3, scope: !8863, file: !3, line: 2093, type: !6)
!8871 = !DILocation(line: 2093, column: 59, scope: !8863)
!8872 = !DILocalVariable(name: "msel_index", scope: !8863, file: !3, line: 2095, type: !4039)
!8873 = !DILocation(line: 2095, column: 12, scope: !8863)
!8874 = !DILocation(line: 2095, column: 47, scope: !8863)
!8875 = !DILocation(line: 2095, column: 51, scope: !8863)
!8876 = !DILocation(line: 2095, column: 58, scope: !8863)
!8877 = !DILocation(line: 2095, column: 25, scope: !8863)
!8878 = !DILocation(line: 2097, column: 6, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8863, file: !3, line: 2097, column: 6)
!8880 = !DILocation(line: 2097, column: 17, scope: !8879)
!8881 = !DILocation(line: 2097, column: 6, scope: !8863)
!8882 = !DILocation(line: 2099, column: 17, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 2097, column: 24)
!8884 = !DILocation(line: 2099, column: 3, scope: !8883)
!8885 = !DILocation(line: 2099, column: 7, scope: !8883)
!8886 = !DILocation(line: 2099, column: 15, scope: !8883)
!8887 = !DILocation(line: 2100, column: 38, scope: !8883)
!8888 = !DILocation(line: 2100, column: 3, scope: !8883)
!8889 = !DILocation(line: 2100, column: 7, scope: !8883)
!8890 = !DILocation(line: 2100, column: 15, scope: !8883)
!8891 = !DILocation(line: 2100, column: 19, scope: !8883)
!8892 = !DILocation(line: 2100, column: 30, scope: !8883)
!8893 = !DILocation(line: 2100, column: 36, scope: !8883)
!8894 = !DILocation(line: 2101, column: 38, scope: !8883)
!8895 = !DILocation(line: 2101, column: 3, scope: !8883)
!8896 = !DILocation(line: 2101, column: 7, scope: !8883)
!8897 = !DILocation(line: 2101, column: 15, scope: !8883)
!8898 = !DILocation(line: 2101, column: 19, scope: !8883)
!8899 = !DILocation(line: 2101, column: 30, scope: !8883)
!8900 = !DILocation(line: 2101, column: 36, scope: !8883)
!8901 = !DILocation(line: 2102, column: 3, scope: !8883)
!8902 = !DILocation(line: 2102, column: 7, scope: !8883)
!8903 = !DILocation(line: 2102, column: 16, scope: !8883)
!8904 = !DILocation(line: 2103, column: 2, scope: !8883)
!8905 = !DILocation(line: 2104, column: 11, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 2104, column: 11)
!8907 = !DILocation(line: 2104, column: 25, scope: !8906)
!8908 = !DILocation(line: 2104, column: 29, scope: !8906)
!8909 = !DILocation(line: 2104, column: 39, scope: !8906)
!8910 = !DILocation(line: 2104, column: 22, scope: !8906)
!8911 = !DILocation(line: 2104, column: 11, scope: !8879)
!8912 = !DILocalVariable(name: "sw_ap", scope: !8913, file: !3, line: 2106, type: !8655)
!8913 = distinct !DILexicalBlock(scope: !8914, file: !3, line: 2106, column: 3)
!8914 = distinct !DILexicalBlock(scope: !8906, file: !3, line: 2104, column: 44)
!8915 = !DILocation(line: 2106, column: 3, scope: !8913)
!8916 = !DILocation(line: 2107, column: 2, scope: !8914)
!8917 = !DILocation(line: 2111, column: 1, scope: !8863)
!8918 = distinct !DISubprogram(name: "BKE_mesh_new_from_object", scope: !3, file: !3, line: 2114, type: !8919, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!8919 = !DISubroutineType(types: !8920)
!8920 = !{!2306, !3912, !7802, !4322, !6, !6, !6, !6}
!8921 = !DILocalVariable(name: "bmain", arg: 1, scope: !8918, file: !3, line: 2115, type: !3912)
!8922 = !DILocation(line: 2115, column: 15, scope: !8918)
!8923 = !DILocalVariable(name: "sce", arg: 2, scope: !8918, file: !3, line: 2115, type: !7802)
!8924 = !DILocation(line: 2115, column: 29, scope: !8918)
!8925 = !DILocalVariable(name: "ob", arg: 3, scope: !8918, file: !3, line: 2115, type: !4322)
!8926 = !DILocation(line: 2115, column: 42, scope: !8918)
!8927 = !DILocalVariable(name: "apply_modifiers", arg: 4, scope: !8918, file: !3, line: 2116, type: !6)
!8928 = !DILocation(line: 2116, column: 13, scope: !8918)
!8929 = !DILocalVariable(name: "settings", arg: 5, scope: !8918, file: !3, line: 2116, type: !6)
!8930 = !DILocation(line: 2116, column: 34, scope: !8918)
!8931 = !DILocalVariable(name: "calc_tessface", arg: 6, scope: !8918, file: !3, line: 2116, type: !6)
!8932 = !DILocation(line: 2116, column: 48, scope: !8918)
!8933 = !DILocalVariable(name: "calc_undeformed", arg: 7, scope: !8918, file: !3, line: 2116, type: !6)
!8934 = !DILocation(line: 2116, column: 67, scope: !8918)
!8935 = !DILocalVariable(name: "tmpmesh", scope: !8918, file: !3, line: 2118, type: !441)
!8936 = !DILocation(line: 2118, column: 8, scope: !8918)
!8937 = !DILocalVariable(name: "tmpcu", scope: !8918, file: !3, line: 2119, type: !2539)
!8938 = !DILocation(line: 2119, column: 9, scope: !8918)
!8939 = !DILocalVariable(name: "copycu", scope: !8918, file: !3, line: 2119, type: !2539)
!8940 = !DILocation(line: 2119, column: 24, scope: !8918)
!8941 = !DILocalVariable(name: "tmpobj", scope: !8918, file: !3, line: 2120, type: !4322)
!8942 = !DILocation(line: 2120, column: 10, scope: !8918)
!8943 = !DILocalVariable(name: "render", scope: !8918, file: !3, line: 2121, type: !6)
!8944 = !DILocation(line: 2121, column: 6, scope: !8918)
!8945 = !DILocation(line: 2121, column: 15, scope: !8918)
!8946 = !DILocation(line: 2121, column: 24, scope: !8918)
!8947 = !DILocalVariable(name: "i", scope: !8918, file: !3, line: 2121, type: !6)
!8948 = !DILocation(line: 2121, column: 49, scope: !8918)
!8949 = !DILocalVariable(name: "cage", scope: !8918, file: !3, line: 2122, type: !6)
!8950 = !DILocation(line: 2122, column: 6, scope: !8918)
!8951 = !DILocation(line: 2122, column: 14, scope: !8918)
!8952 = !DILocation(line: 2122, column: 13, scope: !8918)
!8953 = !DILocation(line: 2125, column: 10, scope: !8918)
!8954 = !DILocation(line: 2125, column: 14, scope: !8918)
!8955 = !DILocation(line: 2125, column: 2, scope: !8918)
!8956 = !DILocalVariable(name: "dispbase", scope: !8957, file: !3, line: 2130, type: !320)
!8957 = distinct !DILexicalBlock(scope: !8958, file: !3, line: 2129, column: 3)
!8958 = distinct !DILexicalBlock(scope: !8918, file: !3, line: 2125, column: 20)
!8959 = !DILocation(line: 2130, column: 13, scope: !8957)
!8960 = !DILocalVariable(name: "derivedFinal", scope: !8957, file: !3, line: 2131, type: !961)
!8961 = !DILocation(line: 2131, column: 17, scope: !8957)
!8962 = !DILocalVariable(name: "uv_from_orco", scope: !8957, file: !3, line: 2132, type: !6)
!8963 = !DILocation(line: 2132, column: 8, scope: !8957)
!8964 = !DILocation(line: 2135, column: 32, scope: !8957)
!8965 = !DILocation(line: 2135, column: 39, scope: !8957)
!8966 = !DILocation(line: 2135, column: 13, scope: !8957)
!8967 = !DILocation(line: 2135, column: 11, scope: !8957)
!8968 = !DILocation(line: 2136, column: 21, scope: !8957)
!8969 = !DILocation(line: 2136, column: 29, scope: !8957)
!8970 = !DILocation(line: 2136, column: 12, scope: !8957)
!8971 = !DILocation(line: 2136, column: 10, scope: !8957)
!8972 = !DILocation(line: 2137, column: 4, scope: !8957)
!8973 = !DILocation(line: 2137, column: 11, scope: !8957)
!8974 = !DILocation(line: 2137, column: 14, scope: !8957)
!8975 = !DILocation(line: 2137, column: 16, scope: !8957)
!8976 = !DILocation(line: 2140, column: 8, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8957, file: !3, line: 2140, column: 8)
!8978 = !DILocation(line: 2140, column: 8, scope: !8957)
!8979 = !DILocation(line: 2141, column: 31, scope: !8977)
!8980 = !DILocation(line: 2141, column: 5, scope: !8977)
!8981 = !DILocation(line: 2144, column: 53, scope: !8957)
!8982 = !DILocation(line: 2144, column: 57, scope: !8957)
!8983 = !DILocation(line: 2144, column: 43, scope: !8957)
!8984 = !DILocation(line: 2144, column: 28, scope: !8957)
!8985 = !DILocation(line: 2144, column: 13, scope: !8957)
!8986 = !DILocation(line: 2144, column: 21, scope: !8957)
!8987 = !DILocation(line: 2144, column: 26, scope: !8957)
!8988 = !DILocation(line: 2144, column: 11, scope: !8957)
!8989 = !DILocation(line: 2149, column: 23, scope: !8957)
!8990 = !DILocation(line: 2149, column: 30, scope: !8957)
!8991 = !DILocation(line: 2149, column: 4, scope: !8957)
!8992 = !DILocation(line: 2149, column: 12, scope: !8957)
!8993 = !DILocation(line: 2149, column: 21, scope: !8957)
!8994 = !DILocation(line: 2150, column: 23, scope: !8957)
!8995 = !DILocation(line: 2150, column: 30, scope: !8957)
!8996 = !DILocation(line: 2150, column: 4, scope: !8957)
!8997 = !DILocation(line: 2150, column: 12, scope: !8957)
!8998 = !DILocation(line: 2150, column: 21, scope: !8957)
!8999 = !DILocation(line: 2153, column: 43, scope: !8957)
!9000 = !DILocation(line: 2153, column: 48, scope: !8957)
!9001 = !DILocation(line: 2153, column: 89, scope: !8957)
!9002 = !DILocation(line: 2153, column: 4, scope: !8957)
!9003 = !DILocation(line: 2155, column: 4, scope: !8957)
!9004 = !DILocation(line: 2155, column: 12, scope: !8957)
!9005 = !DILocation(line: 2155, column: 21, scope: !8957)
!9006 = !DILocation(line: 2156, column: 4, scope: !8957)
!9007 = !DILocation(line: 2156, column: 12, scope: !8957)
!9008 = !DILocation(line: 2156, column: 21, scope: !8957)
!9009 = !DILocation(line: 2158, column: 27, scope: !8957)
!9010 = !DILocation(line: 2158, column: 4, scope: !8957)
!9011 = !DILocation(line: 2158, column: 12, scope: !8957)
!9012 = !DILocation(line: 2158, column: 25, scope: !8957)
!9013 = !DILocation(line: 2161, column: 20, scope: !8957)
!9014 = !DILocation(line: 2161, column: 27, scope: !8957)
!9015 = !DILocation(line: 2161, column: 32, scope: !8957)
!9016 = !DILocation(line: 2161, column: 46, scope: !8957)
!9017 = !DILocation(line: 2161, column: 17, scope: !8957)
!9018 = !DILocation(line: 2162, column: 33, scope: !8957)
!9019 = !DILocation(line: 2162, column: 52, scope: !8957)
!9020 = !DILocation(line: 2162, column: 4, scope: !8957)
!9021 = !DILocation(line: 2164, column: 14, scope: !8957)
!9022 = !DILocation(line: 2164, column: 22, scope: !8957)
!9023 = !DILocation(line: 2164, column: 12, scope: !8957)
!9024 = !DILocation(line: 2166, column: 4, scope: !8957)
!9025 = !DILocation(line: 2171, column: 8, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !8957, file: !3, line: 2171, column: 8)
!9027 = !DILocation(line: 2171, column: 16, scope: !9026)
!9028 = !DILocation(line: 2171, column: 21, scope: !9026)
!9029 = !DILocation(line: 2171, column: 8, scope: !8957)
!9030 = !DILocation(line: 2172, column: 26, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !9026, file: !3, line: 2171, column: 33)
!9032 = !DILocation(line: 2172, column: 33, scope: !9031)
!9033 = !DILocation(line: 2172, column: 5, scope: !9031)
!9034 = !DILocation(line: 2173, column: 5, scope: !9031)
!9035 = !DILocation(line: 2176, column: 39, scope: !8957)
!9036 = !DILocation(line: 2176, column: 48, scope: !8957)
!9037 = !DILocation(line: 2176, column: 4, scope: !8957)
!9038 = !DILocation(line: 2178, column: 25, scope: !8957)
!9039 = !DILocation(line: 2178, column: 32, scope: !8957)
!9040 = !DILocation(line: 2178, column: 4, scope: !8957)
!9041 = !DILocation(line: 2179, column: 4, scope: !8957)
!9042 = !DILocalVariable(name: "basis_ob", scope: !9043, file: !3, line: 2185, type: !4322)
!9043 = distinct !DILexicalBlock(scope: !8958, file: !3, line: 2183, column: 3)
!9044 = !DILocation(line: 2185, column: 12, scope: !9043)
!9045 = !DILocation(line: 2185, column: 44, scope: !9043)
!9046 = !DILocation(line: 2185, column: 49, scope: !9043)
!9047 = !DILocation(line: 2185, column: 23, scope: !9043)
!9048 = !DILocation(line: 2189, column: 8, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9043, file: !3, line: 2189, column: 8)
!9050 = !DILocation(line: 2189, column: 14, scope: !9049)
!9051 = !DILocation(line: 2189, column: 11, scope: !9049)
!9052 = !DILocation(line: 2189, column: 8, scope: !9043)
!9053 = !DILocation(line: 2190, column: 5, scope: !9049)
!9054 = !DILocation(line: 2192, column: 27, scope: !9043)
!9055 = !DILocation(line: 2192, column: 14, scope: !9043)
!9056 = !DILocation(line: 2192, column: 12, scope: !9043)
!9057 = !DILocation(line: 2194, column: 4, scope: !9043)
!9058 = !DILocation(line: 2194, column: 13, scope: !9043)
!9059 = !DILocation(line: 2194, column: 16, scope: !9043)
!9060 = !DILocation(line: 2194, column: 18, scope: !9043)
!9061 = !DILocation(line: 2196, column: 8, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9043, file: !3, line: 2196, column: 8)
!9063 = !DILocation(line: 2196, column: 8, scope: !9043)
!9064 = !DILocalVariable(name: "disp", scope: !9065, file: !3, line: 2197, type: !320)
!9065 = distinct !DILexicalBlock(scope: !9062, file: !3, line: 2196, column: 16)
!9066 = !DILocation(line: 2197, column: 14, scope: !9065)
!9067 = !DILocalVariable(name: "eval_ctx", scope: !9065, file: !3, line: 2202, type: !9068)
!9068 = !DIDerivedType(tag: DW_TAG_typedef, name: "EvaluationContext", file: !238, line: 60, baseType: !3970)
!9069 = !DILocation(line: 2202, column: 23, scope: !9065)
!9070 = !DILocation(line: 2203, column: 14, scope: !9065)
!9071 = !DILocation(line: 2203, column: 19, scope: !9065)
!9072 = !DILocation(line: 2204, column: 50, scope: !9065)
!9073 = !DILocation(line: 2204, column: 55, scope: !9065)
!9074 = !DILocation(line: 2204, column: 5, scope: !9065)
!9075 = !DILocation(line: 2205, column: 35, scope: !9065)
!9076 = !DILocation(line: 2205, column: 5, scope: !9065)
!9077 = !DILocation(line: 2206, column: 5, scope: !9065)
!9078 = !DILocation(line: 2207, column: 4, scope: !9065)
!9079 = !DILocalVariable(name: "disp", scope: !9080, file: !3, line: 2209, type: !320)
!9080 = distinct !DILexicalBlock(scope: !9062, file: !3, line: 2208, column: 9)
!9081 = !DILocation(line: 2209, column: 14, scope: !9080)
!9082 = !DILocation(line: 2210, column: 9, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9080, file: !3, line: 2210, column: 9)
!9084 = !DILocation(line: 2210, column: 13, scope: !9083)
!9085 = !DILocation(line: 2210, column: 9, scope: !9080)
!9086 = !DILocation(line: 2211, column: 13, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9083, file: !3, line: 2210, column: 26)
!9088 = !DILocation(line: 2211, column: 17, scope: !9087)
!9089 = !DILocation(line: 2211, column: 30, scope: !9087)
!9090 = !DILocation(line: 2212, column: 5, scope: !9087)
!9091 = !DILocation(line: 2213, column: 35, scope: !9080)
!9092 = !DILocation(line: 2213, column: 5, scope: !9080)
!9093 = !DILocation(line: 2216, column: 39, scope: !9043)
!9094 = !DILocation(line: 2216, column: 48, scope: !9043)
!9095 = !DILocation(line: 2216, column: 4, scope: !9043)
!9096 = !DILocation(line: 2218, column: 4, scope: !9043)
!9097 = !DILocation(line: 2223, column: 8, scope: !9098)
!9098 = distinct !DILexicalBlock(scope: !8958, file: !3, line: 2223, column: 8)
!9099 = !DILocation(line: 2223, column: 8, scope: !8958)
!9100 = !DILocation(line: 2225, column: 32, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9098, file: !3, line: 2223, column: 14)
!9102 = !DILocation(line: 2225, column: 39, scope: !9101)
!9103 = !DILocation(line: 2225, column: 43, scope: !9101)
!9104 = !DILocation(line: 2225, column: 15, scope: !9101)
!9105 = !DILocation(line: 2225, column: 13, scope: !9101)
!9106 = !DILocation(line: 2227, column: 4, scope: !9101)
!9107 = !DILocalVariable(name: "dm", scope: !9108, file: !3, line: 2230, type: !961)
!9108 = distinct !DILexicalBlock(scope: !9098, file: !3, line: 2228, column: 9)
!9109 = !DILocation(line: 2230, column: 18, scope: !9108)
!9110 = !DILocalVariable(name: "mask", scope: !9108, file: !3, line: 2232, type: !2480)
!9111 = !DILocation(line: 2232, column: 20, scope: !9108)
!9112 = !DILocation(line: 2232, column: 27, scope: !9108)
!9113 = !DILocation(line: 2235, column: 9, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9108, file: !3, line: 2235, column: 9)
!9115 = !DILocation(line: 2235, column: 9, scope: !9108)
!9116 = !DILocation(line: 2236, column: 11, scope: !9114)
!9117 = !DILocation(line: 2236, column: 6, scope: !9114)
!9118 = !DILocation(line: 2239, column: 9, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9108, file: !3, line: 2239, column: 9)
!9120 = !DILocation(line: 2239, column: 9, scope: !9108)
!9121 = !DILocation(line: 2240, column: 38, scope: !9119)
!9122 = !DILocation(line: 2240, column: 43, scope: !9119)
!9123 = !DILocation(line: 2240, column: 47, scope: !9119)
!9124 = !DILocation(line: 2240, column: 11, scope: !9119)
!9125 = !DILocation(line: 2240, column: 9, scope: !9119)
!9126 = !DILocation(line: 2240, column: 6, scope: !9119)
!9127 = !DILocation(line: 2242, column: 36, scope: !9119)
!9128 = !DILocation(line: 2242, column: 41, scope: !9119)
!9129 = !DILocation(line: 2242, column: 45, scope: !9119)
!9130 = !DILocation(line: 2242, column: 11, scope: !9119)
!9131 = !DILocation(line: 2242, column: 9, scope: !9119)
!9132 = !DILocation(line: 2244, column: 28, scope: !9108)
!9133 = !DILocation(line: 2244, column: 15, scope: !9108)
!9134 = !DILocation(line: 2244, column: 13, scope: !9108)
!9135 = !DILocation(line: 2245, column: 16, scope: !9108)
!9136 = !DILocation(line: 2245, column: 20, scope: !9108)
!9137 = !DILocation(line: 2245, column: 29, scope: !9108)
!9138 = !DILocation(line: 2245, column: 33, scope: !9108)
!9139 = !DILocation(line: 2245, column: 5, scope: !9108)
!9140 = !DILocation(line: 2246, column: 5, scope: !9108)
!9141 = !DILocation(line: 2246, column: 9, scope: !9108)
!9142 = !DILocation(line: 2246, column: 17, scope: !9108)
!9143 = !DILocation(line: 2250, column: 4, scope: !8958)
!9144 = !DILocation(line: 2250, column: 13, scope: !8958)
!9145 = !DILocation(line: 2250, column: 16, scope: !8958)
!9146 = !DILocation(line: 2250, column: 18, scope: !8958)
!9147 = !DILocation(line: 2252, column: 4, scope: !8958)
!9148 = !DILocation(line: 2255, column: 4, scope: !8958)
!9149 = !DILocation(line: 2259, column: 10, scope: !8918)
!9150 = !DILocation(line: 2259, column: 14, scope: !8918)
!9151 = !DILocation(line: 2259, column: 2, scope: !8918)
!9152 = !DILocation(line: 2263, column: 22, scope: !9153)
!9153 = distinct !DILexicalBlock(scope: !8918, file: !3, line: 2259, column: 20)
!9154 = !DILocation(line: 2263, column: 29, scope: !9153)
!9155 = !DILocation(line: 2263, column: 4, scope: !9153)
!9156 = !DILocation(line: 2263, column: 13, scope: !9153)
!9157 = !DILocation(line: 2263, column: 20, scope: !9153)
!9158 = !DILocation(line: 2266, column: 8, scope: !9159)
!9159 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 2266, column: 8)
!9160 = !DILocation(line: 2266, column: 15, scope: !9159)
!9161 = !DILocation(line: 2266, column: 8, scope: !9153)
!9162 = !DILocation(line: 2267, column: 14, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 2267, column: 5)
!9164 = distinct !DILexicalBlock(scope: !9159, file: !3, line: 2266, column: 20)
!9165 = !DILocation(line: 2267, column: 21, scope: !9163)
!9166 = !DILocation(line: 2267, column: 12, scope: !9163)
!9167 = !DILocation(line: 2267, column: 10, scope: !9163)
!9168 = !DILocation(line: 2267, column: 30, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9163, file: !3, line: 2267, column: 5)
!9170 = !DILocation(line: 2267, column: 33, scope: !9169)
!9171 = !DILocation(line: 2267, column: 5, scope: !9163)
!9172 = !DILocation(line: 2270, column: 24, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 2267, column: 40)
!9174 = !DILocation(line: 2270, column: 28, scope: !9173)
!9175 = !DILocation(line: 2270, column: 36, scope: !9173)
!9176 = !DILocation(line: 2270, column: 41, scope: !9173)
!9177 = !DILocation(line: 2270, column: 45, scope: !9173)
!9178 = !DILocation(line: 2270, column: 49, scope: !9173)
!9179 = !DILocation(line: 2270, column: 54, scope: !9173)
!9180 = !DILocation(line: 2270, column: 61, scope: !9173)
!9181 = !DILocation(line: 2270, column: 65, scope: !9173)
!9182 = !DILocation(line: 2270, column: 6, scope: !9173)
!9183 = !DILocation(line: 2270, column: 15, scope: !9173)
!9184 = !DILocation(line: 2270, column: 19, scope: !9173)
!9185 = !DILocation(line: 2270, column: 22, scope: !9173)
!9186 = !DILocation(line: 2272, column: 10, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9173, file: !3, line: 2272, column: 10)
!9188 = !DILocation(line: 2272, column: 19, scope: !9187)
!9189 = !DILocation(line: 2272, column: 23, scope: !9187)
!9190 = !DILocation(line: 2272, column: 10, scope: !9173)
!9191 = !DILocation(line: 2273, column: 7, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9187, file: !3, line: 2272, column: 27)
!9193 = !DILocation(line: 2273, column: 16, scope: !9192)
!9194 = !DILocation(line: 2273, column: 20, scope: !9192)
!9195 = !DILocation(line: 2273, column: 24, scope: !9192)
!9196 = !DILocation(line: 2273, column: 27, scope: !9192)
!9197 = !DILocation(line: 2273, column: 29, scope: !9192)
!9198 = !DILocation(line: 2274, column: 6, scope: !9192)
!9199 = !DILocation(line: 2267, column: 5, scope: !9169)
!9200 = distinct !{!9200, !9171, !9201}
!9201 = !DILocation(line: 2275, column: 5, scope: !9163)
!9202 = !DILocation(line: 2276, column: 4, scope: !9164)
!9203 = !DILocation(line: 2277, column: 4, scope: !9153)
!9204 = !DILocation(line: 2298, column: 9, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 2298, column: 8)
!9206 = !DILocation(line: 2298, column: 8, scope: !9153)
!9207 = !DILocalVariable(name: "origmesh", scope: !9208, file: !3, line: 2299, type: !441)
!9208 = distinct !DILexicalBlock(scope: !9205, file: !3, line: 2298, column: 15)
!9209 = !DILocation(line: 2299, column: 11, scope: !9208)
!9210 = !DILocation(line: 2299, column: 22, scope: !9208)
!9211 = !DILocation(line: 2299, column: 26, scope: !9208)
!9212 = !DILocation(line: 2300, column: 21, scope: !9208)
!9213 = !DILocation(line: 2300, column: 31, scope: !9208)
!9214 = !DILocation(line: 2300, column: 5, scope: !9208)
!9215 = !DILocation(line: 2300, column: 14, scope: !9208)
!9216 = !DILocation(line: 2300, column: 19, scope: !9208)
!9217 = !DILocation(line: 2301, column: 20, scope: !9208)
!9218 = !DILocation(line: 2301, column: 34, scope: !9208)
!9219 = !DILocation(line: 2301, column: 44, scope: !9208)
!9220 = !DILocation(line: 2301, column: 5, scope: !9208)
!9221 = !DILocation(line: 2301, column: 14, scope: !9208)
!9222 = !DILocation(line: 2301, column: 18, scope: !9208)
!9223 = !DILocation(line: 2302, column: 23, scope: !9208)
!9224 = !DILocation(line: 2302, column: 33, scope: !9208)
!9225 = !DILocation(line: 2302, column: 5, scope: !9208)
!9226 = !DILocation(line: 2302, column: 14, scope: !9208)
!9227 = !DILocation(line: 2302, column: 21, scope: !9208)
!9228 = !DILocation(line: 2303, column: 27, scope: !9208)
!9229 = !DILocation(line: 2303, column: 37, scope: !9208)
!9230 = !DILocation(line: 2303, column: 5, scope: !9208)
!9231 = !DILocation(line: 2303, column: 14, scope: !9208)
!9232 = !DILocation(line: 2303, column: 25, scope: !9208)
!9233 = !DILocation(line: 2304, column: 9, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9208, file: !3, line: 2304, column: 9)
!9235 = !DILocation(line: 2304, column: 19, scope: !9234)
!9236 = !DILocation(line: 2304, column: 9, scope: !9208)
!9237 = !DILocation(line: 2305, column: 15, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9239, file: !3, line: 2305, column: 6)
!9239 = distinct !DILexicalBlock(scope: !9234, file: !3, line: 2304, column: 24)
!9240 = !DILocation(line: 2305, column: 25, scope: !9238)
!9241 = !DILocation(line: 2305, column: 13, scope: !9238)
!9242 = !DILocation(line: 2305, column: 11, scope: !9238)
!9243 = !DILocation(line: 2305, column: 34, scope: !9244)
!9244 = distinct !DILexicalBlock(scope: !9238, file: !3, line: 2305, column: 6)
!9245 = !DILocation(line: 2305, column: 37, scope: !9244)
!9246 = !DILocation(line: 2305, column: 6, scope: !9238)
!9247 = !DILocation(line: 2307, column: 25, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9244, file: !3, line: 2305, column: 44)
!9249 = !DILocation(line: 2307, column: 29, scope: !9248)
!9250 = !DILocation(line: 2307, column: 37, scope: !9248)
!9251 = !DILocation(line: 2307, column: 42, scope: !9248)
!9252 = !DILocation(line: 2307, column: 46, scope: !9248)
!9253 = !DILocation(line: 2307, column: 50, scope: !9248)
!9254 = !DILocation(line: 2307, column: 55, scope: !9248)
!9255 = !DILocation(line: 2307, column: 65, scope: !9248)
!9256 = !DILocation(line: 2307, column: 69, scope: !9248)
!9257 = !DILocation(line: 2307, column: 7, scope: !9248)
!9258 = !DILocation(line: 2307, column: 16, scope: !9248)
!9259 = !DILocation(line: 2307, column: 20, scope: !9248)
!9260 = !DILocation(line: 2307, column: 23, scope: !9248)
!9261 = !DILocation(line: 2309, column: 11, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9248, file: !3, line: 2309, column: 11)
!9263 = !DILocation(line: 2309, column: 20, scope: !9262)
!9264 = !DILocation(line: 2309, column: 24, scope: !9262)
!9265 = !DILocation(line: 2309, column: 11, scope: !9248)
!9266 = !DILocation(line: 2310, column: 8, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !9262, file: !3, line: 2309, column: 28)
!9268 = !DILocation(line: 2310, column: 17, scope: !9267)
!9269 = !DILocation(line: 2310, column: 21, scope: !9267)
!9270 = !DILocation(line: 2310, column: 25, scope: !9267)
!9271 = !DILocation(line: 2310, column: 28, scope: !9267)
!9272 = !DILocation(line: 2310, column: 30, scope: !9267)
!9273 = !DILocation(line: 2311, column: 7, scope: !9267)
!9274 = !DILocation(line: 2305, column: 6, scope: !9244)
!9275 = distinct !{!9275, !9246, !9276}
!9276 = !DILocation(line: 2312, column: 6, scope: !9238)
!9277 = !DILocation(line: 2313, column: 5, scope: !9239)
!9278 = !DILocation(line: 2314, column: 4, scope: !9208)
!9279 = !DILocation(line: 2315, column: 4, scope: !9153)
!9280 = !DILocation(line: 2318, column: 6, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !8918, file: !3, line: 2318, column: 6)
!9282 = !DILocation(line: 2318, column: 6, scope: !8918)
!9283 = !DILocation(line: 2320, column: 28, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9281, file: !3, line: 2318, column: 21)
!9285 = !DILocation(line: 2320, column: 3, scope: !9284)
!9286 = !DILocation(line: 2321, column: 2, scope: !9284)
!9287 = !DILocation(line: 2324, column: 24, scope: !8918)
!9288 = !DILocation(line: 2324, column: 32, scope: !8918)
!9289 = !DILocation(line: 2324, column: 41, scope: !8918)
!9290 = !DILocation(line: 2324, column: 2, scope: !8918)
!9291 = !DILocation(line: 2326, column: 9, scope: !8918)
!9292 = !DILocation(line: 2326, column: 2, scope: !8918)
!9293 = !DILocation(line: 2327, column: 1, scope: !8918)
!9294 = distinct !DISubprogram(name: "len_squared_v3v3", scope: !5218, file: !5218, line: 727, type: !9295, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!9295 = !DISubroutineType(types: !9296)
!9296 = !{!336, !1146, !1146}
!9297 = !DILocalVariable(name: "a", arg: 1, scope: !9294, file: !5218, line: 727, type: !1146)
!9298 = !DILocation(line: 727, column: 44, scope: !9294)
!9299 = !DILocalVariable(name: "b", arg: 2, scope: !9294, file: !5218, line: 727, type: !1146)
!9300 = !DILocation(line: 727, column: 62, scope: !9294)
!9301 = !DILocalVariable(name: "d", scope: !9294, file: !5218, line: 729, type: !565)
!9302 = !DILocation(line: 729, column: 8, scope: !9294)
!9303 = !DILocation(line: 731, column: 14, scope: !9294)
!9304 = !DILocation(line: 731, column: 17, scope: !9294)
!9305 = !DILocation(line: 731, column: 20, scope: !9294)
!9306 = !DILocation(line: 731, column: 2, scope: !9294)
!9307 = !DILocation(line: 732, column: 18, scope: !9294)
!9308 = !DILocation(line: 732, column: 21, scope: !9294)
!9309 = !DILocation(line: 732, column: 9, scope: !9294)
!9310 = !DILocation(line: 732, column: 2, scope: !9294)
!9311 = distinct !DISubprogram(name: "len_squared_v2v2", scope: !5218, file: !5218, line: 719, type: !9295, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!9312 = !DILocalVariable(name: "a", arg: 1, scope: !9311, file: !5218, line: 719, type: !1146)
!9313 = !DILocation(line: 719, column: 44, scope: !9311)
!9314 = !DILocalVariable(name: "b", arg: 2, scope: !9311, file: !5218, line: 719, type: !1146)
!9315 = !DILocation(line: 719, column: 62, scope: !9311)
!9316 = !DILocalVariable(name: "d", scope: !9311, file: !5218, line: 721, type: !1294)
!9317 = !DILocation(line: 721, column: 8, scope: !9311)
!9318 = !DILocation(line: 723, column: 14, scope: !9311)
!9319 = !DILocation(line: 723, column: 17, scope: !9311)
!9320 = !DILocation(line: 723, column: 20, scope: !9311)
!9321 = !DILocation(line: 723, column: 2, scope: !9311)
!9322 = !DILocation(line: 724, column: 18, scope: !9311)
!9323 = !DILocation(line: 724, column: 21, scope: !9311)
!9324 = !DILocation(line: 724, column: 9, scope: !9311)
!9325 = !DILocation(line: 724, column: 2, scope: !9311)
!9326 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !5218, file: !5218, line: 357, type: !9327, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!9327 = !DISubroutineType(types: !9328)
!9328 = !{null, !1172, !1146, !1146}
!9329 = !DILocalVariable(name: "r", arg: 1, scope: !9326, file: !5218, line: 357, type: !1172)
!9330 = !DILocation(line: 357, column: 32, scope: !9326)
!9331 = !DILocalVariable(name: "a", arg: 2, scope: !9326, file: !5218, line: 357, type: !1146)
!9332 = !DILocation(line: 357, column: 50, scope: !9326)
!9333 = !DILocalVariable(name: "b", arg: 3, scope: !9326, file: !5218, line: 357, type: !1146)
!9334 = !DILocation(line: 357, column: 68, scope: !9326)
!9335 = !DILocation(line: 359, column: 9, scope: !9326)
!9336 = !DILocation(line: 359, column: 16, scope: !9326)
!9337 = !DILocation(line: 359, column: 14, scope: !9326)
!9338 = !DILocation(line: 359, column: 2, scope: !9326)
!9339 = !DILocation(line: 359, column: 7, scope: !9326)
!9340 = !DILocation(line: 360, column: 9, scope: !9326)
!9341 = !DILocation(line: 360, column: 16, scope: !9326)
!9342 = !DILocation(line: 360, column: 14, scope: !9326)
!9343 = !DILocation(line: 360, column: 2, scope: !9326)
!9344 = !DILocation(line: 360, column: 7, scope: !9326)
!9345 = !DILocation(line: 361, column: 9, scope: !9326)
!9346 = !DILocation(line: 361, column: 16, scope: !9326)
!9347 = !DILocation(line: 361, column: 14, scope: !9326)
!9348 = !DILocation(line: 361, column: 2, scope: !9326)
!9349 = !DILocation(line: 361, column: 7, scope: !9326)
!9350 = !DILocation(line: 362, column: 1, scope: !9326)
!9351 = distinct !DISubprogram(name: "dot_v3v3", scope: !5218, file: !5218, line: 619, type: !9295, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!9352 = !DILocalVariable(name: "a", arg: 1, scope: !9351, file: !5218, line: 619, type: !1146)
!9353 = !DILocation(line: 619, column: 36, scope: !9351)
!9354 = !DILocalVariable(name: "b", arg: 2, scope: !9351, file: !5218, line: 619, type: !1146)
!9355 = !DILocation(line: 619, column: 54, scope: !9351)
!9356 = !DILocation(line: 621, column: 9, scope: !9351)
!9357 = !DILocation(line: 621, column: 16, scope: !9351)
!9358 = !DILocation(line: 621, column: 14, scope: !9351)
!9359 = !DILocation(line: 621, column: 23, scope: !9351)
!9360 = !DILocation(line: 621, column: 30, scope: !9351)
!9361 = !DILocation(line: 621, column: 28, scope: !9351)
!9362 = !DILocation(line: 621, column: 21, scope: !9351)
!9363 = !DILocation(line: 621, column: 37, scope: !9351)
!9364 = !DILocation(line: 621, column: 44, scope: !9351)
!9365 = !DILocation(line: 621, column: 42, scope: !9351)
!9366 = !DILocation(line: 621, column: 35, scope: !9351)
!9367 = !DILocation(line: 621, column: 2, scope: !9351)
!9368 = distinct !DISubprogram(name: "sub_v2_v2v2", scope: !5218, file: !5218, line: 338, type: !9327, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!9369 = !DILocalVariable(name: "r", arg: 1, scope: !9368, file: !5218, line: 338, type: !1172)
!9370 = !DILocation(line: 338, column: 32, scope: !9368)
!9371 = !DILocalVariable(name: "a", arg: 2, scope: !9368, file: !5218, line: 338, type: !1146)
!9372 = !DILocation(line: 338, column: 50, scope: !9368)
!9373 = !DILocalVariable(name: "b", arg: 3, scope: !9368, file: !5218, line: 338, type: !1146)
!9374 = !DILocation(line: 338, column: 68, scope: !9368)
!9375 = !DILocation(line: 340, column: 9, scope: !9368)
!9376 = !DILocation(line: 340, column: 16, scope: !9368)
!9377 = !DILocation(line: 340, column: 14, scope: !9368)
!9378 = !DILocation(line: 340, column: 2, scope: !9368)
!9379 = !DILocation(line: 340, column: 7, scope: !9368)
!9380 = !DILocation(line: 341, column: 9, scope: !9368)
!9381 = !DILocation(line: 341, column: 16, scope: !9368)
!9382 = !DILocation(line: 341, column: 14, scope: !9368)
!9383 = !DILocation(line: 341, column: 2, scope: !9368)
!9384 = !DILocation(line: 341, column: 7, scope: !9368)
!9385 = !DILocation(line: 342, column: 1, scope: !9368)
!9386 = distinct !DISubprogram(name: "dot_v2v2", scope: !5218, file: !5218, line: 614, type: !9295, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!9387 = !DILocalVariable(name: "a", arg: 1, scope: !9386, file: !5218, line: 614, type: !1146)
!9388 = !DILocation(line: 614, column: 36, scope: !9386)
!9389 = !DILocalVariable(name: "b", arg: 2, scope: !9386, file: !5218, line: 614, type: !1146)
!9390 = !DILocation(line: 614, column: 54, scope: !9386)
!9391 = !DILocation(line: 616, column: 9, scope: !9386)
!9392 = !DILocation(line: 616, column: 16, scope: !9386)
!9393 = !DILocation(line: 616, column: 14, scope: !9386)
!9394 = !DILocation(line: 616, column: 23, scope: !9386)
!9395 = !DILocation(line: 616, column: 30, scope: !9386)
!9396 = !DILocation(line: 616, column: 28, scope: !9386)
!9397 = !DILocation(line: 616, column: 21, scope: !9386)
!9398 = !DILocation(line: 616, column: 2, scope: !9386)
!9399 = distinct !DISubprogram(name: "BM_iter_init", scope: !3628, file: !3628, line: 53, type: !9400, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!9400 = !DISubroutineType(types: !9401)
!9401 = !{!1203, !3631, !2450, !2416, !45}
!9402 = !DILocalVariable(name: "iter", arg: 1, scope: !9399, file: !3628, line: 53, type: !3631)
!9403 = !DILocation(line: 53, column: 38, scope: !9399)
!9404 = !DILocalVariable(name: "bm", arg: 2, scope: !9399, file: !3628, line: 53, type: !2450)
!9405 = !DILocation(line: 53, column: 51, scope: !9399)
!9406 = !DILocalVariable(name: "itype", arg: 3, scope: !9399, file: !3628, line: 53, type: !2416)
!9407 = !DILocation(line: 53, column: 66, scope: !9399)
!9408 = !DILocalVariable(name: "data", arg: 4, scope: !9399, file: !3628, line: 53, type: !45)
!9409 = !DILocation(line: 53, column: 79, scope: !9399)
!9410 = !DILocation(line: 56, column: 16, scope: !9399)
!9411 = !DILocation(line: 56, column: 2, scope: !9399)
!9412 = !DILocation(line: 56, column: 8, scope: !9399)
!9413 = !DILocation(line: 56, column: 14, scope: !9399)
!9414 = !DILocation(line: 59, column: 22, scope: !9399)
!9415 = !DILocation(line: 59, column: 10, scope: !9399)
!9416 = !DILocation(line: 59, column: 2, scope: !9399)
!9417 = !DILocation(line: 63, column: 4, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9399, file: !3628, line: 59, column: 29)
!9419 = !DILocation(line: 63, column: 10, scope: !9418)
!9420 = !DILocation(line: 63, column: 16, scope: !9418)
!9421 = !DILocation(line: 64, column: 4, scope: !9418)
!9422 = !DILocation(line: 64, column: 10, scope: !9418)
!9423 = !DILocation(line: 64, column: 16, scope: !9418)
!9424 = !DILocation(line: 65, column: 44, scope: !9418)
!9425 = !DILocation(line: 65, column: 48, scope: !9418)
!9426 = !DILocation(line: 65, column: 4, scope: !9418)
!9427 = !DILocation(line: 65, column: 10, scope: !9418)
!9428 = !DILocation(line: 65, column: 15, scope: !9418)
!9429 = !DILocation(line: 65, column: 28, scope: !9418)
!9430 = !DILocation(line: 65, column: 37, scope: !9418)
!9431 = !DILocation(line: 65, column: 42, scope: !9418)
!9432 = !DILocation(line: 66, column: 4, scope: !9418)
!9433 = !DILocation(line: 70, column: 4, scope: !9418)
!9434 = !DILocation(line: 70, column: 10, scope: !9418)
!9435 = !DILocation(line: 70, column: 16, scope: !9418)
!9436 = !DILocation(line: 71, column: 4, scope: !9418)
!9437 = !DILocation(line: 71, column: 10, scope: !9418)
!9438 = !DILocation(line: 71, column: 16, scope: !9418)
!9439 = !DILocation(line: 72, column: 44, scope: !9418)
!9440 = !DILocation(line: 72, column: 48, scope: !9418)
!9441 = !DILocation(line: 72, column: 4, scope: !9418)
!9442 = !DILocation(line: 72, column: 10, scope: !9418)
!9443 = !DILocation(line: 72, column: 15, scope: !9418)
!9444 = !DILocation(line: 72, column: 28, scope: !9418)
!9445 = !DILocation(line: 72, column: 37, scope: !9418)
!9446 = !DILocation(line: 72, column: 42, scope: !9418)
!9447 = !DILocation(line: 73, column: 4, scope: !9418)
!9448 = !DILocation(line: 77, column: 4, scope: !9418)
!9449 = !DILocation(line: 77, column: 10, scope: !9418)
!9450 = !DILocation(line: 77, column: 16, scope: !9418)
!9451 = !DILocation(line: 78, column: 4, scope: !9418)
!9452 = !DILocation(line: 78, column: 10, scope: !9418)
!9453 = !DILocation(line: 78, column: 16, scope: !9418)
!9454 = !DILocation(line: 79, column: 44, scope: !9418)
!9455 = !DILocation(line: 79, column: 48, scope: !9418)
!9456 = !DILocation(line: 79, column: 4, scope: !9418)
!9457 = !DILocation(line: 79, column: 10, scope: !9418)
!9458 = !DILocation(line: 79, column: 15, scope: !9418)
!9459 = !DILocation(line: 79, column: 28, scope: !9418)
!9460 = !DILocation(line: 79, column: 37, scope: !9418)
!9461 = !DILocation(line: 79, column: 42, scope: !9418)
!9462 = !DILocation(line: 80, column: 4, scope: !9418)
!9463 = !DILocation(line: 84, column: 4, scope: !9418)
!9464 = !DILocation(line: 84, column: 10, scope: !9418)
!9465 = !DILocation(line: 84, column: 16, scope: !9418)
!9466 = !DILocation(line: 85, column: 4, scope: !9418)
!9467 = !DILocation(line: 85, column: 10, scope: !9418)
!9468 = !DILocation(line: 85, column: 16, scope: !9418)
!9469 = !DILocation(line: 86, column: 46, scope: !9418)
!9470 = !DILocation(line: 86, column: 36, scope: !9418)
!9471 = !DILocation(line: 86, column: 4, scope: !9418)
!9472 = !DILocation(line: 86, column: 10, scope: !9418)
!9473 = !DILocation(line: 86, column: 15, scope: !9418)
!9474 = !DILocation(line: 86, column: 28, scope: !9418)
!9475 = !DILocation(line: 86, column: 34, scope: !9418)
!9476 = !DILocation(line: 87, column: 4, scope: !9418)
!9477 = !DILocation(line: 91, column: 4, scope: !9418)
!9478 = !DILocation(line: 91, column: 10, scope: !9418)
!9479 = !DILocation(line: 91, column: 16, scope: !9418)
!9480 = !DILocation(line: 92, column: 4, scope: !9418)
!9481 = !DILocation(line: 92, column: 10, scope: !9418)
!9482 = !DILocation(line: 92, column: 16, scope: !9418)
!9483 = !DILocation(line: 93, column: 46, scope: !9418)
!9484 = !DILocation(line: 93, column: 36, scope: !9418)
!9485 = !DILocation(line: 93, column: 4, scope: !9418)
!9486 = !DILocation(line: 93, column: 10, scope: !9418)
!9487 = !DILocation(line: 93, column: 15, scope: !9418)
!9488 = !DILocation(line: 93, column: 28, scope: !9418)
!9489 = !DILocation(line: 93, column: 34, scope: !9418)
!9490 = !DILocation(line: 94, column: 4, scope: !9418)
!9491 = !DILocation(line: 98, column: 4, scope: !9418)
!9492 = !DILocation(line: 98, column: 10, scope: !9418)
!9493 = !DILocation(line: 98, column: 16, scope: !9418)
!9494 = !DILocation(line: 99, column: 4, scope: !9418)
!9495 = !DILocation(line: 99, column: 10, scope: !9418)
!9496 = !DILocation(line: 99, column: 16, scope: !9418)
!9497 = !DILocation(line: 100, column: 46, scope: !9418)
!9498 = !DILocation(line: 100, column: 36, scope: !9418)
!9499 = !DILocation(line: 100, column: 4, scope: !9418)
!9500 = !DILocation(line: 100, column: 10, scope: !9418)
!9501 = !DILocation(line: 100, column: 15, scope: !9418)
!9502 = !DILocation(line: 100, column: 28, scope: !9418)
!9503 = !DILocation(line: 100, column: 34, scope: !9418)
!9504 = !DILocation(line: 101, column: 4, scope: !9418)
!9505 = !DILocation(line: 105, column: 4, scope: !9418)
!9506 = !DILocation(line: 105, column: 10, scope: !9418)
!9507 = !DILocation(line: 105, column: 16, scope: !9418)
!9508 = !DILocation(line: 106, column: 4, scope: !9418)
!9509 = !DILocation(line: 106, column: 10, scope: !9418)
!9510 = !DILocation(line: 106, column: 16, scope: !9418)
!9511 = !DILocation(line: 107, column: 46, scope: !9418)
!9512 = !DILocation(line: 107, column: 36, scope: !9418)
!9513 = !DILocation(line: 107, column: 4, scope: !9418)
!9514 = !DILocation(line: 107, column: 10, scope: !9418)
!9515 = !DILocation(line: 107, column: 15, scope: !9418)
!9516 = !DILocation(line: 107, column: 28, scope: !9418)
!9517 = !DILocation(line: 107, column: 34, scope: !9418)
!9518 = !DILocation(line: 108, column: 4, scope: !9418)
!9519 = !DILocation(line: 112, column: 4, scope: !9418)
!9520 = !DILocation(line: 112, column: 10, scope: !9418)
!9521 = !DILocation(line: 112, column: 16, scope: !9418)
!9522 = !DILocation(line: 113, column: 4, scope: !9418)
!9523 = !DILocation(line: 113, column: 10, scope: !9418)
!9524 = !DILocation(line: 113, column: 16, scope: !9418)
!9525 = !DILocation(line: 114, column: 46, scope: !9418)
!9526 = !DILocation(line: 114, column: 36, scope: !9418)
!9527 = !DILocation(line: 114, column: 4, scope: !9418)
!9528 = !DILocation(line: 114, column: 10, scope: !9418)
!9529 = !DILocation(line: 114, column: 15, scope: !9418)
!9530 = !DILocation(line: 114, column: 28, scope: !9418)
!9531 = !DILocation(line: 114, column: 34, scope: !9418)
!9532 = !DILocation(line: 115, column: 4, scope: !9418)
!9533 = !DILocation(line: 119, column: 4, scope: !9418)
!9534 = !DILocation(line: 119, column: 10, scope: !9418)
!9535 = !DILocation(line: 119, column: 16, scope: !9418)
!9536 = !DILocation(line: 120, column: 4, scope: !9418)
!9537 = !DILocation(line: 120, column: 10, scope: !9418)
!9538 = !DILocation(line: 120, column: 16, scope: !9418)
!9539 = !DILocation(line: 121, column: 46, scope: !9418)
!9540 = !DILocation(line: 121, column: 36, scope: !9418)
!9541 = !DILocation(line: 121, column: 4, scope: !9418)
!9542 = !DILocation(line: 121, column: 10, scope: !9418)
!9543 = !DILocation(line: 121, column: 15, scope: !9418)
!9544 = !DILocation(line: 121, column: 28, scope: !9418)
!9545 = !DILocation(line: 121, column: 34, scope: !9418)
!9546 = !DILocation(line: 122, column: 4, scope: !9418)
!9547 = !DILocation(line: 126, column: 4, scope: !9418)
!9548 = !DILocation(line: 126, column: 10, scope: !9418)
!9549 = !DILocation(line: 126, column: 16, scope: !9418)
!9550 = !DILocation(line: 127, column: 4, scope: !9418)
!9551 = !DILocation(line: 127, column: 10, scope: !9418)
!9552 = !DILocation(line: 127, column: 16, scope: !9418)
!9553 = !DILocation(line: 128, column: 46, scope: !9418)
!9554 = !DILocation(line: 128, column: 36, scope: !9418)
!9555 = !DILocation(line: 128, column: 4, scope: !9418)
!9556 = !DILocation(line: 128, column: 10, scope: !9418)
!9557 = !DILocation(line: 128, column: 15, scope: !9418)
!9558 = !DILocation(line: 128, column: 28, scope: !9418)
!9559 = !DILocation(line: 128, column: 34, scope: !9418)
!9560 = !DILocation(line: 129, column: 4, scope: !9418)
!9561 = !DILocation(line: 133, column: 4, scope: !9418)
!9562 = !DILocation(line: 133, column: 10, scope: !9418)
!9563 = !DILocation(line: 133, column: 16, scope: !9418)
!9564 = !DILocation(line: 134, column: 4, scope: !9418)
!9565 = !DILocation(line: 134, column: 10, scope: !9418)
!9566 = !DILocation(line: 134, column: 16, scope: !9418)
!9567 = !DILocation(line: 135, column: 46, scope: !9418)
!9568 = !DILocation(line: 135, column: 36, scope: !9418)
!9569 = !DILocation(line: 135, column: 4, scope: !9418)
!9570 = !DILocation(line: 135, column: 10, scope: !9418)
!9571 = !DILocation(line: 135, column: 15, scope: !9418)
!9572 = !DILocation(line: 135, column: 28, scope: !9418)
!9573 = !DILocation(line: 135, column: 34, scope: !9418)
!9574 = !DILocation(line: 136, column: 4, scope: !9418)
!9575 = !DILocation(line: 140, column: 4, scope: !9418)
!9576 = !DILocation(line: 140, column: 10, scope: !9418)
!9577 = !DILocation(line: 140, column: 16, scope: !9418)
!9578 = !DILocation(line: 141, column: 4, scope: !9418)
!9579 = !DILocation(line: 141, column: 10, scope: !9418)
!9580 = !DILocation(line: 141, column: 16, scope: !9418)
!9581 = !DILocation(line: 142, column: 46, scope: !9418)
!9582 = !DILocation(line: 142, column: 36, scope: !9418)
!9583 = !DILocation(line: 142, column: 4, scope: !9418)
!9584 = !DILocation(line: 142, column: 10, scope: !9418)
!9585 = !DILocation(line: 142, column: 15, scope: !9418)
!9586 = !DILocation(line: 142, column: 28, scope: !9418)
!9587 = !DILocation(line: 142, column: 34, scope: !9418)
!9588 = !DILocation(line: 143, column: 4, scope: !9418)
!9589 = !DILocation(line: 147, column: 4, scope: !9418)
!9590 = !DILocation(line: 147, column: 10, scope: !9418)
!9591 = !DILocation(line: 147, column: 16, scope: !9418)
!9592 = !DILocation(line: 148, column: 4, scope: !9418)
!9593 = !DILocation(line: 148, column: 10, scope: !9418)
!9594 = !DILocation(line: 148, column: 16, scope: !9418)
!9595 = !DILocation(line: 149, column: 46, scope: !9418)
!9596 = !DILocation(line: 149, column: 36, scope: !9418)
!9597 = !DILocation(line: 149, column: 4, scope: !9418)
!9598 = !DILocation(line: 149, column: 10, scope: !9418)
!9599 = !DILocation(line: 149, column: 15, scope: !9418)
!9600 = !DILocation(line: 149, column: 28, scope: !9418)
!9601 = !DILocation(line: 149, column: 34, scope: !9418)
!9602 = !DILocation(line: 150, column: 4, scope: !9418)
!9603 = !DILocation(line: 154, column: 4, scope: !9418)
!9604 = !DILocation(line: 158, column: 2, scope: !9399)
!9605 = !DILocation(line: 158, column: 8, scope: !9399)
!9606 = !DILocation(line: 158, column: 14, scope: !9399)
!9607 = !DILocation(line: 160, column: 2, scope: !9399)
!9608 = !DILocation(line: 161, column: 1, scope: !9399)
!9609 = distinct !DISubprogram(name: "mesh_ensure_tessellation_customdata", scope: !3, file: !3, line: 305, type: !3460, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!9610 = !DILocalVariable(name: "me", arg: 1, scope: !9609, file: !3, line: 305, type: !441)
!9611 = !DILocation(line: 305, column: 55, scope: !9609)
!9612 = !DILocation(line: 307, column: 6, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9609, file: !3, line: 307, column: 6)
!9614 = !DILocation(line: 307, column: 6, scope: !9609)
!9615 = !DILocation(line: 312, column: 2, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9613, file: !3, line: 307, column: 58)
!9617 = !DILocalVariable(name: "tottex_original", scope: !9618, file: !3, line: 314, type: !4039)
!9618 = distinct !DILexicalBlock(scope: !9613, file: !3, line: 313, column: 7)
!9619 = !DILocation(line: 314, column: 13, scope: !9618)
!9620 = !DILocation(line: 314, column: 60, scope: !9618)
!9621 = !DILocation(line: 314, column: 64, scope: !9618)
!9622 = !DILocation(line: 314, column: 31, scope: !9618)
!9623 = !DILocalVariable(name: "totcol_original", scope: !9618, file: !3, line: 315, type: !4039)
!9624 = !DILocation(line: 315, column: 13, scope: !9618)
!9625 = !DILocation(line: 315, column: 60, scope: !9618)
!9626 = !DILocation(line: 315, column: 64, scope: !9618)
!9627 = !DILocation(line: 315, column: 31, scope: !9618)
!9628 = !DILocalVariable(name: "tottex_tessface", scope: !9618, file: !3, line: 317, type: !4039)
!9629 = !DILocation(line: 317, column: 13, scope: !9618)
!9630 = !DILocation(line: 317, column: 60, scope: !9618)
!9631 = !DILocation(line: 317, column: 64, scope: !9618)
!9632 = !DILocation(line: 317, column: 31, scope: !9618)
!9633 = !DILocalVariable(name: "totcol_tessface", scope: !9618, file: !3, line: 318, type: !4039)
!9634 = !DILocation(line: 318, column: 13, scope: !9618)
!9635 = !DILocation(line: 318, column: 60, scope: !9618)
!9636 = !DILocation(line: 318, column: 64, scope: !9618)
!9637 = !DILocation(line: 318, column: 31, scope: !9618)
!9638 = !DILocation(line: 320, column: 7, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9618, file: !3, line: 320, column: 7)
!9640 = !DILocation(line: 320, column: 26, scope: !9639)
!9641 = !DILocation(line: 320, column: 23, scope: !9639)
!9642 = !DILocation(line: 320, column: 42, scope: !9639)
!9643 = !DILocation(line: 321, column: 7, scope: !9639)
!9644 = !DILocation(line: 321, column: 26, scope: !9639)
!9645 = !DILocation(line: 321, column: 23, scope: !9639)
!9646 = !DILocation(line: 320, column: 7, scope: !9618)
!9647 = !DILocation(line: 323, column: 28, scope: !9648)
!9648 = distinct !DILexicalBlock(scope: !9639, file: !3, line: 322, column: 3)
!9649 = !DILocation(line: 323, column: 4, scope: !9648)
!9650 = !DILocation(line: 325, column: 31, scope: !9648)
!9651 = !DILocation(line: 325, column: 35, scope: !9648)
!9652 = !DILocation(line: 325, column: 43, scope: !9648)
!9653 = !DILocation(line: 325, column: 47, scope: !9648)
!9654 = !DILocation(line: 325, column: 55, scope: !9648)
!9655 = !DILocation(line: 325, column: 59, scope: !9648)
!9656 = !DILocation(line: 325, column: 66, scope: !9648)
!9657 = !DILocation(line: 325, column: 70, scope: !9648)
!9658 = !DILocation(line: 325, column: 4, scope: !9648)
!9659 = !DILocation(line: 328, column: 10, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9648, file: !3, line: 328, column: 8)
!9661 = !DILocation(line: 328, column: 16, scope: !9660)
!9662 = !DILocation(line: 328, column: 8, scope: !9648)
!9663 = !DILocation(line: 335, column: 22, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9660, file: !3, line: 328, column: 27)
!9665 = !DILocation(line: 335, column: 39, scope: !9664)
!9666 = !DILocation(line: 335, column: 56, scope: !9664)
!9667 = !DILocation(line: 335, column: 73, scope: !9664)
!9668 = !DILocation(line: 333, column: 5, scope: !9664)
!9669 = !DILocation(line: 336, column: 4, scope: !9664)
!9670 = !DILocation(line: 337, column: 3, scope: !9648)
!9671 = !DILocation(line: 339, column: 1, scope: !9609)
!9672 = distinct !DISubprogram(name: "max_ii", scope: !5428, file: !5428, line: 215, type: !5429, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!9673 = !DILocalVariable(name: "a", arg: 1, scope: !9672, file: !5428, line: 215, type: !6)
!9674 = !DILocation(line: 215, column: 24, scope: !9672)
!9675 = !DILocalVariable(name: "b", arg: 2, scope: !9672, file: !5428, line: 215, type: !6)
!9676 = !DILocation(line: 215, column: 31, scope: !9672)
!9677 = !DILocation(line: 217, column: 10, scope: !9672)
!9678 = !DILocation(line: 217, column: 14, scope: !9672)
!9679 = !DILocation(line: 217, column: 12, scope: !9672)
!9680 = !DILocation(line: 217, column: 9, scope: !9672)
!9681 = !DILocation(line: 217, column: 19, scope: !9672)
!9682 = !DILocation(line: 217, column: 23, scope: !9672)
!9683 = !DILocation(line: 217, column: 2, scope: !9672)
!9684 = distinct !DISubprogram(name: "BLI_edgehashIterator_isDone", scope: !2736, file: !2736, line: 83, type: !9685, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!9685 = !DISubroutineType(types: !9686)
!9686 = !{!1203, !7017}
!9687 = !DILocalVariable(name: "ehi", arg: 1, scope: !9684, file: !2736, line: 83, type: !7017)
!9688 = !DILocation(line: 83, column: 65, scope: !9684)
!9689 = !DILocation(line: 83, column: 101, scope: !9684)
!9690 = !DILocation(line: 83, column: 106, scope: !9684)
!9691 = !DILocation(line: 83, column: 81, scope: !9684)
!9692 = !DILocation(line: 83, column: 116, scope: !9684)
!9693 = !DILocation(line: 83, column: 79, scope: !9684)
!9694 = !DILocation(line: 83, column: 72, scope: !9684)
!9695 = distinct !DISubprogram(name: "BLI_edgehashIterator_getKey", scope: !2736, file: !2736, line: 78, type: !9696, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!9696 = !DISubroutineType(types: !9697)
!9697 = !{null, !7017, !378, !378}
!9698 = !DILocalVariable(name: "ehi", arg: 1, scope: !9695, file: !2736, line: 78, type: !7017)
!9699 = !DILocation(line: 78, column: 65, scope: !9695)
!9700 = !DILocalVariable(name: "r_v0", arg: 2, scope: !9695, file: !2736, line: 78, type: !378)
!9701 = !DILocation(line: 78, column: 84, scope: !9695)
!9702 = !DILocalVariable(name: "r_v1", arg: 3, scope: !9695, file: !2736, line: 78, type: !378)
!9703 = !DILocation(line: 78, column: 104, scope: !9695)
!9704 = !DILocation(line: 79, column: 32, scope: !9695)
!9705 = !DILocation(line: 79, column: 37, scope: !9695)
!9706 = !DILocation(line: 79, column: 48, scope: !9695)
!9707 = !DILocation(line: 79, column: 4, scope: !9695)
!9708 = !DILocation(line: 79, column: 9, scope: !9695)
!9709 = !DILocation(line: 79, column: 81, scope: !9695)
!9710 = !DILocation(line: 79, column: 86, scope: !9695)
!9711 = !DILocation(line: 79, column: 97, scope: !9695)
!9712 = !DILocation(line: 79, column: 53, scope: !9695)
!9713 = !DILocation(line: 79, column: 58, scope: !9695)
!9714 = !DILocation(line: 79, column: 101, scope: !9695)
!9715 = distinct !DISubprogram(name: "BLI_edgehashIterator_setValue", scope: !2736, file: !2736, line: 82, type: !9716, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !2745)
!9716 = !DISubroutineType(types: !9717)
!9717 = !{null, !7017, !45}
!9718 = !DILocalVariable(name: "ehi", arg: 1, scope: !9715, file: !2736, line: 82, type: !7017)
!9719 = !DILocation(line: 82, column: 67, scope: !9715)
!9720 = !DILocalVariable(name: "val", arg: 2, scope: !9715, file: !2736, line: 82, type: !45)
!9721 = !DILocation(line: 82, column: 78, scope: !9715)
!9722 = !DILocation(line: 82, column: 128, scope: !9715)
!9723 = !DILocation(line: 82, column: 106, scope: !9715)
!9724 = !DILocation(line: 82, column: 111, scope: !9715)
!9725 = !DILocation(line: 82, column: 122, scope: !9715)
!9726 = !DILocation(line: 82, column: 126, scope: !9715)
!9727 = !DILocation(line: 82, column: 133, scope: !9715)
