; ModuleID = 'blender/source/blender/blenlib/intern/math_geom.c'
source_filename = "blender/source/blender/blenlib/intern/math_geom.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.IsectRayAABBData = type { [3 x float], [3 x float], [3 x i32] }

@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@__func__.fill_poly_v2i_n = private unnamed_addr constant [16 x i8] c"fill_poly_v2i_n\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [23 x i8] c"interp_sparse_array up\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"interp_sparse_array tup\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"interp_sparse_array tdown\00", align 1
@form_factor_visible_quad.epsilon = internal constant float 0x3EB0C6F7A0000000, align 4, !dbg !0

; Function Attrs: noinline nounwind uwtable
define dso_local void @cent_tri_v3(float* %cent, float* %v1, float* %v2, float* %v3) #0 !dbg !25 {
entry:
  %cent.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  store float* %cent, float** %cent.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cent.addr, metadata !28, metadata !DIExpression()), !dbg !29
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !30, metadata !DIExpression()), !dbg !31
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !32, metadata !DIExpression()), !dbg !33
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !34, metadata !DIExpression()), !dbg !35
  %0 = load float*, float** %v1.addr, align 8, !dbg !36
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !36
  %1 = load float, float* %arrayidx, align 4, !dbg !36
  %2 = load float*, float** %v2.addr, align 8, !dbg !37
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !37
  %3 = load float, float* %arrayidx1, align 4, !dbg !37
  %add = fadd float %1, %3, !dbg !38
  %4 = load float*, float** %v3.addr, align 8, !dbg !39
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !39
  %5 = load float, float* %arrayidx2, align 4, !dbg !39
  %add3 = fadd float %add, %5, !dbg !40
  %div = fdiv float %add3, 3.000000e+00, !dbg !41
  %6 = load float*, float** %cent.addr, align 8, !dbg !42
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 0, !dbg !42
  store float %div, float* %arrayidx4, align 4, !dbg !43
  %7 = load float*, float** %v1.addr, align 8, !dbg !44
  %arrayidx5 = getelementptr inbounds float, float* %7, i64 1, !dbg !44
  %8 = load float, float* %arrayidx5, align 4, !dbg !44
  %9 = load float*, float** %v2.addr, align 8, !dbg !45
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !45
  %10 = load float, float* %arrayidx6, align 4, !dbg !45
  %add7 = fadd float %8, %10, !dbg !46
  %11 = load float*, float** %v3.addr, align 8, !dbg !47
  %arrayidx8 = getelementptr inbounds float, float* %11, i64 1, !dbg !47
  %12 = load float, float* %arrayidx8, align 4, !dbg !47
  %add9 = fadd float %add7, %12, !dbg !48
  %div10 = fdiv float %add9, 3.000000e+00, !dbg !49
  %13 = load float*, float** %cent.addr, align 8, !dbg !50
  %arrayidx11 = getelementptr inbounds float, float* %13, i64 1, !dbg !50
  store float %div10, float* %arrayidx11, align 4, !dbg !51
  %14 = load float*, float** %v1.addr, align 8, !dbg !52
  %arrayidx12 = getelementptr inbounds float, float* %14, i64 2, !dbg !52
  %15 = load float, float* %arrayidx12, align 4, !dbg !52
  %16 = load float*, float** %v2.addr, align 8, !dbg !53
  %arrayidx13 = getelementptr inbounds float, float* %16, i64 2, !dbg !53
  %17 = load float, float* %arrayidx13, align 4, !dbg !53
  %add14 = fadd float %15, %17, !dbg !54
  %18 = load float*, float** %v3.addr, align 8, !dbg !55
  %arrayidx15 = getelementptr inbounds float, float* %18, i64 2, !dbg !55
  %19 = load float, float* %arrayidx15, align 4, !dbg !55
  %add16 = fadd float %add14, %19, !dbg !56
  %div17 = fdiv float %add16, 3.000000e+00, !dbg !57
  %20 = load float*, float** %cent.addr, align 8, !dbg !58
  %arrayidx18 = getelementptr inbounds float, float* %20, i64 2, !dbg !58
  store float %div17, float* %arrayidx18, align 4, !dbg !59
  ret void, !dbg !60
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @cent_quad_v3(float* %cent, float* %v1, float* %v2, float* %v3, float* %v4) #0 !dbg !61 {
entry:
  %cent.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  store float* %cent, float** %cent.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cent.addr, metadata !64, metadata !DIExpression()), !dbg !65
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !66, metadata !DIExpression()), !dbg !67
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !68, metadata !DIExpression()), !dbg !69
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !70, metadata !DIExpression()), !dbg !71
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !72, metadata !DIExpression()), !dbg !73
  %0 = load float*, float** %v1.addr, align 8, !dbg !74
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !74
  %1 = load float, float* %arrayidx, align 4, !dbg !74
  %2 = load float*, float** %v2.addr, align 8, !dbg !75
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !75
  %3 = load float, float* %arrayidx1, align 4, !dbg !75
  %add = fadd float %1, %3, !dbg !76
  %4 = load float*, float** %v3.addr, align 8, !dbg !77
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !77
  %5 = load float, float* %arrayidx2, align 4, !dbg !77
  %add3 = fadd float %add, %5, !dbg !78
  %6 = load float*, float** %v4.addr, align 8, !dbg !79
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 0, !dbg !79
  %7 = load float, float* %arrayidx4, align 4, !dbg !79
  %add5 = fadd float %add3, %7, !dbg !80
  %mul = fmul float 2.500000e-01, %add5, !dbg !81
  %8 = load float*, float** %cent.addr, align 8, !dbg !82
  %arrayidx6 = getelementptr inbounds float, float* %8, i64 0, !dbg !82
  store float %mul, float* %arrayidx6, align 4, !dbg !83
  %9 = load float*, float** %v1.addr, align 8, !dbg !84
  %arrayidx7 = getelementptr inbounds float, float* %9, i64 1, !dbg !84
  %10 = load float, float* %arrayidx7, align 4, !dbg !84
  %11 = load float*, float** %v2.addr, align 8, !dbg !85
  %arrayidx8 = getelementptr inbounds float, float* %11, i64 1, !dbg !85
  %12 = load float, float* %arrayidx8, align 4, !dbg !85
  %add9 = fadd float %10, %12, !dbg !86
  %13 = load float*, float** %v3.addr, align 8, !dbg !87
  %arrayidx10 = getelementptr inbounds float, float* %13, i64 1, !dbg !87
  %14 = load float, float* %arrayidx10, align 4, !dbg !87
  %add11 = fadd float %add9, %14, !dbg !88
  %15 = load float*, float** %v4.addr, align 8, !dbg !89
  %arrayidx12 = getelementptr inbounds float, float* %15, i64 1, !dbg !89
  %16 = load float, float* %arrayidx12, align 4, !dbg !89
  %add13 = fadd float %add11, %16, !dbg !90
  %mul14 = fmul float 2.500000e-01, %add13, !dbg !91
  %17 = load float*, float** %cent.addr, align 8, !dbg !92
  %arrayidx15 = getelementptr inbounds float, float* %17, i64 1, !dbg !92
  store float %mul14, float* %arrayidx15, align 4, !dbg !93
  %18 = load float*, float** %v1.addr, align 8, !dbg !94
  %arrayidx16 = getelementptr inbounds float, float* %18, i64 2, !dbg !94
  %19 = load float, float* %arrayidx16, align 4, !dbg !94
  %20 = load float*, float** %v2.addr, align 8, !dbg !95
  %arrayidx17 = getelementptr inbounds float, float* %20, i64 2, !dbg !95
  %21 = load float, float* %arrayidx17, align 4, !dbg !95
  %add18 = fadd float %19, %21, !dbg !96
  %22 = load float*, float** %v3.addr, align 8, !dbg !97
  %arrayidx19 = getelementptr inbounds float, float* %22, i64 2, !dbg !97
  %23 = load float, float* %arrayidx19, align 4, !dbg !97
  %add20 = fadd float %add18, %23, !dbg !98
  %24 = load float*, float** %v4.addr, align 8, !dbg !99
  %arrayidx21 = getelementptr inbounds float, float* %24, i64 2, !dbg !99
  %25 = load float, float* %arrayidx21, align 4, !dbg !99
  %add22 = fadd float %add20, %25, !dbg !100
  %mul23 = fmul float 2.500000e-01, %add22, !dbg !101
  %26 = load float*, float** %cent.addr, align 8, !dbg !102
  %arrayidx24 = getelementptr inbounds float, float* %26, i64 2, !dbg !102
  store float %mul23, float* %arrayidx24, align 4, !dbg !103
  ret void, !dbg !104
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @normal_tri_v3(float* %n, float* %v1, float* %v2, float* %v3) #0 !dbg !105 {
entry:
  %n.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %n1 = alloca [3 x float], align 4
  %n2 = alloca [3 x float], align 4
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !108, metadata !DIExpression()), !dbg !109
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !110, metadata !DIExpression()), !dbg !111
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !112, metadata !DIExpression()), !dbg !113
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !114, metadata !DIExpression()), !dbg !115
  call void @llvm.dbg.declare(metadata [3 x float]* %n1, metadata !116, metadata !DIExpression()), !dbg !120
  call void @llvm.dbg.declare(metadata [3 x float]* %n2, metadata !121, metadata !DIExpression()), !dbg !122
  %0 = load float*, float** %v1.addr, align 8, !dbg !123
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !123
  %1 = load float, float* %arrayidx, align 4, !dbg !123
  %2 = load float*, float** %v2.addr, align 8, !dbg !124
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !124
  %3 = load float, float* %arrayidx1, align 4, !dbg !124
  %sub = fsub float %1, %3, !dbg !125
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !126
  store float %sub, float* %arrayidx2, align 4, !dbg !127
  %4 = load float*, float** %v2.addr, align 8, !dbg !128
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 0, !dbg !128
  %5 = load float, float* %arrayidx3, align 4, !dbg !128
  %6 = load float*, float** %v3.addr, align 8, !dbg !129
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 0, !dbg !129
  %7 = load float, float* %arrayidx4, align 4, !dbg !129
  %sub5 = fsub float %5, %7, !dbg !130
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 0, !dbg !131
  store float %sub5, float* %arrayidx6, align 4, !dbg !132
  %8 = load float*, float** %v1.addr, align 8, !dbg !133
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 1, !dbg !133
  %9 = load float, float* %arrayidx7, align 4, !dbg !133
  %10 = load float*, float** %v2.addr, align 8, !dbg !134
  %arrayidx8 = getelementptr inbounds float, float* %10, i64 1, !dbg !134
  %11 = load float, float* %arrayidx8, align 4, !dbg !134
  %sub9 = fsub float %9, %11, !dbg !135
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 1, !dbg !136
  store float %sub9, float* %arrayidx10, align 4, !dbg !137
  %12 = load float*, float** %v2.addr, align 8, !dbg !138
  %arrayidx11 = getelementptr inbounds float, float* %12, i64 1, !dbg !138
  %13 = load float, float* %arrayidx11, align 4, !dbg !138
  %14 = load float*, float** %v3.addr, align 8, !dbg !139
  %arrayidx12 = getelementptr inbounds float, float* %14, i64 1, !dbg !139
  %15 = load float, float* %arrayidx12, align 4, !dbg !139
  %sub13 = fsub float %13, %15, !dbg !140
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 1, !dbg !141
  store float %sub13, float* %arrayidx14, align 4, !dbg !142
  %16 = load float*, float** %v1.addr, align 8, !dbg !143
  %arrayidx15 = getelementptr inbounds float, float* %16, i64 2, !dbg !143
  %17 = load float, float* %arrayidx15, align 4, !dbg !143
  %18 = load float*, float** %v2.addr, align 8, !dbg !144
  %arrayidx16 = getelementptr inbounds float, float* %18, i64 2, !dbg !144
  %19 = load float, float* %arrayidx16, align 4, !dbg !144
  %sub17 = fsub float %17, %19, !dbg !145
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 2, !dbg !146
  store float %sub17, float* %arrayidx18, align 4, !dbg !147
  %20 = load float*, float** %v2.addr, align 8, !dbg !148
  %arrayidx19 = getelementptr inbounds float, float* %20, i64 2, !dbg !148
  %21 = load float, float* %arrayidx19, align 4, !dbg !148
  %22 = load float*, float** %v3.addr, align 8, !dbg !149
  %arrayidx20 = getelementptr inbounds float, float* %22, i64 2, !dbg !149
  %23 = load float, float* %arrayidx20, align 4, !dbg !149
  %sub21 = fsub float %21, %23, !dbg !150
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 2, !dbg !151
  store float %sub21, float* %arrayidx22, align 4, !dbg !152
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 1, !dbg !153
  %24 = load float, float* %arrayidx23, align 4, !dbg !153
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 2, !dbg !154
  %25 = load float, float* %arrayidx24, align 4, !dbg !154
  %mul = fmul float %24, %25, !dbg !155
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 2, !dbg !156
  %26 = load float, float* %arrayidx25, align 4, !dbg !156
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 1, !dbg !157
  %27 = load float, float* %arrayidx26, align 4, !dbg !157
  %mul27 = fmul float %26, %27, !dbg !158
  %sub28 = fsub float %mul, %mul27, !dbg !159
  %28 = load float*, float** %n.addr, align 8, !dbg !160
  %arrayidx29 = getelementptr inbounds float, float* %28, i64 0, !dbg !160
  store float %sub28, float* %arrayidx29, align 4, !dbg !161
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 2, !dbg !162
  %29 = load float, float* %arrayidx30, align 4, !dbg !162
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 0, !dbg !163
  %30 = load float, float* %arrayidx31, align 4, !dbg !163
  %mul32 = fmul float %29, %30, !dbg !164
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !165
  %31 = load float, float* %arrayidx33, align 4, !dbg !165
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 2, !dbg !166
  %32 = load float, float* %arrayidx34, align 4, !dbg !166
  %mul35 = fmul float %31, %32, !dbg !167
  %sub36 = fsub float %mul32, %mul35, !dbg !168
  %33 = load float*, float** %n.addr, align 8, !dbg !169
  %arrayidx37 = getelementptr inbounds float, float* %33, i64 1, !dbg !169
  store float %sub36, float* %arrayidx37, align 4, !dbg !170
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !171
  %34 = load float, float* %arrayidx38, align 4, !dbg !171
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 1, !dbg !172
  %35 = load float, float* %arrayidx39, align 4, !dbg !172
  %mul40 = fmul float %34, %35, !dbg !173
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 1, !dbg !174
  %36 = load float, float* %arrayidx41, align 4, !dbg !174
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 0, !dbg !175
  %37 = load float, float* %arrayidx42, align 4, !dbg !175
  %mul43 = fmul float %36, %37, !dbg !176
  %sub44 = fsub float %mul40, %mul43, !dbg !177
  %38 = load float*, float** %n.addr, align 8, !dbg !178
  %arrayidx45 = getelementptr inbounds float, float* %38, i64 2, !dbg !178
  store float %sub44, float* %arrayidx45, align 4, !dbg !179
  %39 = load float*, float** %n.addr, align 8, !dbg !180
  %call = call float @normalize_v3(float* %39), !dbg !181
  ret float %call, !dbg !182
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !183 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !187, metadata !DIExpression()), !dbg !188
  %0 = load float*, float** %n.addr, align 8, !dbg !189
  %1 = load float*, float** %n.addr, align 8, !dbg !190
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !191
  ret float %call, !dbg !192
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @normal_quad_v3(float* %n, float* %v1, float* %v2, float* %v3, float* %v4) #0 !dbg !193 {
entry:
  %n.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  %n1 = alloca [3 x float], align 4
  %n2 = alloca [3 x float], align 4
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !196, metadata !DIExpression()), !dbg !197
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !198, metadata !DIExpression()), !dbg !199
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !200, metadata !DIExpression()), !dbg !201
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !202, metadata !DIExpression()), !dbg !203
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !204, metadata !DIExpression()), !dbg !205
  call void @llvm.dbg.declare(metadata [3 x float]* %n1, metadata !206, metadata !DIExpression()), !dbg !207
  call void @llvm.dbg.declare(metadata [3 x float]* %n2, metadata !208, metadata !DIExpression()), !dbg !209
  %0 = load float*, float** %v1.addr, align 8, !dbg !210
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !210
  %1 = load float, float* %arrayidx, align 4, !dbg !210
  %2 = load float*, float** %v3.addr, align 8, !dbg !211
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !211
  %3 = load float, float* %arrayidx1, align 4, !dbg !211
  %sub = fsub float %1, %3, !dbg !212
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !213
  store float %sub, float* %arrayidx2, align 4, !dbg !214
  %4 = load float*, float** %v1.addr, align 8, !dbg !215
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 1, !dbg !215
  %5 = load float, float* %arrayidx3, align 4, !dbg !215
  %6 = load float*, float** %v3.addr, align 8, !dbg !216
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 1, !dbg !216
  %7 = load float, float* %arrayidx4, align 4, !dbg !216
  %sub5 = fsub float %5, %7, !dbg !217
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 1, !dbg !218
  store float %sub5, float* %arrayidx6, align 4, !dbg !219
  %8 = load float*, float** %v1.addr, align 8, !dbg !220
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !220
  %9 = load float, float* %arrayidx7, align 4, !dbg !220
  %10 = load float*, float** %v3.addr, align 8, !dbg !221
  %arrayidx8 = getelementptr inbounds float, float* %10, i64 2, !dbg !221
  %11 = load float, float* %arrayidx8, align 4, !dbg !221
  %sub9 = fsub float %9, %11, !dbg !222
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 2, !dbg !223
  store float %sub9, float* %arrayidx10, align 4, !dbg !224
  %12 = load float*, float** %v2.addr, align 8, !dbg !225
  %arrayidx11 = getelementptr inbounds float, float* %12, i64 0, !dbg !225
  %13 = load float, float* %arrayidx11, align 4, !dbg !225
  %14 = load float*, float** %v4.addr, align 8, !dbg !226
  %arrayidx12 = getelementptr inbounds float, float* %14, i64 0, !dbg !226
  %15 = load float, float* %arrayidx12, align 4, !dbg !226
  %sub13 = fsub float %13, %15, !dbg !227
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 0, !dbg !228
  store float %sub13, float* %arrayidx14, align 4, !dbg !229
  %16 = load float*, float** %v2.addr, align 8, !dbg !230
  %arrayidx15 = getelementptr inbounds float, float* %16, i64 1, !dbg !230
  %17 = load float, float* %arrayidx15, align 4, !dbg !230
  %18 = load float*, float** %v4.addr, align 8, !dbg !231
  %arrayidx16 = getelementptr inbounds float, float* %18, i64 1, !dbg !231
  %19 = load float, float* %arrayidx16, align 4, !dbg !231
  %sub17 = fsub float %17, %19, !dbg !232
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 1, !dbg !233
  store float %sub17, float* %arrayidx18, align 4, !dbg !234
  %20 = load float*, float** %v2.addr, align 8, !dbg !235
  %arrayidx19 = getelementptr inbounds float, float* %20, i64 2, !dbg !235
  %21 = load float, float* %arrayidx19, align 4, !dbg !235
  %22 = load float*, float** %v4.addr, align 8, !dbg !236
  %arrayidx20 = getelementptr inbounds float, float* %22, i64 2, !dbg !236
  %23 = load float, float* %arrayidx20, align 4, !dbg !236
  %sub21 = fsub float %21, %23, !dbg !237
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 2, !dbg !238
  store float %sub21, float* %arrayidx22, align 4, !dbg !239
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 1, !dbg !240
  %24 = load float, float* %arrayidx23, align 4, !dbg !240
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 2, !dbg !241
  %25 = load float, float* %arrayidx24, align 4, !dbg !241
  %mul = fmul float %24, %25, !dbg !242
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 2, !dbg !243
  %26 = load float, float* %arrayidx25, align 4, !dbg !243
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 1, !dbg !244
  %27 = load float, float* %arrayidx26, align 4, !dbg !244
  %mul27 = fmul float %26, %27, !dbg !245
  %sub28 = fsub float %mul, %mul27, !dbg !246
  %28 = load float*, float** %n.addr, align 8, !dbg !247
  %arrayidx29 = getelementptr inbounds float, float* %28, i64 0, !dbg !247
  store float %sub28, float* %arrayidx29, align 4, !dbg !248
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 2, !dbg !249
  %29 = load float, float* %arrayidx30, align 4, !dbg !249
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 0, !dbg !250
  %30 = load float, float* %arrayidx31, align 4, !dbg !250
  %mul32 = fmul float %29, %30, !dbg !251
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !252
  %31 = load float, float* %arrayidx33, align 4, !dbg !252
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 2, !dbg !253
  %32 = load float, float* %arrayidx34, align 4, !dbg !253
  %mul35 = fmul float %31, %32, !dbg !254
  %sub36 = fsub float %mul32, %mul35, !dbg !255
  %33 = load float*, float** %n.addr, align 8, !dbg !256
  %arrayidx37 = getelementptr inbounds float, float* %33, i64 1, !dbg !256
  store float %sub36, float* %arrayidx37, align 4, !dbg !257
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !258
  %34 = load float, float* %arrayidx38, align 4, !dbg !258
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 1, !dbg !259
  %35 = load float, float* %arrayidx39, align 4, !dbg !259
  %mul40 = fmul float %34, %35, !dbg !260
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 1, !dbg !261
  %36 = load float, float* %arrayidx41, align 4, !dbg !261
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 0, !dbg !262
  %37 = load float, float* %arrayidx42, align 4, !dbg !262
  %mul43 = fmul float %36, %37, !dbg !263
  %sub44 = fsub float %mul40, %mul43, !dbg !264
  %38 = load float*, float** %n.addr, align 8, !dbg !265
  %arrayidx45 = getelementptr inbounds float, float* %38, i64 2, !dbg !265
  store float %sub44, float* %arrayidx45, align 4, !dbg !266
  %39 = load float*, float** %n.addr, align 8, !dbg !267
  %call = call float @normalize_v3(float* %39), !dbg !268
  ret float %call, !dbg !269
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @normal_poly_v3(float* %n, [3 x float]* %verts, i32 %nr) #0 !dbg !270 {
entry:
  %n.addr = alloca float*, align 8
  %verts.addr = alloca [3 x float]*, align 8
  %nr.addr = alloca i32, align 4
  %v_prev = alloca float*, align 8
  %v_curr = alloca float*, align 8
  %i = alloca i32, align 4
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !276, metadata !DIExpression()), !dbg !277
  store [3 x float]* %verts, [3 x float]** %verts.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %verts.addr, metadata !278, metadata !DIExpression()), !dbg !279
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !280, metadata !DIExpression()), !dbg !281
  call void @llvm.dbg.declare(metadata float** %v_prev, metadata !282, metadata !DIExpression()), !dbg !283
  %0 = load [3 x float]*, [3 x float]** %verts.addr, align 8, !dbg !284
  %1 = load i32, i32* %nr.addr, align 4, !dbg !285
  %sub = sub i32 %1, 1, !dbg !286
  %idxprom = zext i32 %sub to i64, !dbg !284
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %0, i64 %idxprom, !dbg !284
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !284
  store float* %arraydecay, float** %v_prev, align 8, !dbg !283
  call void @llvm.dbg.declare(metadata float** %v_curr, metadata !287, metadata !DIExpression()), !dbg !288
  %2 = load [3 x float]*, [3 x float]** %verts.addr, align 8, !dbg !289
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %2, i64 0, !dbg !289
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx1, i64 0, i64 0, !dbg !289
  store float* %arraydecay2, float** %v_curr, align 8, !dbg !288
  call void @llvm.dbg.declare(metadata i32* %i, metadata !290, metadata !DIExpression()), !dbg !291
  %3 = load float*, float** %n.addr, align 8, !dbg !292
  call void @zero_v3(float* %3), !dbg !293
  store i32 0, i32* %i, align 4, !dbg !294
  br label %for.cond, !dbg !296

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !297
  %5 = load i32, i32* %nr.addr, align 4, !dbg !299
  %cmp = icmp ult i32 %4, %5, !dbg !300
  br i1 %cmp, label %for.body, label %for.end, !dbg !301

for.body:                                         ; preds = %for.cond
  %6 = load float*, float** %n.addr, align 8, !dbg !302
  %7 = load float*, float** %v_prev, align 8, !dbg !304
  %8 = load float*, float** %v_curr, align 8, !dbg !305
  call void @add_newell_cross_v3_v3v3(float* %6, float* %7, float* %8), !dbg !306
  br label %for.inc, !dbg !307

for.inc:                                          ; preds = %for.body
  %9 = load float*, float** %v_curr, align 8, !dbg !308
  store float* %9, float** %v_prev, align 8, !dbg !309
  %10 = load [3 x float]*, [3 x float]** %verts.addr, align 8, !dbg !310
  %11 = load i32, i32* %i, align 4, !dbg !311
  %inc = add i32 %11, 1, !dbg !311
  store i32 %inc, i32* %i, align 4, !dbg !311
  %idxprom3 = zext i32 %inc to i64, !dbg !310
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %10, i64 %idxprom3, !dbg !310
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx4, i64 0, i64 0, !dbg !310
  store float* %arraydecay5, float** %v_curr, align 8, !dbg !312
  br label %for.cond, !dbg !313, !llvm.loop !314

for.end:                                          ; preds = %for.cond
  %12 = load float*, float** %n.addr, align 8, !dbg !316
  %call = call float @normalize_v3(float* %12), !dbg !317
  ret float %call, !dbg !318
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !319 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !322, metadata !DIExpression()), !dbg !323
  %0 = load float*, float** %r.addr, align 8, !dbg !324
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !324
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !325
  %1 = load float*, float** %r.addr, align 8, !dbg !326
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !326
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !327
  %2 = load float*, float** %r.addr, align 8, !dbg !328
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !328
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !329
  ret void, !dbg !330
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_newell_cross_v3_v3v3(float* %n, float* %v_prev, float* %v_curr) #0 !dbg !331 {
entry:
  %n.addr = alloca float*, align 8
  %v_prev.addr = alloca float*, align 8
  %v_curr.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !334, metadata !DIExpression()), !dbg !335
  store float* %v_prev, float** %v_prev.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v_prev.addr, metadata !336, metadata !DIExpression()), !dbg !337
  store float* %v_curr, float** %v_curr.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v_curr.addr, metadata !338, metadata !DIExpression()), !dbg !339
  %0 = load float*, float** %v_prev.addr, align 8, !dbg !340
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !340
  %1 = load float, float* %arrayidx, align 4, !dbg !340
  %2 = load float*, float** %v_curr.addr, align 8, !dbg !341
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !341
  %3 = load float, float* %arrayidx1, align 4, !dbg !341
  %sub = fsub float %1, %3, !dbg !342
  %4 = load float*, float** %v_prev.addr, align 8, !dbg !343
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !343
  %5 = load float, float* %arrayidx2, align 4, !dbg !343
  %6 = load float*, float** %v_curr.addr, align 8, !dbg !344
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 2, !dbg !344
  %7 = load float, float* %arrayidx3, align 4, !dbg !344
  %add = fadd float %5, %7, !dbg !345
  %mul = fmul float %sub, %add, !dbg !346
  %8 = load float*, float** %n.addr, align 8, !dbg !347
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 0, !dbg !347
  %9 = load float, float* %arrayidx4, align 4, !dbg !348
  %add5 = fadd float %9, %mul, !dbg !348
  store float %add5, float* %arrayidx4, align 4, !dbg !348
  %10 = load float*, float** %v_prev.addr, align 8, !dbg !349
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !349
  %11 = load float, float* %arrayidx6, align 4, !dbg !349
  %12 = load float*, float** %v_curr.addr, align 8, !dbg !350
  %arrayidx7 = getelementptr inbounds float, float* %12, i64 2, !dbg !350
  %13 = load float, float* %arrayidx7, align 4, !dbg !350
  %sub8 = fsub float %11, %13, !dbg !351
  %14 = load float*, float** %v_prev.addr, align 8, !dbg !352
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 0, !dbg !352
  %15 = load float, float* %arrayidx9, align 4, !dbg !352
  %16 = load float*, float** %v_curr.addr, align 8, !dbg !353
  %arrayidx10 = getelementptr inbounds float, float* %16, i64 0, !dbg !353
  %17 = load float, float* %arrayidx10, align 4, !dbg !353
  %add11 = fadd float %15, %17, !dbg !354
  %mul12 = fmul float %sub8, %add11, !dbg !355
  %18 = load float*, float** %n.addr, align 8, !dbg !356
  %arrayidx13 = getelementptr inbounds float, float* %18, i64 1, !dbg !356
  %19 = load float, float* %arrayidx13, align 4, !dbg !357
  %add14 = fadd float %19, %mul12, !dbg !357
  store float %add14, float* %arrayidx13, align 4, !dbg !357
  %20 = load float*, float** %v_prev.addr, align 8, !dbg !358
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 0, !dbg !358
  %21 = load float, float* %arrayidx15, align 4, !dbg !358
  %22 = load float*, float** %v_curr.addr, align 8, !dbg !359
  %arrayidx16 = getelementptr inbounds float, float* %22, i64 0, !dbg !359
  %23 = load float, float* %arrayidx16, align 4, !dbg !359
  %sub17 = fsub float %21, %23, !dbg !360
  %24 = load float*, float** %v_prev.addr, align 8, !dbg !361
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 1, !dbg !361
  %25 = load float, float* %arrayidx18, align 4, !dbg !361
  %26 = load float*, float** %v_curr.addr, align 8, !dbg !362
  %arrayidx19 = getelementptr inbounds float, float* %26, i64 1, !dbg !362
  %27 = load float, float* %arrayidx19, align 4, !dbg !362
  %add20 = fadd float %25, %27, !dbg !363
  %mul21 = fmul float %sub17, %add20, !dbg !364
  %28 = load float*, float** %n.addr, align 8, !dbg !365
  %arrayidx22 = getelementptr inbounds float, float* %28, i64 2, !dbg !365
  %29 = load float, float* %arrayidx22, align 4, !dbg !366
  %add23 = fadd float %29, %mul21, !dbg !366
  store float %add23, float* %arrayidx22, align 4, !dbg !366
  ret void, !dbg !367
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @area_quad_v3(float* %v1, float* %v2, float* %v3, float* %v4) #0 !dbg !368 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  %len = alloca float, align 4
  %vec1 = alloca [3 x float], align 4
  %vec2 = alloca [3 x float], align 4
  %n = alloca [3 x float], align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !371, metadata !DIExpression()), !dbg !372
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !373, metadata !DIExpression()), !dbg !374
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !375, metadata !DIExpression()), !dbg !376
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !377, metadata !DIExpression()), !dbg !378
  call void @llvm.dbg.declare(metadata float* %len, metadata !379, metadata !DIExpression()), !dbg !380
  call void @llvm.dbg.declare(metadata [3 x float]* %vec1, metadata !381, metadata !DIExpression()), !dbg !382
  call void @llvm.dbg.declare(metadata [3 x float]* %vec2, metadata !383, metadata !DIExpression()), !dbg !384
  call void @llvm.dbg.declare(metadata [3 x float]* %n, metadata !385, metadata !DIExpression()), !dbg !386
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec1, i64 0, i64 0, !dbg !387
  %0 = load float*, float** %v2.addr, align 8, !dbg !388
  %1 = load float*, float** %v1.addr, align 8, !dbg !389
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !390
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !391
  %2 = load float*, float** %v4.addr, align 8, !dbg !392
  %3 = load float*, float** %v1.addr, align 8, !dbg !393
  call void @sub_v3_v3v3(float* %arraydecay1, float* %2, float* %3), !dbg !394
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !395
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %vec1, i64 0, i64 0, !dbg !396
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !397
  call void @cross_v3_v3v3(float* %arraydecay2, float* %arraydecay3, float* %arraydecay4), !dbg !398
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !399
  %call = call float @len_v3(float* %arraydecay5), !dbg !400
  store float %call, float* %len, align 4, !dbg !401
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %vec1, i64 0, i64 0, !dbg !402
  %4 = load float*, float** %v4.addr, align 8, !dbg !403
  %5 = load float*, float** %v3.addr, align 8, !dbg !404
  call void @sub_v3_v3v3(float* %arraydecay6, float* %4, float* %5), !dbg !405
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !406
  %6 = load float*, float** %v2.addr, align 8, !dbg !407
  %7 = load float*, float** %v3.addr, align 8, !dbg !408
  call void @sub_v3_v3v3(float* %arraydecay7, float* %6, float* %7), !dbg !409
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !410
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %vec1, i64 0, i64 0, !dbg !411
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !412
  call void @cross_v3_v3v3(float* %arraydecay8, float* %arraydecay9, float* %arraydecay10), !dbg !413
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !414
  %call12 = call float @len_v3(float* %arraydecay11), !dbg !415
  %8 = load float, float* %len, align 4, !dbg !416
  %add = fadd float %8, %call12, !dbg !416
  store float %add, float* %len, align 4, !dbg !416
  %9 = load float, float* %len, align 4, !dbg !417
  %div = fdiv float %9, 2.000000e+00, !dbg !418
  ret float %div, !dbg !419
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !420 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !421, metadata !DIExpression()), !dbg !422
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !423, metadata !DIExpression()), !dbg !424
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !425, metadata !DIExpression()), !dbg !426
  %0 = load float*, float** %a.addr, align 8, !dbg !427
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !427
  %1 = load float, float* %arrayidx, align 4, !dbg !427
  %2 = load float*, float** %b.addr, align 8, !dbg !428
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !428
  %3 = load float, float* %arrayidx1, align 4, !dbg !428
  %sub = fsub float %1, %3, !dbg !429
  %4 = load float*, float** %r.addr, align 8, !dbg !430
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !430
  store float %sub, float* %arrayidx2, align 4, !dbg !431
  %5 = load float*, float** %a.addr, align 8, !dbg !432
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !432
  %6 = load float, float* %arrayidx3, align 4, !dbg !432
  %7 = load float*, float** %b.addr, align 8, !dbg !433
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !433
  %8 = load float, float* %arrayidx4, align 4, !dbg !433
  %sub5 = fsub float %6, %8, !dbg !434
  %9 = load float*, float** %r.addr, align 8, !dbg !435
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !435
  store float %sub5, float* %arrayidx6, align 4, !dbg !436
  %10 = load float*, float** %a.addr, align 8, !dbg !437
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !437
  %11 = load float, float* %arrayidx7, align 4, !dbg !437
  %12 = load float*, float** %b.addr, align 8, !dbg !438
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !438
  %13 = load float, float* %arrayidx8, align 4, !dbg !438
  %sub9 = fsub float %11, %13, !dbg !439
  %14 = load float*, float** %r.addr, align 8, !dbg !440
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !440
  store float %sub9, float* %arrayidx10, align 4, !dbg !441
  ret void, !dbg !442
}

; Function Attrs: noinline nounwind uwtable
define internal void @cross_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !443 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !444, metadata !DIExpression()), !dbg !445
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !446, metadata !DIExpression()), !dbg !447
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !448, metadata !DIExpression()), !dbg !449
  %0 = load float*, float** %a.addr, align 8, !dbg !450
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !450
  %1 = load float, float* %arrayidx, align 4, !dbg !450
  %2 = load float*, float** %b.addr, align 8, !dbg !451
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 2, !dbg !451
  %3 = load float, float* %arrayidx1, align 4, !dbg !451
  %mul = fmul float %1, %3, !dbg !452
  %4 = load float*, float** %a.addr, align 8, !dbg !453
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !453
  %5 = load float, float* %arrayidx2, align 4, !dbg !453
  %6 = load float*, float** %b.addr, align 8, !dbg !454
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !454
  %7 = load float, float* %arrayidx3, align 4, !dbg !454
  %mul4 = fmul float %5, %7, !dbg !455
  %sub = fsub float %mul, %mul4, !dbg !456
  %8 = load float*, float** %r.addr, align 8, !dbg !457
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !457
  store float %sub, float* %arrayidx5, align 4, !dbg !458
  %9 = load float*, float** %a.addr, align 8, !dbg !459
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 2, !dbg !459
  %10 = load float, float* %arrayidx6, align 4, !dbg !459
  %11 = load float*, float** %b.addr, align 8, !dbg !460
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 0, !dbg !460
  %12 = load float, float* %arrayidx7, align 4, !dbg !460
  %mul8 = fmul float %10, %12, !dbg !461
  %13 = load float*, float** %a.addr, align 8, !dbg !462
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 0, !dbg !462
  %14 = load float, float* %arrayidx9, align 4, !dbg !462
  %15 = load float*, float** %b.addr, align 8, !dbg !463
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 2, !dbg !463
  %16 = load float, float* %arrayidx10, align 4, !dbg !463
  %mul11 = fmul float %14, %16, !dbg !464
  %sub12 = fsub float %mul8, %mul11, !dbg !465
  %17 = load float*, float** %r.addr, align 8, !dbg !466
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 1, !dbg !466
  store float %sub12, float* %arrayidx13, align 4, !dbg !467
  %18 = load float*, float** %a.addr, align 8, !dbg !468
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 0, !dbg !468
  %19 = load float, float* %arrayidx14, align 4, !dbg !468
  %20 = load float*, float** %b.addr, align 8, !dbg !469
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 1, !dbg !469
  %21 = load float, float* %arrayidx15, align 4, !dbg !469
  %mul16 = fmul float %19, %21, !dbg !470
  %22 = load float*, float** %a.addr, align 8, !dbg !471
  %arrayidx17 = getelementptr inbounds float, float* %22, i64 1, !dbg !471
  %23 = load float, float* %arrayidx17, align 4, !dbg !471
  %24 = load float*, float** %b.addr, align 8, !dbg !472
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 0, !dbg !472
  %25 = load float, float* %arrayidx18, align 4, !dbg !472
  %mul19 = fmul float %23, %25, !dbg !473
  %sub20 = fsub float %mul16, %mul19, !dbg !474
  %26 = load float*, float** %r.addr, align 8, !dbg !475
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 2, !dbg !475
  store float %sub20, float* %arrayidx21, align 4, !dbg !476
  ret void, !dbg !477
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !478 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !481, metadata !DIExpression()), !dbg !482
  %0 = load float*, float** %a.addr, align 8, !dbg !483
  %1 = load float*, float** %a.addr, align 8, !dbg !484
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !485
  %call1 = call float @sqrtf(float %call) #5, !dbg !486
  ret float %call1, !dbg !487
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @area_tri_v3(float* %v1, float* %v2, float* %v3) #0 !dbg !488 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %vec1 = alloca [3 x float], align 4
  %vec2 = alloca [3 x float], align 4
  %n = alloca [3 x float], align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !491, metadata !DIExpression()), !dbg !492
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !493, metadata !DIExpression()), !dbg !494
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !495, metadata !DIExpression()), !dbg !496
  call void @llvm.dbg.declare(metadata [3 x float]* %vec1, metadata !497, metadata !DIExpression()), !dbg !498
  call void @llvm.dbg.declare(metadata [3 x float]* %vec2, metadata !499, metadata !DIExpression()), !dbg !500
  call void @llvm.dbg.declare(metadata [3 x float]* %n, metadata !501, metadata !DIExpression()), !dbg !502
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec1, i64 0, i64 0, !dbg !503
  %0 = load float*, float** %v3.addr, align 8, !dbg !504
  %1 = load float*, float** %v2.addr, align 8, !dbg !505
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !506
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !507
  %2 = load float*, float** %v1.addr, align 8, !dbg !508
  %3 = load float*, float** %v2.addr, align 8, !dbg !509
  call void @sub_v3_v3v3(float* %arraydecay1, float* %2, float* %3), !dbg !510
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !511
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %vec1, i64 0, i64 0, !dbg !512
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !513
  call void @cross_v3_v3v3(float* %arraydecay2, float* %arraydecay3, float* %arraydecay4), !dbg !514
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !515
  %call = call float @len_v3(float* %arraydecay5), !dbg !516
  %div = fdiv float %call, 2.000000e+00, !dbg !517
  ret float %div, !dbg !518
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @area_tri_signed_v3(float* %v1, float* %v2, float* %v3, float* %normal) #0 !dbg !519 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %normal.addr = alloca float*, align 8
  %area = alloca float, align 4
  %vec1 = alloca [3 x float], align 4
  %vec2 = alloca [3 x float], align 4
  %n = alloca [3 x float], align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !520, metadata !DIExpression()), !dbg !521
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !522, metadata !DIExpression()), !dbg !523
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !524, metadata !DIExpression()), !dbg !525
  store float* %normal, float** %normal.addr, align 8
  call void @llvm.dbg.declare(metadata float** %normal.addr, metadata !526, metadata !DIExpression()), !dbg !527
  call void @llvm.dbg.declare(metadata float* %area, metadata !528, metadata !DIExpression()), !dbg !529
  call void @llvm.dbg.declare(metadata [3 x float]* %vec1, metadata !530, metadata !DIExpression()), !dbg !531
  call void @llvm.dbg.declare(metadata [3 x float]* %vec2, metadata !532, metadata !DIExpression()), !dbg !533
  call void @llvm.dbg.declare(metadata [3 x float]* %n, metadata !534, metadata !DIExpression()), !dbg !535
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec1, i64 0, i64 0, !dbg !536
  %0 = load float*, float** %v3.addr, align 8, !dbg !537
  %1 = load float*, float** %v2.addr, align 8, !dbg !538
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !539
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !540
  %2 = load float*, float** %v1.addr, align 8, !dbg !541
  %3 = load float*, float** %v2.addr, align 8, !dbg !542
  call void @sub_v3_v3v3(float* %arraydecay1, float* %2, float* %3), !dbg !543
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !544
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %vec1, i64 0, i64 0, !dbg !545
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !546
  call void @cross_v3_v3v3(float* %arraydecay2, float* %arraydecay3, float* %arraydecay4), !dbg !547
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !548
  %call = call float @len_v3(float* %arraydecay5), !dbg !549
  %div = fdiv float %call, 2.000000e+00, !dbg !550
  store float %div, float* %area, align 4, !dbg !551
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !552
  %4 = load float*, float** %normal.addr, align 8, !dbg !554
  %call7 = call float @dot_v3v3(float* %arraydecay6, float* %4), !dbg !555
  %cmp = fcmp olt float %call7, 0.000000e+00, !dbg !556
  br i1 %cmp, label %if.then, label %if.end, !dbg !557

if.then:                                          ; preds = %entry
  %5 = load float, float* %area, align 4, !dbg !558
  %fneg = fneg float %5, !dbg !559
  store float %fneg, float* %area, align 4, !dbg !560
  br label %if.end, !dbg !561

if.end:                                           ; preds = %if.then, %entry
  %6 = load float, float* %area, align 4, !dbg !562
  ret float %6, !dbg !563
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !564 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !567, metadata !DIExpression()), !dbg !568
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !569, metadata !DIExpression()), !dbg !570
  %0 = load float*, float** %a.addr, align 8, !dbg !571
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !571
  %1 = load float, float* %arrayidx, align 4, !dbg !571
  %2 = load float*, float** %b.addr, align 8, !dbg !572
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !572
  %3 = load float, float* %arrayidx1, align 4, !dbg !572
  %mul = fmul float %1, %3, !dbg !573
  %4 = load float*, float** %a.addr, align 8, !dbg !574
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !574
  %5 = load float, float* %arrayidx2, align 4, !dbg !574
  %6 = load float*, float** %b.addr, align 8, !dbg !575
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !575
  %7 = load float, float* %arrayidx3, align 4, !dbg !575
  %mul4 = fmul float %5, %7, !dbg !576
  %add = fadd float %mul, %mul4, !dbg !577
  %8 = load float*, float** %a.addr, align 8, !dbg !578
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !578
  %9 = load float, float* %arrayidx5, align 4, !dbg !578
  %10 = load float*, float** %b.addr, align 8, !dbg !579
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !579
  %11 = load float, float* %arrayidx6, align 4, !dbg !579
  %mul7 = fmul float %9, %11, !dbg !580
  %add8 = fadd float %add, %mul7, !dbg !581
  ret float %add8, !dbg !582
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @area_poly_v3([3 x float]* %verts, i32 %nr) #0 !dbg !583 {
entry:
  %verts.addr = alloca [3 x float]*, align 8
  %nr.addr = alloca i32, align 4
  %n = alloca [3 x float], align 4
  store [3 x float]* %verts, [3 x float]** %verts.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %verts.addr, metadata !586, metadata !DIExpression()), !dbg !587
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !588, metadata !DIExpression()), !dbg !589
  call void @llvm.dbg.declare(metadata [3 x float]* %n, metadata !590, metadata !DIExpression()), !dbg !591
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !592
  %0 = load [3 x float]*, [3 x float]** %verts.addr, align 8, !dbg !593
  %1 = load i32, i32* %nr.addr, align 4, !dbg !594
  %call = call float @normal_poly_v3(float* %arraydecay, [3 x float]* %0, i32 %1), !dbg !595
  %mul = fmul float %call, 5.000000e-01, !dbg !596
  ret float %mul, !dbg !597
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @cross_poly_v2([2 x float]* %verts, i32 %nr) #0 !dbg !598 {
entry:
  %verts.addr = alloca [2 x float]*, align 8
  %nr.addr = alloca i32, align 4
  %a = alloca i32, align 4
  %cross = alloca float, align 4
  %co_curr = alloca float*, align 8
  %co_prev = alloca float*, align 8
  store [2 x float]* %verts, [2 x float]** %verts.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %verts.addr, metadata !605, metadata !DIExpression()), !dbg !606
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !607, metadata !DIExpression()), !dbg !608
  call void @llvm.dbg.declare(metadata i32* %a, metadata !609, metadata !DIExpression()), !dbg !610
  call void @llvm.dbg.declare(metadata float* %cross, metadata !611, metadata !DIExpression()), !dbg !612
  call void @llvm.dbg.declare(metadata float** %co_curr, metadata !613, metadata !DIExpression()), !dbg !614
  call void @llvm.dbg.declare(metadata float** %co_prev, metadata !615, metadata !DIExpression()), !dbg !616
  %0 = load [2 x float]*, [2 x float]** %verts.addr, align 8, !dbg !617
  %1 = load i32, i32* %nr.addr, align 4, !dbg !618
  %sub = sub i32 %1, 1, !dbg !619
  %idxprom = zext i32 %sub to i64, !dbg !617
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %0, i64 %idxprom, !dbg !617
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !617
  store float* %arraydecay, float** %co_prev, align 8, !dbg !620
  %2 = load [2 x float]*, [2 x float]** %verts.addr, align 8, !dbg !621
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %2, i64 0, !dbg !621
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx1, i64 0, i64 0, !dbg !621
  store float* %arraydecay2, float** %co_curr, align 8, !dbg !622
  store float 0.000000e+00, float* %cross, align 4, !dbg !623
  store i32 0, i32* %a, align 4, !dbg !624
  br label %for.cond, !dbg !626

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %a, align 4, !dbg !627
  %4 = load i32, i32* %nr.addr, align 4, !dbg !629
  %cmp = icmp ult i32 %3, %4, !dbg !630
  br i1 %cmp, label %for.body, label %for.end, !dbg !631

for.body:                                         ; preds = %for.cond
  %5 = load float*, float** %co_curr, align 8, !dbg !632
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 0, !dbg !632
  %6 = load float, float* %arrayidx3, align 4, !dbg !632
  %7 = load float*, float** %co_prev, align 8, !dbg !634
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 0, !dbg !634
  %8 = load float, float* %arrayidx4, align 4, !dbg !634
  %sub5 = fsub float %6, %8, !dbg !635
  %9 = load float*, float** %co_curr, align 8, !dbg !636
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !636
  %10 = load float, float* %arrayidx6, align 4, !dbg !636
  %11 = load float*, float** %co_prev, align 8, !dbg !637
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 1, !dbg !637
  %12 = load float, float* %arrayidx7, align 4, !dbg !637
  %add = fadd float %10, %12, !dbg !638
  %mul = fmul float %sub5, %add, !dbg !639
  %13 = load float, float* %cross, align 4, !dbg !640
  %add8 = fadd float %13, %mul, !dbg !640
  store float %add8, float* %cross, align 4, !dbg !640
  %14 = load float*, float** %co_curr, align 8, !dbg !641
  store float* %14, float** %co_prev, align 8, !dbg !642
  %15 = load float*, float** %co_curr, align 8, !dbg !643
  %add.ptr = getelementptr inbounds float, float* %15, i64 2, !dbg !643
  store float* %add.ptr, float** %co_curr, align 8, !dbg !643
  br label %for.inc, !dbg !644

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %a, align 4, !dbg !645
  %inc = add i32 %16, 1, !dbg !645
  store i32 %inc, i32* %a, align 4, !dbg !645
  br label %for.cond, !dbg !646, !llvm.loop !647

for.end:                                          ; preds = %for.cond
  %17 = load float, float* %cross, align 4, !dbg !649
  ret float %17, !dbg !650
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @area_poly_v2([2 x float]* %verts, i32 %nr) #0 !dbg !651 {
entry:
  %verts.addr = alloca [2 x float]*, align 8
  %nr.addr = alloca i32, align 4
  store [2 x float]* %verts, [2 x float]** %verts.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %verts.addr, metadata !652, metadata !DIExpression()), !dbg !653
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !654, metadata !DIExpression()), !dbg !655
  %0 = load [2 x float]*, [2 x float]** %verts.addr, align 8, !dbg !656
  %1 = load i32, i32* %nr.addr, align 4, !dbg !657
  %call = call float @cross_poly_v2([2 x float]* %0, i32 %1), !dbg !658
  %mul = fmul float 5.000000e-01, %call, !dbg !659
  %2 = call float @llvm.fabs.f32(float %mul), !dbg !660
  ret float %2, !dbg !661
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define dso_local float @cotangent_tri_weight_v3(float* %v1, float* %v2, float* %v3) #0 !dbg !662 {
entry:
  %retval = alloca float, align 4
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %a = alloca [3 x float], align 4
  %b = alloca [3 x float], align 4
  %c = alloca [3 x float], align 4
  %c_len = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !663, metadata !DIExpression()), !dbg !664
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !665, metadata !DIExpression()), !dbg !666
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !667, metadata !DIExpression()), !dbg !668
  call void @llvm.dbg.declare(metadata [3 x float]* %a, metadata !669, metadata !DIExpression()), !dbg !670
  call void @llvm.dbg.declare(metadata [3 x float]* %b, metadata !671, metadata !DIExpression()), !dbg !672
  call void @llvm.dbg.declare(metadata [3 x float]* %c, metadata !673, metadata !DIExpression()), !dbg !674
  call void @llvm.dbg.declare(metadata float* %c_len, metadata !675, metadata !DIExpression()), !dbg !676
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !677
  %0 = load float*, float** %v2.addr, align 8, !dbg !678
  %1 = load float*, float** %v1.addr, align 8, !dbg !679
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !680
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 0, !dbg !681
  %2 = load float*, float** %v3.addr, align 8, !dbg !682
  %3 = load float*, float** %v1.addr, align 8, !dbg !683
  call void @sub_v3_v3v3(float* %arraydecay1, float* %2, float* %3), !dbg !684
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 0, !dbg !685
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !686
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 0, !dbg !687
  call void @cross_v3_v3v3(float* %arraydecay2, float* %arraydecay3, float* %arraydecay4), !dbg !688
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 0, !dbg !689
  %call = call float @len_v3(float* %arraydecay5), !dbg !690
  store float %call, float* %c_len, align 4, !dbg !691
  %4 = load float, float* %c_len, align 4, !dbg !692
  %cmp = fcmp ogt float %4, 0x3E80000000000000, !dbg !694
  br i1 %cmp, label %if.then, label %if.else, !dbg !695

if.then:                                          ; preds = %entry
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !696
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 0, !dbg !698
  %call8 = call float @dot_v3v3(float* %arraydecay6, float* %arraydecay7), !dbg !699
  %5 = load float, float* %c_len, align 4, !dbg !700
  %div = fdiv float %call8, %5, !dbg !701
  store float %div, float* %retval, align 4, !dbg !702
  br label %return, !dbg !702

if.else:                                          ; preds = %entry
  store float 0.000000e+00, float* %retval, align 4, !dbg !703
  br label %return, !dbg !703

return:                                           ; preds = %if.else, %if.then
  %6 = load float, float* %retval, align 4, !dbg !705
  ret float %6, !dbg !705
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @plane_from_point_normal_v3(float* %r_plane, float* %plane_co, float* %plane_no) #0 !dbg !706 {
entry:
  %r_plane.addr = alloca float*, align 8
  %plane_co.addr = alloca float*, align 8
  %plane_no.addr = alloca float*, align 8
  store float* %r_plane, float** %r_plane.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_plane.addr, metadata !707, metadata !DIExpression()), !dbg !708
  store float* %plane_co, float** %plane_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane_co.addr, metadata !709, metadata !DIExpression()), !dbg !710
  store float* %plane_no, float** %plane_no.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane_no.addr, metadata !711, metadata !DIExpression()), !dbg !712
  %0 = load float*, float** %r_plane.addr, align 8, !dbg !713
  %1 = load float*, float** %plane_no.addr, align 8, !dbg !714
  call void @copy_v3_v3(float* %0, float* %1), !dbg !715
  %2 = load float*, float** %r_plane.addr, align 8, !dbg !716
  %3 = load float*, float** %plane_co.addr, align 8, !dbg !717
  %call = call float @dot_v3v3(float* %2, float* %3), !dbg !718
  %fneg = fneg float %call, !dbg !719
  %4 = load float*, float** %r_plane.addr, align 8, !dbg !720
  %arrayidx = getelementptr inbounds float, float* %4, i64 3, !dbg !720
  store float %fneg, float* %arrayidx, align 4, !dbg !721
  ret void, !dbg !722
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !723 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !726, metadata !DIExpression()), !dbg !727
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !728, metadata !DIExpression()), !dbg !729
  %0 = load float*, float** %a.addr, align 8, !dbg !730
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !730
  %1 = load float, float* %arrayidx, align 4, !dbg !730
  %2 = load float*, float** %r.addr, align 8, !dbg !731
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !731
  store float %1, float* %arrayidx1, align 4, !dbg !732
  %3 = load float*, float** %a.addr, align 8, !dbg !733
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !733
  %4 = load float, float* %arrayidx2, align 4, !dbg !733
  %5 = load float*, float** %r.addr, align 8, !dbg !734
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !734
  store float %4, float* %arrayidx3, align 4, !dbg !735
  %6 = load float*, float** %a.addr, align 8, !dbg !736
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !736
  %7 = load float, float* %arrayidx4, align 4, !dbg !736
  %8 = load float*, float** %r.addr, align 8, !dbg !737
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !737
  store float %7, float* %arrayidx5, align 4, !dbg !738
  ret void, !dbg !739
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @plane_to_point_normal_v3(float* %plane, float* %r_plane_co, float* %r_plane_no) #0 !dbg !740 {
entry:
  %plane.addr = alloca float*, align 8
  %r_plane_co.addr = alloca float*, align 8
  %r_plane_no.addr = alloca float*, align 8
  %length = alloca float, align 4
  store float* %plane, float** %plane.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane.addr, metadata !743, metadata !DIExpression()), !dbg !744
  store float* %r_plane_co, float** %r_plane_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_plane_co.addr, metadata !745, metadata !DIExpression()), !dbg !746
  store float* %r_plane_no, float** %r_plane_no.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_plane_no.addr, metadata !747, metadata !DIExpression()), !dbg !748
  call void @llvm.dbg.declare(metadata float* %length, metadata !749, metadata !DIExpression()), !dbg !750
  %0 = load float*, float** %r_plane_no.addr, align 8, !dbg !751
  %1 = load float*, float** %plane.addr, align 8, !dbg !752
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !753
  store float %call, float* %length, align 4, !dbg !750
  %2 = load float*, float** %r_plane_co.addr, align 8, !dbg !754
  %3 = load float*, float** %r_plane_no.addr, align 8, !dbg !755
  %4 = load float*, float** %r_plane_no.addr, align 8, !dbg !756
  %5 = load float*, float** %plane.addr, align 8, !dbg !757
  %arrayidx = getelementptr inbounds float, float* %5, i64 3, !dbg !757
  %6 = load float, float* %arrayidx, align 4, !dbg !757
  %fneg = fneg float %6, !dbg !758
  %7 = load float, float* %length, align 4, !dbg !759
  %div = fdiv float %fneg, %7, !dbg !760
  %sub = fsub float %div, 1.000000e+00, !dbg !761
  call void @madd_v3_v3v3fl(float* %2, float* %3, float* %4, float %sub), !dbg !762
  ret void, !dbg !763
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !764 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !767, metadata !DIExpression()), !dbg !768
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !769, metadata !DIExpression()), !dbg !770
  call void @llvm.dbg.declare(metadata float* %d, metadata !771, metadata !DIExpression()), !dbg !772
  %0 = load float*, float** %a.addr, align 8, !dbg !773
  %1 = load float*, float** %a.addr, align 8, !dbg !774
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !775
  store float %call, float* %d, align 4, !dbg !772
  %2 = load float, float* %d, align 4, !dbg !776
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !778
  br i1 %cmp, label %if.then, label %if.else, !dbg !779

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !780
  %call1 = call float @sqrtf(float %3) #5, !dbg !782
  store float %call1, float* %d, align 4, !dbg !783
  %4 = load float*, float** %r.addr, align 8, !dbg !784
  %5 = load float*, float** %a.addr, align 8, !dbg !785
  %6 = load float, float* %d, align 4, !dbg !786
  %div = fdiv float 1.000000e+00, %6, !dbg !787
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !788
  br label %if.end, !dbg !789

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !790
  call void @zero_v3(float* %7), !dbg !792
  store float 0.000000e+00, float* %d, align 4, !dbg !793
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !794
  ret float %8, !dbg !795
}

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3v3fl(float* %r, float* %a, float* %b, float %f) #0 !dbg !796 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !799, metadata !DIExpression()), !dbg !800
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !801, metadata !DIExpression()), !dbg !802
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !803, metadata !DIExpression()), !dbg !804
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !805, metadata !DIExpression()), !dbg !806
  %0 = load float*, float** %a.addr, align 8, !dbg !807
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !807
  %1 = load float, float* %arrayidx, align 4, !dbg !807
  %2 = load float*, float** %b.addr, align 8, !dbg !808
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !808
  %3 = load float, float* %arrayidx1, align 4, !dbg !808
  %4 = load float, float* %f.addr, align 4, !dbg !809
  %mul = fmul float %3, %4, !dbg !810
  %add = fadd float %1, %mul, !dbg !811
  %5 = load float*, float** %r.addr, align 8, !dbg !812
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 0, !dbg !812
  store float %add, float* %arrayidx2, align 4, !dbg !813
  %6 = load float*, float** %a.addr, align 8, !dbg !814
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !814
  %7 = load float, float* %arrayidx3, align 4, !dbg !814
  %8 = load float*, float** %b.addr, align 8, !dbg !815
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !815
  %9 = load float, float* %arrayidx4, align 4, !dbg !815
  %10 = load float, float* %f.addr, align 4, !dbg !816
  %mul5 = fmul float %9, %10, !dbg !817
  %add6 = fadd float %7, %mul5, !dbg !818
  %11 = load float*, float** %r.addr, align 8, !dbg !819
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 1, !dbg !819
  store float %add6, float* %arrayidx7, align 4, !dbg !820
  %12 = load float*, float** %a.addr, align 8, !dbg !821
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !821
  %13 = load float, float* %arrayidx8, align 4, !dbg !821
  %14 = load float*, float** %b.addr, align 8, !dbg !822
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 2, !dbg !822
  %15 = load float, float* %arrayidx9, align 4, !dbg !822
  %16 = load float, float* %f.addr, align 4, !dbg !823
  %mul10 = fmul float %15, %16, !dbg !824
  %add11 = fadd float %13, %mul10, !dbg !825
  %17 = load float*, float** %r.addr, align 8, !dbg !826
  %arrayidx12 = getelementptr inbounds float, float* %17, i64 2, !dbg !826
  store float %add11, float* %arrayidx12, align 4, !dbg !827
  ret void, !dbg !828
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @volume_tetrahedron_v3(float* %v1, float* %v2, float* %v3, float* %v4) #0 !dbg !829 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  %m = alloca [3 x [3 x float]], align 16
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !830, metadata !DIExpression()), !dbg !831
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !832, metadata !DIExpression()), !dbg !833
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !834, metadata !DIExpression()), !dbg !835
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !836, metadata !DIExpression()), !dbg !837
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %m, metadata !838, metadata !DIExpression()), !dbg !841
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %m, i64 0, i64 0, !dbg !842
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !842
  %0 = load float*, float** %v1.addr, align 8, !dbg !843
  %1 = load float*, float** %v2.addr, align 8, !dbg !844
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !845
  %arrayidx1 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %m, i64 0, i64 1, !dbg !846
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx1, i64 0, i64 0, !dbg !846
  %2 = load float*, float** %v2.addr, align 8, !dbg !847
  %3 = load float*, float** %v3.addr, align 8, !dbg !848
  call void @sub_v3_v3v3(float* %arraydecay2, float* %2, float* %3), !dbg !849
  %arrayidx3 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %m, i64 0, i64 2, !dbg !850
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx3, i64 0, i64 0, !dbg !850
  %4 = load float*, float** %v3.addr, align 8, !dbg !851
  %5 = load float*, float** %v4.addr, align 8, !dbg !852
  call void @sub_v3_v3v3(float* %arraydecay4, float* %4, float* %5), !dbg !853
  %arraydecay5 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %m, i64 0, i64 0, !dbg !854
  %call = call float @determinant_m3_array([3 x float]* %arraydecay5), !dbg !855
  %6 = call float @llvm.fabs.f32(float %call), !dbg !856
  %div = fdiv float %6, 6.000000e+00, !dbg !857
  ret float %div, !dbg !858
}

declare dso_local float @determinant_m3_array([3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local float @volume_tetrahedron_signed_v3(float* %v1, float* %v2, float* %v3, float* %v4) #0 !dbg !859 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  %m = alloca [3 x [3 x float]], align 16
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !860, metadata !DIExpression()), !dbg !861
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !862, metadata !DIExpression()), !dbg !863
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !864, metadata !DIExpression()), !dbg !865
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !866, metadata !DIExpression()), !dbg !867
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %m, metadata !868, metadata !DIExpression()), !dbg !869
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %m, i64 0, i64 0, !dbg !870
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !870
  %0 = load float*, float** %v1.addr, align 8, !dbg !871
  %1 = load float*, float** %v2.addr, align 8, !dbg !872
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !873
  %arrayidx1 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %m, i64 0, i64 1, !dbg !874
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx1, i64 0, i64 0, !dbg !874
  %2 = load float*, float** %v2.addr, align 8, !dbg !875
  %3 = load float*, float** %v3.addr, align 8, !dbg !876
  call void @sub_v3_v3v3(float* %arraydecay2, float* %2, float* %3), !dbg !877
  %arrayidx3 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %m, i64 0, i64 2, !dbg !878
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx3, i64 0, i64 0, !dbg !878
  %4 = load float*, float** %v3.addr, align 8, !dbg !879
  %5 = load float*, float** %v4.addr, align 8, !dbg !880
  call void @sub_v3_v3v3(float* %arraydecay4, float* %4, float* %5), !dbg !881
  %arraydecay5 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %m, i64 0, i64 0, !dbg !882
  %call = call float @determinant_m3_array([3 x float]* %arraydecay5), !dbg !883
  %div = fdiv float %call, 6.000000e+00, !dbg !884
  ret float %div, !dbg !885
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @dist_squared_to_line_v2(float* %p, float* %l1, float* %l2) #0 !dbg !886 {
entry:
  %retval = alloca float, align 4
  %p.addr = alloca float*, align 8
  %l1.addr = alloca float*, align 8
  %l2.addr = alloca float*, align 8
  %a = alloca [2 x float], align 4
  %deler = alloca float, align 4
  %f = alloca float, align 4
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !887, metadata !DIExpression()), !dbg !888
  store float* %l1, float** %l1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1.addr, metadata !889, metadata !DIExpression()), !dbg !890
  store float* %l2, float** %l2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2.addr, metadata !891, metadata !DIExpression()), !dbg !892
  call void @llvm.dbg.declare(metadata [2 x float]* %a, metadata !893, metadata !DIExpression()), !dbg !895
  call void @llvm.dbg.declare(metadata float* %deler, metadata !896, metadata !DIExpression()), !dbg !897
  %0 = load float*, float** %l1.addr, align 8, !dbg !898
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !898
  %1 = load float, float* %arrayidx, align 4, !dbg !898
  %2 = load float*, float** %l2.addr, align 8, !dbg !899
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !899
  %3 = load float, float* %arrayidx1, align 4, !dbg !899
  %sub = fsub float %1, %3, !dbg !900
  %arrayidx2 = getelementptr inbounds [2 x float], [2 x float]* %a, i64 0, i64 0, !dbg !901
  store float %sub, float* %arrayidx2, align 4, !dbg !902
  %4 = load float*, float** %l2.addr, align 8, !dbg !903
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 0, !dbg !903
  %5 = load float, float* %arrayidx3, align 4, !dbg !903
  %6 = load float*, float** %l1.addr, align 8, !dbg !904
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 0, !dbg !904
  %7 = load float, float* %arrayidx4, align 4, !dbg !904
  %sub5 = fsub float %5, %7, !dbg !905
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %a, i64 0, i64 1, !dbg !906
  store float %sub5, float* %arrayidx6, align 4, !dbg !907
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %a, i64 0, i64 0, !dbg !908
  %call = call float @len_squared_v2(float* %arraydecay), !dbg !909
  store float %call, float* %deler, align 4, !dbg !910
  %8 = load float, float* %deler, align 4, !dbg !911
  %cmp = fcmp une float %8, 0.000000e+00, !dbg !913
  br i1 %cmp, label %if.then, label %if.else, !dbg !914

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %f, metadata !915, metadata !DIExpression()), !dbg !917
  %9 = load float*, float** %p.addr, align 8, !dbg !918
  %arrayidx7 = getelementptr inbounds float, float* %9, i64 0, !dbg !918
  %10 = load float, float* %arrayidx7, align 4, !dbg !918
  %11 = load float*, float** %l1.addr, align 8, !dbg !919
  %arrayidx8 = getelementptr inbounds float, float* %11, i64 0, !dbg !919
  %12 = load float, float* %arrayidx8, align 4, !dbg !919
  %sub9 = fsub float %10, %12, !dbg !920
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %a, i64 0, i64 0, !dbg !921
  %13 = load float, float* %arrayidx10, align 4, !dbg !921
  %mul = fmul float %sub9, %13, !dbg !922
  %14 = load float*, float** %p.addr, align 8, !dbg !923
  %arrayidx11 = getelementptr inbounds float, float* %14, i64 1, !dbg !923
  %15 = load float, float* %arrayidx11, align 4, !dbg !923
  %16 = load float*, float** %l1.addr, align 8, !dbg !924
  %arrayidx12 = getelementptr inbounds float, float* %16, i64 1, !dbg !924
  %17 = load float, float* %arrayidx12, align 4, !dbg !924
  %sub13 = fsub float %15, %17, !dbg !925
  %arrayidx14 = getelementptr inbounds [2 x float], [2 x float]* %a, i64 0, i64 1, !dbg !926
  %18 = load float, float* %arrayidx14, align 4, !dbg !926
  %mul15 = fmul float %sub13, %18, !dbg !927
  %add = fadd float %mul, %mul15, !dbg !928
  store float %add, float* %f, align 4, !dbg !917
  %19 = load float, float* %f, align 4, !dbg !929
  %20 = load float, float* %f, align 4, !dbg !930
  %mul16 = fmul float %19, %20, !dbg !931
  %21 = load float, float* %deler, align 4, !dbg !932
  %div = fdiv float %mul16, %21, !dbg !933
  store float %div, float* %retval, align 4, !dbg !934
  br label %return, !dbg !934

if.else:                                          ; preds = %entry
  store float 0.000000e+00, float* %retval, align 4, !dbg !935
  br label %return, !dbg !935

return:                                           ; preds = %if.else, %if.then
  %22 = load float, float* %retval, align 4, !dbg !937
  ret float %22, !dbg !937
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v2(float* %v) #0 !dbg !938 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !939, metadata !DIExpression()), !dbg !940
  %0 = load float*, float** %v.addr, align 8, !dbg !941
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !941
  %1 = load float, float* %arrayidx, align 4, !dbg !941
  %2 = load float*, float** %v.addr, align 8, !dbg !942
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !942
  %3 = load float, float* %arrayidx1, align 4, !dbg !942
  %mul = fmul float %1, %3, !dbg !943
  %4 = load float*, float** %v.addr, align 8, !dbg !944
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !944
  %5 = load float, float* %arrayidx2, align 4, !dbg !944
  %6 = load float*, float** %v.addr, align 8, !dbg !945
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !945
  %7 = load float, float* %arrayidx3, align 4, !dbg !945
  %mul4 = fmul float %5, %7, !dbg !946
  %add = fadd float %mul, %mul4, !dbg !947
  ret float %add, !dbg !948
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @dist_to_line_v2(float* %p, float* %l1, float* %l2) #0 !dbg !949 {
entry:
  %retval = alloca float, align 4
  %p.addr = alloca float*, align 8
  %l1.addr = alloca float*, align 8
  %l2.addr = alloca float*, align 8
  %a = alloca [2 x float], align 4
  %deler = alloca float, align 4
  %f = alloca float, align 4
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !950, metadata !DIExpression()), !dbg !951
  store float* %l1, float** %l1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1.addr, metadata !952, metadata !DIExpression()), !dbg !953
  store float* %l2, float** %l2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2.addr, metadata !954, metadata !DIExpression()), !dbg !955
  call void @llvm.dbg.declare(metadata [2 x float]* %a, metadata !956, metadata !DIExpression()), !dbg !957
  call void @llvm.dbg.declare(metadata float* %deler, metadata !958, metadata !DIExpression()), !dbg !959
  %0 = load float*, float** %l1.addr, align 8, !dbg !960
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !960
  %1 = load float, float* %arrayidx, align 4, !dbg !960
  %2 = load float*, float** %l2.addr, align 8, !dbg !961
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !961
  %3 = load float, float* %arrayidx1, align 4, !dbg !961
  %sub = fsub float %1, %3, !dbg !962
  %arrayidx2 = getelementptr inbounds [2 x float], [2 x float]* %a, i64 0, i64 0, !dbg !963
  store float %sub, float* %arrayidx2, align 4, !dbg !964
  %4 = load float*, float** %l2.addr, align 8, !dbg !965
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 0, !dbg !965
  %5 = load float, float* %arrayidx3, align 4, !dbg !965
  %6 = load float*, float** %l1.addr, align 8, !dbg !966
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 0, !dbg !966
  %7 = load float, float* %arrayidx4, align 4, !dbg !966
  %sub5 = fsub float %5, %7, !dbg !967
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %a, i64 0, i64 1, !dbg !968
  store float %sub5, float* %arrayidx6, align 4, !dbg !969
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %a, i64 0, i64 0, !dbg !970
  %call = call float @len_squared_v2(float* %arraydecay), !dbg !971
  store float %call, float* %deler, align 4, !dbg !972
  %8 = load float, float* %deler, align 4, !dbg !973
  %cmp = fcmp une float %8, 0.000000e+00, !dbg !975
  br i1 %cmp, label %if.then, label %if.else, !dbg !976

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %f, metadata !977, metadata !DIExpression()), !dbg !979
  %9 = load float*, float** %p.addr, align 8, !dbg !980
  %arrayidx7 = getelementptr inbounds float, float* %9, i64 0, !dbg !980
  %10 = load float, float* %arrayidx7, align 4, !dbg !980
  %11 = load float*, float** %l1.addr, align 8, !dbg !981
  %arrayidx8 = getelementptr inbounds float, float* %11, i64 0, !dbg !981
  %12 = load float, float* %arrayidx8, align 4, !dbg !981
  %sub9 = fsub float %10, %12, !dbg !982
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %a, i64 0, i64 0, !dbg !983
  %13 = load float, float* %arrayidx10, align 4, !dbg !983
  %mul = fmul float %sub9, %13, !dbg !984
  %14 = load float*, float** %p.addr, align 8, !dbg !985
  %arrayidx11 = getelementptr inbounds float, float* %14, i64 1, !dbg !985
  %15 = load float, float* %arrayidx11, align 4, !dbg !985
  %16 = load float*, float** %l1.addr, align 8, !dbg !986
  %arrayidx12 = getelementptr inbounds float, float* %16, i64 1, !dbg !986
  %17 = load float, float* %arrayidx12, align 4, !dbg !986
  %sub13 = fsub float %15, %17, !dbg !987
  %arrayidx14 = getelementptr inbounds [2 x float], [2 x float]* %a, i64 0, i64 1, !dbg !988
  %18 = load float, float* %arrayidx14, align 4, !dbg !988
  %mul15 = fmul float %sub13, %18, !dbg !989
  %add = fadd float %mul, %mul15, !dbg !990
  store float %add, float* %f, align 4, !dbg !979
  %19 = load float, float* %f, align 4, !dbg !991
  %20 = call float @llvm.fabs.f32(float %19), !dbg !992
  %21 = load float, float* %deler, align 4, !dbg !993
  %call16 = call float @sqrtf(float %21) #5, !dbg !994
  %div = fdiv float %20, %call16, !dbg !995
  store float %div, float* %retval, align 4, !dbg !996
  br label %return, !dbg !996

if.else:                                          ; preds = %entry
  store float 0.000000e+00, float* %retval, align 4, !dbg !997
  br label %return, !dbg !997

return:                                           ; preds = %if.else, %if.then
  %22 = load float, float* %retval, align 4, !dbg !999
  ret float %22, !dbg !999
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #3

; Function Attrs: noinline nounwind uwtable
define dso_local float @dist_squared_to_line_segment_v2(float* %p, float* %l1, float* %l2) #0 !dbg !1000 {
entry:
  %retval = alloca float, align 4
  %p.addr = alloca float*, align 8
  %l1.addr = alloca float*, align 8
  %l2.addr = alloca float*, align 8
  %lambda = alloca float, align 4
  %rc = alloca [2 x float], align 4
  %pt = alloca [2 x float], align 4
  %len = alloca float, align 4
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !1001, metadata !DIExpression()), !dbg !1002
  store float* %l1, float** %l1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1.addr, metadata !1003, metadata !DIExpression()), !dbg !1004
  store float* %l2, float** %l2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2.addr, metadata !1005, metadata !DIExpression()), !dbg !1006
  call void @llvm.dbg.declare(metadata float* %lambda, metadata !1007, metadata !DIExpression()), !dbg !1008
  call void @llvm.dbg.declare(metadata [2 x float]* %rc, metadata !1009, metadata !DIExpression()), !dbg !1010
  call void @llvm.dbg.declare(metadata [2 x float]* %pt, metadata !1011, metadata !DIExpression()), !dbg !1012
  call void @llvm.dbg.declare(metadata float* %len, metadata !1013, metadata !DIExpression()), !dbg !1014
  %0 = load float*, float** %l2.addr, align 8, !dbg !1015
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !1015
  %1 = load float, float* %arrayidx, align 4, !dbg !1015
  %2 = load float*, float** %l1.addr, align 8, !dbg !1016
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !1016
  %3 = load float, float* %arrayidx1, align 4, !dbg !1016
  %sub = fsub float %1, %3, !dbg !1017
  %arrayidx2 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 0, !dbg !1018
  store float %sub, float* %arrayidx2, align 4, !dbg !1019
  %4 = load float*, float** %l2.addr, align 8, !dbg !1020
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 1, !dbg !1020
  %5 = load float, float* %arrayidx3, align 4, !dbg !1020
  %6 = load float*, float** %l1.addr, align 8, !dbg !1021
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 1, !dbg !1021
  %7 = load float, float* %arrayidx4, align 4, !dbg !1021
  %sub5 = fsub float %5, %7, !dbg !1022
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 1, !dbg !1023
  store float %sub5, float* %arrayidx6, align 4, !dbg !1024
  %arrayidx7 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 0, !dbg !1025
  %8 = load float, float* %arrayidx7, align 4, !dbg !1025
  %arrayidx8 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 0, !dbg !1026
  %9 = load float, float* %arrayidx8, align 4, !dbg !1026
  %mul = fmul float %8, %9, !dbg !1027
  %arrayidx9 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 1, !dbg !1028
  %10 = load float, float* %arrayidx9, align 4, !dbg !1028
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 1, !dbg !1029
  %11 = load float, float* %arrayidx10, align 4, !dbg !1029
  %mul11 = fmul float %10, %11, !dbg !1030
  %add = fadd float %mul, %mul11, !dbg !1031
  store float %add, float* %len, align 4, !dbg !1032
  %12 = load float, float* %len, align 4, !dbg !1033
  %cmp = fcmp oeq float %12, 0.000000e+00, !dbg !1035
  br i1 %cmp, label %if.then, label %if.end, !dbg !1036

if.then:                                          ; preds = %entry
  %13 = load float*, float** %p.addr, align 8, !dbg !1037
  %arrayidx12 = getelementptr inbounds float, float* %13, i64 0, !dbg !1037
  %14 = load float, float* %arrayidx12, align 4, !dbg !1037
  %15 = load float*, float** %l1.addr, align 8, !dbg !1039
  %arrayidx13 = getelementptr inbounds float, float* %15, i64 0, !dbg !1039
  %16 = load float, float* %arrayidx13, align 4, !dbg !1039
  %sub14 = fsub float %14, %16, !dbg !1040
  %arrayidx15 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 0, !dbg !1041
  store float %sub14, float* %arrayidx15, align 4, !dbg !1042
  %17 = load float*, float** %p.addr, align 8, !dbg !1043
  %arrayidx16 = getelementptr inbounds float, float* %17, i64 1, !dbg !1043
  %18 = load float, float* %arrayidx16, align 4, !dbg !1043
  %19 = load float*, float** %l1.addr, align 8, !dbg !1044
  %arrayidx17 = getelementptr inbounds float, float* %19, i64 1, !dbg !1044
  %20 = load float, float* %arrayidx17, align 4, !dbg !1044
  %sub18 = fsub float %18, %20, !dbg !1045
  %arrayidx19 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 1, !dbg !1046
  store float %sub18, float* %arrayidx19, align 4, !dbg !1047
  %arrayidx20 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 0, !dbg !1048
  %21 = load float, float* %arrayidx20, align 4, !dbg !1048
  %arrayidx21 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 0, !dbg !1049
  %22 = load float, float* %arrayidx21, align 4, !dbg !1049
  %mul22 = fmul float %21, %22, !dbg !1050
  %arrayidx23 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 1, !dbg !1051
  %23 = load float, float* %arrayidx23, align 4, !dbg !1051
  %arrayidx24 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 1, !dbg !1052
  %24 = load float, float* %arrayidx24, align 4, !dbg !1052
  %mul25 = fmul float %23, %24, !dbg !1053
  %add26 = fadd float %mul22, %mul25, !dbg !1054
  store float %add26, float* %retval, align 4, !dbg !1055
  br label %return, !dbg !1055

if.end:                                           ; preds = %entry
  %arrayidx27 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 0, !dbg !1056
  %25 = load float, float* %arrayidx27, align 4, !dbg !1056
  %26 = load float*, float** %p.addr, align 8, !dbg !1057
  %arrayidx28 = getelementptr inbounds float, float* %26, i64 0, !dbg !1057
  %27 = load float, float* %arrayidx28, align 4, !dbg !1057
  %28 = load float*, float** %l1.addr, align 8, !dbg !1058
  %arrayidx29 = getelementptr inbounds float, float* %28, i64 0, !dbg !1058
  %29 = load float, float* %arrayidx29, align 4, !dbg !1058
  %sub30 = fsub float %27, %29, !dbg !1059
  %mul31 = fmul float %25, %sub30, !dbg !1060
  %arrayidx32 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 1, !dbg !1061
  %30 = load float, float* %arrayidx32, align 4, !dbg !1061
  %31 = load float*, float** %p.addr, align 8, !dbg !1062
  %arrayidx33 = getelementptr inbounds float, float* %31, i64 1, !dbg !1062
  %32 = load float, float* %arrayidx33, align 4, !dbg !1062
  %33 = load float*, float** %l1.addr, align 8, !dbg !1063
  %arrayidx34 = getelementptr inbounds float, float* %33, i64 1, !dbg !1063
  %34 = load float, float* %arrayidx34, align 4, !dbg !1063
  %sub35 = fsub float %32, %34, !dbg !1064
  %mul36 = fmul float %30, %sub35, !dbg !1065
  %add37 = fadd float %mul31, %mul36, !dbg !1066
  %35 = load float, float* %len, align 4, !dbg !1067
  %div = fdiv float %add37, %35, !dbg !1068
  store float %div, float* %lambda, align 4, !dbg !1069
  %36 = load float, float* %lambda, align 4, !dbg !1070
  %cmp38 = fcmp ole float %36, 0.000000e+00, !dbg !1072
  br i1 %cmp38, label %if.then39, label %if.else, !dbg !1073

if.then39:                                        ; preds = %if.end
  %37 = load float*, float** %l1.addr, align 8, !dbg !1074
  %arrayidx40 = getelementptr inbounds float, float* %37, i64 0, !dbg !1074
  %38 = load float, float* %arrayidx40, align 4, !dbg !1074
  %arrayidx41 = getelementptr inbounds [2 x float], [2 x float]* %pt, i64 0, i64 0, !dbg !1076
  store float %38, float* %arrayidx41, align 4, !dbg !1077
  %39 = load float*, float** %l1.addr, align 8, !dbg !1078
  %arrayidx42 = getelementptr inbounds float, float* %39, i64 1, !dbg !1078
  %40 = load float, float* %arrayidx42, align 4, !dbg !1078
  %arrayidx43 = getelementptr inbounds [2 x float], [2 x float]* %pt, i64 0, i64 1, !dbg !1079
  store float %40, float* %arrayidx43, align 4, !dbg !1080
  br label %if.end62, !dbg !1081

if.else:                                          ; preds = %if.end
  %41 = load float, float* %lambda, align 4, !dbg !1082
  %cmp44 = fcmp oge float %41, 1.000000e+00, !dbg !1084
  br i1 %cmp44, label %if.then45, label %if.else50, !dbg !1085

if.then45:                                        ; preds = %if.else
  %42 = load float*, float** %l2.addr, align 8, !dbg !1086
  %arrayidx46 = getelementptr inbounds float, float* %42, i64 0, !dbg !1086
  %43 = load float, float* %arrayidx46, align 4, !dbg !1086
  %arrayidx47 = getelementptr inbounds [2 x float], [2 x float]* %pt, i64 0, i64 0, !dbg !1088
  store float %43, float* %arrayidx47, align 4, !dbg !1089
  %44 = load float*, float** %l2.addr, align 8, !dbg !1090
  %arrayidx48 = getelementptr inbounds float, float* %44, i64 1, !dbg !1090
  %45 = load float, float* %arrayidx48, align 4, !dbg !1090
  %arrayidx49 = getelementptr inbounds [2 x float], [2 x float]* %pt, i64 0, i64 1, !dbg !1091
  store float %45, float* %arrayidx49, align 4, !dbg !1092
  br label %if.end61, !dbg !1093

if.else50:                                        ; preds = %if.else
  %46 = load float, float* %lambda, align 4, !dbg !1094
  %arrayidx51 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 0, !dbg !1096
  %47 = load float, float* %arrayidx51, align 4, !dbg !1096
  %mul52 = fmul float %46, %47, !dbg !1097
  %48 = load float*, float** %l1.addr, align 8, !dbg !1098
  %arrayidx53 = getelementptr inbounds float, float* %48, i64 0, !dbg !1098
  %49 = load float, float* %arrayidx53, align 4, !dbg !1098
  %add54 = fadd float %mul52, %49, !dbg !1099
  %arrayidx55 = getelementptr inbounds [2 x float], [2 x float]* %pt, i64 0, i64 0, !dbg !1100
  store float %add54, float* %arrayidx55, align 4, !dbg !1101
  %50 = load float, float* %lambda, align 4, !dbg !1102
  %arrayidx56 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 1, !dbg !1103
  %51 = load float, float* %arrayidx56, align 4, !dbg !1103
  %mul57 = fmul float %50, %51, !dbg !1104
  %52 = load float*, float** %l1.addr, align 8, !dbg !1105
  %arrayidx58 = getelementptr inbounds float, float* %52, i64 1, !dbg !1105
  %53 = load float, float* %arrayidx58, align 4, !dbg !1105
  %add59 = fadd float %mul57, %53, !dbg !1106
  %arrayidx60 = getelementptr inbounds [2 x float], [2 x float]* %pt, i64 0, i64 1, !dbg !1107
  store float %add59, float* %arrayidx60, align 4, !dbg !1108
  br label %if.end61

if.end61:                                         ; preds = %if.else50, %if.then45
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then39
  %arrayidx63 = getelementptr inbounds [2 x float], [2 x float]* %pt, i64 0, i64 0, !dbg !1109
  %54 = load float, float* %arrayidx63, align 4, !dbg !1109
  %55 = load float*, float** %p.addr, align 8, !dbg !1110
  %arrayidx64 = getelementptr inbounds float, float* %55, i64 0, !dbg !1110
  %56 = load float, float* %arrayidx64, align 4, !dbg !1110
  %sub65 = fsub float %54, %56, !dbg !1111
  %arrayidx66 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 0, !dbg !1112
  store float %sub65, float* %arrayidx66, align 4, !dbg !1113
  %arrayidx67 = getelementptr inbounds [2 x float], [2 x float]* %pt, i64 0, i64 1, !dbg !1114
  %57 = load float, float* %arrayidx67, align 4, !dbg !1114
  %58 = load float*, float** %p.addr, align 8, !dbg !1115
  %arrayidx68 = getelementptr inbounds float, float* %58, i64 1, !dbg !1115
  %59 = load float, float* %arrayidx68, align 4, !dbg !1115
  %sub69 = fsub float %57, %59, !dbg !1116
  %arrayidx70 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 1, !dbg !1117
  store float %sub69, float* %arrayidx70, align 4, !dbg !1118
  %arrayidx71 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 0, !dbg !1119
  %60 = load float, float* %arrayidx71, align 4, !dbg !1119
  %arrayidx72 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 0, !dbg !1120
  %61 = load float, float* %arrayidx72, align 4, !dbg !1120
  %mul73 = fmul float %60, %61, !dbg !1121
  %arrayidx74 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 1, !dbg !1122
  %62 = load float, float* %arrayidx74, align 4, !dbg !1122
  %arrayidx75 = getelementptr inbounds [2 x float], [2 x float]* %rc, i64 0, i64 1, !dbg !1123
  %63 = load float, float* %arrayidx75, align 4, !dbg !1123
  %mul76 = fmul float %62, %63, !dbg !1124
  %add77 = fadd float %mul73, %mul76, !dbg !1125
  store float %add77, float* %retval, align 4, !dbg !1126
  br label %return, !dbg !1126

return:                                           ; preds = %if.end62, %if.then
  %64 = load float, float* %retval, align 4, !dbg !1127
  ret float %64, !dbg !1127
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @dist_to_line_segment_v2(float* %p, float* %l1, float* %l2) #0 !dbg !1128 {
entry:
  %p.addr = alloca float*, align 8
  %l1.addr = alloca float*, align 8
  %l2.addr = alloca float*, align 8
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !1129, metadata !DIExpression()), !dbg !1130
  store float* %l1, float** %l1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1.addr, metadata !1131, metadata !DIExpression()), !dbg !1132
  store float* %l2, float** %l2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2.addr, metadata !1133, metadata !DIExpression()), !dbg !1134
  %0 = load float*, float** %p.addr, align 8, !dbg !1135
  %1 = load float*, float** %l1.addr, align 8, !dbg !1136
  %2 = load float*, float** %l2.addr, align 8, !dbg !1137
  %call = call float @dist_squared_to_line_segment_v2(float* %0, float* %1, float* %2), !dbg !1138
  %call1 = call float @sqrtf(float %call) #5, !dbg !1139
  ret float %call1, !dbg !1140
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @closest_to_line_segment_v2(float* %r_close, float* %p, float* %l1, float* %l2) #0 !dbg !1141 {
entry:
  %r_close.addr = alloca float*, align 8
  %p.addr = alloca float*, align 8
  %l1.addr = alloca float*, align 8
  %l2.addr = alloca float*, align 8
  %lambda = alloca float, align 4
  %cp = alloca [2 x float], align 4
  store float* %r_close, float** %r_close.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_close.addr, metadata !1142, metadata !DIExpression()), !dbg !1143
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !1144, metadata !DIExpression()), !dbg !1145
  store float* %l1, float** %l1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1.addr, metadata !1146, metadata !DIExpression()), !dbg !1147
  store float* %l2, float** %l2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2.addr, metadata !1148, metadata !DIExpression()), !dbg !1149
  call void @llvm.dbg.declare(metadata float* %lambda, metadata !1150, metadata !DIExpression()), !dbg !1151
  call void @llvm.dbg.declare(metadata [2 x float]* %cp, metadata !1152, metadata !DIExpression()), !dbg !1153
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %cp, i64 0, i64 0, !dbg !1154
  %0 = load float*, float** %p.addr, align 8, !dbg !1155
  %1 = load float*, float** %l1.addr, align 8, !dbg !1156
  %2 = load float*, float** %l2.addr, align 8, !dbg !1157
  %call = call float @closest_to_line_v2(float* %arraydecay, float* %0, float* %1, float* %2), !dbg !1158
  store float %call, float* %lambda, align 4, !dbg !1159
  %3 = load float, float* %lambda, align 4, !dbg !1160
  %cmp = fcmp ole float %3, 0.000000e+00, !dbg !1162
  br i1 %cmp, label %if.then, label %if.else, !dbg !1163

if.then:                                          ; preds = %entry
  %4 = load float*, float** %r_close.addr, align 8, !dbg !1164
  %5 = load float*, float** %l1.addr, align 8, !dbg !1165
  call void @copy_v2_v2(float* %4, float* %5), !dbg !1166
  br label %if.end5, !dbg !1166

if.else:                                          ; preds = %entry
  %6 = load float, float* %lambda, align 4, !dbg !1167
  %cmp1 = fcmp oge float %6, 1.000000e+00, !dbg !1169
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !1170

if.then2:                                         ; preds = %if.else
  %7 = load float*, float** %r_close.addr, align 8, !dbg !1171
  %8 = load float*, float** %l2.addr, align 8, !dbg !1172
  call void @copy_v2_v2(float* %7, float* %8), !dbg !1173
  br label %if.end, !dbg !1173

if.else3:                                         ; preds = %if.else
  %9 = load float*, float** %r_close.addr, align 8, !dbg !1174
  %arraydecay4 = getelementptr inbounds [2 x float], [2 x float]* %cp, i64 0, i64 0, !dbg !1175
  call void @copy_v2_v2(float* %9, float* %arraydecay4), !dbg !1176
  br label %if.end

if.end:                                           ; preds = %if.else3, %if.then2
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  ret void, !dbg !1177
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @closest_to_line_v2(float* %cp, float* %p, float* %l1, float* %l2) #0 !dbg !1178 {
entry:
  %cp.addr = alloca float*, align 8
  %p.addr = alloca float*, align 8
  %l1.addr = alloca float*, align 8
  %l2.addr = alloca float*, align 8
  %h = alloca [2 x float], align 4
  %u = alloca [2 x float], align 4
  %lambda = alloca float, align 4
  store float* %cp, float** %cp.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cp.addr, metadata !1179, metadata !DIExpression()), !dbg !1180
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !1181, metadata !DIExpression()), !dbg !1182
  store float* %l1, float** %l1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1.addr, metadata !1183, metadata !DIExpression()), !dbg !1184
  store float* %l2, float** %l2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2.addr, metadata !1185, metadata !DIExpression()), !dbg !1186
  call void @llvm.dbg.declare(metadata [2 x float]* %h, metadata !1187, metadata !DIExpression()), !dbg !1188
  call void @llvm.dbg.declare(metadata [2 x float]* %u, metadata !1189, metadata !DIExpression()), !dbg !1190
  call void @llvm.dbg.declare(metadata float* %lambda, metadata !1191, metadata !DIExpression()), !dbg !1192
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %u, i64 0, i64 0, !dbg !1193
  %0 = load float*, float** %l2.addr, align 8, !dbg !1194
  %1 = load float*, float** %l1.addr, align 8, !dbg !1195
  call void @sub_v2_v2v2(float* %arraydecay, float* %0, float* %1), !dbg !1196
  %arraydecay1 = getelementptr inbounds [2 x float], [2 x float]* %h, i64 0, i64 0, !dbg !1197
  %2 = load float*, float** %p.addr, align 8, !dbg !1198
  %3 = load float*, float** %l1.addr, align 8, !dbg !1199
  call void @sub_v2_v2v2(float* %arraydecay1, float* %2, float* %3), !dbg !1200
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %u, i64 0, i64 0, !dbg !1201
  %arraydecay3 = getelementptr inbounds [2 x float], [2 x float]* %h, i64 0, i64 0, !dbg !1202
  %call = call float @dot_v2v2(float* %arraydecay2, float* %arraydecay3), !dbg !1203
  %arraydecay4 = getelementptr inbounds [2 x float], [2 x float]* %u, i64 0, i64 0, !dbg !1204
  %arraydecay5 = getelementptr inbounds [2 x float], [2 x float]* %u, i64 0, i64 0, !dbg !1205
  %call6 = call float @dot_v2v2(float* %arraydecay4, float* %arraydecay5), !dbg !1206
  %div = fdiv float %call, %call6, !dbg !1207
  store float %div, float* %lambda, align 4, !dbg !1208
  %4 = load float*, float** %l1.addr, align 8, !dbg !1209
  %arrayidx = getelementptr inbounds float, float* %4, i64 0, !dbg !1209
  %5 = load float, float* %arrayidx, align 4, !dbg !1209
  %arrayidx7 = getelementptr inbounds [2 x float], [2 x float]* %u, i64 0, i64 0, !dbg !1210
  %6 = load float, float* %arrayidx7, align 4, !dbg !1210
  %7 = load float, float* %lambda, align 4, !dbg !1211
  %mul = fmul float %6, %7, !dbg !1212
  %add = fadd float %5, %mul, !dbg !1213
  %8 = load float*, float** %cp.addr, align 8, !dbg !1214
  %arrayidx8 = getelementptr inbounds float, float* %8, i64 0, !dbg !1214
  store float %add, float* %arrayidx8, align 4, !dbg !1215
  %9 = load float*, float** %l1.addr, align 8, !dbg !1216
  %arrayidx9 = getelementptr inbounds float, float* %9, i64 1, !dbg !1216
  %10 = load float, float* %arrayidx9, align 4, !dbg !1216
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %u, i64 0, i64 1, !dbg !1217
  %11 = load float, float* %arrayidx10, align 4, !dbg !1217
  %12 = load float, float* %lambda, align 4, !dbg !1218
  %mul11 = fmul float %11, %12, !dbg !1219
  %add12 = fadd float %10, %mul11, !dbg !1220
  %13 = load float*, float** %cp.addr, align 8, !dbg !1221
  %arrayidx13 = getelementptr inbounds float, float* %13, i64 1, !dbg !1221
  store float %add12, float* %arrayidx13, align 4, !dbg !1222
  %14 = load float, float* %lambda, align 4, !dbg !1223
  ret float %14, !dbg !1224
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_v2(float* %r, float* %a) #0 !dbg !1225 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !1226, metadata !DIExpression()), !dbg !1227
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !1228, metadata !DIExpression()), !dbg !1229
  %0 = load float*, float** %a.addr, align 8, !dbg !1230
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !1230
  %1 = load float, float* %arrayidx, align 4, !dbg !1230
  %2 = load float*, float** %r.addr, align 8, !dbg !1231
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !1231
  store float %1, float* %arrayidx1, align 4, !dbg !1232
  %3 = load float*, float** %a.addr, align 8, !dbg !1233
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !1233
  %4 = load float, float* %arrayidx2, align 4, !dbg !1233
  %5 = load float*, float** %r.addr, align 8, !dbg !1234
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !1234
  store float %4, float* %arrayidx3, align 4, !dbg !1235
  ret void, !dbg !1236
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @closest_to_line_segment_v3(float* %r_close, float* %v1, float* %v2, float* %v3) #0 !dbg !1237 {
entry:
  %r_close.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %lambda = alloca float, align 4
  %cp = alloca [3 x float], align 4
  store float* %r_close, float** %r_close.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_close.addr, metadata !1238, metadata !DIExpression()), !dbg !1239
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !1240, metadata !DIExpression()), !dbg !1241
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !1242, metadata !DIExpression()), !dbg !1243
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !1244, metadata !DIExpression()), !dbg !1245
  call void @llvm.dbg.declare(metadata float* %lambda, metadata !1246, metadata !DIExpression()), !dbg !1247
  call void @llvm.dbg.declare(metadata [3 x float]* %cp, metadata !1248, metadata !DIExpression()), !dbg !1249
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %cp, i64 0, i64 0, !dbg !1250
  %0 = load float*, float** %v1.addr, align 8, !dbg !1251
  %1 = load float*, float** %v2.addr, align 8, !dbg !1252
  %2 = load float*, float** %v3.addr, align 8, !dbg !1253
  %call = call float @closest_to_line_v3(float* %arraydecay, float* %0, float* %1, float* %2), !dbg !1254
  store float %call, float* %lambda, align 4, !dbg !1255
  %3 = load float, float* %lambda, align 4, !dbg !1256
  %cmp = fcmp ole float %3, 0.000000e+00, !dbg !1258
  br i1 %cmp, label %if.then, label %if.else, !dbg !1259

if.then:                                          ; preds = %entry
  %4 = load float*, float** %r_close.addr, align 8, !dbg !1260
  %5 = load float*, float** %v2.addr, align 8, !dbg !1261
  call void @copy_v3_v3(float* %4, float* %5), !dbg !1262
  br label %if.end5, !dbg !1262

if.else:                                          ; preds = %entry
  %6 = load float, float* %lambda, align 4, !dbg !1263
  %cmp1 = fcmp oge float %6, 1.000000e+00, !dbg !1265
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !1266

if.then2:                                         ; preds = %if.else
  %7 = load float*, float** %r_close.addr, align 8, !dbg !1267
  %8 = load float*, float** %v3.addr, align 8, !dbg !1268
  call void @copy_v3_v3(float* %7, float* %8), !dbg !1269
  br label %if.end, !dbg !1269

if.else3:                                         ; preds = %if.else
  %9 = load float*, float** %r_close.addr, align 8, !dbg !1270
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %cp, i64 0, i64 0, !dbg !1271
  call void @copy_v3_v3(float* %9, float* %arraydecay4), !dbg !1272
  br label %if.end

if.end:                                           ; preds = %if.else3, %if.then2
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  ret void, !dbg !1273
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @closest_to_line_v3(float* %cp, float* %p, float* %l1, float* %l2) #0 !dbg !1274 {
entry:
  %cp.addr = alloca float*, align 8
  %p.addr = alloca float*, align 8
  %l1.addr = alloca float*, align 8
  %l2.addr = alloca float*, align 8
  %h = alloca [3 x float], align 4
  %u = alloca [3 x float], align 4
  %lambda = alloca float, align 4
  store float* %cp, float** %cp.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cp.addr, metadata !1275, metadata !DIExpression()), !dbg !1276
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !1277, metadata !DIExpression()), !dbg !1278
  store float* %l1, float** %l1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1.addr, metadata !1279, metadata !DIExpression()), !dbg !1280
  store float* %l2, float** %l2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2.addr, metadata !1281, metadata !DIExpression()), !dbg !1282
  call void @llvm.dbg.declare(metadata [3 x float]* %h, metadata !1283, metadata !DIExpression()), !dbg !1284
  call void @llvm.dbg.declare(metadata [3 x float]* %u, metadata !1285, metadata !DIExpression()), !dbg !1286
  call void @llvm.dbg.declare(metadata float* %lambda, metadata !1287, metadata !DIExpression()), !dbg !1288
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %u, i64 0, i64 0, !dbg !1289
  %0 = load float*, float** %l2.addr, align 8, !dbg !1290
  %1 = load float*, float** %l1.addr, align 8, !dbg !1291
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !1292
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !1293
  %2 = load float*, float** %p.addr, align 8, !dbg !1294
  %3 = load float*, float** %l1.addr, align 8, !dbg !1295
  call void @sub_v3_v3v3(float* %arraydecay1, float* %2, float* %3), !dbg !1296
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %u, i64 0, i64 0, !dbg !1297
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !1298
  %call = call float @dot_v3v3(float* %arraydecay2, float* %arraydecay3), !dbg !1299
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %u, i64 0, i64 0, !dbg !1300
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %u, i64 0, i64 0, !dbg !1301
  %call6 = call float @dot_v3v3(float* %arraydecay4, float* %arraydecay5), !dbg !1302
  %div = fdiv float %call, %call6, !dbg !1303
  store float %div, float* %lambda, align 4, !dbg !1304
  %4 = load float*, float** %l1.addr, align 8, !dbg !1305
  %arrayidx = getelementptr inbounds float, float* %4, i64 0, !dbg !1305
  %5 = load float, float* %arrayidx, align 4, !dbg !1305
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %u, i64 0, i64 0, !dbg !1306
  %6 = load float, float* %arrayidx7, align 4, !dbg !1306
  %7 = load float, float* %lambda, align 4, !dbg !1307
  %mul = fmul float %6, %7, !dbg !1308
  %add = fadd float %5, %mul, !dbg !1309
  %8 = load float*, float** %cp.addr, align 8, !dbg !1310
  %arrayidx8 = getelementptr inbounds float, float* %8, i64 0, !dbg !1310
  store float %add, float* %arrayidx8, align 4, !dbg !1311
  %9 = load float*, float** %l1.addr, align 8, !dbg !1312
  %arrayidx9 = getelementptr inbounds float, float* %9, i64 1, !dbg !1312
  %10 = load float, float* %arrayidx9, align 4, !dbg !1312
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %u, i64 0, i64 1, !dbg !1313
  %11 = load float, float* %arrayidx10, align 4, !dbg !1313
  %12 = load float, float* %lambda, align 4, !dbg !1314
  %mul11 = fmul float %11, %12, !dbg !1315
  %add12 = fadd float %10, %mul11, !dbg !1316
  %13 = load float*, float** %cp.addr, align 8, !dbg !1317
  %arrayidx13 = getelementptr inbounds float, float* %13, i64 1, !dbg !1317
  store float %add12, float* %arrayidx13, align 4, !dbg !1318
  %14 = load float*, float** %l1.addr, align 8, !dbg !1319
  %arrayidx14 = getelementptr inbounds float, float* %14, i64 2, !dbg !1319
  %15 = load float, float* %arrayidx14, align 4, !dbg !1319
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %u, i64 0, i64 2, !dbg !1320
  %16 = load float, float* %arrayidx15, align 4, !dbg !1320
  %17 = load float, float* %lambda, align 4, !dbg !1321
  %mul16 = fmul float %16, %17, !dbg !1322
  %add17 = fadd float %15, %mul16, !dbg !1323
  %18 = load float*, float** %cp.addr, align 8, !dbg !1324
  %arrayidx18 = getelementptr inbounds float, float* %18, i64 2, !dbg !1324
  store float %add17, float* %arrayidx18, align 4, !dbg !1325
  %19 = load float, float* %lambda, align 4, !dbg !1326
  ret float %19, !dbg !1327
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @closest_to_plane_v3(float* %r_close, float* %plane, float* %pt) #0 !dbg !1328 {
entry:
  %r_close.addr = alloca float*, align 8
  %plane.addr = alloca float*, align 8
  %pt.addr = alloca float*, align 8
  %len_sq = alloca float, align 4
  %side = alloca float, align 4
  store float* %r_close, float** %r_close.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_close.addr, metadata !1329, metadata !DIExpression()), !dbg !1330
  store float* %plane, float** %plane.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane.addr, metadata !1331, metadata !DIExpression()), !dbg !1332
  store float* %pt, float** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt.addr, metadata !1333, metadata !DIExpression()), !dbg !1334
  call void @llvm.dbg.declare(metadata float* %len_sq, metadata !1335, metadata !DIExpression()), !dbg !1336
  %0 = load float*, float** %plane.addr, align 8, !dbg !1337
  %call = call float @len_squared_v3(float* %0), !dbg !1338
  store float %call, float* %len_sq, align 4, !dbg !1336
  call void @llvm.dbg.declare(metadata float* %side, metadata !1339, metadata !DIExpression()), !dbg !1340
  %1 = load float*, float** %plane.addr, align 8, !dbg !1341
  %2 = load float*, float** %pt.addr, align 8, !dbg !1342
  %call1 = call float @plane_point_side_v3(float* %1, float* %2), !dbg !1343
  store float %call1, float* %side, align 4, !dbg !1340
  %3 = load float*, float** %r_close.addr, align 8, !dbg !1344
  %4 = load float*, float** %pt.addr, align 8, !dbg !1345
  %5 = load float*, float** %plane.addr, align 8, !dbg !1346
  %6 = load float, float* %side, align 4, !dbg !1347
  %fneg = fneg float %6, !dbg !1348
  %7 = load float, float* %len_sq, align 4, !dbg !1349
  %div = fdiv float %fneg, %7, !dbg !1350
  call void @madd_v3_v3v3fl(float* %3, float* %4, float* %5, float %div), !dbg !1351
  ret void, !dbg !1352
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v3(float* %v) #0 !dbg !1353 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !1354, metadata !DIExpression()), !dbg !1355
  %0 = load float*, float** %v.addr, align 8, !dbg !1356
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !1356
  %1 = load float, float* %arrayidx, align 4, !dbg !1356
  %2 = load float*, float** %v.addr, align 8, !dbg !1357
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !1357
  %3 = load float, float* %arrayidx1, align 4, !dbg !1357
  %mul = fmul float %1, %3, !dbg !1358
  %4 = load float*, float** %v.addr, align 8, !dbg !1359
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !1359
  %5 = load float, float* %arrayidx2, align 4, !dbg !1359
  %6 = load float*, float** %v.addr, align 8, !dbg !1360
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !1360
  %7 = load float, float* %arrayidx3, align 4, !dbg !1360
  %mul4 = fmul float %5, %7, !dbg !1361
  %add = fadd float %mul, %mul4, !dbg !1362
  %8 = load float*, float** %v.addr, align 8, !dbg !1363
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !1363
  %9 = load float, float* %arrayidx5, align 4, !dbg !1363
  %10 = load float*, float** %v.addr, align 8, !dbg !1364
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !1364
  %11 = load float, float* %arrayidx6, align 4, !dbg !1364
  %mul7 = fmul float %9, %11, !dbg !1365
  %add8 = fadd float %add, %mul7, !dbg !1366
  ret float %add8, !dbg !1367
}

; Function Attrs: noinline nounwind uwtable
define internal float @plane_point_side_v3(float* %plane, float* %co) #0 !dbg !1368 {
entry:
  %plane.addr = alloca float*, align 8
  %co.addr = alloca float*, align 8
  store float* %plane, float** %plane.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane.addr, metadata !1370, metadata !DIExpression()), !dbg !1371
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !1372, metadata !DIExpression()), !dbg !1373
  %0 = load float*, float** %co.addr, align 8, !dbg !1374
  %1 = load float*, float** %plane.addr, align 8, !dbg !1375
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !1376
  %2 = load float*, float** %plane.addr, align 8, !dbg !1377
  %arrayidx = getelementptr inbounds float, float* %2, i64 3, !dbg !1377
  %3 = load float, float* %arrayidx, align 4, !dbg !1377
  %add = fadd float %call, %3, !dbg !1378
  ret float %add, !dbg !1379
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @dist_signed_squared_to_plane_v3(float* %pt, float* %plane) #0 !dbg !1380 {
entry:
  %pt.addr = alloca float*, align 8
  %plane.addr = alloca float*, align 8
  %len_sq = alloca float, align 4
  %side = alloca float, align 4
  %fac = alloca float, align 4
  store float* %pt, float** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt.addr, metadata !1381, metadata !DIExpression()), !dbg !1382
  store float* %plane, float** %plane.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane.addr, metadata !1383, metadata !DIExpression()), !dbg !1384
  call void @llvm.dbg.declare(metadata float* %len_sq, metadata !1385, metadata !DIExpression()), !dbg !1386
  %0 = load float*, float** %plane.addr, align 8, !dbg !1387
  %call = call float @len_squared_v3(float* %0), !dbg !1388
  store float %call, float* %len_sq, align 4, !dbg !1386
  call void @llvm.dbg.declare(metadata float* %side, metadata !1389, metadata !DIExpression()), !dbg !1390
  %1 = load float*, float** %plane.addr, align 8, !dbg !1391
  %2 = load float*, float** %pt.addr, align 8, !dbg !1392
  %call1 = call float @plane_point_side_v3(float* %1, float* %2), !dbg !1393
  store float %call1, float* %side, align 4, !dbg !1390
  call void @llvm.dbg.declare(metadata float* %fac, metadata !1394, metadata !DIExpression()), !dbg !1395
  %3 = load float, float* %side, align 4, !dbg !1396
  %4 = load float, float* %len_sq, align 4, !dbg !1397
  %div = fdiv float %3, %4, !dbg !1398
  store float %div, float* %fac, align 4, !dbg !1395
  %5 = load float, float* %len_sq, align 4, !dbg !1399
  %6 = load float, float* %fac, align 4, !dbg !1400
  %7 = load float, float* %fac, align 4, !dbg !1401
  %mul = fmul float %6, %7, !dbg !1402
  %mul2 = fmul float %5, %mul, !dbg !1403
  %8 = load float, float* %side, align 4, !dbg !1404
  %9 = call float @llvm.copysign.f32(float %mul2, float %8), !dbg !1405
  ret float %9, !dbg !1406
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.copysign.f32(float, float) #1

; Function Attrs: noinline nounwind uwtable
define dso_local float @dist_squared_to_plane_v3(float* %pt, float* %plane) #0 !dbg !1407 {
entry:
  %pt.addr = alloca float*, align 8
  %plane.addr = alloca float*, align 8
  %len_sq = alloca float, align 4
  %side = alloca float, align 4
  %fac = alloca float, align 4
  store float* %pt, float** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt.addr, metadata !1408, metadata !DIExpression()), !dbg !1409
  store float* %plane, float** %plane.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane.addr, metadata !1410, metadata !DIExpression()), !dbg !1411
  call void @llvm.dbg.declare(metadata float* %len_sq, metadata !1412, metadata !DIExpression()), !dbg !1413
  %0 = load float*, float** %plane.addr, align 8, !dbg !1414
  %call = call float @len_squared_v3(float* %0), !dbg !1415
  store float %call, float* %len_sq, align 4, !dbg !1413
  call void @llvm.dbg.declare(metadata float* %side, metadata !1416, metadata !DIExpression()), !dbg !1417
  %1 = load float*, float** %plane.addr, align 8, !dbg !1418
  %2 = load float*, float** %pt.addr, align 8, !dbg !1419
  %call1 = call float @plane_point_side_v3(float* %1, float* %2), !dbg !1420
  store float %call1, float* %side, align 4, !dbg !1417
  call void @llvm.dbg.declare(metadata float* %fac, metadata !1421, metadata !DIExpression()), !dbg !1422
  %3 = load float, float* %side, align 4, !dbg !1423
  %4 = load float, float* %len_sq, align 4, !dbg !1424
  %div = fdiv float %3, %4, !dbg !1425
  store float %div, float* %fac, align 4, !dbg !1422
  %5 = load float, float* %len_sq, align 4, !dbg !1426
  %6 = load float, float* %fac, align 4, !dbg !1427
  %7 = load float, float* %fac, align 4, !dbg !1428
  %mul = fmul float %6, %7, !dbg !1429
  %mul2 = fmul float %5, %mul, !dbg !1430
  ret float %mul2, !dbg !1431
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @dist_signed_to_plane_v3(float* %pt, float* %plane) #0 !dbg !1432 {
entry:
  %pt.addr = alloca float*, align 8
  %plane.addr = alloca float*, align 8
  %len_sq = alloca float, align 4
  %side = alloca float, align 4
  %fac = alloca float, align 4
  store float* %pt, float** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt.addr, metadata !1433, metadata !DIExpression()), !dbg !1434
  store float* %plane, float** %plane.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane.addr, metadata !1435, metadata !DIExpression()), !dbg !1436
  call void @llvm.dbg.declare(metadata float* %len_sq, metadata !1437, metadata !DIExpression()), !dbg !1438
  %0 = load float*, float** %plane.addr, align 8, !dbg !1439
  %call = call float @len_squared_v3(float* %0), !dbg !1440
  store float %call, float* %len_sq, align 4, !dbg !1438
  call void @llvm.dbg.declare(metadata float* %side, metadata !1441, metadata !DIExpression()), !dbg !1442
  %1 = load float*, float** %plane.addr, align 8, !dbg !1443
  %2 = load float*, float** %pt.addr, align 8, !dbg !1444
  %call1 = call float @plane_point_side_v3(float* %1, float* %2), !dbg !1445
  store float %call1, float* %side, align 4, !dbg !1442
  call void @llvm.dbg.declare(metadata float* %fac, metadata !1446, metadata !DIExpression()), !dbg !1447
  %3 = load float, float* %side, align 4, !dbg !1448
  %4 = load float, float* %len_sq, align 4, !dbg !1449
  %div = fdiv float %3, %4, !dbg !1450
  store float %div, float* %fac, align 4, !dbg !1447
  %5 = load float, float* %len_sq, align 4, !dbg !1451
  %call2 = call float @sqrtf(float %5) #5, !dbg !1452
  %6 = load float, float* %fac, align 4, !dbg !1453
  %mul = fmul float %call2, %6, !dbg !1454
  ret float %mul, !dbg !1455
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @dist_to_plane_v3(float* %pt, float* %plane) #0 !dbg !1456 {
entry:
  %pt.addr = alloca float*, align 8
  %plane.addr = alloca float*, align 8
  store float* %pt, float** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt.addr, metadata !1457, metadata !DIExpression()), !dbg !1458
  store float* %plane, float** %plane.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane.addr, metadata !1459, metadata !DIExpression()), !dbg !1460
  %0 = load float*, float** %pt.addr, align 8, !dbg !1461
  %1 = load float*, float** %plane.addr, align 8, !dbg !1462
  %call = call float @dist_signed_to_plane_v3(float* %0, float* %1), !dbg !1463
  %2 = call float @llvm.fabs.f32(float %call), !dbg !1464
  ret float %2, !dbg !1465
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @dist_squared_to_line_segment_v3(float* %p, float* %l1, float* %l2) #0 !dbg !1466 {
entry:
  %p.addr = alloca float*, align 8
  %l1.addr = alloca float*, align 8
  %l2.addr = alloca float*, align 8
  %closest = alloca [3 x float], align 4
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !1467, metadata !DIExpression()), !dbg !1468
  store float* %l1, float** %l1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1.addr, metadata !1469, metadata !DIExpression()), !dbg !1470
  store float* %l2, float** %l2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2.addr, metadata !1471, metadata !DIExpression()), !dbg !1472
  call void @llvm.dbg.declare(metadata [3 x float]* %closest, metadata !1473, metadata !DIExpression()), !dbg !1474
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %closest, i64 0, i64 0, !dbg !1475
  %0 = load float*, float** %p.addr, align 8, !dbg !1476
  %1 = load float*, float** %l1.addr, align 8, !dbg !1477
  %2 = load float*, float** %l2.addr, align 8, !dbg !1478
  call void @closest_to_line_segment_v3(float* %arraydecay, float* %0, float* %1, float* %2), !dbg !1479
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %closest, i64 0, i64 0, !dbg !1480
  %3 = load float*, float** %p.addr, align 8, !dbg !1481
  %call = call float @len_squared_v3v3(float* %arraydecay1, float* %3), !dbg !1482
  ret float %call, !dbg !1483
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v3v3(float* %a, float* %b) #0 !dbg !1484 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !1485, metadata !DIExpression()), !dbg !1486
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !1487, metadata !DIExpression()), !dbg !1488
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !1489, metadata !DIExpression()), !dbg !1490
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !1491
  %0 = load float*, float** %b.addr, align 8, !dbg !1492
  %1 = load float*, float** %a.addr, align 8, !dbg !1493
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !1494
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !1495
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !1496
  %call = call float @dot_v3v3(float* %arraydecay1, float* %arraydecay2), !dbg !1497
  ret float %call, !dbg !1498
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @dist_to_line_segment_v3(float* %p, float* %l1, float* %l2) #0 !dbg !1499 {
entry:
  %p.addr = alloca float*, align 8
  %l1.addr = alloca float*, align 8
  %l2.addr = alloca float*, align 8
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !1500, metadata !DIExpression()), !dbg !1501
  store float* %l1, float** %l1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1.addr, metadata !1502, metadata !DIExpression()), !dbg !1503
  store float* %l2, float** %l2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2.addr, metadata !1504, metadata !DIExpression()), !dbg !1505
  %0 = load float*, float** %p.addr, align 8, !dbg !1506
  %1 = load float*, float** %l1.addr, align 8, !dbg !1507
  %2 = load float*, float** %l2.addr, align 8, !dbg !1508
  %call = call float @dist_squared_to_line_segment_v3(float* %0, float* %1, float* %2), !dbg !1509
  %call1 = call float @sqrtf(float %call) #5, !dbg !1510
  ret float %call1, !dbg !1511
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @dist_squared_to_line_v3(float* %v1, float* %l1, float* %l2) #0 !dbg !1512 {
entry:
  %v1.addr = alloca float*, align 8
  %l1.addr = alloca float*, align 8
  %l2.addr = alloca float*, align 8
  %closest = alloca [3 x float], align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !1513, metadata !DIExpression()), !dbg !1514
  store float* %l1, float** %l1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1.addr, metadata !1515, metadata !DIExpression()), !dbg !1516
  store float* %l2, float** %l2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2.addr, metadata !1517, metadata !DIExpression()), !dbg !1518
  call void @llvm.dbg.declare(metadata [3 x float]* %closest, metadata !1519, metadata !DIExpression()), !dbg !1520
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %closest, i64 0, i64 0, !dbg !1521
  %0 = load float*, float** %v1.addr, align 8, !dbg !1522
  %1 = load float*, float** %l1.addr, align 8, !dbg !1523
  %2 = load float*, float** %l2.addr, align 8, !dbg !1524
  %call = call float @closest_to_line_v3(float* %arraydecay, float* %0, float* %1, float* %2), !dbg !1525
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %closest, i64 0, i64 0, !dbg !1526
  %3 = load float*, float** %v1.addr, align 8, !dbg !1527
  %call2 = call float @len_squared_v3v3(float* %arraydecay1, float* %3), !dbg !1528
  ret float %call2, !dbg !1529
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @dist_to_line_v3(float* %v1, float* %l1, float* %l2) #0 !dbg !1530 {
entry:
  %v1.addr = alloca float*, align 8
  %l1.addr = alloca float*, align 8
  %l2.addr = alloca float*, align 8
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !1531, metadata !DIExpression()), !dbg !1532
  store float* %l1, float** %l1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1.addr, metadata !1533, metadata !DIExpression()), !dbg !1534
  store float* %l2, float** %l2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2.addr, metadata !1535, metadata !DIExpression()), !dbg !1536
  %0 = load float*, float** %v1.addr, align 8, !dbg !1537
  %1 = load float*, float** %l1.addr, align 8, !dbg !1538
  %2 = load float*, float** %l2.addr, align 8, !dbg !1539
  %call = call float @dist_squared_to_line_v3(float* %0, float* %1, float* %2), !dbg !1540
  %call1 = call float @sqrtf(float %call) #5, !dbg !1541
  ret float %call1, !dbg !1542
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @closest_on_tri_to_point_v3(float* %r, float* %p, float* %a, float* %b, float* %c) #0 !dbg !1543 {
entry:
  %r.addr = alloca float*, align 8
  %p.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %c.addr = alloca float*, align 8
  %ab = alloca [3 x float], align 4
  %ac = alloca [3 x float], align 4
  %ap = alloca [3 x float], align 4
  %d1 = alloca float, align 4
  %d2 = alloca float, align 4
  %bp = alloca [3 x float], align 4
  %d3 = alloca float, align 4
  %d4 = alloca float, align 4
  %vc = alloca float, align 4
  %cp = alloca [3 x float], align 4
  %d5 = alloca float, align 4
  %d6 = alloca float, align 4
  %vb = alloca float, align 4
  %va = alloca float, align 4
  %denom = alloca float, align 4
  %v = alloca float, align 4
  %w = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !1544, metadata !DIExpression()), !dbg !1545
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !1546, metadata !DIExpression()), !dbg !1547
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !1548, metadata !DIExpression()), !dbg !1549
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !1550, metadata !DIExpression()), !dbg !1551
  store float* %c, float** %c.addr, align 8
  call void @llvm.dbg.declare(metadata float** %c.addr, metadata !1552, metadata !DIExpression()), !dbg !1553
  call void @llvm.dbg.declare(metadata [3 x float]* %ab, metadata !1554, metadata !DIExpression()), !dbg !1555
  call void @llvm.dbg.declare(metadata [3 x float]* %ac, metadata !1556, metadata !DIExpression()), !dbg !1557
  call void @llvm.dbg.declare(metadata [3 x float]* %ap, metadata !1558, metadata !DIExpression()), !dbg !1559
  call void @llvm.dbg.declare(metadata float* %d1, metadata !1560, metadata !DIExpression()), !dbg !1561
  call void @llvm.dbg.declare(metadata float* %d2, metadata !1562, metadata !DIExpression()), !dbg !1563
  call void @llvm.dbg.declare(metadata [3 x float]* %bp, metadata !1564, metadata !DIExpression()), !dbg !1565
  call void @llvm.dbg.declare(metadata float* %d3, metadata !1566, metadata !DIExpression()), !dbg !1567
  call void @llvm.dbg.declare(metadata float* %d4, metadata !1568, metadata !DIExpression()), !dbg !1569
  call void @llvm.dbg.declare(metadata float* %vc, metadata !1570, metadata !DIExpression()), !dbg !1571
  call void @llvm.dbg.declare(metadata [3 x float]* %cp, metadata !1572, metadata !DIExpression()), !dbg !1573
  call void @llvm.dbg.declare(metadata float* %d5, metadata !1574, metadata !DIExpression()), !dbg !1575
  call void @llvm.dbg.declare(metadata float* %d6, metadata !1576, metadata !DIExpression()), !dbg !1577
  call void @llvm.dbg.declare(metadata float* %vb, metadata !1578, metadata !DIExpression()), !dbg !1579
  call void @llvm.dbg.declare(metadata float* %va, metadata !1580, metadata !DIExpression()), !dbg !1581
  call void @llvm.dbg.declare(metadata float* %denom, metadata !1582, metadata !DIExpression()), !dbg !1583
  call void @llvm.dbg.declare(metadata float* %v, metadata !1584, metadata !DIExpression()), !dbg !1585
  call void @llvm.dbg.declare(metadata float* %w, metadata !1586, metadata !DIExpression()), !dbg !1587
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %ab, i64 0, i64 0, !dbg !1588
  %0 = load float*, float** %b.addr, align 8, !dbg !1589
  %1 = load float*, float** %a.addr, align 8, !dbg !1590
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !1591
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %ac, i64 0, i64 0, !dbg !1592
  %2 = load float*, float** %c.addr, align 8, !dbg !1593
  %3 = load float*, float** %a.addr, align 8, !dbg !1594
  call void @sub_v3_v3v3(float* %arraydecay1, float* %2, float* %3), !dbg !1595
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %ap, i64 0, i64 0, !dbg !1596
  %4 = load float*, float** %p.addr, align 8, !dbg !1597
  %5 = load float*, float** %a.addr, align 8, !dbg !1598
  call void @sub_v3_v3v3(float* %arraydecay2, float* %4, float* %5), !dbg !1599
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %ab, i64 0, i64 0, !dbg !1600
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %ap, i64 0, i64 0, !dbg !1601
  %call = call float @dot_v3v3(float* %arraydecay3, float* %arraydecay4), !dbg !1602
  store float %call, float* %d1, align 4, !dbg !1603
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %ac, i64 0, i64 0, !dbg !1604
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %ap, i64 0, i64 0, !dbg !1605
  %call7 = call float @dot_v3v3(float* %arraydecay5, float* %arraydecay6), !dbg !1606
  store float %call7, float* %d2, align 4, !dbg !1607
  %6 = load float, float* %d1, align 4, !dbg !1608
  %cmp = fcmp ole float %6, 0.000000e+00, !dbg !1610
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !1611

land.lhs.true:                                    ; preds = %entry
  %7 = load float, float* %d2, align 4, !dbg !1612
  %cmp8 = fcmp ole float %7, 0.000000e+00, !dbg !1613
  br i1 %cmp8, label %if.then, label %if.end, !dbg !1614

if.then:                                          ; preds = %land.lhs.true
  %8 = load float*, float** %r.addr, align 8, !dbg !1615
  %9 = load float*, float** %a.addr, align 8, !dbg !1617
  call void @copy_v3_v3(float* %8, float* %9), !dbg !1618
  br label %return, !dbg !1619

if.end:                                           ; preds = %land.lhs.true, %entry
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %bp, i64 0, i64 0, !dbg !1620
  %10 = load float*, float** %p.addr, align 8, !dbg !1621
  %11 = load float*, float** %b.addr, align 8, !dbg !1622
  call void @sub_v3_v3v3(float* %arraydecay9, float* %10, float* %11), !dbg !1623
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %ab, i64 0, i64 0, !dbg !1624
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %bp, i64 0, i64 0, !dbg !1625
  %call12 = call float @dot_v3v3(float* %arraydecay10, float* %arraydecay11), !dbg !1626
  store float %call12, float* %d3, align 4, !dbg !1627
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %ac, i64 0, i64 0, !dbg !1628
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %bp, i64 0, i64 0, !dbg !1629
  %call15 = call float @dot_v3v3(float* %arraydecay13, float* %arraydecay14), !dbg !1630
  store float %call15, float* %d4, align 4, !dbg !1631
  %12 = load float, float* %d3, align 4, !dbg !1632
  %cmp16 = fcmp oge float %12, 0.000000e+00, !dbg !1634
  br i1 %cmp16, label %land.lhs.true17, label %if.end20, !dbg !1635

land.lhs.true17:                                  ; preds = %if.end
  %13 = load float, float* %d4, align 4, !dbg !1636
  %14 = load float, float* %d3, align 4, !dbg !1637
  %cmp18 = fcmp ole float %13, %14, !dbg !1638
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !1639

if.then19:                                        ; preds = %land.lhs.true17
  %15 = load float*, float** %r.addr, align 8, !dbg !1640
  %16 = load float*, float** %b.addr, align 8, !dbg !1642
  call void @copy_v3_v3(float* %15, float* %16), !dbg !1643
  br label %return, !dbg !1644

if.end20:                                         ; preds = %land.lhs.true17, %if.end
  %17 = load float, float* %d1, align 4, !dbg !1645
  %18 = load float, float* %d4, align 4, !dbg !1646
  %mul = fmul float %17, %18, !dbg !1647
  %19 = load float, float* %d3, align 4, !dbg !1648
  %20 = load float, float* %d2, align 4, !dbg !1649
  %mul21 = fmul float %19, %20, !dbg !1650
  %sub = fsub float %mul, %mul21, !dbg !1651
  store float %sub, float* %vc, align 4, !dbg !1652
  %21 = load float, float* %vc, align 4, !dbg !1653
  %cmp22 = fcmp ole float %21, 0.000000e+00, !dbg !1655
  br i1 %cmp22, label %land.lhs.true23, label %if.end30, !dbg !1656

land.lhs.true23:                                  ; preds = %if.end20
  %22 = load float, float* %d1, align 4, !dbg !1657
  %cmp24 = fcmp oge float %22, 0.000000e+00, !dbg !1658
  br i1 %cmp24, label %land.lhs.true25, label %if.end30, !dbg !1659

land.lhs.true25:                                  ; preds = %land.lhs.true23
  %23 = load float, float* %d3, align 4, !dbg !1660
  %cmp26 = fcmp ole float %23, 0.000000e+00, !dbg !1661
  br i1 %cmp26, label %if.then27, label %if.end30, !dbg !1662

if.then27:                                        ; preds = %land.lhs.true25
  %24 = load float, float* %d1, align 4, !dbg !1663
  %25 = load float, float* %d1, align 4, !dbg !1665
  %26 = load float, float* %d3, align 4, !dbg !1666
  %sub28 = fsub float %25, %26, !dbg !1667
  %div = fdiv float %24, %sub28, !dbg !1668
  store float %div, float* %v, align 4, !dbg !1669
  %27 = load float*, float** %r.addr, align 8, !dbg !1670
  %28 = load float*, float** %a.addr, align 8, !dbg !1671
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %ab, i64 0, i64 0, !dbg !1672
  %29 = load float, float* %v, align 4, !dbg !1673
  call void @madd_v3_v3v3fl(float* %27, float* %28, float* %arraydecay29, float %29), !dbg !1674
  br label %return, !dbg !1675

if.end30:                                         ; preds = %land.lhs.true25, %land.lhs.true23, %if.end20
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %cp, i64 0, i64 0, !dbg !1676
  %30 = load float*, float** %p.addr, align 8, !dbg !1677
  %31 = load float*, float** %c.addr, align 8, !dbg !1678
  call void @sub_v3_v3v3(float* %arraydecay31, float* %30, float* %31), !dbg !1679
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %ab, i64 0, i64 0, !dbg !1680
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %cp, i64 0, i64 0, !dbg !1681
  %call34 = call float @dot_v3v3(float* %arraydecay32, float* %arraydecay33), !dbg !1682
  store float %call34, float* %d5, align 4, !dbg !1683
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %ac, i64 0, i64 0, !dbg !1684
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %cp, i64 0, i64 0, !dbg !1685
  %call37 = call float @dot_v3v3(float* %arraydecay35, float* %arraydecay36), !dbg !1686
  store float %call37, float* %d6, align 4, !dbg !1687
  %32 = load float, float* %d6, align 4, !dbg !1688
  %cmp38 = fcmp oge float %32, 0.000000e+00, !dbg !1690
  br i1 %cmp38, label %land.lhs.true39, label %if.end42, !dbg !1691

land.lhs.true39:                                  ; preds = %if.end30
  %33 = load float, float* %d5, align 4, !dbg !1692
  %34 = load float, float* %d6, align 4, !dbg !1693
  %cmp40 = fcmp ole float %33, %34, !dbg !1694
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !1695

if.then41:                                        ; preds = %land.lhs.true39
  %35 = load float*, float** %r.addr, align 8, !dbg !1696
  %36 = load float*, float** %c.addr, align 8, !dbg !1698
  call void @copy_v3_v3(float* %35, float* %36), !dbg !1699
  br label %return, !dbg !1700

if.end42:                                         ; preds = %land.lhs.true39, %if.end30
  %37 = load float, float* %d5, align 4, !dbg !1701
  %38 = load float, float* %d2, align 4, !dbg !1702
  %mul43 = fmul float %37, %38, !dbg !1703
  %39 = load float, float* %d1, align 4, !dbg !1704
  %40 = load float, float* %d6, align 4, !dbg !1705
  %mul44 = fmul float %39, %40, !dbg !1706
  %sub45 = fsub float %mul43, %mul44, !dbg !1707
  store float %sub45, float* %vb, align 4, !dbg !1708
  %41 = load float, float* %vb, align 4, !dbg !1709
  %cmp46 = fcmp ole float %41, 0.000000e+00, !dbg !1711
  br i1 %cmp46, label %land.lhs.true47, label %if.end55, !dbg !1712

land.lhs.true47:                                  ; preds = %if.end42
  %42 = load float, float* %d2, align 4, !dbg !1713
  %cmp48 = fcmp oge float %42, 0.000000e+00, !dbg !1714
  br i1 %cmp48, label %land.lhs.true49, label %if.end55, !dbg !1715

land.lhs.true49:                                  ; preds = %land.lhs.true47
  %43 = load float, float* %d6, align 4, !dbg !1716
  %cmp50 = fcmp ole float %43, 0.000000e+00, !dbg !1717
  br i1 %cmp50, label %if.then51, label %if.end55, !dbg !1718

if.then51:                                        ; preds = %land.lhs.true49
  %44 = load float, float* %d2, align 4, !dbg !1719
  %45 = load float, float* %d2, align 4, !dbg !1721
  %46 = load float, float* %d6, align 4, !dbg !1722
  %sub52 = fsub float %45, %46, !dbg !1723
  %div53 = fdiv float %44, %sub52, !dbg !1724
  store float %div53, float* %w, align 4, !dbg !1725
  %47 = load float*, float** %r.addr, align 8, !dbg !1726
  %48 = load float*, float** %a.addr, align 8, !dbg !1727
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %ac, i64 0, i64 0, !dbg !1728
  %49 = load float, float* %w, align 4, !dbg !1729
  call void @madd_v3_v3v3fl(float* %47, float* %48, float* %arraydecay54, float %49), !dbg !1730
  br label %return, !dbg !1731

if.end55:                                         ; preds = %land.lhs.true49, %land.lhs.true47, %if.end42
  %50 = load float, float* %d3, align 4, !dbg !1732
  %51 = load float, float* %d6, align 4, !dbg !1733
  %mul56 = fmul float %50, %51, !dbg !1734
  %52 = load float, float* %d5, align 4, !dbg !1735
  %53 = load float, float* %d4, align 4, !dbg !1736
  %mul57 = fmul float %52, %53, !dbg !1737
  %sub58 = fsub float %mul56, %mul57, !dbg !1738
  store float %sub58, float* %va, align 4, !dbg !1739
  %54 = load float, float* %va, align 4, !dbg !1740
  %cmp59 = fcmp ole float %54, 0.000000e+00, !dbg !1742
  br i1 %cmp59, label %land.lhs.true60, label %if.end71, !dbg !1743

land.lhs.true60:                                  ; preds = %if.end55
  %55 = load float, float* %d4, align 4, !dbg !1744
  %56 = load float, float* %d3, align 4, !dbg !1745
  %sub61 = fsub float %55, %56, !dbg !1746
  %cmp62 = fcmp oge float %sub61, 0.000000e+00, !dbg !1747
  br i1 %cmp62, label %land.lhs.true63, label %if.end71, !dbg !1748

land.lhs.true63:                                  ; preds = %land.lhs.true60
  %57 = load float, float* %d5, align 4, !dbg !1749
  %58 = load float, float* %d6, align 4, !dbg !1750
  %sub64 = fsub float %57, %58, !dbg !1751
  %cmp65 = fcmp oge float %sub64, 0.000000e+00, !dbg !1752
  br i1 %cmp65, label %if.then66, label %if.end71, !dbg !1753

if.then66:                                        ; preds = %land.lhs.true63
  %59 = load float, float* %d4, align 4, !dbg !1754
  %60 = load float, float* %d3, align 4, !dbg !1756
  %sub67 = fsub float %59, %60, !dbg !1757
  %61 = load float, float* %d4, align 4, !dbg !1758
  %62 = load float, float* %d3, align 4, !dbg !1759
  %sub68 = fsub float %61, %62, !dbg !1760
  %63 = load float, float* %d5, align 4, !dbg !1761
  %64 = load float, float* %d6, align 4, !dbg !1762
  %sub69 = fsub float %63, %64, !dbg !1763
  %add = fadd float %sub68, %sub69, !dbg !1764
  %div70 = fdiv float %sub67, %add, !dbg !1765
  store float %div70, float* %w, align 4, !dbg !1766
  %65 = load float*, float** %r.addr, align 8, !dbg !1767
  %66 = load float*, float** %c.addr, align 8, !dbg !1768
  %67 = load float*, float** %b.addr, align 8, !dbg !1769
  call void @sub_v3_v3v3(float* %65, float* %66, float* %67), !dbg !1770
  %68 = load float*, float** %r.addr, align 8, !dbg !1771
  %69 = load float, float* %w, align 4, !dbg !1772
  call void @mul_v3_fl(float* %68, float %69), !dbg !1773
  %70 = load float*, float** %r.addr, align 8, !dbg !1774
  %71 = load float*, float** %b.addr, align 8, !dbg !1775
  call void @add_v3_v3(float* %70, float* %71), !dbg !1776
  br label %return, !dbg !1777

if.end71:                                         ; preds = %land.lhs.true63, %land.lhs.true60, %if.end55
  %72 = load float, float* %va, align 4, !dbg !1778
  %73 = load float, float* %vb, align 4, !dbg !1779
  %add72 = fadd float %72, %73, !dbg !1780
  %74 = load float, float* %vc, align 4, !dbg !1781
  %add73 = fadd float %add72, %74, !dbg !1782
  %div74 = fdiv float 1.000000e+00, %add73, !dbg !1783
  store float %div74, float* %denom, align 4, !dbg !1784
  %75 = load float, float* %vb, align 4, !dbg !1785
  %76 = load float, float* %denom, align 4, !dbg !1786
  %mul75 = fmul float %75, %76, !dbg !1787
  store float %mul75, float* %v, align 4, !dbg !1788
  %77 = load float, float* %vc, align 4, !dbg !1789
  %78 = load float, float* %denom, align 4, !dbg !1790
  %mul76 = fmul float %77, %78, !dbg !1791
  store float %mul76, float* %w, align 4, !dbg !1792
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %ac, i64 0, i64 0, !dbg !1793
  %79 = load float, float* %w, align 4, !dbg !1794
  call void @mul_v3_fl(float* %arraydecay77, float %79), !dbg !1795
  %80 = load float*, float** %r.addr, align 8, !dbg !1796
  %81 = load float*, float** %a.addr, align 8, !dbg !1797
  %arraydecay78 = getelementptr inbounds [3 x float], [3 x float]* %ab, i64 0, i64 0, !dbg !1798
  %82 = load float, float* %v, align 4, !dbg !1799
  call void @madd_v3_v3v3fl(float* %80, float* %81, float* %arraydecay78, float %82), !dbg !1800
  %83 = load float*, float** %r.addr, align 8, !dbg !1801
  %arraydecay79 = getelementptr inbounds [3 x float], [3 x float]* %ac, i64 0, i64 0, !dbg !1802
  call void @add_v3_v3(float* %83, float* %arraydecay79), !dbg !1803
  br label %return, !dbg !1804

return:                                           ; preds = %if.end71, %if.then66, %if.then51, %if.then41, %if.then27, %if.then19, %if.then
  ret void, !dbg !1804
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !1805 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !1808, metadata !DIExpression()), !dbg !1809
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !1810, metadata !DIExpression()), !dbg !1811
  %0 = load float, float* %f.addr, align 4, !dbg !1812
  %1 = load float*, float** %r.addr, align 8, !dbg !1813
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !1813
  %2 = load float, float* %arrayidx, align 4, !dbg !1814
  %mul = fmul float %2, %0, !dbg !1814
  store float %mul, float* %arrayidx, align 4, !dbg !1814
  %3 = load float, float* %f.addr, align 4, !dbg !1815
  %4 = load float*, float** %r.addr, align 8, !dbg !1816
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !1816
  %5 = load float, float* %arrayidx1, align 4, !dbg !1817
  %mul2 = fmul float %5, %3, !dbg !1817
  store float %mul2, float* %arrayidx1, align 4, !dbg !1817
  %6 = load float, float* %f.addr, align 4, !dbg !1818
  %7 = load float*, float** %r.addr, align 8, !dbg !1819
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !1819
  %8 = load float, float* %arrayidx3, align 4, !dbg !1820
  %mul4 = fmul float %8, %6, !dbg !1820
  store float %mul4, float* %arrayidx3, align 4, !dbg !1820
  ret void, !dbg !1821
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !1822 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !1823, metadata !DIExpression()), !dbg !1824
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !1825, metadata !DIExpression()), !dbg !1826
  %0 = load float*, float** %a.addr, align 8, !dbg !1827
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !1827
  %1 = load float, float* %arrayidx, align 4, !dbg !1827
  %2 = load float*, float** %r.addr, align 8, !dbg !1828
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !1828
  %3 = load float, float* %arrayidx1, align 4, !dbg !1829
  %add = fadd float %3, %1, !dbg !1829
  store float %add, float* %arrayidx1, align 4, !dbg !1829
  %4 = load float*, float** %a.addr, align 8, !dbg !1830
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !1830
  %5 = load float, float* %arrayidx2, align 4, !dbg !1830
  %6 = load float*, float** %r.addr, align 8, !dbg !1831
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !1831
  %7 = load float, float* %arrayidx3, align 4, !dbg !1832
  %add4 = fadd float %7, %5, !dbg !1832
  store float %add4, float* %arrayidx3, align 4, !dbg !1832
  %8 = load float*, float** %a.addr, align 8, !dbg !1833
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !1833
  %9 = load float, float* %arrayidx5, align 4, !dbg !1833
  %10 = load float*, float** %r.addr, align 8, !dbg !1834
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !1834
  %11 = load float, float* %arrayidx6, align 4, !dbg !1835
  %add7 = fadd float %11, %9, !dbg !1835
  store float %add7, float* %arrayidx6, align 4, !dbg !1835
  ret void, !dbg !1836
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @isect_line_line_v2_int(i32* %v1, i32* %v2, i32* %v3, i32* %v4) #0 !dbg !1837 {
entry:
  %retval = alloca i32, align 4
  %v1.addr = alloca i32*, align 8
  %v2.addr = alloca i32*, align 8
  %v3.addr = alloca i32*, align 8
  %v4.addr = alloca i32*, align 8
  %div = alloca float, align 4
  %lambda = alloca float, align 4
  %mu = alloca float, align 4
  store i32* %v1, i32** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %v1.addr, metadata !1842, metadata !DIExpression()), !dbg !1843
  store i32* %v2, i32** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %v2.addr, metadata !1844, metadata !DIExpression()), !dbg !1845
  store i32* %v3, i32** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %v3.addr, metadata !1846, metadata !DIExpression()), !dbg !1847
  store i32* %v4, i32** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %v4.addr, metadata !1848, metadata !DIExpression()), !dbg !1849
  call void @llvm.dbg.declare(metadata float* %div, metadata !1850, metadata !DIExpression()), !dbg !1851
  call void @llvm.dbg.declare(metadata float* %lambda, metadata !1852, metadata !DIExpression()), !dbg !1853
  call void @llvm.dbg.declare(metadata float* %mu, metadata !1854, metadata !DIExpression()), !dbg !1855
  %0 = load i32*, i32** %v2.addr, align 8, !dbg !1856
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0, !dbg !1856
  %1 = load i32, i32* %arrayidx, align 4, !dbg !1856
  %2 = load i32*, i32** %v1.addr, align 8, !dbg !1857
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i64 0, !dbg !1857
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !1857
  %sub = sub nsw i32 %1, %3, !dbg !1858
  %4 = load i32*, i32** %v4.addr, align 8, !dbg !1859
  %arrayidx2 = getelementptr inbounds i32, i32* %4, i64 1, !dbg !1859
  %5 = load i32, i32* %arrayidx2, align 4, !dbg !1859
  %6 = load i32*, i32** %v3.addr, align 8, !dbg !1860
  %arrayidx3 = getelementptr inbounds i32, i32* %6, i64 1, !dbg !1860
  %7 = load i32, i32* %arrayidx3, align 4, !dbg !1860
  %sub4 = sub nsw i32 %5, %7, !dbg !1861
  %mul = mul nsw i32 %sub, %sub4, !dbg !1862
  %8 = load i32*, i32** %v2.addr, align 8, !dbg !1863
  %arrayidx5 = getelementptr inbounds i32, i32* %8, i64 1, !dbg !1863
  %9 = load i32, i32* %arrayidx5, align 4, !dbg !1863
  %10 = load i32*, i32** %v1.addr, align 8, !dbg !1864
  %arrayidx6 = getelementptr inbounds i32, i32* %10, i64 1, !dbg !1864
  %11 = load i32, i32* %arrayidx6, align 4, !dbg !1864
  %sub7 = sub nsw i32 %9, %11, !dbg !1865
  %12 = load i32*, i32** %v4.addr, align 8, !dbg !1866
  %arrayidx8 = getelementptr inbounds i32, i32* %12, i64 0, !dbg !1866
  %13 = load i32, i32* %arrayidx8, align 4, !dbg !1866
  %14 = load i32*, i32** %v3.addr, align 8, !dbg !1867
  %arrayidx9 = getelementptr inbounds i32, i32* %14, i64 0, !dbg !1867
  %15 = load i32, i32* %arrayidx9, align 4, !dbg !1867
  %sub10 = sub nsw i32 %13, %15, !dbg !1868
  %mul11 = mul nsw i32 %sub7, %sub10, !dbg !1869
  %sub12 = sub nsw i32 %mul, %mul11, !dbg !1870
  %conv = sitofp i32 %sub12 to float, !dbg !1871
  store float %conv, float* %div, align 4, !dbg !1872
  %16 = load float, float* %div, align 4, !dbg !1873
  %cmp = fcmp oeq float %16, 0.000000e+00, !dbg !1875
  br i1 %cmp, label %if.then, label %if.end, !dbg !1876

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !1877
  br label %return, !dbg !1877

if.end:                                           ; preds = %entry
  %17 = load i32*, i32** %v1.addr, align 8, !dbg !1878
  %arrayidx14 = getelementptr inbounds i32, i32* %17, i64 1, !dbg !1878
  %18 = load i32, i32* %arrayidx14, align 4, !dbg !1878
  %19 = load i32*, i32** %v3.addr, align 8, !dbg !1879
  %arrayidx15 = getelementptr inbounds i32, i32* %19, i64 1, !dbg !1879
  %20 = load i32, i32* %arrayidx15, align 4, !dbg !1879
  %sub16 = sub nsw i32 %18, %20, !dbg !1880
  %21 = load i32*, i32** %v4.addr, align 8, !dbg !1881
  %arrayidx17 = getelementptr inbounds i32, i32* %21, i64 0, !dbg !1881
  %22 = load i32, i32* %arrayidx17, align 4, !dbg !1881
  %23 = load i32*, i32** %v3.addr, align 8, !dbg !1882
  %arrayidx18 = getelementptr inbounds i32, i32* %23, i64 0, !dbg !1882
  %24 = load i32, i32* %arrayidx18, align 4, !dbg !1882
  %sub19 = sub nsw i32 %22, %24, !dbg !1883
  %mul20 = mul nsw i32 %sub16, %sub19, !dbg !1884
  %25 = load i32*, i32** %v1.addr, align 8, !dbg !1885
  %arrayidx21 = getelementptr inbounds i32, i32* %25, i64 0, !dbg !1885
  %26 = load i32, i32* %arrayidx21, align 4, !dbg !1885
  %27 = load i32*, i32** %v3.addr, align 8, !dbg !1886
  %arrayidx22 = getelementptr inbounds i32, i32* %27, i64 0, !dbg !1886
  %28 = load i32, i32* %arrayidx22, align 4, !dbg !1886
  %sub23 = sub nsw i32 %26, %28, !dbg !1887
  %29 = load i32*, i32** %v4.addr, align 8, !dbg !1888
  %arrayidx24 = getelementptr inbounds i32, i32* %29, i64 1, !dbg !1888
  %30 = load i32, i32* %arrayidx24, align 4, !dbg !1888
  %31 = load i32*, i32** %v3.addr, align 8, !dbg !1889
  %arrayidx25 = getelementptr inbounds i32, i32* %31, i64 1, !dbg !1889
  %32 = load i32, i32* %arrayidx25, align 4, !dbg !1889
  %sub26 = sub nsw i32 %30, %32, !dbg !1890
  %mul27 = mul nsw i32 %sub23, %sub26, !dbg !1891
  %sub28 = sub nsw i32 %mul20, %mul27, !dbg !1892
  %conv29 = sitofp i32 %sub28 to float, !dbg !1893
  %33 = load float, float* %div, align 4, !dbg !1894
  %div30 = fdiv float %conv29, %33, !dbg !1895
  store float %div30, float* %lambda, align 4, !dbg !1896
  %34 = load i32*, i32** %v1.addr, align 8, !dbg !1897
  %arrayidx31 = getelementptr inbounds i32, i32* %34, i64 1, !dbg !1897
  %35 = load i32, i32* %arrayidx31, align 4, !dbg !1897
  %36 = load i32*, i32** %v3.addr, align 8, !dbg !1898
  %arrayidx32 = getelementptr inbounds i32, i32* %36, i64 1, !dbg !1898
  %37 = load i32, i32* %arrayidx32, align 4, !dbg !1898
  %sub33 = sub nsw i32 %35, %37, !dbg !1899
  %38 = load i32*, i32** %v2.addr, align 8, !dbg !1900
  %arrayidx34 = getelementptr inbounds i32, i32* %38, i64 0, !dbg !1900
  %39 = load i32, i32* %arrayidx34, align 4, !dbg !1900
  %40 = load i32*, i32** %v1.addr, align 8, !dbg !1901
  %arrayidx35 = getelementptr inbounds i32, i32* %40, i64 0, !dbg !1901
  %41 = load i32, i32* %arrayidx35, align 4, !dbg !1901
  %sub36 = sub nsw i32 %39, %41, !dbg !1902
  %mul37 = mul nsw i32 %sub33, %sub36, !dbg !1903
  %42 = load i32*, i32** %v1.addr, align 8, !dbg !1904
  %arrayidx38 = getelementptr inbounds i32, i32* %42, i64 0, !dbg !1904
  %43 = load i32, i32* %arrayidx38, align 4, !dbg !1904
  %44 = load i32*, i32** %v3.addr, align 8, !dbg !1905
  %arrayidx39 = getelementptr inbounds i32, i32* %44, i64 0, !dbg !1905
  %45 = load i32, i32* %arrayidx39, align 4, !dbg !1905
  %sub40 = sub nsw i32 %43, %45, !dbg !1906
  %46 = load i32*, i32** %v2.addr, align 8, !dbg !1907
  %arrayidx41 = getelementptr inbounds i32, i32* %46, i64 1, !dbg !1907
  %47 = load i32, i32* %arrayidx41, align 4, !dbg !1907
  %48 = load i32*, i32** %v1.addr, align 8, !dbg !1908
  %arrayidx42 = getelementptr inbounds i32, i32* %48, i64 1, !dbg !1908
  %49 = load i32, i32* %arrayidx42, align 4, !dbg !1908
  %sub43 = sub nsw i32 %47, %49, !dbg !1909
  %mul44 = mul nsw i32 %sub40, %sub43, !dbg !1910
  %sub45 = sub nsw i32 %mul37, %mul44, !dbg !1911
  %conv46 = sitofp i32 %sub45 to float, !dbg !1912
  %50 = load float, float* %div, align 4, !dbg !1913
  %div47 = fdiv float %conv46, %50, !dbg !1914
  store float %div47, float* %mu, align 4, !dbg !1915
  %51 = load float, float* %lambda, align 4, !dbg !1916
  %cmp48 = fcmp oge float %51, 0.000000e+00, !dbg !1918
  br i1 %cmp48, label %land.lhs.true, label %if.end71, !dbg !1919

land.lhs.true:                                    ; preds = %if.end
  %52 = load float, float* %lambda, align 4, !dbg !1920
  %cmp50 = fcmp ole float %52, 1.000000e+00, !dbg !1921
  br i1 %cmp50, label %land.lhs.true52, label %if.end71, !dbg !1922

land.lhs.true52:                                  ; preds = %land.lhs.true
  %53 = load float, float* %mu, align 4, !dbg !1923
  %cmp53 = fcmp oge float %53, 0.000000e+00, !dbg !1924
  br i1 %cmp53, label %land.lhs.true55, label %if.end71, !dbg !1925

land.lhs.true55:                                  ; preds = %land.lhs.true52
  %54 = load float, float* %mu, align 4, !dbg !1926
  %cmp56 = fcmp ole float %54, 1.000000e+00, !dbg !1927
  br i1 %cmp56, label %if.then58, label %if.end71, !dbg !1928

if.then58:                                        ; preds = %land.lhs.true55
  %55 = load float, float* %lambda, align 4, !dbg !1929
  %cmp59 = fcmp oeq float %55, 0.000000e+00, !dbg !1932
  br i1 %cmp59, label %if.then69, label %lor.lhs.false, !dbg !1933

lor.lhs.false:                                    ; preds = %if.then58
  %56 = load float, float* %lambda, align 4, !dbg !1934
  %cmp61 = fcmp oeq float %56, 1.000000e+00, !dbg !1935
  br i1 %cmp61, label %if.then69, label %lor.lhs.false63, !dbg !1936

lor.lhs.false63:                                  ; preds = %lor.lhs.false
  %57 = load float, float* %mu, align 4, !dbg !1937
  %cmp64 = fcmp oeq float %57, 0.000000e+00, !dbg !1938
  br i1 %cmp64, label %if.then69, label %lor.lhs.false66, !dbg !1939

lor.lhs.false66:                                  ; preds = %lor.lhs.false63
  %58 = load float, float* %mu, align 4, !dbg !1940
  %cmp67 = fcmp oeq float %58, 1.000000e+00, !dbg !1941
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !1942

if.then69:                                        ; preds = %lor.lhs.false66, %lor.lhs.false63, %lor.lhs.false, %if.then58
  store i32 1, i32* %retval, align 4, !dbg !1943
  br label %return, !dbg !1943

if.end70:                                         ; preds = %lor.lhs.false66
  store i32 2, i32* %retval, align 4, !dbg !1944
  br label %return, !dbg !1944

if.end71:                                         ; preds = %land.lhs.true55, %land.lhs.true52, %land.lhs.true, %if.end
  store i32 0, i32* %retval, align 4, !dbg !1945
  br label %return, !dbg !1945

return:                                           ; preds = %if.end71, %if.end70, %if.then69, %if.then
  %59 = load i32, i32* %retval, align 4, !dbg !1946
  ret i32 %59, !dbg !1946
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @isect_line_line_v2_point(float* %v1, float* %v2, float* %v3, float* %v4, float* %vi) #0 !dbg !1947 {
entry:
  %retval = alloca i32, align 4
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  %vi.addr = alloca float*, align 8
  %div = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !1950, metadata !DIExpression()), !dbg !1951
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !1952, metadata !DIExpression()), !dbg !1953
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !1954, metadata !DIExpression()), !dbg !1955
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !1956, metadata !DIExpression()), !dbg !1957
  store float* %vi, float** %vi.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vi.addr, metadata !1958, metadata !DIExpression()), !dbg !1959
  call void @llvm.dbg.declare(metadata float* %div, metadata !1960, metadata !DIExpression()), !dbg !1961
  %0 = load float*, float** %v2.addr, align 8, !dbg !1962
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !1962
  %1 = load float, float* %arrayidx, align 4, !dbg !1962
  %2 = load float*, float** %v1.addr, align 8, !dbg !1963
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !1963
  %3 = load float, float* %arrayidx1, align 4, !dbg !1963
  %sub = fsub float %1, %3, !dbg !1964
  %4 = load float*, float** %v4.addr, align 8, !dbg !1965
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !1965
  %5 = load float, float* %arrayidx2, align 4, !dbg !1965
  %6 = load float*, float** %v3.addr, align 8, !dbg !1966
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !1966
  %7 = load float, float* %arrayidx3, align 4, !dbg !1966
  %sub4 = fsub float %5, %7, !dbg !1967
  %mul = fmul float %sub, %sub4, !dbg !1968
  %8 = load float*, float** %v2.addr, align 8, !dbg !1969
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 1, !dbg !1969
  %9 = load float, float* %arrayidx5, align 4, !dbg !1969
  %10 = load float*, float** %v1.addr, align 8, !dbg !1970
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 1, !dbg !1970
  %11 = load float, float* %arrayidx6, align 4, !dbg !1970
  %sub7 = fsub float %9, %11, !dbg !1971
  %12 = load float*, float** %v4.addr, align 8, !dbg !1972
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 0, !dbg !1972
  %13 = load float, float* %arrayidx8, align 4, !dbg !1972
  %14 = load float*, float** %v3.addr, align 8, !dbg !1973
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 0, !dbg !1973
  %15 = load float, float* %arrayidx9, align 4, !dbg !1973
  %sub10 = fsub float %13, %15, !dbg !1974
  %mul11 = fmul float %sub7, %sub10, !dbg !1975
  %sub12 = fsub float %mul, %mul11, !dbg !1976
  store float %sub12, float* %div, align 4, !dbg !1977
  %16 = load float, float* %div, align 4, !dbg !1978
  %cmp = fcmp oeq float %16, 0.000000e+00, !dbg !1980
  br i1 %cmp, label %if.then, label %if.end, !dbg !1981

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !1982
  br label %return, !dbg !1982

if.end:                                           ; preds = %entry
  %17 = load float*, float** %v3.addr, align 8, !dbg !1983
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 0, !dbg !1983
  %18 = load float, float* %arrayidx13, align 4, !dbg !1983
  %19 = load float*, float** %v4.addr, align 8, !dbg !1984
  %arrayidx14 = getelementptr inbounds float, float* %19, i64 0, !dbg !1984
  %20 = load float, float* %arrayidx14, align 4, !dbg !1984
  %sub15 = fsub float %18, %20, !dbg !1985
  %21 = load float*, float** %v1.addr, align 8, !dbg !1986
  %arrayidx16 = getelementptr inbounds float, float* %21, i64 0, !dbg !1986
  %22 = load float, float* %arrayidx16, align 4, !dbg !1986
  %23 = load float*, float** %v2.addr, align 8, !dbg !1987
  %arrayidx17 = getelementptr inbounds float, float* %23, i64 1, !dbg !1987
  %24 = load float, float* %arrayidx17, align 4, !dbg !1987
  %mul18 = fmul float %22, %24, !dbg !1988
  %25 = load float*, float** %v1.addr, align 8, !dbg !1989
  %arrayidx19 = getelementptr inbounds float, float* %25, i64 1, !dbg !1989
  %26 = load float, float* %arrayidx19, align 4, !dbg !1989
  %27 = load float*, float** %v2.addr, align 8, !dbg !1990
  %arrayidx20 = getelementptr inbounds float, float* %27, i64 0, !dbg !1990
  %28 = load float, float* %arrayidx20, align 4, !dbg !1990
  %mul21 = fmul float %26, %28, !dbg !1991
  %sub22 = fsub float %mul18, %mul21, !dbg !1992
  %mul23 = fmul float %sub15, %sub22, !dbg !1993
  %29 = load float*, float** %v1.addr, align 8, !dbg !1994
  %arrayidx24 = getelementptr inbounds float, float* %29, i64 0, !dbg !1994
  %30 = load float, float* %arrayidx24, align 4, !dbg !1994
  %31 = load float*, float** %v2.addr, align 8, !dbg !1995
  %arrayidx25 = getelementptr inbounds float, float* %31, i64 0, !dbg !1995
  %32 = load float, float* %arrayidx25, align 4, !dbg !1995
  %sub26 = fsub float %30, %32, !dbg !1996
  %33 = load float*, float** %v3.addr, align 8, !dbg !1997
  %arrayidx27 = getelementptr inbounds float, float* %33, i64 0, !dbg !1997
  %34 = load float, float* %arrayidx27, align 4, !dbg !1997
  %35 = load float*, float** %v4.addr, align 8, !dbg !1998
  %arrayidx28 = getelementptr inbounds float, float* %35, i64 1, !dbg !1998
  %36 = load float, float* %arrayidx28, align 4, !dbg !1998
  %mul29 = fmul float %34, %36, !dbg !1999
  %37 = load float*, float** %v3.addr, align 8, !dbg !2000
  %arrayidx30 = getelementptr inbounds float, float* %37, i64 1, !dbg !2000
  %38 = load float, float* %arrayidx30, align 4, !dbg !2000
  %39 = load float*, float** %v4.addr, align 8, !dbg !2001
  %arrayidx31 = getelementptr inbounds float, float* %39, i64 0, !dbg !2001
  %40 = load float, float* %arrayidx31, align 4, !dbg !2001
  %mul32 = fmul float %38, %40, !dbg !2002
  %sub33 = fsub float %mul29, %mul32, !dbg !2003
  %mul34 = fmul float %sub26, %sub33, !dbg !2004
  %sub35 = fsub float %mul23, %mul34, !dbg !2005
  %41 = load float, float* %div, align 4, !dbg !2006
  %div36 = fdiv float %sub35, %41, !dbg !2007
  %42 = load float*, float** %vi.addr, align 8, !dbg !2008
  %arrayidx37 = getelementptr inbounds float, float* %42, i64 0, !dbg !2008
  store float %div36, float* %arrayidx37, align 4, !dbg !2009
  %43 = load float*, float** %v3.addr, align 8, !dbg !2010
  %arrayidx38 = getelementptr inbounds float, float* %43, i64 1, !dbg !2010
  %44 = load float, float* %arrayidx38, align 4, !dbg !2010
  %45 = load float*, float** %v4.addr, align 8, !dbg !2011
  %arrayidx39 = getelementptr inbounds float, float* %45, i64 1, !dbg !2011
  %46 = load float, float* %arrayidx39, align 4, !dbg !2011
  %sub40 = fsub float %44, %46, !dbg !2012
  %47 = load float*, float** %v1.addr, align 8, !dbg !2013
  %arrayidx41 = getelementptr inbounds float, float* %47, i64 0, !dbg !2013
  %48 = load float, float* %arrayidx41, align 4, !dbg !2013
  %49 = load float*, float** %v2.addr, align 8, !dbg !2014
  %arrayidx42 = getelementptr inbounds float, float* %49, i64 1, !dbg !2014
  %50 = load float, float* %arrayidx42, align 4, !dbg !2014
  %mul43 = fmul float %48, %50, !dbg !2015
  %51 = load float*, float** %v1.addr, align 8, !dbg !2016
  %arrayidx44 = getelementptr inbounds float, float* %51, i64 1, !dbg !2016
  %52 = load float, float* %arrayidx44, align 4, !dbg !2016
  %53 = load float*, float** %v2.addr, align 8, !dbg !2017
  %arrayidx45 = getelementptr inbounds float, float* %53, i64 0, !dbg !2017
  %54 = load float, float* %arrayidx45, align 4, !dbg !2017
  %mul46 = fmul float %52, %54, !dbg !2018
  %sub47 = fsub float %mul43, %mul46, !dbg !2019
  %mul48 = fmul float %sub40, %sub47, !dbg !2020
  %55 = load float*, float** %v1.addr, align 8, !dbg !2021
  %arrayidx49 = getelementptr inbounds float, float* %55, i64 1, !dbg !2021
  %56 = load float, float* %arrayidx49, align 4, !dbg !2021
  %57 = load float*, float** %v2.addr, align 8, !dbg !2022
  %arrayidx50 = getelementptr inbounds float, float* %57, i64 1, !dbg !2022
  %58 = load float, float* %arrayidx50, align 4, !dbg !2022
  %sub51 = fsub float %56, %58, !dbg !2023
  %59 = load float*, float** %v3.addr, align 8, !dbg !2024
  %arrayidx52 = getelementptr inbounds float, float* %59, i64 0, !dbg !2024
  %60 = load float, float* %arrayidx52, align 4, !dbg !2024
  %61 = load float*, float** %v4.addr, align 8, !dbg !2025
  %arrayidx53 = getelementptr inbounds float, float* %61, i64 1, !dbg !2025
  %62 = load float, float* %arrayidx53, align 4, !dbg !2025
  %mul54 = fmul float %60, %62, !dbg !2026
  %63 = load float*, float** %v3.addr, align 8, !dbg !2027
  %arrayidx55 = getelementptr inbounds float, float* %63, i64 1, !dbg !2027
  %64 = load float, float* %arrayidx55, align 4, !dbg !2027
  %65 = load float*, float** %v4.addr, align 8, !dbg !2028
  %arrayidx56 = getelementptr inbounds float, float* %65, i64 0, !dbg !2028
  %66 = load float, float* %arrayidx56, align 4, !dbg !2028
  %mul57 = fmul float %64, %66, !dbg !2029
  %sub58 = fsub float %mul54, %mul57, !dbg !2030
  %mul59 = fmul float %sub51, %sub58, !dbg !2031
  %sub60 = fsub float %mul48, %mul59, !dbg !2032
  %67 = load float, float* %div, align 4, !dbg !2033
  %div61 = fdiv float %sub60, %67, !dbg !2034
  %68 = load float*, float** %vi.addr, align 8, !dbg !2035
  %arrayidx62 = getelementptr inbounds float, float* %68, i64 1, !dbg !2035
  store float %div61, float* %arrayidx62, align 4, !dbg !2036
  store i32 2, i32* %retval, align 4, !dbg !2037
  br label %return, !dbg !2037

return:                                           ; preds = %if.end, %if.then
  %69 = load i32, i32* %retval, align 4, !dbg !2038
  ret i32 %69, !dbg !2038
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @isect_line_line_v2(float* %v1, float* %v2, float* %v3, float* %v4) #0 !dbg !2039 {
entry:
  %retval = alloca i32, align 4
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  %div = alloca float, align 4
  %lambda = alloca float, align 4
  %mu = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !2042, metadata !DIExpression()), !dbg !2043
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !2044, metadata !DIExpression()), !dbg !2045
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !2046, metadata !DIExpression()), !dbg !2047
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !2048, metadata !DIExpression()), !dbg !2049
  call void @llvm.dbg.declare(metadata float* %div, metadata !2050, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.declare(metadata float* %lambda, metadata !2052, metadata !DIExpression()), !dbg !2053
  call void @llvm.dbg.declare(metadata float* %mu, metadata !2054, metadata !DIExpression()), !dbg !2055
  %0 = load float*, float** %v2.addr, align 8, !dbg !2056
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2056
  %1 = load float, float* %arrayidx, align 4, !dbg !2056
  %2 = load float*, float** %v1.addr, align 8, !dbg !2057
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !2057
  %3 = load float, float* %arrayidx1, align 4, !dbg !2057
  %sub = fsub float %1, %3, !dbg !2058
  %4 = load float*, float** %v4.addr, align 8, !dbg !2059
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !2059
  %5 = load float, float* %arrayidx2, align 4, !dbg !2059
  %6 = load float*, float** %v3.addr, align 8, !dbg !2060
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !2060
  %7 = load float, float* %arrayidx3, align 4, !dbg !2060
  %sub4 = fsub float %5, %7, !dbg !2061
  %mul = fmul float %sub, %sub4, !dbg !2062
  %8 = load float*, float** %v2.addr, align 8, !dbg !2063
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 1, !dbg !2063
  %9 = load float, float* %arrayidx5, align 4, !dbg !2063
  %10 = load float*, float** %v1.addr, align 8, !dbg !2064
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 1, !dbg !2064
  %11 = load float, float* %arrayidx6, align 4, !dbg !2064
  %sub7 = fsub float %9, %11, !dbg !2065
  %12 = load float*, float** %v4.addr, align 8, !dbg !2066
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 0, !dbg !2066
  %13 = load float, float* %arrayidx8, align 4, !dbg !2066
  %14 = load float*, float** %v3.addr, align 8, !dbg !2067
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 0, !dbg !2067
  %15 = load float, float* %arrayidx9, align 4, !dbg !2067
  %sub10 = fsub float %13, %15, !dbg !2068
  %mul11 = fmul float %sub7, %sub10, !dbg !2069
  %sub12 = fsub float %mul, %mul11, !dbg !2070
  store float %sub12, float* %div, align 4, !dbg !2071
  %16 = load float, float* %div, align 4, !dbg !2072
  %cmp = fcmp oeq float %16, 0.000000e+00, !dbg !2074
  br i1 %cmp, label %if.then, label %if.end, !dbg !2075

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !2076
  br label %return, !dbg !2076

if.end:                                           ; preds = %entry
  %17 = load float*, float** %v1.addr, align 8, !dbg !2077
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 1, !dbg !2077
  %18 = load float, float* %arrayidx13, align 4, !dbg !2077
  %19 = load float*, float** %v3.addr, align 8, !dbg !2078
  %arrayidx14 = getelementptr inbounds float, float* %19, i64 1, !dbg !2078
  %20 = load float, float* %arrayidx14, align 4, !dbg !2078
  %sub15 = fsub float %18, %20, !dbg !2079
  %21 = load float*, float** %v4.addr, align 8, !dbg !2080
  %arrayidx16 = getelementptr inbounds float, float* %21, i64 0, !dbg !2080
  %22 = load float, float* %arrayidx16, align 4, !dbg !2080
  %23 = load float*, float** %v3.addr, align 8, !dbg !2081
  %arrayidx17 = getelementptr inbounds float, float* %23, i64 0, !dbg !2081
  %24 = load float, float* %arrayidx17, align 4, !dbg !2081
  %sub18 = fsub float %22, %24, !dbg !2082
  %mul19 = fmul float %sub15, %sub18, !dbg !2083
  %25 = load float*, float** %v1.addr, align 8, !dbg !2084
  %arrayidx20 = getelementptr inbounds float, float* %25, i64 0, !dbg !2084
  %26 = load float, float* %arrayidx20, align 4, !dbg !2084
  %27 = load float*, float** %v3.addr, align 8, !dbg !2085
  %arrayidx21 = getelementptr inbounds float, float* %27, i64 0, !dbg !2085
  %28 = load float, float* %arrayidx21, align 4, !dbg !2085
  %sub22 = fsub float %26, %28, !dbg !2086
  %29 = load float*, float** %v4.addr, align 8, !dbg !2087
  %arrayidx23 = getelementptr inbounds float, float* %29, i64 1, !dbg !2087
  %30 = load float, float* %arrayidx23, align 4, !dbg !2087
  %31 = load float*, float** %v3.addr, align 8, !dbg !2088
  %arrayidx24 = getelementptr inbounds float, float* %31, i64 1, !dbg !2088
  %32 = load float, float* %arrayidx24, align 4, !dbg !2088
  %sub25 = fsub float %30, %32, !dbg !2089
  %mul26 = fmul float %sub22, %sub25, !dbg !2090
  %sub27 = fsub float %mul19, %mul26, !dbg !2091
  %33 = load float, float* %div, align 4, !dbg !2092
  %div28 = fdiv float %sub27, %33, !dbg !2093
  store float %div28, float* %lambda, align 4, !dbg !2094
  %34 = load float*, float** %v1.addr, align 8, !dbg !2095
  %arrayidx29 = getelementptr inbounds float, float* %34, i64 1, !dbg !2095
  %35 = load float, float* %arrayidx29, align 4, !dbg !2095
  %36 = load float*, float** %v3.addr, align 8, !dbg !2096
  %arrayidx30 = getelementptr inbounds float, float* %36, i64 1, !dbg !2096
  %37 = load float, float* %arrayidx30, align 4, !dbg !2096
  %sub31 = fsub float %35, %37, !dbg !2097
  %38 = load float*, float** %v2.addr, align 8, !dbg !2098
  %arrayidx32 = getelementptr inbounds float, float* %38, i64 0, !dbg !2098
  %39 = load float, float* %arrayidx32, align 4, !dbg !2098
  %40 = load float*, float** %v1.addr, align 8, !dbg !2099
  %arrayidx33 = getelementptr inbounds float, float* %40, i64 0, !dbg !2099
  %41 = load float, float* %arrayidx33, align 4, !dbg !2099
  %sub34 = fsub float %39, %41, !dbg !2100
  %mul35 = fmul float %sub31, %sub34, !dbg !2101
  %42 = load float*, float** %v1.addr, align 8, !dbg !2102
  %arrayidx36 = getelementptr inbounds float, float* %42, i64 0, !dbg !2102
  %43 = load float, float* %arrayidx36, align 4, !dbg !2102
  %44 = load float*, float** %v3.addr, align 8, !dbg !2103
  %arrayidx37 = getelementptr inbounds float, float* %44, i64 0, !dbg !2103
  %45 = load float, float* %arrayidx37, align 4, !dbg !2103
  %sub38 = fsub float %43, %45, !dbg !2104
  %46 = load float*, float** %v2.addr, align 8, !dbg !2105
  %arrayidx39 = getelementptr inbounds float, float* %46, i64 1, !dbg !2105
  %47 = load float, float* %arrayidx39, align 4, !dbg !2105
  %48 = load float*, float** %v1.addr, align 8, !dbg !2106
  %arrayidx40 = getelementptr inbounds float, float* %48, i64 1, !dbg !2106
  %49 = load float, float* %arrayidx40, align 4, !dbg !2106
  %sub41 = fsub float %47, %49, !dbg !2107
  %mul42 = fmul float %sub38, %sub41, !dbg !2108
  %sub43 = fsub float %mul35, %mul42, !dbg !2109
  %50 = load float, float* %div, align 4, !dbg !2110
  %div44 = fdiv float %sub43, %50, !dbg !2111
  store float %div44, float* %mu, align 4, !dbg !2112
  %51 = load float, float* %lambda, align 4, !dbg !2113
  %cmp45 = fcmp oge float %51, 0.000000e+00, !dbg !2115
  br i1 %cmp45, label %land.lhs.true, label %if.end60, !dbg !2116

land.lhs.true:                                    ; preds = %if.end
  %52 = load float, float* %lambda, align 4, !dbg !2117
  %cmp46 = fcmp ole float %52, 1.000000e+00, !dbg !2118
  br i1 %cmp46, label %land.lhs.true47, label %if.end60, !dbg !2119

land.lhs.true47:                                  ; preds = %land.lhs.true
  %53 = load float, float* %mu, align 4, !dbg !2120
  %cmp48 = fcmp oge float %53, 0.000000e+00, !dbg !2121
  br i1 %cmp48, label %land.lhs.true49, label %if.end60, !dbg !2122

land.lhs.true49:                                  ; preds = %land.lhs.true47
  %54 = load float, float* %mu, align 4, !dbg !2123
  %cmp50 = fcmp ole float %54, 1.000000e+00, !dbg !2124
  br i1 %cmp50, label %if.then51, label %if.end60, !dbg !2125

if.then51:                                        ; preds = %land.lhs.true49
  %55 = load float, float* %lambda, align 4, !dbg !2126
  %cmp52 = fcmp oeq float %55, 0.000000e+00, !dbg !2129
  br i1 %cmp52, label %if.then58, label %lor.lhs.false, !dbg !2130

lor.lhs.false:                                    ; preds = %if.then51
  %56 = load float, float* %lambda, align 4, !dbg !2131
  %cmp53 = fcmp oeq float %56, 1.000000e+00, !dbg !2132
  br i1 %cmp53, label %if.then58, label %lor.lhs.false54, !dbg !2133

lor.lhs.false54:                                  ; preds = %lor.lhs.false
  %57 = load float, float* %mu, align 4, !dbg !2134
  %cmp55 = fcmp oeq float %57, 0.000000e+00, !dbg !2135
  br i1 %cmp55, label %if.then58, label %lor.lhs.false56, !dbg !2136

lor.lhs.false56:                                  ; preds = %lor.lhs.false54
  %58 = load float, float* %mu, align 4, !dbg !2137
  %cmp57 = fcmp oeq float %58, 1.000000e+00, !dbg !2138
  br i1 %cmp57, label %if.then58, label %if.end59, !dbg !2139

if.then58:                                        ; preds = %lor.lhs.false56, %lor.lhs.false54, %lor.lhs.false, %if.then51
  store i32 1, i32* %retval, align 4, !dbg !2140
  br label %return, !dbg !2140

if.end59:                                         ; preds = %lor.lhs.false56
  store i32 2, i32* %retval, align 4, !dbg !2141
  br label %return, !dbg !2141

if.end60:                                         ; preds = %land.lhs.true49, %land.lhs.true47, %land.lhs.true, %if.end
  store i32 0, i32* %retval, align 4, !dbg !2142
  br label %return, !dbg !2142

return:                                           ; preds = %if.end60, %if.end59, %if.then58, %if.then
  %59 = load i32, i32* %retval, align 4, !dbg !2143
  ret i32 %59, !dbg !2143
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @isect_seg_seg_v2_point(float* %v1, float* %v2, float* %v3, float* %v4, float* %vi) #0 !dbg !2144 {
entry:
  %retval = alloca i32, align 4
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  %vi.addr = alloca float*, align 8
  %a1 = alloca float, align 4
  %a2 = alloca float, align 4
  %b1 = alloca float, align 4
  %b2 = alloca float, align 4
  %c1 = alloca float, align 4
  %c2 = alloca float, align 4
  %d = alloca float, align 4
  %u = alloca float, align 4
  %v = alloca float, align 4
  %eps = alloca float, align 4
  %eps_sq = alloca float, align 4
  %a = alloca [2 x float], align 4
  %b = alloca [2 x float], align 4
  %c = alloca [2 x float], align 4
  %u2 = alloca float, align 4
  %sw_ap = alloca float*, align 8
  %sw_ap32 = alloca float*, align 8
  %sw_ap56 = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !2145, metadata !DIExpression()), !dbg !2146
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !2147, metadata !DIExpression()), !dbg !2148
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !2149, metadata !DIExpression()), !dbg !2150
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !2151, metadata !DIExpression()), !dbg !2152
  store float* %vi, float** %vi.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vi.addr, metadata !2153, metadata !DIExpression()), !dbg !2154
  call void @llvm.dbg.declare(metadata float* %a1, metadata !2155, metadata !DIExpression()), !dbg !2156
  call void @llvm.dbg.declare(metadata float* %a2, metadata !2157, metadata !DIExpression()), !dbg !2158
  call void @llvm.dbg.declare(metadata float* %b1, metadata !2159, metadata !DIExpression()), !dbg !2160
  call void @llvm.dbg.declare(metadata float* %b2, metadata !2161, metadata !DIExpression()), !dbg !2162
  call void @llvm.dbg.declare(metadata float* %c1, metadata !2163, metadata !DIExpression()), !dbg !2164
  call void @llvm.dbg.declare(metadata float* %c2, metadata !2165, metadata !DIExpression()), !dbg !2166
  call void @llvm.dbg.declare(metadata float* %d, metadata !2167, metadata !DIExpression()), !dbg !2168
  call void @llvm.dbg.declare(metadata float* %u, metadata !2169, metadata !DIExpression()), !dbg !2170
  call void @llvm.dbg.declare(metadata float* %v, metadata !2171, metadata !DIExpression()), !dbg !2172
  call void @llvm.dbg.declare(metadata float* %eps, metadata !2173, metadata !DIExpression()), !dbg !2174
  store float 0x3EB0C6F7A0000000, float* %eps, align 4, !dbg !2174
  call void @llvm.dbg.declare(metadata float* %eps_sq, metadata !2175, metadata !DIExpression()), !dbg !2176
  store float 0x3D71979980000000, float* %eps_sq, align 4, !dbg !2176
  %0 = load float*, float** %v2.addr, align 8, !dbg !2177
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2177
  %1 = load float, float* %arrayidx, align 4, !dbg !2177
  %2 = load float*, float** %v1.addr, align 8, !dbg !2178
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !2178
  %3 = load float, float* %arrayidx1, align 4, !dbg !2178
  %sub = fsub float %1, %3, !dbg !2179
  store float %sub, float* %a1, align 4, !dbg !2180
  %4 = load float*, float** %v4.addr, align 8, !dbg !2181
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !2181
  %5 = load float, float* %arrayidx2, align 4, !dbg !2181
  %6 = load float*, float** %v3.addr, align 8, !dbg !2182
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 0, !dbg !2182
  %7 = load float, float* %arrayidx3, align 4, !dbg !2182
  %sub4 = fsub float %5, %7, !dbg !2183
  store float %sub4, float* %b1, align 4, !dbg !2184
  %8 = load float*, float** %v1.addr, align 8, !dbg !2185
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !2185
  %9 = load float, float* %arrayidx5, align 4, !dbg !2185
  %10 = load float*, float** %v4.addr, align 8, !dbg !2186
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 0, !dbg !2186
  %11 = load float, float* %arrayidx6, align 4, !dbg !2186
  %sub7 = fsub float %9, %11, !dbg !2187
  store float %sub7, float* %c1, align 4, !dbg !2188
  %12 = load float*, float** %v2.addr, align 8, !dbg !2189
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 1, !dbg !2189
  %13 = load float, float* %arrayidx8, align 4, !dbg !2189
  %14 = load float*, float** %v1.addr, align 8, !dbg !2190
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 1, !dbg !2190
  %15 = load float, float* %arrayidx9, align 4, !dbg !2190
  %sub10 = fsub float %13, %15, !dbg !2191
  store float %sub10, float* %a2, align 4, !dbg !2192
  %16 = load float*, float** %v4.addr, align 8, !dbg !2193
  %arrayidx11 = getelementptr inbounds float, float* %16, i64 1, !dbg !2193
  %17 = load float, float* %arrayidx11, align 4, !dbg !2193
  %18 = load float*, float** %v3.addr, align 8, !dbg !2194
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 1, !dbg !2194
  %19 = load float, float* %arrayidx12, align 4, !dbg !2194
  %sub13 = fsub float %17, %19, !dbg !2195
  store float %sub13, float* %b2, align 4, !dbg !2196
  %20 = load float*, float** %v1.addr, align 8, !dbg !2197
  %arrayidx14 = getelementptr inbounds float, float* %20, i64 1, !dbg !2197
  %21 = load float, float* %arrayidx14, align 4, !dbg !2197
  %22 = load float*, float** %v4.addr, align 8, !dbg !2198
  %arrayidx15 = getelementptr inbounds float, float* %22, i64 1, !dbg !2198
  %23 = load float, float* %arrayidx15, align 4, !dbg !2198
  %sub16 = fsub float %21, %23, !dbg !2199
  store float %sub16, float* %c2, align 4, !dbg !2200
  %24 = load float, float* %a1, align 4, !dbg !2201
  %25 = load float, float* %b2, align 4, !dbg !2202
  %mul = fmul float %24, %25, !dbg !2203
  %26 = load float, float* %a2, align 4, !dbg !2204
  %27 = load float, float* %b1, align 4, !dbg !2205
  %mul17 = fmul float %26, %27, !dbg !2206
  %sub18 = fsub float %mul, %mul17, !dbg !2207
  store float %sub18, float* %d, align 4, !dbg !2208
  %28 = load float, float* %d, align 4, !dbg !2209
  %cmp = fcmp oeq float %28, 0.000000e+00, !dbg !2211
  br i1 %cmp, label %if.then, label %if.end70, !dbg !2212

if.then:                                          ; preds = %entry
  %29 = load float, float* %a1, align 4, !dbg !2213
  %30 = load float, float* %c2, align 4, !dbg !2216
  %mul19 = fmul float %29, %30, !dbg !2217
  %31 = load float, float* %a2, align 4, !dbg !2218
  %32 = load float, float* %c1, align 4, !dbg !2219
  %mul20 = fmul float %31, %32, !dbg !2220
  %sub21 = fsub float %mul19, %mul20, !dbg !2221
  %cmp22 = fcmp oeq float %sub21, 0.000000e+00, !dbg !2222
  br i1 %cmp22, label %land.lhs.true, label %if.end69, !dbg !2223

land.lhs.true:                                    ; preds = %if.then
  %33 = load float, float* %b1, align 4, !dbg !2224
  %34 = load float, float* %c2, align 4, !dbg !2225
  %mul23 = fmul float %33, %34, !dbg !2226
  %35 = load float, float* %b2, align 4, !dbg !2227
  %36 = load float, float* %c1, align 4, !dbg !2228
  %mul24 = fmul float %35, %36, !dbg !2229
  %sub25 = fsub float %mul23, %mul24, !dbg !2230
  %cmp26 = fcmp oeq float %sub25, 0.000000e+00, !dbg !2231
  br i1 %cmp26, label %if.then27, label %if.end69, !dbg !2232

if.then27:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [2 x float]* %a, metadata !2233, metadata !DIExpression()), !dbg !2235
  call void @llvm.dbg.declare(metadata [2 x float]* %b, metadata !2236, metadata !DIExpression()), !dbg !2237
  call void @llvm.dbg.declare(metadata [2 x float]* %c, metadata !2238, metadata !DIExpression()), !dbg !2239
  call void @llvm.dbg.declare(metadata float* %u2, metadata !2240, metadata !DIExpression()), !dbg !2241
  %37 = load float*, float** %v1.addr, align 8, !dbg !2242
  %38 = load float*, float** %v2.addr, align 8, !dbg !2244
  %call = call zeroext i8 @equals_v2v2(float* %37, float* %38), !dbg !2245
  %tobool = icmp ne i8 %call, 0, !dbg !2245
  br i1 %tobool, label %if.then28, label %if.end37, !dbg !2246

if.then28:                                        ; preds = %if.then27
  %39 = load float*, float** %v3.addr, align 8, !dbg !2247
  %40 = load float*, float** %v4.addr, align 8, !dbg !2250
  %call29 = call float @len_squared_v2v2(float* %39, float* %40), !dbg !2251
  %cmp30 = fcmp ogt float %call29, 0x3D71979980000000, !dbg !2252
  br i1 %cmp30, label %if.then31, label %if.else, !dbg !2253

if.then31:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata float** %sw_ap, metadata !2254, metadata !DIExpression()), !dbg !2257
  %41 = load float*, float** %v1.addr, align 8, !dbg !2257
  store float* %41, float** %sw_ap, align 8, !dbg !2257
  %42 = load float*, float** %v3.addr, align 8, !dbg !2257
  store float* %42, float** %v1.addr, align 8, !dbg !2257
  %43 = load float*, float** %sw_ap, align 8, !dbg !2257
  store float* %43, float** %v3.addr, align 8, !dbg !2257
  call void @llvm.dbg.declare(metadata float** %sw_ap32, metadata !2258, metadata !DIExpression()), !dbg !2260
  %44 = load float*, float** %v2.addr, align 8, !dbg !2260
  store float* %44, float** %sw_ap32, align 8, !dbg !2260
  %45 = load float*, float** %v4.addr, align 8, !dbg !2260
  store float* %45, float** %v2.addr, align 8, !dbg !2260
  %46 = load float*, float** %sw_ap32, align 8, !dbg !2260
  store float* %46, float** %v4.addr, align 8, !dbg !2260
  br label %if.end36, !dbg !2261

if.else:                                          ; preds = %if.then28
  %47 = load float*, float** %v1.addr, align 8, !dbg !2262
  %48 = load float*, float** %v3.addr, align 8, !dbg !2265
  %call33 = call zeroext i8 @equals_v2v2(float* %47, float* %48), !dbg !2266
  %tobool34 = icmp ne i8 %call33, 0, !dbg !2266
  br i1 %tobool34, label %if.then35, label %if.end, !dbg !2267

if.then35:                                        ; preds = %if.else
  %49 = load float*, float** %vi.addr, align 8, !dbg !2268
  %50 = load float*, float** %v1.addr, align 8, !dbg !2270
  call void @copy_v2_v2(float* %49, float* %50), !dbg !2271
  store i32 1, i32* %retval, align 4, !dbg !2272
  br label %return, !dbg !2272

if.end:                                           ; preds = %if.else
  store i32 -1, i32* %retval, align 4, !dbg !2273
  br label %return, !dbg !2273

if.end36:                                         ; preds = %if.then31
  br label %if.end37, !dbg !2274

if.end37:                                         ; preds = %if.end36, %if.then27
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %a, i64 0, i64 0, !dbg !2275
  %51 = load float*, float** %v3.addr, align 8, !dbg !2276
  %52 = load float*, float** %v1.addr, align 8, !dbg !2277
  call void @sub_v2_v2v2(float* %arraydecay, float* %51, float* %52), !dbg !2278
  %arraydecay38 = getelementptr inbounds [2 x float], [2 x float]* %b, i64 0, i64 0, !dbg !2279
  %53 = load float*, float** %v2.addr, align 8, !dbg !2280
  %54 = load float*, float** %v1.addr, align 8, !dbg !2281
  call void @sub_v2_v2v2(float* %arraydecay38, float* %53, float* %54), !dbg !2282
  %arraydecay39 = getelementptr inbounds [2 x float], [2 x float]* %c, i64 0, i64 0, !dbg !2283
  %55 = load float*, float** %v2.addr, align 8, !dbg !2284
  %56 = load float*, float** %v1.addr, align 8, !dbg !2285
  call void @sub_v2_v2v2(float* %arraydecay39, float* %55, float* %56), !dbg !2286
  %arraydecay40 = getelementptr inbounds [2 x float], [2 x float]* %a, i64 0, i64 0, !dbg !2287
  %arraydecay41 = getelementptr inbounds [2 x float], [2 x float]* %b, i64 0, i64 0, !dbg !2288
  %call42 = call float @dot_v2v2(float* %arraydecay40, float* %arraydecay41), !dbg !2289
  %arraydecay43 = getelementptr inbounds [2 x float], [2 x float]* %c, i64 0, i64 0, !dbg !2290
  %arraydecay44 = getelementptr inbounds [2 x float], [2 x float]* %c, i64 0, i64 0, !dbg !2291
  %call45 = call float @dot_v2v2(float* %arraydecay43, float* %arraydecay44), !dbg !2292
  %div = fdiv float %call42, %call45, !dbg !2293
  store float %div, float* %u, align 4, !dbg !2294
  %arraydecay46 = getelementptr inbounds [2 x float], [2 x float]* %a, i64 0, i64 0, !dbg !2295
  %57 = load float*, float** %v4.addr, align 8, !dbg !2296
  %58 = load float*, float** %v1.addr, align 8, !dbg !2297
  call void @sub_v2_v2v2(float* %arraydecay46, float* %57, float* %58), !dbg !2298
  %arraydecay47 = getelementptr inbounds [2 x float], [2 x float]* %a, i64 0, i64 0, !dbg !2299
  %arraydecay48 = getelementptr inbounds [2 x float], [2 x float]* %b, i64 0, i64 0, !dbg !2300
  %call49 = call float @dot_v2v2(float* %arraydecay47, float* %arraydecay48), !dbg !2301
  %arraydecay50 = getelementptr inbounds [2 x float], [2 x float]* %c, i64 0, i64 0, !dbg !2302
  %arraydecay51 = getelementptr inbounds [2 x float], [2 x float]* %c, i64 0, i64 0, !dbg !2303
  %call52 = call float @dot_v2v2(float* %arraydecay50, float* %arraydecay51), !dbg !2304
  %div53 = fdiv float %call49, %call52, !dbg !2305
  store float %div53, float* %u2, align 4, !dbg !2306
  %59 = load float, float* %u, align 4, !dbg !2307
  %60 = load float, float* %u2, align 4, !dbg !2309
  %cmp54 = fcmp ogt float %59, %60, !dbg !2310
  br i1 %cmp54, label %if.then55, label %if.end57, !dbg !2311

if.then55:                                        ; preds = %if.end37
  call void @llvm.dbg.declare(metadata float* %sw_ap56, metadata !2312, metadata !DIExpression()), !dbg !2314
  %61 = load float, float* %u, align 4, !dbg !2314
  store float %61, float* %sw_ap56, align 4, !dbg !2314
  %62 = load float, float* %u2, align 4, !dbg !2314
  store float %62, float* %u, align 4, !dbg !2314
  %63 = load float, float* %sw_ap56, align 4, !dbg !2314
  store float %63, float* %u2, align 4, !dbg !2314
  br label %if.end57, !dbg !2314

if.end57:                                         ; preds = %if.then55, %if.end37
  %64 = load float, float* %u, align 4, !dbg !2315
  %cmp58 = fcmp ogt float %64, 0x3FF0000100000000, !dbg !2317
  br i1 %cmp58, label %if.then60, label %lor.lhs.false, !dbg !2318

lor.lhs.false:                                    ; preds = %if.end57
  %65 = load float, float* %u2, align 4, !dbg !2319
  %cmp59 = fcmp olt float %65, 0xBEB0C6F7A0000000, !dbg !2320
  br i1 %cmp59, label %if.then60, label %if.else61, !dbg !2321

if.then60:                                        ; preds = %lor.lhs.false, %if.end57
  store i32 -1, i32* %retval, align 4, !dbg !2322
  br label %return, !dbg !2322

if.else61:                                        ; preds = %lor.lhs.false
  %66 = load float, float* %u, align 4, !dbg !2323
  %call62 = call float @max_ff(float 0.000000e+00, float %66), !dbg !2325
  %67 = load float, float* %u2, align 4, !dbg !2326
  %call63 = call float @min_ff(float 1.000000e+00, float %67), !dbg !2327
  %cmp64 = fcmp oeq float %call62, %call63, !dbg !2328
  br i1 %cmp64, label %if.then65, label %if.end67, !dbg !2329

if.then65:                                        ; preds = %if.else61
  %68 = load float*, float** %vi.addr, align 8, !dbg !2330
  %69 = load float*, float** %v1.addr, align 8, !dbg !2332
  %70 = load float*, float** %v2.addr, align 8, !dbg !2333
  %71 = load float, float* %u, align 4, !dbg !2334
  %call66 = call float @max_ff(float 0.000000e+00, float %71), !dbg !2335
  call void @interp_v2_v2v2(float* %68, float* %69, float* %70, float %call66), !dbg !2336
  store i32 1, i32* %retval, align 4, !dbg !2337
  br label %return, !dbg !2337

if.end67:                                         ; preds = %if.else61
  br label %if.end68

if.end68:                                         ; preds = %if.end67
  br label %if.end69, !dbg !2338

if.end69:                                         ; preds = %if.end68, %land.lhs.true, %if.then
  store i32 -1, i32* %retval, align 4, !dbg !2339
  br label %return, !dbg !2339

if.end70:                                         ; preds = %entry
  %72 = load float, float* %c2, align 4, !dbg !2340
  %73 = load float, float* %b1, align 4, !dbg !2341
  %mul71 = fmul float %72, %73, !dbg !2342
  %74 = load float, float* %b2, align 4, !dbg !2343
  %75 = load float, float* %c1, align 4, !dbg !2344
  %mul72 = fmul float %74, %75, !dbg !2345
  %sub73 = fsub float %mul71, %mul72, !dbg !2346
  %76 = load float, float* %d, align 4, !dbg !2347
  %div74 = fdiv float %sub73, %76, !dbg !2348
  store float %div74, float* %u, align 4, !dbg !2349
  %77 = load float, float* %c1, align 4, !dbg !2350
  %78 = load float, float* %a2, align 4, !dbg !2351
  %mul75 = fmul float %77, %78, !dbg !2352
  %79 = load float, float* %a1, align 4, !dbg !2353
  %80 = load float, float* %c2, align 4, !dbg !2354
  %mul76 = fmul float %79, %80, !dbg !2355
  %sub77 = fsub float %mul75, %mul76, !dbg !2356
  %81 = load float, float* %d, align 4, !dbg !2357
  %div78 = fdiv float %sub77, %81, !dbg !2358
  store float %div78, float* %v, align 4, !dbg !2359
  %82 = load float, float* %u, align 4, !dbg !2360
  %cmp79 = fcmp oge float %82, 0xBEB0C6F7A0000000, !dbg !2362
  br i1 %cmp79, label %land.lhs.true80, label %if.end87, !dbg !2363

land.lhs.true80:                                  ; preds = %if.end70
  %83 = load float, float* %u, align 4, !dbg !2364
  %cmp81 = fcmp ole float %83, 0x3FF0000100000000, !dbg !2365
  br i1 %cmp81, label %land.lhs.true82, label %if.end87, !dbg !2366

land.lhs.true82:                                  ; preds = %land.lhs.true80
  %84 = load float, float* %v, align 4, !dbg !2367
  %cmp83 = fcmp oge float %84, 0xBEB0C6F7A0000000, !dbg !2368
  br i1 %cmp83, label %land.lhs.true84, label %if.end87, !dbg !2369

land.lhs.true84:                                  ; preds = %land.lhs.true82
  %85 = load float, float* %v, align 4, !dbg !2370
  %cmp85 = fcmp ole float %85, 0x3FF0000100000000, !dbg !2371
  br i1 %cmp85, label %if.then86, label %if.end87, !dbg !2372

if.then86:                                        ; preds = %land.lhs.true84
  %86 = load float*, float** %vi.addr, align 8, !dbg !2373
  %87 = load float*, float** %v1.addr, align 8, !dbg !2375
  %88 = load float*, float** %v2.addr, align 8, !dbg !2376
  %89 = load float, float* %u, align 4, !dbg !2377
  call void @interp_v2_v2v2(float* %86, float* %87, float* %88, float %89), !dbg !2378
  store i32 1, i32* %retval, align 4, !dbg !2379
  br label %return, !dbg !2379

if.end87:                                         ; preds = %land.lhs.true84, %land.lhs.true82, %land.lhs.true80, %if.end70
  store i32 -1, i32* %retval, align 4, !dbg !2380
  br label %return, !dbg !2380

return:                                           ; preds = %if.end87, %if.then86, %if.end69, %if.then65, %if.then60, %if.end, %if.then35
  %90 = load i32, i32* %retval, align 4, !dbg !2381
  ret i32 %90, !dbg !2381
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @equals_v2v2(float* %v1, float* %v2) #0 !dbg !2382 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !2385, metadata !DIExpression()), !dbg !2386
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !2387, metadata !DIExpression()), !dbg !2388
  %0 = load float*, float** %v1.addr, align 8, !dbg !2389
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2389
  %1 = load float, float* %arrayidx, align 4, !dbg !2389
  %2 = load float*, float** %v2.addr, align 8, !dbg !2390
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !2390
  %3 = load float, float* %arrayidx1, align 4, !dbg !2390
  %cmp = fcmp oeq float %1, %3, !dbg !2391
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !2392

land.rhs:                                         ; preds = %entry
  %4 = load float*, float** %v1.addr, align 8, !dbg !2393
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !2393
  %5 = load float, float* %arrayidx2, align 4, !dbg !2393
  %6 = load float*, float** %v2.addr, align 8, !dbg !2394
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !2394
  %7 = load float, float* %arrayidx3, align 4, !dbg !2394
  %cmp4 = fcmp oeq float %5, %7, !dbg !2395
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp4, %land.rhs ], !dbg !2396
  %land.ext = zext i1 %8 to i32, !dbg !2392
  %conv = trunc i32 %land.ext to i8, !dbg !2397
  ret i8 %conv, !dbg !2398
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v2v2(float* %a, float* %b) #0 !dbg !2399 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [2 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !2400, metadata !DIExpression()), !dbg !2401
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !2402, metadata !DIExpression()), !dbg !2403
  call void @llvm.dbg.declare(metadata [2 x float]* %d, metadata !2404, metadata !DIExpression()), !dbg !2405
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !2406
  %0 = load float*, float** %b.addr, align 8, !dbg !2407
  %1 = load float*, float** %a.addr, align 8, !dbg !2408
  call void @sub_v2_v2v2(float* %arraydecay, float* %0, float* %1), !dbg !2409
  %arraydecay1 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !2410
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !2411
  %call = call float @dot_v2v2(float* %arraydecay1, float* %arraydecay2), !dbg !2412
  ret float %call, !dbg !2413
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v2_v2v2(float* %r, float* %a, float* %b) #0 !dbg !2414 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !2415, metadata !DIExpression()), !dbg !2416
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !2417, metadata !DIExpression()), !dbg !2418
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !2419, metadata !DIExpression()), !dbg !2420
  %0 = load float*, float** %a.addr, align 8, !dbg !2421
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2421
  %1 = load float, float* %arrayidx, align 4, !dbg !2421
  %2 = load float*, float** %b.addr, align 8, !dbg !2422
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !2422
  %3 = load float, float* %arrayidx1, align 4, !dbg !2422
  %sub = fsub float %1, %3, !dbg !2423
  %4 = load float*, float** %r.addr, align 8, !dbg !2424
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !2424
  store float %sub, float* %arrayidx2, align 4, !dbg !2425
  %5 = load float*, float** %a.addr, align 8, !dbg !2426
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !2426
  %6 = load float, float* %arrayidx3, align 4, !dbg !2426
  %7 = load float*, float** %b.addr, align 8, !dbg !2427
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !2427
  %8 = load float, float* %arrayidx4, align 4, !dbg !2427
  %sub5 = fsub float %6, %8, !dbg !2428
  %9 = load float*, float** %r.addr, align 8, !dbg !2429
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !2429
  store float %sub5, float* %arrayidx6, align 4, !dbg !2430
  ret void, !dbg !2431
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v2v2(float* %a, float* %b) #0 !dbg !2432 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !2433, metadata !DIExpression()), !dbg !2434
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !2435, metadata !DIExpression()), !dbg !2436
  %0 = load float*, float** %a.addr, align 8, !dbg !2437
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2437
  %1 = load float, float* %arrayidx, align 4, !dbg !2437
  %2 = load float*, float** %b.addr, align 8, !dbg !2438
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !2438
  %3 = load float, float* %arrayidx1, align 4, !dbg !2438
  %mul = fmul float %1, %3, !dbg !2439
  %4 = load float*, float** %a.addr, align 8, !dbg !2440
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !2440
  %5 = load float, float* %arrayidx2, align 4, !dbg !2440
  %6 = load float*, float** %b.addr, align 8, !dbg !2441
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !2441
  %7 = load float, float* %arrayidx3, align 4, !dbg !2441
  %mul4 = fmul float %5, %7, !dbg !2442
  %add = fadd float %mul, %mul4, !dbg !2443
  ret float %add, !dbg !2444
}

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !2445 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !2449, metadata !DIExpression()), !dbg !2450
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !2451, metadata !DIExpression()), !dbg !2452
  %0 = load float, float* %a.addr, align 4, !dbg !2453
  %1 = load float, float* %b.addr, align 4, !dbg !2454
  %cmp = fcmp ogt float %0, %1, !dbg !2455
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2456

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !2457
  br label %cond.end, !dbg !2456

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !2458
  br label %cond.end, !dbg !2456

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !2456
  ret float %cond, !dbg !2459
}

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !2460 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !2461, metadata !DIExpression()), !dbg !2462
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !2463, metadata !DIExpression()), !dbg !2464
  %0 = load float, float* %a.addr, align 4, !dbg !2465
  %1 = load float, float* %b.addr, align 4, !dbg !2466
  %cmp = fcmp olt float %0, %1, !dbg !2467
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2468

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !2469
  br label %cond.end, !dbg !2468

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !2470
  br label %cond.end, !dbg !2468

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !2468
  ret float %cond, !dbg !2471
}

declare dso_local void @interp_v2_v2v2(float*, float*, float*, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @isect_seg_seg_v2(float* %v1, float* %v2, float* %v3, float* %v4) #0 !dbg !2472 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !2475, metadata !DIExpression()), !dbg !2476
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !2477, metadata !DIExpression()), !dbg !2478
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !2479, metadata !DIExpression()), !dbg !2480
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !2481, metadata !DIExpression()), !dbg !2482
  %0 = load float*, float** %v4.addr, align 8, !dbg !2483
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !2483
  %1 = load float, float* %arrayidx, align 4, !dbg !2483
  %2 = load float*, float** %v1.addr, align 8, !dbg !2483
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !2483
  %3 = load float, float* %arrayidx1, align 4, !dbg !2483
  %sub = fsub float %1, %3, !dbg !2483
  %4 = load float*, float** %v3.addr, align 8, !dbg !2483
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !2483
  %5 = load float, float* %arrayidx2, align 4, !dbg !2483
  %6 = load float*, float** %v1.addr, align 8, !dbg !2483
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 0, !dbg !2483
  %7 = load float, float* %arrayidx3, align 4, !dbg !2483
  %sub4 = fsub float %5, %7, !dbg !2483
  %mul = fmul float %sub, %sub4, !dbg !2483
  %8 = load float*, float** %v3.addr, align 8, !dbg !2483
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 1, !dbg !2483
  %9 = load float, float* %arrayidx5, align 4, !dbg !2483
  %10 = load float*, float** %v1.addr, align 8, !dbg !2483
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 1, !dbg !2483
  %11 = load float, float* %arrayidx6, align 4, !dbg !2483
  %sub7 = fsub float %9, %11, !dbg !2483
  %12 = load float*, float** %v4.addr, align 8, !dbg !2483
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 0, !dbg !2483
  %13 = load float, float* %arrayidx8, align 4, !dbg !2483
  %14 = load float*, float** %v1.addr, align 8, !dbg !2483
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 0, !dbg !2483
  %15 = load float, float* %arrayidx9, align 4, !dbg !2483
  %sub10 = fsub float %13, %15, !dbg !2483
  %mul11 = fmul float %sub7, %sub10, !dbg !2483
  %cmp = fcmp ogt float %mul, %mul11, !dbg !2483
  %conv = zext i1 %cmp to i32, !dbg !2483
  %16 = load float*, float** %v4.addr, align 8, !dbg !2484
  %arrayidx12 = getelementptr inbounds float, float* %16, i64 1, !dbg !2484
  %17 = load float, float* %arrayidx12, align 4, !dbg !2484
  %18 = load float*, float** %v2.addr, align 8, !dbg !2484
  %arrayidx13 = getelementptr inbounds float, float* %18, i64 1, !dbg !2484
  %19 = load float, float* %arrayidx13, align 4, !dbg !2484
  %sub14 = fsub float %17, %19, !dbg !2484
  %20 = load float*, float** %v3.addr, align 8, !dbg !2484
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 0, !dbg !2484
  %21 = load float, float* %arrayidx15, align 4, !dbg !2484
  %22 = load float*, float** %v2.addr, align 8, !dbg !2484
  %arrayidx16 = getelementptr inbounds float, float* %22, i64 0, !dbg !2484
  %23 = load float, float* %arrayidx16, align 4, !dbg !2484
  %sub17 = fsub float %21, %23, !dbg !2484
  %mul18 = fmul float %sub14, %sub17, !dbg !2484
  %24 = load float*, float** %v3.addr, align 8, !dbg !2484
  %arrayidx19 = getelementptr inbounds float, float* %24, i64 1, !dbg !2484
  %25 = load float, float* %arrayidx19, align 4, !dbg !2484
  %26 = load float*, float** %v2.addr, align 8, !dbg !2484
  %arrayidx20 = getelementptr inbounds float, float* %26, i64 1, !dbg !2484
  %27 = load float, float* %arrayidx20, align 4, !dbg !2484
  %sub21 = fsub float %25, %27, !dbg !2484
  %28 = load float*, float** %v4.addr, align 8, !dbg !2484
  %arrayidx22 = getelementptr inbounds float, float* %28, i64 0, !dbg !2484
  %29 = load float, float* %arrayidx22, align 4, !dbg !2484
  %30 = load float*, float** %v2.addr, align 8, !dbg !2484
  %arrayidx23 = getelementptr inbounds float, float* %30, i64 0, !dbg !2484
  %31 = load float, float* %arrayidx23, align 4, !dbg !2484
  %sub24 = fsub float %29, %31, !dbg !2484
  %mul25 = fmul float %sub21, %sub24, !dbg !2484
  %cmp26 = fcmp ogt float %mul18, %mul25, !dbg !2484
  %conv27 = zext i1 %cmp26 to i32, !dbg !2484
  %cmp28 = icmp ne i32 %conv, %conv27, !dbg !2485
  br i1 %cmp28, label %land.rhs, label %land.end, !dbg !2486

land.rhs:                                         ; preds = %entry
  %32 = load float*, float** %v3.addr, align 8, !dbg !2487
  %arrayidx30 = getelementptr inbounds float, float* %32, i64 1, !dbg !2487
  %33 = load float, float* %arrayidx30, align 4, !dbg !2487
  %34 = load float*, float** %v1.addr, align 8, !dbg !2487
  %arrayidx31 = getelementptr inbounds float, float* %34, i64 1, !dbg !2487
  %35 = load float, float* %arrayidx31, align 4, !dbg !2487
  %sub32 = fsub float %33, %35, !dbg !2487
  %36 = load float*, float** %v2.addr, align 8, !dbg !2487
  %arrayidx33 = getelementptr inbounds float, float* %36, i64 0, !dbg !2487
  %37 = load float, float* %arrayidx33, align 4, !dbg !2487
  %38 = load float*, float** %v1.addr, align 8, !dbg !2487
  %arrayidx34 = getelementptr inbounds float, float* %38, i64 0, !dbg !2487
  %39 = load float, float* %arrayidx34, align 4, !dbg !2487
  %sub35 = fsub float %37, %39, !dbg !2487
  %mul36 = fmul float %sub32, %sub35, !dbg !2487
  %40 = load float*, float** %v2.addr, align 8, !dbg !2487
  %arrayidx37 = getelementptr inbounds float, float* %40, i64 1, !dbg !2487
  %41 = load float, float* %arrayidx37, align 4, !dbg !2487
  %42 = load float*, float** %v1.addr, align 8, !dbg !2487
  %arrayidx38 = getelementptr inbounds float, float* %42, i64 1, !dbg !2487
  %43 = load float, float* %arrayidx38, align 4, !dbg !2487
  %sub39 = fsub float %41, %43, !dbg !2487
  %44 = load float*, float** %v3.addr, align 8, !dbg !2487
  %arrayidx40 = getelementptr inbounds float, float* %44, i64 0, !dbg !2487
  %45 = load float, float* %arrayidx40, align 4, !dbg !2487
  %46 = load float*, float** %v1.addr, align 8, !dbg !2487
  %arrayidx41 = getelementptr inbounds float, float* %46, i64 0, !dbg !2487
  %47 = load float, float* %arrayidx41, align 4, !dbg !2487
  %sub42 = fsub float %45, %47, !dbg !2487
  %mul43 = fmul float %sub39, %sub42, !dbg !2487
  %cmp44 = fcmp ogt float %mul36, %mul43, !dbg !2487
  %conv45 = zext i1 %cmp44 to i32, !dbg !2487
  %48 = load float*, float** %v4.addr, align 8, !dbg !2488
  %arrayidx46 = getelementptr inbounds float, float* %48, i64 1, !dbg !2488
  %49 = load float, float* %arrayidx46, align 4, !dbg !2488
  %50 = load float*, float** %v1.addr, align 8, !dbg !2488
  %arrayidx47 = getelementptr inbounds float, float* %50, i64 1, !dbg !2488
  %51 = load float, float* %arrayidx47, align 4, !dbg !2488
  %sub48 = fsub float %49, %51, !dbg !2488
  %52 = load float*, float** %v2.addr, align 8, !dbg !2488
  %arrayidx49 = getelementptr inbounds float, float* %52, i64 0, !dbg !2488
  %53 = load float, float* %arrayidx49, align 4, !dbg !2488
  %54 = load float*, float** %v1.addr, align 8, !dbg !2488
  %arrayidx50 = getelementptr inbounds float, float* %54, i64 0, !dbg !2488
  %55 = load float, float* %arrayidx50, align 4, !dbg !2488
  %sub51 = fsub float %53, %55, !dbg !2488
  %mul52 = fmul float %sub48, %sub51, !dbg !2488
  %56 = load float*, float** %v2.addr, align 8, !dbg !2488
  %arrayidx53 = getelementptr inbounds float, float* %56, i64 1, !dbg !2488
  %57 = load float, float* %arrayidx53, align 4, !dbg !2488
  %58 = load float*, float** %v1.addr, align 8, !dbg !2488
  %arrayidx54 = getelementptr inbounds float, float* %58, i64 1, !dbg !2488
  %59 = load float, float* %arrayidx54, align 4, !dbg !2488
  %sub55 = fsub float %57, %59, !dbg !2488
  %60 = load float*, float** %v4.addr, align 8, !dbg !2488
  %arrayidx56 = getelementptr inbounds float, float* %60, i64 0, !dbg !2488
  %61 = load float, float* %arrayidx56, align 4, !dbg !2488
  %62 = load float*, float** %v1.addr, align 8, !dbg !2488
  %arrayidx57 = getelementptr inbounds float, float* %62, i64 0, !dbg !2488
  %63 = load float, float* %arrayidx57, align 4, !dbg !2488
  %sub58 = fsub float %61, %63, !dbg !2488
  %mul59 = fmul float %sub55, %sub58, !dbg !2488
  %cmp60 = fcmp ogt float %mul52, %mul59, !dbg !2488
  %conv61 = zext i1 %cmp60 to i32, !dbg !2488
  %cmp62 = icmp ne i32 %conv45, %conv61, !dbg !2489
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %64 = phi i1 [ false, %entry ], [ %cmp62, %land.rhs ], !dbg !2490
  %land.ext = zext i1 %64 to i32, !dbg !2486
  %conv64 = trunc i32 %land.ext to i8, !dbg !2483
  ret i8 %conv64, !dbg !2491
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @isect_line_sphere_v3(float* %l1, float* %l2, float* %sp, float %r, float* %r_p1, float* %r_p2) #0 !dbg !2492 {
entry:
  %retval = alloca i32, align 4
  %l1.addr = alloca float*, align 8
  %l2.addr = alloca float*, align 8
  %sp.addr = alloca float*, align 8
  %r.addr = alloca float, align 4
  %r_p1.addr = alloca float*, align 8
  %r_p2.addr = alloca float*, align 8
  %ldir = alloca [3 x float], align 4
  %a = alloca float, align 4
  %b = alloca float, align 4
  %c = alloca float, align 4
  %i = alloca float, align 4
  %mu = alloca float, align 4
  %i_sqrt = alloca float, align 4
  store float* %l1, float** %l1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1.addr, metadata !2495, metadata !DIExpression()), !dbg !2496
  store float* %l2, float** %l2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2.addr, metadata !2497, metadata !DIExpression()), !dbg !2498
  store float* %sp, float** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sp.addr, metadata !2499, metadata !DIExpression()), !dbg !2500
  store float %r, float* %r.addr, align 4
  call void @llvm.dbg.declare(metadata float* %r.addr, metadata !2501, metadata !DIExpression()), !dbg !2502
  store float* %r_p1, float** %r_p1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_p1.addr, metadata !2503, metadata !DIExpression()), !dbg !2504
  store float* %r_p2, float** %r_p2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_p2.addr, metadata !2505, metadata !DIExpression()), !dbg !2506
  call void @llvm.dbg.declare(metadata [3 x float]* %ldir, metadata !2507, metadata !DIExpression()), !dbg !2508
  %arrayinit.begin = getelementptr inbounds [3 x float], [3 x float]* %ldir, i64 0, i64 0, !dbg !2509
  %0 = load float*, float** %l2.addr, align 8, !dbg !2510
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2510
  %1 = load float, float* %arrayidx, align 4, !dbg !2510
  %2 = load float*, float** %l1.addr, align 8, !dbg !2511
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !2511
  %3 = load float, float* %arrayidx1, align 4, !dbg !2511
  %sub = fsub float %1, %3, !dbg !2512
  store float %sub, float* %arrayinit.begin, align 4, !dbg !2509
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !2509
  %4 = load float*, float** %l2.addr, align 8, !dbg !2513
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !2513
  %5 = load float, float* %arrayidx2, align 4, !dbg !2513
  %6 = load float*, float** %l1.addr, align 8, !dbg !2514
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !2514
  %7 = load float, float* %arrayidx3, align 4, !dbg !2514
  %sub4 = fsub float %5, %7, !dbg !2515
  store float %sub4, float* %arrayinit.element, align 4, !dbg !2509
  %arrayinit.element5 = getelementptr inbounds float, float* %arrayinit.element, i64 1, !dbg !2509
  %8 = load float*, float** %l2.addr, align 8, !dbg !2516
  %arrayidx6 = getelementptr inbounds float, float* %8, i64 2, !dbg !2516
  %9 = load float, float* %arrayidx6, align 4, !dbg !2516
  %10 = load float*, float** %l1.addr, align 8, !dbg !2517
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !2517
  %11 = load float, float* %arrayidx7, align 4, !dbg !2517
  %sub8 = fsub float %9, %11, !dbg !2518
  store float %sub8, float* %arrayinit.element5, align 4, !dbg !2509
  call void @llvm.dbg.declare(metadata float* %a, metadata !2519, metadata !DIExpression()), !dbg !2520
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %ldir, i64 0, i64 0, !dbg !2521
  %call = call float @len_squared_v3(float* %arraydecay), !dbg !2522
  store float %call, float* %a, align 4, !dbg !2520
  call void @llvm.dbg.declare(metadata float* %b, metadata !2523, metadata !DIExpression()), !dbg !2524
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %ldir, i64 0, i64 0, !dbg !2525
  %12 = load float, float* %arrayidx9, align 4, !dbg !2525
  %13 = load float*, float** %l1.addr, align 8, !dbg !2526
  %arrayidx10 = getelementptr inbounds float, float* %13, i64 0, !dbg !2526
  %14 = load float, float* %arrayidx10, align 4, !dbg !2526
  %15 = load float*, float** %sp.addr, align 8, !dbg !2527
  %arrayidx11 = getelementptr inbounds float, float* %15, i64 0, !dbg !2527
  %16 = load float, float* %arrayidx11, align 4, !dbg !2527
  %sub12 = fsub float %14, %16, !dbg !2528
  %mul = fmul float %12, %sub12, !dbg !2529
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %ldir, i64 0, i64 1, !dbg !2530
  %17 = load float, float* %arrayidx13, align 4, !dbg !2530
  %18 = load float*, float** %l1.addr, align 8, !dbg !2531
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 1, !dbg !2531
  %19 = load float, float* %arrayidx14, align 4, !dbg !2531
  %20 = load float*, float** %sp.addr, align 8, !dbg !2532
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 1, !dbg !2532
  %21 = load float, float* %arrayidx15, align 4, !dbg !2532
  %sub16 = fsub float %19, %21, !dbg !2533
  %mul17 = fmul float %17, %sub16, !dbg !2534
  %add = fadd float %mul, %mul17, !dbg !2535
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %ldir, i64 0, i64 2, !dbg !2536
  %22 = load float, float* %arrayidx18, align 4, !dbg !2536
  %23 = load float*, float** %l1.addr, align 8, !dbg !2537
  %arrayidx19 = getelementptr inbounds float, float* %23, i64 2, !dbg !2537
  %24 = load float, float* %arrayidx19, align 4, !dbg !2537
  %25 = load float*, float** %sp.addr, align 8, !dbg !2538
  %arrayidx20 = getelementptr inbounds float, float* %25, i64 2, !dbg !2538
  %26 = load float, float* %arrayidx20, align 4, !dbg !2538
  %sub21 = fsub float %24, %26, !dbg !2539
  %mul22 = fmul float %22, %sub21, !dbg !2540
  %add23 = fadd float %add, %mul22, !dbg !2541
  %mul24 = fmul float 2.000000e+00, %add23, !dbg !2542
  store float %mul24, float* %b, align 4, !dbg !2524
  call void @llvm.dbg.declare(metadata float* %c, metadata !2543, metadata !DIExpression()), !dbg !2544
  %27 = load float*, float** %sp.addr, align 8, !dbg !2545
  %call25 = call float @len_squared_v3(float* %27), !dbg !2546
  %28 = load float*, float** %l1.addr, align 8, !dbg !2547
  %call26 = call float @len_squared_v3(float* %28), !dbg !2548
  %add27 = fadd float %call25, %call26, !dbg !2549
  %29 = load float*, float** %sp.addr, align 8, !dbg !2550
  %30 = load float*, float** %l1.addr, align 8, !dbg !2551
  %call28 = call float @dot_v3v3(float* %29, float* %30), !dbg !2552
  %mul29 = fmul float 2.000000e+00, %call28, !dbg !2553
  %sub30 = fsub float %add27, %mul29, !dbg !2554
  %31 = load float, float* %r.addr, align 4, !dbg !2555
  %32 = load float, float* %r.addr, align 4, !dbg !2556
  %mul31 = fmul float %31, %32, !dbg !2557
  %sub32 = fsub float %sub30, %mul31, !dbg !2558
  store float %sub32, float* %c, align 4, !dbg !2544
  call void @llvm.dbg.declare(metadata float* %i, metadata !2559, metadata !DIExpression()), !dbg !2560
  %33 = load float, float* %b, align 4, !dbg !2561
  %34 = load float, float* %b, align 4, !dbg !2562
  %mul33 = fmul float %33, %34, !dbg !2563
  %35 = load float, float* %a, align 4, !dbg !2564
  %mul34 = fmul float 4.000000e+00, %35, !dbg !2565
  %36 = load float, float* %c, align 4, !dbg !2566
  %mul35 = fmul float %mul34, %36, !dbg !2567
  %sub36 = fsub float %mul33, %mul35, !dbg !2568
  store float %sub36, float* %i, align 4, !dbg !2560
  call void @llvm.dbg.declare(metadata float* %mu, metadata !2569, metadata !DIExpression()), !dbg !2570
  %37 = load float, float* %i, align 4, !dbg !2571
  %cmp = fcmp olt float %37, 0.000000e+00, !dbg !2573
  br i1 %cmp, label %if.then, label %if.else, !dbg !2574

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2575
  br label %return, !dbg !2575

if.else:                                          ; preds = %entry
  %38 = load float, float* %i, align 4, !dbg !2577
  %cmp37 = fcmp oeq float %38, 0.000000e+00, !dbg !2579
  br i1 %cmp37, label %if.then38, label %if.else41, !dbg !2580

if.then38:                                        ; preds = %if.else
  %39 = load float, float* %b, align 4, !dbg !2581
  %fneg = fneg float %39, !dbg !2583
  %40 = load float, float* %a, align 4, !dbg !2584
  %mul39 = fmul float 2.000000e+00, %40, !dbg !2585
  %div = fdiv float %fneg, %mul39, !dbg !2586
  store float %div, float* %mu, align 4, !dbg !2587
  %41 = load float*, float** %r_p1.addr, align 8, !dbg !2588
  %42 = load float*, float** %l1.addr, align 8, !dbg !2589
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %ldir, i64 0, i64 0, !dbg !2590
  %43 = load float, float* %mu, align 4, !dbg !2591
  call void @madd_v3_v3v3fl(float* %41, float* %42, float* %arraydecay40, float %43), !dbg !2592
  store i32 1, i32* %retval, align 4, !dbg !2593
  br label %return, !dbg !2593

if.else41:                                        ; preds = %if.else
  %44 = load float, float* %i, align 4, !dbg !2594
  %cmp42 = fcmp ogt float %44, 0.000000e+00, !dbg !2596
  br i1 %cmp42, label %if.then43, label %if.else55, !dbg !2597

if.then43:                                        ; preds = %if.else41
  call void @llvm.dbg.declare(metadata float* %i_sqrt, metadata !2598, metadata !DIExpression()), !dbg !2600
  %45 = load float, float* %i, align 4, !dbg !2601
  %call44 = call float @sqrtf(float %45) #5, !dbg !2602
  store float %call44, float* %i_sqrt, align 4, !dbg !2600
  %46 = load float, float* %b, align 4, !dbg !2603
  %fneg45 = fneg float %46, !dbg !2604
  %47 = load float, float* %i_sqrt, align 4, !dbg !2605
  %add46 = fadd float %fneg45, %47, !dbg !2606
  %48 = load float, float* %a, align 4, !dbg !2607
  %mul47 = fmul float 2.000000e+00, %48, !dbg !2608
  %div48 = fdiv float %add46, %mul47, !dbg !2609
  store float %div48, float* %mu, align 4, !dbg !2610
  %49 = load float*, float** %r_p1.addr, align 8, !dbg !2611
  %50 = load float*, float** %l1.addr, align 8, !dbg !2612
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %ldir, i64 0, i64 0, !dbg !2613
  %51 = load float, float* %mu, align 4, !dbg !2614
  call void @madd_v3_v3v3fl(float* %49, float* %50, float* %arraydecay49, float %51), !dbg !2615
  %52 = load float, float* %b, align 4, !dbg !2616
  %fneg50 = fneg float %52, !dbg !2617
  %53 = load float, float* %i_sqrt, align 4, !dbg !2618
  %sub51 = fsub float %fneg50, %53, !dbg !2619
  %54 = load float, float* %a, align 4, !dbg !2620
  %mul52 = fmul float 2.000000e+00, %54, !dbg !2621
  %div53 = fdiv float %sub51, %mul52, !dbg !2622
  store float %div53, float* %mu, align 4, !dbg !2623
  %55 = load float*, float** %r_p2.addr, align 8, !dbg !2624
  %56 = load float*, float** %l1.addr, align 8, !dbg !2625
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %ldir, i64 0, i64 0, !dbg !2626
  %57 = load float, float* %mu, align 4, !dbg !2627
  call void @madd_v3_v3v3fl(float* %55, float* %56, float* %arraydecay54, float %57), !dbg !2628
  store i32 2, i32* %retval, align 4, !dbg !2629
  br label %return, !dbg !2629

if.else55:                                        ; preds = %if.else41
  store i32 -1, i32* %retval, align 4, !dbg !2630
  br label %return, !dbg !2630

return:                                           ; preds = %if.else55, %if.then43, %if.then38, %if.then
  %58 = load i32, i32* %retval, align 4, !dbg !2632
  ret i32 %58, !dbg !2632
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @isect_line_sphere_v2(float* %l1, float* %l2, float* %sp, float %r, float* %r_p1, float* %r_p2) #0 !dbg !2633 {
entry:
  %retval = alloca i32, align 4
  %l1.addr = alloca float*, align 8
  %l2.addr = alloca float*, align 8
  %sp.addr = alloca float*, align 8
  %r.addr = alloca float, align 4
  %r_p1.addr = alloca float*, align 8
  %r_p2.addr = alloca float*, align 8
  %ldir = alloca [2 x float], align 4
  %a = alloca float, align 4
  %b = alloca float, align 4
  %c = alloca float, align 4
  %i = alloca float, align 4
  %mu = alloca float, align 4
  %i_sqrt = alloca float, align 4
  store float* %l1, float** %l1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1.addr, metadata !2634, metadata !DIExpression()), !dbg !2635
  store float* %l2, float** %l2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2.addr, metadata !2636, metadata !DIExpression()), !dbg !2637
  store float* %sp, float** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sp.addr, metadata !2638, metadata !DIExpression()), !dbg !2639
  store float %r, float* %r.addr, align 4
  call void @llvm.dbg.declare(metadata float* %r.addr, metadata !2640, metadata !DIExpression()), !dbg !2641
  store float* %r_p1, float** %r_p1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_p1.addr, metadata !2642, metadata !DIExpression()), !dbg !2643
  store float* %r_p2, float** %r_p2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_p2.addr, metadata !2644, metadata !DIExpression()), !dbg !2645
  call void @llvm.dbg.declare(metadata [2 x float]* %ldir, metadata !2646, metadata !DIExpression()), !dbg !2647
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %ldir, i64 0, i64 0, !dbg !2648
  %0 = load float*, float** %l2.addr, align 8, !dbg !2649
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2649
  %1 = load float, float* %arrayidx, align 4, !dbg !2649
  %2 = load float*, float** %l1.addr, align 8, !dbg !2650
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !2650
  %3 = load float, float* %arrayidx1, align 4, !dbg !2650
  %sub = fsub float %1, %3, !dbg !2651
  store float %sub, float* %arrayinit.begin, align 4, !dbg !2648
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !2648
  %4 = load float*, float** %l2.addr, align 8, !dbg !2652
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !2652
  %5 = load float, float* %arrayidx2, align 4, !dbg !2652
  %6 = load float*, float** %l1.addr, align 8, !dbg !2653
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !2653
  %7 = load float, float* %arrayidx3, align 4, !dbg !2653
  %sub4 = fsub float %5, %7, !dbg !2654
  store float %sub4, float* %arrayinit.element, align 4, !dbg !2648
  call void @llvm.dbg.declare(metadata float* %a, metadata !2655, metadata !DIExpression()), !dbg !2656
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %ldir, i64 0, i64 0, !dbg !2657
  %arraydecay5 = getelementptr inbounds [2 x float], [2 x float]* %ldir, i64 0, i64 0, !dbg !2658
  %call = call float @dot_v2v2(float* %arraydecay, float* %arraydecay5), !dbg !2659
  store float %call, float* %a, align 4, !dbg !2656
  call void @llvm.dbg.declare(metadata float* %b, metadata !2660, metadata !DIExpression()), !dbg !2661
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %ldir, i64 0, i64 0, !dbg !2662
  %8 = load float, float* %arrayidx6, align 4, !dbg !2662
  %9 = load float*, float** %l1.addr, align 8, !dbg !2663
  %arrayidx7 = getelementptr inbounds float, float* %9, i64 0, !dbg !2663
  %10 = load float, float* %arrayidx7, align 4, !dbg !2663
  %11 = load float*, float** %sp.addr, align 8, !dbg !2664
  %arrayidx8 = getelementptr inbounds float, float* %11, i64 0, !dbg !2664
  %12 = load float, float* %arrayidx8, align 4, !dbg !2664
  %sub9 = fsub float %10, %12, !dbg !2665
  %mul = fmul float %8, %sub9, !dbg !2666
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %ldir, i64 0, i64 1, !dbg !2667
  %13 = load float, float* %arrayidx10, align 4, !dbg !2667
  %14 = load float*, float** %l1.addr, align 8, !dbg !2668
  %arrayidx11 = getelementptr inbounds float, float* %14, i64 1, !dbg !2668
  %15 = load float, float* %arrayidx11, align 4, !dbg !2668
  %16 = load float*, float** %sp.addr, align 8, !dbg !2669
  %arrayidx12 = getelementptr inbounds float, float* %16, i64 1, !dbg !2669
  %17 = load float, float* %arrayidx12, align 4, !dbg !2669
  %sub13 = fsub float %15, %17, !dbg !2670
  %mul14 = fmul float %13, %sub13, !dbg !2671
  %add = fadd float %mul, %mul14, !dbg !2672
  %mul15 = fmul float 2.000000e+00, %add, !dbg !2673
  store float %mul15, float* %b, align 4, !dbg !2661
  call void @llvm.dbg.declare(metadata float* %c, metadata !2674, metadata !DIExpression()), !dbg !2675
  %18 = load float*, float** %sp.addr, align 8, !dbg !2676
  %19 = load float*, float** %sp.addr, align 8, !dbg !2677
  %call16 = call float @dot_v2v2(float* %18, float* %19), !dbg !2678
  %20 = load float*, float** %l1.addr, align 8, !dbg !2679
  %21 = load float*, float** %l1.addr, align 8, !dbg !2680
  %call17 = call float @dot_v2v2(float* %20, float* %21), !dbg !2681
  %add18 = fadd float %call16, %call17, !dbg !2682
  %22 = load float*, float** %sp.addr, align 8, !dbg !2683
  %23 = load float*, float** %l1.addr, align 8, !dbg !2684
  %call19 = call float @dot_v2v2(float* %22, float* %23), !dbg !2685
  %mul20 = fmul float 2.000000e+00, %call19, !dbg !2686
  %sub21 = fsub float %add18, %mul20, !dbg !2687
  %24 = load float, float* %r.addr, align 4, !dbg !2688
  %25 = load float, float* %r.addr, align 4, !dbg !2689
  %mul22 = fmul float %24, %25, !dbg !2690
  %sub23 = fsub float %sub21, %mul22, !dbg !2691
  store float %sub23, float* %c, align 4, !dbg !2675
  call void @llvm.dbg.declare(metadata float* %i, metadata !2692, metadata !DIExpression()), !dbg !2693
  %26 = load float, float* %b, align 4, !dbg !2694
  %27 = load float, float* %b, align 4, !dbg !2695
  %mul24 = fmul float %26, %27, !dbg !2696
  %28 = load float, float* %a, align 4, !dbg !2697
  %mul25 = fmul float 4.000000e+00, %28, !dbg !2698
  %29 = load float, float* %c, align 4, !dbg !2699
  %mul26 = fmul float %mul25, %29, !dbg !2700
  %sub27 = fsub float %mul24, %mul26, !dbg !2701
  store float %sub27, float* %i, align 4, !dbg !2693
  call void @llvm.dbg.declare(metadata float* %mu, metadata !2702, metadata !DIExpression()), !dbg !2703
  %30 = load float, float* %i, align 4, !dbg !2704
  %cmp = fcmp olt float %30, 0.000000e+00, !dbg !2706
  br i1 %cmp, label %if.then, label %if.else, !dbg !2707

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2708
  br label %return, !dbg !2708

if.else:                                          ; preds = %entry
  %31 = load float, float* %i, align 4, !dbg !2710
  %cmp28 = fcmp oeq float %31, 0.000000e+00, !dbg !2712
  br i1 %cmp28, label %if.then29, label %if.else32, !dbg !2713

if.then29:                                        ; preds = %if.else
  %32 = load float, float* %b, align 4, !dbg !2714
  %fneg = fneg float %32, !dbg !2716
  %33 = load float, float* %a, align 4, !dbg !2717
  %mul30 = fmul float 2.000000e+00, %33, !dbg !2718
  %div = fdiv float %fneg, %mul30, !dbg !2719
  store float %div, float* %mu, align 4, !dbg !2720
  %34 = load float*, float** %r_p1.addr, align 8, !dbg !2721
  %35 = load float*, float** %l1.addr, align 8, !dbg !2722
  %arraydecay31 = getelementptr inbounds [2 x float], [2 x float]* %ldir, i64 0, i64 0, !dbg !2723
  %36 = load float, float* %mu, align 4, !dbg !2724
  call void @madd_v2_v2v2fl(float* %34, float* %35, float* %arraydecay31, float %36), !dbg !2725
  store i32 1, i32* %retval, align 4, !dbg !2726
  br label %return, !dbg !2726

if.else32:                                        ; preds = %if.else
  %37 = load float, float* %i, align 4, !dbg !2727
  %cmp33 = fcmp ogt float %37, 0.000000e+00, !dbg !2729
  br i1 %cmp33, label %if.then34, label %if.else46, !dbg !2730

if.then34:                                        ; preds = %if.else32
  call void @llvm.dbg.declare(metadata float* %i_sqrt, metadata !2731, metadata !DIExpression()), !dbg !2733
  %38 = load float, float* %i, align 4, !dbg !2734
  %call35 = call float @sqrtf(float %38) #5, !dbg !2735
  store float %call35, float* %i_sqrt, align 4, !dbg !2733
  %39 = load float, float* %b, align 4, !dbg !2736
  %fneg36 = fneg float %39, !dbg !2737
  %40 = load float, float* %i_sqrt, align 4, !dbg !2738
  %add37 = fadd float %fneg36, %40, !dbg !2739
  %41 = load float, float* %a, align 4, !dbg !2740
  %mul38 = fmul float 2.000000e+00, %41, !dbg !2741
  %div39 = fdiv float %add37, %mul38, !dbg !2742
  store float %div39, float* %mu, align 4, !dbg !2743
  %42 = load float*, float** %r_p1.addr, align 8, !dbg !2744
  %43 = load float*, float** %l1.addr, align 8, !dbg !2745
  %arraydecay40 = getelementptr inbounds [2 x float], [2 x float]* %ldir, i64 0, i64 0, !dbg !2746
  %44 = load float, float* %mu, align 4, !dbg !2747
  call void @madd_v2_v2v2fl(float* %42, float* %43, float* %arraydecay40, float %44), !dbg !2748
  %45 = load float, float* %b, align 4, !dbg !2749
  %fneg41 = fneg float %45, !dbg !2750
  %46 = load float, float* %i_sqrt, align 4, !dbg !2751
  %sub42 = fsub float %fneg41, %46, !dbg !2752
  %47 = load float, float* %a, align 4, !dbg !2753
  %mul43 = fmul float 2.000000e+00, %47, !dbg !2754
  %div44 = fdiv float %sub42, %mul43, !dbg !2755
  store float %div44, float* %mu, align 4, !dbg !2756
  %48 = load float*, float** %r_p2.addr, align 8, !dbg !2757
  %49 = load float*, float** %l1.addr, align 8, !dbg !2758
  %arraydecay45 = getelementptr inbounds [2 x float], [2 x float]* %ldir, i64 0, i64 0, !dbg !2759
  %50 = load float, float* %mu, align 4, !dbg !2760
  call void @madd_v2_v2v2fl(float* %48, float* %49, float* %arraydecay45, float %50), !dbg !2761
  store i32 2, i32* %retval, align 4, !dbg !2762
  br label %return, !dbg !2762

if.else46:                                        ; preds = %if.else32
  store i32 -1, i32* %retval, align 4, !dbg !2763
  br label %return, !dbg !2763

return:                                           ; preds = %if.else46, %if.then34, %if.then29, %if.then
  %51 = load i32, i32* %retval, align 4, !dbg !2765
  ret i32 %51, !dbg !2765
}

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v2_v2v2fl(float* %r, float* %a, float* %b, float %f) #0 !dbg !2766 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !2767, metadata !DIExpression()), !dbg !2768
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !2769, metadata !DIExpression()), !dbg !2770
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !2771, metadata !DIExpression()), !dbg !2772
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !2773, metadata !DIExpression()), !dbg !2774
  %0 = load float*, float** %a.addr, align 8, !dbg !2775
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2775
  %1 = load float, float* %arrayidx, align 4, !dbg !2775
  %2 = load float*, float** %b.addr, align 8, !dbg !2776
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !2776
  %3 = load float, float* %arrayidx1, align 4, !dbg !2776
  %4 = load float, float* %f.addr, align 4, !dbg !2777
  %mul = fmul float %3, %4, !dbg !2778
  %add = fadd float %1, %mul, !dbg !2779
  %5 = load float*, float** %r.addr, align 8, !dbg !2780
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 0, !dbg !2780
  store float %add, float* %arrayidx2, align 4, !dbg !2781
  %6 = load float*, float** %a.addr, align 8, !dbg !2782
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !2782
  %7 = load float, float* %arrayidx3, align 4, !dbg !2782
  %8 = load float*, float** %b.addr, align 8, !dbg !2783
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !2783
  %9 = load float, float* %arrayidx4, align 4, !dbg !2783
  %10 = load float, float* %f.addr, align 4, !dbg !2784
  %mul5 = fmul float %9, %10, !dbg !2785
  %add6 = fadd float %7, %mul5, !dbg !2786
  %11 = load float*, float** %r.addr, align 8, !dbg !2787
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 1, !dbg !2787
  store float %add6, float* %arrayidx7, align 4, !dbg !2788
  ret void, !dbg !2789
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @isect_point_poly_v2(float* %pt, [2 x float]* %verts, i32 %nr, i8 zeroext %UNUSED_use_holes) #0 !dbg !2790 {
entry:
  %pt.addr = alloca float*, align 8
  %verts.addr = alloca [2 x float]*, align 8
  %nr.addr = alloca i32, align 4
  %UNUSED_use_holes.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %isect = alloca i8, align 1
  store float* %pt, float** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt.addr, metadata !2795, metadata !DIExpression()), !dbg !2796
  store [2 x float]* %verts, [2 x float]** %verts.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %verts.addr, metadata !2797, metadata !DIExpression()), !dbg !2798
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !2799, metadata !DIExpression()), !dbg !2800
  store i8 %UNUSED_use_holes, i8* %UNUSED_use_holes.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %UNUSED_use_holes.addr, metadata !2801, metadata !DIExpression()), !dbg !2802
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2803, metadata !DIExpression()), !dbg !2804
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2805, metadata !DIExpression()), !dbg !2806
  call void @llvm.dbg.declare(metadata i8* %isect, metadata !2807, metadata !DIExpression()), !dbg !2808
  store i8 0, i8* %isect, align 1, !dbg !2808
  store i32 0, i32* %i, align 4, !dbg !2809
  %0 = load i32, i32* %nr.addr, align 4, !dbg !2811
  %sub = sub i32 %0, 1, !dbg !2812
  store i32 %sub, i32* %j, align 4, !dbg !2813
  br label %for.cond, !dbg !2814

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !2815
  %2 = load i32, i32* %nr.addr, align 4, !dbg !2817
  %cmp = icmp ult i32 %1, %2, !dbg !2818
  br i1 %cmp, label %for.body, label %for.end, !dbg !2819

for.body:                                         ; preds = %for.cond
  %3 = load [2 x float]*, [2 x float]** %verts.addr, align 8, !dbg !2820
  %4 = load i32, i32* %i, align 4, !dbg !2823
  %idxprom = zext i32 %4 to i64, !dbg !2820
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %3, i64 %idxprom, !dbg !2820
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 1, !dbg !2820
  %5 = load float, float* %arrayidx1, align 4, !dbg !2820
  %6 = load float*, float** %pt.addr, align 8, !dbg !2824
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 1, !dbg !2824
  %7 = load float, float* %arrayidx2, align 4, !dbg !2824
  %cmp3 = fcmp ogt float %5, %7, !dbg !2825
  %conv = zext i1 %cmp3 to i32, !dbg !2825
  %8 = load [2 x float]*, [2 x float]** %verts.addr, align 8, !dbg !2826
  %9 = load i32, i32* %j, align 4, !dbg !2827
  %idxprom4 = zext i32 %9 to i64, !dbg !2826
  %arrayidx5 = getelementptr inbounds [2 x float], [2 x float]* %8, i64 %idxprom4, !dbg !2826
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx5, i64 0, i64 1, !dbg !2826
  %10 = load float, float* %arrayidx6, align 4, !dbg !2826
  %11 = load float*, float** %pt.addr, align 8, !dbg !2828
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 1, !dbg !2828
  %12 = load float, float* %arrayidx7, align 4, !dbg !2828
  %cmp8 = fcmp ogt float %10, %12, !dbg !2829
  %conv9 = zext i1 %cmp8 to i32, !dbg !2829
  %cmp10 = icmp ne i32 %conv, %conv9, !dbg !2830
  br i1 %cmp10, label %land.lhs.true, label %if.end, !dbg !2831

land.lhs.true:                                    ; preds = %for.body
  %13 = load float*, float** %pt.addr, align 8, !dbg !2832
  %arrayidx12 = getelementptr inbounds float, float* %13, i64 0, !dbg !2832
  %14 = load float, float* %arrayidx12, align 4, !dbg !2832
  %15 = load [2 x float]*, [2 x float]** %verts.addr, align 8, !dbg !2833
  %16 = load i32, i32* %j, align 4, !dbg !2834
  %idxprom13 = zext i32 %16 to i64, !dbg !2833
  %arrayidx14 = getelementptr inbounds [2 x float], [2 x float]* %15, i64 %idxprom13, !dbg !2833
  %arrayidx15 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx14, i64 0, i64 0, !dbg !2833
  %17 = load float, float* %arrayidx15, align 4, !dbg !2833
  %18 = load [2 x float]*, [2 x float]** %verts.addr, align 8, !dbg !2835
  %19 = load i32, i32* %i, align 4, !dbg !2836
  %idxprom16 = zext i32 %19 to i64, !dbg !2835
  %arrayidx17 = getelementptr inbounds [2 x float], [2 x float]* %18, i64 %idxprom16, !dbg !2835
  %arrayidx18 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx17, i64 0, i64 0, !dbg !2835
  %20 = load float, float* %arrayidx18, align 4, !dbg !2835
  %sub19 = fsub float %17, %20, !dbg !2837
  %21 = load float*, float** %pt.addr, align 8, !dbg !2838
  %arrayidx20 = getelementptr inbounds float, float* %21, i64 1, !dbg !2838
  %22 = load float, float* %arrayidx20, align 4, !dbg !2838
  %23 = load [2 x float]*, [2 x float]** %verts.addr, align 8, !dbg !2839
  %24 = load i32, i32* %i, align 4, !dbg !2840
  %idxprom21 = zext i32 %24 to i64, !dbg !2839
  %arrayidx22 = getelementptr inbounds [2 x float], [2 x float]* %23, i64 %idxprom21, !dbg !2839
  %arrayidx23 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx22, i64 0, i64 1, !dbg !2839
  %25 = load float, float* %arrayidx23, align 4, !dbg !2839
  %sub24 = fsub float %22, %25, !dbg !2841
  %mul = fmul float %sub19, %sub24, !dbg !2842
  %26 = load [2 x float]*, [2 x float]** %verts.addr, align 8, !dbg !2843
  %27 = load i32, i32* %j, align 4, !dbg !2844
  %idxprom25 = zext i32 %27 to i64, !dbg !2843
  %arrayidx26 = getelementptr inbounds [2 x float], [2 x float]* %26, i64 %idxprom25, !dbg !2843
  %arrayidx27 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx26, i64 0, i64 1, !dbg !2843
  %28 = load float, float* %arrayidx27, align 4, !dbg !2843
  %29 = load [2 x float]*, [2 x float]** %verts.addr, align 8, !dbg !2845
  %30 = load i32, i32* %i, align 4, !dbg !2846
  %idxprom28 = zext i32 %30 to i64, !dbg !2845
  %arrayidx29 = getelementptr inbounds [2 x float], [2 x float]* %29, i64 %idxprom28, !dbg !2845
  %arrayidx30 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx29, i64 0, i64 1, !dbg !2845
  %31 = load float, float* %arrayidx30, align 4, !dbg !2845
  %sub31 = fsub float %28, %31, !dbg !2847
  %div = fdiv float %mul, %sub31, !dbg !2848
  %32 = load [2 x float]*, [2 x float]** %verts.addr, align 8, !dbg !2849
  %33 = load i32, i32* %i, align 4, !dbg !2850
  %idxprom32 = zext i32 %33 to i64, !dbg !2849
  %arrayidx33 = getelementptr inbounds [2 x float], [2 x float]* %32, i64 %idxprom32, !dbg !2849
  %arrayidx34 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx33, i64 0, i64 0, !dbg !2849
  %34 = load float, float* %arrayidx34, align 4, !dbg !2849
  %add = fadd float %div, %34, !dbg !2851
  %cmp35 = fcmp olt float %14, %add, !dbg !2852
  br i1 %cmp35, label %if.then, label %if.end, !dbg !2853

if.then:                                          ; preds = %land.lhs.true
  %35 = load i8, i8* %isect, align 1, !dbg !2854
  %tobool = icmp ne i8 %35, 0, !dbg !2856
  %lnot = xor i1 %tobool, true, !dbg !2856
  %lnot.ext = zext i1 %lnot to i32, !dbg !2856
  %conv37 = trunc i32 %lnot.ext to i8, !dbg !2856
  store i8 %conv37, i8* %isect, align 1, !dbg !2857
  br label %if.end, !dbg !2858

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !2859

for.inc:                                          ; preds = %if.end
  %36 = load i32, i32* %i, align 4, !dbg !2860
  %inc = add i32 %36, 1, !dbg !2860
  store i32 %inc, i32* %i, align 4, !dbg !2860
  store i32 %36, i32* %j, align 4, !dbg !2861
  br label %for.cond, !dbg !2862, !llvm.loop !2863

for.end:                                          ; preds = %for.cond
  %37 = load i8, i8* %isect, align 1, !dbg !2865
  ret i8 %37, !dbg !2866
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @isect_point_poly_v2_int(i32* %pt, [2 x i32]* %verts, i32 %nr, i8 zeroext %UNUSED_use_holes) #0 !dbg !2867 {
entry:
  %pt.addr = alloca i32*, align 8
  %verts.addr = alloca [2 x i32]*, align 8
  %nr.addr = alloca i32, align 4
  %UNUSED_use_holes.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %isect = alloca i8, align 1
  store i32* %pt, i32** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pt.addr, metadata !2872, metadata !DIExpression()), !dbg !2873
  store [2 x i32]* %verts, [2 x i32]** %verts.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x i32]** %verts.addr, metadata !2874, metadata !DIExpression()), !dbg !2875
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !2876, metadata !DIExpression()), !dbg !2877
  store i8 %UNUSED_use_holes, i8* %UNUSED_use_holes.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %UNUSED_use_holes.addr, metadata !2878, metadata !DIExpression()), !dbg !2879
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2880, metadata !DIExpression()), !dbg !2881
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2882, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.declare(metadata i8* %isect, metadata !2884, metadata !DIExpression()), !dbg !2885
  store i8 0, i8* %isect, align 1, !dbg !2885
  store i32 0, i32* %i, align 4, !dbg !2886
  %0 = load i32, i32* %nr.addr, align 4, !dbg !2888
  %sub = sub i32 %0, 1, !dbg !2889
  store i32 %sub, i32* %j, align 4, !dbg !2890
  br label %for.cond, !dbg !2891

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !2892
  %2 = load i32, i32* %nr.addr, align 4, !dbg !2894
  %cmp = icmp ult i32 %1, %2, !dbg !2895
  br i1 %cmp, label %for.body, label %for.end, !dbg !2896

for.body:                                         ; preds = %for.cond
  %3 = load [2 x i32]*, [2 x i32]** %verts.addr, align 8, !dbg !2897
  %4 = load i32, i32* %i, align 4, !dbg !2900
  %idxprom = zext i32 %4 to i64, !dbg !2897
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %3, i64 %idxprom, !dbg !2897
  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx, i64 0, i64 1, !dbg !2897
  %5 = load i32, i32* %arrayidx1, align 4, !dbg !2897
  %6 = load i32*, i32** %pt.addr, align 8, !dbg !2901
  %arrayidx2 = getelementptr inbounds i32, i32* %6, i64 1, !dbg !2901
  %7 = load i32, i32* %arrayidx2, align 4, !dbg !2901
  %cmp3 = icmp sgt i32 %5, %7, !dbg !2902
  %conv = zext i1 %cmp3 to i32, !dbg !2902
  %8 = load [2 x i32]*, [2 x i32]** %verts.addr, align 8, !dbg !2903
  %9 = load i32, i32* %j, align 4, !dbg !2904
  %idxprom4 = zext i32 %9 to i64, !dbg !2903
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %8, i64 %idxprom4, !dbg !2903
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx5, i64 0, i64 1, !dbg !2903
  %10 = load i32, i32* %arrayidx6, align 4, !dbg !2903
  %11 = load i32*, i32** %pt.addr, align 8, !dbg !2905
  %arrayidx7 = getelementptr inbounds i32, i32* %11, i64 1, !dbg !2905
  %12 = load i32, i32* %arrayidx7, align 4, !dbg !2905
  %cmp8 = icmp sgt i32 %10, %12, !dbg !2906
  %conv9 = zext i1 %cmp8 to i32, !dbg !2906
  %cmp10 = icmp ne i32 %conv, %conv9, !dbg !2907
  br i1 %cmp10, label %land.lhs.true, label %if.end, !dbg !2908

land.lhs.true:                                    ; preds = %for.body
  %13 = load i32*, i32** %pt.addr, align 8, !dbg !2909
  %arrayidx12 = getelementptr inbounds i32, i32* %13, i64 0, !dbg !2909
  %14 = load i32, i32* %arrayidx12, align 4, !dbg !2909
  %15 = load [2 x i32]*, [2 x i32]** %verts.addr, align 8, !dbg !2910
  %16 = load i32, i32* %j, align 4, !dbg !2911
  %idxprom13 = zext i32 %16 to i64, !dbg !2910
  %arrayidx14 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 %idxprom13, !dbg !2910
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx14, i64 0, i64 0, !dbg !2910
  %17 = load i32, i32* %arrayidx15, align 4, !dbg !2910
  %18 = load [2 x i32]*, [2 x i32]** %verts.addr, align 8, !dbg !2912
  %19 = load i32, i32* %i, align 4, !dbg !2913
  %idxprom16 = zext i32 %19 to i64, !dbg !2912
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %18, i64 %idxprom16, !dbg !2912
  %arrayidx18 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx17, i64 0, i64 0, !dbg !2912
  %20 = load i32, i32* %arrayidx18, align 4, !dbg !2912
  %sub19 = sub nsw i32 %17, %20, !dbg !2914
  %21 = load i32*, i32** %pt.addr, align 8, !dbg !2915
  %arrayidx20 = getelementptr inbounds i32, i32* %21, i64 1, !dbg !2915
  %22 = load i32, i32* %arrayidx20, align 4, !dbg !2915
  %23 = load [2 x i32]*, [2 x i32]** %verts.addr, align 8, !dbg !2916
  %24 = load i32, i32* %i, align 4, !dbg !2917
  %idxprom21 = zext i32 %24 to i64, !dbg !2916
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %23, i64 %idxprom21, !dbg !2916
  %arrayidx23 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx22, i64 0, i64 1, !dbg !2916
  %25 = load i32, i32* %arrayidx23, align 4, !dbg !2916
  %sub24 = sub nsw i32 %22, %25, !dbg !2918
  %mul = mul nsw i32 %sub19, %sub24, !dbg !2919
  %26 = load [2 x i32]*, [2 x i32]** %verts.addr, align 8, !dbg !2920
  %27 = load i32, i32* %j, align 4, !dbg !2921
  %idxprom25 = zext i32 %27 to i64, !dbg !2920
  %arrayidx26 = getelementptr inbounds [2 x i32], [2 x i32]* %26, i64 %idxprom25, !dbg !2920
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx26, i64 0, i64 1, !dbg !2920
  %28 = load i32, i32* %arrayidx27, align 4, !dbg !2920
  %29 = load [2 x i32]*, [2 x i32]** %verts.addr, align 8, !dbg !2922
  %30 = load i32, i32* %i, align 4, !dbg !2923
  %idxprom28 = zext i32 %30 to i64, !dbg !2922
  %arrayidx29 = getelementptr inbounds [2 x i32], [2 x i32]* %29, i64 %idxprom28, !dbg !2922
  %arrayidx30 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx29, i64 0, i64 1, !dbg !2922
  %31 = load i32, i32* %arrayidx30, align 4, !dbg !2922
  %sub31 = sub nsw i32 %28, %31, !dbg !2924
  %div = sdiv i32 %mul, %sub31, !dbg !2925
  %32 = load [2 x i32]*, [2 x i32]** %verts.addr, align 8, !dbg !2926
  %33 = load i32, i32* %i, align 4, !dbg !2927
  %idxprom32 = zext i32 %33 to i64, !dbg !2926
  %arrayidx33 = getelementptr inbounds [2 x i32], [2 x i32]* %32, i64 %idxprom32, !dbg !2926
  %arrayidx34 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx33, i64 0, i64 0, !dbg !2926
  %34 = load i32, i32* %arrayidx34, align 4, !dbg !2926
  %add = add nsw i32 %div, %34, !dbg !2928
  %cmp35 = icmp slt i32 %14, %add, !dbg !2929
  br i1 %cmp35, label %if.then, label %if.end, !dbg !2930

if.then:                                          ; preds = %land.lhs.true
  %35 = load i8, i8* %isect, align 1, !dbg !2931
  %tobool = icmp ne i8 %35, 0, !dbg !2933
  %lnot = xor i1 %tobool, true, !dbg !2933
  %lnot.ext = zext i1 %lnot to i32, !dbg !2933
  %conv37 = trunc i32 %lnot.ext to i8, !dbg !2933
  store i8 %conv37, i8* %isect, align 1, !dbg !2934
  br label %if.end, !dbg !2935

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !2936

for.inc:                                          ; preds = %if.end
  %36 = load i32, i32* %i, align 4, !dbg !2937
  %inc = add i32 %36, 1, !dbg !2937
  store i32 %inc, i32* %i, align 4, !dbg !2937
  store i32 %36, i32* %j, align 4, !dbg !2938
  br label %for.cond, !dbg !2939, !llvm.loop !2940

for.end:                                          ; preds = %for.cond
  %37 = load i8, i8* %isect, align 1, !dbg !2942
  ret i8 %37, !dbg !2943
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @isect_point_tri_v2_cw(float* %pt, float* %v1, float* %v2, float* %v3) #0 !dbg !2944 {
entry:
  %retval = alloca i8, align 1
  %pt.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  store float* %pt, float** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt.addr, metadata !2945, metadata !DIExpression()), !dbg !2946
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !2947, metadata !DIExpression()), !dbg !2948
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !2949, metadata !DIExpression()), !dbg !2950
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !2951, metadata !DIExpression()), !dbg !2952
  %0 = load float*, float** %v1.addr, align 8, !dbg !2953
  %1 = load float*, float** %v2.addr, align 8, !dbg !2955
  %2 = load float*, float** %pt.addr, align 8, !dbg !2956
  %call = call float @line_point_side_v2(float* %0, float* %1, float* %2), !dbg !2957
  %cmp = fcmp oge float %call, 0.000000e+00, !dbg !2958
  br i1 %cmp, label %if.then, label %if.end8, !dbg !2959

if.then:                                          ; preds = %entry
  %3 = load float*, float** %v2.addr, align 8, !dbg !2960
  %4 = load float*, float** %v3.addr, align 8, !dbg !2963
  %5 = load float*, float** %pt.addr, align 8, !dbg !2964
  %call1 = call float @line_point_side_v2(float* %3, float* %4, float* %5), !dbg !2965
  %cmp2 = fcmp oge float %call1, 0.000000e+00, !dbg !2966
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !2967

if.then3:                                         ; preds = %if.then
  %6 = load float*, float** %v3.addr, align 8, !dbg !2968
  %7 = load float*, float** %v1.addr, align 8, !dbg !2971
  %8 = load float*, float** %pt.addr, align 8, !dbg !2972
  %call4 = call float @line_point_side_v2(float* %6, float* %7, float* %8), !dbg !2973
  %cmp5 = fcmp oge float %call4, 0.000000e+00, !dbg !2974
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !2975

if.then6:                                         ; preds = %if.then3
  store i8 1, i8* %retval, align 1, !dbg !2976
  br label %return, !dbg !2976

if.end:                                           ; preds = %if.then3
  br label %if.end7, !dbg !2978

if.end7:                                          ; preds = %if.end, %if.then
  br label %if.end8, !dbg !2979

if.end8:                                          ; preds = %if.end7, %entry
  store i8 0, i8* %retval, align 1, !dbg !2980
  br label %return, !dbg !2980

return:                                           ; preds = %if.end8, %if.then6
  %9 = load i8, i8* %retval, align 1, !dbg !2981
  ret i8 %9, !dbg !2981
}

; Function Attrs: noinline nounwind uwtable
define internal float @line_point_side_v2(float* %l1, float* %l2, float* %pt) #0 !dbg !2982 {
entry:
  %l1.addr = alloca float*, align 8
  %l2.addr = alloca float*, align 8
  %pt.addr = alloca float*, align 8
  store float* %l1, float** %l1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1.addr, metadata !2983, metadata !DIExpression()), !dbg !2984
  store float* %l2, float** %l2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2.addr, metadata !2985, metadata !DIExpression()), !dbg !2986
  store float* %pt, float** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt.addr, metadata !2987, metadata !DIExpression()), !dbg !2988
  %0 = load float*, float** %l1.addr, align 8, !dbg !2989
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2989
  %1 = load float, float* %arrayidx, align 4, !dbg !2989
  %2 = load float*, float** %pt.addr, align 8, !dbg !2990
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !2990
  %3 = load float, float* %arrayidx1, align 4, !dbg !2990
  %sub = fsub float %1, %3, !dbg !2991
  %4 = load float*, float** %l2.addr, align 8, !dbg !2992
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !2992
  %5 = load float, float* %arrayidx2, align 4, !dbg !2992
  %6 = load float*, float** %pt.addr, align 8, !dbg !2993
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !2993
  %7 = load float, float* %arrayidx3, align 4, !dbg !2993
  %sub4 = fsub float %5, %7, !dbg !2994
  %mul = fmul float %sub, %sub4, !dbg !2995
  %8 = load float*, float** %l2.addr, align 8, !dbg !2996
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !2996
  %9 = load float, float* %arrayidx5, align 4, !dbg !2996
  %10 = load float*, float** %pt.addr, align 8, !dbg !2997
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 0, !dbg !2997
  %11 = load float, float* %arrayidx6, align 4, !dbg !2997
  %sub7 = fsub float %9, %11, !dbg !2998
  %12 = load float*, float** %l1.addr, align 8, !dbg !2999
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 1, !dbg !2999
  %13 = load float, float* %arrayidx8, align 4, !dbg !2999
  %14 = load float*, float** %pt.addr, align 8, !dbg !3000
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 1, !dbg !3000
  %15 = load float, float* %arrayidx9, align 4, !dbg !3000
  %sub10 = fsub float %13, %15, !dbg !3001
  %mul11 = fmul float %sub7, %sub10, !dbg !3002
  %sub12 = fsub float %mul, %mul11, !dbg !3003
  ret float %sub12, !dbg !3004
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @isect_point_tri_v2(float* %pt, float* %v1, float* %v2, float* %v3) #0 !dbg !3005 {
entry:
  %retval = alloca i32, align 4
  %pt.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  store float* %pt, float** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt.addr, metadata !3006, metadata !DIExpression()), !dbg !3007
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !3008, metadata !DIExpression()), !dbg !3009
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !3010, metadata !DIExpression()), !dbg !3011
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !3012, metadata !DIExpression()), !dbg !3013
  %0 = load float*, float** %v1.addr, align 8, !dbg !3014
  %1 = load float*, float** %v2.addr, align 8, !dbg !3016
  %2 = load float*, float** %pt.addr, align 8, !dbg !3017
  %call = call float @line_point_side_v2(float* %0, float* %1, float* %2), !dbg !3018
  %cmp = fcmp oge float %call, 0.000000e+00, !dbg !3019
  br i1 %cmp, label %if.then, label %if.else, !dbg !3020

if.then:                                          ; preds = %entry
  %3 = load float*, float** %v2.addr, align 8, !dbg !3021
  %4 = load float*, float** %v3.addr, align 8, !dbg !3024
  %5 = load float*, float** %pt.addr, align 8, !dbg !3025
  %call1 = call float @line_point_side_v2(float* %3, float* %4, float* %5), !dbg !3026
  %cmp2 = fcmp oge float %call1, 0.000000e+00, !dbg !3027
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !3028

if.then3:                                         ; preds = %if.then
  %6 = load float*, float** %v3.addr, align 8, !dbg !3029
  %7 = load float*, float** %v1.addr, align 8, !dbg !3032
  %8 = load float*, float** %pt.addr, align 8, !dbg !3033
  %call4 = call float @line_point_side_v2(float* %6, float* %7, float* %8), !dbg !3034
  %cmp5 = fcmp oge float %call4, 0.000000e+00, !dbg !3035
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !3036

if.then6:                                         ; preds = %if.then3
  store i32 1, i32* %retval, align 4, !dbg !3037
  br label %return, !dbg !3037

if.end:                                           ; preds = %if.then3
  br label %if.end7, !dbg !3039

if.end7:                                          ; preds = %if.end, %if.then
  br label %if.end16, !dbg !3040

if.else:                                          ; preds = %entry
  %9 = load float*, float** %v2.addr, align 8, !dbg !3041
  %10 = load float*, float** %v3.addr, align 8, !dbg !3044
  %11 = load float*, float** %pt.addr, align 8, !dbg !3045
  %call8 = call float @line_point_side_v2(float* %9, float* %10, float* %11), !dbg !3046
  %cmp9 = fcmp oge float %call8, 0.000000e+00, !dbg !3047
  br i1 %cmp9, label %if.end15, label %if.then10, !dbg !3048

if.then10:                                        ; preds = %if.else
  %12 = load float*, float** %v3.addr, align 8, !dbg !3049
  %13 = load float*, float** %v1.addr, align 8, !dbg !3052
  %14 = load float*, float** %pt.addr, align 8, !dbg !3053
  %call11 = call float @line_point_side_v2(float* %12, float* %13, float* %14), !dbg !3054
  %cmp12 = fcmp oge float %call11, 0.000000e+00, !dbg !3055
  br i1 %cmp12, label %if.end14, label %if.then13, !dbg !3056

if.then13:                                        ; preds = %if.then10
  store i32 -1, i32* %retval, align 4, !dbg !3057
  br label %return, !dbg !3057

if.end14:                                         ; preds = %if.then10
  br label %if.end15, !dbg !3059

if.end15:                                         ; preds = %if.end14, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end7
  store i32 0, i32* %retval, align 4, !dbg !3060
  br label %return, !dbg !3060

return:                                           ; preds = %if.end16, %if.then13, %if.then6
  %15 = load i32, i32* %retval, align 4, !dbg !3061
  ret i32 %15, !dbg !3061
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @isect_point_quad_v2(float* %pt, float* %v1, float* %v2, float* %v3, float* %v4) #0 !dbg !3062 {
entry:
  %retval = alloca i32, align 4
  %pt.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  store float* %pt, float** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt.addr, metadata !3065, metadata !DIExpression()), !dbg !3066
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !3067, metadata !DIExpression()), !dbg !3068
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !3069, metadata !DIExpression()), !dbg !3070
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !3071, metadata !DIExpression()), !dbg !3072
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !3073, metadata !DIExpression()), !dbg !3074
  %0 = load float*, float** %v1.addr, align 8, !dbg !3075
  %1 = load float*, float** %v2.addr, align 8, !dbg !3077
  %2 = load float*, float** %pt.addr, align 8, !dbg !3078
  %call = call float @line_point_side_v2(float* %0, float* %1, float* %2), !dbg !3079
  %cmp = fcmp oge float %call, 0.000000e+00, !dbg !3080
  br i1 %cmp, label %if.then, label %if.else, !dbg !3081

if.then:                                          ; preds = %entry
  %3 = load float*, float** %v2.addr, align 8, !dbg !3082
  %4 = load float*, float** %v3.addr, align 8, !dbg !3085
  %5 = load float*, float** %pt.addr, align 8, !dbg !3086
  %call1 = call float @line_point_side_v2(float* %3, float* %4, float* %5), !dbg !3087
  %cmp2 = fcmp oge float %call1, 0.000000e+00, !dbg !3088
  br i1 %cmp2, label %if.then3, label %if.end11, !dbg !3089

if.then3:                                         ; preds = %if.then
  %6 = load float*, float** %v3.addr, align 8, !dbg !3090
  %7 = load float*, float** %v4.addr, align 8, !dbg !3093
  %8 = load float*, float** %pt.addr, align 8, !dbg !3094
  %call4 = call float @line_point_side_v2(float* %6, float* %7, float* %8), !dbg !3095
  %cmp5 = fcmp oge float %call4, 0.000000e+00, !dbg !3096
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !3097

if.then6:                                         ; preds = %if.then3
  %9 = load float*, float** %v4.addr, align 8, !dbg !3098
  %10 = load float*, float** %v1.addr, align 8, !dbg !3101
  %11 = load float*, float** %pt.addr, align 8, !dbg !3102
  %call7 = call float @line_point_side_v2(float* %9, float* %10, float* %11), !dbg !3103
  %cmp8 = fcmp oge float %call7, 0.000000e+00, !dbg !3104
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !3105

if.then9:                                         ; preds = %if.then6
  store i32 1, i32* %retval, align 4, !dbg !3106
  br label %return, !dbg !3106

if.end:                                           ; preds = %if.then6
  br label %if.end10, !dbg !3108

if.end10:                                         ; preds = %if.end, %if.then3
  br label %if.end11, !dbg !3109

if.end11:                                         ; preds = %if.end10, %if.then
  br label %if.end24, !dbg !3110

if.else:                                          ; preds = %entry
  %12 = load float*, float** %v2.addr, align 8, !dbg !3111
  %13 = load float*, float** %v3.addr, align 8, !dbg !3114
  %14 = load float*, float** %pt.addr, align 8, !dbg !3115
  %call12 = call float @line_point_side_v2(float* %12, float* %13, float* %14), !dbg !3116
  %cmp13 = fcmp oge float %call12, 0.000000e+00, !dbg !3117
  br i1 %cmp13, label %if.end23, label %if.then14, !dbg !3118

if.then14:                                        ; preds = %if.else
  %15 = load float*, float** %v3.addr, align 8, !dbg !3119
  %16 = load float*, float** %v4.addr, align 8, !dbg !3122
  %17 = load float*, float** %pt.addr, align 8, !dbg !3123
  %call15 = call float @line_point_side_v2(float* %15, float* %16, float* %17), !dbg !3124
  %cmp16 = fcmp oge float %call15, 0.000000e+00, !dbg !3125
  br i1 %cmp16, label %if.end22, label %if.then17, !dbg !3126

if.then17:                                        ; preds = %if.then14
  %18 = load float*, float** %v4.addr, align 8, !dbg !3127
  %19 = load float*, float** %v1.addr, align 8, !dbg !3130
  %20 = load float*, float** %pt.addr, align 8, !dbg !3131
  %call18 = call float @line_point_side_v2(float* %18, float* %19, float* %20), !dbg !3132
  %cmp19 = fcmp oge float %call18, 0.000000e+00, !dbg !3133
  br i1 %cmp19, label %if.end21, label %if.then20, !dbg !3134

if.then20:                                        ; preds = %if.then17
  store i32 -1, i32* %retval, align 4, !dbg !3135
  br label %return, !dbg !3135

if.end21:                                         ; preds = %if.then17
  br label %if.end22, !dbg !3137

if.end22:                                         ; preds = %if.end21, %if.then14
  br label %if.end23, !dbg !3138

if.end23:                                         ; preds = %if.end22, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.end11
  store i32 0, i32* %retval, align 4, !dbg !3139
  br label %return, !dbg !3139

return:                                           ; preds = %if.end24, %if.then20, %if.then9
  %21 = load i32, i32* %retval, align 4, !dbg !3140
  ret i32 %21, !dbg !3140
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @isect_line_tri_v3(float* %p1, float* %p2, float* %v0, float* %v1, float* %v2, float* %r_lambda, float* %r_uv) #0 !dbg !3141 {
entry:
  %retval = alloca i8, align 1
  %p1.addr = alloca float*, align 8
  %p2.addr = alloca float*, align 8
  %v0.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %r_lambda.addr = alloca float*, align 8
  %r_uv.addr = alloca float*, align 8
  %p = alloca [3 x float], align 4
  %s = alloca [3 x float], align 4
  %d = alloca [3 x float], align 4
  %e1 = alloca [3 x float], align 4
  %e2 = alloca [3 x float], align 4
  %q = alloca [3 x float], align 4
  %a = alloca float, align 4
  %f = alloca float, align 4
  %u = alloca float, align 4
  %v = alloca float, align 4
  store float* %p1, float** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p1.addr, metadata !3144, metadata !DIExpression()), !dbg !3145
  store float* %p2, float** %p2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p2.addr, metadata !3146, metadata !DIExpression()), !dbg !3147
  store float* %v0, float** %v0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v0.addr, metadata !3148, metadata !DIExpression()), !dbg !3149
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !3150, metadata !DIExpression()), !dbg !3151
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !3152, metadata !DIExpression()), !dbg !3153
  store float* %r_lambda, float** %r_lambda.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_lambda.addr, metadata !3154, metadata !DIExpression()), !dbg !3155
  store float* %r_uv, float** %r_uv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_uv.addr, metadata !3156, metadata !DIExpression()), !dbg !3157
  call void @llvm.dbg.declare(metadata [3 x float]* %p, metadata !3158, metadata !DIExpression()), !dbg !3159
  call void @llvm.dbg.declare(metadata [3 x float]* %s, metadata !3160, metadata !DIExpression()), !dbg !3161
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !3162, metadata !DIExpression()), !dbg !3163
  call void @llvm.dbg.declare(metadata [3 x float]* %e1, metadata !3164, metadata !DIExpression()), !dbg !3165
  call void @llvm.dbg.declare(metadata [3 x float]* %e2, metadata !3166, metadata !DIExpression()), !dbg !3167
  call void @llvm.dbg.declare(metadata [3 x float]* %q, metadata !3168, metadata !DIExpression()), !dbg !3169
  call void @llvm.dbg.declare(metadata float* %a, metadata !3170, metadata !DIExpression()), !dbg !3171
  call void @llvm.dbg.declare(metadata float* %f, metadata !3172, metadata !DIExpression()), !dbg !3173
  call void @llvm.dbg.declare(metadata float* %u, metadata !3174, metadata !DIExpression()), !dbg !3175
  call void @llvm.dbg.declare(metadata float* %v, metadata !3176, metadata !DIExpression()), !dbg !3177
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !3178
  %0 = load float*, float** %v1.addr, align 8, !dbg !3179
  %1 = load float*, float** %v0.addr, align 8, !dbg !3180
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !3181
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !3182
  %2 = load float*, float** %v2.addr, align 8, !dbg !3183
  %3 = load float*, float** %v0.addr, align 8, !dbg !3184
  call void @sub_v3_v3v3(float* %arraydecay1, float* %2, float* %3), !dbg !3185
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !3186
  %4 = load float*, float** %p2.addr, align 8, !dbg !3187
  %5 = load float*, float** %p1.addr, align 8, !dbg !3188
  call void @sub_v3_v3v3(float* %arraydecay2, float* %4, float* %5), !dbg !3189
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !3190
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !3191
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !3192
  call void @cross_v3_v3v3(float* %arraydecay3, float* %arraydecay4, float* %arraydecay5), !dbg !3193
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !3194
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !3195
  %call = call float @dot_v3v3(float* %arraydecay6, float* %arraydecay7), !dbg !3196
  store float %call, float* %a, align 4, !dbg !3197
  %6 = load float, float* %a, align 4, !dbg !3198
  %cmp = fcmp oeq float %6, 0.000000e+00, !dbg !3200
  br i1 %cmp, label %if.then, label %if.end, !dbg !3201

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !3202
  br label %return, !dbg !3202

if.end:                                           ; preds = %entry
  %7 = load float, float* %a, align 4, !dbg !3203
  %div = fdiv float 1.000000e+00, %7, !dbg !3204
  store float %div, float* %f, align 4, !dbg !3205
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %s, i64 0, i64 0, !dbg !3206
  %8 = load float*, float** %p1.addr, align 8, !dbg !3207
  %9 = load float*, float** %v0.addr, align 8, !dbg !3208
  call void @sub_v3_v3v3(float* %arraydecay8, float* %8, float* %9), !dbg !3209
  %10 = load float, float* %f, align 4, !dbg !3210
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %s, i64 0, i64 0, !dbg !3211
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !3212
  %call11 = call float @dot_v3v3(float* %arraydecay9, float* %arraydecay10), !dbg !3213
  %mul = fmul float %10, %call11, !dbg !3214
  store float %mul, float* %u, align 4, !dbg !3215
  %11 = load float, float* %u, align 4, !dbg !3216
  %cmp12 = fcmp olt float %11, 0.000000e+00, !dbg !3218
  br i1 %cmp12, label %if.then14, label %lor.lhs.false, !dbg !3219

lor.lhs.false:                                    ; preds = %if.end
  %12 = load float, float* %u, align 4, !dbg !3220
  %cmp13 = fcmp ogt float %12, 1.000000e+00, !dbg !3221
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !3222

if.then14:                                        ; preds = %lor.lhs.false, %if.end
  store i8 0, i8* %retval, align 1, !dbg !3223
  br label %return, !dbg !3223

if.end15:                                         ; preds = %lor.lhs.false
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %q, i64 0, i64 0, !dbg !3224
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %s, i64 0, i64 0, !dbg !3225
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !3226
  call void @cross_v3_v3v3(float* %arraydecay16, float* %arraydecay17, float* %arraydecay18), !dbg !3227
  %13 = load float, float* %f, align 4, !dbg !3228
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !3229
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %q, i64 0, i64 0, !dbg !3230
  %call21 = call float @dot_v3v3(float* %arraydecay19, float* %arraydecay20), !dbg !3231
  %mul22 = fmul float %13, %call21, !dbg !3232
  store float %mul22, float* %v, align 4, !dbg !3233
  %14 = load float, float* %v, align 4, !dbg !3234
  %cmp23 = fcmp olt float %14, 0.000000e+00, !dbg !3236
  br i1 %cmp23, label %if.then26, label %lor.lhs.false24, !dbg !3237

lor.lhs.false24:                                  ; preds = %if.end15
  %15 = load float, float* %u, align 4, !dbg !3238
  %16 = load float, float* %v, align 4, !dbg !3239
  %add = fadd float %15, %16, !dbg !3240
  %cmp25 = fcmp ogt float %add, 1.000000e+00, !dbg !3241
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !3242

if.then26:                                        ; preds = %lor.lhs.false24, %if.end15
  store i8 0, i8* %retval, align 1, !dbg !3243
  br label %return, !dbg !3243

if.end27:                                         ; preds = %lor.lhs.false24
  %17 = load float, float* %f, align 4, !dbg !3244
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !3245
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %q, i64 0, i64 0, !dbg !3246
  %call30 = call float @dot_v3v3(float* %arraydecay28, float* %arraydecay29), !dbg !3247
  %mul31 = fmul float %17, %call30, !dbg !3248
  %18 = load float*, float** %r_lambda.addr, align 8, !dbg !3249
  store float %mul31, float* %18, align 4, !dbg !3250
  %19 = load float*, float** %r_lambda.addr, align 8, !dbg !3251
  %20 = load float, float* %19, align 4, !dbg !3253
  %cmp32 = fcmp olt float %20, 0.000000e+00, !dbg !3254
  br i1 %cmp32, label %if.then35, label %lor.lhs.false33, !dbg !3255

lor.lhs.false33:                                  ; preds = %if.end27
  %21 = load float*, float** %r_lambda.addr, align 8, !dbg !3256
  %22 = load float, float* %21, align 4, !dbg !3257
  %cmp34 = fcmp ogt float %22, 1.000000e+00, !dbg !3258
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !3259

if.then35:                                        ; preds = %lor.lhs.false33, %if.end27
  store i8 0, i8* %retval, align 1, !dbg !3260
  br label %return, !dbg !3260

if.end36:                                         ; preds = %lor.lhs.false33
  %23 = load float*, float** %r_uv.addr, align 8, !dbg !3261
  %tobool = icmp ne float* %23, null, !dbg !3261
  br i1 %tobool, label %if.then37, label %if.end39, !dbg !3263

if.then37:                                        ; preds = %if.end36
  %24 = load float, float* %u, align 4, !dbg !3264
  %25 = load float*, float** %r_uv.addr, align 8, !dbg !3266
  %arrayidx = getelementptr inbounds float, float* %25, i64 0, !dbg !3266
  store float %24, float* %arrayidx, align 4, !dbg !3267
  %26 = load float, float* %v, align 4, !dbg !3268
  %27 = load float*, float** %r_uv.addr, align 8, !dbg !3269
  %arrayidx38 = getelementptr inbounds float, float* %27, i64 1, !dbg !3269
  store float %26, float* %arrayidx38, align 4, !dbg !3270
  br label %if.end39, !dbg !3271

if.end39:                                         ; preds = %if.then37, %if.end36
  store i8 1, i8* %retval, align 1, !dbg !3272
  br label %return, !dbg !3272

return:                                           ; preds = %if.end39, %if.then35, %if.then26, %if.then14, %if.then
  %28 = load i8, i8* %retval, align 1, !dbg !3273
  ret i8 %28, !dbg !3273
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @isect_line_tri_epsilon_v3(float* %p1, float* %p2, float* %v0, float* %v1, float* %v2, float* %r_lambda, float* %r_uv, float %epsilon) #0 !dbg !3274 {
entry:
  %retval = alloca i8, align 1
  %p1.addr = alloca float*, align 8
  %p2.addr = alloca float*, align 8
  %v0.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %r_lambda.addr = alloca float*, align 8
  %r_uv.addr = alloca float*, align 8
  %epsilon.addr = alloca float, align 4
  %p = alloca [3 x float], align 4
  %s = alloca [3 x float], align 4
  %d = alloca [3 x float], align 4
  %e1 = alloca [3 x float], align 4
  %e2 = alloca [3 x float], align 4
  %q = alloca [3 x float], align 4
  %a = alloca float, align 4
  %f = alloca float, align 4
  %u = alloca float, align 4
  %v = alloca float, align 4
  store float* %p1, float** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p1.addr, metadata !3277, metadata !DIExpression()), !dbg !3278
  store float* %p2, float** %p2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p2.addr, metadata !3279, metadata !DIExpression()), !dbg !3280
  store float* %v0, float** %v0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v0.addr, metadata !3281, metadata !DIExpression()), !dbg !3282
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !3283, metadata !DIExpression()), !dbg !3284
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !3285, metadata !DIExpression()), !dbg !3286
  store float* %r_lambda, float** %r_lambda.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_lambda.addr, metadata !3287, metadata !DIExpression()), !dbg !3288
  store float* %r_uv, float** %r_uv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_uv.addr, metadata !3289, metadata !DIExpression()), !dbg !3290
  store float %epsilon, float* %epsilon.addr, align 4
  call void @llvm.dbg.declare(metadata float* %epsilon.addr, metadata !3291, metadata !DIExpression()), !dbg !3292
  call void @llvm.dbg.declare(metadata [3 x float]* %p, metadata !3293, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.declare(metadata [3 x float]* %s, metadata !3295, metadata !DIExpression()), !dbg !3296
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !3297, metadata !DIExpression()), !dbg !3298
  call void @llvm.dbg.declare(metadata [3 x float]* %e1, metadata !3299, metadata !DIExpression()), !dbg !3300
  call void @llvm.dbg.declare(metadata [3 x float]* %e2, metadata !3301, metadata !DIExpression()), !dbg !3302
  call void @llvm.dbg.declare(metadata [3 x float]* %q, metadata !3303, metadata !DIExpression()), !dbg !3304
  call void @llvm.dbg.declare(metadata float* %a, metadata !3305, metadata !DIExpression()), !dbg !3306
  call void @llvm.dbg.declare(metadata float* %f, metadata !3307, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.declare(metadata float* %u, metadata !3309, metadata !DIExpression()), !dbg !3310
  call void @llvm.dbg.declare(metadata float* %v, metadata !3311, metadata !DIExpression()), !dbg !3312
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !3313
  %0 = load float*, float** %v1.addr, align 8, !dbg !3314
  %1 = load float*, float** %v0.addr, align 8, !dbg !3315
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !3316
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !3317
  %2 = load float*, float** %v2.addr, align 8, !dbg !3318
  %3 = load float*, float** %v0.addr, align 8, !dbg !3319
  call void @sub_v3_v3v3(float* %arraydecay1, float* %2, float* %3), !dbg !3320
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !3321
  %4 = load float*, float** %p2.addr, align 8, !dbg !3322
  %5 = load float*, float** %p1.addr, align 8, !dbg !3323
  call void @sub_v3_v3v3(float* %arraydecay2, float* %4, float* %5), !dbg !3324
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !3325
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !3326
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !3327
  call void @cross_v3_v3v3(float* %arraydecay3, float* %arraydecay4, float* %arraydecay5), !dbg !3328
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !3329
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !3330
  %call = call float @dot_v3v3(float* %arraydecay6, float* %arraydecay7), !dbg !3331
  store float %call, float* %a, align 4, !dbg !3332
  %6 = load float, float* %a, align 4, !dbg !3333
  %cmp = fcmp oeq float %6, 0.000000e+00, !dbg !3335
  br i1 %cmp, label %if.then, label %if.end, !dbg !3336

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !3337
  br label %return, !dbg !3337

if.end:                                           ; preds = %entry
  %7 = load float, float* %a, align 4, !dbg !3338
  %div = fdiv float 1.000000e+00, %7, !dbg !3339
  store float %div, float* %f, align 4, !dbg !3340
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %s, i64 0, i64 0, !dbg !3341
  %8 = load float*, float** %p1.addr, align 8, !dbg !3342
  %9 = load float*, float** %v0.addr, align 8, !dbg !3343
  call void @sub_v3_v3v3(float* %arraydecay8, float* %8, float* %9), !dbg !3344
  %10 = load float, float* %f, align 4, !dbg !3345
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %s, i64 0, i64 0, !dbg !3346
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !3347
  %call11 = call float @dot_v3v3(float* %arraydecay9, float* %arraydecay10), !dbg !3348
  %mul = fmul float %10, %call11, !dbg !3349
  store float %mul, float* %u, align 4, !dbg !3350
  %11 = load float, float* %u, align 4, !dbg !3351
  %12 = load float, float* %epsilon.addr, align 4, !dbg !3353
  %fneg = fneg float %12, !dbg !3354
  %cmp12 = fcmp olt float %11, %fneg, !dbg !3355
  br i1 %cmp12, label %if.then14, label %lor.lhs.false, !dbg !3356

lor.lhs.false:                                    ; preds = %if.end
  %13 = load float, float* %u, align 4, !dbg !3357
  %14 = load float, float* %epsilon.addr, align 4, !dbg !3358
  %add = fadd float 1.000000e+00, %14, !dbg !3359
  %cmp13 = fcmp ogt float %13, %add, !dbg !3360
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !3361

if.then14:                                        ; preds = %lor.lhs.false, %if.end
  store i8 0, i8* %retval, align 1, !dbg !3362
  br label %return, !dbg !3362

if.end15:                                         ; preds = %lor.lhs.false
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %q, i64 0, i64 0, !dbg !3363
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %s, i64 0, i64 0, !dbg !3364
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !3365
  call void @cross_v3_v3v3(float* %arraydecay16, float* %arraydecay17, float* %arraydecay18), !dbg !3366
  %15 = load float, float* %f, align 4, !dbg !3367
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !3368
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %q, i64 0, i64 0, !dbg !3369
  %call21 = call float @dot_v3v3(float* %arraydecay19, float* %arraydecay20), !dbg !3370
  %mul22 = fmul float %15, %call21, !dbg !3371
  store float %mul22, float* %v, align 4, !dbg !3372
  %16 = load float, float* %v, align 4, !dbg !3373
  %17 = load float, float* %epsilon.addr, align 4, !dbg !3375
  %fneg23 = fneg float %17, !dbg !3376
  %cmp24 = fcmp olt float %16, %fneg23, !dbg !3377
  br i1 %cmp24, label %if.then29, label %lor.lhs.false25, !dbg !3378

lor.lhs.false25:                                  ; preds = %if.end15
  %18 = load float, float* %u, align 4, !dbg !3379
  %19 = load float, float* %v, align 4, !dbg !3380
  %add26 = fadd float %18, %19, !dbg !3381
  %20 = load float, float* %epsilon.addr, align 4, !dbg !3382
  %add27 = fadd float 1.000000e+00, %20, !dbg !3383
  %cmp28 = fcmp ogt float %add26, %add27, !dbg !3384
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !3385

if.then29:                                        ; preds = %lor.lhs.false25, %if.end15
  store i8 0, i8* %retval, align 1, !dbg !3386
  br label %return, !dbg !3386

if.end30:                                         ; preds = %lor.lhs.false25
  %21 = load float, float* %f, align 4, !dbg !3387
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !3388
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %q, i64 0, i64 0, !dbg !3389
  %call33 = call float @dot_v3v3(float* %arraydecay31, float* %arraydecay32), !dbg !3390
  %mul34 = fmul float %21, %call33, !dbg !3391
  %22 = load float*, float** %r_lambda.addr, align 8, !dbg !3392
  store float %mul34, float* %22, align 4, !dbg !3393
  %23 = load float*, float** %r_lambda.addr, align 8, !dbg !3394
  %24 = load float, float* %23, align 4, !dbg !3396
  %cmp35 = fcmp olt float %24, 0.000000e+00, !dbg !3397
  br i1 %cmp35, label %if.then38, label %lor.lhs.false36, !dbg !3398

lor.lhs.false36:                                  ; preds = %if.end30
  %25 = load float*, float** %r_lambda.addr, align 8, !dbg !3399
  %26 = load float, float* %25, align 4, !dbg !3400
  %cmp37 = fcmp ogt float %26, 1.000000e+00, !dbg !3401
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !3402

if.then38:                                        ; preds = %lor.lhs.false36, %if.end30
  store i8 0, i8* %retval, align 1, !dbg !3403
  br label %return, !dbg !3403

if.end39:                                         ; preds = %lor.lhs.false36
  %27 = load float*, float** %r_uv.addr, align 8, !dbg !3404
  %tobool = icmp ne float* %27, null, !dbg !3404
  br i1 %tobool, label %if.then40, label %if.end42, !dbg !3406

if.then40:                                        ; preds = %if.end39
  %28 = load float, float* %u, align 4, !dbg !3407
  %29 = load float*, float** %r_uv.addr, align 8, !dbg !3409
  %arrayidx = getelementptr inbounds float, float* %29, i64 0, !dbg !3409
  store float %28, float* %arrayidx, align 4, !dbg !3410
  %30 = load float, float* %v, align 4, !dbg !3411
  %31 = load float*, float** %r_uv.addr, align 8, !dbg !3412
  %arrayidx41 = getelementptr inbounds float, float* %31, i64 1, !dbg !3412
  store float %30, float* %arrayidx41, align 4, !dbg !3413
  br label %if.end42, !dbg !3414

if.end42:                                         ; preds = %if.then40, %if.end39
  store i8 1, i8* %retval, align 1, !dbg !3415
  br label %return, !dbg !3415

return:                                           ; preds = %if.end42, %if.then38, %if.then29, %if.then14, %if.then
  %32 = load i8, i8* %retval, align 1, !dbg !3416
  ret i8 %32, !dbg !3416
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @isect_ray_tri_v3(float* %p1, float* %d, float* %v0, float* %v1, float* %v2, float* %r_lambda, float* %r_uv) #0 !dbg !3417 {
entry:
  %retval = alloca i8, align 1
  %p1.addr = alloca float*, align 8
  %d.addr = alloca float*, align 8
  %v0.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %r_lambda.addr = alloca float*, align 8
  %r_uv.addr = alloca float*, align 8
  %p = alloca [3 x float], align 4
  %s = alloca [3 x float], align 4
  %e1 = alloca [3 x float], align 4
  %e2 = alloca [3 x float], align 4
  %q = alloca [3 x float], align 4
  %a = alloca float, align 4
  %f = alloca float, align 4
  %u = alloca float, align 4
  %v = alloca float, align 4
  store float* %p1, float** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p1.addr, metadata !3418, metadata !DIExpression()), !dbg !3419
  store float* %d, float** %d.addr, align 8
  call void @llvm.dbg.declare(metadata float** %d.addr, metadata !3420, metadata !DIExpression()), !dbg !3421
  store float* %v0, float** %v0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v0.addr, metadata !3422, metadata !DIExpression()), !dbg !3423
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !3424, metadata !DIExpression()), !dbg !3425
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !3426, metadata !DIExpression()), !dbg !3427
  store float* %r_lambda, float** %r_lambda.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_lambda.addr, metadata !3428, metadata !DIExpression()), !dbg !3429
  store float* %r_uv, float** %r_uv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_uv.addr, metadata !3430, metadata !DIExpression()), !dbg !3431
  call void @llvm.dbg.declare(metadata [3 x float]* %p, metadata !3432, metadata !DIExpression()), !dbg !3433
  call void @llvm.dbg.declare(metadata [3 x float]* %s, metadata !3434, metadata !DIExpression()), !dbg !3435
  call void @llvm.dbg.declare(metadata [3 x float]* %e1, metadata !3436, metadata !DIExpression()), !dbg !3437
  call void @llvm.dbg.declare(metadata [3 x float]* %e2, metadata !3438, metadata !DIExpression()), !dbg !3439
  call void @llvm.dbg.declare(metadata [3 x float]* %q, metadata !3440, metadata !DIExpression()), !dbg !3441
  call void @llvm.dbg.declare(metadata float* %a, metadata !3442, metadata !DIExpression()), !dbg !3443
  call void @llvm.dbg.declare(metadata float* %f, metadata !3444, metadata !DIExpression()), !dbg !3445
  call void @llvm.dbg.declare(metadata float* %u, metadata !3446, metadata !DIExpression()), !dbg !3447
  call void @llvm.dbg.declare(metadata float* %v, metadata !3448, metadata !DIExpression()), !dbg !3449
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !3450
  %0 = load float*, float** %v1.addr, align 8, !dbg !3451
  %1 = load float*, float** %v0.addr, align 8, !dbg !3452
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !3453
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !3454
  %2 = load float*, float** %v2.addr, align 8, !dbg !3455
  %3 = load float*, float** %v0.addr, align 8, !dbg !3456
  call void @sub_v3_v3v3(float* %arraydecay1, float* %2, float* %3), !dbg !3457
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !3458
  %4 = load float*, float** %d.addr, align 8, !dbg !3459
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !3460
  call void @cross_v3_v3v3(float* %arraydecay2, float* %4, float* %arraydecay3), !dbg !3461
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !3462
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !3463
  %call = call float @dot_v3v3(float* %arraydecay4, float* %arraydecay5), !dbg !3464
  store float %call, float* %a, align 4, !dbg !3465
  %5 = load float, float* %a, align 4, !dbg !3466
  %cmp = fcmp ogt float %5, 0xBE45798EE0000000, !dbg !3468
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3469

land.lhs.true:                                    ; preds = %entry
  %6 = load float, float* %a, align 4, !dbg !3470
  %cmp6 = fcmp olt float %6, 0x3E45798EE0000000, !dbg !3471
  br i1 %cmp6, label %if.then, label %if.end, !dbg !3472

if.then:                                          ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !3473
  br label %return, !dbg !3473

if.end:                                           ; preds = %land.lhs.true, %entry
  %7 = load float, float* %a, align 4, !dbg !3474
  %div = fdiv float 1.000000e+00, %7, !dbg !3475
  store float %div, float* %f, align 4, !dbg !3476
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %s, i64 0, i64 0, !dbg !3477
  %8 = load float*, float** %p1.addr, align 8, !dbg !3478
  %9 = load float*, float** %v0.addr, align 8, !dbg !3479
  call void @sub_v3_v3v3(float* %arraydecay7, float* %8, float* %9), !dbg !3480
  %10 = load float, float* %f, align 4, !dbg !3481
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %s, i64 0, i64 0, !dbg !3482
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !3483
  %call10 = call float @dot_v3v3(float* %arraydecay8, float* %arraydecay9), !dbg !3484
  %mul = fmul float %10, %call10, !dbg !3485
  store float %mul, float* %u, align 4, !dbg !3486
  %11 = load float, float* %u, align 4, !dbg !3487
  %cmp11 = fcmp olt float %11, 0.000000e+00, !dbg !3489
  br i1 %cmp11, label %if.then13, label %lor.lhs.false, !dbg !3490

lor.lhs.false:                                    ; preds = %if.end
  %12 = load float, float* %u, align 4, !dbg !3491
  %cmp12 = fcmp ogt float %12, 1.000000e+00, !dbg !3492
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !3493

if.then13:                                        ; preds = %lor.lhs.false, %if.end
  store i8 0, i8* %retval, align 1, !dbg !3494
  br label %return, !dbg !3494

if.end14:                                         ; preds = %lor.lhs.false
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %q, i64 0, i64 0, !dbg !3495
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %s, i64 0, i64 0, !dbg !3496
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !3497
  call void @cross_v3_v3v3(float* %arraydecay15, float* %arraydecay16, float* %arraydecay17), !dbg !3498
  %13 = load float, float* %f, align 4, !dbg !3499
  %14 = load float*, float** %d.addr, align 8, !dbg !3500
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %q, i64 0, i64 0, !dbg !3501
  %call19 = call float @dot_v3v3(float* %14, float* %arraydecay18), !dbg !3502
  %mul20 = fmul float %13, %call19, !dbg !3503
  store float %mul20, float* %v, align 4, !dbg !3504
  %15 = load float, float* %v, align 4, !dbg !3505
  %cmp21 = fcmp olt float %15, 0.000000e+00, !dbg !3507
  br i1 %cmp21, label %if.then24, label %lor.lhs.false22, !dbg !3508

lor.lhs.false22:                                  ; preds = %if.end14
  %16 = load float, float* %u, align 4, !dbg !3509
  %17 = load float, float* %v, align 4, !dbg !3510
  %add = fadd float %16, %17, !dbg !3511
  %cmp23 = fcmp ogt float %add, 1.000000e+00, !dbg !3512
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !3513

if.then24:                                        ; preds = %lor.lhs.false22, %if.end14
  store i8 0, i8* %retval, align 1, !dbg !3514
  br label %return, !dbg !3514

if.end25:                                         ; preds = %lor.lhs.false22
  %18 = load float, float* %f, align 4, !dbg !3515
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !3516
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %q, i64 0, i64 0, !dbg !3517
  %call28 = call float @dot_v3v3(float* %arraydecay26, float* %arraydecay27), !dbg !3518
  %mul29 = fmul float %18, %call28, !dbg !3519
  %19 = load float*, float** %r_lambda.addr, align 8, !dbg !3520
  store float %mul29, float* %19, align 4, !dbg !3521
  %20 = load float*, float** %r_lambda.addr, align 8, !dbg !3522
  %21 = load float, float* %20, align 4, !dbg !3524
  %cmp30 = fcmp olt float %21, 0.000000e+00, !dbg !3525
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !3526

if.then31:                                        ; preds = %if.end25
  store i8 0, i8* %retval, align 1, !dbg !3527
  br label %return, !dbg !3527

if.end32:                                         ; preds = %if.end25
  %22 = load float*, float** %r_uv.addr, align 8, !dbg !3528
  %tobool = icmp ne float* %22, null, !dbg !3528
  br i1 %tobool, label %if.then33, label %if.end35, !dbg !3530

if.then33:                                        ; preds = %if.end32
  %23 = load float, float* %u, align 4, !dbg !3531
  %24 = load float*, float** %r_uv.addr, align 8, !dbg !3533
  %arrayidx = getelementptr inbounds float, float* %24, i64 0, !dbg !3533
  store float %23, float* %arrayidx, align 4, !dbg !3534
  %25 = load float, float* %v, align 4, !dbg !3535
  %26 = load float*, float** %r_uv.addr, align 8, !dbg !3536
  %arrayidx34 = getelementptr inbounds float, float* %26, i64 1, !dbg !3536
  store float %25, float* %arrayidx34, align 4, !dbg !3537
  br label %if.end35, !dbg !3538

if.end35:                                         ; preds = %if.then33, %if.end32
  store i8 1, i8* %retval, align 1, !dbg !3539
  br label %return, !dbg !3539

return:                                           ; preds = %if.end35, %if.then31, %if.then24, %if.then13, %if.then
  %27 = load i8, i8* %retval, align 1, !dbg !3540
  ret i8 %27, !dbg !3540
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @isect_ray_plane_v3(float* %p1, float* %d, float* %v0, float* %v1, float* %v2, float* %r_lambda, i32 %clip) #0 !dbg !3541 {
entry:
  %retval = alloca i8, align 1
  %p1.addr = alloca float*, align 8
  %d.addr = alloca float*, align 8
  %v0.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %r_lambda.addr = alloca float*, align 8
  %clip.addr = alloca i32, align 4
  %p = alloca [3 x float], align 4
  %s = alloca [3 x float], align 4
  %e1 = alloca [3 x float], align 4
  %e2 = alloca [3 x float], align 4
  %q = alloca [3 x float], align 4
  %a = alloca float, align 4
  %f = alloca float, align 4
  store float* %p1, float** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p1.addr, metadata !3544, metadata !DIExpression()), !dbg !3545
  store float* %d, float** %d.addr, align 8
  call void @llvm.dbg.declare(metadata float** %d.addr, metadata !3546, metadata !DIExpression()), !dbg !3547
  store float* %v0, float** %v0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v0.addr, metadata !3548, metadata !DIExpression()), !dbg !3549
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !3550, metadata !DIExpression()), !dbg !3551
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !3552, metadata !DIExpression()), !dbg !3553
  store float* %r_lambda, float** %r_lambda.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_lambda.addr, metadata !3554, metadata !DIExpression()), !dbg !3555
  store i32 %clip, i32* %clip.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clip.addr, metadata !3556, metadata !DIExpression()), !dbg !3557
  call void @llvm.dbg.declare(metadata [3 x float]* %p, metadata !3558, metadata !DIExpression()), !dbg !3559
  call void @llvm.dbg.declare(metadata [3 x float]* %s, metadata !3560, metadata !DIExpression()), !dbg !3561
  call void @llvm.dbg.declare(metadata [3 x float]* %e1, metadata !3562, metadata !DIExpression()), !dbg !3563
  call void @llvm.dbg.declare(metadata [3 x float]* %e2, metadata !3564, metadata !DIExpression()), !dbg !3565
  call void @llvm.dbg.declare(metadata [3 x float]* %q, metadata !3566, metadata !DIExpression()), !dbg !3567
  call void @llvm.dbg.declare(metadata float* %a, metadata !3568, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.declare(metadata float* %f, metadata !3570, metadata !DIExpression()), !dbg !3571
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !3572
  %0 = load float*, float** %v1.addr, align 8, !dbg !3573
  %1 = load float*, float** %v0.addr, align 8, !dbg !3574
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !3575
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !3576
  %2 = load float*, float** %v2.addr, align 8, !dbg !3577
  %3 = load float*, float** %v0.addr, align 8, !dbg !3578
  call void @sub_v3_v3v3(float* %arraydecay1, float* %2, float* %3), !dbg !3579
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !3580
  %4 = load float*, float** %d.addr, align 8, !dbg !3581
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !3582
  call void @cross_v3_v3v3(float* %arraydecay2, float* %4, float* %arraydecay3), !dbg !3583
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !3584
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !3585
  %call = call float @dot_v3v3(float* %arraydecay4, float* %arraydecay5), !dbg !3586
  store float %call, float* %a, align 4, !dbg !3587
  %5 = load float, float* %a, align 4, !dbg !3588
  %cmp = fcmp ogt float %5, 0xBE45798EE0000000, !dbg !3590
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3591

land.lhs.true:                                    ; preds = %entry
  %6 = load float, float* %a, align 4, !dbg !3592
  %cmp6 = fcmp olt float %6, 0x3E45798EE0000000, !dbg !3593
  br i1 %cmp6, label %if.then, label %if.end, !dbg !3594

if.then:                                          ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !3595
  br label %return, !dbg !3595

if.end:                                           ; preds = %land.lhs.true, %entry
  %7 = load float, float* %a, align 4, !dbg !3596
  %div = fdiv float 1.000000e+00, %7, !dbg !3597
  store float %div, float* %f, align 4, !dbg !3598
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %s, i64 0, i64 0, !dbg !3599
  %8 = load float*, float** %p1.addr, align 8, !dbg !3600
  %9 = load float*, float** %v0.addr, align 8, !dbg !3601
  call void @sub_v3_v3v3(float* %arraydecay7, float* %8, float* %9), !dbg !3602
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %q, i64 0, i64 0, !dbg !3603
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %s, i64 0, i64 0, !dbg !3604
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !3605
  call void @cross_v3_v3v3(float* %arraydecay8, float* %arraydecay9, float* %arraydecay10), !dbg !3606
  %10 = load float, float* %f, align 4, !dbg !3607
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !3608
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %q, i64 0, i64 0, !dbg !3609
  %call13 = call float @dot_v3v3(float* %arraydecay11, float* %arraydecay12), !dbg !3610
  %mul = fmul float %10, %call13, !dbg !3611
  %11 = load float*, float** %r_lambda.addr, align 8, !dbg !3612
  store float %mul, float* %11, align 4, !dbg !3613
  %12 = load i32, i32* %clip.addr, align 4, !dbg !3614
  %tobool = icmp ne i32 %12, 0, !dbg !3614
  br i1 %tobool, label %land.lhs.true14, label %if.end17, !dbg !3616

land.lhs.true14:                                  ; preds = %if.end
  %13 = load float*, float** %r_lambda.addr, align 8, !dbg !3617
  %14 = load float, float* %13, align 4, !dbg !3618
  %cmp15 = fcmp olt float %14, 0.000000e+00, !dbg !3619
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !3620

if.then16:                                        ; preds = %land.lhs.true14
  store i8 0, i8* %retval, align 1, !dbg !3621
  br label %return, !dbg !3621

if.end17:                                         ; preds = %land.lhs.true14, %if.end
  store i8 1, i8* %retval, align 1, !dbg !3622
  br label %return, !dbg !3622

return:                                           ; preds = %if.end17, %if.then16, %if.then
  %15 = load i8, i8* %retval, align 1, !dbg !3623
  ret i8 %15, !dbg !3623
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @isect_ray_tri_epsilon_v3(float* %p1, float* %d, float* %v0, float* %v1, float* %v2, float* %r_lambda, float* %uv, float %epsilon) #0 !dbg !3624 {
entry:
  %retval = alloca i8, align 1
  %p1.addr = alloca float*, align 8
  %d.addr = alloca float*, align 8
  %v0.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %r_lambda.addr = alloca float*, align 8
  %uv.addr = alloca float*, align 8
  %epsilon.addr = alloca float, align 4
  %p = alloca [3 x float], align 4
  %s = alloca [3 x float], align 4
  %e1 = alloca [3 x float], align 4
  %e2 = alloca [3 x float], align 4
  %q = alloca [3 x float], align 4
  %a = alloca float, align 4
  %f = alloca float, align 4
  %u = alloca float, align 4
  %v = alloca float, align 4
  store float* %p1, float** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p1.addr, metadata !3625, metadata !DIExpression()), !dbg !3626
  store float* %d, float** %d.addr, align 8
  call void @llvm.dbg.declare(metadata float** %d.addr, metadata !3627, metadata !DIExpression()), !dbg !3628
  store float* %v0, float** %v0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v0.addr, metadata !3629, metadata !DIExpression()), !dbg !3630
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !3631, metadata !DIExpression()), !dbg !3632
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !3633, metadata !DIExpression()), !dbg !3634
  store float* %r_lambda, float** %r_lambda.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_lambda.addr, metadata !3635, metadata !DIExpression()), !dbg !3636
  store float* %uv, float** %uv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv.addr, metadata !3637, metadata !DIExpression()), !dbg !3638
  store float %epsilon, float* %epsilon.addr, align 4
  call void @llvm.dbg.declare(metadata float* %epsilon.addr, metadata !3639, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.declare(metadata [3 x float]* %p, metadata !3641, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.declare(metadata [3 x float]* %s, metadata !3643, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.declare(metadata [3 x float]* %e1, metadata !3645, metadata !DIExpression()), !dbg !3646
  call void @llvm.dbg.declare(metadata [3 x float]* %e2, metadata !3647, metadata !DIExpression()), !dbg !3648
  call void @llvm.dbg.declare(metadata [3 x float]* %q, metadata !3649, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.declare(metadata float* %a, metadata !3651, metadata !DIExpression()), !dbg !3652
  call void @llvm.dbg.declare(metadata float* %f, metadata !3653, metadata !DIExpression()), !dbg !3654
  call void @llvm.dbg.declare(metadata float* %u, metadata !3655, metadata !DIExpression()), !dbg !3656
  call void @llvm.dbg.declare(metadata float* %v, metadata !3657, metadata !DIExpression()), !dbg !3658
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !3659
  %0 = load float*, float** %v1.addr, align 8, !dbg !3660
  %1 = load float*, float** %v0.addr, align 8, !dbg !3661
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !3662
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !3663
  %2 = load float*, float** %v2.addr, align 8, !dbg !3664
  %3 = load float*, float** %v0.addr, align 8, !dbg !3665
  call void @sub_v3_v3v3(float* %arraydecay1, float* %2, float* %3), !dbg !3666
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !3667
  %4 = load float*, float** %d.addr, align 8, !dbg !3668
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !3669
  call void @cross_v3_v3v3(float* %arraydecay2, float* %4, float* %arraydecay3), !dbg !3670
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !3671
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !3672
  %call = call float @dot_v3v3(float* %arraydecay4, float* %arraydecay5), !dbg !3673
  store float %call, float* %a, align 4, !dbg !3674
  %5 = load float, float* %a, align 4, !dbg !3675
  %cmp = fcmp oeq float %5, 0.000000e+00, !dbg !3677
  br i1 %cmp, label %if.then, label %if.end, !dbg !3678

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !3679
  br label %return, !dbg !3679

if.end:                                           ; preds = %entry
  %6 = load float, float* %a, align 4, !dbg !3680
  %div = fdiv float 1.000000e+00, %6, !dbg !3681
  store float %div, float* %f, align 4, !dbg !3682
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %s, i64 0, i64 0, !dbg !3683
  %7 = load float*, float** %p1.addr, align 8, !dbg !3684
  %8 = load float*, float** %v0.addr, align 8, !dbg !3685
  call void @sub_v3_v3v3(float* %arraydecay6, float* %7, float* %8), !dbg !3686
  %9 = load float, float* %f, align 4, !dbg !3687
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %s, i64 0, i64 0, !dbg !3688
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !3689
  %call9 = call float @dot_v3v3(float* %arraydecay7, float* %arraydecay8), !dbg !3690
  %mul = fmul float %9, %call9, !dbg !3691
  store float %mul, float* %u, align 4, !dbg !3692
  %10 = load float, float* %u, align 4, !dbg !3693
  %11 = load float, float* %epsilon.addr, align 4, !dbg !3695
  %fneg = fneg float %11, !dbg !3696
  %cmp10 = fcmp olt float %10, %fneg, !dbg !3697
  br i1 %cmp10, label %if.then12, label %lor.lhs.false, !dbg !3698

lor.lhs.false:                                    ; preds = %if.end
  %12 = load float, float* %u, align 4, !dbg !3699
  %13 = load float, float* %epsilon.addr, align 4, !dbg !3700
  %add = fadd float 1.000000e+00, %13, !dbg !3701
  %cmp11 = fcmp ogt float %12, %add, !dbg !3702
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !3703

if.then12:                                        ; preds = %lor.lhs.false, %if.end
  store i8 0, i8* %retval, align 1, !dbg !3704
  br label %return, !dbg !3704

if.end13:                                         ; preds = %lor.lhs.false
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %q, i64 0, i64 0, !dbg !3705
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %s, i64 0, i64 0, !dbg !3706
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !3707
  call void @cross_v3_v3v3(float* %arraydecay14, float* %arraydecay15, float* %arraydecay16), !dbg !3708
  %14 = load float, float* %f, align 4, !dbg !3709
  %15 = load float*, float** %d.addr, align 8, !dbg !3710
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %q, i64 0, i64 0, !dbg !3711
  %call18 = call float @dot_v3v3(float* %15, float* %arraydecay17), !dbg !3712
  %mul19 = fmul float %14, %call18, !dbg !3713
  store float %mul19, float* %v, align 4, !dbg !3714
  %16 = load float, float* %v, align 4, !dbg !3715
  %17 = load float, float* %epsilon.addr, align 4, !dbg !3717
  %fneg20 = fneg float %17, !dbg !3718
  %cmp21 = fcmp olt float %16, %fneg20, !dbg !3719
  br i1 %cmp21, label %if.then26, label %lor.lhs.false22, !dbg !3720

lor.lhs.false22:                                  ; preds = %if.end13
  %18 = load float, float* %u, align 4, !dbg !3721
  %19 = load float, float* %v, align 4, !dbg !3722
  %add23 = fadd float %18, %19, !dbg !3723
  %20 = load float, float* %epsilon.addr, align 4, !dbg !3724
  %add24 = fadd float 1.000000e+00, %20, !dbg !3725
  %cmp25 = fcmp ogt float %add23, %add24, !dbg !3726
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !3727

if.then26:                                        ; preds = %lor.lhs.false22, %if.end13
  store i8 0, i8* %retval, align 1, !dbg !3728
  br label %return, !dbg !3728

if.end27:                                         ; preds = %lor.lhs.false22
  %21 = load float, float* %f, align 4, !dbg !3729
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !3730
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %q, i64 0, i64 0, !dbg !3731
  %call30 = call float @dot_v3v3(float* %arraydecay28, float* %arraydecay29), !dbg !3732
  %mul31 = fmul float %21, %call30, !dbg !3733
  %22 = load float*, float** %r_lambda.addr, align 8, !dbg !3734
  store float %mul31, float* %22, align 4, !dbg !3735
  %23 = load float*, float** %r_lambda.addr, align 8, !dbg !3736
  %24 = load float, float* %23, align 4, !dbg !3738
  %cmp32 = fcmp olt float %24, 0.000000e+00, !dbg !3739
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !3740

if.then33:                                        ; preds = %if.end27
  store i8 0, i8* %retval, align 1, !dbg !3741
  br label %return, !dbg !3741

if.end34:                                         ; preds = %if.end27
  %25 = load float*, float** %uv.addr, align 8, !dbg !3742
  %tobool = icmp ne float* %25, null, !dbg !3742
  br i1 %tobool, label %if.then35, label %if.end37, !dbg !3744

if.then35:                                        ; preds = %if.end34
  %26 = load float, float* %u, align 4, !dbg !3745
  %27 = load float*, float** %uv.addr, align 8, !dbg !3747
  %arrayidx = getelementptr inbounds float, float* %27, i64 0, !dbg !3747
  store float %26, float* %arrayidx, align 4, !dbg !3748
  %28 = load float, float* %v, align 4, !dbg !3749
  %29 = load float*, float** %uv.addr, align 8, !dbg !3750
  %arrayidx36 = getelementptr inbounds float, float* %29, i64 1, !dbg !3750
  store float %28, float* %arrayidx36, align 4, !dbg !3751
  br label %if.end37, !dbg !3752

if.end37:                                         ; preds = %if.then35, %if.end34
  store i8 1, i8* %retval, align 1, !dbg !3753
  br label %return, !dbg !3753

return:                                           ; preds = %if.end37, %if.then33, %if.then26, %if.then12, %if.then
  %30 = load i8, i8* %retval, align 1, !dbg !3754
  ret i8 %30, !dbg !3754
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @isect_ray_tri_threshold_v3(float* %p1, float* %d, float* %v0, float* %v1, float* %v2, float* %r_lambda, float* %r_uv, float %threshold) #0 !dbg !3755 {
entry:
  %retval = alloca i8, align 1
  %p1.addr = alloca float*, align 8
  %d.addr = alloca float*, align 8
  %v0.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %r_lambda.addr = alloca float*, align 8
  %r_uv.addr = alloca float*, align 8
  %threshold.addr = alloca float, align 4
  %p = alloca [3 x float], align 4
  %s = alloca [3 x float], align 4
  %e1 = alloca [3 x float], align 4
  %e2 = alloca [3 x float], align 4
  %q = alloca [3 x float], align 4
  %a = alloca float, align 4
  %f = alloca float, align 4
  %u = alloca float, align 4
  %v = alloca float, align 4
  %du = alloca float, align 4
  %dv = alloca float, align 4
  %t = alloca float, align 4
  store float* %p1, float** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p1.addr, metadata !3756, metadata !DIExpression()), !dbg !3757
  store float* %d, float** %d.addr, align 8
  call void @llvm.dbg.declare(metadata float** %d.addr, metadata !3758, metadata !DIExpression()), !dbg !3759
  store float* %v0, float** %v0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v0.addr, metadata !3760, metadata !DIExpression()), !dbg !3761
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !3762, metadata !DIExpression()), !dbg !3763
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !3764, metadata !DIExpression()), !dbg !3765
  store float* %r_lambda, float** %r_lambda.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_lambda.addr, metadata !3766, metadata !DIExpression()), !dbg !3767
  store float* %r_uv, float** %r_uv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_uv.addr, metadata !3768, metadata !DIExpression()), !dbg !3769
  store float %threshold, float* %threshold.addr, align 4
  call void @llvm.dbg.declare(metadata float* %threshold.addr, metadata !3770, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.declare(metadata [3 x float]* %p, metadata !3772, metadata !DIExpression()), !dbg !3773
  call void @llvm.dbg.declare(metadata [3 x float]* %s, metadata !3774, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.declare(metadata [3 x float]* %e1, metadata !3776, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.declare(metadata [3 x float]* %e2, metadata !3778, metadata !DIExpression()), !dbg !3779
  call void @llvm.dbg.declare(metadata [3 x float]* %q, metadata !3780, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.declare(metadata float* %a, metadata !3782, metadata !DIExpression()), !dbg !3783
  call void @llvm.dbg.declare(metadata float* %f, metadata !3784, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.declare(metadata float* %u, metadata !3786, metadata !DIExpression()), !dbg !3787
  call void @llvm.dbg.declare(metadata float* %v, metadata !3788, metadata !DIExpression()), !dbg !3789
  call void @llvm.dbg.declare(metadata float* %du, metadata !3790, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.declare(metadata float* %dv, metadata !3792, metadata !DIExpression()), !dbg !3793
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !3794
  %0 = load float*, float** %v1.addr, align 8, !dbg !3795
  %1 = load float*, float** %v0.addr, align 8, !dbg !3796
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !3797
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !3798
  %2 = load float*, float** %v2.addr, align 8, !dbg !3799
  %3 = load float*, float** %v0.addr, align 8, !dbg !3800
  call void @sub_v3_v3v3(float* %arraydecay1, float* %2, float* %3), !dbg !3801
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !3802
  %4 = load float*, float** %d.addr, align 8, !dbg !3803
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !3804
  call void @cross_v3_v3v3(float* %arraydecay2, float* %4, float* %arraydecay3), !dbg !3805
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !3806
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !3807
  %call = call float @dot_v3v3(float* %arraydecay4, float* %arraydecay5), !dbg !3808
  store float %call, float* %a, align 4, !dbg !3809
  %5 = load float, float* %a, align 4, !dbg !3810
  %cmp = fcmp ogt float %5, 0xBEB0C6F7A0000000, !dbg !3812
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3813

land.lhs.true:                                    ; preds = %entry
  %6 = load float, float* %a, align 4, !dbg !3814
  %cmp6 = fcmp olt float %6, 0x3EB0C6F7A0000000, !dbg !3815
  br i1 %cmp6, label %if.then, label %if.end, !dbg !3816

if.then:                                          ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !3817
  br label %return, !dbg !3817

if.end:                                           ; preds = %land.lhs.true, %entry
  %7 = load float, float* %a, align 4, !dbg !3818
  %div = fdiv float 1.000000e+00, %7, !dbg !3819
  store float %div, float* %f, align 4, !dbg !3820
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %s, i64 0, i64 0, !dbg !3821
  %8 = load float*, float** %p1.addr, align 8, !dbg !3822
  %9 = load float*, float** %v0.addr, align 8, !dbg !3823
  call void @sub_v3_v3v3(float* %arraydecay7, float* %8, float* %9), !dbg !3824
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %q, i64 0, i64 0, !dbg !3825
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %s, i64 0, i64 0, !dbg !3826
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !3827
  call void @cross_v3_v3v3(float* %arraydecay8, float* %arraydecay9, float* %arraydecay10), !dbg !3828
  %10 = load float, float* %f, align 4, !dbg !3829
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !3830
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %q, i64 0, i64 0, !dbg !3831
  %call13 = call float @dot_v3v3(float* %arraydecay11, float* %arraydecay12), !dbg !3832
  %mul = fmul float %10, %call13, !dbg !3833
  %11 = load float*, float** %r_lambda.addr, align 8, !dbg !3834
  store float %mul, float* %11, align 4, !dbg !3835
  %12 = load float*, float** %r_lambda.addr, align 8, !dbg !3836
  %13 = load float, float* %12, align 4, !dbg !3838
  %cmp14 = fcmp olt float %13, 0.000000e+00, !dbg !3839
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !3840

if.then15:                                        ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !3841
  br label %return, !dbg !3841

if.end16:                                         ; preds = %if.end
  %14 = load float, float* %f, align 4, !dbg !3842
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %s, i64 0, i64 0, !dbg !3843
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !3844
  %call19 = call float @dot_v3v3(float* %arraydecay17, float* %arraydecay18), !dbg !3845
  %mul20 = fmul float %14, %call19, !dbg !3846
  store float %mul20, float* %u, align 4, !dbg !3847
  %15 = load float, float* %f, align 4, !dbg !3848
  %16 = load float*, float** %d.addr, align 8, !dbg !3849
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %q, i64 0, i64 0, !dbg !3850
  %call22 = call float @dot_v3v3(float* %16, float* %arraydecay21), !dbg !3851
  %mul23 = fmul float %15, %call22, !dbg !3852
  store float %mul23, float* %v, align 4, !dbg !3853
  %17 = load float, float* %u, align 4, !dbg !3854
  %cmp24 = fcmp ogt float %17, 0.000000e+00, !dbg !3856
  br i1 %cmp24, label %land.lhs.true25, label %if.else, !dbg !3857

land.lhs.true25:                                  ; preds = %if.end16
  %18 = load float, float* %v, align 4, !dbg !3858
  %cmp26 = fcmp ogt float %18, 0.000000e+00, !dbg !3859
  br i1 %cmp26, label %land.lhs.true27, label %if.else, !dbg !3860

land.lhs.true27:                                  ; preds = %land.lhs.true25
  %19 = load float, float* %u, align 4, !dbg !3861
  %20 = load float, float* %v, align 4, !dbg !3862
  %add = fadd float %19, %20, !dbg !3863
  %cmp28 = fcmp ogt float %add, 1.000000e+00, !dbg !3864
  br i1 %cmp28, label %if.then29, label %if.else, !dbg !3865

if.then29:                                        ; preds = %land.lhs.true27
  call void @llvm.dbg.declare(metadata float* %t, metadata !3866, metadata !DIExpression()), !dbg !3868
  %21 = load float, float* %u, align 4, !dbg !3869
  %22 = load float, float* %v, align 4, !dbg !3870
  %add30 = fadd float %21, %22, !dbg !3871
  %sub = fsub float %add30, 1.000000e+00, !dbg !3872
  %div31 = fdiv float %sub, 2.000000e+00, !dbg !3873
  store float %div31, float* %t, align 4, !dbg !3868
  %23 = load float, float* %u, align 4, !dbg !3874
  %24 = load float, float* %t, align 4, !dbg !3875
  %sub32 = fsub float %23, %24, !dbg !3876
  store float %sub32, float* %du, align 4, !dbg !3877
  %25 = load float, float* %v, align 4, !dbg !3878
  %26 = load float, float* %t, align 4, !dbg !3879
  %sub33 = fsub float %25, %26, !dbg !3880
  store float %sub33, float* %dv, align 4, !dbg !3881
  br label %if.end52, !dbg !3882

if.else:                                          ; preds = %land.lhs.true27, %land.lhs.true25, %if.end16
  %27 = load float, float* %u, align 4, !dbg !3883
  %cmp34 = fcmp olt float %27, 0.000000e+00, !dbg !3886
  br i1 %cmp34, label %if.then35, label %if.else36, !dbg !3887

if.then35:                                        ; preds = %if.else
  %28 = load float, float* %u, align 4, !dbg !3888
  store float %28, float* %du, align 4, !dbg !3889
  br label %if.end42, !dbg !3890

if.else36:                                        ; preds = %if.else
  %29 = load float, float* %u, align 4, !dbg !3891
  %cmp37 = fcmp ogt float %29, 1.000000e+00, !dbg !3893
  br i1 %cmp37, label %if.then38, label %if.else40, !dbg !3894

if.then38:                                        ; preds = %if.else36
  %30 = load float, float* %u, align 4, !dbg !3895
  %sub39 = fsub float %30, 1.000000e+00, !dbg !3896
  store float %sub39, float* %du, align 4, !dbg !3897
  br label %if.end41, !dbg !3898

if.else40:                                        ; preds = %if.else36
  store float 0.000000e+00, float* %du, align 4, !dbg !3899
  br label %if.end41

if.end41:                                         ; preds = %if.else40, %if.then38
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then35
  %31 = load float, float* %v, align 4, !dbg !3900
  %cmp43 = fcmp olt float %31, 0.000000e+00, !dbg !3902
  br i1 %cmp43, label %if.then44, label %if.else45, !dbg !3903

if.then44:                                        ; preds = %if.end42
  %32 = load float, float* %v, align 4, !dbg !3904
  store float %32, float* %dv, align 4, !dbg !3905
  br label %if.end51, !dbg !3906

if.else45:                                        ; preds = %if.end42
  %33 = load float, float* %v, align 4, !dbg !3907
  %cmp46 = fcmp ogt float %33, 1.000000e+00, !dbg !3909
  br i1 %cmp46, label %if.then47, label %if.else49, !dbg !3910

if.then47:                                        ; preds = %if.else45
  %34 = load float, float* %v, align 4, !dbg !3911
  %sub48 = fsub float %34, 1.000000e+00, !dbg !3912
  store float %sub48, float* %dv, align 4, !dbg !3913
  br label %if.end50, !dbg !3914

if.else49:                                        ; preds = %if.else45
  store float 0.000000e+00, float* %dv, align 4, !dbg !3915
  br label %if.end50

if.end50:                                         ; preds = %if.else49, %if.then47
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then44
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then29
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !3916
  %35 = load float, float* %du, align 4, !dbg !3917
  call void @mul_v3_fl(float* %arraydecay53, float %35), !dbg !3918
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !3919
  %36 = load float, float* %dv, align 4, !dbg !3920
  call void @mul_v3_fl(float* %arraydecay54, float %36), !dbg !3921
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !3922
  %call56 = call float @len_squared_v3(float* %arraydecay55), !dbg !3924
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !3925
  %call58 = call float @len_squared_v3(float* %arraydecay57), !dbg !3926
  %add59 = fadd float %call56, %call58, !dbg !3927
  %37 = load float, float* %threshold.addr, align 4, !dbg !3928
  %38 = load float, float* %threshold.addr, align 4, !dbg !3929
  %mul60 = fmul float %37, %38, !dbg !3930
  %cmp61 = fcmp ogt float %add59, %mul60, !dbg !3931
  br i1 %cmp61, label %if.then62, label %if.end63, !dbg !3932

if.then62:                                        ; preds = %if.end52
  store i8 0, i8* %retval, align 1, !dbg !3933
  br label %return, !dbg !3933

if.end63:                                         ; preds = %if.end52
  %39 = load float*, float** %r_uv.addr, align 8, !dbg !3935
  %tobool = icmp ne float* %39, null, !dbg !3935
  br i1 %tobool, label %if.then64, label %if.end66, !dbg !3937

if.then64:                                        ; preds = %if.end63
  %40 = load float, float* %u, align 4, !dbg !3938
  %41 = load float*, float** %r_uv.addr, align 8, !dbg !3940
  %arrayidx = getelementptr inbounds float, float* %41, i64 0, !dbg !3940
  store float %40, float* %arrayidx, align 4, !dbg !3941
  %42 = load float, float* %v, align 4, !dbg !3942
  %43 = load float*, float** %r_uv.addr, align 8, !dbg !3943
  %arrayidx65 = getelementptr inbounds float, float* %43, i64 1, !dbg !3943
  store float %42, float* %arrayidx65, align 4, !dbg !3944
  br label %if.end66, !dbg !3945

if.end66:                                         ; preds = %if.then64, %if.end63
  store i8 1, i8* %retval, align 1, !dbg !3946
  br label %return, !dbg !3946

return:                                           ; preds = %if.end66, %if.then62, %if.then15, %if.then
  %44 = load i8, i8* %retval, align 1, !dbg !3947
  ret i8 %44, !dbg !3947
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @isect_point_planes_v3([4 x float]* %planes, i32 %totplane, float* %p) #0 !dbg !3948 {
entry:
  %retval = alloca i8, align 1
  %planes.addr = alloca [4 x float]*, align 8
  %totplane.addr = alloca i32, align 4
  %p.addr = alloca float*, align 8
  %i = alloca i32, align 4
  store [4 x float]* %planes, [4 x float]** %planes.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %planes.addr, metadata !3955, metadata !DIExpression()), !dbg !3956
  store i32 %totplane, i32* %totplane.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totplane.addr, metadata !3957, metadata !DIExpression()), !dbg !3958
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !3959, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3961, metadata !DIExpression()), !dbg !3962
  store i32 0, i32* %i, align 4, !dbg !3963
  br label %for.cond, !dbg !3965

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3966
  %1 = load i32, i32* %totplane.addr, align 4, !dbg !3968
  %cmp = icmp slt i32 %0, %1, !dbg !3969
  br i1 %cmp, label %for.body, label %for.end, !dbg !3970

for.body:                                         ; preds = %for.cond
  %2 = load [4 x float]*, [4 x float]** %planes.addr, align 8, !dbg !3971
  %3 = load i32, i32* %i, align 4, !dbg !3974
  %idxprom = sext i32 %3 to i64, !dbg !3971
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %2, i64 %idxprom, !dbg !3971
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !3971
  %4 = load float*, float** %p.addr, align 8, !dbg !3975
  %call = call float @plane_point_side_v3(float* %arraydecay, float* %4), !dbg !3976
  %cmp1 = fcmp ogt float %call, 0.000000e+00, !dbg !3977
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3978

if.then:                                          ; preds = %for.body
  store i8 0, i8* %retval, align 1, !dbg !3979
  br label %return, !dbg !3979

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3981

for.inc:                                          ; preds = %if.end
  %5 = load i32, i32* %i, align 4, !dbg !3982
  %inc = add nsw i32 %5, 1, !dbg !3982
  store i32 %inc, i32* %i, align 4, !dbg !3982
  br label %for.cond, !dbg !3983, !llvm.loop !3984

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %retval, align 1, !dbg !3986
  br label %return, !dbg !3986

return:                                           ; preds = %for.end, %if.then
  %6 = load i8, i8* %retval, align 1, !dbg !3987
  ret i8 %6, !dbg !3987
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @isect_line_plane_v3(float* %out, float* %l1, float* %l2, float* %plane_co, float* %plane_no) #0 !dbg !3988 {
entry:
  %retval = alloca i8, align 1
  %out.addr = alloca float*, align 8
  %l1.addr = alloca float*, align 8
  %l2.addr = alloca float*, align 8
  %plane_co.addr = alloca float*, align 8
  %plane_no.addr = alloca float*, align 8
  %u = alloca [3 x float], align 4
  %h = alloca [3 x float], align 4
  %dot = alloca float, align 4
  %lambda = alloca float, align 4
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !3991, metadata !DIExpression()), !dbg !3992
  store float* %l1, float** %l1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1.addr, metadata !3993, metadata !DIExpression()), !dbg !3994
  store float* %l2, float** %l2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2.addr, metadata !3995, metadata !DIExpression()), !dbg !3996
  store float* %plane_co, float** %plane_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane_co.addr, metadata !3997, metadata !DIExpression()), !dbg !3998
  store float* %plane_no, float** %plane_no.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane_no.addr, metadata !3999, metadata !DIExpression()), !dbg !4000
  call void @llvm.dbg.declare(metadata [3 x float]* %u, metadata !4001, metadata !DIExpression()), !dbg !4002
  call void @llvm.dbg.declare(metadata [3 x float]* %h, metadata !4003, metadata !DIExpression()), !dbg !4004
  call void @llvm.dbg.declare(metadata float* %dot, metadata !4005, metadata !DIExpression()), !dbg !4006
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %u, i64 0, i64 0, !dbg !4007
  %0 = load float*, float** %l2.addr, align 8, !dbg !4008
  %1 = load float*, float** %l1.addr, align 8, !dbg !4009
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !4010
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !4011
  %2 = load float*, float** %l1.addr, align 8, !dbg !4012
  %3 = load float*, float** %plane_co.addr, align 8, !dbg !4013
  call void @sub_v3_v3v3(float* %arraydecay1, float* %2, float* %3), !dbg !4014
  %4 = load float*, float** %plane_no.addr, align 8, !dbg !4015
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %u, i64 0, i64 0, !dbg !4016
  %call = call float @dot_v3v3(float* %4, float* %arraydecay2), !dbg !4017
  store float %call, float* %dot, align 4, !dbg !4018
  %5 = load float, float* %dot, align 4, !dbg !4019
  %6 = call float @llvm.fabs.f32(float %5), !dbg !4021
  %cmp = fcmp ogt float %6, 0x3E80000000000000, !dbg !4022
  br i1 %cmp, label %if.then, label %if.else, !dbg !4023

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %lambda, metadata !4024, metadata !DIExpression()), !dbg !4026
  %7 = load float*, float** %plane_no.addr, align 8, !dbg !4027
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !4028
  %call4 = call float @dot_v3v3(float* %7, float* %arraydecay3), !dbg !4029
  %fneg = fneg float %call4, !dbg !4030
  %8 = load float, float* %dot, align 4, !dbg !4031
  %div = fdiv float %fneg, %8, !dbg !4032
  store float %div, float* %lambda, align 4, !dbg !4026
  %9 = load float*, float** %out.addr, align 8, !dbg !4033
  %10 = load float*, float** %l1.addr, align 8, !dbg !4034
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %u, i64 0, i64 0, !dbg !4035
  %11 = load float, float* %lambda, align 4, !dbg !4036
  call void @madd_v3_v3v3fl(float* %9, float* %10, float* %arraydecay5, float %11), !dbg !4037
  store i8 1, i8* %retval, align 1, !dbg !4038
  br label %return, !dbg !4038

if.else:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !4039
  br label %return, !dbg !4039

return:                                           ; preds = %if.else, %if.then
  %12 = load i8, i8* %retval, align 1, !dbg !4041
  ret i8 %12, !dbg !4041
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @isect_plane_plane_v3(float* %r_isect_co, float* %r_isect_no, float* %plane_a_co, float* %plane_a_no, float* %plane_b_co, float* %plane_b_no) #0 !dbg !4042 {
entry:
  %r_isect_co.addr = alloca float*, align 8
  %r_isect_no.addr = alloca float*, align 8
  %plane_a_co.addr = alloca float*, align 8
  %plane_a_no.addr = alloca float*, align 8
  %plane_b_co.addr = alloca float*, align 8
  %plane_b_no.addr = alloca float*, align 8
  %plane_a_co_other = alloca [3 x float], align 4
  store float* %r_isect_co, float** %r_isect_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_isect_co.addr, metadata !4045, metadata !DIExpression()), !dbg !4046
  store float* %r_isect_no, float** %r_isect_no.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_isect_no.addr, metadata !4047, metadata !DIExpression()), !dbg !4048
  store float* %plane_a_co, float** %plane_a_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane_a_co.addr, metadata !4049, metadata !DIExpression()), !dbg !4050
  store float* %plane_a_no, float** %plane_a_no.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane_a_no.addr, metadata !4051, metadata !DIExpression()), !dbg !4052
  store float* %plane_b_co, float** %plane_b_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane_b_co.addr, metadata !4053, metadata !DIExpression()), !dbg !4054
  store float* %plane_b_no, float** %plane_b_no.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane_b_no.addr, metadata !4055, metadata !DIExpression()), !dbg !4056
  call void @llvm.dbg.declare(metadata [3 x float]* %plane_a_co_other, metadata !4057, metadata !DIExpression()), !dbg !4058
  %0 = load float*, float** %r_isect_no.addr, align 8, !dbg !4059
  %1 = load float*, float** %plane_a_no.addr, align 8, !dbg !4060
  %2 = load float*, float** %plane_b_no.addr, align 8, !dbg !4061
  call void @cross_v3_v3v3(float* %0, float* %1, float* %2), !dbg !4062
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %plane_a_co_other, i64 0, i64 0, !dbg !4063
  %3 = load float*, float** %plane_a_no.addr, align 8, !dbg !4064
  %4 = load float*, float** %r_isect_no.addr, align 8, !dbg !4065
  call void @cross_v3_v3v3(float* %arraydecay, float* %3, float* %4), !dbg !4066
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %plane_a_co_other, i64 0, i64 0, !dbg !4067
  %5 = load float*, float** %plane_a_co.addr, align 8, !dbg !4068
  call void @add_v3_v3(float* %arraydecay1, float* %5), !dbg !4069
  %6 = load float*, float** %r_isect_co.addr, align 8, !dbg !4070
  %7 = load float*, float** %plane_a_co.addr, align 8, !dbg !4071
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %plane_a_co_other, i64 0, i64 0, !dbg !4072
  %8 = load float*, float** %plane_b_co.addr, align 8, !dbg !4073
  %9 = load float*, float** %plane_b_no.addr, align 8, !dbg !4074
  %call = call zeroext i8 @isect_line_plane_v3(float* %6, float* %7, float* %arraydecay2, float* %8, float* %9), !dbg !4075
  ret i8 %call, !dbg !4076
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @isect_sweeping_sphere_tri_v3(float* %p1, float* %p2, float %radius, float* %v0, float* %v1, float* %v2, float* %r_lambda, float* %ipoint) #0 !dbg !4077 {
entry:
  %retval = alloca i8, align 1
  %p1.addr = alloca float*, align 8
  %p2.addr = alloca float*, align 8
  %radius.addr = alloca float, align 4
  %v0.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %r_lambda.addr = alloca float*, align 8
  %ipoint.addr = alloca float*, align 8
  %e1 = alloca [3 x float], align 4
  %e2 = alloca [3 x float], align 4
  %e3 = alloca [3 x float], align 4
  %point = alloca [3 x float], align 4
  %vel = alloca [3 x float], align 4
  %nor = alloca [3 x float], align 4
  %temp = alloca [3 x float], align 4
  %bv = alloca [3 x float], align 4
  %a = alloca float, align 4
  %b = alloca float, align 4
  %c = alloca float, align 4
  %d = alloca float, align 4
  %e = alloca float, align 4
  %x = alloca float, align 4
  %y = alloca float, align 4
  %z = alloca float, align 4
  %radius2 = alloca float, align 4
  %elen2 = alloca float, align 4
  %edotv = alloca float, align 4
  %edotbv = alloca float, align 4
  %nordotv = alloca float, align 4
  %newLambda = alloca float, align 4
  %found_by_sweep = alloca i8, align 1
  %t0 = alloca float, align 4
  %t1 = alloca float, align 4
  %sw_ap = alloca float, align 4
  store float* %p1, float** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p1.addr, metadata !4080, metadata !DIExpression()), !dbg !4081
  store float* %p2, float** %p2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p2.addr, metadata !4082, metadata !DIExpression()), !dbg !4083
  store float %radius, float* %radius.addr, align 4
  call void @llvm.dbg.declare(metadata float* %radius.addr, metadata !4084, metadata !DIExpression()), !dbg !4085
  store float* %v0, float** %v0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v0.addr, metadata !4086, metadata !DIExpression()), !dbg !4087
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !4088, metadata !DIExpression()), !dbg !4089
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !4090, metadata !DIExpression()), !dbg !4091
  store float* %r_lambda, float** %r_lambda.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_lambda.addr, metadata !4092, metadata !DIExpression()), !dbg !4093
  store float* %ipoint, float** %ipoint.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ipoint.addr, metadata !4094, metadata !DIExpression()), !dbg !4095
  call void @llvm.dbg.declare(metadata [3 x float]* %e1, metadata !4096, metadata !DIExpression()), !dbg !4097
  call void @llvm.dbg.declare(metadata [3 x float]* %e2, metadata !4098, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.declare(metadata [3 x float]* %e3, metadata !4100, metadata !DIExpression()), !dbg !4101
  call void @llvm.dbg.declare(metadata [3 x float]* %point, metadata !4102, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.declare(metadata [3 x float]* %vel, metadata !4104, metadata !DIExpression()), !dbg !4105
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !4106, metadata !DIExpression()), !dbg !4107
  call void @llvm.dbg.declare(metadata [3 x float]* %temp, metadata !4108, metadata !DIExpression()), !dbg !4109
  call void @llvm.dbg.declare(metadata [3 x float]* %bv, metadata !4110, metadata !DIExpression()), !dbg !4111
  call void @llvm.dbg.declare(metadata float* %a, metadata !4112, metadata !DIExpression()), !dbg !4113
  call void @llvm.dbg.declare(metadata float* %b, metadata !4114, metadata !DIExpression()), !dbg !4115
  call void @llvm.dbg.declare(metadata float* %c, metadata !4116, metadata !DIExpression()), !dbg !4117
  call void @llvm.dbg.declare(metadata float* %d, metadata !4118, metadata !DIExpression()), !dbg !4119
  call void @llvm.dbg.declare(metadata float* %e, metadata !4120, metadata !DIExpression()), !dbg !4121
  call void @llvm.dbg.declare(metadata float* %x, metadata !4122, metadata !DIExpression()), !dbg !4123
  call void @llvm.dbg.declare(metadata float* %y, metadata !4124, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.declare(metadata float* %z, metadata !4126, metadata !DIExpression()), !dbg !4127
  call void @llvm.dbg.declare(metadata float* %radius2, metadata !4128, metadata !DIExpression()), !dbg !4129
  %0 = load float, float* %radius.addr, align 4, !dbg !4130
  %1 = load float, float* %radius.addr, align 4, !dbg !4131
  %mul = fmul float %0, %1, !dbg !4132
  store float %mul, float* %radius2, align 4, !dbg !4129
  call void @llvm.dbg.declare(metadata float* %elen2, metadata !4133, metadata !DIExpression()), !dbg !4134
  call void @llvm.dbg.declare(metadata float* %edotv, metadata !4135, metadata !DIExpression()), !dbg !4136
  call void @llvm.dbg.declare(metadata float* %edotbv, metadata !4137, metadata !DIExpression()), !dbg !4138
  call void @llvm.dbg.declare(metadata float* %nordotv, metadata !4139, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.declare(metadata float* %newLambda, metadata !4141, metadata !DIExpression()), !dbg !4142
  call void @llvm.dbg.declare(metadata i8* %found_by_sweep, metadata !4143, metadata !DIExpression()), !dbg !4144
  store i8 0, i8* %found_by_sweep, align 1, !dbg !4144
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !4145
  %2 = load float*, float** %v1.addr, align 8, !dbg !4146
  %3 = load float*, float** %v0.addr, align 8, !dbg !4147
  call void @sub_v3_v3v3(float* %arraydecay, float* %2, float* %3), !dbg !4148
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !4149
  %4 = load float*, float** %v2.addr, align 8, !dbg !4150
  %5 = load float*, float** %v0.addr, align 8, !dbg !4151
  call void @sub_v3_v3v3(float* %arraydecay1, float* %4, float* %5), !dbg !4152
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4153
  %6 = load float*, float** %p2.addr, align 8, !dbg !4154
  %7 = load float*, float** %p1.addr, align 8, !dbg !4155
  call void @sub_v3_v3v3(float* %arraydecay2, float* %6, float* %7), !dbg !4156
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !4157
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !4158
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !4159
  call void @cross_v3_v3v3(float* %arraydecay3, float* %arraydecay4, float* %arraydecay5), !dbg !4160
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !4161
  %call = call float @normalize_v3(float* %arraydecay6), !dbg !4162
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !4163
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4165
  %call9 = call float @dot_v3v3(float* %arraydecay7, float* %arraydecay8), !dbg !4166
  %cmp = fcmp ogt float %call9, 0.000000e+00, !dbg !4167
  br i1 %cmp, label %if.then, label %if.end, !dbg !4168

if.then:                                          ; preds = %entry
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !4169
  call void @negate_v3(float* %arraydecay10), !dbg !4170
  br label %if.end, !dbg !4170

if.end:                                           ; preds = %if.then, %entry
  %8 = load float*, float** %p1.addr, align 8, !dbg !4171
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !4172
  %call12 = call float @dot_v3v3(float* %8, float* %arraydecay11), !dbg !4173
  %9 = load float*, float** %v0.addr, align 8, !dbg !4174
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !4175
  %call14 = call float @dot_v3v3(float* %9, float* %arraydecay13), !dbg !4176
  %sub = fsub float %call12, %call14, !dbg !4177
  store float %sub, float* %a, align 4, !dbg !4178
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !4179
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4180
  %call17 = call float @dot_v3v3(float* %arraydecay15, float* %arraydecay16), !dbg !4181
  store float %call17, float* %nordotv, align 4, !dbg !4182
  %10 = load float, float* %nordotv, align 4, !dbg !4183
  %11 = call float @llvm.fabs.f32(float %10), !dbg !4185
  %cmp18 = fcmp olt float %11, 0x3EB0C6F7A0000000, !dbg !4186
  br i1 %cmp18, label %if.then19, label %if.else, !dbg !4187

if.then19:                                        ; preds = %if.end
  %12 = load float, float* %a, align 4, !dbg !4188
  %13 = call float @llvm.fabs.f32(float %12), !dbg !4191
  %14 = load float, float* %radius.addr, align 4, !dbg !4192
  %cmp20 = fcmp oge float %13, %14, !dbg !4193
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !4194

if.then21:                                        ; preds = %if.then19
  store i8 0, i8* %retval, align 1, !dbg !4195
  br label %return, !dbg !4195

if.end22:                                         ; preds = %if.then19
  br label %if.end105, !dbg !4197

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata float* %t0, metadata !4198, metadata !DIExpression()), !dbg !4200
  %15 = load float, float* %a, align 4, !dbg !4201
  %fneg = fneg float %15, !dbg !4202
  %16 = load float, float* %radius.addr, align 4, !dbg !4203
  %add = fadd float %fneg, %16, !dbg !4204
  %17 = load float, float* %nordotv, align 4, !dbg !4205
  %div = fdiv float %add, %17, !dbg !4206
  store float %div, float* %t0, align 4, !dbg !4200
  call void @llvm.dbg.declare(metadata float* %t1, metadata !4207, metadata !DIExpression()), !dbg !4208
  %18 = load float, float* %a, align 4, !dbg !4209
  %fneg23 = fneg float %18, !dbg !4210
  %19 = load float, float* %radius.addr, align 4, !dbg !4211
  %sub24 = fsub float %fneg23, %19, !dbg !4212
  %20 = load float, float* %nordotv, align 4, !dbg !4213
  %div25 = fdiv float %sub24, %20, !dbg !4214
  store float %div25, float* %t1, align 4, !dbg !4208
  %21 = load float, float* %t0, align 4, !dbg !4215
  %22 = load float, float* %t1, align 4, !dbg !4217
  %cmp26 = fcmp ogt float %21, %22, !dbg !4218
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !4219

if.then27:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata float* %sw_ap, metadata !4220, metadata !DIExpression()), !dbg !4222
  %23 = load float, float* %t0, align 4, !dbg !4222
  store float %23, float* %sw_ap, align 4, !dbg !4222
  %24 = load float, float* %t1, align 4, !dbg !4222
  store float %24, float* %t0, align 4, !dbg !4222
  %25 = load float, float* %sw_ap, align 4, !dbg !4222
  store float %25, float* %t1, align 4, !dbg !4222
  br label %if.end28, !dbg !4222

if.end28:                                         ; preds = %if.then27, %if.else
  %26 = load float, float* %t0, align 4, !dbg !4223
  %cmp29 = fcmp ogt float %26, 1.000000e+00, !dbg !4225
  br i1 %cmp29, label %if.then31, label %lor.lhs.false, !dbg !4226

lor.lhs.false:                                    ; preds = %if.end28
  %27 = load float, float* %t1, align 4, !dbg !4227
  %cmp30 = fcmp olt float %27, 0.000000e+00, !dbg !4228
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !4229

if.then31:                                        ; preds = %lor.lhs.false, %if.end28
  store i8 0, i8* %retval, align 1, !dbg !4230
  br label %return, !dbg !4230

if.end32:                                         ; preds = %lor.lhs.false
  %28 = load float, float* %t0, align 4, !dbg !4231
  %cmp33 = fcmp olt float %28, 0.000000e+00, !dbg !4231
  br i1 %cmp33, label %if.then34, label %if.else35, !dbg !4234

if.then34:                                        ; preds = %if.end32
  store float 0.000000e+00, float* %t0, align 4, !dbg !4231
  br label %if.end39, !dbg !4231

if.else35:                                        ; preds = %if.end32
  %29 = load float, float* %t0, align 4, !dbg !4235
  %cmp36 = fcmp ogt float %29, 1.000000e+00, !dbg !4235
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !4231

if.then37:                                        ; preds = %if.else35
  store float 1.000000e+00, float* %t0, align 4, !dbg !4235
  br label %if.end38, !dbg !4235

if.end38:                                         ; preds = %if.then37, %if.else35
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then34
  %30 = load float, float* %t1, align 4, !dbg !4237
  %cmp40 = fcmp olt float %30, 0.000000e+00, !dbg !4237
  br i1 %cmp40, label %if.then41, label %if.else42, !dbg !4240

if.then41:                                        ; preds = %if.end39
  store float 0.000000e+00, float* %t1, align 4, !dbg !4237
  br label %if.end46, !dbg !4237

if.else42:                                        ; preds = %if.end39
  %31 = load float, float* %t1, align 4, !dbg !4241
  %cmp43 = fcmp ogt float %31, 1.000000e+00, !dbg !4241
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !4237

if.then44:                                        ; preds = %if.else42
  store float 1.000000e+00, float* %t1, align 4, !dbg !4241
  br label %if.end45, !dbg !4241

if.end45:                                         ; preds = %if.then44, %if.else42
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then41
  %32 = load float*, float** %p1.addr, align 8, !dbg !4243
  %arrayidx = getelementptr inbounds float, float* %32, i64 0, !dbg !4243
  %33 = load float, float* %arrayidx, align 4, !dbg !4243
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4244
  %34 = load float, float* %arrayidx47, align 4, !dbg !4244
  %35 = load float, float* %t0, align 4, !dbg !4245
  %mul48 = fmul float %34, %35, !dbg !4246
  %add49 = fadd float %33, %mul48, !dbg !4247
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !4248
  %36 = load float, float* %arrayidx50, align 4, !dbg !4248
  %37 = load float, float* %radius.addr, align 4, !dbg !4249
  %mul51 = fmul float %36, %37, !dbg !4250
  %sub52 = fsub float %add49, %mul51, !dbg !4251
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %point, i64 0, i64 0, !dbg !4252
  store float %sub52, float* %arrayidx53, align 4, !dbg !4253
  %38 = load float*, float** %p1.addr, align 8, !dbg !4254
  %arrayidx54 = getelementptr inbounds float, float* %38, i64 1, !dbg !4254
  %39 = load float, float* %arrayidx54, align 4, !dbg !4254
  %arrayidx55 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 1, !dbg !4255
  %40 = load float, float* %arrayidx55, align 4, !dbg !4255
  %41 = load float, float* %t0, align 4, !dbg !4256
  %mul56 = fmul float %40, %41, !dbg !4257
  %add57 = fadd float %39, %mul56, !dbg !4258
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 1, !dbg !4259
  %42 = load float, float* %arrayidx58, align 4, !dbg !4259
  %43 = load float, float* %radius.addr, align 4, !dbg !4260
  %mul59 = fmul float %42, %43, !dbg !4261
  %sub60 = fsub float %add57, %mul59, !dbg !4262
  %arrayidx61 = getelementptr inbounds [3 x float], [3 x float]* %point, i64 0, i64 1, !dbg !4263
  store float %sub60, float* %arrayidx61, align 4, !dbg !4264
  %44 = load float*, float** %p1.addr, align 8, !dbg !4265
  %arrayidx62 = getelementptr inbounds float, float* %44, i64 2, !dbg !4265
  %45 = load float, float* %arrayidx62, align 4, !dbg !4265
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 2, !dbg !4266
  %46 = load float, float* %arrayidx63, align 4, !dbg !4266
  %47 = load float, float* %t0, align 4, !dbg !4267
  %mul64 = fmul float %46, %47, !dbg !4268
  %add65 = fadd float %45, %mul64, !dbg !4269
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !4270
  %48 = load float, float* %arrayidx66, align 4, !dbg !4270
  %49 = load float, float* %radius.addr, align 4, !dbg !4271
  %mul67 = fmul float %48, %49, !dbg !4272
  %sub68 = fsub float %add65, %mul67, !dbg !4273
  %arrayidx69 = getelementptr inbounds [3 x float], [3 x float]* %point, i64 0, i64 2, !dbg !4274
  store float %sub68, float* %arrayidx69, align 4, !dbg !4275
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !4276
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !4277
  %call72 = call float @dot_v3v3(float* %arraydecay70, float* %arraydecay71), !dbg !4278
  store float %call72, float* %a, align 4, !dbg !4279
  %arraydecay73 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !4280
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !4281
  %call75 = call float @dot_v3v3(float* %arraydecay73, float* %arraydecay74), !dbg !4282
  store float %call75, float* %b, align 4, !dbg !4283
  %arraydecay76 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !4284
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !4285
  %call78 = call float @dot_v3v3(float* %arraydecay76, float* %arraydecay77), !dbg !4286
  store float %call78, float* %c, align 4, !dbg !4287
  %arraydecay79 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !4288
  %arraydecay80 = getelementptr inbounds [3 x float], [3 x float]* %point, i64 0, i64 0, !dbg !4289
  %50 = load float*, float** %v0.addr, align 8, !dbg !4290
  call void @sub_v3_v3v3(float* %arraydecay79, float* %arraydecay80, float* %50), !dbg !4291
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !4292
  %arraydecay82 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !4293
  %call83 = call float @dot_v3v3(float* %arraydecay81, float* %arraydecay82), !dbg !4294
  store float %call83, float* %d, align 4, !dbg !4295
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !4296
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !4297
  %call86 = call float @dot_v3v3(float* %arraydecay84, float* %arraydecay85), !dbg !4298
  store float %call86, float* %e, align 4, !dbg !4299
  %51 = load float, float* %d, align 4, !dbg !4300
  %52 = load float, float* %c, align 4, !dbg !4301
  %mul87 = fmul float %51, %52, !dbg !4302
  %53 = load float, float* %e, align 4, !dbg !4303
  %54 = load float, float* %b, align 4, !dbg !4304
  %mul88 = fmul float %53, %54, !dbg !4305
  %sub89 = fsub float %mul87, %mul88, !dbg !4306
  store float %sub89, float* %x, align 4, !dbg !4307
  %55 = load float, float* %e, align 4, !dbg !4308
  %56 = load float, float* %a, align 4, !dbg !4309
  %mul90 = fmul float %55, %56, !dbg !4310
  %57 = load float, float* %d, align 4, !dbg !4311
  %58 = load float, float* %b, align 4, !dbg !4312
  %mul91 = fmul float %57, %58, !dbg !4313
  %sub92 = fsub float %mul90, %mul91, !dbg !4314
  store float %sub92, float* %y, align 4, !dbg !4315
  %59 = load float, float* %x, align 4, !dbg !4316
  %60 = load float, float* %y, align 4, !dbg !4317
  %add93 = fadd float %59, %60, !dbg !4318
  %61 = load float, float* %a, align 4, !dbg !4319
  %62 = load float, float* %c, align 4, !dbg !4320
  %mul94 = fmul float %61, %62, !dbg !4321
  %63 = load float, float* %b, align 4, !dbg !4322
  %64 = load float, float* %b, align 4, !dbg !4323
  %mul95 = fmul float %63, %64, !dbg !4324
  %sub96 = fsub float %mul94, %mul95, !dbg !4325
  %sub97 = fsub float %add93, %sub96, !dbg !4326
  store float %sub97, float* %z, align 4, !dbg !4327
  %65 = load float, float* %z, align 4, !dbg !4328
  %cmp98 = fcmp ole float %65, 0.000000e+00, !dbg !4330
  br i1 %cmp98, label %land.lhs.true, label %if.end104, !dbg !4331

land.lhs.true:                                    ; preds = %if.end46
  %66 = load float, float* %x, align 4, !dbg !4332
  %cmp99 = fcmp oge float %66, 0.000000e+00, !dbg !4333
  br i1 %cmp99, label %land.lhs.true100, label %if.end104, !dbg !4334

land.lhs.true100:                                 ; preds = %land.lhs.true
  %67 = load float, float* %y, align 4, !dbg !4335
  %cmp101 = fcmp oge float %67, 0.000000e+00, !dbg !4336
  br i1 %cmp101, label %if.then102, label %if.end104, !dbg !4337

if.then102:                                       ; preds = %land.lhs.true100
  %68 = load float, float* %t0, align 4, !dbg !4338
  %69 = load float*, float** %r_lambda.addr, align 8, !dbg !4340
  store float %68, float* %69, align 4, !dbg !4341
  %70 = load float*, float** %ipoint.addr, align 8, !dbg !4342
  %arraydecay103 = getelementptr inbounds [3 x float], [3 x float]* %point, i64 0, i64 0, !dbg !4343
  call void @copy_v3_v3(float* %70, float* %arraydecay103), !dbg !4344
  store i8 1, i8* %retval, align 1, !dbg !4345
  br label %return, !dbg !4345

if.end104:                                        ; preds = %land.lhs.true100, %land.lhs.true, %if.end46
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.end22
  %71 = load float*, float** %r_lambda.addr, align 8, !dbg !4346
  store float 1.000000e+00, float* %71, align 4, !dbg !4347
  %arraydecay106 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4348
  %arraydecay107 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4349
  %call108 = call float @dot_v3v3(float* %arraydecay106, float* %arraydecay107), !dbg !4350
  store float %call108, float* %a, align 4, !dbg !4351
  %arraydecay109 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !4352
  %72 = load float*, float** %p1.addr, align 8, !dbg !4353
  %73 = load float*, float** %v0.addr, align 8, !dbg !4354
  call void @sub_v3_v3v3(float* %arraydecay109, float* %72, float* %73), !dbg !4355
  %arraydecay110 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4356
  %arraydecay111 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !4357
  %call112 = call float @dot_v3v3(float* %arraydecay110, float* %arraydecay111), !dbg !4358
  %mul113 = fmul float 2.000000e+00, %call112, !dbg !4359
  store float %mul113, float* %b, align 4, !dbg !4360
  %arraydecay114 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !4361
  %arraydecay115 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !4362
  %call116 = call float @dot_v3v3(float* %arraydecay114, float* %arraydecay115), !dbg !4363
  %74 = load float, float* %radius2, align 4, !dbg !4364
  %sub117 = fsub float %call116, %74, !dbg !4365
  store float %sub117, float* %c, align 4, !dbg !4366
  %75 = load float, float* %a, align 4, !dbg !4367
  %76 = load float, float* %b, align 4, !dbg !4369
  %77 = load float, float* %c, align 4, !dbg !4370
  %78 = load float*, float** %r_lambda.addr, align 8, !dbg !4371
  %79 = load float, float* %78, align 4, !dbg !4372
  %80 = load float*, float** %r_lambda.addr, align 8, !dbg !4373
  %call118 = call zeroext i8 @getLowestRoot(float %75, float %76, float %77, float %79, float* %80), !dbg !4374
  %tobool = icmp ne i8 %call118, 0, !dbg !4374
  br i1 %tobool, label %if.then119, label %if.end120, !dbg !4375

if.then119:                                       ; preds = %if.end105
  %81 = load float*, float** %ipoint.addr, align 8, !dbg !4376
  %82 = load float*, float** %v0.addr, align 8, !dbg !4378
  call void @copy_v3_v3(float* %81, float* %82), !dbg !4379
  store i8 1, i8* %found_by_sweep, align 1, !dbg !4380
  br label %if.end120, !dbg !4381

if.end120:                                        ; preds = %if.then119, %if.end105
  %arraydecay121 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !4382
  %83 = load float*, float** %p1.addr, align 8, !dbg !4383
  %84 = load float*, float** %v1.addr, align 8, !dbg !4384
  call void @sub_v3_v3v3(float* %arraydecay121, float* %83, float* %84), !dbg !4385
  %arraydecay122 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4386
  %arraydecay123 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !4387
  %call124 = call float @dot_v3v3(float* %arraydecay122, float* %arraydecay123), !dbg !4388
  %mul125 = fmul float 2.000000e+00, %call124, !dbg !4389
  store float %mul125, float* %b, align 4, !dbg !4390
  %arraydecay126 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !4391
  %arraydecay127 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !4392
  %call128 = call float @dot_v3v3(float* %arraydecay126, float* %arraydecay127), !dbg !4393
  %85 = load float, float* %radius2, align 4, !dbg !4394
  %sub129 = fsub float %call128, %85, !dbg !4395
  store float %sub129, float* %c, align 4, !dbg !4396
  %86 = load float, float* %a, align 4, !dbg !4397
  %87 = load float, float* %b, align 4, !dbg !4399
  %88 = load float, float* %c, align 4, !dbg !4400
  %89 = load float*, float** %r_lambda.addr, align 8, !dbg !4401
  %90 = load float, float* %89, align 4, !dbg !4402
  %91 = load float*, float** %r_lambda.addr, align 8, !dbg !4403
  %call130 = call zeroext i8 @getLowestRoot(float %86, float %87, float %88, float %90, float* %91), !dbg !4404
  %tobool131 = icmp ne i8 %call130, 0, !dbg !4404
  br i1 %tobool131, label %if.then132, label %if.end133, !dbg !4405

if.then132:                                       ; preds = %if.end120
  %92 = load float*, float** %ipoint.addr, align 8, !dbg !4406
  %93 = load float*, float** %v1.addr, align 8, !dbg !4408
  call void @copy_v3_v3(float* %92, float* %93), !dbg !4409
  store i8 1, i8* %found_by_sweep, align 1, !dbg !4410
  br label %if.end133, !dbg !4411

if.end133:                                        ; preds = %if.then132, %if.end120
  %arraydecay134 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !4412
  %94 = load float*, float** %p1.addr, align 8, !dbg !4413
  %95 = load float*, float** %v2.addr, align 8, !dbg !4414
  call void @sub_v3_v3v3(float* %arraydecay134, float* %94, float* %95), !dbg !4415
  %arraydecay135 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4416
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !4417
  %call137 = call float @dot_v3v3(float* %arraydecay135, float* %arraydecay136), !dbg !4418
  %mul138 = fmul float 2.000000e+00, %call137, !dbg !4419
  store float %mul138, float* %b, align 4, !dbg !4420
  %arraydecay139 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !4421
  %arraydecay140 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !4422
  %call141 = call float @dot_v3v3(float* %arraydecay139, float* %arraydecay140), !dbg !4423
  %96 = load float, float* %radius2, align 4, !dbg !4424
  %sub142 = fsub float %call141, %96, !dbg !4425
  store float %sub142, float* %c, align 4, !dbg !4426
  %97 = load float, float* %a, align 4, !dbg !4427
  %98 = load float, float* %b, align 4, !dbg !4429
  %99 = load float, float* %c, align 4, !dbg !4430
  %100 = load float*, float** %r_lambda.addr, align 8, !dbg !4431
  %101 = load float, float* %100, align 4, !dbg !4432
  %102 = load float*, float** %r_lambda.addr, align 8, !dbg !4433
  %call143 = call zeroext i8 @getLowestRoot(float %97, float %98, float %99, float %101, float* %102), !dbg !4434
  %tobool144 = icmp ne i8 %call143, 0, !dbg !4434
  br i1 %tobool144, label %if.then145, label %if.end146, !dbg !4435

if.then145:                                       ; preds = %if.end133
  %103 = load float*, float** %ipoint.addr, align 8, !dbg !4436
  %104 = load float*, float** %v2.addr, align 8, !dbg !4438
  call void @copy_v3_v3(float* %103, float* %104), !dbg !4439
  store i8 1, i8* %found_by_sweep, align 1, !dbg !4440
  br label %if.end146, !dbg !4441

if.end146:                                        ; preds = %if.then145, %if.end133
  %arraydecay147 = getelementptr inbounds [3 x float], [3 x float]* %e3, i64 0, i64 0, !dbg !4442
  %105 = load float*, float** %v2.addr, align 8, !dbg !4443
  %106 = load float*, float** %v1.addr, align 8, !dbg !4444
  call void @sub_v3_v3v3(float* %arraydecay147, float* %105, float* %106), !dbg !4445
  %arraydecay148 = getelementptr inbounds [3 x float], [3 x float]* %bv, i64 0, i64 0, !dbg !4446
  %107 = load float*, float** %v0.addr, align 8, !dbg !4447
  %108 = load float*, float** %p1.addr, align 8, !dbg !4448
  call void @sub_v3_v3v3(float* %arraydecay148, float* %107, float* %108), !dbg !4449
  %arraydecay149 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !4450
  %arraydecay150 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !4451
  %call151 = call float @dot_v3v3(float* %arraydecay149, float* %arraydecay150), !dbg !4452
  store float %call151, float* %elen2, align 4, !dbg !4453
  %arraydecay152 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !4454
  %arraydecay153 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4455
  %call154 = call float @dot_v3v3(float* %arraydecay152, float* %arraydecay153), !dbg !4456
  store float %call154, float* %edotv, align 4, !dbg !4457
  %arraydecay155 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !4458
  %arraydecay156 = getelementptr inbounds [3 x float], [3 x float]* %bv, i64 0, i64 0, !dbg !4459
  %call157 = call float @dot_v3v3(float* %arraydecay155, float* %arraydecay156), !dbg !4460
  store float %call157, float* %edotbv, align 4, !dbg !4461
  %109 = load float, float* %elen2, align 4, !dbg !4462
  %arraydecay158 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4463
  %arraydecay159 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4464
  %call160 = call float @dot_v3v3(float* %arraydecay158, float* %arraydecay159), !dbg !4465
  %fneg161 = fneg float %call160, !dbg !4466
  %mul162 = fmul float %109, %fneg161, !dbg !4467
  %110 = load float, float* %edotv, align 4, !dbg !4468
  %111 = load float, float* %edotv, align 4, !dbg !4469
  %mul163 = fmul float %110, %111, !dbg !4470
  %add164 = fadd float %mul162, %mul163, !dbg !4471
  store float %add164, float* %a, align 4, !dbg !4472
  %112 = load float, float* %elen2, align 4, !dbg !4473
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4474
  %arraydecay166 = getelementptr inbounds [3 x float], [3 x float]* %bv, i64 0, i64 0, !dbg !4475
  %call167 = call float @dot_v3v3(float* %arraydecay165, float* %arraydecay166), !dbg !4476
  %mul168 = fmul float %112, %call167, !dbg !4477
  %113 = load float, float* %edotv, align 4, !dbg !4478
  %114 = load float, float* %edotbv, align 4, !dbg !4479
  %mul169 = fmul float %113, %114, !dbg !4480
  %sub170 = fsub float %mul168, %mul169, !dbg !4481
  %mul171 = fmul float 2.000000e+00, %sub170, !dbg !4482
  store float %mul171, float* %b, align 4, !dbg !4483
  %115 = load float, float* %elen2, align 4, !dbg !4484
  %116 = load float, float* %radius2, align 4, !dbg !4485
  %arraydecay172 = getelementptr inbounds [3 x float], [3 x float]* %bv, i64 0, i64 0, !dbg !4486
  %arraydecay173 = getelementptr inbounds [3 x float], [3 x float]* %bv, i64 0, i64 0, !dbg !4487
  %call174 = call float @dot_v3v3(float* %arraydecay172, float* %arraydecay173), !dbg !4488
  %sub175 = fsub float %116, %call174, !dbg !4489
  %mul176 = fmul float %115, %sub175, !dbg !4490
  %117 = load float, float* %edotbv, align 4, !dbg !4491
  %118 = load float, float* %edotbv, align 4, !dbg !4492
  %mul177 = fmul float %117, %118, !dbg !4493
  %add178 = fadd float %mul176, %mul177, !dbg !4494
  store float %add178, float* %c, align 4, !dbg !4495
  %119 = load float, float* %a, align 4, !dbg !4496
  %120 = load float, float* %b, align 4, !dbg !4498
  %121 = load float, float* %c, align 4, !dbg !4499
  %122 = load float*, float** %r_lambda.addr, align 8, !dbg !4500
  %123 = load float, float* %122, align 4, !dbg !4501
  %call179 = call zeroext i8 @getLowestRoot(float %119, float %120, float %121, float %123, float* %newLambda), !dbg !4502
  %tobool180 = icmp ne i8 %call179, 0, !dbg !4502
  br i1 %tobool180, label %if.then181, label %if.end191, !dbg !4503

if.then181:                                       ; preds = %if.end146
  %124 = load float, float* %edotv, align 4, !dbg !4504
  %125 = load float, float* %newLambda, align 4, !dbg !4506
  %mul182 = fmul float %124, %125, !dbg !4507
  %126 = load float, float* %edotbv, align 4, !dbg !4508
  %sub183 = fsub float %mul182, %126, !dbg !4509
  %127 = load float, float* %elen2, align 4, !dbg !4510
  %div184 = fdiv float %sub183, %127, !dbg !4511
  store float %div184, float* %e, align 4, !dbg !4512
  %128 = load float, float* %e, align 4, !dbg !4513
  %cmp185 = fcmp oge float %128, 0.000000e+00, !dbg !4515
  br i1 %cmp185, label %land.lhs.true186, label %if.end190, !dbg !4516

land.lhs.true186:                                 ; preds = %if.then181
  %129 = load float, float* %e, align 4, !dbg !4517
  %cmp187 = fcmp ole float %129, 1.000000e+00, !dbg !4518
  br i1 %cmp187, label %if.then188, label %if.end190, !dbg !4519

if.then188:                                       ; preds = %land.lhs.true186
  %130 = load float, float* %newLambda, align 4, !dbg !4520
  %131 = load float*, float** %r_lambda.addr, align 8, !dbg !4522
  store float %130, float* %131, align 4, !dbg !4523
  %132 = load float*, float** %ipoint.addr, align 8, !dbg !4524
  %arraydecay189 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !4525
  call void @copy_v3_v3(float* %132, float* %arraydecay189), !dbg !4526
  %133 = load float*, float** %ipoint.addr, align 8, !dbg !4527
  %134 = load float, float* %e, align 4, !dbg !4528
  call void @mul_v3_fl(float* %133, float %134), !dbg !4529
  %135 = load float*, float** %ipoint.addr, align 8, !dbg !4530
  %136 = load float*, float** %v0.addr, align 8, !dbg !4531
  call void @add_v3_v3(float* %135, float* %136), !dbg !4532
  store i8 1, i8* %found_by_sweep, align 1, !dbg !4533
  br label %if.end190, !dbg !4534

if.end190:                                        ; preds = %if.then188, %land.lhs.true186, %if.then181
  br label %if.end191, !dbg !4535

if.end191:                                        ; preds = %if.end190, %if.end146
  %arraydecay192 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !4536
  %arraydecay193 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !4537
  %call194 = call float @dot_v3v3(float* %arraydecay192, float* %arraydecay193), !dbg !4538
  store float %call194, float* %elen2, align 4, !dbg !4539
  %arraydecay195 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !4540
  %arraydecay196 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4541
  %call197 = call float @dot_v3v3(float* %arraydecay195, float* %arraydecay196), !dbg !4542
  store float %call197, float* %edotv, align 4, !dbg !4543
  %arraydecay198 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !4544
  %arraydecay199 = getelementptr inbounds [3 x float], [3 x float]* %bv, i64 0, i64 0, !dbg !4545
  %call200 = call float @dot_v3v3(float* %arraydecay198, float* %arraydecay199), !dbg !4546
  store float %call200, float* %edotbv, align 4, !dbg !4547
  %137 = load float, float* %elen2, align 4, !dbg !4548
  %arraydecay201 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4549
  %arraydecay202 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4550
  %call203 = call float @dot_v3v3(float* %arraydecay201, float* %arraydecay202), !dbg !4551
  %fneg204 = fneg float %call203, !dbg !4552
  %mul205 = fmul float %137, %fneg204, !dbg !4553
  %138 = load float, float* %edotv, align 4, !dbg !4554
  %139 = load float, float* %edotv, align 4, !dbg !4555
  %mul206 = fmul float %138, %139, !dbg !4556
  %add207 = fadd float %mul205, %mul206, !dbg !4557
  store float %add207, float* %a, align 4, !dbg !4558
  %140 = load float, float* %elen2, align 4, !dbg !4559
  %arraydecay208 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4560
  %arraydecay209 = getelementptr inbounds [3 x float], [3 x float]* %bv, i64 0, i64 0, !dbg !4561
  %call210 = call float @dot_v3v3(float* %arraydecay208, float* %arraydecay209), !dbg !4562
  %mul211 = fmul float %140, %call210, !dbg !4563
  %141 = load float, float* %edotv, align 4, !dbg !4564
  %142 = load float, float* %edotbv, align 4, !dbg !4565
  %mul212 = fmul float %141, %142, !dbg !4566
  %sub213 = fsub float %mul211, %mul212, !dbg !4567
  %mul214 = fmul float 2.000000e+00, %sub213, !dbg !4568
  store float %mul214, float* %b, align 4, !dbg !4569
  %143 = load float, float* %elen2, align 4, !dbg !4570
  %144 = load float, float* %radius2, align 4, !dbg !4571
  %arraydecay215 = getelementptr inbounds [3 x float], [3 x float]* %bv, i64 0, i64 0, !dbg !4572
  %arraydecay216 = getelementptr inbounds [3 x float], [3 x float]* %bv, i64 0, i64 0, !dbg !4573
  %call217 = call float @dot_v3v3(float* %arraydecay215, float* %arraydecay216), !dbg !4574
  %sub218 = fsub float %144, %call217, !dbg !4575
  %mul219 = fmul float %143, %sub218, !dbg !4576
  %145 = load float, float* %edotbv, align 4, !dbg !4577
  %146 = load float, float* %edotbv, align 4, !dbg !4578
  %mul220 = fmul float %145, %146, !dbg !4579
  %add221 = fadd float %mul219, %mul220, !dbg !4580
  store float %add221, float* %c, align 4, !dbg !4581
  %147 = load float, float* %a, align 4, !dbg !4582
  %148 = load float, float* %b, align 4, !dbg !4584
  %149 = load float, float* %c, align 4, !dbg !4585
  %150 = load float*, float** %r_lambda.addr, align 8, !dbg !4586
  %151 = load float, float* %150, align 4, !dbg !4587
  %call222 = call zeroext i8 @getLowestRoot(float %147, float %148, float %149, float %151, float* %newLambda), !dbg !4588
  %tobool223 = icmp ne i8 %call222, 0, !dbg !4588
  br i1 %tobool223, label %if.then224, label %if.end234, !dbg !4589

if.then224:                                       ; preds = %if.end191
  %152 = load float, float* %edotv, align 4, !dbg !4590
  %153 = load float, float* %newLambda, align 4, !dbg !4592
  %mul225 = fmul float %152, %153, !dbg !4593
  %154 = load float, float* %edotbv, align 4, !dbg !4594
  %sub226 = fsub float %mul225, %154, !dbg !4595
  %155 = load float, float* %elen2, align 4, !dbg !4596
  %div227 = fdiv float %sub226, %155, !dbg !4597
  store float %div227, float* %e, align 4, !dbg !4598
  %156 = load float, float* %e, align 4, !dbg !4599
  %cmp228 = fcmp oge float %156, 0.000000e+00, !dbg !4601
  br i1 %cmp228, label %land.lhs.true229, label %if.end233, !dbg !4602

land.lhs.true229:                                 ; preds = %if.then224
  %157 = load float, float* %e, align 4, !dbg !4603
  %cmp230 = fcmp ole float %157, 1.000000e+00, !dbg !4604
  br i1 %cmp230, label %if.then231, label %if.end233, !dbg !4605

if.then231:                                       ; preds = %land.lhs.true229
  %158 = load float, float* %newLambda, align 4, !dbg !4606
  %159 = load float*, float** %r_lambda.addr, align 8, !dbg !4608
  store float %158, float* %159, align 4, !dbg !4609
  %160 = load float*, float** %ipoint.addr, align 8, !dbg !4610
  %arraydecay232 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !4611
  call void @copy_v3_v3(float* %160, float* %arraydecay232), !dbg !4612
  %161 = load float*, float** %ipoint.addr, align 8, !dbg !4613
  %162 = load float, float* %e, align 4, !dbg !4614
  call void @mul_v3_fl(float* %161, float %162), !dbg !4615
  %163 = load float*, float** %ipoint.addr, align 8, !dbg !4616
  %164 = load float*, float** %v0.addr, align 8, !dbg !4617
  call void @add_v3_v3(float* %163, float* %164), !dbg !4618
  store i8 1, i8* %found_by_sweep, align 1, !dbg !4619
  br label %if.end233, !dbg !4620

if.end233:                                        ; preds = %if.then231, %land.lhs.true229, %if.then224
  br label %if.end234, !dbg !4621

if.end234:                                        ; preds = %if.end233, %if.end191
  %arraydecay235 = getelementptr inbounds [3 x float], [3 x float]* %bv, i64 0, i64 0, !dbg !4622
  %165 = load float*, float** %v1.addr, align 8, !dbg !4623
  %166 = load float*, float** %p1.addr, align 8, !dbg !4624
  call void @sub_v3_v3v3(float* %arraydecay235, float* %165, float* %166), !dbg !4625
  %arraydecay236 = getelementptr inbounds [3 x float], [3 x float]* %e3, i64 0, i64 0, !dbg !4626
  %arraydecay237 = getelementptr inbounds [3 x float], [3 x float]* %e3, i64 0, i64 0, !dbg !4627
  %call238 = call float @dot_v3v3(float* %arraydecay236, float* %arraydecay237), !dbg !4628
  store float %call238, float* %elen2, align 4, !dbg !4629
  %arraydecay239 = getelementptr inbounds [3 x float], [3 x float]* %e3, i64 0, i64 0, !dbg !4630
  %arraydecay240 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4631
  %call241 = call float @dot_v3v3(float* %arraydecay239, float* %arraydecay240), !dbg !4632
  store float %call241, float* %edotv, align 4, !dbg !4633
  %arraydecay242 = getelementptr inbounds [3 x float], [3 x float]* %e3, i64 0, i64 0, !dbg !4634
  %arraydecay243 = getelementptr inbounds [3 x float], [3 x float]* %bv, i64 0, i64 0, !dbg !4635
  %call244 = call float @dot_v3v3(float* %arraydecay242, float* %arraydecay243), !dbg !4636
  store float %call244, float* %edotbv, align 4, !dbg !4637
  %167 = load float, float* %elen2, align 4, !dbg !4638
  %arraydecay245 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4639
  %arraydecay246 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4640
  %call247 = call float @dot_v3v3(float* %arraydecay245, float* %arraydecay246), !dbg !4641
  %fneg248 = fneg float %call247, !dbg !4642
  %mul249 = fmul float %167, %fneg248, !dbg !4643
  %168 = load float, float* %edotv, align 4, !dbg !4644
  %169 = load float, float* %edotv, align 4, !dbg !4645
  %mul250 = fmul float %168, %169, !dbg !4646
  %add251 = fadd float %mul249, %mul250, !dbg !4647
  store float %add251, float* %a, align 4, !dbg !4648
  %170 = load float, float* %elen2, align 4, !dbg !4649
  %arraydecay252 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4650
  %arraydecay253 = getelementptr inbounds [3 x float], [3 x float]* %bv, i64 0, i64 0, !dbg !4651
  %call254 = call float @dot_v3v3(float* %arraydecay252, float* %arraydecay253), !dbg !4652
  %mul255 = fmul float %170, %call254, !dbg !4653
  %171 = load float, float* %edotv, align 4, !dbg !4654
  %172 = load float, float* %edotbv, align 4, !dbg !4655
  %mul256 = fmul float %171, %172, !dbg !4656
  %sub257 = fsub float %mul255, %mul256, !dbg !4657
  %mul258 = fmul float 2.000000e+00, %sub257, !dbg !4658
  store float %mul258, float* %b, align 4, !dbg !4659
  %173 = load float, float* %elen2, align 4, !dbg !4660
  %174 = load float, float* %radius2, align 4, !dbg !4661
  %arraydecay259 = getelementptr inbounds [3 x float], [3 x float]* %bv, i64 0, i64 0, !dbg !4662
  %arraydecay260 = getelementptr inbounds [3 x float], [3 x float]* %bv, i64 0, i64 0, !dbg !4663
  %call261 = call float @dot_v3v3(float* %arraydecay259, float* %arraydecay260), !dbg !4664
  %sub262 = fsub float %174, %call261, !dbg !4665
  %mul263 = fmul float %173, %sub262, !dbg !4666
  %175 = load float, float* %edotbv, align 4, !dbg !4667
  %176 = load float, float* %edotbv, align 4, !dbg !4668
  %mul264 = fmul float %175, %176, !dbg !4669
  %add265 = fadd float %mul263, %mul264, !dbg !4670
  store float %add265, float* %c, align 4, !dbg !4671
  %177 = load float, float* %a, align 4, !dbg !4672
  %178 = load float, float* %b, align 4, !dbg !4674
  %179 = load float, float* %c, align 4, !dbg !4675
  %180 = load float*, float** %r_lambda.addr, align 8, !dbg !4676
  %181 = load float, float* %180, align 4, !dbg !4677
  %call266 = call zeroext i8 @getLowestRoot(float %177, float %178, float %179, float %181, float* %newLambda), !dbg !4678
  %tobool267 = icmp ne i8 %call266, 0, !dbg !4678
  br i1 %tobool267, label %if.then268, label %if.end278, !dbg !4679

if.then268:                                       ; preds = %if.end234
  %182 = load float, float* %edotv, align 4, !dbg !4680
  %183 = load float, float* %newLambda, align 4, !dbg !4682
  %mul269 = fmul float %182, %183, !dbg !4683
  %184 = load float, float* %edotbv, align 4, !dbg !4684
  %sub270 = fsub float %mul269, %184, !dbg !4685
  %185 = load float, float* %elen2, align 4, !dbg !4686
  %div271 = fdiv float %sub270, %185, !dbg !4687
  store float %div271, float* %e, align 4, !dbg !4688
  %186 = load float, float* %e, align 4, !dbg !4689
  %cmp272 = fcmp oge float %186, 0.000000e+00, !dbg !4691
  br i1 %cmp272, label %land.lhs.true273, label %if.end277, !dbg !4692

land.lhs.true273:                                 ; preds = %if.then268
  %187 = load float, float* %e, align 4, !dbg !4693
  %cmp274 = fcmp ole float %187, 1.000000e+00, !dbg !4694
  br i1 %cmp274, label %if.then275, label %if.end277, !dbg !4695

if.then275:                                       ; preds = %land.lhs.true273
  %188 = load float, float* %newLambda, align 4, !dbg !4696
  %189 = load float*, float** %r_lambda.addr, align 8, !dbg !4698
  store float %188, float* %189, align 4, !dbg !4699
  %190 = load float*, float** %ipoint.addr, align 8, !dbg !4700
  %arraydecay276 = getelementptr inbounds [3 x float], [3 x float]* %e3, i64 0, i64 0, !dbg !4701
  call void @copy_v3_v3(float* %190, float* %arraydecay276), !dbg !4702
  %191 = load float*, float** %ipoint.addr, align 8, !dbg !4703
  %192 = load float, float* %e, align 4, !dbg !4704
  call void @mul_v3_fl(float* %191, float %192), !dbg !4705
  %193 = load float*, float** %ipoint.addr, align 8, !dbg !4706
  %194 = load float*, float** %v1.addr, align 8, !dbg !4707
  call void @add_v3_v3(float* %193, float* %194), !dbg !4708
  store i8 1, i8* %found_by_sweep, align 1, !dbg !4709
  br label %if.end277, !dbg !4710

if.end277:                                        ; preds = %if.then275, %land.lhs.true273, %if.then268
  br label %if.end278, !dbg !4711

if.end278:                                        ; preds = %if.end277, %if.end234
  %195 = load i8, i8* %found_by_sweep, align 1, !dbg !4712
  store i8 %195, i8* %retval, align 1, !dbg !4713
  br label %return, !dbg !4713

return:                                           ; preds = %if.end278, %if.then102, %if.then31, %if.then21
  %196 = load i8, i8* %retval, align 1, !dbg !4714
  ret i8 %196, !dbg !4714
}

; Function Attrs: noinline nounwind uwtable
define internal void @negate_v3(float* %r) #0 !dbg !4715 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4716, metadata !DIExpression()), !dbg !4717
  %0 = load float*, float** %r.addr, align 8, !dbg !4718
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4718
  %1 = load float, float* %arrayidx, align 4, !dbg !4718
  %fneg = fneg float %1, !dbg !4719
  %2 = load float*, float** %r.addr, align 8, !dbg !4720
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4720
  store float %fneg, float* %arrayidx1, align 4, !dbg !4721
  %3 = load float*, float** %r.addr, align 8, !dbg !4722
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !4722
  %4 = load float, float* %arrayidx2, align 4, !dbg !4722
  %fneg3 = fneg float %4, !dbg !4723
  %5 = load float*, float** %r.addr, align 8, !dbg !4724
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !4724
  store float %fneg3, float* %arrayidx4, align 4, !dbg !4725
  %6 = load float*, float** %r.addr, align 8, !dbg !4726
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !4726
  %7 = load float, float* %arrayidx5, align 4, !dbg !4726
  %fneg6 = fneg float %7, !dbg !4727
  %8 = load float*, float** %r.addr, align 8, !dbg !4728
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !4728
  store float %fneg6, float* %arrayidx7, align 4, !dbg !4729
  ret void, !dbg !4730
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @getLowestRoot(float %a, float %b, float %c, float %maxR, float* %root) #0 !dbg !4731 {
entry:
  %retval = alloca i8, align 1
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  %c.addr = alloca float, align 4
  %maxR.addr = alloca float, align 4
  %root.addr = alloca float*, align 8
  %determinant = alloca float, align 4
  %sqrtD = alloca float, align 4
  %r1 = alloca float, align 4
  %r2 = alloca float, align 4
  %sw_ap = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !4734, metadata !DIExpression()), !dbg !4735
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !4736, metadata !DIExpression()), !dbg !4737
  store float %c, float* %c.addr, align 4
  call void @llvm.dbg.declare(metadata float* %c.addr, metadata !4738, metadata !DIExpression()), !dbg !4739
  store float %maxR, float* %maxR.addr, align 4
  call void @llvm.dbg.declare(metadata float* %maxR.addr, metadata !4740, metadata !DIExpression()), !dbg !4741
  store float* %root, float** %root.addr, align 8
  call void @llvm.dbg.declare(metadata float** %root.addr, metadata !4742, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.declare(metadata float* %determinant, metadata !4744, metadata !DIExpression()), !dbg !4745
  %0 = load float, float* %b.addr, align 4, !dbg !4746
  %1 = load float, float* %b.addr, align 4, !dbg !4747
  %mul = fmul float %0, %1, !dbg !4748
  %2 = load float, float* %a.addr, align 4, !dbg !4749
  %mul1 = fmul float 4.000000e+00, %2, !dbg !4750
  %3 = load float, float* %c.addr, align 4, !dbg !4751
  %mul2 = fmul float %mul1, %3, !dbg !4752
  %sub = fsub float %mul, %mul2, !dbg !4753
  store float %sub, float* %determinant, align 4, !dbg !4745
  %4 = load float, float* %determinant, align 4, !dbg !4754
  %cmp = fcmp oge float %4, 0.000000e+00, !dbg !4756
  br i1 %cmp, label %if.then, label %if.end19, !dbg !4757

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %sqrtD, metadata !4758, metadata !DIExpression()), !dbg !4760
  %5 = load float, float* %determinant, align 4, !dbg !4761
  %call = call float @sqrtf(float %5) #5, !dbg !4762
  store float %call, float* %sqrtD, align 4, !dbg !4760
  call void @llvm.dbg.declare(metadata float* %r1, metadata !4763, metadata !DIExpression()), !dbg !4764
  %6 = load float, float* %b.addr, align 4, !dbg !4765
  %fneg = fneg float %6, !dbg !4766
  %7 = load float, float* %sqrtD, align 4, !dbg !4767
  %sub3 = fsub float %fneg, %7, !dbg !4768
  %8 = load float, float* %a.addr, align 4, !dbg !4769
  %mul4 = fmul float 2.000000e+00, %8, !dbg !4770
  %div = fdiv float %sub3, %mul4, !dbg !4771
  store float %div, float* %r1, align 4, !dbg !4764
  call void @llvm.dbg.declare(metadata float* %r2, metadata !4772, metadata !DIExpression()), !dbg !4773
  %9 = load float, float* %b.addr, align 4, !dbg !4774
  %fneg5 = fneg float %9, !dbg !4775
  %10 = load float, float* %sqrtD, align 4, !dbg !4776
  %add = fadd float %fneg5, %10, !dbg !4777
  %11 = load float, float* %a.addr, align 4, !dbg !4778
  %mul6 = fmul float 2.000000e+00, %11, !dbg !4779
  %div7 = fdiv float %add, %mul6, !dbg !4780
  store float %div7, float* %r2, align 4, !dbg !4773
  %12 = load float, float* %r1, align 4, !dbg !4781
  %13 = load float, float* %r2, align 4, !dbg !4783
  %cmp8 = fcmp ogt float %12, %13, !dbg !4784
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !4785

if.then9:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata float* %sw_ap, metadata !4786, metadata !DIExpression()), !dbg !4788
  %14 = load float, float* %r1, align 4, !dbg !4788
  store float %14, float* %sw_ap, align 4, !dbg !4788
  %15 = load float, float* %r2, align 4, !dbg !4788
  store float %15, float* %r1, align 4, !dbg !4788
  %16 = load float, float* %sw_ap, align 4, !dbg !4788
  store float %16, float* %r2, align 4, !dbg !4788
  br label %if.end, !dbg !4788

if.end:                                           ; preds = %if.then9, %if.then
  %17 = load float, float* %r1, align 4, !dbg !4789
  %cmp10 = fcmp ogt float %17, 0.000000e+00, !dbg !4791
  br i1 %cmp10, label %land.lhs.true, label %if.end13, !dbg !4792

land.lhs.true:                                    ; preds = %if.end
  %18 = load float, float* %r1, align 4, !dbg !4793
  %19 = load float, float* %maxR.addr, align 4, !dbg !4794
  %cmp11 = fcmp olt float %18, %19, !dbg !4795
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !4796

if.then12:                                        ; preds = %land.lhs.true
  %20 = load float, float* %r1, align 4, !dbg !4797
  %21 = load float*, float** %root.addr, align 8, !dbg !4799
  store float %20, float* %21, align 4, !dbg !4800
  store i8 1, i8* %retval, align 1, !dbg !4801
  br label %return, !dbg !4801

if.end13:                                         ; preds = %land.lhs.true, %if.end
  %22 = load float, float* %r2, align 4, !dbg !4802
  %cmp14 = fcmp ogt float %22, 0.000000e+00, !dbg !4804
  br i1 %cmp14, label %land.lhs.true15, label %if.end18, !dbg !4805

land.lhs.true15:                                  ; preds = %if.end13
  %23 = load float, float* %r2, align 4, !dbg !4806
  %24 = load float, float* %maxR.addr, align 4, !dbg !4807
  %cmp16 = fcmp olt float %23, %24, !dbg !4808
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !4809

if.then17:                                        ; preds = %land.lhs.true15
  %25 = load float, float* %r2, align 4, !dbg !4810
  %26 = load float*, float** %root.addr, align 8, !dbg !4812
  store float %25, float* %26, align 4, !dbg !4813
  store i8 1, i8* %retval, align 1, !dbg !4814
  br label %return, !dbg !4814

if.end18:                                         ; preds = %land.lhs.true15, %if.end13
  br label %if.end19, !dbg !4815

if.end19:                                         ; preds = %if.end18, %entry
  store i8 0, i8* %retval, align 1, !dbg !4816
  br label %return, !dbg !4816

return:                                           ; preds = %if.end19, %if.then17, %if.then12
  %27 = load i8, i8* %retval, align 1, !dbg !4817
  ret i8 %27, !dbg !4817
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @isect_axial_line_tri_v3(i32 %axis, float* %p1, float* %p2, float* %v0, float* %v1, float* %v2, float* %r_lambda) #0 !dbg !4818 {
entry:
  %retval = alloca i8, align 1
  %axis.addr = alloca i32, align 4
  %p1.addr = alloca float*, align 8
  %p2.addr = alloca float*, align 8
  %v0.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %r_lambda.addr = alloca float*, align 8
  %p = alloca [3 x float], align 4
  %e1 = alloca [3 x float], align 4
  %e2 = alloca [3 x float], align 4
  %u = alloca float, align 4
  %v = alloca float, align 4
  %f = alloca float, align 4
  %a0 = alloca i32, align 4
  %a1 = alloca i32, align 4
  %a2 = alloca i32, align 4
  store i32 %axis, i32* %axis.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %axis.addr, metadata !4821, metadata !DIExpression()), !dbg !4822
  store float* %p1, float** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p1.addr, metadata !4823, metadata !DIExpression()), !dbg !4824
  store float* %p2, float** %p2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p2.addr, metadata !4825, metadata !DIExpression()), !dbg !4826
  store float* %v0, float** %v0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v0.addr, metadata !4827, metadata !DIExpression()), !dbg !4828
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !4829, metadata !DIExpression()), !dbg !4830
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !4831, metadata !DIExpression()), !dbg !4832
  store float* %r_lambda, float** %r_lambda.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_lambda.addr, metadata !4833, metadata !DIExpression()), !dbg !4834
  call void @llvm.dbg.declare(metadata [3 x float]* %p, metadata !4835, metadata !DIExpression()), !dbg !4836
  call void @llvm.dbg.declare(metadata [3 x float]* %e1, metadata !4837, metadata !DIExpression()), !dbg !4838
  call void @llvm.dbg.declare(metadata [3 x float]* %e2, metadata !4839, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.declare(metadata float* %u, metadata !4841, metadata !DIExpression()), !dbg !4842
  call void @llvm.dbg.declare(metadata float* %v, metadata !4843, metadata !DIExpression()), !dbg !4844
  call void @llvm.dbg.declare(metadata float* %f, metadata !4845, metadata !DIExpression()), !dbg !4846
  call void @llvm.dbg.declare(metadata i32* %a0, metadata !4847, metadata !DIExpression()), !dbg !4848
  %0 = load i32, i32* %axis.addr, align 4, !dbg !4849
  store i32 %0, i32* %a0, align 4, !dbg !4848
  call void @llvm.dbg.declare(metadata i32* %a1, metadata !4850, metadata !DIExpression()), !dbg !4851
  %1 = load i32, i32* %axis.addr, align 4, !dbg !4852
  %add = add nsw i32 %1, 1, !dbg !4853
  %rem = srem i32 %add, 3, !dbg !4854
  store i32 %rem, i32* %a1, align 4, !dbg !4851
  call void @llvm.dbg.declare(metadata i32* %a2, metadata !4855, metadata !DIExpression()), !dbg !4856
  %2 = load i32, i32* %axis.addr, align 4, !dbg !4857
  %add1 = add nsw i32 %2, 2, !dbg !4858
  %rem2 = srem i32 %add1, 3, !dbg !4859
  store i32 %rem2, i32* %a2, align 4, !dbg !4856
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !4860
  %3 = load float*, float** %v1.addr, align 8, !dbg !4861
  %4 = load float*, float** %v0.addr, align 8, !dbg !4862
  call void @sub_v3_v3v3(float* %arraydecay, float* %3, float* %4), !dbg !4863
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !4864
  %5 = load float*, float** %v2.addr, align 8, !dbg !4865
  %6 = load float*, float** %v0.addr, align 8, !dbg !4866
  call void @sub_v3_v3v3(float* %arraydecay3, float* %5, float* %6), !dbg !4867
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !4868
  %7 = load float*, float** %v0.addr, align 8, !dbg !4869
  %8 = load float*, float** %p1.addr, align 8, !dbg !4870
  call void @sub_v3_v3v3(float* %arraydecay4, float* %7, float* %8), !dbg !4871
  %9 = load i32, i32* %a1, align 4, !dbg !4872
  %idxprom = sext i32 %9 to i64, !dbg !4873
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 %idxprom, !dbg !4873
  %10 = load float, float* %arrayidx, align 4, !dbg !4873
  %11 = load i32, i32* %a2, align 4, !dbg !4874
  %idxprom5 = sext i32 %11 to i64, !dbg !4875
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 %idxprom5, !dbg !4875
  %12 = load float, float* %arrayidx6, align 4, !dbg !4875
  %mul = fmul float %10, %12, !dbg !4876
  %13 = load i32, i32* %a2, align 4, !dbg !4877
  %idxprom7 = sext i32 %13 to i64, !dbg !4878
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 %idxprom7, !dbg !4878
  %14 = load float, float* %arrayidx8, align 4, !dbg !4878
  %15 = load i32, i32* %a1, align 4, !dbg !4879
  %idxprom9 = sext i32 %15 to i64, !dbg !4880
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 %idxprom9, !dbg !4880
  %16 = load float, float* %arrayidx10, align 4, !dbg !4880
  %mul11 = fmul float %14, %16, !dbg !4881
  %sub = fsub float %mul, %mul11, !dbg !4882
  store float %sub, float* %f, align 4, !dbg !4883
  %17 = load float, float* %f, align 4, !dbg !4884
  %cmp = fcmp ogt float %17, 0xBEB0C6F7A0000000, !dbg !4886
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4887

land.lhs.true:                                    ; preds = %entry
  %18 = load float, float* %f, align 4, !dbg !4888
  %cmp12 = fcmp olt float %18, 0x3EB0C6F7A0000000, !dbg !4889
  br i1 %cmp12, label %if.then, label %if.end, !dbg !4890

if.then:                                          ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !4891
  br label %return, !dbg !4891

if.end:                                           ; preds = %land.lhs.true, %entry
  %19 = load i32, i32* %a2, align 4, !dbg !4892
  %idxprom13 = sext i32 %19 to i64, !dbg !4893
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 %idxprom13, !dbg !4893
  %20 = load float, float* %arrayidx14, align 4, !dbg !4893
  %21 = load i32, i32* %a1, align 4, !dbg !4894
  %idxprom15 = sext i32 %21 to i64, !dbg !4895
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 %idxprom15, !dbg !4895
  %22 = load float, float* %arrayidx16, align 4, !dbg !4895
  %mul17 = fmul float %20, %22, !dbg !4896
  %23 = load i32, i32* %a1, align 4, !dbg !4897
  %idxprom18 = sext i32 %23 to i64, !dbg !4898
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 %idxprom18, !dbg !4898
  %24 = load float, float* %arrayidx19, align 4, !dbg !4898
  %25 = load i32, i32* %a2, align 4, !dbg !4899
  %idxprom20 = sext i32 %25 to i64, !dbg !4900
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 %idxprom20, !dbg !4900
  %26 = load float, float* %arrayidx21, align 4, !dbg !4900
  %mul22 = fmul float %24, %26, !dbg !4901
  %sub23 = fsub float %mul17, %mul22, !dbg !4902
  %27 = load float, float* %f, align 4, !dbg !4903
  %div = fdiv float %sub23, %27, !dbg !4904
  store float %div, float* %v, align 4, !dbg !4905
  %28 = load float, float* %v, align 4, !dbg !4906
  %cmp24 = fcmp olt float %28, 0.000000e+00, !dbg !4908
  br i1 %cmp24, label %if.then26, label %lor.lhs.false, !dbg !4909

lor.lhs.false:                                    ; preds = %if.end
  %29 = load float, float* %v, align 4, !dbg !4910
  %cmp25 = fcmp ogt float %29, 1.000000e+00, !dbg !4911
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !4912

if.then26:                                        ; preds = %lor.lhs.false, %if.end
  store i8 0, i8* %retval, align 1, !dbg !4913
  br label %return, !dbg !4913

if.end27:                                         ; preds = %lor.lhs.false
  %30 = load i32, i32* %a1, align 4, !dbg !4914
  %idxprom28 = sext i32 %30 to i64, !dbg !4915
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 %idxprom28, !dbg !4915
  %31 = load float, float* %arrayidx29, align 4, !dbg !4915
  store float %31, float* %f, align 4, !dbg !4916
  %32 = load float, float* %f, align 4, !dbg !4917
  %cmp30 = fcmp ogt float %32, 0xBEB0C6F7A0000000, !dbg !4919
  br i1 %cmp30, label %land.lhs.true31, label %if.else, !dbg !4920

land.lhs.true31:                                  ; preds = %if.end27
  %33 = load float, float* %f, align 4, !dbg !4921
  %cmp32 = fcmp olt float %33, 0x3EB0C6F7A0000000, !dbg !4922
  br i1 %cmp32, label %if.then33, label %if.else, !dbg !4923

if.then33:                                        ; preds = %land.lhs.true31
  %34 = load i32, i32* %a2, align 4, !dbg !4924
  %idxprom34 = sext i32 %34 to i64, !dbg !4926
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 %idxprom34, !dbg !4926
  %35 = load float, float* %arrayidx35, align 4, !dbg !4926
  store float %35, float* %f, align 4, !dbg !4927
  %36 = load float, float* %f, align 4, !dbg !4928
  %cmp36 = fcmp ogt float %36, 0xBEB0C6F7A0000000, !dbg !4930
  br i1 %cmp36, label %land.lhs.true37, label %if.end40, !dbg !4931

land.lhs.true37:                                  ; preds = %if.then33
  %37 = load float, float* %f, align 4, !dbg !4932
  %cmp38 = fcmp olt float %37, 0x3EB0C6F7A0000000, !dbg !4933
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !4934

if.then39:                                        ; preds = %land.lhs.true37
  store i8 0, i8* %retval, align 1, !dbg !4935
  br label %return, !dbg !4935

if.end40:                                         ; preds = %land.lhs.true37, %if.then33
  %38 = load i32, i32* %a2, align 4, !dbg !4936
  %idxprom41 = sext i32 %38 to i64, !dbg !4937
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 %idxprom41, !dbg !4937
  %39 = load float, float* %arrayidx42, align 4, !dbg !4937
  %fneg = fneg float %39, !dbg !4938
  %40 = load float, float* %v, align 4, !dbg !4939
  %41 = load i32, i32* %a2, align 4, !dbg !4940
  %idxprom43 = sext i32 %41 to i64, !dbg !4941
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 %idxprom43, !dbg !4941
  %42 = load float, float* %arrayidx44, align 4, !dbg !4941
  %mul45 = fmul float %40, %42, !dbg !4942
  %sub46 = fsub float %fneg, %mul45, !dbg !4943
  %43 = load float, float* %f, align 4, !dbg !4944
  %div47 = fdiv float %sub46, %43, !dbg !4945
  store float %div47, float* %u, align 4, !dbg !4946
  br label %if.end56, !dbg !4947

if.else:                                          ; preds = %land.lhs.true31, %if.end27
  %44 = load i32, i32* %a1, align 4, !dbg !4948
  %idxprom48 = sext i32 %44 to i64, !dbg !4949
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 %idxprom48, !dbg !4949
  %45 = load float, float* %arrayidx49, align 4, !dbg !4949
  %fneg50 = fneg float %45, !dbg !4950
  %46 = load float, float* %v, align 4, !dbg !4951
  %47 = load i32, i32* %a1, align 4, !dbg !4952
  %idxprom51 = sext i32 %47 to i64, !dbg !4953
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 %idxprom51, !dbg !4953
  %48 = load float, float* %arrayidx52, align 4, !dbg !4953
  %mul53 = fmul float %46, %48, !dbg !4954
  %sub54 = fsub float %fneg50, %mul53, !dbg !4955
  %49 = load float, float* %f, align 4, !dbg !4956
  %div55 = fdiv float %sub54, %49, !dbg !4957
  store float %div55, float* %u, align 4, !dbg !4958
  br label %if.end56

if.end56:                                         ; preds = %if.else, %if.end40
  %50 = load float, float* %u, align 4, !dbg !4959
  %cmp57 = fcmp olt float %50, 0.000000e+00, !dbg !4961
  br i1 %cmp57, label %if.then61, label %lor.lhs.false58, !dbg !4962

lor.lhs.false58:                                  ; preds = %if.end56
  %51 = load float, float* %u, align 4, !dbg !4963
  %52 = load float, float* %v, align 4, !dbg !4964
  %add59 = fadd float %51, %52, !dbg !4965
  %cmp60 = fcmp ogt float %add59, 1.000000e+00, !dbg !4966
  br i1 %cmp60, label %if.then61, label %if.end62, !dbg !4967

if.then61:                                        ; preds = %lor.lhs.false58, %if.end56
  store i8 0, i8* %retval, align 1, !dbg !4968
  br label %return, !dbg !4968

if.end62:                                         ; preds = %lor.lhs.false58
  %53 = load i32, i32* %a0, align 4, !dbg !4969
  %idxprom63 = sext i32 %53 to i64, !dbg !4970
  %arrayidx64 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 %idxprom63, !dbg !4970
  %54 = load float, float* %arrayidx64, align 4, !dbg !4970
  %55 = load float, float* %u, align 4, !dbg !4971
  %56 = load i32, i32* %a0, align 4, !dbg !4972
  %idxprom65 = sext i32 %56 to i64, !dbg !4973
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 %idxprom65, !dbg !4973
  %57 = load float, float* %arrayidx66, align 4, !dbg !4973
  %mul67 = fmul float %55, %57, !dbg !4974
  %add68 = fadd float %54, %mul67, !dbg !4975
  %58 = load float, float* %v, align 4, !dbg !4976
  %59 = load i32, i32* %a0, align 4, !dbg !4977
  %idxprom69 = sext i32 %59 to i64, !dbg !4978
  %arrayidx70 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 %idxprom69, !dbg !4978
  %60 = load float, float* %arrayidx70, align 4, !dbg !4978
  %mul71 = fmul float %58, %60, !dbg !4979
  %add72 = fadd float %add68, %mul71, !dbg !4980
  %61 = load float*, float** %p2.addr, align 8, !dbg !4981
  %62 = load i32, i32* %a0, align 4, !dbg !4982
  %idxprom73 = sext i32 %62 to i64, !dbg !4981
  %arrayidx74 = getelementptr inbounds float, float* %61, i64 %idxprom73, !dbg !4981
  %63 = load float, float* %arrayidx74, align 4, !dbg !4981
  %64 = load float*, float** %p1.addr, align 8, !dbg !4983
  %65 = load i32, i32* %a0, align 4, !dbg !4984
  %idxprom75 = sext i32 %65 to i64, !dbg !4983
  %arrayidx76 = getelementptr inbounds float, float* %64, i64 %idxprom75, !dbg !4983
  %66 = load float, float* %arrayidx76, align 4, !dbg !4983
  %sub77 = fsub float %63, %66, !dbg !4985
  %div78 = fdiv float %add72, %sub77, !dbg !4986
  %67 = load float*, float** %r_lambda.addr, align 8, !dbg !4987
  store float %div78, float* %67, align 4, !dbg !4988
  %68 = load float*, float** %r_lambda.addr, align 8, !dbg !4989
  %69 = load float, float* %68, align 4, !dbg !4991
  %cmp79 = fcmp olt float %69, 0.000000e+00, !dbg !4992
  br i1 %cmp79, label %if.then82, label %lor.lhs.false80, !dbg !4993

lor.lhs.false80:                                  ; preds = %if.end62
  %70 = load float*, float** %r_lambda.addr, align 8, !dbg !4994
  %71 = load float, float* %70, align 4, !dbg !4995
  %cmp81 = fcmp ogt float %71, 1.000000e+00, !dbg !4996
  br i1 %cmp81, label %if.then82, label %if.end83, !dbg !4997

if.then82:                                        ; preds = %lor.lhs.false80, %if.end62
  store i8 0, i8* %retval, align 1, !dbg !4998
  br label %return, !dbg !4998

if.end83:                                         ; preds = %lor.lhs.false80
  store i8 1, i8* %retval, align 1, !dbg !4999
  br label %return, !dbg !4999

return:                                           ; preds = %if.end83, %if.then82, %if.then61, %if.then39, %if.then26, %if.then
  %72 = load i8, i8* %retval, align 1, !dbg !5000
  ret i8 %72, !dbg !5000
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @isect_line_line_epsilon_v3(float* %v1, float* %v2, float* %v3, float* %v4, float* %i1, float* %i2, float %epsilon) #0 !dbg !5001 {
entry:
  %retval = alloca i32, align 4
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  %i1.addr = alloca float*, align 8
  %i2.addr = alloca float*, align 8
  %epsilon.addr = alloca float, align 4
  %a = alloca [3 x float], align 4
  %b = alloca [3 x float], align 4
  %c = alloca [3 x float], align 4
  %ab = alloca [3 x float], align 4
  %cb = alloca [3 x float], align 4
  %dir1 = alloca [3 x float], align 4
  %dir2 = alloca [3 x float], align 4
  %d = alloca float, align 4
  %div = alloca float, align 4
  %n = alloca [3 x float], align 4
  %t = alloca [3 x float], align 4
  %v3t = alloca [3 x float], align 4
  %v4t = alloca [3 x float], align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !5004, metadata !DIExpression()), !dbg !5005
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !5006, metadata !DIExpression()), !dbg !5007
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !5008, metadata !DIExpression()), !dbg !5009
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !5010, metadata !DIExpression()), !dbg !5011
  store float* %i1, float** %i1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %i1.addr, metadata !5012, metadata !DIExpression()), !dbg !5013
  store float* %i2, float** %i2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %i2.addr, metadata !5014, metadata !DIExpression()), !dbg !5015
  store float %epsilon, float* %epsilon.addr, align 4
  call void @llvm.dbg.declare(metadata float* %epsilon.addr, metadata !5016, metadata !DIExpression()), !dbg !5017
  call void @llvm.dbg.declare(metadata [3 x float]* %a, metadata !5018, metadata !DIExpression()), !dbg !5019
  call void @llvm.dbg.declare(metadata [3 x float]* %b, metadata !5020, metadata !DIExpression()), !dbg !5021
  call void @llvm.dbg.declare(metadata [3 x float]* %c, metadata !5022, metadata !DIExpression()), !dbg !5023
  call void @llvm.dbg.declare(metadata [3 x float]* %ab, metadata !5024, metadata !DIExpression()), !dbg !5025
  call void @llvm.dbg.declare(metadata [3 x float]* %cb, metadata !5026, metadata !DIExpression()), !dbg !5027
  call void @llvm.dbg.declare(metadata [3 x float]* %dir1, metadata !5028, metadata !DIExpression()), !dbg !5029
  call void @llvm.dbg.declare(metadata [3 x float]* %dir2, metadata !5030, metadata !DIExpression()), !dbg !5031
  call void @llvm.dbg.declare(metadata float* %d, metadata !5032, metadata !DIExpression()), !dbg !5033
  call void @llvm.dbg.declare(metadata float* %div, metadata !5034, metadata !DIExpression()), !dbg !5035
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 0, !dbg !5036
  %0 = load float*, float** %v3.addr, align 8, !dbg !5037
  %1 = load float*, float** %v1.addr, align 8, !dbg !5038
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !5039
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !5040
  %2 = load float*, float** %v2.addr, align 8, !dbg !5041
  %3 = load float*, float** %v1.addr, align 8, !dbg !5042
  call void @sub_v3_v3v3(float* %arraydecay1, float* %2, float* %3), !dbg !5043
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 0, !dbg !5044
  %4 = load float*, float** %v4.addr, align 8, !dbg !5045
  %5 = load float*, float** %v3.addr, align 8, !dbg !5046
  call void @sub_v3_v3v3(float* %arraydecay2, float* %4, float* %5), !dbg !5047
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %dir1, i64 0, i64 0, !dbg !5048
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !5049
  %call = call float @normalize_v3_v3(float* %arraydecay3, float* %arraydecay4), !dbg !5050
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %dir2, i64 0, i64 0, !dbg !5051
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 0, !dbg !5052
  %call7 = call float @normalize_v3_v3(float* %arraydecay5, float* %arraydecay6), !dbg !5053
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %dir1, i64 0, i64 0, !dbg !5054
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %dir2, i64 0, i64 0, !dbg !5055
  %call10 = call float @dot_v3v3(float* %arraydecay8, float* %arraydecay9), !dbg !5056
  store float %call10, float* %d, align 4, !dbg !5057
  %6 = load float, float* %d, align 4, !dbg !5058
  %cmp = fcmp oeq float %6, 1.000000e+00, !dbg !5060
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5061

lor.lhs.false:                                    ; preds = %entry
  %7 = load float, float* %d, align 4, !dbg !5062
  %cmp11 = fcmp oeq float %7, -1.000000e+00, !dbg !5063
  br i1 %cmp11, label %if.then, label %if.end, !dbg !5064

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !5065
  br label %return, !dbg !5065

if.end:                                           ; preds = %lor.lhs.false
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %ab, i64 0, i64 0, !dbg !5067
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !5068
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 0, !dbg !5069
  call void @cross_v3_v3v3(float* %arraydecay12, float* %arraydecay13, float* %arraydecay14), !dbg !5070
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 0, !dbg !5071
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %ab, i64 0, i64 0, !dbg !5072
  %call17 = call float @dot_v3v3(float* %arraydecay15, float* %arraydecay16), !dbg !5073
  store float %call17, float* %d, align 4, !dbg !5074
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %ab, i64 0, i64 0, !dbg !5075
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %ab, i64 0, i64 0, !dbg !5076
  %call20 = call float @dot_v3v3(float* %arraydecay18, float* %arraydecay19), !dbg !5077
  store float %call20, float* %div, align 4, !dbg !5078
  %8 = load float, float* %div, align 4, !dbg !5079
  %cmp21 = fcmp oeq float %8, 0.000000e+00, !dbg !5079
  br i1 %cmp21, label %if.then22, label %if.else, !dbg !5081

if.then22:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5082
  br label %return, !dbg !5082

if.else:                                          ; preds = %if.end
  %9 = load float, float* %d, align 4, !dbg !5084
  %10 = call float @llvm.fabs.f32(float %9), !dbg !5084
  %11 = load float, float* %epsilon.addr, align 4, !dbg !5084
  %cmp23 = fcmp ole float %10, %11, !dbg !5084
  br i1 %cmp23, label %if.then24, label %if.else34, !dbg !5086

if.then24:                                        ; preds = %if.else
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %cb, i64 0, i64 0, !dbg !5087
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 0, !dbg !5089
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 0, !dbg !5090
  call void @cross_v3_v3v3(float* %arraydecay25, float* %arraydecay26, float* %arraydecay27), !dbg !5091
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !5092
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %cb, i64 0, i64 0, !dbg !5093
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %ab, i64 0, i64 0, !dbg !5094
  %call31 = call float @dot_v3v3(float* %arraydecay29, float* %arraydecay30), !dbg !5095
  %12 = load float, float* %div, align 4, !dbg !5096
  %div32 = fdiv float %call31, %12, !dbg !5097
  call void @mul_v3_fl(float* %arraydecay28, float %div32), !dbg !5098
  %13 = load float*, float** %i1.addr, align 8, !dbg !5099
  %14 = load float*, float** %v1.addr, align 8, !dbg !5100
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !5101
  call void @add_v3_v3v3(float* %13, float* %14, float* %arraydecay33), !dbg !5102
  %15 = load float*, float** %i2.addr, align 8, !dbg !5103
  %16 = load float*, float** %i1.addr, align 8, !dbg !5104
  call void @copy_v3_v3(float* %15, float* %16), !dbg !5105
  store i32 1, i32* %retval, align 4, !dbg !5106
  br label %return, !dbg !5106

if.else34:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata [3 x float]* %n, metadata !5107, metadata !DIExpression()), !dbg !5109
  call void @llvm.dbg.declare(metadata [3 x float]* %t, metadata !5110, metadata !DIExpression()), !dbg !5111
  call void @llvm.dbg.declare(metadata [3 x float]* %v3t, metadata !5112, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.declare(metadata [3 x float]* %v4t, metadata !5114, metadata !DIExpression()), !dbg !5115
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %t, i64 0, i64 0, !dbg !5116
  %17 = load float*, float** %v1.addr, align 8, !dbg !5117
  %18 = load float*, float** %v3.addr, align 8, !dbg !5118
  call void @sub_v3_v3v3(float* %arraydecay35, float* %17, float* %18), !dbg !5119
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !5120
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !5121
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 0, !dbg !5122
  call void @cross_v3_v3v3(float* %arraydecay36, float* %arraydecay37, float* %arraydecay38), !dbg !5123
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %t, i64 0, i64 0, !dbg !5124
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %t, i64 0, i64 0, !dbg !5125
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !5126
  call void @project_v3_v3v3(float* %arraydecay39, float* %arraydecay40, float* %arraydecay41), !dbg !5127
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %v3t, i64 0, i64 0, !dbg !5128
  %19 = load float*, float** %v3.addr, align 8, !dbg !5129
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %t, i64 0, i64 0, !dbg !5130
  call void @add_v3_v3v3(float* %arraydecay42, float* %19, float* %arraydecay43), !dbg !5131
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %v4t, i64 0, i64 0, !dbg !5132
  %20 = load float*, float** %v4.addr, align 8, !dbg !5133
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %t, i64 0, i64 0, !dbg !5134
  call void @add_v3_v3v3(float* %arraydecay44, float* %20, float* %arraydecay45), !dbg !5135
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 0, !dbg !5136
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %v3t, i64 0, i64 0, !dbg !5137
  %21 = load float*, float** %v1.addr, align 8, !dbg !5138
  call void @sub_v3_v3v3(float* %arraydecay46, float* %arraydecay47, float* %21), !dbg !5139
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !5140
  %22 = load float*, float** %v2.addr, align 8, !dbg !5141
  %23 = load float*, float** %v1.addr, align 8, !dbg !5142
  call void @sub_v3_v3v3(float* %arraydecay48, float* %22, float* %23), !dbg !5143
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 0, !dbg !5144
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %v4t, i64 0, i64 0, !dbg !5145
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %v3t, i64 0, i64 0, !dbg !5146
  call void @sub_v3_v3v3(float* %arraydecay49, float* %arraydecay50, float* %arraydecay51), !dbg !5147
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %ab, i64 0, i64 0, !dbg !5148
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !5149
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 0, !dbg !5150
  call void @cross_v3_v3v3(float* %arraydecay52, float* %arraydecay53, float* %arraydecay54), !dbg !5151
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %cb, i64 0, i64 0, !dbg !5152
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 0, !dbg !5153
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 0, !dbg !5154
  call void @cross_v3_v3v3(float* %arraydecay55, float* %arraydecay56, float* %arraydecay57), !dbg !5155
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !5156
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %cb, i64 0, i64 0, !dbg !5157
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %ab, i64 0, i64 0, !dbg !5158
  %call61 = call float @dot_v3v3(float* %arraydecay59, float* %arraydecay60), !dbg !5159
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %ab, i64 0, i64 0, !dbg !5160
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %ab, i64 0, i64 0, !dbg !5161
  %call64 = call float @dot_v3v3(float* %arraydecay62, float* %arraydecay63), !dbg !5162
  %div65 = fdiv float %call61, %call64, !dbg !5163
  call void @mul_v3_fl(float* %arraydecay58, float %div65), !dbg !5164
  %24 = load float*, float** %i1.addr, align 8, !dbg !5165
  %25 = load float*, float** %v1.addr, align 8, !dbg !5166
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !5167
  call void @add_v3_v3v3(float* %24, float* %25, float* %arraydecay66), !dbg !5168
  %26 = load float*, float** %i2.addr, align 8, !dbg !5169
  %27 = load float*, float** %i1.addr, align 8, !dbg !5170
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %t, i64 0, i64 0, !dbg !5171
  call void @sub_v3_v3v3(float* %26, float* %27, float* %arraydecay67), !dbg !5172
  store i32 2, i32* %retval, align 4, !dbg !5173
  br label %return, !dbg !5173

return:                                           ; preds = %if.else34, %if.then24, %if.then22, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !5174
  ret i32 %28, !dbg !5174
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !5175 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5176, metadata !DIExpression()), !dbg !5177
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5178, metadata !DIExpression()), !dbg !5179
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5180, metadata !DIExpression()), !dbg !5181
  %0 = load float*, float** %a.addr, align 8, !dbg !5182
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5182
  %1 = load float, float* %arrayidx, align 4, !dbg !5182
  %2 = load float*, float** %b.addr, align 8, !dbg !5183
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5183
  %3 = load float, float* %arrayidx1, align 4, !dbg !5183
  %add = fadd float %1, %3, !dbg !5184
  %4 = load float*, float** %r.addr, align 8, !dbg !5185
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !5185
  store float %add, float* %arrayidx2, align 4, !dbg !5186
  %5 = load float*, float** %a.addr, align 8, !dbg !5187
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !5187
  %6 = load float, float* %arrayidx3, align 4, !dbg !5187
  %7 = load float*, float** %b.addr, align 8, !dbg !5188
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !5188
  %8 = load float, float* %arrayidx4, align 4, !dbg !5188
  %add5 = fadd float %6, %8, !dbg !5189
  %9 = load float*, float** %r.addr, align 8, !dbg !5190
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !5190
  store float %add5, float* %arrayidx6, align 4, !dbg !5191
  %10 = load float*, float** %a.addr, align 8, !dbg !5192
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !5192
  %11 = load float, float* %arrayidx7, align 4, !dbg !5192
  %12 = load float*, float** %b.addr, align 8, !dbg !5193
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !5193
  %13 = load float, float* %arrayidx8, align 4, !dbg !5193
  %add9 = fadd float %11, %13, !dbg !5194
  %14 = load float*, float** %r.addr, align 8, !dbg !5195
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !5195
  store float %add9, float* %arrayidx10, align 4, !dbg !5196
  ret void, !dbg !5197
}

declare dso_local void @project_v3_v3v3(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @isect_line_line_v3(float* %v1, float* %v2, float* %v3, float* %v4, float* %i1, float* %i2) #0 !dbg !5198 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  %i1.addr = alloca float*, align 8
  %i2.addr = alloca float*, align 8
  %epsilon = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !5201, metadata !DIExpression()), !dbg !5202
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !5203, metadata !DIExpression()), !dbg !5204
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !5205, metadata !DIExpression()), !dbg !5206
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !5207, metadata !DIExpression()), !dbg !5208
  store float* %i1, float** %i1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %i1.addr, metadata !5209, metadata !DIExpression()), !dbg !5210
  store float* %i2, float** %i2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %i2.addr, metadata !5211, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.declare(metadata float* %epsilon, metadata !5213, metadata !DIExpression()), !dbg !5214
  store float 0x3EB0C6F7A0000000, float* %epsilon, align 4, !dbg !5214
  %0 = load float*, float** %v1.addr, align 8, !dbg !5215
  %1 = load float*, float** %v2.addr, align 8, !dbg !5216
  %2 = load float*, float** %v3.addr, align 8, !dbg !5217
  %3 = load float*, float** %v4.addr, align 8, !dbg !5218
  %4 = load float*, float** %i1.addr, align 8, !dbg !5219
  %5 = load float*, float** %i2.addr, align 8, !dbg !5220
  %call = call i32 @isect_line_line_epsilon_v3(float* %0, float* %1, float* %2, float* %3, float* %4, float* %5, float 0x3EB0C6F7A0000000), !dbg !5221
  ret i32 %call, !dbg !5222
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @isect_line_line_strict_v3(float* %v1, float* %v2, float* %v3, float* %v4, float* %vi, float* %r_lambda) #0 !dbg !5223 {
entry:
  %retval = alloca i8, align 1
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  %vi.addr = alloca float*, align 8
  %r_lambda.addr = alloca float*, align 8
  %a = alloca [3 x float], align 4
  %b = alloca [3 x float], align 4
  %c = alloca [3 x float], align 4
  %ab = alloca [3 x float], align 4
  %cb = alloca [3 x float], align 4
  %ca = alloca [3 x float], align 4
  %dir1 = alloca [3 x float], align 4
  %dir2 = alloca [3 x float], align 4
  %d = alloca float, align 4
  %div = alloca float, align 4
  %f1 = alloca float, align 4
  %f2 = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !5226, metadata !DIExpression()), !dbg !5227
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !5228, metadata !DIExpression()), !dbg !5229
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !5230, metadata !DIExpression()), !dbg !5231
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !5232, metadata !DIExpression()), !dbg !5233
  store float* %vi, float** %vi.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vi.addr, metadata !5234, metadata !DIExpression()), !dbg !5235
  store float* %r_lambda, float** %r_lambda.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_lambda.addr, metadata !5236, metadata !DIExpression()), !dbg !5237
  call void @llvm.dbg.declare(metadata [3 x float]* %a, metadata !5238, metadata !DIExpression()), !dbg !5239
  call void @llvm.dbg.declare(metadata [3 x float]* %b, metadata !5240, metadata !DIExpression()), !dbg !5241
  call void @llvm.dbg.declare(metadata [3 x float]* %c, metadata !5242, metadata !DIExpression()), !dbg !5243
  call void @llvm.dbg.declare(metadata [3 x float]* %ab, metadata !5244, metadata !DIExpression()), !dbg !5245
  call void @llvm.dbg.declare(metadata [3 x float]* %cb, metadata !5246, metadata !DIExpression()), !dbg !5247
  call void @llvm.dbg.declare(metadata [3 x float]* %ca, metadata !5248, metadata !DIExpression()), !dbg !5249
  call void @llvm.dbg.declare(metadata [3 x float]* %dir1, metadata !5250, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.declare(metadata [3 x float]* %dir2, metadata !5252, metadata !DIExpression()), !dbg !5253
  call void @llvm.dbg.declare(metadata float* %d, metadata !5254, metadata !DIExpression()), !dbg !5255
  call void @llvm.dbg.declare(metadata float* %div, metadata !5256, metadata !DIExpression()), !dbg !5257
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 0, !dbg !5258
  %0 = load float*, float** %v3.addr, align 8, !dbg !5259
  %1 = load float*, float** %v1.addr, align 8, !dbg !5260
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !5261
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !5262
  %2 = load float*, float** %v2.addr, align 8, !dbg !5263
  %3 = load float*, float** %v1.addr, align 8, !dbg !5264
  call void @sub_v3_v3v3(float* %arraydecay1, float* %2, float* %3), !dbg !5265
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 0, !dbg !5266
  %4 = load float*, float** %v4.addr, align 8, !dbg !5267
  %5 = load float*, float** %v3.addr, align 8, !dbg !5268
  call void @sub_v3_v3v3(float* %arraydecay2, float* %4, float* %5), !dbg !5269
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %dir1, i64 0, i64 0, !dbg !5270
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !5271
  %call = call float @normalize_v3_v3(float* %arraydecay3, float* %arraydecay4), !dbg !5272
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %dir2, i64 0, i64 0, !dbg !5273
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 0, !dbg !5274
  %call7 = call float @normalize_v3_v3(float* %arraydecay5, float* %arraydecay6), !dbg !5275
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %dir1, i64 0, i64 0, !dbg !5276
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %dir2, i64 0, i64 0, !dbg !5277
  %call10 = call float @dot_v3v3(float* %arraydecay8, float* %arraydecay9), !dbg !5278
  store float %call10, float* %d, align 4, !dbg !5279
  %6 = load float, float* %d, align 4, !dbg !5280
  %cmp = fcmp oeq float %6, 1.000000e+00, !dbg !5282
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5283

lor.lhs.false:                                    ; preds = %entry
  %7 = load float, float* %d, align 4, !dbg !5284
  %cmp11 = fcmp oeq float %7, -1.000000e+00, !dbg !5285
  br i1 %cmp11, label %if.then, label %lor.lhs.false12, !dbg !5286

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %8 = load float, float* %d, align 4, !dbg !5287
  %cmp13 = fcmp oeq float %8, 0.000000e+00, !dbg !5288
  br i1 %cmp13, label %if.then, label %if.end, !dbg !5289

if.then:                                          ; preds = %lor.lhs.false12, %lor.lhs.false, %entry
  store i8 0, i8* %retval, align 1, !dbg !5290
  br label %return, !dbg !5290

if.end:                                           ; preds = %lor.lhs.false12
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %ab, i64 0, i64 0, !dbg !5292
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !5293
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 0, !dbg !5294
  call void @cross_v3_v3v3(float* %arraydecay14, float* %arraydecay15, float* %arraydecay16), !dbg !5295
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 0, !dbg !5296
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %ab, i64 0, i64 0, !dbg !5297
  %call19 = call float @dot_v3v3(float* %arraydecay17, float* %arraydecay18), !dbg !5298
  store float %call19, float* %d, align 4, !dbg !5299
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %ab, i64 0, i64 0, !dbg !5300
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %ab, i64 0, i64 0, !dbg !5301
  %call22 = call float @dot_v3v3(float* %arraydecay20, float* %arraydecay21), !dbg !5302
  store float %call22, float* %div, align 4, !dbg !5303
  %9 = load float, float* %div, align 4, !dbg !5304
  %cmp23 = fcmp oeq float %9, 0.000000e+00, !dbg !5304
  br i1 %cmp23, label %if.then24, label %if.else, !dbg !5306

if.then24:                                        ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !5307
  br label %return, !dbg !5307

if.else:                                          ; preds = %if.end
  %10 = load float, float* %d, align 4, !dbg !5309
  %cmp25 = fcmp ogt float %10, 0xBEB0C6F7A0000000, !dbg !5311
  br i1 %cmp25, label %land.lhs.true, label %if.else55, !dbg !5312

land.lhs.true:                                    ; preds = %if.else
  %11 = load float, float* %d, align 4, !dbg !5313
  %cmp26 = fcmp olt float %11, 0x3EB0C6F7A0000000, !dbg !5314
  br i1 %cmp26, label %if.then27, label %if.else55, !dbg !5315

if.then27:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %f1, metadata !5316, metadata !DIExpression()), !dbg !5318
  call void @llvm.dbg.declare(metadata float* %f2, metadata !5319, metadata !DIExpression()), !dbg !5320
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %cb, i64 0, i64 0, !dbg !5321
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 0, !dbg !5322
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 0, !dbg !5323
  call void @cross_v3_v3v3(float* %arraydecay28, float* %arraydecay29, float* %arraydecay30), !dbg !5324
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %ca, i64 0, i64 0, !dbg !5325
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 0, !dbg !5326
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !5327
  call void @cross_v3_v3v3(float* %arraydecay31, float* %arraydecay32, float* %arraydecay33), !dbg !5328
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %cb, i64 0, i64 0, !dbg !5329
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %ab, i64 0, i64 0, !dbg !5330
  %call36 = call float @dot_v3v3(float* %arraydecay34, float* %arraydecay35), !dbg !5331
  %12 = load float, float* %div, align 4, !dbg !5332
  %div37 = fdiv float %call36, %12, !dbg !5333
  store float %div37, float* %f1, align 4, !dbg !5334
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %ca, i64 0, i64 0, !dbg !5335
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %ab, i64 0, i64 0, !dbg !5336
  %call40 = call float @dot_v3v3(float* %arraydecay38, float* %arraydecay39), !dbg !5337
  %13 = load float, float* %div, align 4, !dbg !5338
  %div41 = fdiv float %call40, %13, !dbg !5339
  store float %div41, float* %f2, align 4, !dbg !5340
  %14 = load float, float* %f1, align 4, !dbg !5341
  %cmp42 = fcmp oge float %14, 0.000000e+00, !dbg !5343
  br i1 %cmp42, label %land.lhs.true43, label %if.else54, !dbg !5344

land.lhs.true43:                                  ; preds = %if.then27
  %15 = load float, float* %f1, align 4, !dbg !5345
  %cmp44 = fcmp ole float %15, 1.000000e+00, !dbg !5346
  br i1 %cmp44, label %land.lhs.true45, label %if.else54, !dbg !5347

land.lhs.true45:                                  ; preds = %land.lhs.true43
  %16 = load float, float* %f2, align 4, !dbg !5348
  %cmp46 = fcmp oge float %16, 0.000000e+00, !dbg !5349
  br i1 %cmp46, label %land.lhs.true47, label %if.else54, !dbg !5350

land.lhs.true47:                                  ; preds = %land.lhs.true45
  %17 = load float, float* %f2, align 4, !dbg !5351
  %cmp48 = fcmp ole float %17, 1.000000e+00, !dbg !5352
  br i1 %cmp48, label %if.then49, label %if.else54, !dbg !5353

if.then49:                                        ; preds = %land.lhs.true47
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !5354
  %18 = load float, float* %f1, align 4, !dbg !5356
  call void @mul_v3_fl(float* %arraydecay50, float %18), !dbg !5357
  %19 = load float*, float** %vi.addr, align 8, !dbg !5358
  %20 = load float*, float** %v1.addr, align 8, !dbg !5359
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !5360
  call void @add_v3_v3v3(float* %19, float* %20, float* %arraydecay51), !dbg !5361
  %21 = load float*, float** %r_lambda.addr, align 8, !dbg !5362
  %tobool = icmp ne float* %21, null, !dbg !5362
  br i1 %tobool, label %if.then52, label %if.end53, !dbg !5364

if.then52:                                        ; preds = %if.then49
  %22 = load float, float* %f1, align 4, !dbg !5365
  %23 = load float*, float** %r_lambda.addr, align 8, !dbg !5366
  store float %22, float* %23, align 4, !dbg !5367
  br label %if.end53, !dbg !5368

if.end53:                                         ; preds = %if.then52, %if.then49
  store i8 1, i8* %retval, align 1, !dbg !5369
  br label %return, !dbg !5369

if.else54:                                        ; preds = %land.lhs.true47, %land.lhs.true45, %land.lhs.true43, %if.then27
  store i8 0, i8* %retval, align 1, !dbg !5370
  br label %return, !dbg !5370

if.else55:                                        ; preds = %land.lhs.true, %if.else
  store i8 0, i8* %retval, align 1, !dbg !5372
  br label %return, !dbg !5372

return:                                           ; preds = %if.else55, %if.else54, %if.end53, %if.then24, %if.then
  %24 = load i8, i8* %retval, align 1, !dbg !5374
  ret i8 %24, !dbg !5374
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @isect_aabb_aabb_v3(float* %min1, float* %max1, float* %min2, float* %max2) #0 !dbg !5375 {
entry:
  %min1.addr = alloca float*, align 8
  %max1.addr = alloca float*, align 8
  %min2.addr = alloca float*, align 8
  %max2.addr = alloca float*, align 8
  store float* %min1, float** %min1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %min1.addr, metadata !5376, metadata !DIExpression()), !dbg !5377
  store float* %max1, float** %max1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %max1.addr, metadata !5378, metadata !DIExpression()), !dbg !5379
  store float* %min2, float** %min2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %min2.addr, metadata !5380, metadata !DIExpression()), !dbg !5381
  store float* %max2, float** %max2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %max2.addr, metadata !5382, metadata !DIExpression()), !dbg !5383
  %0 = load float*, float** %min1.addr, align 8, !dbg !5384
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5384
  %1 = load float, float* %arrayidx, align 4, !dbg !5384
  %2 = load float*, float** %max2.addr, align 8, !dbg !5385
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5385
  %3 = load float, float* %arrayidx1, align 4, !dbg !5385
  %cmp = fcmp olt float %1, %3, !dbg !5386
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !5387

land.lhs.true:                                    ; preds = %entry
  %4 = load float*, float** %min1.addr, align 8, !dbg !5388
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5388
  %5 = load float, float* %arrayidx2, align 4, !dbg !5388
  %6 = load float*, float** %max2.addr, align 8, !dbg !5389
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !5389
  %7 = load float, float* %arrayidx3, align 4, !dbg !5389
  %cmp4 = fcmp olt float %5, %7, !dbg !5390
  br i1 %cmp4, label %land.lhs.true5, label %land.end, !dbg !5391

land.lhs.true5:                                   ; preds = %land.lhs.true
  %8 = load float*, float** %min1.addr, align 8, !dbg !5392
  %arrayidx6 = getelementptr inbounds float, float* %8, i64 2, !dbg !5392
  %9 = load float, float* %arrayidx6, align 4, !dbg !5392
  %10 = load float*, float** %max2.addr, align 8, !dbg !5393
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !5393
  %11 = load float, float* %arrayidx7, align 4, !dbg !5393
  %cmp8 = fcmp olt float %9, %11, !dbg !5394
  br i1 %cmp8, label %land.lhs.true9, label %land.end, !dbg !5395

land.lhs.true9:                                   ; preds = %land.lhs.true5
  %12 = load float*, float** %min2.addr, align 8, !dbg !5396
  %arrayidx10 = getelementptr inbounds float, float* %12, i64 0, !dbg !5396
  %13 = load float, float* %arrayidx10, align 4, !dbg !5396
  %14 = load float*, float** %max1.addr, align 8, !dbg !5397
  %arrayidx11 = getelementptr inbounds float, float* %14, i64 0, !dbg !5397
  %15 = load float, float* %arrayidx11, align 4, !dbg !5397
  %cmp12 = fcmp olt float %13, %15, !dbg !5398
  br i1 %cmp12, label %land.lhs.true13, label %land.end, !dbg !5399

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %16 = load float*, float** %min2.addr, align 8, !dbg !5400
  %arrayidx14 = getelementptr inbounds float, float* %16, i64 1, !dbg !5400
  %17 = load float, float* %arrayidx14, align 4, !dbg !5400
  %18 = load float*, float** %max1.addr, align 8, !dbg !5401
  %arrayidx15 = getelementptr inbounds float, float* %18, i64 1, !dbg !5401
  %19 = load float, float* %arrayidx15, align 4, !dbg !5401
  %cmp16 = fcmp olt float %17, %19, !dbg !5402
  br i1 %cmp16, label %land.rhs, label %land.end, !dbg !5403

land.rhs:                                         ; preds = %land.lhs.true13
  %20 = load float*, float** %min2.addr, align 8, !dbg !5404
  %arrayidx17 = getelementptr inbounds float, float* %20, i64 2, !dbg !5404
  %21 = load float, float* %arrayidx17, align 4, !dbg !5404
  %22 = load float*, float** %max1.addr, align 8, !dbg !5405
  %arrayidx18 = getelementptr inbounds float, float* %22, i64 2, !dbg !5405
  %23 = load float, float* %arrayidx18, align 4, !dbg !5405
  %cmp19 = fcmp olt float %21, %23, !dbg !5406
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true13, %land.lhs.true9, %land.lhs.true5, %land.lhs.true, %entry
  %24 = phi i1 [ false, %land.lhs.true13 ], [ false, %land.lhs.true9 ], [ false, %land.lhs.true5 ], [ false, %land.lhs.true ], [ false, %entry ], [ %cmp19, %land.rhs ], !dbg !5407
  %land.ext = zext i1 %24 to i32, !dbg !5403
  %conv = trunc i32 %land.ext to i8, !dbg !5408
  ret i8 %conv, !dbg !5409
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @isect_ray_aabb_initialize(%struct.IsectRayAABBData* %data, float* %ray_start, float* %ray_direction) #0 !dbg !5410 {
entry:
  %data.addr = alloca %struct.IsectRayAABBData*, align 8
  %ray_start.addr = alloca float*, align 8
  %ray_direction.addr = alloca float*, align 8
  store %struct.IsectRayAABBData* %data, %struct.IsectRayAABBData** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IsectRayAABBData** %data.addr, metadata !5422, metadata !DIExpression()), !dbg !5423
  store float* %ray_start, float** %ray_start.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ray_start.addr, metadata !5424, metadata !DIExpression()), !dbg !5425
  store float* %ray_direction, float** %ray_direction.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ray_direction.addr, metadata !5426, metadata !DIExpression()), !dbg !5427
  %0 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5428
  %ray_start1 = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %0, i32 0, i32 0, !dbg !5429
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %ray_start1, i64 0, i64 0, !dbg !5428
  %1 = load float*, float** %ray_start.addr, align 8, !dbg !5430
  call void @copy_v3_v3(float* %arraydecay, float* %1), !dbg !5431
  %2 = load float*, float** %ray_direction.addr, align 8, !dbg !5432
  %arrayidx = getelementptr inbounds float, float* %2, i64 0, !dbg !5432
  %3 = load float, float* %arrayidx, align 4, !dbg !5432
  %div = fdiv float 1.000000e+00, %3, !dbg !5433
  %4 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5434
  %ray_inv_dir = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %4, i32 0, i32 1, !dbg !5435
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %ray_inv_dir, i64 0, i64 0, !dbg !5434
  store float %div, float* %arrayidx2, align 4, !dbg !5436
  %5 = load float*, float** %ray_direction.addr, align 8, !dbg !5437
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !5437
  %6 = load float, float* %arrayidx3, align 4, !dbg !5437
  %div4 = fdiv float 1.000000e+00, %6, !dbg !5438
  %7 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5439
  %ray_inv_dir5 = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %7, i32 0, i32 1, !dbg !5440
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %ray_inv_dir5, i64 0, i64 1, !dbg !5439
  store float %div4, float* %arrayidx6, align 4, !dbg !5441
  %8 = load float*, float** %ray_direction.addr, align 8, !dbg !5442
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !5442
  %9 = load float, float* %arrayidx7, align 4, !dbg !5442
  %div8 = fdiv float 1.000000e+00, %9, !dbg !5443
  %10 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5444
  %ray_inv_dir9 = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %10, i32 0, i32 1, !dbg !5445
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %ray_inv_dir9, i64 0, i64 2, !dbg !5444
  store float %div8, float* %arrayidx10, align 4, !dbg !5446
  %11 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5447
  %ray_inv_dir11 = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %11, i32 0, i32 1, !dbg !5448
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %ray_inv_dir11, i64 0, i64 0, !dbg !5447
  %12 = load float, float* %arrayidx12, align 4, !dbg !5447
  %cmp = fcmp olt float %12, 0.000000e+00, !dbg !5449
  %conv = zext i1 %cmp to i32, !dbg !5449
  %13 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5450
  %sign = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %13, i32 0, i32 2, !dbg !5451
  %arrayidx13 = getelementptr inbounds [3 x i32], [3 x i32]* %sign, i64 0, i64 0, !dbg !5450
  store i32 %conv, i32* %arrayidx13, align 4, !dbg !5452
  %14 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5453
  %ray_inv_dir14 = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %14, i32 0, i32 1, !dbg !5454
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %ray_inv_dir14, i64 0, i64 1, !dbg !5453
  %15 = load float, float* %arrayidx15, align 4, !dbg !5453
  %cmp16 = fcmp olt float %15, 0.000000e+00, !dbg !5455
  %conv17 = zext i1 %cmp16 to i32, !dbg !5455
  %16 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5456
  %sign18 = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %16, i32 0, i32 2, !dbg !5457
  %arrayidx19 = getelementptr inbounds [3 x i32], [3 x i32]* %sign18, i64 0, i64 1, !dbg !5456
  store i32 %conv17, i32* %arrayidx19, align 4, !dbg !5458
  %17 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5459
  %ray_inv_dir20 = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %17, i32 0, i32 1, !dbg !5460
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %ray_inv_dir20, i64 0, i64 2, !dbg !5459
  %18 = load float, float* %arrayidx21, align 4, !dbg !5459
  %cmp22 = fcmp olt float %18, 0.000000e+00, !dbg !5461
  %conv23 = zext i1 %cmp22 to i32, !dbg !5461
  %19 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5462
  %sign24 = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %19, i32 0, i32 2, !dbg !5463
  %arrayidx25 = getelementptr inbounds [3 x i32], [3 x i32]* %sign24, i64 0, i64 2, !dbg !5462
  store i32 %conv23, i32* %arrayidx25, align 4, !dbg !5464
  ret void, !dbg !5465
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @isect_ray_aabb(%struct.IsectRayAABBData* %data, float* %bb_min, float* %bb_max, float* %tmin_out) #0 !dbg !5466 {
entry:
  %retval = alloca i8, align 1
  %data.addr = alloca %struct.IsectRayAABBData*, align 8
  %bb_min.addr = alloca float*, align 8
  %bb_max.addr = alloca float*, align 8
  %tmin_out.addr = alloca float*, align 8
  %bbox = alloca [2 x [3 x float]], align 16
  %tmin = alloca float, align 4
  %tmax = alloca float, align 4
  %tymin = alloca float, align 4
  %tymax = alloca float, align 4
  %tzmin = alloca float, align 4
  %tzmax = alloca float, align 4
  store %struct.IsectRayAABBData* %data, %struct.IsectRayAABBData** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IsectRayAABBData** %data.addr, metadata !5471, metadata !DIExpression()), !dbg !5472
  store float* %bb_min, float** %bb_min.addr, align 8
  call void @llvm.dbg.declare(metadata float** %bb_min.addr, metadata !5473, metadata !DIExpression()), !dbg !5474
  store float* %bb_max, float** %bb_max.addr, align 8
  call void @llvm.dbg.declare(metadata float** %bb_max.addr, metadata !5475, metadata !DIExpression()), !dbg !5476
  store float* %tmin_out, float** %tmin_out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tmin_out.addr, metadata !5477, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.declare(metadata [2 x [3 x float]]* %bbox, metadata !5479, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.declare(metadata float* %tmin, metadata !5483, metadata !DIExpression()), !dbg !5484
  call void @llvm.dbg.declare(metadata float* %tmax, metadata !5485, metadata !DIExpression()), !dbg !5486
  call void @llvm.dbg.declare(metadata float* %tymin, metadata !5487, metadata !DIExpression()), !dbg !5488
  call void @llvm.dbg.declare(metadata float* %tymax, metadata !5489, metadata !DIExpression()), !dbg !5490
  call void @llvm.dbg.declare(metadata float* %tzmin, metadata !5491, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.declare(metadata float* %tzmax, metadata !5493, metadata !DIExpression()), !dbg !5494
  %arrayidx = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %bbox, i64 0, i64 0, !dbg !5495
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !5495
  %0 = load float*, float** %bb_min.addr, align 8, !dbg !5496
  call void @copy_v3_v3(float* %arraydecay, float* %0), !dbg !5497
  %arrayidx1 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %bbox, i64 0, i64 1, !dbg !5498
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx1, i64 0, i64 0, !dbg !5498
  %1 = load float*, float** %bb_max.addr, align 8, !dbg !5499
  call void @copy_v3_v3(float* %arraydecay2, float* %1), !dbg !5500
  %2 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5501
  %sign = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %2, i32 0, i32 2, !dbg !5502
  %arrayidx3 = getelementptr inbounds [3 x i32], [3 x i32]* %sign, i64 0, i64 0, !dbg !5501
  %3 = load i32, i32* %arrayidx3, align 4, !dbg !5501
  %idxprom = sext i32 %3 to i64, !dbg !5503
  %arrayidx4 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %bbox, i64 0, i64 %idxprom, !dbg !5503
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx4, i64 0, i64 0, !dbg !5503
  %4 = load float, float* %arrayidx5, align 4, !dbg !5503
  %5 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5504
  %ray_start = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %5, i32 0, i32 0, !dbg !5505
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %ray_start, i64 0, i64 0, !dbg !5504
  %6 = load float, float* %arrayidx6, align 4, !dbg !5504
  %sub = fsub float %4, %6, !dbg !5506
  %7 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5507
  %ray_inv_dir = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %7, i32 0, i32 1, !dbg !5508
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %ray_inv_dir, i64 0, i64 0, !dbg !5507
  %8 = load float, float* %arrayidx7, align 4, !dbg !5507
  %mul = fmul float %sub, %8, !dbg !5509
  store float %mul, float* %tmin, align 4, !dbg !5510
  %9 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5511
  %sign8 = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %9, i32 0, i32 2, !dbg !5512
  %arrayidx9 = getelementptr inbounds [3 x i32], [3 x i32]* %sign8, i64 0, i64 0, !dbg !5511
  %10 = load i32, i32* %arrayidx9, align 4, !dbg !5511
  %sub10 = sub nsw i32 1, %10, !dbg !5513
  %idxprom11 = sext i32 %sub10 to i64, !dbg !5514
  %arrayidx12 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %bbox, i64 0, i64 %idxprom11, !dbg !5514
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx12, i64 0, i64 0, !dbg !5514
  %11 = load float, float* %arrayidx13, align 4, !dbg !5514
  %12 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5515
  %ray_start14 = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %12, i32 0, i32 0, !dbg !5516
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %ray_start14, i64 0, i64 0, !dbg !5515
  %13 = load float, float* %arrayidx15, align 4, !dbg !5515
  %sub16 = fsub float %11, %13, !dbg !5517
  %14 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5518
  %ray_inv_dir17 = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %14, i32 0, i32 1, !dbg !5519
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %ray_inv_dir17, i64 0, i64 0, !dbg !5518
  %15 = load float, float* %arrayidx18, align 4, !dbg !5518
  %mul19 = fmul float %sub16, %15, !dbg !5520
  store float %mul19, float* %tmax, align 4, !dbg !5521
  %16 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5522
  %sign20 = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %16, i32 0, i32 2, !dbg !5523
  %arrayidx21 = getelementptr inbounds [3 x i32], [3 x i32]* %sign20, i64 0, i64 1, !dbg !5522
  %17 = load i32, i32* %arrayidx21, align 4, !dbg !5522
  %idxprom22 = sext i32 %17 to i64, !dbg !5524
  %arrayidx23 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %bbox, i64 0, i64 %idxprom22, !dbg !5524
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx23, i64 0, i64 1, !dbg !5524
  %18 = load float, float* %arrayidx24, align 4, !dbg !5524
  %19 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5525
  %ray_start25 = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %19, i32 0, i32 0, !dbg !5526
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %ray_start25, i64 0, i64 1, !dbg !5525
  %20 = load float, float* %arrayidx26, align 4, !dbg !5525
  %sub27 = fsub float %18, %20, !dbg !5527
  %21 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5528
  %ray_inv_dir28 = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %21, i32 0, i32 1, !dbg !5529
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %ray_inv_dir28, i64 0, i64 1, !dbg !5528
  %22 = load float, float* %arrayidx29, align 4, !dbg !5528
  %mul30 = fmul float %sub27, %22, !dbg !5530
  store float %mul30, float* %tymin, align 4, !dbg !5531
  %23 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5532
  %sign31 = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %23, i32 0, i32 2, !dbg !5533
  %arrayidx32 = getelementptr inbounds [3 x i32], [3 x i32]* %sign31, i64 0, i64 1, !dbg !5532
  %24 = load i32, i32* %arrayidx32, align 4, !dbg !5532
  %sub33 = sub nsw i32 1, %24, !dbg !5534
  %idxprom34 = sext i32 %sub33 to i64, !dbg !5535
  %arrayidx35 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %bbox, i64 0, i64 %idxprom34, !dbg !5535
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx35, i64 0, i64 1, !dbg !5535
  %25 = load float, float* %arrayidx36, align 4, !dbg !5535
  %26 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5536
  %ray_start37 = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %26, i32 0, i32 0, !dbg !5537
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %ray_start37, i64 0, i64 1, !dbg !5536
  %27 = load float, float* %arrayidx38, align 4, !dbg !5536
  %sub39 = fsub float %25, %27, !dbg !5538
  %28 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5539
  %ray_inv_dir40 = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %28, i32 0, i32 1, !dbg !5540
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %ray_inv_dir40, i64 0, i64 1, !dbg !5539
  %29 = load float, float* %arrayidx41, align 4, !dbg !5539
  %mul42 = fmul float %sub39, %29, !dbg !5541
  store float %mul42, float* %tymax, align 4, !dbg !5542
  %30 = load float, float* %tmin, align 4, !dbg !5543
  %31 = load float, float* %tymax, align 4, !dbg !5545
  %cmp = fcmp ogt float %30, %31, !dbg !5546
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5547

lor.lhs.false:                                    ; preds = %entry
  %32 = load float, float* %tymin, align 4, !dbg !5548
  %33 = load float, float* %tmax, align 4, !dbg !5549
  %cmp43 = fcmp ogt float %32, %33, !dbg !5550
  br i1 %cmp43, label %if.then, label %if.end, !dbg !5551

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8 0, i8* %retval, align 1, !dbg !5552
  br label %return, !dbg !5552

if.end:                                           ; preds = %lor.lhs.false
  %34 = load float, float* %tymin, align 4, !dbg !5553
  %35 = load float, float* %tmin, align 4, !dbg !5555
  %cmp44 = fcmp ogt float %34, %35, !dbg !5556
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !5557

if.then45:                                        ; preds = %if.end
  %36 = load float, float* %tymin, align 4, !dbg !5558
  store float %36, float* %tmin, align 4, !dbg !5559
  br label %if.end46, !dbg !5560

if.end46:                                         ; preds = %if.then45, %if.end
  %37 = load float, float* %tymax, align 4, !dbg !5561
  %38 = load float, float* %tmax, align 4, !dbg !5563
  %cmp47 = fcmp olt float %37, %38, !dbg !5564
  br i1 %cmp47, label %if.then48, label %if.end49, !dbg !5565

if.then48:                                        ; preds = %if.end46
  %39 = load float, float* %tymax, align 4, !dbg !5566
  store float %39, float* %tmax, align 4, !dbg !5567
  br label %if.end49, !dbg !5568

if.end49:                                         ; preds = %if.then48, %if.end46
  %40 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5569
  %sign50 = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %40, i32 0, i32 2, !dbg !5570
  %arrayidx51 = getelementptr inbounds [3 x i32], [3 x i32]* %sign50, i64 0, i64 2, !dbg !5569
  %41 = load i32, i32* %arrayidx51, align 4, !dbg !5569
  %idxprom52 = sext i32 %41 to i64, !dbg !5571
  %arrayidx53 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %bbox, i64 0, i64 %idxprom52, !dbg !5571
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx53, i64 0, i64 2, !dbg !5571
  %42 = load float, float* %arrayidx54, align 4, !dbg !5571
  %43 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5572
  %ray_start55 = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %43, i32 0, i32 0, !dbg !5573
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %ray_start55, i64 0, i64 2, !dbg !5572
  %44 = load float, float* %arrayidx56, align 4, !dbg !5572
  %sub57 = fsub float %42, %44, !dbg !5574
  %45 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5575
  %ray_inv_dir58 = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %45, i32 0, i32 1, !dbg !5576
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %ray_inv_dir58, i64 0, i64 2, !dbg !5575
  %46 = load float, float* %arrayidx59, align 4, !dbg !5575
  %mul60 = fmul float %sub57, %46, !dbg !5577
  store float %mul60, float* %tzmin, align 4, !dbg !5578
  %47 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5579
  %sign61 = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %47, i32 0, i32 2, !dbg !5580
  %arrayidx62 = getelementptr inbounds [3 x i32], [3 x i32]* %sign61, i64 0, i64 2, !dbg !5579
  %48 = load i32, i32* %arrayidx62, align 4, !dbg !5579
  %sub63 = sub nsw i32 1, %48, !dbg !5581
  %idxprom64 = sext i32 %sub63 to i64, !dbg !5582
  %arrayidx65 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %bbox, i64 0, i64 %idxprom64, !dbg !5582
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx65, i64 0, i64 2, !dbg !5582
  %49 = load float, float* %arrayidx66, align 4, !dbg !5582
  %50 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5583
  %ray_start67 = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %50, i32 0, i32 0, !dbg !5584
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %ray_start67, i64 0, i64 2, !dbg !5583
  %51 = load float, float* %arrayidx68, align 4, !dbg !5583
  %sub69 = fsub float %49, %51, !dbg !5585
  %52 = load %struct.IsectRayAABBData*, %struct.IsectRayAABBData** %data.addr, align 8, !dbg !5586
  %ray_inv_dir70 = getelementptr inbounds %struct.IsectRayAABBData, %struct.IsectRayAABBData* %52, i32 0, i32 1, !dbg !5587
  %arrayidx71 = getelementptr inbounds [3 x float], [3 x float]* %ray_inv_dir70, i64 0, i64 2, !dbg !5586
  %53 = load float, float* %arrayidx71, align 4, !dbg !5586
  %mul72 = fmul float %sub69, %53, !dbg !5588
  store float %mul72, float* %tzmax, align 4, !dbg !5589
  %54 = load float, float* %tmin, align 4, !dbg !5590
  %55 = load float, float* %tzmax, align 4, !dbg !5592
  %cmp73 = fcmp ogt float %54, %55, !dbg !5593
  br i1 %cmp73, label %if.then76, label %lor.lhs.false74, !dbg !5594

lor.lhs.false74:                                  ; preds = %if.end49
  %56 = load float, float* %tzmin, align 4, !dbg !5595
  %57 = load float, float* %tmax, align 4, !dbg !5596
  %cmp75 = fcmp ogt float %56, %57, !dbg !5597
  br i1 %cmp75, label %if.then76, label %if.end77, !dbg !5598

if.then76:                                        ; preds = %lor.lhs.false74, %if.end49
  store i8 0, i8* %retval, align 1, !dbg !5599
  br label %return, !dbg !5599

if.end77:                                         ; preds = %lor.lhs.false74
  %58 = load float, float* %tzmin, align 4, !dbg !5600
  %59 = load float, float* %tmin, align 4, !dbg !5602
  %cmp78 = fcmp ogt float %58, %59, !dbg !5603
  br i1 %cmp78, label %if.then79, label %if.end80, !dbg !5604

if.then79:                                        ; preds = %if.end77
  %60 = load float, float* %tzmin, align 4, !dbg !5605
  store float %60, float* %tmin, align 4, !dbg !5606
  br label %if.end80, !dbg !5607

if.end80:                                         ; preds = %if.then79, %if.end77
  %61 = load float*, float** %tmin_out.addr, align 8, !dbg !5608
  %tobool = icmp ne float* %61, null, !dbg !5608
  br i1 %tobool, label %if.then81, label %if.end82, !dbg !5610

if.then81:                                        ; preds = %if.end80
  %62 = load float, float* %tmin, align 4, !dbg !5611
  %63 = load float*, float** %tmin_out.addr, align 8, !dbg !5612
  store float %62, float* %63, align 4, !dbg !5613
  br label %if.end82, !dbg !5614

if.end82:                                         ; preds = %if.then81, %if.end80
  store i8 1, i8* %retval, align 1, !dbg !5615
  br label %return, !dbg !5615

return:                                           ; preds = %if.end82, %if.then76, %if.then
  %64 = load i8, i8* %retval, align 1, !dbg !5616
  ret i8 %64, !dbg !5616
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @line_point_factor_v3(float* %p, float* %l1, float* %l2) #0 !dbg !5617 {
entry:
  %p.addr = alloca float*, align 8
  %l1.addr = alloca float*, align 8
  %l2.addr = alloca float*, align 8
  %h = alloca [3 x float], align 4
  %u = alloca [3 x float], align 4
  %dot = alloca float, align 4
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !5618, metadata !DIExpression()), !dbg !5619
  store float* %l1, float** %l1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1.addr, metadata !5620, metadata !DIExpression()), !dbg !5621
  store float* %l2, float** %l2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2.addr, metadata !5622, metadata !DIExpression()), !dbg !5623
  call void @llvm.dbg.declare(metadata [3 x float]* %h, metadata !5624, metadata !DIExpression()), !dbg !5625
  call void @llvm.dbg.declare(metadata [3 x float]* %u, metadata !5626, metadata !DIExpression()), !dbg !5627
  call void @llvm.dbg.declare(metadata float* %dot, metadata !5628, metadata !DIExpression()), !dbg !5629
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %u, i64 0, i64 0, !dbg !5630
  %0 = load float*, float** %l2.addr, align 8, !dbg !5631
  %1 = load float*, float** %l1.addr, align 8, !dbg !5632
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !5633
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !5634
  %2 = load float*, float** %p.addr, align 8, !dbg !5635
  %3 = load float*, float** %l1.addr, align 8, !dbg !5636
  call void @sub_v3_v3v3(float* %arraydecay1, float* %2, float* %3), !dbg !5637
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %u, i64 0, i64 0, !dbg !5638
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %u, i64 0, i64 0, !dbg !5639
  %call = call float @dot_v3v3(float* %arraydecay2, float* %arraydecay3), !dbg !5640
  store float %call, float* %dot, align 4, !dbg !5641
  %4 = load float, float* %dot, align 4, !dbg !5642
  %cmp = fcmp une float %4, 0.000000e+00, !dbg !5643
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5644

cond.true:                                        ; preds = %entry
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %u, i64 0, i64 0, !dbg !5645
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !5646
  %call6 = call float @dot_v3v3(float* %arraydecay4, float* %arraydecay5), !dbg !5647
  %5 = load float, float* %dot, align 4, !dbg !5648
  %div = fdiv float %call6, %5, !dbg !5649
  br label %cond.end, !dbg !5644

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5644

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %div, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !5644
  ret float %cond, !dbg !5650
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @line_point_factor_v2(float* %p, float* %l1, float* %l2) #0 !dbg !5651 {
entry:
  %p.addr = alloca float*, align 8
  %l1.addr = alloca float*, align 8
  %l2.addr = alloca float*, align 8
  %h = alloca [2 x float], align 4
  %u = alloca [2 x float], align 4
  %dot = alloca float, align 4
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !5652, metadata !DIExpression()), !dbg !5653
  store float* %l1, float** %l1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1.addr, metadata !5654, metadata !DIExpression()), !dbg !5655
  store float* %l2, float** %l2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2.addr, metadata !5656, metadata !DIExpression()), !dbg !5657
  call void @llvm.dbg.declare(metadata [2 x float]* %h, metadata !5658, metadata !DIExpression()), !dbg !5659
  call void @llvm.dbg.declare(metadata [2 x float]* %u, metadata !5660, metadata !DIExpression()), !dbg !5661
  call void @llvm.dbg.declare(metadata float* %dot, metadata !5662, metadata !DIExpression()), !dbg !5663
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %u, i64 0, i64 0, !dbg !5664
  %0 = load float*, float** %l2.addr, align 8, !dbg !5665
  %1 = load float*, float** %l1.addr, align 8, !dbg !5666
  call void @sub_v2_v2v2(float* %arraydecay, float* %0, float* %1), !dbg !5667
  %arraydecay1 = getelementptr inbounds [2 x float], [2 x float]* %h, i64 0, i64 0, !dbg !5668
  %2 = load float*, float** %p.addr, align 8, !dbg !5669
  %3 = load float*, float** %l1.addr, align 8, !dbg !5670
  call void @sub_v2_v2v2(float* %arraydecay1, float* %2, float* %3), !dbg !5671
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %u, i64 0, i64 0, !dbg !5672
  %arraydecay3 = getelementptr inbounds [2 x float], [2 x float]* %u, i64 0, i64 0, !dbg !5673
  %call = call float @dot_v2v2(float* %arraydecay2, float* %arraydecay3), !dbg !5674
  store float %call, float* %dot, align 4, !dbg !5675
  %4 = load float, float* %dot, align 4, !dbg !5676
  %cmp = fcmp une float %4, 0.000000e+00, !dbg !5677
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5678

cond.true:                                        ; preds = %entry
  %arraydecay4 = getelementptr inbounds [2 x float], [2 x float]* %u, i64 0, i64 0, !dbg !5679
  %arraydecay5 = getelementptr inbounds [2 x float], [2 x float]* %h, i64 0, i64 0, !dbg !5680
  %call6 = call float @dot_v2v2(float* %arraydecay4, float* %arraydecay5), !dbg !5681
  %5 = load float, float* %dot, align 4, !dbg !5682
  %div = fdiv float %call6, %5, !dbg !5683
  br label %cond.end, !dbg !5678

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5678

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %div, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !5678
  ret float %cond, !dbg !5684
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @line_plane_factor_v3(float* %plane_co, float* %plane_no, float* %l1, float* %l2) #0 !dbg !5685 {
entry:
  %plane_co.addr = alloca float*, align 8
  %plane_no.addr = alloca float*, align 8
  %l1.addr = alloca float*, align 8
  %l2.addr = alloca float*, align 8
  %u = alloca [3 x float], align 4
  %h = alloca [3 x float], align 4
  %dot = alloca float, align 4
  store float* %plane_co, float** %plane_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane_co.addr, metadata !5686, metadata !DIExpression()), !dbg !5687
  store float* %plane_no, float** %plane_no.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane_no.addr, metadata !5688, metadata !DIExpression()), !dbg !5689
  store float* %l1, float** %l1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1.addr, metadata !5690, metadata !DIExpression()), !dbg !5691
  store float* %l2, float** %l2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2.addr, metadata !5692, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.declare(metadata [3 x float]* %u, metadata !5694, metadata !DIExpression()), !dbg !5695
  call void @llvm.dbg.declare(metadata [3 x float]* %h, metadata !5696, metadata !DIExpression()), !dbg !5697
  call void @llvm.dbg.declare(metadata float* %dot, metadata !5698, metadata !DIExpression()), !dbg !5699
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %u, i64 0, i64 0, !dbg !5700
  %0 = load float*, float** %l2.addr, align 8, !dbg !5701
  %1 = load float*, float** %l1.addr, align 8, !dbg !5702
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !5703
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !5704
  %2 = load float*, float** %l1.addr, align 8, !dbg !5705
  %3 = load float*, float** %plane_co.addr, align 8, !dbg !5706
  call void @sub_v3_v3v3(float* %arraydecay1, float* %2, float* %3), !dbg !5707
  %4 = load float*, float** %plane_no.addr, align 8, !dbg !5708
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %u, i64 0, i64 0, !dbg !5709
  %call = call float @dot_v3v3(float* %4, float* %arraydecay2), !dbg !5710
  store float %call, float* %dot, align 4, !dbg !5711
  %5 = load float, float* %dot, align 4, !dbg !5712
  %cmp = fcmp une float %5, 0.000000e+00, !dbg !5713
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5714

cond.true:                                        ; preds = %entry
  %6 = load float*, float** %plane_no.addr, align 8, !dbg !5715
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !5716
  %call4 = call float @dot_v3v3(float* %6, float* %arraydecay3), !dbg !5717
  %fneg = fneg float %call4, !dbg !5718
  %7 = load float, float* %dot, align 4, !dbg !5719
  %div = fdiv float %fneg, %7, !dbg !5720
  br label %cond.end, !dbg !5714

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5714

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %div, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !5714
  ret float %cond, !dbg !5721
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @limit_dist_v3(float* %v1, float* %v2, float %dist) #0 !dbg !5722 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %dist.addr = alloca float, align 4
  %dist_old = alloca float, align 4
  %v1_old = alloca [3 x float], align 4
  %v2_old = alloca [3 x float], align 4
  %fac = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !5725, metadata !DIExpression()), !dbg !5726
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !5727, metadata !DIExpression()), !dbg !5728
  store float %dist, float* %dist.addr, align 4
  call void @llvm.dbg.declare(metadata float* %dist.addr, metadata !5729, metadata !DIExpression()), !dbg !5730
  call void @llvm.dbg.declare(metadata float* %dist_old, metadata !5731, metadata !DIExpression()), !dbg !5732
  %0 = load float*, float** %v1.addr, align 8, !dbg !5733
  %1 = load float*, float** %v2.addr, align 8, !dbg !5734
  %call = call float @len_v3v3(float* %0, float* %1), !dbg !5735
  store float %call, float* %dist_old, align 4, !dbg !5732
  %2 = load float, float* %dist_old, align 4, !dbg !5736
  %3 = load float, float* %dist.addr, align 4, !dbg !5738
  %cmp = fcmp ogt float %2, %3, !dbg !5739
  br i1 %cmp, label %if.then, label %if.end, !dbg !5740

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %v1_old, metadata !5741, metadata !DIExpression()), !dbg !5743
  call void @llvm.dbg.declare(metadata [3 x float]* %v2_old, metadata !5744, metadata !DIExpression()), !dbg !5745
  call void @llvm.dbg.declare(metadata float* %fac, metadata !5746, metadata !DIExpression()), !dbg !5747
  %4 = load float, float* %dist.addr, align 4, !dbg !5748
  %5 = load float, float* %dist_old, align 4, !dbg !5749
  %div = fdiv float %4, %5, !dbg !5750
  %mul = fmul float %div, 5.000000e-01, !dbg !5751
  store float %mul, float* %fac, align 4, !dbg !5747
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %v1_old, i64 0, i64 0, !dbg !5752
  %6 = load float*, float** %v1.addr, align 8, !dbg !5753
  call void @copy_v3_v3(float* %arraydecay, float* %6), !dbg !5754
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %v2_old, i64 0, i64 0, !dbg !5755
  %7 = load float*, float** %v2.addr, align 8, !dbg !5756
  call void @copy_v3_v3(float* %arraydecay1, float* %7), !dbg !5757
  %8 = load float*, float** %v1.addr, align 8, !dbg !5758
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %v1_old, i64 0, i64 0, !dbg !5759
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %v2_old, i64 0, i64 0, !dbg !5760
  %9 = load float, float* %fac, align 4, !dbg !5761
  %sub = fsub float 5.000000e-01, %9, !dbg !5762
  call void @interp_v3_v3v3(float* %8, float* %arraydecay2, float* %arraydecay3, float %sub), !dbg !5763
  %10 = load float*, float** %v2.addr, align 8, !dbg !5764
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %v1_old, i64 0, i64 0, !dbg !5765
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %v2_old, i64 0, i64 0, !dbg !5766
  %11 = load float, float* %fac, align 4, !dbg !5767
  %add = fadd float 5.000000e-01, %11, !dbg !5768
  call void @interp_v3_v3v3(float* %10, float* %arraydecay4, float* %arraydecay5, float %add), !dbg !5769
  br label %if.end, !dbg !5770

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5771
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3v3(float* %a, float* %b) #0 !dbg !5772 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5773, metadata !DIExpression()), !dbg !5774
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5775, metadata !DIExpression()), !dbg !5776
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !5777, metadata !DIExpression()), !dbg !5778
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !5779
  %0 = load float*, float** %b.addr, align 8, !dbg !5780
  %1 = load float*, float** %a.addr, align 8, !dbg !5781
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !5782
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !5783
  %call = call float @len_v3(float* %arraydecay1), !dbg !5784
  ret float %call, !dbg !5785
}

declare dso_local void @interp_v3_v3v3(float*, float*, float*, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @isect_point_tri_v2_int(i32 %x1, i32 %y1, i32 %x2, i32 %y2, i32 %a, i32 %b) #0 !dbg !5786 {
entry:
  %x1.addr = alloca i32, align 4
  %y1.addr = alloca i32, align 4
  %x2.addr = alloca i32, align 4
  %y2.addr = alloca i32, align 4
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %v1 = alloca [2 x float], align 4
  %v2 = alloca [2 x float], align 4
  %v3 = alloca [2 x float], align 4
  %p = alloca [2 x float], align 4
  store i32 %x1, i32* %x1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x1.addr, metadata !5789, metadata !DIExpression()), !dbg !5790
  store i32 %y1, i32* %y1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y1.addr, metadata !5791, metadata !DIExpression()), !dbg !5792
  store i32 %x2, i32* %x2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x2.addr, metadata !5793, metadata !DIExpression()), !dbg !5794
  store i32 %y2, i32* %y2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y2.addr, metadata !5795, metadata !DIExpression()), !dbg !5796
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !5797, metadata !DIExpression()), !dbg !5798
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !5799, metadata !DIExpression()), !dbg !5800
  call void @llvm.dbg.declare(metadata [2 x float]* %v1, metadata !5801, metadata !DIExpression()), !dbg !5802
  call void @llvm.dbg.declare(metadata [2 x float]* %v2, metadata !5803, metadata !DIExpression()), !dbg !5804
  call void @llvm.dbg.declare(metadata [2 x float]* %v3, metadata !5805, metadata !DIExpression()), !dbg !5806
  call void @llvm.dbg.declare(metadata [2 x float]* %p, metadata !5807, metadata !DIExpression()), !dbg !5808
  %0 = load i32, i32* %x1.addr, align 4, !dbg !5809
  %conv = sitofp i32 %0 to float, !dbg !5810
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %v1, i64 0, i64 0, !dbg !5811
  store float %conv, float* %arrayidx, align 4, !dbg !5812
  %1 = load i32, i32* %y1.addr, align 4, !dbg !5813
  %conv1 = sitofp i32 %1 to float, !dbg !5814
  %arrayidx2 = getelementptr inbounds [2 x float], [2 x float]* %v1, i64 0, i64 1, !dbg !5815
  store float %conv1, float* %arrayidx2, align 4, !dbg !5816
  %2 = load i32, i32* %x1.addr, align 4, !dbg !5817
  %conv3 = sitofp i32 %2 to float, !dbg !5818
  %arrayidx4 = getelementptr inbounds [2 x float], [2 x float]* %v2, i64 0, i64 0, !dbg !5819
  store float %conv3, float* %arrayidx4, align 4, !dbg !5820
  %3 = load i32, i32* %y2.addr, align 4, !dbg !5821
  %conv5 = sitofp i32 %3 to float, !dbg !5822
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %v2, i64 0, i64 1, !dbg !5823
  store float %conv5, float* %arrayidx6, align 4, !dbg !5824
  %4 = load i32, i32* %x2.addr, align 4, !dbg !5825
  %conv7 = sitofp i32 %4 to float, !dbg !5826
  %arrayidx8 = getelementptr inbounds [2 x float], [2 x float]* %v3, i64 0, i64 0, !dbg !5827
  store float %conv7, float* %arrayidx8, align 4, !dbg !5828
  %5 = load i32, i32* %y1.addr, align 4, !dbg !5829
  %conv9 = sitofp i32 %5 to float, !dbg !5830
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %v3, i64 0, i64 1, !dbg !5831
  store float %conv9, float* %arrayidx10, align 4, !dbg !5832
  %6 = load i32, i32* %a.addr, align 4, !dbg !5833
  %conv11 = sitofp i32 %6 to float, !dbg !5834
  %arrayidx12 = getelementptr inbounds [2 x float], [2 x float]* %p, i64 0, i64 0, !dbg !5835
  store float %conv11, float* %arrayidx12, align 4, !dbg !5836
  %7 = load i32, i32* %b.addr, align 4, !dbg !5837
  %conv13 = sitofp i32 %7 to float, !dbg !5838
  %arrayidx14 = getelementptr inbounds [2 x float], [2 x float]* %p, i64 0, i64 1, !dbg !5839
  store float %conv13, float* %arrayidx14, align 4, !dbg !5840
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %p, i64 0, i64 0, !dbg !5841
  %arraydecay15 = getelementptr inbounds [2 x float], [2 x float]* %v1, i64 0, i64 0, !dbg !5842
  %arraydecay16 = getelementptr inbounds [2 x float], [2 x float]* %v2, i64 0, i64 0, !dbg !5843
  %arraydecay17 = getelementptr inbounds [2 x float], [2 x float]* %v3, i64 0, i64 0, !dbg !5844
  %call = call i32 @isect_point_tri_v2(float* %arraydecay, float* %arraydecay15, float* %arraydecay16, float* %arraydecay17), !dbg !5845
  ret i32 %call, !dbg !5846
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @isect_point_tri_prism_v3(float* %p, float* %v1, float* %v2, float* %v3) #0 !dbg !5847 {
entry:
  %retval = alloca i8, align 1
  %p.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !5848, metadata !DIExpression()), !dbg !5849
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !5850, metadata !DIExpression()), !dbg !5851
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !5852, metadata !DIExpression()), !dbg !5853
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !5854, metadata !DIExpression()), !dbg !5855
  %0 = load float*, float** %p.addr, align 8, !dbg !5856
  %1 = load float*, float** %v1.addr, align 8, !dbg !5858
  %2 = load float*, float** %v2.addr, align 8, !dbg !5859
  %3 = load float*, float** %v3.addr, align 8, !dbg !5860
  %call = call zeroext i8 @point_in_slice(float* %0, float* %1, float* %2, float* %3), !dbg !5861
  %tobool = icmp ne i8 %call, 0, !dbg !5861
  br i1 %tobool, label %if.end, label %if.then, !dbg !5862

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !5863
  br label %return, !dbg !5863

if.end:                                           ; preds = %entry
  %4 = load float*, float** %p.addr, align 8, !dbg !5864
  %5 = load float*, float** %v2.addr, align 8, !dbg !5866
  %6 = load float*, float** %v3.addr, align 8, !dbg !5867
  %7 = load float*, float** %v1.addr, align 8, !dbg !5868
  %call1 = call zeroext i8 @point_in_slice(float* %4, float* %5, float* %6, float* %7), !dbg !5869
  %tobool2 = icmp ne i8 %call1, 0, !dbg !5869
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !5870

if.then3:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !5871
  br label %return, !dbg !5871

if.end4:                                          ; preds = %if.end
  %8 = load float*, float** %p.addr, align 8, !dbg !5872
  %9 = load float*, float** %v3.addr, align 8, !dbg !5874
  %10 = load float*, float** %v1.addr, align 8, !dbg !5875
  %11 = load float*, float** %v2.addr, align 8, !dbg !5876
  %call5 = call zeroext i8 @point_in_slice(float* %8, float* %9, float* %10, float* %11), !dbg !5877
  %tobool6 = icmp ne i8 %call5, 0, !dbg !5877
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !5878

if.then7:                                         ; preds = %if.end4
  store i8 0, i8* %retval, align 1, !dbg !5879
  br label %return, !dbg !5879

if.end8:                                          ; preds = %if.end4
  store i8 1, i8* %retval, align 1, !dbg !5880
  br label %return, !dbg !5880

return:                                           ; preds = %if.end8, %if.then7, %if.then3, %if.then
  %12 = load i8, i8* %retval, align 1, !dbg !5881
  ret i8 %12, !dbg !5881
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @point_in_slice(float* %p, float* %v1, float* %l1, float* %l2) #0 !dbg !5882 {
entry:
  %p.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %l1.addr = alloca float*, align 8
  %l2.addr = alloca float*, align 8
  %h = alloca float, align 4
  %rp = alloca [3 x float], align 4
  %cp = alloca [3 x float], align 4
  %q = alloca [3 x float], align 4
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !5883, metadata !DIExpression()), !dbg !5884
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !5885, metadata !DIExpression()), !dbg !5886
  store float* %l1, float** %l1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1.addr, metadata !5887, metadata !DIExpression()), !dbg !5888
  store float* %l2, float** %l2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2.addr, metadata !5889, metadata !DIExpression()), !dbg !5890
  call void @llvm.dbg.declare(metadata float* %h, metadata !5891, metadata !DIExpression()), !dbg !5892
  call void @llvm.dbg.declare(metadata [3 x float]* %rp, metadata !5893, metadata !DIExpression()), !dbg !5894
  call void @llvm.dbg.declare(metadata [3 x float]* %cp, metadata !5895, metadata !DIExpression()), !dbg !5896
  call void @llvm.dbg.declare(metadata [3 x float]* %q, metadata !5897, metadata !DIExpression()), !dbg !5898
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %cp, i64 0, i64 0, !dbg !5899
  %0 = load float*, float** %v1.addr, align 8, !dbg !5900
  %1 = load float*, float** %l1.addr, align 8, !dbg !5901
  %2 = load float*, float** %l2.addr, align 8, !dbg !5902
  %call = call float @closest_to_line_v3(float* %arraydecay, float* %0, float* %1, float* %2), !dbg !5903
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %q, i64 0, i64 0, !dbg !5904
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %cp, i64 0, i64 0, !dbg !5905
  %3 = load float*, float** %v1.addr, align 8, !dbg !5906
  call void @sub_v3_v3v3(float* %arraydecay1, float* %arraydecay2, float* %3), !dbg !5907
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %rp, i64 0, i64 0, !dbg !5908
  %4 = load float*, float** %p.addr, align 8, !dbg !5909
  %5 = load float*, float** %v1.addr, align 8, !dbg !5910
  call void @sub_v3_v3v3(float* %arraydecay3, float* %4, float* %5), !dbg !5911
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %q, i64 0, i64 0, !dbg !5912
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %rp, i64 0, i64 0, !dbg !5913
  %call6 = call float @dot_v3v3(float* %arraydecay4, float* %arraydecay5), !dbg !5914
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %q, i64 0, i64 0, !dbg !5915
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %q, i64 0, i64 0, !dbg !5916
  %call9 = call float @dot_v3v3(float* %arraydecay7, float* %arraydecay8), !dbg !5917
  %div = fdiv float %call6, %call9, !dbg !5918
  store float %div, float* %h, align 4, !dbg !5919
  %6 = load float, float* %h, align 4, !dbg !5920
  %cmp = fcmp olt float %6, 0.000000e+00, !dbg !5921
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !5922

lor.rhs:                                          ; preds = %entry
  %7 = load float, float* %h, align 4, !dbg !5923
  %cmp10 = fcmp ogt float %7, 1.000000e+00, !dbg !5924
  br label %lor.end, !dbg !5922

lor.end:                                          ; preds = %lor.rhs, %entry
  %8 = phi i1 [ true, %entry ], [ %cmp10, %lor.rhs ]
  %9 = zext i1 %8 to i64, !dbg !5925
  %cond = select i1 %8, i32 0, i32 1, !dbg !5925
  %conv = trunc i32 %cond to i8, !dbg !5925
  ret i8 %conv, !dbg !5926
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @isect_point_tri_v3(float* %p, float* %v1, float* %v2, float* %v3, float* %r_vi) #0 !dbg !5927 {
entry:
  %retval = alloca i8, align 1
  %p.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %r_vi.addr = alloca float*, align 8
  %no = alloca [3 x float], align 4
  %n1 = alloca [3 x float], align 4
  %n2 = alloca [3 x float], align 4
  %plane = alloca [4 x float], align 16
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !5930, metadata !DIExpression()), !dbg !5931
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !5932, metadata !DIExpression()), !dbg !5933
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !5934, metadata !DIExpression()), !dbg !5935
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !5936, metadata !DIExpression()), !dbg !5937
  store float* %r_vi, float** %r_vi.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_vi.addr, metadata !5938, metadata !DIExpression()), !dbg !5939
  %0 = load float*, float** %p.addr, align 8, !dbg !5940
  %1 = load float*, float** %v1.addr, align 8, !dbg !5942
  %2 = load float*, float** %v2.addr, align 8, !dbg !5943
  %3 = load float*, float** %v3.addr, align 8, !dbg !5944
  %call = call zeroext i8 @isect_point_tri_prism_v3(float* %0, float* %1, float* %2, float* %3), !dbg !5945
  %tobool = icmp ne i8 %call, 0, !dbg !5945
  br i1 %tobool, label %if.then, label %if.else11, !dbg !5946

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %no, metadata !5947, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.declare(metadata [3 x float]* %n1, metadata !5950, metadata !DIExpression()), !dbg !5951
  call void @llvm.dbg.declare(metadata [3 x float]* %n2, metadata !5952, metadata !DIExpression()), !dbg !5953
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !5954
  %4 = load float*, float** %v1.addr, align 8, !dbg !5955
  %5 = load float*, float** %v2.addr, align 8, !dbg !5956
  call void @sub_v3_v3v3(float* %arraydecay, float* %4, float* %5), !dbg !5957
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 0, !dbg !5958
  %6 = load float*, float** %v2.addr, align 8, !dbg !5959
  %7 = load float*, float** %v3.addr, align 8, !dbg !5960
  call void @sub_v3_v3v3(float* %arraydecay1, float* %6, float* %7), !dbg !5961
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5962
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !5963
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 0, !dbg !5964
  call void @cross_v3_v3v3(float* %arraydecay2, float* %arraydecay3, float* %arraydecay4), !dbg !5965
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5966
  %call6 = call float @len_squared_v3(float* %arraydecay5), !dbg !5966
  %cmp = fcmp une float %call6, 0.000000e+00, !dbg !5966
  br i1 %cmp, label %if.then7, label %if.else, !dbg !5968

if.then7:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata [4 x float]* %plane, metadata !5969, metadata !DIExpression()), !dbg !5971
  %arraydecay8 = getelementptr inbounds [4 x float], [4 x float]* %plane, i64 0, i64 0, !dbg !5972
  %8 = load float*, float** %v1.addr, align 8, !dbg !5973
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5974
  call void @plane_from_point_normal_v3(float* %arraydecay8, float* %8, float* %arraydecay9), !dbg !5975
  %9 = load float*, float** %r_vi.addr, align 8, !dbg !5976
  %arraydecay10 = getelementptr inbounds [4 x float], [4 x float]* %plane, i64 0, i64 0, !dbg !5977
  %10 = load float*, float** %p.addr, align 8, !dbg !5978
  call void @closest_to_plane_v3(float* %9, float* %arraydecay10, float* %10), !dbg !5979
  br label %if.end, !dbg !5980

if.else:                                          ; preds = %if.then
  %11 = load float*, float** %r_vi.addr, align 8, !dbg !5981
  %12 = load float*, float** %p.addr, align 8, !dbg !5983
  call void @copy_v3_v3(float* %11, float* %12), !dbg !5984
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  store i8 1, i8* %retval, align 1, !dbg !5985
  br label %return, !dbg !5985

if.else11:                                        ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !5986
  br label %return, !dbg !5986

return:                                           ; preds = %if.else11, %if.end
  %13 = load i8, i8* %retval, align 1, !dbg !5988
  ret i8 %13, !dbg !5988
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @clip_segment_v3_plane(float* %p1, float* %p2, float* %plane) #0 !dbg !5989 {
entry:
  %retval = alloca i8, align 1
  %p1.addr = alloca float*, align 8
  %p2.addr = alloca float*, align 8
  %plane.addr = alloca float*, align 8
  %dp = alloca [3 x float], align 4
  %div = alloca float, align 4
  %t = alloca float, align 4
  %pc = alloca [3 x float], align 4
  store float* %p1, float** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p1.addr, metadata !5992, metadata !DIExpression()), !dbg !5993
  store float* %p2, float** %p2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p2.addr, metadata !5994, metadata !DIExpression()), !dbg !5995
  store float* %plane, float** %plane.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane.addr, metadata !5996, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.declare(metadata [3 x float]* %dp, metadata !5998, metadata !DIExpression()), !dbg !5999
  call void @llvm.dbg.declare(metadata float* %div, metadata !6000, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.declare(metadata float* %t, metadata !6002, metadata !DIExpression()), !dbg !6003
  call void @llvm.dbg.declare(metadata [3 x float]* %pc, metadata !6004, metadata !DIExpression()), !dbg !6005
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %dp, i64 0, i64 0, !dbg !6006
  %0 = load float*, float** %p2.addr, align 8, !dbg !6007
  %1 = load float*, float** %p1.addr, align 8, !dbg !6008
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !6009
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %dp, i64 0, i64 0, !dbg !6010
  %2 = load float*, float** %plane.addr, align 8, !dbg !6011
  %call = call float @dot_v3v3(float* %arraydecay1, float* %2), !dbg !6012
  store float %call, float* %div, align 4, !dbg !6013
  %3 = load float, float* %div, align 4, !dbg !6014
  %cmp = fcmp oeq float %3, 0.000000e+00, !dbg !6016
  br i1 %cmp, label %if.then, label %if.end, !dbg !6017

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !6018
  br label %return, !dbg !6018

if.end:                                           ; preds = %entry
  %4 = load float*, float** %plane.addr, align 8, !dbg !6019
  %5 = load float*, float** %p1.addr, align 8, !dbg !6020
  %call2 = call float @plane_point_side_v3(float* %4, float* %5), !dbg !6021
  %fneg = fneg float %call2, !dbg !6022
  %6 = load float, float* %div, align 4, !dbg !6023
  %div3 = fdiv float %fneg, %6, !dbg !6024
  store float %div3, float* %t, align 4, !dbg !6025
  %7 = load float, float* %div, align 4, !dbg !6026
  %cmp4 = fcmp ogt float %7, 0.000000e+00, !dbg !6028
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !6029

if.then5:                                         ; preds = %if.end
  %8 = load float, float* %t, align 4, !dbg !6030
  %cmp6 = fcmp oge float %8, 1.000000e+00, !dbg !6033
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !6034

if.then7:                                         ; preds = %if.then5
  %9 = load float*, float** %p1.addr, align 8, !dbg !6035
  call void @zero_v3(float* %9), !dbg !6037
  %10 = load float*, float** %p2.addr, align 8, !dbg !6038
  call void @zero_v3(float* %10), !dbg !6039
  store i8 0, i8* %retval, align 1, !dbg !6040
  br label %return, !dbg !6040

if.end8:                                          ; preds = %if.then5
  %11 = load float, float* %t, align 4, !dbg !6041
  %cmp9 = fcmp ogt float %11, 0.000000e+00, !dbg !6043
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !6044

if.then10:                                        ; preds = %if.end8
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %pc, i64 0, i64 0, !dbg !6045
  %12 = load float*, float** %p1.addr, align 8, !dbg !6047
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %dp, i64 0, i64 0, !dbg !6048
  %13 = load float, float* %t, align 4, !dbg !6049
  call void @madd_v3_v3v3fl(float* %arraydecay11, float* %12, float* %arraydecay12, float %13), !dbg !6050
  %14 = load float*, float** %p1.addr, align 8, !dbg !6051
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %pc, i64 0, i64 0, !dbg !6052
  call void @copy_v3_v3(float* %14, float* %arraydecay13), !dbg !6053
  store i8 1, i8* %retval, align 1, !dbg !6054
  br label %return, !dbg !6054

if.end14:                                         ; preds = %if.end8
  store i8 1, i8* %retval, align 1, !dbg !6055
  br label %return, !dbg !6055

if.else:                                          ; preds = %if.end
  %15 = load float, float* %t, align 4, !dbg !6056
  %cmp15 = fcmp ole float %15, 0.000000e+00, !dbg !6059
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !6060

if.then16:                                        ; preds = %if.else
  %16 = load float*, float** %p1.addr, align 8, !dbg !6061
  call void @zero_v3(float* %16), !dbg !6063
  %17 = load float*, float** %p2.addr, align 8, !dbg !6064
  call void @zero_v3(float* %17), !dbg !6065
  store i8 0, i8* %retval, align 1, !dbg !6066
  br label %return, !dbg !6066

if.end17:                                         ; preds = %if.else
  %18 = load float, float* %t, align 4, !dbg !6067
  %cmp18 = fcmp olt float %18, 1.000000e+00, !dbg !6069
  br i1 %cmp18, label %if.then19, label %if.end23, !dbg !6070

if.then19:                                        ; preds = %if.end17
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %pc, i64 0, i64 0, !dbg !6071
  %19 = load float*, float** %p1.addr, align 8, !dbg !6073
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %dp, i64 0, i64 0, !dbg !6074
  %20 = load float, float* %t, align 4, !dbg !6075
  call void @madd_v3_v3v3fl(float* %arraydecay20, float* %19, float* %arraydecay21, float %20), !dbg !6076
  %21 = load float*, float** %p2.addr, align 8, !dbg !6077
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %pc, i64 0, i64 0, !dbg !6078
  call void @copy_v3_v3(float* %21, float* %arraydecay22), !dbg !6079
  store i8 1, i8* %retval, align 1, !dbg !6080
  br label %return, !dbg !6080

if.end23:                                         ; preds = %if.end17
  store i8 1, i8* %retval, align 1, !dbg !6081
  br label %return, !dbg !6081

return:                                           ; preds = %if.end23, %if.then19, %if.then16, %if.end14, %if.then10, %if.then7, %if.then
  %22 = load i8, i8* %retval, align 1, !dbg !6082
  ret i8 %22, !dbg !6082
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @clip_segment_v3_plane_n(float* %r_p1, float* %r_p2, [4 x float]* %plane_array, i32 %plane_tot) #0 !dbg !6083 {
entry:
  %retval = alloca i8, align 1
  %r_p1.addr = alloca float*, align 8
  %r_p2.addr = alloca float*, align 8
  %plane_array.addr = alloca [4 x float]*, align 8
  %plane_tot.addr = alloca i32, align 4
  %p1 = alloca [3 x float], align 4
  %p2 = alloca [3 x float], align 4
  %dp = alloca [3 x float], align 4
  %dp_orig = alloca [3 x float], align 4
  %i = alloca i32, align 4
  %plane = alloca float*, align 8
  %div = alloca float, align 4
  %t = alloca float, align 4
  store float* %r_p1, float** %r_p1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_p1.addr, metadata !6086, metadata !DIExpression()), !dbg !6087
  store float* %r_p2, float** %r_p2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_p2.addr, metadata !6088, metadata !DIExpression()), !dbg !6089
  store [4 x float]* %plane_array, [4 x float]** %plane_array.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %plane_array.addr, metadata !6090, metadata !DIExpression()), !dbg !6091
  store i32 %plane_tot, i32* %plane_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %plane_tot.addr, metadata !6092, metadata !DIExpression()), !dbg !6093
  call void @llvm.dbg.declare(metadata [3 x float]* %p1, metadata !6094, metadata !DIExpression()), !dbg !6095
  call void @llvm.dbg.declare(metadata [3 x float]* %p2, metadata !6096, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.declare(metadata [3 x float]* %dp, metadata !6098, metadata !DIExpression()), !dbg !6099
  call void @llvm.dbg.declare(metadata [3 x float]* %dp_orig, metadata !6100, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6102, metadata !DIExpression()), !dbg !6103
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !6104
  %0 = load float*, float** %r_p1.addr, align 8, !dbg !6105
  call void @copy_v3_v3(float* %arraydecay, float* %0), !dbg !6106
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %p2, i64 0, i64 0, !dbg !6107
  %1 = load float*, float** %r_p2.addr, align 8, !dbg !6108
  call void @copy_v3_v3(float* %arraydecay1, float* %1), !dbg !6109
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %dp, i64 0, i64 0, !dbg !6110
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %p2, i64 0, i64 0, !dbg !6111
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !6112
  call void @sub_v3_v3v3(float* %arraydecay2, float* %arraydecay3, float* %arraydecay4), !dbg !6113
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %dp_orig, i64 0, i64 0, !dbg !6114
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %dp, i64 0, i64 0, !dbg !6115
  call void @copy_v3_v3(float* %arraydecay5, float* %arraydecay6), !dbg !6116
  store i32 0, i32* %i, align 4, !dbg !6117
  br label %for.cond, !dbg !6119

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !6120
  %3 = load i32, i32* %plane_tot.addr, align 4, !dbg !6122
  %cmp = icmp slt i32 %2, %3, !dbg !6123
  br i1 %cmp, label %for.body, label %for.end, !dbg !6124

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float** %plane, metadata !6125, metadata !DIExpression()), !dbg !6127
  %4 = load [4 x float]*, [4 x float]** %plane_array.addr, align 8, !dbg !6128
  %5 = load i32, i32* %i, align 4, !dbg !6129
  %idxprom = sext i32 %5 to i64, !dbg !6128
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %4, i64 %idxprom, !dbg !6128
  %arraydecay7 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !6128
  store float* %arraydecay7, float** %plane, align 8, !dbg !6127
  call void @llvm.dbg.declare(metadata float* %div, metadata !6130, metadata !DIExpression()), !dbg !6131
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %dp, i64 0, i64 0, !dbg !6132
  %6 = load float*, float** %plane, align 8, !dbg !6133
  %call = call float @dot_v3v3(float* %arraydecay8, float* %6), !dbg !6134
  store float %call, float* %div, align 4, !dbg !6131
  %7 = load float, float* %div, align 4, !dbg !6135
  %cmp9 = fcmp une float %7, 0.000000e+00, !dbg !6137
  br i1 %cmp9, label %if.then, label %if.end54, !dbg !6138

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata float* %t, metadata !6139, metadata !DIExpression()), !dbg !6141
  %8 = load float*, float** %plane, align 8, !dbg !6142
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !6143
  %call11 = call float @plane_point_side_v3(float* %8, float* %arraydecay10), !dbg !6144
  %fneg = fneg float %call11, !dbg !6145
  %9 = load float, float* %div, align 4, !dbg !6146
  %div12 = fdiv float %fneg, %9, !dbg !6147
  store float %div12, float* %t, align 4, !dbg !6141
  %10 = load float, float* %div, align 4, !dbg !6148
  %cmp13 = fcmp ogt float %10, 0.000000e+00, !dbg !6150
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !6151

if.then14:                                        ; preds = %if.then
  %11 = load float, float* %t, align 4, !dbg !6152
  %cmp15 = fcmp oge float %11, 1.000000e+00, !dbg !6155
  br i1 %cmp15, label %if.then16, label %if.end, !dbg !6156

if.then16:                                        ; preds = %if.then14
  store i8 0, i8* %retval, align 1, !dbg !6157
  br label %return, !dbg !6157

if.end:                                           ; preds = %if.then14
  %12 = load float, float* %t, align 4, !dbg !6159
  %cmp17 = fcmp ogt float %12, 0.000000e+00, !dbg !6161
  br i1 %cmp17, label %if.then18, label %if.end31, !dbg !6162

if.then18:                                        ; preds = %if.end
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !6163
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !6165
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %dp, i64 0, i64 0, !dbg !6166
  %13 = load float, float* %t, align 4, !dbg !6167
  call void @madd_v3_v3v3fl(float* %arraydecay19, float* %arraydecay20, float* %arraydecay21, float %13), !dbg !6168
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %dp, i64 0, i64 0, !dbg !6169
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %p2, i64 0, i64 0, !dbg !6170
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !6171
  call void @sub_v3_v3v3(float* %arraydecay22, float* %arraydecay23, float* %arraydecay24), !dbg !6172
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %dp, i64 0, i64 0, !dbg !6173
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %dp_orig, i64 0, i64 0, !dbg !6175
  %call27 = call float @dot_v3v3(float* %arraydecay25, float* %arraydecay26), !dbg !6176
  %cmp28 = fcmp olt float %call27, 0.000000e+00, !dbg !6177
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !6178

if.then29:                                        ; preds = %if.then18
  store i8 0, i8* %retval, align 1, !dbg !6179
  br label %return, !dbg !6179

if.end30:                                         ; preds = %if.then18
  br label %if.end31, !dbg !6181

if.end31:                                         ; preds = %if.end30, %if.end
  br label %if.end53, !dbg !6182

if.else:                                          ; preds = %if.then
  %14 = load float, float* %div, align 4, !dbg !6183
  %cmp32 = fcmp olt float %14, 0.000000e+00, !dbg !6185
  br i1 %cmp32, label %if.then33, label %if.end52, !dbg !6186

if.then33:                                        ; preds = %if.else
  %15 = load float, float* %t, align 4, !dbg !6187
  %cmp34 = fcmp ole float %15, 0.000000e+00, !dbg !6190
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !6191

if.then35:                                        ; preds = %if.then33
  store i8 0, i8* %retval, align 1, !dbg !6192
  br label %return, !dbg !6192

if.end36:                                         ; preds = %if.then33
  %16 = load float, float* %t, align 4, !dbg !6194
  %cmp37 = fcmp olt float %16, 1.000000e+00, !dbg !6196
  br i1 %cmp37, label %if.then38, label %if.end51, !dbg !6197

if.then38:                                        ; preds = %if.end36
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %p2, i64 0, i64 0, !dbg !6198
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !6200
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %dp, i64 0, i64 0, !dbg !6201
  %17 = load float, float* %t, align 4, !dbg !6202
  call void @madd_v3_v3v3fl(float* %arraydecay39, float* %arraydecay40, float* %arraydecay41, float %17), !dbg !6203
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %dp, i64 0, i64 0, !dbg !6204
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %p2, i64 0, i64 0, !dbg !6205
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !6206
  call void @sub_v3_v3v3(float* %arraydecay42, float* %arraydecay43, float* %arraydecay44), !dbg !6207
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %dp, i64 0, i64 0, !dbg !6208
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %dp_orig, i64 0, i64 0, !dbg !6210
  %call47 = call float @dot_v3v3(float* %arraydecay45, float* %arraydecay46), !dbg !6211
  %cmp48 = fcmp olt float %call47, 0.000000e+00, !dbg !6212
  br i1 %cmp48, label %if.then49, label %if.end50, !dbg !6213

if.then49:                                        ; preds = %if.then38
  store i8 0, i8* %retval, align 1, !dbg !6214
  br label %return, !dbg !6214

if.end50:                                         ; preds = %if.then38
  br label %if.end51, !dbg !6216

if.end51:                                         ; preds = %if.end50, %if.end36
  br label %if.end52, !dbg !6217

if.end52:                                         ; preds = %if.end51, %if.else
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.end31
  br label %if.end54, !dbg !6218

if.end54:                                         ; preds = %if.end53, %for.body
  br label %for.inc, !dbg !6219

for.inc:                                          ; preds = %if.end54
  %18 = load i32, i32* %i, align 4, !dbg !6220
  %inc = add nsw i32 %18, 1, !dbg !6220
  store i32 %inc, i32* %i, align 4, !dbg !6220
  br label %for.cond, !dbg !6221, !llvm.loop !6222

for.end:                                          ; preds = %for.cond
  %19 = load float*, float** %r_p1.addr, align 8, !dbg !6224
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !6225
  call void @copy_v3_v3(float* %19, float* %arraydecay55), !dbg !6226
  %20 = load float*, float** %r_p2.addr, align 8, !dbg !6227
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %p2, i64 0, i64 0, !dbg !6228
  call void @copy_v3_v3(float* %20, float* %arraydecay56), !dbg !6229
  store i8 1, i8* %retval, align 1, !dbg !6230
  br label %return, !dbg !6230

return:                                           ; preds = %for.end, %if.then49, %if.then35, %if.then29, %if.then16
  %21 = load i8, i8* %retval, align 1, !dbg !6231
  ret i8 %21, !dbg !6231
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @plot_line_v2v2i(i32* %p1, i32* %p2, i8 (i32, i32, i8*)* %callback, i8* %userData) #0 !dbg !6232 {
entry:
  %p1.addr = alloca i32*, align 8
  %p2.addr = alloca i32*, align 8
  %callback.addr = alloca i8 (i32, i32, i8*)*, align 8
  %userData.addr = alloca i8*, align 8
  %x1 = alloca i32, align 4
  %y1 = alloca i32, align 4
  %x2 = alloca i32, align 4
  %y2 = alloca i32, align 4
  %ix = alloca i8, align 1
  %iy = alloca i8, align 1
  %delta_x = alloca i32, align 4
  %delta_y = alloca i32, align 4
  %error = alloca i32, align 4
  %error41 = alloca i32, align 4
  store i32* %p1, i32** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p1.addr, metadata !6238, metadata !DIExpression()), !dbg !6239
  store i32* %p2, i32** %p2.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p2.addr, metadata !6240, metadata !DIExpression()), !dbg !6241
  store i8 (i32, i32, i8*)* %callback, i8 (i32, i32, i8*)** %callback.addr, align 8
  call void @llvm.dbg.declare(metadata i8 (i32, i32, i8*)** %callback.addr, metadata !6242, metadata !DIExpression()), !dbg !6243
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !6244, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.declare(metadata i32* %x1, metadata !6246, metadata !DIExpression()), !dbg !6247
  %0 = load i32*, i32** %p1.addr, align 8, !dbg !6248
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0, !dbg !6248
  %1 = load i32, i32* %arrayidx, align 4, !dbg !6248
  store i32 %1, i32* %x1, align 4, !dbg !6247
  call void @llvm.dbg.declare(metadata i32* %y1, metadata !6249, metadata !DIExpression()), !dbg !6250
  %2 = load i32*, i32** %p1.addr, align 8, !dbg !6251
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i64 1, !dbg !6251
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !6251
  store i32 %3, i32* %y1, align 4, !dbg !6250
  call void @llvm.dbg.declare(metadata i32* %x2, metadata !6252, metadata !DIExpression()), !dbg !6253
  %4 = load i32*, i32** %p2.addr, align 8, !dbg !6254
  %arrayidx2 = getelementptr inbounds i32, i32* %4, i64 0, !dbg !6254
  %5 = load i32, i32* %arrayidx2, align 4, !dbg !6254
  store i32 %5, i32* %x2, align 4, !dbg !6253
  call void @llvm.dbg.declare(metadata i32* %y2, metadata !6255, metadata !DIExpression()), !dbg !6256
  %6 = load i32*, i32** %p2.addr, align 8, !dbg !6257
  %arrayidx3 = getelementptr inbounds i32, i32* %6, i64 1, !dbg !6257
  %7 = load i32, i32* %arrayidx3, align 4, !dbg !6257
  store i32 %7, i32* %y2, align 4, !dbg !6256
  call void @llvm.dbg.declare(metadata i8* %ix, metadata !6258, metadata !DIExpression()), !dbg !6260
  call void @llvm.dbg.declare(metadata i8* %iy, metadata !6261, metadata !DIExpression()), !dbg !6262
  call void @llvm.dbg.declare(metadata i32* %delta_x, metadata !6263, metadata !DIExpression()), !dbg !6264
  %8 = load i32, i32* %x2, align 4, !dbg !6265
  %9 = load i32, i32* %x1, align 4, !dbg !6266
  %cmp = icmp sgt i32 %8, %9, !dbg !6267
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6265

cond.true:                                        ; preds = %entry
  store i8 1, i8* %ix, align 1, !dbg !6268
  %10 = load i32, i32* %x2, align 4, !dbg !6269
  %11 = load i32, i32* %x1, align 4, !dbg !6270
  %sub = sub nsw i32 %10, %11, !dbg !6271
  br label %cond.end, !dbg !6265

cond.false:                                       ; preds = %entry
  store i8 -1, i8* %ix, align 1, !dbg !6272
  %12 = load i32, i32* %x1, align 4, !dbg !6273
  %13 = load i32, i32* %x2, align 4, !dbg !6274
  %sub4 = sub nsw i32 %12, %13, !dbg !6275
  br label %cond.end, !dbg !6265

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %sub4, %cond.false ], !dbg !6265
  %shl = shl i32 %cond, 1, !dbg !6276
  store i32 %shl, i32* %delta_x, align 4, !dbg !6264
  call void @llvm.dbg.declare(metadata i32* %delta_y, metadata !6277, metadata !DIExpression()), !dbg !6278
  %14 = load i32, i32* %y2, align 4, !dbg !6279
  %15 = load i32, i32* %y1, align 4, !dbg !6280
  %cmp5 = icmp sgt i32 %14, %15, !dbg !6281
  br i1 %cmp5, label %cond.true6, label %cond.false8, !dbg !6279

cond.true6:                                       ; preds = %cond.end
  store i8 1, i8* %iy, align 1, !dbg !6282
  %16 = load i32, i32* %y2, align 4, !dbg !6283
  %17 = load i32, i32* %y1, align 4, !dbg !6284
  %sub7 = sub nsw i32 %16, %17, !dbg !6285
  br label %cond.end10, !dbg !6279

cond.false8:                                      ; preds = %cond.end
  store i8 -1, i8* %iy, align 1, !dbg !6286
  %18 = load i32, i32* %y1, align 4, !dbg !6287
  %19 = load i32, i32* %y2, align 4, !dbg !6288
  %sub9 = sub nsw i32 %18, %19, !dbg !6289
  br label %cond.end10, !dbg !6279

cond.end10:                                       ; preds = %cond.false8, %cond.true6
  %cond11 = phi i32 [ %sub7, %cond.true6 ], [ %sub9, %cond.false8 ], !dbg !6279
  %shl12 = shl i32 %cond11, 1, !dbg !6290
  store i32 %shl12, i32* %delta_y, align 4, !dbg !6278
  %20 = load i8 (i32, i32, i8*)*, i8 (i32, i32, i8*)** %callback.addr, align 8, !dbg !6291
  %21 = load i32, i32* %x1, align 4, !dbg !6293
  %22 = load i32, i32* %y1, align 4, !dbg !6294
  %23 = load i8*, i8** %userData.addr, align 8, !dbg !6295
  %call = call zeroext i8 %20(i32 %21, i32 %22, i8* %23), !dbg !6291
  %conv = zext i8 %call to i32, !dbg !6291
  %cmp13 = icmp eq i32 %conv, 0, !dbg !6296
  br i1 %cmp13, label %if.then, label %if.end, !dbg !6297

if.then:                                          ; preds = %cond.end10
  br label %if.end72, !dbg !6298

if.end:                                           ; preds = %cond.end10
  %24 = load i32, i32* %delta_x, align 4, !dbg !6300
  %25 = load i32, i32* %delta_y, align 4, !dbg !6302
  %cmp15 = icmp sge i32 %24, %25, !dbg !6303
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !6304

if.then17:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %error, metadata !6305, metadata !DIExpression()), !dbg !6307
  %26 = load i32, i32* %delta_y, align 4, !dbg !6308
  %27 = load i32, i32* %delta_x, align 4, !dbg !6309
  %shr = ashr i32 %27, 1, !dbg !6310
  %sub18 = sub nsw i32 %26, %shr, !dbg !6311
  store i32 %sub18, i32* %error, align 4, !dbg !6307
  br label %while.cond, !dbg !6312

while.cond:                                       ; preds = %if.end40, %if.then17
  %28 = load i32, i32* %x1, align 4, !dbg !6313
  %29 = load i32, i32* %x2, align 4, !dbg !6314
  %cmp19 = icmp ne i32 %28, %29, !dbg !6315
  br i1 %cmp19, label %while.body, label %while.end, !dbg !6312

while.body:                                       ; preds = %while.cond
  %30 = load i32, i32* %error, align 4, !dbg !6316
  %cmp21 = icmp sge i32 %30, 0, !dbg !6319
  br i1 %cmp21, label %if.then23, label %if.end31, !dbg !6320

if.then23:                                        ; preds = %while.body
  %31 = load i32, i32* %error, align 4, !dbg !6321
  %tobool = icmp ne i32 %31, 0, !dbg !6321
  br i1 %tobool, label %if.then27, label %lor.lhs.false, !dbg !6324

lor.lhs.false:                                    ; preds = %if.then23
  %32 = load i8, i8* %ix, align 1, !dbg !6325
  %conv24 = sext i8 %32 to i32, !dbg !6325
  %cmp25 = icmp sgt i32 %conv24, 0, !dbg !6326
  br i1 %cmp25, label %if.then27, label %if.end30, !dbg !6327

if.then27:                                        ; preds = %lor.lhs.false, %if.then23
  %33 = load i8, i8* %iy, align 1, !dbg !6328
  %conv28 = sext i8 %33 to i32, !dbg !6328
  %34 = load i32, i32* %y1, align 4, !dbg !6330
  %add = add nsw i32 %34, %conv28, !dbg !6330
  store i32 %add, i32* %y1, align 4, !dbg !6330
  %35 = load i32, i32* %delta_x, align 4, !dbg !6331
  %36 = load i32, i32* %error, align 4, !dbg !6332
  %sub29 = sub nsw i32 %36, %35, !dbg !6332
  store i32 %sub29, i32* %error, align 4, !dbg !6332
  br label %if.end30, !dbg !6333

if.end30:                                         ; preds = %if.then27, %lor.lhs.false
  br label %if.end31, !dbg !6334

if.end31:                                         ; preds = %if.end30, %while.body
  %37 = load i8, i8* %ix, align 1, !dbg !6335
  %conv32 = sext i8 %37 to i32, !dbg !6335
  %38 = load i32, i32* %x1, align 4, !dbg !6336
  %add33 = add nsw i32 %38, %conv32, !dbg !6336
  store i32 %add33, i32* %x1, align 4, !dbg !6336
  %39 = load i32, i32* %delta_y, align 4, !dbg !6337
  %40 = load i32, i32* %error, align 4, !dbg !6338
  %add34 = add nsw i32 %40, %39, !dbg !6338
  store i32 %add34, i32* %error, align 4, !dbg !6338
  %41 = load i8 (i32, i32, i8*)*, i8 (i32, i32, i8*)** %callback.addr, align 8, !dbg !6339
  %42 = load i32, i32* %x1, align 4, !dbg !6341
  %43 = load i32, i32* %y1, align 4, !dbg !6342
  %44 = load i8*, i8** %userData.addr, align 8, !dbg !6343
  %call35 = call zeroext i8 %41(i32 %42, i32 %43, i8* %44), !dbg !6339
  %conv36 = zext i8 %call35 to i32, !dbg !6339
  %cmp37 = icmp eq i32 %conv36, 0, !dbg !6344
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !6345

if.then39:                                        ; preds = %if.end31
  br label %if.end72, !dbg !6346

if.end40:                                         ; preds = %if.end31
  br label %while.cond, !dbg !6312, !llvm.loop !6348

while.end:                                        ; preds = %while.cond
  br label %if.end72, !dbg !6350

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %error41, metadata !6351, metadata !DIExpression()), !dbg !6353
  %45 = load i32, i32* %delta_x, align 4, !dbg !6354
  %46 = load i32, i32* %delta_y, align 4, !dbg !6355
  %shr42 = ashr i32 %46, 1, !dbg !6356
  %sub43 = sub nsw i32 %45, %shr42, !dbg !6357
  store i32 %sub43, i32* %error41, align 4, !dbg !6353
  br label %while.cond44, !dbg !6358

while.cond44:                                     ; preds = %if.end70, %if.else
  %47 = load i32, i32* %y1, align 4, !dbg !6359
  %48 = load i32, i32* %y2, align 4, !dbg !6360
  %cmp45 = icmp ne i32 %47, %48, !dbg !6361
  br i1 %cmp45, label %while.body47, label %while.end71, !dbg !6358

while.body47:                                     ; preds = %while.cond44
  %49 = load i32, i32* %error41, align 4, !dbg !6362
  %cmp48 = icmp sge i32 %49, 0, !dbg !6365
  br i1 %cmp48, label %if.then50, label %if.end61, !dbg !6366

if.then50:                                        ; preds = %while.body47
  %50 = load i32, i32* %error41, align 4, !dbg !6367
  %tobool51 = icmp ne i32 %50, 0, !dbg !6367
  br i1 %tobool51, label %if.then56, label %lor.lhs.false52, !dbg !6370

lor.lhs.false52:                                  ; preds = %if.then50
  %51 = load i8, i8* %iy, align 1, !dbg !6371
  %conv53 = sext i8 %51 to i32, !dbg !6371
  %cmp54 = icmp sgt i32 %conv53, 0, !dbg !6372
  br i1 %cmp54, label %if.then56, label %if.end60, !dbg !6373

if.then56:                                        ; preds = %lor.lhs.false52, %if.then50
  %52 = load i8, i8* %ix, align 1, !dbg !6374
  %conv57 = sext i8 %52 to i32, !dbg !6374
  %53 = load i32, i32* %x1, align 4, !dbg !6376
  %add58 = add nsw i32 %53, %conv57, !dbg !6376
  store i32 %add58, i32* %x1, align 4, !dbg !6376
  %54 = load i32, i32* %delta_y, align 4, !dbg !6377
  %55 = load i32, i32* %error41, align 4, !dbg !6378
  %sub59 = sub nsw i32 %55, %54, !dbg !6378
  store i32 %sub59, i32* %error41, align 4, !dbg !6378
  br label %if.end60, !dbg !6379

if.end60:                                         ; preds = %if.then56, %lor.lhs.false52
  br label %if.end61, !dbg !6380

if.end61:                                         ; preds = %if.end60, %while.body47
  %56 = load i8, i8* %iy, align 1, !dbg !6381
  %conv62 = sext i8 %56 to i32, !dbg !6381
  %57 = load i32, i32* %y1, align 4, !dbg !6382
  %add63 = add nsw i32 %57, %conv62, !dbg !6382
  store i32 %add63, i32* %y1, align 4, !dbg !6382
  %58 = load i32, i32* %delta_x, align 4, !dbg !6383
  %59 = load i32, i32* %error41, align 4, !dbg !6384
  %add64 = add nsw i32 %59, %58, !dbg !6384
  store i32 %add64, i32* %error41, align 4, !dbg !6384
  %60 = load i8 (i32, i32, i8*)*, i8 (i32, i32, i8*)** %callback.addr, align 8, !dbg !6385
  %61 = load i32, i32* %x1, align 4, !dbg !6387
  %62 = load i32, i32* %y1, align 4, !dbg !6388
  %63 = load i8*, i8** %userData.addr, align 8, !dbg !6389
  %call65 = call zeroext i8 %60(i32 %61, i32 %62, i8* %63), !dbg !6385
  %conv66 = zext i8 %call65 to i32, !dbg !6385
  %cmp67 = icmp eq i32 %conv66, 0, !dbg !6390
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !6391

if.then69:                                        ; preds = %if.end61
  br label %if.end72, !dbg !6392

if.end70:                                         ; preds = %if.end61
  br label %while.cond44, !dbg !6358, !llvm.loop !6394

while.end71:                                      ; preds = %while.cond44
  br label %if.end72

if.end72:                                         ; preds = %if.then, %if.then39, %if.then69, %while.end71, %while.end
  ret void, !dbg !6396
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @fill_poly_v2i_n(i32 %xmin, i32 %ymin, i32 %xmax, i32 %ymax, [2 x i32]* %verts, i32 %nr, void (i32, i32, i8*)* %callback, i8* %userData) #0 !dbg !6397 {
entry:
  %xmin.addr = alloca i32, align 4
  %ymin.addr = alloca i32, align 4
  %xmax.addr = alloca i32, align 4
  %ymax.addr = alloca i32, align 4
  %verts.addr = alloca [2 x i32]*, align 8
  %nr.addr = alloca i32, align 4
  %callback.addr = alloca void (i32, i32, i8*)*, align 8
  %userData.addr = alloca i8*, align 8
  %nodes = alloca i32, align 4
  %pixel_y = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %swap = alloca i32, align 4
  %node_x = alloca i32*, align 8
  store i32 %xmin, i32* %xmin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xmin.addr, metadata !6403, metadata !DIExpression()), !dbg !6404
  store i32 %ymin, i32* %ymin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ymin.addr, metadata !6405, metadata !DIExpression()), !dbg !6406
  store i32 %xmax, i32* %xmax.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xmax.addr, metadata !6407, metadata !DIExpression()), !dbg !6408
  store i32 %ymax, i32* %ymax.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ymax.addr, metadata !6409, metadata !DIExpression()), !dbg !6410
  store [2 x i32]* %verts, [2 x i32]** %verts.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x i32]** %verts.addr, metadata !6411, metadata !DIExpression()), !dbg !6412
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !6413, metadata !DIExpression()), !dbg !6414
  store void (i32, i32, i8*)* %callback, void (i32, i32, i8*)** %callback.addr, align 8
  call void @llvm.dbg.declare(metadata void (i32, i32, i8*)** %callback.addr, metadata !6415, metadata !DIExpression()), !dbg !6416
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !6417, metadata !DIExpression()), !dbg !6418
  call void @llvm.dbg.declare(metadata i32* %nodes, metadata !6419, metadata !DIExpression()), !dbg !6420
  call void @llvm.dbg.declare(metadata i32* %pixel_y, metadata !6421, metadata !DIExpression()), !dbg !6422
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6423, metadata !DIExpression()), !dbg !6424
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6425, metadata !DIExpression()), !dbg !6426
  call void @llvm.dbg.declare(metadata i32* %swap, metadata !6427, metadata !DIExpression()), !dbg !6428
  call void @llvm.dbg.declare(metadata i32** %node_x, metadata !6429, metadata !DIExpression()), !dbg !6431
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6432
  %1 = load i32, i32* %nr.addr, align 4, !dbg !6433
  %add = add nsw i32 %1, 1, !dbg !6434
  %conv = sext i32 %add to i64, !dbg !6435
  %mul = mul i64 4, %conv, !dbg !6436
  %call = call i8* %0(i64 %mul, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.fill_poly_v2i_n, i64 0, i64 0)), !dbg !6432
  %2 = bitcast i8* %call to i32*, !dbg !6432
  store i32* %2, i32** %node_x, align 8, !dbg !6431
  %3 = load i32, i32* %ymin.addr, align 4, !dbg !6437
  store i32 %3, i32* %pixel_y, align 4, !dbg !6439
  br label %for.cond, !dbg !6440

for.cond:                                         ; preds = %for.inc133, %entry
  %4 = load i32, i32* %pixel_y, align 4, !dbg !6441
  %5 = load i32, i32* %ymax.addr, align 4, !dbg !6443
  %cmp = icmp slt i32 %4, %5, !dbg !6444
  br i1 %cmp, label %for.body, label %for.end135, !dbg !6445

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %nodes, align 4, !dbg !6446
  %6 = load i32, i32* %nr.addr, align 4, !dbg !6448
  %sub = sub nsw i32 %6, 1, !dbg !6449
  store i32 %sub, i32* %j, align 4, !dbg !6450
  store i32 0, i32* %i, align 4, !dbg !6451
  br label %for.cond2, !dbg !6453

for.cond2:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %i, align 4, !dbg !6454
  %8 = load i32, i32* %nr.addr, align 4, !dbg !6456
  %cmp3 = icmp slt i32 %7, %8, !dbg !6457
  br i1 %cmp3, label %for.body5, label %for.end, !dbg !6458

for.body5:                                        ; preds = %for.cond2
  %9 = load [2 x i32]*, [2 x i32]** %verts.addr, align 8, !dbg !6459
  %10 = load i32, i32* %i, align 4, !dbg !6462
  %idxprom = sext i32 %10 to i64, !dbg !6459
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 %idxprom, !dbg !6459
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx, i64 0, i64 1, !dbg !6459
  %11 = load i32, i32* %arrayidx6, align 4, !dbg !6459
  %12 = load i32, i32* %pixel_y, align 4, !dbg !6463
  %cmp7 = icmp slt i32 %11, %12, !dbg !6464
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false, !dbg !6465

land.lhs.true:                                    ; preds = %for.body5
  %13 = load [2 x i32]*, [2 x i32]** %verts.addr, align 8, !dbg !6466
  %14 = load i32, i32* %j, align 4, !dbg !6467
  %idxprom9 = sext i32 %14 to i64, !dbg !6466
  %arrayidx10 = getelementptr inbounds [2 x i32], [2 x i32]* %13, i64 %idxprom9, !dbg !6466
  %arrayidx11 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx10, i64 0, i64 1, !dbg !6466
  %15 = load i32, i32* %arrayidx11, align 4, !dbg !6466
  %16 = load i32, i32* %pixel_y, align 4, !dbg !6468
  %cmp12 = icmp sge i32 %15, %16, !dbg !6469
  br i1 %cmp12, label %if.then, label %lor.lhs.false, !dbg !6470

lor.lhs.false:                                    ; preds = %land.lhs.true, %for.body5
  %17 = load [2 x i32]*, [2 x i32]** %verts.addr, align 8, !dbg !6471
  %18 = load i32, i32* %j, align 4, !dbg !6472
  %idxprom14 = sext i32 %18 to i64, !dbg !6471
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %17, i64 %idxprom14, !dbg !6471
  %arrayidx16 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx15, i64 0, i64 1, !dbg !6471
  %19 = load i32, i32* %arrayidx16, align 4, !dbg !6471
  %20 = load i32, i32* %pixel_y, align 4, !dbg !6473
  %cmp17 = icmp slt i32 %19, %20, !dbg !6474
  br i1 %cmp17, label %land.lhs.true19, label %if.end, !dbg !6475

land.lhs.true19:                                  ; preds = %lor.lhs.false
  %21 = load [2 x i32]*, [2 x i32]** %verts.addr, align 8, !dbg !6476
  %22 = load i32, i32* %i, align 4, !dbg !6477
  %idxprom20 = sext i32 %22 to i64, !dbg !6476
  %arrayidx21 = getelementptr inbounds [2 x i32], [2 x i32]* %21, i64 %idxprom20, !dbg !6476
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx21, i64 0, i64 1, !dbg !6476
  %23 = load i32, i32* %arrayidx22, align 4, !dbg !6476
  %24 = load i32, i32* %pixel_y, align 4, !dbg !6478
  %cmp23 = icmp sge i32 %23, %24, !dbg !6479
  br i1 %cmp23, label %if.then, label %if.end, !dbg !6480

if.then:                                          ; preds = %land.lhs.true19, %land.lhs.true
  %25 = load [2 x i32]*, [2 x i32]** %verts.addr, align 8, !dbg !6481
  %26 = load i32, i32* %i, align 4, !dbg !6483
  %idxprom25 = sext i32 %26 to i64, !dbg !6481
  %arrayidx26 = getelementptr inbounds [2 x i32], [2 x i32]* %25, i64 %idxprom25, !dbg !6481
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx26, i64 0, i64 0, !dbg !6481
  %27 = load i32, i32* %arrayidx27, align 4, !dbg !6481
  %conv28 = sitofp i32 %27 to double, !dbg !6481
  %28 = load i32, i32* %pixel_y, align 4, !dbg !6484
  %29 = load [2 x i32]*, [2 x i32]** %verts.addr, align 8, !dbg !6485
  %30 = load i32, i32* %i, align 4, !dbg !6486
  %idxprom29 = sext i32 %30 to i64, !dbg !6485
  %arrayidx30 = getelementptr inbounds [2 x i32], [2 x i32]* %29, i64 %idxprom29, !dbg !6485
  %arrayidx31 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx30, i64 0, i64 1, !dbg !6485
  %31 = load i32, i32* %arrayidx31, align 4, !dbg !6485
  %sub32 = sub nsw i32 %28, %31, !dbg !6487
  %conv33 = sitofp i32 %sub32 to double, !dbg !6488
  %32 = load [2 x i32]*, [2 x i32]** %verts.addr, align 8, !dbg !6489
  %33 = load i32, i32* %j, align 4, !dbg !6490
  %idxprom34 = sext i32 %33 to i64, !dbg !6489
  %arrayidx35 = getelementptr inbounds [2 x i32], [2 x i32]* %32, i64 %idxprom34, !dbg !6489
  %arrayidx36 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx35, i64 0, i64 1, !dbg !6489
  %34 = load i32, i32* %arrayidx36, align 4, !dbg !6489
  %35 = load [2 x i32]*, [2 x i32]** %verts.addr, align 8, !dbg !6491
  %36 = load i32, i32* %i, align 4, !dbg !6492
  %idxprom37 = sext i32 %36 to i64, !dbg !6491
  %arrayidx38 = getelementptr inbounds [2 x i32], [2 x i32]* %35, i64 %idxprom37, !dbg !6491
  %arrayidx39 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx38, i64 0, i64 1, !dbg !6491
  %37 = load i32, i32* %arrayidx39, align 4, !dbg !6491
  %sub40 = sub nsw i32 %34, %37, !dbg !6493
  %conv41 = sitofp i32 %sub40 to double, !dbg !6494
  %div = fdiv double %conv33, %conv41, !dbg !6495
  %38 = load [2 x i32]*, [2 x i32]** %verts.addr, align 8, !dbg !6496
  %39 = load i32, i32* %j, align 4, !dbg !6497
  %idxprom42 = sext i32 %39 to i64, !dbg !6496
  %arrayidx43 = getelementptr inbounds [2 x i32], [2 x i32]* %38, i64 %idxprom42, !dbg !6496
  %arrayidx44 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx43, i64 0, i64 0, !dbg !6496
  %40 = load i32, i32* %arrayidx44, align 4, !dbg !6496
  %41 = load [2 x i32]*, [2 x i32]** %verts.addr, align 8, !dbg !6498
  %42 = load i32, i32* %i, align 4, !dbg !6499
  %idxprom45 = sext i32 %42 to i64, !dbg !6498
  %arrayidx46 = getelementptr inbounds [2 x i32], [2 x i32]* %41, i64 %idxprom45, !dbg !6498
  %arrayidx47 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx46, i64 0, i64 0, !dbg !6498
  %43 = load i32, i32* %arrayidx47, align 4, !dbg !6498
  %sub48 = sub nsw i32 %40, %43, !dbg !6500
  %conv49 = sitofp i32 %sub48 to double, !dbg !6501
  %mul50 = fmul double %div, %conv49, !dbg !6502
  %add51 = fadd double %conv28, %mul50, !dbg !6503
  %conv52 = fptosi double %add51 to i32, !dbg !6504
  %44 = load i32*, i32** %node_x, align 8, !dbg !6505
  %45 = load i32, i32* %nodes, align 4, !dbg !6506
  %inc = add nsw i32 %45, 1, !dbg !6506
  store i32 %inc, i32* %nodes, align 4, !dbg !6506
  %idxprom53 = sext i32 %45 to i64, !dbg !6505
  %arrayidx54 = getelementptr inbounds i32, i32* %44, i64 %idxprom53, !dbg !6505
  store i32 %conv52, i32* %arrayidx54, align 4, !dbg !6507
  br label %if.end, !dbg !6508

if.end:                                           ; preds = %if.then, %land.lhs.true19, %lor.lhs.false
  %46 = load i32, i32* %i, align 4, !dbg !6509
  store i32 %46, i32* %j, align 4, !dbg !6510
  br label %for.inc, !dbg !6511

for.inc:                                          ; preds = %if.end
  %47 = load i32, i32* %i, align 4, !dbg !6512
  %inc55 = add nsw i32 %47, 1, !dbg !6512
  store i32 %inc55, i32* %i, align 4, !dbg !6512
  br label %for.cond2, !dbg !6513, !llvm.loop !6514

for.end:                                          ; preds = %for.cond2
  store i32 0, i32* %i, align 4, !dbg !6516
  br label %while.cond, !dbg !6517

while.cond:                                       ; preds = %if.end80, %for.end
  %48 = load i32, i32* %i, align 4, !dbg !6518
  %49 = load i32, i32* %nodes, align 4, !dbg !6519
  %sub56 = sub nsw i32 %49, 1, !dbg !6520
  %cmp57 = icmp slt i32 %48, %sub56, !dbg !6521
  br i1 %cmp57, label %while.body, label %while.end, !dbg !6517

while.body:                                       ; preds = %while.cond
  %50 = load i32*, i32** %node_x, align 8, !dbg !6522
  %51 = load i32, i32* %i, align 4, !dbg !6525
  %idxprom59 = sext i32 %51 to i64, !dbg !6522
  %arrayidx60 = getelementptr inbounds i32, i32* %50, i64 %idxprom59, !dbg !6522
  %52 = load i32, i32* %arrayidx60, align 4, !dbg !6522
  %53 = load i32*, i32** %node_x, align 8, !dbg !6526
  %54 = load i32, i32* %i, align 4, !dbg !6527
  %add61 = add nsw i32 %54, 1, !dbg !6528
  %idxprom62 = sext i32 %add61 to i64, !dbg !6526
  %arrayidx63 = getelementptr inbounds i32, i32* %53, i64 %idxprom62, !dbg !6526
  %55 = load i32, i32* %arrayidx63, align 4, !dbg !6526
  %cmp64 = icmp sgt i32 %52, %55, !dbg !6529
  br i1 %cmp64, label %if.then66, label %if.else, !dbg !6530

if.then66:                                        ; preds = %while.body
  %56 = load i32*, i32** %node_x, align 8, !dbg !6531
  %57 = load i32, i32* %i, align 4, !dbg !6531
  %idxprom67 = sext i32 %57 to i64, !dbg !6531
  %arrayidx68 = getelementptr inbounds i32, i32* %56, i64 %idxprom67, !dbg !6531
  %58 = load i32, i32* %arrayidx68, align 4, !dbg !6531
  store i32 %58, i32* %swap, align 4, !dbg !6531
  %59 = load i32*, i32** %node_x, align 8, !dbg !6531
  %60 = load i32, i32* %i, align 4, !dbg !6531
  %add69 = add nsw i32 %60, 1, !dbg !6531
  %idxprom70 = sext i32 %add69 to i64, !dbg !6531
  %arrayidx71 = getelementptr inbounds i32, i32* %59, i64 %idxprom70, !dbg !6531
  %61 = load i32, i32* %arrayidx71, align 4, !dbg !6531
  %62 = load i32*, i32** %node_x, align 8, !dbg !6531
  %63 = load i32, i32* %i, align 4, !dbg !6531
  %idxprom72 = sext i32 %63 to i64, !dbg !6531
  %arrayidx73 = getelementptr inbounds i32, i32* %62, i64 %idxprom72, !dbg !6531
  store i32 %61, i32* %arrayidx73, align 4, !dbg !6531
  %64 = load i32, i32* %swap, align 4, !dbg !6531
  %65 = load i32*, i32** %node_x, align 8, !dbg !6531
  %66 = load i32, i32* %i, align 4, !dbg !6531
  %add74 = add nsw i32 %66, 1, !dbg !6531
  %idxprom75 = sext i32 %add74 to i64, !dbg !6531
  %arrayidx76 = getelementptr inbounds i32, i32* %65, i64 %idxprom75, !dbg !6531
  store i32 %64, i32* %arrayidx76, align 4, !dbg !6531
  %67 = load i32, i32* %i, align 4, !dbg !6534
  %tobool = icmp ne i32 %67, 0, !dbg !6534
  br i1 %tobool, label %if.then77, label %if.end78, !dbg !6536

if.then77:                                        ; preds = %if.then66
  %68 = load i32, i32* %i, align 4, !dbg !6537
  %dec = add nsw i32 %68, -1, !dbg !6537
  store i32 %dec, i32* %i, align 4, !dbg !6537
  br label %if.end78, !dbg !6538

if.end78:                                         ; preds = %if.then77, %if.then66
  br label %if.end80, !dbg !6539

if.else:                                          ; preds = %while.body
  %69 = load i32, i32* %i, align 4, !dbg !6540
  %inc79 = add nsw i32 %69, 1, !dbg !6540
  store i32 %inc79, i32* %i, align 4, !dbg !6540
  br label %if.end80

if.end80:                                         ; preds = %if.else, %if.end78
  br label %while.cond, !dbg !6517, !llvm.loop !6542

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %i, align 4, !dbg !6544
  br label %for.cond81, !dbg !6546

for.cond81:                                       ; preds = %for.inc130, %while.end
  %70 = load i32, i32* %i, align 4, !dbg !6547
  %71 = load i32, i32* %nodes, align 4, !dbg !6549
  %cmp82 = icmp slt i32 %70, %71, !dbg !6550
  br i1 %cmp82, label %for.body84, label %for.end132, !dbg !6551

for.body84:                                       ; preds = %for.cond81
  %72 = load i32*, i32** %node_x, align 8, !dbg !6552
  %73 = load i32, i32* %i, align 4, !dbg !6555
  %idxprom85 = sext i32 %73 to i64, !dbg !6552
  %arrayidx86 = getelementptr inbounds i32, i32* %72, i64 %idxprom85, !dbg !6552
  %74 = load i32, i32* %arrayidx86, align 4, !dbg !6552
  %75 = load i32, i32* %xmax.addr, align 4, !dbg !6556
  %cmp87 = icmp sge i32 %74, %75, !dbg !6557
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !6558

if.then89:                                        ; preds = %for.body84
  br label %for.end132, !dbg !6559

if.end90:                                         ; preds = %for.body84
  %76 = load i32*, i32** %node_x, align 8, !dbg !6560
  %77 = load i32, i32* %i, align 4, !dbg !6562
  %add91 = add nsw i32 %77, 1, !dbg !6563
  %idxprom92 = sext i32 %add91 to i64, !dbg !6560
  %arrayidx93 = getelementptr inbounds i32, i32* %76, i64 %idxprom92, !dbg !6560
  %78 = load i32, i32* %arrayidx93, align 4, !dbg !6560
  %79 = load i32, i32* %xmin.addr, align 4, !dbg !6564
  %cmp94 = icmp sgt i32 %78, %79, !dbg !6565
  br i1 %cmp94, label %if.then96, label %if.end129, !dbg !6566

if.then96:                                        ; preds = %if.end90
  %80 = load i32*, i32** %node_x, align 8, !dbg !6567
  %81 = load i32, i32* %i, align 4, !dbg !6570
  %idxprom97 = sext i32 %81 to i64, !dbg !6567
  %arrayidx98 = getelementptr inbounds i32, i32* %80, i64 %idxprom97, !dbg !6567
  %82 = load i32, i32* %arrayidx98, align 4, !dbg !6567
  %83 = load i32, i32* %xmin.addr, align 4, !dbg !6571
  %cmp99 = icmp slt i32 %82, %83, !dbg !6572
  br i1 %cmp99, label %if.then101, label %if.end104, !dbg !6573

if.then101:                                       ; preds = %if.then96
  %84 = load i32, i32* %xmin.addr, align 4, !dbg !6574
  %85 = load i32*, i32** %node_x, align 8, !dbg !6575
  %86 = load i32, i32* %i, align 4, !dbg !6576
  %idxprom102 = sext i32 %86 to i64, !dbg !6575
  %arrayidx103 = getelementptr inbounds i32, i32* %85, i64 %idxprom102, !dbg !6575
  store i32 %84, i32* %arrayidx103, align 4, !dbg !6577
  br label %if.end104, !dbg !6575

if.end104:                                        ; preds = %if.then101, %if.then96
  %87 = load i32*, i32** %node_x, align 8, !dbg !6578
  %88 = load i32, i32* %i, align 4, !dbg !6580
  %add105 = add nsw i32 %88, 1, !dbg !6581
  %idxprom106 = sext i32 %add105 to i64, !dbg !6578
  %arrayidx107 = getelementptr inbounds i32, i32* %87, i64 %idxprom106, !dbg !6578
  %89 = load i32, i32* %arrayidx107, align 4, !dbg !6578
  %90 = load i32, i32* %xmax.addr, align 4, !dbg !6582
  %cmp108 = icmp sgt i32 %89, %90, !dbg !6583
  br i1 %cmp108, label %if.then110, label %if.end114, !dbg !6584

if.then110:                                       ; preds = %if.end104
  %91 = load i32, i32* %xmax.addr, align 4, !dbg !6585
  %92 = load i32*, i32** %node_x, align 8, !dbg !6586
  %93 = load i32, i32* %i, align 4, !dbg !6587
  %add111 = add nsw i32 %93, 1, !dbg !6588
  %idxprom112 = sext i32 %add111 to i64, !dbg !6586
  %arrayidx113 = getelementptr inbounds i32, i32* %92, i64 %idxprom112, !dbg !6586
  store i32 %91, i32* %arrayidx113, align 4, !dbg !6589
  br label %if.end114, !dbg !6586

if.end114:                                        ; preds = %if.then110, %if.end104
  %94 = load i32*, i32** %node_x, align 8, !dbg !6590
  %95 = load i32, i32* %i, align 4, !dbg !6592
  %idxprom115 = sext i32 %95 to i64, !dbg !6590
  %arrayidx116 = getelementptr inbounds i32, i32* %94, i64 %idxprom115, !dbg !6590
  %96 = load i32, i32* %arrayidx116, align 4, !dbg !6590
  store i32 %96, i32* %j, align 4, !dbg !6593
  br label %for.cond117, !dbg !6594

for.cond117:                                      ; preds = %for.inc126, %if.end114
  %97 = load i32, i32* %j, align 4, !dbg !6595
  %98 = load i32*, i32** %node_x, align 8, !dbg !6597
  %99 = load i32, i32* %i, align 4, !dbg !6598
  %add118 = add nsw i32 %99, 1, !dbg !6599
  %idxprom119 = sext i32 %add118 to i64, !dbg !6597
  %arrayidx120 = getelementptr inbounds i32, i32* %98, i64 %idxprom119, !dbg !6597
  %100 = load i32, i32* %arrayidx120, align 4, !dbg !6597
  %cmp121 = icmp slt i32 %97, %100, !dbg !6600
  br i1 %cmp121, label %for.body123, label %for.end128, !dbg !6601

for.body123:                                      ; preds = %for.cond117
  %101 = load void (i32, i32, i8*)*, void (i32, i32, i8*)** %callback.addr, align 8, !dbg !6602
  %102 = load i32, i32* %j, align 4, !dbg !6604
  %103 = load i32, i32* %xmin.addr, align 4, !dbg !6605
  %sub124 = sub nsw i32 %102, %103, !dbg !6606
  %104 = load i32, i32* %pixel_y, align 4, !dbg !6607
  %105 = load i32, i32* %ymin.addr, align 4, !dbg !6608
  %sub125 = sub nsw i32 %104, %105, !dbg !6609
  %106 = load i8*, i8** %userData.addr, align 8, !dbg !6610
  call void %101(i32 %sub124, i32 %sub125, i8* %106), !dbg !6602
  br label %for.inc126, !dbg !6611

for.inc126:                                       ; preds = %for.body123
  %107 = load i32, i32* %j, align 4, !dbg !6612
  %inc127 = add nsw i32 %107, 1, !dbg !6612
  store i32 %inc127, i32* %j, align 4, !dbg !6612
  br label %for.cond117, !dbg !6613, !llvm.loop !6614

for.end128:                                       ; preds = %for.cond117
  br label %if.end129, !dbg !6616

if.end129:                                        ; preds = %for.end128, %if.end90
  br label %for.inc130, !dbg !6617

for.inc130:                                       ; preds = %if.end129
  %108 = load i32, i32* %i, align 4, !dbg !6618
  %add131 = add nsw i32 %108, 2, !dbg !6618
  store i32 %add131, i32* %i, align 4, !dbg !6618
  br label %for.cond81, !dbg !6619, !llvm.loop !6620

for.end132:                                       ; preds = %if.then89, %for.cond81
  br label %for.inc133, !dbg !6622

for.inc133:                                       ; preds = %for.end132
  %109 = load i32, i32* %pixel_y, align 4, !dbg !6623
  %inc134 = add nsw i32 %109, 1, !dbg !6623
  store i32 %inc134, i32* %pixel_y, align 4, !dbg !6623
  br label %for.cond, !dbg !6624, !llvm.loop !6625

for.end135:                                       ; preds = %for.cond
  %110 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6627
  %111 = load i32*, i32** %node_x, align 8, !dbg !6628
  %112 = bitcast i32* %111 to i8*, !dbg !6628
  call void %110(i8* %112), !dbg !6627
  ret void, !dbg !6629
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @axis_dominant_v3_to_m3([3 x float]* %r_mat, float* %normal) #0 !dbg !6630 {
entry:
  %r_mat.addr = alloca [3 x float]*, align 8
  %normal.addr = alloca float*, align 8
  store [3 x float]* %r_mat, [3 x float]** %r_mat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %r_mat.addr, metadata !6634, metadata !DIExpression()), !dbg !6635
  store float* %normal, float** %normal.addr, align 8
  call void @llvm.dbg.declare(metadata float** %normal.addr, metadata !6636, metadata !DIExpression()), !dbg !6637
  %0 = load float*, float** %normal.addr, align 8, !dbg !6638
  %1 = load [3 x float]*, [3 x float]** %r_mat.addr, align 8, !dbg !6639
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %1, i64 2, !dbg !6639
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !6639
  %2 = load float*, float** %normal.addr, align 8, !dbg !6640
  call void @copy_v3_v3(float* %arraydecay, float* %2), !dbg !6641
  %3 = load [3 x float]*, [3 x float]** %r_mat.addr, align 8, !dbg !6642
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %3, i64 0, !dbg !6642
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx1, i64 0, i64 0, !dbg !6642
  %4 = load [3 x float]*, [3 x float]** %r_mat.addr, align 8, !dbg !6643
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %4, i64 1, !dbg !6643
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx3, i64 0, i64 0, !dbg !6643
  %5 = load [3 x float]*, [3 x float]** %r_mat.addr, align 8, !dbg !6644
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %5, i64 2, !dbg !6644
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx5, i64 0, i64 0, !dbg !6644
  call void @ortho_basis_v3v3_v3(float* %arraydecay2, float* %arraydecay4, float* %arraydecay6), !dbg !6645
  %6 = load [3 x float]*, [3 x float]** %r_mat.addr, align 8, !dbg !6646
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %6, i64 0, !dbg !6646
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx7, i64 0, i64 0, !dbg !6646
  %7 = load [3 x float]*, [3 x float]** %r_mat.addr, align 8, !dbg !6647
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %7, i64 1, !dbg !6647
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx9, i64 0, i64 0, !dbg !6647
  %8 = load [3 x float]*, [3 x float]** %r_mat.addr, align 8, !dbg !6648
  call void @transpose_m3([3 x float]* %8), !dbg !6649
  ret void, !dbg !6650
}

declare dso_local void @ortho_basis_v3v3_v3(float*, float*, float*) #2

declare dso_local void @transpose_m3([3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @interp_weights_face_v3(float* %w, float* %v1, float* %v2, float* %v3, float* %v4, float* %co) #0 !dbg !6651 {
entry:
  %w.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  %co.addr = alloca float*, align 8
  %w2 = alloca [3 x float], align 4
  %n1 = alloca [3 x float], align 4
  %n2 = alloca [3 x float], align 4
  %n = alloca [3 x float], align 4
  %degenerate = alloca i8, align 1
  %sw_ap = alloca float, align 4
  store float* %w, float** %w.addr, align 8
  call void @llvm.dbg.declare(metadata float** %w.addr, metadata !6654, metadata !DIExpression()), !dbg !6655
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !6656, metadata !DIExpression()), !dbg !6657
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !6658, metadata !DIExpression()), !dbg !6659
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !6660, metadata !DIExpression()), !dbg !6661
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !6662, metadata !DIExpression()), !dbg !6663
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !6664, metadata !DIExpression()), !dbg !6665
  call void @llvm.dbg.declare(metadata [3 x float]* %w2, metadata !6666, metadata !DIExpression()), !dbg !6667
  %0 = load float*, float** %w.addr, align 8, !dbg !6668
  %arrayidx = getelementptr inbounds float, float* %0, i64 3, !dbg !6668
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !6669
  %1 = load float*, float** %w.addr, align 8, !dbg !6670
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 2, !dbg !6670
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !6671
  %2 = load float*, float** %w.addr, align 8, !dbg !6672
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 1, !dbg !6672
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !6673
  %3 = load float*, float** %w.addr, align 8, !dbg !6674
  %arrayidx3 = getelementptr inbounds float, float* %3, i64 0, !dbg !6674
  store float 0.000000e+00, float* %arrayidx3, align 4, !dbg !6675
  %4 = load float*, float** %co.addr, align 8, !dbg !6676
  %5 = load float*, float** %v1.addr, align 8, !dbg !6678
  %call = call zeroext i8 @equals_v3v3(float* %4, float* %5), !dbg !6679
  %tobool = icmp ne i8 %call, 0, !dbg !6679
  br i1 %tobool, label %if.then, label %if.else, !dbg !6680

if.then:                                          ; preds = %entry
  %6 = load float*, float** %w.addr, align 8, !dbg !6681
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 0, !dbg !6681
  store float 1.000000e+00, float* %arrayidx4, align 4, !dbg !6682
  br label %if.end63, !dbg !6681

if.else:                                          ; preds = %entry
  %7 = load float*, float** %co.addr, align 8, !dbg !6683
  %8 = load float*, float** %v2.addr, align 8, !dbg !6685
  %call5 = call zeroext i8 @equals_v3v3(float* %7, float* %8), !dbg !6686
  %tobool6 = icmp ne i8 %call5, 0, !dbg !6686
  br i1 %tobool6, label %if.then7, label %if.else9, !dbg !6687

if.then7:                                         ; preds = %if.else
  %9 = load float*, float** %w.addr, align 8, !dbg !6688
  %arrayidx8 = getelementptr inbounds float, float* %9, i64 1, !dbg !6688
  store float 1.000000e+00, float* %arrayidx8, align 4, !dbg !6689
  br label %if.end62, !dbg !6688

if.else9:                                         ; preds = %if.else
  %10 = load float*, float** %co.addr, align 8, !dbg !6690
  %11 = load float*, float** %v3.addr, align 8, !dbg !6692
  %call10 = call zeroext i8 @equals_v3v3(float* %10, float* %11), !dbg !6693
  %tobool11 = icmp ne i8 %call10, 0, !dbg !6693
  br i1 %tobool11, label %if.then12, label %if.else14, !dbg !6694

if.then12:                                        ; preds = %if.else9
  %12 = load float*, float** %w.addr, align 8, !dbg !6695
  %arrayidx13 = getelementptr inbounds float, float* %12, i64 2, !dbg !6695
  store float 1.000000e+00, float* %arrayidx13, align 4, !dbg !6696
  br label %if.end61, !dbg !6695

if.else14:                                        ; preds = %if.else9
  %13 = load float*, float** %v4.addr, align 8, !dbg !6697
  %tobool15 = icmp ne float* %13, null, !dbg !6697
  br i1 %tobool15, label %land.lhs.true, label %if.else20, !dbg !6699

land.lhs.true:                                    ; preds = %if.else14
  %14 = load float*, float** %co.addr, align 8, !dbg !6700
  %15 = load float*, float** %v4.addr, align 8, !dbg !6701
  %call16 = call zeroext i8 @equals_v3v3(float* %14, float* %15), !dbg !6702
  %conv = zext i8 %call16 to i32, !dbg !6702
  %tobool17 = icmp ne i32 %conv, 0, !dbg !6702
  br i1 %tobool17, label %if.then18, label %if.else20, !dbg !6703

if.then18:                                        ; preds = %land.lhs.true
  %16 = load float*, float** %w.addr, align 8, !dbg !6704
  %arrayidx19 = getelementptr inbounds float, float* %16, i64 3, !dbg !6704
  store float 1.000000e+00, float* %arrayidx19, align 4, !dbg !6705
  br label %if.end60, !dbg !6704

if.else20:                                        ; preds = %land.lhs.true, %if.else14
  call void @llvm.dbg.declare(metadata [3 x float]* %n1, metadata !6706, metadata !DIExpression()), !dbg !6708
  call void @llvm.dbg.declare(metadata [3 x float]* %n2, metadata !6709, metadata !DIExpression()), !dbg !6710
  call void @llvm.dbg.declare(metadata [3 x float]* %n, metadata !6711, metadata !DIExpression()), !dbg !6712
  call void @llvm.dbg.declare(metadata i8* %degenerate, metadata !6713, metadata !DIExpression()), !dbg !6714
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !6715
  %17 = load float*, float** %v1.addr, align 8, !dbg !6716
  %18 = load float*, float** %v3.addr, align 8, !dbg !6717
  call void @sub_v3_v3v3(float* %arraydecay, float* %17, float* %18), !dbg !6718
  %19 = load float*, float** %v4.addr, align 8, !dbg !6719
  %tobool21 = icmp ne float* %19, null, !dbg !6719
  br i1 %tobool21, label %if.then22, label %if.else24, !dbg !6721

if.then22:                                        ; preds = %if.else20
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 0, !dbg !6722
  %20 = load float*, float** %v2.addr, align 8, !dbg !6724
  %21 = load float*, float** %v4.addr, align 8, !dbg !6725
  call void @sub_v3_v3v3(float* %arraydecay23, float* %20, float* %21), !dbg !6726
  br label %if.end, !dbg !6727

if.else24:                                        ; preds = %if.else20
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 0, !dbg !6728
  %22 = load float*, float** %v2.addr, align 8, !dbg !6730
  %23 = load float*, float** %v3.addr, align 8, !dbg !6731
  call void @sub_v3_v3v3(float* %arraydecay25, float* %22, float* %23), !dbg !6732
  br label %if.end

if.end:                                           ; preds = %if.else24, %if.then22
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !6733
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !6734
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 0, !dbg !6735
  call void @cross_v3_v3v3(float* %arraydecay26, float* %arraydecay27, float* %arraydecay28), !dbg !6736
  %24 = load float*, float** %v4.addr, align 8, !dbg !6737
  %tobool29 = icmp ne float* %24, null, !dbg !6737
  br i1 %tobool29, label %if.then30, label %if.else56, !dbg !6739

if.then30:                                        ; preds = %if.end
  %25 = load float*, float** %v1.addr, align 8, !dbg !6740
  %26 = load float*, float** %v2.addr, align 8, !dbg !6742
  %27 = load float*, float** %v4.addr, align 8, !dbg !6743
  %28 = load float*, float** %co.addr, align 8, !dbg !6744
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !6745
  %29 = load float*, float** %w.addr, align 8, !dbg !6746
  %call32 = call zeroext i8 @barycentric_weights(float* %25, float* %26, float* %27, float* %28, float* %arraydecay31, float* %29), !dbg !6747
  store i8 %call32, i8* %degenerate, align 1, !dbg !6748
  call void @llvm.dbg.declare(metadata float* %sw_ap, metadata !6749, metadata !DIExpression()), !dbg !6751
  %30 = load float*, float** %w.addr, align 8, !dbg !6751
  %arrayidx33 = getelementptr inbounds float, float* %30, i64 2, !dbg !6751
  %31 = load float, float* %arrayidx33, align 4, !dbg !6751
  store float %31, float* %sw_ap, align 4, !dbg !6751
  %32 = load float*, float** %w.addr, align 8, !dbg !6751
  %arrayidx34 = getelementptr inbounds float, float* %32, i64 3, !dbg !6751
  %33 = load float, float* %arrayidx34, align 4, !dbg !6751
  %34 = load float*, float** %w.addr, align 8, !dbg !6751
  %arrayidx35 = getelementptr inbounds float, float* %34, i64 2, !dbg !6751
  store float %33, float* %arrayidx35, align 4, !dbg !6751
  %35 = load float, float* %sw_ap, align 4, !dbg !6751
  %36 = load float*, float** %w.addr, align 8, !dbg !6751
  %arrayidx36 = getelementptr inbounds float, float* %36, i64 3, !dbg !6751
  store float %35, float* %arrayidx36, align 4, !dbg !6751
  %37 = load i8, i8* %degenerate, align 1, !dbg !6752
  %conv37 = zext i8 %37 to i32, !dbg !6752
  %tobool38 = icmp ne i32 %conv37, 0, !dbg !6752
  br i1 %tobool38, label %if.then41, label %lor.lhs.false, !dbg !6754

lor.lhs.false:                                    ; preds = %if.then30
  %38 = load float*, float** %w.addr, align 8, !dbg !6755
  %arrayidx39 = getelementptr inbounds float, float* %38, i64 0, !dbg !6755
  %39 = load float, float* %arrayidx39, align 4, !dbg !6755
  %cmp = fcmp olt float %39, 0.000000e+00, !dbg !6756
  br i1 %cmp, label %if.then41, label %if.end55, !dbg !6757

if.then41:                                        ; preds = %lor.lhs.false, %if.then30
  %40 = load float*, float** %v2.addr, align 8, !dbg !6758
  %41 = load float*, float** %v3.addr, align 8, !dbg !6760
  %42 = load float*, float** %v4.addr, align 8, !dbg !6761
  %43 = load float*, float** %co.addr, align 8, !dbg !6762
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !6763
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %w2, i64 0, i64 0, !dbg !6764
  %call44 = call zeroext i8 @barycentric_weights(float* %40, float* %41, float* %42, float* %43, float* %arraydecay42, float* %arraydecay43), !dbg !6765
  store i8 %call44, i8* %degenerate, align 1, !dbg !6766
  %44 = load i8, i8* %degenerate, align 1, !dbg !6767
  %tobool45 = icmp ne i8 %44, 0, !dbg !6767
  br i1 %tobool45, label %if.end54, label %if.then46, !dbg !6769

if.then46:                                        ; preds = %if.then41
  %45 = load float*, float** %w.addr, align 8, !dbg !6770
  %arrayidx47 = getelementptr inbounds float, float* %45, i64 0, !dbg !6770
  store float 0.000000e+00, float* %arrayidx47, align 4, !dbg !6772
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %w2, i64 0, i64 0, !dbg !6773
  %46 = load float, float* %arrayidx48, align 4, !dbg !6773
  %47 = load float*, float** %w.addr, align 8, !dbg !6774
  %arrayidx49 = getelementptr inbounds float, float* %47, i64 1, !dbg !6774
  store float %46, float* %arrayidx49, align 4, !dbg !6775
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %w2, i64 0, i64 1, !dbg !6776
  %48 = load float, float* %arrayidx50, align 4, !dbg !6776
  %49 = load float*, float** %w.addr, align 8, !dbg !6777
  %arrayidx51 = getelementptr inbounds float, float* %49, i64 2, !dbg !6777
  store float %48, float* %arrayidx51, align 4, !dbg !6778
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %w2, i64 0, i64 2, !dbg !6779
  %50 = load float, float* %arrayidx52, align 4, !dbg !6779
  %51 = load float*, float** %w.addr, align 8, !dbg !6780
  %arrayidx53 = getelementptr inbounds float, float* %51, i64 3, !dbg !6780
  store float %50, float* %arrayidx53, align 4, !dbg !6781
  br label %if.end54, !dbg !6782

if.end54:                                         ; preds = %if.then46, %if.then41
  br label %if.end55, !dbg !6783

if.end55:                                         ; preds = %if.end54, %lor.lhs.false
  br label %if.end59, !dbg !6784

if.else56:                                        ; preds = %if.end
  %52 = load float*, float** %v1.addr, align 8, !dbg !6785
  %53 = load float*, float** %v2.addr, align 8, !dbg !6787
  %54 = load float*, float** %v3.addr, align 8, !dbg !6788
  %55 = load float*, float** %co.addr, align 8, !dbg !6789
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !6790
  %56 = load float*, float** %w.addr, align 8, !dbg !6791
  %call58 = call zeroext i8 @barycentric_weights(float* %52, float* %53, float* %54, float* %55, float* %arraydecay57, float* %56), !dbg !6792
  br label %if.end59

if.end59:                                         ; preds = %if.else56, %if.end55
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then18
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then12
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then7
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then
  ret void, !dbg !6793
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @equals_v3v3(float* %v1, float* %v2) #0 !dbg !6794 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !6795, metadata !DIExpression()), !dbg !6796
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !6797, metadata !DIExpression()), !dbg !6798
  %0 = load float*, float** %v1.addr, align 8, !dbg !6799
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6799
  %1 = load float, float* %arrayidx, align 4, !dbg !6799
  %2 = load float*, float** %v2.addr, align 8, !dbg !6800
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6800
  %3 = load float, float* %arrayidx1, align 4, !dbg !6800
  %cmp = fcmp oeq float %1, %3, !dbg !6801
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !6802

land.lhs.true:                                    ; preds = %entry
  %4 = load float*, float** %v1.addr, align 8, !dbg !6803
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !6803
  %5 = load float, float* %arrayidx2, align 4, !dbg !6803
  %6 = load float*, float** %v2.addr, align 8, !dbg !6804
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !6804
  %7 = load float, float* %arrayidx3, align 4, !dbg !6804
  %cmp4 = fcmp oeq float %5, %7, !dbg !6805
  br i1 %cmp4, label %land.rhs, label %land.end, !dbg !6806

land.rhs:                                         ; preds = %land.lhs.true
  %8 = load float*, float** %v1.addr, align 8, !dbg !6807
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !6807
  %9 = load float, float* %arrayidx5, align 4, !dbg !6807
  %10 = load float*, float** %v2.addr, align 8, !dbg !6808
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !6808
  %11 = load float, float* %arrayidx6, align 4, !dbg !6808
  %cmp7 = fcmp oeq float %9, %11, !dbg !6809
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %12 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp7, %land.rhs ], !dbg !6810
  %land.ext = zext i1 %12 to i32, !dbg !6806
  %conv = trunc i32 %land.ext to i8, !dbg !6811
  ret i8 %conv, !dbg !6812
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @barycentric_weights(float* %v1, float* %v2, float* %v3, float* %co, float* %n, float* %w) #0 !dbg !6813 {
entry:
  %retval = alloca i8, align 1
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %co.addr = alloca float*, align 8
  %n.addr = alloca float*, align 8
  %w.addr = alloca float*, align 8
  %wtot = alloca float, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !6816, metadata !DIExpression()), !dbg !6817
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !6818, metadata !DIExpression()), !dbg !6819
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !6820, metadata !DIExpression()), !dbg !6821
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !6822, metadata !DIExpression()), !dbg !6823
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !6824, metadata !DIExpression()), !dbg !6825
  store float* %w, float** %w.addr, align 8
  call void @llvm.dbg.declare(metadata float** %w.addr, metadata !6826, metadata !DIExpression()), !dbg !6827
  call void @llvm.dbg.declare(metadata float* %wtot, metadata !6828, metadata !DIExpression()), !dbg !6829
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6830, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6832, metadata !DIExpression()), !dbg !6833
  %0 = load float*, float** %n.addr, align 8, !dbg !6834
  call void @axis_dominant_v3(i32* %i, i32* %j, float* %0), !dbg !6835
  %1 = load float*, float** %v2.addr, align 8, !dbg !6836
  %2 = load float*, float** %v3.addr, align 8, !dbg !6837
  %3 = load float*, float** %co.addr, align 8, !dbg !6838
  %4 = load i32, i32* %i, align 4, !dbg !6839
  %5 = load i32, i32* %j, align 4, !dbg !6840
  %call = call float @tri_signed_area(float* %1, float* %2, float* %3, i32 %4, i32 %5), !dbg !6841
  %6 = load float*, float** %w.addr, align 8, !dbg !6842
  %arrayidx = getelementptr inbounds float, float* %6, i64 0, !dbg !6842
  store float %call, float* %arrayidx, align 4, !dbg !6843
  %7 = load float*, float** %v3.addr, align 8, !dbg !6844
  %8 = load float*, float** %v1.addr, align 8, !dbg !6845
  %9 = load float*, float** %co.addr, align 8, !dbg !6846
  %10 = load i32, i32* %i, align 4, !dbg !6847
  %11 = load i32, i32* %j, align 4, !dbg !6848
  %call1 = call float @tri_signed_area(float* %7, float* %8, float* %9, i32 %10, i32 %11), !dbg !6849
  %12 = load float*, float** %w.addr, align 8, !dbg !6850
  %arrayidx2 = getelementptr inbounds float, float* %12, i64 1, !dbg !6850
  store float %call1, float* %arrayidx2, align 4, !dbg !6851
  %13 = load float*, float** %v1.addr, align 8, !dbg !6852
  %14 = load float*, float** %v2.addr, align 8, !dbg !6853
  %15 = load float*, float** %co.addr, align 8, !dbg !6854
  %16 = load i32, i32* %i, align 4, !dbg !6855
  %17 = load i32, i32* %j, align 4, !dbg !6856
  %call3 = call float @tri_signed_area(float* %13, float* %14, float* %15, i32 %16, i32 %17), !dbg !6857
  %18 = load float*, float** %w.addr, align 8, !dbg !6858
  %arrayidx4 = getelementptr inbounds float, float* %18, i64 2, !dbg !6858
  store float %call3, float* %arrayidx4, align 4, !dbg !6859
  %19 = load float*, float** %w.addr, align 8, !dbg !6860
  %arrayidx5 = getelementptr inbounds float, float* %19, i64 0, !dbg !6860
  %20 = load float, float* %arrayidx5, align 4, !dbg !6860
  %21 = load float*, float** %w.addr, align 8, !dbg !6861
  %arrayidx6 = getelementptr inbounds float, float* %21, i64 1, !dbg !6861
  %22 = load float, float* %arrayidx6, align 4, !dbg !6861
  %add = fadd float %20, %22, !dbg !6862
  %23 = load float*, float** %w.addr, align 8, !dbg !6863
  %arrayidx7 = getelementptr inbounds float, float* %23, i64 2, !dbg !6863
  %24 = load float, float* %arrayidx7, align 4, !dbg !6863
  %add8 = fadd float %add, %24, !dbg !6864
  store float %add8, float* %wtot, align 4, !dbg !6865
  %25 = load float, float* %wtot, align 4, !dbg !6866
  %26 = call float @llvm.fabs.f32(float %25), !dbg !6868
  %cmp = fcmp ogt float %26, 0x3E80000000000000, !dbg !6869
  br i1 %cmp, label %if.then, label %if.else, !dbg !6870

if.then:                                          ; preds = %entry
  %27 = load float*, float** %w.addr, align 8, !dbg !6871
  %28 = load float, float* %wtot, align 4, !dbg !6873
  %div = fdiv float 1.000000e+00, %28, !dbg !6874
  call void @mul_v3_fl(float* %27, float %div), !dbg !6875
  store i8 0, i8* %retval, align 1, !dbg !6876
  br label %return, !dbg !6876

if.else:                                          ; preds = %entry
  %29 = load float*, float** %w.addr, align 8, !dbg !6877
  call void @copy_v3_fl(float* %29, float 0x3FD5555560000000), !dbg !6879
  store i8 1, i8* %retval, align 1, !dbg !6880
  br label %return, !dbg !6880

return:                                           ; preds = %if.else, %if.then
  %30 = load i8, i8* %retval, align 1, !dbg !6881
  ret i8 %30, !dbg !6881
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @barycentric_inside_triangle_v2(float* %w) #0 !dbg !6882 {
entry:
  %retval = alloca i32, align 4
  %w.addr = alloca float*, align 8
  store float* %w, float** %w.addr, align 8
  call void @llvm.dbg.declare(metadata float** %w.addr, metadata !6885, metadata !DIExpression()), !dbg !6886
  br i1 true, label %cond.true, label %cond.false4, !dbg !6887

cond.true:                                        ; preds = %entry
  %0 = load float*, float** %w.addr, align 8, !dbg !6889
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6889
  %1 = load float, float* %arrayidx, align 4, !dbg !6889
  %cmp = fcmp olt float 0.000000e+00, %1, !dbg !6889
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !6889

land.lhs.true:                                    ; preds = %cond.true
  %2 = load float*, float** %w.addr, align 8, !dbg !6889
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6889
  %3 = load float, float* %arrayidx1, align 4, !dbg !6889
  %cmp2 = fcmp olt float %3, 1.000000e+00, !dbg !6889
  br i1 %cmp2, label %cond.true3, label %cond.false, !dbg !6889

cond.true3:                                       ; preds = %land.lhs.true
  br i1 true, label %land.lhs.true12, label %if.else, !dbg !6889

cond.false:                                       ; preds = %land.lhs.true, %cond.true
  br i1 false, label %land.lhs.true12, label %if.else, !dbg !6889

cond.false4:                                      ; preds = %entry
  %4 = load float*, float** %w.addr, align 8, !dbg !6889
  %arrayidx5 = getelementptr inbounds float, float* %4, i64 0, !dbg !6889
  %5 = load float, float* %arrayidx5, align 4, !dbg !6889
  %cmp6 = fcmp olt float 1.000000e+00, %5, !dbg !6889
  br i1 %cmp6, label %land.lhs.true7, label %cond.false11, !dbg !6889

land.lhs.true7:                                   ; preds = %cond.false4
  %6 = load float*, float** %w.addr, align 8, !dbg !6889
  %arrayidx8 = getelementptr inbounds float, float* %6, i64 0, !dbg !6889
  %7 = load float, float* %arrayidx8, align 4, !dbg !6889
  %cmp9 = fcmp olt float %7, 0.000000e+00, !dbg !6889
  br i1 %cmp9, label %cond.true10, label %cond.false11, !dbg !6887

cond.true10:                                      ; preds = %land.lhs.true7
  br i1 true, label %land.lhs.true12, label %if.else, !dbg !6889

cond.false11:                                     ; preds = %land.lhs.true7, %cond.false4
  br i1 false, label %land.lhs.true12, label %if.else, !dbg !6887

land.lhs.true12:                                  ; preds = %cond.false11, %cond.true10, %cond.false, %cond.true3
  br i1 true, label %cond.true13, label %cond.false21, !dbg !6890

cond.true13:                                      ; preds = %land.lhs.true12
  %8 = load float*, float** %w.addr, align 8, !dbg !6891
  %arrayidx14 = getelementptr inbounds float, float* %8, i64 1, !dbg !6891
  %9 = load float, float* %arrayidx14, align 4, !dbg !6891
  %cmp15 = fcmp olt float 0.000000e+00, %9, !dbg !6891
  br i1 %cmp15, label %land.lhs.true16, label %cond.false20, !dbg !6891

land.lhs.true16:                                  ; preds = %cond.true13
  %10 = load float*, float** %w.addr, align 8, !dbg !6891
  %arrayidx17 = getelementptr inbounds float, float* %10, i64 1, !dbg !6891
  %11 = load float, float* %arrayidx17, align 4, !dbg !6891
  %cmp18 = fcmp olt float %11, 1.000000e+00, !dbg !6891
  br i1 %cmp18, label %cond.true19, label %cond.false20, !dbg !6891

cond.true19:                                      ; preds = %land.lhs.true16
  br i1 true, label %land.lhs.true29, label %if.else, !dbg !6891

cond.false20:                                     ; preds = %land.lhs.true16, %cond.true13
  br i1 false, label %land.lhs.true29, label %if.else, !dbg !6891

cond.false21:                                     ; preds = %land.lhs.true12
  %12 = load float*, float** %w.addr, align 8, !dbg !6891
  %arrayidx22 = getelementptr inbounds float, float* %12, i64 1, !dbg !6891
  %13 = load float, float* %arrayidx22, align 4, !dbg !6891
  %cmp23 = fcmp olt float 1.000000e+00, %13, !dbg !6891
  br i1 %cmp23, label %land.lhs.true24, label %cond.false28, !dbg !6891

land.lhs.true24:                                  ; preds = %cond.false21
  %14 = load float*, float** %w.addr, align 8, !dbg !6891
  %arrayidx25 = getelementptr inbounds float, float* %14, i64 1, !dbg !6891
  %15 = load float, float* %arrayidx25, align 4, !dbg !6891
  %cmp26 = fcmp olt float %15, 0.000000e+00, !dbg !6891
  br i1 %cmp26, label %cond.true27, label %cond.false28, !dbg !6890

cond.true27:                                      ; preds = %land.lhs.true24
  br i1 true, label %land.lhs.true29, label %if.else, !dbg !6891

cond.false28:                                     ; preds = %land.lhs.true24, %cond.false21
  br i1 false, label %land.lhs.true29, label %if.else, !dbg !6890

land.lhs.true29:                                  ; preds = %cond.false28, %cond.true27, %cond.false20, %cond.true19
  br i1 true, label %cond.true30, label %cond.false38, !dbg !6892

cond.true30:                                      ; preds = %land.lhs.true29
  %16 = load float*, float** %w.addr, align 8, !dbg !6893
  %arrayidx31 = getelementptr inbounds float, float* %16, i64 2, !dbg !6893
  %17 = load float, float* %arrayidx31, align 4, !dbg !6893
  %cmp32 = fcmp olt float 0.000000e+00, %17, !dbg !6893
  br i1 %cmp32, label %land.lhs.true33, label %cond.false37, !dbg !6893

land.lhs.true33:                                  ; preds = %cond.true30
  %18 = load float*, float** %w.addr, align 8, !dbg !6893
  %arrayidx34 = getelementptr inbounds float, float* %18, i64 2, !dbg !6893
  %19 = load float, float* %arrayidx34, align 4, !dbg !6893
  %cmp35 = fcmp olt float %19, 1.000000e+00, !dbg !6893
  br i1 %cmp35, label %cond.true36, label %cond.false37, !dbg !6893

cond.true36:                                      ; preds = %land.lhs.true33
  br i1 true, label %if.then, label %if.else, !dbg !6893

cond.false37:                                     ; preds = %land.lhs.true33, %cond.true30
  br i1 false, label %if.then, label %if.else, !dbg !6893

cond.false38:                                     ; preds = %land.lhs.true29
  %20 = load float*, float** %w.addr, align 8, !dbg !6893
  %arrayidx39 = getelementptr inbounds float, float* %20, i64 2, !dbg !6893
  %21 = load float, float* %arrayidx39, align 4, !dbg !6893
  %cmp40 = fcmp olt float 1.000000e+00, %21, !dbg !6893
  br i1 %cmp40, label %land.lhs.true41, label %cond.false45, !dbg !6893

land.lhs.true41:                                  ; preds = %cond.false38
  %22 = load float*, float** %w.addr, align 8, !dbg !6893
  %arrayidx42 = getelementptr inbounds float, float* %22, i64 2, !dbg !6893
  %23 = load float, float* %arrayidx42, align 4, !dbg !6893
  %cmp43 = fcmp olt float %23, 0.000000e+00, !dbg !6893
  br i1 %cmp43, label %cond.true44, label %cond.false45, !dbg !6892

cond.true44:                                      ; preds = %land.lhs.true41
  br i1 true, label %if.then, label %if.else, !dbg !6893

cond.false45:                                     ; preds = %land.lhs.true41, %cond.false38
  br i1 false, label %if.then, label %if.else, !dbg !6892

if.then:                                          ; preds = %cond.false45, %cond.true44, %cond.false37, %cond.true36
  store i32 1, i32* %retval, align 4, !dbg !6894
  br label %return, !dbg !6894

if.else:                                          ; preds = %cond.false45, %cond.true44, %cond.false37, %cond.true36, %cond.false28, %cond.true27, %cond.false20, %cond.true19, %cond.false11, %cond.true10, %cond.false, %cond.true3
  br i1 true, label %cond.true46, label %cond.false54, !dbg !6896

cond.true46:                                      ; preds = %if.else
  %24 = load float*, float** %w.addr, align 8, !dbg !6898
  %arrayidx47 = getelementptr inbounds float, float* %24, i64 0, !dbg !6898
  %25 = load float, float* %arrayidx47, align 4, !dbg !6898
  %cmp48 = fcmp ole float 0.000000e+00, %25, !dbg !6898
  br i1 %cmp48, label %land.lhs.true49, label %cond.false53, !dbg !6898

land.lhs.true49:                                  ; preds = %cond.true46
  %26 = load float*, float** %w.addr, align 8, !dbg !6898
  %arrayidx50 = getelementptr inbounds float, float* %26, i64 0, !dbg !6898
  %27 = load float, float* %arrayidx50, align 4, !dbg !6898
  %cmp51 = fcmp ole float %27, 1.000000e+00, !dbg !6898
  br i1 %cmp51, label %cond.true52, label %cond.false53, !dbg !6898

cond.true52:                                      ; preds = %land.lhs.true49
  br i1 true, label %land.lhs.true62, label %if.end, !dbg !6898

cond.false53:                                     ; preds = %land.lhs.true49, %cond.true46
  br i1 false, label %land.lhs.true62, label %if.end, !dbg !6898

cond.false54:                                     ; preds = %if.else
  %28 = load float*, float** %w.addr, align 8, !dbg !6898
  %arrayidx55 = getelementptr inbounds float, float* %28, i64 0, !dbg !6898
  %29 = load float, float* %arrayidx55, align 4, !dbg !6898
  %cmp56 = fcmp ole float 1.000000e+00, %29, !dbg !6898
  br i1 %cmp56, label %land.lhs.true57, label %cond.false61, !dbg !6898

land.lhs.true57:                                  ; preds = %cond.false54
  %30 = load float*, float** %w.addr, align 8, !dbg !6898
  %arrayidx58 = getelementptr inbounds float, float* %30, i64 0, !dbg !6898
  %31 = load float, float* %arrayidx58, align 4, !dbg !6898
  %cmp59 = fcmp ole float %31, 0.000000e+00, !dbg !6898
  br i1 %cmp59, label %cond.true60, label %cond.false61, !dbg !6896

cond.true60:                                      ; preds = %land.lhs.true57
  br i1 true, label %land.lhs.true62, label %if.end, !dbg !6898

cond.false61:                                     ; preds = %land.lhs.true57, %cond.false54
  br i1 false, label %land.lhs.true62, label %if.end, !dbg !6896

land.lhs.true62:                                  ; preds = %cond.false61, %cond.true60, %cond.false53, %cond.true52
  br i1 true, label %cond.true63, label %cond.false71, !dbg !6899

cond.true63:                                      ; preds = %land.lhs.true62
  %32 = load float*, float** %w.addr, align 8, !dbg !6900
  %arrayidx64 = getelementptr inbounds float, float* %32, i64 1, !dbg !6900
  %33 = load float, float* %arrayidx64, align 4, !dbg !6900
  %cmp65 = fcmp ole float 0.000000e+00, %33, !dbg !6900
  br i1 %cmp65, label %land.lhs.true66, label %cond.false70, !dbg !6900

land.lhs.true66:                                  ; preds = %cond.true63
  %34 = load float*, float** %w.addr, align 8, !dbg !6900
  %arrayidx67 = getelementptr inbounds float, float* %34, i64 1, !dbg !6900
  %35 = load float, float* %arrayidx67, align 4, !dbg !6900
  %cmp68 = fcmp ole float %35, 1.000000e+00, !dbg !6900
  br i1 %cmp68, label %cond.true69, label %cond.false70, !dbg !6900

cond.true69:                                      ; preds = %land.lhs.true66
  br i1 true, label %land.lhs.true79, label %if.end, !dbg !6900

cond.false70:                                     ; preds = %land.lhs.true66, %cond.true63
  br i1 false, label %land.lhs.true79, label %if.end, !dbg !6900

cond.false71:                                     ; preds = %land.lhs.true62
  %36 = load float*, float** %w.addr, align 8, !dbg !6900
  %arrayidx72 = getelementptr inbounds float, float* %36, i64 1, !dbg !6900
  %37 = load float, float* %arrayidx72, align 4, !dbg !6900
  %cmp73 = fcmp ole float 1.000000e+00, %37, !dbg !6900
  br i1 %cmp73, label %land.lhs.true74, label %cond.false78, !dbg !6900

land.lhs.true74:                                  ; preds = %cond.false71
  %38 = load float*, float** %w.addr, align 8, !dbg !6900
  %arrayidx75 = getelementptr inbounds float, float* %38, i64 1, !dbg !6900
  %39 = load float, float* %arrayidx75, align 4, !dbg !6900
  %cmp76 = fcmp ole float %39, 0.000000e+00, !dbg !6900
  br i1 %cmp76, label %cond.true77, label %cond.false78, !dbg !6899

cond.true77:                                      ; preds = %land.lhs.true74
  br i1 true, label %land.lhs.true79, label %if.end, !dbg !6900

cond.false78:                                     ; preds = %land.lhs.true74, %cond.false71
  br i1 false, label %land.lhs.true79, label %if.end, !dbg !6899

land.lhs.true79:                                  ; preds = %cond.false78, %cond.true77, %cond.false70, %cond.true69
  br i1 true, label %cond.true80, label %cond.false88, !dbg !6901

cond.true80:                                      ; preds = %land.lhs.true79
  %40 = load float*, float** %w.addr, align 8, !dbg !6902
  %arrayidx81 = getelementptr inbounds float, float* %40, i64 2, !dbg !6902
  %41 = load float, float* %arrayidx81, align 4, !dbg !6902
  %cmp82 = fcmp ole float 0.000000e+00, %41, !dbg !6902
  br i1 %cmp82, label %land.lhs.true83, label %cond.false87, !dbg !6902

land.lhs.true83:                                  ; preds = %cond.true80
  %42 = load float*, float** %w.addr, align 8, !dbg !6902
  %arrayidx84 = getelementptr inbounds float, float* %42, i64 2, !dbg !6902
  %43 = load float, float* %arrayidx84, align 4, !dbg !6902
  %cmp85 = fcmp ole float %43, 1.000000e+00, !dbg !6902
  br i1 %cmp85, label %cond.true86, label %cond.false87, !dbg !6902

cond.true86:                                      ; preds = %land.lhs.true83
  br i1 true, label %if.then96, label %if.end, !dbg !6902

cond.false87:                                     ; preds = %land.lhs.true83, %cond.true80
  br i1 false, label %if.then96, label %if.end, !dbg !6902

cond.false88:                                     ; preds = %land.lhs.true79
  %44 = load float*, float** %w.addr, align 8, !dbg !6902
  %arrayidx89 = getelementptr inbounds float, float* %44, i64 2, !dbg !6902
  %45 = load float, float* %arrayidx89, align 4, !dbg !6902
  %cmp90 = fcmp ole float 1.000000e+00, %45, !dbg !6902
  br i1 %cmp90, label %land.lhs.true91, label %cond.false95, !dbg !6902

land.lhs.true91:                                  ; preds = %cond.false88
  %46 = load float*, float** %w.addr, align 8, !dbg !6902
  %arrayidx92 = getelementptr inbounds float, float* %46, i64 2, !dbg !6902
  %47 = load float, float* %arrayidx92, align 4, !dbg !6902
  %cmp93 = fcmp ole float %47, 0.000000e+00, !dbg !6902
  br i1 %cmp93, label %cond.true94, label %cond.false95, !dbg !6901

cond.true94:                                      ; preds = %land.lhs.true91
  br i1 true, label %if.then96, label %if.end, !dbg !6902

cond.false95:                                     ; preds = %land.lhs.true91, %cond.false88
  br i1 false, label %if.then96, label %if.end, !dbg !6901

if.then96:                                        ; preds = %cond.false95, %cond.true94, %cond.false87, %cond.true86
  store i32 2, i32* %retval, align 4, !dbg !6903
  br label %return, !dbg !6903

if.end:                                           ; preds = %cond.false95, %cond.true94, %cond.false87, %cond.true86, %cond.false78, %cond.true77, %cond.false70, %cond.true69, %cond.false61, %cond.true60, %cond.false53, %cond.true52
  br label %if.end97

if.end97:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6905
  br label %return, !dbg !6905

return:                                           ; preds = %if.end97, %if.then96, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !6906
  ret i32 %48, !dbg !6906
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @barycentric_coords_v2(float* %v1, float* %v2, float* %v3, float* %co, float* %w) #0 !dbg !6907 {
entry:
  %retval = alloca i8, align 1
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %co.addr = alloca float*, align 8
  %w.addr = alloca float*, align 8
  %x = alloca float, align 4
  %y = alloca float, align 4
  %x1 = alloca float, align 4
  %y1 = alloca float, align 4
  %x2 = alloca float, align 4
  %y2 = alloca float, align 4
  %x3 = alloca float, align 4
  %y3 = alloca float, align 4
  %det = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !6908, metadata !DIExpression()), !dbg !6909
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !6910, metadata !DIExpression()), !dbg !6911
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !6912, metadata !DIExpression()), !dbg !6913
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !6914, metadata !DIExpression()), !dbg !6915
  store float* %w, float** %w.addr, align 8
  call void @llvm.dbg.declare(metadata float** %w.addr, metadata !6916, metadata !DIExpression()), !dbg !6917
  call void @llvm.dbg.declare(metadata float* %x, metadata !6918, metadata !DIExpression()), !dbg !6919
  %0 = load float*, float** %co.addr, align 8, !dbg !6920
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6920
  %1 = load float, float* %arrayidx, align 4, !dbg !6920
  store float %1, float* %x, align 4, !dbg !6919
  call void @llvm.dbg.declare(metadata float* %y, metadata !6921, metadata !DIExpression()), !dbg !6922
  %2 = load float*, float** %co.addr, align 8, !dbg !6923
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !6923
  %3 = load float, float* %arrayidx1, align 4, !dbg !6923
  store float %3, float* %y, align 4, !dbg !6922
  call void @llvm.dbg.declare(metadata float* %x1, metadata !6924, metadata !DIExpression()), !dbg !6925
  %4 = load float*, float** %v1.addr, align 8, !dbg !6926
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !6926
  %5 = load float, float* %arrayidx2, align 4, !dbg !6926
  store float %5, float* %x1, align 4, !dbg !6925
  call void @llvm.dbg.declare(metadata float* %y1, metadata !6927, metadata !DIExpression()), !dbg !6928
  %6 = load float*, float** %v1.addr, align 8, !dbg !6929
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !6929
  %7 = load float, float* %arrayidx3, align 4, !dbg !6929
  store float %7, float* %y1, align 4, !dbg !6928
  call void @llvm.dbg.declare(metadata float* %x2, metadata !6930, metadata !DIExpression()), !dbg !6931
  %8 = load float*, float** %v2.addr, align 8, !dbg !6932
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 0, !dbg !6932
  %9 = load float, float* %arrayidx4, align 4, !dbg !6932
  store float %9, float* %x2, align 4, !dbg !6931
  call void @llvm.dbg.declare(metadata float* %y2, metadata !6933, metadata !DIExpression()), !dbg !6934
  %10 = load float*, float** %v2.addr, align 8, !dbg !6935
  %arrayidx5 = getelementptr inbounds float, float* %10, i64 1, !dbg !6935
  %11 = load float, float* %arrayidx5, align 4, !dbg !6935
  store float %11, float* %y2, align 4, !dbg !6934
  call void @llvm.dbg.declare(metadata float* %x3, metadata !6936, metadata !DIExpression()), !dbg !6937
  %12 = load float*, float** %v3.addr, align 8, !dbg !6938
  %arrayidx6 = getelementptr inbounds float, float* %12, i64 0, !dbg !6938
  %13 = load float, float* %arrayidx6, align 4, !dbg !6938
  store float %13, float* %x3, align 4, !dbg !6937
  call void @llvm.dbg.declare(metadata float* %y3, metadata !6939, metadata !DIExpression()), !dbg !6940
  %14 = load float*, float** %v3.addr, align 8, !dbg !6941
  %arrayidx7 = getelementptr inbounds float, float* %14, i64 1, !dbg !6941
  %15 = load float, float* %arrayidx7, align 4, !dbg !6941
  store float %15, float* %y3, align 4, !dbg !6940
  call void @llvm.dbg.declare(metadata float* %det, metadata !6942, metadata !DIExpression()), !dbg !6943
  %16 = load float, float* %y2, align 4, !dbg !6944
  %17 = load float, float* %y3, align 4, !dbg !6945
  %sub = fsub float %16, %17, !dbg !6946
  %18 = load float, float* %x1, align 4, !dbg !6947
  %19 = load float, float* %x3, align 4, !dbg !6948
  %sub8 = fsub float %18, %19, !dbg !6949
  %mul = fmul float %sub, %sub8, !dbg !6950
  %20 = load float, float* %x3, align 4, !dbg !6951
  %21 = load float, float* %x2, align 4, !dbg !6952
  %sub9 = fsub float %20, %21, !dbg !6953
  %22 = load float, float* %y1, align 4, !dbg !6954
  %23 = load float, float* %y3, align 4, !dbg !6955
  %sub10 = fsub float %22, %23, !dbg !6956
  %mul11 = fmul float %sub9, %sub10, !dbg !6957
  %add = fadd float %mul, %mul11, !dbg !6958
  store float %add, float* %det, align 4, !dbg !6943
  %24 = load float, float* %det, align 4, !dbg !6959
  %25 = call float @llvm.fabs.f32(float %24), !dbg !6961
  %cmp = fcmp ogt float %25, 0x3E80000000000000, !dbg !6962
  br i1 %cmp, label %if.then, label %if.end, !dbg !6963

if.then:                                          ; preds = %entry
  %26 = load float, float* %y2, align 4, !dbg !6964
  %27 = load float, float* %y3, align 4, !dbg !6966
  %sub12 = fsub float %26, %27, !dbg !6967
  %28 = load float, float* %x, align 4, !dbg !6968
  %29 = load float, float* %x3, align 4, !dbg !6969
  %sub13 = fsub float %28, %29, !dbg !6970
  %mul14 = fmul float %sub12, %sub13, !dbg !6971
  %30 = load float, float* %x3, align 4, !dbg !6972
  %31 = load float, float* %x2, align 4, !dbg !6973
  %sub15 = fsub float %30, %31, !dbg !6974
  %32 = load float, float* %y, align 4, !dbg !6975
  %33 = load float, float* %y3, align 4, !dbg !6976
  %sub16 = fsub float %32, %33, !dbg !6977
  %mul17 = fmul float %sub15, %sub16, !dbg !6978
  %add18 = fadd float %mul14, %mul17, !dbg !6979
  %34 = load float, float* %det, align 4, !dbg !6980
  %div = fdiv float %add18, %34, !dbg !6981
  %35 = load float*, float** %w.addr, align 8, !dbg !6982
  %arrayidx19 = getelementptr inbounds float, float* %35, i64 0, !dbg !6982
  store float %div, float* %arrayidx19, align 4, !dbg !6983
  %36 = load float, float* %y3, align 4, !dbg !6984
  %37 = load float, float* %y1, align 4, !dbg !6985
  %sub20 = fsub float %36, %37, !dbg !6986
  %38 = load float, float* %x, align 4, !dbg !6987
  %39 = load float, float* %x3, align 4, !dbg !6988
  %sub21 = fsub float %38, %39, !dbg !6989
  %mul22 = fmul float %sub20, %sub21, !dbg !6990
  %40 = load float, float* %x1, align 4, !dbg !6991
  %41 = load float, float* %x3, align 4, !dbg !6992
  %sub23 = fsub float %40, %41, !dbg !6993
  %42 = load float, float* %y, align 4, !dbg !6994
  %43 = load float, float* %y3, align 4, !dbg !6995
  %sub24 = fsub float %42, %43, !dbg !6996
  %mul25 = fmul float %sub23, %sub24, !dbg !6997
  %add26 = fadd float %mul22, %mul25, !dbg !6998
  %44 = load float, float* %det, align 4, !dbg !6999
  %div27 = fdiv float %add26, %44, !dbg !7000
  %45 = load float*, float** %w.addr, align 8, !dbg !7001
  %arrayidx28 = getelementptr inbounds float, float* %45, i64 1, !dbg !7001
  store float %div27, float* %arrayidx28, align 4, !dbg !7002
  %46 = load float*, float** %w.addr, align 8, !dbg !7003
  %arrayidx29 = getelementptr inbounds float, float* %46, i64 0, !dbg !7003
  %47 = load float, float* %arrayidx29, align 4, !dbg !7003
  %sub30 = fsub float 1.000000e+00, %47, !dbg !7004
  %48 = load float*, float** %w.addr, align 8, !dbg !7005
  %arrayidx31 = getelementptr inbounds float, float* %48, i64 1, !dbg !7005
  %49 = load float, float* %arrayidx31, align 4, !dbg !7005
  %sub32 = fsub float %sub30, %49, !dbg !7006
  %50 = load float*, float** %w.addr, align 8, !dbg !7007
  %arrayidx33 = getelementptr inbounds float, float* %50, i64 2, !dbg !7007
  store float %sub32, float* %arrayidx33, align 4, !dbg !7008
  store i8 1, i8* %retval, align 1, !dbg !7009
  br label %return, !dbg !7009

if.end:                                           ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !7010
  br label %return, !dbg !7010

return:                                           ; preds = %if.end, %if.then
  %51 = load i8, i8* %retval, align 1, !dbg !7011
  ret i8 %51, !dbg !7011
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @barycentric_weights_v2(float* %v1, float* %v2, float* %v3, float* %co, float* %w) #0 !dbg !7012 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %co.addr = alloca float*, align 8
  %w.addr = alloca float*, align 8
  %wtot = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !7015, metadata !DIExpression()), !dbg !7016
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !7017, metadata !DIExpression()), !dbg !7018
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !7019, metadata !DIExpression()), !dbg !7020
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !7021, metadata !DIExpression()), !dbg !7022
  store float* %w, float** %w.addr, align 8
  call void @llvm.dbg.declare(metadata float** %w.addr, metadata !7023, metadata !DIExpression()), !dbg !7024
  call void @llvm.dbg.declare(metadata float* %wtot, metadata !7025, metadata !DIExpression()), !dbg !7026
  %0 = load float*, float** %v2.addr, align 8, !dbg !7027
  %1 = load float*, float** %v3.addr, align 8, !dbg !7028
  %2 = load float*, float** %co.addr, align 8, !dbg !7029
  %call = call float @area_tri_signed_v2(float* %0, float* %1, float* %2), !dbg !7030
  %3 = load float*, float** %w.addr, align 8, !dbg !7031
  %arrayidx = getelementptr inbounds float, float* %3, i64 0, !dbg !7031
  store float %call, float* %arrayidx, align 4, !dbg !7032
  %4 = load float*, float** %v3.addr, align 8, !dbg !7033
  %5 = load float*, float** %v1.addr, align 8, !dbg !7034
  %6 = load float*, float** %co.addr, align 8, !dbg !7035
  %call1 = call float @area_tri_signed_v2(float* %4, float* %5, float* %6), !dbg !7036
  %7 = load float*, float** %w.addr, align 8, !dbg !7037
  %arrayidx2 = getelementptr inbounds float, float* %7, i64 1, !dbg !7037
  store float %call1, float* %arrayidx2, align 4, !dbg !7038
  %8 = load float*, float** %v1.addr, align 8, !dbg !7039
  %9 = load float*, float** %v2.addr, align 8, !dbg !7040
  %10 = load float*, float** %co.addr, align 8, !dbg !7041
  %call3 = call float @area_tri_signed_v2(float* %8, float* %9, float* %10), !dbg !7042
  %11 = load float*, float** %w.addr, align 8, !dbg !7043
  %arrayidx4 = getelementptr inbounds float, float* %11, i64 2, !dbg !7043
  store float %call3, float* %arrayidx4, align 4, !dbg !7044
  %12 = load float*, float** %w.addr, align 8, !dbg !7045
  %arrayidx5 = getelementptr inbounds float, float* %12, i64 0, !dbg !7045
  %13 = load float, float* %arrayidx5, align 4, !dbg !7045
  %14 = load float*, float** %w.addr, align 8, !dbg !7046
  %arrayidx6 = getelementptr inbounds float, float* %14, i64 1, !dbg !7046
  %15 = load float, float* %arrayidx6, align 4, !dbg !7046
  %add = fadd float %13, %15, !dbg !7047
  %16 = load float*, float** %w.addr, align 8, !dbg !7048
  %arrayidx7 = getelementptr inbounds float, float* %16, i64 2, !dbg !7048
  %17 = load float, float* %arrayidx7, align 4, !dbg !7048
  %add8 = fadd float %add, %17, !dbg !7049
  store float %add8, float* %wtot, align 4, !dbg !7050
  %18 = load float, float* %wtot, align 4, !dbg !7051
  %cmp = fcmp une float %18, 0.000000e+00, !dbg !7053
  br i1 %cmp, label %if.then, label %if.else, !dbg !7054

if.then:                                          ; preds = %entry
  %19 = load float*, float** %w.addr, align 8, !dbg !7055
  %20 = load float, float* %wtot, align 4, !dbg !7057
  %div = fdiv float 1.000000e+00, %20, !dbg !7058
  call void @mul_v3_fl(float* %19, float %div), !dbg !7059
  br label %if.end, !dbg !7060

if.else:                                          ; preds = %entry
  %21 = load float*, float** %w.addr, align 8, !dbg !7061
  call void @copy_v3_fl(float* %21, float 0x3FD5555560000000), !dbg !7063
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7064
}

; Function Attrs: noinline nounwind uwtable
define internal float @area_tri_signed_v2(float* %v1, float* %v2, float* %v3) #0 !dbg !7065 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !7066, metadata !DIExpression()), !dbg !7067
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !7068, metadata !DIExpression()), !dbg !7069
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !7070, metadata !DIExpression()), !dbg !7071
  %0 = load float*, float** %v1.addr, align 8, !dbg !7072
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7072
  %1 = load float, float* %arrayidx, align 4, !dbg !7072
  %2 = load float*, float** %v2.addr, align 8, !dbg !7073
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7073
  %3 = load float, float* %arrayidx1, align 4, !dbg !7073
  %sub = fsub float %1, %3, !dbg !7074
  %4 = load float*, float** %v2.addr, align 8, !dbg !7075
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7075
  %5 = load float, float* %arrayidx2, align 4, !dbg !7075
  %6 = load float*, float** %v3.addr, align 8, !dbg !7076
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !7076
  %7 = load float, float* %arrayidx3, align 4, !dbg !7076
  %sub4 = fsub float %5, %7, !dbg !7077
  %mul = fmul float %sub, %sub4, !dbg !7078
  %8 = load float*, float** %v1.addr, align 8, !dbg !7079
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 1, !dbg !7079
  %9 = load float, float* %arrayidx5, align 4, !dbg !7079
  %10 = load float*, float** %v2.addr, align 8, !dbg !7080
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 1, !dbg !7080
  %11 = load float, float* %arrayidx6, align 4, !dbg !7080
  %sub7 = fsub float %9, %11, !dbg !7081
  %12 = load float*, float** %v3.addr, align 8, !dbg !7082
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 0, !dbg !7082
  %13 = load float, float* %arrayidx8, align 4, !dbg !7082
  %14 = load float*, float** %v2.addr, align 8, !dbg !7083
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 0, !dbg !7083
  %15 = load float, float* %arrayidx9, align 4, !dbg !7083
  %sub10 = fsub float %13, %15, !dbg !7084
  %mul11 = fmul float %sub7, %sub10, !dbg !7085
  %add = fadd float %mul, %mul11, !dbg !7086
  %mul12 = fmul float 5.000000e-01, %add, !dbg !7087
  ret float %mul12, !dbg !7088
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_fl(float* %r, float %f) #0 !dbg !7089 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7090, metadata !DIExpression()), !dbg !7091
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !7092, metadata !DIExpression()), !dbg !7093
  %0 = load float, float* %f.addr, align 4, !dbg !7094
  %1 = load float*, float** %r.addr, align 8, !dbg !7095
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !7095
  store float %0, float* %arrayidx, align 4, !dbg !7096
  %2 = load float, float* %f.addr, align 4, !dbg !7097
  %3 = load float*, float** %r.addr, align 8, !dbg !7098
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !7098
  store float %2, float* %arrayidx1, align 4, !dbg !7099
  %4 = load float, float* %f.addr, align 4, !dbg !7100
  %5 = load float*, float** %r.addr, align 8, !dbg !7101
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 2, !dbg !7101
  store float %4, float* %arrayidx2, align 4, !dbg !7102
  ret void, !dbg !7103
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @barycentric_weights_v2_persp(float* %v1, float* %v2, float* %v3, float* %co, float* %w) #0 !dbg !7104 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %co.addr = alloca float*, align 8
  %w.addr = alloca float*, align 8
  %wtot = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !7105, metadata !DIExpression()), !dbg !7106
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !7107, metadata !DIExpression()), !dbg !7108
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !7109, metadata !DIExpression()), !dbg !7110
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !7111, metadata !DIExpression()), !dbg !7112
  store float* %w, float** %w.addr, align 8
  call void @llvm.dbg.declare(metadata float** %w.addr, metadata !7113, metadata !DIExpression()), !dbg !7114
  call void @llvm.dbg.declare(metadata float* %wtot, metadata !7115, metadata !DIExpression()), !dbg !7116
  %0 = load float*, float** %v2.addr, align 8, !dbg !7117
  %1 = load float*, float** %v3.addr, align 8, !dbg !7118
  %2 = load float*, float** %co.addr, align 8, !dbg !7119
  %call = call float @area_tri_signed_v2(float* %0, float* %1, float* %2), !dbg !7120
  %3 = load float*, float** %v1.addr, align 8, !dbg !7121
  %arrayidx = getelementptr inbounds float, float* %3, i64 3, !dbg !7121
  %4 = load float, float* %arrayidx, align 4, !dbg !7121
  %div = fdiv float %call, %4, !dbg !7122
  %5 = load float*, float** %w.addr, align 8, !dbg !7123
  %arrayidx1 = getelementptr inbounds float, float* %5, i64 0, !dbg !7123
  store float %div, float* %arrayidx1, align 4, !dbg !7124
  %6 = load float*, float** %v3.addr, align 8, !dbg !7125
  %7 = load float*, float** %v1.addr, align 8, !dbg !7126
  %8 = load float*, float** %co.addr, align 8, !dbg !7127
  %call2 = call float @area_tri_signed_v2(float* %6, float* %7, float* %8), !dbg !7128
  %9 = load float*, float** %v2.addr, align 8, !dbg !7129
  %arrayidx3 = getelementptr inbounds float, float* %9, i64 3, !dbg !7129
  %10 = load float, float* %arrayidx3, align 4, !dbg !7129
  %div4 = fdiv float %call2, %10, !dbg !7130
  %11 = load float*, float** %w.addr, align 8, !dbg !7131
  %arrayidx5 = getelementptr inbounds float, float* %11, i64 1, !dbg !7131
  store float %div4, float* %arrayidx5, align 4, !dbg !7132
  %12 = load float*, float** %v1.addr, align 8, !dbg !7133
  %13 = load float*, float** %v2.addr, align 8, !dbg !7134
  %14 = load float*, float** %co.addr, align 8, !dbg !7135
  %call6 = call float @area_tri_signed_v2(float* %12, float* %13, float* %14), !dbg !7136
  %15 = load float*, float** %v3.addr, align 8, !dbg !7137
  %arrayidx7 = getelementptr inbounds float, float* %15, i64 3, !dbg !7137
  %16 = load float, float* %arrayidx7, align 4, !dbg !7137
  %div8 = fdiv float %call6, %16, !dbg !7138
  %17 = load float*, float** %w.addr, align 8, !dbg !7139
  %arrayidx9 = getelementptr inbounds float, float* %17, i64 2, !dbg !7139
  store float %div8, float* %arrayidx9, align 4, !dbg !7140
  %18 = load float*, float** %w.addr, align 8, !dbg !7141
  %arrayidx10 = getelementptr inbounds float, float* %18, i64 0, !dbg !7141
  %19 = load float, float* %arrayidx10, align 4, !dbg !7141
  %20 = load float*, float** %w.addr, align 8, !dbg !7142
  %arrayidx11 = getelementptr inbounds float, float* %20, i64 1, !dbg !7142
  %21 = load float, float* %arrayidx11, align 4, !dbg !7142
  %add = fadd float %19, %21, !dbg !7143
  %22 = load float*, float** %w.addr, align 8, !dbg !7144
  %arrayidx12 = getelementptr inbounds float, float* %22, i64 2, !dbg !7144
  %23 = load float, float* %arrayidx12, align 4, !dbg !7144
  %add13 = fadd float %add, %23, !dbg !7145
  store float %add13, float* %wtot, align 4, !dbg !7146
  %24 = load float, float* %wtot, align 4, !dbg !7147
  %cmp = fcmp une float %24, 0.000000e+00, !dbg !7149
  br i1 %cmp, label %if.then, label %if.else, !dbg !7150

if.then:                                          ; preds = %entry
  %25 = load float*, float** %w.addr, align 8, !dbg !7151
  %26 = load float, float* %wtot, align 4, !dbg !7153
  %div14 = fdiv float 1.000000e+00, %26, !dbg !7154
  call void @mul_v3_fl(float* %25, float %div14), !dbg !7155
  br label %if.end, !dbg !7156

if.else:                                          ; preds = %entry
  %27 = load float*, float** %w.addr, align 8, !dbg !7157
  %arrayidx15 = getelementptr inbounds float, float* %27, i64 2, !dbg !7157
  store float 0x3FD5555560000000, float* %arrayidx15, align 4, !dbg !7159
  %28 = load float*, float** %w.addr, align 8, !dbg !7160
  %arrayidx16 = getelementptr inbounds float, float* %28, i64 1, !dbg !7160
  store float 0x3FD5555560000000, float* %arrayidx16, align 4, !dbg !7161
  %29 = load float*, float** %w.addr, align 8, !dbg !7162
  %arrayidx17 = getelementptr inbounds float, float* %29, i64 0, !dbg !7162
  store float 0x3FD5555560000000, float* %arrayidx17, align 4, !dbg !7163
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7164
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @barycentric_weights_v2_quad(float* %v1, float* %v2, float* %v3, float* %v4, float* %co, float* %w) #0 !dbg !7165 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  %co.addr = alloca float*, align 8
  %w.addr = alloca float*, align 8
  %dirs = alloca [4 x [2 x float]], align 16
  %lens = alloca [4 x float], align 16
  %wtot = alloca float, align 4
  %area = alloca float, align 4
  %t = alloca [4 x float], align 16
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !7168, metadata !DIExpression()), !dbg !7169
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !7170, metadata !DIExpression()), !dbg !7171
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !7172, metadata !DIExpression()), !dbg !7173
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !7174, metadata !DIExpression()), !dbg !7175
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !7176, metadata !DIExpression()), !dbg !7177
  store float* %w, float** %w.addr, align 8
  call void @llvm.dbg.declare(metadata float** %w.addr, metadata !7178, metadata !DIExpression()), !dbg !7179
  call void @llvm.dbg.declare(metadata [4 x [2 x float]]* %dirs, metadata !7180, metadata !DIExpression()), !dbg !7183
  %arrayinit.begin = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %dirs, i64 0, i64 0, !dbg !7184
  %arrayinit.begin1 = getelementptr inbounds [2 x float], [2 x float]* %arrayinit.begin, i64 0, i64 0, !dbg !7185
  %0 = load float*, float** %v1.addr, align 8, !dbg !7186
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7186
  %1 = load float, float* %arrayidx, align 4, !dbg !7186
  %2 = load float*, float** %co.addr, align 8, !dbg !7187
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 0, !dbg !7187
  %3 = load float, float* %arrayidx2, align 4, !dbg !7187
  %sub = fsub float %1, %3, !dbg !7188
  store float %sub, float* %arrayinit.begin1, align 4, !dbg !7185
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin1, i64 1, !dbg !7185
  %4 = load float*, float** %v1.addr, align 8, !dbg !7189
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 1, !dbg !7189
  %5 = load float, float* %arrayidx3, align 4, !dbg !7189
  %6 = load float*, float** %co.addr, align 8, !dbg !7190
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 1, !dbg !7190
  %7 = load float, float* %arrayidx4, align 4, !dbg !7190
  %sub5 = fsub float %5, %7, !dbg !7191
  store float %sub5, float* %arrayinit.element, align 4, !dbg !7185
  %arrayinit.element6 = getelementptr inbounds [2 x float], [2 x float]* %arrayinit.begin, i64 1, !dbg !7184
  %arrayinit.begin7 = getelementptr inbounds [2 x float], [2 x float]* %arrayinit.element6, i64 0, i64 0, !dbg !7192
  %8 = load float*, float** %v2.addr, align 8, !dbg !7193
  %arrayidx8 = getelementptr inbounds float, float* %8, i64 0, !dbg !7193
  %9 = load float, float* %arrayidx8, align 4, !dbg !7193
  %10 = load float*, float** %co.addr, align 8, !dbg !7194
  %arrayidx9 = getelementptr inbounds float, float* %10, i64 0, !dbg !7194
  %11 = load float, float* %arrayidx9, align 4, !dbg !7194
  %sub10 = fsub float %9, %11, !dbg !7195
  store float %sub10, float* %arrayinit.begin7, align 4, !dbg !7192
  %arrayinit.element11 = getelementptr inbounds float, float* %arrayinit.begin7, i64 1, !dbg !7192
  %12 = load float*, float** %v2.addr, align 8, !dbg !7196
  %arrayidx12 = getelementptr inbounds float, float* %12, i64 1, !dbg !7196
  %13 = load float, float* %arrayidx12, align 4, !dbg !7196
  %14 = load float*, float** %co.addr, align 8, !dbg !7197
  %arrayidx13 = getelementptr inbounds float, float* %14, i64 1, !dbg !7197
  %15 = load float, float* %arrayidx13, align 4, !dbg !7197
  %sub14 = fsub float %13, %15, !dbg !7198
  store float %sub14, float* %arrayinit.element11, align 4, !dbg !7192
  %arrayinit.element15 = getelementptr inbounds [2 x float], [2 x float]* %arrayinit.element6, i64 1, !dbg !7184
  %arrayinit.begin16 = getelementptr inbounds [2 x float], [2 x float]* %arrayinit.element15, i64 0, i64 0, !dbg !7199
  %16 = load float*, float** %v3.addr, align 8, !dbg !7200
  %arrayidx17 = getelementptr inbounds float, float* %16, i64 0, !dbg !7200
  %17 = load float, float* %arrayidx17, align 4, !dbg !7200
  %18 = load float*, float** %co.addr, align 8, !dbg !7201
  %arrayidx18 = getelementptr inbounds float, float* %18, i64 0, !dbg !7201
  %19 = load float, float* %arrayidx18, align 4, !dbg !7201
  %sub19 = fsub float %17, %19, !dbg !7202
  store float %sub19, float* %arrayinit.begin16, align 4, !dbg !7199
  %arrayinit.element20 = getelementptr inbounds float, float* %arrayinit.begin16, i64 1, !dbg !7199
  %20 = load float*, float** %v3.addr, align 8, !dbg !7203
  %arrayidx21 = getelementptr inbounds float, float* %20, i64 1, !dbg !7203
  %21 = load float, float* %arrayidx21, align 4, !dbg !7203
  %22 = load float*, float** %co.addr, align 8, !dbg !7204
  %arrayidx22 = getelementptr inbounds float, float* %22, i64 1, !dbg !7204
  %23 = load float, float* %arrayidx22, align 4, !dbg !7204
  %sub23 = fsub float %21, %23, !dbg !7205
  store float %sub23, float* %arrayinit.element20, align 4, !dbg !7199
  %arrayinit.element24 = getelementptr inbounds [2 x float], [2 x float]* %arrayinit.element15, i64 1, !dbg !7184
  %arrayinit.begin25 = getelementptr inbounds [2 x float], [2 x float]* %arrayinit.element24, i64 0, i64 0, !dbg !7206
  %24 = load float*, float** %v4.addr, align 8, !dbg !7207
  %arrayidx26 = getelementptr inbounds float, float* %24, i64 0, !dbg !7207
  %25 = load float, float* %arrayidx26, align 4, !dbg !7207
  %26 = load float*, float** %co.addr, align 8, !dbg !7208
  %arrayidx27 = getelementptr inbounds float, float* %26, i64 0, !dbg !7208
  %27 = load float, float* %arrayidx27, align 4, !dbg !7208
  %sub28 = fsub float %25, %27, !dbg !7209
  store float %sub28, float* %arrayinit.begin25, align 4, !dbg !7206
  %arrayinit.element29 = getelementptr inbounds float, float* %arrayinit.begin25, i64 1, !dbg !7206
  %28 = load float*, float** %v4.addr, align 8, !dbg !7210
  %arrayidx30 = getelementptr inbounds float, float* %28, i64 1, !dbg !7210
  %29 = load float, float* %arrayidx30, align 4, !dbg !7210
  %30 = load float*, float** %co.addr, align 8, !dbg !7211
  %arrayidx31 = getelementptr inbounds float, float* %30, i64 1, !dbg !7211
  %31 = load float, float* %arrayidx31, align 4, !dbg !7211
  %sub32 = fsub float %29, %31, !dbg !7212
  store float %sub32, float* %arrayinit.element29, align 4, !dbg !7206
  call void @llvm.dbg.declare(metadata [4 x float]* %lens, metadata !7213, metadata !DIExpression()), !dbg !7215
  %arrayinit.begin33 = getelementptr inbounds [4 x float], [4 x float]* %lens, i64 0, i64 0, !dbg !7216
  %arrayidx34 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %dirs, i64 0, i64 0, !dbg !7217
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx34, i64 0, i64 0, !dbg !7217
  %call = call float @len_v2(float* %arraydecay), !dbg !7218
  store float %call, float* %arrayinit.begin33, align 4, !dbg !7216
  %arrayinit.element35 = getelementptr inbounds float, float* %arrayinit.begin33, i64 1, !dbg !7216
  %arrayidx36 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %dirs, i64 0, i64 1, !dbg !7219
  %arraydecay37 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx36, i64 0, i64 0, !dbg !7219
  %call38 = call float @len_v2(float* %arraydecay37), !dbg !7220
  store float %call38, float* %arrayinit.element35, align 4, !dbg !7216
  %arrayinit.element39 = getelementptr inbounds float, float* %arrayinit.element35, i64 1, !dbg !7216
  %arrayidx40 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %dirs, i64 0, i64 2, !dbg !7221
  %arraydecay41 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx40, i64 0, i64 0, !dbg !7221
  %call42 = call float @len_v2(float* %arraydecay41), !dbg !7222
  store float %call42, float* %arrayinit.element39, align 4, !dbg !7216
  %arrayinit.element43 = getelementptr inbounds float, float* %arrayinit.element39, i64 1, !dbg !7216
  %arrayidx44 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %dirs, i64 0, i64 3, !dbg !7223
  %arraydecay45 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx44, i64 0, i64 0, !dbg !7223
  %call46 = call float @len_v2(float* %arraydecay45), !dbg !7224
  store float %call46, float* %arrayinit.element43, align 4, !dbg !7216
  %arrayidx47 = getelementptr inbounds [4 x float], [4 x float]* %lens, i64 0, i64 0, !dbg !7225
  %32 = load float, float* %arrayidx47, align 16, !dbg !7225
  %cmp = fcmp olt float %32, 0x3E80000000000000, !dbg !7225
  br i1 %cmp, label %if.then, label %if.else, !dbg !7227

if.then:                                          ; preds = %entry
  %33 = load float*, float** %w.addr, align 8, !dbg !7228
  %arrayidx48 = getelementptr inbounds float, float* %33, i64 0, !dbg !7228
  store float 1.000000e+00, float* %arrayidx48, align 4, !dbg !7230
  %34 = load float*, float** %w.addr, align 8, !dbg !7231
  %arrayidx49 = getelementptr inbounds float, float* %34, i64 3, !dbg !7231
  store float 0.000000e+00, float* %arrayidx49, align 4, !dbg !7232
  %35 = load float*, float** %w.addr, align 8, !dbg !7233
  %arrayidx50 = getelementptr inbounds float, float* %35, i64 2, !dbg !7233
  store float 0.000000e+00, float* %arrayidx50, align 4, !dbg !7234
  %36 = load float*, float** %w.addr, align 8, !dbg !7235
  %arrayidx51 = getelementptr inbounds float, float* %36, i64 1, !dbg !7235
  store float 0.000000e+00, float* %arrayidx51, align 4, !dbg !7236
  br label %if.end191, !dbg !7237

if.else:                                          ; preds = %entry
  %arrayidx52 = getelementptr inbounds [4 x float], [4 x float]* %lens, i64 0, i64 1, !dbg !7238
  %37 = load float, float* %arrayidx52, align 4, !dbg !7238
  %cmp53 = fcmp olt float %37, 0x3E80000000000000, !dbg !7238
  br i1 %cmp53, label %if.then54, label %if.else59, !dbg !7240

if.then54:                                        ; preds = %if.else
  %38 = load float*, float** %w.addr, align 8, !dbg !7241
  %arrayidx55 = getelementptr inbounds float, float* %38, i64 1, !dbg !7241
  store float 1.000000e+00, float* %arrayidx55, align 4, !dbg !7243
  %39 = load float*, float** %w.addr, align 8, !dbg !7244
  %arrayidx56 = getelementptr inbounds float, float* %39, i64 3, !dbg !7244
  store float 0.000000e+00, float* %arrayidx56, align 4, !dbg !7245
  %40 = load float*, float** %w.addr, align 8, !dbg !7246
  %arrayidx57 = getelementptr inbounds float, float* %40, i64 2, !dbg !7246
  store float 0.000000e+00, float* %arrayidx57, align 4, !dbg !7247
  %41 = load float*, float** %w.addr, align 8, !dbg !7248
  %arrayidx58 = getelementptr inbounds float, float* %41, i64 0, !dbg !7248
  store float 0.000000e+00, float* %arrayidx58, align 4, !dbg !7249
  br label %if.end190, !dbg !7250

if.else59:                                        ; preds = %if.else
  %arrayidx60 = getelementptr inbounds [4 x float], [4 x float]* %lens, i64 0, i64 2, !dbg !7251
  %42 = load float, float* %arrayidx60, align 8, !dbg !7251
  %cmp61 = fcmp olt float %42, 0x3E80000000000000, !dbg !7251
  br i1 %cmp61, label %if.then62, label %if.else67, !dbg !7253

if.then62:                                        ; preds = %if.else59
  %43 = load float*, float** %w.addr, align 8, !dbg !7254
  %arrayidx63 = getelementptr inbounds float, float* %43, i64 2, !dbg !7254
  store float 1.000000e+00, float* %arrayidx63, align 4, !dbg !7256
  %44 = load float*, float** %w.addr, align 8, !dbg !7257
  %arrayidx64 = getelementptr inbounds float, float* %44, i64 3, !dbg !7257
  store float 0.000000e+00, float* %arrayidx64, align 4, !dbg !7258
  %45 = load float*, float** %w.addr, align 8, !dbg !7259
  %arrayidx65 = getelementptr inbounds float, float* %45, i64 1, !dbg !7259
  store float 0.000000e+00, float* %arrayidx65, align 4, !dbg !7260
  %46 = load float*, float** %w.addr, align 8, !dbg !7261
  %arrayidx66 = getelementptr inbounds float, float* %46, i64 0, !dbg !7261
  store float 0.000000e+00, float* %arrayidx66, align 4, !dbg !7262
  br label %if.end189, !dbg !7263

if.else67:                                        ; preds = %if.else59
  %arrayidx68 = getelementptr inbounds [4 x float], [4 x float]* %lens, i64 0, i64 3, !dbg !7264
  %47 = load float, float* %arrayidx68, align 4, !dbg !7264
  %cmp69 = fcmp olt float %47, 0x3E80000000000000, !dbg !7264
  br i1 %cmp69, label %if.then70, label %if.else75, !dbg !7266

if.then70:                                        ; preds = %if.else67
  %48 = load float*, float** %w.addr, align 8, !dbg !7267
  %arrayidx71 = getelementptr inbounds float, float* %48, i64 3, !dbg !7267
  store float 1.000000e+00, float* %arrayidx71, align 4, !dbg !7269
  %49 = load float*, float** %w.addr, align 8, !dbg !7270
  %arrayidx72 = getelementptr inbounds float, float* %49, i64 2, !dbg !7270
  store float 0.000000e+00, float* %arrayidx72, align 4, !dbg !7271
  %50 = load float*, float** %w.addr, align 8, !dbg !7272
  %arrayidx73 = getelementptr inbounds float, float* %50, i64 1, !dbg !7272
  store float 0.000000e+00, float* %arrayidx73, align 4, !dbg !7273
  %51 = load float*, float** %w.addr, align 8, !dbg !7274
  %arrayidx74 = getelementptr inbounds float, float* %51, i64 0, !dbg !7274
  store float 0.000000e+00, float* %arrayidx74, align 4, !dbg !7275
  br label %if.end188, !dbg !7276

if.else75:                                        ; preds = %if.else67
  call void @llvm.dbg.declare(metadata float* %wtot, metadata !7277, metadata !DIExpression()), !dbg !7279
  call void @llvm.dbg.declare(metadata float* %area, metadata !7280, metadata !DIExpression()), !dbg !7281
  call void @llvm.dbg.declare(metadata [4 x float]* %t, metadata !7282, metadata !DIExpression()), !dbg !7283
  %arrayinit.begin76 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 0, !dbg !7284
  %arrayidx77 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %dirs, i64 0, i64 0, !dbg !7285
  %arraydecay78 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx77, i64 0, i64 0, !dbg !7285
  %arrayidx79 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %dirs, i64 0, i64 1, !dbg !7285
  %arraydecay80 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx79, i64 0, i64 0, !dbg !7285
  %call81 = call float @cross_v2v2(float* %arraydecay78, float* %arraydecay80), !dbg !7285
  store float %call81, float* %area, align 4, !dbg !7285
  %cmp82 = fcmp une float %call81, 0.000000e+00, !dbg !7285
  br i1 %cmp82, label %cond.true, label %cond.false, !dbg !7285

cond.true:                                        ; preds = %if.else75
  %arrayidx83 = getelementptr inbounds [4 x float], [4 x float]* %lens, i64 0, i64 0, !dbg !7285
  %52 = load float, float* %arrayidx83, align 16, !dbg !7285
  %arrayidx84 = getelementptr inbounds [4 x float], [4 x float]* %lens, i64 0, i64 1, !dbg !7285
  %53 = load float, float* %arrayidx84, align 4, !dbg !7285
  %mul = fmul float %52, %53, !dbg !7285
  %arrayidx85 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %dirs, i64 0, i64 0, !dbg !7285
  %arraydecay86 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx85, i64 0, i64 0, !dbg !7285
  %arrayidx87 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %dirs, i64 0, i64 1, !dbg !7285
  %arraydecay88 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx87, i64 0, i64 0, !dbg !7285
  %call89 = call float @dot_v2v2(float* %arraydecay86, float* %arraydecay88), !dbg !7285
  %sub90 = fsub float %mul, %call89, !dbg !7285
  %54 = load float, float* %area, align 4, !dbg !7285
  %div = fdiv float %sub90, %54, !dbg !7285
  %55 = call float @llvm.fabs.f32(float %div), !dbg !7285
  br label %cond.end, !dbg !7285

cond.false:                                       ; preds = %if.else75
  br label %cond.end, !dbg !7285

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %55, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !7285
  store float %cond, float* %arrayinit.begin76, align 4, !dbg !7284
  %arrayinit.element91 = getelementptr inbounds float, float* %arrayinit.begin76, i64 1, !dbg !7284
  %arrayidx92 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %dirs, i64 0, i64 1, !dbg !7286
  %arraydecay93 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx92, i64 0, i64 0, !dbg !7286
  %arrayidx94 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %dirs, i64 0, i64 2, !dbg !7286
  %arraydecay95 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx94, i64 0, i64 0, !dbg !7286
  %call96 = call float @cross_v2v2(float* %arraydecay93, float* %arraydecay95), !dbg !7286
  store float %call96, float* %area, align 4, !dbg !7286
  %cmp97 = fcmp une float %call96, 0.000000e+00, !dbg !7286
  br i1 %cmp97, label %cond.true98, label %cond.false109, !dbg !7286

cond.true98:                                      ; preds = %cond.end
  %arrayidx99 = getelementptr inbounds [4 x float], [4 x float]* %lens, i64 0, i64 1, !dbg !7286
  %56 = load float, float* %arrayidx99, align 4, !dbg !7286
  %arrayidx100 = getelementptr inbounds [4 x float], [4 x float]* %lens, i64 0, i64 2, !dbg !7286
  %57 = load float, float* %arrayidx100, align 8, !dbg !7286
  %mul101 = fmul float %56, %57, !dbg !7286
  %arrayidx102 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %dirs, i64 0, i64 1, !dbg !7286
  %arraydecay103 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx102, i64 0, i64 0, !dbg !7286
  %arrayidx104 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %dirs, i64 0, i64 2, !dbg !7286
  %arraydecay105 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx104, i64 0, i64 0, !dbg !7286
  %call106 = call float @dot_v2v2(float* %arraydecay103, float* %arraydecay105), !dbg !7286
  %sub107 = fsub float %mul101, %call106, !dbg !7286
  %58 = load float, float* %area, align 4, !dbg !7286
  %div108 = fdiv float %sub107, %58, !dbg !7286
  %59 = call float @llvm.fabs.f32(float %div108), !dbg !7286
  br label %cond.end110, !dbg !7286

cond.false109:                                    ; preds = %cond.end
  br label %cond.end110, !dbg !7286

cond.end110:                                      ; preds = %cond.false109, %cond.true98
  %cond111 = phi float [ %59, %cond.true98 ], [ 0.000000e+00, %cond.false109 ], !dbg !7286
  store float %cond111, float* %arrayinit.element91, align 4, !dbg !7284
  %arrayinit.element112 = getelementptr inbounds float, float* %arrayinit.element91, i64 1, !dbg !7284
  %arrayidx113 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %dirs, i64 0, i64 2, !dbg !7287
  %arraydecay114 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx113, i64 0, i64 0, !dbg !7287
  %arrayidx115 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %dirs, i64 0, i64 3, !dbg !7287
  %arraydecay116 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx115, i64 0, i64 0, !dbg !7287
  %call117 = call float @cross_v2v2(float* %arraydecay114, float* %arraydecay116), !dbg !7287
  store float %call117, float* %area, align 4, !dbg !7287
  %cmp118 = fcmp une float %call117, 0.000000e+00, !dbg !7287
  br i1 %cmp118, label %cond.true119, label %cond.false130, !dbg !7287

cond.true119:                                     ; preds = %cond.end110
  %arrayidx120 = getelementptr inbounds [4 x float], [4 x float]* %lens, i64 0, i64 2, !dbg !7287
  %60 = load float, float* %arrayidx120, align 8, !dbg !7287
  %arrayidx121 = getelementptr inbounds [4 x float], [4 x float]* %lens, i64 0, i64 3, !dbg !7287
  %61 = load float, float* %arrayidx121, align 4, !dbg !7287
  %mul122 = fmul float %60, %61, !dbg !7287
  %arrayidx123 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %dirs, i64 0, i64 2, !dbg !7287
  %arraydecay124 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx123, i64 0, i64 0, !dbg !7287
  %arrayidx125 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %dirs, i64 0, i64 3, !dbg !7287
  %arraydecay126 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx125, i64 0, i64 0, !dbg !7287
  %call127 = call float @dot_v2v2(float* %arraydecay124, float* %arraydecay126), !dbg !7287
  %sub128 = fsub float %mul122, %call127, !dbg !7287
  %62 = load float, float* %area, align 4, !dbg !7287
  %div129 = fdiv float %sub128, %62, !dbg !7287
  %63 = call float @llvm.fabs.f32(float %div129), !dbg !7287
  br label %cond.end131, !dbg !7287

cond.false130:                                    ; preds = %cond.end110
  br label %cond.end131, !dbg !7287

cond.end131:                                      ; preds = %cond.false130, %cond.true119
  %cond132 = phi float [ %63, %cond.true119 ], [ 0.000000e+00, %cond.false130 ], !dbg !7287
  store float %cond132, float* %arrayinit.element112, align 4, !dbg !7284
  %arrayinit.element133 = getelementptr inbounds float, float* %arrayinit.element112, i64 1, !dbg !7284
  %arrayidx134 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %dirs, i64 0, i64 3, !dbg !7288
  %arraydecay135 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx134, i64 0, i64 0, !dbg !7288
  %arrayidx136 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %dirs, i64 0, i64 0, !dbg !7288
  %arraydecay137 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx136, i64 0, i64 0, !dbg !7288
  %call138 = call float @cross_v2v2(float* %arraydecay135, float* %arraydecay137), !dbg !7288
  store float %call138, float* %area, align 4, !dbg !7288
  %cmp139 = fcmp une float %call138, 0.000000e+00, !dbg !7288
  br i1 %cmp139, label %cond.true140, label %cond.false151, !dbg !7288

cond.true140:                                     ; preds = %cond.end131
  %arrayidx141 = getelementptr inbounds [4 x float], [4 x float]* %lens, i64 0, i64 3, !dbg !7288
  %64 = load float, float* %arrayidx141, align 4, !dbg !7288
  %arrayidx142 = getelementptr inbounds [4 x float], [4 x float]* %lens, i64 0, i64 0, !dbg !7288
  %65 = load float, float* %arrayidx142, align 16, !dbg !7288
  %mul143 = fmul float %64, %65, !dbg !7288
  %arrayidx144 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %dirs, i64 0, i64 3, !dbg !7288
  %arraydecay145 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx144, i64 0, i64 0, !dbg !7288
  %arrayidx146 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %dirs, i64 0, i64 0, !dbg !7288
  %arraydecay147 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx146, i64 0, i64 0, !dbg !7288
  %call148 = call float @dot_v2v2(float* %arraydecay145, float* %arraydecay147), !dbg !7288
  %sub149 = fsub float %mul143, %call148, !dbg !7288
  %66 = load float, float* %area, align 4, !dbg !7288
  %div150 = fdiv float %sub149, %66, !dbg !7288
  %67 = call float @llvm.fabs.f32(float %div150), !dbg !7288
  br label %cond.end152, !dbg !7288

cond.false151:                                    ; preds = %cond.end131
  br label %cond.end152, !dbg !7288

cond.end152:                                      ; preds = %cond.false151, %cond.true140
  %cond153 = phi float [ %67, %cond.true140 ], [ 0.000000e+00, %cond.false151 ], !dbg !7288
  store float %cond153, float* %arrayinit.element133, align 4, !dbg !7284
  %arrayidx154 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 3, !dbg !7289
  %68 = load float, float* %arrayidx154, align 4, !dbg !7289
  %arrayidx155 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 0, !dbg !7290
  %69 = load float, float* %arrayidx155, align 16, !dbg !7290
  %add = fadd float %68, %69, !dbg !7291
  %arrayidx156 = getelementptr inbounds [4 x float], [4 x float]* %lens, i64 0, i64 0, !dbg !7292
  %70 = load float, float* %arrayidx156, align 16, !dbg !7292
  %div157 = fdiv float %add, %70, !dbg !7293
  %71 = load float*, float** %w.addr, align 8, !dbg !7294
  %arrayidx158 = getelementptr inbounds float, float* %71, i64 0, !dbg !7294
  store float %div157, float* %arrayidx158, align 4, !dbg !7295
  %arrayidx159 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 0, !dbg !7296
  %72 = load float, float* %arrayidx159, align 16, !dbg !7296
  %arrayidx160 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 1, !dbg !7297
  %73 = load float, float* %arrayidx160, align 4, !dbg !7297
  %add161 = fadd float %72, %73, !dbg !7298
  %arrayidx162 = getelementptr inbounds [4 x float], [4 x float]* %lens, i64 0, i64 1, !dbg !7299
  %74 = load float, float* %arrayidx162, align 4, !dbg !7299
  %div163 = fdiv float %add161, %74, !dbg !7300
  %75 = load float*, float** %w.addr, align 8, !dbg !7301
  %arrayidx164 = getelementptr inbounds float, float* %75, i64 1, !dbg !7301
  store float %div163, float* %arrayidx164, align 4, !dbg !7302
  %arrayidx165 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 1, !dbg !7303
  %76 = load float, float* %arrayidx165, align 4, !dbg !7303
  %arrayidx166 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 2, !dbg !7304
  %77 = load float, float* %arrayidx166, align 8, !dbg !7304
  %add167 = fadd float %76, %77, !dbg !7305
  %arrayidx168 = getelementptr inbounds [4 x float], [4 x float]* %lens, i64 0, i64 2, !dbg !7306
  %78 = load float, float* %arrayidx168, align 8, !dbg !7306
  %div169 = fdiv float %add167, %78, !dbg !7307
  %79 = load float*, float** %w.addr, align 8, !dbg !7308
  %arrayidx170 = getelementptr inbounds float, float* %79, i64 2, !dbg !7308
  store float %div169, float* %arrayidx170, align 4, !dbg !7309
  %arrayidx171 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 2, !dbg !7310
  %80 = load float, float* %arrayidx171, align 8, !dbg !7310
  %arrayidx172 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 3, !dbg !7311
  %81 = load float, float* %arrayidx172, align 4, !dbg !7311
  %add173 = fadd float %80, %81, !dbg !7312
  %arrayidx174 = getelementptr inbounds [4 x float], [4 x float]* %lens, i64 0, i64 3, !dbg !7313
  %82 = load float, float* %arrayidx174, align 4, !dbg !7313
  %div175 = fdiv float %add173, %82, !dbg !7314
  %83 = load float*, float** %w.addr, align 8, !dbg !7315
  %arrayidx176 = getelementptr inbounds float, float* %83, i64 3, !dbg !7315
  store float %div175, float* %arrayidx176, align 4, !dbg !7316
  %84 = load float*, float** %w.addr, align 8, !dbg !7317
  %arrayidx177 = getelementptr inbounds float, float* %84, i64 0, !dbg !7317
  %85 = load float, float* %arrayidx177, align 4, !dbg !7317
  %86 = load float*, float** %w.addr, align 8, !dbg !7318
  %arrayidx178 = getelementptr inbounds float, float* %86, i64 1, !dbg !7318
  %87 = load float, float* %arrayidx178, align 4, !dbg !7318
  %add179 = fadd float %85, %87, !dbg !7319
  %88 = load float*, float** %w.addr, align 8, !dbg !7320
  %arrayidx180 = getelementptr inbounds float, float* %88, i64 2, !dbg !7320
  %89 = load float, float* %arrayidx180, align 4, !dbg !7320
  %add181 = fadd float %add179, %89, !dbg !7321
  %90 = load float*, float** %w.addr, align 8, !dbg !7322
  %arrayidx182 = getelementptr inbounds float, float* %90, i64 3, !dbg !7322
  %91 = load float, float* %arrayidx182, align 4, !dbg !7322
  %add183 = fadd float %add181, %91, !dbg !7323
  store float %add183, float* %wtot, align 4, !dbg !7324
  %92 = load float, float* %wtot, align 4, !dbg !7325
  %cmp184 = fcmp une float %92, 0.000000e+00, !dbg !7327
  br i1 %cmp184, label %if.then185, label %if.else187, !dbg !7328

if.then185:                                       ; preds = %cond.end152
  %93 = load float*, float** %w.addr, align 8, !dbg !7329
  %94 = load float, float* %wtot, align 4, !dbg !7331
  %div186 = fdiv float 1.000000e+00, %94, !dbg !7332
  call void @mul_v4_fl(float* %93, float %div186), !dbg !7333
  br label %if.end, !dbg !7334

if.else187:                                       ; preds = %cond.end152
  %95 = load float*, float** %w.addr, align 8, !dbg !7335
  call void @copy_v4_fl(float* %95, float 2.500000e-01), !dbg !7337
  br label %if.end

if.end:                                           ; preds = %if.else187, %if.then185
  br label %if.end188

if.end188:                                        ; preds = %if.end, %if.then70
  br label %if.end189

if.end189:                                        ; preds = %if.end188, %if.then62
  br label %if.end190

if.end190:                                        ; preds = %if.end189, %if.then54
  br label %if.end191

if.end191:                                        ; preds = %if.end190, %if.then
  ret void, !dbg !7338
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v2(float* %v) #0 !dbg !7339 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !7340, metadata !DIExpression()), !dbg !7341
  %0 = load float*, float** %v.addr, align 8, !dbg !7342
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7342
  %1 = load float, float* %arrayidx, align 4, !dbg !7342
  %2 = load float*, float** %v.addr, align 8, !dbg !7343
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7343
  %3 = load float, float* %arrayidx1, align 4, !dbg !7343
  %mul = fmul float %1, %3, !dbg !7344
  %4 = load float*, float** %v.addr, align 8, !dbg !7345
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7345
  %5 = load float, float* %arrayidx2, align 4, !dbg !7345
  %6 = load float*, float** %v.addr, align 8, !dbg !7346
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !7346
  %7 = load float, float* %arrayidx3, align 4, !dbg !7346
  %mul4 = fmul float %5, %7, !dbg !7347
  %add = fadd float %mul, %mul4, !dbg !7348
  %call = call float @sqrtf(float %add) #5, !dbg !7349
  ret float %call, !dbg !7350
}

; Function Attrs: noinline nounwind uwtable
define internal float @cross_v2v2(float* %a, float* %b) #0 !dbg !7351 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7352, metadata !DIExpression()), !dbg !7353
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !7354, metadata !DIExpression()), !dbg !7355
  %0 = load float*, float** %a.addr, align 8, !dbg !7356
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7356
  %1 = load float, float* %arrayidx, align 4, !dbg !7356
  %2 = load float*, float** %b.addr, align 8, !dbg !7357
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !7357
  %3 = load float, float* %arrayidx1, align 4, !dbg !7357
  %mul = fmul float %1, %3, !dbg !7358
  %4 = load float*, float** %a.addr, align 8, !dbg !7359
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7359
  %5 = load float, float* %arrayidx2, align 4, !dbg !7359
  %6 = load float*, float** %b.addr, align 8, !dbg !7360
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 0, !dbg !7360
  %7 = load float, float* %arrayidx3, align 4, !dbg !7360
  %mul4 = fmul float %5, %7, !dbg !7361
  %sub = fsub float %mul, %mul4, !dbg !7362
  ret float %sub, !dbg !7363
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v4_fl(float* %r, float %f) #0 !dbg !7364 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7365, metadata !DIExpression()), !dbg !7366
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !7367, metadata !DIExpression()), !dbg !7368
  %0 = load float, float* %f.addr, align 4, !dbg !7369
  %1 = load float*, float** %r.addr, align 8, !dbg !7370
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !7370
  %2 = load float, float* %arrayidx, align 4, !dbg !7371
  %mul = fmul float %2, %0, !dbg !7371
  store float %mul, float* %arrayidx, align 4, !dbg !7371
  %3 = load float, float* %f.addr, align 4, !dbg !7372
  %4 = load float*, float** %r.addr, align 8, !dbg !7373
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !7373
  %5 = load float, float* %arrayidx1, align 4, !dbg !7374
  %mul2 = fmul float %5, %3, !dbg !7374
  store float %mul2, float* %arrayidx1, align 4, !dbg !7374
  %6 = load float, float* %f.addr, align 4, !dbg !7375
  %7 = load float*, float** %r.addr, align 8, !dbg !7376
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !7376
  %8 = load float, float* %arrayidx3, align 4, !dbg !7377
  %mul4 = fmul float %8, %6, !dbg !7377
  store float %mul4, float* %arrayidx3, align 4, !dbg !7377
  %9 = load float, float* %f.addr, align 4, !dbg !7378
  %10 = load float*, float** %r.addr, align 8, !dbg !7379
  %arrayidx5 = getelementptr inbounds float, float* %10, i64 3, !dbg !7379
  %11 = load float, float* %arrayidx5, align 4, !dbg !7380
  %mul6 = fmul float %11, %9, !dbg !7380
  store float %mul6, float* %arrayidx5, align 4, !dbg !7380
  ret void, !dbg !7381
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v4_fl(float* %r, float %f) #0 !dbg !7382 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7383, metadata !DIExpression()), !dbg !7384
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !7385, metadata !DIExpression()), !dbg !7386
  %0 = load float, float* %f.addr, align 4, !dbg !7387
  %1 = load float*, float** %r.addr, align 8, !dbg !7388
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !7388
  store float %0, float* %arrayidx, align 4, !dbg !7389
  %2 = load float, float* %f.addr, align 4, !dbg !7390
  %3 = load float*, float** %r.addr, align 8, !dbg !7391
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !7391
  store float %2, float* %arrayidx1, align 4, !dbg !7392
  %4 = load float, float* %f.addr, align 4, !dbg !7393
  %5 = load float*, float** %r.addr, align 8, !dbg !7394
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 2, !dbg !7394
  store float %4, float* %arrayidx2, align 4, !dbg !7395
  %6 = load float, float* %f.addr, align 4, !dbg !7396
  %7 = load float*, float** %r.addr, align 8, !dbg !7397
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 3, !dbg !7397
  store float %6, float* %arrayidx3, align 4, !dbg !7398
  ret void, !dbg !7399
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @transform_point_by_tri_v3(float* %pt_tar, float* %pt_src, float* %tri_tar_p1, float* %tri_tar_p2, float* %tri_tar_p3, float* %tri_src_p1, float* %tri_src_p2, float* %tri_src_p3) #0 !dbg !7400 {
entry:
  %pt_tar.addr = alloca float*, align 8
  %pt_src.addr = alloca float*, align 8
  %tri_tar_p1.addr = alloca float*, align 8
  %tri_tar_p2.addr = alloca float*, align 8
  %tri_tar_p3.addr = alloca float*, align 8
  %tri_src_p1.addr = alloca float*, align 8
  %tri_src_p2.addr = alloca float*, align 8
  %tri_src_p3.addr = alloca float*, align 8
  %no_tar = alloca [3 x float], align 4
  %no_src = alloca [3 x float], align 4
  %mat_src = alloca [3 x [3 x float]], align 16
  %pt_src_xy = alloca [3 x float], align 4
  %tri_xy_src = alloca [3 x [3 x float]], align 16
  %w_src = alloca [3 x float], align 4
  %area_tar = alloca float, align 4
  %area_src = alloca float, align 4
  %z_ofs_src = alloca float, align 4
  store float* %pt_tar, float** %pt_tar.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt_tar.addr, metadata !7403, metadata !DIExpression()), !dbg !7404
  store float* %pt_src, float** %pt_src.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt_src.addr, metadata !7405, metadata !DIExpression()), !dbg !7406
  store float* %tri_tar_p1, float** %tri_tar_p1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tri_tar_p1.addr, metadata !7407, metadata !DIExpression()), !dbg !7408
  store float* %tri_tar_p2, float** %tri_tar_p2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tri_tar_p2.addr, metadata !7409, metadata !DIExpression()), !dbg !7410
  store float* %tri_tar_p3, float** %tri_tar_p3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tri_tar_p3.addr, metadata !7411, metadata !DIExpression()), !dbg !7412
  store float* %tri_src_p1, float** %tri_src_p1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tri_src_p1.addr, metadata !7413, metadata !DIExpression()), !dbg !7414
  store float* %tri_src_p2, float** %tri_src_p2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tri_src_p2.addr, metadata !7415, metadata !DIExpression()), !dbg !7416
  store float* %tri_src_p3, float** %tri_src_p3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tri_src_p3.addr, metadata !7417, metadata !DIExpression()), !dbg !7418
  call void @llvm.dbg.declare(metadata [3 x float]* %no_tar, metadata !7419, metadata !DIExpression()), !dbg !7420
  call void @llvm.dbg.declare(metadata [3 x float]* %no_src, metadata !7421, metadata !DIExpression()), !dbg !7422
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat_src, metadata !7423, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.declare(metadata [3 x float]* %pt_src_xy, metadata !7425, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %tri_xy_src, metadata !7427, metadata !DIExpression()), !dbg !7428
  call void @llvm.dbg.declare(metadata [3 x float]* %w_src, metadata !7429, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.declare(metadata float* %area_tar, metadata !7431, metadata !DIExpression()), !dbg !7432
  call void @llvm.dbg.declare(metadata float* %area_src, metadata !7433, metadata !DIExpression()), !dbg !7434
  call void @llvm.dbg.declare(metadata float* %z_ofs_src, metadata !7435, metadata !DIExpression()), !dbg !7436
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %no_tar, i64 0, i64 0, !dbg !7437
  %0 = load float*, float** %tri_tar_p1.addr, align 8, !dbg !7438
  %1 = load float*, float** %tri_tar_p2.addr, align 8, !dbg !7439
  %2 = load float*, float** %tri_tar_p3.addr, align 8, !dbg !7440
  %call = call float @normal_tri_v3(float* %arraydecay, float* %0, float* %1, float* %2), !dbg !7441
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %no_src, i64 0, i64 0, !dbg !7442
  %3 = load float*, float** %tri_src_p1.addr, align 8, !dbg !7443
  %4 = load float*, float** %tri_src_p2.addr, align 8, !dbg !7444
  %5 = load float*, float** %tri_src_p3.addr, align 8, !dbg !7445
  %call2 = call float @normal_tri_v3(float* %arraydecay1, float* %3, float* %4, float* %5), !dbg !7446
  %arraydecay3 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat_src, i64 0, i64 0, !dbg !7447
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %no_src, i64 0, i64 0, !dbg !7448
  call void @axis_dominant_v3_to_m3([3 x float]* %arraydecay3, float* %arraydecay4), !dbg !7449
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %pt_src_xy, i64 0, i64 0, !dbg !7450
  %arraydecay6 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat_src, i64 0, i64 0, !dbg !7451
  %6 = load float*, float** %pt_src.addr, align 8, !dbg !7452
  call void @mul_v3_m3v3(float* %arraydecay5, [3 x float]* %arraydecay6, float* %6), !dbg !7453
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tri_xy_src, i64 0, i64 0, !dbg !7454
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !7454
  %arraydecay8 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat_src, i64 0, i64 0, !dbg !7455
  %7 = load float*, float** %tri_src_p1.addr, align 8, !dbg !7456
  call void @mul_v3_m3v3(float* %arraydecay7, [3 x float]* %arraydecay8, float* %7), !dbg !7457
  %arrayidx9 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tri_xy_src, i64 0, i64 1, !dbg !7458
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx9, i64 0, i64 0, !dbg !7458
  %arraydecay11 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat_src, i64 0, i64 0, !dbg !7459
  %8 = load float*, float** %tri_src_p2.addr, align 8, !dbg !7460
  call void @mul_v3_m3v3(float* %arraydecay10, [3 x float]* %arraydecay11, float* %8), !dbg !7461
  %arrayidx12 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tri_xy_src, i64 0, i64 2, !dbg !7462
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx12, i64 0, i64 0, !dbg !7462
  %arraydecay14 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat_src, i64 0, i64 0, !dbg !7463
  %9 = load float*, float** %tri_src_p3.addr, align 8, !dbg !7464
  call void @mul_v3_m3v3(float* %arraydecay13, [3 x float]* %arraydecay14, float* %9), !dbg !7465
  %arrayidx15 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tri_xy_src, i64 0, i64 0, !dbg !7466
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx15, i64 0, i64 0, !dbg !7466
  %arrayidx17 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tri_xy_src, i64 0, i64 1, !dbg !7467
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx17, i64 0, i64 0, !dbg !7467
  %arrayidx19 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tri_xy_src, i64 0, i64 2, !dbg !7468
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx19, i64 0, i64 0, !dbg !7468
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %pt_src_xy, i64 0, i64 0, !dbg !7469
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %w_src, i64 0, i64 0, !dbg !7470
  call void @barycentric_weights_v2(float* %arraydecay16, float* %arraydecay18, float* %arraydecay20, float* %arraydecay21, float* %arraydecay22), !dbg !7471
  %10 = load float*, float** %pt_tar.addr, align 8, !dbg !7472
  %11 = load float*, float** %tri_tar_p1.addr, align 8, !dbg !7473
  %12 = load float*, float** %tri_tar_p2.addr, align 8, !dbg !7474
  %13 = load float*, float** %tri_tar_p3.addr, align 8, !dbg !7475
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %w_src, i64 0, i64 0, !dbg !7476
  call void @interp_v3_v3v3v3(float* %10, float* %11, float* %12, float* %13, float* %arraydecay23), !dbg !7477
  %14 = load float*, float** %tri_tar_p1.addr, align 8, !dbg !7478
  %15 = load float*, float** %tri_tar_p2.addr, align 8, !dbg !7479
  %16 = load float*, float** %tri_tar_p3.addr, align 8, !dbg !7480
  %call24 = call float @area_tri_v3(float* %14, float* %15, float* %16), !dbg !7481
  %call25 = call float @sqrtf(float %call24) #5, !dbg !7482
  store float %call25, float* %area_tar, align 4, !dbg !7483
  %arrayidx26 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tri_xy_src, i64 0, i64 0, !dbg !7484
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx26, i64 0, i64 0, !dbg !7484
  %arrayidx28 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tri_xy_src, i64 0, i64 1, !dbg !7485
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx28, i64 0, i64 0, !dbg !7485
  %arrayidx30 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tri_xy_src, i64 0, i64 2, !dbg !7486
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx30, i64 0, i64 0, !dbg !7486
  %call32 = call float @area_tri_v2(float* %arraydecay27, float* %arraydecay29, float* %arraydecay31), !dbg !7487
  %call33 = call float @sqrtf(float %call32) #5, !dbg !7488
  store float %call33, float* %area_src, align 4, !dbg !7489
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %pt_src_xy, i64 0, i64 2, !dbg !7490
  %17 = load float, float* %arrayidx34, align 4, !dbg !7490
  %arrayidx35 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tri_xy_src, i64 0, i64 0, !dbg !7491
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx35, i64 0, i64 2, !dbg !7491
  %18 = load float, float* %arrayidx36, align 8, !dbg !7491
  %sub = fsub float %17, %18, !dbg !7492
  store float %sub, float* %z_ofs_src, align 4, !dbg !7493
  %19 = load float*, float** %pt_tar.addr, align 8, !dbg !7494
  %20 = load float*, float** %pt_tar.addr, align 8, !dbg !7495
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %no_tar, i64 0, i64 0, !dbg !7496
  %21 = load float, float* %z_ofs_src, align 4, !dbg !7497
  %22 = load float, float* %area_src, align 4, !dbg !7498
  %div = fdiv float %21, %22, !dbg !7499
  %23 = load float, float* %area_tar, align 4, !dbg !7500
  %mul = fmul float %div, %23, !dbg !7501
  call void @madd_v3_v3v3fl(float* %19, float* %20, float* %arraydecay37, float %mul), !dbg !7502
  ret void, !dbg !7503
}

declare dso_local void @mul_v3_m3v3(float*, [3 x float]*, float*) #2

declare dso_local void @interp_v3_v3v3v3(float*, float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @area_tri_v2(float* %v1, float* %v2, float* %v3) #0 !dbg !7504 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !7505, metadata !DIExpression()), !dbg !7506
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !7507, metadata !DIExpression()), !dbg !7508
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !7509, metadata !DIExpression()), !dbg !7510
  %0 = load float*, float** %v1.addr, align 8, !dbg !7511
  %1 = load float*, float** %v2.addr, align 8, !dbg !7512
  %2 = load float*, float** %v3.addr, align 8, !dbg !7513
  %call = call float @area_tri_signed_v2(float* %0, float* %1, float* %2), !dbg !7514
  %3 = call float @llvm.fabs.f32(float %call), !dbg !7515
  ret float %3, !dbg !7516
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @transform_point_by_seg_v3(float* %p_dst, float* %p_src, float* %l_dst_p1, float* %l_dst_p2, float* %l_src_p1, float* %l_src_p2) #0 !dbg !7517 {
entry:
  %p_dst.addr = alloca float*, align 8
  %p_src.addr = alloca float*, align 8
  %l_dst_p1.addr = alloca float*, align 8
  %l_dst_p2.addr = alloca float*, align 8
  %l_src_p1.addr = alloca float*, align 8
  %l_src_p2.addr = alloca float*, align 8
  %t = alloca float, align 4
  store float* %p_dst, float** %p_dst.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p_dst.addr, metadata !7518, metadata !DIExpression()), !dbg !7519
  store float* %p_src, float** %p_src.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p_src.addr, metadata !7520, metadata !DIExpression()), !dbg !7521
  store float* %l_dst_p1, float** %l_dst_p1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l_dst_p1.addr, metadata !7522, metadata !DIExpression()), !dbg !7523
  store float* %l_dst_p2, float** %l_dst_p2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l_dst_p2.addr, metadata !7524, metadata !DIExpression()), !dbg !7525
  store float* %l_src_p1, float** %l_src_p1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l_src_p1.addr, metadata !7526, metadata !DIExpression()), !dbg !7527
  store float* %l_src_p2, float** %l_src_p2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l_src_p2.addr, metadata !7528, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.declare(metadata float* %t, metadata !7530, metadata !DIExpression()), !dbg !7531
  %0 = load float*, float** %p_src.addr, align 8, !dbg !7532
  %1 = load float*, float** %l_src_p1.addr, align 8, !dbg !7533
  %2 = load float*, float** %l_src_p2.addr, align 8, !dbg !7534
  %call = call float @line_point_factor_v3(float* %0, float* %1, float* %2), !dbg !7535
  store float %call, float* %t, align 4, !dbg !7531
  %3 = load float*, float** %p_dst.addr, align 8, !dbg !7536
  %4 = load float*, float** %l_dst_p1.addr, align 8, !dbg !7537
  %5 = load float*, float** %l_dst_p2.addr, align 8, !dbg !7538
  %6 = load float, float* %t, align 4, !dbg !7539
  call void @interp_v3_v3v3(float* %3, float* %4, float* %5, float %6), !dbg !7540
  ret void, !dbg !7541
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @interp_sparse_array(float* %array, i32 %list_size, float %skipval) #0 !dbg !7542 {
entry:
  %retval = alloca i32, align 4
  %array.addr = alloca float*, align 8
  %list_size.addr = alloca i32, align 4
  %skipval.addr = alloca float, align 4
  %found_invalid = alloca i32, align 4
  %found_valid = alloca i32, align 4
  %i = alloca i32, align 4
  %valid_last = alloca float, align 4
  %valid_ofs = alloca i32, align 4
  %array_up = alloca float*, align 8
  %array_down = alloca float*, align 8
  %ofs_tot_up = alloca i32*, align 8
  %ofs_tot_down = alloca i32*, align 8
  store float* %array, float** %array.addr, align 8
  call void @llvm.dbg.declare(metadata float** %array.addr, metadata !7545, metadata !DIExpression()), !dbg !7546
  store i32 %list_size, i32* %list_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %list_size.addr, metadata !7547, metadata !DIExpression()), !dbg !7548
  store float %skipval, float* %skipval.addr, align 4
  call void @llvm.dbg.declare(metadata float* %skipval.addr, metadata !7549, metadata !DIExpression()), !dbg !7550
  call void @llvm.dbg.declare(metadata i32* %found_invalid, metadata !7551, metadata !DIExpression()), !dbg !7552
  store i32 0, i32* %found_invalid, align 4, !dbg !7552
  call void @llvm.dbg.declare(metadata i32* %found_valid, metadata !7553, metadata !DIExpression()), !dbg !7554
  store i32 0, i32* %found_valid, align 4, !dbg !7554
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7555, metadata !DIExpression()), !dbg !7556
  store i32 0, i32* %i, align 4, !dbg !7557
  br label %for.cond, !dbg !7559

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7560
  %1 = load i32, i32* %list_size.addr, align 4, !dbg !7562
  %cmp = icmp slt i32 %0, %1, !dbg !7563
  br i1 %cmp, label %for.body, label %for.end, !dbg !7564

for.body:                                         ; preds = %for.cond
  %2 = load float*, float** %array.addr, align 8, !dbg !7565
  %3 = load i32, i32* %i, align 4, !dbg !7568
  %idxprom = sext i32 %3 to i64, !dbg !7565
  %arrayidx = getelementptr inbounds float, float* %2, i64 %idxprom, !dbg !7565
  %4 = load float, float* %arrayidx, align 4, !dbg !7565
  %5 = load float, float* %skipval.addr, align 4, !dbg !7569
  %cmp1 = fcmp oeq float %4, %5, !dbg !7570
  br i1 %cmp1, label %if.then, label %if.else, !dbg !7571

if.then:                                          ; preds = %for.body
  store i32 1, i32* %found_invalid, align 4, !dbg !7572
  br label %if.end, !dbg !7573

if.else:                                          ; preds = %for.body
  store i32 1, i32* %found_valid, align 4, !dbg !7574
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !7575

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4, !dbg !7576
  %inc = add nsw i32 %6, 1, !dbg !7576
  store i32 %inc, i32* %i, align 4, !dbg !7576
  br label %for.cond, !dbg !7577, !llvm.loop !7578

for.end:                                          ; preds = %for.cond
  %7 = load i32, i32* %found_valid, align 4, !dbg !7580
  %cmp2 = icmp eq i32 %7, 0, !dbg !7582
  br i1 %cmp2, label %if.then3, label %if.else4, !dbg !7583

if.then3:                                         ; preds = %for.end
  store i32 -1, i32* %retval, align 4, !dbg !7584
  br label %return, !dbg !7584

if.else4:                                         ; preds = %for.end
  %8 = load i32, i32* %found_invalid, align 4, !dbg !7586
  %cmp5 = icmp eq i32 %8, 0, !dbg !7588
  br i1 %cmp5, label %if.then6, label %if.else7, !dbg !7589

if.then6:                                         ; preds = %if.else4
  store i32 0, i32* %retval, align 4, !dbg !7590
  br label %return, !dbg !7590

if.else7:                                         ; preds = %if.else4
  call void @llvm.dbg.declare(metadata float* %valid_last, metadata !7592, metadata !DIExpression()), !dbg !7594
  %9 = load float, float* %skipval.addr, align 4, !dbg !7595
  store float %9, float* %valid_last, align 4, !dbg !7594
  call void @llvm.dbg.declare(metadata i32* %valid_ofs, metadata !7596, metadata !DIExpression()), !dbg !7597
  store i32 0, i32* %valid_ofs, align 4, !dbg !7597
  call void @llvm.dbg.declare(metadata float** %array_up, metadata !7598, metadata !DIExpression()), !dbg !7599
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7600
  %11 = load i32, i32* %list_size.addr, align 4, !dbg !7601
  %conv = sext i32 %11 to i64, !dbg !7602
  %mul = mul i64 4, %conv, !dbg !7603
  %call = call i8* %10(i64 %mul, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0)), !dbg !7600
  %12 = bitcast i8* %call to float*, !dbg !7600
  store float* %12, float** %array_up, align 8, !dbg !7599
  call void @llvm.dbg.declare(metadata float** %array_down, metadata !7604, metadata !DIExpression()), !dbg !7605
  %13 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7606
  %14 = load i32, i32* %list_size.addr, align 4, !dbg !7607
  %conv8 = sext i32 %14 to i64, !dbg !7608
  %mul9 = mul i64 4, %conv8, !dbg !7609
  %call10 = call i8* %13(i64 %mul9, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0)), !dbg !7606
  %15 = bitcast i8* %call10 to float*, !dbg !7606
  store float* %15, float** %array_down, align 8, !dbg !7605
  call void @llvm.dbg.declare(metadata i32** %ofs_tot_up, metadata !7610, metadata !DIExpression()), !dbg !7611
  %16 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7612
  %17 = load i32, i32* %list_size.addr, align 4, !dbg !7613
  %conv11 = sext i32 %17 to i64, !dbg !7614
  %mul12 = mul i64 4, %conv11, !dbg !7615
  %call13 = call i8* %16(i64 %mul12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0)), !dbg !7612
  %18 = bitcast i8* %call13 to i32*, !dbg !7612
  store i32* %18, i32** %ofs_tot_up, align 8, !dbg !7611
  call void @llvm.dbg.declare(metadata i32** %ofs_tot_down, metadata !7616, metadata !DIExpression()), !dbg !7617
  %19 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7618
  %20 = load i32, i32* %list_size.addr, align 4, !dbg !7619
  %conv14 = sext i32 %20 to i64, !dbg !7620
  %mul15 = mul i64 4, %conv14, !dbg !7621
  %call16 = call i8* %19(i64 %mul15, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0)), !dbg !7618
  %21 = bitcast i8* %call16 to i32*, !dbg !7618
  store i32* %21, i32** %ofs_tot_down, align 8, !dbg !7617
  store i32 0, i32* %i, align 4, !dbg !7622
  br label %for.cond17, !dbg !7624

for.cond17:                                       ; preds = %for.inc35, %if.else7
  %22 = load i32, i32* %i, align 4, !dbg !7625
  %23 = load i32, i32* %list_size.addr, align 4, !dbg !7627
  %cmp18 = icmp slt i32 %22, %23, !dbg !7628
  br i1 %cmp18, label %for.body20, label %for.end37, !dbg !7629

for.body20:                                       ; preds = %for.cond17
  %24 = load float*, float** %array.addr, align 8, !dbg !7630
  %25 = load i32, i32* %i, align 4, !dbg !7633
  %idxprom21 = sext i32 %25 to i64, !dbg !7630
  %arrayidx22 = getelementptr inbounds float, float* %24, i64 %idxprom21, !dbg !7630
  %26 = load float, float* %arrayidx22, align 4, !dbg !7630
  %27 = load float, float* %skipval.addr, align 4, !dbg !7634
  %cmp23 = fcmp oeq float %26, %27, !dbg !7635
  br i1 %cmp23, label %if.then25, label %if.else31, !dbg !7636

if.then25:                                        ; preds = %for.body20
  %28 = load float, float* %valid_last, align 4, !dbg !7637
  %29 = load float*, float** %array_up, align 8, !dbg !7639
  %30 = load i32, i32* %i, align 4, !dbg !7640
  %idxprom26 = sext i32 %30 to i64, !dbg !7639
  %arrayidx27 = getelementptr inbounds float, float* %29, i64 %idxprom26, !dbg !7639
  store float %28, float* %arrayidx27, align 4, !dbg !7641
  %31 = load i32, i32* %valid_ofs, align 4, !dbg !7642
  %inc28 = add nsw i32 %31, 1, !dbg !7642
  store i32 %inc28, i32* %valid_ofs, align 4, !dbg !7642
  %32 = load i32*, i32** %ofs_tot_up, align 8, !dbg !7643
  %33 = load i32, i32* %i, align 4, !dbg !7644
  %idxprom29 = sext i32 %33 to i64, !dbg !7643
  %arrayidx30 = getelementptr inbounds i32, i32* %32, i64 %idxprom29, !dbg !7643
  store i32 %inc28, i32* %arrayidx30, align 4, !dbg !7645
  br label %if.end34, !dbg !7646

if.else31:                                        ; preds = %for.body20
  %34 = load float*, float** %array.addr, align 8, !dbg !7647
  %35 = load i32, i32* %i, align 4, !dbg !7649
  %idxprom32 = sext i32 %35 to i64, !dbg !7647
  %arrayidx33 = getelementptr inbounds float, float* %34, i64 %idxprom32, !dbg !7647
  %36 = load float, float* %arrayidx33, align 4, !dbg !7647
  store float %36, float* %valid_last, align 4, !dbg !7650
  store i32 0, i32* %valid_ofs, align 4, !dbg !7651
  br label %if.end34

if.end34:                                         ; preds = %if.else31, %if.then25
  br label %for.inc35, !dbg !7652

for.inc35:                                        ; preds = %if.end34
  %37 = load i32, i32* %i, align 4, !dbg !7653
  %inc36 = add nsw i32 %37, 1, !dbg !7653
  store i32 %inc36, i32* %i, align 4, !dbg !7653
  br label %for.cond17, !dbg !7654, !llvm.loop !7655

for.end37:                                        ; preds = %for.cond17
  %38 = load float, float* %skipval.addr, align 4, !dbg !7657
  store float %38, float* %valid_last, align 4, !dbg !7658
  store i32 0, i32* %valid_ofs, align 4, !dbg !7659
  %39 = load i32, i32* %list_size.addr, align 4, !dbg !7660
  %sub = sub nsw i32 %39, 1, !dbg !7662
  store i32 %sub, i32* %i, align 4, !dbg !7663
  br label %for.cond38, !dbg !7664

for.cond38:                                       ; preds = %for.inc56, %for.end37
  %40 = load i32, i32* %i, align 4, !dbg !7665
  %cmp39 = icmp sge i32 %40, 0, !dbg !7667
  br i1 %cmp39, label %for.body41, label %for.end57, !dbg !7668

for.body41:                                       ; preds = %for.cond38
  %41 = load float*, float** %array.addr, align 8, !dbg !7669
  %42 = load i32, i32* %i, align 4, !dbg !7672
  %idxprom42 = sext i32 %42 to i64, !dbg !7669
  %arrayidx43 = getelementptr inbounds float, float* %41, i64 %idxprom42, !dbg !7669
  %43 = load float, float* %arrayidx43, align 4, !dbg !7669
  %44 = load float, float* %skipval.addr, align 4, !dbg !7673
  %cmp44 = fcmp oeq float %43, %44, !dbg !7674
  br i1 %cmp44, label %if.then46, label %if.else52, !dbg !7675

if.then46:                                        ; preds = %for.body41
  %45 = load float, float* %valid_last, align 4, !dbg !7676
  %46 = load float*, float** %array_down, align 8, !dbg !7678
  %47 = load i32, i32* %i, align 4, !dbg !7679
  %idxprom47 = sext i32 %47 to i64, !dbg !7678
  %arrayidx48 = getelementptr inbounds float, float* %46, i64 %idxprom47, !dbg !7678
  store float %45, float* %arrayidx48, align 4, !dbg !7680
  %48 = load i32, i32* %valid_ofs, align 4, !dbg !7681
  %inc49 = add nsw i32 %48, 1, !dbg !7681
  store i32 %inc49, i32* %valid_ofs, align 4, !dbg !7681
  %49 = load i32*, i32** %ofs_tot_down, align 8, !dbg !7682
  %50 = load i32, i32* %i, align 4, !dbg !7683
  %idxprom50 = sext i32 %50 to i64, !dbg !7682
  %arrayidx51 = getelementptr inbounds i32, i32* %49, i64 %idxprom50, !dbg !7682
  store i32 %inc49, i32* %arrayidx51, align 4, !dbg !7684
  br label %if.end55, !dbg !7685

if.else52:                                        ; preds = %for.body41
  %51 = load float*, float** %array.addr, align 8, !dbg !7686
  %52 = load i32, i32* %i, align 4, !dbg !7688
  %idxprom53 = sext i32 %52 to i64, !dbg !7686
  %arrayidx54 = getelementptr inbounds float, float* %51, i64 %idxprom53, !dbg !7686
  %53 = load float, float* %arrayidx54, align 4, !dbg !7686
  store float %53, float* %valid_last, align 4, !dbg !7689
  store i32 0, i32* %valid_ofs, align 4, !dbg !7690
  br label %if.end55

if.end55:                                         ; preds = %if.else52, %if.then46
  br label %for.inc56, !dbg !7691

for.inc56:                                        ; preds = %if.end55
  %54 = load i32, i32* %i, align 4, !dbg !7692
  %dec = add nsw i32 %54, -1, !dbg !7692
  store i32 %dec, i32* %i, align 4, !dbg !7692
  br label %for.cond38, !dbg !7693, !llvm.loop !7694

for.end57:                                        ; preds = %for.cond38
  store i32 0, i32* %i, align 4, !dbg !7696
  br label %for.cond58, !dbg !7698

for.cond58:                                       ; preds = %for.inc120, %for.end57
  %55 = load i32, i32* %i, align 4, !dbg !7699
  %56 = load i32, i32* %list_size.addr, align 4, !dbg !7701
  %cmp59 = icmp slt i32 %55, %56, !dbg !7702
  br i1 %cmp59, label %for.body61, label %for.end122, !dbg !7703

for.body61:                                       ; preds = %for.cond58
  %57 = load float*, float** %array.addr, align 8, !dbg !7704
  %58 = load i32, i32* %i, align 4, !dbg !7707
  %idxprom62 = sext i32 %58 to i64, !dbg !7704
  %arrayidx63 = getelementptr inbounds float, float* %57, i64 %idxprom62, !dbg !7704
  %59 = load float, float* %arrayidx63, align 4, !dbg !7704
  %60 = load float, float* %skipval.addr, align 4, !dbg !7708
  %cmp64 = fcmp oeq float %59, %60, !dbg !7709
  br i1 %cmp64, label %if.then66, label %if.end119, !dbg !7710

if.then66:                                        ; preds = %for.body61
  %61 = load float*, float** %array_up, align 8, !dbg !7711
  %62 = load i32, i32* %i, align 4, !dbg !7714
  %idxprom67 = sext i32 %62 to i64, !dbg !7711
  %arrayidx68 = getelementptr inbounds float, float* %61, i64 %idxprom67, !dbg !7711
  %63 = load float, float* %arrayidx68, align 4, !dbg !7711
  %64 = load float, float* %skipval.addr, align 4, !dbg !7715
  %cmp69 = fcmp une float %63, %64, !dbg !7716
  br i1 %cmp69, label %land.lhs.true, label %if.else96, !dbg !7717

land.lhs.true:                                    ; preds = %if.then66
  %65 = load float*, float** %array_down, align 8, !dbg !7718
  %66 = load i32, i32* %i, align 4, !dbg !7719
  %idxprom71 = sext i32 %66 to i64, !dbg !7718
  %arrayidx72 = getelementptr inbounds float, float* %65, i64 %idxprom71, !dbg !7718
  %67 = load float, float* %arrayidx72, align 4, !dbg !7718
  %68 = load float, float* %skipval.addr, align 4, !dbg !7720
  %cmp73 = fcmp une float %67, %68, !dbg !7721
  br i1 %cmp73, label %if.then75, label %if.else96, !dbg !7722

if.then75:                                        ; preds = %land.lhs.true
  %69 = load float*, float** %array_up, align 8, !dbg !7723
  %70 = load i32, i32* %i, align 4, !dbg !7725
  %idxprom76 = sext i32 %70 to i64, !dbg !7723
  %arrayidx77 = getelementptr inbounds float, float* %69, i64 %idxprom76, !dbg !7723
  %71 = load float, float* %arrayidx77, align 4, !dbg !7723
  %72 = load i32*, i32** %ofs_tot_down, align 8, !dbg !7726
  %73 = load i32, i32* %i, align 4, !dbg !7727
  %idxprom78 = sext i32 %73 to i64, !dbg !7726
  %arrayidx79 = getelementptr inbounds i32, i32* %72, i64 %idxprom78, !dbg !7726
  %74 = load i32, i32* %arrayidx79, align 4, !dbg !7726
  %conv80 = sitofp i32 %74 to float, !dbg !7728
  %mul81 = fmul float %71, %conv80, !dbg !7729
  %75 = load float*, float** %array_down, align 8, !dbg !7730
  %76 = load i32, i32* %i, align 4, !dbg !7731
  %idxprom82 = sext i32 %76 to i64, !dbg !7730
  %arrayidx83 = getelementptr inbounds float, float* %75, i64 %idxprom82, !dbg !7730
  %77 = load float, float* %arrayidx83, align 4, !dbg !7730
  %78 = load i32*, i32** %ofs_tot_up, align 8, !dbg !7732
  %79 = load i32, i32* %i, align 4, !dbg !7733
  %idxprom84 = sext i32 %79 to i64, !dbg !7732
  %arrayidx85 = getelementptr inbounds i32, i32* %78, i64 %idxprom84, !dbg !7732
  %80 = load i32, i32* %arrayidx85, align 4, !dbg !7732
  %conv86 = sitofp i32 %80 to float, !dbg !7734
  %mul87 = fmul float %77, %conv86, !dbg !7735
  %add = fadd float %mul81, %mul87, !dbg !7736
  %81 = load i32*, i32** %ofs_tot_down, align 8, !dbg !7737
  %82 = load i32, i32* %i, align 4, !dbg !7738
  %idxprom88 = sext i32 %82 to i64, !dbg !7737
  %arrayidx89 = getelementptr inbounds i32, i32* %81, i64 %idxprom88, !dbg !7737
  %83 = load i32, i32* %arrayidx89, align 4, !dbg !7737
  %84 = load i32*, i32** %ofs_tot_up, align 8, !dbg !7739
  %85 = load i32, i32* %i, align 4, !dbg !7740
  %idxprom90 = sext i32 %85 to i64, !dbg !7739
  %arrayidx91 = getelementptr inbounds i32, i32* %84, i64 %idxprom90, !dbg !7739
  %86 = load i32, i32* %arrayidx91, align 4, !dbg !7739
  %add92 = add nsw i32 %83, %86, !dbg !7741
  %conv93 = sitofp i32 %add92 to float, !dbg !7742
  %div = fdiv float %add, %conv93, !dbg !7743
  %87 = load float*, float** %array.addr, align 8, !dbg !7744
  %88 = load i32, i32* %i, align 4, !dbg !7745
  %idxprom94 = sext i32 %88 to i64, !dbg !7744
  %arrayidx95 = getelementptr inbounds float, float* %87, i64 %idxprom94, !dbg !7744
  store float %div, float* %arrayidx95, align 4, !dbg !7746
  br label %if.end118, !dbg !7747

if.else96:                                        ; preds = %land.lhs.true, %if.then66
  %89 = load float*, float** %array_up, align 8, !dbg !7748
  %90 = load i32, i32* %i, align 4, !dbg !7750
  %idxprom97 = sext i32 %90 to i64, !dbg !7748
  %arrayidx98 = getelementptr inbounds float, float* %89, i64 %idxprom97, !dbg !7748
  %91 = load float, float* %arrayidx98, align 4, !dbg !7748
  %92 = load float, float* %skipval.addr, align 4, !dbg !7751
  %cmp99 = fcmp une float %91, %92, !dbg !7752
  br i1 %cmp99, label %if.then101, label %if.else106, !dbg !7753

if.then101:                                       ; preds = %if.else96
  %93 = load float*, float** %array_up, align 8, !dbg !7754
  %94 = load i32, i32* %i, align 4, !dbg !7756
  %idxprom102 = sext i32 %94 to i64, !dbg !7754
  %arrayidx103 = getelementptr inbounds float, float* %93, i64 %idxprom102, !dbg !7754
  %95 = load float, float* %arrayidx103, align 4, !dbg !7754
  %96 = load float*, float** %array.addr, align 8, !dbg !7757
  %97 = load i32, i32* %i, align 4, !dbg !7758
  %idxprom104 = sext i32 %97 to i64, !dbg !7757
  %arrayidx105 = getelementptr inbounds float, float* %96, i64 %idxprom104, !dbg !7757
  store float %95, float* %arrayidx105, align 4, !dbg !7759
  br label %if.end117, !dbg !7760

if.else106:                                       ; preds = %if.else96
  %98 = load float*, float** %array_down, align 8, !dbg !7761
  %99 = load i32, i32* %i, align 4, !dbg !7763
  %idxprom107 = sext i32 %99 to i64, !dbg !7761
  %arrayidx108 = getelementptr inbounds float, float* %98, i64 %idxprom107, !dbg !7761
  %100 = load float, float* %arrayidx108, align 4, !dbg !7761
  %101 = load float, float* %skipval.addr, align 4, !dbg !7764
  %cmp109 = fcmp une float %100, %101, !dbg !7765
  br i1 %cmp109, label %if.then111, label %if.end116, !dbg !7766

if.then111:                                       ; preds = %if.else106
  %102 = load float*, float** %array_down, align 8, !dbg !7767
  %103 = load i32, i32* %i, align 4, !dbg !7769
  %idxprom112 = sext i32 %103 to i64, !dbg !7767
  %arrayidx113 = getelementptr inbounds float, float* %102, i64 %idxprom112, !dbg !7767
  %104 = load float, float* %arrayidx113, align 4, !dbg !7767
  %105 = load float*, float** %array.addr, align 8, !dbg !7770
  %106 = load i32, i32* %i, align 4, !dbg !7771
  %idxprom114 = sext i32 %106 to i64, !dbg !7770
  %arrayidx115 = getelementptr inbounds float, float* %105, i64 %idxprom114, !dbg !7770
  store float %104, float* %arrayidx115, align 4, !dbg !7772
  br label %if.end116, !dbg !7773

if.end116:                                        ; preds = %if.then111, %if.else106
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %if.then101
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.then75
  br label %if.end119, !dbg !7774

if.end119:                                        ; preds = %if.end118, %for.body61
  br label %for.inc120, !dbg !7775

for.inc120:                                       ; preds = %if.end119
  %107 = load i32, i32* %i, align 4, !dbg !7776
  %inc121 = add nsw i32 %107, 1, !dbg !7776
  store i32 %inc121, i32* %i, align 4, !dbg !7776
  br label %for.cond58, !dbg !7777, !llvm.loop !7778

for.end122:                                       ; preds = %for.cond58
  %108 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7780
  %109 = load float*, float** %array_up, align 8, !dbg !7781
  %110 = bitcast float* %109 to i8*, !dbg !7781
  call void %108(i8* %110), !dbg !7780
  %111 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7782
  %112 = load float*, float** %array_down, align 8, !dbg !7783
  %113 = bitcast float* %112 to i8*, !dbg !7783
  call void %111(i8* %113), !dbg !7782
  %114 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7784
  %115 = load i32*, i32** %ofs_tot_up, align 8, !dbg !7785
  %116 = bitcast i32* %115 to i8*, !dbg !7785
  call void %114(i8* %116), !dbg !7784
  %117 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7786
  %118 = load i32*, i32** %ofs_tot_down, align 8, !dbg !7787
  %119 = bitcast i32* %118 to i8*, !dbg !7787
  call void %117(i8* %119), !dbg !7786
  br label %if.end123

if.end123:                                        ; preds = %for.end122
  br label %if.end124

if.end124:                                        ; preds = %if.end123
  store i32 1, i32* %retval, align 4, !dbg !7788
  br label %return, !dbg !7788

return:                                           ; preds = %if.end124, %if.then6, %if.then3
  %120 = load i32, i32* %retval, align 4, !dbg !7789
  ret i32 %120, !dbg !7789
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @interp_weights_poly_v3(float* %w, [3 x float]* %v, i32 %n, float* %co) #0 !dbg !7790 {
entry:
  %w.addr = alloca float*, align 8
  %v.addr = alloca [3 x float]*, align 8
  %n.addr = alloca i32, align 4
  %co.addr = alloca float*, align 8
  %eps = alloca float, align 4
  %eps_sq = alloca float, align 4
  %v_curr = alloca float*, align 8
  %v_next = alloca float*, align 8
  %ht_prev = alloca float, align 4
  %ht = alloca float, align 4
  %totweight = alloca float, align 4
  %i = alloca i32, align 4
  %vert_interp = alloca i8, align 1
  %edge_interp = alloca i8, align 1
  %len_sq = alloca float, align 4
  %i_curr = alloca i32, align 4
  %i_curr32 = alloca i32, align 4
  %len_curr = alloca float, align 4
  %len_next = alloca float, align 4
  %edge_len = alloca float, align 4
  store float* %w, float** %w.addr, align 8
  call void @llvm.dbg.declare(metadata float** %w.addr, metadata !7793, metadata !DIExpression()), !dbg !7794
  store [3 x float]* %v, [3 x float]** %v.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %v.addr, metadata !7795, metadata !DIExpression()), !dbg !7796
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7797, metadata !DIExpression()), !dbg !7798
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !7799, metadata !DIExpression()), !dbg !7800
  call void @llvm.dbg.declare(metadata float* %eps, metadata !7801, metadata !DIExpression()), !dbg !7802
  store float 0x3EE4F8B580000000, float* %eps, align 4, !dbg !7802
  call void @llvm.dbg.declare(metadata float* %eps_sq, metadata !7803, metadata !DIExpression()), !dbg !7804
  store float 0x3DDB7CDFC0000000, float* %eps_sq, align 4, !dbg !7804
  call void @llvm.dbg.declare(metadata float** %v_curr, metadata !7805, metadata !DIExpression()), !dbg !7806
  call void @llvm.dbg.declare(metadata float** %v_next, metadata !7807, metadata !DIExpression()), !dbg !7808
  call void @llvm.dbg.declare(metadata float* %ht_prev, metadata !7809, metadata !DIExpression()), !dbg !7810
  call void @llvm.dbg.declare(metadata float* %ht, metadata !7811, metadata !DIExpression()), !dbg !7812
  call void @llvm.dbg.declare(metadata float* %totweight, metadata !7813, metadata !DIExpression()), !dbg !7814
  store float 0.000000e+00, float* %totweight, align 4, !dbg !7814
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7815, metadata !DIExpression()), !dbg !7816
  store i32 0, i32* %i, align 4, !dbg !7816
  call void @llvm.dbg.declare(metadata i8* %vert_interp, metadata !7817, metadata !DIExpression()), !dbg !7818
  store i8 0, i8* %vert_interp, align 1, !dbg !7818
  call void @llvm.dbg.declare(metadata i8* %edge_interp, metadata !7819, metadata !DIExpression()), !dbg !7820
  store i8 0, i8* %edge_interp, align 1, !dbg !7820
  %0 = load [3 x float]*, [3 x float]** %v.addr, align 8, !dbg !7821
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %0, i64 0, !dbg !7821
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !7821
  store float* %arraydecay, float** %v_curr, align 8, !dbg !7822
  %1 = load [3 x float]*, [3 x float]** %v.addr, align 8, !dbg !7823
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %1, i64 1, !dbg !7823
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx1, i64 0, i64 0, !dbg !7823
  store float* %arraydecay2, float** %v_next, align 8, !dbg !7824
  %2 = load float*, float** %co.addr, align 8, !dbg !7825
  %3 = load [3 x float]*, [3 x float]** %v.addr, align 8, !dbg !7826
  %4 = load i32, i32* %n.addr, align 4, !dbg !7827
  %sub = sub nsw i32 %4, 1, !dbg !7828
  %idxprom = sext i32 %sub to i64, !dbg !7826
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %3, i64 %idxprom, !dbg !7826
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx3, i64 0, i64 0, !dbg !7826
  %5 = load float*, float** %v_curr, align 8, !dbg !7829
  %call = call float @mean_value_half_tan_v3(float* %2, float* %arraydecay4, float* %5), !dbg !7830
  store float %call, float* %ht_prev, align 4, !dbg !7831
  br label %while.cond, !dbg !7832

while.cond:                                       ; preds = %if.end10, %entry
  %6 = load i32, i32* %i, align 4, !dbg !7833
  %7 = load i32, i32* %n.addr, align 4, !dbg !7834
  %cmp = icmp slt i32 %6, %7, !dbg !7835
  br i1 %cmp, label %while.body, label %while.end, !dbg !7832

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata float* %len_sq, metadata !7836, metadata !DIExpression()), !dbg !7838
  %8 = load float*, float** %co.addr, align 8, !dbg !7839
  %9 = load float*, float** %v_curr, align 8, !dbg !7840
  %call5 = call float @len_squared_v3v3(float* %8, float* %9), !dbg !7841
  store float %call5, float* %len_sq, align 4, !dbg !7838
  %10 = load float, float* %len_sq, align 4, !dbg !7842
  %cmp6 = fcmp olt float %10, 0x3DDB7CDFC0000000, !dbg !7844
  br i1 %cmp6, label %if.then, label %if.else, !dbg !7845

if.then:                                          ; preds = %while.body
  store i8 1, i8* %vert_interp, align 1, !dbg !7846
  br label %while.end, !dbg !7848

if.else:                                          ; preds = %while.body
  %11 = load float*, float** %co.addr, align 8, !dbg !7849
  %12 = load float*, float** %v_curr, align 8, !dbg !7851
  %13 = load float*, float** %v_next, align 8, !dbg !7852
  %call7 = call float @dist_squared_to_line_segment_v3(float* %11, float* %12, float* %13), !dbg !7853
  %cmp8 = fcmp olt float %call7, 0x3DDB7CDFC0000000, !dbg !7854
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !7855

if.then9:                                         ; preds = %if.else
  store i8 1, i8* %edge_interp, align 1, !dbg !7856
  br label %while.end, !dbg !7858

if.end:                                           ; preds = %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end
  %14 = load float*, float** %co.addr, align 8, !dbg !7859
  %15 = load float*, float** %v_curr, align 8, !dbg !7860
  %16 = load float*, float** %v_next, align 8, !dbg !7861
  %call11 = call float @mean_value_half_tan_v3(float* %14, float* %15, float* %16), !dbg !7862
  store float %call11, float* %ht, align 4, !dbg !7863
  %17 = load float, float* %ht_prev, align 4, !dbg !7864
  %18 = load float, float* %ht, align 4, !dbg !7865
  %add = fadd float %17, %18, !dbg !7866
  %19 = load float, float* %len_sq, align 4, !dbg !7867
  %call12 = call float @sqrtf(float %19) #5, !dbg !7868
  %div = fdiv float %add, %call12, !dbg !7869
  %20 = load float*, float** %w.addr, align 8, !dbg !7870
  %21 = load i32, i32* %i, align 4, !dbg !7871
  %idxprom13 = sext i32 %21 to i64, !dbg !7870
  %arrayidx14 = getelementptr inbounds float, float* %20, i64 %idxprom13, !dbg !7870
  store float %div, float* %arrayidx14, align 4, !dbg !7872
  %22 = load float*, float** %w.addr, align 8, !dbg !7873
  %23 = load i32, i32* %i, align 4, !dbg !7874
  %idxprom15 = sext i32 %23 to i64, !dbg !7873
  %arrayidx16 = getelementptr inbounds float, float* %22, i64 %idxprom15, !dbg !7873
  %24 = load float, float* %arrayidx16, align 4, !dbg !7873
  %25 = load float, float* %totweight, align 4, !dbg !7875
  %add17 = fadd float %25, %24, !dbg !7875
  store float %add17, float* %totweight, align 4, !dbg !7875
  %26 = load i32, i32* %i, align 4, !dbg !7876
  %inc = add nsw i32 %26, 1, !dbg !7876
  store i32 %inc, i32* %i, align 4, !dbg !7876
  %27 = load float*, float** %v_next, align 8, !dbg !7877
  store float* %27, float** %v_curr, align 8, !dbg !7878
  %28 = load [3 x float]*, [3 x float]** %v.addr, align 8, !dbg !7879
  %29 = load i32, i32* %i, align 4, !dbg !7880
  %add18 = add nsw i32 %29, 1, !dbg !7881
  %30 = load i32, i32* %n.addr, align 4, !dbg !7882
  %rem = srem i32 %add18, %30, !dbg !7883
  %idxprom19 = sext i32 %rem to i64, !dbg !7879
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %28, i64 %idxprom19, !dbg !7879
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx20, i64 0, i64 0, !dbg !7879
  store float* %arraydecay21, float** %v_next, align 8, !dbg !7884
  %31 = load float, float* %ht, align 4, !dbg !7885
  store float %31, float* %ht_prev, align 4, !dbg !7886
  br label %while.cond, !dbg !7832, !llvm.loop !7887

while.end:                                        ; preds = %if.then9, %if.then, %while.cond
  %32 = load i8, i8* %vert_interp, align 1, !dbg !7889
  %tobool = icmp ne i8 %32, 0, !dbg !7889
  br i1 %tobool, label %if.then22, label %if.else29, !dbg !7891

if.then22:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata i32* %i_curr, metadata !7892, metadata !DIExpression()), !dbg !7894
  %33 = load i32, i32* %i, align 4, !dbg !7895
  store i32 %33, i32* %i_curr, align 4, !dbg !7894
  store i32 0, i32* %i, align 4, !dbg !7896
  br label %for.cond, !dbg !7898

for.cond:                                         ; preds = %for.inc, %if.then22
  %34 = load i32, i32* %i, align 4, !dbg !7899
  %35 = load i32, i32* %n.addr, align 4, !dbg !7901
  %cmp23 = icmp slt i32 %34, %35, !dbg !7902
  br i1 %cmp23, label %for.body, label %for.end, !dbg !7903

for.body:                                         ; preds = %for.cond
  %36 = load float*, float** %w.addr, align 8, !dbg !7904
  %37 = load i32, i32* %i, align 4, !dbg !7905
  %idxprom24 = sext i32 %37 to i64, !dbg !7904
  %arrayidx25 = getelementptr inbounds float, float* %36, i64 %idxprom24, !dbg !7904
  store float 0.000000e+00, float* %arrayidx25, align 4, !dbg !7906
  br label %for.inc, !dbg !7904

for.inc:                                          ; preds = %for.body
  %38 = load i32, i32* %i, align 4, !dbg !7907
  %inc26 = add nsw i32 %38, 1, !dbg !7907
  store i32 %inc26, i32* %i, align 4, !dbg !7907
  br label %for.cond, !dbg !7908, !llvm.loop !7909

for.end:                                          ; preds = %for.cond
  %39 = load float*, float** %w.addr, align 8, !dbg !7911
  %40 = load i32, i32* %i_curr, align 4, !dbg !7912
  %idxprom27 = sext i32 %40 to i64, !dbg !7911
  %arrayidx28 = getelementptr inbounds float, float* %39, i64 %idxprom27, !dbg !7911
  store float 1.000000e+00, float* %arrayidx28, align 4, !dbg !7913
  br label %if.end66, !dbg !7914

if.else29:                                        ; preds = %while.end
  %41 = load i8, i8* %edge_interp, align 1, !dbg !7915
  %tobool30 = icmp ne i8 %41, 0, !dbg !7915
  br i1 %tobool30, label %if.then31, label %if.else52, !dbg !7917

if.then31:                                        ; preds = %if.else29
  call void @llvm.dbg.declare(metadata i32* %i_curr32, metadata !7918, metadata !DIExpression()), !dbg !7920
  %42 = load i32, i32* %i, align 4, !dbg !7921
  store i32 %42, i32* %i_curr32, align 4, !dbg !7920
  call void @llvm.dbg.declare(metadata float* %len_curr, metadata !7922, metadata !DIExpression()), !dbg !7923
  %43 = load float*, float** %co.addr, align 8, !dbg !7924
  %44 = load float*, float** %v_curr, align 8, !dbg !7925
  %call33 = call float @len_v3v3(float* %43, float* %44), !dbg !7926
  store float %call33, float* %len_curr, align 4, !dbg !7923
  call void @llvm.dbg.declare(metadata float* %len_next, metadata !7927, metadata !DIExpression()), !dbg !7928
  %45 = load float*, float** %co.addr, align 8, !dbg !7929
  %46 = load float*, float** %v_next, align 8, !dbg !7930
  %call34 = call float @len_v3v3(float* %45, float* %46), !dbg !7931
  store float %call34, float* %len_next, align 4, !dbg !7928
  call void @llvm.dbg.declare(metadata float* %edge_len, metadata !7932, metadata !DIExpression()), !dbg !7933
  %47 = load float, float* %len_curr, align 4, !dbg !7934
  %48 = load float, float* %len_next, align 4, !dbg !7935
  %add35 = fadd float %47, %48, !dbg !7936
  store float %add35, float* %edge_len, align 4, !dbg !7933
  store i32 0, i32* %i, align 4, !dbg !7937
  br label %for.cond36, !dbg !7939

for.cond36:                                       ; preds = %for.inc41, %if.then31
  %49 = load i32, i32* %i, align 4, !dbg !7940
  %50 = load i32, i32* %n.addr, align 4, !dbg !7942
  %cmp37 = icmp slt i32 %49, %50, !dbg !7943
  br i1 %cmp37, label %for.body38, label %for.end43, !dbg !7944

for.body38:                                       ; preds = %for.cond36
  %51 = load float*, float** %w.addr, align 8, !dbg !7945
  %52 = load i32, i32* %i, align 4, !dbg !7946
  %idxprom39 = sext i32 %52 to i64, !dbg !7945
  %arrayidx40 = getelementptr inbounds float, float* %51, i64 %idxprom39, !dbg !7945
  store float 0.000000e+00, float* %arrayidx40, align 4, !dbg !7947
  br label %for.inc41, !dbg !7945

for.inc41:                                        ; preds = %for.body38
  %53 = load i32, i32* %i, align 4, !dbg !7948
  %inc42 = add nsw i32 %53, 1, !dbg !7948
  store i32 %inc42, i32* %i, align 4, !dbg !7948
  br label %for.cond36, !dbg !7949, !llvm.loop !7950

for.end43:                                        ; preds = %for.cond36
  %54 = load float, float* %len_next, align 4, !dbg !7952
  %55 = load float, float* %edge_len, align 4, !dbg !7953
  %div44 = fdiv float %54, %55, !dbg !7954
  %56 = load float*, float** %w.addr, align 8, !dbg !7955
  %57 = load i32, i32* %i_curr32, align 4, !dbg !7956
  %idxprom45 = sext i32 %57 to i64, !dbg !7955
  %arrayidx46 = getelementptr inbounds float, float* %56, i64 %idxprom45, !dbg !7955
  store float %div44, float* %arrayidx46, align 4, !dbg !7957
  %58 = load float, float* %len_curr, align 4, !dbg !7958
  %59 = load float, float* %edge_len, align 4, !dbg !7959
  %div47 = fdiv float %58, %59, !dbg !7960
  %60 = load float*, float** %w.addr, align 8, !dbg !7961
  %61 = load i32, i32* %i_curr32, align 4, !dbg !7962
  %add48 = add nsw i32 %61, 1, !dbg !7963
  %62 = load i32, i32* %n.addr, align 4, !dbg !7964
  %rem49 = srem i32 %add48, %62, !dbg !7965
  %idxprom50 = sext i32 %rem49 to i64, !dbg !7961
  %arrayidx51 = getelementptr inbounds float, float* %60, i64 %idxprom50, !dbg !7961
  store float %div47, float* %arrayidx51, align 4, !dbg !7966
  br label %if.end65, !dbg !7967

if.else52:                                        ; preds = %if.else29
  %63 = load float, float* %totweight, align 4, !dbg !7968
  %cmp53 = fcmp une float %63, 0.000000e+00, !dbg !7971
  br i1 %cmp53, label %if.then54, label %if.end64, !dbg !7972

if.then54:                                        ; preds = %if.else52
  store i32 0, i32* %i, align 4, !dbg !7973
  br label %for.cond55, !dbg !7976

for.cond55:                                       ; preds = %for.inc61, %if.then54
  %64 = load i32, i32* %i, align 4, !dbg !7977
  %65 = load i32, i32* %n.addr, align 4, !dbg !7979
  %cmp56 = icmp slt i32 %64, %65, !dbg !7980
  br i1 %cmp56, label %for.body57, label %for.end63, !dbg !7981

for.body57:                                       ; preds = %for.cond55
  %66 = load float, float* %totweight, align 4, !dbg !7982
  %67 = load float*, float** %w.addr, align 8, !dbg !7984
  %68 = load i32, i32* %i, align 4, !dbg !7985
  %idxprom58 = sext i32 %68 to i64, !dbg !7984
  %arrayidx59 = getelementptr inbounds float, float* %67, i64 %idxprom58, !dbg !7984
  %69 = load float, float* %arrayidx59, align 4, !dbg !7986
  %div60 = fdiv float %69, %66, !dbg !7986
  store float %div60, float* %arrayidx59, align 4, !dbg !7986
  br label %for.inc61, !dbg !7987

for.inc61:                                        ; preds = %for.body57
  %70 = load i32, i32* %i, align 4, !dbg !7988
  %inc62 = add nsw i32 %70, 1, !dbg !7988
  store i32 %inc62, i32* %i, align 4, !dbg !7988
  br label %for.cond55, !dbg !7989, !llvm.loop !7990

for.end63:                                        ; preds = %for.cond55
  br label %if.end64, !dbg !7992

if.end64:                                         ; preds = %for.end63, %if.else52
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %for.end43
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %for.end
  ret void, !dbg !7993
}

; Function Attrs: noinline nounwind uwtable
define internal float @mean_value_half_tan_v3(float* %v1, float* %v2, float* %v3) #0 !dbg !7994 {
entry:
  %retval = alloca float, align 4
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %d2 = alloca [3 x float], align 4
  %d3 = alloca [3 x float], align 4
  %cross = alloca [3 x float], align 4
  %area = alloca float, align 4
  %dot = alloca float, align 4
  %len = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !7995, metadata !DIExpression()), !dbg !7996
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !7997, metadata !DIExpression()), !dbg !7998
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !7999, metadata !DIExpression()), !dbg !8000
  call void @llvm.dbg.declare(metadata [3 x float]* %d2, metadata !8001, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.declare(metadata [3 x float]* %d3, metadata !8003, metadata !DIExpression()), !dbg !8004
  call void @llvm.dbg.declare(metadata [3 x float]* %cross, metadata !8005, metadata !DIExpression()), !dbg !8006
  call void @llvm.dbg.declare(metadata float* %area, metadata !8007, metadata !DIExpression()), !dbg !8008
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d2, i64 0, i64 0, !dbg !8009
  %0 = load float*, float** %v2.addr, align 8, !dbg !8010
  %1 = load float*, float** %v1.addr, align 8, !dbg !8011
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !8012
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d3, i64 0, i64 0, !dbg !8013
  %2 = load float*, float** %v3.addr, align 8, !dbg !8014
  %3 = load float*, float** %v1.addr, align 8, !dbg !8015
  call void @sub_v3_v3v3(float* %arraydecay1, float* %2, float* %3), !dbg !8016
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 0, !dbg !8017
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %d2, i64 0, i64 0, !dbg !8018
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %d3, i64 0, i64 0, !dbg !8019
  call void @cross_v3_v3v3(float* %arraydecay2, float* %arraydecay3, float* %arraydecay4), !dbg !8020
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 0, !dbg !8021
  %call = call float @len_v3(float* %arraydecay5), !dbg !8022
  store float %call, float* %area, align 4, !dbg !8023
  %4 = load float, float* %area, align 4, !dbg !8024
  %cmp = fcmp une float %4, 0.000000e+00, !dbg !8024
  br i1 %cmp, label %if.then, label %if.else, !dbg !8026

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %dot, metadata !8027, metadata !DIExpression()), !dbg !8029
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %d2, i64 0, i64 0, !dbg !8030
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %d3, i64 0, i64 0, !dbg !8031
  %call8 = call float @dot_v3v3(float* %arraydecay6, float* %arraydecay7), !dbg !8032
  store float %call8, float* %dot, align 4, !dbg !8029
  call void @llvm.dbg.declare(metadata float* %len, metadata !8033, metadata !DIExpression()), !dbg !8034
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %d2, i64 0, i64 0, !dbg !8035
  %call10 = call float @len_v3(float* %arraydecay9), !dbg !8036
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %d3, i64 0, i64 0, !dbg !8037
  %call12 = call float @len_v3(float* %arraydecay11), !dbg !8038
  %mul = fmul float %call10, %call12, !dbg !8039
  store float %mul, float* %len, align 4, !dbg !8034
  %5 = load float, float* %len, align 4, !dbg !8040
  %6 = load float, float* %dot, align 4, !dbg !8041
  %sub = fsub float %5, %6, !dbg !8042
  %7 = load float, float* %area, align 4, !dbg !8043
  %div = fdiv float %sub, %7, !dbg !8044
  store float %div, float* %retval, align 4, !dbg !8045
  br label %return, !dbg !8045

if.else:                                          ; preds = %entry
  store float 0.000000e+00, float* %retval, align 4, !dbg !8046
  br label %return, !dbg !8046

return:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %retval, align 4, !dbg !8048
  ret float %8, !dbg !8048
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @interp_weights_poly_v2(float* %w, [2 x float]* %v, i32 %n, float* %co) #0 !dbg !8049 {
entry:
  %w.addr = alloca float*, align 8
  %v.addr = alloca [2 x float]*, align 8
  %n.addr = alloca i32, align 4
  %co.addr = alloca float*, align 8
  %eps = alloca float, align 4
  %eps_sq = alloca float, align 4
  %v_curr = alloca float*, align 8
  %v_next = alloca float*, align 8
  %ht_prev = alloca float, align 4
  %ht = alloca float, align 4
  %totweight = alloca float, align 4
  %i = alloca i32, align 4
  %vert_interp = alloca i8, align 1
  %edge_interp = alloca i8, align 1
  %len_sq = alloca float, align 4
  %i_curr = alloca i32, align 4
  %i_curr32 = alloca i32, align 4
  %len_curr = alloca float, align 4
  %len_next = alloca float, align 4
  %edge_len = alloca float, align 4
  store float* %w, float** %w.addr, align 8
  call void @llvm.dbg.declare(metadata float** %w.addr, metadata !8053, metadata !DIExpression()), !dbg !8054
  store [2 x float]* %v, [2 x float]** %v.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %v.addr, metadata !8055, metadata !DIExpression()), !dbg !8056
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !8057, metadata !DIExpression()), !dbg !8058
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !8059, metadata !DIExpression()), !dbg !8060
  call void @llvm.dbg.declare(metadata float* %eps, metadata !8061, metadata !DIExpression()), !dbg !8062
  store float 0x3EE4F8B580000000, float* %eps, align 4, !dbg !8062
  call void @llvm.dbg.declare(metadata float* %eps_sq, metadata !8063, metadata !DIExpression()), !dbg !8064
  store float 0x3DDB7CDFC0000000, float* %eps_sq, align 4, !dbg !8064
  call void @llvm.dbg.declare(metadata float** %v_curr, metadata !8065, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.declare(metadata float** %v_next, metadata !8067, metadata !DIExpression()), !dbg !8068
  call void @llvm.dbg.declare(metadata float* %ht_prev, metadata !8069, metadata !DIExpression()), !dbg !8070
  call void @llvm.dbg.declare(metadata float* %ht, metadata !8071, metadata !DIExpression()), !dbg !8072
  call void @llvm.dbg.declare(metadata float* %totweight, metadata !8073, metadata !DIExpression()), !dbg !8074
  store float 0.000000e+00, float* %totweight, align 4, !dbg !8074
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8075, metadata !DIExpression()), !dbg !8076
  store i32 0, i32* %i, align 4, !dbg !8076
  call void @llvm.dbg.declare(metadata i8* %vert_interp, metadata !8077, metadata !DIExpression()), !dbg !8078
  store i8 0, i8* %vert_interp, align 1, !dbg !8078
  call void @llvm.dbg.declare(metadata i8* %edge_interp, metadata !8079, metadata !DIExpression()), !dbg !8080
  store i8 0, i8* %edge_interp, align 1, !dbg !8080
  %0 = load [2 x float]*, [2 x float]** %v.addr, align 8, !dbg !8081
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %0, i64 0, !dbg !8081
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !8081
  store float* %arraydecay, float** %v_curr, align 8, !dbg !8082
  %1 = load [2 x float]*, [2 x float]** %v.addr, align 8, !dbg !8083
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %1, i64 1, !dbg !8083
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx1, i64 0, i64 0, !dbg !8083
  store float* %arraydecay2, float** %v_next, align 8, !dbg !8084
  %2 = load float*, float** %co.addr, align 8, !dbg !8085
  %3 = load [2 x float]*, [2 x float]** %v.addr, align 8, !dbg !8086
  %4 = load i32, i32* %n.addr, align 4, !dbg !8087
  %sub = sub nsw i32 %4, 1, !dbg !8088
  %idxprom = sext i32 %sub to i64, !dbg !8086
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %3, i64 %idxprom, !dbg !8086
  %arraydecay4 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx3, i64 0, i64 0, !dbg !8086
  %5 = load float*, float** %v_curr, align 8, !dbg !8089
  %call = call float @mean_value_half_tan_v2(float* %2, float* %arraydecay4, float* %5), !dbg !8090
  store float %call, float* %ht_prev, align 4, !dbg !8091
  br label %while.cond, !dbg !8092

while.cond:                                       ; preds = %if.end10, %entry
  %6 = load i32, i32* %i, align 4, !dbg !8093
  %7 = load i32, i32* %n.addr, align 4, !dbg !8094
  %cmp = icmp slt i32 %6, %7, !dbg !8095
  br i1 %cmp, label %while.body, label %while.end, !dbg !8092

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata float* %len_sq, metadata !8096, metadata !DIExpression()), !dbg !8098
  %8 = load float*, float** %co.addr, align 8, !dbg !8099
  %9 = load float*, float** %v_curr, align 8, !dbg !8100
  %call5 = call float @len_squared_v2v2(float* %8, float* %9), !dbg !8101
  store float %call5, float* %len_sq, align 4, !dbg !8098
  %10 = load float, float* %len_sq, align 4, !dbg !8102
  %cmp6 = fcmp olt float %10, 0x3DDB7CDFC0000000, !dbg !8104
  br i1 %cmp6, label %if.then, label %if.else, !dbg !8105

if.then:                                          ; preds = %while.body
  store i8 1, i8* %vert_interp, align 1, !dbg !8106
  br label %while.end, !dbg !8108

if.else:                                          ; preds = %while.body
  %11 = load float*, float** %co.addr, align 8, !dbg !8109
  %12 = load float*, float** %v_curr, align 8, !dbg !8111
  %13 = load float*, float** %v_next, align 8, !dbg !8112
  %call7 = call float @dist_squared_to_line_segment_v2(float* %11, float* %12, float* %13), !dbg !8113
  %cmp8 = fcmp olt float %call7, 0x3DDB7CDFC0000000, !dbg !8114
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !8115

if.then9:                                         ; preds = %if.else
  store i8 1, i8* %edge_interp, align 1, !dbg !8116
  br label %while.end, !dbg !8118

if.end:                                           ; preds = %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end
  %14 = load float*, float** %co.addr, align 8, !dbg !8119
  %15 = load float*, float** %v_curr, align 8, !dbg !8120
  %16 = load float*, float** %v_next, align 8, !dbg !8121
  %call11 = call float @mean_value_half_tan_v2(float* %14, float* %15, float* %16), !dbg !8122
  store float %call11, float* %ht, align 4, !dbg !8123
  %17 = load float, float* %ht_prev, align 4, !dbg !8124
  %18 = load float, float* %ht, align 4, !dbg !8125
  %add = fadd float %17, %18, !dbg !8126
  %19 = load float, float* %len_sq, align 4, !dbg !8127
  %call12 = call float @sqrtf(float %19) #5, !dbg !8128
  %div = fdiv float %add, %call12, !dbg !8129
  %20 = load float*, float** %w.addr, align 8, !dbg !8130
  %21 = load i32, i32* %i, align 4, !dbg !8131
  %idxprom13 = sext i32 %21 to i64, !dbg !8130
  %arrayidx14 = getelementptr inbounds float, float* %20, i64 %idxprom13, !dbg !8130
  store float %div, float* %arrayidx14, align 4, !dbg !8132
  %22 = load float*, float** %w.addr, align 8, !dbg !8133
  %23 = load i32, i32* %i, align 4, !dbg !8134
  %idxprom15 = sext i32 %23 to i64, !dbg !8133
  %arrayidx16 = getelementptr inbounds float, float* %22, i64 %idxprom15, !dbg !8133
  %24 = load float, float* %arrayidx16, align 4, !dbg !8133
  %25 = load float, float* %totweight, align 4, !dbg !8135
  %add17 = fadd float %25, %24, !dbg !8135
  store float %add17, float* %totweight, align 4, !dbg !8135
  %26 = load i32, i32* %i, align 4, !dbg !8136
  %inc = add nsw i32 %26, 1, !dbg !8136
  store i32 %inc, i32* %i, align 4, !dbg !8136
  %27 = load float*, float** %v_next, align 8, !dbg !8137
  store float* %27, float** %v_curr, align 8, !dbg !8138
  %28 = load [2 x float]*, [2 x float]** %v.addr, align 8, !dbg !8139
  %29 = load i32, i32* %i, align 4, !dbg !8140
  %add18 = add nsw i32 %29, 1, !dbg !8141
  %30 = load i32, i32* %n.addr, align 4, !dbg !8142
  %rem = srem i32 %add18, %30, !dbg !8143
  %idxprom19 = sext i32 %rem to i64, !dbg !8139
  %arrayidx20 = getelementptr inbounds [2 x float], [2 x float]* %28, i64 %idxprom19, !dbg !8139
  %arraydecay21 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx20, i64 0, i64 0, !dbg !8139
  store float* %arraydecay21, float** %v_next, align 8, !dbg !8144
  %31 = load float, float* %ht, align 4, !dbg !8145
  store float %31, float* %ht_prev, align 4, !dbg !8146
  br label %while.cond, !dbg !8092, !llvm.loop !8147

while.end:                                        ; preds = %if.then9, %if.then, %while.cond
  %32 = load i8, i8* %vert_interp, align 1, !dbg !8149
  %tobool = icmp ne i8 %32, 0, !dbg !8149
  br i1 %tobool, label %if.then22, label %if.else29, !dbg !8151

if.then22:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata i32* %i_curr, metadata !8152, metadata !DIExpression()), !dbg !8154
  %33 = load i32, i32* %i, align 4, !dbg !8155
  store i32 %33, i32* %i_curr, align 4, !dbg !8154
  store i32 0, i32* %i, align 4, !dbg !8156
  br label %for.cond, !dbg !8158

for.cond:                                         ; preds = %for.inc, %if.then22
  %34 = load i32, i32* %i, align 4, !dbg !8159
  %35 = load i32, i32* %n.addr, align 4, !dbg !8161
  %cmp23 = icmp slt i32 %34, %35, !dbg !8162
  br i1 %cmp23, label %for.body, label %for.end, !dbg !8163

for.body:                                         ; preds = %for.cond
  %36 = load float*, float** %w.addr, align 8, !dbg !8164
  %37 = load i32, i32* %i, align 4, !dbg !8165
  %idxprom24 = sext i32 %37 to i64, !dbg !8164
  %arrayidx25 = getelementptr inbounds float, float* %36, i64 %idxprom24, !dbg !8164
  store float 0.000000e+00, float* %arrayidx25, align 4, !dbg !8166
  br label %for.inc, !dbg !8164

for.inc:                                          ; preds = %for.body
  %38 = load i32, i32* %i, align 4, !dbg !8167
  %inc26 = add nsw i32 %38, 1, !dbg !8167
  store i32 %inc26, i32* %i, align 4, !dbg !8167
  br label %for.cond, !dbg !8168, !llvm.loop !8169

for.end:                                          ; preds = %for.cond
  %39 = load float*, float** %w.addr, align 8, !dbg !8171
  %40 = load i32, i32* %i_curr, align 4, !dbg !8172
  %idxprom27 = sext i32 %40 to i64, !dbg !8171
  %arrayidx28 = getelementptr inbounds float, float* %39, i64 %idxprom27, !dbg !8171
  store float 1.000000e+00, float* %arrayidx28, align 4, !dbg !8173
  br label %if.end66, !dbg !8174

if.else29:                                        ; preds = %while.end
  %41 = load i8, i8* %edge_interp, align 1, !dbg !8175
  %tobool30 = icmp ne i8 %41, 0, !dbg !8175
  br i1 %tobool30, label %if.then31, label %if.else52, !dbg !8177

if.then31:                                        ; preds = %if.else29
  call void @llvm.dbg.declare(metadata i32* %i_curr32, metadata !8178, metadata !DIExpression()), !dbg !8180
  %42 = load i32, i32* %i, align 4, !dbg !8181
  store i32 %42, i32* %i_curr32, align 4, !dbg !8180
  call void @llvm.dbg.declare(metadata float* %len_curr, metadata !8182, metadata !DIExpression()), !dbg !8183
  %43 = load float*, float** %co.addr, align 8, !dbg !8184
  %44 = load float*, float** %v_curr, align 8, !dbg !8185
  %call33 = call float @len_v2v2(float* %43, float* %44), !dbg !8186
  store float %call33, float* %len_curr, align 4, !dbg !8183
  call void @llvm.dbg.declare(metadata float* %len_next, metadata !8187, metadata !DIExpression()), !dbg !8188
  %45 = load float*, float** %co.addr, align 8, !dbg !8189
  %46 = load float*, float** %v_next, align 8, !dbg !8190
  %call34 = call float @len_v2v2(float* %45, float* %46), !dbg !8191
  store float %call34, float* %len_next, align 4, !dbg !8188
  call void @llvm.dbg.declare(metadata float* %edge_len, metadata !8192, metadata !DIExpression()), !dbg !8193
  %47 = load float, float* %len_curr, align 4, !dbg !8194
  %48 = load float, float* %len_next, align 4, !dbg !8195
  %add35 = fadd float %47, %48, !dbg !8196
  store float %add35, float* %edge_len, align 4, !dbg !8193
  store i32 0, i32* %i, align 4, !dbg !8197
  br label %for.cond36, !dbg !8199

for.cond36:                                       ; preds = %for.inc41, %if.then31
  %49 = load i32, i32* %i, align 4, !dbg !8200
  %50 = load i32, i32* %n.addr, align 4, !dbg !8202
  %cmp37 = icmp slt i32 %49, %50, !dbg !8203
  br i1 %cmp37, label %for.body38, label %for.end43, !dbg !8204

for.body38:                                       ; preds = %for.cond36
  %51 = load float*, float** %w.addr, align 8, !dbg !8205
  %52 = load i32, i32* %i, align 4, !dbg !8206
  %idxprom39 = sext i32 %52 to i64, !dbg !8205
  %arrayidx40 = getelementptr inbounds float, float* %51, i64 %idxprom39, !dbg !8205
  store float 0.000000e+00, float* %arrayidx40, align 4, !dbg !8207
  br label %for.inc41, !dbg !8205

for.inc41:                                        ; preds = %for.body38
  %53 = load i32, i32* %i, align 4, !dbg !8208
  %inc42 = add nsw i32 %53, 1, !dbg !8208
  store i32 %inc42, i32* %i, align 4, !dbg !8208
  br label %for.cond36, !dbg !8209, !llvm.loop !8210

for.end43:                                        ; preds = %for.cond36
  %54 = load float, float* %len_next, align 4, !dbg !8212
  %55 = load float, float* %edge_len, align 4, !dbg !8213
  %div44 = fdiv float %54, %55, !dbg !8214
  %56 = load float*, float** %w.addr, align 8, !dbg !8215
  %57 = load i32, i32* %i_curr32, align 4, !dbg !8216
  %idxprom45 = sext i32 %57 to i64, !dbg !8215
  %arrayidx46 = getelementptr inbounds float, float* %56, i64 %idxprom45, !dbg !8215
  store float %div44, float* %arrayidx46, align 4, !dbg !8217
  %58 = load float, float* %len_curr, align 4, !dbg !8218
  %59 = load float, float* %edge_len, align 4, !dbg !8219
  %div47 = fdiv float %58, %59, !dbg !8220
  %60 = load float*, float** %w.addr, align 8, !dbg !8221
  %61 = load i32, i32* %i_curr32, align 4, !dbg !8222
  %add48 = add nsw i32 %61, 1, !dbg !8223
  %62 = load i32, i32* %n.addr, align 4, !dbg !8224
  %rem49 = srem i32 %add48, %62, !dbg !8225
  %idxprom50 = sext i32 %rem49 to i64, !dbg !8221
  %arrayidx51 = getelementptr inbounds float, float* %60, i64 %idxprom50, !dbg !8221
  store float %div47, float* %arrayidx51, align 4, !dbg !8226
  br label %if.end65, !dbg !8227

if.else52:                                        ; preds = %if.else29
  %63 = load float, float* %totweight, align 4, !dbg !8228
  %cmp53 = fcmp une float %63, 0.000000e+00, !dbg !8231
  br i1 %cmp53, label %if.then54, label %if.end64, !dbg !8232

if.then54:                                        ; preds = %if.else52
  store i32 0, i32* %i, align 4, !dbg !8233
  br label %for.cond55, !dbg !8236

for.cond55:                                       ; preds = %for.inc61, %if.then54
  %64 = load i32, i32* %i, align 4, !dbg !8237
  %65 = load i32, i32* %n.addr, align 4, !dbg !8239
  %cmp56 = icmp slt i32 %64, %65, !dbg !8240
  br i1 %cmp56, label %for.body57, label %for.end63, !dbg !8241

for.body57:                                       ; preds = %for.cond55
  %66 = load float, float* %totweight, align 4, !dbg !8242
  %67 = load float*, float** %w.addr, align 8, !dbg !8244
  %68 = load i32, i32* %i, align 4, !dbg !8245
  %idxprom58 = sext i32 %68 to i64, !dbg !8244
  %arrayidx59 = getelementptr inbounds float, float* %67, i64 %idxprom58, !dbg !8244
  %69 = load float, float* %arrayidx59, align 4, !dbg !8246
  %div60 = fdiv float %69, %66, !dbg !8246
  store float %div60, float* %arrayidx59, align 4, !dbg !8246
  br label %for.inc61, !dbg !8247

for.inc61:                                        ; preds = %for.body57
  %70 = load i32, i32* %i, align 4, !dbg !8248
  %inc62 = add nsw i32 %70, 1, !dbg !8248
  store i32 %inc62, i32* %i, align 4, !dbg !8248
  br label %for.cond55, !dbg !8249, !llvm.loop !8250

for.end63:                                        ; preds = %for.cond55
  br label %if.end64, !dbg !8252

if.end64:                                         ; preds = %for.end63, %if.else52
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %for.end43
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %for.end
  ret void, !dbg !8253
}

; Function Attrs: noinline nounwind uwtable
define internal float @mean_value_half_tan_v2(float* %v1, float* %v2, float* %v3) #0 !dbg !8254 {
entry:
  %retval = alloca float, align 4
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %d2 = alloca [2 x float], align 4
  %d3 = alloca [2 x float], align 4
  %area = alloca float, align 4
  %dot = alloca float, align 4
  %len = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !8255, metadata !DIExpression()), !dbg !8256
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !8257, metadata !DIExpression()), !dbg !8258
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !8259, metadata !DIExpression()), !dbg !8260
  call void @llvm.dbg.declare(metadata [2 x float]* %d2, metadata !8261, metadata !DIExpression()), !dbg !8262
  call void @llvm.dbg.declare(metadata [2 x float]* %d3, metadata !8263, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.declare(metadata float* %area, metadata !8265, metadata !DIExpression()), !dbg !8266
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %d2, i64 0, i64 0, !dbg !8267
  %0 = load float*, float** %v2.addr, align 8, !dbg !8268
  %1 = load float*, float** %v1.addr, align 8, !dbg !8269
  call void @sub_v2_v2v2(float* %arraydecay, float* %0, float* %1), !dbg !8270
  %arraydecay1 = getelementptr inbounds [2 x float], [2 x float]* %d3, i64 0, i64 0, !dbg !8271
  %2 = load float*, float** %v3.addr, align 8, !dbg !8272
  %3 = load float*, float** %v1.addr, align 8, !dbg !8273
  call void @sub_v2_v2v2(float* %arraydecay1, float* %2, float* %3), !dbg !8274
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %d2, i64 0, i64 0, !dbg !8275
  %arraydecay3 = getelementptr inbounds [2 x float], [2 x float]* %d3, i64 0, i64 0, !dbg !8276
  %call = call float @cross_v2v2(float* %arraydecay2, float* %arraydecay3), !dbg !8277
  store float %call, float* %area, align 4, !dbg !8278
  %4 = load float, float* %area, align 4, !dbg !8279
  %cmp = fcmp une float %4, 0.000000e+00, !dbg !8279
  br i1 %cmp, label %if.then, label %if.else, !dbg !8281

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %dot, metadata !8282, metadata !DIExpression()), !dbg !8284
  %arraydecay4 = getelementptr inbounds [2 x float], [2 x float]* %d2, i64 0, i64 0, !dbg !8285
  %arraydecay5 = getelementptr inbounds [2 x float], [2 x float]* %d3, i64 0, i64 0, !dbg !8286
  %call6 = call float @dot_v2v2(float* %arraydecay4, float* %arraydecay5), !dbg !8287
  store float %call6, float* %dot, align 4, !dbg !8284
  call void @llvm.dbg.declare(metadata float* %len, metadata !8288, metadata !DIExpression()), !dbg !8289
  %arraydecay7 = getelementptr inbounds [2 x float], [2 x float]* %d2, i64 0, i64 0, !dbg !8290
  %call8 = call float @len_v2(float* %arraydecay7), !dbg !8291
  %arraydecay9 = getelementptr inbounds [2 x float], [2 x float]* %d3, i64 0, i64 0, !dbg !8292
  %call10 = call float @len_v2(float* %arraydecay9), !dbg !8293
  %mul = fmul float %call8, %call10, !dbg !8294
  store float %mul, float* %len, align 4, !dbg !8289
  %5 = load float, float* %len, align 4, !dbg !8295
  %6 = load float, float* %dot, align 4, !dbg !8296
  %sub = fsub float %5, %6, !dbg !8297
  %7 = load float, float* %area, align 4, !dbg !8298
  %div = fdiv float %sub, %7, !dbg !8299
  store float %div, float* %retval, align 4, !dbg !8300
  br label %return, !dbg !8300

if.else:                                          ; preds = %entry
  store float 0.000000e+00, float* %retval, align 4, !dbg !8301
  br label %return, !dbg !8301

return:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %retval, align 4, !dbg !8303
  ret float %8, !dbg !8303
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v2v2(float* %v1, float* %v2) #0 !dbg !8304 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %x = alloca float, align 4
  %y = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !8305, metadata !DIExpression()), !dbg !8306
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !8307, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.declare(metadata float* %x, metadata !8309, metadata !DIExpression()), !dbg !8310
  call void @llvm.dbg.declare(metadata float* %y, metadata !8311, metadata !DIExpression()), !dbg !8312
  %0 = load float*, float** %v1.addr, align 8, !dbg !8313
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8313
  %1 = load float, float* %arrayidx, align 4, !dbg !8313
  %2 = load float*, float** %v2.addr, align 8, !dbg !8314
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8314
  %3 = load float, float* %arrayidx1, align 4, !dbg !8314
  %sub = fsub float %1, %3, !dbg !8315
  store float %sub, float* %x, align 4, !dbg !8316
  %4 = load float*, float** %v1.addr, align 8, !dbg !8317
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !8317
  %5 = load float, float* %arrayidx2, align 4, !dbg !8317
  %6 = load float*, float** %v2.addr, align 8, !dbg !8318
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !8318
  %7 = load float, float* %arrayidx3, align 4, !dbg !8318
  %sub4 = fsub float %5, %7, !dbg !8319
  store float %sub4, float* %y, align 4, !dbg !8320
  %8 = load float, float* %x, align 4, !dbg !8321
  %9 = load float, float* %x, align 4, !dbg !8322
  %mul = fmul float %8, %9, !dbg !8323
  %10 = load float, float* %y, align 4, !dbg !8324
  %11 = load float, float* %y, align 4, !dbg !8325
  %mul5 = fmul float %10, %11, !dbg !8326
  %add = fadd float %mul, %mul5, !dbg !8327
  %call = call float @sqrtf(float %add) #5, !dbg !8328
  ret float %call, !dbg !8329
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @interp_cubic_v3(float* %x, float* %v, float* %x1, float* %v1, float* %x2, float* %v2, float %t) #0 !dbg !8330 {
entry:
  %x.addr = alloca float*, align 8
  %v.addr = alloca float*, align 8
  %x1.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %x2.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %t.addr = alloca float, align 4
  %a = alloca [3 x float], align 4
  %b = alloca [3 x float], align 4
  %t2 = alloca float, align 4
  %t3 = alloca float, align 4
  store float* %x, float** %x.addr, align 8
  call void @llvm.dbg.declare(metadata float** %x.addr, metadata !8333, metadata !DIExpression()), !dbg !8334
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !8335, metadata !DIExpression()), !dbg !8336
  store float* %x1, float** %x1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %x1.addr, metadata !8337, metadata !DIExpression()), !dbg !8338
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !8339, metadata !DIExpression()), !dbg !8340
  store float* %x2, float** %x2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %x2.addr, metadata !8341, metadata !DIExpression()), !dbg !8342
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !8343, metadata !DIExpression()), !dbg !8344
  store float %t, float* %t.addr, align 4
  call void @llvm.dbg.declare(metadata float* %t.addr, metadata !8345, metadata !DIExpression()), !dbg !8346
  call void @llvm.dbg.declare(metadata [3 x float]* %a, metadata !8347, metadata !DIExpression()), !dbg !8348
  call void @llvm.dbg.declare(metadata [3 x float]* %b, metadata !8349, metadata !DIExpression()), !dbg !8350
  call void @llvm.dbg.declare(metadata float* %t2, metadata !8351, metadata !DIExpression()), !dbg !8352
  %0 = load float, float* %t.addr, align 4, !dbg !8353
  %1 = load float, float* %t.addr, align 4, !dbg !8354
  %mul = fmul float %0, %1, !dbg !8355
  store float %mul, float* %t2, align 4, !dbg !8352
  call void @llvm.dbg.declare(metadata float* %t3, metadata !8356, metadata !DIExpression()), !dbg !8357
  %2 = load float, float* %t2, align 4, !dbg !8358
  %3 = load float, float* %t.addr, align 4, !dbg !8359
  %mul1 = fmul float %2, %3, !dbg !8360
  store float %mul1, float* %t3, align 4, !dbg !8357
  %4 = load float*, float** %v1.addr, align 8, !dbg !8361
  %arrayidx = getelementptr inbounds float, float* %4, i64 0, !dbg !8361
  %5 = load float, float* %arrayidx, align 4, !dbg !8361
  %6 = load float*, float** %v2.addr, align 8, !dbg !8362
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 0, !dbg !8362
  %7 = load float, float* %arrayidx2, align 4, !dbg !8362
  %add = fadd float %5, %7, !dbg !8363
  %8 = load float*, float** %x1.addr, align 8, !dbg !8364
  %arrayidx3 = getelementptr inbounds float, float* %8, i64 0, !dbg !8364
  %9 = load float, float* %arrayidx3, align 4, !dbg !8364
  %10 = load float*, float** %x2.addr, align 8, !dbg !8365
  %arrayidx4 = getelementptr inbounds float, float* %10, i64 0, !dbg !8365
  %11 = load float, float* %arrayidx4, align 4, !dbg !8365
  %sub = fsub float %9, %11, !dbg !8366
  %mul5 = fmul float 2.000000e+00, %sub, !dbg !8367
  %add6 = fadd float %add, %mul5, !dbg !8368
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !8369
  store float %add6, float* %arrayidx7, align 4, !dbg !8370
  %12 = load float*, float** %v1.addr, align 8, !dbg !8371
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 1, !dbg !8371
  %13 = load float, float* %arrayidx8, align 4, !dbg !8371
  %14 = load float*, float** %v2.addr, align 8, !dbg !8372
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 1, !dbg !8372
  %15 = load float, float* %arrayidx9, align 4, !dbg !8372
  %add10 = fadd float %13, %15, !dbg !8373
  %16 = load float*, float** %x1.addr, align 8, !dbg !8374
  %arrayidx11 = getelementptr inbounds float, float* %16, i64 1, !dbg !8374
  %17 = load float, float* %arrayidx11, align 4, !dbg !8374
  %18 = load float*, float** %x2.addr, align 8, !dbg !8375
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 1, !dbg !8375
  %19 = load float, float* %arrayidx12, align 4, !dbg !8375
  %sub13 = fsub float %17, %19, !dbg !8376
  %mul14 = fmul float 2.000000e+00, %sub13, !dbg !8377
  %add15 = fadd float %add10, %mul14, !dbg !8378
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 1, !dbg !8379
  store float %add15, float* %arrayidx16, align 4, !dbg !8380
  %20 = load float*, float** %v1.addr, align 8, !dbg !8381
  %arrayidx17 = getelementptr inbounds float, float* %20, i64 2, !dbg !8381
  %21 = load float, float* %arrayidx17, align 4, !dbg !8381
  %22 = load float*, float** %v2.addr, align 8, !dbg !8382
  %arrayidx18 = getelementptr inbounds float, float* %22, i64 2, !dbg !8382
  %23 = load float, float* %arrayidx18, align 4, !dbg !8382
  %add19 = fadd float %21, %23, !dbg !8383
  %24 = load float*, float** %x1.addr, align 8, !dbg !8384
  %arrayidx20 = getelementptr inbounds float, float* %24, i64 2, !dbg !8384
  %25 = load float, float* %arrayidx20, align 4, !dbg !8384
  %26 = load float*, float** %x2.addr, align 8, !dbg !8385
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 2, !dbg !8385
  %27 = load float, float* %arrayidx21, align 4, !dbg !8385
  %sub22 = fsub float %25, %27, !dbg !8386
  %mul23 = fmul float 2.000000e+00, %sub22, !dbg !8387
  %add24 = fadd float %add19, %mul23, !dbg !8388
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 2, !dbg !8389
  store float %add24, float* %arrayidx25, align 4, !dbg !8390
  %28 = load float*, float** %v1.addr, align 8, !dbg !8391
  %arrayidx26 = getelementptr inbounds float, float* %28, i64 0, !dbg !8391
  %29 = load float, float* %arrayidx26, align 4, !dbg !8391
  %mul27 = fmul float -2.000000e+00, %29, !dbg !8392
  %30 = load float*, float** %v2.addr, align 8, !dbg !8393
  %arrayidx28 = getelementptr inbounds float, float* %30, i64 0, !dbg !8393
  %31 = load float, float* %arrayidx28, align 4, !dbg !8393
  %sub29 = fsub float %mul27, %31, !dbg !8394
  %32 = load float*, float** %x1.addr, align 8, !dbg !8395
  %arrayidx30 = getelementptr inbounds float, float* %32, i64 0, !dbg !8395
  %33 = load float, float* %arrayidx30, align 4, !dbg !8395
  %34 = load float*, float** %x2.addr, align 8, !dbg !8396
  %arrayidx31 = getelementptr inbounds float, float* %34, i64 0, !dbg !8396
  %35 = load float, float* %arrayidx31, align 4, !dbg !8396
  %sub32 = fsub float %33, %35, !dbg !8397
  %mul33 = fmul float 3.000000e+00, %sub32, !dbg !8398
  %sub34 = fsub float %sub29, %mul33, !dbg !8399
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 0, !dbg !8400
  store float %sub34, float* %arrayidx35, align 4, !dbg !8401
  %36 = load float*, float** %v1.addr, align 8, !dbg !8402
  %arrayidx36 = getelementptr inbounds float, float* %36, i64 1, !dbg !8402
  %37 = load float, float* %arrayidx36, align 4, !dbg !8402
  %mul37 = fmul float -2.000000e+00, %37, !dbg !8403
  %38 = load float*, float** %v2.addr, align 8, !dbg !8404
  %arrayidx38 = getelementptr inbounds float, float* %38, i64 1, !dbg !8404
  %39 = load float, float* %arrayidx38, align 4, !dbg !8404
  %sub39 = fsub float %mul37, %39, !dbg !8405
  %40 = load float*, float** %x1.addr, align 8, !dbg !8406
  %arrayidx40 = getelementptr inbounds float, float* %40, i64 1, !dbg !8406
  %41 = load float, float* %arrayidx40, align 4, !dbg !8406
  %42 = load float*, float** %x2.addr, align 8, !dbg !8407
  %arrayidx41 = getelementptr inbounds float, float* %42, i64 1, !dbg !8407
  %43 = load float, float* %arrayidx41, align 4, !dbg !8407
  %sub42 = fsub float %41, %43, !dbg !8408
  %mul43 = fmul float 3.000000e+00, %sub42, !dbg !8409
  %sub44 = fsub float %sub39, %mul43, !dbg !8410
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 1, !dbg !8411
  store float %sub44, float* %arrayidx45, align 4, !dbg !8412
  %44 = load float*, float** %v1.addr, align 8, !dbg !8413
  %arrayidx46 = getelementptr inbounds float, float* %44, i64 2, !dbg !8413
  %45 = load float, float* %arrayidx46, align 4, !dbg !8413
  %mul47 = fmul float -2.000000e+00, %45, !dbg !8414
  %46 = load float*, float** %v2.addr, align 8, !dbg !8415
  %arrayidx48 = getelementptr inbounds float, float* %46, i64 2, !dbg !8415
  %47 = load float, float* %arrayidx48, align 4, !dbg !8415
  %sub49 = fsub float %mul47, %47, !dbg !8416
  %48 = load float*, float** %x1.addr, align 8, !dbg !8417
  %arrayidx50 = getelementptr inbounds float, float* %48, i64 2, !dbg !8417
  %49 = load float, float* %arrayidx50, align 4, !dbg !8417
  %50 = load float*, float** %x2.addr, align 8, !dbg !8418
  %arrayidx51 = getelementptr inbounds float, float* %50, i64 2, !dbg !8418
  %51 = load float, float* %arrayidx51, align 4, !dbg !8418
  %sub52 = fsub float %49, %51, !dbg !8419
  %mul53 = fmul float 3.000000e+00, %sub52, !dbg !8420
  %sub54 = fsub float %sub49, %mul53, !dbg !8421
  %arrayidx55 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 2, !dbg !8422
  store float %sub54, float* %arrayidx55, align 4, !dbg !8423
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !8424
  %52 = load float, float* %arrayidx56, align 4, !dbg !8424
  %53 = load float, float* %t3, align 4, !dbg !8425
  %mul57 = fmul float %52, %53, !dbg !8426
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 0, !dbg !8427
  %54 = load float, float* %arrayidx58, align 4, !dbg !8427
  %55 = load float, float* %t2, align 4, !dbg !8428
  %mul59 = fmul float %54, %55, !dbg !8429
  %add60 = fadd float %mul57, %mul59, !dbg !8430
  %56 = load float*, float** %v1.addr, align 8, !dbg !8431
  %arrayidx61 = getelementptr inbounds float, float* %56, i64 0, !dbg !8431
  %57 = load float, float* %arrayidx61, align 4, !dbg !8431
  %58 = load float, float* %t.addr, align 4, !dbg !8432
  %mul62 = fmul float %57, %58, !dbg !8433
  %add63 = fadd float %add60, %mul62, !dbg !8434
  %59 = load float*, float** %x1.addr, align 8, !dbg !8435
  %arrayidx64 = getelementptr inbounds float, float* %59, i64 0, !dbg !8435
  %60 = load float, float* %arrayidx64, align 4, !dbg !8435
  %add65 = fadd float %add63, %60, !dbg !8436
  %61 = load float*, float** %x.addr, align 8, !dbg !8437
  %arrayidx66 = getelementptr inbounds float, float* %61, i64 0, !dbg !8437
  store float %add65, float* %arrayidx66, align 4, !dbg !8438
  %arrayidx67 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 1, !dbg !8439
  %62 = load float, float* %arrayidx67, align 4, !dbg !8439
  %63 = load float, float* %t3, align 4, !dbg !8440
  %mul68 = fmul float %62, %63, !dbg !8441
  %arrayidx69 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 1, !dbg !8442
  %64 = load float, float* %arrayidx69, align 4, !dbg !8442
  %65 = load float, float* %t2, align 4, !dbg !8443
  %mul70 = fmul float %64, %65, !dbg !8444
  %add71 = fadd float %mul68, %mul70, !dbg !8445
  %66 = load float*, float** %v1.addr, align 8, !dbg !8446
  %arrayidx72 = getelementptr inbounds float, float* %66, i64 1, !dbg !8446
  %67 = load float, float* %arrayidx72, align 4, !dbg !8446
  %68 = load float, float* %t.addr, align 4, !dbg !8447
  %mul73 = fmul float %67, %68, !dbg !8448
  %add74 = fadd float %add71, %mul73, !dbg !8449
  %69 = load float*, float** %x1.addr, align 8, !dbg !8450
  %arrayidx75 = getelementptr inbounds float, float* %69, i64 1, !dbg !8450
  %70 = load float, float* %arrayidx75, align 4, !dbg !8450
  %add76 = fadd float %add74, %70, !dbg !8451
  %71 = load float*, float** %x.addr, align 8, !dbg !8452
  %arrayidx77 = getelementptr inbounds float, float* %71, i64 1, !dbg !8452
  store float %add76, float* %arrayidx77, align 4, !dbg !8453
  %arrayidx78 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 2, !dbg !8454
  %72 = load float, float* %arrayidx78, align 4, !dbg !8454
  %73 = load float, float* %t3, align 4, !dbg !8455
  %mul79 = fmul float %72, %73, !dbg !8456
  %arrayidx80 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 2, !dbg !8457
  %74 = load float, float* %arrayidx80, align 4, !dbg !8457
  %75 = load float, float* %t2, align 4, !dbg !8458
  %mul81 = fmul float %74, %75, !dbg !8459
  %add82 = fadd float %mul79, %mul81, !dbg !8460
  %76 = load float*, float** %v1.addr, align 8, !dbg !8461
  %arrayidx83 = getelementptr inbounds float, float* %76, i64 2, !dbg !8461
  %77 = load float, float* %arrayidx83, align 4, !dbg !8461
  %78 = load float, float* %t.addr, align 4, !dbg !8462
  %mul84 = fmul float %77, %78, !dbg !8463
  %add85 = fadd float %add82, %mul84, !dbg !8464
  %79 = load float*, float** %x1.addr, align 8, !dbg !8465
  %arrayidx86 = getelementptr inbounds float, float* %79, i64 2, !dbg !8465
  %80 = load float, float* %arrayidx86, align 4, !dbg !8465
  %add87 = fadd float %add85, %80, !dbg !8466
  %81 = load float*, float** %x.addr, align 8, !dbg !8467
  %arrayidx88 = getelementptr inbounds float, float* %81, i64 2, !dbg !8467
  store float %add87, float* %arrayidx88, align 4, !dbg !8468
  %arrayidx89 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !8469
  %82 = load float, float* %arrayidx89, align 4, !dbg !8469
  %mul90 = fmul float 3.000000e+00, %82, !dbg !8470
  %83 = load float, float* %t2, align 4, !dbg !8471
  %mul91 = fmul float %mul90, %83, !dbg !8472
  %arrayidx92 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 0, !dbg !8473
  %84 = load float, float* %arrayidx92, align 4, !dbg !8473
  %mul93 = fmul float 2.000000e+00, %84, !dbg !8474
  %85 = load float, float* %t.addr, align 4, !dbg !8475
  %mul94 = fmul float %mul93, %85, !dbg !8476
  %add95 = fadd float %mul91, %mul94, !dbg !8477
  %86 = load float*, float** %v1.addr, align 8, !dbg !8478
  %arrayidx96 = getelementptr inbounds float, float* %86, i64 0, !dbg !8478
  %87 = load float, float* %arrayidx96, align 4, !dbg !8478
  %add97 = fadd float %add95, %87, !dbg !8479
  %88 = load float*, float** %v.addr, align 8, !dbg !8480
  %arrayidx98 = getelementptr inbounds float, float* %88, i64 0, !dbg !8480
  store float %add97, float* %arrayidx98, align 4, !dbg !8481
  %arrayidx99 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 1, !dbg !8482
  %89 = load float, float* %arrayidx99, align 4, !dbg !8482
  %mul100 = fmul float 3.000000e+00, %89, !dbg !8483
  %90 = load float, float* %t2, align 4, !dbg !8484
  %mul101 = fmul float %mul100, %90, !dbg !8485
  %arrayidx102 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 1, !dbg !8486
  %91 = load float, float* %arrayidx102, align 4, !dbg !8486
  %mul103 = fmul float 2.000000e+00, %91, !dbg !8487
  %92 = load float, float* %t.addr, align 4, !dbg !8488
  %mul104 = fmul float %mul103, %92, !dbg !8489
  %add105 = fadd float %mul101, %mul104, !dbg !8490
  %93 = load float*, float** %v1.addr, align 8, !dbg !8491
  %arrayidx106 = getelementptr inbounds float, float* %93, i64 1, !dbg !8491
  %94 = load float, float* %arrayidx106, align 4, !dbg !8491
  %add107 = fadd float %add105, %94, !dbg !8492
  %95 = load float*, float** %v.addr, align 8, !dbg !8493
  %arrayidx108 = getelementptr inbounds float, float* %95, i64 1, !dbg !8493
  store float %add107, float* %arrayidx108, align 4, !dbg !8494
  %arrayidx109 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 2, !dbg !8495
  %96 = load float, float* %arrayidx109, align 4, !dbg !8495
  %mul110 = fmul float 3.000000e+00, %96, !dbg !8496
  %97 = load float, float* %t2, align 4, !dbg !8497
  %mul111 = fmul float %mul110, %97, !dbg !8498
  %arrayidx112 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 2, !dbg !8499
  %98 = load float, float* %arrayidx112, align 4, !dbg !8499
  %mul113 = fmul float 2.000000e+00, %98, !dbg !8500
  %99 = load float, float* %t.addr, align 4, !dbg !8501
  %mul114 = fmul float %mul113, %99, !dbg !8502
  %add115 = fadd float %mul111, %mul114, !dbg !8503
  %100 = load float*, float** %v1.addr, align 8, !dbg !8504
  %arrayidx116 = getelementptr inbounds float, float* %100, i64 2, !dbg !8504
  %101 = load float, float* %arrayidx116, align 4, !dbg !8504
  %add117 = fadd float %add115, %101, !dbg !8505
  %102 = load float*, float** %v.addr, align 8, !dbg !8506
  %arrayidx118 = getelementptr inbounds float, float* %102, i64 2, !dbg !8506
  store float %add117, float* %arrayidx118, align 4, !dbg !8507
  ret void, !dbg !8508
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @resolve_tri_uv_v2(float* %r_uv, float* %st, float* %st0, float* %st1, float* %st2) #0 !dbg !8509 {
entry:
  %r_uv.addr = alloca float*, align 8
  %st.addr = alloca float*, align 8
  %st0.addr = alloca float*, align 8
  %st1.addr = alloca float*, align 8
  %st2.addr = alloca float*, align 8
  %a = alloca double, align 8
  %b = alloca double, align 8
  %c = alloca double, align 8
  %d = alloca double, align 8
  %det = alloca double, align 8
  %x = alloca [2 x double], align 16
  store float* %r_uv, float** %r_uv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_uv.addr, metadata !8510, metadata !DIExpression()), !dbg !8511
  store float* %st, float** %st.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st.addr, metadata !8512, metadata !DIExpression()), !dbg !8513
  store float* %st0, float** %st0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st0.addr, metadata !8514, metadata !DIExpression()), !dbg !8515
  store float* %st1, float** %st1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st1.addr, metadata !8516, metadata !DIExpression()), !dbg !8517
  store float* %st2, float** %st2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st2.addr, metadata !8518, metadata !DIExpression()), !dbg !8519
  call void @llvm.dbg.declare(metadata double* %a, metadata !8520, metadata !DIExpression()), !dbg !8522
  %0 = load float*, float** %st0.addr, align 8, !dbg !8523
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8523
  %1 = load float, float* %arrayidx, align 4, !dbg !8523
  %2 = load float*, float** %st2.addr, align 8, !dbg !8524
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8524
  %3 = load float, float* %arrayidx1, align 4, !dbg !8524
  %sub = fsub float %1, %3, !dbg !8525
  %conv = fpext float %sub to double, !dbg !8523
  store double %conv, double* %a, align 8, !dbg !8522
  call void @llvm.dbg.declare(metadata double* %b, metadata !8526, metadata !DIExpression()), !dbg !8527
  %4 = load float*, float** %st1.addr, align 8, !dbg !8528
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !8528
  %5 = load float, float* %arrayidx2, align 4, !dbg !8528
  %6 = load float*, float** %st2.addr, align 8, !dbg !8529
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 0, !dbg !8529
  %7 = load float, float* %arrayidx3, align 4, !dbg !8529
  %sub4 = fsub float %5, %7, !dbg !8530
  %conv5 = fpext float %sub4 to double, !dbg !8528
  store double %conv5, double* %b, align 8, !dbg !8527
  call void @llvm.dbg.declare(metadata double* %c, metadata !8531, metadata !DIExpression()), !dbg !8532
  %8 = load float*, float** %st0.addr, align 8, !dbg !8533
  %arrayidx6 = getelementptr inbounds float, float* %8, i64 1, !dbg !8533
  %9 = load float, float* %arrayidx6, align 4, !dbg !8533
  %10 = load float*, float** %st2.addr, align 8, !dbg !8534
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 1, !dbg !8534
  %11 = load float, float* %arrayidx7, align 4, !dbg !8534
  %sub8 = fsub float %9, %11, !dbg !8535
  %conv9 = fpext float %sub8 to double, !dbg !8533
  store double %conv9, double* %c, align 8, !dbg !8532
  call void @llvm.dbg.declare(metadata double* %d, metadata !8536, metadata !DIExpression()), !dbg !8537
  %12 = load float*, float** %st1.addr, align 8, !dbg !8538
  %arrayidx10 = getelementptr inbounds float, float* %12, i64 1, !dbg !8538
  %13 = load float, float* %arrayidx10, align 4, !dbg !8538
  %14 = load float*, float** %st2.addr, align 8, !dbg !8539
  %arrayidx11 = getelementptr inbounds float, float* %14, i64 1, !dbg !8539
  %15 = load float, float* %arrayidx11, align 4, !dbg !8539
  %sub12 = fsub float %13, %15, !dbg !8540
  %conv13 = fpext float %sub12 to double, !dbg !8538
  store double %conv13, double* %d, align 8, !dbg !8537
  call void @llvm.dbg.declare(metadata double* %det, metadata !8541, metadata !DIExpression()), !dbg !8542
  %16 = load double, double* %a, align 8, !dbg !8543
  %17 = load double, double* %d, align 8, !dbg !8544
  %mul = fmul double %16, %17, !dbg !8545
  %18 = load double, double* %c, align 8, !dbg !8546
  %19 = load double, double* %b, align 8, !dbg !8547
  %mul14 = fmul double %18, %19, !dbg !8548
  %sub15 = fsub double %mul, %mul14, !dbg !8549
  store double %sub15, double* %det, align 8, !dbg !8542
  %20 = load double, double* %det, align 8, !dbg !8550
  %cmp = fcmp ogt double %20, 0xBCB0000000000000, !dbg !8550
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8550

land.rhs:                                         ; preds = %entry
  %21 = load double, double* %det, align 8, !dbg !8550
  %cmp17 = fcmp olt double %21, 0x3CB0000000000000, !dbg !8550
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %22 = phi i1 [ false, %entry ], [ %cmp17, %land.rhs ], !dbg !8552
  %23 = zext i1 %22 to i64, !dbg !8550
  %cond = select i1 %22, i32 1, i32 0, !dbg !8550
  %cmp19 = icmp eq i32 %cond, 0, !dbg !8553
  br i1 %cmp19, label %if.then, label %if.else, !dbg !8554

if.then:                                          ; preds = %land.end
  call void @llvm.dbg.declare(metadata [2 x double]* %x, metadata !8555, metadata !DIExpression()), !dbg !8558
  %arrayinit.begin = getelementptr inbounds [2 x double], [2 x double]* %x, i64 0, i64 0, !dbg !8559
  %24 = load float*, float** %st.addr, align 8, !dbg !8560
  %arrayidx21 = getelementptr inbounds float, float* %24, i64 0, !dbg !8560
  %25 = load float, float* %arrayidx21, align 4, !dbg !8560
  %26 = load float*, float** %st2.addr, align 8, !dbg !8561
  %arrayidx22 = getelementptr inbounds float, float* %26, i64 0, !dbg !8561
  %27 = load float, float* %arrayidx22, align 4, !dbg !8561
  %sub23 = fsub float %25, %27, !dbg !8562
  %conv24 = fpext float %sub23 to double, !dbg !8560
  store double %conv24, double* %arrayinit.begin, align 8, !dbg !8559
  %arrayinit.element = getelementptr inbounds double, double* %arrayinit.begin, i64 1, !dbg !8559
  %28 = load float*, float** %st.addr, align 8, !dbg !8563
  %arrayidx25 = getelementptr inbounds float, float* %28, i64 1, !dbg !8563
  %29 = load float, float* %arrayidx25, align 4, !dbg !8563
  %30 = load float*, float** %st2.addr, align 8, !dbg !8564
  %arrayidx26 = getelementptr inbounds float, float* %30, i64 1, !dbg !8564
  %31 = load float, float* %arrayidx26, align 4, !dbg !8564
  %sub27 = fsub float %29, %31, !dbg !8565
  %conv28 = fpext float %sub27 to double, !dbg !8563
  store double %conv28, double* %arrayinit.element, align 8, !dbg !8559
  %32 = load double, double* %d, align 8, !dbg !8566
  %arrayidx29 = getelementptr inbounds [2 x double], [2 x double]* %x, i64 0, i64 0, !dbg !8567
  %33 = load double, double* %arrayidx29, align 16, !dbg !8567
  %mul30 = fmul double %32, %33, !dbg !8568
  %34 = load double, double* %b, align 8, !dbg !8569
  %arrayidx31 = getelementptr inbounds [2 x double], [2 x double]* %x, i64 0, i64 1, !dbg !8570
  %35 = load double, double* %arrayidx31, align 8, !dbg !8570
  %mul32 = fmul double %34, %35, !dbg !8571
  %sub33 = fsub double %mul30, %mul32, !dbg !8572
  %36 = load double, double* %det, align 8, !dbg !8573
  %div = fdiv double %sub33, %36, !dbg !8574
  %conv34 = fptrunc double %div to float, !dbg !8575
  %37 = load float*, float** %r_uv.addr, align 8, !dbg !8576
  %arrayidx35 = getelementptr inbounds float, float* %37, i64 0, !dbg !8576
  store float %conv34, float* %arrayidx35, align 4, !dbg !8577
  %38 = load double, double* %c, align 8, !dbg !8578
  %fneg = fneg double %38, !dbg !8579
  %arrayidx36 = getelementptr inbounds [2 x double], [2 x double]* %x, i64 0, i64 0, !dbg !8580
  %39 = load double, double* %arrayidx36, align 16, !dbg !8580
  %mul37 = fmul double %fneg, %39, !dbg !8581
  %40 = load double, double* %a, align 8, !dbg !8582
  %arrayidx38 = getelementptr inbounds [2 x double], [2 x double]* %x, i64 0, i64 1, !dbg !8583
  %41 = load double, double* %arrayidx38, align 8, !dbg !8583
  %mul39 = fmul double %40, %41, !dbg !8584
  %add = fadd double %mul37, %mul39, !dbg !8585
  %42 = load double, double* %det, align 8, !dbg !8586
  %div40 = fdiv double %add, %42, !dbg !8587
  %conv41 = fptrunc double %div40 to float, !dbg !8588
  %43 = load float*, float** %r_uv.addr, align 8, !dbg !8589
  %arrayidx42 = getelementptr inbounds float, float* %43, i64 1, !dbg !8589
  store float %conv41, float* %arrayidx42, align 4, !dbg !8590
  br label %if.end, !dbg !8591

if.else:                                          ; preds = %land.end
  %44 = load float*, float** %r_uv.addr, align 8, !dbg !8592
  call void @zero_v2(float* %44), !dbg !8594
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !8595
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v2(float* %r) #0 !dbg !8596 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8597, metadata !DIExpression()), !dbg !8598
  %0 = load float*, float** %r.addr, align 8, !dbg !8599
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8599
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !8600
  %1 = load float*, float** %r.addr, align 8, !dbg !8601
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !8601
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !8602
  ret void, !dbg !8603
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @resolve_tri_uv_v3(float* %r_uv, float* %st, float* %st0, float* %st1, float* %st2) #0 !dbg !8604 {
entry:
  %r_uv.addr = alloca float*, align 8
  %st.addr = alloca float*, align 8
  %st0.addr = alloca float*, align 8
  %st1.addr = alloca float*, align 8
  %st2.addr = alloca float*, align 8
  %v0 = alloca [3 x float], align 4
  %v1 = alloca [3 x float], align 4
  %v2 = alloca [3 x float], align 4
  %d00 = alloca double, align 8
  %d01 = alloca double, align 8
  %d11 = alloca double, align 8
  %d20 = alloca double, align 8
  %d21 = alloca double, align 8
  %det = alloca double, align 8
  %w = alloca float, align 4
  store float* %r_uv, float** %r_uv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_uv.addr, metadata !8605, metadata !DIExpression()), !dbg !8606
  store float* %st, float** %st.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st.addr, metadata !8607, metadata !DIExpression()), !dbg !8608
  store float* %st0, float** %st0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st0.addr, metadata !8609, metadata !DIExpression()), !dbg !8610
  store float* %st1, float** %st1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st1.addr, metadata !8611, metadata !DIExpression()), !dbg !8612
  store float* %st2, float** %st2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st2.addr, metadata !8613, metadata !DIExpression()), !dbg !8614
  call void @llvm.dbg.declare(metadata [3 x float]* %v0, metadata !8615, metadata !DIExpression()), !dbg !8616
  call void @llvm.dbg.declare(metadata [3 x float]* %v1, metadata !8617, metadata !DIExpression()), !dbg !8618
  call void @llvm.dbg.declare(metadata [3 x float]* %v2, metadata !8619, metadata !DIExpression()), !dbg !8620
  call void @llvm.dbg.declare(metadata double* %d00, metadata !8621, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.declare(metadata double* %d01, metadata !8623, metadata !DIExpression()), !dbg !8624
  call void @llvm.dbg.declare(metadata double* %d11, metadata !8625, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.declare(metadata double* %d20, metadata !8627, metadata !DIExpression()), !dbg !8628
  call void @llvm.dbg.declare(metadata double* %d21, metadata !8629, metadata !DIExpression()), !dbg !8630
  call void @llvm.dbg.declare(metadata double* %det, metadata !8631, metadata !DIExpression()), !dbg !8632
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %v0, i64 0, i64 0, !dbg !8633
  %0 = load float*, float** %st1.addr, align 8, !dbg !8634
  %1 = load float*, float** %st0.addr, align 8, !dbg !8635
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !8636
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !8637
  %2 = load float*, float** %st2.addr, align 8, !dbg !8638
  %3 = load float*, float** %st0.addr, align 8, !dbg !8639
  call void @sub_v3_v3v3(float* %arraydecay1, float* %2, float* %3), !dbg !8640
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !8641
  %4 = load float*, float** %st.addr, align 8, !dbg !8642
  %5 = load float*, float** %st0.addr, align 8, !dbg !8643
  call void @sub_v3_v3v3(float* %arraydecay2, float* %4, float* %5), !dbg !8644
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %v0, i64 0, i64 0, !dbg !8645
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %v0, i64 0, i64 0, !dbg !8646
  %call = call float @dot_v3v3(float* %arraydecay3, float* %arraydecay4), !dbg !8647
  %conv = fpext float %call to double, !dbg !8647
  store double %conv, double* %d00, align 8, !dbg !8648
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %v0, i64 0, i64 0, !dbg !8649
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !8650
  %call7 = call float @dot_v3v3(float* %arraydecay5, float* %arraydecay6), !dbg !8651
  %conv8 = fpext float %call7 to double, !dbg !8651
  store double %conv8, double* %d01, align 8, !dbg !8652
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !8653
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !8654
  %call11 = call float @dot_v3v3(float* %arraydecay9, float* %arraydecay10), !dbg !8655
  %conv12 = fpext float %call11 to double, !dbg !8655
  store double %conv12, double* %d11, align 8, !dbg !8656
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !8657
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %v0, i64 0, i64 0, !dbg !8658
  %call15 = call float @dot_v3v3(float* %arraydecay13, float* %arraydecay14), !dbg !8659
  %conv16 = fpext float %call15 to double, !dbg !8659
  store double %conv16, double* %d20, align 8, !dbg !8660
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !8661
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !8662
  %call19 = call float @dot_v3v3(float* %arraydecay17, float* %arraydecay18), !dbg !8663
  %conv20 = fpext float %call19 to double, !dbg !8663
  store double %conv20, double* %d21, align 8, !dbg !8664
  %6 = load double, double* %d00, align 8, !dbg !8665
  %7 = load double, double* %d11, align 8, !dbg !8666
  %mul = fmul double %6, %7, !dbg !8667
  %8 = load double, double* %d01, align 8, !dbg !8668
  %9 = load double, double* %d01, align 8, !dbg !8669
  %mul21 = fmul double %8, %9, !dbg !8670
  %sub = fsub double %mul, %mul21, !dbg !8671
  store double %sub, double* %det, align 8, !dbg !8672
  %10 = load double, double* %det, align 8, !dbg !8673
  %cmp = fcmp ogt double %10, 0xBCB0000000000000, !dbg !8673
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8673

land.rhs:                                         ; preds = %entry
  %11 = load double, double* %det, align 8, !dbg !8673
  %cmp23 = fcmp olt double %11, 0x3CB0000000000000, !dbg !8673
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %cmp23, %land.rhs ], !dbg !8675
  %13 = zext i1 %12 to i64, !dbg !8673
  %cond = select i1 %12, i32 1, i32 0, !dbg !8673
  %cmp25 = icmp eq i32 %cond, 0, !dbg !8676
  br i1 %cmp25, label %if.then, label %if.else, !dbg !8677

if.then:                                          ; preds = %land.end
  call void @llvm.dbg.declare(metadata float* %w, metadata !8678, metadata !DIExpression()), !dbg !8680
  %14 = load double, double* %d00, align 8, !dbg !8681
  %15 = load double, double* %d21, align 8, !dbg !8682
  %mul27 = fmul double %14, %15, !dbg !8683
  %16 = load double, double* %d01, align 8, !dbg !8684
  %17 = load double, double* %d20, align 8, !dbg !8685
  %mul28 = fmul double %16, %17, !dbg !8686
  %sub29 = fsub double %mul27, %mul28, !dbg !8687
  %18 = load double, double* %det, align 8, !dbg !8688
  %div = fdiv double %sub29, %18, !dbg !8689
  %conv30 = fptrunc double %div to float, !dbg !8690
  store float %conv30, float* %w, align 4, !dbg !8691
  %19 = load double, double* %d11, align 8, !dbg !8692
  %20 = load double, double* %d20, align 8, !dbg !8693
  %mul31 = fmul double %19, %20, !dbg !8694
  %21 = load double, double* %d01, align 8, !dbg !8695
  %22 = load double, double* %d21, align 8, !dbg !8696
  %mul32 = fmul double %21, %22, !dbg !8697
  %sub33 = fsub double %mul31, %mul32, !dbg !8698
  %23 = load double, double* %det, align 8, !dbg !8699
  %div34 = fdiv double %sub33, %23, !dbg !8700
  %conv35 = fptrunc double %div34 to float, !dbg !8701
  %24 = load float*, float** %r_uv.addr, align 8, !dbg !8702
  %arrayidx = getelementptr inbounds float, float* %24, i64 1, !dbg !8702
  store float %conv35, float* %arrayidx, align 4, !dbg !8703
  %25 = load float*, float** %r_uv.addr, align 8, !dbg !8704
  %arrayidx36 = getelementptr inbounds float, float* %25, i64 1, !dbg !8704
  %26 = load float, float* %arrayidx36, align 4, !dbg !8704
  %sub37 = fsub float 1.000000e+00, %26, !dbg !8705
  %27 = load float, float* %w, align 4, !dbg !8706
  %sub38 = fsub float %sub37, %27, !dbg !8707
  %28 = load float*, float** %r_uv.addr, align 8, !dbg !8708
  %arrayidx39 = getelementptr inbounds float, float* %28, i64 0, !dbg !8708
  store float %sub38, float* %arrayidx39, align 4, !dbg !8709
  br label %if.end, !dbg !8710

if.else:                                          ; preds = %land.end
  %29 = load float*, float** %r_uv.addr, align 8, !dbg !8711
  call void @zero_v2(float* %29), !dbg !8713
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !8714
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @resolve_quad_uv_v2(float* %r_uv, float* %st, float* %st0, float* %st1, float* %st2, float* %st3) #0 !dbg !8715 {
entry:
  %r_uv.addr = alloca float*, align 8
  %st.addr = alloca float*, align 8
  %st0.addr = alloca float*, align 8
  %st1.addr = alloca float*, align 8
  %st2.addr = alloca float*, align 8
  %st3.addr = alloca float*, align 8
  store float* %r_uv, float** %r_uv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_uv.addr, metadata !8716, metadata !DIExpression()), !dbg !8717
  store float* %st, float** %st.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st.addr, metadata !8718, metadata !DIExpression()), !dbg !8719
  store float* %st0, float** %st0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st0.addr, metadata !8720, metadata !DIExpression()), !dbg !8721
  store float* %st1, float** %st1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st1.addr, metadata !8722, metadata !DIExpression()), !dbg !8723
  store float* %st2, float** %st2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st2.addr, metadata !8724, metadata !DIExpression()), !dbg !8725
  store float* %st3, float** %st3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st3.addr, metadata !8726, metadata !DIExpression()), !dbg !8727
  %0 = load float*, float** %r_uv.addr, align 8, !dbg !8728
  %1 = load float*, float** %st.addr, align 8, !dbg !8729
  %2 = load float*, float** %st0.addr, align 8, !dbg !8730
  %3 = load float*, float** %st1.addr, align 8, !dbg !8731
  %4 = load float*, float** %st2.addr, align 8, !dbg !8732
  %5 = load float*, float** %st3.addr, align 8, !dbg !8733
  call void @resolve_quad_uv_v2_deriv(float* %0, [2 x float]* null, float* %1, float* %2, float* %3, float* %4, float* %5), !dbg !8734
  ret void, !dbg !8735
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @resolve_quad_uv_v2_deriv(float* %r_uv, [2 x float]* %r_deriv, float* %st, float* %st0, float* %st1, float* %st2, float* %st3) #0 !dbg !8736 {
entry:
  %r_uv.addr = alloca float*, align 8
  %r_deriv.addr = alloca [2 x float]*, align 8
  %st.addr = alloca float*, align 8
  %st0.addr = alloca float*, align 8
  %st1.addr = alloca float*, align 8
  %st2.addr = alloca float*, align 8
  %st3.addr = alloca float*, align 8
  %signed_area = alloca double, align 8
  %a = alloca double, align 8
  %b = alloca double, align 8
  %fC = alloca double, align 8
  %denom = alloca double, align 8
  %fDen = alloca double, align 8
  %desc_sq = alloca double, align 8
  %desc = alloca double, align 8
  %s = alloca double, align 8
  %denom_s = alloca double, align 8
  %denom_t = alloca double, align 8
  %i = alloca i32, align 4
  %tmp1 = alloca [2 x float], align 4
  %tmp2 = alloca [2 x float], align 4
  %s191 = alloca [2 x float], align 4
  %t = alloca [2 x float], align 4
  %inv_denom = alloca double, align 8
  store float* %r_uv, float** %r_uv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_uv.addr, metadata !8739, metadata !DIExpression()), !dbg !8740
  store [2 x float]* %r_deriv, [2 x float]** %r_deriv.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %r_deriv.addr, metadata !8741, metadata !DIExpression()), !dbg !8742
  store float* %st, float** %st.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st.addr, metadata !8743, metadata !DIExpression()), !dbg !8744
  store float* %st0, float** %st0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st0.addr, metadata !8745, metadata !DIExpression()), !dbg !8746
  store float* %st1, float** %st1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st1.addr, metadata !8747, metadata !DIExpression()), !dbg !8748
  store float* %st2, float** %st2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st2.addr, metadata !8749, metadata !DIExpression()), !dbg !8750
  store float* %st3, float** %st3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st3.addr, metadata !8751, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.declare(metadata double* %signed_area, metadata !8753, metadata !DIExpression()), !dbg !8754
  %0 = load float*, float** %st0.addr, align 8, !dbg !8755
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8755
  %1 = load float, float* %arrayidx, align 4, !dbg !8755
  %2 = load float*, float** %st1.addr, align 8, !dbg !8756
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !8756
  %3 = load float, float* %arrayidx1, align 4, !dbg !8756
  %mul = fmul float %1, %3, !dbg !8757
  %4 = load float*, float** %st0.addr, align 8, !dbg !8758
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !8758
  %5 = load float, float* %arrayidx2, align 4, !dbg !8758
  %6 = load float*, float** %st1.addr, align 8, !dbg !8759
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 0, !dbg !8759
  %7 = load float, float* %arrayidx3, align 4, !dbg !8759
  %mul4 = fmul float %5, %7, !dbg !8760
  %sub = fsub float %mul, %mul4, !dbg !8761
  %8 = load float*, float** %st1.addr, align 8, !dbg !8762
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !8762
  %9 = load float, float* %arrayidx5, align 4, !dbg !8762
  %10 = load float*, float** %st2.addr, align 8, !dbg !8763
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 1, !dbg !8763
  %11 = load float, float* %arrayidx6, align 4, !dbg !8763
  %mul7 = fmul float %9, %11, !dbg !8764
  %12 = load float*, float** %st1.addr, align 8, !dbg !8765
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 1, !dbg !8765
  %13 = load float, float* %arrayidx8, align 4, !dbg !8765
  %14 = load float*, float** %st2.addr, align 8, !dbg !8766
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 0, !dbg !8766
  %15 = load float, float* %arrayidx9, align 4, !dbg !8766
  %mul10 = fmul float %13, %15, !dbg !8767
  %sub11 = fsub float %mul7, %mul10, !dbg !8768
  %add = fadd float %sub, %sub11, !dbg !8769
  %16 = load float*, float** %st2.addr, align 8, !dbg !8770
  %arrayidx12 = getelementptr inbounds float, float* %16, i64 0, !dbg !8770
  %17 = load float, float* %arrayidx12, align 4, !dbg !8770
  %18 = load float*, float** %st3.addr, align 8, !dbg !8771
  %arrayidx13 = getelementptr inbounds float, float* %18, i64 1, !dbg !8771
  %19 = load float, float* %arrayidx13, align 4, !dbg !8771
  %mul14 = fmul float %17, %19, !dbg !8772
  %20 = load float*, float** %st2.addr, align 8, !dbg !8773
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 1, !dbg !8773
  %21 = load float, float* %arrayidx15, align 4, !dbg !8773
  %22 = load float*, float** %st3.addr, align 8, !dbg !8774
  %arrayidx16 = getelementptr inbounds float, float* %22, i64 0, !dbg !8774
  %23 = load float, float* %arrayidx16, align 4, !dbg !8774
  %mul17 = fmul float %21, %23, !dbg !8775
  %sub18 = fsub float %mul14, %mul17, !dbg !8776
  %add19 = fadd float %add, %sub18, !dbg !8777
  %24 = load float*, float** %st3.addr, align 8, !dbg !8778
  %arrayidx20 = getelementptr inbounds float, float* %24, i64 0, !dbg !8778
  %25 = load float, float* %arrayidx20, align 4, !dbg !8778
  %26 = load float*, float** %st0.addr, align 8, !dbg !8779
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 1, !dbg !8779
  %27 = load float, float* %arrayidx21, align 4, !dbg !8779
  %mul22 = fmul float %25, %27, !dbg !8780
  %28 = load float*, float** %st3.addr, align 8, !dbg !8781
  %arrayidx23 = getelementptr inbounds float, float* %28, i64 1, !dbg !8781
  %29 = load float, float* %arrayidx23, align 4, !dbg !8781
  %30 = load float*, float** %st0.addr, align 8, !dbg !8782
  %arrayidx24 = getelementptr inbounds float, float* %30, i64 0, !dbg !8782
  %31 = load float, float* %arrayidx24, align 4, !dbg !8782
  %mul25 = fmul float %29, %31, !dbg !8783
  %sub26 = fsub float %mul22, %mul25, !dbg !8784
  %add27 = fadd float %add19, %sub26, !dbg !8785
  %conv = fpext float %add27 to double, !dbg !8786
  store double %conv, double* %signed_area, align 8, !dbg !8754
  call void @llvm.dbg.declare(metadata double* %a, metadata !8787, metadata !DIExpression()), !dbg !8788
  %32 = load float*, float** %st0.addr, align 8, !dbg !8789
  %arrayidx28 = getelementptr inbounds float, float* %32, i64 0, !dbg !8789
  %33 = load float, float* %arrayidx28, align 4, !dbg !8789
  %34 = load float*, float** %st.addr, align 8, !dbg !8790
  %arrayidx29 = getelementptr inbounds float, float* %34, i64 0, !dbg !8790
  %35 = load float, float* %arrayidx29, align 4, !dbg !8790
  %sub30 = fsub float %33, %35, !dbg !8791
  %36 = load float*, float** %st0.addr, align 8, !dbg !8792
  %arrayidx31 = getelementptr inbounds float, float* %36, i64 1, !dbg !8792
  %37 = load float, float* %arrayidx31, align 4, !dbg !8792
  %38 = load float*, float** %st3.addr, align 8, !dbg !8793
  %arrayidx32 = getelementptr inbounds float, float* %38, i64 1, !dbg !8793
  %39 = load float, float* %arrayidx32, align 4, !dbg !8793
  %sub33 = fsub float %37, %39, !dbg !8794
  %mul34 = fmul float %sub30, %sub33, !dbg !8795
  %40 = load float*, float** %st0.addr, align 8, !dbg !8796
  %arrayidx35 = getelementptr inbounds float, float* %40, i64 1, !dbg !8796
  %41 = load float, float* %arrayidx35, align 4, !dbg !8796
  %42 = load float*, float** %st.addr, align 8, !dbg !8797
  %arrayidx36 = getelementptr inbounds float, float* %42, i64 1, !dbg !8797
  %43 = load float, float* %arrayidx36, align 4, !dbg !8797
  %sub37 = fsub float %41, %43, !dbg !8798
  %44 = load float*, float** %st0.addr, align 8, !dbg !8799
  %arrayidx38 = getelementptr inbounds float, float* %44, i64 0, !dbg !8799
  %45 = load float, float* %arrayidx38, align 4, !dbg !8799
  %46 = load float*, float** %st3.addr, align 8, !dbg !8800
  %arrayidx39 = getelementptr inbounds float, float* %46, i64 0, !dbg !8800
  %47 = load float, float* %arrayidx39, align 4, !dbg !8800
  %sub40 = fsub float %45, %47, !dbg !8801
  %mul41 = fmul float %sub37, %sub40, !dbg !8802
  %sub42 = fsub float %mul34, %mul41, !dbg !8803
  %conv43 = fpext float %sub42 to double, !dbg !8804
  store double %conv43, double* %a, align 8, !dbg !8788
  call void @llvm.dbg.declare(metadata double* %b, metadata !8805, metadata !DIExpression()), !dbg !8806
  %48 = load float*, float** %st0.addr, align 8, !dbg !8807
  %arrayidx44 = getelementptr inbounds float, float* %48, i64 0, !dbg !8807
  %49 = load float, float* %arrayidx44, align 4, !dbg !8807
  %50 = load float*, float** %st.addr, align 8, !dbg !8808
  %arrayidx45 = getelementptr inbounds float, float* %50, i64 0, !dbg !8808
  %51 = load float, float* %arrayidx45, align 4, !dbg !8808
  %sub46 = fsub float %49, %51, !dbg !8809
  %52 = load float*, float** %st1.addr, align 8, !dbg !8810
  %arrayidx47 = getelementptr inbounds float, float* %52, i64 1, !dbg !8810
  %53 = load float, float* %arrayidx47, align 4, !dbg !8810
  %54 = load float*, float** %st2.addr, align 8, !dbg !8811
  %arrayidx48 = getelementptr inbounds float, float* %54, i64 1, !dbg !8811
  %55 = load float, float* %arrayidx48, align 4, !dbg !8811
  %sub49 = fsub float %53, %55, !dbg !8812
  %mul50 = fmul float %sub46, %sub49, !dbg !8813
  %56 = load float*, float** %st0.addr, align 8, !dbg !8814
  %arrayidx51 = getelementptr inbounds float, float* %56, i64 1, !dbg !8814
  %57 = load float, float* %arrayidx51, align 4, !dbg !8814
  %58 = load float*, float** %st.addr, align 8, !dbg !8815
  %arrayidx52 = getelementptr inbounds float, float* %58, i64 1, !dbg !8815
  %59 = load float, float* %arrayidx52, align 4, !dbg !8815
  %sub53 = fsub float %57, %59, !dbg !8816
  %60 = load float*, float** %st1.addr, align 8, !dbg !8817
  %arrayidx54 = getelementptr inbounds float, float* %60, i64 0, !dbg !8817
  %61 = load float, float* %arrayidx54, align 4, !dbg !8817
  %62 = load float*, float** %st2.addr, align 8, !dbg !8818
  %arrayidx55 = getelementptr inbounds float, float* %62, i64 0, !dbg !8818
  %63 = load float, float* %arrayidx55, align 4, !dbg !8818
  %sub56 = fsub float %61, %63, !dbg !8819
  %mul57 = fmul float %sub53, %sub56, !dbg !8820
  %sub58 = fsub float %mul50, %mul57, !dbg !8821
  %64 = load float*, float** %st1.addr, align 8, !dbg !8822
  %arrayidx59 = getelementptr inbounds float, float* %64, i64 0, !dbg !8822
  %65 = load float, float* %arrayidx59, align 4, !dbg !8822
  %66 = load float*, float** %st.addr, align 8, !dbg !8823
  %arrayidx60 = getelementptr inbounds float, float* %66, i64 0, !dbg !8823
  %67 = load float, float* %arrayidx60, align 4, !dbg !8823
  %sub61 = fsub float %65, %67, !dbg !8824
  %68 = load float*, float** %st0.addr, align 8, !dbg !8825
  %arrayidx62 = getelementptr inbounds float, float* %68, i64 1, !dbg !8825
  %69 = load float, float* %arrayidx62, align 4, !dbg !8825
  %70 = load float*, float** %st3.addr, align 8, !dbg !8826
  %arrayidx63 = getelementptr inbounds float, float* %70, i64 1, !dbg !8826
  %71 = load float, float* %arrayidx63, align 4, !dbg !8826
  %sub64 = fsub float %69, %71, !dbg !8827
  %mul65 = fmul float %sub61, %sub64, !dbg !8828
  %72 = load float*, float** %st1.addr, align 8, !dbg !8829
  %arrayidx66 = getelementptr inbounds float, float* %72, i64 1, !dbg !8829
  %73 = load float, float* %arrayidx66, align 4, !dbg !8829
  %74 = load float*, float** %st.addr, align 8, !dbg !8830
  %arrayidx67 = getelementptr inbounds float, float* %74, i64 1, !dbg !8830
  %75 = load float, float* %arrayidx67, align 4, !dbg !8830
  %sub68 = fsub float %73, %75, !dbg !8831
  %76 = load float*, float** %st0.addr, align 8, !dbg !8832
  %arrayidx69 = getelementptr inbounds float, float* %76, i64 0, !dbg !8832
  %77 = load float, float* %arrayidx69, align 4, !dbg !8832
  %78 = load float*, float** %st3.addr, align 8, !dbg !8833
  %arrayidx70 = getelementptr inbounds float, float* %78, i64 0, !dbg !8833
  %79 = load float, float* %arrayidx70, align 4, !dbg !8833
  %sub71 = fsub float %77, %79, !dbg !8834
  %mul72 = fmul float %sub68, %sub71, !dbg !8835
  %sub73 = fsub float %mul65, %mul72, !dbg !8836
  %add74 = fadd float %sub58, %sub73, !dbg !8837
  %conv75 = fpext float %add74 to double, !dbg !8838
  %mul76 = fmul double 5.000000e-01, %conv75, !dbg !8839
  store double %mul76, double* %b, align 8, !dbg !8806
  call void @llvm.dbg.declare(metadata double* %fC, metadata !8840, metadata !DIExpression()), !dbg !8841
  %80 = load float*, float** %st1.addr, align 8, !dbg !8842
  %arrayidx77 = getelementptr inbounds float, float* %80, i64 0, !dbg !8842
  %81 = load float, float* %arrayidx77, align 4, !dbg !8842
  %82 = load float*, float** %st.addr, align 8, !dbg !8843
  %arrayidx78 = getelementptr inbounds float, float* %82, i64 0, !dbg !8843
  %83 = load float, float* %arrayidx78, align 4, !dbg !8843
  %sub79 = fsub float %81, %83, !dbg !8844
  %84 = load float*, float** %st1.addr, align 8, !dbg !8845
  %arrayidx80 = getelementptr inbounds float, float* %84, i64 1, !dbg !8845
  %85 = load float, float* %arrayidx80, align 4, !dbg !8845
  %86 = load float*, float** %st2.addr, align 8, !dbg !8846
  %arrayidx81 = getelementptr inbounds float, float* %86, i64 1, !dbg !8846
  %87 = load float, float* %arrayidx81, align 4, !dbg !8846
  %sub82 = fsub float %85, %87, !dbg !8847
  %mul83 = fmul float %sub79, %sub82, !dbg !8848
  %88 = load float*, float** %st1.addr, align 8, !dbg !8849
  %arrayidx84 = getelementptr inbounds float, float* %88, i64 1, !dbg !8849
  %89 = load float, float* %arrayidx84, align 4, !dbg !8849
  %90 = load float*, float** %st.addr, align 8, !dbg !8850
  %arrayidx85 = getelementptr inbounds float, float* %90, i64 1, !dbg !8850
  %91 = load float, float* %arrayidx85, align 4, !dbg !8850
  %sub86 = fsub float %89, %91, !dbg !8851
  %92 = load float*, float** %st1.addr, align 8, !dbg !8852
  %arrayidx87 = getelementptr inbounds float, float* %92, i64 0, !dbg !8852
  %93 = load float, float* %arrayidx87, align 4, !dbg !8852
  %94 = load float*, float** %st2.addr, align 8, !dbg !8853
  %arrayidx88 = getelementptr inbounds float, float* %94, i64 0, !dbg !8853
  %95 = load float, float* %arrayidx88, align 4, !dbg !8853
  %sub89 = fsub float %93, %95, !dbg !8854
  %mul90 = fmul float %sub86, %sub89, !dbg !8855
  %sub91 = fsub float %mul83, %mul90, !dbg !8856
  %conv92 = fpext float %sub91 to double, !dbg !8857
  store double %conv92, double* %fC, align 8, !dbg !8841
  call void @llvm.dbg.declare(metadata double* %denom, metadata !8858, metadata !DIExpression()), !dbg !8859
  %96 = load double, double* %a, align 8, !dbg !8860
  %97 = load double, double* %b, align 8, !dbg !8861
  %mul93 = fmul double 2.000000e+00, %97, !dbg !8862
  %sub94 = fsub double %96, %mul93, !dbg !8863
  %98 = load double, double* %fC, align 8, !dbg !8864
  %add95 = fadd double %sub94, %98, !dbg !8865
  store double %add95, double* %denom, align 8, !dbg !8859
  %99 = load float*, float** %r_uv.addr, align 8, !dbg !8866
  call void @zero_v2(float* %99), !dbg !8867
  %100 = load double, double* %denom, align 8, !dbg !8868
  %cmp = fcmp ogt double %100, 0xBCB0000000000000, !dbg !8868
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8868

land.rhs:                                         ; preds = %entry
  %101 = load double, double* %denom, align 8, !dbg !8868
  %cmp97 = fcmp olt double %101, 0x3CB0000000000000, !dbg !8868
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %102 = phi i1 [ false, %entry ], [ %cmp97, %land.rhs ], !dbg !8870
  %103 = zext i1 %102 to i64, !dbg !8868
  %cond = select i1 %102, i32 1, i32 0, !dbg !8868
  %cmp99 = icmp ne i32 %cond, 0, !dbg !8871
  br i1 %cmp99, label %if.then, label %if.else, !dbg !8872

if.then:                                          ; preds = %land.end
  call void @llvm.dbg.declare(metadata double* %fDen, metadata !8873, metadata !DIExpression()), !dbg !8875
  %104 = load double, double* %a, align 8, !dbg !8876
  %105 = load double, double* %fC, align 8, !dbg !8877
  %sub101 = fsub double %104, %105, !dbg !8878
  store double %sub101, double* %fDen, align 8, !dbg !8875
  %106 = load double, double* %fDen, align 8, !dbg !8879
  %cmp102 = fcmp ogt double %106, 0xBCB0000000000000, !dbg !8879
  br i1 %cmp102, label %land.rhs104, label %land.end107, !dbg !8879

land.rhs104:                                      ; preds = %if.then
  %107 = load double, double* %fDen, align 8, !dbg !8879
  %cmp105 = fcmp olt double %107, 0x3CB0000000000000, !dbg !8879
  br label %land.end107

land.end107:                                      ; preds = %land.rhs104, %if.then
  %108 = phi i1 [ false, %if.then ], [ %cmp105, %land.rhs104 ], !dbg !8881
  %109 = zext i1 %108 to i64, !dbg !8879
  %cond108 = select i1 %108, i32 1, i32 0, !dbg !8879
  %cmp109 = icmp eq i32 %cond108, 0, !dbg !8882
  br i1 %cmp109, label %if.then111, label %if.end, !dbg !8883

if.then111:                                       ; preds = %land.end107
  %110 = load double, double* %a, align 8, !dbg !8884
  %111 = load double, double* %fDen, align 8, !dbg !8885
  %div = fdiv double %110, %111, !dbg !8886
  %conv112 = fptrunc double %div to float, !dbg !8887
  %112 = load float*, float** %r_uv.addr, align 8, !dbg !8888
  %arrayidx113 = getelementptr inbounds float, float* %112, i64 0, !dbg !8888
  store float %conv112, float* %arrayidx113, align 4, !dbg !8889
  br label %if.end, !dbg !8888

if.end:                                           ; preds = %if.then111, %land.end107
  br label %if.end129, !dbg !8890

if.else:                                          ; preds = %land.end
  call void @llvm.dbg.declare(metadata double* %desc_sq, metadata !8891, metadata !DIExpression()), !dbg !8893
  %113 = load double, double* %b, align 8, !dbg !8894
  %114 = load double, double* %b, align 8, !dbg !8895
  %mul114 = fmul double %113, %114, !dbg !8896
  %115 = load double, double* %a, align 8, !dbg !8897
  %116 = load double, double* %fC, align 8, !dbg !8898
  %mul115 = fmul double %115, %116, !dbg !8899
  %sub116 = fsub double %mul114, %mul115, !dbg !8900
  store double %sub116, double* %desc_sq, align 8, !dbg !8893
  call void @llvm.dbg.declare(metadata double* %desc, metadata !8901, metadata !DIExpression()), !dbg !8902
  %117 = load double, double* %desc_sq, align 8, !dbg !8903
  %cmp117 = fcmp olt double %117, 0.000000e+00, !dbg !8904
  br i1 %cmp117, label %cond.true, label %cond.false, !dbg !8903

cond.true:                                        ; preds = %if.else
  br label %cond.end, !dbg !8903

cond.false:                                       ; preds = %if.else
  %118 = load double, double* %desc_sq, align 8, !dbg !8905
  br label %cond.end, !dbg !8903

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond119 = phi double [ 0.000000e+00, %cond.true ], [ %118, %cond.false ], !dbg !8903
  %call = call double @sqrt(double %cond119) #5, !dbg !8906
  store double %call, double* %desc, align 8, !dbg !8902
  call void @llvm.dbg.declare(metadata double* %s, metadata !8907, metadata !DIExpression()), !dbg !8908
  %119 = load double, double* %signed_area, align 8, !dbg !8909
  %cmp120 = fcmp ogt double %119, 0.000000e+00, !dbg !8910
  %120 = zext i1 %cmp120 to i64, !dbg !8909
  %cond122 = select i1 %cmp120, double -1.000000e+00, double 1.000000e+00, !dbg !8909
  store double %cond122, double* %s, align 8, !dbg !8908
  %121 = load double, double* %a, align 8, !dbg !8911
  %122 = load double, double* %b, align 8, !dbg !8912
  %sub123 = fsub double %121, %122, !dbg !8913
  %123 = load double, double* %s, align 8, !dbg !8914
  %124 = load double, double* %desc, align 8, !dbg !8915
  %mul124 = fmul double %123, %124, !dbg !8916
  %add125 = fadd double %sub123, %mul124, !dbg !8917
  %125 = load double, double* %denom, align 8, !dbg !8918
  %div126 = fdiv double %add125, %125, !dbg !8919
  %conv127 = fptrunc double %div126 to float, !dbg !8920
  %126 = load float*, float** %r_uv.addr, align 8, !dbg !8921
  %arrayidx128 = getelementptr inbounds float, float* %126, i64 0, !dbg !8921
  store float %conv127, float* %arrayidx128, align 4, !dbg !8922
  br label %if.end129

if.end129:                                        ; preds = %cond.end, %if.end
  call void @llvm.dbg.declare(metadata double* %denom_s, metadata !8923, metadata !DIExpression()), !dbg !8925
  %127 = load float*, float** %r_uv.addr, align 8, !dbg !8926
  %arrayidx130 = getelementptr inbounds float, float* %127, i64 0, !dbg !8926
  %128 = load float, float* %arrayidx130, align 4, !dbg !8926
  %sub131 = fsub float 1.000000e+00, %128, !dbg !8927
  %129 = load float*, float** %st0.addr, align 8, !dbg !8928
  %arrayidx132 = getelementptr inbounds float, float* %129, i64 0, !dbg !8928
  %130 = load float, float* %arrayidx132, align 4, !dbg !8928
  %131 = load float*, float** %st3.addr, align 8, !dbg !8929
  %arrayidx133 = getelementptr inbounds float, float* %131, i64 0, !dbg !8929
  %132 = load float, float* %arrayidx133, align 4, !dbg !8929
  %sub134 = fsub float %130, %132, !dbg !8930
  %mul135 = fmul float %sub131, %sub134, !dbg !8931
  %133 = load float*, float** %r_uv.addr, align 8, !dbg !8932
  %arrayidx136 = getelementptr inbounds float, float* %133, i64 0, !dbg !8932
  %134 = load float, float* %arrayidx136, align 4, !dbg !8932
  %135 = load float*, float** %st1.addr, align 8, !dbg !8933
  %arrayidx137 = getelementptr inbounds float, float* %135, i64 0, !dbg !8933
  %136 = load float, float* %arrayidx137, align 4, !dbg !8933
  %137 = load float*, float** %st2.addr, align 8, !dbg !8934
  %arrayidx138 = getelementptr inbounds float, float* %137, i64 0, !dbg !8934
  %138 = load float, float* %arrayidx138, align 4, !dbg !8934
  %sub139 = fsub float %136, %138, !dbg !8935
  %mul140 = fmul float %134, %sub139, !dbg !8936
  %add141 = fadd float %mul135, %mul140, !dbg !8937
  %conv142 = fpext float %add141 to double, !dbg !8938
  store double %conv142, double* %denom_s, align 8, !dbg !8925
  call void @llvm.dbg.declare(metadata double* %denom_t, metadata !8939, metadata !DIExpression()), !dbg !8940
  %139 = load float*, float** %r_uv.addr, align 8, !dbg !8941
  %arrayidx143 = getelementptr inbounds float, float* %139, i64 0, !dbg !8941
  %140 = load float, float* %arrayidx143, align 4, !dbg !8941
  %sub144 = fsub float 1.000000e+00, %140, !dbg !8942
  %141 = load float*, float** %st0.addr, align 8, !dbg !8943
  %arrayidx145 = getelementptr inbounds float, float* %141, i64 1, !dbg !8943
  %142 = load float, float* %arrayidx145, align 4, !dbg !8943
  %143 = load float*, float** %st3.addr, align 8, !dbg !8944
  %arrayidx146 = getelementptr inbounds float, float* %143, i64 1, !dbg !8944
  %144 = load float, float* %arrayidx146, align 4, !dbg !8944
  %sub147 = fsub float %142, %144, !dbg !8945
  %mul148 = fmul float %sub144, %sub147, !dbg !8946
  %145 = load float*, float** %r_uv.addr, align 8, !dbg !8947
  %arrayidx149 = getelementptr inbounds float, float* %145, i64 0, !dbg !8947
  %146 = load float, float* %arrayidx149, align 4, !dbg !8947
  %147 = load float*, float** %st1.addr, align 8, !dbg !8948
  %arrayidx150 = getelementptr inbounds float, float* %147, i64 1, !dbg !8948
  %148 = load float, float* %arrayidx150, align 4, !dbg !8948
  %149 = load float*, float** %st2.addr, align 8, !dbg !8949
  %arrayidx151 = getelementptr inbounds float, float* %149, i64 1, !dbg !8949
  %150 = load float, float* %arrayidx151, align 4, !dbg !8949
  %sub152 = fsub float %148, %150, !dbg !8950
  %mul153 = fmul float %146, %sub152, !dbg !8951
  %add154 = fadd float %mul148, %mul153, !dbg !8952
  %conv155 = fpext float %add154 to double, !dbg !8953
  store double %conv155, double* %denom_t, align 8, !dbg !8940
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8954, metadata !DIExpression()), !dbg !8955
  store i32 0, i32* %i, align 4, !dbg !8955
  %151 = load double, double* %denom_s, align 8, !dbg !8956
  store double %151, double* %denom, align 8, !dbg !8957
  %152 = load double, double* %denom_s, align 8, !dbg !8958
  %153 = call double @llvm.fabs.f64(double %152), !dbg !8960
  %154 = load double, double* %denom_t, align 8, !dbg !8961
  %155 = call double @llvm.fabs.f64(double %154), !dbg !8962
  %cmp156 = fcmp olt double %153, %155, !dbg !8963
  br i1 %cmp156, label %if.then158, label %if.end159, !dbg !8964

if.then158:                                       ; preds = %if.end129
  store i32 1, i32* %i, align 4, !dbg !8965
  %156 = load double, double* %denom_t, align 8, !dbg !8967
  store double %156, double* %denom, align 8, !dbg !8968
  br label %if.end159, !dbg !8969

if.end159:                                        ; preds = %if.then158, %if.end129
  %157 = load double, double* %denom, align 8, !dbg !8970
  %cmp160 = fcmp ogt double %157, 0xBCB0000000000000, !dbg !8970
  br i1 %cmp160, label %land.rhs162, label %land.end165, !dbg !8970

land.rhs162:                                      ; preds = %if.end159
  %158 = load double, double* %denom, align 8, !dbg !8970
  %cmp163 = fcmp olt double %158, 0x3CB0000000000000, !dbg !8970
  br label %land.end165

land.end165:                                      ; preds = %land.rhs162, %if.end159
  %159 = phi i1 [ false, %if.end159 ], [ %cmp163, %land.rhs162 ], !dbg !8972
  %160 = zext i1 %159 to i64, !dbg !8970
  %cond166 = select i1 %159, i32 1, i32 0, !dbg !8970
  %cmp167 = icmp eq i32 %cond166, 0, !dbg !8973
  br i1 %cmp167, label %if.then169, label %if.end189, !dbg !8974

if.then169:                                       ; preds = %land.end165
  %161 = load float*, float** %r_uv.addr, align 8, !dbg !8975
  %arrayidx170 = getelementptr inbounds float, float* %161, i64 0, !dbg !8975
  %162 = load float, float* %arrayidx170, align 4, !dbg !8975
  %sub171 = fsub float 1.000000e+00, %162, !dbg !8976
  %163 = load float*, float** %st0.addr, align 8, !dbg !8977
  %164 = load i32, i32* %i, align 4, !dbg !8978
  %idxprom = sext i32 %164 to i64, !dbg !8977
  %arrayidx172 = getelementptr inbounds float, float* %163, i64 %idxprom, !dbg !8977
  %165 = load float, float* %arrayidx172, align 4, !dbg !8977
  %166 = load float*, float** %st.addr, align 8, !dbg !8979
  %167 = load i32, i32* %i, align 4, !dbg !8980
  %idxprom173 = sext i32 %167 to i64, !dbg !8979
  %arrayidx174 = getelementptr inbounds float, float* %166, i64 %idxprom173, !dbg !8979
  %168 = load float, float* %arrayidx174, align 4, !dbg !8979
  %sub175 = fsub float %165, %168, !dbg !8981
  %mul176 = fmul float %sub171, %sub175, !dbg !8982
  %169 = load float*, float** %r_uv.addr, align 8, !dbg !8983
  %arrayidx177 = getelementptr inbounds float, float* %169, i64 0, !dbg !8983
  %170 = load float, float* %arrayidx177, align 4, !dbg !8983
  %171 = load float*, float** %st1.addr, align 8, !dbg !8984
  %172 = load i32, i32* %i, align 4, !dbg !8985
  %idxprom178 = sext i32 %172 to i64, !dbg !8984
  %arrayidx179 = getelementptr inbounds float, float* %171, i64 %idxprom178, !dbg !8984
  %173 = load float, float* %arrayidx179, align 4, !dbg !8984
  %174 = load float*, float** %st.addr, align 8, !dbg !8986
  %175 = load i32, i32* %i, align 4, !dbg !8987
  %idxprom180 = sext i32 %175 to i64, !dbg !8986
  %arrayidx181 = getelementptr inbounds float, float* %174, i64 %idxprom180, !dbg !8986
  %176 = load float, float* %arrayidx181, align 4, !dbg !8986
  %sub182 = fsub float %173, %176, !dbg !8988
  %mul183 = fmul float %170, %sub182, !dbg !8989
  %add184 = fadd float %mul176, %mul183, !dbg !8990
  %conv185 = fpext float %add184 to double, !dbg !8991
  %177 = load double, double* %denom, align 8, !dbg !8992
  %div186 = fdiv double %conv185, %177, !dbg !8993
  %conv187 = fptrunc double %div186 to float, !dbg !8994
  %178 = load float*, float** %r_uv.addr, align 8, !dbg !8995
  %arrayidx188 = getelementptr inbounds float, float* %178, i64 1, !dbg !8995
  store float %conv187, float* %arrayidx188, align 4, !dbg !8996
  br label %if.end189, !dbg !8995

if.end189:                                        ; preds = %if.then169, %land.end165
  %179 = load [2 x float]*, [2 x float]** %r_deriv.addr, align 8, !dbg !8997
  %tobool = icmp ne [2 x float]* %179, null, !dbg !8997
  br i1 %tobool, label %if.then190, label %if.end249, !dbg !8999

if.then190:                                       ; preds = %if.end189
  call void @llvm.dbg.declare(metadata [2 x float]* %tmp1, metadata !9000, metadata !DIExpression()), !dbg !9002
  call void @llvm.dbg.declare(metadata [2 x float]* %tmp2, metadata !9003, metadata !DIExpression()), !dbg !9004
  call void @llvm.dbg.declare(metadata [2 x float]* %s191, metadata !9005, metadata !DIExpression()), !dbg !9006
  call void @llvm.dbg.declare(metadata [2 x float]* %t, metadata !9007, metadata !DIExpression()), !dbg !9008
  %180 = load [2 x float]*, [2 x float]** %r_deriv.addr, align 8, !dbg !9009
  %arrayidx192 = getelementptr inbounds [2 x float], [2 x float]* %180, i64 0, !dbg !9009
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx192, i64 0, i64 0, !dbg !9009
  call void @zero_v2(float* %arraydecay), !dbg !9010
  %181 = load [2 x float]*, [2 x float]** %r_deriv.addr, align 8, !dbg !9011
  %arrayidx193 = getelementptr inbounds [2 x float], [2 x float]* %181, i64 1, !dbg !9011
  %arraydecay194 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx193, i64 0, i64 0, !dbg !9011
  call void @zero_v2(float* %arraydecay194), !dbg !9012
  %arraydecay195 = getelementptr inbounds [2 x float], [2 x float]* %tmp1, i64 0, i64 0, !dbg !9013
  %182 = load float*, float** %st1.addr, align 8, !dbg !9014
  %183 = load float*, float** %st0.addr, align 8, !dbg !9015
  call void @sub_v2_v2v2(float* %arraydecay195, float* %182, float* %183), !dbg !9016
  %arraydecay196 = getelementptr inbounds [2 x float], [2 x float]* %tmp2, i64 0, i64 0, !dbg !9017
  %184 = load float*, float** %st2.addr, align 8, !dbg !9018
  %185 = load float*, float** %st3.addr, align 8, !dbg !9019
  call void @sub_v2_v2v2(float* %arraydecay196, float* %184, float* %185), !dbg !9020
  %arraydecay197 = getelementptr inbounds [2 x float], [2 x float]* %s191, i64 0, i64 0, !dbg !9021
  %arraydecay198 = getelementptr inbounds [2 x float], [2 x float]* %tmp1, i64 0, i64 0, !dbg !9022
  %arraydecay199 = getelementptr inbounds [2 x float], [2 x float]* %tmp2, i64 0, i64 0, !dbg !9023
  %186 = load float*, float** %r_uv.addr, align 8, !dbg !9024
  %arrayidx200 = getelementptr inbounds float, float* %186, i64 1, !dbg !9024
  %187 = load float, float* %arrayidx200, align 4, !dbg !9024
  call void @interp_v2_v2v2(float* %arraydecay197, float* %arraydecay198, float* %arraydecay199, float %187), !dbg !9025
  %arraydecay201 = getelementptr inbounds [2 x float], [2 x float]* %tmp1, i64 0, i64 0, !dbg !9026
  %188 = load float*, float** %st3.addr, align 8, !dbg !9027
  %189 = load float*, float** %st0.addr, align 8, !dbg !9028
  call void @sub_v2_v2v2(float* %arraydecay201, float* %188, float* %189), !dbg !9029
  %arraydecay202 = getelementptr inbounds [2 x float], [2 x float]* %tmp2, i64 0, i64 0, !dbg !9030
  %190 = load float*, float** %st2.addr, align 8, !dbg !9031
  %191 = load float*, float** %st1.addr, align 8, !dbg !9032
  call void @sub_v2_v2v2(float* %arraydecay202, float* %190, float* %191), !dbg !9033
  %arraydecay203 = getelementptr inbounds [2 x float], [2 x float]* %t, i64 0, i64 0, !dbg !9034
  %arraydecay204 = getelementptr inbounds [2 x float], [2 x float]* %tmp1, i64 0, i64 0, !dbg !9035
  %arraydecay205 = getelementptr inbounds [2 x float], [2 x float]* %tmp2, i64 0, i64 0, !dbg !9036
  %192 = load float*, float** %r_uv.addr, align 8, !dbg !9037
  %arrayidx206 = getelementptr inbounds float, float* %192, i64 0, !dbg !9037
  %193 = load float, float* %arrayidx206, align 4, !dbg !9037
  call void @interp_v2_v2v2(float* %arraydecay203, float* %arraydecay204, float* %arraydecay205, float %193), !dbg !9038
  %arrayidx207 = getelementptr inbounds [2 x float], [2 x float]* %t, i64 0, i64 0, !dbg !9039
  %194 = load float, float* %arrayidx207, align 4, !dbg !9039
  %arrayidx208 = getelementptr inbounds [2 x float], [2 x float]* %s191, i64 0, i64 1, !dbg !9040
  %195 = load float, float* %arrayidx208, align 4, !dbg !9040
  %mul209 = fmul float %194, %195, !dbg !9041
  %arrayidx210 = getelementptr inbounds [2 x float], [2 x float]* %t, i64 0, i64 1, !dbg !9042
  %196 = load float, float* %arrayidx210, align 4, !dbg !9042
  %arrayidx211 = getelementptr inbounds [2 x float], [2 x float]* %s191, i64 0, i64 0, !dbg !9043
  %197 = load float, float* %arrayidx211, align 4, !dbg !9043
  %mul212 = fmul float %196, %197, !dbg !9044
  %sub213 = fsub float %mul209, %mul212, !dbg !9045
  %conv214 = fpext float %sub213 to double, !dbg !9039
  store double %conv214, double* %denom, align 8, !dbg !9046
  %198 = load double, double* %denom, align 8, !dbg !9047
  %cmp215 = fcmp ogt double %198, 0xBCB0000000000000, !dbg !9047
  br i1 %cmp215, label %land.lhs.true, label %cond.false220, !dbg !9047

land.lhs.true:                                    ; preds = %if.then190
  %199 = load double, double* %denom, align 8, !dbg !9047
  %cmp217 = fcmp olt double %199, 0x3CB0000000000000, !dbg !9047
  br i1 %cmp217, label %cond.true219, label %cond.false220, !dbg !9049

cond.true219:                                     ; preds = %land.lhs.true
  br i1 true, label %if.end248, label %if.then221, !dbg !9047

cond.false220:                                    ; preds = %land.lhs.true, %if.then190
  br i1 false, label %if.end248, label %if.then221, !dbg !9049

if.then221:                                       ; preds = %cond.false220, %cond.true219
  call void @llvm.dbg.declare(metadata double* %inv_denom, metadata !9050, metadata !DIExpression()), !dbg !9052
  %200 = load double, double* %denom, align 8, !dbg !9053
  %div222 = fdiv double 1.000000e+00, %200, !dbg !9054
  store double %div222, double* %inv_denom, align 8, !dbg !9052
  %arrayidx223 = getelementptr inbounds [2 x float], [2 x float]* %t, i64 0, i64 1, !dbg !9055
  %201 = load float, float* %arrayidx223, align 4, !dbg !9055
  %fneg = fneg float %201, !dbg !9056
  %conv224 = fpext float %fneg to double, !dbg !9057
  %202 = load double, double* %inv_denom, align 8, !dbg !9058
  %mul225 = fmul double %conv224, %202, !dbg !9059
  %conv226 = fptrunc double %mul225 to float, !dbg !9060
  %203 = load [2 x float]*, [2 x float]** %r_deriv.addr, align 8, !dbg !9061
  %arrayidx227 = getelementptr inbounds [2 x float], [2 x float]* %203, i64 0, !dbg !9061
  %arrayidx228 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx227, i64 0, i64 0, !dbg !9061
  store float %conv226, float* %arrayidx228, align 4, !dbg !9062
  %arrayidx229 = getelementptr inbounds [2 x float], [2 x float]* %t, i64 0, i64 0, !dbg !9063
  %204 = load float, float* %arrayidx229, align 4, !dbg !9063
  %conv230 = fpext float %204 to double, !dbg !9064
  %205 = load double, double* %inv_denom, align 8, !dbg !9065
  %mul231 = fmul double %conv230, %205, !dbg !9066
  %conv232 = fptrunc double %mul231 to float, !dbg !9067
  %206 = load [2 x float]*, [2 x float]** %r_deriv.addr, align 8, !dbg !9068
  %arrayidx233 = getelementptr inbounds [2 x float], [2 x float]* %206, i64 0, !dbg !9068
  %arrayidx234 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx233, i64 0, i64 1, !dbg !9068
  store float %conv232, float* %arrayidx234, align 4, !dbg !9069
  %arrayidx235 = getelementptr inbounds [2 x float], [2 x float]* %s191, i64 0, i64 1, !dbg !9070
  %207 = load float, float* %arrayidx235, align 4, !dbg !9070
  %conv236 = fpext float %207 to double, !dbg !9071
  %208 = load double, double* %inv_denom, align 8, !dbg !9072
  %mul237 = fmul double %conv236, %208, !dbg !9073
  %conv238 = fptrunc double %mul237 to float, !dbg !9074
  %209 = load [2 x float]*, [2 x float]** %r_deriv.addr, align 8, !dbg !9075
  %arrayidx239 = getelementptr inbounds [2 x float], [2 x float]* %209, i64 1, !dbg !9075
  %arrayidx240 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx239, i64 0, i64 0, !dbg !9075
  store float %conv238, float* %arrayidx240, align 4, !dbg !9076
  %arrayidx241 = getelementptr inbounds [2 x float], [2 x float]* %s191, i64 0, i64 0, !dbg !9077
  %210 = load float, float* %arrayidx241, align 4, !dbg !9077
  %fneg242 = fneg float %210, !dbg !9078
  %conv243 = fpext float %fneg242 to double, !dbg !9079
  %211 = load double, double* %inv_denom, align 8, !dbg !9080
  %mul244 = fmul double %conv243, %211, !dbg !9081
  %conv245 = fptrunc double %mul244 to float, !dbg !9082
  %212 = load [2 x float]*, [2 x float]** %r_deriv.addr, align 8, !dbg !9083
  %arrayidx246 = getelementptr inbounds [2 x float], [2 x float]* %212, i64 1, !dbg !9083
  %arrayidx247 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx246, i64 0, i64 1, !dbg !9083
  store float %conv245, float* %arrayidx247, align 4, !dbg !9084
  br label %if.end248, !dbg !9085

if.end248:                                        ; preds = %if.then221, %cond.false220, %cond.true219
  br label %if.end249, !dbg !9086

if.end249:                                        ; preds = %if.end248, %if.end189
  ret void, !dbg !9087
}

; Function Attrs: nounwind
declare dso_local double @sqrt(double) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @interp_bilinear_quad_v3([3 x float]* %data, float %u, float %v, float* %res) #0 !dbg !9088 {
entry:
  %data.addr = alloca [3 x float]*, align 8
  %u.addr = alloca float, align 4
  %v.addr = alloca float, align 4
  %res.addr = alloca float*, align 8
  %vec = alloca [3 x float], align 4
  store [3 x float]* %data, [3 x float]** %data.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %data.addr, metadata !9091, metadata !DIExpression()), !dbg !9092
  store float %u, float* %u.addr, align 4
  call void @llvm.dbg.declare(metadata float* %u.addr, metadata !9093, metadata !DIExpression()), !dbg !9094
  store float %v, float* %v.addr, align 4
  call void @llvm.dbg.declare(metadata float* %v.addr, metadata !9095, metadata !DIExpression()), !dbg !9096
  store float* %res, float** %res.addr, align 8
  call void @llvm.dbg.declare(metadata float** %res.addr, metadata !9097, metadata !DIExpression()), !dbg !9098
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !9099, metadata !DIExpression()), !dbg !9100
  %0 = load float*, float** %res.addr, align 8, !dbg !9101
  %1 = load [3 x float]*, [3 x float]** %data.addr, align 8, !dbg !9102
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %1, i64 0, !dbg !9102
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !9102
  call void @copy_v3_v3(float* %0, float* %arraydecay), !dbg !9103
  %2 = load float*, float** %res.addr, align 8, !dbg !9104
  %3 = load float, float* %u.addr, align 4, !dbg !9105
  %sub = fsub float 1.000000e+00, %3, !dbg !9106
  %4 = load float, float* %v.addr, align 4, !dbg !9107
  %sub1 = fsub float 1.000000e+00, %4, !dbg !9108
  %mul = fmul float %sub, %sub1, !dbg !9109
  call void @mul_v3_fl(float* %2, float %mul), !dbg !9110
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9111
  %5 = load [3 x float]*, [3 x float]** %data.addr, align 8, !dbg !9112
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %5, i64 1, !dbg !9112
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx3, i64 0, i64 0, !dbg !9112
  call void @copy_v3_v3(float* %arraydecay2, float* %arraydecay4), !dbg !9113
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9114
  %6 = load float, float* %u.addr, align 4, !dbg !9115
  %7 = load float, float* %v.addr, align 4, !dbg !9116
  %sub6 = fsub float 1.000000e+00, %7, !dbg !9117
  %mul7 = fmul float %6, %sub6, !dbg !9118
  call void @mul_v3_fl(float* %arraydecay5, float %mul7), !dbg !9119
  %8 = load float*, float** %res.addr, align 8, !dbg !9120
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9121
  call void @add_v3_v3(float* %8, float* %arraydecay8), !dbg !9122
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9123
  %9 = load [3 x float]*, [3 x float]** %data.addr, align 8, !dbg !9124
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %9, i64 2, !dbg !9124
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx10, i64 0, i64 0, !dbg !9124
  call void @copy_v3_v3(float* %arraydecay9, float* %arraydecay11), !dbg !9125
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9126
  %10 = load float, float* %u.addr, align 4, !dbg !9127
  %11 = load float, float* %v.addr, align 4, !dbg !9128
  %mul13 = fmul float %10, %11, !dbg !9129
  call void @mul_v3_fl(float* %arraydecay12, float %mul13), !dbg !9130
  %12 = load float*, float** %res.addr, align 8, !dbg !9131
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9132
  call void @add_v3_v3(float* %12, float* %arraydecay14), !dbg !9133
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9134
  %13 = load [3 x float]*, [3 x float]** %data.addr, align 8, !dbg !9135
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %13, i64 3, !dbg !9135
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx16, i64 0, i64 0, !dbg !9135
  call void @copy_v3_v3(float* %arraydecay15, float* %arraydecay17), !dbg !9136
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9137
  %14 = load float, float* %u.addr, align 4, !dbg !9138
  %sub19 = fsub float 1.000000e+00, %14, !dbg !9139
  %15 = load float, float* %v.addr, align 4, !dbg !9140
  %mul20 = fmul float %sub19, %15, !dbg !9141
  call void @mul_v3_fl(float* %arraydecay18, float %mul20), !dbg !9142
  %16 = load float*, float** %res.addr, align 8, !dbg !9143
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9144
  call void @add_v3_v3(float* %16, float* %arraydecay21), !dbg !9145
  ret void, !dbg !9146
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @interp_barycentric_tri_v3([3 x float]* %data, float %u, float %v, float* %res) #0 !dbg !9147 {
entry:
  %data.addr = alloca [3 x float]*, align 8
  %u.addr = alloca float, align 4
  %v.addr = alloca float, align 4
  %res.addr = alloca float*, align 8
  %vec = alloca [3 x float], align 4
  store [3 x float]* %data, [3 x float]** %data.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %data.addr, metadata !9148, metadata !DIExpression()), !dbg !9149
  store float %u, float* %u.addr, align 4
  call void @llvm.dbg.declare(metadata float* %u.addr, metadata !9150, metadata !DIExpression()), !dbg !9151
  store float %v, float* %v.addr, align 4
  call void @llvm.dbg.declare(metadata float* %v.addr, metadata !9152, metadata !DIExpression()), !dbg !9153
  store float* %res, float** %res.addr, align 8
  call void @llvm.dbg.declare(metadata float** %res.addr, metadata !9154, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !9156, metadata !DIExpression()), !dbg !9157
  %0 = load float*, float** %res.addr, align 8, !dbg !9158
  %1 = load [3 x float]*, [3 x float]** %data.addr, align 8, !dbg !9159
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %1, i64 0, !dbg !9159
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !9159
  call void @copy_v3_v3(float* %0, float* %arraydecay), !dbg !9160
  %2 = load float*, float** %res.addr, align 8, !dbg !9161
  %3 = load float, float* %u.addr, align 4, !dbg !9162
  call void @mul_v3_fl(float* %2, float %3), !dbg !9163
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9164
  %4 = load [3 x float]*, [3 x float]** %data.addr, align 8, !dbg !9165
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %4, i64 1, !dbg !9165
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx2, i64 0, i64 0, !dbg !9165
  call void @copy_v3_v3(float* %arraydecay1, float* %arraydecay3), !dbg !9166
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9167
  %5 = load float, float* %v.addr, align 4, !dbg !9168
  call void @mul_v3_fl(float* %arraydecay4, float %5), !dbg !9169
  %6 = load float*, float** %res.addr, align 8, !dbg !9170
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9171
  call void @add_v3_v3(float* %6, float* %arraydecay5), !dbg !9172
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9173
  %7 = load [3 x float]*, [3 x float]** %data.addr, align 8, !dbg !9174
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %7, i64 2, !dbg !9174
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx7, i64 0, i64 0, !dbg !9174
  call void @copy_v3_v3(float* %arraydecay6, float* %arraydecay8), !dbg !9175
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9176
  %8 = load float, float* %u.addr, align 4, !dbg !9177
  %sub = fsub float 1.000000e+00, %8, !dbg !9178
  %9 = load float, float* %v.addr, align 4, !dbg !9179
  %sub10 = fsub float %sub, %9, !dbg !9180
  call void @mul_v3_fl(float* %arraydecay9, float %sub10), !dbg !9181
  %10 = load float*, float** %res.addr, align 8, !dbg !9182
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9183
  call void @add_v3_v3(float* %10, float* %arraydecay11), !dbg !9184
  ret void, !dbg !9185
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @orthographic_m4([4 x float]* %matrix, float %left, float %right, float %bottom, float %top, float %nearClip, float %farClip) #0 !dbg !9186 {
entry:
  %matrix.addr = alloca [4 x float]*, align 8
  %left.addr = alloca float, align 4
  %right.addr = alloca float, align 4
  %bottom.addr = alloca float, align 4
  %top.addr = alloca float, align 4
  %nearClip.addr = alloca float, align 4
  %farClip.addr = alloca float, align 4
  %Xdelta = alloca float, align 4
  %Ydelta = alloca float, align 4
  %Zdelta = alloca float, align 4
  store [4 x float]* %matrix, [4 x float]** %matrix.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %matrix.addr, metadata !9189, metadata !DIExpression()), !dbg !9190
  store float %left, float* %left.addr, align 4
  call void @llvm.dbg.declare(metadata float* %left.addr, metadata !9191, metadata !DIExpression()), !dbg !9192
  store float %right, float* %right.addr, align 4
  call void @llvm.dbg.declare(metadata float* %right.addr, metadata !9193, metadata !DIExpression()), !dbg !9194
  store float %bottom, float* %bottom.addr, align 4
  call void @llvm.dbg.declare(metadata float* %bottom.addr, metadata !9195, metadata !DIExpression()), !dbg !9196
  store float %top, float* %top.addr, align 4
  call void @llvm.dbg.declare(metadata float* %top.addr, metadata !9197, metadata !DIExpression()), !dbg !9198
  store float %nearClip, float* %nearClip.addr, align 4
  call void @llvm.dbg.declare(metadata float* %nearClip.addr, metadata !9199, metadata !DIExpression()), !dbg !9200
  store float %farClip, float* %farClip.addr, align 4
  call void @llvm.dbg.declare(metadata float* %farClip.addr, metadata !9201, metadata !DIExpression()), !dbg !9202
  call void @llvm.dbg.declare(metadata float* %Xdelta, metadata !9203, metadata !DIExpression()), !dbg !9204
  call void @llvm.dbg.declare(metadata float* %Ydelta, metadata !9205, metadata !DIExpression()), !dbg !9206
  call void @llvm.dbg.declare(metadata float* %Zdelta, metadata !9207, metadata !DIExpression()), !dbg !9208
  %0 = load float, float* %right.addr, align 4, !dbg !9209
  %1 = load float, float* %left.addr, align 4, !dbg !9210
  %sub = fsub float %0, %1, !dbg !9211
  store float %sub, float* %Xdelta, align 4, !dbg !9212
  %2 = load float, float* %top.addr, align 4, !dbg !9213
  %3 = load float, float* %bottom.addr, align 4, !dbg !9214
  %sub1 = fsub float %2, %3, !dbg !9215
  store float %sub1, float* %Ydelta, align 4, !dbg !9216
  %4 = load float, float* %farClip.addr, align 4, !dbg !9217
  %5 = load float, float* %nearClip.addr, align 4, !dbg !9218
  %sub2 = fsub float %4, %5, !dbg !9219
  store float %sub2, float* %Zdelta, align 4, !dbg !9220
  %6 = load float, float* %Xdelta, align 4, !dbg !9221
  %cmp = fcmp oeq float %6, 0.000000e+00, !dbg !9223
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9224

lor.lhs.false:                                    ; preds = %entry
  %7 = load float, float* %Ydelta, align 4, !dbg !9225
  %cmp3 = fcmp oeq float %7, 0.000000e+00, !dbg !9226
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !9227

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %8 = load float, float* %Zdelta, align 4, !dbg !9228
  %cmp5 = fcmp oeq float %8, 0.000000e+00, !dbg !9229
  br i1 %cmp5, label %if.then, label %if.end, !dbg !9230

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false, %entry
  br label %return, !dbg !9231

if.end:                                           ; preds = %lor.lhs.false4
  %9 = load [4 x float]*, [4 x float]** %matrix.addr, align 8, !dbg !9233
  call void @unit_m4([4 x float]* %9), !dbg !9234
  %10 = load float, float* %Xdelta, align 4, !dbg !9235
  %div = fdiv float 2.000000e+00, %10, !dbg !9236
  %11 = load [4 x float]*, [4 x float]** %matrix.addr, align 8, !dbg !9237
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %11, i64 0, !dbg !9237
  %arrayidx6 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !9237
  store float %div, float* %arrayidx6, align 4, !dbg !9238
  %12 = load float, float* %right.addr, align 4, !dbg !9239
  %13 = load float, float* %left.addr, align 4, !dbg !9240
  %add = fadd float %12, %13, !dbg !9241
  %fneg = fneg float %add, !dbg !9242
  %14 = load float, float* %Xdelta, align 4, !dbg !9243
  %div7 = fdiv float %fneg, %14, !dbg !9244
  %15 = load [4 x float]*, [4 x float]** %matrix.addr, align 8, !dbg !9245
  %arrayidx8 = getelementptr inbounds [4 x float], [4 x float]* %15, i64 3, !dbg !9245
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx8, i64 0, i64 0, !dbg !9245
  store float %div7, float* %arrayidx9, align 4, !dbg !9246
  %16 = load float, float* %Ydelta, align 4, !dbg !9247
  %div10 = fdiv float 2.000000e+00, %16, !dbg !9248
  %17 = load [4 x float]*, [4 x float]** %matrix.addr, align 8, !dbg !9249
  %arrayidx11 = getelementptr inbounds [4 x float], [4 x float]* %17, i64 1, !dbg !9249
  %arrayidx12 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx11, i64 0, i64 1, !dbg !9249
  store float %div10, float* %arrayidx12, align 4, !dbg !9250
  %18 = load float, float* %top.addr, align 4, !dbg !9251
  %19 = load float, float* %bottom.addr, align 4, !dbg !9252
  %add13 = fadd float %18, %19, !dbg !9253
  %fneg14 = fneg float %add13, !dbg !9254
  %20 = load float, float* %Ydelta, align 4, !dbg !9255
  %div15 = fdiv float %fneg14, %20, !dbg !9256
  %21 = load [4 x float]*, [4 x float]** %matrix.addr, align 8, !dbg !9257
  %arrayidx16 = getelementptr inbounds [4 x float], [4 x float]* %21, i64 3, !dbg !9257
  %arrayidx17 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx16, i64 0, i64 1, !dbg !9257
  store float %div15, float* %arrayidx17, align 4, !dbg !9258
  %22 = load float, float* %Zdelta, align 4, !dbg !9259
  %div18 = fdiv float -2.000000e+00, %22, !dbg !9260
  %23 = load [4 x float]*, [4 x float]** %matrix.addr, align 8, !dbg !9261
  %arrayidx19 = getelementptr inbounds [4 x float], [4 x float]* %23, i64 2, !dbg !9261
  %arrayidx20 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx19, i64 0, i64 2, !dbg !9261
  store float %div18, float* %arrayidx20, align 4, !dbg !9262
  %24 = load float, float* %farClip.addr, align 4, !dbg !9263
  %25 = load float, float* %nearClip.addr, align 4, !dbg !9264
  %add21 = fadd float %24, %25, !dbg !9265
  %fneg22 = fneg float %add21, !dbg !9266
  %26 = load float, float* %Zdelta, align 4, !dbg !9267
  %div23 = fdiv float %fneg22, %26, !dbg !9268
  %27 = load [4 x float]*, [4 x float]** %matrix.addr, align 8, !dbg !9269
  %arrayidx24 = getelementptr inbounds [4 x float], [4 x float]* %27, i64 3, !dbg !9269
  %arrayidx25 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx24, i64 0, i64 2, !dbg !9269
  store float %div23, float* %arrayidx25, align 4, !dbg !9270
  br label %return, !dbg !9271

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9271
}

declare dso_local void @unit_m4([4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @perspective_m4([4 x float]* %mat, float %left, float %right, float %bottom, float %top, float %nearClip, float %farClip) #0 !dbg !9272 {
entry:
  %mat.addr = alloca [4 x float]*, align 8
  %left.addr = alloca float, align 4
  %right.addr = alloca float, align 4
  %bottom.addr = alloca float, align 4
  %top.addr = alloca float, align 4
  %nearClip.addr = alloca float, align 4
  %farClip.addr = alloca float, align 4
  %Xdelta = alloca float, align 4
  %Ydelta = alloca float, align 4
  %Zdelta = alloca float, align 4
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !9273, metadata !DIExpression()), !dbg !9274
  store float %left, float* %left.addr, align 4
  call void @llvm.dbg.declare(metadata float* %left.addr, metadata !9275, metadata !DIExpression()), !dbg !9276
  store float %right, float* %right.addr, align 4
  call void @llvm.dbg.declare(metadata float* %right.addr, metadata !9277, metadata !DIExpression()), !dbg !9278
  store float %bottom, float* %bottom.addr, align 4
  call void @llvm.dbg.declare(metadata float* %bottom.addr, metadata !9279, metadata !DIExpression()), !dbg !9280
  store float %top, float* %top.addr, align 4
  call void @llvm.dbg.declare(metadata float* %top.addr, metadata !9281, metadata !DIExpression()), !dbg !9282
  store float %nearClip, float* %nearClip.addr, align 4
  call void @llvm.dbg.declare(metadata float* %nearClip.addr, metadata !9283, metadata !DIExpression()), !dbg !9284
  store float %farClip, float* %farClip.addr, align 4
  call void @llvm.dbg.declare(metadata float* %farClip.addr, metadata !9285, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.declare(metadata float* %Xdelta, metadata !9287, metadata !DIExpression()), !dbg !9288
  %0 = load float, float* %right.addr, align 4, !dbg !9289
  %1 = load float, float* %left.addr, align 4, !dbg !9290
  %sub = fsub float %0, %1, !dbg !9291
  store float %sub, float* %Xdelta, align 4, !dbg !9288
  call void @llvm.dbg.declare(metadata float* %Ydelta, metadata !9292, metadata !DIExpression()), !dbg !9293
  %2 = load float, float* %top.addr, align 4, !dbg !9294
  %3 = load float, float* %bottom.addr, align 4, !dbg !9295
  %sub1 = fsub float %2, %3, !dbg !9296
  store float %sub1, float* %Ydelta, align 4, !dbg !9293
  call void @llvm.dbg.declare(metadata float* %Zdelta, metadata !9297, metadata !DIExpression()), !dbg !9298
  %4 = load float, float* %farClip.addr, align 4, !dbg !9299
  %5 = load float, float* %nearClip.addr, align 4, !dbg !9300
  %sub2 = fsub float %4, %5, !dbg !9301
  store float %sub2, float* %Zdelta, align 4, !dbg !9298
  %6 = load float, float* %Xdelta, align 4, !dbg !9302
  %cmp = fcmp oeq float %6, 0.000000e+00, !dbg !9304
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9305

lor.lhs.false:                                    ; preds = %entry
  %7 = load float, float* %Ydelta, align 4, !dbg !9306
  %cmp3 = fcmp oeq float %7, 0.000000e+00, !dbg !9307
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !9308

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %8 = load float, float* %Zdelta, align 4, !dbg !9309
  %cmp5 = fcmp oeq float %8, 0.000000e+00, !dbg !9310
  br i1 %cmp5, label %if.then, label %if.end, !dbg !9311

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false, %entry
  br label %return, !dbg !9312

if.end:                                           ; preds = %lor.lhs.false4
  %9 = load float, float* %nearClip.addr, align 4, !dbg !9314
  %mul = fmul float %9, 2.000000e+00, !dbg !9315
  %10 = load float, float* %Xdelta, align 4, !dbg !9316
  %div = fdiv float %mul, %10, !dbg !9317
  %11 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !9318
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %11, i64 0, !dbg !9318
  %arrayidx6 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !9318
  store float %div, float* %arrayidx6, align 4, !dbg !9319
  %12 = load float, float* %nearClip.addr, align 4, !dbg !9320
  %mul7 = fmul float %12, 2.000000e+00, !dbg !9321
  %13 = load float, float* %Ydelta, align 4, !dbg !9322
  %div8 = fdiv float %mul7, %13, !dbg !9323
  %14 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !9324
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %14, i64 1, !dbg !9324
  %arrayidx10 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx9, i64 0, i64 1, !dbg !9324
  store float %div8, float* %arrayidx10, align 4, !dbg !9325
  %15 = load float, float* %right.addr, align 4, !dbg !9326
  %16 = load float, float* %left.addr, align 4, !dbg !9327
  %add = fadd float %15, %16, !dbg !9328
  %17 = load float, float* %Xdelta, align 4, !dbg !9329
  %div11 = fdiv float %add, %17, !dbg !9330
  %18 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !9331
  %arrayidx12 = getelementptr inbounds [4 x float], [4 x float]* %18, i64 2, !dbg !9331
  %arrayidx13 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx12, i64 0, i64 0, !dbg !9331
  store float %div11, float* %arrayidx13, align 4, !dbg !9332
  %19 = load float, float* %top.addr, align 4, !dbg !9333
  %20 = load float, float* %bottom.addr, align 4, !dbg !9334
  %add14 = fadd float %19, %20, !dbg !9335
  %21 = load float, float* %Ydelta, align 4, !dbg !9336
  %div15 = fdiv float %add14, %21, !dbg !9337
  %22 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !9338
  %arrayidx16 = getelementptr inbounds [4 x float], [4 x float]* %22, i64 2, !dbg !9338
  %arrayidx17 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx16, i64 0, i64 1, !dbg !9338
  store float %div15, float* %arrayidx17, align 4, !dbg !9339
  %23 = load float, float* %farClip.addr, align 4, !dbg !9340
  %24 = load float, float* %nearClip.addr, align 4, !dbg !9341
  %add18 = fadd float %23, %24, !dbg !9342
  %fneg = fneg float %add18, !dbg !9343
  %25 = load float, float* %Zdelta, align 4, !dbg !9344
  %div19 = fdiv float %fneg, %25, !dbg !9345
  %26 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !9346
  %arrayidx20 = getelementptr inbounds [4 x float], [4 x float]* %26, i64 2, !dbg !9346
  %arrayidx21 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx20, i64 0, i64 2, !dbg !9346
  store float %div19, float* %arrayidx21, align 4, !dbg !9347
  %27 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !9348
  %arrayidx22 = getelementptr inbounds [4 x float], [4 x float]* %27, i64 2, !dbg !9348
  %arrayidx23 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx22, i64 0, i64 3, !dbg !9348
  store float -1.000000e+00, float* %arrayidx23, align 4, !dbg !9349
  %28 = load float, float* %nearClip.addr, align 4, !dbg !9350
  %mul24 = fmul float -2.000000e+00, %28, !dbg !9351
  %29 = load float, float* %farClip.addr, align 4, !dbg !9352
  %mul25 = fmul float %mul24, %29, !dbg !9353
  %30 = load float, float* %Zdelta, align 4, !dbg !9354
  %div26 = fdiv float %mul25, %30, !dbg !9355
  %31 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !9356
  %arrayidx27 = getelementptr inbounds [4 x float], [4 x float]* %31, i64 3, !dbg !9356
  %arrayidx28 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx27, i64 0, i64 2, !dbg !9356
  store float %div26, float* %arrayidx28, align 4, !dbg !9357
  %32 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !9358
  %arrayidx29 = getelementptr inbounds [4 x float], [4 x float]* %32, i64 3, !dbg !9358
  %arrayidx30 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx29, i64 0, i64 3, !dbg !9358
  store float 0.000000e+00, float* %arrayidx30, align 4, !dbg !9359
  %33 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !9360
  %arrayidx31 = getelementptr inbounds [4 x float], [4 x float]* %33, i64 3, !dbg !9360
  %arrayidx32 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx31, i64 0, i64 1, !dbg !9360
  store float 0.000000e+00, float* %arrayidx32, align 4, !dbg !9361
  %34 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !9362
  %arrayidx33 = getelementptr inbounds [4 x float], [4 x float]* %34, i64 3, !dbg !9362
  %arrayidx34 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx33, i64 0, i64 0, !dbg !9362
  store float 0.000000e+00, float* %arrayidx34, align 4, !dbg !9363
  %35 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !9364
  %arrayidx35 = getelementptr inbounds [4 x float], [4 x float]* %35, i64 1, !dbg !9364
  %arrayidx36 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx35, i64 0, i64 3, !dbg !9364
  store float 0.000000e+00, float* %arrayidx36, align 4, !dbg !9365
  %36 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !9366
  %arrayidx37 = getelementptr inbounds [4 x float], [4 x float]* %36, i64 1, !dbg !9366
  %arrayidx38 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx37, i64 0, i64 2, !dbg !9366
  store float 0.000000e+00, float* %arrayidx38, align 4, !dbg !9367
  %37 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !9368
  %arrayidx39 = getelementptr inbounds [4 x float], [4 x float]* %37, i64 1, !dbg !9368
  %arrayidx40 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx39, i64 0, i64 0, !dbg !9368
  store float 0.000000e+00, float* %arrayidx40, align 4, !dbg !9369
  %38 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !9370
  %arrayidx41 = getelementptr inbounds [4 x float], [4 x float]* %38, i64 0, !dbg !9370
  %arrayidx42 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx41, i64 0, i64 3, !dbg !9370
  store float 0.000000e+00, float* %arrayidx42, align 4, !dbg !9371
  %39 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !9372
  %arrayidx43 = getelementptr inbounds [4 x float], [4 x float]* %39, i64 0, !dbg !9372
  %arrayidx44 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx43, i64 0, i64 2, !dbg !9372
  store float 0.000000e+00, float* %arrayidx44, align 4, !dbg !9373
  %40 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !9374
  %arrayidx45 = getelementptr inbounds [4 x float], [4 x float]* %40, i64 0, !dbg !9374
  %arrayidx46 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx45, i64 0, i64 1, !dbg !9374
  store float 0.000000e+00, float* %arrayidx46, align 4, !dbg !9375
  br label %return, !dbg !9376

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9376
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @window_translate_m4([4 x float]* %winmat, [4 x float]* %perspmat, float %x, float %y) #0 !dbg !9377 {
entry:
  %winmat.addr = alloca [4 x float]*, align 8
  %perspmat.addr = alloca [4 x float]*, align 8
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  %v1 = alloca [3 x float], align 4
  %v2 = alloca [3 x float], align 4
  %len1 = alloca float, align 4
  %len2 = alloca float, align 4
  store [4 x float]* %winmat, [4 x float]** %winmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %winmat.addr, metadata !9380, metadata !DIExpression()), !dbg !9381
  store [4 x float]* %perspmat, [4 x float]** %perspmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %perspmat.addr, metadata !9382, metadata !DIExpression()), !dbg !9383
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !9384, metadata !DIExpression()), !dbg !9385
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !9386, metadata !DIExpression()), !dbg !9387
  %0 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !9388
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %0, i64 2, !dbg !9388
  %arrayidx1 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 3, !dbg !9388
  %1 = load float, float* %arrayidx1, align 4, !dbg !9388
  %cmp = fcmp oeq float %1, -1.000000e+00, !dbg !9390
  br i1 %cmp, label %if.then, label %if.else, !dbg !9391

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %v1, metadata !9392, metadata !DIExpression()), !dbg !9394
  call void @llvm.dbg.declare(metadata [3 x float]* %v2, metadata !9395, metadata !DIExpression()), !dbg !9396
  call void @llvm.dbg.declare(metadata float* %len1, metadata !9397, metadata !DIExpression()), !dbg !9398
  call void @llvm.dbg.declare(metadata float* %len2, metadata !9399, metadata !DIExpression()), !dbg !9400
  %2 = load [4 x float]*, [4 x float]** %perspmat.addr, align 8, !dbg !9401
  %arrayidx2 = getelementptr inbounds [4 x float], [4 x float]* %2, i64 0, !dbg !9401
  %arrayidx3 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx2, i64 0, i64 0, !dbg !9401
  %3 = load float, float* %arrayidx3, align 4, !dbg !9401
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !9402
  store float %3, float* %arrayidx4, align 4, !dbg !9403
  %4 = load [4 x float]*, [4 x float]** %perspmat.addr, align 8, !dbg !9404
  %arrayidx5 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 1, !dbg !9404
  %arrayidx6 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx5, i64 0, i64 0, !dbg !9404
  %5 = load float, float* %arrayidx6, align 4, !dbg !9404
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 1, !dbg !9405
  store float %5, float* %arrayidx7, align 4, !dbg !9406
  %6 = load [4 x float]*, [4 x float]** %perspmat.addr, align 8, !dbg !9407
  %arrayidx8 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 2, !dbg !9407
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx8, i64 0, i64 0, !dbg !9407
  %7 = load float, float* %arrayidx9, align 4, !dbg !9407
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 2, !dbg !9408
  store float %7, float* %arrayidx10, align 4, !dbg !9409
  %8 = load [4 x float]*, [4 x float]** %perspmat.addr, align 8, !dbg !9410
  %arrayidx11 = getelementptr inbounds [4 x float], [4 x float]* %8, i64 0, !dbg !9410
  %arrayidx12 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx11, i64 0, i64 1, !dbg !9410
  %9 = load float, float* %arrayidx12, align 4, !dbg !9410
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !9411
  store float %9, float* %arrayidx13, align 4, !dbg !9412
  %10 = load [4 x float]*, [4 x float]** %perspmat.addr, align 8, !dbg !9413
  %arrayidx14 = getelementptr inbounds [4 x float], [4 x float]* %10, i64 1, !dbg !9413
  %arrayidx15 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx14, i64 0, i64 1, !dbg !9413
  %11 = load float, float* %arrayidx15, align 4, !dbg !9413
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 1, !dbg !9414
  store float %11, float* %arrayidx16, align 4, !dbg !9415
  %12 = load [4 x float]*, [4 x float]** %perspmat.addr, align 8, !dbg !9416
  %arrayidx17 = getelementptr inbounds [4 x float], [4 x float]* %12, i64 2, !dbg !9416
  %arrayidx18 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx17, i64 0, i64 1, !dbg !9416
  %13 = load float, float* %arrayidx18, align 4, !dbg !9416
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 2, !dbg !9417
  store float %13, float* %arrayidx19, align 4, !dbg !9418
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !9419
  %call = call float @len_v3(float* %arraydecay), !dbg !9420
  %div = fdiv float 1.000000e+00, %call, !dbg !9421
  store float %div, float* %len1, align 4, !dbg !9422
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !9423
  %call21 = call float @len_v3(float* %arraydecay20), !dbg !9424
  %div22 = fdiv float 1.000000e+00, %call21, !dbg !9425
  store float %div22, float* %len2, align 4, !dbg !9426
  %14 = load float, float* %len1, align 4, !dbg !9427
  %15 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !9428
  %arrayidx23 = getelementptr inbounds [4 x float], [4 x float]* %15, i64 0, !dbg !9428
  %arrayidx24 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx23, i64 0, i64 0, !dbg !9428
  %16 = load float, float* %arrayidx24, align 4, !dbg !9428
  %mul = fmul float %14, %16, !dbg !9429
  %17 = load float, float* %x.addr, align 4, !dbg !9430
  %mul25 = fmul float %mul, %17, !dbg !9431
  %18 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !9432
  %arrayidx26 = getelementptr inbounds [4 x float], [4 x float]* %18, i64 2, !dbg !9432
  %arrayidx27 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx26, i64 0, i64 0, !dbg !9432
  %19 = load float, float* %arrayidx27, align 4, !dbg !9433
  %add = fadd float %19, %mul25, !dbg !9433
  store float %add, float* %arrayidx27, align 4, !dbg !9433
  %20 = load float, float* %len2, align 4, !dbg !9434
  %21 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !9435
  %arrayidx28 = getelementptr inbounds [4 x float], [4 x float]* %21, i64 1, !dbg !9435
  %arrayidx29 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx28, i64 0, i64 1, !dbg !9435
  %22 = load float, float* %arrayidx29, align 4, !dbg !9435
  %mul30 = fmul float %20, %22, !dbg !9436
  %23 = load float, float* %y.addr, align 4, !dbg !9437
  %mul31 = fmul float %mul30, %23, !dbg !9438
  %24 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !9439
  %arrayidx32 = getelementptr inbounds [4 x float], [4 x float]* %24, i64 2, !dbg !9439
  %arrayidx33 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx32, i64 0, i64 1, !dbg !9439
  %25 = load float, float* %arrayidx33, align 4, !dbg !9440
  %add34 = fadd float %25, %mul31, !dbg !9440
  store float %add34, float* %arrayidx33, align 4, !dbg !9440
  br label %if.end, !dbg !9441

if.else:                                          ; preds = %entry
  %26 = load float, float* %x.addr, align 4, !dbg !9442
  %27 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !9444
  %arrayidx35 = getelementptr inbounds [4 x float], [4 x float]* %27, i64 3, !dbg !9444
  %arrayidx36 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx35, i64 0, i64 0, !dbg !9444
  %28 = load float, float* %arrayidx36, align 4, !dbg !9445
  %add37 = fadd float %28, %26, !dbg !9445
  store float %add37, float* %arrayidx36, align 4, !dbg !9445
  %29 = load float, float* %y.addr, align 4, !dbg !9446
  %30 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !9447
  %arrayidx38 = getelementptr inbounds [4 x float], [4 x float]* %30, i64 3, !dbg !9447
  %arrayidx39 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx38, i64 0, i64 1, !dbg !9447
  %31 = load float, float* %arrayidx39, align 4, !dbg !9448
  %add40 = fadd float %31, %29, !dbg !9448
  store float %add40, float* %arrayidx39, align 4, !dbg !9448
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9449
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @polarview_m4([4 x float]* %Vm, float %dist, float %azimuth, float %incidence, float %twist) #0 !dbg !9450 {
entry:
  %Vm.addr = alloca [4 x float]*, align 8
  %dist.addr = alloca float, align 4
  %azimuth.addr = alloca float, align 4
  %incidence.addr = alloca float, align 4
  %twist.addr = alloca float, align 4
  store [4 x float]* %Vm, [4 x float]** %Vm.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %Vm.addr, metadata !9453, metadata !DIExpression()), !dbg !9454
  store float %dist, float* %dist.addr, align 4
  call void @llvm.dbg.declare(metadata float* %dist.addr, metadata !9455, metadata !DIExpression()), !dbg !9456
  store float %azimuth, float* %azimuth.addr, align 4
  call void @llvm.dbg.declare(metadata float* %azimuth.addr, metadata !9457, metadata !DIExpression()), !dbg !9458
  store float %incidence, float* %incidence.addr, align 4
  call void @llvm.dbg.declare(metadata float* %incidence.addr, metadata !9459, metadata !DIExpression()), !dbg !9460
  store float %twist, float* %twist.addr, align 4
  call void @llvm.dbg.declare(metadata float* %twist.addr, metadata !9461, metadata !DIExpression()), !dbg !9462
  %0 = load [4 x float]*, [4 x float]** %Vm.addr, align 8, !dbg !9463
  call void @unit_m4([4 x float]* %0), !dbg !9464
  %1 = load [4 x float]*, [4 x float]** %Vm.addr, align 8, !dbg !9465
  %2 = load float, float* %dist.addr, align 4, !dbg !9466
  %fneg = fneg float %2, !dbg !9467
  call void @translate_m4([4 x float]* %1, float 0.000000e+00, float 0.000000e+00, float %fneg), !dbg !9468
  %3 = load [4 x float]*, [4 x float]** %Vm.addr, align 8, !dbg !9469
  %4 = load float, float* %twist.addr, align 4, !dbg !9470
  %fneg1 = fneg float %4, !dbg !9471
  call void @rotate_m4([4 x float]* %3, i8 zeroext 90, float %fneg1), !dbg !9472
  %5 = load [4 x float]*, [4 x float]** %Vm.addr, align 8, !dbg !9473
  %6 = load float, float* %incidence.addr, align 4, !dbg !9474
  %fneg2 = fneg float %6, !dbg !9475
  call void @rotate_m4([4 x float]* %5, i8 zeroext 88, float %fneg2), !dbg !9476
  %7 = load [4 x float]*, [4 x float]** %Vm.addr, align 8, !dbg !9477
  %8 = load float, float* %azimuth.addr, align 4, !dbg !9478
  %fneg3 = fneg float %8, !dbg !9479
  call void @rotate_m4([4 x float]* %7, i8 zeroext 90, float %fneg3), !dbg !9480
  ret void, !dbg !9481
}

declare dso_local void @translate_m4([4 x float]*, float, float, float) #2

declare dso_local void @rotate_m4([4 x float]*, i8 zeroext, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @lookat_m4([4 x float]* %mat, float %vx, float %vy, float %vz, float %px, float %py, float %pz, float %twist) #0 !dbg !9482 {
entry:
  %mat.addr = alloca [4 x float]*, align 8
  %vx.addr = alloca float, align 4
  %vy.addr = alloca float, align 4
  %vz.addr = alloca float, align 4
  %px.addr = alloca float, align 4
  %py.addr = alloca float, align 4
  %pz.addr = alloca float, align 4
  %twist.addr = alloca float, align 4
  %sine = alloca float, align 4
  %cosine = alloca float, align 4
  %hyp = alloca float, align 4
  %hyp1 = alloca float, align 4
  %dx = alloca float, align 4
  %dy = alloca float, align 4
  %dz = alloca float, align 4
  %mat1 = alloca [4 x [4 x float]], align 16
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !9485, metadata !DIExpression()), !dbg !9486
  store float %vx, float* %vx.addr, align 4
  call void @llvm.dbg.declare(metadata float* %vx.addr, metadata !9487, metadata !DIExpression()), !dbg !9488
  store float %vy, float* %vy.addr, align 4
  call void @llvm.dbg.declare(metadata float* %vy.addr, metadata !9489, metadata !DIExpression()), !dbg !9490
  store float %vz, float* %vz.addr, align 4
  call void @llvm.dbg.declare(metadata float* %vz.addr, metadata !9491, metadata !DIExpression()), !dbg !9492
  store float %px, float* %px.addr, align 4
  call void @llvm.dbg.declare(metadata float* %px.addr, metadata !9493, metadata !DIExpression()), !dbg !9494
  store float %py, float* %py.addr, align 4
  call void @llvm.dbg.declare(metadata float* %py.addr, metadata !9495, metadata !DIExpression()), !dbg !9496
  store float %pz, float* %pz.addr, align 4
  call void @llvm.dbg.declare(metadata float* %pz.addr, metadata !9497, metadata !DIExpression()), !dbg !9498
  store float %twist, float* %twist.addr, align 4
  call void @llvm.dbg.declare(metadata float* %twist.addr, metadata !9499, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.declare(metadata float* %sine, metadata !9501, metadata !DIExpression()), !dbg !9502
  call void @llvm.dbg.declare(metadata float* %cosine, metadata !9503, metadata !DIExpression()), !dbg !9504
  call void @llvm.dbg.declare(metadata float* %hyp, metadata !9505, metadata !DIExpression()), !dbg !9506
  call void @llvm.dbg.declare(metadata float* %hyp1, metadata !9507, metadata !DIExpression()), !dbg !9508
  call void @llvm.dbg.declare(metadata float* %dx, metadata !9509, metadata !DIExpression()), !dbg !9510
  call void @llvm.dbg.declare(metadata float* %dy, metadata !9511, metadata !DIExpression()), !dbg !9512
  call void @llvm.dbg.declare(metadata float* %dz, metadata !9513, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat1, metadata !9515, metadata !DIExpression()), !dbg !9518
  %0 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !9519
  call void @unit_m4([4 x float]* %0), !dbg !9520
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat1, i64 0, i64 0, !dbg !9521
  call void @unit_m4([4 x float]* %arraydecay), !dbg !9522
  %1 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !9523
  %2 = load float, float* %twist.addr, align 4, !dbg !9524
  %fneg = fneg float %2, !dbg !9525
  call void @rotate_m4([4 x float]* %1, i8 zeroext 90, float %fneg), !dbg !9526
  %3 = load float, float* %px.addr, align 4, !dbg !9527
  %4 = load float, float* %vx.addr, align 4, !dbg !9528
  %sub = fsub float %3, %4, !dbg !9529
  store float %sub, float* %dx, align 4, !dbg !9530
  %5 = load float, float* %py.addr, align 4, !dbg !9531
  %6 = load float, float* %vy.addr, align 4, !dbg !9532
  %sub1 = fsub float %5, %6, !dbg !9533
  store float %sub1, float* %dy, align 4, !dbg !9534
  %7 = load float, float* %pz.addr, align 4, !dbg !9535
  %8 = load float, float* %vz.addr, align 4, !dbg !9536
  %sub2 = fsub float %7, %8, !dbg !9537
  store float %sub2, float* %dz, align 4, !dbg !9538
  %9 = load float, float* %dx, align 4, !dbg !9539
  %10 = load float, float* %dx, align 4, !dbg !9540
  %mul = fmul float %9, %10, !dbg !9541
  %11 = load float, float* %dz, align 4, !dbg !9542
  %12 = load float, float* %dz, align 4, !dbg !9543
  %mul3 = fmul float %11, %12, !dbg !9544
  %add = fadd float %mul, %mul3, !dbg !9545
  store float %add, float* %hyp, align 4, !dbg !9546
  %13 = load float, float* %dy, align 4, !dbg !9547
  %14 = load float, float* %dy, align 4, !dbg !9548
  %mul4 = fmul float %13, %14, !dbg !9549
  %15 = load float, float* %hyp, align 4, !dbg !9550
  %add5 = fadd float %mul4, %15, !dbg !9551
  %call = call float @sqrtf(float %add5) #5, !dbg !9552
  store float %call, float* %hyp1, align 4, !dbg !9553
  %16 = load float, float* %hyp, align 4, !dbg !9554
  %call6 = call float @sqrtf(float %16) #5, !dbg !9555
  store float %call6, float* %hyp, align 4, !dbg !9556
  %17 = load float, float* %hyp1, align 4, !dbg !9557
  %cmp = fcmp une float %17, 0.000000e+00, !dbg !9559
  br i1 %cmp, label %if.then, label %if.else, !dbg !9560

if.then:                                          ; preds = %entry
  %18 = load float, float* %dy, align 4, !dbg !9561
  %fneg7 = fneg float %18, !dbg !9563
  %19 = load float, float* %hyp1, align 4, !dbg !9564
  %div = fdiv float %fneg7, %19, !dbg !9565
  store float %div, float* %sine, align 4, !dbg !9566
  %20 = load float, float* %hyp, align 4, !dbg !9567
  %21 = load float, float* %hyp1, align 4, !dbg !9568
  %div8 = fdiv float %20, %21, !dbg !9569
  store float %div8, float* %cosine, align 4, !dbg !9570
  br label %if.end, !dbg !9571

if.else:                                          ; preds = %entry
  store float 0.000000e+00, float* %sine, align 4, !dbg !9572
  store float 1.000000e+00, float* %cosine, align 4, !dbg !9574
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %22 = load float, float* %cosine, align 4, !dbg !9575
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat1, i64 0, i64 1, !dbg !9576
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 1, !dbg !9576
  store float %22, float* %arrayidx9, align 4, !dbg !9577
  %23 = load float, float* %sine, align 4, !dbg !9578
  %arrayidx10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat1, i64 0, i64 1, !dbg !9579
  %arrayidx11 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx10, i64 0, i64 2, !dbg !9579
  store float %23, float* %arrayidx11, align 8, !dbg !9580
  %24 = load float, float* %sine, align 4, !dbg !9581
  %fneg12 = fneg float %24, !dbg !9582
  %arrayidx13 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat1, i64 0, i64 2, !dbg !9583
  %arrayidx14 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx13, i64 0, i64 1, !dbg !9583
  store float %fneg12, float* %arrayidx14, align 4, !dbg !9584
  %25 = load float, float* %cosine, align 4, !dbg !9585
  %arrayidx15 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat1, i64 0, i64 2, !dbg !9586
  %arrayidx16 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx15, i64 0, i64 2, !dbg !9586
  store float %25, float* %arrayidx16, align 8, !dbg !9587
  %arraydecay17 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat1, i64 0, i64 0, !dbg !9588
  %26 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !9589
  call void @i_multmatrix([4 x float]* %arraydecay17, [4 x float]* %26), !dbg !9590
  %arrayidx18 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat1, i64 0, i64 2, !dbg !9591
  %arrayidx19 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx18, i64 0, i64 2, !dbg !9591
  store float 1.000000e+00, float* %arrayidx19, align 8, !dbg !9592
  %arrayidx20 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat1, i64 0, i64 1, !dbg !9593
  %arrayidx21 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx20, i64 0, i64 1, !dbg !9593
  store float 1.000000e+00, float* %arrayidx21, align 4, !dbg !9594
  %arrayidx22 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat1, i64 0, i64 2, !dbg !9595
  %arrayidx23 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx22, i64 0, i64 1, !dbg !9595
  store float 0.000000e+00, float* %arrayidx23, align 4, !dbg !9596
  %arrayidx24 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat1, i64 0, i64 1, !dbg !9597
  %arrayidx25 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx24, i64 0, i64 2, !dbg !9597
  store float 0.000000e+00, float* %arrayidx25, align 8, !dbg !9598
  %27 = load float, float* %hyp, align 4, !dbg !9599
  %cmp26 = fcmp une float %27, 0.000000e+00, !dbg !9601
  br i1 %cmp26, label %if.then27, label %if.else31, !dbg !9602

if.then27:                                        ; preds = %if.end
  %28 = load float, float* %dx, align 4, !dbg !9603
  %29 = load float, float* %hyp, align 4, !dbg !9605
  %div28 = fdiv float %28, %29, !dbg !9606
  store float %div28, float* %sine, align 4, !dbg !9607
  %30 = load float, float* %dz, align 4, !dbg !9608
  %fneg29 = fneg float %30, !dbg !9609
  %31 = load float, float* %hyp, align 4, !dbg !9610
  %div30 = fdiv float %fneg29, %31, !dbg !9611
  store float %div30, float* %cosine, align 4, !dbg !9612
  br label %if.end32, !dbg !9613

if.else31:                                        ; preds = %if.end
  store float 0.000000e+00, float* %sine, align 4, !dbg !9614
  store float 1.000000e+00, float* %cosine, align 4, !dbg !9616
  br label %if.end32

if.end32:                                         ; preds = %if.else31, %if.then27
  %32 = load float, float* %cosine, align 4, !dbg !9617
  %arrayidx33 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat1, i64 0, i64 0, !dbg !9618
  %arrayidx34 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx33, i64 0, i64 0, !dbg !9618
  store float %32, float* %arrayidx34, align 16, !dbg !9619
  %33 = load float, float* %sine, align 4, !dbg !9620
  %fneg35 = fneg float %33, !dbg !9621
  %arrayidx36 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat1, i64 0, i64 0, !dbg !9622
  %arrayidx37 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx36, i64 0, i64 2, !dbg !9622
  store float %fneg35, float* %arrayidx37, align 8, !dbg !9623
  %34 = load float, float* %sine, align 4, !dbg !9624
  %arrayidx38 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat1, i64 0, i64 2, !dbg !9625
  %arrayidx39 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx38, i64 0, i64 0, !dbg !9625
  store float %34, float* %arrayidx39, align 16, !dbg !9626
  %35 = load float, float* %cosine, align 4, !dbg !9627
  %arrayidx40 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat1, i64 0, i64 2, !dbg !9628
  %arrayidx41 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx40, i64 0, i64 2, !dbg !9628
  store float %35, float* %arrayidx41, align 8, !dbg !9629
  %arraydecay42 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat1, i64 0, i64 0, !dbg !9630
  %36 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !9631
  call void @i_multmatrix([4 x float]* %arraydecay42, [4 x float]* %36), !dbg !9632
  %37 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !9633
  %38 = load float, float* %vx.addr, align 4, !dbg !9634
  %fneg43 = fneg float %38, !dbg !9635
  %39 = load float, float* %vy.addr, align 4, !dbg !9636
  %fneg44 = fneg float %39, !dbg !9637
  %40 = load float, float* %vz.addr, align 4, !dbg !9638
  %fneg45 = fneg float %40, !dbg !9639
  call void @translate_m4([4 x float]* %37, float %fneg43, float %fneg44, float %fneg45), !dbg !9640
  ret void, !dbg !9641
}

; Function Attrs: noinline nounwind uwtable
define internal void @i_multmatrix([4 x float]* %icand, [4 x float]* %Vm) #0 !dbg !9642 {
entry:
  %icand.addr = alloca [4 x float]*, align 8
  %Vm.addr = alloca [4 x float]*, align 8
  %row = alloca i32, align 4
  %col = alloca i32, align 4
  %temp = alloca [4 x [4 x float]], align 16
  store [4 x float]* %icand, [4 x float]** %icand.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %icand.addr, metadata !9645, metadata !DIExpression()), !dbg !9646
  store [4 x float]* %Vm, [4 x float]** %Vm.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %Vm.addr, metadata !9647, metadata !DIExpression()), !dbg !9648
  call void @llvm.dbg.declare(metadata i32* %row, metadata !9649, metadata !DIExpression()), !dbg !9650
  call void @llvm.dbg.declare(metadata i32* %col, metadata !9651, metadata !DIExpression()), !dbg !9652
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %temp, metadata !9653, metadata !DIExpression()), !dbg !9654
  store i32 0, i32* %row, align 4, !dbg !9655
  br label %for.cond, !dbg !9657

for.cond:                                         ; preds = %for.inc35, %entry
  %0 = load i32, i32* %row, align 4, !dbg !9658
  %cmp = icmp slt i32 %0, 4, !dbg !9660
  br i1 %cmp, label %for.body, label %for.end37, !dbg !9661

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %col, align 4, !dbg !9662
  br label %for.cond1, !dbg !9664

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %col, align 4, !dbg !9665
  %cmp2 = icmp slt i32 %1, 4, !dbg !9667
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !9668

for.body3:                                        ; preds = %for.cond1
  %2 = load [4 x float]*, [4 x float]** %icand.addr, align 8, !dbg !9669
  %3 = load i32, i32* %row, align 4, !dbg !9670
  %idxprom = sext i32 %3 to i64, !dbg !9669
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %2, i64 %idxprom, !dbg !9669
  %arrayidx4 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !9669
  %4 = load float, float* %arrayidx4, align 4, !dbg !9669
  %5 = load [4 x float]*, [4 x float]** %Vm.addr, align 8, !dbg !9671
  %arrayidx5 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, !dbg !9671
  %6 = load i32, i32* %col, align 4, !dbg !9672
  %idxprom6 = sext i32 %6 to i64, !dbg !9671
  %arrayidx7 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx5, i64 0, i64 %idxprom6, !dbg !9671
  %7 = load float, float* %arrayidx7, align 4, !dbg !9671
  %mul = fmul float %4, %7, !dbg !9673
  %8 = load [4 x float]*, [4 x float]** %icand.addr, align 8, !dbg !9674
  %9 = load i32, i32* %row, align 4, !dbg !9675
  %idxprom8 = sext i32 %9 to i64, !dbg !9674
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %8, i64 %idxprom8, !dbg !9674
  %arrayidx10 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx9, i64 0, i64 1, !dbg !9674
  %10 = load float, float* %arrayidx10, align 4, !dbg !9674
  %11 = load [4 x float]*, [4 x float]** %Vm.addr, align 8, !dbg !9676
  %arrayidx11 = getelementptr inbounds [4 x float], [4 x float]* %11, i64 1, !dbg !9676
  %12 = load i32, i32* %col, align 4, !dbg !9677
  %idxprom12 = sext i32 %12 to i64, !dbg !9676
  %arrayidx13 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx11, i64 0, i64 %idxprom12, !dbg !9676
  %13 = load float, float* %arrayidx13, align 4, !dbg !9676
  %mul14 = fmul float %10, %13, !dbg !9678
  %add = fadd float %mul, %mul14, !dbg !9679
  %14 = load [4 x float]*, [4 x float]** %icand.addr, align 8, !dbg !9680
  %15 = load i32, i32* %row, align 4, !dbg !9681
  %idxprom15 = sext i32 %15 to i64, !dbg !9680
  %arrayidx16 = getelementptr inbounds [4 x float], [4 x float]* %14, i64 %idxprom15, !dbg !9680
  %arrayidx17 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx16, i64 0, i64 2, !dbg !9680
  %16 = load float, float* %arrayidx17, align 4, !dbg !9680
  %17 = load [4 x float]*, [4 x float]** %Vm.addr, align 8, !dbg !9682
  %arrayidx18 = getelementptr inbounds [4 x float], [4 x float]* %17, i64 2, !dbg !9682
  %18 = load i32, i32* %col, align 4, !dbg !9683
  %idxprom19 = sext i32 %18 to i64, !dbg !9682
  %arrayidx20 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx18, i64 0, i64 %idxprom19, !dbg !9682
  %19 = load float, float* %arrayidx20, align 4, !dbg !9682
  %mul21 = fmul float %16, %19, !dbg !9684
  %add22 = fadd float %add, %mul21, !dbg !9685
  %20 = load [4 x float]*, [4 x float]** %icand.addr, align 8, !dbg !9686
  %21 = load i32, i32* %row, align 4, !dbg !9687
  %idxprom23 = sext i32 %21 to i64, !dbg !9686
  %arrayidx24 = getelementptr inbounds [4 x float], [4 x float]* %20, i64 %idxprom23, !dbg !9686
  %arrayidx25 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx24, i64 0, i64 3, !dbg !9686
  %22 = load float, float* %arrayidx25, align 4, !dbg !9686
  %23 = load [4 x float]*, [4 x float]** %Vm.addr, align 8, !dbg !9688
  %arrayidx26 = getelementptr inbounds [4 x float], [4 x float]* %23, i64 3, !dbg !9688
  %24 = load i32, i32* %col, align 4, !dbg !9689
  %idxprom27 = sext i32 %24 to i64, !dbg !9688
  %arrayidx28 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx26, i64 0, i64 %idxprom27, !dbg !9688
  %25 = load float, float* %arrayidx28, align 4, !dbg !9688
  %mul29 = fmul float %22, %25, !dbg !9690
  %add30 = fadd float %add22, %mul29, !dbg !9691
  %26 = load i32, i32* %row, align 4, !dbg !9692
  %idxprom31 = sext i32 %26 to i64, !dbg !9693
  %arrayidx32 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %temp, i64 0, i64 %idxprom31, !dbg !9693
  %27 = load i32, i32* %col, align 4, !dbg !9694
  %idxprom33 = sext i32 %27 to i64, !dbg !9693
  %arrayidx34 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx32, i64 0, i64 %idxprom33, !dbg !9693
  store float %add30, float* %arrayidx34, align 4, !dbg !9695
  br label %for.inc, !dbg !9693

for.inc:                                          ; preds = %for.body3
  %28 = load i32, i32* %col, align 4, !dbg !9696
  %inc = add nsw i32 %28, 1, !dbg !9696
  store i32 %inc, i32* %col, align 4, !dbg !9696
  br label %for.cond1, !dbg !9697, !llvm.loop !9698

for.end:                                          ; preds = %for.cond1
  br label %for.inc35, !dbg !9699

for.inc35:                                        ; preds = %for.end
  %29 = load i32, i32* %row, align 4, !dbg !9700
  %inc36 = add nsw i32 %29, 1, !dbg !9700
  store i32 %inc36, i32* %row, align 4, !dbg !9700
  br label %for.cond, !dbg !9701, !llvm.loop !9702

for.end37:                                        ; preds = %for.cond
  %30 = load [4 x float]*, [4 x float]** %Vm.addr, align 8, !dbg !9704
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %temp, i64 0, i64 0, !dbg !9705
  call void @copy_m4_m4([4 x float]* %30, [4 x float]* %arraydecay), !dbg !9706
  ret void, !dbg !9707
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @box_clip_bounds_m4([3 x float]* %boundbox, float* %bounds, [4 x float]* %winmat) #0 !dbg !9708 {
entry:
  %retval = alloca i32, align 4
  %boundbox.addr = alloca [3 x float]*, align 8
  %bounds.addr = alloca float*, align 8
  %winmat.addr = alloca [4 x float]*, align 8
  %mat = alloca [4 x [4 x float]], align 16
  %vec = alloca [4 x float], align 16
  %a = alloca i32, align 4
  %fl = alloca i32, align 4
  %flag = alloca i32, align 4
  store [3 x float]* %boundbox, [3 x float]** %boundbox.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %boundbox.addr, metadata !9711, metadata !DIExpression()), !dbg !9712
  store float* %bounds, float** %bounds.addr, align 8
  call void @llvm.dbg.declare(metadata float** %bounds.addr, metadata !9713, metadata !DIExpression()), !dbg !9714
  store [4 x float]* %winmat, [4 x float]** %winmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %winmat.addr, metadata !9715, metadata !DIExpression()), !dbg !9716
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !9717, metadata !DIExpression()), !dbg !9718
  call void @llvm.dbg.declare(metadata [4 x float]* %vec, metadata !9719, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.declare(metadata i32* %a, metadata !9721, metadata !DIExpression()), !dbg !9722
  call void @llvm.dbg.declare(metadata i32* %fl, metadata !9723, metadata !DIExpression()), !dbg !9724
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !9725, metadata !DIExpression()), !dbg !9726
  store i32 -1, i32* %flag, align 4, !dbg !9726
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !9727
  %0 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !9728
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %0), !dbg !9729
  store i32 0, i32* %a, align 4, !dbg !9730
  br label %for.cond, !dbg !9732

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %a, align 4, !dbg !9733
  %cmp = icmp slt i32 %1, 8, !dbg !9735
  br i1 %cmp, label %for.body, label %for.end, !dbg !9736

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %a, align 4, !dbg !9737
  %and = and i32 %2, 1, !dbg !9739
  %tobool = icmp ne i32 %and, 0, !dbg !9739
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9740

cond.true:                                        ; preds = %for.body
  %3 = load [3 x float]*, [3 x float]** %boundbox.addr, align 8, !dbg !9741
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %3, i64 0, !dbg !9741
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !9741
  %4 = load float, float* %arrayidx1, align 4, !dbg !9741
  br label %cond.end, !dbg !9740

cond.false:                                       ; preds = %for.body
  %5 = load [3 x float]*, [3 x float]** %boundbox.addr, align 8, !dbg !9742
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %5, i64 1, !dbg !9742
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx2, i64 0, i64 0, !dbg !9742
  %6 = load float, float* %arrayidx3, align 4, !dbg !9742
  br label %cond.end, !dbg !9740

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %4, %cond.true ], [ %6, %cond.false ], !dbg !9740
  %arrayidx4 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !9743
  store float %cond, float* %arrayidx4, align 16, !dbg !9744
  %7 = load i32, i32* %a, align 4, !dbg !9745
  %and5 = and i32 %7, 2, !dbg !9746
  %tobool6 = icmp ne i32 %and5, 0, !dbg !9746
  br i1 %tobool6, label %cond.true7, label %cond.false10, !dbg !9747

cond.true7:                                       ; preds = %cond.end
  %8 = load [3 x float]*, [3 x float]** %boundbox.addr, align 8, !dbg !9748
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %8, i64 0, !dbg !9748
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx8, i64 0, i64 1, !dbg !9748
  %9 = load float, float* %arrayidx9, align 4, !dbg !9748
  br label %cond.end13, !dbg !9747

cond.false10:                                     ; preds = %cond.end
  %10 = load [3 x float]*, [3 x float]** %boundbox.addr, align 8, !dbg !9749
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %10, i64 1, !dbg !9749
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx11, i64 0, i64 1, !dbg !9749
  %11 = load float, float* %arrayidx12, align 4, !dbg !9749
  br label %cond.end13, !dbg !9747

cond.end13:                                       ; preds = %cond.false10, %cond.true7
  %cond14 = phi float [ %9, %cond.true7 ], [ %11, %cond.false10 ], !dbg !9747
  %arrayidx15 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 1, !dbg !9750
  store float %cond14, float* %arrayidx15, align 4, !dbg !9751
  %12 = load i32, i32* %a, align 4, !dbg !9752
  %and16 = and i32 %12, 4, !dbg !9753
  %tobool17 = icmp ne i32 %and16, 0, !dbg !9753
  br i1 %tobool17, label %cond.true18, label %cond.false21, !dbg !9754

cond.true18:                                      ; preds = %cond.end13
  %13 = load [3 x float]*, [3 x float]** %boundbox.addr, align 8, !dbg !9755
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %13, i64 0, !dbg !9755
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx19, i64 0, i64 2, !dbg !9755
  %14 = load float, float* %arrayidx20, align 4, !dbg !9755
  br label %cond.end24, !dbg !9754

cond.false21:                                     ; preds = %cond.end13
  %15 = load [3 x float]*, [3 x float]** %boundbox.addr, align 8, !dbg !9756
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %15, i64 1, !dbg !9756
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx22, i64 0, i64 2, !dbg !9756
  %16 = load float, float* %arrayidx23, align 4, !dbg !9756
  br label %cond.end24, !dbg !9754

cond.end24:                                       ; preds = %cond.false21, %cond.true18
  %cond25 = phi float [ %14, %cond.true18 ], [ %16, %cond.false21 ], !dbg !9754
  %arrayidx26 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 2, !dbg !9757
  store float %cond25, float* %arrayidx26, align 8, !dbg !9758
  %arrayidx27 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !9759
  store float 1.000000e+00, float* %arrayidx27, align 4, !dbg !9760
  %arraydecay28 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !9761
  %arraydecay29 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !9762
  call void @mul_m4_v4([4 x float]* %arraydecay28, float* %arraydecay29), !dbg !9763
  store i32 0, i32* %fl, align 4, !dbg !9764
  %17 = load float*, float** %bounds.addr, align 8, !dbg !9765
  %tobool30 = icmp ne float* %17, null, !dbg !9765
  br i1 %tobool30, label %if.then, label %if.else, !dbg !9767

if.then:                                          ; preds = %cond.end24
  %arrayidx31 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !9768
  %18 = load float, float* %arrayidx31, align 16, !dbg !9768
  %19 = load float*, float** %bounds.addr, align 8, !dbg !9771
  %arrayidx32 = getelementptr inbounds float, float* %19, i64 1, !dbg !9771
  %20 = load float, float* %arrayidx32, align 4, !dbg !9771
  %arrayidx33 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !9772
  %21 = load float, float* %arrayidx33, align 4, !dbg !9772
  %mul = fmul float %20, %21, !dbg !9773
  %cmp34 = fcmp ogt float %18, %mul, !dbg !9774
  br i1 %cmp34, label %if.then35, label %if.end, !dbg !9775

if.then35:                                        ; preds = %if.then
  %22 = load i32, i32* %fl, align 4, !dbg !9776
  %or = or i32 %22, 1, !dbg !9776
  store i32 %or, i32* %fl, align 4, !dbg !9776
  br label %if.end, !dbg !9777

if.end:                                           ; preds = %if.then35, %if.then
  %arrayidx36 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !9778
  %23 = load float, float* %arrayidx36, align 16, !dbg !9778
  %24 = load float*, float** %bounds.addr, align 8, !dbg !9780
  %arrayidx37 = getelementptr inbounds float, float* %24, i64 0, !dbg !9780
  %25 = load float, float* %arrayidx37, align 4, !dbg !9780
  %arrayidx38 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !9781
  %26 = load float, float* %arrayidx38, align 4, !dbg !9781
  %mul39 = fmul float %25, %26, !dbg !9782
  %cmp40 = fcmp olt float %23, %mul39, !dbg !9783
  br i1 %cmp40, label %if.then41, label %if.end43, !dbg !9784

if.then41:                                        ; preds = %if.end
  %27 = load i32, i32* %fl, align 4, !dbg !9785
  %or42 = or i32 %27, 2, !dbg !9785
  store i32 %or42, i32* %fl, align 4, !dbg !9785
  br label %if.end43, !dbg !9786

if.end43:                                         ; preds = %if.then41, %if.end
  %arrayidx44 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 1, !dbg !9787
  %28 = load float, float* %arrayidx44, align 4, !dbg !9787
  %29 = load float*, float** %bounds.addr, align 8, !dbg !9789
  %arrayidx45 = getelementptr inbounds float, float* %29, i64 3, !dbg !9789
  %30 = load float, float* %arrayidx45, align 4, !dbg !9789
  %arrayidx46 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !9790
  %31 = load float, float* %arrayidx46, align 4, !dbg !9790
  %mul47 = fmul float %30, %31, !dbg !9791
  %cmp48 = fcmp ogt float %28, %mul47, !dbg !9792
  br i1 %cmp48, label %if.then49, label %if.end51, !dbg !9793

if.then49:                                        ; preds = %if.end43
  %32 = load i32, i32* %fl, align 4, !dbg !9794
  %or50 = or i32 %32, 4, !dbg !9794
  store i32 %or50, i32* %fl, align 4, !dbg !9794
  br label %if.end51, !dbg !9795

if.end51:                                         ; preds = %if.then49, %if.end43
  %arrayidx52 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 1, !dbg !9796
  %33 = load float, float* %arrayidx52, align 4, !dbg !9796
  %34 = load float*, float** %bounds.addr, align 8, !dbg !9798
  %arrayidx53 = getelementptr inbounds float, float* %34, i64 2, !dbg !9798
  %35 = load float, float* %arrayidx53, align 4, !dbg !9798
  %arrayidx54 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !9799
  %36 = load float, float* %arrayidx54, align 4, !dbg !9799
  %mul55 = fmul float %35, %36, !dbg !9800
  %cmp56 = fcmp olt float %33, %mul55, !dbg !9801
  br i1 %cmp56, label %if.then57, label %if.end59, !dbg !9802

if.then57:                                        ; preds = %if.end51
  %37 = load i32, i32* %fl, align 4, !dbg !9803
  %or58 = or i32 %37, 8, !dbg !9803
  store i32 %or58, i32* %fl, align 4, !dbg !9803
  br label %if.end59, !dbg !9804

if.end59:                                         ; preds = %if.then57, %if.end51
  br label %if.end85, !dbg !9805

if.else:                                          ; preds = %cond.end24
  %arrayidx60 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !9806
  %38 = load float, float* %arrayidx60, align 16, !dbg !9806
  %arrayidx61 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !9809
  %39 = load float, float* %arrayidx61, align 4, !dbg !9809
  %fneg = fneg float %39, !dbg !9810
  %cmp62 = fcmp olt float %38, %fneg, !dbg !9811
  br i1 %cmp62, label %if.then63, label %if.end65, !dbg !9812

if.then63:                                        ; preds = %if.else
  %40 = load i32, i32* %fl, align 4, !dbg !9813
  %or64 = or i32 %40, 1, !dbg !9813
  store i32 %or64, i32* %fl, align 4, !dbg !9813
  br label %if.end65, !dbg !9814

if.end65:                                         ; preds = %if.then63, %if.else
  %arrayidx66 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !9815
  %41 = load float, float* %arrayidx66, align 16, !dbg !9815
  %arrayidx67 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !9817
  %42 = load float, float* %arrayidx67, align 4, !dbg !9817
  %cmp68 = fcmp ogt float %41, %42, !dbg !9818
  br i1 %cmp68, label %if.then69, label %if.end71, !dbg !9819

if.then69:                                        ; preds = %if.end65
  %43 = load i32, i32* %fl, align 4, !dbg !9820
  %or70 = or i32 %43, 2, !dbg !9820
  store i32 %or70, i32* %fl, align 4, !dbg !9820
  br label %if.end71, !dbg !9821

if.end71:                                         ; preds = %if.then69, %if.end65
  %arrayidx72 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 1, !dbg !9822
  %44 = load float, float* %arrayidx72, align 4, !dbg !9822
  %arrayidx73 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !9824
  %45 = load float, float* %arrayidx73, align 4, !dbg !9824
  %fneg74 = fneg float %45, !dbg !9825
  %cmp75 = fcmp olt float %44, %fneg74, !dbg !9826
  br i1 %cmp75, label %if.then76, label %if.end78, !dbg !9827

if.then76:                                        ; preds = %if.end71
  %46 = load i32, i32* %fl, align 4, !dbg !9828
  %or77 = or i32 %46, 4, !dbg !9828
  store i32 %or77, i32* %fl, align 4, !dbg !9828
  br label %if.end78, !dbg !9829

if.end78:                                         ; preds = %if.then76, %if.end71
  %arrayidx79 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 1, !dbg !9830
  %47 = load float, float* %arrayidx79, align 4, !dbg !9830
  %arrayidx80 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !9832
  %48 = load float, float* %arrayidx80, align 4, !dbg !9832
  %cmp81 = fcmp ogt float %47, %48, !dbg !9833
  br i1 %cmp81, label %if.then82, label %if.end84, !dbg !9834

if.then82:                                        ; preds = %if.end78
  %49 = load i32, i32* %fl, align 4, !dbg !9835
  %or83 = or i32 %49, 8, !dbg !9835
  store i32 %or83, i32* %fl, align 4, !dbg !9835
  br label %if.end84, !dbg !9836

if.end84:                                         ; preds = %if.then82, %if.end78
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.end59
  %arrayidx86 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 2, !dbg !9837
  %50 = load float, float* %arrayidx86, align 8, !dbg !9837
  %arrayidx87 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !9839
  %51 = load float, float* %arrayidx87, align 4, !dbg !9839
  %fneg88 = fneg float %51, !dbg !9840
  %cmp89 = fcmp olt float %50, %fneg88, !dbg !9841
  br i1 %cmp89, label %if.then90, label %if.end92, !dbg !9842

if.then90:                                        ; preds = %if.end85
  %52 = load i32, i32* %fl, align 4, !dbg !9843
  %or91 = or i32 %52, 16, !dbg !9843
  store i32 %or91, i32* %fl, align 4, !dbg !9843
  br label %if.end92, !dbg !9844

if.end92:                                         ; preds = %if.then90, %if.end85
  %arrayidx93 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 2, !dbg !9845
  %53 = load float, float* %arrayidx93, align 8, !dbg !9845
  %arrayidx94 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !9847
  %54 = load float, float* %arrayidx94, align 4, !dbg !9847
  %cmp95 = fcmp ogt float %53, %54, !dbg !9848
  br i1 %cmp95, label %if.then96, label %if.end98, !dbg !9849

if.then96:                                        ; preds = %if.end92
  %55 = load i32, i32* %fl, align 4, !dbg !9850
  %or97 = or i32 %55, 32, !dbg !9850
  store i32 %or97, i32* %fl, align 4, !dbg !9850
  br label %if.end98, !dbg !9851

if.end98:                                         ; preds = %if.then96, %if.end92
  %56 = load i32, i32* %fl, align 4, !dbg !9852
  %57 = load i32, i32* %flag, align 4, !dbg !9853
  %and99 = and i32 %57, %56, !dbg !9853
  store i32 %and99, i32* %flag, align 4, !dbg !9853
  %58 = load i32, i32* %flag, align 4, !dbg !9854
  %cmp100 = icmp eq i32 %58, 0, !dbg !9856
  br i1 %cmp100, label %if.then101, label %if.end102, !dbg !9857

if.then101:                                       ; preds = %if.end98
  store i32 0, i32* %retval, align 4, !dbg !9858
  br label %return, !dbg !9858

if.end102:                                        ; preds = %if.end98
  br label %for.inc, !dbg !9859

for.inc:                                          ; preds = %if.end102
  %59 = load i32, i32* %a, align 4, !dbg !9860
  %inc = add nsw i32 %59, 1, !dbg !9860
  store i32 %inc, i32* %a, align 4, !dbg !9860
  br label %for.cond, !dbg !9861, !llvm.loop !9862

for.end:                                          ; preds = %for.cond
  %60 = load i32, i32* %flag, align 4, !dbg !9864
  store i32 %60, i32* %retval, align 4, !dbg !9865
  br label %return, !dbg !9865

return:                                           ; preds = %for.end, %if.then101
  %61 = load i32, i32* %retval, align 4, !dbg !9866
  ret i32 %61, !dbg !9866
}

declare dso_local void @copy_m4_m4([4 x float]*, [4 x float]*) #2

declare dso_local void @mul_m4_v4([4 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @box_minmax_bounds_m4(float* %min, float* %max, [3 x float]* %boundbox, [4 x float]* %mat) #0 !dbg !9867 {
entry:
  %min.addr = alloca float*, align 8
  %max.addr = alloca float*, align 8
  %boundbox.addr = alloca [3 x float]*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  %mn = alloca [3 x float], align 4
  %mx = alloca [3 x float], align 4
  %vec = alloca [3 x float], align 4
  %a = alloca i32, align 4
  store float* %min, float** %min.addr, align 8
  call void @llvm.dbg.declare(metadata float** %min.addr, metadata !9870, metadata !DIExpression()), !dbg !9871
  store float* %max, float** %max.addr, align 8
  call void @llvm.dbg.declare(metadata float** %max.addr, metadata !9872, metadata !DIExpression()), !dbg !9873
  store [3 x float]* %boundbox, [3 x float]** %boundbox.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %boundbox.addr, metadata !9874, metadata !DIExpression()), !dbg !9875
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !9876, metadata !DIExpression()), !dbg !9877
  call void @llvm.dbg.declare(metadata [3 x float]* %mn, metadata !9878, metadata !DIExpression()), !dbg !9879
  call void @llvm.dbg.declare(metadata [3 x float]* %mx, metadata !9880, metadata !DIExpression()), !dbg !9881
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !9882, metadata !DIExpression()), !dbg !9883
  call void @llvm.dbg.declare(metadata i32* %a, metadata !9884, metadata !DIExpression()), !dbg !9885
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %mn, i64 0, i64 0, !dbg !9886
  %0 = load float*, float** %min.addr, align 8, !dbg !9887
  call void @copy_v3_v3(float* %arraydecay, float* %0), !dbg !9888
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %mx, i64 0, i64 0, !dbg !9889
  %1 = load float*, float** %max.addr, align 8, !dbg !9890
  call void @copy_v3_v3(float* %arraydecay1, float* %1), !dbg !9891
  store i32 0, i32* %a, align 4, !dbg !9892
  br label %for.cond, !dbg !9894

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %a, align 4, !dbg !9895
  %cmp = icmp slt i32 %2, 8, !dbg !9897
  br i1 %cmp, label %for.body, label %for.end, !dbg !9898

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %a, align 4, !dbg !9899
  %and = and i32 %3, 1, !dbg !9901
  %tobool = icmp ne i32 %and, 0, !dbg !9901
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9902

cond.true:                                        ; preds = %for.body
  %4 = load [3 x float]*, [3 x float]** %boundbox.addr, align 8, !dbg !9903
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %4, i64 0, !dbg !9903
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !9903
  %5 = load float, float* %arrayidx2, align 4, !dbg !9903
  br label %cond.end, !dbg !9902

cond.false:                                       ; preds = %for.body
  %6 = load [3 x float]*, [3 x float]** %boundbox.addr, align 8, !dbg !9904
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %6, i64 1, !dbg !9904
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx3, i64 0, i64 0, !dbg !9904
  %7 = load float, float* %arrayidx4, align 4, !dbg !9904
  br label %cond.end, !dbg !9902

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %5, %cond.true ], [ %7, %cond.false ], !dbg !9902
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9905
  store float %cond, float* %arrayidx5, align 4, !dbg !9906
  %8 = load i32, i32* %a, align 4, !dbg !9907
  %and6 = and i32 %8, 2, !dbg !9908
  %tobool7 = icmp ne i32 %and6, 0, !dbg !9908
  br i1 %tobool7, label %cond.true8, label %cond.false11, !dbg !9909

cond.true8:                                       ; preds = %cond.end
  %9 = load [3 x float]*, [3 x float]** %boundbox.addr, align 8, !dbg !9910
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %9, i64 0, !dbg !9910
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx9, i64 0, i64 1, !dbg !9910
  %10 = load float, float* %arrayidx10, align 4, !dbg !9910
  br label %cond.end14, !dbg !9909

cond.false11:                                     ; preds = %cond.end
  %11 = load [3 x float]*, [3 x float]** %boundbox.addr, align 8, !dbg !9911
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %11, i64 1, !dbg !9911
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx12, i64 0, i64 1, !dbg !9911
  %12 = load float, float* %arrayidx13, align 4, !dbg !9911
  br label %cond.end14, !dbg !9909

cond.end14:                                       ; preds = %cond.false11, %cond.true8
  %cond15 = phi float [ %10, %cond.true8 ], [ %12, %cond.false11 ], !dbg !9909
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !9912
  store float %cond15, float* %arrayidx16, align 4, !dbg !9913
  %13 = load i32, i32* %a, align 4, !dbg !9914
  %and17 = and i32 %13, 4, !dbg !9915
  %tobool18 = icmp ne i32 %and17, 0, !dbg !9915
  br i1 %tobool18, label %cond.true19, label %cond.false22, !dbg !9916

cond.true19:                                      ; preds = %cond.end14
  %14 = load [3 x float]*, [3 x float]** %boundbox.addr, align 8, !dbg !9917
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %14, i64 0, !dbg !9917
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx20, i64 0, i64 2, !dbg !9917
  %15 = load float, float* %arrayidx21, align 4, !dbg !9917
  br label %cond.end25, !dbg !9916

cond.false22:                                     ; preds = %cond.end14
  %16 = load [3 x float]*, [3 x float]** %boundbox.addr, align 8, !dbg !9918
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %16, i64 1, !dbg !9918
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx23, i64 0, i64 2, !dbg !9918
  %17 = load float, float* %arrayidx24, align 4, !dbg !9918
  br label %cond.end25, !dbg !9916

cond.end25:                                       ; preds = %cond.false22, %cond.true19
  %cond26 = phi float [ %15, %cond.true19 ], [ %17, %cond.false22 ], !dbg !9916
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !9919
  store float %cond26, float* %arrayidx27, align 4, !dbg !9920
  %18 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !9921
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9922
  call void @mul_m4_v3([4 x float]* %18, float* %arraydecay28), !dbg !9923
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %mn, i64 0, i64 0, !dbg !9924
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %mx, i64 0, i64 0, !dbg !9925
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9926
  call void @minmax_v3v3_v3(float* %arraydecay29, float* %arraydecay30, float* %arraydecay31), !dbg !9927
  br label %for.inc, !dbg !9928

for.inc:                                          ; preds = %cond.end25
  %19 = load i32, i32* %a, align 4, !dbg !9929
  %inc = add nsw i32 %19, 1, !dbg !9929
  store i32 %inc, i32* %a, align 4, !dbg !9929
  br label %for.cond, !dbg !9930, !llvm.loop !9931

for.end:                                          ; preds = %for.cond
  %20 = load float*, float** %min.addr, align 8, !dbg !9933
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %mn, i64 0, i64 0, !dbg !9934
  call void @copy_v3_v3(float* %20, float* %arraydecay32), !dbg !9935
  %21 = load float*, float** %max.addr, align 8, !dbg !9936
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %mx, i64 0, i64 0, !dbg !9937
  call void @copy_v3_v3(float* %21, float* %arraydecay33), !dbg !9938
  ret void, !dbg !9939
}

declare dso_local void @mul_m4_v3([4 x float]*, float*) #2

declare dso_local void @minmax_v3v3_v3(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @map_to_tube(float* %r_u, float* %r_v, float %x, float %y, float %z) #0 !dbg !9940 {
entry:
  %r_u.addr = alloca float*, align 8
  %r_v.addr = alloca float*, align 8
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  %z.addr = alloca float, align 4
  %len = alloca float, align 4
  store float* %r_u, float** %r_u.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_u.addr, metadata !9943, metadata !DIExpression()), !dbg !9944
  store float* %r_v, float** %r_v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_v.addr, metadata !9945, metadata !DIExpression()), !dbg !9946
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !9947, metadata !DIExpression()), !dbg !9948
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !9949, metadata !DIExpression()), !dbg !9950
  store float %z, float* %z.addr, align 4
  call void @llvm.dbg.declare(metadata float* %z.addr, metadata !9951, metadata !DIExpression()), !dbg !9952
  call void @llvm.dbg.declare(metadata float* %len, metadata !9953, metadata !DIExpression()), !dbg !9954
  %0 = load float, float* %z.addr, align 4, !dbg !9955
  %add = fadd float %0, 1.000000e+00, !dbg !9956
  %div = fdiv float %add, 2.000000e+00, !dbg !9957
  %1 = load float*, float** %r_v.addr, align 8, !dbg !9958
  store float %div, float* %1, align 4, !dbg !9959
  %2 = load float, float* %x.addr, align 4, !dbg !9960
  %3 = load float, float* %x.addr, align 4, !dbg !9961
  %mul = fmul float %2, %3, !dbg !9962
  %4 = load float, float* %y.addr, align 4, !dbg !9963
  %5 = load float, float* %y.addr, align 4, !dbg !9964
  %mul1 = fmul float %4, %5, !dbg !9965
  %add2 = fadd float %mul, %mul1, !dbg !9966
  %call = call float @sqrtf(float %add2) #5, !dbg !9967
  store float %call, float* %len, align 4, !dbg !9968
  %6 = load float, float* %len, align 4, !dbg !9969
  %cmp = fcmp ogt float %6, 0.000000e+00, !dbg !9971
  br i1 %cmp, label %if.then, label %if.else, !dbg !9972

if.then:                                          ; preds = %entry
  %7 = load float, float* %x.addr, align 4, !dbg !9973
  %8 = load float, float* %len, align 4, !dbg !9975
  %div3 = fdiv float %7, %8, !dbg !9976
  %9 = load float, float* %y.addr, align 4, !dbg !9977
  %10 = load float, float* %len, align 4, !dbg !9978
  %div4 = fdiv float %9, %10, !dbg !9979
  %call5 = call float @atan2f(float %div3, float %div4) #5, !dbg !9980
  %div6 = fdiv float %call5, 0x400921FB60000000, !dbg !9981
  %sub = fsub float 1.000000e+00, %div6, !dbg !9982
  %div7 = fdiv float %sub, 2.000000e+00, !dbg !9983
  %11 = load float*, float** %r_u.addr, align 8, !dbg !9984
  store float %div7, float* %11, align 4, !dbg !9985
  br label %if.end, !dbg !9986

if.else:                                          ; preds = %entry
  %12 = load float*, float** %r_u.addr, align 8, !dbg !9987
  store float 0.000000e+00, float* %12, align 4, !dbg !9989
  %13 = load float*, float** %r_v.addr, align 8, !dbg !9990
  store float 0.000000e+00, float* %13, align 4, !dbg !9991
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9992
}

; Function Attrs: nounwind
declare dso_local float @atan2f(float, float) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @map_to_sphere(float* %r_u, float* %r_v, float %x, float %y, float %z) #0 !dbg !9993 {
entry:
  %r_u.addr = alloca float*, align 8
  %r_v.addr = alloca float*, align 8
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  %z.addr = alloca float, align 4
  %len = alloca float, align 4
  store float* %r_u, float** %r_u.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_u.addr, metadata !9994, metadata !DIExpression()), !dbg !9995
  store float* %r_v, float** %r_v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_v.addr, metadata !9996, metadata !DIExpression()), !dbg !9997
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !9998, metadata !DIExpression()), !dbg !9999
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !10000, metadata !DIExpression()), !dbg !10001
  store float %z, float* %z.addr, align 4
  call void @llvm.dbg.declare(metadata float* %z.addr, metadata !10002, metadata !DIExpression()), !dbg !10003
  call void @llvm.dbg.declare(metadata float* %len, metadata !10004, metadata !DIExpression()), !dbg !10005
  %0 = load float, float* %x.addr, align 4, !dbg !10006
  %1 = load float, float* %x.addr, align 4, !dbg !10007
  %mul = fmul float %0, %1, !dbg !10008
  %2 = load float, float* %y.addr, align 4, !dbg !10009
  %3 = load float, float* %y.addr, align 4, !dbg !10010
  %mul1 = fmul float %2, %3, !dbg !10011
  %add = fadd float %mul, %mul1, !dbg !10012
  %4 = load float, float* %z.addr, align 4, !dbg !10013
  %5 = load float, float* %z.addr, align 4, !dbg !10014
  %mul2 = fmul float %4, %5, !dbg !10015
  %add3 = fadd float %add, %mul2, !dbg !10016
  %call = call float @sqrtf(float %add3) #5, !dbg !10017
  store float %call, float* %len, align 4, !dbg !10018
  %6 = load float, float* %len, align 4, !dbg !10019
  %cmp = fcmp ogt float %6, 0.000000e+00, !dbg !10021
  br i1 %cmp, label %if.then, label %if.else13, !dbg !10022

if.then:                                          ; preds = %entry
  %7 = load float, float* %x.addr, align 4, !dbg !10023
  %cmp4 = fcmp oeq float %7, 0.000000e+00, !dbg !10023
  br i1 %cmp4, label %land.lhs.true, label %if.else, !dbg !10023

land.lhs.true:                                    ; preds = %if.then
  %8 = load float, float* %y.addr, align 4, !dbg !10023
  %cmp5 = fcmp oeq float %8, 0.000000e+00, !dbg !10023
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !10026

if.then6:                                         ; preds = %land.lhs.true
  %9 = load float*, float** %r_u.addr, align 8, !dbg !10027
  store float 0.000000e+00, float* %9, align 4, !dbg !10029
  br label %if.end, !dbg !10030

if.else:                                          ; preds = %land.lhs.true, %if.then
  %10 = load float, float* %x.addr, align 4, !dbg !10031
  %11 = load float, float* %y.addr, align 4, !dbg !10033
  %call7 = call float @atan2f(float %10, float %11) #5, !dbg !10034
  %div = fdiv float %call7, 0x400921FB60000000, !dbg !10035
  %sub = fsub float 1.000000e+00, %div, !dbg !10036
  %div8 = fdiv float %sub, 2.000000e+00, !dbg !10037
  %12 = load float*, float** %r_u.addr, align 8, !dbg !10038
  store float %div8, float* %12, align 4, !dbg !10039
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %13 = load float, float* %z.addr, align 4, !dbg !10040
  %14 = load float, float* %len, align 4, !dbg !10041
  %div9 = fdiv float %13, %14, !dbg !10042
  %call10 = call float @saacos(float %div9), !dbg !10043
  %div11 = fdiv float %call10, 0x400921FB60000000, !dbg !10044
  %sub12 = fsub float 1.000000e+00, %div11, !dbg !10045
  %15 = load float*, float** %r_v.addr, align 8, !dbg !10046
  store float %sub12, float* %15, align 4, !dbg !10047
  br label %if.end14, !dbg !10048

if.else13:                                        ; preds = %entry
  %16 = load float*, float** %r_u.addr, align 8, !dbg !10049
  store float 0.000000e+00, float* %16, align 4, !dbg !10051
  %17 = load float*, float** %r_v.addr, align 8, !dbg !10052
  store float 0.000000e+00, float* %17, align 4, !dbg !10053
  br label %if.end14

if.end14:                                         ; preds = %if.else13, %if.end
  ret void, !dbg !10054
}

; Function Attrs: noinline nounwind uwtable
define internal float @saacos(float %fac) #0 !dbg !10055 {
entry:
  %retval = alloca float, align 4
  %fac.addr = alloca float, align 4
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !10058, metadata !DIExpression()), !dbg !10059
  %0 = load float, float* %fac.addr, align 4, !dbg !10060
  %cmp = fcmp ole float %0, -1.000000e+00, !dbg !10060
  br i1 %cmp, label %if.then, label %if.else, !dbg !10062

if.then:                                          ; preds = %entry
  store float 0x400921FB60000000, float* %retval, align 4, !dbg !10063
  br label %return, !dbg !10063

if.else:                                          ; preds = %entry
  %1 = load float, float* %fac.addr, align 4, !dbg !10064
  %cmp1 = fcmp oge float %1, 1.000000e+00, !dbg !10064
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !10066

if.then2:                                         ; preds = %if.else
  store float 0.000000e+00, float* %retval, align 4, !dbg !10067
  br label %return, !dbg !10067

if.else3:                                         ; preds = %if.else
  %2 = load float, float* %fac.addr, align 4, !dbg !10068
  %call = call float @acosf(float %2) #5, !dbg !10069
  store float %call, float* %retval, align 4, !dbg !10070
  br label %return, !dbg !10070

return:                                           ; preds = %if.else3, %if.then2, %if.then
  %3 = load float, float* %retval, align 4, !dbg !10071
  ret float %3, !dbg !10071
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @accumulate_vertex_normals(float* %n1, float* %n2, float* %n3, float* %n4, float* %f_no, float* %co1, float* %co2, float* %co3, float* %co4) #0 !dbg !10072 {
entry:
  %n1.addr = alloca float*, align 8
  %n2.addr = alloca float*, align 8
  %n3.addr = alloca float*, align 8
  %n4.addr = alloca float*, align 8
  %f_no.addr = alloca float*, align 8
  %co1.addr = alloca float*, align 8
  %co2.addr = alloca float*, align 8
  %co3.addr = alloca float*, align 8
  %co4.addr = alloca float*, align 8
  %vdiffs = alloca [4 x [3 x float]], align 16
  %nverts = alloca i32, align 4
  %vn = alloca [4 x float*], align 16
  %prev_edge = alloca float*, align 8
  %i = alloca i32, align 4
  %cur_edge = alloca float*, align 8
  %fac = alloca float, align 4
  store float* %n1, float** %n1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n1.addr, metadata !10075, metadata !DIExpression()), !dbg !10076
  store float* %n2, float** %n2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n2.addr, metadata !10077, metadata !DIExpression()), !dbg !10078
  store float* %n3, float** %n3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n3.addr, metadata !10079, metadata !DIExpression()), !dbg !10080
  store float* %n4, float** %n4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n4.addr, metadata !10081, metadata !DIExpression()), !dbg !10082
  store float* %f_no, float** %f_no.addr, align 8
  call void @llvm.dbg.declare(metadata float** %f_no.addr, metadata !10083, metadata !DIExpression()), !dbg !10084
  store float* %co1, float** %co1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co1.addr, metadata !10085, metadata !DIExpression()), !dbg !10086
  store float* %co2, float** %co2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co2.addr, metadata !10087, metadata !DIExpression()), !dbg !10088
  store float* %co3, float** %co3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co3.addr, metadata !10089, metadata !DIExpression()), !dbg !10090
  store float* %co4, float** %co4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co4.addr, metadata !10091, metadata !DIExpression()), !dbg !10092
  call void @llvm.dbg.declare(metadata [4 x [3 x float]]* %vdiffs, metadata !10093, metadata !DIExpression()), !dbg !10096
  call void @llvm.dbg.declare(metadata i32* %nverts, metadata !10097, metadata !DIExpression()), !dbg !10098
  %0 = load float*, float** %n4.addr, align 8, !dbg !10099
  %cmp = icmp ne float* %0, null, !dbg !10100
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10101

land.rhs:                                         ; preds = %entry
  %1 = load float*, float** %co4.addr, align 8, !dbg !10102
  %cmp1 = icmp ne float* %1, null, !dbg !10103
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !10104
  %3 = zext i1 %2 to i64, !dbg !10105
  %cond = select i1 %2, i32 4, i32 3, !dbg !10105
  store i32 %cond, i32* %nverts, align 4, !dbg !10098
  %arrayidx = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vdiffs, i64 0, i64 0, !dbg !10106
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !10106
  %4 = load float*, float** %co2.addr, align 8, !dbg !10107
  %5 = load float*, float** %co1.addr, align 8, !dbg !10108
  call void @sub_v3_v3v3(float* %arraydecay, float* %4, float* %5), !dbg !10109
  %arrayidx2 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vdiffs, i64 0, i64 1, !dbg !10110
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx2, i64 0, i64 0, !dbg !10110
  %6 = load float*, float** %co3.addr, align 8, !dbg !10111
  %7 = load float*, float** %co2.addr, align 8, !dbg !10112
  call void @sub_v3_v3v3(float* %arraydecay3, float* %6, float* %7), !dbg !10113
  %8 = load i32, i32* %nverts, align 4, !dbg !10114
  %cmp4 = icmp eq i32 %8, 3, !dbg !10116
  br i1 %cmp4, label %if.then, label %if.else, !dbg !10117

if.then:                                          ; preds = %land.end
  %arrayidx5 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vdiffs, i64 0, i64 2, !dbg !10118
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx5, i64 0, i64 0, !dbg !10118
  %9 = load float*, float** %co1.addr, align 8, !dbg !10120
  %10 = load float*, float** %co3.addr, align 8, !dbg !10121
  call void @sub_v3_v3v3(float* %arraydecay6, float* %9, float* %10), !dbg !10122
  br label %if.end, !dbg !10123

if.else:                                          ; preds = %land.end
  %arrayidx7 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vdiffs, i64 0, i64 2, !dbg !10124
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx7, i64 0, i64 0, !dbg !10124
  %11 = load float*, float** %co4.addr, align 8, !dbg !10126
  %12 = load float*, float** %co3.addr, align 8, !dbg !10127
  call void @sub_v3_v3v3(float* %arraydecay8, float* %11, float* %12), !dbg !10128
  %arrayidx9 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vdiffs, i64 0, i64 3, !dbg !10129
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx9, i64 0, i64 0, !dbg !10129
  %13 = load float*, float** %co1.addr, align 8, !dbg !10130
  %14 = load float*, float** %co4.addr, align 8, !dbg !10131
  call void @sub_v3_v3v3(float* %arraydecay10, float* %13, float* %14), !dbg !10132
  %arrayidx11 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vdiffs, i64 0, i64 3, !dbg !10133
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx11, i64 0, i64 0, !dbg !10133
  %call = call float @normalize_v3(float* %arraydecay12), !dbg !10134
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arrayidx13 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vdiffs, i64 0, i64 0, !dbg !10135
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx13, i64 0, i64 0, !dbg !10135
  %call15 = call float @normalize_v3(float* %arraydecay14), !dbg !10136
  %arrayidx16 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vdiffs, i64 0, i64 1, !dbg !10137
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx16, i64 0, i64 0, !dbg !10137
  %call18 = call float @normalize_v3(float* %arraydecay17), !dbg !10138
  %arrayidx19 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vdiffs, i64 0, i64 2, !dbg !10139
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx19, i64 0, i64 0, !dbg !10139
  %call21 = call float @normalize_v3(float* %arraydecay20), !dbg !10140
  call void @llvm.dbg.declare(metadata [4 x float*]* %vn, metadata !10141, metadata !DIExpression()), !dbg !10144
  %arrayinit.begin = getelementptr inbounds [4 x float*], [4 x float*]* %vn, i64 0, i64 0, !dbg !10145
  %15 = load float*, float** %n1.addr, align 8, !dbg !10146
  store float* %15, float** %arrayinit.begin, align 8, !dbg !10145
  %arrayinit.element = getelementptr inbounds float*, float** %arrayinit.begin, i64 1, !dbg !10145
  %16 = load float*, float** %n2.addr, align 8, !dbg !10147
  store float* %16, float** %arrayinit.element, align 8, !dbg !10145
  %arrayinit.element22 = getelementptr inbounds float*, float** %arrayinit.element, i64 1, !dbg !10145
  %17 = load float*, float** %n3.addr, align 8, !dbg !10148
  store float* %17, float** %arrayinit.element22, align 8, !dbg !10145
  %arrayinit.element23 = getelementptr inbounds float*, float** %arrayinit.element22, i64 1, !dbg !10145
  %18 = load float*, float** %n4.addr, align 8, !dbg !10149
  store float* %18, float** %arrayinit.element23, align 8, !dbg !10145
  call void @llvm.dbg.declare(metadata float** %prev_edge, metadata !10150, metadata !DIExpression()), !dbg !10151
  %19 = load i32, i32* %nverts, align 4, !dbg !10152
  %sub = sub nsw i32 %19, 1, !dbg !10153
  %idxprom = sext i32 %sub to i64, !dbg !10154
  %arrayidx24 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vdiffs, i64 0, i64 %idxprom, !dbg !10154
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx24, i64 0, i64 0, !dbg !10154
  store float* %arraydecay25, float** %prev_edge, align 8, !dbg !10151
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10155, metadata !DIExpression()), !dbg !10156
  store i32 0, i32* %i, align 4, !dbg !10157
  br label %for.cond, !dbg !10159

for.cond:                                         ; preds = %for.inc, %if.end
  %20 = load i32, i32* %i, align 4, !dbg !10160
  %21 = load i32, i32* %nverts, align 4, !dbg !10162
  %cmp26 = icmp slt i32 %20, %21, !dbg !10163
  br i1 %cmp26, label %for.body, label %for.end, !dbg !10164

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float** %cur_edge, metadata !10165, metadata !DIExpression()), !dbg !10167
  %22 = load i32, i32* %i, align 4, !dbg !10168
  %idxprom27 = sext i32 %22 to i64, !dbg !10169
  %arrayidx28 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vdiffs, i64 0, i64 %idxprom27, !dbg !10169
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx28, i64 0, i64 0, !dbg !10169
  store float* %arraydecay29, float** %cur_edge, align 8, !dbg !10167
  call void @llvm.dbg.declare(metadata float* %fac, metadata !10170, metadata !DIExpression()), !dbg !10171
  %23 = load float*, float** %cur_edge, align 8, !dbg !10172
  %24 = load float*, float** %prev_edge, align 8, !dbg !10173
  %call30 = call float @dot_v3v3(float* %23, float* %24), !dbg !10174
  %fneg = fneg float %call30, !dbg !10175
  %call31 = call float @saacos(float %fneg), !dbg !10176
  store float %call31, float* %fac, align 4, !dbg !10171
  %25 = load i32, i32* %i, align 4, !dbg !10177
  %idxprom32 = sext i32 %25 to i64, !dbg !10178
  %arrayidx33 = getelementptr inbounds [4 x float*], [4 x float*]* %vn, i64 0, i64 %idxprom32, !dbg !10178
  %26 = load float*, float** %arrayidx33, align 8, !dbg !10178
  %27 = load float*, float** %f_no.addr, align 8, !dbg !10179
  %28 = load float, float* %fac, align 4, !dbg !10180
  call void @madd_v3_v3fl(float* %26, float* %27, float %28), !dbg !10181
  %29 = load float*, float** %cur_edge, align 8, !dbg !10182
  store float* %29, float** %prev_edge, align 8, !dbg !10183
  br label %for.inc, !dbg !10184

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %i, align 4, !dbg !10185
  %inc = add nsw i32 %30, 1, !dbg !10185
  store i32 %inc, i32* %i, align 4, !dbg !10185
  br label %for.cond, !dbg !10186, !llvm.loop !10187

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10189
}

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !10190 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !10193, metadata !DIExpression()), !dbg !10194
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !10195, metadata !DIExpression()), !dbg !10196
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !10197, metadata !DIExpression()), !dbg !10198
  %0 = load float*, float** %a.addr, align 8, !dbg !10199
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !10199
  %1 = load float, float* %arrayidx, align 4, !dbg !10199
  %2 = load float, float* %f.addr, align 4, !dbg !10200
  %mul = fmul float %1, %2, !dbg !10201
  %3 = load float*, float** %r.addr, align 8, !dbg !10202
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !10202
  %4 = load float, float* %arrayidx1, align 4, !dbg !10203
  %add = fadd float %4, %mul, !dbg !10203
  store float %add, float* %arrayidx1, align 4, !dbg !10203
  %5 = load float*, float** %a.addr, align 8, !dbg !10204
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 1, !dbg !10204
  %6 = load float, float* %arrayidx2, align 4, !dbg !10204
  %7 = load float, float* %f.addr, align 4, !dbg !10205
  %mul3 = fmul float %6, %7, !dbg !10206
  %8 = load float*, float** %r.addr, align 8, !dbg !10207
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !10207
  %9 = load float, float* %arrayidx4, align 4, !dbg !10208
  %add5 = fadd float %9, %mul3, !dbg !10208
  store float %add5, float* %arrayidx4, align 4, !dbg !10208
  %10 = load float*, float** %a.addr, align 8, !dbg !10209
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !10209
  %11 = load float, float* %arrayidx6, align 4, !dbg !10209
  %12 = load float, float* %f.addr, align 4, !dbg !10210
  %mul7 = fmul float %11, %12, !dbg !10211
  %13 = load float*, float** %r.addr, align 8, !dbg !10212
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 2, !dbg !10212
  %14 = load float, float* %arrayidx8, align 4, !dbg !10213
  %add9 = fadd float %14, %mul7, !dbg !10213
  store float %add9, float* %arrayidx8, align 4, !dbg !10213
  ret void, !dbg !10214
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @accumulate_vertex_normals_poly(float** %vertnos, float* %polyno, float** %vertcos, [3 x float]* %vdiffs, i32 %nverts) #0 !dbg !10215 {
entry:
  %vertnos.addr = alloca float**, align 8
  %polyno.addr = alloca float*, align 8
  %vertcos.addr = alloca float**, align 8
  %vdiffs.addr = alloca [3 x float]*, align 8
  %nverts.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %prev_edge = alloca float*, align 8
  %cur_edge = alloca float*, align 8
  %fac = alloca float, align 4
  store float** %vertnos, float*** %vertnos.addr, align 8
  call void @llvm.dbg.declare(metadata float*** %vertnos.addr, metadata !10220, metadata !DIExpression()), !dbg !10221
  store float* %polyno, float** %polyno.addr, align 8
  call void @llvm.dbg.declare(metadata float** %polyno.addr, metadata !10222, metadata !DIExpression()), !dbg !10223
  store float** %vertcos, float*** %vertcos.addr, align 8
  call void @llvm.dbg.declare(metadata float*** %vertcos.addr, metadata !10224, metadata !DIExpression()), !dbg !10225
  store [3 x float]* %vdiffs, [3 x float]** %vdiffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vdiffs.addr, metadata !10226, metadata !DIExpression()), !dbg !10227
  store i32 %nverts, i32* %nverts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nverts.addr, metadata !10228, metadata !DIExpression()), !dbg !10229
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10230, metadata !DIExpression()), !dbg !10231
  store i32 0, i32* %i, align 4, !dbg !10232
  br label %for.cond, !dbg !10234

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10235
  %1 = load i32, i32* %nverts.addr, align 4, !dbg !10237
  %cmp = icmp slt i32 %0, %1, !dbg !10238
  br i1 %cmp, label %for.body, label %for.end, !dbg !10239

for.body:                                         ; preds = %for.cond
  %2 = load [3 x float]*, [3 x float]** %vdiffs.addr, align 8, !dbg !10240
  %3 = load i32, i32* %i, align 4, !dbg !10242
  %idxprom = sext i32 %3 to i64, !dbg !10240
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %2, i64 %idxprom, !dbg !10240
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !10240
  %4 = load float**, float*** %vertcos.addr, align 8, !dbg !10243
  %5 = load i32, i32* %i, align 4, !dbg !10244
  %add = add nsw i32 %5, 1, !dbg !10245
  %6 = load i32, i32* %nverts.addr, align 4, !dbg !10246
  %rem = srem i32 %add, %6, !dbg !10247
  %idxprom1 = sext i32 %rem to i64, !dbg !10243
  %arrayidx2 = getelementptr inbounds float*, float** %4, i64 %idxprom1, !dbg !10243
  %7 = load float*, float** %arrayidx2, align 8, !dbg !10243
  %8 = load float**, float*** %vertcos.addr, align 8, !dbg !10248
  %9 = load i32, i32* %i, align 4, !dbg !10249
  %idxprom3 = sext i32 %9 to i64, !dbg !10248
  %arrayidx4 = getelementptr inbounds float*, float** %8, i64 %idxprom3, !dbg !10248
  %10 = load float*, float** %arrayidx4, align 8, !dbg !10248
  call void @sub_v3_v3v3(float* %arraydecay, float* %7, float* %10), !dbg !10250
  %11 = load [3 x float]*, [3 x float]** %vdiffs.addr, align 8, !dbg !10251
  %12 = load i32, i32* %i, align 4, !dbg !10252
  %idxprom5 = sext i32 %12 to i64, !dbg !10251
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %11, i64 %idxprom5, !dbg !10251
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx6, i64 0, i64 0, !dbg !10251
  %call = call float @normalize_v3(float* %arraydecay7), !dbg !10253
  br label %for.inc, !dbg !10254

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !10255
  %inc = add nsw i32 %13, 1, !dbg !10255
  store i32 %inc, i32* %i, align 4, !dbg !10255
  br label %for.cond, !dbg !10256, !llvm.loop !10257

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float** %prev_edge, metadata !10259, metadata !DIExpression()), !dbg !10261
  %14 = load [3 x float]*, [3 x float]** %vdiffs.addr, align 8, !dbg !10262
  %15 = load i32, i32* %nverts.addr, align 4, !dbg !10263
  %sub = sub nsw i32 %15, 1, !dbg !10264
  %idxprom8 = sext i32 %sub to i64, !dbg !10262
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %14, i64 %idxprom8, !dbg !10262
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx9, i64 0, i64 0, !dbg !10262
  store float* %arraydecay10, float** %prev_edge, align 8, !dbg !10261
  store i32 0, i32* %i, align 4, !dbg !10265
  br label %for.cond11, !dbg !10267

for.cond11:                                       ; preds = %for.inc21, %for.end
  %16 = load i32, i32* %i, align 4, !dbg !10268
  %17 = load i32, i32* %nverts.addr, align 4, !dbg !10270
  %cmp12 = icmp slt i32 %16, %17, !dbg !10271
  br i1 %cmp12, label %for.body13, label %for.end23, !dbg !10272

for.body13:                                       ; preds = %for.cond11
  call void @llvm.dbg.declare(metadata float** %cur_edge, metadata !10273, metadata !DIExpression()), !dbg !10275
  %18 = load [3 x float]*, [3 x float]** %vdiffs.addr, align 8, !dbg !10276
  %19 = load i32, i32* %i, align 4, !dbg !10277
  %idxprom14 = sext i32 %19 to i64, !dbg !10276
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %18, i64 %idxprom14, !dbg !10276
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx15, i64 0, i64 0, !dbg !10276
  store float* %arraydecay16, float** %cur_edge, align 8, !dbg !10275
  call void @llvm.dbg.declare(metadata float* %fac, metadata !10278, metadata !DIExpression()), !dbg !10279
  %20 = load float*, float** %cur_edge, align 8, !dbg !10280
  %21 = load float*, float** %prev_edge, align 8, !dbg !10281
  %call17 = call float @dot_v3v3(float* %20, float* %21), !dbg !10282
  %fneg = fneg float %call17, !dbg !10283
  %call18 = call float @saacos(float %fneg), !dbg !10284
  store float %call18, float* %fac, align 4, !dbg !10279
  %22 = load float**, float*** %vertnos.addr, align 8, !dbg !10285
  %23 = load i32, i32* %i, align 4, !dbg !10286
  %idxprom19 = sext i32 %23 to i64, !dbg !10285
  %arrayidx20 = getelementptr inbounds float*, float** %22, i64 %idxprom19, !dbg !10285
  %24 = load float*, float** %arrayidx20, align 8, !dbg !10285
  %25 = load float*, float** %polyno.addr, align 8, !dbg !10287
  %26 = load float, float* %fac, align 4, !dbg !10288
  call void @madd_v3_v3fl(float* %24, float* %25, float %26), !dbg !10289
  %27 = load float*, float** %cur_edge, align 8, !dbg !10290
  store float* %27, float** %prev_edge, align 8, !dbg !10291
  br label %for.inc21, !dbg !10292

for.inc21:                                        ; preds = %for.body13
  %28 = load i32, i32* %i, align 4, !dbg !10293
  %inc22 = add nsw i32 %28, 1, !dbg !10293
  store i32 %inc22, i32* %i, align 4, !dbg !10293
  br label %for.cond11, !dbg !10294, !llvm.loop !10295

for.end23:                                        ; preds = %for.cond11
  ret void, !dbg !10297
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @tangent_from_uv(float* %uv1, float* %uv2, float* %uv3, float* %co1, float* %co2, float* %co3, float* %n, float* %r_tang) #0 !dbg !10298 {
entry:
  %uv1.addr = alloca float*, align 8
  %uv2.addr = alloca float*, align 8
  %uv3.addr = alloca float*, align 8
  %co1.addr = alloca float*, align 8
  %co2.addr = alloca float*, align 8
  %co3.addr = alloca float*, align 8
  %n.addr = alloca float*, align 8
  %r_tang.addr = alloca float*, align 8
  %s1 = alloca float, align 4
  %s2 = alloca float, align 4
  %t1 = alloca float, align 4
  %t2 = alloca float, align 4
  %det = alloca float, align 4
  %tangv = alloca [3 x float], align 4
  %ct = alloca [3 x float], align 4
  %e1 = alloca [3 x float], align 4
  %e2 = alloca [3 x float], align 4
  store float* %uv1, float** %uv1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv1.addr, metadata !10301, metadata !DIExpression()), !dbg !10302
  store float* %uv2, float** %uv2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv2.addr, metadata !10303, metadata !DIExpression()), !dbg !10304
  store float* %uv3, float** %uv3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv3.addr, metadata !10305, metadata !DIExpression()), !dbg !10306
  store float* %co1, float** %co1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co1.addr, metadata !10307, metadata !DIExpression()), !dbg !10308
  store float* %co2, float** %co2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co2.addr, metadata !10309, metadata !DIExpression()), !dbg !10310
  store float* %co3, float** %co3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co3.addr, metadata !10311, metadata !DIExpression()), !dbg !10312
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !10313, metadata !DIExpression()), !dbg !10314
  store float* %r_tang, float** %r_tang.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_tang.addr, metadata !10315, metadata !DIExpression()), !dbg !10316
  call void @llvm.dbg.declare(metadata float* %s1, metadata !10317, metadata !DIExpression()), !dbg !10318
  %0 = load float*, float** %uv2.addr, align 8, !dbg !10319
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !10319
  %1 = load float, float* %arrayidx, align 4, !dbg !10319
  %2 = load float*, float** %uv1.addr, align 8, !dbg !10320
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !10320
  %3 = load float, float* %arrayidx1, align 4, !dbg !10320
  %sub = fsub float %1, %3, !dbg !10321
  store float %sub, float* %s1, align 4, !dbg !10318
  call void @llvm.dbg.declare(metadata float* %s2, metadata !10322, metadata !DIExpression()), !dbg !10323
  %4 = load float*, float** %uv3.addr, align 8, !dbg !10324
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !10324
  %5 = load float, float* %arrayidx2, align 4, !dbg !10324
  %6 = load float*, float** %uv1.addr, align 8, !dbg !10325
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 0, !dbg !10325
  %7 = load float, float* %arrayidx3, align 4, !dbg !10325
  %sub4 = fsub float %5, %7, !dbg !10326
  store float %sub4, float* %s2, align 4, !dbg !10323
  call void @llvm.dbg.declare(metadata float* %t1, metadata !10327, metadata !DIExpression()), !dbg !10328
  %8 = load float*, float** %uv2.addr, align 8, !dbg !10329
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 1, !dbg !10329
  %9 = load float, float* %arrayidx5, align 4, !dbg !10329
  %10 = load float*, float** %uv1.addr, align 8, !dbg !10330
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 1, !dbg !10330
  %11 = load float, float* %arrayidx6, align 4, !dbg !10330
  %sub7 = fsub float %9, %11, !dbg !10331
  store float %sub7, float* %t1, align 4, !dbg !10328
  call void @llvm.dbg.declare(metadata float* %t2, metadata !10332, metadata !DIExpression()), !dbg !10333
  %12 = load float*, float** %uv3.addr, align 8, !dbg !10334
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 1, !dbg !10334
  %13 = load float, float* %arrayidx8, align 4, !dbg !10334
  %14 = load float*, float** %uv1.addr, align 8, !dbg !10335
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 1, !dbg !10335
  %15 = load float, float* %arrayidx9, align 4, !dbg !10335
  %sub10 = fsub float %13, %15, !dbg !10336
  store float %sub10, float* %t2, align 4, !dbg !10333
  call void @llvm.dbg.declare(metadata float* %det, metadata !10337, metadata !DIExpression()), !dbg !10338
  %16 = load float, float* %s1, align 4, !dbg !10339
  %17 = load float, float* %t2, align 4, !dbg !10340
  %mul = fmul float %16, %17, !dbg !10341
  %18 = load float, float* %s2, align 4, !dbg !10342
  %19 = load float, float* %t1, align 4, !dbg !10343
  %mul11 = fmul float %18, %19, !dbg !10344
  %sub12 = fsub float %mul, %mul11, !dbg !10345
  store float %sub12, float* %det, align 4, !dbg !10338
  %20 = load float, float* %det, align 4, !dbg !10346
  %cmp = fcmp une float %20, 0.000000e+00, !dbg !10348
  br i1 %cmp, label %if.then, label %if.else, !dbg !10349

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %tangv, metadata !10350, metadata !DIExpression()), !dbg !10352
  call void @llvm.dbg.declare(metadata [3 x float]* %ct, metadata !10353, metadata !DIExpression()), !dbg !10354
  call void @llvm.dbg.declare(metadata [3 x float]* %e1, metadata !10355, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.declare(metadata [3 x float]* %e2, metadata !10357, metadata !DIExpression()), !dbg !10358
  %21 = load float, float* %det, align 4, !dbg !10359
  %div = fdiv float 1.000000e+00, %21, !dbg !10360
  store float %div, float* %det, align 4, !dbg !10361
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !10362
  %22 = load float*, float** %co1.addr, align 8, !dbg !10363
  %23 = load float*, float** %co2.addr, align 8, !dbg !10364
  call void @sub_v3_v3v3(float* %arraydecay, float* %22, float* %23), !dbg !10365
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !10366
  %24 = load float*, float** %co1.addr, align 8, !dbg !10367
  %25 = load float*, float** %co3.addr, align 8, !dbg !10368
  call void @sub_v3_v3v3(float* %arraydecay13, float* %24, float* %25), !dbg !10369
  %26 = load float, float* %t2, align 4, !dbg !10370
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !10371
  %27 = load float, float* %arrayidx14, align 4, !dbg !10371
  %mul15 = fmul float %26, %27, !dbg !10372
  %28 = load float, float* %t1, align 4, !dbg !10373
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !10374
  %29 = load float, float* %arrayidx16, align 4, !dbg !10374
  %mul17 = fmul float %28, %29, !dbg !10375
  %sub18 = fsub float %mul15, %mul17, !dbg !10376
  %30 = load float, float* %det, align 4, !dbg !10377
  %mul19 = fmul float %sub18, %30, !dbg !10378
  %31 = load float*, float** %r_tang.addr, align 8, !dbg !10379
  %arrayidx20 = getelementptr inbounds float, float* %31, i64 0, !dbg !10379
  store float %mul19, float* %arrayidx20, align 4, !dbg !10380
  %32 = load float, float* %t2, align 4, !dbg !10381
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 1, !dbg !10382
  %33 = load float, float* %arrayidx21, align 4, !dbg !10382
  %mul22 = fmul float %32, %33, !dbg !10383
  %34 = load float, float* %t1, align 4, !dbg !10384
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 1, !dbg !10385
  %35 = load float, float* %arrayidx23, align 4, !dbg !10385
  %mul24 = fmul float %34, %35, !dbg !10386
  %sub25 = fsub float %mul22, %mul24, !dbg !10387
  %36 = load float, float* %det, align 4, !dbg !10388
  %mul26 = fmul float %sub25, %36, !dbg !10389
  %37 = load float*, float** %r_tang.addr, align 8, !dbg !10390
  %arrayidx27 = getelementptr inbounds float, float* %37, i64 1, !dbg !10390
  store float %mul26, float* %arrayidx27, align 4, !dbg !10391
  %38 = load float, float* %t2, align 4, !dbg !10392
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 2, !dbg !10393
  %39 = load float, float* %arrayidx28, align 4, !dbg !10393
  %mul29 = fmul float %38, %39, !dbg !10394
  %40 = load float, float* %t1, align 4, !dbg !10395
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 2, !dbg !10396
  %41 = load float, float* %arrayidx30, align 4, !dbg !10396
  %mul31 = fmul float %40, %41, !dbg !10397
  %sub32 = fsub float %mul29, %mul31, !dbg !10398
  %42 = load float, float* %det, align 4, !dbg !10399
  %mul33 = fmul float %sub32, %42, !dbg !10400
  %43 = load float*, float** %r_tang.addr, align 8, !dbg !10401
  %arrayidx34 = getelementptr inbounds float, float* %43, i64 2, !dbg !10401
  store float %mul33, float* %arrayidx34, align 4, !dbg !10402
  %44 = load float, float* %s1, align 4, !dbg !10403
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !10404
  %45 = load float, float* %arrayidx35, align 4, !dbg !10404
  %mul36 = fmul float %44, %45, !dbg !10405
  %46 = load float, float* %s2, align 4, !dbg !10406
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !10407
  %47 = load float, float* %arrayidx37, align 4, !dbg !10407
  %mul38 = fmul float %46, %47, !dbg !10408
  %sub39 = fsub float %mul36, %mul38, !dbg !10409
  %48 = load float, float* %det, align 4, !dbg !10410
  %mul40 = fmul float %sub39, %48, !dbg !10411
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %tangv, i64 0, i64 0, !dbg !10412
  store float %mul40, float* %arrayidx41, align 4, !dbg !10413
  %49 = load float, float* %s1, align 4, !dbg !10414
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 1, !dbg !10415
  %50 = load float, float* %arrayidx42, align 4, !dbg !10415
  %mul43 = fmul float %49, %50, !dbg !10416
  %51 = load float, float* %s2, align 4, !dbg !10417
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 1, !dbg !10418
  %52 = load float, float* %arrayidx44, align 4, !dbg !10418
  %mul45 = fmul float %51, %52, !dbg !10419
  %sub46 = fsub float %mul43, %mul45, !dbg !10420
  %53 = load float, float* %det, align 4, !dbg !10421
  %mul47 = fmul float %sub46, %53, !dbg !10422
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %tangv, i64 0, i64 1, !dbg !10423
  store float %mul47, float* %arrayidx48, align 4, !dbg !10424
  %54 = load float, float* %s1, align 4, !dbg !10425
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 2, !dbg !10426
  %55 = load float, float* %arrayidx49, align 4, !dbg !10426
  %mul50 = fmul float %54, %55, !dbg !10427
  %56 = load float, float* %s2, align 4, !dbg !10428
  %arrayidx51 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 2, !dbg !10429
  %57 = load float, float* %arrayidx51, align 4, !dbg !10429
  %mul52 = fmul float %56, %57, !dbg !10430
  %sub53 = fsub float %mul50, %mul52, !dbg !10431
  %58 = load float, float* %det, align 4, !dbg !10432
  %mul54 = fmul float %sub53, %58, !dbg !10433
  %arrayidx55 = getelementptr inbounds [3 x float], [3 x float]* %tangv, i64 0, i64 2, !dbg !10434
  store float %mul54, float* %arrayidx55, align 4, !dbg !10435
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %ct, i64 0, i64 0, !dbg !10436
  %59 = load float*, float** %r_tang.addr, align 8, !dbg !10437
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %tangv, i64 0, i64 0, !dbg !10438
  call void @cross_v3_v3v3(float* %arraydecay56, float* %59, float* %arraydecay57), !dbg !10439
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %ct, i64 0, i64 0, !dbg !10440
  %60 = load float*, float** %n.addr, align 8, !dbg !10442
  %call = call float @dot_v3v3(float* %arraydecay58, float* %60), !dbg !10443
  %cmp59 = fcmp olt float %call, 0.000000e+00, !dbg !10444
  br i1 %cmp59, label %if.then60, label %if.end, !dbg !10445

if.then60:                                        ; preds = %if.then
  %61 = load float*, float** %r_tang.addr, align 8, !dbg !10446
  call void @negate_v3(float* %61), !dbg !10448
  br label %if.end, !dbg !10449

if.end:                                           ; preds = %if.then60, %if.then
  br label %if.end61, !dbg !10450

if.else:                                          ; preds = %entry
  %62 = load float*, float** %r_tang.addr, align 8, !dbg !10451
  call void @zero_v3(float* %62), !dbg !10453
  br label %if.end61

if.end61:                                         ; preds = %if.else, %if.end
  ret void, !dbg !10454
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @vcloud_estimate_transform(i32 %list_size, [3 x float]* %pos, float* %weight, [3 x float]* %rpos, float* %rweight, float* %lloc, float* %rloc, [3 x float]* %lrot, [3 x float]* %lscale) #0 !dbg !10455 {
entry:
  %list_size.addr = alloca i32, align 4
  %pos.addr = alloca [3 x float]*, align 8
  %weight.addr = alloca float*, align 8
  %rpos.addr = alloca [3 x float]*, align 8
  %rweight.addr = alloca float*, align 8
  %lloc.addr = alloca float*, align 8
  %rloc.addr = alloca float*, align 8
  %lrot.addr = alloca [3 x float]*, align 8
  %lscale.addr = alloca [3 x float]*, align 8
  %accu_com = alloca [3 x float], align 4
  %accu_rcom = alloca [3 x float], align 4
  %accu_weight = alloca float, align 4
  %accu_rweight = alloca float, align 4
  %eps = alloca float, align 4
  %a = alloca i32, align 4
  %v = alloca [3 x float], align 4
  %v32 = alloca [3 x float], align 4
  %m = alloca [3 x [3 x float]], align 16
  %mr = alloca [3 x [3 x float]], align 16
  %q = alloca [3 x [3 x float]], align 16
  %qi = alloca [3 x [3 x float]], align 16
  %va = alloca [3 x float], align 4
  %vb = alloca [3 x float], align 4
  %stunt = alloca [3 x float], align 4
  %odet = alloca float, align 4
  %ndet = alloca float, align 4
  %i = alloca i32, align 4
  %imax = alloca i32, align 4
  %scale = alloca [3 x [3 x float]], align 16
  %irot = alloca [3 x [3 x float]], align 16
  store i32 %list_size, i32* %list_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %list_size.addr, metadata !10458, metadata !DIExpression()), !dbg !10459
  store [3 x float]* %pos, [3 x float]** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %pos.addr, metadata !10460, metadata !DIExpression()), !dbg !10461
  store float* %weight, float** %weight.addr, align 8
  call void @llvm.dbg.declare(metadata float** %weight.addr, metadata !10462, metadata !DIExpression()), !dbg !10463
  store [3 x float]* %rpos, [3 x float]** %rpos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %rpos.addr, metadata !10464, metadata !DIExpression()), !dbg !10465
  store float* %rweight, float** %rweight.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rweight.addr, metadata !10466, metadata !DIExpression()), !dbg !10467
  store float* %lloc, float** %lloc.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lloc.addr, metadata !10468, metadata !DIExpression()), !dbg !10469
  store float* %rloc, float** %rloc.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rloc.addr, metadata !10470, metadata !DIExpression()), !dbg !10471
  store [3 x float]* %lrot, [3 x float]** %lrot.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %lrot.addr, metadata !10472, metadata !DIExpression()), !dbg !10473
  store [3 x float]* %lscale, [3 x float]** %lscale.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %lscale.addr, metadata !10474, metadata !DIExpression()), !dbg !10475
  call void @llvm.dbg.declare(metadata [3 x float]* %accu_com, metadata !10476, metadata !DIExpression()), !dbg !10477
  %0 = bitcast [3 x float]* %accu_com to i8*, !dbg !10477
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 12, i1 false), !dbg !10477
  call void @llvm.dbg.declare(metadata [3 x float]* %accu_rcom, metadata !10478, metadata !DIExpression()), !dbg !10479
  %1 = bitcast [3 x float]* %accu_rcom to i8*, !dbg !10479
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 12, i1 false), !dbg !10479
  call void @llvm.dbg.declare(metadata float* %accu_weight, metadata !10480, metadata !DIExpression()), !dbg !10481
  store float 0.000000e+00, float* %accu_weight, align 4, !dbg !10481
  call void @llvm.dbg.declare(metadata float* %accu_rweight, metadata !10482, metadata !DIExpression()), !dbg !10483
  store float 0.000000e+00, float* %accu_rweight, align 4, !dbg !10483
  call void @llvm.dbg.declare(metadata float* %eps, metadata !10484, metadata !DIExpression()), !dbg !10485
  store float 0x3EB0C6F7A0000000, float* %eps, align 4, !dbg !10485
  call void @llvm.dbg.declare(metadata i32* %a, metadata !10486, metadata !DIExpression()), !dbg !10487
  %2 = load float*, float** %lloc.addr, align 8, !dbg !10488
  %tobool = icmp ne float* %2, null, !dbg !10488
  br i1 %tobool, label %if.then, label %if.end, !dbg !10490

if.then:                                          ; preds = %entry
  %3 = load float*, float** %lloc.addr, align 8, !dbg !10491
  call void @zero_v3(float* %3), !dbg !10492
  br label %if.end, !dbg !10492

if.end:                                           ; preds = %if.then, %entry
  %4 = load float*, float** %rloc.addr, align 8, !dbg !10493
  %tobool1 = icmp ne float* %4, null, !dbg !10493
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !10495

if.then2:                                         ; preds = %if.end
  %5 = load float*, float** %rloc.addr, align 8, !dbg !10496
  call void @zero_v3(float* %5), !dbg !10497
  br label %if.end3, !dbg !10497

if.end3:                                          ; preds = %if.then2, %if.end
  %6 = load [3 x float]*, [3 x float]** %lrot.addr, align 8, !dbg !10498
  %tobool4 = icmp ne [3 x float]* %6, null, !dbg !10498
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !10500

if.then5:                                         ; preds = %if.end3
  %7 = load [3 x float]*, [3 x float]** %lrot.addr, align 8, !dbg !10501
  call void @unit_m3([3 x float]* %7), !dbg !10502
  br label %if.end6, !dbg !10502

if.end6:                                          ; preds = %if.then5, %if.end3
  %8 = load [3 x float]*, [3 x float]** %lscale.addr, align 8, !dbg !10503
  %tobool7 = icmp ne [3 x float]* %8, null, !dbg !10503
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !10505

if.then8:                                         ; preds = %if.end6
  %9 = load [3 x float]*, [3 x float]** %lscale.addr, align 8, !dbg !10506
  call void @unit_m3([3 x float]* %9), !dbg !10507
  br label %if.end9, !dbg !10507

if.end9:                                          ; preds = %if.then8, %if.end6
  %10 = load [3 x float]*, [3 x float]** %pos.addr, align 8, !dbg !10508
  %tobool10 = icmp ne [3 x float]* %10, null, !dbg !10508
  br i1 %tobool10, label %land.lhs.true, label %if.end253, !dbg !10510

land.lhs.true:                                    ; preds = %if.end9
  %11 = load [3 x float]*, [3 x float]** %rpos.addr, align 8, !dbg !10511
  %tobool11 = icmp ne [3 x float]* %11, null, !dbg !10511
  br i1 %tobool11, label %land.lhs.true12, label %if.end253, !dbg !10512

land.lhs.true12:                                  ; preds = %land.lhs.true
  %12 = load i32, i32* %list_size.addr, align 4, !dbg !10513
  %cmp = icmp sgt i32 %12, 0, !dbg !10514
  br i1 %cmp, label %if.then13, label %if.end253, !dbg !10515

if.then13:                                        ; preds = %land.lhs.true12
  store i32 0, i32* %a, align 4, !dbg !10516
  br label %for.cond, !dbg !10519

for.cond:                                         ; preds = %for.inc, %if.then13
  %13 = load i32, i32* %a, align 4, !dbg !10520
  %14 = load i32, i32* %list_size.addr, align 4, !dbg !10522
  %cmp14 = icmp slt i32 %13, %14, !dbg !10523
  br i1 %cmp14, label %for.body, label %for.end, !dbg !10524

for.body:                                         ; preds = %for.cond
  %15 = load float*, float** %weight.addr, align 8, !dbg !10525
  %tobool15 = icmp ne float* %15, null, !dbg !10525
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !10528

if.then16:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata [3 x float]* %v, metadata !10529, metadata !DIExpression()), !dbg !10531
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !10532
  %16 = load [3 x float]*, [3 x float]** %pos.addr, align 8, !dbg !10533
  %17 = load i32, i32* %a, align 4, !dbg !10534
  %idxprom = sext i32 %17 to i64, !dbg !10533
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %16, i64 %idxprom, !dbg !10533
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !10533
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay17), !dbg !10535
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !10536
  %18 = load float*, float** %weight.addr, align 8, !dbg !10537
  %19 = load i32, i32* %a, align 4, !dbg !10538
  %idxprom19 = sext i32 %19 to i64, !dbg !10537
  %arrayidx20 = getelementptr inbounds float, float* %18, i64 %idxprom19, !dbg !10537
  %20 = load float, float* %arrayidx20, align 4, !dbg !10537
  call void @mul_v3_fl(float* %arraydecay18, float %20), !dbg !10539
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %accu_com, i64 0, i64 0, !dbg !10540
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !10541
  call void @add_v3_v3(float* %arraydecay21, float* %arraydecay22), !dbg !10542
  %21 = load float*, float** %weight.addr, align 8, !dbg !10543
  %22 = load i32, i32* %a, align 4, !dbg !10544
  %idxprom23 = sext i32 %22 to i64, !dbg !10543
  %arrayidx24 = getelementptr inbounds float, float* %21, i64 %idxprom23, !dbg !10543
  %23 = load float, float* %arrayidx24, align 4, !dbg !10543
  %24 = load float, float* %accu_weight, align 4, !dbg !10545
  %add = fadd float %24, %23, !dbg !10545
  store float %add, float* %accu_weight, align 4, !dbg !10545
  br label %if.end29, !dbg !10546

if.else:                                          ; preds = %for.body
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %accu_com, i64 0, i64 0, !dbg !10547
  %25 = load [3 x float]*, [3 x float]** %pos.addr, align 8, !dbg !10549
  %26 = load i32, i32* %a, align 4, !dbg !10550
  %idxprom26 = sext i32 %26 to i64, !dbg !10549
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %25, i64 %idxprom26, !dbg !10549
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx27, i64 0, i64 0, !dbg !10549
  call void @add_v3_v3(float* %arraydecay25, float* %arraydecay28), !dbg !10551
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then16
  %27 = load float*, float** %rweight.addr, align 8, !dbg !10552
  %tobool30 = icmp ne float* %27, null, !dbg !10552
  br i1 %tobool30, label %if.then31, label %if.else45, !dbg !10554

if.then31:                                        ; preds = %if.end29
  call void @llvm.dbg.declare(metadata [3 x float]* %v32, metadata !10555, metadata !DIExpression()), !dbg !10557
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %v32, i64 0, i64 0, !dbg !10558
  %28 = load [3 x float]*, [3 x float]** %rpos.addr, align 8, !dbg !10559
  %29 = load i32, i32* %a, align 4, !dbg !10560
  %idxprom34 = sext i32 %29 to i64, !dbg !10559
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %28, i64 %idxprom34, !dbg !10559
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx35, i64 0, i64 0, !dbg !10559
  call void @copy_v3_v3(float* %arraydecay33, float* %arraydecay36), !dbg !10561
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %v32, i64 0, i64 0, !dbg !10562
  %30 = load float*, float** %rweight.addr, align 8, !dbg !10563
  %31 = load i32, i32* %a, align 4, !dbg !10564
  %idxprom38 = sext i32 %31 to i64, !dbg !10563
  %arrayidx39 = getelementptr inbounds float, float* %30, i64 %idxprom38, !dbg !10563
  %32 = load float, float* %arrayidx39, align 4, !dbg !10563
  call void @mul_v3_fl(float* %arraydecay37, float %32), !dbg !10565
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %accu_rcom, i64 0, i64 0, !dbg !10566
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %v32, i64 0, i64 0, !dbg !10567
  call void @add_v3_v3(float* %arraydecay40, float* %arraydecay41), !dbg !10568
  %33 = load float*, float** %rweight.addr, align 8, !dbg !10569
  %34 = load i32, i32* %a, align 4, !dbg !10570
  %idxprom42 = sext i32 %34 to i64, !dbg !10569
  %arrayidx43 = getelementptr inbounds float, float* %33, i64 %idxprom42, !dbg !10569
  %35 = load float, float* %arrayidx43, align 4, !dbg !10569
  %36 = load float, float* %accu_rweight, align 4, !dbg !10571
  %add44 = fadd float %36, %35, !dbg !10571
  store float %add44, float* %accu_rweight, align 4, !dbg !10571
  br label %if.end50, !dbg !10572

if.else45:                                        ; preds = %if.end29
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %accu_rcom, i64 0, i64 0, !dbg !10573
  %37 = load [3 x float]*, [3 x float]** %rpos.addr, align 8, !dbg !10575
  %38 = load i32, i32* %a, align 4, !dbg !10576
  %idxprom47 = sext i32 %38 to i64, !dbg !10575
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %37, i64 %idxprom47, !dbg !10575
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx48, i64 0, i64 0, !dbg !10575
  call void @add_v3_v3(float* %arraydecay46, float* %arraydecay49), !dbg !10577
  br label %if.end50

if.end50:                                         ; preds = %if.else45, %if.then31
  br label %for.inc, !dbg !10578

for.inc:                                          ; preds = %if.end50
  %39 = load i32, i32* %a, align 4, !dbg !10579
  %inc = add nsw i32 %39, 1, !dbg !10579
  store i32 %inc, i32* %a, align 4, !dbg !10579
  br label %for.cond, !dbg !10580, !llvm.loop !10581

for.end:                                          ; preds = %for.cond
  %40 = load float*, float** %weight.addr, align 8, !dbg !10583
  %tobool51 = icmp ne float* %40, null, !dbg !10583
  br i1 %tobool51, label %lor.lhs.false, label %if.then53, !dbg !10585

lor.lhs.false:                                    ; preds = %for.end
  %41 = load float*, float** %rweight.addr, align 8, !dbg !10586
  %tobool52 = icmp ne float* %41, null, !dbg !10586
  br i1 %tobool52, label %if.end54, label %if.then53, !dbg !10587

if.then53:                                        ; preds = %lor.lhs.false, %for.end
  %42 = load i32, i32* %list_size.addr, align 4, !dbg !10588
  %conv = sitofp i32 %42 to float, !dbg !10590
  store float %conv, float* %accu_rweight, align 4, !dbg !10591
  store float %conv, float* %accu_weight, align 4, !dbg !10592
  br label %if.end54, !dbg !10593

if.end54:                                         ; preds = %if.then53, %lor.lhs.false
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %accu_com, i64 0, i64 0, !dbg !10594
  %43 = load float, float* %accu_weight, align 4, !dbg !10595
  %div = fdiv float 1.000000e+00, %43, !dbg !10596
  call void @mul_v3_fl(float* %arraydecay55, float %div), !dbg !10597
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %accu_rcom, i64 0, i64 0, !dbg !10598
  %44 = load float, float* %accu_rweight, align 4, !dbg !10599
  %div57 = fdiv float 1.000000e+00, %44, !dbg !10600
  call void @mul_v3_fl(float* %arraydecay56, float %div57), !dbg !10601
  %45 = load float*, float** %lloc.addr, align 8, !dbg !10602
  %tobool58 = icmp ne float* %45, null, !dbg !10602
  br i1 %tobool58, label %if.then59, label %if.end61, !dbg !10604

if.then59:                                        ; preds = %if.end54
  %46 = load float*, float** %lloc.addr, align 8, !dbg !10605
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %accu_com, i64 0, i64 0, !dbg !10606
  call void @copy_v3_v3(float* %46, float* %arraydecay60), !dbg !10607
  br label %if.end61, !dbg !10607

if.end61:                                         ; preds = %if.then59, %if.end54
  %47 = load float*, float** %rloc.addr, align 8, !dbg !10608
  %tobool62 = icmp ne float* %47, null, !dbg !10608
  br i1 %tobool62, label %if.then63, label %if.end65, !dbg !10610

if.then63:                                        ; preds = %if.end61
  %48 = load float*, float** %rloc.addr, align 8, !dbg !10611
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %accu_rcom, i64 0, i64 0, !dbg !10612
  call void @copy_v3_v3(float* %48, float* %arraydecay64), !dbg !10613
  br label %if.end65, !dbg !10613

if.end65:                                         ; preds = %if.then63, %if.end61
  %49 = load [3 x float]*, [3 x float]** %lrot.addr, align 8, !dbg !10614
  %tobool66 = icmp ne [3 x float]* %49, null, !dbg !10614
  br i1 %tobool66, label %if.then69, label %lor.lhs.false67, !dbg !10616

lor.lhs.false67:                                  ; preds = %if.end65
  %50 = load [3 x float]*, [3 x float]** %lscale.addr, align 8, !dbg !10617
  %tobool68 = icmp ne [3 x float]* %50, null, !dbg !10617
  br i1 %tobool68, label %if.then69, label %if.end252, !dbg !10618

if.then69:                                        ; preds = %lor.lhs.false67, %if.end65
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %m, metadata !10619, metadata !DIExpression()), !dbg !10621
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mr, metadata !10622, metadata !DIExpression()), !dbg !10623
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %q, metadata !10624, metadata !DIExpression()), !dbg !10625
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %qi, metadata !10626, metadata !DIExpression()), !dbg !10627
  call void @llvm.dbg.declare(metadata [3 x float]* %va, metadata !10628, metadata !DIExpression()), !dbg !10629
  call void @llvm.dbg.declare(metadata [3 x float]* %vb, metadata !10630, metadata !DIExpression()), !dbg !10631
  call void @llvm.dbg.declare(metadata [3 x float]* %stunt, metadata !10632, metadata !DIExpression()), !dbg !10633
  call void @llvm.dbg.declare(metadata float* %odet, metadata !10634, metadata !DIExpression()), !dbg !10635
  call void @llvm.dbg.declare(metadata float* %ndet, metadata !10636, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10638, metadata !DIExpression()), !dbg !10639
  store i32 0, i32* %i, align 4, !dbg !10639
  call void @llvm.dbg.declare(metadata i32* %imax, metadata !10640, metadata !DIExpression()), !dbg !10641
  store i32 15, i32* %imax, align 4, !dbg !10641
  %arraydecay70 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %m, i64 0, i64 0, !dbg !10642
  call void @zero_m3([3 x float]* %arraydecay70), !dbg !10643
  %arraydecay71 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mr, i64 0, i64 0, !dbg !10644
  call void @zero_m3([3 x float]* %arraydecay71), !dbg !10645
  store i32 0, i32* %a, align 4, !dbg !10646
  br label %for.cond72, !dbg !10648

for.cond72:                                       ; preds = %for.inc193, %if.then69
  %51 = load i32, i32* %a, align 4, !dbg !10649
  %52 = load i32, i32* %list_size.addr, align 4, !dbg !10651
  %cmp73 = icmp slt i32 %51, %52, !dbg !10652
  br i1 %cmp73, label %for.body75, label %for.end195, !dbg !10653

for.body75:                                       ; preds = %for.cond72
  %arraydecay76 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 0, !dbg !10654
  %53 = load [3 x float]*, [3 x float]** %rpos.addr, align 8, !dbg !10656
  %54 = load i32, i32* %a, align 4, !dbg !10657
  %idxprom77 = sext i32 %54 to i64, !dbg !10656
  %arrayidx78 = getelementptr inbounds [3 x float], [3 x float]* %53, i64 %idxprom77, !dbg !10656
  %arraydecay79 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx78, i64 0, i64 0, !dbg !10656
  %arraydecay80 = getelementptr inbounds [3 x float], [3 x float]* %accu_rcom, i64 0, i64 0, !dbg !10658
  call void @sub_v3_v3v3(float* %arraydecay76, float* %arraydecay79, float* %arraydecay80), !dbg !10659
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %vb, i64 0, i64 0, !dbg !10660
  %55 = load [3 x float]*, [3 x float]** %pos.addr, align 8, !dbg !10661
  %56 = load i32, i32* %a, align 4, !dbg !10662
  %idxprom82 = sext i32 %56 to i64, !dbg !10661
  %arrayidx83 = getelementptr inbounds [3 x float], [3 x float]* %55, i64 %idxprom82, !dbg !10661
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx83, i64 0, i64 0, !dbg !10661
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %accu_com, i64 0, i64 0, !dbg !10663
  call void @sub_v3_v3v3(float* %arraydecay81, float* %arraydecay84, float* %arraydecay85), !dbg !10664
  %arrayidx86 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 0, !dbg !10665
  %57 = load float, float* %arrayidx86, align 4, !dbg !10665
  %arrayidx87 = getelementptr inbounds [3 x float], [3 x float]* %vb, i64 0, i64 0, !dbg !10666
  %58 = load float, float* %arrayidx87, align 4, !dbg !10666
  %mul = fmul float %57, %58, !dbg !10667
  %arrayidx88 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %m, i64 0, i64 0, !dbg !10668
  %arrayidx89 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx88, i64 0, i64 0, !dbg !10668
  %59 = load float, float* %arrayidx89, align 16, !dbg !10669
  %add90 = fadd float %59, %mul, !dbg !10669
  store float %add90, float* %arrayidx89, align 16, !dbg !10669
  %arrayidx91 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 0, !dbg !10670
  %60 = load float, float* %arrayidx91, align 4, !dbg !10670
  %arrayidx92 = getelementptr inbounds [3 x float], [3 x float]* %vb, i64 0, i64 1, !dbg !10671
  %61 = load float, float* %arrayidx92, align 4, !dbg !10671
  %mul93 = fmul float %60, %61, !dbg !10672
  %arrayidx94 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %m, i64 0, i64 0, !dbg !10673
  %arrayidx95 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx94, i64 0, i64 1, !dbg !10673
  %62 = load float, float* %arrayidx95, align 4, !dbg !10674
  %add96 = fadd float %62, %mul93, !dbg !10674
  store float %add96, float* %arrayidx95, align 4, !dbg !10674
  %arrayidx97 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 0, !dbg !10675
  %63 = load float, float* %arrayidx97, align 4, !dbg !10675
  %arrayidx98 = getelementptr inbounds [3 x float], [3 x float]* %vb, i64 0, i64 2, !dbg !10676
  %64 = load float, float* %arrayidx98, align 4, !dbg !10676
  %mul99 = fmul float %63, %64, !dbg !10677
  %arrayidx100 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %m, i64 0, i64 0, !dbg !10678
  %arrayidx101 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx100, i64 0, i64 2, !dbg !10678
  %65 = load float, float* %arrayidx101, align 8, !dbg !10679
  %add102 = fadd float %65, %mul99, !dbg !10679
  store float %add102, float* %arrayidx101, align 8, !dbg !10679
  %arrayidx103 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 1, !dbg !10680
  %66 = load float, float* %arrayidx103, align 4, !dbg !10680
  %arrayidx104 = getelementptr inbounds [3 x float], [3 x float]* %vb, i64 0, i64 0, !dbg !10681
  %67 = load float, float* %arrayidx104, align 4, !dbg !10681
  %mul105 = fmul float %66, %67, !dbg !10682
  %arrayidx106 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %m, i64 0, i64 1, !dbg !10683
  %arrayidx107 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx106, i64 0, i64 0, !dbg !10683
  %68 = load float, float* %arrayidx107, align 4, !dbg !10684
  %add108 = fadd float %68, %mul105, !dbg !10684
  store float %add108, float* %arrayidx107, align 4, !dbg !10684
  %arrayidx109 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 1, !dbg !10685
  %69 = load float, float* %arrayidx109, align 4, !dbg !10685
  %arrayidx110 = getelementptr inbounds [3 x float], [3 x float]* %vb, i64 0, i64 1, !dbg !10686
  %70 = load float, float* %arrayidx110, align 4, !dbg !10686
  %mul111 = fmul float %69, %70, !dbg !10687
  %arrayidx112 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %m, i64 0, i64 1, !dbg !10688
  %arrayidx113 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx112, i64 0, i64 1, !dbg !10688
  %71 = load float, float* %arrayidx113, align 4, !dbg !10689
  %add114 = fadd float %71, %mul111, !dbg !10689
  store float %add114, float* %arrayidx113, align 4, !dbg !10689
  %arrayidx115 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 1, !dbg !10690
  %72 = load float, float* %arrayidx115, align 4, !dbg !10690
  %arrayidx116 = getelementptr inbounds [3 x float], [3 x float]* %vb, i64 0, i64 2, !dbg !10691
  %73 = load float, float* %arrayidx116, align 4, !dbg !10691
  %mul117 = fmul float %72, %73, !dbg !10692
  %arrayidx118 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %m, i64 0, i64 1, !dbg !10693
  %arrayidx119 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx118, i64 0, i64 2, !dbg !10693
  %74 = load float, float* %arrayidx119, align 4, !dbg !10694
  %add120 = fadd float %74, %mul117, !dbg !10694
  store float %add120, float* %arrayidx119, align 4, !dbg !10694
  %arrayidx121 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 2, !dbg !10695
  %75 = load float, float* %arrayidx121, align 4, !dbg !10695
  %arrayidx122 = getelementptr inbounds [3 x float], [3 x float]* %vb, i64 0, i64 0, !dbg !10696
  %76 = load float, float* %arrayidx122, align 4, !dbg !10696
  %mul123 = fmul float %75, %76, !dbg !10697
  %arrayidx124 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %m, i64 0, i64 2, !dbg !10698
  %arrayidx125 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx124, i64 0, i64 0, !dbg !10698
  %77 = load float, float* %arrayidx125, align 8, !dbg !10699
  %add126 = fadd float %77, %mul123, !dbg !10699
  store float %add126, float* %arrayidx125, align 8, !dbg !10699
  %arrayidx127 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 2, !dbg !10700
  %78 = load float, float* %arrayidx127, align 4, !dbg !10700
  %arrayidx128 = getelementptr inbounds [3 x float], [3 x float]* %vb, i64 0, i64 1, !dbg !10701
  %79 = load float, float* %arrayidx128, align 4, !dbg !10701
  %mul129 = fmul float %78, %79, !dbg !10702
  %arrayidx130 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %m, i64 0, i64 2, !dbg !10703
  %arrayidx131 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx130, i64 0, i64 1, !dbg !10703
  %80 = load float, float* %arrayidx131, align 4, !dbg !10704
  %add132 = fadd float %80, %mul129, !dbg !10704
  store float %add132, float* %arrayidx131, align 4, !dbg !10704
  %arrayidx133 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 2, !dbg !10705
  %81 = load float, float* %arrayidx133, align 4, !dbg !10705
  %arrayidx134 = getelementptr inbounds [3 x float], [3 x float]* %vb, i64 0, i64 2, !dbg !10706
  %82 = load float, float* %arrayidx134, align 4, !dbg !10706
  %mul135 = fmul float %81, %82, !dbg !10707
  %arrayidx136 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %m, i64 0, i64 2, !dbg !10708
  %arrayidx137 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx136, i64 0, i64 2, !dbg !10708
  %83 = load float, float* %arrayidx137, align 8, !dbg !10709
  %add138 = fadd float %83, %mul135, !dbg !10709
  store float %add138, float* %arrayidx137, align 8, !dbg !10709
  %arrayidx139 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 0, !dbg !10710
  %84 = load float, float* %arrayidx139, align 4, !dbg !10710
  %arrayidx140 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 0, !dbg !10711
  %85 = load float, float* %arrayidx140, align 4, !dbg !10711
  %mul141 = fmul float %84, %85, !dbg !10712
  %arrayidx142 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mr, i64 0, i64 0, !dbg !10713
  %arrayidx143 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx142, i64 0, i64 0, !dbg !10713
  %86 = load float, float* %arrayidx143, align 16, !dbg !10714
  %add144 = fadd float %86, %mul141, !dbg !10714
  store float %add144, float* %arrayidx143, align 16, !dbg !10714
  %arrayidx145 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 0, !dbg !10715
  %87 = load float, float* %arrayidx145, align 4, !dbg !10715
  %arrayidx146 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 1, !dbg !10716
  %88 = load float, float* %arrayidx146, align 4, !dbg !10716
  %mul147 = fmul float %87, %88, !dbg !10717
  %arrayidx148 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mr, i64 0, i64 0, !dbg !10718
  %arrayidx149 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx148, i64 0, i64 1, !dbg !10718
  %89 = load float, float* %arrayidx149, align 4, !dbg !10719
  %add150 = fadd float %89, %mul147, !dbg !10719
  store float %add150, float* %arrayidx149, align 4, !dbg !10719
  %arrayidx151 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 0, !dbg !10720
  %90 = load float, float* %arrayidx151, align 4, !dbg !10720
  %arrayidx152 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 2, !dbg !10721
  %91 = load float, float* %arrayidx152, align 4, !dbg !10721
  %mul153 = fmul float %90, %91, !dbg !10722
  %arrayidx154 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mr, i64 0, i64 0, !dbg !10723
  %arrayidx155 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx154, i64 0, i64 2, !dbg !10723
  %92 = load float, float* %arrayidx155, align 8, !dbg !10724
  %add156 = fadd float %92, %mul153, !dbg !10724
  store float %add156, float* %arrayidx155, align 8, !dbg !10724
  %arrayidx157 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 1, !dbg !10725
  %93 = load float, float* %arrayidx157, align 4, !dbg !10725
  %arrayidx158 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 0, !dbg !10726
  %94 = load float, float* %arrayidx158, align 4, !dbg !10726
  %mul159 = fmul float %93, %94, !dbg !10727
  %arrayidx160 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mr, i64 0, i64 1, !dbg !10728
  %arrayidx161 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx160, i64 0, i64 0, !dbg !10728
  %95 = load float, float* %arrayidx161, align 4, !dbg !10729
  %add162 = fadd float %95, %mul159, !dbg !10729
  store float %add162, float* %arrayidx161, align 4, !dbg !10729
  %arrayidx163 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 1, !dbg !10730
  %96 = load float, float* %arrayidx163, align 4, !dbg !10730
  %arrayidx164 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 1, !dbg !10731
  %97 = load float, float* %arrayidx164, align 4, !dbg !10731
  %mul165 = fmul float %96, %97, !dbg !10732
  %arrayidx166 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mr, i64 0, i64 1, !dbg !10733
  %arrayidx167 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx166, i64 0, i64 1, !dbg !10733
  %98 = load float, float* %arrayidx167, align 4, !dbg !10734
  %add168 = fadd float %98, %mul165, !dbg !10734
  store float %add168, float* %arrayidx167, align 4, !dbg !10734
  %arrayidx169 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 1, !dbg !10735
  %99 = load float, float* %arrayidx169, align 4, !dbg !10735
  %arrayidx170 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 2, !dbg !10736
  %100 = load float, float* %arrayidx170, align 4, !dbg !10736
  %mul171 = fmul float %99, %100, !dbg !10737
  %arrayidx172 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mr, i64 0, i64 1, !dbg !10738
  %arrayidx173 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx172, i64 0, i64 2, !dbg !10738
  %101 = load float, float* %arrayidx173, align 4, !dbg !10739
  %add174 = fadd float %101, %mul171, !dbg !10739
  store float %add174, float* %arrayidx173, align 4, !dbg !10739
  %arrayidx175 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 2, !dbg !10740
  %102 = load float, float* %arrayidx175, align 4, !dbg !10740
  %arrayidx176 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 0, !dbg !10741
  %103 = load float, float* %arrayidx176, align 4, !dbg !10741
  %mul177 = fmul float %102, %103, !dbg !10742
  %arrayidx178 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mr, i64 0, i64 2, !dbg !10743
  %arrayidx179 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx178, i64 0, i64 0, !dbg !10743
  %104 = load float, float* %arrayidx179, align 8, !dbg !10744
  %add180 = fadd float %104, %mul177, !dbg !10744
  store float %add180, float* %arrayidx179, align 8, !dbg !10744
  %arrayidx181 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 2, !dbg !10745
  %105 = load float, float* %arrayidx181, align 4, !dbg !10745
  %arrayidx182 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 1, !dbg !10746
  %106 = load float, float* %arrayidx182, align 4, !dbg !10746
  %mul183 = fmul float %105, %106, !dbg !10747
  %arrayidx184 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mr, i64 0, i64 2, !dbg !10748
  %arrayidx185 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx184, i64 0, i64 1, !dbg !10748
  %107 = load float, float* %arrayidx185, align 4, !dbg !10749
  %add186 = fadd float %107, %mul183, !dbg !10749
  store float %add186, float* %arrayidx185, align 4, !dbg !10749
  %arrayidx187 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 2, !dbg !10750
  %108 = load float, float* %arrayidx187, align 4, !dbg !10750
  %arrayidx188 = getelementptr inbounds [3 x float], [3 x float]* %va, i64 0, i64 2, !dbg !10751
  %109 = load float, float* %arrayidx188, align 4, !dbg !10751
  %mul189 = fmul float %108, %109, !dbg !10752
  %arrayidx190 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mr, i64 0, i64 2, !dbg !10753
  %arrayidx191 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx190, i64 0, i64 2, !dbg !10753
  %110 = load float, float* %arrayidx191, align 8, !dbg !10754
  %add192 = fadd float %110, %mul189, !dbg !10754
  store float %add192, float* %arrayidx191, align 8, !dbg !10754
  br label %for.inc193, !dbg !10755

for.inc193:                                       ; preds = %for.body75
  %111 = load i32, i32* %a, align 4, !dbg !10756
  %inc194 = add nsw i32 %111, 1, !dbg !10756
  store i32 %inc194, i32* %a, align 4, !dbg !10756
  br label %for.cond72, !dbg !10757, !llvm.loop !10758

for.end195:                                       ; preds = %for.cond72
  %arraydecay196 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %q, i64 0, i64 0, !dbg !10760
  %arraydecay197 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %m, i64 0, i64 0, !dbg !10761
  call void @copy_m3_m3([3 x float]* %arraydecay196, [3 x float]* %arraydecay197), !dbg !10762
  %arrayidx198 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %q, i64 0, i64 0, !dbg !10763
  %arrayidx199 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx198, i64 0, i64 0, !dbg !10763
  %112 = load float, float* %arrayidx199, align 16, !dbg !10763
  %arrayidx200 = getelementptr inbounds [3 x float], [3 x float]* %stunt, i64 0, i64 0, !dbg !10764
  store float %112, float* %arrayidx200, align 4, !dbg !10765
  %arrayidx201 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %q, i64 0, i64 1, !dbg !10766
  %arrayidx202 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx201, i64 0, i64 1, !dbg !10766
  %113 = load float, float* %arrayidx202, align 4, !dbg !10766
  %arrayidx203 = getelementptr inbounds [3 x float], [3 x float]* %stunt, i64 0, i64 1, !dbg !10767
  store float %113, float* %arrayidx203, align 4, !dbg !10768
  %arrayidx204 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %q, i64 0, i64 2, !dbg !10769
  %arrayidx205 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx204, i64 0, i64 2, !dbg !10769
  %114 = load float, float* %arrayidx205, align 8, !dbg !10769
  %arrayidx206 = getelementptr inbounds [3 x float], [3 x float]* %stunt, i64 0, i64 2, !dbg !10770
  store float %114, float* %arrayidx206, align 4, !dbg !10771
  %arraydecay207 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %q, i64 0, i64 0, !dbg !10772
  %arraydecay208 = getelementptr inbounds [3 x float], [3 x float]* %stunt, i64 0, i64 0, !dbg !10773
  %call = call float @len_v3(float* %arraydecay208), !dbg !10774
  %div209 = fdiv float 1.000000e+00, %call, !dbg !10775
  call void @mul_m3_fl([3 x float]* %arraydecay207, float %div209), !dbg !10776
  store float 0.000000e+00, float* %odet, align 4, !dbg !10777
  %arraydecay210 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %q, i64 0, i64 0, !dbg !10778
  %call211 = call float @determinant_m3_array([3 x float]* %arraydecay210), !dbg !10779
  store float %call211, float* %ndet, align 4, !dbg !10780
  br label %while.cond, !dbg !10781

while.cond:                                       ; preds = %while.body, %for.end195
  %115 = load float, float* %odet, align 4, !dbg !10782
  %116 = load float, float* %ndet, align 4, !dbg !10783
  %sub = fsub float %115, %116, !dbg !10784
  %117 = load float, float* %odet, align 4, !dbg !10785
  %118 = load float, float* %ndet, align 4, !dbg !10786
  %sub212 = fsub float %117, %118, !dbg !10787
  %mul213 = fmul float %sub, %sub212, !dbg !10788
  %cmp214 = fcmp ogt float %mul213, 0x3EB0C6F7A0000000, !dbg !10789
  br i1 %cmp214, label %land.rhs, label %land.end, !dbg !10790

land.rhs:                                         ; preds = %while.cond
  %119 = load i32, i32* %i, align 4, !dbg !10791
  %120 = load i32, i32* %imax, align 4, !dbg !10792
  %cmp216 = icmp slt i32 %119, %120, !dbg !10793
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %121 = phi i1 [ false, %while.cond ], [ %cmp216, %land.rhs ], !dbg !10794
  br i1 %121, label %while.body, label %while.end, !dbg !10781

while.body:                                       ; preds = %land.end
  %arraydecay218 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %qi, i64 0, i64 0, !dbg !10795
  %arraydecay219 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %q, i64 0, i64 0, !dbg !10797
  %call220 = call zeroext i8 @invert_m3_m3([3 x float]* %arraydecay218, [3 x float]* %arraydecay219), !dbg !10798
  %arraydecay221 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %qi, i64 0, i64 0, !dbg !10799
  call void @transpose_m3([3 x float]* %arraydecay221), !dbg !10800
  %arraydecay222 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %q, i64 0, i64 0, !dbg !10801
  %arraydecay223 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %q, i64 0, i64 0, !dbg !10802
  %arraydecay224 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %qi, i64 0, i64 0, !dbg !10803
  call void @add_m3_m3m3([3 x float]* %arraydecay222, [3 x float]* %arraydecay223, [3 x float]* %arraydecay224), !dbg !10804
  %arraydecay225 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %q, i64 0, i64 0, !dbg !10805
  call void @mul_m3_fl([3 x float]* %arraydecay225, float 5.000000e-01), !dbg !10806
  %122 = load float, float* %ndet, align 4, !dbg !10807
  store float %122, float* %odet, align 4, !dbg !10808
  %arraydecay226 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %q, i64 0, i64 0, !dbg !10809
  %call227 = call float @determinant_m3_array([3 x float]* %arraydecay226), !dbg !10810
  store float %call227, float* %ndet, align 4, !dbg !10811
  %123 = load i32, i32* %i, align 4, !dbg !10812
  %inc228 = add nsw i32 %123, 1, !dbg !10812
  store i32 %inc228, i32* %i, align 4, !dbg !10812
  br label %while.cond, !dbg !10781, !llvm.loop !10813

while.end:                                        ; preds = %land.end
  %124 = load i32, i32* %i, align 4, !dbg !10815
  %tobool229 = icmp ne i32 %124, 0, !dbg !10815
  br i1 %tobool229, label %if.then230, label %if.end251, !dbg !10817

if.then230:                                       ; preds = %while.end
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %scale, metadata !10818, metadata !DIExpression()), !dbg !10820
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %irot, metadata !10821, metadata !DIExpression()), !dbg !10822
  %125 = load [3 x float]*, [3 x float]** %lrot.addr, align 8, !dbg !10823
  %tobool231 = icmp ne [3 x float]* %125, null, !dbg !10823
  br i1 %tobool231, label %if.then232, label %if.end234, !dbg !10825

if.then232:                                       ; preds = %if.then230
  %126 = load [3 x float]*, [3 x float]** %lrot.addr, align 8, !dbg !10826
  %arraydecay233 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %q, i64 0, i64 0, !dbg !10827
  call void @copy_m3_m3([3 x float]* %126, [3 x float]* %arraydecay233), !dbg !10828
  br label %if.end234, !dbg !10828

if.end234:                                        ; preds = %if.then232, %if.then230
  %arraydecay235 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %irot, i64 0, i64 0, !dbg !10829
  %arraydecay236 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %q, i64 0, i64 0, !dbg !10830
  %call237 = call zeroext i8 @invert_m3_m3([3 x float]* %arraydecay235, [3 x float]* %arraydecay236), !dbg !10831
  %arraydecay238 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %qi, i64 0, i64 0, !dbg !10832
  %arraydecay239 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mr, i64 0, i64 0, !dbg !10833
  %call240 = call zeroext i8 @invert_m3_m3([3 x float]* %arraydecay238, [3 x float]* %arraydecay239), !dbg !10834
  %arraydecay241 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %q, i64 0, i64 0, !dbg !10835
  %arraydecay242 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %m, i64 0, i64 0, !dbg !10836
  %arraydecay243 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %qi, i64 0, i64 0, !dbg !10837
  call void @mul_m3_m3m3([3 x float]* %arraydecay241, [3 x float]* %arraydecay242, [3 x float]* %arraydecay243), !dbg !10838
  %arraydecay244 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %scale, i64 0, i64 0, !dbg !10839
  %arraydecay245 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %irot, i64 0, i64 0, !dbg !10840
  %arraydecay246 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %q, i64 0, i64 0, !dbg !10841
  call void @mul_m3_m3m3([3 x float]* %arraydecay244, [3 x float]* %arraydecay245, [3 x float]* %arraydecay246), !dbg !10842
  %127 = load [3 x float]*, [3 x float]** %lscale.addr, align 8, !dbg !10843
  %tobool247 = icmp ne [3 x float]* %127, null, !dbg !10843
  br i1 %tobool247, label %if.then248, label %if.end250, !dbg !10845

if.then248:                                       ; preds = %if.end234
  %128 = load [3 x float]*, [3 x float]** %lscale.addr, align 8, !dbg !10846
  %arraydecay249 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %scale, i64 0, i64 0, !dbg !10847
  call void @copy_m3_m3([3 x float]* %128, [3 x float]* %arraydecay249), !dbg !10848
  br label %if.end250, !dbg !10848

if.end250:                                        ; preds = %if.then248, %if.end234
  br label %if.end251, !dbg !10849

if.end251:                                        ; preds = %if.end250, %while.end
  br label %if.end252, !dbg !10850

if.end252:                                        ; preds = %if.end251, %lor.lhs.false67
  br label %if.end253, !dbg !10851

if.end253:                                        ; preds = %if.end252, %land.lhs.true12, %land.lhs.true, %if.end9
  ret void, !dbg !10852
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare dso_local void @unit_m3([3 x float]*) #2

declare dso_local void @zero_m3([3 x float]*) #2

declare dso_local void @copy_m3_m3([3 x float]*, [3 x float]*) #2

declare dso_local void @mul_m3_fl([3 x float]*, float) #2

declare dso_local zeroext i8 @invert_m3_m3([3 x float]*, [3 x float]*) #2

declare dso_local void @add_m3_m3m3([3 x float]*, [3 x float]*, [3 x float]*) #2

declare dso_local void @mul_m3_m3m3([3 x float]*, [3 x float]*, [3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @form_factor_visible_quad(float* %p, float* %n, float* %v0, float* %v1, float* %v2, float* %q0, float* %q1, float* %q2, float* %q3) #0 !dbg !2 {
entry:
  %retval = alloca i8, align 1
  %p.addr = alloca float*, align 8
  %n.addr = alloca float*, align 8
  %v0.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %q0.addr = alloca float*, align 8
  %q1.addr = alloca float*, align 8
  %q2.addr = alloca float*, align 8
  %q3.addr = alloca float*, align 8
  %sd = alloca [3 x float], align 4
  %c = alloca float, align 4
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !10853, metadata !DIExpression()), !dbg !10854
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !10855, metadata !DIExpression()), !dbg !10856
  store float* %v0, float** %v0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v0.addr, metadata !10857, metadata !DIExpression()), !dbg !10858
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !10859, metadata !DIExpression()), !dbg !10860
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !10861, metadata !DIExpression()), !dbg !10862
  store float* %q0, float** %q0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %q0.addr, metadata !10863, metadata !DIExpression()), !dbg !10864
  store float* %q1, float** %q1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %q1.addr, metadata !10865, metadata !DIExpression()), !dbg !10866
  store float* %q2, float** %q2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %q2.addr, metadata !10867, metadata !DIExpression()), !dbg !10868
  store float* %q3, float** %q3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %q3.addr, metadata !10869, metadata !DIExpression()), !dbg !10870
  call void @llvm.dbg.declare(metadata [3 x float]* %sd, metadata !10871, metadata !DIExpression()), !dbg !10872
  call void @llvm.dbg.declare(metadata float* %c, metadata !10873, metadata !DIExpression()), !dbg !10874
  %0 = load float*, float** %n.addr, align 8, !dbg !10875
  %1 = load float*, float** %p.addr, align 8, !dbg !10876
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !10877
  store float %call, float* %c, align 4, !dbg !10874
  %2 = load float*, float** %n.addr, align 8, !dbg !10878
  %3 = load float*, float** %v0.addr, align 8, !dbg !10879
  %call1 = call float @dot_v3v3(float* %2, float* %3), !dbg !10880
  %4 = load float, float* %c, align 4, !dbg !10881
  %sub = fsub float %call1, %4, !dbg !10882
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !10883
  store float %sub, float* %arrayidx, align 4, !dbg !10884
  %5 = load float*, float** %n.addr, align 8, !dbg !10885
  %6 = load float*, float** %v1.addr, align 8, !dbg !10886
  %call2 = call float @dot_v3v3(float* %5, float* %6), !dbg !10887
  %7 = load float, float* %c, align 4, !dbg !10888
  %sub3 = fsub float %call2, %7, !dbg !10889
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !10890
  store float %sub3, float* %arrayidx4, align 4, !dbg !10891
  %8 = load float*, float** %n.addr, align 8, !dbg !10892
  %9 = load float*, float** %v2.addr, align 8, !dbg !10893
  %call5 = call float @dot_v3v3(float* %8, float* %9), !dbg !10894
  %10 = load float, float* %c, align 4, !dbg !10895
  %sub6 = fsub float %call5, %10, !dbg !10896
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !10897
  store float %sub6, float* %arrayidx7, align 4, !dbg !10898
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !10899
  %11 = load float, float* %arrayidx8, align 4, !dbg !10899
  %12 = call float @llvm.fabs.f32(float %11), !dbg !10901
  %cmp = fcmp olt float %12, 0x3EB0C6F7A0000000, !dbg !10902
  br i1 %cmp, label %if.then, label %if.end, !dbg !10903

if.then:                                          ; preds = %entry
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !10904
  store float 0.000000e+00, float* %arrayidx9, align 4, !dbg !10905
  br label %if.end, !dbg !10904

if.end:                                           ; preds = %if.then, %entry
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !10906
  %13 = load float, float* %arrayidx10, align 4, !dbg !10906
  %14 = call float @llvm.fabs.f32(float %13), !dbg !10908
  %cmp11 = fcmp olt float %14, 0x3EB0C6F7A0000000, !dbg !10909
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !10910

if.then12:                                        ; preds = %if.end
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !10911
  store float 0.000000e+00, float* %arrayidx13, align 4, !dbg !10912
  br label %if.end14, !dbg !10911

if.end14:                                         ; preds = %if.then12, %if.end
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !10913
  %15 = load float, float* %arrayidx15, align 4, !dbg !10913
  %16 = call float @llvm.fabs.f32(float %15), !dbg !10915
  %cmp16 = fcmp olt float %16, 0x3EB0C6F7A0000000, !dbg !10916
  br i1 %cmp16, label %if.then17, label %if.end19, !dbg !10917

if.then17:                                        ; preds = %if.end14
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !10918
  store float 0.000000e+00, float* %arrayidx18, align 4, !dbg !10919
  br label %if.end19, !dbg !10918

if.end19:                                         ; preds = %if.then17, %if.end14
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !10920
  %17 = load float, float* %arrayidx20, align 4, !dbg !10920
  %cmp21 = fcmp ogt float %17, 0.000000e+00, !dbg !10922
  br i1 %cmp21, label %if.then22, label %if.else101, !dbg !10923

if.then22:                                        ; preds = %if.end19
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !10924
  %18 = load float, float* %arrayidx23, align 4, !dbg !10924
  %cmp24 = fcmp ogt float %18, 0.000000e+00, !dbg !10927
  br i1 %cmp24, label %if.then25, label %if.else44, !dbg !10928

if.then25:                                        ; preds = %if.then22
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !10929
  %19 = load float, float* %arrayidx26, align 4, !dbg !10929
  %cmp27 = fcmp ogt float %19, 0.000000e+00, !dbg !10932
  br i1 %cmp27, label %if.then28, label %if.else, !dbg !10933

if.then28:                                        ; preds = %if.then25
  %20 = load float*, float** %q0.addr, align 8, !dbg !10934
  %21 = load float*, float** %v0.addr, align 8, !dbg !10936
  call void @copy_v3_v3(float* %20, float* %21), !dbg !10937
  %22 = load float*, float** %q1.addr, align 8, !dbg !10938
  %23 = load float*, float** %v1.addr, align 8, !dbg !10939
  call void @copy_v3_v3(float* %22, float* %23), !dbg !10940
  %24 = load float*, float** %q2.addr, align 8, !dbg !10941
  %25 = load float*, float** %v2.addr, align 8, !dbg !10942
  call void @copy_v3_v3(float* %24, float* %25), !dbg !10943
  %26 = load float*, float** %q3.addr, align 8, !dbg !10944
  %27 = load float*, float** %q2.addr, align 8, !dbg !10945
  call void @copy_v3_v3(float* %26, float* %27), !dbg !10946
  br label %if.end43, !dbg !10947

if.else:                                          ; preds = %if.then25
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !10948
  %28 = load float, float* %arrayidx29, align 4, !dbg !10948
  %cmp30 = fcmp olt float %28, 0.000000e+00, !dbg !10950
  br i1 %cmp30, label %if.then31, label %if.else41, !dbg !10951

if.then31:                                        ; preds = %if.else
  %29 = load float*, float** %q0.addr, align 8, !dbg !10952
  %30 = load float*, float** %v0.addr, align 8, !dbg !10954
  call void @copy_v3_v3(float* %29, float* %30), !dbg !10955
  %31 = load float*, float** %q1.addr, align 8, !dbg !10956
  %32 = load float*, float** %v1.addr, align 8, !dbg !10957
  call void @copy_v3_v3(float* %31, float* %32), !dbg !10958
  %33 = load float*, float** %q2.addr, align 8, !dbg !10959
  %34 = load float*, float** %v1.addr, align 8, !dbg !10960
  %35 = load float*, float** %v2.addr, align 8, !dbg !10961
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !10962
  %36 = load float, float* %arrayidx32, align 4, !dbg !10962
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !10963
  %37 = load float, float* %arrayidx33, align 4, !dbg !10963
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !10964
  %38 = load float, float* %arrayidx34, align 4, !dbg !10964
  %sub35 = fsub float %37, %38, !dbg !10965
  %div = fdiv float %36, %sub35, !dbg !10966
  call void @vec_add_dir(float* %33, float* %34, float* %35, float %div), !dbg !10967
  %39 = load float*, float** %q3.addr, align 8, !dbg !10968
  %40 = load float*, float** %v0.addr, align 8, !dbg !10969
  %41 = load float*, float** %v2.addr, align 8, !dbg !10970
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !10971
  %42 = load float, float* %arrayidx36, align 4, !dbg !10971
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !10972
  %43 = load float, float* %arrayidx37, align 4, !dbg !10972
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !10973
  %44 = load float, float* %arrayidx38, align 4, !dbg !10973
  %sub39 = fsub float %43, %44, !dbg !10974
  %div40 = fdiv float %42, %sub39, !dbg !10975
  call void @vec_add_dir(float* %39, float* %40, float* %41, float %div40), !dbg !10976
  br label %if.end42, !dbg !10977

if.else41:                                        ; preds = %if.else
  %45 = load float*, float** %q0.addr, align 8, !dbg !10978
  %46 = load float*, float** %v0.addr, align 8, !dbg !10980
  call void @copy_v3_v3(float* %45, float* %46), !dbg !10981
  %47 = load float*, float** %q1.addr, align 8, !dbg !10982
  %48 = load float*, float** %v1.addr, align 8, !dbg !10983
  call void @copy_v3_v3(float* %47, float* %48), !dbg !10984
  %49 = load float*, float** %q2.addr, align 8, !dbg !10985
  %50 = load float*, float** %v2.addr, align 8, !dbg !10986
  call void @copy_v3_v3(float* %49, float* %50), !dbg !10987
  %51 = load float*, float** %q3.addr, align 8, !dbg !10988
  %52 = load float*, float** %q2.addr, align 8, !dbg !10989
  call void @copy_v3_v3(float* %51, float* %52), !dbg !10990
  br label %if.end42

if.end42:                                         ; preds = %if.else41, %if.then31
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then28
  br label %if.end100, !dbg !10991

if.else44:                                        ; preds = %if.then22
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !10992
  %53 = load float, float* %arrayidx45, align 4, !dbg !10992
  %cmp46 = fcmp olt float %53, 0.000000e+00, !dbg !10994
  br i1 %cmp46, label %if.then47, label %if.else83, !dbg !10995

if.then47:                                        ; preds = %if.else44
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !10996
  %54 = load float, float* %arrayidx48, align 4, !dbg !10996
  %cmp49 = fcmp ogt float %54, 0.000000e+00, !dbg !10999
  br i1 %cmp49, label %if.then50, label %if.else61, !dbg !11000

if.then50:                                        ; preds = %if.then47
  %55 = load float*, float** %q0.addr, align 8, !dbg !11001
  %56 = load float*, float** %v0.addr, align 8, !dbg !11003
  call void @copy_v3_v3(float* %55, float* %56), !dbg !11004
  %57 = load float*, float** %q1.addr, align 8, !dbg !11005
  %58 = load float*, float** %v0.addr, align 8, !dbg !11006
  %59 = load float*, float** %v1.addr, align 8, !dbg !11007
  %arrayidx51 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !11008
  %60 = load float, float* %arrayidx51, align 4, !dbg !11008
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !11009
  %61 = load float, float* %arrayidx52, align 4, !dbg !11009
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !11010
  %62 = load float, float* %arrayidx53, align 4, !dbg !11010
  %sub54 = fsub float %61, %62, !dbg !11011
  %div55 = fdiv float %60, %sub54, !dbg !11012
  call void @vec_add_dir(float* %57, float* %58, float* %59, float %div55), !dbg !11013
  %63 = load float*, float** %q2.addr, align 8, !dbg !11014
  %64 = load float*, float** %v1.addr, align 8, !dbg !11015
  %65 = load float*, float** %v2.addr, align 8, !dbg !11016
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !11017
  %66 = load float, float* %arrayidx56, align 4, !dbg !11017
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !11018
  %67 = load float, float* %arrayidx57, align 4, !dbg !11018
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11019
  %68 = load float, float* %arrayidx58, align 4, !dbg !11019
  %sub59 = fsub float %67, %68, !dbg !11020
  %div60 = fdiv float %66, %sub59, !dbg !11021
  call void @vec_add_dir(float* %63, float* %64, float* %65, float %div60), !dbg !11022
  %69 = load float*, float** %q3.addr, align 8, !dbg !11023
  %70 = load float*, float** %v2.addr, align 8, !dbg !11024
  call void @copy_v3_v3(float* %69, float* %70), !dbg !11025
  br label %if.end82, !dbg !11026

if.else61:                                        ; preds = %if.then47
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11027
  %71 = load float, float* %arrayidx62, align 4, !dbg !11027
  %cmp63 = fcmp olt float %71, 0.000000e+00, !dbg !11029
  br i1 %cmp63, label %if.then64, label %if.else75, !dbg !11030

if.then64:                                        ; preds = %if.else61
  %72 = load float*, float** %q0.addr, align 8, !dbg !11031
  %73 = load float*, float** %v0.addr, align 8, !dbg !11033
  call void @copy_v3_v3(float* %72, float* %73), !dbg !11034
  %74 = load float*, float** %q1.addr, align 8, !dbg !11035
  %75 = load float*, float** %v0.addr, align 8, !dbg !11036
  %76 = load float*, float** %v1.addr, align 8, !dbg !11037
  %arrayidx65 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !11038
  %77 = load float, float* %arrayidx65, align 4, !dbg !11038
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !11039
  %78 = load float, float* %arrayidx66, align 4, !dbg !11039
  %arrayidx67 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !11040
  %79 = load float, float* %arrayidx67, align 4, !dbg !11040
  %sub68 = fsub float %78, %79, !dbg !11041
  %div69 = fdiv float %77, %sub68, !dbg !11042
  call void @vec_add_dir(float* %74, float* %75, float* %76, float %div69), !dbg !11043
  %80 = load float*, float** %q2.addr, align 8, !dbg !11044
  %81 = load float*, float** %v0.addr, align 8, !dbg !11045
  %82 = load float*, float** %v2.addr, align 8, !dbg !11046
  %arrayidx70 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !11047
  %83 = load float, float* %arrayidx70, align 4, !dbg !11047
  %arrayidx71 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !11048
  %84 = load float, float* %arrayidx71, align 4, !dbg !11048
  %arrayidx72 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11049
  %85 = load float, float* %arrayidx72, align 4, !dbg !11049
  %sub73 = fsub float %84, %85, !dbg !11050
  %div74 = fdiv float %83, %sub73, !dbg !11051
  call void @vec_add_dir(float* %80, float* %81, float* %82, float %div74), !dbg !11052
  %86 = load float*, float** %q3.addr, align 8, !dbg !11053
  %87 = load float*, float** %q2.addr, align 8, !dbg !11054
  call void @copy_v3_v3(float* %86, float* %87), !dbg !11055
  br label %if.end81, !dbg !11056

if.else75:                                        ; preds = %if.else61
  %88 = load float*, float** %q0.addr, align 8, !dbg !11057
  %89 = load float*, float** %v0.addr, align 8, !dbg !11059
  call void @copy_v3_v3(float* %88, float* %89), !dbg !11060
  %90 = load float*, float** %q1.addr, align 8, !dbg !11061
  %91 = load float*, float** %v0.addr, align 8, !dbg !11062
  %92 = load float*, float** %v1.addr, align 8, !dbg !11063
  %arrayidx76 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !11064
  %93 = load float, float* %arrayidx76, align 4, !dbg !11064
  %arrayidx77 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !11065
  %94 = load float, float* %arrayidx77, align 4, !dbg !11065
  %arrayidx78 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !11066
  %95 = load float, float* %arrayidx78, align 4, !dbg !11066
  %sub79 = fsub float %94, %95, !dbg !11067
  %div80 = fdiv float %93, %sub79, !dbg !11068
  call void @vec_add_dir(float* %90, float* %91, float* %92, float %div80), !dbg !11069
  %96 = load float*, float** %q2.addr, align 8, !dbg !11070
  %97 = load float*, float** %v2.addr, align 8, !dbg !11071
  call void @copy_v3_v3(float* %96, float* %97), !dbg !11072
  %98 = load float*, float** %q3.addr, align 8, !dbg !11073
  %99 = load float*, float** %q2.addr, align 8, !dbg !11074
  call void @copy_v3_v3(float* %98, float* %99), !dbg !11075
  br label %if.end81

if.end81:                                         ; preds = %if.else75, %if.then64
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.then50
  br label %if.end99, !dbg !11076

if.else83:                                        ; preds = %if.else44
  %arrayidx84 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11077
  %100 = load float, float* %arrayidx84, align 4, !dbg !11077
  %cmp85 = fcmp ogt float %100, 0.000000e+00, !dbg !11080
  br i1 %cmp85, label %if.then86, label %if.else87, !dbg !11081

if.then86:                                        ; preds = %if.else83
  %101 = load float*, float** %q0.addr, align 8, !dbg !11082
  %102 = load float*, float** %v0.addr, align 8, !dbg !11084
  call void @copy_v3_v3(float* %101, float* %102), !dbg !11085
  %103 = load float*, float** %q1.addr, align 8, !dbg !11086
  %104 = load float*, float** %v1.addr, align 8, !dbg !11087
  call void @copy_v3_v3(float* %103, float* %104), !dbg !11088
  %105 = load float*, float** %q2.addr, align 8, !dbg !11089
  %106 = load float*, float** %v2.addr, align 8, !dbg !11090
  call void @copy_v3_v3(float* %105, float* %106), !dbg !11091
  %107 = load float*, float** %q3.addr, align 8, !dbg !11092
  %108 = load float*, float** %q2.addr, align 8, !dbg !11093
  call void @copy_v3_v3(float* %107, float* %108), !dbg !11094
  br label %if.end98, !dbg !11095

if.else87:                                        ; preds = %if.else83
  %arrayidx88 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11096
  %109 = load float, float* %arrayidx88, align 4, !dbg !11096
  %cmp89 = fcmp olt float %109, 0.000000e+00, !dbg !11098
  br i1 %cmp89, label %if.then90, label %if.else96, !dbg !11099

if.then90:                                        ; preds = %if.else87
  %110 = load float*, float** %q0.addr, align 8, !dbg !11100
  %111 = load float*, float** %v0.addr, align 8, !dbg !11102
  call void @copy_v3_v3(float* %110, float* %111), !dbg !11103
  %112 = load float*, float** %q1.addr, align 8, !dbg !11104
  %113 = load float*, float** %v1.addr, align 8, !dbg !11105
  call void @copy_v3_v3(float* %112, float* %113), !dbg !11106
  %114 = load float*, float** %q2.addr, align 8, !dbg !11107
  %115 = load float*, float** %v0.addr, align 8, !dbg !11108
  %116 = load float*, float** %v2.addr, align 8, !dbg !11109
  %arrayidx91 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !11110
  %117 = load float, float* %arrayidx91, align 4, !dbg !11110
  %arrayidx92 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !11111
  %118 = load float, float* %arrayidx92, align 4, !dbg !11111
  %arrayidx93 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11112
  %119 = load float, float* %arrayidx93, align 4, !dbg !11112
  %sub94 = fsub float %118, %119, !dbg !11113
  %div95 = fdiv float %117, %sub94, !dbg !11114
  call void @vec_add_dir(float* %114, float* %115, float* %116, float %div95), !dbg !11115
  %120 = load float*, float** %q3.addr, align 8, !dbg !11116
  %121 = load float*, float** %q2.addr, align 8, !dbg !11117
  call void @copy_v3_v3(float* %120, float* %121), !dbg !11118
  br label %if.end97, !dbg !11119

if.else96:                                        ; preds = %if.else87
  %122 = load float*, float** %q0.addr, align 8, !dbg !11120
  %123 = load float*, float** %v0.addr, align 8, !dbg !11122
  call void @copy_v3_v3(float* %122, float* %123), !dbg !11123
  %124 = load float*, float** %q1.addr, align 8, !dbg !11124
  %125 = load float*, float** %v1.addr, align 8, !dbg !11125
  call void @copy_v3_v3(float* %124, float* %125), !dbg !11126
  %126 = load float*, float** %q2.addr, align 8, !dbg !11127
  %127 = load float*, float** %v2.addr, align 8, !dbg !11128
  call void @copy_v3_v3(float* %126, float* %127), !dbg !11129
  %128 = load float*, float** %q3.addr, align 8, !dbg !11130
  %129 = load float*, float** %q2.addr, align 8, !dbg !11131
  call void @copy_v3_v3(float* %128, float* %129), !dbg !11132
  br label %if.end97

if.end97:                                         ; preds = %if.else96, %if.then90
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.then86
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %if.end82
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end43
  br label %if.end233, !dbg !11133

if.else101:                                       ; preds = %if.end19
  %arrayidx102 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !11134
  %130 = load float, float* %arrayidx102, align 4, !dbg !11134
  %cmp103 = fcmp olt float %130, 0.000000e+00, !dbg !11136
  br i1 %cmp103, label %if.then104, label %if.else183, !dbg !11137

if.then104:                                       ; preds = %if.else101
  %arrayidx105 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !11138
  %131 = load float, float* %arrayidx105, align 4, !dbg !11138
  %cmp106 = fcmp ogt float %131, 0.000000e+00, !dbg !11141
  br i1 %cmp106, label %if.then107, label %if.else143, !dbg !11142

if.then107:                                       ; preds = %if.then104
  %arrayidx108 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11143
  %132 = load float, float* %arrayidx108, align 4, !dbg !11143
  %cmp109 = fcmp ogt float %132, 0.000000e+00, !dbg !11146
  br i1 %cmp109, label %if.then110, label %if.else121, !dbg !11147

if.then110:                                       ; preds = %if.then107
  %133 = load float*, float** %q0.addr, align 8, !dbg !11148
  %134 = load float*, float** %v0.addr, align 8, !dbg !11150
  %135 = load float*, float** %v1.addr, align 8, !dbg !11151
  %arrayidx111 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !11152
  %136 = load float, float* %arrayidx111, align 4, !dbg !11152
  %arrayidx112 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !11153
  %137 = load float, float* %arrayidx112, align 4, !dbg !11153
  %arrayidx113 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !11154
  %138 = load float, float* %arrayidx113, align 4, !dbg !11154
  %sub114 = fsub float %137, %138, !dbg !11155
  %div115 = fdiv float %136, %sub114, !dbg !11156
  call void @vec_add_dir(float* %133, float* %134, float* %135, float %div115), !dbg !11157
  %139 = load float*, float** %q1.addr, align 8, !dbg !11158
  %140 = load float*, float** %v1.addr, align 8, !dbg !11159
  call void @copy_v3_v3(float* %139, float* %140), !dbg !11160
  %141 = load float*, float** %q2.addr, align 8, !dbg !11161
  %142 = load float*, float** %v2.addr, align 8, !dbg !11162
  call void @copy_v3_v3(float* %141, float* %142), !dbg !11163
  %143 = load float*, float** %q3.addr, align 8, !dbg !11164
  %144 = load float*, float** %v0.addr, align 8, !dbg !11165
  %145 = load float*, float** %v2.addr, align 8, !dbg !11166
  %arrayidx116 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !11167
  %146 = load float, float* %arrayidx116, align 4, !dbg !11167
  %arrayidx117 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !11168
  %147 = load float, float* %arrayidx117, align 4, !dbg !11168
  %arrayidx118 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11169
  %148 = load float, float* %arrayidx118, align 4, !dbg !11169
  %sub119 = fsub float %147, %148, !dbg !11170
  %div120 = fdiv float %146, %sub119, !dbg !11171
  call void @vec_add_dir(float* %143, float* %144, float* %145, float %div120), !dbg !11172
  br label %if.end142, !dbg !11173

if.else121:                                       ; preds = %if.then107
  %arrayidx122 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11174
  %149 = load float, float* %arrayidx122, align 4, !dbg !11174
  %cmp123 = fcmp olt float %149, 0.000000e+00, !dbg !11176
  br i1 %cmp123, label %if.then124, label %if.else135, !dbg !11177

if.then124:                                       ; preds = %if.else121
  %150 = load float*, float** %q0.addr, align 8, !dbg !11178
  %151 = load float*, float** %v0.addr, align 8, !dbg !11180
  %152 = load float*, float** %v1.addr, align 8, !dbg !11181
  %arrayidx125 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !11182
  %153 = load float, float* %arrayidx125, align 4, !dbg !11182
  %arrayidx126 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !11183
  %154 = load float, float* %arrayidx126, align 4, !dbg !11183
  %arrayidx127 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !11184
  %155 = load float, float* %arrayidx127, align 4, !dbg !11184
  %sub128 = fsub float %154, %155, !dbg !11185
  %div129 = fdiv float %153, %sub128, !dbg !11186
  call void @vec_add_dir(float* %150, float* %151, float* %152, float %div129), !dbg !11187
  %156 = load float*, float** %q1.addr, align 8, !dbg !11188
  %157 = load float*, float** %v1.addr, align 8, !dbg !11189
  call void @copy_v3_v3(float* %156, float* %157), !dbg !11190
  %158 = load float*, float** %q2.addr, align 8, !dbg !11191
  %159 = load float*, float** %v1.addr, align 8, !dbg !11192
  %160 = load float*, float** %v2.addr, align 8, !dbg !11193
  %arrayidx130 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !11194
  %161 = load float, float* %arrayidx130, align 4, !dbg !11194
  %arrayidx131 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !11195
  %162 = load float, float* %arrayidx131, align 4, !dbg !11195
  %arrayidx132 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11196
  %163 = load float, float* %arrayidx132, align 4, !dbg !11196
  %sub133 = fsub float %162, %163, !dbg !11197
  %div134 = fdiv float %161, %sub133, !dbg !11198
  call void @vec_add_dir(float* %158, float* %159, float* %160, float %div134), !dbg !11199
  %164 = load float*, float** %q3.addr, align 8, !dbg !11200
  %165 = load float*, float** %q2.addr, align 8, !dbg !11201
  call void @copy_v3_v3(float* %164, float* %165), !dbg !11202
  br label %if.end141, !dbg !11203

if.else135:                                       ; preds = %if.else121
  %166 = load float*, float** %q0.addr, align 8, !dbg !11204
  %167 = load float*, float** %v0.addr, align 8, !dbg !11206
  %168 = load float*, float** %v1.addr, align 8, !dbg !11207
  %arrayidx136 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !11208
  %169 = load float, float* %arrayidx136, align 4, !dbg !11208
  %arrayidx137 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !11209
  %170 = load float, float* %arrayidx137, align 4, !dbg !11209
  %arrayidx138 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !11210
  %171 = load float, float* %arrayidx138, align 4, !dbg !11210
  %sub139 = fsub float %170, %171, !dbg !11211
  %div140 = fdiv float %169, %sub139, !dbg !11212
  call void @vec_add_dir(float* %166, float* %167, float* %168, float %div140), !dbg !11213
  %172 = load float*, float** %q1.addr, align 8, !dbg !11214
  %173 = load float*, float** %v1.addr, align 8, !dbg !11215
  call void @copy_v3_v3(float* %172, float* %173), !dbg !11216
  %174 = load float*, float** %q2.addr, align 8, !dbg !11217
  %175 = load float*, float** %v2.addr, align 8, !dbg !11218
  call void @copy_v3_v3(float* %174, float* %175), !dbg !11219
  %176 = load float*, float** %q3.addr, align 8, !dbg !11220
  %177 = load float*, float** %q2.addr, align 8, !dbg !11221
  call void @copy_v3_v3(float* %176, float* %177), !dbg !11222
  br label %if.end141

if.end141:                                        ; preds = %if.else135, %if.then124
  br label %if.end142

if.end142:                                        ; preds = %if.end141, %if.then110
  br label %if.end182, !dbg !11223

if.else143:                                       ; preds = %if.then104
  %arrayidx144 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !11224
  %178 = load float, float* %arrayidx144, align 4, !dbg !11224
  %cmp145 = fcmp olt float %178, 0.000000e+00, !dbg !11226
  br i1 %cmp145, label %if.then146, label %if.else166, !dbg !11227

if.then146:                                       ; preds = %if.else143
  %arrayidx147 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11228
  %179 = load float, float* %arrayidx147, align 4, !dbg !11228
  %cmp148 = fcmp ogt float %179, 0.000000e+00, !dbg !11231
  br i1 %cmp148, label %if.then149, label %if.else160, !dbg !11232

if.then149:                                       ; preds = %if.then146
  %180 = load float*, float** %q0.addr, align 8, !dbg !11233
  %181 = load float*, float** %v0.addr, align 8, !dbg !11235
  %182 = load float*, float** %v2.addr, align 8, !dbg !11236
  %arrayidx150 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !11237
  %183 = load float, float* %arrayidx150, align 4, !dbg !11237
  %arrayidx151 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !11238
  %184 = load float, float* %arrayidx151, align 4, !dbg !11238
  %arrayidx152 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11239
  %185 = load float, float* %arrayidx152, align 4, !dbg !11239
  %sub153 = fsub float %184, %185, !dbg !11240
  %div154 = fdiv float %183, %sub153, !dbg !11241
  call void @vec_add_dir(float* %180, float* %181, float* %182, float %div154), !dbg !11242
  %186 = load float*, float** %q1.addr, align 8, !dbg !11243
  %187 = load float*, float** %v1.addr, align 8, !dbg !11244
  %188 = load float*, float** %v2.addr, align 8, !dbg !11245
  %arrayidx155 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !11246
  %189 = load float, float* %arrayidx155, align 4, !dbg !11246
  %arrayidx156 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !11247
  %190 = load float, float* %arrayidx156, align 4, !dbg !11247
  %arrayidx157 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11248
  %191 = load float, float* %arrayidx157, align 4, !dbg !11248
  %sub158 = fsub float %190, %191, !dbg !11249
  %div159 = fdiv float %189, %sub158, !dbg !11250
  call void @vec_add_dir(float* %186, float* %187, float* %188, float %div159), !dbg !11251
  %192 = load float*, float** %q2.addr, align 8, !dbg !11252
  %193 = load float*, float** %v2.addr, align 8, !dbg !11253
  call void @copy_v3_v3(float* %192, float* %193), !dbg !11254
  %194 = load float*, float** %q3.addr, align 8, !dbg !11255
  %195 = load float*, float** %q2.addr, align 8, !dbg !11256
  call void @copy_v3_v3(float* %194, float* %195), !dbg !11257
  br label %if.end165, !dbg !11258

if.else160:                                       ; preds = %if.then146
  %arrayidx161 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11259
  %196 = load float, float* %arrayidx161, align 4, !dbg !11259
  %cmp162 = fcmp olt float %196, 0.000000e+00, !dbg !11261
  br i1 %cmp162, label %if.then163, label %if.else164, !dbg !11262

if.then163:                                       ; preds = %if.else160
  store i8 0, i8* %retval, align 1, !dbg !11263
  br label %return, !dbg !11263

if.else164:                                       ; preds = %if.else160
  store i8 0, i8* %retval, align 1, !dbg !11265
  br label %return, !dbg !11265

if.end165:                                        ; preds = %if.then149
  br label %if.end181, !dbg !11267

if.else166:                                       ; preds = %if.else143
  %arrayidx167 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11268
  %197 = load float, float* %arrayidx167, align 4, !dbg !11268
  %cmp168 = fcmp ogt float %197, 0.000000e+00, !dbg !11271
  br i1 %cmp168, label %if.then169, label %if.else175, !dbg !11272

if.then169:                                       ; preds = %if.else166
  %198 = load float*, float** %q0.addr, align 8, !dbg !11273
  %199 = load float*, float** %v0.addr, align 8, !dbg !11275
  %200 = load float*, float** %v2.addr, align 8, !dbg !11276
  %arrayidx170 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !11277
  %201 = load float, float* %arrayidx170, align 4, !dbg !11277
  %arrayidx171 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 0, !dbg !11278
  %202 = load float, float* %arrayidx171, align 4, !dbg !11278
  %arrayidx172 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11279
  %203 = load float, float* %arrayidx172, align 4, !dbg !11279
  %sub173 = fsub float %202, %203, !dbg !11280
  %div174 = fdiv float %201, %sub173, !dbg !11281
  call void @vec_add_dir(float* %198, float* %199, float* %200, float %div174), !dbg !11282
  %204 = load float*, float** %q1.addr, align 8, !dbg !11283
  %205 = load float*, float** %v1.addr, align 8, !dbg !11284
  call void @copy_v3_v3(float* %204, float* %205), !dbg !11285
  %206 = load float*, float** %q2.addr, align 8, !dbg !11286
  %207 = load float*, float** %v2.addr, align 8, !dbg !11287
  call void @copy_v3_v3(float* %206, float* %207), !dbg !11288
  %208 = load float*, float** %q3.addr, align 8, !dbg !11289
  %209 = load float*, float** %q2.addr, align 8, !dbg !11290
  call void @copy_v3_v3(float* %208, float* %209), !dbg !11291
  br label %if.end180, !dbg !11292

if.else175:                                       ; preds = %if.else166
  %arrayidx176 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11293
  %210 = load float, float* %arrayidx176, align 4, !dbg !11293
  %cmp177 = fcmp olt float %210, 0.000000e+00, !dbg !11295
  br i1 %cmp177, label %if.then178, label %if.else179, !dbg !11296

if.then178:                                       ; preds = %if.else175
  store i8 0, i8* %retval, align 1, !dbg !11297
  br label %return, !dbg !11297

if.else179:                                       ; preds = %if.else175
  store i8 0, i8* %retval, align 1, !dbg !11299
  br label %return, !dbg !11299

if.end180:                                        ; preds = %if.then169
  br label %if.end181

if.end181:                                        ; preds = %if.end180, %if.end165
  br label %if.end182

if.end182:                                        ; preds = %if.end181, %if.end142
  br label %if.end232, !dbg !11301

if.else183:                                       ; preds = %if.else101
  %arrayidx184 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !11302
  %211 = load float, float* %arrayidx184, align 4, !dbg !11302
  %cmp185 = fcmp ogt float %211, 0.000000e+00, !dbg !11305
  br i1 %cmp185, label %if.then186, label %if.else202, !dbg !11306

if.then186:                                       ; preds = %if.else183
  %arrayidx187 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11307
  %212 = load float, float* %arrayidx187, align 4, !dbg !11307
  %cmp188 = fcmp ogt float %212, 0.000000e+00, !dbg !11310
  br i1 %cmp188, label %if.then189, label %if.else190, !dbg !11311

if.then189:                                       ; preds = %if.then186
  %213 = load float*, float** %q0.addr, align 8, !dbg !11312
  %214 = load float*, float** %v0.addr, align 8, !dbg !11314
  call void @copy_v3_v3(float* %213, float* %214), !dbg !11315
  %215 = load float*, float** %q1.addr, align 8, !dbg !11316
  %216 = load float*, float** %v1.addr, align 8, !dbg !11317
  call void @copy_v3_v3(float* %215, float* %216), !dbg !11318
  %217 = load float*, float** %q2.addr, align 8, !dbg !11319
  %218 = load float*, float** %v2.addr, align 8, !dbg !11320
  call void @copy_v3_v3(float* %217, float* %218), !dbg !11321
  %219 = load float*, float** %q3.addr, align 8, !dbg !11322
  %220 = load float*, float** %q2.addr, align 8, !dbg !11323
  call void @copy_v3_v3(float* %219, float* %220), !dbg !11324
  br label %if.end201, !dbg !11325

if.else190:                                       ; preds = %if.then186
  %arrayidx191 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11326
  %221 = load float, float* %arrayidx191, align 4, !dbg !11326
  %cmp192 = fcmp olt float %221, 0.000000e+00, !dbg !11328
  br i1 %cmp192, label %if.then193, label %if.else199, !dbg !11329

if.then193:                                       ; preds = %if.else190
  %222 = load float*, float** %q0.addr, align 8, !dbg !11330
  %223 = load float*, float** %v0.addr, align 8, !dbg !11332
  call void @copy_v3_v3(float* %222, float* %223), !dbg !11333
  %224 = load float*, float** %q1.addr, align 8, !dbg !11334
  %225 = load float*, float** %v1.addr, align 8, !dbg !11335
  call void @copy_v3_v3(float* %224, float* %225), !dbg !11336
  %226 = load float*, float** %q2.addr, align 8, !dbg !11337
  %227 = load float*, float** %v1.addr, align 8, !dbg !11338
  %228 = load float*, float** %v2.addr, align 8, !dbg !11339
  %arrayidx194 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !11340
  %229 = load float, float* %arrayidx194, align 4, !dbg !11340
  %arrayidx195 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !11341
  %230 = load float, float* %arrayidx195, align 4, !dbg !11341
  %arrayidx196 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11342
  %231 = load float, float* %arrayidx196, align 4, !dbg !11342
  %sub197 = fsub float %230, %231, !dbg !11343
  %div198 = fdiv float %229, %sub197, !dbg !11344
  call void @vec_add_dir(float* %226, float* %227, float* %228, float %div198), !dbg !11345
  %232 = load float*, float** %q3.addr, align 8, !dbg !11346
  %233 = load float*, float** %q2.addr, align 8, !dbg !11347
  call void @copy_v3_v3(float* %232, float* %233), !dbg !11348
  br label %if.end200, !dbg !11349

if.else199:                                       ; preds = %if.else190
  %234 = load float*, float** %q0.addr, align 8, !dbg !11350
  %235 = load float*, float** %v0.addr, align 8, !dbg !11352
  call void @copy_v3_v3(float* %234, float* %235), !dbg !11353
  %236 = load float*, float** %q1.addr, align 8, !dbg !11354
  %237 = load float*, float** %v1.addr, align 8, !dbg !11355
  call void @copy_v3_v3(float* %236, float* %237), !dbg !11356
  %238 = load float*, float** %q2.addr, align 8, !dbg !11357
  %239 = load float*, float** %v2.addr, align 8, !dbg !11358
  call void @copy_v3_v3(float* %238, float* %239), !dbg !11359
  %240 = load float*, float** %q3.addr, align 8, !dbg !11360
  %241 = load float*, float** %q2.addr, align 8, !dbg !11361
  call void @copy_v3_v3(float* %240, float* %241), !dbg !11362
  br label %if.end200

if.end200:                                        ; preds = %if.else199, %if.then193
  br label %if.end201

if.end201:                                        ; preds = %if.end200, %if.then189
  br label %if.end231, !dbg !11363

if.else202:                                       ; preds = %if.else183
  %arrayidx203 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !11364
  %242 = load float, float* %arrayidx203, align 4, !dbg !11364
  %cmp204 = fcmp olt float %242, 0.000000e+00, !dbg !11366
  br i1 %cmp204, label %if.then205, label %if.else220, !dbg !11367

if.then205:                                       ; preds = %if.else202
  %arrayidx206 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11368
  %243 = load float, float* %arrayidx206, align 4, !dbg !11368
  %cmp207 = fcmp ogt float %243, 0.000000e+00, !dbg !11371
  br i1 %cmp207, label %if.then208, label %if.else214, !dbg !11372

if.then208:                                       ; preds = %if.then205
  %244 = load float*, float** %q0.addr, align 8, !dbg !11373
  %245 = load float*, float** %v0.addr, align 8, !dbg !11375
  call void @copy_v3_v3(float* %244, float* %245), !dbg !11376
  %246 = load float*, float** %q1.addr, align 8, !dbg !11377
  %247 = load float*, float** %v1.addr, align 8, !dbg !11378
  %248 = load float*, float** %v2.addr, align 8, !dbg !11379
  %arrayidx209 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !11380
  %249 = load float, float* %arrayidx209, align 4, !dbg !11380
  %arrayidx210 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 1, !dbg !11381
  %250 = load float, float* %arrayidx210, align 4, !dbg !11381
  %arrayidx211 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11382
  %251 = load float, float* %arrayidx211, align 4, !dbg !11382
  %sub212 = fsub float %250, %251, !dbg !11383
  %div213 = fdiv float %249, %sub212, !dbg !11384
  call void @vec_add_dir(float* %246, float* %247, float* %248, float %div213), !dbg !11385
  %252 = load float*, float** %q2.addr, align 8, !dbg !11386
  %253 = load float*, float** %v2.addr, align 8, !dbg !11387
  call void @copy_v3_v3(float* %252, float* %253), !dbg !11388
  %254 = load float*, float** %q3.addr, align 8, !dbg !11389
  %255 = load float*, float** %q2.addr, align 8, !dbg !11390
  call void @copy_v3_v3(float* %254, float* %255), !dbg !11391
  br label %if.end219, !dbg !11392

if.else214:                                       ; preds = %if.then205
  %arrayidx215 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11393
  %256 = load float, float* %arrayidx215, align 4, !dbg !11393
  %cmp216 = fcmp olt float %256, 0.000000e+00, !dbg !11395
  br i1 %cmp216, label %if.then217, label %if.else218, !dbg !11396

if.then217:                                       ; preds = %if.else214
  store i8 0, i8* %retval, align 1, !dbg !11397
  br label %return, !dbg !11397

if.else218:                                       ; preds = %if.else214
  store i8 0, i8* %retval, align 1, !dbg !11399
  br label %return, !dbg !11399

if.end219:                                        ; preds = %if.then208
  br label %if.end230, !dbg !11401

if.else220:                                       ; preds = %if.else202
  %arrayidx221 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11402
  %257 = load float, float* %arrayidx221, align 4, !dbg !11402
  %cmp222 = fcmp ogt float %257, 0.000000e+00, !dbg !11405
  br i1 %cmp222, label %if.then223, label %if.else224, !dbg !11406

if.then223:                                       ; preds = %if.else220
  %258 = load float*, float** %q0.addr, align 8, !dbg !11407
  %259 = load float*, float** %v0.addr, align 8, !dbg !11409
  call void @copy_v3_v3(float* %258, float* %259), !dbg !11410
  %260 = load float*, float** %q1.addr, align 8, !dbg !11411
  %261 = load float*, float** %v1.addr, align 8, !dbg !11412
  call void @copy_v3_v3(float* %260, float* %261), !dbg !11413
  %262 = load float*, float** %q2.addr, align 8, !dbg !11414
  %263 = load float*, float** %v2.addr, align 8, !dbg !11415
  call void @copy_v3_v3(float* %262, float* %263), !dbg !11416
  %264 = load float*, float** %q3.addr, align 8, !dbg !11417
  %265 = load float*, float** %q2.addr, align 8, !dbg !11418
  call void @copy_v3_v3(float* %264, float* %265), !dbg !11419
  br label %if.end229, !dbg !11420

if.else224:                                       ; preds = %if.else220
  %arrayidx225 = getelementptr inbounds [3 x float], [3 x float]* %sd, i64 0, i64 2, !dbg !11421
  %266 = load float, float* %arrayidx225, align 4, !dbg !11421
  %cmp226 = fcmp olt float %266, 0.000000e+00, !dbg !11423
  br i1 %cmp226, label %if.then227, label %if.else228, !dbg !11424

if.then227:                                       ; preds = %if.else224
  store i8 0, i8* %retval, align 1, !dbg !11425
  br label %return, !dbg !11425

if.else228:                                       ; preds = %if.else224
  store i8 0, i8* %retval, align 1, !dbg !11427
  br label %return, !dbg !11427

if.end229:                                        ; preds = %if.then223
  br label %if.end230

if.end230:                                        ; preds = %if.end229, %if.end219
  br label %if.end231

if.end231:                                        ; preds = %if.end230, %if.end201
  br label %if.end232

if.end232:                                        ; preds = %if.end231, %if.end182
  br label %if.end233

if.end233:                                        ; preds = %if.end232, %if.end100
  store i8 1, i8* %retval, align 1, !dbg !11429
  br label %return, !dbg !11429

return:                                           ; preds = %if.end233, %if.else228, %if.then227, %if.else218, %if.then217, %if.else179, %if.then178, %if.else164, %if.then163
  %267 = load i8, i8* %retval, align 1, !dbg !11430
  ret i8 %267, !dbg !11430
}

; Function Attrs: noinline nounwind uwtable
define internal void @vec_add_dir(float* %r, float* %v1, float* %v2, float %fac) #0 !dbg !11431 {
entry:
  %r.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %fac.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11434, metadata !DIExpression()), !dbg !11435
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !11436, metadata !DIExpression()), !dbg !11437
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !11438, metadata !DIExpression()), !dbg !11439
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !11440, metadata !DIExpression()), !dbg !11441
  %0 = load float*, float** %v1.addr, align 8, !dbg !11442
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11442
  %1 = load float, float* %arrayidx, align 4, !dbg !11442
  %2 = load float, float* %fac.addr, align 4, !dbg !11443
  %3 = load float*, float** %v2.addr, align 8, !dbg !11444
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !11444
  %4 = load float, float* %arrayidx1, align 4, !dbg !11444
  %5 = load float*, float** %v1.addr, align 8, !dbg !11445
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 0, !dbg !11445
  %6 = load float, float* %arrayidx2, align 4, !dbg !11445
  %sub = fsub float %4, %6, !dbg !11446
  %mul = fmul float %2, %sub, !dbg !11447
  %add = fadd float %1, %mul, !dbg !11448
  %7 = load float*, float** %r.addr, align 8, !dbg !11449
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 0, !dbg !11449
  store float %add, float* %arrayidx3, align 4, !dbg !11450
  %8 = load float*, float** %v1.addr, align 8, !dbg !11451
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !11451
  %9 = load float, float* %arrayidx4, align 4, !dbg !11451
  %10 = load float, float* %fac.addr, align 4, !dbg !11452
  %11 = load float*, float** %v2.addr, align 8, !dbg !11453
  %arrayidx5 = getelementptr inbounds float, float* %11, i64 1, !dbg !11453
  %12 = load float, float* %arrayidx5, align 4, !dbg !11453
  %13 = load float*, float** %v1.addr, align 8, !dbg !11454
  %arrayidx6 = getelementptr inbounds float, float* %13, i64 1, !dbg !11454
  %14 = load float, float* %arrayidx6, align 4, !dbg !11454
  %sub7 = fsub float %12, %14, !dbg !11455
  %mul8 = fmul float %10, %sub7, !dbg !11456
  %add9 = fadd float %9, %mul8, !dbg !11457
  %15 = load float*, float** %r.addr, align 8, !dbg !11458
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 1, !dbg !11458
  store float %add9, float* %arrayidx10, align 4, !dbg !11459
  %16 = load float*, float** %v1.addr, align 8, !dbg !11460
  %arrayidx11 = getelementptr inbounds float, float* %16, i64 2, !dbg !11460
  %17 = load float, float* %arrayidx11, align 4, !dbg !11460
  %18 = load float, float* %fac.addr, align 4, !dbg !11461
  %19 = load float*, float** %v2.addr, align 8, !dbg !11462
  %arrayidx12 = getelementptr inbounds float, float* %19, i64 2, !dbg !11462
  %20 = load float, float* %arrayidx12, align 4, !dbg !11462
  %21 = load float*, float** %v1.addr, align 8, !dbg !11463
  %arrayidx13 = getelementptr inbounds float, float* %21, i64 2, !dbg !11463
  %22 = load float, float* %arrayidx13, align 4, !dbg !11463
  %sub14 = fsub float %20, %22, !dbg !11464
  %mul15 = fmul float %18, %sub14, !dbg !11465
  %add16 = fadd float %17, %mul15, !dbg !11466
  %23 = load float*, float** %r.addr, align 8, !dbg !11467
  %arrayidx17 = getelementptr inbounds float, float* %23, i64 2, !dbg !11467
  store float %add16, float* %arrayidx17, align 4, !dbg !11468
  ret void, !dbg !11469
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @form_factor_quad(float* %p, float* %n, float* %q0, float* %q1, float* %q2, float* %q3) #0 !dbg !11470 {
entry:
  %p.addr = alloca float*, align 8
  %n.addr = alloca float*, align 8
  %q0.addr = alloca float*, align 8
  %q1.addr = alloca float*, align 8
  %q2.addr = alloca float*, align 8
  %q3.addr = alloca float*, align 8
  %r0 = alloca [3 x float], align 4
  %r1 = alloca [3 x float], align 4
  %r2 = alloca [3 x float], align 4
  %r3 = alloca [3 x float], align 4
  %g0 = alloca [3 x float], align 4
  %g1 = alloca [3 x float], align 4
  %g2 = alloca [3 x float], align 4
  %g3 = alloca [3 x float], align 4
  %a1 = alloca float, align 4
  %a2 = alloca float, align 4
  %a3 = alloca float, align 4
  %a4 = alloca float, align 4
  %dot1 = alloca float, align 4
  %dot2 = alloca float, align 4
  %dot3 = alloca float, align 4
  %dot4 = alloca float, align 4
  %result = alloca float, align 4
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !11473, metadata !DIExpression()), !dbg !11474
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !11475, metadata !DIExpression()), !dbg !11476
  store float* %q0, float** %q0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %q0.addr, metadata !11477, metadata !DIExpression()), !dbg !11478
  store float* %q1, float** %q1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %q1.addr, metadata !11479, metadata !DIExpression()), !dbg !11480
  store float* %q2, float** %q2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %q2.addr, metadata !11481, metadata !DIExpression()), !dbg !11482
  store float* %q3, float** %q3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %q3.addr, metadata !11483, metadata !DIExpression()), !dbg !11484
  call void @llvm.dbg.declare(metadata [3 x float]* %r0, metadata !11485, metadata !DIExpression()), !dbg !11486
  call void @llvm.dbg.declare(metadata [3 x float]* %r1, metadata !11487, metadata !DIExpression()), !dbg !11488
  call void @llvm.dbg.declare(metadata [3 x float]* %r2, metadata !11489, metadata !DIExpression()), !dbg !11490
  call void @llvm.dbg.declare(metadata [3 x float]* %r3, metadata !11491, metadata !DIExpression()), !dbg !11492
  call void @llvm.dbg.declare(metadata [3 x float]* %g0, metadata !11493, metadata !DIExpression()), !dbg !11494
  call void @llvm.dbg.declare(metadata [3 x float]* %g1, metadata !11495, metadata !DIExpression()), !dbg !11496
  call void @llvm.dbg.declare(metadata [3 x float]* %g2, metadata !11497, metadata !DIExpression()), !dbg !11498
  call void @llvm.dbg.declare(metadata [3 x float]* %g3, metadata !11499, metadata !DIExpression()), !dbg !11500
  call void @llvm.dbg.declare(metadata float* %a1, metadata !11501, metadata !DIExpression()), !dbg !11502
  call void @llvm.dbg.declare(metadata float* %a2, metadata !11503, metadata !DIExpression()), !dbg !11504
  call void @llvm.dbg.declare(metadata float* %a3, metadata !11505, metadata !DIExpression()), !dbg !11506
  call void @llvm.dbg.declare(metadata float* %a4, metadata !11507, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.declare(metadata float* %dot1, metadata !11509, metadata !DIExpression()), !dbg !11510
  call void @llvm.dbg.declare(metadata float* %dot2, metadata !11511, metadata !DIExpression()), !dbg !11512
  call void @llvm.dbg.declare(metadata float* %dot3, metadata !11513, metadata !DIExpression()), !dbg !11514
  call void @llvm.dbg.declare(metadata float* %dot4, metadata !11515, metadata !DIExpression()), !dbg !11516
  call void @llvm.dbg.declare(metadata float* %result, metadata !11517, metadata !DIExpression()), !dbg !11518
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %r0, i64 0, i64 0, !dbg !11519
  %0 = load float*, float** %q0.addr, align 8, !dbg !11520
  %1 = load float*, float** %p.addr, align 8, !dbg !11521
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !11522
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %r1, i64 0, i64 0, !dbg !11523
  %2 = load float*, float** %q1.addr, align 8, !dbg !11524
  %3 = load float*, float** %p.addr, align 8, !dbg !11525
  call void @sub_v3_v3v3(float* %arraydecay1, float* %2, float* %3), !dbg !11526
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %r2, i64 0, i64 0, !dbg !11527
  %4 = load float*, float** %q2.addr, align 8, !dbg !11528
  %5 = load float*, float** %p.addr, align 8, !dbg !11529
  call void @sub_v3_v3v3(float* %arraydecay2, float* %4, float* %5), !dbg !11530
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %r3, i64 0, i64 0, !dbg !11531
  %6 = load float*, float** %q3.addr, align 8, !dbg !11532
  %7 = load float*, float** %p.addr, align 8, !dbg !11533
  call void @sub_v3_v3v3(float* %arraydecay3, float* %6, float* %7), !dbg !11534
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %r0, i64 0, i64 0, !dbg !11535
  call void @ff_normalize(float* %arraydecay4), !dbg !11536
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %r1, i64 0, i64 0, !dbg !11537
  call void @ff_normalize(float* %arraydecay5), !dbg !11538
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %r2, i64 0, i64 0, !dbg !11539
  call void @ff_normalize(float* %arraydecay6), !dbg !11540
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %r3, i64 0, i64 0, !dbg !11541
  call void @ff_normalize(float* %arraydecay7), !dbg !11542
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %g0, i64 0, i64 0, !dbg !11543
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %r1, i64 0, i64 0, !dbg !11544
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %r0, i64 0, i64 0, !dbg !11545
  call void @cross_v3_v3v3(float* %arraydecay8, float* %arraydecay9, float* %arraydecay10), !dbg !11546
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %g0, i64 0, i64 0, !dbg !11547
  call void @ff_normalize(float* %arraydecay11), !dbg !11548
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %g1, i64 0, i64 0, !dbg !11549
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %r2, i64 0, i64 0, !dbg !11550
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %r1, i64 0, i64 0, !dbg !11551
  call void @cross_v3_v3v3(float* %arraydecay12, float* %arraydecay13, float* %arraydecay14), !dbg !11552
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %g1, i64 0, i64 0, !dbg !11553
  call void @ff_normalize(float* %arraydecay15), !dbg !11554
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %g2, i64 0, i64 0, !dbg !11555
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %r3, i64 0, i64 0, !dbg !11556
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %r2, i64 0, i64 0, !dbg !11557
  call void @cross_v3_v3v3(float* %arraydecay16, float* %arraydecay17, float* %arraydecay18), !dbg !11558
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %g2, i64 0, i64 0, !dbg !11559
  call void @ff_normalize(float* %arraydecay19), !dbg !11560
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %g3, i64 0, i64 0, !dbg !11561
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %r0, i64 0, i64 0, !dbg !11562
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %r3, i64 0, i64 0, !dbg !11563
  call void @cross_v3_v3v3(float* %arraydecay20, float* %arraydecay21, float* %arraydecay22), !dbg !11564
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %g3, i64 0, i64 0, !dbg !11565
  call void @ff_normalize(float* %arraydecay23), !dbg !11566
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %r0, i64 0, i64 0, !dbg !11567
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %r1, i64 0, i64 0, !dbg !11568
  %call = call float @dot_v3v3(float* %arraydecay24, float* %arraydecay25), !dbg !11569
  %call26 = call float @saacosf(float %call), !dbg !11570
  store float %call26, float* %a1, align 4, !dbg !11571
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %r1, i64 0, i64 0, !dbg !11572
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %r2, i64 0, i64 0, !dbg !11573
  %call29 = call float @dot_v3v3(float* %arraydecay27, float* %arraydecay28), !dbg !11574
  %call30 = call float @saacosf(float %call29), !dbg !11575
  store float %call30, float* %a2, align 4, !dbg !11576
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %r2, i64 0, i64 0, !dbg !11577
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %r3, i64 0, i64 0, !dbg !11578
  %call33 = call float @dot_v3v3(float* %arraydecay31, float* %arraydecay32), !dbg !11579
  %call34 = call float @saacosf(float %call33), !dbg !11580
  store float %call34, float* %a3, align 4, !dbg !11581
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %r3, i64 0, i64 0, !dbg !11582
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %r0, i64 0, i64 0, !dbg !11583
  %call37 = call float @dot_v3v3(float* %arraydecay35, float* %arraydecay36), !dbg !11584
  %call38 = call float @saacosf(float %call37), !dbg !11585
  store float %call38, float* %a4, align 4, !dbg !11586
  %8 = load float*, float** %n.addr, align 8, !dbg !11587
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %g0, i64 0, i64 0, !dbg !11588
  %call40 = call float @dot_v3v3(float* %8, float* %arraydecay39), !dbg !11589
  store float %call40, float* %dot1, align 4, !dbg !11590
  %9 = load float*, float** %n.addr, align 8, !dbg !11591
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %g1, i64 0, i64 0, !dbg !11592
  %call42 = call float @dot_v3v3(float* %9, float* %arraydecay41), !dbg !11593
  store float %call42, float* %dot2, align 4, !dbg !11594
  %10 = load float*, float** %n.addr, align 8, !dbg !11595
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %g2, i64 0, i64 0, !dbg !11596
  %call44 = call float @dot_v3v3(float* %10, float* %arraydecay43), !dbg !11597
  store float %call44, float* %dot3, align 4, !dbg !11598
  %11 = load float*, float** %n.addr, align 8, !dbg !11599
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %g3, i64 0, i64 0, !dbg !11600
  %call46 = call float @dot_v3v3(float* %11, float* %arraydecay45), !dbg !11601
  store float %call46, float* %dot4, align 4, !dbg !11602
  %12 = load float, float* %a1, align 4, !dbg !11603
  %13 = load float, float* %dot1, align 4, !dbg !11604
  %mul = fmul float %12, %13, !dbg !11605
  %14 = load float, float* %a2, align 4, !dbg !11606
  %15 = load float, float* %dot2, align 4, !dbg !11607
  %mul47 = fmul float %14, %15, !dbg !11608
  %add = fadd float %mul, %mul47, !dbg !11609
  %16 = load float, float* %a3, align 4, !dbg !11610
  %17 = load float, float* %dot3, align 4, !dbg !11611
  %mul48 = fmul float %16, %17, !dbg !11612
  %add49 = fadd float %add, %mul48, !dbg !11613
  %18 = load float, float* %a4, align 4, !dbg !11614
  %19 = load float, float* %dot4, align 4, !dbg !11615
  %mul50 = fmul float %18, %19, !dbg !11616
  %add51 = fadd float %add49, %mul50, !dbg !11617
  %mul52 = fmul float %add51, 5.000000e-01, !dbg !11618
  %div = fdiv float %mul52, 0x400921FB60000000, !dbg !11619
  store float %div, float* %result, align 4, !dbg !11620
  %20 = load float, float* %result, align 4, !dbg !11621
  %cmp = fcmp ogt float %20, 0.000000e+00, !dbg !11621
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11621

cond.true:                                        ; preds = %entry
  %21 = load float, float* %result, align 4, !dbg !11621
  br label %cond.end, !dbg !11621

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !11621

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %21, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !11621
  store float %cond, float* %result, align 4, !dbg !11622
  %22 = load float, float* %result, align 4, !dbg !11623
  ret float %22, !dbg !11624
}

; Function Attrs: noinline nounwind uwtable
define internal void @ff_normalize(float* %n) #0 !dbg !11625 {
entry:
  %n.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !11626, metadata !DIExpression()), !dbg !11627
  call void @llvm.dbg.declare(metadata float* %d, metadata !11628, metadata !DIExpression()), !dbg !11629
  %0 = load float*, float** %n.addr, align 8, !dbg !11630
  %1 = load float*, float** %n.addr, align 8, !dbg !11631
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !11632
  store float %call, float* %d, align 4, !dbg !11633
  %2 = load float, float* %d, align 4, !dbg !11634
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !11636
  br i1 %cmp, label %if.then, label %if.end, !dbg !11637

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !11638
  %call1 = call float @sqrtf(float %3) #5, !dbg !11640
  %div = fdiv float 1.000000e+00, %call1, !dbg !11641
  store float %div, float* %d, align 4, !dbg !11642
  %4 = load float, float* %d, align 4, !dbg !11643
  %5 = load float*, float** %n.addr, align 8, !dbg !11644
  %arrayidx = getelementptr inbounds float, float* %5, i64 0, !dbg !11644
  %6 = load float, float* %arrayidx, align 4, !dbg !11645
  %mul = fmul float %6, %4, !dbg !11645
  store float %mul, float* %arrayidx, align 4, !dbg !11645
  %7 = load float, float* %d, align 4, !dbg !11646
  %8 = load float*, float** %n.addr, align 8, !dbg !11647
  %arrayidx2 = getelementptr inbounds float, float* %8, i64 1, !dbg !11647
  %9 = load float, float* %arrayidx2, align 4, !dbg !11648
  %mul3 = fmul float %9, %7, !dbg !11648
  store float %mul3, float* %arrayidx2, align 4, !dbg !11648
  %10 = load float, float* %d, align 4, !dbg !11649
  %11 = load float*, float** %n.addr, align 8, !dbg !11650
  %arrayidx4 = getelementptr inbounds float, float* %11, i64 2, !dbg !11650
  %12 = load float, float* %arrayidx4, align 4, !dbg !11651
  %mul5 = fmul float %12, %10, !dbg !11651
  store float %mul5, float* %arrayidx4, align 4, !dbg !11651
  br label %if.end, !dbg !11652

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11653
}

; Function Attrs: noinline nounwind uwtable
define internal float @saacosf(float %fac) #0 !dbg !11654 {
entry:
  %retval = alloca float, align 4
  %fac.addr = alloca float, align 4
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !11655, metadata !DIExpression()), !dbg !11656
  %0 = load float, float* %fac.addr, align 4, !dbg !11657
  %cmp = fcmp ole float %0, -1.000000e+00, !dbg !11657
  br i1 %cmp, label %if.then, label %if.else, !dbg !11659

if.then:                                          ; preds = %entry
  store float 0x400921FB60000000, float* %retval, align 4, !dbg !11660
  br label %return, !dbg !11660

if.else:                                          ; preds = %entry
  %1 = load float, float* %fac.addr, align 4, !dbg !11661
  %cmp1 = fcmp oge float %1, 1.000000e+00, !dbg !11661
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !11663

if.then2:                                         ; preds = %if.else
  store float 0.000000e+00, float* %retval, align 4, !dbg !11664
  br label %return, !dbg !11664

if.else3:                                         ; preds = %if.else
  %2 = load float, float* %fac.addr, align 4, !dbg !11665
  %call = call float @acosf(float %2) #5, !dbg !11666
  store float %call, float* %retval, align 4, !dbg !11667
  br label %return, !dbg !11667

return:                                           ; preds = %if.else3, %if.then2, %if.then
  %3 = load float, float* %retval, align 4, !dbg !11668
  ret float %3, !dbg !11668
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @form_factor_hemi_poly(float* %p, float* %n, float* %v1, float* %v2, float* %v3, float* %v4) #0 !dbg !11669 {
entry:
  %p.addr = alloca float*, align 8
  %n.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  %q0 = alloca [3 x float], align 4
  %q1 = alloca [3 x float], align 4
  %q2 = alloca [3 x float], align 4
  %q3 = alloca [3 x float], align 4
  %contrib = alloca float, align 4
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !11672, metadata !DIExpression()), !dbg !11673
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !11674, metadata !DIExpression()), !dbg !11675
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !11676, metadata !DIExpression()), !dbg !11677
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !11678, metadata !DIExpression()), !dbg !11679
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !11680, metadata !DIExpression()), !dbg !11681
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !11682, metadata !DIExpression()), !dbg !11683
  call void @llvm.dbg.declare(metadata [3 x float]* %q0, metadata !11684, metadata !DIExpression()), !dbg !11685
  call void @llvm.dbg.declare(metadata [3 x float]* %q1, metadata !11686, metadata !DIExpression()), !dbg !11687
  call void @llvm.dbg.declare(metadata [3 x float]* %q2, metadata !11688, metadata !DIExpression()), !dbg !11689
  call void @llvm.dbg.declare(metadata [3 x float]* %q3, metadata !11690, metadata !DIExpression()), !dbg !11691
  call void @llvm.dbg.declare(metadata float* %contrib, metadata !11692, metadata !DIExpression()), !dbg !11693
  store float 0.000000e+00, float* %contrib, align 4, !dbg !11693
  %0 = load float*, float** %p.addr, align 8, !dbg !11694
  %1 = load float*, float** %n.addr, align 8, !dbg !11696
  %2 = load float*, float** %v1.addr, align 8, !dbg !11697
  %3 = load float*, float** %v2.addr, align 8, !dbg !11698
  %4 = load float*, float** %v3.addr, align 8, !dbg !11699
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %q0, i64 0, i64 0, !dbg !11700
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %q1, i64 0, i64 0, !dbg !11701
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %q2, i64 0, i64 0, !dbg !11702
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %q3, i64 0, i64 0, !dbg !11703
  %call = call zeroext i8 @form_factor_visible_quad(float* %0, float* %1, float* %2, float* %3, float* %4, float* %arraydecay, float* %arraydecay1, float* %arraydecay2, float* %arraydecay3), !dbg !11704
  %tobool = icmp ne i8 %call, 0, !dbg !11704
  br i1 %tobool, label %if.then, label %if.end, !dbg !11705

if.then:                                          ; preds = %entry
  %5 = load float*, float** %p.addr, align 8, !dbg !11706
  %6 = load float*, float** %n.addr, align 8, !dbg !11707
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %q0, i64 0, i64 0, !dbg !11708
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %q1, i64 0, i64 0, !dbg !11709
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %q2, i64 0, i64 0, !dbg !11710
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %q3, i64 0, i64 0, !dbg !11711
  %call8 = call float @form_factor_quad(float* %5, float* %6, float* %arraydecay4, float* %arraydecay5, float* %arraydecay6, float* %arraydecay7), !dbg !11712
  %7 = load float, float* %contrib, align 4, !dbg !11713
  %add = fadd float %7, %call8, !dbg !11713
  store float %add, float* %contrib, align 4, !dbg !11713
  br label %if.end, !dbg !11714

if.end:                                           ; preds = %if.then, %entry
  %8 = load float*, float** %v4.addr, align 8, !dbg !11715
  %tobool9 = icmp ne float* %8, null, !dbg !11715
  br i1 %tobool9, label %land.lhs.true, label %if.end23, !dbg !11717

land.lhs.true:                                    ; preds = %if.end
  %9 = load float*, float** %p.addr, align 8, !dbg !11718
  %10 = load float*, float** %n.addr, align 8, !dbg !11719
  %11 = load float*, float** %v1.addr, align 8, !dbg !11720
  %12 = load float*, float** %v3.addr, align 8, !dbg !11721
  %13 = load float*, float** %v4.addr, align 8, !dbg !11722
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %q0, i64 0, i64 0, !dbg !11723
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %q1, i64 0, i64 0, !dbg !11724
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %q2, i64 0, i64 0, !dbg !11725
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %q3, i64 0, i64 0, !dbg !11726
  %call14 = call zeroext i8 @form_factor_visible_quad(float* %9, float* %10, float* %11, float* %12, float* %13, float* %arraydecay10, float* %arraydecay11, float* %arraydecay12, float* %arraydecay13), !dbg !11727
  %conv = zext i8 %call14 to i32, !dbg !11727
  %tobool15 = icmp ne i32 %conv, 0, !dbg !11727
  br i1 %tobool15, label %if.then16, label %if.end23, !dbg !11728

if.then16:                                        ; preds = %land.lhs.true
  %14 = load float*, float** %p.addr, align 8, !dbg !11729
  %15 = load float*, float** %n.addr, align 8, !dbg !11730
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %q0, i64 0, i64 0, !dbg !11731
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %q1, i64 0, i64 0, !dbg !11732
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %q2, i64 0, i64 0, !dbg !11733
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %q3, i64 0, i64 0, !dbg !11734
  %call21 = call float @form_factor_quad(float* %14, float* %15, float* %arraydecay17, float* %arraydecay18, float* %arraydecay19, float* %arraydecay20), !dbg !11735
  %16 = load float, float* %contrib, align 4, !dbg !11736
  %add22 = fadd float %16, %call21, !dbg !11736
  store float %add22, float* %contrib, align 4, !dbg !11736
  br label %if.end23, !dbg !11737

if.end23:                                         ; preds = %if.then16, %land.lhs.true, %if.end
  %17 = load float, float* %contrib, align 4, !dbg !11738
  ret float %17, !dbg !11739
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @is_quad_convex_v3(float* %v1, float* %v2, float* %v3, float* %v4) #0 !dbg !11740 {
entry:
  %retval = alloca i8, align 1
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  %nor = alloca [3 x float], align 4
  %nor_a = alloca [3 x float], align 4
  %nor_b = alloca [3 x float], align 4
  %vec = alloca [4 x [2 x float]], align 16
  %mat = alloca [3 x [3 x float]], align 16
  %is_ok_a = alloca i8, align 1
  %is_ok_b = alloca i8, align 1
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !11741, metadata !DIExpression()), !dbg !11742
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !11743, metadata !DIExpression()), !dbg !11744
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !11745, metadata !DIExpression()), !dbg !11746
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !11747, metadata !DIExpression()), !dbg !11748
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !11749, metadata !DIExpression()), !dbg !11750
  call void @llvm.dbg.declare(metadata [3 x float]* %nor_a, metadata !11751, metadata !DIExpression()), !dbg !11752
  call void @llvm.dbg.declare(metadata [3 x float]* %nor_b, metadata !11753, metadata !DIExpression()), !dbg !11754
  call void @llvm.dbg.declare(metadata [4 x [2 x float]]* %vec, metadata !11755, metadata !DIExpression()), !dbg !11757
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat, metadata !11758, metadata !DIExpression()), !dbg !11759
  call void @llvm.dbg.declare(metadata i8* %is_ok_a, metadata !11760, metadata !DIExpression()), !dbg !11761
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %nor_a, i64 0, i64 0, !dbg !11762
  %0 = load float*, float** %v1.addr, align 8, !dbg !11763
  %1 = load float*, float** %v2.addr, align 8, !dbg !11764
  %2 = load float*, float** %v3.addr, align 8, !dbg !11765
  %call = call float @normal_tri_v3(float* %arraydecay, float* %0, float* %1, float* %2), !dbg !11766
  %cmp = fcmp ogt float %call, 0x3E80000000000000, !dbg !11767
  %conv = zext i1 %cmp to i32, !dbg !11767
  %conv1 = trunc i32 %conv to i8, !dbg !11768
  store i8 %conv1, i8* %is_ok_a, align 1, !dbg !11761
  call void @llvm.dbg.declare(metadata i8* %is_ok_b, metadata !11769, metadata !DIExpression()), !dbg !11770
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %nor_b, i64 0, i64 0, !dbg !11771
  %3 = load float*, float** %v1.addr, align 8, !dbg !11772
  %4 = load float*, float** %v3.addr, align 8, !dbg !11773
  %5 = load float*, float** %v4.addr, align 8, !dbg !11774
  %call3 = call float @normal_tri_v3(float* %arraydecay2, float* %3, float* %4, float* %5), !dbg !11775
  %cmp4 = fcmp ogt float %call3, 0x3E80000000000000, !dbg !11776
  %conv5 = zext i1 %cmp4 to i32, !dbg !11776
  %conv6 = trunc i32 %conv5 to i8, !dbg !11777
  store i8 %conv6, i8* %is_ok_b, align 1, !dbg !11770
  %6 = load i8, i8* %is_ok_a, align 1, !dbg !11778
  %tobool = icmp ne i8 %6, 0, !dbg !11778
  br i1 %tobool, label %if.then, label %if.else24, !dbg !11780

if.then:                                          ; preds = %entry
  %7 = load i8, i8* %is_ok_b, align 1, !dbg !11781
  %tobool7 = icmp ne i8 %7, 0, !dbg !11781
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !11784

if.then8:                                         ; preds = %if.then
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %nor_a, i64 0, i64 0, !dbg !11785
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %nor_b, i64 0, i64 0, !dbg !11785
  %call11 = call float @dot_v3v3(float* %arraydecay9, float* %arraydecay10), !dbg !11785
  %cmp12 = fcmp olt float %call11, 0.000000e+00, !dbg !11785
  br i1 %cmp12, label %if.then14, label %if.end, !dbg !11788

if.then14:                                        ; preds = %if.then8
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %nor_b, i64 0, i64 0, !dbg !11789
  call void @negate_v3(float* %arraydecay15), !dbg !11791
  br label %if.end, !dbg !11792

if.end:                                           ; preds = %if.then14, %if.then8
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !11793
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %nor_a, i64 0, i64 0, !dbg !11794
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %nor_b, i64 0, i64 0, !dbg !11795
  call void @add_v3_v3v3(float* %arraydecay16, float* %arraydecay17, float* %arraydecay18), !dbg !11796
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !11797
  %call20 = call float @normalize_v3(float* %arraydecay19), !dbg !11798
  br label %if.end23, !dbg !11799

if.else:                                          ; preds = %if.then
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !11800
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %nor_a, i64 0, i64 0, !dbg !11802
  call void @copy_v3_v3(float* %arraydecay21, float* %arraydecay22), !dbg !11803
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.end
  br label %if.end31, !dbg !11804

if.else24:                                        ; preds = %entry
  %8 = load i8, i8* %is_ok_b, align 1, !dbg !11805
  %tobool25 = icmp ne i8 %8, 0, !dbg !11805
  br i1 %tobool25, label %if.then26, label %if.else29, !dbg !11808

if.then26:                                        ; preds = %if.else24
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !11809
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %nor_b, i64 0, i64 0, !dbg !11811
  call void @copy_v3_v3(float* %arraydecay27, float* %arraydecay28), !dbg !11812
  br label %if.end30, !dbg !11813

if.else29:                                        ; preds = %if.else24
  store i8 0, i8* %retval, align 1, !dbg !11814
  br label %return, !dbg !11814

if.end30:                                         ; preds = %if.then26
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.end23
  %arraydecay32 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !11816
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !11817
  call void @axis_dominant_v3_to_m3([3 x float]* %arraydecay32, float* %arraydecay33), !dbg !11818
  %arrayidx = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 0, !dbg !11819
  %arraydecay34 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !11819
  %arraydecay35 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !11820
  %9 = load float*, float** %v1.addr, align 8, !dbg !11821
  call void @mul_v2_m3v3(float* %arraydecay34, [3 x float]* %arraydecay35, float* %9), !dbg !11822
  %arrayidx36 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 1, !dbg !11823
  %arraydecay37 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx36, i64 0, i64 0, !dbg !11823
  %arraydecay38 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !11824
  %10 = load float*, float** %v2.addr, align 8, !dbg !11825
  call void @mul_v2_m3v3(float* %arraydecay37, [3 x float]* %arraydecay38, float* %10), !dbg !11826
  %arrayidx39 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 2, !dbg !11827
  %arraydecay40 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx39, i64 0, i64 0, !dbg !11827
  %arraydecay41 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !11828
  %11 = load float*, float** %v3.addr, align 8, !dbg !11829
  call void @mul_v2_m3v3(float* %arraydecay40, [3 x float]* %arraydecay41, float* %11), !dbg !11830
  %arrayidx42 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 3, !dbg !11831
  %arraydecay43 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx42, i64 0, i64 0, !dbg !11831
  %arraydecay44 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !11832
  %12 = load float*, float** %v4.addr, align 8, !dbg !11833
  call void @mul_v2_m3v3(float* %arraydecay43, [3 x float]* %arraydecay44, float* %12), !dbg !11834
  %arrayidx45 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 0, !dbg !11835
  %arraydecay46 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx45, i64 0, i64 0, !dbg !11835
  %arrayidx47 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 2, !dbg !11836
  %arraydecay48 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx47, i64 0, i64 0, !dbg !11836
  %arrayidx49 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 1, !dbg !11837
  %arraydecay50 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx49, i64 0, i64 0, !dbg !11837
  %arrayidx51 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 3, !dbg !11838
  %arraydecay52 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx51, i64 0, i64 0, !dbg !11838
  %call53 = call i32 @isect_line_line_v2(float* %arraydecay46, float* %arraydecay48, float* %arraydecay50, float* %arraydecay52), !dbg !11839
  %cmp54 = icmp sgt i32 %call53, 0, !dbg !11840
  %conv55 = zext i1 %cmp54 to i32, !dbg !11840
  %conv56 = trunc i32 %conv55 to i8, !dbg !11841
  store i8 %conv56, i8* %retval, align 1, !dbg !11842
  br label %return, !dbg !11842

return:                                           ; preds = %if.end31, %if.else29
  %13 = load i8, i8* %retval, align 1, !dbg !11843
  ret i8 %13, !dbg !11843
}

declare dso_local void @mul_v2_m3v3(float*, [3 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @is_quad_convex_v2(float* %v1, float* %v2, float* %v3, float* %v4) #0 !dbg !11844 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !11845, metadata !DIExpression()), !dbg !11846
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !11847, metadata !DIExpression()), !dbg !11848
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !11849, metadata !DIExpression()), !dbg !11850
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !11851, metadata !DIExpression()), !dbg !11852
  %0 = load float*, float** %v1.addr, align 8, !dbg !11853
  %1 = load float*, float** %v3.addr, align 8, !dbg !11854
  %2 = load float*, float** %v2.addr, align 8, !dbg !11855
  %3 = load float*, float** %v4.addr, align 8, !dbg !11856
  %call = call i32 @isect_line_line_v2(float* %0, float* %1, float* %2, float* %3), !dbg !11857
  %cmp = icmp sgt i32 %call, 0, !dbg !11858
  %conv = zext i1 %cmp to i32, !dbg !11858
  %conv1 = trunc i32 %conv to i8, !dbg !11859
  ret i8 %conv1, !dbg !11860
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @is_poly_convex_v2([2 x float]* %verts, i32 %nr) #0 !dbg !11861 {
entry:
  %retval = alloca i8, align 1
  %verts.addr = alloca [2 x float]*, align 8
  %nr.addr = alloca i32, align 4
  %sign_flag = alloca i32, align 4
  %a = alloca i32, align 4
  %co_curr = alloca float*, align 8
  %co_prev = alloca float*, align 8
  %dir_curr = alloca [2 x float], align 4
  %dir_prev = alloca [2 x float], align 4
  %cross = alloca float, align 4
  store [2 x float]* %verts, [2 x float]** %verts.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %verts.addr, metadata !11864, metadata !DIExpression()), !dbg !11865
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !11866, metadata !DIExpression()), !dbg !11867
  call void @llvm.dbg.declare(metadata i32* %sign_flag, metadata !11868, metadata !DIExpression()), !dbg !11869
  store i32 0, i32* %sign_flag, align 4, !dbg !11869
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11870, metadata !DIExpression()), !dbg !11871
  call void @llvm.dbg.declare(metadata float** %co_curr, metadata !11872, metadata !DIExpression()), !dbg !11873
  call void @llvm.dbg.declare(metadata float** %co_prev, metadata !11874, metadata !DIExpression()), !dbg !11875
  call void @llvm.dbg.declare(metadata [2 x float]* %dir_curr, metadata !11876, metadata !DIExpression()), !dbg !11877
  call void @llvm.dbg.declare(metadata [2 x float]* %dir_prev, metadata !11878, metadata !DIExpression()), !dbg !11879
  %0 = load [2 x float]*, [2 x float]** %verts.addr, align 8, !dbg !11880
  %1 = load i32, i32* %nr.addr, align 4, !dbg !11881
  %sub = sub i32 %1, 1, !dbg !11882
  %idxprom = zext i32 %sub to i64, !dbg !11880
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %0, i64 %idxprom, !dbg !11880
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !11880
  store float* %arraydecay, float** %co_prev, align 8, !dbg !11883
  %2 = load [2 x float]*, [2 x float]** %verts.addr, align 8, !dbg !11884
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %2, i64 0, !dbg !11884
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx1, i64 0, i64 0, !dbg !11884
  store float* %arraydecay2, float** %co_curr, align 8, !dbg !11885
  %arraydecay3 = getelementptr inbounds [2 x float], [2 x float]* %dir_prev, i64 0, i64 0, !dbg !11886
  %3 = load [2 x float]*, [2 x float]** %verts.addr, align 8, !dbg !11887
  %4 = load i32, i32* %nr.addr, align 4, !dbg !11888
  %sub4 = sub i32 %4, 2, !dbg !11889
  %idxprom5 = zext i32 %sub4 to i64, !dbg !11887
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %3, i64 %idxprom5, !dbg !11887
  %arraydecay7 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx6, i64 0, i64 0, !dbg !11887
  %5 = load float*, float** %co_prev, align 8, !dbg !11890
  call void @sub_v2_v2v2(float* %arraydecay3, float* %arraydecay7, float* %5), !dbg !11891
  store i32 0, i32* %a, align 4, !dbg !11892
  br label %for.cond, !dbg !11894

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %a, align 4, !dbg !11895
  %7 = load i32, i32* %nr.addr, align 4, !dbg !11897
  %cmp = icmp ult i32 %6, %7, !dbg !11898
  br i1 %cmp, label %for.body, label %for.end, !dbg !11899

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %cross, metadata !11900, metadata !DIExpression()), !dbg !11902
  %arraydecay8 = getelementptr inbounds [2 x float], [2 x float]* %dir_curr, i64 0, i64 0, !dbg !11903
  %8 = load float*, float** %co_prev, align 8, !dbg !11904
  %9 = load float*, float** %co_curr, align 8, !dbg !11905
  call void @sub_v2_v2v2(float* %arraydecay8, float* %8, float* %9), !dbg !11906
  %arraydecay9 = getelementptr inbounds [2 x float], [2 x float]* %dir_prev, i64 0, i64 0, !dbg !11907
  %arraydecay10 = getelementptr inbounds [2 x float], [2 x float]* %dir_curr, i64 0, i64 0, !dbg !11908
  %call = call float @cross_v2v2(float* %arraydecay9, float* %arraydecay10), !dbg !11909
  store float %call, float* %cross, align 4, !dbg !11910
  %10 = load float, float* %cross, align 4, !dbg !11911
  %cmp11 = fcmp olt float %10, 0.000000e+00, !dbg !11913
  br i1 %cmp11, label %if.then, label %if.else, !dbg !11914

if.then:                                          ; preds = %for.body
  %11 = load i32, i32* %sign_flag, align 4, !dbg !11915
  %or = or i32 %11, 1, !dbg !11915
  store i32 %or, i32* %sign_flag, align 4, !dbg !11915
  br label %if.end15, !dbg !11917

if.else:                                          ; preds = %for.body
  %12 = load float, float* %cross, align 4, !dbg !11918
  %cmp12 = fcmp ogt float %12, 0.000000e+00, !dbg !11920
  br i1 %cmp12, label %if.then13, label %if.end, !dbg !11921

if.then13:                                        ; preds = %if.else
  %13 = load i32, i32* %sign_flag, align 4, !dbg !11922
  %or14 = or i32 %13, 2, !dbg !11922
  store i32 %or14, i32* %sign_flag, align 4, !dbg !11922
  br label %if.end, !dbg !11924

if.end:                                           ; preds = %if.then13, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  %14 = load i32, i32* %sign_flag, align 4, !dbg !11925
  %cmp16 = icmp eq i32 %14, 3, !dbg !11927
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !11928

if.then17:                                        ; preds = %if.end15
  store i8 0, i8* %retval, align 1, !dbg !11929
  br label %return, !dbg !11929

if.end18:                                         ; preds = %if.end15
  %arraydecay19 = getelementptr inbounds [2 x float], [2 x float]* %dir_prev, i64 0, i64 0, !dbg !11931
  %arraydecay20 = getelementptr inbounds [2 x float], [2 x float]* %dir_curr, i64 0, i64 0, !dbg !11932
  call void @copy_v2_v2(float* %arraydecay19, float* %arraydecay20), !dbg !11933
  %15 = load float*, float** %co_curr, align 8, !dbg !11934
  store float* %15, float** %co_prev, align 8, !dbg !11935
  %16 = load float*, float** %co_curr, align 8, !dbg !11936
  %add.ptr = getelementptr inbounds float, float* %16, i64 2, !dbg !11936
  store float* %add.ptr, float** %co_curr, align 8, !dbg !11936
  br label %for.inc, !dbg !11937

for.inc:                                          ; preds = %if.end18
  %17 = load i32, i32* %a, align 4, !dbg !11938
  %inc = add i32 %17, 1, !dbg !11938
  store i32 %inc, i32* %a, align 4, !dbg !11938
  br label %for.cond, !dbg !11939, !llvm.loop !11940

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %retval, align 1, !dbg !11942
  br label %return, !dbg !11942

return:                                           ; preds = %for.end, %if.then17
  %18 = load i8, i8* %retval, align 1, !dbg !11943
  ret i8 %18, !dbg !11943
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !11944 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11945, metadata !DIExpression()), !dbg !11946
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11947, metadata !DIExpression()), !dbg !11948
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !11949, metadata !DIExpression()), !dbg !11950
  %0 = load float*, float** %a.addr, align 8, !dbg !11951
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11951
  %1 = load float, float* %arrayidx, align 4, !dbg !11951
  %2 = load float, float* %f.addr, align 4, !dbg !11952
  %mul = fmul float %1, %2, !dbg !11953
  %3 = load float*, float** %r.addr, align 8, !dbg !11954
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !11954
  store float %mul, float* %arrayidx1, align 4, !dbg !11955
  %4 = load float*, float** %a.addr, align 8, !dbg !11956
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !11956
  %5 = load float, float* %arrayidx2, align 4, !dbg !11956
  %6 = load float, float* %f.addr, align 4, !dbg !11957
  %mul3 = fmul float %5, %6, !dbg !11958
  %7 = load float*, float** %r.addr, align 8, !dbg !11959
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !11959
  store float %mul3, float* %arrayidx4, align 4, !dbg !11960
  %8 = load float*, float** %a.addr, align 8, !dbg !11961
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !11961
  %9 = load float, float* %arrayidx5, align 4, !dbg !11961
  %10 = load float, float* %f.addr, align 4, !dbg !11962
  %mul6 = fmul float %9, %10, !dbg !11963
  %11 = load float*, float** %r.addr, align 8, !dbg !11964
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !11964
  store float %mul6, float* %arrayidx7, align 4, !dbg !11965
  ret void, !dbg !11966
}

; Function Attrs: noinline nounwind uwtable
define internal void @axis_dominant_v3(i32* %r_axis_a, i32* %r_axis_b, float* %axis) #0 !dbg !11967 {
entry:
  %r_axis_a.addr = alloca i32*, align 8
  %r_axis_b.addr = alloca i32*, align 8
  %axis.addr = alloca float*, align 8
  %xn = alloca float, align 4
  %yn = alloca float, align 4
  %zn = alloca float, align 4
  store i32* %r_axis_a, i32** %r_axis_a.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_axis_a.addr, metadata !11970, metadata !DIExpression()), !dbg !11971
  store i32* %r_axis_b, i32** %r_axis_b.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_axis_b.addr, metadata !11972, metadata !DIExpression()), !dbg !11973
  store float* %axis, float** %axis.addr, align 8
  call void @llvm.dbg.declare(metadata float** %axis.addr, metadata !11974, metadata !DIExpression()), !dbg !11975
  call void @llvm.dbg.declare(metadata float* %xn, metadata !11976, metadata !DIExpression()), !dbg !11977
  %0 = load float*, float** %axis.addr, align 8, !dbg !11978
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11978
  %1 = load float, float* %arrayidx, align 4, !dbg !11978
  %2 = call float @llvm.fabs.f32(float %1), !dbg !11979
  store float %2, float* %xn, align 4, !dbg !11977
  call void @llvm.dbg.declare(metadata float* %yn, metadata !11980, metadata !DIExpression()), !dbg !11981
  %3 = load float*, float** %axis.addr, align 8, !dbg !11982
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !11982
  %4 = load float, float* %arrayidx1, align 4, !dbg !11982
  %5 = call float @llvm.fabs.f32(float %4), !dbg !11983
  store float %5, float* %yn, align 4, !dbg !11981
  call void @llvm.dbg.declare(metadata float* %zn, metadata !11984, metadata !DIExpression()), !dbg !11985
  %6 = load float*, float** %axis.addr, align 8, !dbg !11986
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 2, !dbg !11986
  %7 = load float, float* %arrayidx2, align 4, !dbg !11986
  %8 = call float @llvm.fabs.f32(float %7), !dbg !11987
  store float %8, float* %zn, align 4, !dbg !11985
  %9 = load float, float* %zn, align 4, !dbg !11988
  %10 = load float, float* %xn, align 4, !dbg !11990
  %cmp = fcmp oge float %9, %10, !dbg !11991
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !11992

land.lhs.true:                                    ; preds = %entry
  %11 = load float, float* %zn, align 4, !dbg !11993
  %12 = load float, float* %yn, align 4, !dbg !11994
  %cmp3 = fcmp oge float %11, %12, !dbg !11995
  br i1 %cmp3, label %if.then, label %if.else, !dbg !11996

if.then:                                          ; preds = %land.lhs.true
  %13 = load i32*, i32** %r_axis_a.addr, align 8, !dbg !11997
  store i32 0, i32* %13, align 4, !dbg !11999
  %14 = load i32*, i32** %r_axis_b.addr, align 8, !dbg !12000
  store i32 1, i32* %14, align 4, !dbg !12001
  br label %if.end9, !dbg !12002

if.else:                                          ; preds = %land.lhs.true, %entry
  %15 = load float, float* %yn, align 4, !dbg !12003
  %16 = load float, float* %xn, align 4, !dbg !12005
  %cmp4 = fcmp oge float %15, %16, !dbg !12006
  br i1 %cmp4, label %land.lhs.true5, label %if.else8, !dbg !12007

land.lhs.true5:                                   ; preds = %if.else
  %17 = load float, float* %yn, align 4, !dbg !12008
  %18 = load float, float* %zn, align 4, !dbg !12009
  %cmp6 = fcmp oge float %17, %18, !dbg !12010
  br i1 %cmp6, label %if.then7, label %if.else8, !dbg !12011

if.then7:                                         ; preds = %land.lhs.true5
  %19 = load i32*, i32** %r_axis_a.addr, align 8, !dbg !12012
  store i32 0, i32* %19, align 4, !dbg !12014
  %20 = load i32*, i32** %r_axis_b.addr, align 8, !dbg !12015
  store i32 2, i32* %20, align 4, !dbg !12016
  br label %if.end, !dbg !12017

if.else8:                                         ; preds = %land.lhs.true5, %if.else
  %21 = load i32*, i32** %r_axis_a.addr, align 8, !dbg !12018
  store i32 1, i32* %21, align 4, !dbg !12020
  %22 = load i32*, i32** %r_axis_b.addr, align 8, !dbg !12021
  store i32 2, i32* %22, align 4, !dbg !12022
  br label %if.end

if.end:                                           ; preds = %if.else8, %if.then7
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  ret void, !dbg !12023
}

; Function Attrs: noinline nounwind uwtable
define internal float @tri_signed_area(float* %v1, float* %v2, float* %v3, i32 %i, i32 %j) #0 !dbg !12024 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %i.addr = alloca i32, align 4
  %j.addr = alloca i32, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !12027, metadata !DIExpression()), !dbg !12028
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !12029, metadata !DIExpression()), !dbg !12030
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !12031, metadata !DIExpression()), !dbg !12032
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !12033, metadata !DIExpression()), !dbg !12034
  store i32 %j, i32* %j.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %j.addr, metadata !12035, metadata !DIExpression()), !dbg !12036
  %0 = load float*, float** %v1.addr, align 8, !dbg !12037
  %1 = load i32, i32* %i.addr, align 4, !dbg !12038
  %idxprom = sext i32 %1 to i64, !dbg !12037
  %arrayidx = getelementptr inbounds float, float* %0, i64 %idxprom, !dbg !12037
  %2 = load float, float* %arrayidx, align 4, !dbg !12037
  %3 = load float*, float** %v2.addr, align 8, !dbg !12039
  %4 = load i32, i32* %i.addr, align 4, !dbg !12040
  %idxprom1 = sext i32 %4 to i64, !dbg !12039
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 %idxprom1, !dbg !12039
  %5 = load float, float* %arrayidx2, align 4, !dbg !12039
  %sub = fsub float %2, %5, !dbg !12041
  %6 = load float*, float** %v2.addr, align 8, !dbg !12042
  %7 = load i32, i32* %j.addr, align 4, !dbg !12043
  %idxprom3 = sext i32 %7 to i64, !dbg !12042
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 %idxprom3, !dbg !12042
  %8 = load float, float* %arrayidx4, align 4, !dbg !12042
  %9 = load float*, float** %v3.addr, align 8, !dbg !12044
  %10 = load i32, i32* %j.addr, align 4, !dbg !12045
  %idxprom5 = sext i32 %10 to i64, !dbg !12044
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 %idxprom5, !dbg !12044
  %11 = load float, float* %arrayidx6, align 4, !dbg !12044
  %sub7 = fsub float %8, %11, !dbg !12046
  %mul = fmul float %sub, %sub7, !dbg !12047
  %12 = load float*, float** %v1.addr, align 8, !dbg !12048
  %13 = load i32, i32* %j.addr, align 4, !dbg !12049
  %idxprom8 = sext i32 %13 to i64, !dbg !12048
  %arrayidx9 = getelementptr inbounds float, float* %12, i64 %idxprom8, !dbg !12048
  %14 = load float, float* %arrayidx9, align 4, !dbg !12048
  %15 = load float*, float** %v2.addr, align 8, !dbg !12050
  %16 = load i32, i32* %j.addr, align 4, !dbg !12051
  %idxprom10 = sext i32 %16 to i64, !dbg !12050
  %arrayidx11 = getelementptr inbounds float, float* %15, i64 %idxprom10, !dbg !12050
  %17 = load float, float* %arrayidx11, align 4, !dbg !12050
  %sub12 = fsub float %14, %17, !dbg !12052
  %18 = load float*, float** %v3.addr, align 8, !dbg !12053
  %19 = load i32, i32* %i.addr, align 4, !dbg !12054
  %idxprom13 = sext i32 %19 to i64, !dbg !12053
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 %idxprom13, !dbg !12053
  %20 = load float, float* %arrayidx14, align 4, !dbg !12053
  %21 = load float*, float** %v2.addr, align 8, !dbg !12055
  %22 = load i32, i32* %i.addr, align 4, !dbg !12056
  %idxprom15 = sext i32 %22 to i64, !dbg !12055
  %arrayidx16 = getelementptr inbounds float, float* %21, i64 %idxprom15, !dbg !12055
  %23 = load float, float* %arrayidx16, align 4, !dbg !12055
  %sub17 = fsub float %20, %23, !dbg !12057
  %mul18 = fmul float %sub12, %sub17, !dbg !12058
  %add = fadd float %mul, %mul18, !dbg !12059
  %mul19 = fmul float 5.000000e-01, %add, !dbg !12060
  ret float %mul19, !dbg !12061
}

; Function Attrs: nounwind
declare dso_local float @acosf(float) #3

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!11}
!llvm.module.flags = !{!21, !22, !23}
!llvm.ident = !{!24}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "epsilon", scope: !2, file: !3, line: 3512, type: !8, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "form_factor_visible_quad", scope: !3, file: !3, line: 3508, type: !4, scopeLine: 3511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!3 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_geom.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DISubroutineType(types: !5)
!5 = !{!6, !7, !7, !7, !7, !7, !10, !10, !10, !10}
!6 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!7 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64)
!8 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9)
!9 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!11 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !12, retainedTypes: !13, globals: !20, splitDebugInlining: false, nameTableKind: None)
!12 = !{}
!13 = !{!9, !14, !17, !18, !19}
!14 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !15, line: 46, baseType: !16)
!15 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!16 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!17 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!18 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!19 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!20 = !{!0}
!21 = !{i32 7, !"Dwarf Version", i32 4}
!22 = !{i32 2, !"Debug Info Version", i32 3}
!23 = !{i32 1, !"wchar_size", i32 4}
!24 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!25 = distinct !DISubprogram(name: "cent_tri_v3", scope: !3, file: !3, line: 39, type: !26, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!26 = !DISubroutineType(types: !27)
!27 = !{null, !10, !7, !7, !7}
!28 = !DILocalVariable(name: "cent", arg: 1, scope: !25, file: !3, line: 39, type: !10)
!29 = !DILocation(line: 39, column: 24, scope: !25)
!30 = !DILocalVariable(name: "v1", arg: 2, scope: !25, file: !3, line: 39, type: !7)
!31 = !DILocation(line: 39, column: 45, scope: !25)
!32 = !DILocalVariable(name: "v2", arg: 3, scope: !25, file: !3, line: 39, type: !7)
!33 = !DILocation(line: 39, column: 64, scope: !25)
!34 = !DILocalVariable(name: "v3", arg: 4, scope: !25, file: !3, line: 39, type: !7)
!35 = !DILocation(line: 39, column: 83, scope: !25)
!36 = !DILocation(line: 41, column: 13, scope: !25)
!37 = !DILocation(line: 41, column: 21, scope: !25)
!38 = !DILocation(line: 41, column: 19, scope: !25)
!39 = !DILocation(line: 41, column: 29, scope: !25)
!40 = !DILocation(line: 41, column: 27, scope: !25)
!41 = !DILocation(line: 41, column: 36, scope: !25)
!42 = !DILocation(line: 41, column: 2, scope: !25)
!43 = !DILocation(line: 41, column: 10, scope: !25)
!44 = !DILocation(line: 42, column: 13, scope: !25)
!45 = !DILocation(line: 42, column: 21, scope: !25)
!46 = !DILocation(line: 42, column: 19, scope: !25)
!47 = !DILocation(line: 42, column: 29, scope: !25)
!48 = !DILocation(line: 42, column: 27, scope: !25)
!49 = !DILocation(line: 42, column: 36, scope: !25)
!50 = !DILocation(line: 42, column: 2, scope: !25)
!51 = !DILocation(line: 42, column: 10, scope: !25)
!52 = !DILocation(line: 43, column: 13, scope: !25)
!53 = !DILocation(line: 43, column: 21, scope: !25)
!54 = !DILocation(line: 43, column: 19, scope: !25)
!55 = !DILocation(line: 43, column: 29, scope: !25)
!56 = !DILocation(line: 43, column: 27, scope: !25)
!57 = !DILocation(line: 43, column: 36, scope: !25)
!58 = !DILocation(line: 43, column: 2, scope: !25)
!59 = !DILocation(line: 43, column: 10, scope: !25)
!60 = !DILocation(line: 44, column: 1, scope: !25)
!61 = distinct !DISubprogram(name: "cent_quad_v3", scope: !3, file: !3, line: 46, type: !62, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!62 = !DISubroutineType(types: !63)
!63 = !{null, !10, !7, !7, !7, !7}
!64 = !DILocalVariable(name: "cent", arg: 1, scope: !61, file: !3, line: 46, type: !10)
!65 = !DILocation(line: 46, column: 25, scope: !61)
!66 = !DILocalVariable(name: "v1", arg: 2, scope: !61, file: !3, line: 46, type: !7)
!67 = !DILocation(line: 46, column: 46, scope: !61)
!68 = !DILocalVariable(name: "v2", arg: 3, scope: !61, file: !3, line: 46, type: !7)
!69 = !DILocation(line: 46, column: 65, scope: !61)
!70 = !DILocalVariable(name: "v3", arg: 4, scope: !61, file: !3, line: 46, type: !7)
!71 = !DILocation(line: 46, column: 84, scope: !61)
!72 = !DILocalVariable(name: "v4", arg: 5, scope: !61, file: !3, line: 46, type: !7)
!73 = !DILocation(line: 46, column: 103, scope: !61)
!74 = !DILocation(line: 48, column: 21, scope: !61)
!75 = !DILocation(line: 48, column: 29, scope: !61)
!76 = !DILocation(line: 48, column: 27, scope: !61)
!77 = !DILocation(line: 48, column: 37, scope: !61)
!78 = !DILocation(line: 48, column: 35, scope: !61)
!79 = !DILocation(line: 48, column: 45, scope: !61)
!80 = !DILocation(line: 48, column: 43, scope: !61)
!81 = !DILocation(line: 48, column: 18, scope: !61)
!82 = !DILocation(line: 48, column: 2, scope: !61)
!83 = !DILocation(line: 48, column: 10, scope: !61)
!84 = !DILocation(line: 49, column: 21, scope: !61)
!85 = !DILocation(line: 49, column: 29, scope: !61)
!86 = !DILocation(line: 49, column: 27, scope: !61)
!87 = !DILocation(line: 49, column: 37, scope: !61)
!88 = !DILocation(line: 49, column: 35, scope: !61)
!89 = !DILocation(line: 49, column: 45, scope: !61)
!90 = !DILocation(line: 49, column: 43, scope: !61)
!91 = !DILocation(line: 49, column: 18, scope: !61)
!92 = !DILocation(line: 49, column: 2, scope: !61)
!93 = !DILocation(line: 49, column: 10, scope: !61)
!94 = !DILocation(line: 50, column: 21, scope: !61)
!95 = !DILocation(line: 50, column: 29, scope: !61)
!96 = !DILocation(line: 50, column: 27, scope: !61)
!97 = !DILocation(line: 50, column: 37, scope: !61)
!98 = !DILocation(line: 50, column: 35, scope: !61)
!99 = !DILocation(line: 50, column: 45, scope: !61)
!100 = !DILocation(line: 50, column: 43, scope: !61)
!101 = !DILocation(line: 50, column: 18, scope: !61)
!102 = !DILocation(line: 50, column: 2, scope: !61)
!103 = !DILocation(line: 50, column: 10, scope: !61)
!104 = !DILocation(line: 51, column: 1, scope: !61)
!105 = distinct !DISubprogram(name: "normal_tri_v3", scope: !3, file: !3, line: 53, type: !106, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!106 = !DISubroutineType(types: !107)
!107 = !{!9, !10, !7, !7, !7}
!108 = !DILocalVariable(name: "n", arg: 1, scope: !105, file: !3, line: 53, type: !10)
!109 = !DILocation(line: 53, column: 27, scope: !105)
!110 = !DILocalVariable(name: "v1", arg: 2, scope: !105, file: !3, line: 53, type: !7)
!111 = !DILocation(line: 53, column: 45, scope: !105)
!112 = !DILocalVariable(name: "v2", arg: 3, scope: !105, file: !3, line: 53, type: !7)
!113 = !DILocation(line: 53, column: 64, scope: !105)
!114 = !DILocalVariable(name: "v3", arg: 4, scope: !105, file: !3, line: 53, type: !7)
!115 = !DILocation(line: 53, column: 83, scope: !105)
!116 = !DILocalVariable(name: "n1", scope: !105, file: !3, line: 55, type: !117)
!117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 96, elements: !118)
!118 = !{!119}
!119 = !DISubrange(count: 3)
!120 = !DILocation(line: 55, column: 8, scope: !105)
!121 = !DILocalVariable(name: "n2", scope: !105, file: !3, line: 55, type: !117)
!122 = !DILocation(line: 55, column: 15, scope: !105)
!123 = !DILocation(line: 57, column: 10, scope: !105)
!124 = !DILocation(line: 57, column: 18, scope: !105)
!125 = !DILocation(line: 57, column: 16, scope: !105)
!126 = !DILocation(line: 57, column: 2, scope: !105)
!127 = !DILocation(line: 57, column: 8, scope: !105)
!128 = !DILocation(line: 58, column: 10, scope: !105)
!129 = !DILocation(line: 58, column: 18, scope: !105)
!130 = !DILocation(line: 58, column: 16, scope: !105)
!131 = !DILocation(line: 58, column: 2, scope: !105)
!132 = !DILocation(line: 58, column: 8, scope: !105)
!133 = !DILocation(line: 59, column: 10, scope: !105)
!134 = !DILocation(line: 59, column: 18, scope: !105)
!135 = !DILocation(line: 59, column: 16, scope: !105)
!136 = !DILocation(line: 59, column: 2, scope: !105)
!137 = !DILocation(line: 59, column: 8, scope: !105)
!138 = !DILocation(line: 60, column: 10, scope: !105)
!139 = !DILocation(line: 60, column: 18, scope: !105)
!140 = !DILocation(line: 60, column: 16, scope: !105)
!141 = !DILocation(line: 60, column: 2, scope: !105)
!142 = !DILocation(line: 60, column: 8, scope: !105)
!143 = !DILocation(line: 61, column: 10, scope: !105)
!144 = !DILocation(line: 61, column: 18, scope: !105)
!145 = !DILocation(line: 61, column: 16, scope: !105)
!146 = !DILocation(line: 61, column: 2, scope: !105)
!147 = !DILocation(line: 61, column: 8, scope: !105)
!148 = !DILocation(line: 62, column: 10, scope: !105)
!149 = !DILocation(line: 62, column: 18, scope: !105)
!150 = !DILocation(line: 62, column: 16, scope: !105)
!151 = !DILocation(line: 62, column: 2, scope: !105)
!152 = !DILocation(line: 62, column: 8, scope: !105)
!153 = !DILocation(line: 63, column: 9, scope: !105)
!154 = !DILocation(line: 63, column: 17, scope: !105)
!155 = !DILocation(line: 63, column: 15, scope: !105)
!156 = !DILocation(line: 63, column: 25, scope: !105)
!157 = !DILocation(line: 63, column: 33, scope: !105)
!158 = !DILocation(line: 63, column: 31, scope: !105)
!159 = !DILocation(line: 63, column: 23, scope: !105)
!160 = !DILocation(line: 63, column: 2, scope: !105)
!161 = !DILocation(line: 63, column: 7, scope: !105)
!162 = !DILocation(line: 64, column: 9, scope: !105)
!163 = !DILocation(line: 64, column: 17, scope: !105)
!164 = !DILocation(line: 64, column: 15, scope: !105)
!165 = !DILocation(line: 64, column: 25, scope: !105)
!166 = !DILocation(line: 64, column: 33, scope: !105)
!167 = !DILocation(line: 64, column: 31, scope: !105)
!168 = !DILocation(line: 64, column: 23, scope: !105)
!169 = !DILocation(line: 64, column: 2, scope: !105)
!170 = !DILocation(line: 64, column: 7, scope: !105)
!171 = !DILocation(line: 65, column: 9, scope: !105)
!172 = !DILocation(line: 65, column: 17, scope: !105)
!173 = !DILocation(line: 65, column: 15, scope: !105)
!174 = !DILocation(line: 65, column: 25, scope: !105)
!175 = !DILocation(line: 65, column: 33, scope: !105)
!176 = !DILocation(line: 65, column: 31, scope: !105)
!177 = !DILocation(line: 65, column: 23, scope: !105)
!178 = !DILocation(line: 65, column: 2, scope: !105)
!179 = !DILocation(line: 65, column: 7, scope: !105)
!180 = !DILocation(line: 67, column: 22, scope: !105)
!181 = !DILocation(line: 67, column: 9, scope: !105)
!182 = !DILocation(line: 67, column: 2, scope: !105)
!183 = distinct !DISubprogram(name: "normalize_v3", scope: !184, file: !184, line: 830, type: !185, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!184 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!185 = !DISubroutineType(types: !186)
!186 = !{!9, !10}
!187 = !DILocalVariable(name: "n", arg: 1, scope: !183, file: !184, line: 830, type: !10)
!188 = !DILocation(line: 830, column: 34, scope: !183)
!189 = !DILocation(line: 832, column: 25, scope: !183)
!190 = !DILocation(line: 832, column: 28, scope: !183)
!191 = !DILocation(line: 832, column: 9, scope: !183)
!192 = !DILocation(line: 832, column: 2, scope: !183)
!193 = distinct !DISubprogram(name: "normal_quad_v3", scope: !3, file: !3, line: 70, type: !194, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!194 = !DISubroutineType(types: !195)
!195 = !{!9, !10, !7, !7, !7, !7}
!196 = !DILocalVariable(name: "n", arg: 1, scope: !193, file: !3, line: 70, type: !10)
!197 = !DILocation(line: 70, column: 28, scope: !193)
!198 = !DILocalVariable(name: "v1", arg: 2, scope: !193, file: !3, line: 70, type: !7)
!199 = !DILocation(line: 70, column: 46, scope: !193)
!200 = !DILocalVariable(name: "v2", arg: 3, scope: !193, file: !3, line: 70, type: !7)
!201 = !DILocation(line: 70, column: 65, scope: !193)
!202 = !DILocalVariable(name: "v3", arg: 4, scope: !193, file: !3, line: 70, type: !7)
!203 = !DILocation(line: 70, column: 84, scope: !193)
!204 = !DILocalVariable(name: "v4", arg: 5, scope: !193, file: !3, line: 70, type: !7)
!205 = !DILocation(line: 70, column: 103, scope: !193)
!206 = !DILocalVariable(name: "n1", scope: !193, file: !3, line: 73, type: !117)
!207 = !DILocation(line: 73, column: 8, scope: !193)
!208 = !DILocalVariable(name: "n2", scope: !193, file: !3, line: 73, type: !117)
!209 = !DILocation(line: 73, column: 15, scope: !193)
!210 = !DILocation(line: 75, column: 10, scope: !193)
!211 = !DILocation(line: 75, column: 18, scope: !193)
!212 = !DILocation(line: 75, column: 16, scope: !193)
!213 = !DILocation(line: 75, column: 2, scope: !193)
!214 = !DILocation(line: 75, column: 8, scope: !193)
!215 = !DILocation(line: 76, column: 10, scope: !193)
!216 = !DILocation(line: 76, column: 18, scope: !193)
!217 = !DILocation(line: 76, column: 16, scope: !193)
!218 = !DILocation(line: 76, column: 2, scope: !193)
!219 = !DILocation(line: 76, column: 8, scope: !193)
!220 = !DILocation(line: 77, column: 10, scope: !193)
!221 = !DILocation(line: 77, column: 18, scope: !193)
!222 = !DILocation(line: 77, column: 16, scope: !193)
!223 = !DILocation(line: 77, column: 2, scope: !193)
!224 = !DILocation(line: 77, column: 8, scope: !193)
!225 = !DILocation(line: 79, column: 10, scope: !193)
!226 = !DILocation(line: 79, column: 18, scope: !193)
!227 = !DILocation(line: 79, column: 16, scope: !193)
!228 = !DILocation(line: 79, column: 2, scope: !193)
!229 = !DILocation(line: 79, column: 8, scope: !193)
!230 = !DILocation(line: 80, column: 10, scope: !193)
!231 = !DILocation(line: 80, column: 18, scope: !193)
!232 = !DILocation(line: 80, column: 16, scope: !193)
!233 = !DILocation(line: 80, column: 2, scope: !193)
!234 = !DILocation(line: 80, column: 8, scope: !193)
!235 = !DILocation(line: 81, column: 10, scope: !193)
!236 = !DILocation(line: 81, column: 18, scope: !193)
!237 = !DILocation(line: 81, column: 16, scope: !193)
!238 = !DILocation(line: 81, column: 2, scope: !193)
!239 = !DILocation(line: 81, column: 8, scope: !193)
!240 = !DILocation(line: 83, column: 9, scope: !193)
!241 = !DILocation(line: 83, column: 17, scope: !193)
!242 = !DILocation(line: 83, column: 15, scope: !193)
!243 = !DILocation(line: 83, column: 25, scope: !193)
!244 = !DILocation(line: 83, column: 33, scope: !193)
!245 = !DILocation(line: 83, column: 31, scope: !193)
!246 = !DILocation(line: 83, column: 23, scope: !193)
!247 = !DILocation(line: 83, column: 2, scope: !193)
!248 = !DILocation(line: 83, column: 7, scope: !193)
!249 = !DILocation(line: 84, column: 9, scope: !193)
!250 = !DILocation(line: 84, column: 17, scope: !193)
!251 = !DILocation(line: 84, column: 15, scope: !193)
!252 = !DILocation(line: 84, column: 25, scope: !193)
!253 = !DILocation(line: 84, column: 33, scope: !193)
!254 = !DILocation(line: 84, column: 31, scope: !193)
!255 = !DILocation(line: 84, column: 23, scope: !193)
!256 = !DILocation(line: 84, column: 2, scope: !193)
!257 = !DILocation(line: 84, column: 7, scope: !193)
!258 = !DILocation(line: 85, column: 9, scope: !193)
!259 = !DILocation(line: 85, column: 17, scope: !193)
!260 = !DILocation(line: 85, column: 15, scope: !193)
!261 = !DILocation(line: 85, column: 25, scope: !193)
!262 = !DILocation(line: 85, column: 33, scope: !193)
!263 = !DILocation(line: 85, column: 31, scope: !193)
!264 = !DILocation(line: 85, column: 23, scope: !193)
!265 = !DILocation(line: 85, column: 2, scope: !193)
!266 = !DILocation(line: 85, column: 7, scope: !193)
!267 = !DILocation(line: 87, column: 22, scope: !193)
!268 = !DILocation(line: 87, column: 9, scope: !193)
!269 = !DILocation(line: 87, column: 2, scope: !193)
!270 = distinct !DISubprogram(name: "normal_poly_v3", scope: !3, file: !3, line: 95, type: !271, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!271 = !DISubroutineType(types: !272)
!272 = !{!9, !10, !273, !275}
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64)
!274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 96, elements: !118)
!275 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!276 = !DILocalVariable(name: "n", arg: 1, scope: !270, file: !3, line: 95, type: !10)
!277 = !DILocation(line: 95, column: 28, scope: !270)
!278 = !DILocalVariable(name: "verts", arg: 2, scope: !270, file: !3, line: 95, type: !273)
!279 = !DILocation(line: 95, column: 46, scope: !270)
!280 = !DILocalVariable(name: "nr", arg: 3, scope: !270, file: !3, line: 95, type: !275)
!281 = !DILocation(line: 95, column: 71, scope: !270)
!282 = !DILocalVariable(name: "v_prev", scope: !270, file: !3, line: 97, type: !7)
!283 = !DILocation(line: 97, column: 15, scope: !270)
!284 = !DILocation(line: 97, column: 24, scope: !270)
!285 = !DILocation(line: 97, column: 30, scope: !270)
!286 = !DILocation(line: 97, column: 33, scope: !270)
!287 = !DILocalVariable(name: "v_curr", scope: !270, file: !3, line: 98, type: !7)
!288 = !DILocation(line: 98, column: 15, scope: !270)
!289 = !DILocation(line: 98, column: 24, scope: !270)
!290 = !DILocalVariable(name: "i", scope: !270, file: !3, line: 99, type: !275)
!291 = !DILocation(line: 99, column: 15, scope: !270)
!292 = !DILocation(line: 101, column: 10, scope: !270)
!293 = !DILocation(line: 101, column: 2, scope: !270)
!294 = !DILocation(line: 104, column: 9, scope: !295)
!295 = distinct !DILexicalBlock(scope: !270, file: !3, line: 104, column: 2)
!296 = !DILocation(line: 104, column: 7, scope: !295)
!297 = !DILocation(line: 104, column: 14, scope: !298)
!298 = distinct !DILexicalBlock(scope: !295, file: !3, line: 104, column: 2)
!299 = !DILocation(line: 104, column: 18, scope: !298)
!300 = !DILocation(line: 104, column: 16, scope: !298)
!301 = !DILocation(line: 104, column: 2, scope: !295)
!302 = !DILocation(line: 105, column: 28, scope: !303)
!303 = distinct !DILexicalBlock(scope: !298, file: !3, line: 104, column: 60)
!304 = !DILocation(line: 105, column: 31, scope: !303)
!305 = !DILocation(line: 105, column: 39, scope: !303)
!306 = !DILocation(line: 105, column: 3, scope: !303)
!307 = !DILocation(line: 106, column: 2, scope: !303)
!308 = !DILocation(line: 104, column: 31, scope: !298)
!309 = !DILocation(line: 104, column: 29, scope: !298)
!310 = !DILocation(line: 104, column: 48, scope: !298)
!311 = !DILocation(line: 104, column: 54, scope: !298)
!312 = !DILocation(line: 104, column: 46, scope: !298)
!313 = !DILocation(line: 104, column: 2, scope: !298)
!314 = distinct !{!314, !301, !315}
!315 = !DILocation(line: 106, column: 2, scope: !295)
!316 = !DILocation(line: 108, column: 22, scope: !270)
!317 = !DILocation(line: 108, column: 9, scope: !270)
!318 = !DILocation(line: 108, column: 2, scope: !270)
!319 = distinct !DISubprogram(name: "zero_v3", scope: !184, file: !184, line: 43, type: !320, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!320 = !DISubroutineType(types: !321)
!321 = !{null, !10}
!322 = !DILocalVariable(name: "r", arg: 1, scope: !319, file: !184, line: 43, type: !10)
!323 = !DILocation(line: 43, column: 28, scope: !319)
!324 = !DILocation(line: 45, column: 2, scope: !319)
!325 = !DILocation(line: 45, column: 7, scope: !319)
!326 = !DILocation(line: 46, column: 2, scope: !319)
!327 = !DILocation(line: 46, column: 7, scope: !319)
!328 = !DILocation(line: 47, column: 2, scope: !319)
!329 = !DILocation(line: 47, column: 7, scope: !319)
!330 = !DILocation(line: 48, column: 1, scope: !319)
!331 = distinct !DISubprogram(name: "add_newell_cross_v3_v3v3", scope: !184, file: !184, line: 646, type: !332, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!332 = !DISubroutineType(types: !333)
!333 = !{null, !10, !7, !7}
!334 = !DILocalVariable(name: "n", arg: 1, scope: !331, file: !184, line: 646, type: !10)
!335 = !DILocation(line: 646, column: 45, scope: !331)
!336 = !DILocalVariable(name: "v_prev", arg: 2, scope: !331, file: !184, line: 646, type: !7)
!337 = !DILocation(line: 646, column: 63, scope: !331)
!338 = !DILocalVariable(name: "v_curr", arg: 3, scope: !331, file: !184, line: 646, type: !7)
!339 = !DILocation(line: 646, column: 86, scope: !331)
!340 = !DILocation(line: 648, column: 11, scope: !331)
!341 = !DILocation(line: 648, column: 23, scope: !331)
!342 = !DILocation(line: 648, column: 21, scope: !331)
!343 = !DILocation(line: 648, column: 37, scope: !331)
!344 = !DILocation(line: 648, column: 49, scope: !331)
!345 = !DILocation(line: 648, column: 47, scope: !331)
!346 = !DILocation(line: 648, column: 34, scope: !331)
!347 = !DILocation(line: 648, column: 2, scope: !331)
!348 = !DILocation(line: 648, column: 7, scope: !331)
!349 = !DILocation(line: 649, column: 11, scope: !331)
!350 = !DILocation(line: 649, column: 23, scope: !331)
!351 = !DILocation(line: 649, column: 21, scope: !331)
!352 = !DILocation(line: 649, column: 37, scope: !331)
!353 = !DILocation(line: 649, column: 49, scope: !331)
!354 = !DILocation(line: 649, column: 47, scope: !331)
!355 = !DILocation(line: 649, column: 34, scope: !331)
!356 = !DILocation(line: 649, column: 2, scope: !331)
!357 = !DILocation(line: 649, column: 7, scope: !331)
!358 = !DILocation(line: 650, column: 11, scope: !331)
!359 = !DILocation(line: 650, column: 23, scope: !331)
!360 = !DILocation(line: 650, column: 21, scope: !331)
!361 = !DILocation(line: 650, column: 37, scope: !331)
!362 = !DILocation(line: 650, column: 49, scope: !331)
!363 = !DILocation(line: 650, column: 47, scope: !331)
!364 = !DILocation(line: 650, column: 34, scope: !331)
!365 = !DILocation(line: 650, column: 2, scope: !331)
!366 = !DILocation(line: 650, column: 7, scope: !331)
!367 = !DILocation(line: 651, column: 1, scope: !331)
!368 = distinct !DISubprogram(name: "area_quad_v3", scope: !3, file: !3, line: 112, type: !369, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!369 = !DISubroutineType(types: !370)
!370 = !{!9, !7, !7, !7, !7}
!371 = !DILocalVariable(name: "v1", arg: 1, scope: !368, file: !3, line: 112, type: !7)
!372 = !DILocation(line: 112, column: 32, scope: !368)
!373 = !DILocalVariable(name: "v2", arg: 2, scope: !368, file: !3, line: 112, type: !7)
!374 = !DILocation(line: 112, column: 51, scope: !368)
!375 = !DILocalVariable(name: "v3", arg: 3, scope: !368, file: !3, line: 112, type: !7)
!376 = !DILocation(line: 112, column: 70, scope: !368)
!377 = !DILocalVariable(name: "v4", arg: 4, scope: !368, file: !3, line: 112, type: !7)
!378 = !DILocation(line: 112, column: 89, scope: !368)
!379 = !DILocalVariable(name: "len", scope: !368, file: !3, line: 114, type: !9)
!380 = !DILocation(line: 114, column: 8, scope: !368)
!381 = !DILocalVariable(name: "vec1", scope: !368, file: !3, line: 114, type: !117)
!382 = !DILocation(line: 114, column: 13, scope: !368)
!383 = !DILocalVariable(name: "vec2", scope: !368, file: !3, line: 114, type: !117)
!384 = !DILocation(line: 114, column: 22, scope: !368)
!385 = !DILocalVariable(name: "n", scope: !368, file: !3, line: 114, type: !117)
!386 = !DILocation(line: 114, column: 31, scope: !368)
!387 = !DILocation(line: 116, column: 14, scope: !368)
!388 = !DILocation(line: 116, column: 20, scope: !368)
!389 = !DILocation(line: 116, column: 24, scope: !368)
!390 = !DILocation(line: 116, column: 2, scope: !368)
!391 = !DILocation(line: 117, column: 14, scope: !368)
!392 = !DILocation(line: 117, column: 20, scope: !368)
!393 = !DILocation(line: 117, column: 24, scope: !368)
!394 = !DILocation(line: 117, column: 2, scope: !368)
!395 = !DILocation(line: 118, column: 16, scope: !368)
!396 = !DILocation(line: 118, column: 19, scope: !368)
!397 = !DILocation(line: 118, column: 25, scope: !368)
!398 = !DILocation(line: 118, column: 2, scope: !368)
!399 = !DILocation(line: 119, column: 15, scope: !368)
!400 = !DILocation(line: 119, column: 8, scope: !368)
!401 = !DILocation(line: 119, column: 6, scope: !368)
!402 = !DILocation(line: 121, column: 14, scope: !368)
!403 = !DILocation(line: 121, column: 20, scope: !368)
!404 = !DILocation(line: 121, column: 24, scope: !368)
!405 = !DILocation(line: 121, column: 2, scope: !368)
!406 = !DILocation(line: 122, column: 14, scope: !368)
!407 = !DILocation(line: 122, column: 20, scope: !368)
!408 = !DILocation(line: 122, column: 24, scope: !368)
!409 = !DILocation(line: 122, column: 2, scope: !368)
!410 = !DILocation(line: 123, column: 16, scope: !368)
!411 = !DILocation(line: 123, column: 19, scope: !368)
!412 = !DILocation(line: 123, column: 25, scope: !368)
!413 = !DILocation(line: 123, column: 2, scope: !368)
!414 = !DILocation(line: 124, column: 16, scope: !368)
!415 = !DILocation(line: 124, column: 9, scope: !368)
!416 = !DILocation(line: 124, column: 6, scope: !368)
!417 = !DILocation(line: 126, column: 10, scope: !368)
!418 = !DILocation(line: 126, column: 14, scope: !368)
!419 = !DILocation(line: 126, column: 2, scope: !368)
!420 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !184, file: !184, line: 357, type: !332, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!421 = !DILocalVariable(name: "r", arg: 1, scope: !420, file: !184, line: 357, type: !10)
!422 = !DILocation(line: 357, column: 32, scope: !420)
!423 = !DILocalVariable(name: "a", arg: 2, scope: !420, file: !184, line: 357, type: !7)
!424 = !DILocation(line: 357, column: 50, scope: !420)
!425 = !DILocalVariable(name: "b", arg: 3, scope: !420, file: !184, line: 357, type: !7)
!426 = !DILocation(line: 357, column: 68, scope: !420)
!427 = !DILocation(line: 359, column: 9, scope: !420)
!428 = !DILocation(line: 359, column: 16, scope: !420)
!429 = !DILocation(line: 359, column: 14, scope: !420)
!430 = !DILocation(line: 359, column: 2, scope: !420)
!431 = !DILocation(line: 359, column: 7, scope: !420)
!432 = !DILocation(line: 360, column: 9, scope: !420)
!433 = !DILocation(line: 360, column: 16, scope: !420)
!434 = !DILocation(line: 360, column: 14, scope: !420)
!435 = !DILocation(line: 360, column: 2, scope: !420)
!436 = !DILocation(line: 360, column: 7, scope: !420)
!437 = !DILocation(line: 361, column: 9, scope: !420)
!438 = !DILocation(line: 361, column: 16, scope: !420)
!439 = !DILocation(line: 361, column: 14, scope: !420)
!440 = !DILocation(line: 361, column: 2, scope: !420)
!441 = !DILocation(line: 361, column: 7, scope: !420)
!442 = !DILocation(line: 362, column: 1, scope: !420)
!443 = distinct !DISubprogram(name: "cross_v3_v3v3", scope: !184, file: !184, line: 634, type: !332, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!444 = !DILocalVariable(name: "r", arg: 1, scope: !443, file: !184, line: 634, type: !10)
!445 = !DILocation(line: 634, column: 34, scope: !443)
!446 = !DILocalVariable(name: "a", arg: 2, scope: !443, file: !184, line: 634, type: !7)
!447 = !DILocation(line: 634, column: 52, scope: !443)
!448 = !DILocalVariable(name: "b", arg: 3, scope: !443, file: !184, line: 634, type: !7)
!449 = !DILocation(line: 634, column: 70, scope: !443)
!450 = !DILocation(line: 637, column: 9, scope: !443)
!451 = !DILocation(line: 637, column: 16, scope: !443)
!452 = !DILocation(line: 637, column: 14, scope: !443)
!453 = !DILocation(line: 637, column: 23, scope: !443)
!454 = !DILocation(line: 637, column: 30, scope: !443)
!455 = !DILocation(line: 637, column: 28, scope: !443)
!456 = !DILocation(line: 637, column: 21, scope: !443)
!457 = !DILocation(line: 637, column: 2, scope: !443)
!458 = !DILocation(line: 637, column: 7, scope: !443)
!459 = !DILocation(line: 638, column: 9, scope: !443)
!460 = !DILocation(line: 638, column: 16, scope: !443)
!461 = !DILocation(line: 638, column: 14, scope: !443)
!462 = !DILocation(line: 638, column: 23, scope: !443)
!463 = !DILocation(line: 638, column: 30, scope: !443)
!464 = !DILocation(line: 638, column: 28, scope: !443)
!465 = !DILocation(line: 638, column: 21, scope: !443)
!466 = !DILocation(line: 638, column: 2, scope: !443)
!467 = !DILocation(line: 638, column: 7, scope: !443)
!468 = !DILocation(line: 639, column: 9, scope: !443)
!469 = !DILocation(line: 639, column: 16, scope: !443)
!470 = !DILocation(line: 639, column: 14, scope: !443)
!471 = !DILocation(line: 639, column: 23, scope: !443)
!472 = !DILocation(line: 639, column: 30, scope: !443)
!473 = !DILocation(line: 639, column: 28, scope: !443)
!474 = !DILocation(line: 639, column: 21, scope: !443)
!475 = !DILocation(line: 639, column: 2, scope: !443)
!476 = !DILocation(line: 639, column: 7, scope: !443)
!477 = !DILocation(line: 640, column: 1, scope: !443)
!478 = distinct !DISubprogram(name: "len_v3", scope: !184, file: !184, line: 714, type: !479, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!479 = !DISubroutineType(types: !480)
!480 = !{!9, !7}
!481 = !DILocalVariable(name: "a", arg: 1, scope: !478, file: !184, line: 714, type: !7)
!482 = !DILocation(line: 714, column: 34, scope: !478)
!483 = !DILocation(line: 716, column: 24, scope: !478)
!484 = !DILocation(line: 716, column: 27, scope: !478)
!485 = !DILocation(line: 716, column: 15, scope: !478)
!486 = !DILocation(line: 716, column: 9, scope: !478)
!487 = !DILocation(line: 716, column: 2, scope: !478)
!488 = distinct !DISubprogram(name: "area_tri_v3", scope: !3, file: !3, line: 130, type: !489, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!489 = !DISubroutineType(types: !490)
!490 = !{!9, !7, !7, !7}
!491 = !DILocalVariable(name: "v1", arg: 1, scope: !488, file: !3, line: 130, type: !7)
!492 = !DILocation(line: 130, column: 31, scope: !488)
!493 = !DILocalVariable(name: "v2", arg: 2, scope: !488, file: !3, line: 130, type: !7)
!494 = !DILocation(line: 130, column: 50, scope: !488)
!495 = !DILocalVariable(name: "v3", arg: 3, scope: !488, file: !3, line: 130, type: !7)
!496 = !DILocation(line: 130, column: 69, scope: !488)
!497 = !DILocalVariable(name: "vec1", scope: !488, file: !3, line: 132, type: !117)
!498 = !DILocation(line: 132, column: 8, scope: !488)
!499 = !DILocalVariable(name: "vec2", scope: !488, file: !3, line: 132, type: !117)
!500 = !DILocation(line: 132, column: 17, scope: !488)
!501 = !DILocalVariable(name: "n", scope: !488, file: !3, line: 132, type: !117)
!502 = !DILocation(line: 132, column: 26, scope: !488)
!503 = !DILocation(line: 134, column: 14, scope: !488)
!504 = !DILocation(line: 134, column: 20, scope: !488)
!505 = !DILocation(line: 134, column: 24, scope: !488)
!506 = !DILocation(line: 134, column: 2, scope: !488)
!507 = !DILocation(line: 135, column: 14, scope: !488)
!508 = !DILocation(line: 135, column: 20, scope: !488)
!509 = !DILocation(line: 135, column: 24, scope: !488)
!510 = !DILocation(line: 135, column: 2, scope: !488)
!511 = !DILocation(line: 136, column: 16, scope: !488)
!512 = !DILocation(line: 136, column: 19, scope: !488)
!513 = !DILocation(line: 136, column: 25, scope: !488)
!514 = !DILocation(line: 136, column: 2, scope: !488)
!515 = !DILocation(line: 138, column: 16, scope: !488)
!516 = !DILocation(line: 138, column: 9, scope: !488)
!517 = !DILocation(line: 138, column: 19, scope: !488)
!518 = !DILocation(line: 138, column: 2, scope: !488)
!519 = distinct !DISubprogram(name: "area_tri_signed_v3", scope: !3, file: !3, line: 141, type: !369, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!520 = !DILocalVariable(name: "v1", arg: 1, scope: !519, file: !3, line: 141, type: !7)
!521 = !DILocation(line: 141, column: 38, scope: !519)
!522 = !DILocalVariable(name: "v2", arg: 2, scope: !519, file: !3, line: 141, type: !7)
!523 = !DILocation(line: 141, column: 57, scope: !519)
!524 = !DILocalVariable(name: "v3", arg: 3, scope: !519, file: !3, line: 141, type: !7)
!525 = !DILocation(line: 141, column: 76, scope: !519)
!526 = !DILocalVariable(name: "normal", arg: 4, scope: !519, file: !3, line: 141, type: !7)
!527 = !DILocation(line: 141, column: 95, scope: !519)
!528 = !DILocalVariable(name: "area", scope: !519, file: !3, line: 143, type: !9)
!529 = !DILocation(line: 143, column: 8, scope: !519)
!530 = !DILocalVariable(name: "vec1", scope: !519, file: !3, line: 143, type: !117)
!531 = !DILocation(line: 143, column: 14, scope: !519)
!532 = !DILocalVariable(name: "vec2", scope: !519, file: !3, line: 143, type: !117)
!533 = !DILocation(line: 143, column: 23, scope: !519)
!534 = !DILocalVariable(name: "n", scope: !519, file: !3, line: 143, type: !117)
!535 = !DILocation(line: 143, column: 32, scope: !519)
!536 = !DILocation(line: 145, column: 14, scope: !519)
!537 = !DILocation(line: 145, column: 20, scope: !519)
!538 = !DILocation(line: 145, column: 24, scope: !519)
!539 = !DILocation(line: 145, column: 2, scope: !519)
!540 = !DILocation(line: 146, column: 14, scope: !519)
!541 = !DILocation(line: 146, column: 20, scope: !519)
!542 = !DILocation(line: 146, column: 24, scope: !519)
!543 = !DILocation(line: 146, column: 2, scope: !519)
!544 = !DILocation(line: 147, column: 16, scope: !519)
!545 = !DILocation(line: 147, column: 19, scope: !519)
!546 = !DILocation(line: 147, column: 25, scope: !519)
!547 = !DILocation(line: 147, column: 2, scope: !519)
!548 = !DILocation(line: 148, column: 16, scope: !519)
!549 = !DILocation(line: 148, column: 9, scope: !519)
!550 = !DILocation(line: 148, column: 19, scope: !519)
!551 = !DILocation(line: 148, column: 7, scope: !519)
!552 = !DILocation(line: 151, column: 15, scope: !553)
!553 = distinct !DILexicalBlock(scope: !519, file: !3, line: 151, column: 6)
!554 = !DILocation(line: 151, column: 18, scope: !553)
!555 = !DILocation(line: 151, column: 6, scope: !553)
!556 = !DILocation(line: 151, column: 26, scope: !553)
!557 = !DILocation(line: 151, column: 6, scope: !519)
!558 = !DILocation(line: 152, column: 11, scope: !553)
!559 = !DILocation(line: 152, column: 10, scope: !553)
!560 = !DILocation(line: 152, column: 8, scope: !553)
!561 = !DILocation(line: 152, column: 3, scope: !553)
!562 = !DILocation(line: 154, column: 9, scope: !519)
!563 = !DILocation(line: 154, column: 2, scope: !519)
!564 = distinct !DISubprogram(name: "dot_v3v3", scope: !184, file: !184, line: 619, type: !565, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!565 = !DISubroutineType(types: !566)
!566 = !{!9, !7, !7}
!567 = !DILocalVariable(name: "a", arg: 1, scope: !564, file: !184, line: 619, type: !7)
!568 = !DILocation(line: 619, column: 36, scope: !564)
!569 = !DILocalVariable(name: "b", arg: 2, scope: !564, file: !184, line: 619, type: !7)
!570 = !DILocation(line: 619, column: 54, scope: !564)
!571 = !DILocation(line: 621, column: 9, scope: !564)
!572 = !DILocation(line: 621, column: 16, scope: !564)
!573 = !DILocation(line: 621, column: 14, scope: !564)
!574 = !DILocation(line: 621, column: 23, scope: !564)
!575 = !DILocation(line: 621, column: 30, scope: !564)
!576 = !DILocation(line: 621, column: 28, scope: !564)
!577 = !DILocation(line: 621, column: 21, scope: !564)
!578 = !DILocation(line: 621, column: 37, scope: !564)
!579 = !DILocation(line: 621, column: 44, scope: !564)
!580 = !DILocation(line: 621, column: 42, scope: !564)
!581 = !DILocation(line: 621, column: 35, scope: !564)
!582 = !DILocation(line: 621, column: 2, scope: !564)
!583 = distinct !DISubprogram(name: "area_poly_v3", scope: !3, file: !3, line: 157, type: !584, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!584 = !DISubroutineType(types: !585)
!585 = !{!9, !273, !275}
!586 = !DILocalVariable(name: "verts", arg: 1, scope: !583, file: !3, line: 157, type: !273)
!587 = !DILocation(line: 157, column: 32, scope: !583)
!588 = !DILocalVariable(name: "nr", arg: 2, scope: !583, file: !3, line: 157, type: !275)
!589 = !DILocation(line: 157, column: 57, scope: !583)
!590 = !DILocalVariable(name: "n", scope: !583, file: !3, line: 159, type: !117)
!591 = !DILocation(line: 159, column: 8, scope: !583)
!592 = !DILocation(line: 160, column: 24, scope: !583)
!593 = !DILocation(line: 160, column: 27, scope: !583)
!594 = !DILocation(line: 160, column: 34, scope: !583)
!595 = !DILocation(line: 160, column: 9, scope: !583)
!596 = !DILocation(line: 160, column: 38, scope: !583)
!597 = !DILocation(line: 160, column: 2, scope: !583)
!598 = distinct !DISubprogram(name: "cross_poly_v2", scope: !3, file: !3, line: 169, type: !599, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!599 = !DISubroutineType(types: !600)
!600 = !{!9, !601, !275}
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 64, elements: !603)
!603 = !{!604}
!604 = !DISubrange(count: 2)
!605 = !DILocalVariable(name: "verts", arg: 1, scope: !598, file: !3, line: 169, type: !601)
!606 = !DILocation(line: 169, column: 33, scope: !598)
!607 = !DILocalVariable(name: "nr", arg: 2, scope: !598, file: !3, line: 169, type: !275)
!608 = !DILocation(line: 169, column: 58, scope: !598)
!609 = !DILocalVariable(name: "a", scope: !598, file: !3, line: 171, type: !275)
!610 = !DILocation(line: 171, column: 15, scope: !598)
!611 = !DILocalVariable(name: "cross", scope: !598, file: !3, line: 172, type: !9)
!612 = !DILocation(line: 172, column: 8, scope: !598)
!613 = !DILocalVariable(name: "co_curr", scope: !598, file: !3, line: 173, type: !7)
!614 = !DILocation(line: 173, column: 15, scope: !598)
!615 = !DILocalVariable(name: "co_prev", scope: !598, file: !3, line: 173, type: !7)
!616 = !DILocation(line: 173, column: 25, scope: !598)
!617 = !DILocation(line: 176, column: 12, scope: !598)
!618 = !DILocation(line: 176, column: 18, scope: !598)
!619 = !DILocation(line: 176, column: 21, scope: !598)
!620 = !DILocation(line: 176, column: 10, scope: !598)
!621 = !DILocation(line: 177, column: 12, scope: !598)
!622 = !DILocation(line: 177, column: 10, scope: !598)
!623 = !DILocation(line: 178, column: 8, scope: !598)
!624 = !DILocation(line: 179, column: 9, scope: !625)
!625 = distinct !DILexicalBlock(scope: !598, file: !3, line: 179, column: 2)
!626 = !DILocation(line: 179, column: 7, scope: !625)
!627 = !DILocation(line: 179, column: 14, scope: !628)
!628 = distinct !DILexicalBlock(scope: !625, file: !3, line: 179, column: 2)
!629 = !DILocation(line: 179, column: 18, scope: !628)
!630 = !DILocation(line: 179, column: 16, scope: !628)
!631 = !DILocation(line: 179, column: 2, scope: !625)
!632 = !DILocation(line: 180, column: 13, scope: !633)
!633 = distinct !DILexicalBlock(scope: !628, file: !3, line: 179, column: 27)
!634 = !DILocation(line: 180, column: 26, scope: !633)
!635 = !DILocation(line: 180, column: 24, scope: !633)
!636 = !DILocation(line: 180, column: 41, scope: !633)
!637 = !DILocation(line: 180, column: 54, scope: !633)
!638 = !DILocation(line: 180, column: 52, scope: !633)
!639 = !DILocation(line: 180, column: 38, scope: !633)
!640 = !DILocation(line: 180, column: 9, scope: !633)
!641 = !DILocation(line: 181, column: 13, scope: !633)
!642 = !DILocation(line: 181, column: 11, scope: !633)
!643 = !DILocation(line: 182, column: 11, scope: !633)
!644 = !DILocation(line: 183, column: 2, scope: !633)
!645 = !DILocation(line: 179, column: 23, scope: !628)
!646 = !DILocation(line: 179, column: 2, scope: !628)
!647 = distinct !{!647, !631, !648}
!648 = !DILocation(line: 183, column: 2, scope: !625)
!649 = !DILocation(line: 185, column: 9, scope: !598)
!650 = !DILocation(line: 185, column: 2, scope: !598)
!651 = distinct !DISubprogram(name: "area_poly_v2", scope: !3, file: !3, line: 188, type: !599, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!652 = !DILocalVariable(name: "verts", arg: 1, scope: !651, file: !3, line: 188, type: !601)
!653 = !DILocation(line: 188, column: 32, scope: !651)
!654 = !DILocalVariable(name: "nr", arg: 2, scope: !651, file: !3, line: 188, type: !275)
!655 = !DILocation(line: 188, column: 57, scope: !651)
!656 = !DILocation(line: 190, column: 36, scope: !651)
!657 = !DILocation(line: 190, column: 43, scope: !651)
!658 = !DILocation(line: 190, column: 22, scope: !651)
!659 = !DILocation(line: 190, column: 20, scope: !651)
!660 = !DILocation(line: 190, column: 9, scope: !651)
!661 = !DILocation(line: 190, column: 2, scope: !651)
!662 = distinct !DISubprogram(name: "cotangent_tri_weight_v3", scope: !3, file: !3, line: 193, type: !489, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!663 = !DILocalVariable(name: "v1", arg: 1, scope: !662, file: !3, line: 193, type: !7)
!664 = !DILocation(line: 193, column: 43, scope: !662)
!665 = !DILocalVariable(name: "v2", arg: 2, scope: !662, file: !3, line: 193, type: !7)
!666 = !DILocation(line: 193, column: 62, scope: !662)
!667 = !DILocalVariable(name: "v3", arg: 3, scope: !662, file: !3, line: 193, type: !7)
!668 = !DILocation(line: 193, column: 81, scope: !662)
!669 = !DILocalVariable(name: "a", scope: !662, file: !3, line: 195, type: !117)
!670 = !DILocation(line: 195, column: 8, scope: !662)
!671 = !DILocalVariable(name: "b", scope: !662, file: !3, line: 195, type: !117)
!672 = !DILocation(line: 195, column: 14, scope: !662)
!673 = !DILocalVariable(name: "c", scope: !662, file: !3, line: 195, type: !117)
!674 = !DILocation(line: 195, column: 20, scope: !662)
!675 = !DILocalVariable(name: "c_len", scope: !662, file: !3, line: 195, type: !9)
!676 = !DILocation(line: 195, column: 26, scope: !662)
!677 = !DILocation(line: 197, column: 14, scope: !662)
!678 = !DILocation(line: 197, column: 17, scope: !662)
!679 = !DILocation(line: 197, column: 21, scope: !662)
!680 = !DILocation(line: 197, column: 2, scope: !662)
!681 = !DILocation(line: 198, column: 14, scope: !662)
!682 = !DILocation(line: 198, column: 17, scope: !662)
!683 = !DILocation(line: 198, column: 21, scope: !662)
!684 = !DILocation(line: 198, column: 2, scope: !662)
!685 = !DILocation(line: 199, column: 16, scope: !662)
!686 = !DILocation(line: 199, column: 19, scope: !662)
!687 = !DILocation(line: 199, column: 22, scope: !662)
!688 = !DILocation(line: 199, column: 2, scope: !662)
!689 = !DILocation(line: 201, column: 17, scope: !662)
!690 = !DILocation(line: 201, column: 10, scope: !662)
!691 = !DILocation(line: 201, column: 8, scope: !662)
!692 = !DILocation(line: 203, column: 6, scope: !693)
!693 = distinct !DILexicalBlock(scope: !662, file: !3, line: 203, column: 6)
!694 = !DILocation(line: 203, column: 12, scope: !693)
!695 = !DILocation(line: 203, column: 6, scope: !662)
!696 = !DILocation(line: 204, column: 19, scope: !697)
!697 = distinct !DILexicalBlock(scope: !693, file: !3, line: 203, column: 27)
!698 = !DILocation(line: 204, column: 22, scope: !697)
!699 = !DILocation(line: 204, column: 10, scope: !697)
!700 = !DILocation(line: 204, column: 27, scope: !697)
!701 = !DILocation(line: 204, column: 25, scope: !697)
!702 = !DILocation(line: 204, column: 3, scope: !697)
!703 = !DILocation(line: 207, column: 3, scope: !704)
!704 = distinct !DILexicalBlock(scope: !693, file: !3, line: 206, column: 7)
!705 = !DILocation(line: 209, column: 1, scope: !662)
!706 = distinct !DISubprogram(name: "plane_from_point_normal_v3", scope: !3, file: !3, line: 217, type: !332, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!707 = !DILocalVariable(name: "r_plane", arg: 1, scope: !706, file: !3, line: 217, type: !10)
!708 = !DILocation(line: 217, column: 39, scope: !706)
!709 = !DILocalVariable(name: "plane_co", arg: 2, scope: !706, file: !3, line: 217, type: !7)
!710 = !DILocation(line: 217, column: 63, scope: !706)
!711 = !DILocalVariable(name: "plane_no", arg: 3, scope: !706, file: !3, line: 217, type: !7)
!712 = !DILocation(line: 217, column: 88, scope: !706)
!713 = !DILocation(line: 219, column: 13, scope: !706)
!714 = !DILocation(line: 219, column: 22, scope: !706)
!715 = !DILocation(line: 219, column: 2, scope: !706)
!716 = !DILocation(line: 220, column: 25, scope: !706)
!717 = !DILocation(line: 220, column: 34, scope: !706)
!718 = !DILocation(line: 220, column: 16, scope: !706)
!719 = !DILocation(line: 220, column: 15, scope: !706)
!720 = !DILocation(line: 220, column: 2, scope: !706)
!721 = !DILocation(line: 220, column: 13, scope: !706)
!722 = !DILocation(line: 221, column: 1, scope: !706)
!723 = distinct !DISubprogram(name: "copy_v3_v3", scope: !184, file: !184, line: 64, type: !724, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!724 = !DISubroutineType(types: !725)
!725 = !{null, !10, !7}
!726 = !DILocalVariable(name: "r", arg: 1, scope: !723, file: !184, line: 64, type: !10)
!727 = !DILocation(line: 64, column: 31, scope: !723)
!728 = !DILocalVariable(name: "a", arg: 2, scope: !723, file: !184, line: 64, type: !7)
!729 = !DILocation(line: 64, column: 49, scope: !723)
!730 = !DILocation(line: 66, column: 9, scope: !723)
!731 = !DILocation(line: 66, column: 2, scope: !723)
!732 = !DILocation(line: 66, column: 7, scope: !723)
!733 = !DILocation(line: 67, column: 9, scope: !723)
!734 = !DILocation(line: 67, column: 2, scope: !723)
!735 = !DILocation(line: 67, column: 7, scope: !723)
!736 = !DILocation(line: 68, column: 9, scope: !723)
!737 = !DILocation(line: 68, column: 2, scope: !723)
!738 = !DILocation(line: 68, column: 7, scope: !723)
!739 = !DILocation(line: 69, column: 1, scope: !723)
!740 = distinct !DISubprogram(name: "plane_to_point_normal_v3", scope: !3, file: !3, line: 226, type: !741, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!741 = !DISubroutineType(types: !742)
!742 = !{null, !7, !10, !10}
!743 = !DILocalVariable(name: "plane", arg: 1, scope: !740, file: !3, line: 226, type: !7)
!744 = !DILocation(line: 226, column: 43, scope: !740)
!745 = !DILocalVariable(name: "r_plane_co", arg: 2, scope: !740, file: !3, line: 226, type: !10)
!746 = !DILocation(line: 226, column: 59, scope: !740)
!747 = !DILocalVariable(name: "r_plane_no", arg: 3, scope: !740, file: !3, line: 226, type: !10)
!748 = !DILocation(line: 226, column: 80, scope: !740)
!749 = !DILocalVariable(name: "length", scope: !740, file: !3, line: 228, type: !8)
!750 = !DILocation(line: 228, column: 14, scope: !740)
!751 = !DILocation(line: 228, column: 39, scope: !740)
!752 = !DILocation(line: 228, column: 51, scope: !740)
!753 = !DILocation(line: 228, column: 23, scope: !740)
!754 = !DILocation(line: 229, column: 17, scope: !740)
!755 = !DILocation(line: 229, column: 29, scope: !740)
!756 = !DILocation(line: 229, column: 41, scope: !740)
!757 = !DILocation(line: 229, column: 55, scope: !740)
!758 = !DILocation(line: 229, column: 54, scope: !740)
!759 = !DILocation(line: 229, column: 66, scope: !740)
!760 = !DILocation(line: 229, column: 64, scope: !740)
!761 = !DILocation(line: 229, column: 74, scope: !740)
!762 = !DILocation(line: 229, column: 2, scope: !740)
!763 = !DILocation(line: 230, column: 1, scope: !740)
!764 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !184, file: !184, line: 788, type: !765, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!765 = !DISubroutineType(types: !766)
!766 = !{!9, !10, !7}
!767 = !DILocalVariable(name: "r", arg: 1, scope: !764, file: !184, line: 788, type: !10)
!768 = !DILocation(line: 788, column: 37, scope: !764)
!769 = !DILocalVariable(name: "a", arg: 2, scope: !764, file: !184, line: 788, type: !7)
!770 = !DILocation(line: 788, column: 55, scope: !764)
!771 = !DILocalVariable(name: "d", scope: !764, file: !184, line: 790, type: !9)
!772 = !DILocation(line: 790, column: 8, scope: !764)
!773 = !DILocation(line: 790, column: 21, scope: !764)
!774 = !DILocation(line: 790, column: 24, scope: !764)
!775 = !DILocation(line: 790, column: 12, scope: !764)
!776 = !DILocation(line: 794, column: 6, scope: !777)
!777 = distinct !DILexicalBlock(scope: !764, file: !184, line: 794, column: 6)
!778 = !DILocation(line: 794, column: 8, scope: !777)
!779 = !DILocation(line: 794, column: 6, scope: !764)
!780 = !DILocation(line: 795, column: 13, scope: !781)
!781 = distinct !DILexicalBlock(scope: !777, file: !184, line: 794, column: 20)
!782 = !DILocation(line: 795, column: 7, scope: !781)
!783 = !DILocation(line: 795, column: 5, scope: !781)
!784 = !DILocation(line: 796, column: 15, scope: !781)
!785 = !DILocation(line: 796, column: 18, scope: !781)
!786 = !DILocation(line: 796, column: 28, scope: !781)
!787 = !DILocation(line: 796, column: 26, scope: !781)
!788 = !DILocation(line: 796, column: 3, scope: !781)
!789 = !DILocation(line: 797, column: 2, scope: !781)
!790 = !DILocation(line: 799, column: 11, scope: !791)
!791 = distinct !DILexicalBlock(scope: !777, file: !184, line: 798, column: 7)
!792 = !DILocation(line: 799, column: 3, scope: !791)
!793 = !DILocation(line: 800, column: 5, scope: !791)
!794 = !DILocation(line: 803, column: 9, scope: !764)
!795 = !DILocation(line: 803, column: 2, scope: !764)
!796 = distinct !DISubprogram(name: "madd_v3_v3v3fl", scope: !184, file: !184, line: 527, type: !797, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!797 = !DISubroutineType(types: !798)
!798 = !{null, !10, !7, !7, !9}
!799 = !DILocalVariable(name: "r", arg: 1, scope: !796, file: !184, line: 527, type: !10)
!800 = !DILocation(line: 527, column: 35, scope: !796)
!801 = !DILocalVariable(name: "a", arg: 2, scope: !796, file: !184, line: 527, type: !7)
!802 = !DILocation(line: 527, column: 53, scope: !796)
!803 = !DILocalVariable(name: "b", arg: 3, scope: !796, file: !184, line: 527, type: !7)
!804 = !DILocation(line: 527, column: 71, scope: !796)
!805 = !DILocalVariable(name: "f", arg: 4, scope: !796, file: !184, line: 527, type: !9)
!806 = !DILocation(line: 527, column: 83, scope: !796)
!807 = !DILocation(line: 529, column: 9, scope: !796)
!808 = !DILocation(line: 529, column: 16, scope: !796)
!809 = !DILocation(line: 529, column: 23, scope: !796)
!810 = !DILocation(line: 529, column: 21, scope: !796)
!811 = !DILocation(line: 529, column: 14, scope: !796)
!812 = !DILocation(line: 529, column: 2, scope: !796)
!813 = !DILocation(line: 529, column: 7, scope: !796)
!814 = !DILocation(line: 530, column: 9, scope: !796)
!815 = !DILocation(line: 530, column: 16, scope: !796)
!816 = !DILocation(line: 530, column: 23, scope: !796)
!817 = !DILocation(line: 530, column: 21, scope: !796)
!818 = !DILocation(line: 530, column: 14, scope: !796)
!819 = !DILocation(line: 530, column: 2, scope: !796)
!820 = !DILocation(line: 530, column: 7, scope: !796)
!821 = !DILocation(line: 531, column: 9, scope: !796)
!822 = !DILocation(line: 531, column: 16, scope: !796)
!823 = !DILocation(line: 531, column: 23, scope: !796)
!824 = !DILocation(line: 531, column: 21, scope: !796)
!825 = !DILocation(line: 531, column: 14, scope: !796)
!826 = !DILocation(line: 531, column: 2, scope: !796)
!827 = !DILocation(line: 531, column: 7, scope: !796)
!828 = !DILocation(line: 532, column: 1, scope: !796)
!829 = distinct !DISubprogram(name: "volume_tetrahedron_v3", scope: !3, file: !3, line: 238, type: !369, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!830 = !DILocalVariable(name: "v1", arg: 1, scope: !829, file: !3, line: 238, type: !7)
!831 = !DILocation(line: 238, column: 41, scope: !829)
!832 = !DILocalVariable(name: "v2", arg: 2, scope: !829, file: !3, line: 238, type: !7)
!833 = !DILocation(line: 238, column: 60, scope: !829)
!834 = !DILocalVariable(name: "v3", arg: 3, scope: !829, file: !3, line: 238, type: !7)
!835 = !DILocation(line: 238, column: 79, scope: !829)
!836 = !DILocalVariable(name: "v4", arg: 4, scope: !829, file: !3, line: 238, type: !7)
!837 = !DILocation(line: 238, column: 98, scope: !829)
!838 = !DILocalVariable(name: "m", scope: !829, file: !3, line: 240, type: !839)
!839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 288, elements: !840)
!840 = !{!119, !119}
!841 = !DILocation(line: 240, column: 8, scope: !829)
!842 = !DILocation(line: 241, column: 14, scope: !829)
!843 = !DILocation(line: 241, column: 20, scope: !829)
!844 = !DILocation(line: 241, column: 24, scope: !829)
!845 = !DILocation(line: 241, column: 2, scope: !829)
!846 = !DILocation(line: 242, column: 14, scope: !829)
!847 = !DILocation(line: 242, column: 20, scope: !829)
!848 = !DILocation(line: 242, column: 24, scope: !829)
!849 = !DILocation(line: 242, column: 2, scope: !829)
!850 = !DILocation(line: 243, column: 14, scope: !829)
!851 = !DILocation(line: 243, column: 20, scope: !829)
!852 = !DILocation(line: 243, column: 24, scope: !829)
!853 = !DILocation(line: 243, column: 2, scope: !829)
!854 = !DILocation(line: 244, column: 36, scope: !829)
!855 = !DILocation(line: 244, column: 15, scope: !829)
!856 = !DILocation(line: 244, column: 9, scope: !829)
!857 = !DILocation(line: 244, column: 40, scope: !829)
!858 = !DILocation(line: 244, column: 2, scope: !829)
!859 = distinct !DISubprogram(name: "volume_tetrahedron_signed_v3", scope: !3, file: !3, line: 250, type: !369, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!860 = !DILocalVariable(name: "v1", arg: 1, scope: !859, file: !3, line: 250, type: !7)
!861 = !DILocation(line: 250, column: 48, scope: !859)
!862 = !DILocalVariable(name: "v2", arg: 2, scope: !859, file: !3, line: 250, type: !7)
!863 = !DILocation(line: 250, column: 67, scope: !859)
!864 = !DILocalVariable(name: "v3", arg: 3, scope: !859, file: !3, line: 250, type: !7)
!865 = !DILocation(line: 250, column: 86, scope: !859)
!866 = !DILocalVariable(name: "v4", arg: 4, scope: !859, file: !3, line: 250, type: !7)
!867 = !DILocation(line: 250, column: 105, scope: !859)
!868 = !DILocalVariable(name: "m", scope: !859, file: !3, line: 252, type: !839)
!869 = !DILocation(line: 252, column: 8, scope: !859)
!870 = !DILocation(line: 253, column: 14, scope: !859)
!871 = !DILocation(line: 253, column: 20, scope: !859)
!872 = !DILocation(line: 253, column: 24, scope: !859)
!873 = !DILocation(line: 253, column: 2, scope: !859)
!874 = !DILocation(line: 254, column: 14, scope: !859)
!875 = !DILocation(line: 254, column: 20, scope: !859)
!876 = !DILocation(line: 254, column: 24, scope: !859)
!877 = !DILocation(line: 254, column: 2, scope: !859)
!878 = !DILocation(line: 255, column: 14, scope: !859)
!879 = !DILocation(line: 255, column: 20, scope: !859)
!880 = !DILocation(line: 255, column: 24, scope: !859)
!881 = !DILocation(line: 255, column: 2, scope: !859)
!882 = !DILocation(line: 256, column: 30, scope: !859)
!883 = !DILocation(line: 256, column: 9, scope: !859)
!884 = !DILocation(line: 256, column: 33, scope: !859)
!885 = !DILocation(line: 256, column: 2, scope: !859)
!886 = distinct !DISubprogram(name: "dist_squared_to_line_v2", scope: !3, file: !3, line: 264, type: !489, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!887 = !DILocalVariable(name: "p", arg: 1, scope: !886, file: !3, line: 264, type: !7)
!888 = !DILocation(line: 264, column: 43, scope: !886)
!889 = !DILocalVariable(name: "l1", arg: 2, scope: !886, file: !3, line: 264, type: !7)
!890 = !DILocation(line: 264, column: 61, scope: !886)
!891 = !DILocalVariable(name: "l2", arg: 3, scope: !886, file: !3, line: 264, type: !7)
!892 = !DILocation(line: 264, column: 80, scope: !886)
!893 = !DILocalVariable(name: "a", scope: !886, file: !3, line: 266, type: !894)
!894 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 64, elements: !603)
!895 = !DILocation(line: 266, column: 8, scope: !886)
!896 = !DILocalVariable(name: "deler", scope: !886, file: !3, line: 266, type: !9)
!897 = !DILocation(line: 266, column: 14, scope: !886)
!898 = !DILocation(line: 268, column: 9, scope: !886)
!899 = !DILocation(line: 268, column: 17, scope: !886)
!900 = !DILocation(line: 268, column: 15, scope: !886)
!901 = !DILocation(line: 268, column: 2, scope: !886)
!902 = !DILocation(line: 268, column: 7, scope: !886)
!903 = !DILocation(line: 269, column: 9, scope: !886)
!904 = !DILocation(line: 269, column: 17, scope: !886)
!905 = !DILocation(line: 269, column: 15, scope: !886)
!906 = !DILocation(line: 269, column: 2, scope: !886)
!907 = !DILocation(line: 269, column: 7, scope: !886)
!908 = !DILocation(line: 271, column: 25, scope: !886)
!909 = !DILocation(line: 271, column: 10, scope: !886)
!910 = !DILocation(line: 271, column: 8, scope: !886)
!911 = !DILocation(line: 273, column: 6, scope: !912)
!912 = distinct !DILexicalBlock(scope: !886, file: !3, line: 273, column: 6)
!913 = !DILocation(line: 273, column: 12, scope: !912)
!914 = !DILocation(line: 273, column: 6, scope: !886)
!915 = !DILocalVariable(name: "f", scope: !916, file: !3, line: 274, type: !9)
!916 = distinct !DILexicalBlock(scope: !912, file: !3, line: 273, column: 21)
!917 = !DILocation(line: 274, column: 9, scope: !916)
!918 = !DILocation(line: 274, column: 15, scope: !916)
!919 = !DILocation(line: 274, column: 22, scope: !916)
!920 = !DILocation(line: 274, column: 20, scope: !916)
!921 = !DILocation(line: 274, column: 31, scope: !916)
!922 = !DILocation(line: 274, column: 29, scope: !916)
!923 = !DILocation(line: 275, column: 15, scope: !916)
!924 = !DILocation(line: 275, column: 22, scope: !916)
!925 = !DILocation(line: 275, column: 20, scope: !916)
!926 = !DILocation(line: 275, column: 31, scope: !916)
!927 = !DILocation(line: 275, column: 29, scope: !916)
!928 = !DILocation(line: 274, column: 36, scope: !916)
!929 = !DILocation(line: 276, column: 11, scope: !916)
!930 = !DILocation(line: 276, column: 15, scope: !916)
!931 = !DILocation(line: 276, column: 13, scope: !916)
!932 = !DILocation(line: 276, column: 20, scope: !916)
!933 = !DILocation(line: 276, column: 18, scope: !916)
!934 = !DILocation(line: 276, column: 3, scope: !916)
!935 = !DILocation(line: 279, column: 3, scope: !936)
!936 = distinct !DILexicalBlock(scope: !912, file: !3, line: 278, column: 7)
!937 = !DILocation(line: 281, column: 1, scope: !886)
!938 = distinct !DISubprogram(name: "len_squared_v2", scope: !184, file: !184, line: 666, type: !479, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!939 = !DILocalVariable(name: "v", arg: 1, scope: !938, file: !184, line: 666, type: !7)
!940 = !DILocation(line: 666, column: 42, scope: !938)
!941 = !DILocation(line: 668, column: 9, scope: !938)
!942 = !DILocation(line: 668, column: 16, scope: !938)
!943 = !DILocation(line: 668, column: 14, scope: !938)
!944 = !DILocation(line: 668, column: 23, scope: !938)
!945 = !DILocation(line: 668, column: 30, scope: !938)
!946 = !DILocation(line: 668, column: 28, scope: !938)
!947 = !DILocation(line: 668, column: 21, scope: !938)
!948 = !DILocation(line: 668, column: 2, scope: !938)
!949 = distinct !DISubprogram(name: "dist_to_line_v2", scope: !3, file: !3, line: 282, type: !489, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!950 = !DILocalVariable(name: "p", arg: 1, scope: !949, file: !3, line: 282, type: !7)
!951 = !DILocation(line: 282, column: 35, scope: !949)
!952 = !DILocalVariable(name: "l1", arg: 2, scope: !949, file: !3, line: 282, type: !7)
!953 = !DILocation(line: 282, column: 53, scope: !949)
!954 = !DILocalVariable(name: "l2", arg: 3, scope: !949, file: !3, line: 282, type: !7)
!955 = !DILocation(line: 282, column: 72, scope: !949)
!956 = !DILocalVariable(name: "a", scope: !949, file: !3, line: 284, type: !894)
!957 = !DILocation(line: 284, column: 8, scope: !949)
!958 = !DILocalVariable(name: "deler", scope: !949, file: !3, line: 284, type: !9)
!959 = !DILocation(line: 284, column: 14, scope: !949)
!960 = !DILocation(line: 286, column: 9, scope: !949)
!961 = !DILocation(line: 286, column: 17, scope: !949)
!962 = !DILocation(line: 286, column: 15, scope: !949)
!963 = !DILocation(line: 286, column: 2, scope: !949)
!964 = !DILocation(line: 286, column: 7, scope: !949)
!965 = !DILocation(line: 287, column: 9, scope: !949)
!966 = !DILocation(line: 287, column: 17, scope: !949)
!967 = !DILocation(line: 287, column: 15, scope: !949)
!968 = !DILocation(line: 287, column: 2, scope: !949)
!969 = !DILocation(line: 287, column: 7, scope: !949)
!970 = !DILocation(line: 289, column: 25, scope: !949)
!971 = !DILocation(line: 289, column: 10, scope: !949)
!972 = !DILocation(line: 289, column: 8, scope: !949)
!973 = !DILocation(line: 291, column: 6, scope: !974)
!974 = distinct !DILexicalBlock(scope: !949, file: !3, line: 291, column: 6)
!975 = !DILocation(line: 291, column: 12, scope: !974)
!976 = !DILocation(line: 291, column: 6, scope: !949)
!977 = !DILocalVariable(name: "f", scope: !978, file: !3, line: 292, type: !9)
!978 = distinct !DILexicalBlock(scope: !974, file: !3, line: 291, column: 21)
!979 = !DILocation(line: 292, column: 9, scope: !978)
!980 = !DILocation(line: 292, column: 15, scope: !978)
!981 = !DILocation(line: 292, column: 22, scope: !978)
!982 = !DILocation(line: 292, column: 20, scope: !978)
!983 = !DILocation(line: 292, column: 31, scope: !978)
!984 = !DILocation(line: 292, column: 29, scope: !978)
!985 = !DILocation(line: 293, column: 15, scope: !978)
!986 = !DILocation(line: 293, column: 22, scope: !978)
!987 = !DILocation(line: 293, column: 20, scope: !978)
!988 = !DILocation(line: 293, column: 31, scope: !978)
!989 = !DILocation(line: 293, column: 29, scope: !978)
!990 = !DILocation(line: 292, column: 36, scope: !978)
!991 = !DILocation(line: 294, column: 16, scope: !978)
!992 = !DILocation(line: 294, column: 10, scope: !978)
!993 = !DILocation(line: 294, column: 27, scope: !978)
!994 = !DILocation(line: 294, column: 21, scope: !978)
!995 = !DILocation(line: 294, column: 19, scope: !978)
!996 = !DILocation(line: 294, column: 3, scope: !978)
!997 = !DILocation(line: 297, column: 3, scope: !998)
!998 = distinct !DILexicalBlock(scope: !974, file: !3, line: 296, column: 7)
!999 = !DILocation(line: 299, column: 1, scope: !949)
!1000 = distinct !DISubprogram(name: "dist_squared_to_line_segment_v2", scope: !3, file: !3, line: 302, type: !489, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1001 = !DILocalVariable(name: "p", arg: 1, scope: !1000, file: !3, line: 302, type: !7)
!1002 = !DILocation(line: 302, column: 51, scope: !1000)
!1003 = !DILocalVariable(name: "l1", arg: 2, scope: !1000, file: !3, line: 302, type: !7)
!1004 = !DILocation(line: 302, column: 69, scope: !1000)
!1005 = !DILocalVariable(name: "l2", arg: 3, scope: !1000, file: !3, line: 302, type: !7)
!1006 = !DILocation(line: 302, column: 88, scope: !1000)
!1007 = !DILocalVariable(name: "lambda", scope: !1000, file: !3, line: 304, type: !9)
!1008 = !DILocation(line: 304, column: 8, scope: !1000)
!1009 = !DILocalVariable(name: "rc", scope: !1000, file: !3, line: 304, type: !894)
!1010 = !DILocation(line: 304, column: 16, scope: !1000)
!1011 = !DILocalVariable(name: "pt", scope: !1000, file: !3, line: 304, type: !894)
!1012 = !DILocation(line: 304, column: 23, scope: !1000)
!1013 = !DILocalVariable(name: "len", scope: !1000, file: !3, line: 304, type: !9)
!1014 = !DILocation(line: 304, column: 30, scope: !1000)
!1015 = !DILocation(line: 306, column: 10, scope: !1000)
!1016 = !DILocation(line: 306, column: 18, scope: !1000)
!1017 = !DILocation(line: 306, column: 16, scope: !1000)
!1018 = !DILocation(line: 306, column: 2, scope: !1000)
!1019 = !DILocation(line: 306, column: 8, scope: !1000)
!1020 = !DILocation(line: 307, column: 10, scope: !1000)
!1021 = !DILocation(line: 307, column: 18, scope: !1000)
!1022 = !DILocation(line: 307, column: 16, scope: !1000)
!1023 = !DILocation(line: 307, column: 2, scope: !1000)
!1024 = !DILocation(line: 307, column: 8, scope: !1000)
!1025 = !DILocation(line: 308, column: 8, scope: !1000)
!1026 = !DILocation(line: 308, column: 16, scope: !1000)
!1027 = !DILocation(line: 308, column: 14, scope: !1000)
!1028 = !DILocation(line: 308, column: 24, scope: !1000)
!1029 = !DILocation(line: 308, column: 32, scope: !1000)
!1030 = !DILocation(line: 308, column: 30, scope: !1000)
!1031 = !DILocation(line: 308, column: 22, scope: !1000)
!1032 = !DILocation(line: 308, column: 6, scope: !1000)
!1033 = !DILocation(line: 309, column: 6, scope: !1034)
!1034 = distinct !DILexicalBlock(scope: !1000, file: !3, line: 309, column: 6)
!1035 = !DILocation(line: 309, column: 10, scope: !1034)
!1036 = !DILocation(line: 309, column: 6, scope: !1000)
!1037 = !DILocation(line: 310, column: 11, scope: !1038)
!1038 = distinct !DILexicalBlock(scope: !1034, file: !3, line: 309, column: 19)
!1039 = !DILocation(line: 310, column: 18, scope: !1038)
!1040 = !DILocation(line: 310, column: 16, scope: !1038)
!1041 = !DILocation(line: 310, column: 3, scope: !1038)
!1042 = !DILocation(line: 310, column: 9, scope: !1038)
!1043 = !DILocation(line: 311, column: 11, scope: !1038)
!1044 = !DILocation(line: 311, column: 18, scope: !1038)
!1045 = !DILocation(line: 311, column: 16, scope: !1038)
!1046 = !DILocation(line: 311, column: 3, scope: !1038)
!1047 = !DILocation(line: 311, column: 9, scope: !1038)
!1048 = !DILocation(line: 312, column: 11, scope: !1038)
!1049 = !DILocation(line: 312, column: 19, scope: !1038)
!1050 = !DILocation(line: 312, column: 17, scope: !1038)
!1051 = !DILocation(line: 312, column: 27, scope: !1038)
!1052 = !DILocation(line: 312, column: 35, scope: !1038)
!1053 = !DILocation(line: 312, column: 33, scope: !1038)
!1054 = !DILocation(line: 312, column: 25, scope: !1038)
!1055 = !DILocation(line: 312, column: 3, scope: !1038)
!1056 = !DILocation(line: 315, column: 12, scope: !1000)
!1057 = !DILocation(line: 315, column: 21, scope: !1000)
!1058 = !DILocation(line: 315, column: 28, scope: !1000)
!1059 = !DILocation(line: 315, column: 26, scope: !1000)
!1060 = !DILocation(line: 315, column: 18, scope: !1000)
!1061 = !DILocation(line: 315, column: 37, scope: !1000)
!1062 = !DILocation(line: 315, column: 46, scope: !1000)
!1063 = !DILocation(line: 315, column: 53, scope: !1000)
!1064 = !DILocation(line: 315, column: 51, scope: !1000)
!1065 = !DILocation(line: 315, column: 43, scope: !1000)
!1066 = !DILocation(line: 315, column: 35, scope: !1000)
!1067 = !DILocation(line: 315, column: 63, scope: !1000)
!1068 = !DILocation(line: 315, column: 61, scope: !1000)
!1069 = !DILocation(line: 315, column: 9, scope: !1000)
!1070 = !DILocation(line: 316, column: 6, scope: !1071)
!1071 = distinct !DILexicalBlock(scope: !1000, file: !3, line: 316, column: 6)
!1072 = !DILocation(line: 316, column: 13, scope: !1071)
!1073 = !DILocation(line: 316, column: 6, scope: !1000)
!1074 = !DILocation(line: 317, column: 11, scope: !1075)
!1075 = distinct !DILexicalBlock(scope: !1071, file: !3, line: 316, column: 22)
!1076 = !DILocation(line: 317, column: 3, scope: !1075)
!1077 = !DILocation(line: 317, column: 9, scope: !1075)
!1078 = !DILocation(line: 318, column: 11, scope: !1075)
!1079 = !DILocation(line: 318, column: 3, scope: !1075)
!1080 = !DILocation(line: 318, column: 9, scope: !1075)
!1081 = !DILocation(line: 319, column: 2, scope: !1075)
!1082 = !DILocation(line: 320, column: 11, scope: !1083)
!1083 = distinct !DILexicalBlock(scope: !1071, file: !3, line: 320, column: 11)
!1084 = !DILocation(line: 320, column: 18, scope: !1083)
!1085 = !DILocation(line: 320, column: 11, scope: !1071)
!1086 = !DILocation(line: 321, column: 11, scope: !1087)
!1087 = distinct !DILexicalBlock(scope: !1083, file: !3, line: 320, column: 27)
!1088 = !DILocation(line: 321, column: 3, scope: !1087)
!1089 = !DILocation(line: 321, column: 9, scope: !1087)
!1090 = !DILocation(line: 322, column: 11, scope: !1087)
!1091 = !DILocation(line: 322, column: 3, scope: !1087)
!1092 = !DILocation(line: 322, column: 9, scope: !1087)
!1093 = !DILocation(line: 323, column: 2, scope: !1087)
!1094 = !DILocation(line: 325, column: 11, scope: !1095)
!1095 = distinct !DILexicalBlock(scope: !1083, file: !3, line: 324, column: 7)
!1096 = !DILocation(line: 325, column: 20, scope: !1095)
!1097 = !DILocation(line: 325, column: 18, scope: !1095)
!1098 = !DILocation(line: 325, column: 28, scope: !1095)
!1099 = !DILocation(line: 325, column: 26, scope: !1095)
!1100 = !DILocation(line: 325, column: 3, scope: !1095)
!1101 = !DILocation(line: 325, column: 9, scope: !1095)
!1102 = !DILocation(line: 326, column: 11, scope: !1095)
!1103 = !DILocation(line: 326, column: 20, scope: !1095)
!1104 = !DILocation(line: 326, column: 18, scope: !1095)
!1105 = !DILocation(line: 326, column: 28, scope: !1095)
!1106 = !DILocation(line: 326, column: 26, scope: !1095)
!1107 = !DILocation(line: 326, column: 3, scope: !1095)
!1108 = !DILocation(line: 326, column: 9, scope: !1095)
!1109 = !DILocation(line: 329, column: 10, scope: !1000)
!1110 = !DILocation(line: 329, column: 18, scope: !1000)
!1111 = !DILocation(line: 329, column: 16, scope: !1000)
!1112 = !DILocation(line: 329, column: 2, scope: !1000)
!1113 = !DILocation(line: 329, column: 8, scope: !1000)
!1114 = !DILocation(line: 330, column: 10, scope: !1000)
!1115 = !DILocation(line: 330, column: 18, scope: !1000)
!1116 = !DILocation(line: 330, column: 16, scope: !1000)
!1117 = !DILocation(line: 330, column: 2, scope: !1000)
!1118 = !DILocation(line: 330, column: 8, scope: !1000)
!1119 = !DILocation(line: 331, column: 10, scope: !1000)
!1120 = !DILocation(line: 331, column: 18, scope: !1000)
!1121 = !DILocation(line: 331, column: 16, scope: !1000)
!1122 = !DILocation(line: 331, column: 26, scope: !1000)
!1123 = !DILocation(line: 331, column: 34, scope: !1000)
!1124 = !DILocation(line: 331, column: 32, scope: !1000)
!1125 = !DILocation(line: 331, column: 24, scope: !1000)
!1126 = !DILocation(line: 331, column: 2, scope: !1000)
!1127 = !DILocation(line: 332, column: 1, scope: !1000)
!1128 = distinct !DISubprogram(name: "dist_to_line_segment_v2", scope: !3, file: !3, line: 334, type: !489, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1129 = !DILocalVariable(name: "p", arg: 1, scope: !1128, file: !3, line: 334, type: !7)
!1130 = !DILocation(line: 334, column: 43, scope: !1128)
!1131 = !DILocalVariable(name: "l1", arg: 2, scope: !1128, file: !3, line: 334, type: !7)
!1132 = !DILocation(line: 334, column: 61, scope: !1128)
!1133 = !DILocalVariable(name: "l2", arg: 3, scope: !1128, file: !3, line: 334, type: !7)
!1134 = !DILocation(line: 334, column: 80, scope: !1128)
!1135 = !DILocation(line: 336, column: 47, scope: !1128)
!1136 = !DILocation(line: 336, column: 50, scope: !1128)
!1137 = !DILocation(line: 336, column: 54, scope: !1128)
!1138 = !DILocation(line: 336, column: 15, scope: !1128)
!1139 = !DILocation(line: 336, column: 9, scope: !1128)
!1140 = !DILocation(line: 336, column: 2, scope: !1128)
!1141 = distinct !DISubprogram(name: "closest_to_line_segment_v2", scope: !3, file: !3, line: 340, type: !26, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1142 = !DILocalVariable(name: "r_close", arg: 1, scope: !1141, file: !3, line: 340, type: !10)
!1143 = !DILocation(line: 340, column: 39, scope: !1141)
!1144 = !DILocalVariable(name: "p", arg: 2, scope: !1141, file: !3, line: 340, type: !7)
!1145 = !DILocation(line: 340, column: 63, scope: !1141)
!1146 = !DILocalVariable(name: "l1", arg: 3, scope: !1141, file: !3, line: 340, type: !7)
!1147 = !DILocation(line: 340, column: 81, scope: !1141)
!1148 = !DILocalVariable(name: "l2", arg: 4, scope: !1141, file: !3, line: 340, type: !7)
!1149 = !DILocation(line: 340, column: 100, scope: !1141)
!1150 = !DILocalVariable(name: "lambda", scope: !1141, file: !3, line: 342, type: !9)
!1151 = !DILocation(line: 342, column: 8, scope: !1141)
!1152 = !DILocalVariable(name: "cp", scope: !1141, file: !3, line: 342, type: !894)
!1153 = !DILocation(line: 342, column: 16, scope: !1141)
!1154 = !DILocation(line: 344, column: 30, scope: !1141)
!1155 = !DILocation(line: 344, column: 34, scope: !1141)
!1156 = !DILocation(line: 344, column: 37, scope: !1141)
!1157 = !DILocation(line: 344, column: 41, scope: !1141)
!1158 = !DILocation(line: 344, column: 11, scope: !1141)
!1159 = !DILocation(line: 344, column: 9, scope: !1141)
!1160 = !DILocation(line: 346, column: 6, scope: !1161)
!1161 = distinct !DILexicalBlock(scope: !1141, file: !3, line: 346, column: 6)
!1162 = !DILocation(line: 346, column: 13, scope: !1161)
!1163 = !DILocation(line: 346, column: 6, scope: !1141)
!1164 = !DILocation(line: 347, column: 14, scope: !1161)
!1165 = !DILocation(line: 347, column: 23, scope: !1161)
!1166 = !DILocation(line: 347, column: 3, scope: !1161)
!1167 = !DILocation(line: 348, column: 11, scope: !1168)
!1168 = distinct !DILexicalBlock(scope: !1161, file: !3, line: 348, column: 11)
!1169 = !DILocation(line: 348, column: 18, scope: !1168)
!1170 = !DILocation(line: 348, column: 11, scope: !1161)
!1171 = !DILocation(line: 349, column: 14, scope: !1168)
!1172 = !DILocation(line: 349, column: 23, scope: !1168)
!1173 = !DILocation(line: 349, column: 3, scope: !1168)
!1174 = !DILocation(line: 351, column: 14, scope: !1168)
!1175 = !DILocation(line: 351, column: 23, scope: !1168)
!1176 = !DILocation(line: 351, column: 3, scope: !1168)
!1177 = !DILocation(line: 352, column: 1, scope: !1141)
!1178 = distinct !DISubprogram(name: "closest_to_line_v2", scope: !3, file: !3, line: 1784, type: !106, scopeLine: 1785, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1179 = !DILocalVariable(name: "cp", arg: 1, scope: !1178, file: !3, line: 1784, type: !10)
!1180 = !DILocation(line: 1784, column: 32, scope: !1178)
!1181 = !DILocalVariable(name: "p", arg: 2, scope: !1178, file: !3, line: 1784, type: !7)
!1182 = !DILocation(line: 1784, column: 51, scope: !1178)
!1183 = !DILocalVariable(name: "l1", arg: 3, scope: !1178, file: !3, line: 1784, type: !7)
!1184 = !DILocation(line: 1784, column: 69, scope: !1178)
!1185 = !DILocalVariable(name: "l2", arg: 4, scope: !1178, file: !3, line: 1784, type: !7)
!1186 = !DILocation(line: 1784, column: 88, scope: !1178)
!1187 = !DILocalVariable(name: "h", scope: !1178, file: !3, line: 1786, type: !894)
!1188 = !DILocation(line: 1786, column: 8, scope: !1178)
!1189 = !DILocalVariable(name: "u", scope: !1178, file: !3, line: 1786, type: !894)
!1190 = !DILocation(line: 1786, column: 14, scope: !1178)
!1191 = !DILocalVariable(name: "lambda", scope: !1178, file: !3, line: 1786, type: !9)
!1192 = !DILocation(line: 1786, column: 20, scope: !1178)
!1193 = !DILocation(line: 1787, column: 14, scope: !1178)
!1194 = !DILocation(line: 1787, column: 17, scope: !1178)
!1195 = !DILocation(line: 1787, column: 21, scope: !1178)
!1196 = !DILocation(line: 1787, column: 2, scope: !1178)
!1197 = !DILocation(line: 1788, column: 14, scope: !1178)
!1198 = !DILocation(line: 1788, column: 17, scope: !1178)
!1199 = !DILocation(line: 1788, column: 20, scope: !1178)
!1200 = !DILocation(line: 1788, column: 2, scope: !1178)
!1201 = !DILocation(line: 1789, column: 20, scope: !1178)
!1202 = !DILocation(line: 1789, column: 23, scope: !1178)
!1203 = !DILocation(line: 1789, column: 11, scope: !1178)
!1204 = !DILocation(line: 1789, column: 37, scope: !1178)
!1205 = !DILocation(line: 1789, column: 40, scope: !1178)
!1206 = !DILocation(line: 1789, column: 28, scope: !1178)
!1207 = !DILocation(line: 1789, column: 26, scope: !1178)
!1208 = !DILocation(line: 1789, column: 9, scope: !1178)
!1209 = !DILocation(line: 1790, column: 10, scope: !1178)
!1210 = !DILocation(line: 1790, column: 18, scope: !1178)
!1211 = !DILocation(line: 1790, column: 25, scope: !1178)
!1212 = !DILocation(line: 1790, column: 23, scope: !1178)
!1213 = !DILocation(line: 1790, column: 16, scope: !1178)
!1214 = !DILocation(line: 1790, column: 2, scope: !1178)
!1215 = !DILocation(line: 1790, column: 8, scope: !1178)
!1216 = !DILocation(line: 1791, column: 10, scope: !1178)
!1217 = !DILocation(line: 1791, column: 18, scope: !1178)
!1218 = !DILocation(line: 1791, column: 25, scope: !1178)
!1219 = !DILocation(line: 1791, column: 23, scope: !1178)
!1220 = !DILocation(line: 1791, column: 16, scope: !1178)
!1221 = !DILocation(line: 1791, column: 2, scope: !1178)
!1222 = !DILocation(line: 1791, column: 8, scope: !1178)
!1223 = !DILocation(line: 1792, column: 9, scope: !1178)
!1224 = !DILocation(line: 1792, column: 2, scope: !1178)
!1225 = distinct !DISubprogram(name: "copy_v2_v2", scope: !184, file: !184, line: 58, type: !724, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1226 = !DILocalVariable(name: "r", arg: 1, scope: !1225, file: !184, line: 58, type: !10)
!1227 = !DILocation(line: 58, column: 31, scope: !1225)
!1228 = !DILocalVariable(name: "a", arg: 2, scope: !1225, file: !184, line: 58, type: !7)
!1229 = !DILocation(line: 58, column: 49, scope: !1225)
!1230 = !DILocation(line: 60, column: 9, scope: !1225)
!1231 = !DILocation(line: 60, column: 2, scope: !1225)
!1232 = !DILocation(line: 60, column: 7, scope: !1225)
!1233 = !DILocation(line: 61, column: 9, scope: !1225)
!1234 = !DILocation(line: 61, column: 2, scope: !1225)
!1235 = !DILocation(line: 61, column: 7, scope: !1225)
!1236 = !DILocation(line: 62, column: 1, scope: !1225)
!1237 = distinct !DISubprogram(name: "closest_to_line_segment_v3", scope: !3, file: !3, line: 355, type: !26, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1238 = !DILocalVariable(name: "r_close", arg: 1, scope: !1237, file: !3, line: 355, type: !10)
!1239 = !DILocation(line: 355, column: 39, scope: !1237)
!1240 = !DILocalVariable(name: "v1", arg: 2, scope: !1237, file: !3, line: 355, type: !7)
!1241 = !DILocation(line: 355, column: 63, scope: !1237)
!1242 = !DILocalVariable(name: "v2", arg: 3, scope: !1237, file: !3, line: 355, type: !7)
!1243 = !DILocation(line: 355, column: 82, scope: !1237)
!1244 = !DILocalVariable(name: "v3", arg: 4, scope: !1237, file: !3, line: 355, type: !7)
!1245 = !DILocation(line: 355, column: 101, scope: !1237)
!1246 = !DILocalVariable(name: "lambda", scope: !1237, file: !3, line: 357, type: !9)
!1247 = !DILocation(line: 357, column: 8, scope: !1237)
!1248 = !DILocalVariable(name: "cp", scope: !1237, file: !3, line: 357, type: !117)
!1249 = !DILocation(line: 357, column: 16, scope: !1237)
!1250 = !DILocation(line: 359, column: 30, scope: !1237)
!1251 = !DILocation(line: 359, column: 34, scope: !1237)
!1252 = !DILocation(line: 359, column: 38, scope: !1237)
!1253 = !DILocation(line: 359, column: 42, scope: !1237)
!1254 = !DILocation(line: 359, column: 11, scope: !1237)
!1255 = !DILocation(line: 359, column: 9, scope: !1237)
!1256 = !DILocation(line: 361, column: 6, scope: !1257)
!1257 = distinct !DILexicalBlock(scope: !1237, file: !3, line: 361, column: 6)
!1258 = !DILocation(line: 361, column: 13, scope: !1257)
!1259 = !DILocation(line: 361, column: 6, scope: !1237)
!1260 = !DILocation(line: 362, column: 14, scope: !1257)
!1261 = !DILocation(line: 362, column: 23, scope: !1257)
!1262 = !DILocation(line: 362, column: 3, scope: !1257)
!1263 = !DILocation(line: 363, column: 11, scope: !1264)
!1264 = distinct !DILexicalBlock(scope: !1257, file: !3, line: 363, column: 11)
!1265 = !DILocation(line: 363, column: 18, scope: !1264)
!1266 = !DILocation(line: 363, column: 11, scope: !1257)
!1267 = !DILocation(line: 364, column: 14, scope: !1264)
!1268 = !DILocation(line: 364, column: 23, scope: !1264)
!1269 = !DILocation(line: 364, column: 3, scope: !1264)
!1270 = !DILocation(line: 366, column: 14, scope: !1264)
!1271 = !DILocation(line: 366, column: 23, scope: !1264)
!1272 = !DILocation(line: 366, column: 3, scope: !1264)
!1273 = !DILocation(line: 367, column: 1, scope: !1237)
!1274 = distinct !DISubprogram(name: "closest_to_line_v3", scope: !3, file: !3, line: 1772, type: !106, scopeLine: 1773, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1275 = !DILocalVariable(name: "cp", arg: 1, scope: !1274, file: !3, line: 1772, type: !10)
!1276 = !DILocation(line: 1772, column: 32, scope: !1274)
!1277 = !DILocalVariable(name: "p", arg: 2, scope: !1274, file: !3, line: 1772, type: !7)
!1278 = !DILocation(line: 1772, column: 51, scope: !1274)
!1279 = !DILocalVariable(name: "l1", arg: 3, scope: !1274, file: !3, line: 1772, type: !7)
!1280 = !DILocation(line: 1772, column: 69, scope: !1274)
!1281 = !DILocalVariable(name: "l2", arg: 4, scope: !1274, file: !3, line: 1772, type: !7)
!1282 = !DILocation(line: 1772, column: 88, scope: !1274)
!1283 = !DILocalVariable(name: "h", scope: !1274, file: !3, line: 1774, type: !117)
!1284 = !DILocation(line: 1774, column: 8, scope: !1274)
!1285 = !DILocalVariable(name: "u", scope: !1274, file: !3, line: 1774, type: !117)
!1286 = !DILocation(line: 1774, column: 14, scope: !1274)
!1287 = !DILocalVariable(name: "lambda", scope: !1274, file: !3, line: 1774, type: !9)
!1288 = !DILocation(line: 1774, column: 20, scope: !1274)
!1289 = !DILocation(line: 1775, column: 14, scope: !1274)
!1290 = !DILocation(line: 1775, column: 17, scope: !1274)
!1291 = !DILocation(line: 1775, column: 21, scope: !1274)
!1292 = !DILocation(line: 1775, column: 2, scope: !1274)
!1293 = !DILocation(line: 1776, column: 14, scope: !1274)
!1294 = !DILocation(line: 1776, column: 17, scope: !1274)
!1295 = !DILocation(line: 1776, column: 20, scope: !1274)
!1296 = !DILocation(line: 1776, column: 2, scope: !1274)
!1297 = !DILocation(line: 1777, column: 20, scope: !1274)
!1298 = !DILocation(line: 1777, column: 23, scope: !1274)
!1299 = !DILocation(line: 1777, column: 11, scope: !1274)
!1300 = !DILocation(line: 1777, column: 37, scope: !1274)
!1301 = !DILocation(line: 1777, column: 40, scope: !1274)
!1302 = !DILocation(line: 1777, column: 28, scope: !1274)
!1303 = !DILocation(line: 1777, column: 26, scope: !1274)
!1304 = !DILocation(line: 1777, column: 9, scope: !1274)
!1305 = !DILocation(line: 1778, column: 10, scope: !1274)
!1306 = !DILocation(line: 1778, column: 18, scope: !1274)
!1307 = !DILocation(line: 1778, column: 25, scope: !1274)
!1308 = !DILocation(line: 1778, column: 23, scope: !1274)
!1309 = !DILocation(line: 1778, column: 16, scope: !1274)
!1310 = !DILocation(line: 1778, column: 2, scope: !1274)
!1311 = !DILocation(line: 1778, column: 8, scope: !1274)
!1312 = !DILocation(line: 1779, column: 10, scope: !1274)
!1313 = !DILocation(line: 1779, column: 18, scope: !1274)
!1314 = !DILocation(line: 1779, column: 25, scope: !1274)
!1315 = !DILocation(line: 1779, column: 23, scope: !1274)
!1316 = !DILocation(line: 1779, column: 16, scope: !1274)
!1317 = !DILocation(line: 1779, column: 2, scope: !1274)
!1318 = !DILocation(line: 1779, column: 8, scope: !1274)
!1319 = !DILocation(line: 1780, column: 10, scope: !1274)
!1320 = !DILocation(line: 1780, column: 18, scope: !1274)
!1321 = !DILocation(line: 1780, column: 25, scope: !1274)
!1322 = !DILocation(line: 1780, column: 23, scope: !1274)
!1323 = !DILocation(line: 1780, column: 16, scope: !1274)
!1324 = !DILocation(line: 1780, column: 2, scope: !1274)
!1325 = !DILocation(line: 1780, column: 8, scope: !1274)
!1326 = !DILocation(line: 1781, column: 9, scope: !1274)
!1327 = !DILocation(line: 1781, column: 2, scope: !1274)
!1328 = distinct !DISubprogram(name: "closest_to_plane_v3", scope: !3, file: !3, line: 378, type: !332, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1329 = !DILocalVariable(name: "r_close", arg: 1, scope: !1328, file: !3, line: 378, type: !10)
!1330 = !DILocation(line: 378, column: 32, scope: !1328)
!1331 = !DILocalVariable(name: "plane", arg: 2, scope: !1328, file: !3, line: 378, type: !7)
!1332 = !DILocation(line: 378, column: 56, scope: !1328)
!1333 = !DILocalVariable(name: "pt", arg: 3, scope: !1328, file: !3, line: 378, type: !7)
!1334 = !DILocation(line: 378, column: 78, scope: !1328)
!1335 = !DILocalVariable(name: "len_sq", scope: !1328, file: !3, line: 380, type: !8)
!1336 = !DILocation(line: 380, column: 14, scope: !1328)
!1337 = !DILocation(line: 380, column: 38, scope: !1328)
!1338 = !DILocation(line: 380, column: 23, scope: !1328)
!1339 = !DILocalVariable(name: "side", scope: !1328, file: !3, line: 381, type: !8)
!1340 = !DILocation(line: 381, column: 14, scope: !1328)
!1341 = !DILocation(line: 381, column: 41, scope: !1328)
!1342 = !DILocation(line: 381, column: 48, scope: !1328)
!1343 = !DILocation(line: 381, column: 21, scope: !1328)
!1344 = !DILocation(line: 382, column: 17, scope: !1328)
!1345 = !DILocation(line: 382, column: 26, scope: !1328)
!1346 = !DILocation(line: 382, column: 30, scope: !1328)
!1347 = !DILocation(line: 382, column: 38, scope: !1328)
!1348 = !DILocation(line: 382, column: 37, scope: !1328)
!1349 = !DILocation(line: 382, column: 45, scope: !1328)
!1350 = !DILocation(line: 382, column: 43, scope: !1328)
!1351 = !DILocation(line: 382, column: 2, scope: !1328)
!1352 = !DILocation(line: 383, column: 1, scope: !1328)
!1353 = distinct !DISubprogram(name: "len_squared_v3", scope: !184, file: !184, line: 671, type: !479, scopeLine: 672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1354 = !DILocalVariable(name: "v", arg: 1, scope: !1353, file: !184, line: 671, type: !7)
!1355 = !DILocation(line: 671, column: 42, scope: !1353)
!1356 = !DILocation(line: 673, column: 9, scope: !1353)
!1357 = !DILocation(line: 673, column: 16, scope: !1353)
!1358 = !DILocation(line: 673, column: 14, scope: !1353)
!1359 = !DILocation(line: 673, column: 23, scope: !1353)
!1360 = !DILocation(line: 673, column: 30, scope: !1353)
!1361 = !DILocation(line: 673, column: 28, scope: !1353)
!1362 = !DILocation(line: 673, column: 21, scope: !1353)
!1363 = !DILocation(line: 673, column: 37, scope: !1353)
!1364 = !DILocation(line: 673, column: 44, scope: !1353)
!1365 = !DILocation(line: 673, column: 42, scope: !1353)
!1366 = !DILocation(line: 673, column: 35, scope: !1353)
!1367 = !DILocation(line: 673, column: 2, scope: !1353)
!1368 = distinct !DISubprogram(name: "plane_point_side_v3", scope: !1369, file: !1369, line: 228, type: !565, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1369 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_geom_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1370 = !DILocalVariable(name: "plane", arg: 1, scope: !1368, file: !1369, line: 228, type: !7)
!1371 = !DILocation(line: 228, column: 47, scope: !1368)
!1372 = !DILocalVariable(name: "co", arg: 2, scope: !1368, file: !1369, line: 228, type: !7)
!1373 = !DILocation(line: 228, column: 69, scope: !1368)
!1374 = !DILocation(line: 230, column: 18, scope: !1368)
!1375 = !DILocation(line: 230, column: 22, scope: !1368)
!1376 = !DILocation(line: 230, column: 9, scope: !1368)
!1377 = !DILocation(line: 230, column: 31, scope: !1368)
!1378 = !DILocation(line: 230, column: 29, scope: !1368)
!1379 = !DILocation(line: 230, column: 2, scope: !1368)
!1380 = distinct !DISubprogram(name: "dist_signed_squared_to_plane_v3", scope: !3, file: !3, line: 385, type: !565, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1381 = !DILocalVariable(name: "pt", arg: 1, scope: !1380, file: !3, line: 385, type: !7)
!1382 = !DILocation(line: 385, column: 51, scope: !1380)
!1383 = !DILocalVariable(name: "plane", arg: 2, scope: !1380, file: !3, line: 385, type: !7)
!1384 = !DILocation(line: 385, column: 70, scope: !1380)
!1385 = !DILocalVariable(name: "len_sq", scope: !1380, file: !3, line: 387, type: !8)
!1386 = !DILocation(line: 387, column: 14, scope: !1380)
!1387 = !DILocation(line: 387, column: 38, scope: !1380)
!1388 = !DILocation(line: 387, column: 23, scope: !1380)
!1389 = !DILocalVariable(name: "side", scope: !1380, file: !3, line: 388, type: !8)
!1390 = !DILocation(line: 388, column: 14, scope: !1380)
!1391 = !DILocation(line: 388, column: 41, scope: !1380)
!1392 = !DILocation(line: 388, column: 48, scope: !1380)
!1393 = !DILocation(line: 388, column: 21, scope: !1380)
!1394 = !DILocalVariable(name: "fac", scope: !1380, file: !3, line: 389, type: !8)
!1395 = !DILocation(line: 389, column: 14, scope: !1380)
!1396 = !DILocation(line: 389, column: 20, scope: !1380)
!1397 = !DILocation(line: 389, column: 27, scope: !1380)
!1398 = !DILocation(line: 389, column: 25, scope: !1380)
!1399 = !DILocation(line: 390, column: 19, scope: !1380)
!1400 = !DILocation(line: 390, column: 29, scope: !1380)
!1401 = !DILocation(line: 390, column: 35, scope: !1380)
!1402 = !DILocation(line: 390, column: 33, scope: !1380)
!1403 = !DILocation(line: 390, column: 26, scope: !1380)
!1404 = !DILocation(line: 390, column: 41, scope: !1380)
!1405 = !DILocation(line: 390, column: 9, scope: !1380)
!1406 = !DILocation(line: 390, column: 2, scope: !1380)
!1407 = distinct !DISubprogram(name: "dist_squared_to_plane_v3", scope: !3, file: !3, line: 392, type: !565, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1408 = !DILocalVariable(name: "pt", arg: 1, scope: !1407, file: !3, line: 392, type: !7)
!1409 = !DILocation(line: 392, column: 44, scope: !1407)
!1410 = !DILocalVariable(name: "plane", arg: 2, scope: !1407, file: !3, line: 392, type: !7)
!1411 = !DILocation(line: 392, column: 63, scope: !1407)
!1412 = !DILocalVariable(name: "len_sq", scope: !1407, file: !3, line: 394, type: !8)
!1413 = !DILocation(line: 394, column: 14, scope: !1407)
!1414 = !DILocation(line: 394, column: 38, scope: !1407)
!1415 = !DILocation(line: 394, column: 23, scope: !1407)
!1416 = !DILocalVariable(name: "side", scope: !1407, file: !3, line: 395, type: !8)
!1417 = !DILocation(line: 395, column: 14, scope: !1407)
!1418 = !DILocation(line: 395, column: 41, scope: !1407)
!1419 = !DILocation(line: 395, column: 48, scope: !1407)
!1420 = !DILocation(line: 395, column: 21, scope: !1407)
!1421 = !DILocalVariable(name: "fac", scope: !1407, file: !3, line: 396, type: !8)
!1422 = !DILocation(line: 396, column: 14, scope: !1407)
!1423 = !DILocation(line: 396, column: 20, scope: !1407)
!1424 = !DILocation(line: 396, column: 27, scope: !1407)
!1425 = !DILocation(line: 396, column: 25, scope: !1407)
!1426 = !DILocation(line: 398, column: 9, scope: !1407)
!1427 = !DILocation(line: 398, column: 19, scope: !1407)
!1428 = !DILocation(line: 398, column: 25, scope: !1407)
!1429 = !DILocation(line: 398, column: 23, scope: !1407)
!1430 = !DILocation(line: 398, column: 16, scope: !1407)
!1431 = !DILocation(line: 398, column: 2, scope: !1407)
!1432 = distinct !DISubprogram(name: "dist_signed_to_plane_v3", scope: !3, file: !3, line: 404, type: !565, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1433 = !DILocalVariable(name: "pt", arg: 1, scope: !1432, file: !3, line: 404, type: !7)
!1434 = !DILocation(line: 404, column: 43, scope: !1432)
!1435 = !DILocalVariable(name: "plane", arg: 2, scope: !1432, file: !3, line: 404, type: !7)
!1436 = !DILocation(line: 404, column: 62, scope: !1432)
!1437 = !DILocalVariable(name: "len_sq", scope: !1432, file: !3, line: 406, type: !8)
!1438 = !DILocation(line: 406, column: 14, scope: !1432)
!1439 = !DILocation(line: 406, column: 38, scope: !1432)
!1440 = !DILocation(line: 406, column: 23, scope: !1432)
!1441 = !DILocalVariable(name: "side", scope: !1432, file: !3, line: 407, type: !8)
!1442 = !DILocation(line: 407, column: 14, scope: !1432)
!1443 = !DILocation(line: 407, column: 41, scope: !1432)
!1444 = !DILocation(line: 407, column: 48, scope: !1432)
!1445 = !DILocation(line: 407, column: 21, scope: !1432)
!1446 = !DILocalVariable(name: "fac", scope: !1432, file: !3, line: 408, type: !8)
!1447 = !DILocation(line: 408, column: 14, scope: !1432)
!1448 = !DILocation(line: 408, column: 20, scope: !1432)
!1449 = !DILocation(line: 408, column: 27, scope: !1432)
!1450 = !DILocation(line: 408, column: 25, scope: !1432)
!1451 = !DILocation(line: 409, column: 15, scope: !1432)
!1452 = !DILocation(line: 409, column: 9, scope: !1432)
!1453 = !DILocation(line: 409, column: 25, scope: !1432)
!1454 = !DILocation(line: 409, column: 23, scope: !1432)
!1455 = !DILocation(line: 409, column: 2, scope: !1432)
!1456 = distinct !DISubprogram(name: "dist_to_plane_v3", scope: !3, file: !3, line: 411, type: !565, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1457 = !DILocalVariable(name: "pt", arg: 1, scope: !1456, file: !3, line: 411, type: !7)
!1458 = !DILocation(line: 411, column: 36, scope: !1456)
!1459 = !DILocalVariable(name: "plane", arg: 2, scope: !1456, file: !3, line: 411, type: !7)
!1460 = !DILocation(line: 411, column: 55, scope: !1456)
!1461 = !DILocation(line: 413, column: 39, scope: !1456)
!1462 = !DILocation(line: 413, column: 43, scope: !1456)
!1463 = !DILocation(line: 413, column: 15, scope: !1456)
!1464 = !DILocation(line: 413, column: 9, scope: !1456)
!1465 = !DILocation(line: 413, column: 2, scope: !1456)
!1466 = distinct !DISubprogram(name: "dist_squared_to_line_segment_v3", scope: !3, file: !3, line: 417, type: !489, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1467 = !DILocalVariable(name: "p", arg: 1, scope: !1466, file: !3, line: 417, type: !7)
!1468 = !DILocation(line: 417, column: 51, scope: !1466)
!1469 = !DILocalVariable(name: "l1", arg: 2, scope: !1466, file: !3, line: 417, type: !7)
!1470 = !DILocation(line: 417, column: 69, scope: !1466)
!1471 = !DILocalVariable(name: "l2", arg: 3, scope: !1466, file: !3, line: 417, type: !7)
!1472 = !DILocation(line: 417, column: 88, scope: !1466)
!1473 = !DILocalVariable(name: "closest", scope: !1466, file: !3, line: 419, type: !117)
!1474 = !DILocation(line: 419, column: 8, scope: !1466)
!1475 = !DILocation(line: 421, column: 29, scope: !1466)
!1476 = !DILocation(line: 421, column: 38, scope: !1466)
!1477 = !DILocation(line: 421, column: 41, scope: !1466)
!1478 = !DILocation(line: 421, column: 45, scope: !1466)
!1479 = !DILocation(line: 421, column: 2, scope: !1466)
!1480 = !DILocation(line: 423, column: 26, scope: !1466)
!1481 = !DILocation(line: 423, column: 35, scope: !1466)
!1482 = !DILocation(line: 423, column: 9, scope: !1466)
!1483 = !DILocation(line: 423, column: 2, scope: !1466)
!1484 = distinct !DISubprogram(name: "len_squared_v3v3", scope: !184, file: !184, line: 727, type: !565, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1485 = !DILocalVariable(name: "a", arg: 1, scope: !1484, file: !184, line: 727, type: !7)
!1486 = !DILocation(line: 727, column: 44, scope: !1484)
!1487 = !DILocalVariable(name: "b", arg: 2, scope: !1484, file: !184, line: 727, type: !7)
!1488 = !DILocation(line: 727, column: 62, scope: !1484)
!1489 = !DILocalVariable(name: "d", scope: !1484, file: !184, line: 729, type: !117)
!1490 = !DILocation(line: 729, column: 8, scope: !1484)
!1491 = !DILocation(line: 731, column: 14, scope: !1484)
!1492 = !DILocation(line: 731, column: 17, scope: !1484)
!1493 = !DILocation(line: 731, column: 20, scope: !1484)
!1494 = !DILocation(line: 731, column: 2, scope: !1484)
!1495 = !DILocation(line: 732, column: 18, scope: !1484)
!1496 = !DILocation(line: 732, column: 21, scope: !1484)
!1497 = !DILocation(line: 732, column: 9, scope: !1484)
!1498 = !DILocation(line: 732, column: 2, scope: !1484)
!1499 = distinct !DISubprogram(name: "dist_to_line_segment_v3", scope: !3, file: !3, line: 426, type: !489, scopeLine: 427, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1500 = !DILocalVariable(name: "p", arg: 1, scope: !1499, file: !3, line: 426, type: !7)
!1501 = !DILocation(line: 426, column: 43, scope: !1499)
!1502 = !DILocalVariable(name: "l1", arg: 2, scope: !1499, file: !3, line: 426, type: !7)
!1503 = !DILocation(line: 426, column: 61, scope: !1499)
!1504 = !DILocalVariable(name: "l2", arg: 3, scope: !1499, file: !3, line: 426, type: !7)
!1505 = !DILocation(line: 426, column: 80, scope: !1499)
!1506 = !DILocation(line: 428, column: 47, scope: !1499)
!1507 = !DILocation(line: 428, column: 50, scope: !1499)
!1508 = !DILocation(line: 428, column: 54, scope: !1499)
!1509 = !DILocation(line: 428, column: 15, scope: !1499)
!1510 = !DILocation(line: 428, column: 9, scope: !1499)
!1511 = !DILocation(line: 428, column: 2, scope: !1499)
!1512 = distinct !DISubprogram(name: "dist_squared_to_line_v3", scope: !3, file: !3, line: 431, type: !489, scopeLine: 432, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1513 = !DILocalVariable(name: "v1", arg: 1, scope: !1512, file: !3, line: 431, type: !7)
!1514 = !DILocation(line: 431, column: 43, scope: !1512)
!1515 = !DILocalVariable(name: "l1", arg: 2, scope: !1512, file: !3, line: 431, type: !7)
!1516 = !DILocation(line: 431, column: 62, scope: !1512)
!1517 = !DILocalVariable(name: "l2", arg: 3, scope: !1512, file: !3, line: 431, type: !7)
!1518 = !DILocation(line: 431, column: 81, scope: !1512)
!1519 = !DILocalVariable(name: "closest", scope: !1512, file: !3, line: 433, type: !117)
!1520 = !DILocation(line: 433, column: 8, scope: !1512)
!1521 = !DILocation(line: 435, column: 21, scope: !1512)
!1522 = !DILocation(line: 435, column: 30, scope: !1512)
!1523 = !DILocation(line: 435, column: 34, scope: !1512)
!1524 = !DILocation(line: 435, column: 38, scope: !1512)
!1525 = !DILocation(line: 435, column: 2, scope: !1512)
!1526 = !DILocation(line: 437, column: 26, scope: !1512)
!1527 = !DILocation(line: 437, column: 35, scope: !1512)
!1528 = !DILocation(line: 437, column: 9, scope: !1512)
!1529 = !DILocation(line: 437, column: 2, scope: !1512)
!1530 = distinct !DISubprogram(name: "dist_to_line_v3", scope: !3, file: !3, line: 439, type: !489, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1531 = !DILocalVariable(name: "v1", arg: 1, scope: !1530, file: !3, line: 439, type: !7)
!1532 = !DILocation(line: 439, column: 35, scope: !1530)
!1533 = !DILocalVariable(name: "l1", arg: 2, scope: !1530, file: !3, line: 439, type: !7)
!1534 = !DILocation(line: 439, column: 54, scope: !1530)
!1535 = !DILocalVariable(name: "l2", arg: 3, scope: !1530, file: !3, line: 439, type: !7)
!1536 = !DILocation(line: 439, column: 73, scope: !1530)
!1537 = !DILocation(line: 441, column: 39, scope: !1530)
!1538 = !DILocation(line: 441, column: 43, scope: !1530)
!1539 = !DILocation(line: 441, column: 47, scope: !1530)
!1540 = !DILocation(line: 441, column: 15, scope: !1530)
!1541 = !DILocation(line: 441, column: 9, scope: !1530)
!1542 = !DILocation(line: 441, column: 2, scope: !1530)
!1543 = distinct !DISubprogram(name: "closest_on_tri_to_point_v3", scope: !3, file: !3, line: 448, type: !62, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1544 = !DILocalVariable(name: "r", arg: 1, scope: !1543, file: !3, line: 448, type: !10)
!1545 = !DILocation(line: 448, column: 39, scope: !1543)
!1546 = !DILocalVariable(name: "p", arg: 2, scope: !1543, file: !3, line: 448, type: !7)
!1547 = !DILocation(line: 448, column: 57, scope: !1543)
!1548 = !DILocalVariable(name: "a", arg: 3, scope: !1543, file: !3, line: 449, type: !7)
!1549 = !DILocation(line: 449, column: 45, scope: !1543)
!1550 = !DILocalVariable(name: "b", arg: 4, scope: !1543, file: !3, line: 449, type: !7)
!1551 = !DILocation(line: 449, column: 63, scope: !1543)
!1552 = !DILocalVariable(name: "c", arg: 5, scope: !1543, file: !3, line: 449, type: !7)
!1553 = !DILocation(line: 449, column: 81, scope: !1543)
!1554 = !DILocalVariable(name: "ab", scope: !1543, file: !3, line: 451, type: !117)
!1555 = !DILocation(line: 451, column: 8, scope: !1543)
!1556 = !DILocalVariable(name: "ac", scope: !1543, file: !3, line: 451, type: !117)
!1557 = !DILocation(line: 451, column: 15, scope: !1543)
!1558 = !DILocalVariable(name: "ap", scope: !1543, file: !3, line: 451, type: !117)
!1559 = !DILocation(line: 451, column: 22, scope: !1543)
!1560 = !DILocalVariable(name: "d1", scope: !1543, file: !3, line: 451, type: !9)
!1561 = !DILocation(line: 451, column: 29, scope: !1543)
!1562 = !DILocalVariable(name: "d2", scope: !1543, file: !3, line: 451, type: !9)
!1563 = !DILocation(line: 451, column: 33, scope: !1543)
!1564 = !DILocalVariable(name: "bp", scope: !1543, file: !3, line: 452, type: !117)
!1565 = !DILocation(line: 452, column: 8, scope: !1543)
!1566 = !DILocalVariable(name: "d3", scope: !1543, file: !3, line: 452, type: !9)
!1567 = !DILocation(line: 452, column: 15, scope: !1543)
!1568 = !DILocalVariable(name: "d4", scope: !1543, file: !3, line: 452, type: !9)
!1569 = !DILocation(line: 452, column: 19, scope: !1543)
!1570 = !DILocalVariable(name: "vc", scope: !1543, file: !3, line: 452, type: !9)
!1571 = !DILocation(line: 452, column: 23, scope: !1543)
!1572 = !DILocalVariable(name: "cp", scope: !1543, file: !3, line: 452, type: !117)
!1573 = !DILocation(line: 452, column: 27, scope: !1543)
!1574 = !DILocalVariable(name: "d5", scope: !1543, file: !3, line: 452, type: !9)
!1575 = !DILocation(line: 452, column: 34, scope: !1543)
!1576 = !DILocalVariable(name: "d6", scope: !1543, file: !3, line: 452, type: !9)
!1577 = !DILocation(line: 452, column: 38, scope: !1543)
!1578 = !DILocalVariable(name: "vb", scope: !1543, file: !3, line: 452, type: !9)
!1579 = !DILocation(line: 452, column: 42, scope: !1543)
!1580 = !DILocalVariable(name: "va", scope: !1543, file: !3, line: 452, type: !9)
!1581 = !DILocation(line: 452, column: 46, scope: !1543)
!1582 = !DILocalVariable(name: "denom", scope: !1543, file: !3, line: 453, type: !9)
!1583 = !DILocation(line: 453, column: 8, scope: !1543)
!1584 = !DILocalVariable(name: "v", scope: !1543, file: !3, line: 453, type: !9)
!1585 = !DILocation(line: 453, column: 15, scope: !1543)
!1586 = !DILocalVariable(name: "w", scope: !1543, file: !3, line: 453, type: !9)
!1587 = !DILocation(line: 453, column: 18, scope: !1543)
!1588 = !DILocation(line: 456, column: 14, scope: !1543)
!1589 = !DILocation(line: 456, column: 18, scope: !1543)
!1590 = !DILocation(line: 456, column: 21, scope: !1543)
!1591 = !DILocation(line: 456, column: 2, scope: !1543)
!1592 = !DILocation(line: 457, column: 14, scope: !1543)
!1593 = !DILocation(line: 457, column: 18, scope: !1543)
!1594 = !DILocation(line: 457, column: 21, scope: !1543)
!1595 = !DILocation(line: 457, column: 2, scope: !1543)
!1596 = !DILocation(line: 458, column: 14, scope: !1543)
!1597 = !DILocation(line: 458, column: 18, scope: !1543)
!1598 = !DILocation(line: 458, column: 21, scope: !1543)
!1599 = !DILocation(line: 458, column: 2, scope: !1543)
!1600 = !DILocation(line: 459, column: 16, scope: !1543)
!1601 = !DILocation(line: 459, column: 20, scope: !1543)
!1602 = !DILocation(line: 459, column: 7, scope: !1543)
!1603 = !DILocation(line: 459, column: 5, scope: !1543)
!1604 = !DILocation(line: 460, column: 16, scope: !1543)
!1605 = !DILocation(line: 460, column: 20, scope: !1543)
!1606 = !DILocation(line: 460, column: 7, scope: !1543)
!1607 = !DILocation(line: 460, column: 5, scope: !1543)
!1608 = !DILocation(line: 461, column: 6, scope: !1609)
!1609 = distinct !DILexicalBlock(scope: !1543, file: !3, line: 461, column: 6)
!1610 = !DILocation(line: 461, column: 9, scope: !1609)
!1611 = !DILocation(line: 461, column: 17, scope: !1609)
!1612 = !DILocation(line: 461, column: 20, scope: !1609)
!1613 = !DILocation(line: 461, column: 23, scope: !1609)
!1614 = !DILocation(line: 461, column: 6, scope: !1543)
!1615 = !DILocation(line: 463, column: 14, scope: !1616)
!1616 = distinct !DILexicalBlock(scope: !1609, file: !3, line: 461, column: 32)
!1617 = !DILocation(line: 463, column: 17, scope: !1616)
!1618 = !DILocation(line: 463, column: 3, scope: !1616)
!1619 = !DILocation(line: 464, column: 3, scope: !1616)
!1620 = !DILocation(line: 468, column: 14, scope: !1543)
!1621 = !DILocation(line: 468, column: 18, scope: !1543)
!1622 = !DILocation(line: 468, column: 21, scope: !1543)
!1623 = !DILocation(line: 468, column: 2, scope: !1543)
!1624 = !DILocation(line: 469, column: 16, scope: !1543)
!1625 = !DILocation(line: 469, column: 20, scope: !1543)
!1626 = !DILocation(line: 469, column: 7, scope: !1543)
!1627 = !DILocation(line: 469, column: 5, scope: !1543)
!1628 = !DILocation(line: 470, column: 16, scope: !1543)
!1629 = !DILocation(line: 470, column: 20, scope: !1543)
!1630 = !DILocation(line: 470, column: 7, scope: !1543)
!1631 = !DILocation(line: 470, column: 5, scope: !1543)
!1632 = !DILocation(line: 471, column: 6, scope: !1633)
!1633 = distinct !DILexicalBlock(scope: !1543, file: !3, line: 471, column: 6)
!1634 = !DILocation(line: 471, column: 9, scope: !1633)
!1635 = !DILocation(line: 471, column: 17, scope: !1633)
!1636 = !DILocation(line: 471, column: 20, scope: !1633)
!1637 = !DILocation(line: 471, column: 26, scope: !1633)
!1638 = !DILocation(line: 471, column: 23, scope: !1633)
!1639 = !DILocation(line: 471, column: 6, scope: !1543)
!1640 = !DILocation(line: 473, column: 14, scope: !1641)
!1641 = distinct !DILexicalBlock(scope: !1633, file: !3, line: 471, column: 30)
!1642 = !DILocation(line: 473, column: 17, scope: !1641)
!1643 = !DILocation(line: 473, column: 3, scope: !1641)
!1644 = !DILocation(line: 474, column: 3, scope: !1641)
!1645 = !DILocation(line: 477, column: 7, scope: !1543)
!1646 = !DILocation(line: 477, column: 12, scope: !1543)
!1647 = !DILocation(line: 477, column: 10, scope: !1543)
!1648 = !DILocation(line: 477, column: 17, scope: !1543)
!1649 = !DILocation(line: 477, column: 22, scope: !1543)
!1650 = !DILocation(line: 477, column: 20, scope: !1543)
!1651 = !DILocation(line: 477, column: 15, scope: !1543)
!1652 = !DILocation(line: 477, column: 5, scope: !1543)
!1653 = !DILocation(line: 478, column: 6, scope: !1654)
!1654 = distinct !DILexicalBlock(scope: !1543, file: !3, line: 478, column: 6)
!1655 = !DILocation(line: 478, column: 9, scope: !1654)
!1656 = !DILocation(line: 478, column: 17, scope: !1654)
!1657 = !DILocation(line: 478, column: 20, scope: !1654)
!1658 = !DILocation(line: 478, column: 23, scope: !1654)
!1659 = !DILocation(line: 478, column: 31, scope: !1654)
!1660 = !DILocation(line: 478, column: 34, scope: !1654)
!1661 = !DILocation(line: 478, column: 37, scope: !1654)
!1662 = !DILocation(line: 478, column: 6, scope: !1543)
!1663 = !DILocation(line: 479, column: 7, scope: !1664)
!1664 = distinct !DILexicalBlock(scope: !1654, file: !3, line: 478, column: 46)
!1665 = !DILocation(line: 479, column: 13, scope: !1664)
!1666 = !DILocation(line: 479, column: 18, scope: !1664)
!1667 = !DILocation(line: 479, column: 16, scope: !1664)
!1668 = !DILocation(line: 479, column: 10, scope: !1664)
!1669 = !DILocation(line: 479, column: 5, scope: !1664)
!1670 = !DILocation(line: 481, column: 18, scope: !1664)
!1671 = !DILocation(line: 481, column: 21, scope: !1664)
!1672 = !DILocation(line: 481, column: 24, scope: !1664)
!1673 = !DILocation(line: 481, column: 28, scope: !1664)
!1674 = !DILocation(line: 481, column: 3, scope: !1664)
!1675 = !DILocation(line: 482, column: 3, scope: !1664)
!1676 = !DILocation(line: 485, column: 14, scope: !1543)
!1677 = !DILocation(line: 485, column: 18, scope: !1543)
!1678 = !DILocation(line: 485, column: 21, scope: !1543)
!1679 = !DILocation(line: 485, column: 2, scope: !1543)
!1680 = !DILocation(line: 486, column: 16, scope: !1543)
!1681 = !DILocation(line: 486, column: 20, scope: !1543)
!1682 = !DILocation(line: 486, column: 7, scope: !1543)
!1683 = !DILocation(line: 486, column: 5, scope: !1543)
!1684 = !DILocation(line: 487, column: 16, scope: !1543)
!1685 = !DILocation(line: 487, column: 20, scope: !1543)
!1686 = !DILocation(line: 487, column: 7, scope: !1543)
!1687 = !DILocation(line: 487, column: 5, scope: !1543)
!1688 = !DILocation(line: 488, column: 6, scope: !1689)
!1689 = distinct !DILexicalBlock(scope: !1543, file: !3, line: 488, column: 6)
!1690 = !DILocation(line: 488, column: 9, scope: !1689)
!1691 = !DILocation(line: 488, column: 17, scope: !1689)
!1692 = !DILocation(line: 488, column: 20, scope: !1689)
!1693 = !DILocation(line: 488, column: 26, scope: !1689)
!1694 = !DILocation(line: 488, column: 23, scope: !1689)
!1695 = !DILocation(line: 488, column: 6, scope: !1543)
!1696 = !DILocation(line: 490, column: 14, scope: !1697)
!1697 = distinct !DILexicalBlock(scope: !1689, file: !3, line: 488, column: 30)
!1698 = !DILocation(line: 490, column: 17, scope: !1697)
!1699 = !DILocation(line: 490, column: 3, scope: !1697)
!1700 = !DILocation(line: 491, column: 3, scope: !1697)
!1701 = !DILocation(line: 494, column: 7, scope: !1543)
!1702 = !DILocation(line: 494, column: 12, scope: !1543)
!1703 = !DILocation(line: 494, column: 10, scope: !1543)
!1704 = !DILocation(line: 494, column: 17, scope: !1543)
!1705 = !DILocation(line: 494, column: 22, scope: !1543)
!1706 = !DILocation(line: 494, column: 20, scope: !1543)
!1707 = !DILocation(line: 494, column: 15, scope: !1543)
!1708 = !DILocation(line: 494, column: 5, scope: !1543)
!1709 = !DILocation(line: 495, column: 6, scope: !1710)
!1710 = distinct !DILexicalBlock(scope: !1543, file: !3, line: 495, column: 6)
!1711 = !DILocation(line: 495, column: 9, scope: !1710)
!1712 = !DILocation(line: 495, column: 17, scope: !1710)
!1713 = !DILocation(line: 495, column: 20, scope: !1710)
!1714 = !DILocation(line: 495, column: 23, scope: !1710)
!1715 = !DILocation(line: 495, column: 31, scope: !1710)
!1716 = !DILocation(line: 495, column: 34, scope: !1710)
!1717 = !DILocation(line: 495, column: 37, scope: !1710)
!1718 = !DILocation(line: 495, column: 6, scope: !1543)
!1719 = !DILocation(line: 496, column: 7, scope: !1720)
!1720 = distinct !DILexicalBlock(scope: !1710, file: !3, line: 495, column: 46)
!1721 = !DILocation(line: 496, column: 13, scope: !1720)
!1722 = !DILocation(line: 496, column: 18, scope: !1720)
!1723 = !DILocation(line: 496, column: 16, scope: !1720)
!1724 = !DILocation(line: 496, column: 10, scope: !1720)
!1725 = !DILocation(line: 496, column: 5, scope: !1720)
!1726 = !DILocation(line: 498, column: 18, scope: !1720)
!1727 = !DILocation(line: 498, column: 21, scope: !1720)
!1728 = !DILocation(line: 498, column: 24, scope: !1720)
!1729 = !DILocation(line: 498, column: 28, scope: !1720)
!1730 = !DILocation(line: 498, column: 3, scope: !1720)
!1731 = !DILocation(line: 499, column: 3, scope: !1720)
!1732 = !DILocation(line: 502, column: 7, scope: !1543)
!1733 = !DILocation(line: 502, column: 12, scope: !1543)
!1734 = !DILocation(line: 502, column: 10, scope: !1543)
!1735 = !DILocation(line: 502, column: 17, scope: !1543)
!1736 = !DILocation(line: 502, column: 22, scope: !1543)
!1737 = !DILocation(line: 502, column: 20, scope: !1543)
!1738 = !DILocation(line: 502, column: 15, scope: !1543)
!1739 = !DILocation(line: 502, column: 5, scope: !1543)
!1740 = !DILocation(line: 503, column: 6, scope: !1741)
!1741 = distinct !DILexicalBlock(scope: !1543, file: !3, line: 503, column: 6)
!1742 = !DILocation(line: 503, column: 9, scope: !1741)
!1743 = !DILocation(line: 503, column: 17, scope: !1741)
!1744 = !DILocation(line: 503, column: 21, scope: !1741)
!1745 = !DILocation(line: 503, column: 26, scope: !1741)
!1746 = !DILocation(line: 503, column: 24, scope: !1741)
!1747 = !DILocation(line: 503, column: 30, scope: !1741)
!1748 = !DILocation(line: 503, column: 38, scope: !1741)
!1749 = !DILocation(line: 503, column: 42, scope: !1741)
!1750 = !DILocation(line: 503, column: 47, scope: !1741)
!1751 = !DILocation(line: 503, column: 45, scope: !1741)
!1752 = !DILocation(line: 503, column: 51, scope: !1741)
!1753 = !DILocation(line: 503, column: 6, scope: !1543)
!1754 = !DILocation(line: 504, column: 8, scope: !1755)
!1755 = distinct !DILexicalBlock(scope: !1741, file: !3, line: 503, column: 60)
!1756 = !DILocation(line: 504, column: 13, scope: !1755)
!1757 = !DILocation(line: 504, column: 11, scope: !1755)
!1758 = !DILocation(line: 504, column: 21, scope: !1755)
!1759 = !DILocation(line: 504, column: 26, scope: !1755)
!1760 = !DILocation(line: 504, column: 24, scope: !1755)
!1761 = !DILocation(line: 504, column: 33, scope: !1755)
!1762 = !DILocation(line: 504, column: 38, scope: !1755)
!1763 = !DILocation(line: 504, column: 36, scope: !1755)
!1764 = !DILocation(line: 504, column: 30, scope: !1755)
!1765 = !DILocation(line: 504, column: 17, scope: !1755)
!1766 = !DILocation(line: 504, column: 5, scope: !1755)
!1767 = !DILocation(line: 506, column: 15, scope: !1755)
!1768 = !DILocation(line: 506, column: 18, scope: !1755)
!1769 = !DILocation(line: 506, column: 21, scope: !1755)
!1770 = !DILocation(line: 506, column: 3, scope: !1755)
!1771 = !DILocation(line: 507, column: 13, scope: !1755)
!1772 = !DILocation(line: 507, column: 16, scope: !1755)
!1773 = !DILocation(line: 507, column: 3, scope: !1755)
!1774 = !DILocation(line: 508, column: 13, scope: !1755)
!1775 = !DILocation(line: 508, column: 16, scope: !1755)
!1776 = !DILocation(line: 508, column: 3, scope: !1755)
!1777 = !DILocation(line: 509, column: 3, scope: !1755)
!1778 = !DILocation(line: 513, column: 18, scope: !1543)
!1779 = !DILocation(line: 513, column: 23, scope: !1543)
!1780 = !DILocation(line: 513, column: 21, scope: !1543)
!1781 = !DILocation(line: 513, column: 28, scope: !1543)
!1782 = !DILocation(line: 513, column: 26, scope: !1543)
!1783 = !DILocation(line: 513, column: 15, scope: !1543)
!1784 = !DILocation(line: 513, column: 8, scope: !1543)
!1785 = !DILocation(line: 514, column: 6, scope: !1543)
!1786 = !DILocation(line: 514, column: 11, scope: !1543)
!1787 = !DILocation(line: 514, column: 9, scope: !1543)
!1788 = !DILocation(line: 514, column: 4, scope: !1543)
!1789 = !DILocation(line: 515, column: 6, scope: !1543)
!1790 = !DILocation(line: 515, column: 11, scope: !1543)
!1791 = !DILocation(line: 515, column: 9, scope: !1543)
!1792 = !DILocation(line: 515, column: 4, scope: !1543)
!1793 = !DILocation(line: 519, column: 12, scope: !1543)
!1794 = !DILocation(line: 519, column: 16, scope: !1543)
!1795 = !DILocation(line: 519, column: 2, scope: !1543)
!1796 = !DILocation(line: 521, column: 17, scope: !1543)
!1797 = !DILocation(line: 521, column: 20, scope: !1543)
!1798 = !DILocation(line: 521, column: 23, scope: !1543)
!1799 = !DILocation(line: 521, column: 27, scope: !1543)
!1800 = !DILocation(line: 521, column: 2, scope: !1543)
!1801 = !DILocation(line: 523, column: 12, scope: !1543)
!1802 = !DILocation(line: 523, column: 15, scope: !1543)
!1803 = !DILocation(line: 523, column: 2, scope: !1543)
!1804 = !DILocation(line: 524, column: 1, scope: !1543)
!1805 = distinct !DISubprogram(name: "mul_v3_fl", scope: !184, file: !184, line: 392, type: !1806, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1806 = !DISubroutineType(types: !1807)
!1807 = !{null, !10, !9}
!1808 = !DILocalVariable(name: "r", arg: 1, scope: !1805, file: !184, line: 392, type: !10)
!1809 = !DILocation(line: 392, column: 30, scope: !1805)
!1810 = !DILocalVariable(name: "f", arg: 2, scope: !1805, file: !184, line: 392, type: !9)
!1811 = !DILocation(line: 392, column: 42, scope: !1805)
!1812 = !DILocation(line: 394, column: 10, scope: !1805)
!1813 = !DILocation(line: 394, column: 2, scope: !1805)
!1814 = !DILocation(line: 394, column: 7, scope: !1805)
!1815 = !DILocation(line: 395, column: 10, scope: !1805)
!1816 = !DILocation(line: 395, column: 2, scope: !1805)
!1817 = !DILocation(line: 395, column: 7, scope: !1805)
!1818 = !DILocation(line: 396, column: 10, scope: !1805)
!1819 = !DILocation(line: 396, column: 2, scope: !1805)
!1820 = !DILocation(line: 396, column: 7, scope: !1805)
!1821 = !DILocation(line: 397, column: 1, scope: !1805)
!1822 = distinct !DISubprogram(name: "add_v3_v3", scope: !184, file: !184, line: 302, type: !724, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1823 = !DILocalVariable(name: "r", arg: 1, scope: !1822, file: !184, line: 302, type: !10)
!1824 = !DILocation(line: 302, column: 30, scope: !1822)
!1825 = !DILocalVariable(name: "a", arg: 2, scope: !1822, file: !184, line: 302, type: !7)
!1826 = !DILocation(line: 302, column: 48, scope: !1822)
!1827 = !DILocation(line: 304, column: 10, scope: !1822)
!1828 = !DILocation(line: 304, column: 2, scope: !1822)
!1829 = !DILocation(line: 304, column: 7, scope: !1822)
!1830 = !DILocation(line: 305, column: 10, scope: !1822)
!1831 = !DILocation(line: 305, column: 2, scope: !1822)
!1832 = !DILocation(line: 305, column: 7, scope: !1822)
!1833 = !DILocation(line: 306, column: 10, scope: !1822)
!1834 = !DILocation(line: 306, column: 2, scope: !1822)
!1835 = !DILocation(line: 306, column: 7, scope: !1822)
!1836 = !DILocation(line: 307, column: 1, scope: !1822)
!1837 = distinct !DISubprogram(name: "isect_line_line_v2_int", scope: !3, file: !3, line: 529, type: !1838, scopeLine: 530, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1838 = !DISubroutineType(types: !1839)
!1839 = !{!17, !1840, !1840, !1840, !1840}
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 64)
!1841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17)
!1842 = !DILocalVariable(name: "v1", arg: 1, scope: !1837, file: !3, line: 529, type: !1840)
!1843 = !DILocation(line: 529, column: 38, scope: !1837)
!1844 = !DILocalVariable(name: "v2", arg: 2, scope: !1837, file: !3, line: 529, type: !1840)
!1845 = !DILocation(line: 529, column: 55, scope: !1837)
!1846 = !DILocalVariable(name: "v3", arg: 3, scope: !1837, file: !3, line: 529, type: !1840)
!1847 = !DILocation(line: 529, column: 72, scope: !1837)
!1848 = !DILocalVariable(name: "v4", arg: 4, scope: !1837, file: !3, line: 529, type: !1840)
!1849 = !DILocation(line: 529, column: 89, scope: !1837)
!1850 = !DILocalVariable(name: "div", scope: !1837, file: !3, line: 531, type: !9)
!1851 = !DILocation(line: 531, column: 8, scope: !1837)
!1852 = !DILocalVariable(name: "lambda", scope: !1837, file: !3, line: 531, type: !9)
!1853 = !DILocation(line: 531, column: 13, scope: !1837)
!1854 = !DILocalVariable(name: "mu", scope: !1837, file: !3, line: 531, type: !9)
!1855 = !DILocation(line: 531, column: 21, scope: !1837)
!1856 = !DILocation(line: 533, column: 17, scope: !1837)
!1857 = !DILocation(line: 533, column: 25, scope: !1837)
!1858 = !DILocation(line: 533, column: 23, scope: !1837)
!1859 = !DILocation(line: 533, column: 35, scope: !1837)
!1860 = !DILocation(line: 533, column: 43, scope: !1837)
!1861 = !DILocation(line: 533, column: 41, scope: !1837)
!1862 = !DILocation(line: 533, column: 32, scope: !1837)
!1863 = !DILocation(line: 533, column: 53, scope: !1837)
!1864 = !DILocation(line: 533, column: 61, scope: !1837)
!1865 = !DILocation(line: 533, column: 59, scope: !1837)
!1866 = !DILocation(line: 533, column: 71, scope: !1837)
!1867 = !DILocation(line: 533, column: 79, scope: !1837)
!1868 = !DILocation(line: 533, column: 77, scope: !1837)
!1869 = !DILocation(line: 533, column: 68, scope: !1837)
!1870 = !DILocation(line: 533, column: 50, scope: !1837)
!1871 = !DILocation(line: 533, column: 8, scope: !1837)
!1872 = !DILocation(line: 533, column: 6, scope: !1837)
!1873 = !DILocation(line: 534, column: 6, scope: !1874)
!1874 = distinct !DILexicalBlock(scope: !1837, file: !3, line: 534, column: 6)
!1875 = !DILocation(line: 534, column: 10, scope: !1874)
!1876 = !DILocation(line: 534, column: 6, scope: !1837)
!1877 = !DILocation(line: 534, column: 19, scope: !1874)
!1878 = !DILocation(line: 536, column: 20, scope: !1837)
!1879 = !DILocation(line: 536, column: 28, scope: !1837)
!1880 = !DILocation(line: 536, column: 26, scope: !1837)
!1881 = !DILocation(line: 536, column: 38, scope: !1837)
!1882 = !DILocation(line: 536, column: 46, scope: !1837)
!1883 = !DILocation(line: 536, column: 44, scope: !1837)
!1884 = !DILocation(line: 536, column: 35, scope: !1837)
!1885 = !DILocation(line: 536, column: 56, scope: !1837)
!1886 = !DILocation(line: 536, column: 64, scope: !1837)
!1887 = !DILocation(line: 536, column: 62, scope: !1837)
!1888 = !DILocation(line: 536, column: 74, scope: !1837)
!1889 = !DILocation(line: 536, column: 82, scope: !1837)
!1890 = !DILocation(line: 536, column: 80, scope: !1837)
!1891 = !DILocation(line: 536, column: 71, scope: !1837)
!1892 = !DILocation(line: 536, column: 53, scope: !1837)
!1893 = !DILocation(line: 536, column: 11, scope: !1837)
!1894 = !DILocation(line: 536, column: 92, scope: !1837)
!1895 = !DILocation(line: 536, column: 90, scope: !1837)
!1896 = !DILocation(line: 536, column: 9, scope: !1837)
!1897 = !DILocation(line: 538, column: 16, scope: !1837)
!1898 = !DILocation(line: 538, column: 24, scope: !1837)
!1899 = !DILocation(line: 538, column: 22, scope: !1837)
!1900 = !DILocation(line: 538, column: 34, scope: !1837)
!1901 = !DILocation(line: 538, column: 42, scope: !1837)
!1902 = !DILocation(line: 538, column: 40, scope: !1837)
!1903 = !DILocation(line: 538, column: 31, scope: !1837)
!1904 = !DILocation(line: 538, column: 52, scope: !1837)
!1905 = !DILocation(line: 538, column: 60, scope: !1837)
!1906 = !DILocation(line: 538, column: 58, scope: !1837)
!1907 = !DILocation(line: 538, column: 70, scope: !1837)
!1908 = !DILocation(line: 538, column: 78, scope: !1837)
!1909 = !DILocation(line: 538, column: 76, scope: !1837)
!1910 = !DILocation(line: 538, column: 67, scope: !1837)
!1911 = !DILocation(line: 538, column: 49, scope: !1837)
!1912 = !DILocation(line: 538, column: 7, scope: !1837)
!1913 = !DILocation(line: 538, column: 88, scope: !1837)
!1914 = !DILocation(line: 538, column: 86, scope: !1837)
!1915 = !DILocation(line: 538, column: 5, scope: !1837)
!1916 = !DILocation(line: 540, column: 6, scope: !1917)
!1917 = distinct !DILexicalBlock(scope: !1837, file: !3, line: 540, column: 6)
!1918 = !DILocation(line: 540, column: 13, scope: !1917)
!1919 = !DILocation(line: 540, column: 21, scope: !1917)
!1920 = !DILocation(line: 540, column: 24, scope: !1917)
!1921 = !DILocation(line: 540, column: 31, scope: !1917)
!1922 = !DILocation(line: 540, column: 39, scope: !1917)
!1923 = !DILocation(line: 540, column: 42, scope: !1917)
!1924 = !DILocation(line: 540, column: 45, scope: !1917)
!1925 = !DILocation(line: 540, column: 53, scope: !1917)
!1926 = !DILocation(line: 540, column: 56, scope: !1917)
!1927 = !DILocation(line: 540, column: 59, scope: !1917)
!1928 = !DILocation(line: 540, column: 6, scope: !1837)
!1929 = !DILocation(line: 541, column: 7, scope: !1930)
!1930 = distinct !DILexicalBlock(scope: !1931, file: !3, line: 541, column: 7)
!1931 = distinct !DILexicalBlock(scope: !1917, file: !3, line: 540, column: 68)
!1932 = !DILocation(line: 541, column: 14, scope: !1930)
!1933 = !DILocation(line: 541, column: 22, scope: !1930)
!1934 = !DILocation(line: 541, column: 25, scope: !1930)
!1935 = !DILocation(line: 541, column: 32, scope: !1930)
!1936 = !DILocation(line: 541, column: 40, scope: !1930)
!1937 = !DILocation(line: 541, column: 43, scope: !1930)
!1938 = !DILocation(line: 541, column: 46, scope: !1930)
!1939 = !DILocation(line: 541, column: 54, scope: !1930)
!1940 = !DILocation(line: 541, column: 57, scope: !1930)
!1941 = !DILocation(line: 541, column: 60, scope: !1930)
!1942 = !DILocation(line: 541, column: 7, scope: !1931)
!1943 = !DILocation(line: 541, column: 69, scope: !1930)
!1944 = !DILocation(line: 542, column: 3, scope: !1931)
!1945 = !DILocation(line: 544, column: 2, scope: !1837)
!1946 = !DILocation(line: 545, column: 1, scope: !1837)
!1947 = distinct !DISubprogram(name: "isect_line_line_v2_point", scope: !3, file: !3, line: 548, type: !1948, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!1948 = !DISubroutineType(types: !1949)
!1949 = !{!17, !7, !7, !7, !7, !10}
!1950 = !DILocalVariable(name: "v1", arg: 1, scope: !1947, file: !3, line: 548, type: !7)
!1951 = !DILocation(line: 548, column: 42, scope: !1947)
!1952 = !DILocalVariable(name: "v2", arg: 2, scope: !1947, file: !3, line: 548, type: !7)
!1953 = !DILocation(line: 548, column: 61, scope: !1947)
!1954 = !DILocalVariable(name: "v3", arg: 3, scope: !1947, file: !3, line: 548, type: !7)
!1955 = !DILocation(line: 548, column: 80, scope: !1947)
!1956 = !DILocalVariable(name: "v4", arg: 4, scope: !1947, file: !3, line: 548, type: !7)
!1957 = !DILocation(line: 548, column: 99, scope: !1947)
!1958 = !DILocalVariable(name: "vi", arg: 5, scope: !1947, file: !3, line: 548, type: !10)
!1959 = !DILocation(line: 548, column: 112, scope: !1947)
!1960 = !DILocalVariable(name: "div", scope: !1947, file: !3, line: 550, type: !9)
!1961 = !DILocation(line: 550, column: 8, scope: !1947)
!1962 = !DILocation(line: 552, column: 9, scope: !1947)
!1963 = !DILocation(line: 552, column: 17, scope: !1947)
!1964 = !DILocation(line: 552, column: 15, scope: !1947)
!1965 = !DILocation(line: 552, column: 27, scope: !1947)
!1966 = !DILocation(line: 552, column: 35, scope: !1947)
!1967 = !DILocation(line: 552, column: 33, scope: !1947)
!1968 = !DILocation(line: 552, column: 24, scope: !1947)
!1969 = !DILocation(line: 552, column: 45, scope: !1947)
!1970 = !DILocation(line: 552, column: 53, scope: !1947)
!1971 = !DILocation(line: 552, column: 51, scope: !1947)
!1972 = !DILocation(line: 552, column: 63, scope: !1947)
!1973 = !DILocation(line: 552, column: 71, scope: !1947)
!1974 = !DILocation(line: 552, column: 69, scope: !1947)
!1975 = !DILocation(line: 552, column: 60, scope: !1947)
!1976 = !DILocation(line: 552, column: 42, scope: !1947)
!1977 = !DILocation(line: 552, column: 6, scope: !1947)
!1978 = !DILocation(line: 553, column: 6, scope: !1979)
!1979 = distinct !DILexicalBlock(scope: !1947, file: !3, line: 553, column: 6)
!1980 = !DILocation(line: 553, column: 10, scope: !1979)
!1981 = !DILocation(line: 553, column: 6, scope: !1947)
!1982 = !DILocation(line: 553, column: 19, scope: !1979)
!1983 = !DILocation(line: 555, column: 12, scope: !1947)
!1984 = !DILocation(line: 555, column: 20, scope: !1947)
!1985 = !DILocation(line: 555, column: 18, scope: !1947)
!1986 = !DILocation(line: 555, column: 30, scope: !1947)
!1987 = !DILocation(line: 555, column: 38, scope: !1947)
!1988 = !DILocation(line: 555, column: 36, scope: !1947)
!1989 = !DILocation(line: 555, column: 46, scope: !1947)
!1990 = !DILocation(line: 555, column: 54, scope: !1947)
!1991 = !DILocation(line: 555, column: 52, scope: !1947)
!1992 = !DILocation(line: 555, column: 44, scope: !1947)
!1993 = !DILocation(line: 555, column: 27, scope: !1947)
!1994 = !DILocation(line: 555, column: 64, scope: !1947)
!1995 = !DILocation(line: 555, column: 72, scope: !1947)
!1996 = !DILocation(line: 555, column: 70, scope: !1947)
!1997 = !DILocation(line: 555, column: 82, scope: !1947)
!1998 = !DILocation(line: 555, column: 90, scope: !1947)
!1999 = !DILocation(line: 555, column: 88, scope: !1947)
!2000 = !DILocation(line: 555, column: 98, scope: !1947)
!2001 = !DILocation(line: 555, column: 106, scope: !1947)
!2002 = !DILocation(line: 555, column: 104, scope: !1947)
!2003 = !DILocation(line: 555, column: 96, scope: !1947)
!2004 = !DILocation(line: 555, column: 79, scope: !1947)
!2005 = !DILocation(line: 555, column: 61, scope: !1947)
!2006 = !DILocation(line: 555, column: 116, scope: !1947)
!2007 = !DILocation(line: 555, column: 114, scope: !1947)
!2008 = !DILocation(line: 555, column: 2, scope: !1947)
!2009 = !DILocation(line: 555, column: 8, scope: !1947)
!2010 = !DILocation(line: 556, column: 12, scope: !1947)
!2011 = !DILocation(line: 556, column: 20, scope: !1947)
!2012 = !DILocation(line: 556, column: 18, scope: !1947)
!2013 = !DILocation(line: 556, column: 30, scope: !1947)
!2014 = !DILocation(line: 556, column: 38, scope: !1947)
!2015 = !DILocation(line: 556, column: 36, scope: !1947)
!2016 = !DILocation(line: 556, column: 46, scope: !1947)
!2017 = !DILocation(line: 556, column: 54, scope: !1947)
!2018 = !DILocation(line: 556, column: 52, scope: !1947)
!2019 = !DILocation(line: 556, column: 44, scope: !1947)
!2020 = !DILocation(line: 556, column: 27, scope: !1947)
!2021 = !DILocation(line: 556, column: 64, scope: !1947)
!2022 = !DILocation(line: 556, column: 72, scope: !1947)
!2023 = !DILocation(line: 556, column: 70, scope: !1947)
!2024 = !DILocation(line: 556, column: 82, scope: !1947)
!2025 = !DILocation(line: 556, column: 90, scope: !1947)
!2026 = !DILocation(line: 556, column: 88, scope: !1947)
!2027 = !DILocation(line: 556, column: 98, scope: !1947)
!2028 = !DILocation(line: 556, column: 106, scope: !1947)
!2029 = !DILocation(line: 556, column: 104, scope: !1947)
!2030 = !DILocation(line: 556, column: 96, scope: !1947)
!2031 = !DILocation(line: 556, column: 79, scope: !1947)
!2032 = !DILocation(line: 556, column: 61, scope: !1947)
!2033 = !DILocation(line: 556, column: 116, scope: !1947)
!2034 = !DILocation(line: 556, column: 114, scope: !1947)
!2035 = !DILocation(line: 556, column: 2, scope: !1947)
!2036 = !DILocation(line: 556, column: 8, scope: !1947)
!2037 = !DILocation(line: 558, column: 2, scope: !1947)
!2038 = !DILocation(line: 559, column: 1, scope: !1947)
!2039 = distinct !DISubprogram(name: "isect_line_line_v2", scope: !3, file: !3, line: 563, type: !2040, scopeLine: 564, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!2040 = !DISubroutineType(types: !2041)
!2041 = !{!17, !7, !7, !7, !7}
!2042 = !DILocalVariable(name: "v1", arg: 1, scope: !2039, file: !3, line: 563, type: !7)
!2043 = !DILocation(line: 563, column: 36, scope: !2039)
!2044 = !DILocalVariable(name: "v2", arg: 2, scope: !2039, file: !3, line: 563, type: !7)
!2045 = !DILocation(line: 563, column: 55, scope: !2039)
!2046 = !DILocalVariable(name: "v3", arg: 3, scope: !2039, file: !3, line: 563, type: !7)
!2047 = !DILocation(line: 563, column: 74, scope: !2039)
!2048 = !DILocalVariable(name: "v4", arg: 4, scope: !2039, file: !3, line: 563, type: !7)
!2049 = !DILocation(line: 563, column: 93, scope: !2039)
!2050 = !DILocalVariable(name: "div", scope: !2039, file: !3, line: 565, type: !9)
!2051 = !DILocation(line: 565, column: 8, scope: !2039)
!2052 = !DILocalVariable(name: "lambda", scope: !2039, file: !3, line: 565, type: !9)
!2053 = !DILocation(line: 565, column: 13, scope: !2039)
!2054 = !DILocalVariable(name: "mu", scope: !2039, file: !3, line: 565, type: !9)
!2055 = !DILocation(line: 565, column: 21, scope: !2039)
!2056 = !DILocation(line: 567, column: 9, scope: !2039)
!2057 = !DILocation(line: 567, column: 17, scope: !2039)
!2058 = !DILocation(line: 567, column: 15, scope: !2039)
!2059 = !DILocation(line: 567, column: 27, scope: !2039)
!2060 = !DILocation(line: 567, column: 35, scope: !2039)
!2061 = !DILocation(line: 567, column: 33, scope: !2039)
!2062 = !DILocation(line: 567, column: 24, scope: !2039)
!2063 = !DILocation(line: 567, column: 45, scope: !2039)
!2064 = !DILocation(line: 567, column: 53, scope: !2039)
!2065 = !DILocation(line: 567, column: 51, scope: !2039)
!2066 = !DILocation(line: 567, column: 63, scope: !2039)
!2067 = !DILocation(line: 567, column: 71, scope: !2039)
!2068 = !DILocation(line: 567, column: 69, scope: !2039)
!2069 = !DILocation(line: 567, column: 60, scope: !2039)
!2070 = !DILocation(line: 567, column: 42, scope: !2039)
!2071 = !DILocation(line: 567, column: 6, scope: !2039)
!2072 = !DILocation(line: 568, column: 6, scope: !2073)
!2073 = distinct !DILexicalBlock(scope: !2039, file: !3, line: 568, column: 6)
!2074 = !DILocation(line: 568, column: 10, scope: !2073)
!2075 = !DILocation(line: 568, column: 6, scope: !2039)
!2076 = !DILocation(line: 568, column: 19, scope: !2073)
!2077 = !DILocation(line: 570, column: 20, scope: !2039)
!2078 = !DILocation(line: 570, column: 28, scope: !2039)
!2079 = !DILocation(line: 570, column: 26, scope: !2039)
!2080 = !DILocation(line: 570, column: 38, scope: !2039)
!2081 = !DILocation(line: 570, column: 46, scope: !2039)
!2082 = !DILocation(line: 570, column: 44, scope: !2039)
!2083 = !DILocation(line: 570, column: 35, scope: !2039)
!2084 = !DILocation(line: 570, column: 56, scope: !2039)
!2085 = !DILocation(line: 570, column: 64, scope: !2039)
!2086 = !DILocation(line: 570, column: 62, scope: !2039)
!2087 = !DILocation(line: 570, column: 74, scope: !2039)
!2088 = !DILocation(line: 570, column: 82, scope: !2039)
!2089 = !DILocation(line: 570, column: 80, scope: !2039)
!2090 = !DILocation(line: 570, column: 71, scope: !2039)
!2091 = !DILocation(line: 570, column: 53, scope: !2039)
!2092 = !DILocation(line: 570, column: 92, scope: !2039)
!2093 = !DILocation(line: 570, column: 90, scope: !2039)
!2094 = !DILocation(line: 570, column: 9, scope: !2039)
!2095 = !DILocation(line: 572, column: 16, scope: !2039)
!2096 = !DILocation(line: 572, column: 24, scope: !2039)
!2097 = !DILocation(line: 572, column: 22, scope: !2039)
!2098 = !DILocation(line: 572, column: 34, scope: !2039)
!2099 = !DILocation(line: 572, column: 42, scope: !2039)
!2100 = !DILocation(line: 572, column: 40, scope: !2039)
!2101 = !DILocation(line: 572, column: 31, scope: !2039)
!2102 = !DILocation(line: 572, column: 52, scope: !2039)
!2103 = !DILocation(line: 572, column: 60, scope: !2039)
!2104 = !DILocation(line: 572, column: 58, scope: !2039)
!2105 = !DILocation(line: 572, column: 70, scope: !2039)
!2106 = !DILocation(line: 572, column: 78, scope: !2039)
!2107 = !DILocation(line: 572, column: 76, scope: !2039)
!2108 = !DILocation(line: 572, column: 67, scope: !2039)
!2109 = !DILocation(line: 572, column: 49, scope: !2039)
!2110 = !DILocation(line: 572, column: 88, scope: !2039)
!2111 = !DILocation(line: 572, column: 86, scope: !2039)
!2112 = !DILocation(line: 572, column: 5, scope: !2039)
!2113 = !DILocation(line: 574, column: 6, scope: !2114)
!2114 = distinct !DILexicalBlock(scope: !2039, file: !3, line: 574, column: 6)
!2115 = !DILocation(line: 574, column: 13, scope: !2114)
!2116 = !DILocation(line: 574, column: 21, scope: !2114)
!2117 = !DILocation(line: 574, column: 24, scope: !2114)
!2118 = !DILocation(line: 574, column: 31, scope: !2114)
!2119 = !DILocation(line: 574, column: 39, scope: !2114)
!2120 = !DILocation(line: 574, column: 42, scope: !2114)
!2121 = !DILocation(line: 574, column: 45, scope: !2114)
!2122 = !DILocation(line: 574, column: 53, scope: !2114)
!2123 = !DILocation(line: 574, column: 56, scope: !2114)
!2124 = !DILocation(line: 574, column: 59, scope: !2114)
!2125 = !DILocation(line: 574, column: 6, scope: !2039)
!2126 = !DILocation(line: 575, column: 7, scope: !2127)
!2127 = distinct !DILexicalBlock(scope: !2128, file: !3, line: 575, column: 7)
!2128 = distinct !DILexicalBlock(scope: !2114, file: !3, line: 574, column: 68)
!2129 = !DILocation(line: 575, column: 14, scope: !2127)
!2130 = !DILocation(line: 575, column: 22, scope: !2127)
!2131 = !DILocation(line: 575, column: 25, scope: !2127)
!2132 = !DILocation(line: 575, column: 32, scope: !2127)
!2133 = !DILocation(line: 575, column: 40, scope: !2127)
!2134 = !DILocation(line: 575, column: 43, scope: !2127)
!2135 = !DILocation(line: 575, column: 46, scope: !2127)
!2136 = !DILocation(line: 575, column: 54, scope: !2127)
!2137 = !DILocation(line: 575, column: 57, scope: !2127)
!2138 = !DILocation(line: 575, column: 60, scope: !2127)
!2139 = !DILocation(line: 575, column: 7, scope: !2128)
!2140 = !DILocation(line: 575, column: 69, scope: !2127)
!2141 = !DILocation(line: 576, column: 3, scope: !2128)
!2142 = !DILocation(line: 578, column: 2, scope: !2039)
!2143 = !DILocation(line: 579, column: 1, scope: !2039)
!2144 = distinct !DISubprogram(name: "isect_seg_seg_v2_point", scope: !3, file: !3, line: 585, type: !1948, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!2145 = !DILocalVariable(name: "v1", arg: 1, scope: !2144, file: !3, line: 585, type: !7)
!2146 = !DILocation(line: 585, column: 40, scope: !2144)
!2147 = !DILocalVariable(name: "v2", arg: 2, scope: !2144, file: !3, line: 585, type: !7)
!2148 = !DILocation(line: 585, column: 59, scope: !2144)
!2149 = !DILocalVariable(name: "v3", arg: 3, scope: !2144, file: !3, line: 585, type: !7)
!2150 = !DILocation(line: 585, column: 78, scope: !2144)
!2151 = !DILocalVariable(name: "v4", arg: 4, scope: !2144, file: !3, line: 585, type: !7)
!2152 = !DILocation(line: 585, column: 97, scope: !2144)
!2153 = !DILocalVariable(name: "vi", arg: 5, scope: !2144, file: !3, line: 585, type: !10)
!2154 = !DILocation(line: 585, column: 110, scope: !2144)
!2155 = !DILocalVariable(name: "a1", scope: !2144, file: !3, line: 587, type: !9)
!2156 = !DILocation(line: 587, column: 8, scope: !2144)
!2157 = !DILocalVariable(name: "a2", scope: !2144, file: !3, line: 587, type: !9)
!2158 = !DILocation(line: 587, column: 12, scope: !2144)
!2159 = !DILocalVariable(name: "b1", scope: !2144, file: !3, line: 587, type: !9)
!2160 = !DILocation(line: 587, column: 16, scope: !2144)
!2161 = !DILocalVariable(name: "b2", scope: !2144, file: !3, line: 587, type: !9)
!2162 = !DILocation(line: 587, column: 20, scope: !2144)
!2163 = !DILocalVariable(name: "c1", scope: !2144, file: !3, line: 587, type: !9)
!2164 = !DILocation(line: 587, column: 24, scope: !2144)
!2165 = !DILocalVariable(name: "c2", scope: !2144, file: !3, line: 587, type: !9)
!2166 = !DILocation(line: 587, column: 28, scope: !2144)
!2167 = !DILocalVariable(name: "d", scope: !2144, file: !3, line: 587, type: !9)
!2168 = !DILocation(line: 587, column: 32, scope: !2144)
!2169 = !DILocalVariable(name: "u", scope: !2144, file: !3, line: 588, type: !9)
!2170 = !DILocation(line: 588, column: 8, scope: !2144)
!2171 = !DILocalVariable(name: "v", scope: !2144, file: !3, line: 588, type: !9)
!2172 = !DILocation(line: 588, column: 11, scope: !2144)
!2173 = !DILocalVariable(name: "eps", scope: !2144, file: !3, line: 589, type: !8)
!2174 = !DILocation(line: 589, column: 14, scope: !2144)
!2175 = !DILocalVariable(name: "eps_sq", scope: !2144, file: !3, line: 590, type: !8)
!2176 = !DILocation(line: 590, column: 14, scope: !2144)
!2177 = !DILocation(line: 592, column: 7, scope: !2144)
!2178 = !DILocation(line: 592, column: 15, scope: !2144)
!2179 = !DILocation(line: 592, column: 13, scope: !2144)
!2180 = !DILocation(line: 592, column: 5, scope: !2144)
!2181 = !DILocation(line: 593, column: 7, scope: !2144)
!2182 = !DILocation(line: 593, column: 15, scope: !2144)
!2183 = !DILocation(line: 593, column: 13, scope: !2144)
!2184 = !DILocation(line: 593, column: 5, scope: !2144)
!2185 = !DILocation(line: 594, column: 7, scope: !2144)
!2186 = !DILocation(line: 594, column: 15, scope: !2144)
!2187 = !DILocation(line: 594, column: 13, scope: !2144)
!2188 = !DILocation(line: 594, column: 5, scope: !2144)
!2189 = !DILocation(line: 596, column: 7, scope: !2144)
!2190 = !DILocation(line: 596, column: 15, scope: !2144)
!2191 = !DILocation(line: 596, column: 13, scope: !2144)
!2192 = !DILocation(line: 596, column: 5, scope: !2144)
!2193 = !DILocation(line: 597, column: 7, scope: !2144)
!2194 = !DILocation(line: 597, column: 15, scope: !2144)
!2195 = !DILocation(line: 597, column: 13, scope: !2144)
!2196 = !DILocation(line: 597, column: 5, scope: !2144)
!2197 = !DILocation(line: 598, column: 7, scope: !2144)
!2198 = !DILocation(line: 598, column: 15, scope: !2144)
!2199 = !DILocation(line: 598, column: 13, scope: !2144)
!2200 = !DILocation(line: 598, column: 5, scope: !2144)
!2201 = !DILocation(line: 600, column: 6, scope: !2144)
!2202 = !DILocation(line: 600, column: 11, scope: !2144)
!2203 = !DILocation(line: 600, column: 9, scope: !2144)
!2204 = !DILocation(line: 600, column: 16, scope: !2144)
!2205 = !DILocation(line: 600, column: 21, scope: !2144)
!2206 = !DILocation(line: 600, column: 19, scope: !2144)
!2207 = !DILocation(line: 600, column: 14, scope: !2144)
!2208 = !DILocation(line: 600, column: 4, scope: !2144)
!2209 = !DILocation(line: 602, column: 6, scope: !2210)
!2210 = distinct !DILexicalBlock(scope: !2144, file: !3, line: 602, column: 6)
!2211 = !DILocation(line: 602, column: 8, scope: !2210)
!2212 = !DILocation(line: 602, column: 6, scope: !2144)
!2213 = !DILocation(line: 603, column: 7, scope: !2214)
!2214 = distinct !DILexicalBlock(scope: !2215, file: !3, line: 603, column: 7)
!2215 = distinct !DILexicalBlock(scope: !2210, file: !3, line: 602, column: 14)
!2216 = !DILocation(line: 603, column: 12, scope: !2214)
!2217 = !DILocation(line: 603, column: 10, scope: !2214)
!2218 = !DILocation(line: 603, column: 17, scope: !2214)
!2219 = !DILocation(line: 603, column: 22, scope: !2214)
!2220 = !DILocation(line: 603, column: 20, scope: !2214)
!2221 = !DILocation(line: 603, column: 15, scope: !2214)
!2222 = !DILocation(line: 603, column: 25, scope: !2214)
!2223 = !DILocation(line: 603, column: 33, scope: !2214)
!2224 = !DILocation(line: 603, column: 36, scope: !2214)
!2225 = !DILocation(line: 603, column: 41, scope: !2214)
!2226 = !DILocation(line: 603, column: 39, scope: !2214)
!2227 = !DILocation(line: 603, column: 46, scope: !2214)
!2228 = !DILocation(line: 603, column: 51, scope: !2214)
!2229 = !DILocation(line: 603, column: 49, scope: !2214)
!2230 = !DILocation(line: 603, column: 44, scope: !2214)
!2231 = !DILocation(line: 603, column: 54, scope: !2214)
!2232 = !DILocation(line: 603, column: 7, scope: !2215)
!2233 = !DILocalVariable(name: "a", scope: !2234, file: !3, line: 604, type: !894)
!2234 = distinct !DILexicalBlock(scope: !2214, file: !3, line: 603, column: 63)
!2235 = !DILocation(line: 604, column: 10, scope: !2234)
!2236 = !DILocalVariable(name: "b", scope: !2234, file: !3, line: 604, type: !894)
!2237 = !DILocation(line: 604, column: 16, scope: !2234)
!2238 = !DILocalVariable(name: "c", scope: !2234, file: !3, line: 604, type: !894)
!2239 = !DILocation(line: 604, column: 22, scope: !2234)
!2240 = !DILocalVariable(name: "u2", scope: !2234, file: !3, line: 605, type: !9)
!2241 = !DILocation(line: 605, column: 10, scope: !2234)
!2242 = !DILocation(line: 607, column: 20, scope: !2243)
!2243 = distinct !DILexicalBlock(scope: !2234, file: !3, line: 607, column: 8)
!2244 = !DILocation(line: 607, column: 24, scope: !2243)
!2245 = !DILocation(line: 607, column: 8, scope: !2243)
!2246 = !DILocation(line: 607, column: 8, scope: !2234)
!2247 = !DILocation(line: 608, column: 26, scope: !2248)
!2248 = distinct !DILexicalBlock(scope: !2249, file: !3, line: 608, column: 9)
!2249 = distinct !DILexicalBlock(scope: !2243, file: !3, line: 607, column: 29)
!2250 = !DILocation(line: 608, column: 30, scope: !2248)
!2251 = !DILocation(line: 608, column: 9, scope: !2248)
!2252 = !DILocation(line: 608, column: 34, scope: !2248)
!2253 = !DILocation(line: 608, column: 9, scope: !2249)
!2254 = !DILocalVariable(name: "sw_ap", scope: !2255, file: !3, line: 610, type: !7)
!2255 = distinct !DILexicalBlock(scope: !2256, file: !3, line: 610, column: 6)
!2256 = distinct !DILexicalBlock(scope: !2248, file: !3, line: 608, column: 44)
!2257 = !DILocation(line: 610, column: 6, scope: !2255)
!2258 = !DILocalVariable(name: "sw_ap", scope: !2259, file: !3, line: 611, type: !7)
!2259 = distinct !DILexicalBlock(scope: !2256, file: !3, line: 611, column: 6)
!2260 = !DILocation(line: 611, column: 6, scope: !2259)
!2261 = !DILocation(line: 612, column: 5, scope: !2256)
!2262 = !DILocation(line: 614, column: 22, scope: !2263)
!2263 = distinct !DILexicalBlock(scope: !2264, file: !3, line: 614, column: 10)
!2264 = distinct !DILexicalBlock(scope: !2248, file: !3, line: 613, column: 10)
!2265 = !DILocation(line: 614, column: 26, scope: !2263)
!2266 = !DILocation(line: 614, column: 10, scope: !2263)
!2267 = !DILocation(line: 614, column: 10, scope: !2264)
!2268 = !DILocation(line: 615, column: 18, scope: !2269)
!2269 = distinct !DILexicalBlock(scope: !2263, file: !3, line: 614, column: 31)
!2270 = !DILocation(line: 615, column: 22, scope: !2269)
!2271 = !DILocation(line: 615, column: 7, scope: !2269)
!2272 = !DILocation(line: 616, column: 7, scope: !2269)
!2273 = !DILocation(line: 620, column: 6, scope: !2264)
!2274 = !DILocation(line: 622, column: 4, scope: !2249)
!2275 = !DILocation(line: 624, column: 16, scope: !2234)
!2276 = !DILocation(line: 624, column: 19, scope: !2234)
!2277 = !DILocation(line: 624, column: 23, scope: !2234)
!2278 = !DILocation(line: 624, column: 4, scope: !2234)
!2279 = !DILocation(line: 625, column: 16, scope: !2234)
!2280 = !DILocation(line: 625, column: 19, scope: !2234)
!2281 = !DILocation(line: 625, column: 23, scope: !2234)
!2282 = !DILocation(line: 625, column: 4, scope: !2234)
!2283 = !DILocation(line: 626, column: 16, scope: !2234)
!2284 = !DILocation(line: 626, column: 19, scope: !2234)
!2285 = !DILocation(line: 626, column: 23, scope: !2234)
!2286 = !DILocation(line: 626, column: 4, scope: !2234)
!2287 = !DILocation(line: 627, column: 17, scope: !2234)
!2288 = !DILocation(line: 627, column: 20, scope: !2234)
!2289 = !DILocation(line: 627, column: 8, scope: !2234)
!2290 = !DILocation(line: 627, column: 34, scope: !2234)
!2291 = !DILocation(line: 627, column: 37, scope: !2234)
!2292 = !DILocation(line: 627, column: 25, scope: !2234)
!2293 = !DILocation(line: 627, column: 23, scope: !2234)
!2294 = !DILocation(line: 627, column: 6, scope: !2234)
!2295 = !DILocation(line: 629, column: 16, scope: !2234)
!2296 = !DILocation(line: 629, column: 19, scope: !2234)
!2297 = !DILocation(line: 629, column: 23, scope: !2234)
!2298 = !DILocation(line: 629, column: 4, scope: !2234)
!2299 = !DILocation(line: 630, column: 18, scope: !2234)
!2300 = !DILocation(line: 630, column: 21, scope: !2234)
!2301 = !DILocation(line: 630, column: 9, scope: !2234)
!2302 = !DILocation(line: 630, column: 35, scope: !2234)
!2303 = !DILocation(line: 630, column: 38, scope: !2234)
!2304 = !DILocation(line: 630, column: 26, scope: !2234)
!2305 = !DILocation(line: 630, column: 24, scope: !2234)
!2306 = !DILocation(line: 630, column: 7, scope: !2234)
!2307 = !DILocation(line: 632, column: 8, scope: !2308)
!2308 = distinct !DILexicalBlock(scope: !2234, file: !3, line: 632, column: 8)
!2309 = !DILocation(line: 632, column: 12, scope: !2308)
!2310 = !DILocation(line: 632, column: 10, scope: !2308)
!2311 = !DILocation(line: 632, column: 8, scope: !2234)
!2312 = !DILocalVariable(name: "sw_ap", scope: !2313, file: !3, line: 632, type: !9)
!2313 = distinct !DILexicalBlock(scope: !2308, file: !3, line: 632, column: 16)
!2314 = !DILocation(line: 632, column: 16, scope: !2313)
!2315 = !DILocation(line: 634, column: 8, scope: !2316)
!2316 = distinct !DILexicalBlock(scope: !2234, file: !3, line: 634, column: 8)
!2317 = !DILocation(line: 634, column: 10, scope: !2316)
!2318 = !DILocation(line: 634, column: 23, scope: !2316)
!2319 = !DILocation(line: 634, column: 26, scope: !2316)
!2320 = !DILocation(line: 634, column: 29, scope: !2316)
!2321 = !DILocation(line: 634, column: 8, scope: !2234)
!2322 = !DILocation(line: 634, column: 37, scope: !2316)
!2323 = !DILocation(line: 635, column: 26, scope: !2324)
!2324 = distinct !DILexicalBlock(scope: !2316, file: !3, line: 635, column: 13)
!2325 = !DILocation(line: 635, column: 13, scope: !2324)
!2326 = !DILocation(line: 635, column: 45, scope: !2324)
!2327 = !DILocation(line: 635, column: 32, scope: !2324)
!2328 = !DILocation(line: 635, column: 29, scope: !2324)
!2329 = !DILocation(line: 635, column: 13, scope: !2316)
!2330 = !DILocation(line: 636, column: 20, scope: !2331)
!2331 = distinct !DILexicalBlock(scope: !2324, file: !3, line: 635, column: 50)
!2332 = !DILocation(line: 636, column: 24, scope: !2331)
!2333 = !DILocation(line: 636, column: 28, scope: !2331)
!2334 = !DILocation(line: 636, column: 42, scope: !2331)
!2335 = !DILocation(line: 636, column: 32, scope: !2331)
!2336 = !DILocation(line: 636, column: 5, scope: !2331)
!2337 = !DILocation(line: 637, column: 5, scope: !2331)
!2338 = !DILocation(line: 639, column: 3, scope: !2234)
!2339 = !DILocation(line: 642, column: 3, scope: !2215)
!2340 = !DILocation(line: 645, column: 7, scope: !2144)
!2341 = !DILocation(line: 645, column: 12, scope: !2144)
!2342 = !DILocation(line: 645, column: 10, scope: !2144)
!2343 = !DILocation(line: 645, column: 17, scope: !2144)
!2344 = !DILocation(line: 645, column: 22, scope: !2144)
!2345 = !DILocation(line: 645, column: 20, scope: !2144)
!2346 = !DILocation(line: 645, column: 15, scope: !2144)
!2347 = !DILocation(line: 645, column: 28, scope: !2144)
!2348 = !DILocation(line: 645, column: 26, scope: !2144)
!2349 = !DILocation(line: 645, column: 4, scope: !2144)
!2350 = !DILocation(line: 646, column: 7, scope: !2144)
!2351 = !DILocation(line: 646, column: 12, scope: !2144)
!2352 = !DILocation(line: 646, column: 10, scope: !2144)
!2353 = !DILocation(line: 646, column: 17, scope: !2144)
!2354 = !DILocation(line: 646, column: 22, scope: !2144)
!2355 = !DILocation(line: 646, column: 20, scope: !2144)
!2356 = !DILocation(line: 646, column: 15, scope: !2144)
!2357 = !DILocation(line: 646, column: 28, scope: !2144)
!2358 = !DILocation(line: 646, column: 26, scope: !2144)
!2359 = !DILocation(line: 646, column: 4, scope: !2144)
!2360 = !DILocation(line: 648, column: 6, scope: !2361)
!2361 = distinct !DILexicalBlock(scope: !2144, file: !3, line: 648, column: 6)
!2362 = !DILocation(line: 648, column: 8, scope: !2361)
!2363 = !DILocation(line: 648, column: 16, scope: !2361)
!2364 = !DILocation(line: 648, column: 19, scope: !2361)
!2365 = !DILocation(line: 648, column: 21, scope: !2361)
!2366 = !DILocation(line: 648, column: 35, scope: !2361)
!2367 = !DILocation(line: 648, column: 38, scope: !2361)
!2368 = !DILocation(line: 648, column: 40, scope: !2361)
!2369 = !DILocation(line: 648, column: 48, scope: !2361)
!2370 = !DILocation(line: 648, column: 51, scope: !2361)
!2371 = !DILocation(line: 648, column: 53, scope: !2361)
!2372 = !DILocation(line: 648, column: 6, scope: !2144)
!2373 = !DILocation(line: 649, column: 18, scope: !2374)
!2374 = distinct !DILexicalBlock(scope: !2361, file: !3, line: 648, column: 68)
!2375 = !DILocation(line: 649, column: 22, scope: !2374)
!2376 = !DILocation(line: 649, column: 26, scope: !2374)
!2377 = !DILocation(line: 649, column: 30, scope: !2374)
!2378 = !DILocation(line: 649, column: 3, scope: !2374)
!2379 = !DILocation(line: 650, column: 3, scope: !2374)
!2380 = !DILocation(line: 654, column: 2, scope: !2144)
!2381 = !DILocation(line: 655, column: 1, scope: !2144)
!2382 = distinct !DISubprogram(name: "equals_v2v2", scope: !184, file: !184, line: 923, type: !2383, scopeLine: 924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!2383 = !DISubroutineType(types: !2384)
!2384 = !{!6, !7, !7}
!2385 = !DILocalVariable(name: "v1", arg: 1, scope: !2382, file: !184, line: 923, type: !7)
!2386 = !DILocation(line: 923, column: 38, scope: !2382)
!2387 = !DILocalVariable(name: "v2", arg: 2, scope: !2382, file: !184, line: 923, type: !7)
!2388 = !DILocation(line: 923, column: 57, scope: !2382)
!2389 = !DILocation(line: 925, column: 11, scope: !2382)
!2390 = !DILocation(line: 925, column: 20, scope: !2382)
!2391 = !DILocation(line: 925, column: 17, scope: !2382)
!2392 = !DILocation(line: 925, column: 27, scope: !2382)
!2393 = !DILocation(line: 925, column: 31, scope: !2382)
!2394 = !DILocation(line: 925, column: 40, scope: !2382)
!2395 = !DILocation(line: 925, column: 37, scope: !2382)
!2396 = !DILocation(line: 0, scope: !2382)
!2397 = !DILocation(line: 925, column: 9, scope: !2382)
!2398 = !DILocation(line: 925, column: 2, scope: !2382)
!2399 = distinct !DISubprogram(name: "len_squared_v2v2", scope: !184, file: !184, line: 719, type: !565, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!2400 = !DILocalVariable(name: "a", arg: 1, scope: !2399, file: !184, line: 719, type: !7)
!2401 = !DILocation(line: 719, column: 44, scope: !2399)
!2402 = !DILocalVariable(name: "b", arg: 2, scope: !2399, file: !184, line: 719, type: !7)
!2403 = !DILocation(line: 719, column: 62, scope: !2399)
!2404 = !DILocalVariable(name: "d", scope: !2399, file: !184, line: 721, type: !894)
!2405 = !DILocation(line: 721, column: 8, scope: !2399)
!2406 = !DILocation(line: 723, column: 14, scope: !2399)
!2407 = !DILocation(line: 723, column: 17, scope: !2399)
!2408 = !DILocation(line: 723, column: 20, scope: !2399)
!2409 = !DILocation(line: 723, column: 2, scope: !2399)
!2410 = !DILocation(line: 724, column: 18, scope: !2399)
!2411 = !DILocation(line: 724, column: 21, scope: !2399)
!2412 = !DILocation(line: 724, column: 9, scope: !2399)
!2413 = !DILocation(line: 724, column: 2, scope: !2399)
!2414 = distinct !DISubprogram(name: "sub_v2_v2v2", scope: !184, file: !184, line: 338, type: !332, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!2415 = !DILocalVariable(name: "r", arg: 1, scope: !2414, file: !184, line: 338, type: !10)
!2416 = !DILocation(line: 338, column: 32, scope: !2414)
!2417 = !DILocalVariable(name: "a", arg: 2, scope: !2414, file: !184, line: 338, type: !7)
!2418 = !DILocation(line: 338, column: 50, scope: !2414)
!2419 = !DILocalVariable(name: "b", arg: 3, scope: !2414, file: !184, line: 338, type: !7)
!2420 = !DILocation(line: 338, column: 68, scope: !2414)
!2421 = !DILocation(line: 340, column: 9, scope: !2414)
!2422 = !DILocation(line: 340, column: 16, scope: !2414)
!2423 = !DILocation(line: 340, column: 14, scope: !2414)
!2424 = !DILocation(line: 340, column: 2, scope: !2414)
!2425 = !DILocation(line: 340, column: 7, scope: !2414)
!2426 = !DILocation(line: 341, column: 9, scope: !2414)
!2427 = !DILocation(line: 341, column: 16, scope: !2414)
!2428 = !DILocation(line: 341, column: 14, scope: !2414)
!2429 = !DILocation(line: 341, column: 2, scope: !2414)
!2430 = !DILocation(line: 341, column: 7, scope: !2414)
!2431 = !DILocation(line: 342, column: 1, scope: !2414)
!2432 = distinct !DISubprogram(name: "dot_v2v2", scope: !184, file: !184, line: 614, type: !565, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!2433 = !DILocalVariable(name: "a", arg: 1, scope: !2432, file: !184, line: 614, type: !7)
!2434 = !DILocation(line: 614, column: 36, scope: !2432)
!2435 = !DILocalVariable(name: "b", arg: 2, scope: !2432, file: !184, line: 614, type: !7)
!2436 = !DILocation(line: 614, column: 54, scope: !2432)
!2437 = !DILocation(line: 616, column: 9, scope: !2432)
!2438 = !DILocation(line: 616, column: 16, scope: !2432)
!2439 = !DILocation(line: 616, column: 14, scope: !2432)
!2440 = !DILocation(line: 616, column: 23, scope: !2432)
!2441 = !DILocation(line: 616, column: 30, scope: !2432)
!2442 = !DILocation(line: 616, column: 28, scope: !2432)
!2443 = !DILocation(line: 616, column: 21, scope: !2432)
!2444 = !DILocation(line: 616, column: 2, scope: !2432)
!2445 = distinct !DISubprogram(name: "max_ff", scope: !2446, file: !2446, line: 206, type: !2447, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!2446 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2447 = !DISubroutineType(types: !2448)
!2448 = !{!9, !9, !9}
!2449 = !DILocalVariable(name: "a", arg: 1, scope: !2445, file: !2446, line: 206, type: !9)
!2450 = !DILocation(line: 206, column: 28, scope: !2445)
!2451 = !DILocalVariable(name: "b", arg: 2, scope: !2445, file: !2446, line: 206, type: !9)
!2452 = !DILocation(line: 206, column: 37, scope: !2445)
!2453 = !DILocation(line: 208, column: 10, scope: !2445)
!2454 = !DILocation(line: 208, column: 14, scope: !2445)
!2455 = !DILocation(line: 208, column: 12, scope: !2445)
!2456 = !DILocation(line: 208, column: 9, scope: !2445)
!2457 = !DILocation(line: 208, column: 19, scope: !2445)
!2458 = !DILocation(line: 208, column: 23, scope: !2445)
!2459 = !DILocation(line: 208, column: 2, scope: !2445)
!2460 = distinct !DISubprogram(name: "min_ff", scope: !2446, file: !2446, line: 202, type: !2447, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!2461 = !DILocalVariable(name: "a", arg: 1, scope: !2460, file: !2446, line: 202, type: !9)
!2462 = !DILocation(line: 202, column: 28, scope: !2460)
!2463 = !DILocalVariable(name: "b", arg: 2, scope: !2460, file: !2446, line: 202, type: !9)
!2464 = !DILocation(line: 202, column: 37, scope: !2460)
!2465 = !DILocation(line: 204, column: 10, scope: !2460)
!2466 = !DILocation(line: 204, column: 14, scope: !2460)
!2467 = !DILocation(line: 204, column: 12, scope: !2460)
!2468 = !DILocation(line: 204, column: 9, scope: !2460)
!2469 = !DILocation(line: 204, column: 19, scope: !2460)
!2470 = !DILocation(line: 204, column: 23, scope: !2460)
!2471 = !DILocation(line: 204, column: 2, scope: !2460)
!2472 = distinct !DISubprogram(name: "isect_seg_seg_v2", scope: !3, file: !3, line: 657, type: !2473, scopeLine: 658, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!2473 = !DISubroutineType(types: !2474)
!2474 = !{!6, !7, !7, !7, !7}
!2475 = !DILocalVariable(name: "v1", arg: 1, scope: !2472, file: !3, line: 657, type: !7)
!2476 = !DILocation(line: 657, column: 35, scope: !2472)
!2477 = !DILocalVariable(name: "v2", arg: 2, scope: !2472, file: !3, line: 657, type: !7)
!2478 = !DILocation(line: 657, column: 54, scope: !2472)
!2479 = !DILocalVariable(name: "v3", arg: 3, scope: !2472, file: !3, line: 657, type: !7)
!2480 = !DILocation(line: 657, column: 73, scope: !2472)
!2481 = !DILocalVariable(name: "v4", arg: 4, scope: !2472, file: !3, line: 657, type: !7)
!2482 = !DILocation(line: 657, column: 92, scope: !2472)
!2483 = !DILocation(line: 661, column: 9, scope: !2472)
!2484 = !DILocation(line: 661, column: 28, scope: !2472)
!2485 = !DILocation(line: 661, column: 25, scope: !2472)
!2486 = !DILocation(line: 661, column: 44, scope: !2472)
!2487 = !DILocation(line: 661, column: 47, scope: !2472)
!2488 = !DILocation(line: 661, column: 66, scope: !2472)
!2489 = !DILocation(line: 661, column: 63, scope: !2472)
!2490 = !DILocation(line: 0, scope: !2472)
!2491 = !DILocation(line: 661, column: 2, scope: !2472)
!2492 = distinct !DISubprogram(name: "isect_line_sphere_v3", scope: !3, file: !3, line: 666, type: !2493, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!2493 = !DISubroutineType(types: !2494)
!2494 = !{!17, !7, !7, !7, !8, !10, !10}
!2495 = !DILocalVariable(name: "l1", arg: 1, scope: !2492, file: !3, line: 666, type: !7)
!2496 = !DILocation(line: 666, column: 38, scope: !2492)
!2497 = !DILocalVariable(name: "l2", arg: 2, scope: !2492, file: !3, line: 666, type: !7)
!2498 = !DILocation(line: 666, column: 57, scope: !2492)
!2499 = !DILocalVariable(name: "sp", arg: 3, scope: !2492, file: !3, line: 667, type: !7)
!2500 = !DILocation(line: 667, column: 38, scope: !2492)
!2501 = !DILocalVariable(name: "r", arg: 4, scope: !2492, file: !3, line: 667, type: !8)
!2502 = !DILocation(line: 667, column: 57, scope: !2492)
!2503 = !DILocalVariable(name: "r_p1", arg: 5, scope: !2492, file: !3, line: 668, type: !10)
!2504 = !DILocation(line: 668, column: 32, scope: !2492)
!2505 = !DILocalVariable(name: "r_p2", arg: 6, scope: !2492, file: !3, line: 668, type: !10)
!2506 = !DILocation(line: 668, column: 47, scope: !2492)
!2507 = !DILocalVariable(name: "ldir", scope: !2492, file: !3, line: 688, type: !274)
!2508 = !DILocation(line: 688, column: 14, scope: !2492)
!2509 = !DILocation(line: 688, column: 24, scope: !2492)
!2510 = !DILocation(line: 689, column: 3, scope: !2492)
!2511 = !DILocation(line: 689, column: 11, scope: !2492)
!2512 = !DILocation(line: 689, column: 9, scope: !2492)
!2513 = !DILocation(line: 690, column: 3, scope: !2492)
!2514 = !DILocation(line: 690, column: 11, scope: !2492)
!2515 = !DILocation(line: 690, column: 9, scope: !2492)
!2516 = !DILocation(line: 691, column: 3, scope: !2492)
!2517 = !DILocation(line: 691, column: 11, scope: !2492)
!2518 = !DILocation(line: 691, column: 9, scope: !2492)
!2519 = !DILocalVariable(name: "a", scope: !2492, file: !3, line: 694, type: !8)
!2520 = !DILocation(line: 694, column: 14, scope: !2492)
!2521 = !DILocation(line: 694, column: 33, scope: !2492)
!2522 = !DILocation(line: 694, column: 18, scope: !2492)
!2523 = !DILocalVariable(name: "b", scope: !2492, file: !3, line: 696, type: !8)
!2524 = !DILocation(line: 696, column: 14, scope: !2492)
!2525 = !DILocation(line: 697, column: 19, scope: !2492)
!2526 = !DILocation(line: 697, column: 30, scope: !2492)
!2527 = !DILocation(line: 697, column: 38, scope: !2492)
!2528 = !DILocation(line: 697, column: 36, scope: !2492)
!2529 = !DILocation(line: 697, column: 27, scope: !2492)
!2530 = !DILocation(line: 698, column: 19, scope: !2492)
!2531 = !DILocation(line: 698, column: 30, scope: !2492)
!2532 = !DILocation(line: 698, column: 38, scope: !2492)
!2533 = !DILocation(line: 698, column: 36, scope: !2492)
!2534 = !DILocation(line: 698, column: 27, scope: !2492)
!2535 = !DILocation(line: 697, column: 45, scope: !2492)
!2536 = !DILocation(line: 699, column: 19, scope: !2492)
!2537 = !DILocation(line: 699, column: 30, scope: !2492)
!2538 = !DILocation(line: 699, column: 38, scope: !2492)
!2539 = !DILocation(line: 699, column: 36, scope: !2492)
!2540 = !DILocation(line: 699, column: 27, scope: !2492)
!2541 = !DILocation(line: 698, column: 45, scope: !2492)
!2542 = !DILocation(line: 696, column: 23, scope: !2492)
!2543 = !DILocalVariable(name: "c", scope: !2492, file: !3, line: 701, type: !8)
!2544 = !DILocation(line: 701, column: 14, scope: !2492)
!2545 = !DILocation(line: 702, column: 21, scope: !2492)
!2546 = !DILocation(line: 702, column: 6, scope: !2492)
!2547 = !DILocation(line: 703, column: 21, scope: !2492)
!2548 = !DILocation(line: 703, column: 6, scope: !2492)
!2549 = !DILocation(line: 702, column: 25, scope: !2492)
!2550 = !DILocation(line: 704, column: 23, scope: !2492)
!2551 = !DILocation(line: 704, column: 27, scope: !2492)
!2552 = !DILocation(line: 704, column: 14, scope: !2492)
!2553 = !DILocation(line: 704, column: 12, scope: !2492)
!2554 = !DILocation(line: 703, column: 25, scope: !2492)
!2555 = !DILocation(line: 705, column: 7, scope: !2492)
!2556 = !DILocation(line: 705, column: 11, scope: !2492)
!2557 = !DILocation(line: 705, column: 9, scope: !2492)
!2558 = !DILocation(line: 704, column: 32, scope: !2492)
!2559 = !DILocalVariable(name: "i", scope: !2492, file: !3, line: 707, type: !8)
!2560 = !DILocation(line: 707, column: 14, scope: !2492)
!2561 = !DILocation(line: 707, column: 18, scope: !2492)
!2562 = !DILocation(line: 707, column: 22, scope: !2492)
!2563 = !DILocation(line: 707, column: 20, scope: !2492)
!2564 = !DILocation(line: 707, column: 33, scope: !2492)
!2565 = !DILocation(line: 707, column: 31, scope: !2492)
!2566 = !DILocation(line: 707, column: 37, scope: !2492)
!2567 = !DILocation(line: 707, column: 35, scope: !2492)
!2568 = !DILocation(line: 707, column: 24, scope: !2492)
!2569 = !DILocalVariable(name: "mu", scope: !2492, file: !3, line: 709, type: !9)
!2570 = !DILocation(line: 709, column: 8, scope: !2492)
!2571 = !DILocation(line: 711, column: 6, scope: !2572)
!2572 = distinct !DILexicalBlock(scope: !2492, file: !3, line: 711, column: 6)
!2573 = !DILocation(line: 711, column: 8, scope: !2572)
!2574 = !DILocation(line: 711, column: 6, scope: !2492)
!2575 = !DILocation(line: 713, column: 3, scope: !2576)
!2576 = distinct !DILexicalBlock(scope: !2572, file: !3, line: 711, column: 16)
!2577 = !DILocation(line: 715, column: 11, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !2572, file: !3, line: 715, column: 11)
!2579 = !DILocation(line: 715, column: 13, scope: !2578)
!2580 = !DILocation(line: 715, column: 11, scope: !2572)
!2581 = !DILocation(line: 717, column: 9, scope: !2582)
!2582 = distinct !DILexicalBlock(scope: !2578, file: !3, line: 715, column: 22)
!2583 = !DILocation(line: 717, column: 8, scope: !2582)
!2584 = !DILocation(line: 717, column: 21, scope: !2582)
!2585 = !DILocation(line: 717, column: 19, scope: !2582)
!2586 = !DILocation(line: 717, column: 11, scope: !2582)
!2587 = !DILocation(line: 717, column: 6, scope: !2582)
!2588 = !DILocation(line: 718, column: 18, scope: !2582)
!2589 = !DILocation(line: 718, column: 24, scope: !2582)
!2590 = !DILocation(line: 718, column: 28, scope: !2582)
!2591 = !DILocation(line: 718, column: 34, scope: !2582)
!2592 = !DILocation(line: 718, column: 3, scope: !2582)
!2593 = !DILocation(line: 719, column: 3, scope: !2582)
!2594 = !DILocation(line: 721, column: 11, scope: !2595)
!2595 = distinct !DILexicalBlock(scope: !2578, file: !3, line: 721, column: 11)
!2596 = !DILocation(line: 721, column: 13, scope: !2595)
!2597 = !DILocation(line: 721, column: 11, scope: !2578)
!2598 = !DILocalVariable(name: "i_sqrt", scope: !2599, file: !3, line: 722, type: !8)
!2599 = distinct !DILexicalBlock(scope: !2595, file: !3, line: 721, column: 21)
!2600 = !DILocation(line: 722, column: 15, scope: !2599)
!2601 = !DILocation(line: 722, column: 30, scope: !2599)
!2602 = !DILocation(line: 722, column: 24, scope: !2599)
!2603 = !DILocation(line: 725, column: 10, scope: !2599)
!2604 = !DILocation(line: 725, column: 9, scope: !2599)
!2605 = !DILocation(line: 725, column: 14, scope: !2599)
!2606 = !DILocation(line: 725, column: 12, scope: !2599)
!2607 = !DILocation(line: 725, column: 32, scope: !2599)
!2608 = !DILocation(line: 725, column: 30, scope: !2599)
!2609 = !DILocation(line: 725, column: 22, scope: !2599)
!2610 = !DILocation(line: 725, column: 6, scope: !2599)
!2611 = !DILocation(line: 726, column: 18, scope: !2599)
!2612 = !DILocation(line: 726, column: 24, scope: !2599)
!2613 = !DILocation(line: 726, column: 28, scope: !2599)
!2614 = !DILocation(line: 726, column: 34, scope: !2599)
!2615 = !DILocation(line: 726, column: 3, scope: !2599)
!2616 = !DILocation(line: 729, column: 10, scope: !2599)
!2617 = !DILocation(line: 729, column: 9, scope: !2599)
!2618 = !DILocation(line: 729, column: 14, scope: !2599)
!2619 = !DILocation(line: 729, column: 12, scope: !2599)
!2620 = !DILocation(line: 729, column: 32, scope: !2599)
!2621 = !DILocation(line: 729, column: 30, scope: !2599)
!2622 = !DILocation(line: 729, column: 22, scope: !2599)
!2623 = !DILocation(line: 729, column: 6, scope: !2599)
!2624 = !DILocation(line: 730, column: 18, scope: !2599)
!2625 = !DILocation(line: 730, column: 24, scope: !2599)
!2626 = !DILocation(line: 730, column: 28, scope: !2599)
!2627 = !DILocation(line: 730, column: 34, scope: !2599)
!2628 = !DILocation(line: 730, column: 3, scope: !2599)
!2629 = !DILocation(line: 731, column: 3, scope: !2599)
!2630 = !DILocation(line: 735, column: 3, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2595, file: !3, line: 733, column: 7)
!2632 = !DILocation(line: 737, column: 1, scope: !2492)
!2633 = distinct !DISubprogram(name: "isect_line_sphere_v2", scope: !3, file: !3, line: 740, type: !2493, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!2634 = !DILocalVariable(name: "l1", arg: 1, scope: !2633, file: !3, line: 740, type: !7)
!2635 = !DILocation(line: 740, column: 38, scope: !2633)
!2636 = !DILocalVariable(name: "l2", arg: 2, scope: !2633, file: !3, line: 740, type: !7)
!2637 = !DILocation(line: 740, column: 57, scope: !2633)
!2638 = !DILocalVariable(name: "sp", arg: 3, scope: !2633, file: !3, line: 741, type: !7)
!2639 = !DILocation(line: 741, column: 38, scope: !2633)
!2640 = !DILocalVariable(name: "r", arg: 4, scope: !2633, file: !3, line: 741, type: !8)
!2641 = !DILocation(line: 741, column: 57, scope: !2633)
!2642 = !DILocalVariable(name: "r_p1", arg: 5, scope: !2633, file: !3, line: 742, type: !10)
!2643 = !DILocation(line: 742, column: 32, scope: !2633)
!2644 = !DILocalVariable(name: "r_p2", arg: 6, scope: !2633, file: !3, line: 742, type: !10)
!2645 = !DILocation(line: 742, column: 47, scope: !2633)
!2646 = !DILocalVariable(name: "ldir", scope: !2633, file: !3, line: 744, type: !602)
!2647 = !DILocation(line: 744, column: 14, scope: !2633)
!2648 = !DILocation(line: 744, column: 24, scope: !2633)
!2649 = !DILocation(line: 744, column: 25, scope: !2633)
!2650 = !DILocation(line: 744, column: 33, scope: !2633)
!2651 = !DILocation(line: 744, column: 31, scope: !2633)
!2652 = !DILocation(line: 745, column: 25, scope: !2633)
!2653 = !DILocation(line: 745, column: 33, scope: !2633)
!2654 = !DILocation(line: 745, column: 31, scope: !2633)
!2655 = !DILocalVariable(name: "a", scope: !2633, file: !3, line: 747, type: !8)
!2656 = !DILocation(line: 747, column: 14, scope: !2633)
!2657 = !DILocation(line: 747, column: 27, scope: !2633)
!2658 = !DILocation(line: 747, column: 33, scope: !2633)
!2659 = !DILocation(line: 747, column: 18, scope: !2633)
!2660 = !DILocalVariable(name: "b", scope: !2633, file: !3, line: 749, type: !8)
!2661 = !DILocation(line: 749, column: 14, scope: !2633)
!2662 = !DILocation(line: 750, column: 19, scope: !2633)
!2663 = !DILocation(line: 750, column: 30, scope: !2633)
!2664 = !DILocation(line: 750, column: 38, scope: !2633)
!2665 = !DILocation(line: 750, column: 36, scope: !2633)
!2666 = !DILocation(line: 750, column: 27, scope: !2633)
!2667 = !DILocation(line: 751, column: 19, scope: !2633)
!2668 = !DILocation(line: 751, column: 30, scope: !2633)
!2669 = !DILocation(line: 751, column: 38, scope: !2633)
!2670 = !DILocation(line: 751, column: 36, scope: !2633)
!2671 = !DILocation(line: 751, column: 27, scope: !2633)
!2672 = !DILocation(line: 750, column: 45, scope: !2633)
!2673 = !DILocation(line: 749, column: 23, scope: !2633)
!2674 = !DILocalVariable(name: "c", scope: !2633, file: !3, line: 753, type: !8)
!2675 = !DILocation(line: 753, column: 14, scope: !2633)
!2676 = !DILocation(line: 754, column: 15, scope: !2633)
!2677 = !DILocation(line: 754, column: 19, scope: !2633)
!2678 = !DILocation(line: 754, column: 6, scope: !2633)
!2679 = !DILocation(line: 755, column: 15, scope: !2633)
!2680 = !DILocation(line: 755, column: 19, scope: !2633)
!2681 = !DILocation(line: 755, column: 6, scope: !2633)
!2682 = !DILocation(line: 754, column: 23, scope: !2633)
!2683 = !DILocation(line: 756, column: 23, scope: !2633)
!2684 = !DILocation(line: 756, column: 27, scope: !2633)
!2685 = !DILocation(line: 756, column: 14, scope: !2633)
!2686 = !DILocation(line: 756, column: 12, scope: !2633)
!2687 = !DILocation(line: 755, column: 23, scope: !2633)
!2688 = !DILocation(line: 757, column: 7, scope: !2633)
!2689 = !DILocation(line: 757, column: 11, scope: !2633)
!2690 = !DILocation(line: 757, column: 9, scope: !2633)
!2691 = !DILocation(line: 756, column: 32, scope: !2633)
!2692 = !DILocalVariable(name: "i", scope: !2633, file: !3, line: 759, type: !8)
!2693 = !DILocation(line: 759, column: 14, scope: !2633)
!2694 = !DILocation(line: 759, column: 18, scope: !2633)
!2695 = !DILocation(line: 759, column: 22, scope: !2633)
!2696 = !DILocation(line: 759, column: 20, scope: !2633)
!2697 = !DILocation(line: 759, column: 33, scope: !2633)
!2698 = !DILocation(line: 759, column: 31, scope: !2633)
!2699 = !DILocation(line: 759, column: 37, scope: !2633)
!2700 = !DILocation(line: 759, column: 35, scope: !2633)
!2701 = !DILocation(line: 759, column: 24, scope: !2633)
!2702 = !DILocalVariable(name: "mu", scope: !2633, file: !3, line: 761, type: !9)
!2703 = !DILocation(line: 761, column: 8, scope: !2633)
!2704 = !DILocation(line: 763, column: 6, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2633, file: !3, line: 763, column: 6)
!2706 = !DILocation(line: 763, column: 8, scope: !2705)
!2707 = !DILocation(line: 763, column: 6, scope: !2633)
!2708 = !DILocation(line: 765, column: 3, scope: !2709)
!2709 = distinct !DILexicalBlock(scope: !2705, file: !3, line: 763, column: 16)
!2710 = !DILocation(line: 767, column: 11, scope: !2711)
!2711 = distinct !DILexicalBlock(scope: !2705, file: !3, line: 767, column: 11)
!2712 = !DILocation(line: 767, column: 13, scope: !2711)
!2713 = !DILocation(line: 767, column: 11, scope: !2705)
!2714 = !DILocation(line: 769, column: 9, scope: !2715)
!2715 = distinct !DILexicalBlock(scope: !2711, file: !3, line: 767, column: 22)
!2716 = !DILocation(line: 769, column: 8, scope: !2715)
!2717 = !DILocation(line: 769, column: 21, scope: !2715)
!2718 = !DILocation(line: 769, column: 19, scope: !2715)
!2719 = !DILocation(line: 769, column: 11, scope: !2715)
!2720 = !DILocation(line: 769, column: 6, scope: !2715)
!2721 = !DILocation(line: 770, column: 18, scope: !2715)
!2722 = !DILocation(line: 770, column: 24, scope: !2715)
!2723 = !DILocation(line: 770, column: 28, scope: !2715)
!2724 = !DILocation(line: 770, column: 34, scope: !2715)
!2725 = !DILocation(line: 770, column: 3, scope: !2715)
!2726 = !DILocation(line: 771, column: 3, scope: !2715)
!2727 = !DILocation(line: 773, column: 11, scope: !2728)
!2728 = distinct !DILexicalBlock(scope: !2711, file: !3, line: 773, column: 11)
!2729 = !DILocation(line: 773, column: 13, scope: !2728)
!2730 = !DILocation(line: 773, column: 11, scope: !2711)
!2731 = !DILocalVariable(name: "i_sqrt", scope: !2732, file: !3, line: 774, type: !8)
!2732 = distinct !DILexicalBlock(scope: !2728, file: !3, line: 773, column: 21)
!2733 = !DILocation(line: 774, column: 15, scope: !2732)
!2734 = !DILocation(line: 774, column: 30, scope: !2732)
!2735 = !DILocation(line: 774, column: 24, scope: !2732)
!2736 = !DILocation(line: 777, column: 10, scope: !2732)
!2737 = !DILocation(line: 777, column: 9, scope: !2732)
!2738 = !DILocation(line: 777, column: 14, scope: !2732)
!2739 = !DILocation(line: 777, column: 12, scope: !2732)
!2740 = !DILocation(line: 777, column: 32, scope: !2732)
!2741 = !DILocation(line: 777, column: 30, scope: !2732)
!2742 = !DILocation(line: 777, column: 22, scope: !2732)
!2743 = !DILocation(line: 777, column: 6, scope: !2732)
!2744 = !DILocation(line: 778, column: 18, scope: !2732)
!2745 = !DILocation(line: 778, column: 24, scope: !2732)
!2746 = !DILocation(line: 778, column: 28, scope: !2732)
!2747 = !DILocation(line: 778, column: 34, scope: !2732)
!2748 = !DILocation(line: 778, column: 3, scope: !2732)
!2749 = !DILocation(line: 781, column: 10, scope: !2732)
!2750 = !DILocation(line: 781, column: 9, scope: !2732)
!2751 = !DILocation(line: 781, column: 14, scope: !2732)
!2752 = !DILocation(line: 781, column: 12, scope: !2732)
!2753 = !DILocation(line: 781, column: 32, scope: !2732)
!2754 = !DILocation(line: 781, column: 30, scope: !2732)
!2755 = !DILocation(line: 781, column: 22, scope: !2732)
!2756 = !DILocation(line: 781, column: 6, scope: !2732)
!2757 = !DILocation(line: 782, column: 18, scope: !2732)
!2758 = !DILocation(line: 782, column: 24, scope: !2732)
!2759 = !DILocation(line: 782, column: 28, scope: !2732)
!2760 = !DILocation(line: 782, column: 34, scope: !2732)
!2761 = !DILocation(line: 782, column: 3, scope: !2732)
!2762 = !DILocation(line: 783, column: 3, scope: !2732)
!2763 = !DILocation(line: 787, column: 3, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2728, file: !3, line: 785, column: 7)
!2765 = !DILocation(line: 789, column: 1, scope: !2633)
!2766 = distinct !DISubprogram(name: "madd_v2_v2v2fl", scope: !184, file: !184, line: 521, type: !797, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!2767 = !DILocalVariable(name: "r", arg: 1, scope: !2766, file: !184, line: 521, type: !10)
!2768 = !DILocation(line: 521, column: 35, scope: !2766)
!2769 = !DILocalVariable(name: "a", arg: 2, scope: !2766, file: !184, line: 521, type: !7)
!2770 = !DILocation(line: 521, column: 53, scope: !2766)
!2771 = !DILocalVariable(name: "b", arg: 3, scope: !2766, file: !184, line: 521, type: !7)
!2772 = !DILocation(line: 521, column: 71, scope: !2766)
!2773 = !DILocalVariable(name: "f", arg: 4, scope: !2766, file: !184, line: 521, type: !9)
!2774 = !DILocation(line: 521, column: 83, scope: !2766)
!2775 = !DILocation(line: 523, column: 9, scope: !2766)
!2776 = !DILocation(line: 523, column: 16, scope: !2766)
!2777 = !DILocation(line: 523, column: 23, scope: !2766)
!2778 = !DILocation(line: 523, column: 21, scope: !2766)
!2779 = !DILocation(line: 523, column: 14, scope: !2766)
!2780 = !DILocation(line: 523, column: 2, scope: !2766)
!2781 = !DILocation(line: 523, column: 7, scope: !2766)
!2782 = !DILocation(line: 524, column: 9, scope: !2766)
!2783 = !DILocation(line: 524, column: 16, scope: !2766)
!2784 = !DILocation(line: 524, column: 23, scope: !2766)
!2785 = !DILocation(line: 524, column: 21, scope: !2766)
!2786 = !DILocation(line: 524, column: 14, scope: !2766)
!2787 = !DILocation(line: 524, column: 2, scope: !2766)
!2788 = !DILocation(line: 524, column: 7, scope: !2766)
!2789 = !DILocation(line: 525, column: 1, scope: !2766)
!2790 = distinct !DISubprogram(name: "isect_point_poly_v2", scope: !3, file: !3, line: 876, type: !2791, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!2791 = !DISubroutineType(types: !2792)
!2792 = !{!6, !7, !601, !2793, !2794}
!2793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !275)
!2794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6)
!2795 = !DILocalVariable(name: "pt", arg: 1, scope: !2790, file: !3, line: 876, type: !7)
!2796 = !DILocation(line: 876, column: 38, scope: !2790)
!2797 = !DILocalVariable(name: "verts", arg: 2, scope: !2790, file: !3, line: 876, type: !601)
!2798 = !DILocation(line: 876, column: 57, scope: !2790)
!2799 = !DILocalVariable(name: "nr", arg: 3, scope: !2790, file: !3, line: 876, type: !2793)
!2800 = !DILocation(line: 876, column: 88, scope: !2790)
!2801 = !DILocalVariable(name: "UNUSED_use_holes", arg: 4, scope: !2790, file: !3, line: 877, type: !2794)
!2802 = !DILocation(line: 877, column: 37, scope: !2790)
!2803 = !DILocalVariable(name: "i", scope: !2790, file: !3, line: 879, type: !275)
!2804 = !DILocation(line: 879, column: 15, scope: !2790)
!2805 = !DILocalVariable(name: "j", scope: !2790, file: !3, line: 879, type: !275)
!2806 = !DILocation(line: 879, column: 18, scope: !2790)
!2807 = !DILocalVariable(name: "isect", scope: !2790, file: !3, line: 880, type: !6)
!2808 = !DILocation(line: 880, column: 7, scope: !2790)
!2809 = !DILocation(line: 881, column: 9, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !2790, file: !3, line: 881, column: 2)
!2811 = !DILocation(line: 881, column: 18, scope: !2810)
!2812 = !DILocation(line: 881, column: 21, scope: !2810)
!2813 = !DILocation(line: 881, column: 16, scope: !2810)
!2814 = !DILocation(line: 881, column: 7, scope: !2810)
!2815 = !DILocation(line: 881, column: 26, scope: !2816)
!2816 = distinct !DILexicalBlock(scope: !2810, file: !3, line: 881, column: 2)
!2817 = !DILocation(line: 881, column: 30, scope: !2816)
!2818 = !DILocation(line: 881, column: 28, scope: !2816)
!2819 = !DILocation(line: 881, column: 2, scope: !2810)
!2820 = !DILocation(line: 882, column: 9, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2822, file: !3, line: 882, column: 7)
!2822 = distinct !DILexicalBlock(scope: !2816, file: !3, line: 881, column: 43)
!2823 = !DILocation(line: 882, column: 15, scope: !2821)
!2824 = !DILocation(line: 882, column: 23, scope: !2821)
!2825 = !DILocation(line: 882, column: 21, scope: !2821)
!2826 = !DILocation(line: 882, column: 34, scope: !2821)
!2827 = !DILocation(line: 882, column: 40, scope: !2821)
!2828 = !DILocation(line: 882, column: 48, scope: !2821)
!2829 = !DILocation(line: 882, column: 46, scope: !2821)
!2830 = !DILocation(line: 882, column: 30, scope: !2821)
!2831 = !DILocation(line: 882, column: 56, scope: !2821)
!2832 = !DILocation(line: 883, column: 8, scope: !2821)
!2833 = !DILocation(line: 883, column: 17, scope: !2821)
!2834 = !DILocation(line: 883, column: 23, scope: !2821)
!2835 = !DILocation(line: 883, column: 31, scope: !2821)
!2836 = !DILocation(line: 883, column: 37, scope: !2821)
!2837 = !DILocation(line: 883, column: 29, scope: !2821)
!2838 = !DILocation(line: 883, column: 47, scope: !2821)
!2839 = !DILocation(line: 883, column: 55, scope: !2821)
!2840 = !DILocation(line: 883, column: 61, scope: !2821)
!2841 = !DILocation(line: 883, column: 53, scope: !2821)
!2842 = !DILocation(line: 883, column: 44, scope: !2821)
!2843 = !DILocation(line: 883, column: 71, scope: !2821)
!2844 = !DILocation(line: 883, column: 77, scope: !2821)
!2845 = !DILocation(line: 883, column: 85, scope: !2821)
!2846 = !DILocation(line: 883, column: 91, scope: !2821)
!2847 = !DILocation(line: 883, column: 83, scope: !2821)
!2848 = !DILocation(line: 883, column: 68, scope: !2821)
!2849 = !DILocation(line: 883, column: 100, scope: !2821)
!2850 = !DILocation(line: 883, column: 106, scope: !2821)
!2851 = !DILocation(line: 883, column: 98, scope: !2821)
!2852 = !DILocation(line: 883, column: 14, scope: !2821)
!2853 = !DILocation(line: 882, column: 7, scope: !2822)
!2854 = !DILocation(line: 885, column: 13, scope: !2855)
!2855 = distinct !DILexicalBlock(scope: !2821, file: !3, line: 884, column: 3)
!2856 = !DILocation(line: 885, column: 12, scope: !2855)
!2857 = !DILocation(line: 885, column: 10, scope: !2855)
!2858 = !DILocation(line: 886, column: 3, scope: !2855)
!2859 = !DILocation(line: 887, column: 2, scope: !2822)
!2860 = !DILocation(line: 881, column: 39, scope: !2816)
!2861 = !DILocation(line: 881, column: 36, scope: !2816)
!2862 = !DILocation(line: 881, column: 2, scope: !2816)
!2863 = distinct !{!2863, !2819, !2864}
!2864 = !DILocation(line: 887, column: 2, scope: !2810)
!2865 = !DILocation(line: 888, column: 9, scope: !2790)
!2866 = !DILocation(line: 888, column: 2, scope: !2790)
!2867 = distinct !DISubprogram(name: "isect_point_poly_v2_int", scope: !3, file: !3, line: 890, type: !2868, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!2868 = !DISubroutineType(types: !2869)
!2869 = !{!6, !1840, !2870, !2793, !2794}
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2871, size: 64)
!2871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1841, size: 64, elements: !603)
!2872 = !DILocalVariable(name: "pt", arg: 1, scope: !2867, file: !3, line: 890, type: !1840)
!2873 = !DILocation(line: 890, column: 40, scope: !2867)
!2874 = !DILocalVariable(name: "verts", arg: 2, scope: !2867, file: !3, line: 890, type: !2870)
!2875 = !DILocation(line: 890, column: 57, scope: !2867)
!2876 = !DILocalVariable(name: "nr", arg: 3, scope: !2867, file: !3, line: 890, type: !2793)
!2877 = !DILocation(line: 890, column: 88, scope: !2867)
!2878 = !DILocalVariable(name: "UNUSED_use_holes", arg: 4, scope: !2867, file: !3, line: 891, type: !2794)
!2879 = !DILocation(line: 891, column: 41, scope: !2867)
!2880 = !DILocalVariable(name: "i", scope: !2867, file: !3, line: 893, type: !275)
!2881 = !DILocation(line: 893, column: 15, scope: !2867)
!2882 = !DILocalVariable(name: "j", scope: !2867, file: !3, line: 893, type: !275)
!2883 = !DILocation(line: 893, column: 18, scope: !2867)
!2884 = !DILocalVariable(name: "isect", scope: !2867, file: !3, line: 894, type: !6)
!2885 = !DILocation(line: 894, column: 7, scope: !2867)
!2886 = !DILocation(line: 895, column: 9, scope: !2887)
!2887 = distinct !DILexicalBlock(scope: !2867, file: !3, line: 895, column: 2)
!2888 = !DILocation(line: 895, column: 18, scope: !2887)
!2889 = !DILocation(line: 895, column: 21, scope: !2887)
!2890 = !DILocation(line: 895, column: 16, scope: !2887)
!2891 = !DILocation(line: 895, column: 7, scope: !2887)
!2892 = !DILocation(line: 895, column: 26, scope: !2893)
!2893 = distinct !DILexicalBlock(scope: !2887, file: !3, line: 895, column: 2)
!2894 = !DILocation(line: 895, column: 30, scope: !2893)
!2895 = !DILocation(line: 895, column: 28, scope: !2893)
!2896 = !DILocation(line: 895, column: 2, scope: !2887)
!2897 = !DILocation(line: 896, column: 9, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2899, file: !3, line: 896, column: 7)
!2899 = distinct !DILexicalBlock(scope: !2893, file: !3, line: 895, column: 43)
!2900 = !DILocation(line: 896, column: 15, scope: !2898)
!2901 = !DILocation(line: 896, column: 23, scope: !2898)
!2902 = !DILocation(line: 896, column: 21, scope: !2898)
!2903 = !DILocation(line: 896, column: 34, scope: !2898)
!2904 = !DILocation(line: 896, column: 40, scope: !2898)
!2905 = !DILocation(line: 896, column: 48, scope: !2898)
!2906 = !DILocation(line: 896, column: 46, scope: !2898)
!2907 = !DILocation(line: 896, column: 30, scope: !2898)
!2908 = !DILocation(line: 896, column: 56, scope: !2898)
!2909 = !DILocation(line: 897, column: 8, scope: !2898)
!2910 = !DILocation(line: 897, column: 17, scope: !2898)
!2911 = !DILocation(line: 897, column: 23, scope: !2898)
!2912 = !DILocation(line: 897, column: 31, scope: !2898)
!2913 = !DILocation(line: 897, column: 37, scope: !2898)
!2914 = !DILocation(line: 897, column: 29, scope: !2898)
!2915 = !DILocation(line: 897, column: 47, scope: !2898)
!2916 = !DILocation(line: 897, column: 55, scope: !2898)
!2917 = !DILocation(line: 897, column: 61, scope: !2898)
!2918 = !DILocation(line: 897, column: 53, scope: !2898)
!2919 = !DILocation(line: 897, column: 44, scope: !2898)
!2920 = !DILocation(line: 897, column: 71, scope: !2898)
!2921 = !DILocation(line: 897, column: 77, scope: !2898)
!2922 = !DILocation(line: 897, column: 85, scope: !2898)
!2923 = !DILocation(line: 897, column: 91, scope: !2898)
!2924 = !DILocation(line: 897, column: 83, scope: !2898)
!2925 = !DILocation(line: 897, column: 68, scope: !2898)
!2926 = !DILocation(line: 897, column: 100, scope: !2898)
!2927 = !DILocation(line: 897, column: 106, scope: !2898)
!2928 = !DILocation(line: 897, column: 98, scope: !2898)
!2929 = !DILocation(line: 897, column: 14, scope: !2898)
!2930 = !DILocation(line: 896, column: 7, scope: !2899)
!2931 = !DILocation(line: 899, column: 13, scope: !2932)
!2932 = distinct !DILexicalBlock(scope: !2898, file: !3, line: 898, column: 3)
!2933 = !DILocation(line: 899, column: 12, scope: !2932)
!2934 = !DILocation(line: 899, column: 10, scope: !2932)
!2935 = !DILocation(line: 900, column: 3, scope: !2932)
!2936 = !DILocation(line: 901, column: 2, scope: !2899)
!2937 = !DILocation(line: 895, column: 39, scope: !2893)
!2938 = !DILocation(line: 895, column: 36, scope: !2893)
!2939 = !DILocation(line: 895, column: 2, scope: !2893)
!2940 = distinct !{!2940, !2896, !2941}
!2941 = !DILocation(line: 901, column: 2, scope: !2887)
!2942 = !DILocation(line: 902, column: 9, scope: !2867)
!2943 = !DILocation(line: 902, column: 2, scope: !2867)
!2944 = distinct !DISubprogram(name: "isect_point_tri_v2_cw", scope: !3, file: !3, line: 910, type: !2473, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!2945 = !DILocalVariable(name: "pt", arg: 1, scope: !2944, file: !3, line: 910, type: !7)
!2946 = !DILocation(line: 910, column: 40, scope: !2944)
!2947 = !DILocalVariable(name: "v1", arg: 2, scope: !2944, file: !3, line: 910, type: !7)
!2948 = !DILocation(line: 910, column: 59, scope: !2944)
!2949 = !DILocalVariable(name: "v2", arg: 3, scope: !2944, file: !3, line: 910, type: !7)
!2950 = !DILocation(line: 910, column: 78, scope: !2944)
!2951 = !DILocalVariable(name: "v3", arg: 4, scope: !2944, file: !3, line: 910, type: !7)
!2952 = !DILocation(line: 910, column: 97, scope: !2944)
!2953 = !DILocation(line: 912, column: 25, scope: !2954)
!2954 = distinct !DILexicalBlock(scope: !2944, file: !3, line: 912, column: 6)
!2955 = !DILocation(line: 912, column: 29, scope: !2954)
!2956 = !DILocation(line: 912, column: 33, scope: !2954)
!2957 = !DILocation(line: 912, column: 6, scope: !2954)
!2958 = !DILocation(line: 912, column: 37, scope: !2954)
!2959 = !DILocation(line: 912, column: 6, scope: !2944)
!2960 = !DILocation(line: 913, column: 26, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2962, file: !3, line: 913, column: 7)
!2962 = distinct !DILexicalBlock(scope: !2954, file: !3, line: 912, column: 46)
!2963 = !DILocation(line: 913, column: 30, scope: !2961)
!2964 = !DILocation(line: 913, column: 34, scope: !2961)
!2965 = !DILocation(line: 913, column: 7, scope: !2961)
!2966 = !DILocation(line: 913, column: 38, scope: !2961)
!2967 = !DILocation(line: 913, column: 7, scope: !2962)
!2968 = !DILocation(line: 914, column: 27, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2970, file: !3, line: 914, column: 8)
!2970 = distinct !DILexicalBlock(scope: !2961, file: !3, line: 913, column: 47)
!2971 = !DILocation(line: 914, column: 31, scope: !2969)
!2972 = !DILocation(line: 914, column: 35, scope: !2969)
!2973 = !DILocation(line: 914, column: 8, scope: !2969)
!2974 = !DILocation(line: 914, column: 39, scope: !2969)
!2975 = !DILocation(line: 914, column: 8, scope: !2970)
!2976 = !DILocation(line: 915, column: 5, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2969, file: !3, line: 914, column: 48)
!2978 = !DILocation(line: 917, column: 3, scope: !2970)
!2979 = !DILocation(line: 918, column: 2, scope: !2962)
!2980 = !DILocation(line: 920, column: 2, scope: !2944)
!2981 = !DILocation(line: 921, column: 1, scope: !2944)
!2982 = distinct !DISubprogram(name: "line_point_side_v2", scope: !184, file: !184, line: 1002, type: !489, scopeLine: 1003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!2983 = !DILocalVariable(name: "l1", arg: 1, scope: !2982, file: !184, line: 1002, type: !7)
!2984 = !DILocation(line: 1002, column: 46, scope: !2982)
!2985 = !DILocalVariable(name: "l2", arg: 2, scope: !2982, file: !184, line: 1002, type: !7)
!2986 = !DILocation(line: 1002, column: 65, scope: !2982)
!2987 = !DILocalVariable(name: "pt", arg: 3, scope: !2982, file: !184, line: 1002, type: !7)
!2988 = !DILocation(line: 1002, column: 84, scope: !2982)
!2989 = !DILocation(line: 1004, column: 12, scope: !2982)
!2990 = !DILocation(line: 1004, column: 20, scope: !2982)
!2991 = !DILocation(line: 1004, column: 18, scope: !2982)
!2992 = !DILocation(line: 1004, column: 30, scope: !2982)
!2993 = !DILocation(line: 1004, column: 38, scope: !2982)
!2994 = !DILocation(line: 1004, column: 36, scope: !2982)
!2995 = !DILocation(line: 1004, column: 27, scope: !2982)
!2996 = !DILocation(line: 1005, column: 12, scope: !2982)
!2997 = !DILocation(line: 1005, column: 20, scope: !2982)
!2998 = !DILocation(line: 1005, column: 18, scope: !2982)
!2999 = !DILocation(line: 1005, column: 30, scope: !2982)
!3000 = !DILocation(line: 1005, column: 38, scope: !2982)
!3001 = !DILocation(line: 1005, column: 36, scope: !2982)
!3002 = !DILocation(line: 1005, column: 27, scope: !2982)
!3003 = !DILocation(line: 1004, column: 46, scope: !2982)
!3004 = !DILocation(line: 1004, column: 2, scope: !2982)
!3005 = distinct !DISubprogram(name: "isect_point_tri_v2", scope: !3, file: !3, line: 923, type: !2040, scopeLine: 924, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!3006 = !DILocalVariable(name: "pt", arg: 1, scope: !3005, file: !3, line: 923, type: !7)
!3007 = !DILocation(line: 923, column: 36, scope: !3005)
!3008 = !DILocalVariable(name: "v1", arg: 2, scope: !3005, file: !3, line: 923, type: !7)
!3009 = !DILocation(line: 923, column: 55, scope: !3005)
!3010 = !DILocalVariable(name: "v2", arg: 3, scope: !3005, file: !3, line: 923, type: !7)
!3011 = !DILocation(line: 923, column: 74, scope: !3005)
!3012 = !DILocalVariable(name: "v3", arg: 4, scope: !3005, file: !3, line: 923, type: !7)
!3013 = !DILocation(line: 923, column: 93, scope: !3005)
!3014 = !DILocation(line: 925, column: 25, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 925, column: 6)
!3016 = !DILocation(line: 925, column: 29, scope: !3015)
!3017 = !DILocation(line: 925, column: 33, scope: !3015)
!3018 = !DILocation(line: 925, column: 6, scope: !3015)
!3019 = !DILocation(line: 925, column: 37, scope: !3015)
!3020 = !DILocation(line: 925, column: 6, scope: !3005)
!3021 = !DILocation(line: 926, column: 26, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !3023, file: !3, line: 926, column: 7)
!3023 = distinct !DILexicalBlock(scope: !3015, file: !3, line: 925, column: 46)
!3024 = !DILocation(line: 926, column: 30, scope: !3022)
!3025 = !DILocation(line: 926, column: 34, scope: !3022)
!3026 = !DILocation(line: 926, column: 7, scope: !3022)
!3027 = !DILocation(line: 926, column: 38, scope: !3022)
!3028 = !DILocation(line: 926, column: 7, scope: !3023)
!3029 = !DILocation(line: 927, column: 27, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !3031, file: !3, line: 927, column: 8)
!3031 = distinct !DILexicalBlock(scope: !3022, file: !3, line: 926, column: 47)
!3032 = !DILocation(line: 927, column: 31, scope: !3030)
!3033 = !DILocation(line: 927, column: 35, scope: !3030)
!3034 = !DILocation(line: 927, column: 8, scope: !3030)
!3035 = !DILocation(line: 927, column: 39, scope: !3030)
!3036 = !DILocation(line: 927, column: 8, scope: !3031)
!3037 = !DILocation(line: 928, column: 5, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3030, file: !3, line: 927, column: 48)
!3039 = !DILocation(line: 930, column: 3, scope: !3031)
!3040 = !DILocation(line: 931, column: 2, scope: !3023)
!3041 = !DILocation(line: 933, column: 28, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 933, column: 7)
!3043 = distinct !DILexicalBlock(scope: !3015, file: !3, line: 932, column: 7)
!3044 = !DILocation(line: 933, column: 32, scope: !3042)
!3045 = !DILocation(line: 933, column: 36, scope: !3042)
!3046 = !DILocation(line: 933, column: 9, scope: !3042)
!3047 = !DILocation(line: 933, column: 40, scope: !3042)
!3048 = !DILocation(line: 933, column: 7, scope: !3043)
!3049 = !DILocation(line: 934, column: 29, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !3051, file: !3, line: 934, column: 8)
!3051 = distinct !DILexicalBlock(scope: !3042, file: !3, line: 933, column: 50)
!3052 = !DILocation(line: 934, column: 33, scope: !3050)
!3053 = !DILocation(line: 934, column: 37, scope: !3050)
!3054 = !DILocation(line: 934, column: 10, scope: !3050)
!3055 = !DILocation(line: 934, column: 41, scope: !3050)
!3056 = !DILocation(line: 934, column: 8, scope: !3051)
!3057 = !DILocation(line: 935, column: 5, scope: !3058)
!3058 = distinct !DILexicalBlock(scope: !3050, file: !3, line: 934, column: 51)
!3059 = !DILocation(line: 937, column: 3, scope: !3051)
!3060 = !DILocation(line: 940, column: 2, scope: !3005)
!3061 = !DILocation(line: 941, column: 1, scope: !3005)
!3062 = distinct !DISubprogram(name: "isect_point_quad_v2", scope: !3, file: !3, line: 944, type: !3063, scopeLine: 945, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!3063 = !DISubroutineType(types: !3064)
!3064 = !{!17, !7, !7, !7, !7, !7}
!3065 = !DILocalVariable(name: "pt", arg: 1, scope: !3062, file: !3, line: 944, type: !7)
!3066 = !DILocation(line: 944, column: 37, scope: !3062)
!3067 = !DILocalVariable(name: "v1", arg: 2, scope: !3062, file: !3, line: 944, type: !7)
!3068 = !DILocation(line: 944, column: 56, scope: !3062)
!3069 = !DILocalVariable(name: "v2", arg: 3, scope: !3062, file: !3, line: 944, type: !7)
!3070 = !DILocation(line: 944, column: 75, scope: !3062)
!3071 = !DILocalVariable(name: "v3", arg: 4, scope: !3062, file: !3, line: 944, type: !7)
!3072 = !DILocation(line: 944, column: 94, scope: !3062)
!3073 = !DILocalVariable(name: "v4", arg: 5, scope: !3062, file: !3, line: 944, type: !7)
!3074 = !DILocation(line: 944, column: 113, scope: !3062)
!3075 = !DILocation(line: 946, column: 25, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !3062, file: !3, line: 946, column: 6)
!3077 = !DILocation(line: 946, column: 29, scope: !3076)
!3078 = !DILocation(line: 946, column: 33, scope: !3076)
!3079 = !DILocation(line: 946, column: 6, scope: !3076)
!3080 = !DILocation(line: 946, column: 37, scope: !3076)
!3081 = !DILocation(line: 946, column: 6, scope: !3062)
!3082 = !DILocation(line: 947, column: 26, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3084, file: !3, line: 947, column: 7)
!3084 = distinct !DILexicalBlock(scope: !3076, file: !3, line: 946, column: 46)
!3085 = !DILocation(line: 947, column: 30, scope: !3083)
!3086 = !DILocation(line: 947, column: 34, scope: !3083)
!3087 = !DILocation(line: 947, column: 7, scope: !3083)
!3088 = !DILocation(line: 947, column: 38, scope: !3083)
!3089 = !DILocation(line: 947, column: 7, scope: !3084)
!3090 = !DILocation(line: 948, column: 27, scope: !3091)
!3091 = distinct !DILexicalBlock(scope: !3092, file: !3, line: 948, column: 8)
!3092 = distinct !DILexicalBlock(scope: !3083, file: !3, line: 947, column: 47)
!3093 = !DILocation(line: 948, column: 31, scope: !3091)
!3094 = !DILocation(line: 948, column: 35, scope: !3091)
!3095 = !DILocation(line: 948, column: 8, scope: !3091)
!3096 = !DILocation(line: 948, column: 39, scope: !3091)
!3097 = !DILocation(line: 948, column: 8, scope: !3092)
!3098 = !DILocation(line: 949, column: 28, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !3100, file: !3, line: 949, column: 9)
!3100 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 948, column: 48)
!3101 = !DILocation(line: 949, column: 32, scope: !3099)
!3102 = !DILocation(line: 949, column: 36, scope: !3099)
!3103 = !DILocation(line: 949, column: 9, scope: !3099)
!3104 = !DILocation(line: 949, column: 40, scope: !3099)
!3105 = !DILocation(line: 949, column: 9, scope: !3100)
!3106 = !DILocation(line: 950, column: 6, scope: !3107)
!3107 = distinct !DILexicalBlock(scope: !3099, file: !3, line: 949, column: 49)
!3108 = !DILocation(line: 952, column: 4, scope: !3100)
!3109 = !DILocation(line: 953, column: 3, scope: !3092)
!3110 = !DILocation(line: 954, column: 2, scope: !3084)
!3111 = !DILocation(line: 956, column: 28, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3113, file: !3, line: 956, column: 7)
!3113 = distinct !DILexicalBlock(scope: !3076, file: !3, line: 955, column: 7)
!3114 = !DILocation(line: 956, column: 32, scope: !3112)
!3115 = !DILocation(line: 956, column: 36, scope: !3112)
!3116 = !DILocation(line: 956, column: 9, scope: !3112)
!3117 = !DILocation(line: 956, column: 40, scope: !3112)
!3118 = !DILocation(line: 956, column: 7, scope: !3113)
!3119 = !DILocation(line: 957, column: 29, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3121, file: !3, line: 957, column: 8)
!3121 = distinct !DILexicalBlock(scope: !3112, file: !3, line: 956, column: 50)
!3122 = !DILocation(line: 957, column: 33, scope: !3120)
!3123 = !DILocation(line: 957, column: 37, scope: !3120)
!3124 = !DILocation(line: 957, column: 10, scope: !3120)
!3125 = !DILocation(line: 957, column: 41, scope: !3120)
!3126 = !DILocation(line: 957, column: 8, scope: !3121)
!3127 = !DILocation(line: 958, column: 30, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 958, column: 9)
!3129 = distinct !DILexicalBlock(scope: !3120, file: !3, line: 957, column: 51)
!3130 = !DILocation(line: 958, column: 34, scope: !3128)
!3131 = !DILocation(line: 958, column: 38, scope: !3128)
!3132 = !DILocation(line: 958, column: 11, scope: !3128)
!3133 = !DILocation(line: 958, column: 42, scope: !3128)
!3134 = !DILocation(line: 958, column: 9, scope: !3129)
!3135 = !DILocation(line: 959, column: 6, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3128, file: !3, line: 958, column: 52)
!3137 = !DILocation(line: 961, column: 4, scope: !3129)
!3138 = !DILocation(line: 962, column: 3, scope: !3121)
!3139 = !DILocation(line: 965, column: 2, scope: !3062)
!3140 = !DILocation(line: 966, column: 1, scope: !3062)
!3141 = distinct !DISubprogram(name: "isect_line_tri_v3", scope: !3, file: !3, line: 972, type: !3142, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!3142 = !DISubroutineType(types: !3143)
!3143 = !{!6, !7, !7, !7, !7, !7, !10, !10}
!3144 = !DILocalVariable(name: "p1", arg: 1, scope: !3141, file: !3, line: 972, type: !7)
!3145 = !DILocation(line: 972, column: 36, scope: !3141)
!3146 = !DILocalVariable(name: "p2", arg: 2, scope: !3141, file: !3, line: 972, type: !7)
!3147 = !DILocation(line: 972, column: 55, scope: !3141)
!3148 = !DILocalVariable(name: "v0", arg: 3, scope: !3141, file: !3, line: 973, type: !7)
!3149 = !DILocation(line: 973, column: 36, scope: !3141)
!3150 = !DILocalVariable(name: "v1", arg: 4, scope: !3141, file: !3, line: 973, type: !7)
!3151 = !DILocation(line: 973, column: 55, scope: !3141)
!3152 = !DILocalVariable(name: "v2", arg: 5, scope: !3141, file: !3, line: 973, type: !7)
!3153 = !DILocation(line: 973, column: 74, scope: !3141)
!3154 = !DILocalVariable(name: "r_lambda", arg: 6, scope: !3141, file: !3, line: 974, type: !10)
!3155 = !DILocation(line: 974, column: 31, scope: !3141)
!3156 = !DILocalVariable(name: "r_uv", arg: 7, scope: !3141, file: !3, line: 974, type: !10)
!3157 = !DILocation(line: 974, column: 47, scope: !3141)
!3158 = !DILocalVariable(name: "p", scope: !3141, file: !3, line: 977, type: !117)
!3159 = !DILocation(line: 977, column: 8, scope: !3141)
!3160 = !DILocalVariable(name: "s", scope: !3141, file: !3, line: 977, type: !117)
!3161 = !DILocation(line: 977, column: 14, scope: !3141)
!3162 = !DILocalVariable(name: "d", scope: !3141, file: !3, line: 977, type: !117)
!3163 = !DILocation(line: 977, column: 20, scope: !3141)
!3164 = !DILocalVariable(name: "e1", scope: !3141, file: !3, line: 977, type: !117)
!3165 = !DILocation(line: 977, column: 26, scope: !3141)
!3166 = !DILocalVariable(name: "e2", scope: !3141, file: !3, line: 977, type: !117)
!3167 = !DILocation(line: 977, column: 33, scope: !3141)
!3168 = !DILocalVariable(name: "q", scope: !3141, file: !3, line: 977, type: !117)
!3169 = !DILocation(line: 977, column: 40, scope: !3141)
!3170 = !DILocalVariable(name: "a", scope: !3141, file: !3, line: 978, type: !9)
!3171 = !DILocation(line: 978, column: 8, scope: !3141)
!3172 = !DILocalVariable(name: "f", scope: !3141, file: !3, line: 978, type: !9)
!3173 = !DILocation(line: 978, column: 11, scope: !3141)
!3174 = !DILocalVariable(name: "u", scope: !3141, file: !3, line: 978, type: !9)
!3175 = !DILocation(line: 978, column: 14, scope: !3141)
!3176 = !DILocalVariable(name: "v", scope: !3141, file: !3, line: 978, type: !9)
!3177 = !DILocation(line: 978, column: 17, scope: !3141)
!3178 = !DILocation(line: 980, column: 14, scope: !3141)
!3179 = !DILocation(line: 980, column: 18, scope: !3141)
!3180 = !DILocation(line: 980, column: 22, scope: !3141)
!3181 = !DILocation(line: 980, column: 2, scope: !3141)
!3182 = !DILocation(line: 981, column: 14, scope: !3141)
!3183 = !DILocation(line: 981, column: 18, scope: !3141)
!3184 = !DILocation(line: 981, column: 22, scope: !3141)
!3185 = !DILocation(line: 981, column: 2, scope: !3141)
!3186 = !DILocation(line: 982, column: 14, scope: !3141)
!3187 = !DILocation(line: 982, column: 17, scope: !3141)
!3188 = !DILocation(line: 982, column: 21, scope: !3141)
!3189 = !DILocation(line: 982, column: 2, scope: !3141)
!3190 = !DILocation(line: 984, column: 16, scope: !3141)
!3191 = !DILocation(line: 984, column: 19, scope: !3141)
!3192 = !DILocation(line: 984, column: 22, scope: !3141)
!3193 = !DILocation(line: 984, column: 2, scope: !3141)
!3194 = !DILocation(line: 985, column: 15, scope: !3141)
!3195 = !DILocation(line: 985, column: 19, scope: !3141)
!3196 = !DILocation(line: 985, column: 6, scope: !3141)
!3197 = !DILocation(line: 985, column: 4, scope: !3141)
!3198 = !DILocation(line: 986, column: 6, scope: !3199)
!3199 = distinct !DILexicalBlock(scope: !3141, file: !3, line: 986, column: 6)
!3200 = !DILocation(line: 986, column: 8, scope: !3199)
!3201 = !DILocation(line: 986, column: 6, scope: !3141)
!3202 = !DILocation(line: 986, column: 17, scope: !3199)
!3203 = !DILocation(line: 987, column: 13, scope: !3141)
!3204 = !DILocation(line: 987, column: 11, scope: !3141)
!3205 = !DILocation(line: 987, column: 4, scope: !3141)
!3206 = !DILocation(line: 989, column: 14, scope: !3141)
!3207 = !DILocation(line: 989, column: 17, scope: !3141)
!3208 = !DILocation(line: 989, column: 21, scope: !3141)
!3209 = !DILocation(line: 989, column: 2, scope: !3141)
!3210 = !DILocation(line: 991, column: 6, scope: !3141)
!3211 = !DILocation(line: 991, column: 19, scope: !3141)
!3212 = !DILocation(line: 991, column: 22, scope: !3141)
!3213 = !DILocation(line: 991, column: 10, scope: !3141)
!3214 = !DILocation(line: 991, column: 8, scope: !3141)
!3215 = !DILocation(line: 991, column: 4, scope: !3141)
!3216 = !DILocation(line: 992, column: 7, scope: !3217)
!3217 = distinct !DILexicalBlock(scope: !3141, file: !3, line: 992, column: 6)
!3218 = !DILocation(line: 992, column: 9, scope: !3217)
!3219 = !DILocation(line: 992, column: 17, scope: !3217)
!3220 = !DILocation(line: 992, column: 21, scope: !3217)
!3221 = !DILocation(line: 992, column: 23, scope: !3217)
!3222 = !DILocation(line: 992, column: 6, scope: !3141)
!3223 = !DILocation(line: 992, column: 32, scope: !3217)
!3224 = !DILocation(line: 994, column: 16, scope: !3141)
!3225 = !DILocation(line: 994, column: 19, scope: !3141)
!3226 = !DILocation(line: 994, column: 22, scope: !3141)
!3227 = !DILocation(line: 994, column: 2, scope: !3141)
!3228 = !DILocation(line: 996, column: 6, scope: !3141)
!3229 = !DILocation(line: 996, column: 19, scope: !3141)
!3230 = !DILocation(line: 996, column: 22, scope: !3141)
!3231 = !DILocation(line: 996, column: 10, scope: !3141)
!3232 = !DILocation(line: 996, column: 8, scope: !3141)
!3233 = !DILocation(line: 996, column: 4, scope: !3141)
!3234 = !DILocation(line: 997, column: 7, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3141, file: !3, line: 997, column: 6)
!3236 = !DILocation(line: 997, column: 9, scope: !3235)
!3237 = !DILocation(line: 997, column: 17, scope: !3235)
!3238 = !DILocation(line: 997, column: 22, scope: !3235)
!3239 = !DILocation(line: 997, column: 26, scope: !3235)
!3240 = !DILocation(line: 997, column: 24, scope: !3235)
!3241 = !DILocation(line: 997, column: 29, scope: !3235)
!3242 = !DILocation(line: 997, column: 6, scope: !3141)
!3243 = !DILocation(line: 997, column: 38, scope: !3235)
!3244 = !DILocation(line: 999, column: 14, scope: !3141)
!3245 = !DILocation(line: 999, column: 27, scope: !3141)
!3246 = !DILocation(line: 999, column: 31, scope: !3141)
!3247 = !DILocation(line: 999, column: 18, scope: !3141)
!3248 = !DILocation(line: 999, column: 16, scope: !3141)
!3249 = !DILocation(line: 999, column: 3, scope: !3141)
!3250 = !DILocation(line: 999, column: 12, scope: !3141)
!3251 = !DILocation(line: 1000, column: 8, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3141, file: !3, line: 1000, column: 6)
!3253 = !DILocation(line: 1000, column: 7, scope: !3252)
!3254 = !DILocation(line: 1000, column: 17, scope: !3252)
!3255 = !DILocation(line: 1000, column: 25, scope: !3252)
!3256 = !DILocation(line: 1000, column: 30, scope: !3252)
!3257 = !DILocation(line: 1000, column: 29, scope: !3252)
!3258 = !DILocation(line: 1000, column: 39, scope: !3252)
!3259 = !DILocation(line: 1000, column: 6, scope: !3141)
!3260 = !DILocation(line: 1000, column: 48, scope: !3252)
!3261 = !DILocation(line: 1002, column: 6, scope: !3262)
!3262 = distinct !DILexicalBlock(scope: !3141, file: !3, line: 1002, column: 6)
!3263 = !DILocation(line: 1002, column: 6, scope: !3141)
!3264 = !DILocation(line: 1003, column: 13, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3262, file: !3, line: 1002, column: 12)
!3266 = !DILocation(line: 1003, column: 3, scope: !3265)
!3267 = !DILocation(line: 1003, column: 11, scope: !3265)
!3268 = !DILocation(line: 1004, column: 13, scope: !3265)
!3269 = !DILocation(line: 1004, column: 3, scope: !3265)
!3270 = !DILocation(line: 1004, column: 11, scope: !3265)
!3271 = !DILocation(line: 1005, column: 2, scope: !3265)
!3272 = !DILocation(line: 1007, column: 2, scope: !3141)
!3273 = !DILocation(line: 1008, column: 1, scope: !3141)
!3274 = distinct !DISubprogram(name: "isect_line_tri_epsilon_v3", scope: !3, file: !3, line: 1011, type: !3275, scopeLine: 1014, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!3275 = !DISubroutineType(types: !3276)
!3276 = !{!6, !7, !7, !7, !7, !7, !10, !10, !8}
!3277 = !DILocalVariable(name: "p1", arg: 1, scope: !3274, file: !3, line: 1011, type: !7)
!3278 = !DILocation(line: 1011, column: 44, scope: !3274)
!3279 = !DILocalVariable(name: "p2", arg: 2, scope: !3274, file: !3, line: 1011, type: !7)
!3280 = !DILocation(line: 1011, column: 63, scope: !3274)
!3281 = !DILocalVariable(name: "v0", arg: 3, scope: !3274, file: !3, line: 1012, type: !7)
!3282 = !DILocation(line: 1012, column: 36, scope: !3274)
!3283 = !DILocalVariable(name: "v1", arg: 4, scope: !3274, file: !3, line: 1012, type: !7)
!3284 = !DILocation(line: 1012, column: 55, scope: !3274)
!3285 = !DILocalVariable(name: "v2", arg: 5, scope: !3274, file: !3, line: 1012, type: !7)
!3286 = !DILocation(line: 1012, column: 74, scope: !3274)
!3287 = !DILocalVariable(name: "r_lambda", arg: 6, scope: !3274, file: !3, line: 1013, type: !10)
!3288 = !DILocation(line: 1013, column: 31, scope: !3274)
!3289 = !DILocalVariable(name: "r_uv", arg: 7, scope: !3274, file: !3, line: 1013, type: !10)
!3290 = !DILocation(line: 1013, column: 47, scope: !3274)
!3291 = !DILocalVariable(name: "epsilon", arg: 8, scope: !3274, file: !3, line: 1013, type: !8)
!3292 = !DILocation(line: 1013, column: 68, scope: !3274)
!3293 = !DILocalVariable(name: "p", scope: !3274, file: !3, line: 1016, type: !117)
!3294 = !DILocation(line: 1016, column: 8, scope: !3274)
!3295 = !DILocalVariable(name: "s", scope: !3274, file: !3, line: 1016, type: !117)
!3296 = !DILocation(line: 1016, column: 14, scope: !3274)
!3297 = !DILocalVariable(name: "d", scope: !3274, file: !3, line: 1016, type: !117)
!3298 = !DILocation(line: 1016, column: 20, scope: !3274)
!3299 = !DILocalVariable(name: "e1", scope: !3274, file: !3, line: 1016, type: !117)
!3300 = !DILocation(line: 1016, column: 26, scope: !3274)
!3301 = !DILocalVariable(name: "e2", scope: !3274, file: !3, line: 1016, type: !117)
!3302 = !DILocation(line: 1016, column: 33, scope: !3274)
!3303 = !DILocalVariable(name: "q", scope: !3274, file: !3, line: 1016, type: !117)
!3304 = !DILocation(line: 1016, column: 40, scope: !3274)
!3305 = !DILocalVariable(name: "a", scope: !3274, file: !3, line: 1017, type: !9)
!3306 = !DILocation(line: 1017, column: 8, scope: !3274)
!3307 = !DILocalVariable(name: "f", scope: !3274, file: !3, line: 1017, type: !9)
!3308 = !DILocation(line: 1017, column: 11, scope: !3274)
!3309 = !DILocalVariable(name: "u", scope: !3274, file: !3, line: 1017, type: !9)
!3310 = !DILocation(line: 1017, column: 14, scope: !3274)
!3311 = !DILocalVariable(name: "v", scope: !3274, file: !3, line: 1017, type: !9)
!3312 = !DILocation(line: 1017, column: 17, scope: !3274)
!3313 = !DILocation(line: 1019, column: 14, scope: !3274)
!3314 = !DILocation(line: 1019, column: 18, scope: !3274)
!3315 = !DILocation(line: 1019, column: 22, scope: !3274)
!3316 = !DILocation(line: 1019, column: 2, scope: !3274)
!3317 = !DILocation(line: 1020, column: 14, scope: !3274)
!3318 = !DILocation(line: 1020, column: 18, scope: !3274)
!3319 = !DILocation(line: 1020, column: 22, scope: !3274)
!3320 = !DILocation(line: 1020, column: 2, scope: !3274)
!3321 = !DILocation(line: 1021, column: 14, scope: !3274)
!3322 = !DILocation(line: 1021, column: 17, scope: !3274)
!3323 = !DILocation(line: 1021, column: 21, scope: !3274)
!3324 = !DILocation(line: 1021, column: 2, scope: !3274)
!3325 = !DILocation(line: 1023, column: 16, scope: !3274)
!3326 = !DILocation(line: 1023, column: 19, scope: !3274)
!3327 = !DILocation(line: 1023, column: 22, scope: !3274)
!3328 = !DILocation(line: 1023, column: 2, scope: !3274)
!3329 = !DILocation(line: 1024, column: 15, scope: !3274)
!3330 = !DILocation(line: 1024, column: 19, scope: !3274)
!3331 = !DILocation(line: 1024, column: 6, scope: !3274)
!3332 = !DILocation(line: 1024, column: 4, scope: !3274)
!3333 = !DILocation(line: 1025, column: 6, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3274, file: !3, line: 1025, column: 6)
!3335 = !DILocation(line: 1025, column: 8, scope: !3334)
!3336 = !DILocation(line: 1025, column: 6, scope: !3274)
!3337 = !DILocation(line: 1025, column: 17, scope: !3334)
!3338 = !DILocation(line: 1026, column: 13, scope: !3274)
!3339 = !DILocation(line: 1026, column: 11, scope: !3274)
!3340 = !DILocation(line: 1026, column: 4, scope: !3274)
!3341 = !DILocation(line: 1028, column: 14, scope: !3274)
!3342 = !DILocation(line: 1028, column: 17, scope: !3274)
!3343 = !DILocation(line: 1028, column: 21, scope: !3274)
!3344 = !DILocation(line: 1028, column: 2, scope: !3274)
!3345 = !DILocation(line: 1030, column: 6, scope: !3274)
!3346 = !DILocation(line: 1030, column: 19, scope: !3274)
!3347 = !DILocation(line: 1030, column: 22, scope: !3274)
!3348 = !DILocation(line: 1030, column: 10, scope: !3274)
!3349 = !DILocation(line: 1030, column: 8, scope: !3274)
!3350 = !DILocation(line: 1030, column: 4, scope: !3274)
!3351 = !DILocation(line: 1031, column: 7, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3274, file: !3, line: 1031, column: 6)
!3353 = !DILocation(line: 1031, column: 12, scope: !3352)
!3354 = !DILocation(line: 1031, column: 11, scope: !3352)
!3355 = !DILocation(line: 1031, column: 9, scope: !3352)
!3356 = !DILocation(line: 1031, column: 21, scope: !3352)
!3357 = !DILocation(line: 1031, column: 25, scope: !3352)
!3358 = !DILocation(line: 1031, column: 36, scope: !3352)
!3359 = !DILocation(line: 1031, column: 34, scope: !3352)
!3360 = !DILocation(line: 1031, column: 27, scope: !3352)
!3361 = !DILocation(line: 1031, column: 6, scope: !3274)
!3362 = !DILocation(line: 1031, column: 46, scope: !3352)
!3363 = !DILocation(line: 1033, column: 16, scope: !3274)
!3364 = !DILocation(line: 1033, column: 19, scope: !3274)
!3365 = !DILocation(line: 1033, column: 22, scope: !3274)
!3366 = !DILocation(line: 1033, column: 2, scope: !3274)
!3367 = !DILocation(line: 1035, column: 6, scope: !3274)
!3368 = !DILocation(line: 1035, column: 19, scope: !3274)
!3369 = !DILocation(line: 1035, column: 22, scope: !3274)
!3370 = !DILocation(line: 1035, column: 10, scope: !3274)
!3371 = !DILocation(line: 1035, column: 8, scope: !3274)
!3372 = !DILocation(line: 1035, column: 4, scope: !3274)
!3373 = !DILocation(line: 1036, column: 7, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3274, file: !3, line: 1036, column: 6)
!3375 = !DILocation(line: 1036, column: 12, scope: !3374)
!3376 = !DILocation(line: 1036, column: 11, scope: !3374)
!3377 = !DILocation(line: 1036, column: 9, scope: !3374)
!3378 = !DILocation(line: 1036, column: 21, scope: !3374)
!3379 = !DILocation(line: 1036, column: 26, scope: !3374)
!3380 = !DILocation(line: 1036, column: 30, scope: !3374)
!3381 = !DILocation(line: 1036, column: 28, scope: !3374)
!3382 = !DILocation(line: 1036, column: 42, scope: !3374)
!3383 = !DILocation(line: 1036, column: 40, scope: !3374)
!3384 = !DILocation(line: 1036, column: 33, scope: !3374)
!3385 = !DILocation(line: 1036, column: 6, scope: !3274)
!3386 = !DILocation(line: 1036, column: 52, scope: !3374)
!3387 = !DILocation(line: 1038, column: 14, scope: !3274)
!3388 = !DILocation(line: 1038, column: 27, scope: !3274)
!3389 = !DILocation(line: 1038, column: 31, scope: !3274)
!3390 = !DILocation(line: 1038, column: 18, scope: !3274)
!3391 = !DILocation(line: 1038, column: 16, scope: !3274)
!3392 = !DILocation(line: 1038, column: 3, scope: !3274)
!3393 = !DILocation(line: 1038, column: 12, scope: !3274)
!3394 = !DILocation(line: 1039, column: 8, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3274, file: !3, line: 1039, column: 6)
!3396 = !DILocation(line: 1039, column: 7, scope: !3395)
!3397 = !DILocation(line: 1039, column: 17, scope: !3395)
!3398 = !DILocation(line: 1039, column: 25, scope: !3395)
!3399 = !DILocation(line: 1039, column: 30, scope: !3395)
!3400 = !DILocation(line: 1039, column: 29, scope: !3395)
!3401 = !DILocation(line: 1039, column: 39, scope: !3395)
!3402 = !DILocation(line: 1039, column: 6, scope: !3274)
!3403 = !DILocation(line: 1039, column: 48, scope: !3395)
!3404 = !DILocation(line: 1041, column: 6, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3274, file: !3, line: 1041, column: 6)
!3406 = !DILocation(line: 1041, column: 6, scope: !3274)
!3407 = !DILocation(line: 1042, column: 13, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3405, file: !3, line: 1041, column: 12)
!3409 = !DILocation(line: 1042, column: 3, scope: !3408)
!3410 = !DILocation(line: 1042, column: 11, scope: !3408)
!3411 = !DILocation(line: 1043, column: 13, scope: !3408)
!3412 = !DILocation(line: 1043, column: 3, scope: !3408)
!3413 = !DILocation(line: 1043, column: 11, scope: !3408)
!3414 = !DILocation(line: 1044, column: 2, scope: !3408)
!3415 = !DILocation(line: 1046, column: 2, scope: !3274)
!3416 = !DILocation(line: 1047, column: 1, scope: !3274)
!3417 = distinct !DISubprogram(name: "isect_ray_tri_v3", scope: !3, file: !3, line: 1053, type: !3142, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!3418 = !DILocalVariable(name: "p1", arg: 1, scope: !3417, file: !3, line: 1053, type: !7)
!3419 = !DILocation(line: 1053, column: 35, scope: !3417)
!3420 = !DILocalVariable(name: "d", arg: 2, scope: !3417, file: !3, line: 1053, type: !7)
!3421 = !DILocation(line: 1053, column: 54, scope: !3417)
!3422 = !DILocalVariable(name: "v0", arg: 3, scope: !3417, file: !3, line: 1054, type: !7)
!3423 = !DILocation(line: 1054, column: 35, scope: !3417)
!3424 = !DILocalVariable(name: "v1", arg: 4, scope: !3417, file: !3, line: 1054, type: !7)
!3425 = !DILocation(line: 1054, column: 54, scope: !3417)
!3426 = !DILocalVariable(name: "v2", arg: 5, scope: !3417, file: !3, line: 1054, type: !7)
!3427 = !DILocation(line: 1054, column: 73, scope: !3417)
!3428 = !DILocalVariable(name: "r_lambda", arg: 6, scope: !3417, file: !3, line: 1055, type: !10)
!3429 = !DILocation(line: 1055, column: 30, scope: !3417)
!3430 = !DILocalVariable(name: "r_uv", arg: 7, scope: !3417, file: !3, line: 1055, type: !10)
!3431 = !DILocation(line: 1055, column: 46, scope: !3417)
!3432 = !DILocalVariable(name: "p", scope: !3417, file: !3, line: 1057, type: !117)
!3433 = !DILocation(line: 1057, column: 8, scope: !3417)
!3434 = !DILocalVariable(name: "s", scope: !3417, file: !3, line: 1057, type: !117)
!3435 = !DILocation(line: 1057, column: 14, scope: !3417)
!3436 = !DILocalVariable(name: "e1", scope: !3417, file: !3, line: 1057, type: !117)
!3437 = !DILocation(line: 1057, column: 20, scope: !3417)
!3438 = !DILocalVariable(name: "e2", scope: !3417, file: !3, line: 1057, type: !117)
!3439 = !DILocation(line: 1057, column: 27, scope: !3417)
!3440 = !DILocalVariable(name: "q", scope: !3417, file: !3, line: 1057, type: !117)
!3441 = !DILocation(line: 1057, column: 34, scope: !3417)
!3442 = !DILocalVariable(name: "a", scope: !3417, file: !3, line: 1058, type: !9)
!3443 = !DILocation(line: 1058, column: 8, scope: !3417)
!3444 = !DILocalVariable(name: "f", scope: !3417, file: !3, line: 1058, type: !9)
!3445 = !DILocation(line: 1058, column: 11, scope: !3417)
!3446 = !DILocalVariable(name: "u", scope: !3417, file: !3, line: 1058, type: !9)
!3447 = !DILocation(line: 1058, column: 14, scope: !3417)
!3448 = !DILocalVariable(name: "v", scope: !3417, file: !3, line: 1058, type: !9)
!3449 = !DILocation(line: 1058, column: 17, scope: !3417)
!3450 = !DILocation(line: 1060, column: 14, scope: !3417)
!3451 = !DILocation(line: 1060, column: 18, scope: !3417)
!3452 = !DILocation(line: 1060, column: 22, scope: !3417)
!3453 = !DILocation(line: 1060, column: 2, scope: !3417)
!3454 = !DILocation(line: 1061, column: 14, scope: !3417)
!3455 = !DILocation(line: 1061, column: 18, scope: !3417)
!3456 = !DILocation(line: 1061, column: 22, scope: !3417)
!3457 = !DILocation(line: 1061, column: 2, scope: !3417)
!3458 = !DILocation(line: 1063, column: 16, scope: !3417)
!3459 = !DILocation(line: 1063, column: 19, scope: !3417)
!3460 = !DILocation(line: 1063, column: 22, scope: !3417)
!3461 = !DILocation(line: 1063, column: 2, scope: !3417)
!3462 = !DILocation(line: 1064, column: 15, scope: !3417)
!3463 = !DILocation(line: 1064, column: 19, scope: !3417)
!3464 = !DILocation(line: 1064, column: 6, scope: !3417)
!3465 = !DILocation(line: 1064, column: 4, scope: !3417)
!3466 = !DILocation(line: 1067, column: 7, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3417, file: !3, line: 1067, column: 6)
!3468 = !DILocation(line: 1067, column: 9, scope: !3467)
!3469 = !DILocation(line: 1067, column: 25, scope: !3467)
!3470 = !DILocation(line: 1067, column: 29, scope: !3467)
!3471 = !DILocation(line: 1067, column: 31, scope: !3467)
!3472 = !DILocation(line: 1067, column: 6, scope: !3417)
!3473 = !DILocation(line: 1067, column: 47, scope: !3467)
!3474 = !DILocation(line: 1068, column: 13, scope: !3417)
!3475 = !DILocation(line: 1068, column: 11, scope: !3417)
!3476 = !DILocation(line: 1068, column: 4, scope: !3417)
!3477 = !DILocation(line: 1070, column: 14, scope: !3417)
!3478 = !DILocation(line: 1070, column: 17, scope: !3417)
!3479 = !DILocation(line: 1070, column: 21, scope: !3417)
!3480 = !DILocation(line: 1070, column: 2, scope: !3417)
!3481 = !DILocation(line: 1072, column: 6, scope: !3417)
!3482 = !DILocation(line: 1072, column: 19, scope: !3417)
!3483 = !DILocation(line: 1072, column: 22, scope: !3417)
!3484 = !DILocation(line: 1072, column: 10, scope: !3417)
!3485 = !DILocation(line: 1072, column: 8, scope: !3417)
!3486 = !DILocation(line: 1072, column: 4, scope: !3417)
!3487 = !DILocation(line: 1073, column: 7, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3417, file: !3, line: 1073, column: 6)
!3489 = !DILocation(line: 1073, column: 9, scope: !3488)
!3490 = !DILocation(line: 1073, column: 17, scope: !3488)
!3491 = !DILocation(line: 1073, column: 21, scope: !3488)
!3492 = !DILocation(line: 1073, column: 23, scope: !3488)
!3493 = !DILocation(line: 1073, column: 6, scope: !3417)
!3494 = !DILocation(line: 1073, column: 32, scope: !3488)
!3495 = !DILocation(line: 1075, column: 16, scope: !3417)
!3496 = !DILocation(line: 1075, column: 19, scope: !3417)
!3497 = !DILocation(line: 1075, column: 22, scope: !3417)
!3498 = !DILocation(line: 1075, column: 2, scope: !3417)
!3499 = !DILocation(line: 1077, column: 6, scope: !3417)
!3500 = !DILocation(line: 1077, column: 19, scope: !3417)
!3501 = !DILocation(line: 1077, column: 22, scope: !3417)
!3502 = !DILocation(line: 1077, column: 10, scope: !3417)
!3503 = !DILocation(line: 1077, column: 8, scope: !3417)
!3504 = !DILocation(line: 1077, column: 4, scope: !3417)
!3505 = !DILocation(line: 1078, column: 7, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3417, file: !3, line: 1078, column: 6)
!3507 = !DILocation(line: 1078, column: 9, scope: !3506)
!3508 = !DILocation(line: 1078, column: 17, scope: !3506)
!3509 = !DILocation(line: 1078, column: 22, scope: !3506)
!3510 = !DILocation(line: 1078, column: 26, scope: !3506)
!3511 = !DILocation(line: 1078, column: 24, scope: !3506)
!3512 = !DILocation(line: 1078, column: 29, scope: !3506)
!3513 = !DILocation(line: 1078, column: 6, scope: !3417)
!3514 = !DILocation(line: 1078, column: 38, scope: !3506)
!3515 = !DILocation(line: 1080, column: 14, scope: !3417)
!3516 = !DILocation(line: 1080, column: 27, scope: !3417)
!3517 = !DILocation(line: 1080, column: 31, scope: !3417)
!3518 = !DILocation(line: 1080, column: 18, scope: !3417)
!3519 = !DILocation(line: 1080, column: 16, scope: !3417)
!3520 = !DILocation(line: 1080, column: 3, scope: !3417)
!3521 = !DILocation(line: 1080, column: 12, scope: !3417)
!3522 = !DILocation(line: 1081, column: 8, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3417, file: !3, line: 1081, column: 6)
!3524 = !DILocation(line: 1081, column: 7, scope: !3523)
!3525 = !DILocation(line: 1081, column: 17, scope: !3523)
!3526 = !DILocation(line: 1081, column: 6, scope: !3417)
!3527 = !DILocation(line: 1081, column: 26, scope: !3523)
!3528 = !DILocation(line: 1083, column: 6, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3417, file: !3, line: 1083, column: 6)
!3530 = !DILocation(line: 1083, column: 6, scope: !3417)
!3531 = !DILocation(line: 1084, column: 13, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3529, file: !3, line: 1083, column: 12)
!3533 = !DILocation(line: 1084, column: 3, scope: !3532)
!3534 = !DILocation(line: 1084, column: 11, scope: !3532)
!3535 = !DILocation(line: 1085, column: 13, scope: !3532)
!3536 = !DILocation(line: 1085, column: 3, scope: !3532)
!3537 = !DILocation(line: 1085, column: 11, scope: !3532)
!3538 = !DILocation(line: 1086, column: 2, scope: !3532)
!3539 = !DILocation(line: 1088, column: 2, scope: !3417)
!3540 = !DILocation(line: 1089, column: 1, scope: !3417)
!3541 = distinct !DISubprogram(name: "isect_ray_plane_v3", scope: !3, file: !3, line: 1095, type: !3542, scopeLine: 1098, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!3542 = !DISubroutineType(types: !3543)
!3543 = !{!6, !7, !7, !7, !7, !7, !10, !1841}
!3544 = !DILocalVariable(name: "p1", arg: 1, scope: !3541, file: !3, line: 1095, type: !7)
!3545 = !DILocation(line: 1095, column: 37, scope: !3541)
!3546 = !DILocalVariable(name: "d", arg: 2, scope: !3541, file: !3, line: 1095, type: !7)
!3547 = !DILocation(line: 1095, column: 56, scope: !3541)
!3548 = !DILocalVariable(name: "v0", arg: 3, scope: !3541, file: !3, line: 1096, type: !7)
!3549 = !DILocation(line: 1096, column: 37, scope: !3541)
!3550 = !DILocalVariable(name: "v1", arg: 4, scope: !3541, file: !3, line: 1096, type: !7)
!3551 = !DILocation(line: 1096, column: 56, scope: !3541)
!3552 = !DILocalVariable(name: "v2", arg: 5, scope: !3541, file: !3, line: 1096, type: !7)
!3553 = !DILocation(line: 1096, column: 75, scope: !3541)
!3554 = !DILocalVariable(name: "r_lambda", arg: 6, scope: !3541, file: !3, line: 1097, type: !10)
!3555 = !DILocation(line: 1097, column: 32, scope: !3541)
!3556 = !DILocalVariable(name: "clip", arg: 7, scope: !3541, file: !3, line: 1097, type: !1841)
!3557 = !DILocation(line: 1097, column: 52, scope: !3541)
!3558 = !DILocalVariable(name: "p", scope: !3541, file: !3, line: 1099, type: !117)
!3559 = !DILocation(line: 1099, column: 8, scope: !3541)
!3560 = !DILocalVariable(name: "s", scope: !3541, file: !3, line: 1099, type: !117)
!3561 = !DILocation(line: 1099, column: 14, scope: !3541)
!3562 = !DILocalVariable(name: "e1", scope: !3541, file: !3, line: 1099, type: !117)
!3563 = !DILocation(line: 1099, column: 20, scope: !3541)
!3564 = !DILocalVariable(name: "e2", scope: !3541, file: !3, line: 1099, type: !117)
!3565 = !DILocation(line: 1099, column: 27, scope: !3541)
!3566 = !DILocalVariable(name: "q", scope: !3541, file: !3, line: 1099, type: !117)
!3567 = !DILocation(line: 1099, column: 34, scope: !3541)
!3568 = !DILocalVariable(name: "a", scope: !3541, file: !3, line: 1100, type: !9)
!3569 = !DILocation(line: 1100, column: 8, scope: !3541)
!3570 = !DILocalVariable(name: "f", scope: !3541, file: !3, line: 1100, type: !9)
!3571 = !DILocation(line: 1100, column: 11, scope: !3541)
!3572 = !DILocation(line: 1103, column: 14, scope: !3541)
!3573 = !DILocation(line: 1103, column: 18, scope: !3541)
!3574 = !DILocation(line: 1103, column: 22, scope: !3541)
!3575 = !DILocation(line: 1103, column: 2, scope: !3541)
!3576 = !DILocation(line: 1104, column: 14, scope: !3541)
!3577 = !DILocation(line: 1104, column: 18, scope: !3541)
!3578 = !DILocation(line: 1104, column: 22, scope: !3541)
!3579 = !DILocation(line: 1104, column: 2, scope: !3541)
!3580 = !DILocation(line: 1106, column: 16, scope: !3541)
!3581 = !DILocation(line: 1106, column: 19, scope: !3541)
!3582 = !DILocation(line: 1106, column: 22, scope: !3541)
!3583 = !DILocation(line: 1106, column: 2, scope: !3541)
!3584 = !DILocation(line: 1107, column: 15, scope: !3541)
!3585 = !DILocation(line: 1107, column: 19, scope: !3541)
!3586 = !DILocation(line: 1107, column: 6, scope: !3541)
!3587 = !DILocation(line: 1107, column: 4, scope: !3541)
!3588 = !DILocation(line: 1110, column: 7, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3541, file: !3, line: 1110, column: 6)
!3590 = !DILocation(line: 1110, column: 9, scope: !3589)
!3591 = !DILocation(line: 1110, column: 25, scope: !3589)
!3592 = !DILocation(line: 1110, column: 29, scope: !3589)
!3593 = !DILocation(line: 1110, column: 31, scope: !3589)
!3594 = !DILocation(line: 1110, column: 6, scope: !3541)
!3595 = !DILocation(line: 1110, column: 47, scope: !3589)
!3596 = !DILocation(line: 1111, column: 13, scope: !3541)
!3597 = !DILocation(line: 1111, column: 11, scope: !3541)
!3598 = !DILocation(line: 1111, column: 4, scope: !3541)
!3599 = !DILocation(line: 1113, column: 14, scope: !3541)
!3600 = !DILocation(line: 1113, column: 17, scope: !3541)
!3601 = !DILocation(line: 1113, column: 21, scope: !3541)
!3602 = !DILocation(line: 1113, column: 2, scope: !3541)
!3603 = !DILocation(line: 1117, column: 16, scope: !3541)
!3604 = !DILocation(line: 1117, column: 19, scope: !3541)
!3605 = !DILocation(line: 1117, column: 22, scope: !3541)
!3606 = !DILocation(line: 1117, column: 2, scope: !3541)
!3607 = !DILocation(line: 1121, column: 14, scope: !3541)
!3608 = !DILocation(line: 1121, column: 27, scope: !3541)
!3609 = !DILocation(line: 1121, column: 31, scope: !3541)
!3610 = !DILocation(line: 1121, column: 18, scope: !3541)
!3611 = !DILocation(line: 1121, column: 16, scope: !3541)
!3612 = !DILocation(line: 1121, column: 3, scope: !3541)
!3613 = !DILocation(line: 1121, column: 12, scope: !3541)
!3614 = !DILocation(line: 1122, column: 6, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3541, file: !3, line: 1122, column: 6)
!3616 = !DILocation(line: 1122, column: 11, scope: !3615)
!3617 = !DILocation(line: 1122, column: 16, scope: !3615)
!3618 = !DILocation(line: 1122, column: 15, scope: !3615)
!3619 = !DILocation(line: 1122, column: 25, scope: !3615)
!3620 = !DILocation(line: 1122, column: 6, scope: !3541)
!3621 = !DILocation(line: 1122, column: 34, scope: !3615)
!3622 = !DILocation(line: 1124, column: 2, scope: !3541)
!3623 = !DILocation(line: 1125, column: 1, scope: !3541)
!3624 = distinct !DISubprogram(name: "isect_ray_tri_epsilon_v3", scope: !3, file: !3, line: 1127, type: !3275, scopeLine: 1130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!3625 = !DILocalVariable(name: "p1", arg: 1, scope: !3624, file: !3, line: 1127, type: !7)
!3626 = !DILocation(line: 1127, column: 43, scope: !3624)
!3627 = !DILocalVariable(name: "d", arg: 2, scope: !3624, file: !3, line: 1127, type: !7)
!3628 = !DILocation(line: 1127, column: 62, scope: !3624)
!3629 = !DILocalVariable(name: "v0", arg: 3, scope: !3624, file: !3, line: 1128, type: !7)
!3630 = !DILocation(line: 1128, column: 43, scope: !3624)
!3631 = !DILocalVariable(name: "v1", arg: 4, scope: !3624, file: !3, line: 1128, type: !7)
!3632 = !DILocation(line: 1128, column: 62, scope: !3624)
!3633 = !DILocalVariable(name: "v2", arg: 5, scope: !3624, file: !3, line: 1128, type: !7)
!3634 = !DILocation(line: 1128, column: 81, scope: !3624)
!3635 = !DILocalVariable(name: "r_lambda", arg: 6, scope: !3624, file: !3, line: 1129, type: !10)
!3636 = !DILocation(line: 1129, column: 38, scope: !3624)
!3637 = !DILocalVariable(name: "uv", arg: 7, scope: !3624, file: !3, line: 1129, type: !10)
!3638 = !DILocation(line: 1129, column: 54, scope: !3624)
!3639 = !DILocalVariable(name: "epsilon", arg: 8, scope: !3624, file: !3, line: 1129, type: !8)
!3640 = !DILocation(line: 1129, column: 73, scope: !3624)
!3641 = !DILocalVariable(name: "p", scope: !3624, file: !3, line: 1131, type: !117)
!3642 = !DILocation(line: 1131, column: 8, scope: !3624)
!3643 = !DILocalVariable(name: "s", scope: !3624, file: !3, line: 1131, type: !117)
!3644 = !DILocation(line: 1131, column: 14, scope: !3624)
!3645 = !DILocalVariable(name: "e1", scope: !3624, file: !3, line: 1131, type: !117)
!3646 = !DILocation(line: 1131, column: 20, scope: !3624)
!3647 = !DILocalVariable(name: "e2", scope: !3624, file: !3, line: 1131, type: !117)
!3648 = !DILocation(line: 1131, column: 27, scope: !3624)
!3649 = !DILocalVariable(name: "q", scope: !3624, file: !3, line: 1131, type: !117)
!3650 = !DILocation(line: 1131, column: 34, scope: !3624)
!3651 = !DILocalVariable(name: "a", scope: !3624, file: !3, line: 1132, type: !9)
!3652 = !DILocation(line: 1132, column: 8, scope: !3624)
!3653 = !DILocalVariable(name: "f", scope: !3624, file: !3, line: 1132, type: !9)
!3654 = !DILocation(line: 1132, column: 11, scope: !3624)
!3655 = !DILocalVariable(name: "u", scope: !3624, file: !3, line: 1132, type: !9)
!3656 = !DILocation(line: 1132, column: 14, scope: !3624)
!3657 = !DILocalVariable(name: "v", scope: !3624, file: !3, line: 1132, type: !9)
!3658 = !DILocation(line: 1132, column: 17, scope: !3624)
!3659 = !DILocation(line: 1134, column: 14, scope: !3624)
!3660 = !DILocation(line: 1134, column: 18, scope: !3624)
!3661 = !DILocation(line: 1134, column: 22, scope: !3624)
!3662 = !DILocation(line: 1134, column: 2, scope: !3624)
!3663 = !DILocation(line: 1135, column: 14, scope: !3624)
!3664 = !DILocation(line: 1135, column: 18, scope: !3624)
!3665 = !DILocation(line: 1135, column: 22, scope: !3624)
!3666 = !DILocation(line: 1135, column: 2, scope: !3624)
!3667 = !DILocation(line: 1137, column: 16, scope: !3624)
!3668 = !DILocation(line: 1137, column: 19, scope: !3624)
!3669 = !DILocation(line: 1137, column: 22, scope: !3624)
!3670 = !DILocation(line: 1137, column: 2, scope: !3624)
!3671 = !DILocation(line: 1138, column: 15, scope: !3624)
!3672 = !DILocation(line: 1138, column: 19, scope: !3624)
!3673 = !DILocation(line: 1138, column: 6, scope: !3624)
!3674 = !DILocation(line: 1138, column: 4, scope: !3624)
!3675 = !DILocation(line: 1139, column: 6, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3624, file: !3, line: 1139, column: 6)
!3677 = !DILocation(line: 1139, column: 8, scope: !3676)
!3678 = !DILocation(line: 1139, column: 6, scope: !3624)
!3679 = !DILocation(line: 1139, column: 17, scope: !3676)
!3680 = !DILocation(line: 1140, column: 13, scope: !3624)
!3681 = !DILocation(line: 1140, column: 11, scope: !3624)
!3682 = !DILocation(line: 1140, column: 4, scope: !3624)
!3683 = !DILocation(line: 1142, column: 14, scope: !3624)
!3684 = !DILocation(line: 1142, column: 17, scope: !3624)
!3685 = !DILocation(line: 1142, column: 21, scope: !3624)
!3686 = !DILocation(line: 1142, column: 2, scope: !3624)
!3687 = !DILocation(line: 1144, column: 6, scope: !3624)
!3688 = !DILocation(line: 1144, column: 19, scope: !3624)
!3689 = !DILocation(line: 1144, column: 22, scope: !3624)
!3690 = !DILocation(line: 1144, column: 10, scope: !3624)
!3691 = !DILocation(line: 1144, column: 8, scope: !3624)
!3692 = !DILocation(line: 1144, column: 4, scope: !3624)
!3693 = !DILocation(line: 1145, column: 7, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !3624, file: !3, line: 1145, column: 6)
!3695 = !DILocation(line: 1145, column: 12, scope: !3694)
!3696 = !DILocation(line: 1145, column: 11, scope: !3694)
!3697 = !DILocation(line: 1145, column: 9, scope: !3694)
!3698 = !DILocation(line: 1145, column: 21, scope: !3694)
!3699 = !DILocation(line: 1145, column: 25, scope: !3694)
!3700 = !DILocation(line: 1145, column: 36, scope: !3694)
!3701 = !DILocation(line: 1145, column: 34, scope: !3694)
!3702 = !DILocation(line: 1145, column: 27, scope: !3694)
!3703 = !DILocation(line: 1145, column: 6, scope: !3624)
!3704 = !DILocation(line: 1145, column: 46, scope: !3694)
!3705 = !DILocation(line: 1147, column: 16, scope: !3624)
!3706 = !DILocation(line: 1147, column: 19, scope: !3624)
!3707 = !DILocation(line: 1147, column: 22, scope: !3624)
!3708 = !DILocation(line: 1147, column: 2, scope: !3624)
!3709 = !DILocation(line: 1149, column: 6, scope: !3624)
!3710 = !DILocation(line: 1149, column: 19, scope: !3624)
!3711 = !DILocation(line: 1149, column: 22, scope: !3624)
!3712 = !DILocation(line: 1149, column: 10, scope: !3624)
!3713 = !DILocation(line: 1149, column: 8, scope: !3624)
!3714 = !DILocation(line: 1149, column: 4, scope: !3624)
!3715 = !DILocation(line: 1150, column: 7, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3624, file: !3, line: 1150, column: 6)
!3717 = !DILocation(line: 1150, column: 12, scope: !3716)
!3718 = !DILocation(line: 1150, column: 11, scope: !3716)
!3719 = !DILocation(line: 1150, column: 9, scope: !3716)
!3720 = !DILocation(line: 1150, column: 21, scope: !3716)
!3721 = !DILocation(line: 1150, column: 26, scope: !3716)
!3722 = !DILocation(line: 1150, column: 30, scope: !3716)
!3723 = !DILocation(line: 1150, column: 28, scope: !3716)
!3724 = !DILocation(line: 1150, column: 42, scope: !3716)
!3725 = !DILocation(line: 1150, column: 40, scope: !3716)
!3726 = !DILocation(line: 1150, column: 33, scope: !3716)
!3727 = !DILocation(line: 1150, column: 6, scope: !3624)
!3728 = !DILocation(line: 1150, column: 52, scope: !3716)
!3729 = !DILocation(line: 1152, column: 14, scope: !3624)
!3730 = !DILocation(line: 1152, column: 27, scope: !3624)
!3731 = !DILocation(line: 1152, column: 31, scope: !3624)
!3732 = !DILocation(line: 1152, column: 18, scope: !3624)
!3733 = !DILocation(line: 1152, column: 16, scope: !3624)
!3734 = !DILocation(line: 1152, column: 3, scope: !3624)
!3735 = !DILocation(line: 1152, column: 12, scope: !3624)
!3736 = !DILocation(line: 1153, column: 8, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3624, file: !3, line: 1153, column: 6)
!3738 = !DILocation(line: 1153, column: 7, scope: !3737)
!3739 = !DILocation(line: 1153, column: 17, scope: !3737)
!3740 = !DILocation(line: 1153, column: 6, scope: !3624)
!3741 = !DILocation(line: 1153, column: 26, scope: !3737)
!3742 = !DILocation(line: 1155, column: 6, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3624, file: !3, line: 1155, column: 6)
!3744 = !DILocation(line: 1155, column: 6, scope: !3624)
!3745 = !DILocation(line: 1156, column: 11, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 1155, column: 10)
!3747 = !DILocation(line: 1156, column: 3, scope: !3746)
!3748 = !DILocation(line: 1156, column: 9, scope: !3746)
!3749 = !DILocation(line: 1157, column: 11, scope: !3746)
!3750 = !DILocation(line: 1157, column: 3, scope: !3746)
!3751 = !DILocation(line: 1157, column: 9, scope: !3746)
!3752 = !DILocation(line: 1158, column: 2, scope: !3746)
!3753 = !DILocation(line: 1160, column: 2, scope: !3624)
!3754 = !DILocation(line: 1161, column: 1, scope: !3624)
!3755 = distinct !DISubprogram(name: "isect_ray_tri_threshold_v3", scope: !3, file: !3, line: 1163, type: !3275, scopeLine: 1166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!3756 = !DILocalVariable(name: "p1", arg: 1, scope: !3755, file: !3, line: 1163, type: !7)
!3757 = !DILocation(line: 1163, column: 45, scope: !3755)
!3758 = !DILocalVariable(name: "d", arg: 2, scope: !3755, file: !3, line: 1163, type: !7)
!3759 = !DILocation(line: 1163, column: 64, scope: !3755)
!3760 = !DILocalVariable(name: "v0", arg: 3, scope: !3755, file: !3, line: 1164, type: !7)
!3761 = !DILocation(line: 1164, column: 45, scope: !3755)
!3762 = !DILocalVariable(name: "v1", arg: 4, scope: !3755, file: !3, line: 1164, type: !7)
!3763 = !DILocation(line: 1164, column: 64, scope: !3755)
!3764 = !DILocalVariable(name: "v2", arg: 5, scope: !3755, file: !3, line: 1164, type: !7)
!3765 = !DILocation(line: 1164, column: 83, scope: !3755)
!3766 = !DILocalVariable(name: "r_lambda", arg: 6, scope: !3755, file: !3, line: 1165, type: !10)
!3767 = !DILocation(line: 1165, column: 40, scope: !3755)
!3768 = !DILocalVariable(name: "r_uv", arg: 7, scope: !3755, file: !3, line: 1165, type: !10)
!3769 = !DILocation(line: 1165, column: 56, scope: !3755)
!3770 = !DILocalVariable(name: "threshold", arg: 8, scope: !3755, file: !3, line: 1165, type: !8)
!3771 = !DILocation(line: 1165, column: 77, scope: !3755)
!3772 = !DILocalVariable(name: "p", scope: !3755, file: !3, line: 1167, type: !117)
!3773 = !DILocation(line: 1167, column: 8, scope: !3755)
!3774 = !DILocalVariable(name: "s", scope: !3755, file: !3, line: 1167, type: !117)
!3775 = !DILocation(line: 1167, column: 14, scope: !3755)
!3776 = !DILocalVariable(name: "e1", scope: !3755, file: !3, line: 1167, type: !117)
!3777 = !DILocation(line: 1167, column: 20, scope: !3755)
!3778 = !DILocalVariable(name: "e2", scope: !3755, file: !3, line: 1167, type: !117)
!3779 = !DILocation(line: 1167, column: 27, scope: !3755)
!3780 = !DILocalVariable(name: "q", scope: !3755, file: !3, line: 1167, type: !117)
!3781 = !DILocation(line: 1167, column: 34, scope: !3755)
!3782 = !DILocalVariable(name: "a", scope: !3755, file: !3, line: 1168, type: !9)
!3783 = !DILocation(line: 1168, column: 8, scope: !3755)
!3784 = !DILocalVariable(name: "f", scope: !3755, file: !3, line: 1168, type: !9)
!3785 = !DILocation(line: 1168, column: 11, scope: !3755)
!3786 = !DILocalVariable(name: "u", scope: !3755, file: !3, line: 1168, type: !9)
!3787 = !DILocation(line: 1168, column: 14, scope: !3755)
!3788 = !DILocalVariable(name: "v", scope: !3755, file: !3, line: 1168, type: !9)
!3789 = !DILocation(line: 1168, column: 17, scope: !3755)
!3790 = !DILocalVariable(name: "du", scope: !3755, file: !3, line: 1169, type: !9)
!3791 = !DILocation(line: 1169, column: 8, scope: !3755)
!3792 = !DILocalVariable(name: "dv", scope: !3755, file: !3, line: 1169, type: !9)
!3793 = !DILocation(line: 1169, column: 12, scope: !3755)
!3794 = !DILocation(line: 1171, column: 14, scope: !3755)
!3795 = !DILocation(line: 1171, column: 18, scope: !3755)
!3796 = !DILocation(line: 1171, column: 22, scope: !3755)
!3797 = !DILocation(line: 1171, column: 2, scope: !3755)
!3798 = !DILocation(line: 1172, column: 14, scope: !3755)
!3799 = !DILocation(line: 1172, column: 18, scope: !3755)
!3800 = !DILocation(line: 1172, column: 22, scope: !3755)
!3801 = !DILocation(line: 1172, column: 2, scope: !3755)
!3802 = !DILocation(line: 1174, column: 16, scope: !3755)
!3803 = !DILocation(line: 1174, column: 19, scope: !3755)
!3804 = !DILocation(line: 1174, column: 22, scope: !3755)
!3805 = !DILocation(line: 1174, column: 2, scope: !3755)
!3806 = !DILocation(line: 1175, column: 15, scope: !3755)
!3807 = !DILocation(line: 1175, column: 19, scope: !3755)
!3808 = !DILocation(line: 1175, column: 6, scope: !3755)
!3809 = !DILocation(line: 1175, column: 4, scope: !3755)
!3810 = !DILocation(line: 1176, column: 7, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3755, file: !3, line: 1176, column: 6)
!3812 = !DILocation(line: 1176, column: 9, scope: !3811)
!3813 = !DILocation(line: 1176, column: 23, scope: !3811)
!3814 = !DILocation(line: 1176, column: 27, scope: !3811)
!3815 = !DILocation(line: 1176, column: 29, scope: !3811)
!3816 = !DILocation(line: 1176, column: 6, scope: !3755)
!3817 = !DILocation(line: 1176, column: 43, scope: !3811)
!3818 = !DILocation(line: 1177, column: 13, scope: !3755)
!3819 = !DILocation(line: 1177, column: 11, scope: !3755)
!3820 = !DILocation(line: 1177, column: 4, scope: !3755)
!3821 = !DILocation(line: 1179, column: 14, scope: !3755)
!3822 = !DILocation(line: 1179, column: 17, scope: !3755)
!3823 = !DILocation(line: 1179, column: 21, scope: !3755)
!3824 = !DILocation(line: 1179, column: 2, scope: !3755)
!3825 = !DILocation(line: 1181, column: 16, scope: !3755)
!3826 = !DILocation(line: 1181, column: 19, scope: !3755)
!3827 = !DILocation(line: 1181, column: 22, scope: !3755)
!3828 = !DILocation(line: 1181, column: 2, scope: !3755)
!3829 = !DILocation(line: 1182, column: 14, scope: !3755)
!3830 = !DILocation(line: 1182, column: 27, scope: !3755)
!3831 = !DILocation(line: 1182, column: 31, scope: !3755)
!3832 = !DILocation(line: 1182, column: 18, scope: !3755)
!3833 = !DILocation(line: 1182, column: 16, scope: !3755)
!3834 = !DILocation(line: 1182, column: 3, scope: !3755)
!3835 = !DILocation(line: 1182, column: 12, scope: !3755)
!3836 = !DILocation(line: 1183, column: 8, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3755, file: !3, line: 1183, column: 6)
!3838 = !DILocation(line: 1183, column: 7, scope: !3837)
!3839 = !DILocation(line: 1183, column: 17, scope: !3837)
!3840 = !DILocation(line: 1183, column: 6, scope: !3755)
!3841 = !DILocation(line: 1183, column: 26, scope: !3837)
!3842 = !DILocation(line: 1185, column: 6, scope: !3755)
!3843 = !DILocation(line: 1185, column: 19, scope: !3755)
!3844 = !DILocation(line: 1185, column: 22, scope: !3755)
!3845 = !DILocation(line: 1185, column: 10, scope: !3755)
!3846 = !DILocation(line: 1185, column: 8, scope: !3755)
!3847 = !DILocation(line: 1185, column: 4, scope: !3755)
!3848 = !DILocation(line: 1186, column: 6, scope: !3755)
!3849 = !DILocation(line: 1186, column: 19, scope: !3755)
!3850 = !DILocation(line: 1186, column: 22, scope: !3755)
!3851 = !DILocation(line: 1186, column: 10, scope: !3755)
!3852 = !DILocation(line: 1186, column: 8, scope: !3755)
!3853 = !DILocation(line: 1186, column: 4, scope: !3755)
!3854 = !DILocation(line: 1188, column: 6, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3755, file: !3, line: 1188, column: 6)
!3856 = !DILocation(line: 1188, column: 8, scope: !3855)
!3857 = !DILocation(line: 1188, column: 12, scope: !3855)
!3858 = !DILocation(line: 1188, column: 15, scope: !3855)
!3859 = !DILocation(line: 1188, column: 17, scope: !3855)
!3860 = !DILocation(line: 1188, column: 21, scope: !3855)
!3861 = !DILocation(line: 1188, column: 24, scope: !3855)
!3862 = !DILocation(line: 1188, column: 28, scope: !3855)
!3863 = !DILocation(line: 1188, column: 26, scope: !3855)
!3864 = !DILocation(line: 1188, column: 30, scope: !3855)
!3865 = !DILocation(line: 1188, column: 6, scope: !3755)
!3866 = !DILocalVariable(name: "t", scope: !3867, file: !3, line: 1189, type: !9)
!3867 = distinct !DILexicalBlock(scope: !3855, file: !3, line: 1188, column: 35)
!3868 = !DILocation(line: 1189, column: 9, scope: !3867)
!3869 = !DILocation(line: 1189, column: 14, scope: !3867)
!3870 = !DILocation(line: 1189, column: 18, scope: !3867)
!3871 = !DILocation(line: 1189, column: 16, scope: !3867)
!3872 = !DILocation(line: 1189, column: 20, scope: !3867)
!3873 = !DILocation(line: 1189, column: 25, scope: !3867)
!3874 = !DILocation(line: 1190, column: 8, scope: !3867)
!3875 = !DILocation(line: 1190, column: 12, scope: !3867)
!3876 = !DILocation(line: 1190, column: 10, scope: !3867)
!3877 = !DILocation(line: 1190, column: 6, scope: !3867)
!3878 = !DILocation(line: 1191, column: 8, scope: !3867)
!3879 = !DILocation(line: 1191, column: 12, scope: !3867)
!3880 = !DILocation(line: 1191, column: 10, scope: !3867)
!3881 = !DILocation(line: 1191, column: 6, scope: !3867)
!3882 = !DILocation(line: 1192, column: 2, scope: !3867)
!3883 = !DILocation(line: 1194, column: 12, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3885, file: !3, line: 1194, column: 12)
!3885 = distinct !DILexicalBlock(scope: !3855, file: !3, line: 1193, column: 7)
!3886 = !DILocation(line: 1194, column: 14, scope: !3884)
!3887 = !DILocation(line: 1194, column: 12, scope: !3885)
!3888 = !DILocation(line: 1194, column: 24, scope: !3884)
!3889 = !DILocation(line: 1194, column: 22, scope: !3884)
!3890 = !DILocation(line: 1194, column: 19, scope: !3884)
!3891 = !DILocation(line: 1195, column: 12, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3884, file: !3, line: 1195, column: 12)
!3893 = !DILocation(line: 1195, column: 14, scope: !3892)
!3894 = !DILocation(line: 1195, column: 12, scope: !3884)
!3895 = !DILocation(line: 1195, column: 24, scope: !3892)
!3896 = !DILocation(line: 1195, column: 26, scope: !3892)
!3897 = !DILocation(line: 1195, column: 22, scope: !3892)
!3898 = !DILocation(line: 1195, column: 19, scope: !3892)
!3899 = !DILocation(line: 1196, column: 22, scope: !3892)
!3900 = !DILocation(line: 1198, column: 12, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3885, file: !3, line: 1198, column: 12)
!3902 = !DILocation(line: 1198, column: 14, scope: !3901)
!3903 = !DILocation(line: 1198, column: 12, scope: !3885)
!3904 = !DILocation(line: 1198, column: 24, scope: !3901)
!3905 = !DILocation(line: 1198, column: 22, scope: !3901)
!3906 = !DILocation(line: 1198, column: 19, scope: !3901)
!3907 = !DILocation(line: 1199, column: 12, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3901, file: !3, line: 1199, column: 12)
!3909 = !DILocation(line: 1199, column: 14, scope: !3908)
!3910 = !DILocation(line: 1199, column: 12, scope: !3901)
!3911 = !DILocation(line: 1199, column: 24, scope: !3908)
!3912 = !DILocation(line: 1199, column: 26, scope: !3908)
!3913 = !DILocation(line: 1199, column: 22, scope: !3908)
!3914 = !DILocation(line: 1199, column: 19, scope: !3908)
!3915 = !DILocation(line: 1200, column: 22, scope: !3908)
!3916 = !DILocation(line: 1203, column: 12, scope: !3755)
!3917 = !DILocation(line: 1203, column: 16, scope: !3755)
!3918 = !DILocation(line: 1203, column: 2, scope: !3755)
!3919 = !DILocation(line: 1204, column: 12, scope: !3755)
!3920 = !DILocation(line: 1204, column: 16, scope: !3755)
!3921 = !DILocation(line: 1204, column: 2, scope: !3755)
!3922 = !DILocation(line: 1206, column: 21, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3755, file: !3, line: 1206, column: 6)
!3924 = !DILocation(line: 1206, column: 6, scope: !3923)
!3925 = !DILocation(line: 1206, column: 42, scope: !3923)
!3926 = !DILocation(line: 1206, column: 27, scope: !3923)
!3927 = !DILocation(line: 1206, column: 25, scope: !3923)
!3928 = !DILocation(line: 1206, column: 48, scope: !3923)
!3929 = !DILocation(line: 1206, column: 60, scope: !3923)
!3930 = !DILocation(line: 1206, column: 58, scope: !3923)
!3931 = !DILocation(line: 1206, column: 46, scope: !3923)
!3932 = !DILocation(line: 1206, column: 6, scope: !3755)
!3933 = !DILocation(line: 1207, column: 3, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3923, file: !3, line: 1206, column: 71)
!3935 = !DILocation(line: 1210, column: 6, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3755, file: !3, line: 1210, column: 6)
!3937 = !DILocation(line: 1210, column: 6, scope: !3755)
!3938 = !DILocation(line: 1211, column: 13, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3936, file: !3, line: 1210, column: 12)
!3940 = !DILocation(line: 1211, column: 3, scope: !3939)
!3941 = !DILocation(line: 1211, column: 11, scope: !3939)
!3942 = !DILocation(line: 1212, column: 13, scope: !3939)
!3943 = !DILocation(line: 1212, column: 3, scope: !3939)
!3944 = !DILocation(line: 1212, column: 11, scope: !3939)
!3945 = !DILocation(line: 1213, column: 2, scope: !3939)
!3946 = !DILocation(line: 1215, column: 2, scope: !3755)
!3947 = !DILocation(line: 1216, column: 1, scope: !3755)
!3948 = distinct !DISubprogram(name: "isect_point_planes_v3", scope: !3, file: !3, line: 1221, type: !3949, scopeLine: 1222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!3949 = !DISubroutineType(types: !3950)
!3950 = !{!6, !3951, !17, !7}
!3951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3952, size: 64)
!3952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 128, elements: !3953)
!3953 = !{!3954}
!3954 = !DISubrange(count: 4)
!3955 = !DILocalVariable(name: "planes", arg: 1, scope: !3948, file: !3, line: 1221, type: !3951)
!3956 = !DILocation(line: 1221, column: 36, scope: !3948)
!3957 = !DILocalVariable(name: "totplane", arg: 2, scope: !3948, file: !3, line: 1221, type: !17)
!3958 = !DILocation(line: 1221, column: 52, scope: !3948)
!3959 = !DILocalVariable(name: "p", arg: 3, scope: !3948, file: !3, line: 1221, type: !7)
!3960 = !DILocation(line: 1221, column: 74, scope: !3948)
!3961 = !DILocalVariable(name: "i", scope: !3948, file: !3, line: 1223, type: !17)
!3962 = !DILocation(line: 1223, column: 6, scope: !3948)
!3963 = !DILocation(line: 1225, column: 9, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3948, file: !3, line: 1225, column: 2)
!3965 = !DILocation(line: 1225, column: 7, scope: !3964)
!3966 = !DILocation(line: 1225, column: 14, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3964, file: !3, line: 1225, column: 2)
!3968 = !DILocation(line: 1225, column: 18, scope: !3967)
!3969 = !DILocation(line: 1225, column: 16, scope: !3967)
!3970 = !DILocation(line: 1225, column: 2, scope: !3964)
!3971 = !DILocation(line: 1226, column: 27, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3973, file: !3, line: 1226, column: 7)
!3973 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 1225, column: 33)
!3974 = !DILocation(line: 1226, column: 34, scope: !3972)
!3975 = !DILocation(line: 1226, column: 38, scope: !3972)
!3976 = !DILocation(line: 1226, column: 7, scope: !3972)
!3977 = !DILocation(line: 1226, column: 41, scope: !3972)
!3978 = !DILocation(line: 1226, column: 7, scope: !3973)
!3979 = !DILocation(line: 1227, column: 4, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 1226, column: 49)
!3981 = !DILocation(line: 1229, column: 2, scope: !3973)
!3982 = !DILocation(line: 1225, column: 29, scope: !3967)
!3983 = !DILocation(line: 1225, column: 2, scope: !3967)
!3984 = distinct !{!3984, !3970, !3985}
!3985 = !DILocation(line: 1229, column: 2, scope: !3964)
!3986 = !DILocation(line: 1231, column: 2, scope: !3948)
!3987 = !DILocation(line: 1232, column: 1, scope: !3948)
!3988 = distinct !DISubprogram(name: "isect_line_plane_v3", scope: !3, file: !3, line: 1245, type: !3989, scopeLine: 1248, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!3989 = !DISubroutineType(types: !3990)
!3990 = !{!6, !10, !7, !7, !7, !7}
!3991 = !DILocalVariable(name: "out", arg: 1, scope: !3988, file: !3, line: 1245, type: !10)
!3992 = !DILocation(line: 1245, column: 32, scope: !3988)
!3993 = !DILocalVariable(name: "l1", arg: 2, scope: !3988, file: !3, line: 1246, type: !7)
!3994 = !DILocation(line: 1246, column: 38, scope: !3988)
!3995 = !DILocalVariable(name: "l2", arg: 3, scope: !3988, file: !3, line: 1246, type: !7)
!3996 = !DILocation(line: 1246, column: 57, scope: !3988)
!3997 = !DILocalVariable(name: "plane_co", arg: 4, scope: !3988, file: !3, line: 1247, type: !7)
!3998 = !DILocation(line: 1247, column: 38, scope: !3988)
!3999 = !DILocalVariable(name: "plane_no", arg: 5, scope: !3988, file: !3, line: 1247, type: !7)
!4000 = !DILocation(line: 1247, column: 63, scope: !3988)
!4001 = !DILocalVariable(name: "u", scope: !3988, file: !3, line: 1249, type: !117)
!4002 = !DILocation(line: 1249, column: 8, scope: !3988)
!4003 = !DILocalVariable(name: "h", scope: !3988, file: !3, line: 1249, type: !117)
!4004 = !DILocation(line: 1249, column: 14, scope: !3988)
!4005 = !DILocalVariable(name: "dot", scope: !3988, file: !3, line: 1250, type: !9)
!4006 = !DILocation(line: 1250, column: 8, scope: !3988)
!4007 = !DILocation(line: 1252, column: 14, scope: !3988)
!4008 = !DILocation(line: 1252, column: 17, scope: !3988)
!4009 = !DILocation(line: 1252, column: 21, scope: !3988)
!4010 = !DILocation(line: 1252, column: 2, scope: !3988)
!4011 = !DILocation(line: 1253, column: 14, scope: !3988)
!4012 = !DILocation(line: 1253, column: 17, scope: !3988)
!4013 = !DILocation(line: 1253, column: 21, scope: !3988)
!4014 = !DILocation(line: 1253, column: 2, scope: !3988)
!4015 = !DILocation(line: 1254, column: 17, scope: !3988)
!4016 = !DILocation(line: 1254, column: 27, scope: !3988)
!4017 = !DILocation(line: 1254, column: 8, scope: !3988)
!4018 = !DILocation(line: 1254, column: 6, scope: !3988)
!4019 = !DILocation(line: 1256, column: 12, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !3988, file: !3, line: 1256, column: 6)
!4021 = !DILocation(line: 1256, column: 6, scope: !4020)
!4022 = !DILocation(line: 1256, column: 17, scope: !4020)
!4023 = !DILocation(line: 1256, column: 6, scope: !3988)
!4024 = !DILocalVariable(name: "lambda", scope: !4025, file: !3, line: 1257, type: !9)
!4025 = distinct !DILexicalBlock(scope: !4020, file: !3, line: 1256, column: 32)
!4026 = !DILocation(line: 1257, column: 9, scope: !4025)
!4027 = !DILocation(line: 1257, column: 28, scope: !4025)
!4028 = !DILocation(line: 1257, column: 38, scope: !4025)
!4029 = !DILocation(line: 1257, column: 19, scope: !4025)
!4030 = !DILocation(line: 1257, column: 18, scope: !4025)
!4031 = !DILocation(line: 1257, column: 43, scope: !4025)
!4032 = !DILocation(line: 1257, column: 41, scope: !4025)
!4033 = !DILocation(line: 1258, column: 18, scope: !4025)
!4034 = !DILocation(line: 1258, column: 23, scope: !4025)
!4035 = !DILocation(line: 1258, column: 27, scope: !4025)
!4036 = !DILocation(line: 1258, column: 30, scope: !4025)
!4037 = !DILocation(line: 1258, column: 3, scope: !4025)
!4038 = !DILocation(line: 1259, column: 3, scope: !4025)
!4039 = !DILocation(line: 1263, column: 3, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !4020, file: !3, line: 1261, column: 7)
!4041 = !DILocation(line: 1265, column: 1, scope: !3988)
!4042 = distinct !DISubprogram(name: "isect_plane_plane_v3", scope: !3, file: !3, line: 1281, type: !4043, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!4043 = !DISubroutineType(types: !4044)
!4044 = !{!6, !10, !10, !7, !7, !7, !7}
!4045 = !DILocalVariable(name: "r_isect_co", arg: 1, scope: !4042, file: !3, line: 1281, type: !10)
!4046 = !DILocation(line: 1281, column: 33, scope: !4042)
!4047 = !DILocalVariable(name: "r_isect_no", arg: 2, scope: !4042, file: !3, line: 1281, type: !10)
!4048 = !DILocation(line: 1281, column: 54, scope: !4042)
!4049 = !DILocalVariable(name: "plane_a_co", arg: 3, scope: !4042, file: !3, line: 1282, type: !7)
!4050 = !DILocation(line: 1282, column: 39, scope: !4042)
!4051 = !DILocalVariable(name: "plane_a_no", arg: 4, scope: !4042, file: !3, line: 1282, type: !7)
!4052 = !DILocation(line: 1282, column: 66, scope: !4042)
!4053 = !DILocalVariable(name: "plane_b_co", arg: 5, scope: !4042, file: !3, line: 1283, type: !7)
!4054 = !DILocation(line: 1283, column: 39, scope: !4042)
!4055 = !DILocalVariable(name: "plane_b_no", arg: 6, scope: !4042, file: !3, line: 1283, type: !7)
!4056 = !DILocation(line: 1283, column: 66, scope: !4042)
!4057 = !DILocalVariable(name: "plane_a_co_other", scope: !4042, file: !3, line: 1285, type: !117)
!4058 = !DILocation(line: 1285, column: 8, scope: !4042)
!4059 = !DILocation(line: 1286, column: 16, scope: !4042)
!4060 = !DILocation(line: 1286, column: 28, scope: !4042)
!4061 = !DILocation(line: 1286, column: 40, scope: !4042)
!4062 = !DILocation(line: 1286, column: 2, scope: !4042)
!4063 = !DILocation(line: 1287, column: 16, scope: !4042)
!4064 = !DILocation(line: 1287, column: 34, scope: !4042)
!4065 = !DILocation(line: 1287, column: 46, scope: !4042)
!4066 = !DILocation(line: 1287, column: 2, scope: !4042)
!4067 = !DILocation(line: 1288, column: 12, scope: !4042)
!4068 = !DILocation(line: 1288, column: 30, scope: !4042)
!4069 = !DILocation(line: 1288, column: 2, scope: !4042)
!4070 = !DILocation(line: 1289, column: 29, scope: !4042)
!4071 = !DILocation(line: 1289, column: 41, scope: !4042)
!4072 = !DILocation(line: 1289, column: 53, scope: !4042)
!4073 = !DILocation(line: 1289, column: 71, scope: !4042)
!4074 = !DILocation(line: 1289, column: 83, scope: !4042)
!4075 = !DILocation(line: 1289, column: 9, scope: !4042)
!4076 = !DILocation(line: 1289, column: 2, scope: !4042)
!4077 = distinct !DISubprogram(name: "isect_sweeping_sphere_tri_v3", scope: !3, file: !3, line: 1330, type: !4078, scopeLine: 1333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!4078 = !DISubroutineType(types: !4079)
!4079 = !{!6, !7, !7, !8, !7, !7, !7, !10, !10}
!4080 = !DILocalVariable(name: "p1", arg: 1, scope: !4077, file: !3, line: 1330, type: !7)
!4081 = !DILocation(line: 1330, column: 47, scope: !4077)
!4082 = !DILocalVariable(name: "p2", arg: 2, scope: !4077, file: !3, line: 1330, type: !7)
!4083 = !DILocation(line: 1330, column: 66, scope: !4077)
!4084 = !DILocalVariable(name: "radius", arg: 3, scope: !4077, file: !3, line: 1330, type: !8)
!4085 = !DILocation(line: 1330, column: 85, scope: !4077)
!4086 = !DILocalVariable(name: "v0", arg: 4, scope: !4077, file: !3, line: 1331, type: !7)
!4087 = !DILocation(line: 1331, column: 47, scope: !4077)
!4088 = !DILocalVariable(name: "v1", arg: 5, scope: !4077, file: !3, line: 1331, type: !7)
!4089 = !DILocation(line: 1331, column: 66, scope: !4077)
!4090 = !DILocalVariable(name: "v2", arg: 6, scope: !4077, file: !3, line: 1331, type: !7)
!4091 = !DILocation(line: 1331, column: 85, scope: !4077)
!4092 = !DILocalVariable(name: "r_lambda", arg: 7, scope: !4077, file: !3, line: 1332, type: !10)
!4093 = !DILocation(line: 1332, column: 42, scope: !4077)
!4094 = !DILocalVariable(name: "ipoint", arg: 8, scope: !4077, file: !3, line: 1332, type: !10)
!4095 = !DILocation(line: 1332, column: 58, scope: !4077)
!4096 = !DILocalVariable(name: "e1", scope: !4077, file: !3, line: 1334, type: !117)
!4097 = !DILocation(line: 1334, column: 8, scope: !4077)
!4098 = !DILocalVariable(name: "e2", scope: !4077, file: !3, line: 1334, type: !117)
!4099 = !DILocation(line: 1334, column: 15, scope: !4077)
!4100 = !DILocalVariable(name: "e3", scope: !4077, file: !3, line: 1334, type: !117)
!4101 = !DILocation(line: 1334, column: 22, scope: !4077)
!4102 = !DILocalVariable(name: "point", scope: !4077, file: !3, line: 1334, type: !117)
!4103 = !DILocation(line: 1334, column: 29, scope: !4077)
!4104 = !DILocalVariable(name: "vel", scope: !4077, file: !3, line: 1334, type: !117)
!4105 = !DILocation(line: 1334, column: 39, scope: !4077)
!4106 = !DILocalVariable(name: "nor", scope: !4077, file: !3, line: 1334, type: !117)
!4107 = !DILocation(line: 1334, column: 60, scope: !4077)
!4108 = !DILocalVariable(name: "temp", scope: !4077, file: !3, line: 1334, type: !117)
!4109 = !DILocation(line: 1334, column: 68, scope: !4077)
!4110 = !DILocalVariable(name: "bv", scope: !4077, file: !3, line: 1334, type: !117)
!4111 = !DILocation(line: 1334, column: 77, scope: !4077)
!4112 = !DILocalVariable(name: "a", scope: !4077, file: !3, line: 1335, type: !9)
!4113 = !DILocation(line: 1335, column: 8, scope: !4077)
!4114 = !DILocalVariable(name: "b", scope: !4077, file: !3, line: 1335, type: !9)
!4115 = !DILocation(line: 1335, column: 11, scope: !4077)
!4116 = !DILocalVariable(name: "c", scope: !4077, file: !3, line: 1335, type: !9)
!4117 = !DILocation(line: 1335, column: 14, scope: !4077)
!4118 = !DILocalVariable(name: "d", scope: !4077, file: !3, line: 1335, type: !9)
!4119 = !DILocation(line: 1335, column: 17, scope: !4077)
!4120 = !DILocalVariable(name: "e", scope: !4077, file: !3, line: 1335, type: !9)
!4121 = !DILocation(line: 1335, column: 20, scope: !4077)
!4122 = !DILocalVariable(name: "x", scope: !4077, file: !3, line: 1335, type: !9)
!4123 = !DILocation(line: 1335, column: 23, scope: !4077)
!4124 = !DILocalVariable(name: "y", scope: !4077, file: !3, line: 1335, type: !9)
!4125 = !DILocation(line: 1335, column: 26, scope: !4077)
!4126 = !DILocalVariable(name: "z", scope: !4077, file: !3, line: 1335, type: !9)
!4127 = !DILocation(line: 1335, column: 29, scope: !4077)
!4128 = !DILocalVariable(name: "radius2", scope: !4077, file: !3, line: 1335, type: !9)
!4129 = !DILocation(line: 1335, column: 32, scope: !4077)
!4130 = !DILocation(line: 1335, column: 42, scope: !4077)
!4131 = !DILocation(line: 1335, column: 51, scope: !4077)
!4132 = !DILocation(line: 1335, column: 49, scope: !4077)
!4133 = !DILocalVariable(name: "elen2", scope: !4077, file: !3, line: 1336, type: !9)
!4134 = !DILocation(line: 1336, column: 8, scope: !4077)
!4135 = !DILocalVariable(name: "edotv", scope: !4077, file: !3, line: 1336, type: !9)
!4136 = !DILocation(line: 1336, column: 15, scope: !4077)
!4137 = !DILocalVariable(name: "edotbv", scope: !4077, file: !3, line: 1336, type: !9)
!4138 = !DILocation(line: 1336, column: 22, scope: !4077)
!4139 = !DILocalVariable(name: "nordotv", scope: !4077, file: !3, line: 1336, type: !9)
!4140 = !DILocation(line: 1336, column: 30, scope: !4077)
!4141 = !DILocalVariable(name: "newLambda", scope: !4077, file: !3, line: 1337, type: !9)
!4142 = !DILocation(line: 1337, column: 8, scope: !4077)
!4143 = !DILocalVariable(name: "found_by_sweep", scope: !4077, file: !3, line: 1338, type: !6)
!4144 = !DILocation(line: 1338, column: 7, scope: !4077)
!4145 = !DILocation(line: 1340, column: 14, scope: !4077)
!4146 = !DILocation(line: 1340, column: 18, scope: !4077)
!4147 = !DILocation(line: 1340, column: 22, scope: !4077)
!4148 = !DILocation(line: 1340, column: 2, scope: !4077)
!4149 = !DILocation(line: 1341, column: 14, scope: !4077)
!4150 = !DILocation(line: 1341, column: 18, scope: !4077)
!4151 = !DILocation(line: 1341, column: 22, scope: !4077)
!4152 = !DILocation(line: 1341, column: 2, scope: !4077)
!4153 = !DILocation(line: 1342, column: 14, scope: !4077)
!4154 = !DILocation(line: 1342, column: 19, scope: !4077)
!4155 = !DILocation(line: 1342, column: 23, scope: !4077)
!4156 = !DILocation(line: 1342, column: 2, scope: !4077)
!4157 = !DILocation(line: 1345, column: 16, scope: !4077)
!4158 = !DILocation(line: 1345, column: 21, scope: !4077)
!4159 = !DILocation(line: 1345, column: 25, scope: !4077)
!4160 = !DILocation(line: 1345, column: 2, scope: !4077)
!4161 = !DILocation(line: 1346, column: 15, scope: !4077)
!4162 = !DILocation(line: 1346, column: 2, scope: !4077)
!4163 = !DILocation(line: 1349, column: 15, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 1349, column: 6)
!4165 = !DILocation(line: 1349, column: 20, scope: !4164)
!4166 = !DILocation(line: 1349, column: 6, scope: !4164)
!4167 = !DILocation(line: 1349, column: 25, scope: !4164)
!4168 = !DILocation(line: 1349, column: 6, scope: !4077)
!4169 = !DILocation(line: 1349, column: 43, scope: !4164)
!4170 = !DILocation(line: 1349, column: 33, scope: !4164)
!4171 = !DILocation(line: 1351, column: 15, scope: !4077)
!4172 = !DILocation(line: 1351, column: 19, scope: !4077)
!4173 = !DILocation(line: 1351, column: 6, scope: !4077)
!4174 = !DILocation(line: 1351, column: 35, scope: !4077)
!4175 = !DILocation(line: 1351, column: 39, scope: !4077)
!4176 = !DILocation(line: 1351, column: 26, scope: !4077)
!4177 = !DILocation(line: 1351, column: 24, scope: !4077)
!4178 = !DILocation(line: 1351, column: 4, scope: !4077)
!4179 = !DILocation(line: 1352, column: 21, scope: !4077)
!4180 = !DILocation(line: 1352, column: 26, scope: !4077)
!4181 = !DILocation(line: 1352, column: 12, scope: !4077)
!4182 = !DILocation(line: 1352, column: 10, scope: !4077)
!4183 = !DILocation(line: 1354, column: 12, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 1354, column: 6)
!4185 = !DILocation(line: 1354, column: 6, scope: !4184)
!4186 = !DILocation(line: 1354, column: 21, scope: !4184)
!4187 = !DILocation(line: 1354, column: 6, scope: !4077)
!4188 = !DILocation(line: 1355, column: 13, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4190, file: !3, line: 1355, column: 7)
!4190 = distinct !DILexicalBlock(scope: !4184, file: !3, line: 1354, column: 34)
!4191 = !DILocation(line: 1355, column: 7, scope: !4189)
!4192 = !DILocation(line: 1355, column: 19, scope: !4189)
!4193 = !DILocation(line: 1355, column: 16, scope: !4189)
!4194 = !DILocation(line: 1355, column: 7, scope: !4190)
!4195 = !DILocation(line: 1356, column: 4, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4189, file: !3, line: 1355, column: 27)
!4197 = !DILocation(line: 1358, column: 2, scope: !4190)
!4198 = !DILocalVariable(name: "t0", scope: !4199, file: !3, line: 1360, type: !9)
!4199 = distinct !DILexicalBlock(scope: !4184, file: !3, line: 1359, column: 7)
!4200 = !DILocation(line: 1360, column: 9, scope: !4199)
!4201 = !DILocation(line: 1360, column: 16, scope: !4199)
!4202 = !DILocation(line: 1360, column: 15, scope: !4199)
!4203 = !DILocation(line: 1360, column: 20, scope: !4199)
!4204 = !DILocation(line: 1360, column: 18, scope: !4199)
!4205 = !DILocation(line: 1360, column: 30, scope: !4199)
!4206 = !DILocation(line: 1360, column: 28, scope: !4199)
!4207 = !DILocalVariable(name: "t1", scope: !4199, file: !3, line: 1361, type: !9)
!4208 = !DILocation(line: 1361, column: 9, scope: !4199)
!4209 = !DILocation(line: 1361, column: 16, scope: !4199)
!4210 = !DILocation(line: 1361, column: 15, scope: !4199)
!4211 = !DILocation(line: 1361, column: 20, scope: !4199)
!4212 = !DILocation(line: 1361, column: 18, scope: !4199)
!4213 = !DILocation(line: 1361, column: 30, scope: !4199)
!4214 = !DILocation(line: 1361, column: 28, scope: !4199)
!4215 = !DILocation(line: 1363, column: 7, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4199, file: !3, line: 1363, column: 7)
!4217 = !DILocation(line: 1363, column: 12, scope: !4216)
!4218 = !DILocation(line: 1363, column: 10, scope: !4216)
!4219 = !DILocation(line: 1363, column: 7, scope: !4199)
!4220 = !DILocalVariable(name: "sw_ap", scope: !4221, file: !3, line: 1364, type: !9)
!4221 = distinct !DILexicalBlock(scope: !4216, file: !3, line: 1364, column: 4)
!4222 = !DILocation(line: 1364, column: 4, scope: !4221)
!4223 = !DILocation(line: 1366, column: 7, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4199, file: !3, line: 1366, column: 7)
!4225 = !DILocation(line: 1366, column: 10, scope: !4224)
!4226 = !DILocation(line: 1366, column: 17, scope: !4224)
!4227 = !DILocation(line: 1366, column: 20, scope: !4224)
!4228 = !DILocation(line: 1366, column: 23, scope: !4224)
!4229 = !DILocation(line: 1366, column: 7, scope: !4199)
!4230 = !DILocation(line: 1366, column: 31, scope: !4224)
!4231 = !DILocation(line: 1369, column: 3, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4233, file: !3, line: 1369, column: 3)
!4233 = distinct !DILexicalBlock(scope: !4199, file: !3, line: 1369, column: 3)
!4234 = !DILocation(line: 1369, column: 3, scope: !4233)
!4235 = !DILocation(line: 1369, column: 3, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 1369, column: 3)
!4237 = !DILocation(line: 1370, column: 3, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4239, file: !3, line: 1370, column: 3)
!4239 = distinct !DILexicalBlock(scope: !4199, file: !3, line: 1370, column: 3)
!4240 = !DILocation(line: 1370, column: 3, scope: !4239)
!4241 = !DILocation(line: 1370, column: 3, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 1370, column: 3)
!4243 = !DILocation(line: 1375, column: 14, scope: !4199)
!4244 = !DILocation(line: 1375, column: 22, scope: !4199)
!4245 = !DILocation(line: 1375, column: 31, scope: !4199)
!4246 = !DILocation(line: 1375, column: 29, scope: !4199)
!4247 = !DILocation(line: 1375, column: 20, scope: !4199)
!4248 = !DILocation(line: 1375, column: 36, scope: !4199)
!4249 = !DILocation(line: 1375, column: 45, scope: !4199)
!4250 = !DILocation(line: 1375, column: 43, scope: !4199)
!4251 = !DILocation(line: 1375, column: 34, scope: !4199)
!4252 = !DILocation(line: 1375, column: 3, scope: !4199)
!4253 = !DILocation(line: 1375, column: 12, scope: !4199)
!4254 = !DILocation(line: 1376, column: 14, scope: !4199)
!4255 = !DILocation(line: 1376, column: 22, scope: !4199)
!4256 = !DILocation(line: 1376, column: 31, scope: !4199)
!4257 = !DILocation(line: 1376, column: 29, scope: !4199)
!4258 = !DILocation(line: 1376, column: 20, scope: !4199)
!4259 = !DILocation(line: 1376, column: 36, scope: !4199)
!4260 = !DILocation(line: 1376, column: 45, scope: !4199)
!4261 = !DILocation(line: 1376, column: 43, scope: !4199)
!4262 = !DILocation(line: 1376, column: 34, scope: !4199)
!4263 = !DILocation(line: 1376, column: 3, scope: !4199)
!4264 = !DILocation(line: 1376, column: 12, scope: !4199)
!4265 = !DILocation(line: 1377, column: 14, scope: !4199)
!4266 = !DILocation(line: 1377, column: 22, scope: !4199)
!4267 = !DILocation(line: 1377, column: 31, scope: !4199)
!4268 = !DILocation(line: 1377, column: 29, scope: !4199)
!4269 = !DILocation(line: 1377, column: 20, scope: !4199)
!4270 = !DILocation(line: 1377, column: 36, scope: !4199)
!4271 = !DILocation(line: 1377, column: 45, scope: !4199)
!4272 = !DILocation(line: 1377, column: 43, scope: !4199)
!4273 = !DILocation(line: 1377, column: 34, scope: !4199)
!4274 = !DILocation(line: 1377, column: 3, scope: !4199)
!4275 = !DILocation(line: 1377, column: 12, scope: !4199)
!4276 = !DILocation(line: 1381, column: 16, scope: !4199)
!4277 = !DILocation(line: 1381, column: 20, scope: !4199)
!4278 = !DILocation(line: 1381, column: 7, scope: !4199)
!4279 = !DILocation(line: 1381, column: 5, scope: !4199)
!4280 = !DILocation(line: 1382, column: 16, scope: !4199)
!4281 = !DILocation(line: 1382, column: 20, scope: !4199)
!4282 = !DILocation(line: 1382, column: 7, scope: !4199)
!4283 = !DILocation(line: 1382, column: 5, scope: !4199)
!4284 = !DILocation(line: 1383, column: 16, scope: !4199)
!4285 = !DILocation(line: 1383, column: 20, scope: !4199)
!4286 = !DILocation(line: 1383, column: 7, scope: !4199)
!4287 = !DILocation(line: 1383, column: 5, scope: !4199)
!4288 = !DILocation(line: 1385, column: 15, scope: !4199)
!4289 = !DILocation(line: 1385, column: 21, scope: !4199)
!4290 = !DILocation(line: 1385, column: 28, scope: !4199)
!4291 = !DILocation(line: 1385, column: 3, scope: !4199)
!4292 = !DILocation(line: 1386, column: 16, scope: !4199)
!4293 = !DILocation(line: 1386, column: 22, scope: !4199)
!4294 = !DILocation(line: 1386, column: 7, scope: !4199)
!4295 = !DILocation(line: 1386, column: 5, scope: !4199)
!4296 = !DILocation(line: 1387, column: 16, scope: !4199)
!4297 = !DILocation(line: 1387, column: 22, scope: !4199)
!4298 = !DILocation(line: 1387, column: 7, scope: !4199)
!4299 = !DILocation(line: 1387, column: 5, scope: !4199)
!4300 = !DILocation(line: 1389, column: 7, scope: !4199)
!4301 = !DILocation(line: 1389, column: 11, scope: !4199)
!4302 = !DILocation(line: 1389, column: 9, scope: !4199)
!4303 = !DILocation(line: 1389, column: 15, scope: !4199)
!4304 = !DILocation(line: 1389, column: 19, scope: !4199)
!4305 = !DILocation(line: 1389, column: 17, scope: !4199)
!4306 = !DILocation(line: 1389, column: 13, scope: !4199)
!4307 = !DILocation(line: 1389, column: 5, scope: !4199)
!4308 = !DILocation(line: 1390, column: 7, scope: !4199)
!4309 = !DILocation(line: 1390, column: 11, scope: !4199)
!4310 = !DILocation(line: 1390, column: 9, scope: !4199)
!4311 = !DILocation(line: 1390, column: 15, scope: !4199)
!4312 = !DILocation(line: 1390, column: 19, scope: !4199)
!4313 = !DILocation(line: 1390, column: 17, scope: !4199)
!4314 = !DILocation(line: 1390, column: 13, scope: !4199)
!4315 = !DILocation(line: 1390, column: 5, scope: !4199)
!4316 = !DILocation(line: 1391, column: 7, scope: !4199)
!4317 = !DILocation(line: 1391, column: 11, scope: !4199)
!4318 = !DILocation(line: 1391, column: 9, scope: !4199)
!4319 = !DILocation(line: 1391, column: 16, scope: !4199)
!4320 = !DILocation(line: 1391, column: 20, scope: !4199)
!4321 = !DILocation(line: 1391, column: 18, scope: !4199)
!4322 = !DILocation(line: 1391, column: 24, scope: !4199)
!4323 = !DILocation(line: 1391, column: 28, scope: !4199)
!4324 = !DILocation(line: 1391, column: 26, scope: !4199)
!4325 = !DILocation(line: 1391, column: 22, scope: !4199)
!4326 = !DILocation(line: 1391, column: 13, scope: !4199)
!4327 = !DILocation(line: 1391, column: 5, scope: !4199)
!4328 = !DILocation(line: 1394, column: 7, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4199, file: !3, line: 1394, column: 7)
!4330 = !DILocation(line: 1394, column: 9, scope: !4329)
!4331 = !DILocation(line: 1394, column: 17, scope: !4329)
!4332 = !DILocation(line: 1394, column: 21, scope: !4329)
!4333 = !DILocation(line: 1394, column: 23, scope: !4329)
!4334 = !DILocation(line: 1394, column: 31, scope: !4329)
!4335 = !DILocation(line: 1394, column: 34, scope: !4329)
!4336 = !DILocation(line: 1394, column: 36, scope: !4329)
!4337 = !DILocation(line: 1394, column: 7, scope: !4199)
!4338 = !DILocation(line: 1396, column: 16, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 1394, column: 46)
!4340 = !DILocation(line: 1396, column: 5, scope: !4339)
!4341 = !DILocation(line: 1396, column: 14, scope: !4339)
!4342 = !DILocation(line: 1397, column: 15, scope: !4339)
!4343 = !DILocation(line: 1397, column: 23, scope: !4339)
!4344 = !DILocation(line: 1397, column: 4, scope: !4339)
!4345 = !DILocation(line: 1398, column: 4, scope: !4339)
!4346 = !DILocation(line: 1403, column: 3, scope: !4077)
!4347 = !DILocation(line: 1403, column: 12, scope: !4077)
!4348 = !DILocation(line: 1406, column: 15, scope: !4077)
!4349 = !DILocation(line: 1406, column: 20, scope: !4077)
!4350 = !DILocation(line: 1406, column: 6, scope: !4077)
!4351 = !DILocation(line: 1406, column: 4, scope: !4077)
!4352 = !DILocation(line: 1409, column: 14, scope: !4077)
!4353 = !DILocation(line: 1409, column: 20, scope: !4077)
!4354 = !DILocation(line: 1409, column: 24, scope: !4077)
!4355 = !DILocation(line: 1409, column: 2, scope: !4077)
!4356 = !DILocation(line: 1410, column: 22, scope: !4077)
!4357 = !DILocation(line: 1410, column: 27, scope: !4077)
!4358 = !DILocation(line: 1410, column: 13, scope: !4077)
!4359 = !DILocation(line: 1410, column: 11, scope: !4077)
!4360 = !DILocation(line: 1410, column: 4, scope: !4077)
!4361 = !DILocation(line: 1411, column: 15, scope: !4077)
!4362 = !DILocation(line: 1411, column: 21, scope: !4077)
!4363 = !DILocation(line: 1411, column: 6, scope: !4077)
!4364 = !DILocation(line: 1411, column: 29, scope: !4077)
!4365 = !DILocation(line: 1411, column: 27, scope: !4077)
!4366 = !DILocation(line: 1411, column: 4, scope: !4077)
!4367 = !DILocation(line: 1413, column: 20, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 1413, column: 6)
!4369 = !DILocation(line: 1413, column: 23, scope: !4368)
!4370 = !DILocation(line: 1413, column: 26, scope: !4368)
!4371 = !DILocation(line: 1413, column: 30, scope: !4368)
!4372 = !DILocation(line: 1413, column: 29, scope: !4368)
!4373 = !DILocation(line: 1413, column: 40, scope: !4368)
!4374 = !DILocation(line: 1413, column: 6, scope: !4368)
!4375 = !DILocation(line: 1413, column: 6, scope: !4077)
!4376 = !DILocation(line: 1414, column: 14, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4368, file: !3, line: 1413, column: 51)
!4378 = !DILocation(line: 1414, column: 22, scope: !4377)
!4379 = !DILocation(line: 1414, column: 3, scope: !4377)
!4380 = !DILocation(line: 1415, column: 18, scope: !4377)
!4381 = !DILocation(line: 1416, column: 2, scope: !4377)
!4382 = !DILocation(line: 1419, column: 14, scope: !4077)
!4383 = !DILocation(line: 1419, column: 20, scope: !4077)
!4384 = !DILocation(line: 1419, column: 24, scope: !4077)
!4385 = !DILocation(line: 1419, column: 2, scope: !4077)
!4386 = !DILocation(line: 1420, column: 22, scope: !4077)
!4387 = !DILocation(line: 1420, column: 27, scope: !4077)
!4388 = !DILocation(line: 1420, column: 13, scope: !4077)
!4389 = !DILocation(line: 1420, column: 11, scope: !4077)
!4390 = !DILocation(line: 1420, column: 4, scope: !4077)
!4391 = !DILocation(line: 1421, column: 15, scope: !4077)
!4392 = !DILocation(line: 1421, column: 21, scope: !4077)
!4393 = !DILocation(line: 1421, column: 6, scope: !4077)
!4394 = !DILocation(line: 1421, column: 29, scope: !4077)
!4395 = !DILocation(line: 1421, column: 27, scope: !4077)
!4396 = !DILocation(line: 1421, column: 4, scope: !4077)
!4397 = !DILocation(line: 1423, column: 20, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 1423, column: 6)
!4399 = !DILocation(line: 1423, column: 23, scope: !4398)
!4400 = !DILocation(line: 1423, column: 26, scope: !4398)
!4401 = !DILocation(line: 1423, column: 30, scope: !4398)
!4402 = !DILocation(line: 1423, column: 29, scope: !4398)
!4403 = !DILocation(line: 1423, column: 40, scope: !4398)
!4404 = !DILocation(line: 1423, column: 6, scope: !4398)
!4405 = !DILocation(line: 1423, column: 6, scope: !4077)
!4406 = !DILocation(line: 1424, column: 14, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4398, file: !3, line: 1423, column: 51)
!4408 = !DILocation(line: 1424, column: 22, scope: !4407)
!4409 = !DILocation(line: 1424, column: 3, scope: !4407)
!4410 = !DILocation(line: 1425, column: 18, scope: !4407)
!4411 = !DILocation(line: 1426, column: 2, scope: !4407)
!4412 = !DILocation(line: 1429, column: 14, scope: !4077)
!4413 = !DILocation(line: 1429, column: 20, scope: !4077)
!4414 = !DILocation(line: 1429, column: 24, scope: !4077)
!4415 = !DILocation(line: 1429, column: 2, scope: !4077)
!4416 = !DILocation(line: 1430, column: 22, scope: !4077)
!4417 = !DILocation(line: 1430, column: 27, scope: !4077)
!4418 = !DILocation(line: 1430, column: 13, scope: !4077)
!4419 = !DILocation(line: 1430, column: 11, scope: !4077)
!4420 = !DILocation(line: 1430, column: 4, scope: !4077)
!4421 = !DILocation(line: 1431, column: 15, scope: !4077)
!4422 = !DILocation(line: 1431, column: 21, scope: !4077)
!4423 = !DILocation(line: 1431, column: 6, scope: !4077)
!4424 = !DILocation(line: 1431, column: 29, scope: !4077)
!4425 = !DILocation(line: 1431, column: 27, scope: !4077)
!4426 = !DILocation(line: 1431, column: 4, scope: !4077)
!4427 = !DILocation(line: 1433, column: 20, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 1433, column: 6)
!4429 = !DILocation(line: 1433, column: 23, scope: !4428)
!4430 = !DILocation(line: 1433, column: 26, scope: !4428)
!4431 = !DILocation(line: 1433, column: 30, scope: !4428)
!4432 = !DILocation(line: 1433, column: 29, scope: !4428)
!4433 = !DILocation(line: 1433, column: 40, scope: !4428)
!4434 = !DILocation(line: 1433, column: 6, scope: !4428)
!4435 = !DILocation(line: 1433, column: 6, scope: !4077)
!4436 = !DILocation(line: 1434, column: 14, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4428, file: !3, line: 1433, column: 51)
!4438 = !DILocation(line: 1434, column: 22, scope: !4437)
!4439 = !DILocation(line: 1434, column: 3, scope: !4437)
!4440 = !DILocation(line: 1435, column: 18, scope: !4437)
!4441 = !DILocation(line: 1436, column: 2, scope: !4437)
!4442 = !DILocation(line: 1439, column: 14, scope: !4077)
!4443 = !DILocation(line: 1439, column: 18, scope: !4077)
!4444 = !DILocation(line: 1439, column: 22, scope: !4077)
!4445 = !DILocation(line: 1439, column: 2, scope: !4077)
!4446 = !DILocation(line: 1443, column: 14, scope: !4077)
!4447 = !DILocation(line: 1443, column: 18, scope: !4077)
!4448 = !DILocation(line: 1443, column: 22, scope: !4077)
!4449 = !DILocation(line: 1443, column: 2, scope: !4077)
!4450 = !DILocation(line: 1445, column: 19, scope: !4077)
!4451 = !DILocation(line: 1445, column: 23, scope: !4077)
!4452 = !DILocation(line: 1445, column: 10, scope: !4077)
!4453 = !DILocation(line: 1445, column: 8, scope: !4077)
!4454 = !DILocation(line: 1446, column: 19, scope: !4077)
!4455 = !DILocation(line: 1446, column: 23, scope: !4077)
!4456 = !DILocation(line: 1446, column: 10, scope: !4077)
!4457 = !DILocation(line: 1446, column: 8, scope: !4077)
!4458 = !DILocation(line: 1447, column: 20, scope: !4077)
!4459 = !DILocation(line: 1447, column: 24, scope: !4077)
!4460 = !DILocation(line: 1447, column: 11, scope: !4077)
!4461 = !DILocation(line: 1447, column: 9, scope: !4077)
!4462 = !DILocation(line: 1449, column: 6, scope: !4077)
!4463 = !DILocation(line: 1449, column: 25, scope: !4077)
!4464 = !DILocation(line: 1449, column: 30, scope: !4077)
!4465 = !DILocation(line: 1449, column: 16, scope: !4077)
!4466 = !DILocation(line: 1449, column: 15, scope: !4077)
!4467 = !DILocation(line: 1449, column: 12, scope: !4077)
!4468 = !DILocation(line: 1449, column: 38, scope: !4077)
!4469 = !DILocation(line: 1449, column: 46, scope: !4077)
!4470 = !DILocation(line: 1449, column: 44, scope: !4077)
!4471 = !DILocation(line: 1449, column: 36, scope: !4077)
!4472 = !DILocation(line: 1449, column: 4, scope: !4077)
!4473 = !DILocation(line: 1450, column: 14, scope: !4077)
!4474 = !DILocation(line: 1450, column: 31, scope: !4077)
!4475 = !DILocation(line: 1450, column: 36, scope: !4077)
!4476 = !DILocation(line: 1450, column: 22, scope: !4077)
!4477 = !DILocation(line: 1450, column: 20, scope: !4077)
!4478 = !DILocation(line: 1450, column: 42, scope: !4077)
!4479 = !DILocation(line: 1450, column: 50, scope: !4077)
!4480 = !DILocation(line: 1450, column: 48, scope: !4077)
!4481 = !DILocation(line: 1450, column: 40, scope: !4077)
!4482 = !DILocation(line: 1450, column: 11, scope: !4077)
!4483 = !DILocation(line: 1450, column: 4, scope: !4077)
!4484 = !DILocation(line: 1451, column: 6, scope: !4077)
!4485 = !DILocation(line: 1451, column: 15, scope: !4077)
!4486 = !DILocation(line: 1451, column: 34, scope: !4077)
!4487 = !DILocation(line: 1451, column: 38, scope: !4077)
!4488 = !DILocation(line: 1451, column: 25, scope: !4077)
!4489 = !DILocation(line: 1451, column: 23, scope: !4077)
!4490 = !DILocation(line: 1451, column: 12, scope: !4077)
!4491 = !DILocation(line: 1451, column: 45, scope: !4077)
!4492 = !DILocation(line: 1451, column: 54, scope: !4077)
!4493 = !DILocation(line: 1451, column: 52, scope: !4077)
!4494 = !DILocation(line: 1451, column: 43, scope: !4077)
!4495 = !DILocation(line: 1451, column: 4, scope: !4077)
!4496 = !DILocation(line: 1453, column: 20, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 1453, column: 6)
!4498 = !DILocation(line: 1453, column: 23, scope: !4497)
!4499 = !DILocation(line: 1453, column: 26, scope: !4497)
!4500 = !DILocation(line: 1453, column: 30, scope: !4497)
!4501 = !DILocation(line: 1453, column: 29, scope: !4497)
!4502 = !DILocation(line: 1453, column: 6, scope: !4497)
!4503 = !DILocation(line: 1453, column: 6, scope: !4077)
!4504 = !DILocation(line: 1454, column: 8, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 1453, column: 53)
!4506 = !DILocation(line: 1454, column: 16, scope: !4505)
!4507 = !DILocation(line: 1454, column: 14, scope: !4505)
!4508 = !DILocation(line: 1454, column: 28, scope: !4505)
!4509 = !DILocation(line: 1454, column: 26, scope: !4505)
!4510 = !DILocation(line: 1454, column: 38, scope: !4505)
!4511 = !DILocation(line: 1454, column: 36, scope: !4505)
!4512 = !DILocation(line: 1454, column: 5, scope: !4505)
!4513 = !DILocation(line: 1456, column: 7, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4505, file: !3, line: 1456, column: 7)
!4515 = !DILocation(line: 1456, column: 9, scope: !4514)
!4516 = !DILocation(line: 1456, column: 17, scope: !4514)
!4517 = !DILocation(line: 1456, column: 20, scope: !4514)
!4518 = !DILocation(line: 1456, column: 22, scope: !4514)
!4519 = !DILocation(line: 1456, column: 7, scope: !4505)
!4520 = !DILocation(line: 1457, column: 16, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4514, file: !3, line: 1456, column: 31)
!4522 = !DILocation(line: 1457, column: 5, scope: !4521)
!4523 = !DILocation(line: 1457, column: 14, scope: !4521)
!4524 = !DILocation(line: 1458, column: 15, scope: !4521)
!4525 = !DILocation(line: 1458, column: 23, scope: !4521)
!4526 = !DILocation(line: 1458, column: 4, scope: !4521)
!4527 = !DILocation(line: 1459, column: 14, scope: !4521)
!4528 = !DILocation(line: 1459, column: 22, scope: !4521)
!4529 = !DILocation(line: 1459, column: 4, scope: !4521)
!4530 = !DILocation(line: 1460, column: 14, scope: !4521)
!4531 = !DILocation(line: 1460, column: 22, scope: !4521)
!4532 = !DILocation(line: 1460, column: 4, scope: !4521)
!4533 = !DILocation(line: 1461, column: 19, scope: !4521)
!4534 = !DILocation(line: 1462, column: 3, scope: !4521)
!4535 = !DILocation(line: 1463, column: 2, scope: !4505)
!4536 = !DILocation(line: 1467, column: 19, scope: !4077)
!4537 = !DILocation(line: 1467, column: 23, scope: !4077)
!4538 = !DILocation(line: 1467, column: 10, scope: !4077)
!4539 = !DILocation(line: 1467, column: 8, scope: !4077)
!4540 = !DILocation(line: 1468, column: 19, scope: !4077)
!4541 = !DILocation(line: 1468, column: 23, scope: !4077)
!4542 = !DILocation(line: 1468, column: 10, scope: !4077)
!4543 = !DILocation(line: 1468, column: 8, scope: !4077)
!4544 = !DILocation(line: 1469, column: 20, scope: !4077)
!4545 = !DILocation(line: 1469, column: 24, scope: !4077)
!4546 = !DILocation(line: 1469, column: 11, scope: !4077)
!4547 = !DILocation(line: 1469, column: 9, scope: !4077)
!4548 = !DILocation(line: 1471, column: 6, scope: !4077)
!4549 = !DILocation(line: 1471, column: 25, scope: !4077)
!4550 = !DILocation(line: 1471, column: 30, scope: !4077)
!4551 = !DILocation(line: 1471, column: 16, scope: !4077)
!4552 = !DILocation(line: 1471, column: 15, scope: !4077)
!4553 = !DILocation(line: 1471, column: 12, scope: !4077)
!4554 = !DILocation(line: 1471, column: 38, scope: !4077)
!4555 = !DILocation(line: 1471, column: 46, scope: !4077)
!4556 = !DILocation(line: 1471, column: 44, scope: !4077)
!4557 = !DILocation(line: 1471, column: 36, scope: !4077)
!4558 = !DILocation(line: 1471, column: 4, scope: !4077)
!4559 = !DILocation(line: 1472, column: 14, scope: !4077)
!4560 = !DILocation(line: 1472, column: 31, scope: !4077)
!4561 = !DILocation(line: 1472, column: 36, scope: !4077)
!4562 = !DILocation(line: 1472, column: 22, scope: !4077)
!4563 = !DILocation(line: 1472, column: 20, scope: !4077)
!4564 = !DILocation(line: 1472, column: 42, scope: !4077)
!4565 = !DILocation(line: 1472, column: 50, scope: !4077)
!4566 = !DILocation(line: 1472, column: 48, scope: !4077)
!4567 = !DILocation(line: 1472, column: 40, scope: !4077)
!4568 = !DILocation(line: 1472, column: 11, scope: !4077)
!4569 = !DILocation(line: 1472, column: 4, scope: !4077)
!4570 = !DILocation(line: 1473, column: 6, scope: !4077)
!4571 = !DILocation(line: 1473, column: 15, scope: !4077)
!4572 = !DILocation(line: 1473, column: 34, scope: !4077)
!4573 = !DILocation(line: 1473, column: 38, scope: !4077)
!4574 = !DILocation(line: 1473, column: 25, scope: !4077)
!4575 = !DILocation(line: 1473, column: 23, scope: !4077)
!4576 = !DILocation(line: 1473, column: 12, scope: !4077)
!4577 = !DILocation(line: 1473, column: 45, scope: !4077)
!4578 = !DILocation(line: 1473, column: 54, scope: !4077)
!4579 = !DILocation(line: 1473, column: 52, scope: !4077)
!4580 = !DILocation(line: 1473, column: 43, scope: !4077)
!4581 = !DILocation(line: 1473, column: 4, scope: !4077)
!4582 = !DILocation(line: 1475, column: 20, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 1475, column: 6)
!4584 = !DILocation(line: 1475, column: 23, scope: !4583)
!4585 = !DILocation(line: 1475, column: 26, scope: !4583)
!4586 = !DILocation(line: 1475, column: 30, scope: !4583)
!4587 = !DILocation(line: 1475, column: 29, scope: !4583)
!4588 = !DILocation(line: 1475, column: 6, scope: !4583)
!4589 = !DILocation(line: 1475, column: 6, scope: !4077)
!4590 = !DILocation(line: 1476, column: 8, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4583, file: !3, line: 1475, column: 53)
!4592 = !DILocation(line: 1476, column: 16, scope: !4591)
!4593 = !DILocation(line: 1476, column: 14, scope: !4591)
!4594 = !DILocation(line: 1476, column: 28, scope: !4591)
!4595 = !DILocation(line: 1476, column: 26, scope: !4591)
!4596 = !DILocation(line: 1476, column: 38, scope: !4591)
!4597 = !DILocation(line: 1476, column: 36, scope: !4591)
!4598 = !DILocation(line: 1476, column: 5, scope: !4591)
!4599 = !DILocation(line: 1478, column: 7, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4591, file: !3, line: 1478, column: 7)
!4601 = !DILocation(line: 1478, column: 9, scope: !4600)
!4602 = !DILocation(line: 1478, column: 17, scope: !4600)
!4603 = !DILocation(line: 1478, column: 20, scope: !4600)
!4604 = !DILocation(line: 1478, column: 22, scope: !4600)
!4605 = !DILocation(line: 1478, column: 7, scope: !4591)
!4606 = !DILocation(line: 1479, column: 16, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4600, file: !3, line: 1478, column: 31)
!4608 = !DILocation(line: 1479, column: 5, scope: !4607)
!4609 = !DILocation(line: 1479, column: 14, scope: !4607)
!4610 = !DILocation(line: 1480, column: 15, scope: !4607)
!4611 = !DILocation(line: 1480, column: 23, scope: !4607)
!4612 = !DILocation(line: 1480, column: 4, scope: !4607)
!4613 = !DILocation(line: 1481, column: 14, scope: !4607)
!4614 = !DILocation(line: 1481, column: 22, scope: !4607)
!4615 = !DILocation(line: 1481, column: 4, scope: !4607)
!4616 = !DILocation(line: 1482, column: 14, scope: !4607)
!4617 = !DILocation(line: 1482, column: 22, scope: !4607)
!4618 = !DILocation(line: 1482, column: 4, scope: !4607)
!4619 = !DILocation(line: 1483, column: 19, scope: !4607)
!4620 = !DILocation(line: 1484, column: 3, scope: !4607)
!4621 = !DILocation(line: 1485, column: 2, scope: !4591)
!4622 = !DILocation(line: 1493, column: 14, scope: !4077)
!4623 = !DILocation(line: 1493, column: 18, scope: !4077)
!4624 = !DILocation(line: 1493, column: 22, scope: !4077)
!4625 = !DILocation(line: 1493, column: 2, scope: !4077)
!4626 = !DILocation(line: 1494, column: 19, scope: !4077)
!4627 = !DILocation(line: 1494, column: 23, scope: !4077)
!4628 = !DILocation(line: 1494, column: 10, scope: !4077)
!4629 = !DILocation(line: 1494, column: 8, scope: !4077)
!4630 = !DILocation(line: 1495, column: 19, scope: !4077)
!4631 = !DILocation(line: 1495, column: 23, scope: !4077)
!4632 = !DILocation(line: 1495, column: 10, scope: !4077)
!4633 = !DILocation(line: 1495, column: 8, scope: !4077)
!4634 = !DILocation(line: 1496, column: 20, scope: !4077)
!4635 = !DILocation(line: 1496, column: 24, scope: !4077)
!4636 = !DILocation(line: 1496, column: 11, scope: !4077)
!4637 = !DILocation(line: 1496, column: 9, scope: !4077)
!4638 = !DILocation(line: 1498, column: 6, scope: !4077)
!4639 = !DILocation(line: 1498, column: 25, scope: !4077)
!4640 = !DILocation(line: 1498, column: 30, scope: !4077)
!4641 = !DILocation(line: 1498, column: 16, scope: !4077)
!4642 = !DILocation(line: 1498, column: 15, scope: !4077)
!4643 = !DILocation(line: 1498, column: 12, scope: !4077)
!4644 = !DILocation(line: 1498, column: 38, scope: !4077)
!4645 = !DILocation(line: 1498, column: 46, scope: !4077)
!4646 = !DILocation(line: 1498, column: 44, scope: !4077)
!4647 = !DILocation(line: 1498, column: 36, scope: !4077)
!4648 = !DILocation(line: 1498, column: 4, scope: !4077)
!4649 = !DILocation(line: 1499, column: 14, scope: !4077)
!4650 = !DILocation(line: 1499, column: 31, scope: !4077)
!4651 = !DILocation(line: 1499, column: 36, scope: !4077)
!4652 = !DILocation(line: 1499, column: 22, scope: !4077)
!4653 = !DILocation(line: 1499, column: 20, scope: !4077)
!4654 = !DILocation(line: 1499, column: 42, scope: !4077)
!4655 = !DILocation(line: 1499, column: 50, scope: !4077)
!4656 = !DILocation(line: 1499, column: 48, scope: !4077)
!4657 = !DILocation(line: 1499, column: 40, scope: !4077)
!4658 = !DILocation(line: 1499, column: 11, scope: !4077)
!4659 = !DILocation(line: 1499, column: 4, scope: !4077)
!4660 = !DILocation(line: 1500, column: 6, scope: !4077)
!4661 = !DILocation(line: 1500, column: 15, scope: !4077)
!4662 = !DILocation(line: 1500, column: 34, scope: !4077)
!4663 = !DILocation(line: 1500, column: 38, scope: !4077)
!4664 = !DILocation(line: 1500, column: 25, scope: !4077)
!4665 = !DILocation(line: 1500, column: 23, scope: !4077)
!4666 = !DILocation(line: 1500, column: 12, scope: !4077)
!4667 = !DILocation(line: 1500, column: 45, scope: !4077)
!4668 = !DILocation(line: 1500, column: 54, scope: !4077)
!4669 = !DILocation(line: 1500, column: 52, scope: !4077)
!4670 = !DILocation(line: 1500, column: 43, scope: !4077)
!4671 = !DILocation(line: 1500, column: 4, scope: !4077)
!4672 = !DILocation(line: 1502, column: 20, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 1502, column: 6)
!4674 = !DILocation(line: 1502, column: 23, scope: !4673)
!4675 = !DILocation(line: 1502, column: 26, scope: !4673)
!4676 = !DILocation(line: 1502, column: 30, scope: !4673)
!4677 = !DILocation(line: 1502, column: 29, scope: !4673)
!4678 = !DILocation(line: 1502, column: 6, scope: !4673)
!4679 = !DILocation(line: 1502, column: 6, scope: !4077)
!4680 = !DILocation(line: 1503, column: 8, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4673, file: !3, line: 1502, column: 53)
!4682 = !DILocation(line: 1503, column: 16, scope: !4681)
!4683 = !DILocation(line: 1503, column: 14, scope: !4681)
!4684 = !DILocation(line: 1503, column: 28, scope: !4681)
!4685 = !DILocation(line: 1503, column: 26, scope: !4681)
!4686 = !DILocation(line: 1503, column: 38, scope: !4681)
!4687 = !DILocation(line: 1503, column: 36, scope: !4681)
!4688 = !DILocation(line: 1503, column: 5, scope: !4681)
!4689 = !DILocation(line: 1505, column: 7, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4681, file: !3, line: 1505, column: 7)
!4691 = !DILocation(line: 1505, column: 9, scope: !4690)
!4692 = !DILocation(line: 1505, column: 17, scope: !4690)
!4693 = !DILocation(line: 1505, column: 20, scope: !4690)
!4694 = !DILocation(line: 1505, column: 22, scope: !4690)
!4695 = !DILocation(line: 1505, column: 7, scope: !4681)
!4696 = !DILocation(line: 1506, column: 16, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 1505, column: 31)
!4698 = !DILocation(line: 1506, column: 5, scope: !4697)
!4699 = !DILocation(line: 1506, column: 14, scope: !4697)
!4700 = !DILocation(line: 1507, column: 15, scope: !4697)
!4701 = !DILocation(line: 1507, column: 23, scope: !4697)
!4702 = !DILocation(line: 1507, column: 4, scope: !4697)
!4703 = !DILocation(line: 1508, column: 14, scope: !4697)
!4704 = !DILocation(line: 1508, column: 22, scope: !4697)
!4705 = !DILocation(line: 1508, column: 4, scope: !4697)
!4706 = !DILocation(line: 1509, column: 14, scope: !4697)
!4707 = !DILocation(line: 1509, column: 22, scope: !4697)
!4708 = !DILocation(line: 1509, column: 4, scope: !4697)
!4709 = !DILocation(line: 1510, column: 19, scope: !4697)
!4710 = !DILocation(line: 1511, column: 3, scope: !4697)
!4711 = !DILocation(line: 1512, column: 2, scope: !4681)
!4712 = !DILocation(line: 1515, column: 9, scope: !4077)
!4713 = !DILocation(line: 1515, column: 2, scope: !4077)
!4714 = !DILocation(line: 1516, column: 1, scope: !4077)
!4715 = distinct !DISubprogram(name: "negate_v3", scope: !184, file: !184, line: 576, type: !320, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!4716 = !DILocalVariable(name: "r", arg: 1, scope: !4715, file: !184, line: 576, type: !10)
!4717 = !DILocation(line: 576, column: 30, scope: !4715)
!4718 = !DILocation(line: 578, column: 10, scope: !4715)
!4719 = !DILocation(line: 578, column: 9, scope: !4715)
!4720 = !DILocation(line: 578, column: 2, scope: !4715)
!4721 = !DILocation(line: 578, column: 7, scope: !4715)
!4722 = !DILocation(line: 579, column: 10, scope: !4715)
!4723 = !DILocation(line: 579, column: 9, scope: !4715)
!4724 = !DILocation(line: 579, column: 2, scope: !4715)
!4725 = !DILocation(line: 579, column: 7, scope: !4715)
!4726 = !DILocation(line: 580, column: 10, scope: !4715)
!4727 = !DILocation(line: 580, column: 9, scope: !4715)
!4728 = !DILocation(line: 580, column: 2, scope: !4715)
!4729 = !DILocation(line: 580, column: 7, scope: !4715)
!4730 = !DILocation(line: 581, column: 1, scope: !4715)
!4731 = distinct !DISubprogram(name: "getLowestRoot", scope: !3, file: !3, line: 1296, type: !4732, scopeLine: 1297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!4732 = !DISubroutineType(types: !4733)
!4733 = !{!6, !8, !8, !8, !8, !10}
!4734 = !DILocalVariable(name: "a", arg: 1, scope: !4731, file: !3, line: 1296, type: !8)
!4735 = !DILocation(line: 1296, column: 39, scope: !4731)
!4736 = !DILocalVariable(name: "b", arg: 2, scope: !4731, file: !3, line: 1296, type: !8)
!4737 = !DILocation(line: 1296, column: 54, scope: !4731)
!4738 = !DILocalVariable(name: "c", arg: 3, scope: !4731, file: !3, line: 1296, type: !8)
!4739 = !DILocation(line: 1296, column: 69, scope: !4731)
!4740 = !DILocalVariable(name: "maxR", arg: 4, scope: !4731, file: !3, line: 1296, type: !8)
!4741 = !DILocation(line: 1296, column: 84, scope: !4731)
!4742 = !DILocalVariable(name: "root", arg: 5, scope: !4731, file: !3, line: 1296, type: !10)
!4743 = !DILocation(line: 1296, column: 97, scope: !4731)
!4744 = !DILocalVariable(name: "determinant", scope: !4731, file: !3, line: 1299, type: !8)
!4745 = !DILocation(line: 1299, column: 14, scope: !4731)
!4746 = !DILocation(line: 1299, column: 28, scope: !4731)
!4747 = !DILocation(line: 1299, column: 32, scope: !4731)
!4748 = !DILocation(line: 1299, column: 30, scope: !4731)
!4749 = !DILocation(line: 1299, column: 43, scope: !4731)
!4750 = !DILocation(line: 1299, column: 41, scope: !4731)
!4751 = !DILocation(line: 1299, column: 47, scope: !4731)
!4752 = !DILocation(line: 1299, column: 45, scope: !4731)
!4753 = !DILocation(line: 1299, column: 34, scope: !4731)
!4754 = !DILocation(line: 1302, column: 6, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 1302, column: 6)
!4756 = !DILocation(line: 1302, column: 18, scope: !4755)
!4757 = !DILocation(line: 1302, column: 6, scope: !4731)
!4758 = !DILocalVariable(name: "sqrtD", scope: !4759, file: !3, line: 1305, type: !8)
!4759 = distinct !DILexicalBlock(scope: !4755, file: !3, line: 1302, column: 27)
!4760 = !DILocation(line: 1305, column: 15, scope: !4759)
!4761 = !DILocation(line: 1305, column: 29, scope: !4759)
!4762 = !DILocation(line: 1305, column: 23, scope: !4759)
!4763 = !DILocalVariable(name: "r1", scope: !4759, file: !3, line: 1306, type: !9)
!4764 = !DILocation(line: 1306, column: 9, scope: !4759)
!4765 = !DILocation(line: 1306, column: 16, scope: !4759)
!4766 = !DILocation(line: 1306, column: 15, scope: !4759)
!4767 = !DILocation(line: 1306, column: 20, scope: !4759)
!4768 = !DILocation(line: 1306, column: 18, scope: !4759)
!4769 = !DILocation(line: 1306, column: 37, scope: !4759)
!4770 = !DILocation(line: 1306, column: 35, scope: !4759)
!4771 = !DILocation(line: 1306, column: 27, scope: !4759)
!4772 = !DILocalVariable(name: "r2", scope: !4759, file: !3, line: 1307, type: !9)
!4773 = !DILocation(line: 1307, column: 9, scope: !4759)
!4774 = !DILocation(line: 1307, column: 16, scope: !4759)
!4775 = !DILocation(line: 1307, column: 15, scope: !4759)
!4776 = !DILocation(line: 1307, column: 20, scope: !4759)
!4777 = !DILocation(line: 1307, column: 18, scope: !4759)
!4778 = !DILocation(line: 1307, column: 37, scope: !4759)
!4779 = !DILocation(line: 1307, column: 35, scope: !4759)
!4780 = !DILocation(line: 1307, column: 27, scope: !4759)
!4781 = !DILocation(line: 1310, column: 7, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4759, file: !3, line: 1310, column: 7)
!4783 = !DILocation(line: 1310, column: 12, scope: !4782)
!4784 = !DILocation(line: 1310, column: 10, scope: !4782)
!4785 = !DILocation(line: 1310, column: 7, scope: !4759)
!4786 = !DILocalVariable(name: "sw_ap", scope: !4787, file: !3, line: 1311, type: !9)
!4787 = distinct !DILexicalBlock(scope: !4782, file: !3, line: 1311, column: 4)
!4788 = !DILocation(line: 1311, column: 4, scope: !4787)
!4789 = !DILocation(line: 1314, column: 7, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4759, file: !3, line: 1314, column: 7)
!4791 = !DILocation(line: 1314, column: 10, scope: !4790)
!4792 = !DILocation(line: 1314, column: 17, scope: !4790)
!4793 = !DILocation(line: 1314, column: 20, scope: !4790)
!4794 = !DILocation(line: 1314, column: 25, scope: !4790)
!4795 = !DILocation(line: 1314, column: 23, scope: !4790)
!4796 = !DILocation(line: 1314, column: 7, scope: !4759)
!4797 = !DILocation(line: 1315, column: 12, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4790, file: !3, line: 1314, column: 31)
!4799 = !DILocation(line: 1315, column: 5, scope: !4798)
!4800 = !DILocation(line: 1315, column: 10, scope: !4798)
!4801 = !DILocation(line: 1316, column: 4, scope: !4798)
!4802 = !DILocation(line: 1321, column: 7, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4759, file: !3, line: 1321, column: 7)
!4804 = !DILocation(line: 1321, column: 10, scope: !4803)
!4805 = !DILocation(line: 1321, column: 17, scope: !4803)
!4806 = !DILocation(line: 1321, column: 20, scope: !4803)
!4807 = !DILocation(line: 1321, column: 25, scope: !4803)
!4808 = !DILocation(line: 1321, column: 23, scope: !4803)
!4809 = !DILocation(line: 1321, column: 7, scope: !4759)
!4810 = !DILocation(line: 1322, column: 12, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4803, file: !3, line: 1321, column: 31)
!4812 = !DILocation(line: 1322, column: 5, scope: !4811)
!4813 = !DILocation(line: 1322, column: 10, scope: !4811)
!4814 = !DILocation(line: 1323, column: 4, scope: !4811)
!4815 = !DILocation(line: 1325, column: 2, scope: !4759)
!4816 = !DILocation(line: 1327, column: 2, scope: !4731)
!4817 = !DILocation(line: 1328, column: 1, scope: !4731)
!4818 = distinct !DISubprogram(name: "isect_axial_line_tri_v3", scope: !3, file: !3, line: 1518, type: !4819, scopeLine: 1520, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!4819 = !DISubroutineType(types: !4820)
!4820 = !{!6, !1841, !7, !7, !7, !7, !7, !10}
!4821 = !DILocalVariable(name: "axis", arg: 1, scope: !4818, file: !3, line: 1518, type: !1841)
!4822 = !DILocation(line: 1518, column: 40, scope: !4818)
!4823 = !DILocalVariable(name: "p1", arg: 2, scope: !4818, file: !3, line: 1518, type: !7)
!4824 = !DILocation(line: 1518, column: 58, scope: !4818)
!4825 = !DILocalVariable(name: "p2", arg: 3, scope: !4818, file: !3, line: 1518, type: !7)
!4826 = !DILocation(line: 1518, column: 77, scope: !4818)
!4827 = !DILocalVariable(name: "v0", arg: 4, scope: !4818, file: !3, line: 1519, type: !7)
!4828 = !DILocation(line: 1519, column: 42, scope: !4818)
!4829 = !DILocalVariable(name: "v1", arg: 5, scope: !4818, file: !3, line: 1519, type: !7)
!4830 = !DILocation(line: 1519, column: 61, scope: !4818)
!4831 = !DILocalVariable(name: "v2", arg: 6, scope: !4818, file: !3, line: 1519, type: !7)
!4832 = !DILocation(line: 1519, column: 80, scope: !4818)
!4833 = !DILocalVariable(name: "r_lambda", arg: 7, scope: !4818, file: !3, line: 1519, type: !10)
!4834 = !DILocation(line: 1519, column: 94, scope: !4818)
!4835 = !DILocalVariable(name: "p", scope: !4818, file: !3, line: 1521, type: !117)
!4836 = !DILocation(line: 1521, column: 8, scope: !4818)
!4837 = !DILocalVariable(name: "e1", scope: !4818, file: !3, line: 1521, type: !117)
!4838 = !DILocation(line: 1521, column: 14, scope: !4818)
!4839 = !DILocalVariable(name: "e2", scope: !4818, file: !3, line: 1521, type: !117)
!4840 = !DILocation(line: 1521, column: 21, scope: !4818)
!4841 = !DILocalVariable(name: "u", scope: !4818, file: !3, line: 1522, type: !9)
!4842 = !DILocation(line: 1522, column: 8, scope: !4818)
!4843 = !DILocalVariable(name: "v", scope: !4818, file: !3, line: 1522, type: !9)
!4844 = !DILocation(line: 1522, column: 11, scope: !4818)
!4845 = !DILocalVariable(name: "f", scope: !4818, file: !3, line: 1522, type: !9)
!4846 = !DILocation(line: 1522, column: 14, scope: !4818)
!4847 = !DILocalVariable(name: "a0", scope: !4818, file: !3, line: 1523, type: !17)
!4848 = !DILocation(line: 1523, column: 6, scope: !4818)
!4849 = !DILocation(line: 1523, column: 11, scope: !4818)
!4850 = !DILocalVariable(name: "a1", scope: !4818, file: !3, line: 1523, type: !17)
!4851 = !DILocation(line: 1523, column: 17, scope: !4818)
!4852 = !DILocation(line: 1523, column: 23, scope: !4818)
!4853 = !DILocation(line: 1523, column: 28, scope: !4818)
!4854 = !DILocation(line: 1523, column: 33, scope: !4818)
!4855 = !DILocalVariable(name: "a2", scope: !4818, file: !3, line: 1523, type: !17)
!4856 = !DILocation(line: 1523, column: 38, scope: !4818)
!4857 = !DILocation(line: 1523, column: 44, scope: !4818)
!4858 = !DILocation(line: 1523, column: 49, scope: !4818)
!4859 = !DILocation(line: 1523, column: 54, scope: !4818)
!4860 = !DILocation(line: 1537, column: 14, scope: !4818)
!4861 = !DILocation(line: 1537, column: 18, scope: !4818)
!4862 = !DILocation(line: 1537, column: 22, scope: !4818)
!4863 = !DILocation(line: 1537, column: 2, scope: !4818)
!4864 = !DILocation(line: 1538, column: 14, scope: !4818)
!4865 = !DILocation(line: 1538, column: 18, scope: !4818)
!4866 = !DILocation(line: 1538, column: 22, scope: !4818)
!4867 = !DILocation(line: 1538, column: 2, scope: !4818)
!4868 = !DILocation(line: 1539, column: 14, scope: !4818)
!4869 = !DILocation(line: 1539, column: 17, scope: !4818)
!4870 = !DILocation(line: 1539, column: 21, scope: !4818)
!4871 = !DILocation(line: 1539, column: 2, scope: !4818)
!4872 = !DILocation(line: 1541, column: 10, scope: !4818)
!4873 = !DILocation(line: 1541, column: 7, scope: !4818)
!4874 = !DILocation(line: 1541, column: 19, scope: !4818)
!4875 = !DILocation(line: 1541, column: 16, scope: !4818)
!4876 = !DILocation(line: 1541, column: 14, scope: !4818)
!4877 = !DILocation(line: 1541, column: 28, scope: !4818)
!4878 = !DILocation(line: 1541, column: 25, scope: !4818)
!4879 = !DILocation(line: 1541, column: 37, scope: !4818)
!4880 = !DILocation(line: 1541, column: 34, scope: !4818)
!4881 = !DILocation(line: 1541, column: 32, scope: !4818)
!4882 = !DILocation(line: 1541, column: 23, scope: !4818)
!4883 = !DILocation(line: 1541, column: 4, scope: !4818)
!4884 = !DILocation(line: 1542, column: 7, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4818, file: !3, line: 1542, column: 6)
!4886 = !DILocation(line: 1542, column: 9, scope: !4885)
!4887 = !DILocation(line: 1542, column: 23, scope: !4885)
!4888 = !DILocation(line: 1542, column: 27, scope: !4885)
!4889 = !DILocation(line: 1542, column: 29, scope: !4885)
!4890 = !DILocation(line: 1542, column: 6, scope: !4818)
!4891 = !DILocation(line: 1542, column: 43, scope: !4885)
!4892 = !DILocation(line: 1544, column: 9, scope: !4818)
!4893 = !DILocation(line: 1544, column: 7, scope: !4818)
!4894 = !DILocation(line: 1544, column: 18, scope: !4818)
!4895 = !DILocation(line: 1544, column: 15, scope: !4818)
!4896 = !DILocation(line: 1544, column: 13, scope: !4818)
!4897 = !DILocation(line: 1544, column: 26, scope: !4818)
!4898 = !DILocation(line: 1544, column: 24, scope: !4818)
!4899 = !DILocation(line: 1544, column: 35, scope: !4818)
!4900 = !DILocation(line: 1544, column: 32, scope: !4818)
!4901 = !DILocation(line: 1544, column: 30, scope: !4818)
!4902 = !DILocation(line: 1544, column: 22, scope: !4818)
!4903 = !DILocation(line: 1544, column: 42, scope: !4818)
!4904 = !DILocation(line: 1544, column: 40, scope: !4818)
!4905 = !DILocation(line: 1544, column: 4, scope: !4818)
!4906 = !DILocation(line: 1545, column: 7, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4818, file: !3, line: 1545, column: 6)
!4908 = !DILocation(line: 1545, column: 9, scope: !4907)
!4909 = !DILocation(line: 1545, column: 17, scope: !4907)
!4910 = !DILocation(line: 1545, column: 21, scope: !4907)
!4911 = !DILocation(line: 1545, column: 23, scope: !4907)
!4912 = !DILocation(line: 1545, column: 6, scope: !4818)
!4913 = !DILocation(line: 1545, column: 32, scope: !4907)
!4914 = !DILocation(line: 1547, column: 9, scope: !4818)
!4915 = !DILocation(line: 1547, column: 6, scope: !4818)
!4916 = !DILocation(line: 1547, column: 4, scope: !4818)
!4917 = !DILocation(line: 1548, column: 7, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4818, file: !3, line: 1548, column: 6)
!4919 = !DILocation(line: 1548, column: 9, scope: !4918)
!4920 = !DILocation(line: 1548, column: 23, scope: !4918)
!4921 = !DILocation(line: 1548, column: 27, scope: !4918)
!4922 = !DILocation(line: 1548, column: 29, scope: !4918)
!4923 = !DILocation(line: 1548, column: 6, scope: !4818)
!4924 = !DILocation(line: 1549, column: 10, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 1548, column: 43)
!4926 = !DILocation(line: 1549, column: 7, scope: !4925)
!4927 = !DILocation(line: 1549, column: 5, scope: !4925)
!4928 = !DILocation(line: 1550, column: 8, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4925, file: !3, line: 1550, column: 7)
!4930 = !DILocation(line: 1550, column: 10, scope: !4929)
!4931 = !DILocation(line: 1550, column: 24, scope: !4929)
!4932 = !DILocation(line: 1550, column: 28, scope: !4929)
!4933 = !DILocation(line: 1550, column: 30, scope: !4929)
!4934 = !DILocation(line: 1550, column: 7, scope: !4925)
!4935 = !DILocation(line: 1550, column: 44, scope: !4929)
!4936 = !DILocation(line: 1551, column: 11, scope: !4925)
!4937 = !DILocation(line: 1551, column: 9, scope: !4925)
!4938 = !DILocation(line: 1551, column: 8, scope: !4925)
!4939 = !DILocation(line: 1551, column: 17, scope: !4925)
!4940 = !DILocation(line: 1551, column: 24, scope: !4925)
!4941 = !DILocation(line: 1551, column: 21, scope: !4925)
!4942 = !DILocation(line: 1551, column: 19, scope: !4925)
!4943 = !DILocation(line: 1551, column: 15, scope: !4925)
!4944 = !DILocation(line: 1551, column: 31, scope: !4925)
!4945 = !DILocation(line: 1551, column: 29, scope: !4925)
!4946 = !DILocation(line: 1551, column: 5, scope: !4925)
!4947 = !DILocation(line: 1552, column: 2, scope: !4925)
!4948 = !DILocation(line: 1554, column: 11, scope: !4918)
!4949 = !DILocation(line: 1554, column: 9, scope: !4918)
!4950 = !DILocation(line: 1554, column: 8, scope: !4918)
!4951 = !DILocation(line: 1554, column: 17, scope: !4918)
!4952 = !DILocation(line: 1554, column: 24, scope: !4918)
!4953 = !DILocation(line: 1554, column: 21, scope: !4918)
!4954 = !DILocation(line: 1554, column: 19, scope: !4918)
!4955 = !DILocation(line: 1554, column: 15, scope: !4918)
!4956 = !DILocation(line: 1554, column: 31, scope: !4918)
!4957 = !DILocation(line: 1554, column: 29, scope: !4918)
!4958 = !DILocation(line: 1554, column: 5, scope: !4918)
!4959 = !DILocation(line: 1556, column: 7, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4818, file: !3, line: 1556, column: 6)
!4961 = !DILocation(line: 1556, column: 9, scope: !4960)
!4962 = !DILocation(line: 1556, column: 17, scope: !4960)
!4963 = !DILocation(line: 1556, column: 22, scope: !4960)
!4964 = !DILocation(line: 1556, column: 26, scope: !4960)
!4965 = !DILocation(line: 1556, column: 24, scope: !4960)
!4966 = !DILocation(line: 1556, column: 29, scope: !4960)
!4967 = !DILocation(line: 1556, column: 6, scope: !4818)
!4968 = !DILocation(line: 1556, column: 38, scope: !4960)
!4969 = !DILocation(line: 1558, column: 17, scope: !4818)
!4970 = !DILocation(line: 1558, column: 15, scope: !4818)
!4971 = !DILocation(line: 1558, column: 23, scope: !4818)
!4972 = !DILocation(line: 1558, column: 30, scope: !4818)
!4973 = !DILocation(line: 1558, column: 27, scope: !4818)
!4974 = !DILocation(line: 1558, column: 25, scope: !4818)
!4975 = !DILocation(line: 1558, column: 21, scope: !4818)
!4976 = !DILocation(line: 1558, column: 36, scope: !4818)
!4977 = !DILocation(line: 1558, column: 43, scope: !4818)
!4978 = !DILocation(line: 1558, column: 40, scope: !4818)
!4979 = !DILocation(line: 1558, column: 38, scope: !4818)
!4980 = !DILocation(line: 1558, column: 34, scope: !4818)
!4981 = !DILocation(line: 1558, column: 51, scope: !4818)
!4982 = !DILocation(line: 1558, column: 54, scope: !4818)
!4983 = !DILocation(line: 1558, column: 60, scope: !4818)
!4984 = !DILocation(line: 1558, column: 63, scope: !4818)
!4985 = !DILocation(line: 1558, column: 58, scope: !4818)
!4986 = !DILocation(line: 1558, column: 48, scope: !4818)
!4987 = !DILocation(line: 1558, column: 3, scope: !4818)
!4988 = !DILocation(line: 1558, column: 12, scope: !4818)
!4989 = !DILocation(line: 1560, column: 8, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4818, file: !3, line: 1560, column: 6)
!4991 = !DILocation(line: 1560, column: 7, scope: !4990)
!4992 = !DILocation(line: 1560, column: 17, scope: !4990)
!4993 = !DILocation(line: 1560, column: 25, scope: !4990)
!4994 = !DILocation(line: 1560, column: 30, scope: !4990)
!4995 = !DILocation(line: 1560, column: 29, scope: !4990)
!4996 = !DILocation(line: 1560, column: 39, scope: !4990)
!4997 = !DILocation(line: 1560, column: 6, scope: !4818)
!4998 = !DILocation(line: 1560, column: 48, scope: !4990)
!4999 = !DILocation(line: 1562, column: 2, scope: !4818)
!5000 = !DILocation(line: 1563, column: 1, scope: !4818)
!5001 = distinct !DISubprogram(name: "isect_line_line_epsilon_v3", scope: !3, file: !3, line: 1571, type: !5002, scopeLine: 1575, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!5002 = !DISubroutineType(types: !5003)
!5003 = !{!17, !7, !7, !7, !7, !10, !10, !8}
!5004 = !DILocalVariable(name: "v1", arg: 1, scope: !5001, file: !3, line: 1572, type: !7)
!5005 = !DILocation(line: 1572, column: 21, scope: !5001)
!5006 = !DILocalVariable(name: "v2", arg: 2, scope: !5001, file: !3, line: 1572, type: !7)
!5007 = !DILocation(line: 1572, column: 40, scope: !5001)
!5008 = !DILocalVariable(name: "v3", arg: 3, scope: !5001, file: !3, line: 1573, type: !7)
!5009 = !DILocation(line: 1573, column: 21, scope: !5001)
!5010 = !DILocalVariable(name: "v4", arg: 4, scope: !5001, file: !3, line: 1573, type: !7)
!5011 = !DILocation(line: 1573, column: 40, scope: !5001)
!5012 = !DILocalVariable(name: "i1", arg: 5, scope: !5001, file: !3, line: 1573, type: !10)
!5013 = !DILocation(line: 1573, column: 53, scope: !5001)
!5014 = !DILocalVariable(name: "i2", arg: 6, scope: !5001, file: !3, line: 1573, type: !10)
!5015 = !DILocation(line: 1573, column: 66, scope: !5001)
!5016 = !DILocalVariable(name: "epsilon", arg: 7, scope: !5001, file: !3, line: 1574, type: !8)
!5017 = !DILocation(line: 1574, column: 21, scope: !5001)
!5018 = !DILocalVariable(name: "a", scope: !5001, file: !3, line: 1576, type: !117)
!5019 = !DILocation(line: 1576, column: 8, scope: !5001)
!5020 = !DILocalVariable(name: "b", scope: !5001, file: !3, line: 1576, type: !117)
!5021 = !DILocation(line: 1576, column: 14, scope: !5001)
!5022 = !DILocalVariable(name: "c", scope: !5001, file: !3, line: 1576, type: !117)
!5023 = !DILocation(line: 1576, column: 20, scope: !5001)
!5024 = !DILocalVariable(name: "ab", scope: !5001, file: !3, line: 1576, type: !117)
!5025 = !DILocation(line: 1576, column: 26, scope: !5001)
!5026 = !DILocalVariable(name: "cb", scope: !5001, file: !3, line: 1576, type: !117)
!5027 = !DILocation(line: 1576, column: 33, scope: !5001)
!5028 = !DILocalVariable(name: "dir1", scope: !5001, file: !3, line: 1576, type: !117)
!5029 = !DILocation(line: 1576, column: 40, scope: !5001)
!5030 = !DILocalVariable(name: "dir2", scope: !5001, file: !3, line: 1576, type: !117)
!5031 = !DILocation(line: 1576, column: 49, scope: !5001)
!5032 = !DILocalVariable(name: "d", scope: !5001, file: !3, line: 1577, type: !9)
!5033 = !DILocation(line: 1577, column: 8, scope: !5001)
!5034 = !DILocalVariable(name: "div", scope: !5001, file: !3, line: 1577, type: !9)
!5035 = !DILocation(line: 1577, column: 11, scope: !5001)
!5036 = !DILocation(line: 1579, column: 14, scope: !5001)
!5037 = !DILocation(line: 1579, column: 17, scope: !5001)
!5038 = !DILocation(line: 1579, column: 21, scope: !5001)
!5039 = !DILocation(line: 1579, column: 2, scope: !5001)
!5040 = !DILocation(line: 1580, column: 14, scope: !5001)
!5041 = !DILocation(line: 1580, column: 17, scope: !5001)
!5042 = !DILocation(line: 1580, column: 21, scope: !5001)
!5043 = !DILocation(line: 1580, column: 2, scope: !5001)
!5044 = !DILocation(line: 1581, column: 14, scope: !5001)
!5045 = !DILocation(line: 1581, column: 17, scope: !5001)
!5046 = !DILocation(line: 1581, column: 21, scope: !5001)
!5047 = !DILocation(line: 1581, column: 2, scope: !5001)
!5048 = !DILocation(line: 1583, column: 18, scope: !5001)
!5049 = !DILocation(line: 1583, column: 24, scope: !5001)
!5050 = !DILocation(line: 1583, column: 2, scope: !5001)
!5051 = !DILocation(line: 1584, column: 18, scope: !5001)
!5052 = !DILocation(line: 1584, column: 24, scope: !5001)
!5053 = !DILocation(line: 1584, column: 2, scope: !5001)
!5054 = !DILocation(line: 1585, column: 15, scope: !5001)
!5055 = !DILocation(line: 1585, column: 21, scope: !5001)
!5056 = !DILocation(line: 1585, column: 6, scope: !5001)
!5057 = !DILocation(line: 1585, column: 4, scope: !5001)
!5058 = !DILocation(line: 1586, column: 6, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 1586, column: 6)
!5060 = !DILocation(line: 1586, column: 8, scope: !5059)
!5061 = !DILocation(line: 1586, column: 16, scope: !5059)
!5062 = !DILocation(line: 1586, column: 19, scope: !5059)
!5063 = !DILocation(line: 1586, column: 21, scope: !5059)
!5064 = !DILocation(line: 1586, column: 6, scope: !5001)
!5065 = !DILocation(line: 1588, column: 3, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5059, file: !3, line: 1586, column: 31)
!5067 = !DILocation(line: 1591, column: 16, scope: !5001)
!5068 = !DILocation(line: 1591, column: 20, scope: !5001)
!5069 = !DILocation(line: 1591, column: 23, scope: !5001)
!5070 = !DILocation(line: 1591, column: 2, scope: !5001)
!5071 = !DILocation(line: 1592, column: 15, scope: !5001)
!5072 = !DILocation(line: 1592, column: 18, scope: !5001)
!5073 = !DILocation(line: 1592, column: 6, scope: !5001)
!5074 = !DILocation(line: 1592, column: 4, scope: !5001)
!5075 = !DILocation(line: 1593, column: 17, scope: !5001)
!5076 = !DILocation(line: 1593, column: 21, scope: !5001)
!5077 = !DILocation(line: 1593, column: 8, scope: !5001)
!5078 = !DILocation(line: 1593, column: 6, scope: !5001)
!5079 = !DILocation(line: 1596, column: 6, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 1596, column: 6)
!5081 = !DILocation(line: 1596, column: 6, scope: !5001)
!5082 = !DILocation(line: 1597, column: 3, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5080, file: !3, line: 1596, column: 29)
!5084 = !DILocation(line: 1600, column: 11, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5080, file: !3, line: 1600, column: 11)
!5086 = !DILocation(line: 1600, column: 11, scope: !5080)
!5087 = !DILocation(line: 1601, column: 17, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5085, file: !3, line: 1600, column: 42)
!5089 = !DILocation(line: 1601, column: 21, scope: !5088)
!5090 = !DILocation(line: 1601, column: 24, scope: !5088)
!5091 = !DILocation(line: 1601, column: 3, scope: !5088)
!5092 = !DILocation(line: 1603, column: 13, scope: !5088)
!5093 = !DILocation(line: 1603, column: 25, scope: !5088)
!5094 = !DILocation(line: 1603, column: 29, scope: !5088)
!5095 = !DILocation(line: 1603, column: 16, scope: !5088)
!5096 = !DILocation(line: 1603, column: 35, scope: !5088)
!5097 = !DILocation(line: 1603, column: 33, scope: !5088)
!5098 = !DILocation(line: 1603, column: 3, scope: !5088)
!5099 = !DILocation(line: 1604, column: 15, scope: !5088)
!5100 = !DILocation(line: 1604, column: 19, scope: !5088)
!5101 = !DILocation(line: 1604, column: 23, scope: !5088)
!5102 = !DILocation(line: 1604, column: 3, scope: !5088)
!5103 = !DILocation(line: 1605, column: 14, scope: !5088)
!5104 = !DILocation(line: 1605, column: 18, scope: !5088)
!5105 = !DILocation(line: 1605, column: 3, scope: !5088)
!5106 = !DILocation(line: 1607, column: 3, scope: !5088)
!5107 = !DILocalVariable(name: "n", scope: !5108, file: !3, line: 1611, type: !117)
!5108 = distinct !DILexicalBlock(scope: !5085, file: !3, line: 1610, column: 7)
!5109 = !DILocation(line: 1611, column: 9, scope: !5108)
!5110 = !DILocalVariable(name: "t", scope: !5108, file: !3, line: 1611, type: !117)
!5111 = !DILocation(line: 1611, column: 15, scope: !5108)
!5112 = !DILocalVariable(name: "v3t", scope: !5108, file: !3, line: 1612, type: !117)
!5113 = !DILocation(line: 1612, column: 9, scope: !5108)
!5114 = !DILocalVariable(name: "v4t", scope: !5108, file: !3, line: 1612, type: !117)
!5115 = !DILocation(line: 1612, column: 17, scope: !5108)
!5116 = !DILocation(line: 1613, column: 15, scope: !5108)
!5117 = !DILocation(line: 1613, column: 18, scope: !5108)
!5118 = !DILocation(line: 1613, column: 22, scope: !5108)
!5119 = !DILocation(line: 1613, column: 3, scope: !5108)
!5120 = !DILocation(line: 1616, column: 17, scope: !5108)
!5121 = !DILocation(line: 1616, column: 20, scope: !5108)
!5122 = !DILocation(line: 1616, column: 23, scope: !5108)
!5123 = !DILocation(line: 1616, column: 3, scope: !5108)
!5124 = !DILocation(line: 1617, column: 19, scope: !5108)
!5125 = !DILocation(line: 1617, column: 22, scope: !5108)
!5126 = !DILocation(line: 1617, column: 25, scope: !5108)
!5127 = !DILocation(line: 1617, column: 3, scope: !5108)
!5128 = !DILocation(line: 1620, column: 15, scope: !5108)
!5129 = !DILocation(line: 1620, column: 20, scope: !5108)
!5130 = !DILocation(line: 1620, column: 24, scope: !5108)
!5131 = !DILocation(line: 1620, column: 3, scope: !5108)
!5132 = !DILocation(line: 1621, column: 15, scope: !5108)
!5133 = !DILocation(line: 1621, column: 20, scope: !5108)
!5134 = !DILocation(line: 1621, column: 24, scope: !5108)
!5135 = !DILocation(line: 1621, column: 3, scope: !5108)
!5136 = !DILocation(line: 1623, column: 15, scope: !5108)
!5137 = !DILocation(line: 1623, column: 18, scope: !5108)
!5138 = !DILocation(line: 1623, column: 23, scope: !5108)
!5139 = !DILocation(line: 1623, column: 3, scope: !5108)
!5140 = !DILocation(line: 1624, column: 15, scope: !5108)
!5141 = !DILocation(line: 1624, column: 18, scope: !5108)
!5142 = !DILocation(line: 1624, column: 22, scope: !5108)
!5143 = !DILocation(line: 1624, column: 3, scope: !5108)
!5144 = !DILocation(line: 1625, column: 15, scope: !5108)
!5145 = !DILocation(line: 1625, column: 18, scope: !5108)
!5146 = !DILocation(line: 1625, column: 23, scope: !5108)
!5147 = !DILocation(line: 1625, column: 3, scope: !5108)
!5148 = !DILocation(line: 1627, column: 17, scope: !5108)
!5149 = !DILocation(line: 1627, column: 21, scope: !5108)
!5150 = !DILocation(line: 1627, column: 24, scope: !5108)
!5151 = !DILocation(line: 1627, column: 3, scope: !5108)
!5152 = !DILocation(line: 1628, column: 17, scope: !5108)
!5153 = !DILocation(line: 1628, column: 21, scope: !5108)
!5154 = !DILocation(line: 1628, column: 24, scope: !5108)
!5155 = !DILocation(line: 1628, column: 3, scope: !5108)
!5156 = !DILocation(line: 1630, column: 13, scope: !5108)
!5157 = !DILocation(line: 1630, column: 25, scope: !5108)
!5158 = !DILocation(line: 1630, column: 29, scope: !5108)
!5159 = !DILocation(line: 1630, column: 16, scope: !5108)
!5160 = !DILocation(line: 1630, column: 44, scope: !5108)
!5161 = !DILocation(line: 1630, column: 48, scope: !5108)
!5162 = !DILocation(line: 1630, column: 35, scope: !5108)
!5163 = !DILocation(line: 1630, column: 33, scope: !5108)
!5164 = !DILocation(line: 1630, column: 3, scope: !5108)
!5165 = !DILocation(line: 1631, column: 15, scope: !5108)
!5166 = !DILocation(line: 1631, column: 19, scope: !5108)
!5167 = !DILocation(line: 1631, column: 23, scope: !5108)
!5168 = !DILocation(line: 1631, column: 3, scope: !5108)
!5169 = !DILocation(line: 1634, column: 15, scope: !5108)
!5170 = !DILocation(line: 1634, column: 19, scope: !5108)
!5171 = !DILocation(line: 1634, column: 23, scope: !5108)
!5172 = !DILocation(line: 1634, column: 3, scope: !5108)
!5173 = !DILocation(line: 1636, column: 3, scope: !5108)
!5174 = !DILocation(line: 1638, column: 1, scope: !5001)
!5175 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !184, file: !184, line: 309, type: !332, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!5176 = !DILocalVariable(name: "r", arg: 1, scope: !5175, file: !184, line: 309, type: !10)
!5177 = !DILocation(line: 309, column: 32, scope: !5175)
!5178 = !DILocalVariable(name: "a", arg: 2, scope: !5175, file: !184, line: 309, type: !7)
!5179 = !DILocation(line: 309, column: 50, scope: !5175)
!5180 = !DILocalVariable(name: "b", arg: 3, scope: !5175, file: !184, line: 309, type: !7)
!5181 = !DILocation(line: 309, column: 68, scope: !5175)
!5182 = !DILocation(line: 311, column: 9, scope: !5175)
!5183 = !DILocation(line: 311, column: 16, scope: !5175)
!5184 = !DILocation(line: 311, column: 14, scope: !5175)
!5185 = !DILocation(line: 311, column: 2, scope: !5175)
!5186 = !DILocation(line: 311, column: 7, scope: !5175)
!5187 = !DILocation(line: 312, column: 9, scope: !5175)
!5188 = !DILocation(line: 312, column: 16, scope: !5175)
!5189 = !DILocation(line: 312, column: 14, scope: !5175)
!5190 = !DILocation(line: 312, column: 2, scope: !5175)
!5191 = !DILocation(line: 312, column: 7, scope: !5175)
!5192 = !DILocation(line: 313, column: 9, scope: !5175)
!5193 = !DILocation(line: 313, column: 16, scope: !5175)
!5194 = !DILocation(line: 313, column: 14, scope: !5175)
!5195 = !DILocation(line: 313, column: 2, scope: !5175)
!5196 = !DILocation(line: 313, column: 7, scope: !5175)
!5197 = !DILocation(line: 314, column: 1, scope: !5175)
!5198 = distinct !DISubprogram(name: "isect_line_line_v3", scope: !3, file: !3, line: 1640, type: !5199, scopeLine: 1643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!5199 = !DISubroutineType(types: !5200)
!5200 = !{!17, !7, !7, !7, !7, !10, !10}
!5201 = !DILocalVariable(name: "v1", arg: 1, scope: !5198, file: !3, line: 1641, type: !7)
!5202 = !DILocation(line: 1641, column: 21, scope: !5198)
!5203 = !DILocalVariable(name: "v2", arg: 2, scope: !5198, file: !3, line: 1641, type: !7)
!5204 = !DILocation(line: 1641, column: 40, scope: !5198)
!5205 = !DILocalVariable(name: "v3", arg: 3, scope: !5198, file: !3, line: 1642, type: !7)
!5206 = !DILocation(line: 1642, column: 21, scope: !5198)
!5207 = !DILocalVariable(name: "v4", arg: 4, scope: !5198, file: !3, line: 1642, type: !7)
!5208 = !DILocation(line: 1642, column: 40, scope: !5198)
!5209 = !DILocalVariable(name: "i1", arg: 5, scope: !5198, file: !3, line: 1642, type: !10)
!5210 = !DILocation(line: 1642, column: 53, scope: !5198)
!5211 = !DILocalVariable(name: "i2", arg: 6, scope: !5198, file: !3, line: 1642, type: !10)
!5212 = !DILocation(line: 1642, column: 66, scope: !5198)
!5213 = !DILocalVariable(name: "epsilon", scope: !5198, file: !3, line: 1644, type: !8)
!5214 = !DILocation(line: 1644, column: 14, scope: !5198)
!5215 = !DILocation(line: 1645, column: 36, scope: !5198)
!5216 = !DILocation(line: 1645, column: 40, scope: !5198)
!5217 = !DILocation(line: 1645, column: 44, scope: !5198)
!5218 = !DILocation(line: 1645, column: 48, scope: !5198)
!5219 = !DILocation(line: 1645, column: 52, scope: !5198)
!5220 = !DILocation(line: 1645, column: 56, scope: !5198)
!5221 = !DILocation(line: 1645, column: 9, scope: !5198)
!5222 = !DILocation(line: 1645, column: 2, scope: !5198)
!5223 = distinct !DISubprogram(name: "isect_line_line_strict_v3", scope: !3, file: !3, line: 1651, type: !5224, scopeLine: 1654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!5224 = !DISubroutineType(types: !5225)
!5225 = !{!6, !7, !7, !7, !7, !10, !10}
!5226 = !DILocalVariable(name: "v1", arg: 1, scope: !5223, file: !3, line: 1651, type: !7)
!5227 = !DILocation(line: 1651, column: 44, scope: !5223)
!5228 = !DILocalVariable(name: "v2", arg: 2, scope: !5223, file: !3, line: 1651, type: !7)
!5229 = !DILocation(line: 1651, column: 63, scope: !5223)
!5230 = !DILocalVariable(name: "v3", arg: 3, scope: !5223, file: !3, line: 1652, type: !7)
!5231 = !DILocation(line: 1652, column: 44, scope: !5223)
!5232 = !DILocalVariable(name: "v4", arg: 4, scope: !5223, file: !3, line: 1652, type: !7)
!5233 = !DILocation(line: 1652, column: 63, scope: !5223)
!5234 = !DILocalVariable(name: "vi", arg: 5, scope: !5223, file: !3, line: 1653, type: !10)
!5235 = !DILocation(line: 1653, column: 38, scope: !5223)
!5236 = !DILocalVariable(name: "r_lambda", arg: 6, scope: !5223, file: !3, line: 1653, type: !10)
!5237 = !DILocation(line: 1653, column: 52, scope: !5223)
!5238 = !DILocalVariable(name: "a", scope: !5223, file: !3, line: 1655, type: !117)
!5239 = !DILocation(line: 1655, column: 8, scope: !5223)
!5240 = !DILocalVariable(name: "b", scope: !5223, file: !3, line: 1655, type: !117)
!5241 = !DILocation(line: 1655, column: 14, scope: !5223)
!5242 = !DILocalVariable(name: "c", scope: !5223, file: !3, line: 1655, type: !117)
!5243 = !DILocation(line: 1655, column: 20, scope: !5223)
!5244 = !DILocalVariable(name: "ab", scope: !5223, file: !3, line: 1655, type: !117)
!5245 = !DILocation(line: 1655, column: 26, scope: !5223)
!5246 = !DILocalVariable(name: "cb", scope: !5223, file: !3, line: 1655, type: !117)
!5247 = !DILocation(line: 1655, column: 33, scope: !5223)
!5248 = !DILocalVariable(name: "ca", scope: !5223, file: !3, line: 1655, type: !117)
!5249 = !DILocation(line: 1655, column: 40, scope: !5223)
!5250 = !DILocalVariable(name: "dir1", scope: !5223, file: !3, line: 1655, type: !117)
!5251 = !DILocation(line: 1655, column: 47, scope: !5223)
!5252 = !DILocalVariable(name: "dir2", scope: !5223, file: !3, line: 1655, type: !117)
!5253 = !DILocation(line: 1655, column: 56, scope: !5223)
!5254 = !DILocalVariable(name: "d", scope: !5223, file: !3, line: 1656, type: !9)
!5255 = !DILocation(line: 1656, column: 8, scope: !5223)
!5256 = !DILocalVariable(name: "div", scope: !5223, file: !3, line: 1656, type: !9)
!5257 = !DILocation(line: 1656, column: 11, scope: !5223)
!5258 = !DILocation(line: 1658, column: 14, scope: !5223)
!5259 = !DILocation(line: 1658, column: 17, scope: !5223)
!5260 = !DILocation(line: 1658, column: 21, scope: !5223)
!5261 = !DILocation(line: 1658, column: 2, scope: !5223)
!5262 = !DILocation(line: 1659, column: 14, scope: !5223)
!5263 = !DILocation(line: 1659, column: 17, scope: !5223)
!5264 = !DILocation(line: 1659, column: 21, scope: !5223)
!5265 = !DILocation(line: 1659, column: 2, scope: !5223)
!5266 = !DILocation(line: 1660, column: 14, scope: !5223)
!5267 = !DILocation(line: 1660, column: 17, scope: !5223)
!5268 = !DILocation(line: 1660, column: 21, scope: !5223)
!5269 = !DILocation(line: 1660, column: 2, scope: !5223)
!5270 = !DILocation(line: 1662, column: 18, scope: !5223)
!5271 = !DILocation(line: 1662, column: 24, scope: !5223)
!5272 = !DILocation(line: 1662, column: 2, scope: !5223)
!5273 = !DILocation(line: 1663, column: 18, scope: !5223)
!5274 = !DILocation(line: 1663, column: 24, scope: !5223)
!5275 = !DILocation(line: 1663, column: 2, scope: !5223)
!5276 = !DILocation(line: 1664, column: 15, scope: !5223)
!5277 = !DILocation(line: 1664, column: 21, scope: !5223)
!5278 = !DILocation(line: 1664, column: 6, scope: !5223)
!5279 = !DILocation(line: 1664, column: 4, scope: !5223)
!5280 = !DILocation(line: 1665, column: 6, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5223, file: !3, line: 1665, column: 6)
!5282 = !DILocation(line: 1665, column: 8, scope: !5281)
!5283 = !DILocation(line: 1665, column: 16, scope: !5281)
!5284 = !DILocation(line: 1665, column: 19, scope: !5281)
!5285 = !DILocation(line: 1665, column: 21, scope: !5281)
!5286 = !DILocation(line: 1665, column: 30, scope: !5281)
!5287 = !DILocation(line: 1665, column: 33, scope: !5281)
!5288 = !DILocation(line: 1665, column: 35, scope: !5281)
!5289 = !DILocation(line: 1665, column: 6, scope: !5223)
!5290 = !DILocation(line: 1667, column: 3, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 1665, column: 41)
!5292 = !DILocation(line: 1670, column: 16, scope: !5223)
!5293 = !DILocation(line: 1670, column: 20, scope: !5223)
!5294 = !DILocation(line: 1670, column: 23, scope: !5223)
!5295 = !DILocation(line: 1670, column: 2, scope: !5223)
!5296 = !DILocation(line: 1671, column: 15, scope: !5223)
!5297 = !DILocation(line: 1671, column: 18, scope: !5223)
!5298 = !DILocation(line: 1671, column: 6, scope: !5223)
!5299 = !DILocation(line: 1671, column: 4, scope: !5223)
!5300 = !DILocation(line: 1672, column: 17, scope: !5223)
!5301 = !DILocation(line: 1672, column: 21, scope: !5223)
!5302 = !DILocation(line: 1672, column: 8, scope: !5223)
!5303 = !DILocation(line: 1672, column: 6, scope: !5223)
!5304 = !DILocation(line: 1675, column: 6, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5223, file: !3, line: 1675, column: 6)
!5306 = !DILocation(line: 1675, column: 6, scope: !5223)
!5307 = !DILocation(line: 1676, column: 3, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5305, file: !3, line: 1675, column: 29)
!5309 = !DILocation(line: 1679, column: 11, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5305, file: !3, line: 1679, column: 11)
!5311 = !DILocation(line: 1679, column: 13, scope: !5310)
!5312 = !DILocation(line: 1679, column: 26, scope: !5310)
!5313 = !DILocation(line: 1679, column: 29, scope: !5310)
!5314 = !DILocation(line: 1679, column: 31, scope: !5310)
!5315 = !DILocation(line: 1679, column: 11, scope: !5305)
!5316 = !DILocalVariable(name: "f1", scope: !5317, file: !3, line: 1680, type: !9)
!5317 = distinct !DILexicalBlock(scope: !5310, file: !3, line: 1679, column: 44)
!5318 = !DILocation(line: 1680, column: 9, scope: !5317)
!5319 = !DILocalVariable(name: "f2", scope: !5317, file: !3, line: 1680, type: !9)
!5320 = !DILocation(line: 1680, column: 13, scope: !5317)
!5321 = !DILocation(line: 1681, column: 17, scope: !5317)
!5322 = !DILocation(line: 1681, column: 21, scope: !5317)
!5323 = !DILocation(line: 1681, column: 24, scope: !5317)
!5324 = !DILocation(line: 1681, column: 3, scope: !5317)
!5325 = !DILocation(line: 1682, column: 17, scope: !5317)
!5326 = !DILocation(line: 1682, column: 21, scope: !5317)
!5327 = !DILocation(line: 1682, column: 24, scope: !5317)
!5328 = !DILocation(line: 1682, column: 3, scope: !5317)
!5329 = !DILocation(line: 1684, column: 17, scope: !5317)
!5330 = !DILocation(line: 1684, column: 21, scope: !5317)
!5331 = !DILocation(line: 1684, column: 8, scope: !5317)
!5332 = !DILocation(line: 1684, column: 27, scope: !5317)
!5333 = !DILocation(line: 1684, column: 25, scope: !5317)
!5334 = !DILocation(line: 1684, column: 6, scope: !5317)
!5335 = !DILocation(line: 1685, column: 17, scope: !5317)
!5336 = !DILocation(line: 1685, column: 21, scope: !5317)
!5337 = !DILocation(line: 1685, column: 8, scope: !5317)
!5338 = !DILocation(line: 1685, column: 27, scope: !5317)
!5339 = !DILocation(line: 1685, column: 25, scope: !5317)
!5340 = !DILocation(line: 1685, column: 6, scope: !5317)
!5341 = !DILocation(line: 1687, column: 7, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1687, column: 7)
!5343 = !DILocation(line: 1687, column: 10, scope: !5342)
!5344 = !DILocation(line: 1687, column: 15, scope: !5342)
!5345 = !DILocation(line: 1687, column: 18, scope: !5342)
!5346 = !DILocation(line: 1687, column: 21, scope: !5342)
!5347 = !DILocation(line: 1687, column: 26, scope: !5342)
!5348 = !DILocation(line: 1688, column: 7, scope: !5342)
!5349 = !DILocation(line: 1688, column: 10, scope: !5342)
!5350 = !DILocation(line: 1688, column: 15, scope: !5342)
!5351 = !DILocation(line: 1688, column: 18, scope: !5342)
!5352 = !DILocation(line: 1688, column: 21, scope: !5342)
!5353 = !DILocation(line: 1687, column: 7, scope: !5317)
!5354 = !DILocation(line: 1690, column: 14, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5342, file: !3, line: 1689, column: 3)
!5356 = !DILocation(line: 1690, column: 17, scope: !5355)
!5357 = !DILocation(line: 1690, column: 4, scope: !5355)
!5358 = !DILocation(line: 1691, column: 16, scope: !5355)
!5359 = !DILocation(line: 1691, column: 20, scope: !5355)
!5360 = !DILocation(line: 1691, column: 24, scope: !5355)
!5361 = !DILocation(line: 1691, column: 4, scope: !5355)
!5362 = !DILocation(line: 1693, column: 8, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 1693, column: 8)
!5364 = !DILocation(line: 1693, column: 8, scope: !5355)
!5365 = !DILocation(line: 1693, column: 30, scope: !5363)
!5366 = !DILocation(line: 1693, column: 19, scope: !5363)
!5367 = !DILocation(line: 1693, column: 28, scope: !5363)
!5368 = !DILocation(line: 1693, column: 18, scope: !5363)
!5369 = !DILocation(line: 1695, column: 4, scope: !5355)
!5370 = !DILocation(line: 1698, column: 4, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5342, file: !3, line: 1697, column: 8)
!5372 = !DILocation(line: 1702, column: 3, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5310, file: !3, line: 1701, column: 7)
!5374 = !DILocation(line: 1704, column: 1, scope: !5223)
!5375 = distinct !DISubprogram(name: "isect_aabb_aabb_v3", scope: !3, file: !3, line: 1706, type: !2473, scopeLine: 1707, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!5376 = !DILocalVariable(name: "min1", arg: 1, scope: !5375, file: !3, line: 1706, type: !7)
!5377 = !DILocation(line: 1706, column: 37, scope: !5375)
!5378 = !DILocalVariable(name: "max1", arg: 2, scope: !5375, file: !3, line: 1706, type: !7)
!5379 = !DILocation(line: 1706, column: 58, scope: !5375)
!5380 = !DILocalVariable(name: "min2", arg: 3, scope: !5375, file: !3, line: 1706, type: !7)
!5381 = !DILocation(line: 1706, column: 79, scope: !5375)
!5382 = !DILocalVariable(name: "max2", arg: 4, scope: !5375, file: !3, line: 1706, type: !7)
!5383 = !DILocation(line: 1706, column: 100, scope: !5375)
!5384 = !DILocation(line: 1708, column: 10, scope: !5375)
!5385 = !DILocation(line: 1708, column: 20, scope: !5375)
!5386 = !DILocation(line: 1708, column: 18, scope: !5375)
!5387 = !DILocation(line: 1708, column: 28, scope: !5375)
!5388 = !DILocation(line: 1708, column: 31, scope: !5375)
!5389 = !DILocation(line: 1708, column: 41, scope: !5375)
!5390 = !DILocation(line: 1708, column: 39, scope: !5375)
!5391 = !DILocation(line: 1708, column: 49, scope: !5375)
!5392 = !DILocation(line: 1708, column: 52, scope: !5375)
!5393 = !DILocation(line: 1708, column: 62, scope: !5375)
!5394 = !DILocation(line: 1708, column: 60, scope: !5375)
!5395 = !DILocation(line: 1708, column: 70, scope: !5375)
!5396 = !DILocation(line: 1709, column: 10, scope: !5375)
!5397 = !DILocation(line: 1709, column: 20, scope: !5375)
!5398 = !DILocation(line: 1709, column: 18, scope: !5375)
!5399 = !DILocation(line: 1709, column: 28, scope: !5375)
!5400 = !DILocation(line: 1709, column: 31, scope: !5375)
!5401 = !DILocation(line: 1709, column: 41, scope: !5375)
!5402 = !DILocation(line: 1709, column: 39, scope: !5375)
!5403 = !DILocation(line: 1709, column: 49, scope: !5375)
!5404 = !DILocation(line: 1709, column: 52, scope: !5375)
!5405 = !DILocation(line: 1709, column: 62, scope: !5375)
!5406 = !DILocation(line: 1709, column: 60, scope: !5375)
!5407 = !DILocation(line: 0, scope: !5375)
!5408 = !DILocation(line: 1708, column: 9, scope: !5375)
!5409 = !DILocation(line: 1708, column: 2, scope: !5375)
!5410 = distinct !DISubprogram(name: "isect_ray_aabb_initialize", scope: !3, file: !3, line: 1712, type: !5411, scopeLine: 1713, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!5411 = !DISubroutineType(types: !5412)
!5412 = !{null, !5413, !7, !7}
!5413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5414, size: 64)
!5414 = !DIDerivedType(tag: DW_TAG_typedef, name: "IsectRayAABBData", file: !5415, line: 190, baseType: !5416)
!5415 = !DIFile(filename: "blender/source/blender/blenlib/BLI_math_geom.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5416 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5415, line: 186, size: 288, elements: !5417)
!5417 = !{!5418, !5419, !5420}
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "ray_start", scope: !5416, file: !5415, line: 187, baseType: !117, size: 96)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "ray_inv_dir", scope: !5416, file: !5415, line: 188, baseType: !117, size: 96, offset: 96)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !5416, file: !5415, line: 189, baseType: !5421, size: 96, offset: 192)
!5421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 96, elements: !118)
!5422 = !DILocalVariable(name: "data", arg: 1, scope: !5410, file: !3, line: 1712, type: !5413)
!5423 = !DILocation(line: 1712, column: 50, scope: !5410)
!5424 = !DILocalVariable(name: "ray_start", arg: 2, scope: !5410, file: !3, line: 1712, type: !7)
!5425 = !DILocation(line: 1712, column: 68, scope: !5410)
!5426 = !DILocalVariable(name: "ray_direction", arg: 3, scope: !5410, file: !3, line: 1712, type: !7)
!5427 = !DILocation(line: 1712, column: 94, scope: !5410)
!5428 = !DILocation(line: 1714, column: 13, scope: !5410)
!5429 = !DILocation(line: 1714, column: 19, scope: !5410)
!5430 = !DILocation(line: 1714, column: 30, scope: !5410)
!5431 = !DILocation(line: 1714, column: 2, scope: !5410)
!5432 = !DILocation(line: 1716, column: 32, scope: !5410)
!5433 = !DILocation(line: 1716, column: 30, scope: !5410)
!5434 = !DILocation(line: 1716, column: 2, scope: !5410)
!5435 = !DILocation(line: 1716, column: 8, scope: !5410)
!5436 = !DILocation(line: 1716, column: 23, scope: !5410)
!5437 = !DILocation(line: 1717, column: 32, scope: !5410)
!5438 = !DILocation(line: 1717, column: 30, scope: !5410)
!5439 = !DILocation(line: 1717, column: 2, scope: !5410)
!5440 = !DILocation(line: 1717, column: 8, scope: !5410)
!5441 = !DILocation(line: 1717, column: 23, scope: !5410)
!5442 = !DILocation(line: 1718, column: 32, scope: !5410)
!5443 = !DILocation(line: 1718, column: 30, scope: !5410)
!5444 = !DILocation(line: 1718, column: 2, scope: !5410)
!5445 = !DILocation(line: 1718, column: 8, scope: !5410)
!5446 = !DILocation(line: 1718, column: 23, scope: !5410)
!5447 = !DILocation(line: 1720, column: 18, scope: !5410)
!5448 = !DILocation(line: 1720, column: 24, scope: !5410)
!5449 = !DILocation(line: 1720, column: 39, scope: !5410)
!5450 = !DILocation(line: 1720, column: 2, scope: !5410)
!5451 = !DILocation(line: 1720, column: 8, scope: !5410)
!5452 = !DILocation(line: 1720, column: 16, scope: !5410)
!5453 = !DILocation(line: 1721, column: 18, scope: !5410)
!5454 = !DILocation(line: 1721, column: 24, scope: !5410)
!5455 = !DILocation(line: 1721, column: 39, scope: !5410)
!5456 = !DILocation(line: 1721, column: 2, scope: !5410)
!5457 = !DILocation(line: 1721, column: 8, scope: !5410)
!5458 = !DILocation(line: 1721, column: 16, scope: !5410)
!5459 = !DILocation(line: 1722, column: 18, scope: !5410)
!5460 = !DILocation(line: 1722, column: 24, scope: !5410)
!5461 = !DILocation(line: 1722, column: 39, scope: !5410)
!5462 = !DILocation(line: 1722, column: 2, scope: !5410)
!5463 = !DILocation(line: 1722, column: 8, scope: !5410)
!5464 = !DILocation(line: 1722, column: 16, scope: !5410)
!5465 = !DILocation(line: 1723, column: 1, scope: !5410)
!5466 = distinct !DISubprogram(name: "isect_ray_aabb", scope: !3, file: !3, line: 1726, type: !5467, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!5467 = !DISubroutineType(types: !5468)
!5468 = !{!6, !5469, !7, !7, !10}
!5469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5470, size: 64)
!5470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5414)
!5471 = !DILocalVariable(name: "data", arg: 1, scope: !5466, file: !3, line: 1726, type: !5469)
!5472 = !DILocation(line: 1726, column: 45, scope: !5466)
!5473 = !DILocalVariable(name: "bb_min", arg: 2, scope: !5466, file: !3, line: 1726, type: !7)
!5474 = !DILocation(line: 1726, column: 63, scope: !5466)
!5475 = !DILocalVariable(name: "bb_max", arg: 3, scope: !5466, file: !3, line: 1727, type: !7)
!5476 = !DILocation(line: 1727, column: 33, scope: !5466)
!5477 = !DILocalVariable(name: "tmin_out", arg: 4, scope: !5466, file: !3, line: 1727, type: !10)
!5478 = !DILocation(line: 1727, column: 51, scope: !5466)
!5479 = !DILocalVariable(name: "bbox", scope: !5466, file: !3, line: 1729, type: !5480)
!5480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 192, elements: !5481)
!5481 = !{!604, !119}
!5482 = !DILocation(line: 1729, column: 8, scope: !5466)
!5483 = !DILocalVariable(name: "tmin", scope: !5466, file: !3, line: 1730, type: !9)
!5484 = !DILocation(line: 1730, column: 8, scope: !5466)
!5485 = !DILocalVariable(name: "tmax", scope: !5466, file: !3, line: 1730, type: !9)
!5486 = !DILocation(line: 1730, column: 14, scope: !5466)
!5487 = !DILocalVariable(name: "tymin", scope: !5466, file: !3, line: 1730, type: !9)
!5488 = !DILocation(line: 1730, column: 20, scope: !5466)
!5489 = !DILocalVariable(name: "tymax", scope: !5466, file: !3, line: 1730, type: !9)
!5490 = !DILocation(line: 1730, column: 27, scope: !5466)
!5491 = !DILocalVariable(name: "tzmin", scope: !5466, file: !3, line: 1730, type: !9)
!5492 = !DILocation(line: 1730, column: 34, scope: !5466)
!5493 = !DILocalVariable(name: "tzmax", scope: !5466, file: !3, line: 1730, type: !9)
!5494 = !DILocation(line: 1730, column: 41, scope: !5466)
!5495 = !DILocation(line: 1732, column: 13, scope: !5466)
!5496 = !DILocation(line: 1732, column: 22, scope: !5466)
!5497 = !DILocation(line: 1732, column: 2, scope: !5466)
!5498 = !DILocation(line: 1733, column: 13, scope: !5466)
!5499 = !DILocation(line: 1733, column: 22, scope: !5466)
!5500 = !DILocation(line: 1733, column: 2, scope: !5466)
!5501 = !DILocation(line: 1735, column: 15, scope: !5466)
!5502 = !DILocation(line: 1735, column: 21, scope: !5466)
!5503 = !DILocation(line: 1735, column: 10, scope: !5466)
!5504 = !DILocation(line: 1735, column: 35, scope: !5466)
!5505 = !DILocation(line: 1735, column: 41, scope: !5466)
!5506 = !DILocation(line: 1735, column: 33, scope: !5466)
!5507 = !DILocation(line: 1735, column: 57, scope: !5466)
!5508 = !DILocation(line: 1735, column: 63, scope: !5466)
!5509 = !DILocation(line: 1735, column: 55, scope: !5466)
!5510 = !DILocation(line: 1735, column: 7, scope: !5466)
!5511 = !DILocation(line: 1736, column: 19, scope: !5466)
!5512 = !DILocation(line: 1736, column: 25, scope: !5466)
!5513 = !DILocation(line: 1736, column: 17, scope: !5466)
!5514 = !DILocation(line: 1736, column: 10, scope: !5466)
!5515 = !DILocation(line: 1736, column: 39, scope: !5466)
!5516 = !DILocation(line: 1736, column: 45, scope: !5466)
!5517 = !DILocation(line: 1736, column: 37, scope: !5466)
!5518 = !DILocation(line: 1736, column: 61, scope: !5466)
!5519 = !DILocation(line: 1736, column: 67, scope: !5466)
!5520 = !DILocation(line: 1736, column: 59, scope: !5466)
!5521 = !DILocation(line: 1736, column: 7, scope: !5466)
!5522 = !DILocation(line: 1738, column: 16, scope: !5466)
!5523 = !DILocation(line: 1738, column: 22, scope: !5466)
!5524 = !DILocation(line: 1738, column: 11, scope: !5466)
!5525 = !DILocation(line: 1738, column: 36, scope: !5466)
!5526 = !DILocation(line: 1738, column: 42, scope: !5466)
!5527 = !DILocation(line: 1738, column: 34, scope: !5466)
!5528 = !DILocation(line: 1738, column: 58, scope: !5466)
!5529 = !DILocation(line: 1738, column: 64, scope: !5466)
!5530 = !DILocation(line: 1738, column: 56, scope: !5466)
!5531 = !DILocation(line: 1738, column: 8, scope: !5466)
!5532 = !DILocation(line: 1739, column: 20, scope: !5466)
!5533 = !DILocation(line: 1739, column: 26, scope: !5466)
!5534 = !DILocation(line: 1739, column: 18, scope: !5466)
!5535 = !DILocation(line: 1739, column: 11, scope: !5466)
!5536 = !DILocation(line: 1739, column: 40, scope: !5466)
!5537 = !DILocation(line: 1739, column: 46, scope: !5466)
!5538 = !DILocation(line: 1739, column: 38, scope: !5466)
!5539 = !DILocation(line: 1739, column: 62, scope: !5466)
!5540 = !DILocation(line: 1739, column: 68, scope: !5466)
!5541 = !DILocation(line: 1739, column: 60, scope: !5466)
!5542 = !DILocation(line: 1739, column: 8, scope: !5466)
!5543 = !DILocation(line: 1741, column: 7, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5466, file: !3, line: 1741, column: 6)
!5545 = !DILocation(line: 1741, column: 14, scope: !5544)
!5546 = !DILocation(line: 1741, column: 12, scope: !5544)
!5547 = !DILocation(line: 1741, column: 21, scope: !5544)
!5548 = !DILocation(line: 1741, column: 25, scope: !5544)
!5549 = !DILocation(line: 1741, column: 33, scope: !5544)
!5550 = !DILocation(line: 1741, column: 31, scope: !5544)
!5551 = !DILocation(line: 1741, column: 6, scope: !5466)
!5552 = !DILocation(line: 1742, column: 3, scope: !5544)
!5553 = !DILocation(line: 1744, column: 6, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5466, file: !3, line: 1744, column: 6)
!5555 = !DILocation(line: 1744, column: 14, scope: !5554)
!5556 = !DILocation(line: 1744, column: 12, scope: !5554)
!5557 = !DILocation(line: 1744, column: 6, scope: !5466)
!5558 = !DILocation(line: 1745, column: 10, scope: !5554)
!5559 = !DILocation(line: 1745, column: 8, scope: !5554)
!5560 = !DILocation(line: 1745, column: 3, scope: !5554)
!5561 = !DILocation(line: 1747, column: 6, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5466, file: !3, line: 1747, column: 6)
!5563 = !DILocation(line: 1747, column: 14, scope: !5562)
!5564 = !DILocation(line: 1747, column: 12, scope: !5562)
!5565 = !DILocation(line: 1747, column: 6, scope: !5466)
!5566 = !DILocation(line: 1748, column: 10, scope: !5562)
!5567 = !DILocation(line: 1748, column: 8, scope: !5562)
!5568 = !DILocation(line: 1748, column: 3, scope: !5562)
!5569 = !DILocation(line: 1750, column: 16, scope: !5466)
!5570 = !DILocation(line: 1750, column: 22, scope: !5466)
!5571 = !DILocation(line: 1750, column: 11, scope: !5466)
!5572 = !DILocation(line: 1750, column: 36, scope: !5466)
!5573 = !DILocation(line: 1750, column: 42, scope: !5466)
!5574 = !DILocation(line: 1750, column: 34, scope: !5466)
!5575 = !DILocation(line: 1750, column: 58, scope: !5466)
!5576 = !DILocation(line: 1750, column: 64, scope: !5466)
!5577 = !DILocation(line: 1750, column: 56, scope: !5466)
!5578 = !DILocation(line: 1750, column: 8, scope: !5466)
!5579 = !DILocation(line: 1751, column: 20, scope: !5466)
!5580 = !DILocation(line: 1751, column: 26, scope: !5466)
!5581 = !DILocation(line: 1751, column: 18, scope: !5466)
!5582 = !DILocation(line: 1751, column: 11, scope: !5466)
!5583 = !DILocation(line: 1751, column: 40, scope: !5466)
!5584 = !DILocation(line: 1751, column: 46, scope: !5466)
!5585 = !DILocation(line: 1751, column: 38, scope: !5466)
!5586 = !DILocation(line: 1751, column: 62, scope: !5466)
!5587 = !DILocation(line: 1751, column: 68, scope: !5466)
!5588 = !DILocation(line: 1751, column: 60, scope: !5466)
!5589 = !DILocation(line: 1751, column: 8, scope: !5466)
!5590 = !DILocation(line: 1753, column: 7, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5466, file: !3, line: 1753, column: 6)
!5592 = !DILocation(line: 1753, column: 14, scope: !5591)
!5593 = !DILocation(line: 1753, column: 12, scope: !5591)
!5594 = !DILocation(line: 1753, column: 21, scope: !5591)
!5595 = !DILocation(line: 1753, column: 25, scope: !5591)
!5596 = !DILocation(line: 1753, column: 33, scope: !5591)
!5597 = !DILocation(line: 1753, column: 31, scope: !5591)
!5598 = !DILocation(line: 1753, column: 6, scope: !5466)
!5599 = !DILocation(line: 1754, column: 3, scope: !5591)
!5600 = !DILocation(line: 1756, column: 6, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5466, file: !3, line: 1756, column: 6)
!5602 = !DILocation(line: 1756, column: 14, scope: !5601)
!5603 = !DILocation(line: 1756, column: 12, scope: !5601)
!5604 = !DILocation(line: 1756, column: 6, scope: !5466)
!5605 = !DILocation(line: 1757, column: 10, scope: !5601)
!5606 = !DILocation(line: 1757, column: 8, scope: !5601)
!5607 = !DILocation(line: 1757, column: 3, scope: !5601)
!5608 = !DILocation(line: 1763, column: 6, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5466, file: !3, line: 1763, column: 6)
!5610 = !DILocation(line: 1763, column: 6, scope: !5466)
!5611 = !DILocation(line: 1764, column: 17, scope: !5609)
!5612 = !DILocation(line: 1764, column: 5, scope: !5609)
!5613 = !DILocation(line: 1764, column: 15, scope: !5609)
!5614 = !DILocation(line: 1764, column: 3, scope: !5609)
!5615 = !DILocation(line: 1766, column: 2, scope: !5466)
!5616 = !DILocation(line: 1767, column: 1, scope: !5466)
!5617 = distinct !DISubprogram(name: "line_point_factor_v3", scope: !3, file: !3, line: 1799, type: !489, scopeLine: 1800, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!5618 = !DILocalVariable(name: "p", arg: 1, scope: !5617, file: !3, line: 1799, type: !7)
!5619 = !DILocation(line: 1799, column: 40, scope: !5617)
!5620 = !DILocalVariable(name: "l1", arg: 2, scope: !5617, file: !3, line: 1799, type: !7)
!5621 = !DILocation(line: 1799, column: 58, scope: !5617)
!5622 = !DILocalVariable(name: "l2", arg: 3, scope: !5617, file: !3, line: 1799, type: !7)
!5623 = !DILocation(line: 1799, column: 77, scope: !5617)
!5624 = !DILocalVariable(name: "h", scope: !5617, file: !3, line: 1801, type: !117)
!5625 = !DILocation(line: 1801, column: 8, scope: !5617)
!5626 = !DILocalVariable(name: "u", scope: !5617, file: !3, line: 1801, type: !117)
!5627 = !DILocation(line: 1801, column: 14, scope: !5617)
!5628 = !DILocalVariable(name: "dot", scope: !5617, file: !3, line: 1802, type: !9)
!5629 = !DILocation(line: 1802, column: 8, scope: !5617)
!5630 = !DILocation(line: 1803, column: 14, scope: !5617)
!5631 = !DILocation(line: 1803, column: 17, scope: !5617)
!5632 = !DILocation(line: 1803, column: 21, scope: !5617)
!5633 = !DILocation(line: 1803, column: 2, scope: !5617)
!5634 = !DILocation(line: 1804, column: 14, scope: !5617)
!5635 = !DILocation(line: 1804, column: 17, scope: !5617)
!5636 = !DILocation(line: 1804, column: 20, scope: !5617)
!5637 = !DILocation(line: 1804, column: 2, scope: !5617)
!5638 = !DILocation(line: 1809, column: 17, scope: !5617)
!5639 = !DILocation(line: 1809, column: 20, scope: !5617)
!5640 = !DILocation(line: 1809, column: 8, scope: !5617)
!5641 = !DILocation(line: 1809, column: 6, scope: !5617)
!5642 = !DILocation(line: 1810, column: 10, scope: !5617)
!5643 = !DILocation(line: 1810, column: 14, scope: !5617)
!5644 = !DILocation(line: 1810, column: 9, scope: !5617)
!5645 = !DILocation(line: 1810, column: 35, scope: !5617)
!5646 = !DILocation(line: 1810, column: 38, scope: !5617)
!5647 = !DILocation(line: 1810, column: 26, scope: !5617)
!5648 = !DILocation(line: 1810, column: 43, scope: !5617)
!5649 = !DILocation(line: 1810, column: 41, scope: !5617)
!5650 = !DILocation(line: 1810, column: 2, scope: !5617)
!5651 = distinct !DISubprogram(name: "line_point_factor_v2", scope: !3, file: !3, line: 1814, type: !489, scopeLine: 1815, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!5652 = !DILocalVariable(name: "p", arg: 1, scope: !5651, file: !3, line: 1814, type: !7)
!5653 = !DILocation(line: 1814, column: 40, scope: !5651)
!5654 = !DILocalVariable(name: "l1", arg: 2, scope: !5651, file: !3, line: 1814, type: !7)
!5655 = !DILocation(line: 1814, column: 58, scope: !5651)
!5656 = !DILocalVariable(name: "l2", arg: 3, scope: !5651, file: !3, line: 1814, type: !7)
!5657 = !DILocation(line: 1814, column: 77, scope: !5651)
!5658 = !DILocalVariable(name: "h", scope: !5651, file: !3, line: 1816, type: !894)
!5659 = !DILocation(line: 1816, column: 8, scope: !5651)
!5660 = !DILocalVariable(name: "u", scope: !5651, file: !3, line: 1816, type: !894)
!5661 = !DILocation(line: 1816, column: 14, scope: !5651)
!5662 = !DILocalVariable(name: "dot", scope: !5651, file: !3, line: 1817, type: !9)
!5663 = !DILocation(line: 1817, column: 8, scope: !5651)
!5664 = !DILocation(line: 1818, column: 14, scope: !5651)
!5665 = !DILocation(line: 1818, column: 17, scope: !5651)
!5666 = !DILocation(line: 1818, column: 21, scope: !5651)
!5667 = !DILocation(line: 1818, column: 2, scope: !5651)
!5668 = !DILocation(line: 1819, column: 14, scope: !5651)
!5669 = !DILocation(line: 1819, column: 17, scope: !5651)
!5670 = !DILocation(line: 1819, column: 20, scope: !5651)
!5671 = !DILocation(line: 1819, column: 2, scope: !5651)
!5672 = !DILocation(line: 1824, column: 17, scope: !5651)
!5673 = !DILocation(line: 1824, column: 20, scope: !5651)
!5674 = !DILocation(line: 1824, column: 8, scope: !5651)
!5675 = !DILocation(line: 1824, column: 6, scope: !5651)
!5676 = !DILocation(line: 1825, column: 10, scope: !5651)
!5677 = !DILocation(line: 1825, column: 14, scope: !5651)
!5678 = !DILocation(line: 1825, column: 9, scope: !5651)
!5679 = !DILocation(line: 1825, column: 35, scope: !5651)
!5680 = !DILocation(line: 1825, column: 38, scope: !5651)
!5681 = !DILocation(line: 1825, column: 26, scope: !5651)
!5682 = !DILocation(line: 1825, column: 43, scope: !5651)
!5683 = !DILocation(line: 1825, column: 41, scope: !5651)
!5684 = !DILocation(line: 1825, column: 2, scope: !5651)
!5685 = distinct !DISubprogram(name: "line_plane_factor_v3", scope: !3, file: !3, line: 1832, type: !369, scopeLine: 1834, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!5686 = !DILocalVariable(name: "plane_co", arg: 1, scope: !5685, file: !3, line: 1832, type: !7)
!5687 = !DILocation(line: 1832, column: 40, scope: !5685)
!5688 = !DILocalVariable(name: "plane_no", arg: 2, scope: !5685, file: !3, line: 1832, type: !7)
!5689 = !DILocation(line: 1832, column: 65, scope: !5685)
!5690 = !DILocalVariable(name: "l1", arg: 3, scope: !5685, file: !3, line: 1833, type: !7)
!5691 = !DILocation(line: 1833, column: 40, scope: !5685)
!5692 = !DILocalVariable(name: "l2", arg: 4, scope: !5685, file: !3, line: 1833, type: !7)
!5693 = !DILocation(line: 1833, column: 59, scope: !5685)
!5694 = !DILocalVariable(name: "u", scope: !5685, file: !3, line: 1835, type: !117)
!5695 = !DILocation(line: 1835, column: 8, scope: !5685)
!5696 = !DILocalVariable(name: "h", scope: !5685, file: !3, line: 1835, type: !117)
!5697 = !DILocation(line: 1835, column: 14, scope: !5685)
!5698 = !DILocalVariable(name: "dot", scope: !5685, file: !3, line: 1836, type: !9)
!5699 = !DILocation(line: 1836, column: 8, scope: !5685)
!5700 = !DILocation(line: 1837, column: 14, scope: !5685)
!5701 = !DILocation(line: 1837, column: 17, scope: !5685)
!5702 = !DILocation(line: 1837, column: 21, scope: !5685)
!5703 = !DILocation(line: 1837, column: 2, scope: !5685)
!5704 = !DILocation(line: 1838, column: 14, scope: !5685)
!5705 = !DILocation(line: 1838, column: 17, scope: !5685)
!5706 = !DILocation(line: 1838, column: 21, scope: !5685)
!5707 = !DILocation(line: 1838, column: 2, scope: !5685)
!5708 = !DILocation(line: 1839, column: 17, scope: !5685)
!5709 = !DILocation(line: 1839, column: 27, scope: !5685)
!5710 = !DILocation(line: 1839, column: 8, scope: !5685)
!5711 = !DILocation(line: 1839, column: 6, scope: !5685)
!5712 = !DILocation(line: 1840, column: 10, scope: !5685)
!5713 = !DILocation(line: 1840, column: 14, scope: !5685)
!5714 = !DILocation(line: 1840, column: 9, scope: !5685)
!5715 = !DILocation(line: 1840, column: 35, scope: !5685)
!5716 = !DILocation(line: 1840, column: 45, scope: !5685)
!5717 = !DILocation(line: 1840, column: 26, scope: !5685)
!5718 = !DILocation(line: 1840, column: 25, scope: !5685)
!5719 = !DILocation(line: 1840, column: 50, scope: !5685)
!5720 = !DILocation(line: 1840, column: 48, scope: !5685)
!5721 = !DILocation(line: 1840, column: 2, scope: !5685)
!5722 = distinct !DISubprogram(name: "limit_dist_v3", scope: !3, file: !3, line: 1846, type: !5723, scopeLine: 1847, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!5723 = !DISubroutineType(types: !5724)
!5724 = !{null, !10, !10, !8}
!5725 = !DILocalVariable(name: "v1", arg: 1, scope: !5722, file: !3, line: 1846, type: !10)
!5726 = !DILocation(line: 1846, column: 26, scope: !5722)
!5727 = !DILocalVariable(name: "v2", arg: 2, scope: !5722, file: !3, line: 1846, type: !10)
!5728 = !DILocation(line: 1846, column: 39, scope: !5722)
!5729 = !DILocalVariable(name: "dist", arg: 3, scope: !5722, file: !3, line: 1846, type: !8)
!5730 = !DILocation(line: 1846, column: 58, scope: !5722)
!5731 = !DILocalVariable(name: "dist_old", scope: !5722, file: !3, line: 1848, type: !8)
!5732 = !DILocation(line: 1848, column: 14, scope: !5722)
!5733 = !DILocation(line: 1848, column: 34, scope: !5722)
!5734 = !DILocation(line: 1848, column: 38, scope: !5722)
!5735 = !DILocation(line: 1848, column: 25, scope: !5722)
!5736 = !DILocation(line: 1850, column: 6, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 1850, column: 6)
!5738 = !DILocation(line: 1850, column: 17, scope: !5737)
!5739 = !DILocation(line: 1850, column: 15, scope: !5737)
!5740 = !DILocation(line: 1850, column: 6, scope: !5722)
!5741 = !DILocalVariable(name: "v1_old", scope: !5742, file: !3, line: 1851, type: !117)
!5742 = distinct !DILexicalBlock(scope: !5737, file: !3, line: 1850, column: 23)
!5743 = !DILocation(line: 1851, column: 9, scope: !5742)
!5744 = !DILocalVariable(name: "v2_old", scope: !5742, file: !3, line: 1852, type: !117)
!5745 = !DILocation(line: 1852, column: 9, scope: !5742)
!5746 = !DILocalVariable(name: "fac", scope: !5742, file: !3, line: 1853, type: !9)
!5747 = !DILocation(line: 1853, column: 9, scope: !5742)
!5748 = !DILocation(line: 1853, column: 16, scope: !5742)
!5749 = !DILocation(line: 1853, column: 23, scope: !5742)
!5750 = !DILocation(line: 1853, column: 21, scope: !5742)
!5751 = !DILocation(line: 1853, column: 33, scope: !5742)
!5752 = !DILocation(line: 1855, column: 14, scope: !5742)
!5753 = !DILocation(line: 1855, column: 22, scope: !5742)
!5754 = !DILocation(line: 1855, column: 3, scope: !5742)
!5755 = !DILocation(line: 1856, column: 14, scope: !5742)
!5756 = !DILocation(line: 1856, column: 22, scope: !5742)
!5757 = !DILocation(line: 1856, column: 3, scope: !5742)
!5758 = !DILocation(line: 1858, column: 18, scope: !5742)
!5759 = !DILocation(line: 1858, column: 22, scope: !5742)
!5760 = !DILocation(line: 1858, column: 30, scope: !5742)
!5761 = !DILocation(line: 1858, column: 45, scope: !5742)
!5762 = !DILocation(line: 1858, column: 43, scope: !5742)
!5763 = !DILocation(line: 1858, column: 3, scope: !5742)
!5764 = !DILocation(line: 1859, column: 18, scope: !5742)
!5765 = !DILocation(line: 1859, column: 22, scope: !5742)
!5766 = !DILocation(line: 1859, column: 30, scope: !5742)
!5767 = !DILocation(line: 1859, column: 45, scope: !5742)
!5768 = !DILocation(line: 1859, column: 43, scope: !5742)
!5769 = !DILocation(line: 1859, column: 3, scope: !5742)
!5770 = !DILocation(line: 1860, column: 2, scope: !5742)
!5771 = !DILocation(line: 1861, column: 1, scope: !5722)
!5772 = distinct !DISubprogram(name: "len_v3v3", scope: !184, file: !184, line: 759, type: !565, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!5773 = !DILocalVariable(name: "a", arg: 1, scope: !5772, file: !184, line: 759, type: !7)
!5774 = !DILocation(line: 759, column: 36, scope: !5772)
!5775 = !DILocalVariable(name: "b", arg: 2, scope: !5772, file: !184, line: 759, type: !7)
!5776 = !DILocation(line: 759, column: 54, scope: !5772)
!5777 = !DILocalVariable(name: "d", scope: !5772, file: !184, line: 761, type: !117)
!5778 = !DILocation(line: 761, column: 8, scope: !5772)
!5779 = !DILocation(line: 763, column: 14, scope: !5772)
!5780 = !DILocation(line: 763, column: 17, scope: !5772)
!5781 = !DILocation(line: 763, column: 20, scope: !5772)
!5782 = !DILocation(line: 763, column: 2, scope: !5772)
!5783 = !DILocation(line: 764, column: 16, scope: !5772)
!5784 = !DILocation(line: 764, column: 9, scope: !5772)
!5785 = !DILocation(line: 764, column: 2, scope: !5772)
!5786 = distinct !DISubprogram(name: "isect_point_tri_v2_int", scope: !3, file: !3, line: 1870, type: !5787, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!5787 = !DISubroutineType(types: !5788)
!5788 = !{!17, !1841, !1841, !1841, !1841, !1841, !1841}
!5789 = !DILocalVariable(name: "x1", arg: 1, scope: !5786, file: !3, line: 1870, type: !1841)
!5790 = !DILocation(line: 1870, column: 38, scope: !5786)
!5791 = !DILocalVariable(name: "y1", arg: 2, scope: !5786, file: !3, line: 1870, type: !1841)
!5792 = !DILocation(line: 1870, column: 52, scope: !5786)
!5793 = !DILocalVariable(name: "x2", arg: 3, scope: !5786, file: !3, line: 1870, type: !1841)
!5794 = !DILocation(line: 1870, column: 66, scope: !5786)
!5795 = !DILocalVariable(name: "y2", arg: 4, scope: !5786, file: !3, line: 1870, type: !1841)
!5796 = !DILocation(line: 1870, column: 80, scope: !5786)
!5797 = !DILocalVariable(name: "a", arg: 5, scope: !5786, file: !3, line: 1870, type: !1841)
!5798 = !DILocation(line: 1870, column: 94, scope: !5786)
!5799 = !DILocalVariable(name: "b", arg: 6, scope: !5786, file: !3, line: 1870, type: !1841)
!5800 = !DILocation(line: 1870, column: 107, scope: !5786)
!5801 = !DILocalVariable(name: "v1", scope: !5786, file: !3, line: 1872, type: !894)
!5802 = !DILocation(line: 1872, column: 8, scope: !5786)
!5803 = !DILocalVariable(name: "v2", scope: !5786, file: !3, line: 1872, type: !894)
!5804 = !DILocation(line: 1872, column: 15, scope: !5786)
!5805 = !DILocalVariable(name: "v3", scope: !5786, file: !3, line: 1872, type: !894)
!5806 = !DILocation(line: 1872, column: 22, scope: !5786)
!5807 = !DILocalVariable(name: "p", scope: !5786, file: !3, line: 1872, type: !894)
!5808 = !DILocation(line: 1872, column: 29, scope: !5786)
!5809 = !DILocation(line: 1874, column: 17, scope: !5786)
!5810 = !DILocation(line: 1874, column: 10, scope: !5786)
!5811 = !DILocation(line: 1874, column: 2, scope: !5786)
!5812 = !DILocation(line: 1874, column: 8, scope: !5786)
!5813 = !DILocation(line: 1875, column: 17, scope: !5786)
!5814 = !DILocation(line: 1875, column: 10, scope: !5786)
!5815 = !DILocation(line: 1875, column: 2, scope: !5786)
!5816 = !DILocation(line: 1875, column: 8, scope: !5786)
!5817 = !DILocation(line: 1877, column: 17, scope: !5786)
!5818 = !DILocation(line: 1877, column: 10, scope: !5786)
!5819 = !DILocation(line: 1877, column: 2, scope: !5786)
!5820 = !DILocation(line: 1877, column: 8, scope: !5786)
!5821 = !DILocation(line: 1878, column: 17, scope: !5786)
!5822 = !DILocation(line: 1878, column: 10, scope: !5786)
!5823 = !DILocation(line: 1878, column: 2, scope: !5786)
!5824 = !DILocation(line: 1878, column: 8, scope: !5786)
!5825 = !DILocation(line: 1880, column: 17, scope: !5786)
!5826 = !DILocation(line: 1880, column: 10, scope: !5786)
!5827 = !DILocation(line: 1880, column: 2, scope: !5786)
!5828 = !DILocation(line: 1880, column: 8, scope: !5786)
!5829 = !DILocation(line: 1881, column: 17, scope: !5786)
!5830 = !DILocation(line: 1881, column: 10, scope: !5786)
!5831 = !DILocation(line: 1881, column: 2, scope: !5786)
!5832 = !DILocation(line: 1881, column: 8, scope: !5786)
!5833 = !DILocation(line: 1883, column: 16, scope: !5786)
!5834 = !DILocation(line: 1883, column: 9, scope: !5786)
!5835 = !DILocation(line: 1883, column: 2, scope: !5786)
!5836 = !DILocation(line: 1883, column: 7, scope: !5786)
!5837 = !DILocation(line: 1884, column: 16, scope: !5786)
!5838 = !DILocation(line: 1884, column: 9, scope: !5786)
!5839 = !DILocation(line: 1884, column: 2, scope: !5786)
!5840 = !DILocation(line: 1884, column: 7, scope: !5786)
!5841 = !DILocation(line: 1886, column: 28, scope: !5786)
!5842 = !DILocation(line: 1886, column: 31, scope: !5786)
!5843 = !DILocation(line: 1886, column: 35, scope: !5786)
!5844 = !DILocation(line: 1886, column: 39, scope: !5786)
!5845 = !DILocation(line: 1886, column: 9, scope: !5786)
!5846 = !DILocation(line: 1886, column: 2, scope: !5786)
!5847 = distinct !DISubprogram(name: "isect_point_tri_prism_v3", scope: !3, file: !3, line: 1937, type: !2473, scopeLine: 1938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!5848 = !DILocalVariable(name: "p", arg: 1, scope: !5847, file: !3, line: 1937, type: !7)
!5849 = !DILocation(line: 1937, column: 43, scope: !5847)
!5850 = !DILocalVariable(name: "v1", arg: 2, scope: !5847, file: !3, line: 1937, type: !7)
!5851 = !DILocation(line: 1937, column: 61, scope: !5847)
!5852 = !DILocalVariable(name: "v2", arg: 3, scope: !5847, file: !3, line: 1937, type: !7)
!5853 = !DILocation(line: 1937, column: 80, scope: !5847)
!5854 = !DILocalVariable(name: "v3", arg: 4, scope: !5847, file: !3, line: 1937, type: !7)
!5855 = !DILocation(line: 1937, column: 99, scope: !5847)
!5856 = !DILocation(line: 1939, column: 22, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5847, file: !3, line: 1939, column: 6)
!5858 = !DILocation(line: 1939, column: 25, scope: !5857)
!5859 = !DILocation(line: 1939, column: 29, scope: !5857)
!5860 = !DILocation(line: 1939, column: 33, scope: !5857)
!5861 = !DILocation(line: 1939, column: 7, scope: !5857)
!5862 = !DILocation(line: 1939, column: 6, scope: !5847)
!5863 = !DILocation(line: 1939, column: 38, scope: !5857)
!5864 = !DILocation(line: 1940, column: 22, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5847, file: !3, line: 1940, column: 6)
!5866 = !DILocation(line: 1940, column: 25, scope: !5865)
!5867 = !DILocation(line: 1940, column: 29, scope: !5865)
!5868 = !DILocation(line: 1940, column: 33, scope: !5865)
!5869 = !DILocation(line: 1940, column: 7, scope: !5865)
!5870 = !DILocation(line: 1940, column: 6, scope: !5847)
!5871 = !DILocation(line: 1940, column: 38, scope: !5865)
!5872 = !DILocation(line: 1941, column: 22, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5847, file: !3, line: 1941, column: 6)
!5874 = !DILocation(line: 1941, column: 25, scope: !5873)
!5875 = !DILocation(line: 1941, column: 29, scope: !5873)
!5876 = !DILocation(line: 1941, column: 33, scope: !5873)
!5877 = !DILocation(line: 1941, column: 7, scope: !5873)
!5878 = !DILocation(line: 1941, column: 6, scope: !5847)
!5879 = !DILocation(line: 1941, column: 38, scope: !5873)
!5880 = !DILocation(line: 1942, column: 2, scope: !5847)
!5881 = !DILocation(line: 1943, column: 1, scope: !5847)
!5882 = distinct !DISubprogram(name: "point_in_slice", scope: !3, file: !3, line: 1889, type: !2473, scopeLine: 1890, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!5883 = !DILocalVariable(name: "p", arg: 1, scope: !5882, file: !3, line: 1889, type: !7)
!5884 = !DILocation(line: 1889, column: 40, scope: !5882)
!5885 = !DILocalVariable(name: "v1", arg: 2, scope: !5882, file: !3, line: 1889, type: !7)
!5886 = !DILocation(line: 1889, column: 58, scope: !5882)
!5887 = !DILocalVariable(name: "l1", arg: 3, scope: !5882, file: !3, line: 1889, type: !7)
!5888 = !DILocation(line: 1889, column: 77, scope: !5882)
!5889 = !DILocalVariable(name: "l2", arg: 4, scope: !5882, file: !3, line: 1889, type: !7)
!5890 = !DILocation(line: 1889, column: 96, scope: !5882)
!5891 = !DILocalVariable(name: "h", scope: !5882, file: !3, line: 1903, type: !9)
!5892 = !DILocation(line: 1903, column: 8, scope: !5882)
!5893 = !DILocalVariable(name: "rp", scope: !5882, file: !3, line: 1903, type: !117)
!5894 = !DILocation(line: 1903, column: 11, scope: !5882)
!5895 = !DILocalVariable(name: "cp", scope: !5882, file: !3, line: 1903, type: !117)
!5896 = !DILocation(line: 1903, column: 18, scope: !5882)
!5897 = !DILocalVariable(name: "q", scope: !5882, file: !3, line: 1903, type: !117)
!5898 = !DILocation(line: 1903, column: 25, scope: !5882)
!5899 = !DILocation(line: 1905, column: 21, scope: !5882)
!5900 = !DILocation(line: 1905, column: 25, scope: !5882)
!5901 = !DILocation(line: 1905, column: 29, scope: !5882)
!5902 = !DILocation(line: 1905, column: 33, scope: !5882)
!5903 = !DILocation(line: 1905, column: 2, scope: !5882)
!5904 = !DILocation(line: 1906, column: 14, scope: !5882)
!5905 = !DILocation(line: 1906, column: 17, scope: !5882)
!5906 = !DILocation(line: 1906, column: 21, scope: !5882)
!5907 = !DILocation(line: 1906, column: 2, scope: !5882)
!5908 = !DILocation(line: 1908, column: 14, scope: !5882)
!5909 = !DILocation(line: 1908, column: 18, scope: !5882)
!5910 = !DILocation(line: 1908, column: 21, scope: !5882)
!5911 = !DILocation(line: 1908, column: 2, scope: !5882)
!5912 = !DILocation(line: 1909, column: 15, scope: !5882)
!5913 = !DILocation(line: 1909, column: 18, scope: !5882)
!5914 = !DILocation(line: 1909, column: 6, scope: !5882)
!5915 = !DILocation(line: 1909, column: 33, scope: !5882)
!5916 = !DILocation(line: 1909, column: 36, scope: !5882)
!5917 = !DILocation(line: 1909, column: 24, scope: !5882)
!5918 = !DILocation(line: 1909, column: 22, scope: !5882)
!5919 = !DILocation(line: 1909, column: 4, scope: !5882)
!5920 = !DILocation(line: 1910, column: 10, scope: !5882)
!5921 = !DILocation(line: 1910, column: 12, scope: !5882)
!5922 = !DILocation(line: 1910, column: 19, scope: !5882)
!5923 = !DILocation(line: 1910, column: 22, scope: !5882)
!5924 = !DILocation(line: 1910, column: 24, scope: !5882)
!5925 = !DILocation(line: 1910, column: 9, scope: !5882)
!5926 = !DILocation(line: 1910, column: 2, scope: !5882)
!5927 = distinct !DISubprogram(name: "isect_point_tri_v3", scope: !3, file: !3, line: 1950, type: !5928, scopeLine: 1952, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!5928 = !DISubroutineType(types: !5929)
!5929 = !{!6, !7, !7, !7, !7, !10}
!5930 = !DILocalVariable(name: "p", arg: 1, scope: !5927, file: !3, line: 1950, type: !7)
!5931 = !DILocation(line: 1950, column: 37, scope: !5927)
!5932 = !DILocalVariable(name: "v1", arg: 2, scope: !5927, file: !3, line: 1950, type: !7)
!5933 = !DILocation(line: 1950, column: 55, scope: !5927)
!5934 = !DILocalVariable(name: "v2", arg: 3, scope: !5927, file: !3, line: 1950, type: !7)
!5935 = !DILocation(line: 1950, column: 74, scope: !5927)
!5936 = !DILocalVariable(name: "v3", arg: 4, scope: !5927, file: !3, line: 1950, type: !7)
!5937 = !DILocation(line: 1950, column: 93, scope: !5927)
!5938 = !DILocalVariable(name: "r_vi", arg: 5, scope: !5927, file: !3, line: 1951, type: !10)
!5939 = !DILocation(line: 1951, column: 31, scope: !5927)
!5940 = !DILocation(line: 1953, column: 31, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5927, file: !3, line: 1953, column: 6)
!5942 = !DILocation(line: 1953, column: 34, scope: !5941)
!5943 = !DILocation(line: 1953, column: 38, scope: !5941)
!5944 = !DILocation(line: 1953, column: 42, scope: !5941)
!5945 = !DILocation(line: 1953, column: 6, scope: !5941)
!5946 = !DILocation(line: 1953, column: 6, scope: !5927)
!5947 = !DILocalVariable(name: "no", scope: !5948, file: !3, line: 1954, type: !117)
!5948 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 1953, column: 47)
!5949 = !DILocation(line: 1954, column: 9, scope: !5948)
!5950 = !DILocalVariable(name: "n1", scope: !5948, file: !3, line: 1954, type: !117)
!5951 = !DILocation(line: 1954, column: 16, scope: !5948)
!5952 = !DILocalVariable(name: "n2", scope: !5948, file: !3, line: 1954, type: !117)
!5953 = !DILocation(line: 1954, column: 23, scope: !5948)
!5954 = !DILocation(line: 1957, column: 15, scope: !5948)
!5955 = !DILocation(line: 1957, column: 19, scope: !5948)
!5956 = !DILocation(line: 1957, column: 23, scope: !5948)
!5957 = !DILocation(line: 1957, column: 3, scope: !5948)
!5958 = !DILocation(line: 1958, column: 15, scope: !5948)
!5959 = !DILocation(line: 1958, column: 19, scope: !5948)
!5960 = !DILocation(line: 1958, column: 23, scope: !5948)
!5961 = !DILocation(line: 1958, column: 3, scope: !5948)
!5962 = !DILocation(line: 1959, column: 17, scope: !5948)
!5963 = !DILocation(line: 1959, column: 21, scope: !5948)
!5964 = !DILocation(line: 1959, column: 25, scope: !5948)
!5965 = !DILocation(line: 1959, column: 3, scope: !5948)
!5966 = !DILocation(line: 1961, column: 7, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5948, file: !3, line: 1961, column: 7)
!5968 = !DILocation(line: 1961, column: 7, scope: !5948)
!5969 = !DILocalVariable(name: "plane", scope: !5970, file: !3, line: 1962, type: !3952)
!5970 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 1961, column: 43)
!5971 = !DILocation(line: 1962, column: 10, scope: !5970)
!5972 = !DILocation(line: 1963, column: 31, scope: !5970)
!5973 = !DILocation(line: 1963, column: 38, scope: !5970)
!5974 = !DILocation(line: 1963, column: 42, scope: !5970)
!5975 = !DILocation(line: 1963, column: 4, scope: !5970)
!5976 = !DILocation(line: 1964, column: 24, scope: !5970)
!5977 = !DILocation(line: 1964, column: 30, scope: !5970)
!5978 = !DILocation(line: 1964, column: 37, scope: !5970)
!5979 = !DILocation(line: 1964, column: 4, scope: !5970)
!5980 = !DILocation(line: 1965, column: 3, scope: !5970)
!5981 = !DILocation(line: 1968, column: 15, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 1966, column: 8)
!5983 = !DILocation(line: 1968, column: 21, scope: !5982)
!5984 = !DILocation(line: 1968, column: 4, scope: !5982)
!5985 = !DILocation(line: 1971, column: 3, scope: !5948)
!5986 = !DILocation(line: 1974, column: 3, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 1973, column: 7)
!5988 = !DILocation(line: 1976, column: 1, scope: !5927)
!5989 = distinct !DISubprogram(name: "clip_segment_v3_plane", scope: !3, file: !3, line: 1978, type: !5990, scopeLine: 1979, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!5990 = !DISubroutineType(types: !5991)
!5991 = !{!6, !10, !10, !7}
!5992 = !DILocalVariable(name: "p1", arg: 1, scope: !5989, file: !3, line: 1978, type: !10)
!5993 = !DILocation(line: 1978, column: 34, scope: !5989)
!5994 = !DILocalVariable(name: "p2", arg: 2, scope: !5989, file: !3, line: 1978, type: !10)
!5995 = !DILocation(line: 1978, column: 47, scope: !5989)
!5996 = !DILocalVariable(name: "plane", arg: 3, scope: !5989, file: !3, line: 1978, type: !7)
!5997 = !DILocation(line: 1978, column: 66, scope: !5989)
!5998 = !DILocalVariable(name: "dp", scope: !5989, file: !3, line: 1980, type: !117)
!5999 = !DILocation(line: 1980, column: 8, scope: !5989)
!6000 = !DILocalVariable(name: "div", scope: !5989, file: !3, line: 1980, type: !9)
!6001 = !DILocation(line: 1980, column: 15, scope: !5989)
!6002 = !DILocalVariable(name: "t", scope: !5989, file: !3, line: 1980, type: !9)
!6003 = !DILocation(line: 1980, column: 20, scope: !5989)
!6004 = !DILocalVariable(name: "pc", scope: !5989, file: !3, line: 1980, type: !117)
!6005 = !DILocation(line: 1980, column: 23, scope: !5989)
!6006 = !DILocation(line: 1982, column: 14, scope: !5989)
!6007 = !DILocation(line: 1982, column: 18, scope: !5989)
!6008 = !DILocation(line: 1982, column: 22, scope: !5989)
!6009 = !DILocation(line: 1982, column: 2, scope: !5989)
!6010 = !DILocation(line: 1983, column: 17, scope: !5989)
!6011 = !DILocation(line: 1983, column: 21, scope: !5989)
!6012 = !DILocation(line: 1983, column: 8, scope: !5989)
!6013 = !DILocation(line: 1983, column: 6, scope: !5989)
!6014 = !DILocation(line: 1985, column: 6, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !5989, file: !3, line: 1985, column: 6)
!6016 = !DILocation(line: 1985, column: 10, scope: !6015)
!6017 = !DILocation(line: 1985, column: 6, scope: !5989)
!6018 = !DILocation(line: 1986, column: 3, scope: !6015)
!6019 = !DILocation(line: 1988, column: 27, scope: !5989)
!6020 = !DILocation(line: 1988, column: 34, scope: !5989)
!6021 = !DILocation(line: 1988, column: 7, scope: !5989)
!6022 = !DILocation(line: 1988, column: 6, scope: !5989)
!6023 = !DILocation(line: 1988, column: 40, scope: !5989)
!6024 = !DILocation(line: 1988, column: 38, scope: !5989)
!6025 = !DILocation(line: 1988, column: 4, scope: !5989)
!6026 = !DILocation(line: 1990, column: 6, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !5989, file: !3, line: 1990, column: 6)
!6028 = !DILocation(line: 1990, column: 10, scope: !6027)
!6029 = !DILocation(line: 1990, column: 6, scope: !5989)
!6030 = !DILocation(line: 1992, column: 7, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 1992, column: 7)
!6032 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 1990, column: 18)
!6033 = !DILocation(line: 1992, column: 9, scope: !6031)
!6034 = !DILocation(line: 1992, column: 7, scope: !6032)
!6035 = !DILocation(line: 1993, column: 12, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6031, file: !3, line: 1992, column: 18)
!6037 = !DILocation(line: 1993, column: 4, scope: !6036)
!6038 = !DILocation(line: 1994, column: 12, scope: !6036)
!6039 = !DILocation(line: 1994, column: 4, scope: !6036)
!6040 = !DILocation(line: 1995, column: 4, scope: !6036)
!6041 = !DILocation(line: 1999, column: 7, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 1999, column: 7)
!6043 = !DILocation(line: 1999, column: 9, scope: !6042)
!6044 = !DILocation(line: 1999, column: 7, scope: !6032)
!6045 = !DILocation(line: 2000, column: 19, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6042, file: !3, line: 1999, column: 17)
!6047 = !DILocation(line: 2000, column: 23, scope: !6046)
!6048 = !DILocation(line: 2000, column: 27, scope: !6046)
!6049 = !DILocation(line: 2000, column: 31, scope: !6046)
!6050 = !DILocation(line: 2000, column: 4, scope: !6046)
!6051 = !DILocation(line: 2001, column: 15, scope: !6046)
!6052 = !DILocation(line: 2001, column: 19, scope: !6046)
!6053 = !DILocation(line: 2001, column: 4, scope: !6046)
!6054 = !DILocation(line: 2002, column: 4, scope: !6046)
!6055 = !DILocation(line: 2005, column: 3, scope: !6032)
!6056 = !DILocation(line: 2009, column: 7, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6058, file: !3, line: 2009, column: 7)
!6058 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 2007, column: 7)
!6059 = !DILocation(line: 2009, column: 9, scope: !6057)
!6060 = !DILocation(line: 2009, column: 7, scope: !6058)
!6061 = !DILocation(line: 2010, column: 12, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 2009, column: 18)
!6063 = !DILocation(line: 2010, column: 4, scope: !6062)
!6064 = !DILocation(line: 2011, column: 12, scope: !6062)
!6065 = !DILocation(line: 2011, column: 4, scope: !6062)
!6066 = !DILocation(line: 2012, column: 4, scope: !6062)
!6067 = !DILocation(line: 2016, column: 7, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6058, file: !3, line: 2016, column: 7)
!6069 = !DILocation(line: 2016, column: 9, scope: !6068)
!6070 = !DILocation(line: 2016, column: 7, scope: !6058)
!6071 = !DILocation(line: 2017, column: 19, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6068, file: !3, line: 2016, column: 17)
!6073 = !DILocation(line: 2017, column: 23, scope: !6072)
!6074 = !DILocation(line: 2017, column: 27, scope: !6072)
!6075 = !DILocation(line: 2017, column: 31, scope: !6072)
!6076 = !DILocation(line: 2017, column: 4, scope: !6072)
!6077 = !DILocation(line: 2018, column: 15, scope: !6072)
!6078 = !DILocation(line: 2018, column: 19, scope: !6072)
!6079 = !DILocation(line: 2018, column: 4, scope: !6072)
!6080 = !DILocation(line: 2019, column: 4, scope: !6072)
!6081 = !DILocation(line: 2022, column: 3, scope: !6058)
!6082 = !DILocation(line: 2024, column: 1, scope: !5989)
!6083 = distinct !DISubprogram(name: "clip_segment_v3_plane_n", scope: !3, file: !3, line: 2026, type: !6084, scopeLine: 2027, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!6084 = !DISubroutineType(types: !6085)
!6085 = !{!6, !10, !10, !3951, !1841}
!6086 = !DILocalVariable(name: "r_p1", arg: 1, scope: !6083, file: !3, line: 2026, type: !10)
!6087 = !DILocation(line: 2026, column: 36, scope: !6083)
!6088 = !DILocalVariable(name: "r_p2", arg: 2, scope: !6083, file: !3, line: 2026, type: !10)
!6089 = !DILocation(line: 2026, column: 51, scope: !6083)
!6090 = !DILocalVariable(name: "plane_array", arg: 3, scope: !6083, file: !3, line: 2026, type: !3951)
!6091 = !DILocation(line: 2026, column: 66, scope: !6083)
!6092 = !DILocalVariable(name: "plane_tot", arg: 4, scope: !6083, file: !3, line: 2026, type: !1841)
!6093 = !DILocation(line: 2026, column: 94, scope: !6083)
!6094 = !DILocalVariable(name: "p1", scope: !6083, file: !3, line: 2029, type: !117)
!6095 = !DILocation(line: 2029, column: 8, scope: !6083)
!6096 = !DILocalVariable(name: "p2", scope: !6083, file: !3, line: 2029, type: !117)
!6097 = !DILocation(line: 2029, column: 15, scope: !6083)
!6098 = !DILocalVariable(name: "dp", scope: !6083, file: !3, line: 2029, type: !117)
!6099 = !DILocation(line: 2029, column: 22, scope: !6083)
!6100 = !DILocalVariable(name: "dp_orig", scope: !6083, file: !3, line: 2029, type: !117)
!6101 = !DILocation(line: 2029, column: 29, scope: !6083)
!6102 = !DILocalVariable(name: "i", scope: !6083, file: !3, line: 2030, type: !17)
!6103 = !DILocation(line: 2030, column: 6, scope: !6083)
!6104 = !DILocation(line: 2031, column: 13, scope: !6083)
!6105 = !DILocation(line: 2031, column: 17, scope: !6083)
!6106 = !DILocation(line: 2031, column: 2, scope: !6083)
!6107 = !DILocation(line: 2032, column: 13, scope: !6083)
!6108 = !DILocation(line: 2032, column: 17, scope: !6083)
!6109 = !DILocation(line: 2032, column: 2, scope: !6083)
!6110 = !DILocation(line: 2034, column: 14, scope: !6083)
!6111 = !DILocation(line: 2034, column: 18, scope: !6083)
!6112 = !DILocation(line: 2034, column: 22, scope: !6083)
!6113 = !DILocation(line: 2034, column: 2, scope: !6083)
!6114 = !DILocation(line: 2035, column: 13, scope: !6083)
!6115 = !DILocation(line: 2035, column: 22, scope: !6083)
!6116 = !DILocation(line: 2035, column: 2, scope: !6083)
!6117 = !DILocation(line: 2037, column: 9, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6083, file: !3, line: 2037, column: 2)
!6119 = !DILocation(line: 2037, column: 7, scope: !6118)
!6120 = !DILocation(line: 2037, column: 14, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 2037, column: 2)
!6122 = !DILocation(line: 2037, column: 18, scope: !6121)
!6123 = !DILocation(line: 2037, column: 16, scope: !6121)
!6124 = !DILocation(line: 2037, column: 2, scope: !6118)
!6125 = !DILocalVariable(name: "plane", scope: !6126, file: !3, line: 2038, type: !7)
!6126 = distinct !DILexicalBlock(scope: !6121, file: !3, line: 2037, column: 34)
!6127 = !DILocation(line: 2038, column: 16, scope: !6126)
!6128 = !DILocation(line: 2038, column: 24, scope: !6126)
!6129 = !DILocation(line: 2038, column: 36, scope: !6126)
!6130 = !DILocalVariable(name: "div", scope: !6126, file: !3, line: 2039, type: !8)
!6131 = !DILocation(line: 2039, column: 15, scope: !6126)
!6132 = !DILocation(line: 2039, column: 30, scope: !6126)
!6133 = !DILocation(line: 2039, column: 34, scope: !6126)
!6134 = !DILocation(line: 2039, column: 21, scope: !6126)
!6135 = !DILocation(line: 2041, column: 7, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6126, file: !3, line: 2041, column: 7)
!6137 = !DILocation(line: 2041, column: 11, scope: !6136)
!6138 = !DILocation(line: 2041, column: 7, scope: !6126)
!6139 = !DILocalVariable(name: "t", scope: !6140, file: !3, line: 2042, type: !8)
!6140 = distinct !DILexicalBlock(scope: !6136, file: !3, line: 2041, column: 20)
!6141 = !DILocation(line: 2042, column: 16, scope: !6140)
!6142 = !DILocation(line: 2042, column: 41, scope: !6140)
!6143 = !DILocation(line: 2042, column: 48, scope: !6140)
!6144 = !DILocation(line: 2042, column: 21, scope: !6140)
!6145 = !DILocation(line: 2042, column: 20, scope: !6140)
!6146 = !DILocation(line: 2042, column: 54, scope: !6140)
!6147 = !DILocation(line: 2042, column: 52, scope: !6140)
!6148 = !DILocation(line: 2043, column: 8, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6140, file: !3, line: 2043, column: 8)
!6150 = !DILocation(line: 2043, column: 12, scope: !6149)
!6151 = !DILocation(line: 2043, column: 8, scope: !6140)
!6152 = !DILocation(line: 2045, column: 9, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6154, file: !3, line: 2045, column: 9)
!6154 = distinct !DILexicalBlock(scope: !6149, file: !3, line: 2043, column: 20)
!6155 = !DILocation(line: 2045, column: 11, scope: !6153)
!6156 = !DILocation(line: 2045, column: 9, scope: !6154)
!6157 = !DILocation(line: 2046, column: 6, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6153, file: !3, line: 2045, column: 20)
!6159 = !DILocation(line: 2050, column: 9, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6154, file: !3, line: 2050, column: 9)
!6161 = !DILocation(line: 2050, column: 11, scope: !6160)
!6162 = !DILocation(line: 2050, column: 9, scope: !6154)
!6163 = !DILocation(line: 2051, column: 21, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6160, file: !3, line: 2050, column: 19)
!6165 = !DILocation(line: 2051, column: 25, scope: !6164)
!6166 = !DILocation(line: 2051, column: 29, scope: !6164)
!6167 = !DILocation(line: 2051, column: 33, scope: !6164)
!6168 = !DILocation(line: 2051, column: 6, scope: !6164)
!6169 = !DILocation(line: 2053, column: 18, scope: !6164)
!6170 = !DILocation(line: 2053, column: 22, scope: !6164)
!6171 = !DILocation(line: 2053, column: 26, scope: !6164)
!6172 = !DILocation(line: 2053, column: 6, scope: !6164)
!6173 = !DILocation(line: 2054, column: 19, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6164, file: !3, line: 2054, column: 10)
!6175 = !DILocation(line: 2054, column: 23, scope: !6174)
!6176 = !DILocation(line: 2054, column: 10, scope: !6174)
!6177 = !DILocation(line: 2054, column: 32, scope: !6174)
!6178 = !DILocation(line: 2054, column: 10, scope: !6164)
!6179 = !DILocation(line: 2055, column: 7, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6174, file: !3, line: 2054, column: 40)
!6181 = !DILocation(line: 2057, column: 5, scope: !6164)
!6182 = !DILocation(line: 2058, column: 4, scope: !6154)
!6183 = !DILocation(line: 2059, column: 13, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6149, file: !3, line: 2059, column: 13)
!6185 = !DILocation(line: 2059, column: 17, scope: !6184)
!6186 = !DILocation(line: 2059, column: 13, scope: !6149)
!6187 = !DILocation(line: 2061, column: 9, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 2061, column: 9)
!6189 = distinct !DILexicalBlock(scope: !6184, file: !3, line: 2059, column: 25)
!6190 = !DILocation(line: 2061, column: 11, scope: !6188)
!6191 = !DILocation(line: 2061, column: 9, scope: !6189)
!6192 = !DILocation(line: 2062, column: 6, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 2061, column: 20)
!6194 = !DILocation(line: 2066, column: 9, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 2066, column: 9)
!6196 = !DILocation(line: 2066, column: 11, scope: !6195)
!6197 = !DILocation(line: 2066, column: 9, scope: !6189)
!6198 = !DILocation(line: 2067, column: 21, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 2066, column: 19)
!6200 = !DILocation(line: 2067, column: 25, scope: !6199)
!6201 = !DILocation(line: 2067, column: 29, scope: !6199)
!6202 = !DILocation(line: 2067, column: 33, scope: !6199)
!6203 = !DILocation(line: 2067, column: 6, scope: !6199)
!6204 = !DILocation(line: 2069, column: 18, scope: !6199)
!6205 = !DILocation(line: 2069, column: 22, scope: !6199)
!6206 = !DILocation(line: 2069, column: 26, scope: !6199)
!6207 = !DILocation(line: 2069, column: 6, scope: !6199)
!6208 = !DILocation(line: 2070, column: 19, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 2070, column: 10)
!6210 = !DILocation(line: 2070, column: 23, scope: !6209)
!6211 = !DILocation(line: 2070, column: 10, scope: !6209)
!6212 = !DILocation(line: 2070, column: 32, scope: !6209)
!6213 = !DILocation(line: 2070, column: 10, scope: !6199)
!6214 = !DILocation(line: 2071, column: 7, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 2070, column: 40)
!6216 = !DILocation(line: 2073, column: 5, scope: !6199)
!6217 = !DILocation(line: 2074, column: 4, scope: !6189)
!6218 = !DILocation(line: 2075, column: 3, scope: !6140)
!6219 = !DILocation(line: 2076, column: 2, scope: !6126)
!6220 = !DILocation(line: 2037, column: 30, scope: !6121)
!6221 = !DILocation(line: 2037, column: 2, scope: !6121)
!6222 = distinct !{!6222, !6124, !6223}
!6223 = !DILocation(line: 2076, column: 2, scope: !6118)
!6224 = !DILocation(line: 2078, column: 13, scope: !6083)
!6225 = !DILocation(line: 2078, column: 19, scope: !6083)
!6226 = !DILocation(line: 2078, column: 2, scope: !6083)
!6227 = !DILocation(line: 2079, column: 13, scope: !6083)
!6228 = !DILocation(line: 2079, column: 19, scope: !6083)
!6229 = !DILocation(line: 2079, column: 2, scope: !6083)
!6230 = !DILocation(line: 2080, column: 2, scope: !6083)
!6231 = !DILocation(line: 2081, column: 1, scope: !6083)
!6232 = distinct !DISubprogram(name: "plot_line_v2v2i", scope: !3, file: !3, line: 2083, type: !6233, scopeLine: 2084, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!6233 = !DISubroutineType(types: !6234)
!6234 = !{null, !1840, !1840, !6235, !19}
!6235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6236, size: 64)
!6236 = !DISubroutineType(types: !6237)
!6237 = !{!6, !17, !17, !19}
!6238 = !DILocalVariable(name: "p1", arg: 1, scope: !6232, file: !3, line: 2083, type: !1840)
!6239 = !DILocation(line: 2083, column: 32, scope: !6232)
!6240 = !DILocalVariable(name: "p2", arg: 2, scope: !6232, file: !3, line: 2083, type: !1840)
!6241 = !DILocation(line: 2083, column: 49, scope: !6232)
!6242 = !DILocalVariable(name: "callback", arg: 3, scope: !6232, file: !3, line: 2083, type: !6235)
!6243 = !DILocation(line: 2083, column: 63, scope: !6232)
!6244 = !DILocalVariable(name: "userData", arg: 4, scope: !6232, file: !3, line: 2083, type: !19)
!6245 = !DILocation(line: 2083, column: 98, scope: !6232)
!6246 = !DILocalVariable(name: "x1", scope: !6232, file: !3, line: 2085, type: !17)
!6247 = !DILocation(line: 2085, column: 6, scope: !6232)
!6248 = !DILocation(line: 2085, column: 11, scope: !6232)
!6249 = !DILocalVariable(name: "y1", scope: !6232, file: !3, line: 2086, type: !17)
!6250 = !DILocation(line: 2086, column: 6, scope: !6232)
!6251 = !DILocation(line: 2086, column: 11, scope: !6232)
!6252 = !DILocalVariable(name: "x2", scope: !6232, file: !3, line: 2087, type: !17)
!6253 = !DILocation(line: 2087, column: 6, scope: !6232)
!6254 = !DILocation(line: 2087, column: 11, scope: !6232)
!6255 = !DILocalVariable(name: "y2", scope: !6232, file: !3, line: 2088, type: !17)
!6256 = !DILocation(line: 2088, column: 6, scope: !6232)
!6257 = !DILocation(line: 2088, column: 11, scope: !6232)
!6258 = !DILocalVariable(name: "ix", scope: !6232, file: !3, line: 2090, type: !6259)
!6259 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!6260 = !DILocation(line: 2090, column: 14, scope: !6232)
!6261 = !DILocalVariable(name: "iy", scope: !6232, file: !3, line: 2091, type: !6259)
!6262 = !DILocation(line: 2091, column: 14, scope: !6232)
!6263 = !DILocalVariable(name: "delta_x", scope: !6232, file: !3, line: 2094, type: !17)
!6264 = !DILocation(line: 2094, column: 6, scope: !6232)
!6265 = !DILocation(line: 2094, column: 17, scope: !6232)
!6266 = !DILocation(line: 2094, column: 22, scope: !6232)
!6267 = !DILocation(line: 2094, column: 20, scope: !6232)
!6268 = !DILocation(line: 2094, column: 31, scope: !6232)
!6269 = !DILocation(line: 2094, column: 36, scope: !6232)
!6270 = !DILocation(line: 2094, column: 41, scope: !6232)
!6271 = !DILocation(line: 2094, column: 39, scope: !6232)
!6272 = !DILocation(line: 2094, column: 51, scope: !6232)
!6273 = !DILocation(line: 2094, column: 57, scope: !6232)
!6274 = !DILocation(line: 2094, column: 62, scope: !6232)
!6275 = !DILocation(line: 2094, column: 60, scope: !6232)
!6276 = !DILocation(line: 2094, column: 67, scope: !6232)
!6277 = !DILocalVariable(name: "delta_y", scope: !6232, file: !3, line: 2095, type: !17)
!6278 = !DILocation(line: 2095, column: 6, scope: !6232)
!6279 = !DILocation(line: 2095, column: 17, scope: !6232)
!6280 = !DILocation(line: 2095, column: 22, scope: !6232)
!6281 = !DILocation(line: 2095, column: 20, scope: !6232)
!6282 = !DILocation(line: 2095, column: 31, scope: !6232)
!6283 = !DILocation(line: 2095, column: 36, scope: !6232)
!6284 = !DILocation(line: 2095, column: 41, scope: !6232)
!6285 = !DILocation(line: 2095, column: 39, scope: !6232)
!6286 = !DILocation(line: 2095, column: 51, scope: !6232)
!6287 = !DILocation(line: 2095, column: 57, scope: !6232)
!6288 = !DILocation(line: 2095, column: 62, scope: !6232)
!6289 = !DILocation(line: 2095, column: 60, scope: !6232)
!6290 = !DILocation(line: 2095, column: 67, scope: !6232)
!6291 = !DILocation(line: 2097, column: 6, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 2097, column: 6)
!6293 = !DILocation(line: 2097, column: 15, scope: !6292)
!6294 = !DILocation(line: 2097, column: 19, scope: !6292)
!6295 = !DILocation(line: 2097, column: 23, scope: !6292)
!6296 = !DILocation(line: 2097, column: 33, scope: !6292)
!6297 = !DILocation(line: 2097, column: 6, scope: !6232)
!6298 = !DILocation(line: 2098, column: 3, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 2097, column: 39)
!6300 = !DILocation(line: 2101, column: 6, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 2101, column: 6)
!6302 = !DILocation(line: 2101, column: 17, scope: !6301)
!6303 = !DILocation(line: 2101, column: 14, scope: !6301)
!6304 = !DILocation(line: 2101, column: 6, scope: !6232)
!6305 = !DILocalVariable(name: "error", scope: !6306, file: !3, line: 2103, type: !17)
!6306 = distinct !DILexicalBlock(scope: !6301, file: !3, line: 2101, column: 26)
!6307 = !DILocation(line: 2103, column: 7, scope: !6306)
!6308 = !DILocation(line: 2103, column: 15, scope: !6306)
!6309 = !DILocation(line: 2103, column: 26, scope: !6306)
!6310 = !DILocation(line: 2103, column: 34, scope: !6306)
!6311 = !DILocation(line: 2103, column: 23, scope: !6306)
!6312 = !DILocation(line: 2105, column: 3, scope: !6306)
!6313 = !DILocation(line: 2105, column: 10, scope: !6306)
!6314 = !DILocation(line: 2105, column: 16, scope: !6306)
!6315 = !DILocation(line: 2105, column: 13, scope: !6306)
!6316 = !DILocation(line: 2106, column: 8, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6318, file: !3, line: 2106, column: 8)
!6318 = distinct !DILexicalBlock(scope: !6306, file: !3, line: 2105, column: 20)
!6319 = !DILocation(line: 2106, column: 14, scope: !6317)
!6320 = !DILocation(line: 2106, column: 8, scope: !6318)
!6321 = !DILocation(line: 2107, column: 9, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6323, file: !3, line: 2107, column: 9)
!6323 = distinct !DILexicalBlock(scope: !6317, file: !3, line: 2106, column: 20)
!6324 = !DILocation(line: 2107, column: 15, scope: !6322)
!6325 = !DILocation(line: 2107, column: 19, scope: !6322)
!6326 = !DILocation(line: 2107, column: 22, scope: !6322)
!6327 = !DILocation(line: 2107, column: 9, scope: !6323)
!6328 = !DILocation(line: 2108, column: 12, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6322, file: !3, line: 2107, column: 28)
!6330 = !DILocation(line: 2108, column: 9, scope: !6329)
!6331 = !DILocation(line: 2109, column: 15, scope: !6329)
!6332 = !DILocation(line: 2109, column: 12, scope: !6329)
!6333 = !DILocation(line: 2110, column: 5, scope: !6329)
!6334 = !DILocation(line: 2112, column: 4, scope: !6323)
!6335 = !DILocation(line: 2115, column: 10, scope: !6318)
!6336 = !DILocation(line: 2115, column: 7, scope: !6318)
!6337 = !DILocation(line: 2116, column: 13, scope: !6318)
!6338 = !DILocation(line: 2116, column: 10, scope: !6318)
!6339 = !DILocation(line: 2118, column: 8, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6318, file: !3, line: 2118, column: 8)
!6341 = !DILocation(line: 2118, column: 17, scope: !6340)
!6342 = !DILocation(line: 2118, column: 21, scope: !6340)
!6343 = !DILocation(line: 2118, column: 25, scope: !6340)
!6344 = !DILocation(line: 2118, column: 35, scope: !6340)
!6345 = !DILocation(line: 2118, column: 8, scope: !6318)
!6346 = !DILocation(line: 2119, column: 5, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 2118, column: 41)
!6348 = distinct !{!6348, !6312, !6349}
!6349 = !DILocation(line: 2121, column: 3, scope: !6306)
!6350 = !DILocation(line: 2122, column: 2, scope: !6306)
!6351 = !DILocalVariable(name: "error", scope: !6352, file: !3, line: 2125, type: !17)
!6352 = distinct !DILexicalBlock(scope: !6301, file: !3, line: 2123, column: 7)
!6353 = !DILocation(line: 2125, column: 7, scope: !6352)
!6354 = !DILocation(line: 2125, column: 15, scope: !6352)
!6355 = !DILocation(line: 2125, column: 26, scope: !6352)
!6356 = !DILocation(line: 2125, column: 34, scope: !6352)
!6357 = !DILocation(line: 2125, column: 23, scope: !6352)
!6358 = !DILocation(line: 2127, column: 3, scope: !6352)
!6359 = !DILocation(line: 2127, column: 10, scope: !6352)
!6360 = !DILocation(line: 2127, column: 16, scope: !6352)
!6361 = !DILocation(line: 2127, column: 13, scope: !6352)
!6362 = !DILocation(line: 2128, column: 8, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 2128, column: 8)
!6364 = distinct !DILexicalBlock(scope: !6352, file: !3, line: 2127, column: 20)
!6365 = !DILocation(line: 2128, column: 14, scope: !6363)
!6366 = !DILocation(line: 2128, column: 8, scope: !6364)
!6367 = !DILocation(line: 2129, column: 9, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6369, file: !3, line: 2129, column: 9)
!6369 = distinct !DILexicalBlock(scope: !6363, file: !3, line: 2128, column: 20)
!6370 = !DILocation(line: 2129, column: 15, scope: !6368)
!6371 = !DILocation(line: 2129, column: 19, scope: !6368)
!6372 = !DILocation(line: 2129, column: 22, scope: !6368)
!6373 = !DILocation(line: 2129, column: 9, scope: !6369)
!6374 = !DILocation(line: 2130, column: 12, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6368, file: !3, line: 2129, column: 28)
!6376 = !DILocation(line: 2130, column: 9, scope: !6375)
!6377 = !DILocation(line: 2131, column: 15, scope: !6375)
!6378 = !DILocation(line: 2131, column: 12, scope: !6375)
!6379 = !DILocation(line: 2132, column: 5, scope: !6375)
!6380 = !DILocation(line: 2134, column: 4, scope: !6369)
!6381 = !DILocation(line: 2137, column: 10, scope: !6364)
!6382 = !DILocation(line: 2137, column: 7, scope: !6364)
!6383 = !DILocation(line: 2138, column: 13, scope: !6364)
!6384 = !DILocation(line: 2138, column: 10, scope: !6364)
!6385 = !DILocation(line: 2140, column: 8, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 2140, column: 8)
!6387 = !DILocation(line: 2140, column: 17, scope: !6386)
!6388 = !DILocation(line: 2140, column: 21, scope: !6386)
!6389 = !DILocation(line: 2140, column: 25, scope: !6386)
!6390 = !DILocation(line: 2140, column: 35, scope: !6386)
!6391 = !DILocation(line: 2140, column: 8, scope: !6364)
!6392 = !DILocation(line: 2141, column: 5, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 2140, column: 41)
!6394 = distinct !{!6394, !6358, !6395}
!6395 = !DILocation(line: 2143, column: 3, scope: !6352)
!6396 = !DILocation(line: 2145, column: 1, scope: !6232)
!6397 = distinct !DISubprogram(name: "fill_poly_v2i_n", scope: !3, file: !3, line: 2147, type: !6398, scopeLine: 2151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!6398 = !DISubroutineType(types: !6399)
!6399 = !{null, !1841, !1841, !1841, !1841, !2870, !1841, !6400, !19}
!6400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6401, size: 64)
!6401 = !DISubroutineType(types: !6402)
!6402 = !{null, !17, !17, !19}
!6403 = !DILocalVariable(name: "xmin", arg: 1, scope: !6397, file: !3, line: 2148, type: !1841)
!6404 = !DILocation(line: 2148, column: 19, scope: !6397)
!6405 = !DILocalVariable(name: "ymin", arg: 2, scope: !6397, file: !3, line: 2148, type: !1841)
!6406 = !DILocation(line: 2148, column: 35, scope: !6397)
!6407 = !DILocalVariable(name: "xmax", arg: 3, scope: !6397, file: !3, line: 2148, type: !1841)
!6408 = !DILocation(line: 2148, column: 51, scope: !6397)
!6409 = !DILocalVariable(name: "ymax", arg: 4, scope: !6397, file: !3, line: 2148, type: !1841)
!6410 = !DILocation(line: 2148, column: 67, scope: !6397)
!6411 = !DILocalVariable(name: "verts", arg: 5, scope: !6397, file: !3, line: 2149, type: !2870)
!6412 = !DILocation(line: 2149, column: 19, scope: !6397)
!6413 = !DILocalVariable(name: "nr", arg: 6, scope: !6397, file: !3, line: 2149, type: !1841)
!6414 = !DILocation(line: 2149, column: 41, scope: !6397)
!6415 = !DILocalVariable(name: "callback", arg: 7, scope: !6397, file: !3, line: 2150, type: !6400)
!6416 = !DILocation(line: 2150, column: 16, scope: !6397)
!6417 = !DILocalVariable(name: "userData", arg: 8, scope: !6397, file: !3, line: 2150, type: !19)
!6418 = !DILocation(line: 2150, column: 51, scope: !6397)
!6419 = !DILocalVariable(name: "nodes", scope: !6397, file: !3, line: 2154, type: !17)
!6420 = !DILocation(line: 2154, column: 7, scope: !6397)
!6421 = !DILocalVariable(name: "pixel_y", scope: !6397, file: !3, line: 2154, type: !17)
!6422 = !DILocation(line: 2154, column: 14, scope: !6397)
!6423 = !DILocalVariable(name: "i", scope: !6397, file: !3, line: 2154, type: !17)
!6424 = !DILocation(line: 2154, column: 23, scope: !6397)
!6425 = !DILocalVariable(name: "j", scope: !6397, file: !3, line: 2154, type: !17)
!6426 = !DILocation(line: 2154, column: 26, scope: !6397)
!6427 = !DILocalVariable(name: "swap", scope: !6397, file: !3, line: 2154, type: !17)
!6428 = !DILocation(line: 2154, column: 29, scope: !6397)
!6429 = !DILocalVariable(name: "node_x", scope: !6397, file: !3, line: 2155, type: !6430)
!6430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64)
!6431 = !DILocation(line: 2155, column: 7, scope: !6397)
!6432 = !DILocation(line: 2155, column: 16, scope: !6397)
!6433 = !DILocation(line: 2155, column: 55, scope: !6397)
!6434 = !DILocation(line: 2155, column: 58, scope: !6397)
!6435 = !DILocation(line: 2155, column: 46, scope: !6397)
!6436 = !DILocation(line: 2155, column: 44, scope: !6397)
!6437 = !DILocation(line: 2158, column: 17, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6397, file: !3, line: 2158, column: 2)
!6439 = !DILocation(line: 2158, column: 15, scope: !6438)
!6440 = !DILocation(line: 2158, column: 7, scope: !6438)
!6441 = !DILocation(line: 2158, column: 23, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6438, file: !3, line: 2158, column: 2)
!6443 = !DILocation(line: 2158, column: 33, scope: !6442)
!6444 = !DILocation(line: 2158, column: 31, scope: !6442)
!6445 = !DILocation(line: 2158, column: 2, scope: !6438)
!6446 = !DILocation(line: 2161, column: 9, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6442, file: !3, line: 2158, column: 50)
!6448 = !DILocation(line: 2161, column: 18, scope: !6447)
!6449 = !DILocation(line: 2161, column: 21, scope: !6447)
!6450 = !DILocation(line: 2161, column: 16, scope: !6447)
!6451 = !DILocation(line: 2162, column: 10, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 2162, column: 3)
!6453 = !DILocation(line: 2162, column: 8, scope: !6452)
!6454 = !DILocation(line: 2162, column: 15, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6452, file: !3, line: 2162, column: 3)
!6456 = !DILocation(line: 2162, column: 19, scope: !6455)
!6457 = !DILocation(line: 2162, column: 17, scope: !6455)
!6458 = !DILocation(line: 2162, column: 3, scope: !6452)
!6459 = !DILocation(line: 2163, column: 9, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 2163, column: 8)
!6461 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 2162, column: 28)
!6462 = !DILocation(line: 2163, column: 15, scope: !6460)
!6463 = !DILocation(line: 2163, column: 23, scope: !6460)
!6464 = !DILocation(line: 2163, column: 21, scope: !6460)
!6465 = !DILocation(line: 2163, column: 31, scope: !6460)
!6466 = !DILocation(line: 2163, column: 34, scope: !6460)
!6467 = !DILocation(line: 2163, column: 40, scope: !6460)
!6468 = !DILocation(line: 2163, column: 49, scope: !6460)
!6469 = !DILocation(line: 2163, column: 46, scope: !6460)
!6470 = !DILocation(line: 2163, column: 58, scope: !6460)
!6471 = !DILocation(line: 2164, column: 9, scope: !6460)
!6472 = !DILocation(line: 2164, column: 15, scope: !6460)
!6473 = !DILocation(line: 2164, column: 23, scope: !6460)
!6474 = !DILocation(line: 2164, column: 21, scope: !6460)
!6475 = !DILocation(line: 2164, column: 31, scope: !6460)
!6476 = !DILocation(line: 2164, column: 34, scope: !6460)
!6477 = !DILocation(line: 2164, column: 40, scope: !6460)
!6478 = !DILocation(line: 2164, column: 49, scope: !6460)
!6479 = !DILocation(line: 2164, column: 46, scope: !6460)
!6480 = !DILocation(line: 2163, column: 8, scope: !6461)
!6481 = !DILocation(line: 2166, column: 29, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 2165, column: 4)
!6483 = !DILocation(line: 2166, column: 35, scope: !6482)
!6484 = !DILocation(line: 2167, column: 39, scope: !6482)
!6485 = !DILocation(line: 2167, column: 49, scope: !6482)
!6486 = !DILocation(line: 2167, column: 55, scope: !6482)
!6487 = !DILocation(line: 2167, column: 47, scope: !6482)
!6488 = !DILocation(line: 2167, column: 30, scope: !6482)
!6489 = !DILocation(line: 2167, column: 65, scope: !6482)
!6490 = !DILocation(line: 2167, column: 71, scope: !6482)
!6491 = !DILocation(line: 2167, column: 79, scope: !6482)
!6492 = !DILocation(line: 2167, column: 85, scope: !6482)
!6493 = !DILocation(line: 2167, column: 77, scope: !6482)
!6494 = !DILocation(line: 2167, column: 64, scope: !6482)
!6495 = !DILocation(line: 2167, column: 62, scope: !6482)
!6496 = !DILocation(line: 2168, column: 30, scope: !6482)
!6497 = !DILocation(line: 2168, column: 36, scope: !6482)
!6498 = !DILocation(line: 2168, column: 44, scope: !6482)
!6499 = !DILocation(line: 2168, column: 50, scope: !6482)
!6500 = !DILocation(line: 2168, column: 42, scope: !6482)
!6501 = !DILocation(line: 2168, column: 29, scope: !6482)
!6502 = !DILocation(line: 2167, column: 93, scope: !6482)
!6503 = !DILocation(line: 2166, column: 41, scope: !6482)
!6504 = !DILocation(line: 2166, column: 23, scope: !6482)
!6505 = !DILocation(line: 2166, column: 5, scope: !6482)
!6506 = !DILocation(line: 2166, column: 17, scope: !6482)
!6507 = !DILocation(line: 2166, column: 21, scope: !6482)
!6508 = !DILocation(line: 2169, column: 4, scope: !6482)
!6509 = !DILocation(line: 2170, column: 8, scope: !6461)
!6510 = !DILocation(line: 2170, column: 6, scope: !6461)
!6511 = !DILocation(line: 2171, column: 3, scope: !6461)
!6512 = !DILocation(line: 2162, column: 24, scope: !6455)
!6513 = !DILocation(line: 2162, column: 3, scope: !6455)
!6514 = distinct !{!6514, !6458, !6515}
!6515 = !DILocation(line: 2171, column: 3, scope: !6452)
!6516 = !DILocation(line: 2174, column: 5, scope: !6447)
!6517 = !DILocation(line: 2175, column: 3, scope: !6447)
!6518 = !DILocation(line: 2175, column: 10, scope: !6447)
!6519 = !DILocation(line: 2175, column: 14, scope: !6447)
!6520 = !DILocation(line: 2175, column: 20, scope: !6447)
!6521 = !DILocation(line: 2175, column: 12, scope: !6447)
!6522 = !DILocation(line: 2176, column: 8, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 2176, column: 8)
!6524 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 2175, column: 25)
!6525 = !DILocation(line: 2176, column: 15, scope: !6523)
!6526 = !DILocation(line: 2176, column: 20, scope: !6523)
!6527 = !DILocation(line: 2176, column: 27, scope: !6523)
!6528 = !DILocation(line: 2176, column: 29, scope: !6523)
!6529 = !DILocation(line: 2176, column: 18, scope: !6523)
!6530 = !DILocation(line: 2176, column: 8, scope: !6524)
!6531 = !DILocation(line: 2177, column: 5, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6533, file: !3, line: 2177, column: 5)
!6533 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 2176, column: 35)
!6534 = !DILocation(line: 2178, column: 9, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6533, file: !3, line: 2178, column: 9)
!6536 = !DILocation(line: 2178, column: 9, scope: !6533)
!6537 = !DILocation(line: 2178, column: 13, scope: !6535)
!6538 = !DILocation(line: 2178, column: 12, scope: !6535)
!6539 = !DILocation(line: 2179, column: 4, scope: !6533)
!6540 = !DILocation(line: 2181, column: 6, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 2180, column: 9)
!6542 = distinct !{!6542, !6517, !6543}
!6543 = !DILocation(line: 2183, column: 3, scope: !6447)
!6544 = !DILocation(line: 2186, column: 10, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 2186, column: 3)
!6546 = !DILocation(line: 2186, column: 8, scope: !6545)
!6547 = !DILocation(line: 2186, column: 15, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 2186, column: 3)
!6549 = !DILocation(line: 2186, column: 19, scope: !6548)
!6550 = !DILocation(line: 2186, column: 17, scope: !6548)
!6551 = !DILocation(line: 2186, column: 3, scope: !6545)
!6552 = !DILocation(line: 2187, column: 8, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6554, file: !3, line: 2187, column: 8)
!6554 = distinct !DILexicalBlock(scope: !6548, file: !3, line: 2186, column: 34)
!6555 = !DILocation(line: 2187, column: 15, scope: !6553)
!6556 = !DILocation(line: 2187, column: 21, scope: !6553)
!6557 = !DILocation(line: 2187, column: 18, scope: !6553)
!6558 = !DILocation(line: 2187, column: 8, scope: !6554)
!6559 = !DILocation(line: 2187, column: 27, scope: !6553)
!6560 = !DILocation(line: 2188, column: 8, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6554, file: !3, line: 2188, column: 8)
!6562 = !DILocation(line: 2188, column: 15, scope: !6561)
!6563 = !DILocation(line: 2188, column: 17, scope: !6561)
!6564 = !DILocation(line: 2188, column: 25, scope: !6561)
!6565 = !DILocation(line: 2188, column: 22, scope: !6561)
!6566 = !DILocation(line: 2188, column: 8, scope: !6554)
!6567 = !DILocation(line: 2189, column: 9, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6569, file: !3, line: 2189, column: 9)
!6569 = distinct !DILexicalBlock(scope: !6561, file: !3, line: 2188, column: 31)
!6570 = !DILocation(line: 2189, column: 16, scope: !6568)
!6571 = !DILocation(line: 2189, column: 25, scope: !6568)
!6572 = !DILocation(line: 2189, column: 23, scope: !6568)
!6573 = !DILocation(line: 2189, column: 9, scope: !6569)
!6574 = !DILocation(line: 2189, column: 47, scope: !6568)
!6575 = !DILocation(line: 2189, column: 31, scope: !6568)
!6576 = !DILocation(line: 2189, column: 38, scope: !6568)
!6577 = !DILocation(line: 2189, column: 45, scope: !6568)
!6578 = !DILocation(line: 2190, column: 9, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6569, file: !3, line: 2190, column: 9)
!6580 = !DILocation(line: 2190, column: 16, scope: !6579)
!6581 = !DILocation(line: 2190, column: 18, scope: !6579)
!6582 = !DILocation(line: 2190, column: 25, scope: !6579)
!6583 = !DILocation(line: 2190, column: 23, scope: !6579)
!6584 = !DILocation(line: 2190, column: 9, scope: !6569)
!6585 = !DILocation(line: 2190, column: 47, scope: !6579)
!6586 = !DILocation(line: 2190, column: 31, scope: !6579)
!6587 = !DILocation(line: 2190, column: 38, scope: !6579)
!6588 = !DILocation(line: 2190, column: 40, scope: !6579)
!6589 = !DILocation(line: 2190, column: 45, scope: !6579)
!6590 = !DILocation(line: 2191, column: 14, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6569, file: !3, line: 2191, column: 5)
!6592 = !DILocation(line: 2191, column: 21, scope: !6591)
!6593 = !DILocation(line: 2191, column: 12, scope: !6591)
!6594 = !DILocation(line: 2191, column: 10, scope: !6591)
!6595 = !DILocation(line: 2191, column: 25, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 2191, column: 5)
!6597 = !DILocation(line: 2191, column: 29, scope: !6596)
!6598 = !DILocation(line: 2191, column: 36, scope: !6596)
!6599 = !DILocation(line: 2191, column: 38, scope: !6596)
!6600 = !DILocation(line: 2191, column: 27, scope: !6596)
!6601 = !DILocation(line: 2191, column: 5, scope: !6591)
!6602 = !DILocation(line: 2192, column: 6, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6596, file: !3, line: 2191, column: 49)
!6604 = !DILocation(line: 2192, column: 15, scope: !6603)
!6605 = !DILocation(line: 2192, column: 19, scope: !6603)
!6606 = !DILocation(line: 2192, column: 17, scope: !6603)
!6607 = !DILocation(line: 2192, column: 25, scope: !6603)
!6608 = !DILocation(line: 2192, column: 35, scope: !6603)
!6609 = !DILocation(line: 2192, column: 33, scope: !6603)
!6610 = !DILocation(line: 2192, column: 41, scope: !6603)
!6611 = !DILocation(line: 2193, column: 5, scope: !6603)
!6612 = !DILocation(line: 2191, column: 45, scope: !6596)
!6613 = !DILocation(line: 2191, column: 5, scope: !6596)
!6614 = distinct !{!6614, !6601, !6615}
!6615 = !DILocation(line: 2193, column: 5, scope: !6591)
!6616 = !DILocation(line: 2194, column: 4, scope: !6569)
!6617 = !DILocation(line: 2195, column: 3, scope: !6554)
!6618 = !DILocation(line: 2186, column: 28, scope: !6548)
!6619 = !DILocation(line: 2186, column: 3, scope: !6548)
!6620 = distinct !{!6620, !6551, !6621}
!6621 = !DILocation(line: 2195, column: 3, scope: !6545)
!6622 = !DILocation(line: 2196, column: 2, scope: !6447)
!6623 = !DILocation(line: 2158, column: 46, scope: !6442)
!6624 = !DILocation(line: 2158, column: 2, scope: !6442)
!6625 = distinct !{!6625, !6445, !6626}
!6626 = !DILocation(line: 2196, column: 2, scope: !6438)
!6627 = !DILocation(line: 2197, column: 2, scope: !6397)
!6628 = !DILocation(line: 2197, column: 12, scope: !6397)
!6629 = !DILocation(line: 2198, column: 1, scope: !6397)
!6630 = distinct !DISubprogram(name: "axis_dominant_v3_to_m3", scope: !3, file: !3, line: 2212, type: !6631, scopeLine: 2213, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!6631 = !DISubroutineType(types: !6632)
!6632 = !{null, !6633, !7}
!6633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!6634 = !DILocalVariable(name: "r_mat", arg: 1, scope: !6630, file: !3, line: 2212, type: !6633)
!6635 = !DILocation(line: 2212, column: 35, scope: !6630)
!6636 = !DILocalVariable(name: "normal", arg: 2, scope: !6630, file: !3, line: 2212, type: !7)
!6637 = !DILocation(line: 2212, column: 60, scope: !6630)
!6638 = !DILocation(line: 2214, column: 2, scope: !6630)
!6639 = !DILocation(line: 2216, column: 13, scope: !6630)
!6640 = !DILocation(line: 2216, column: 23, scope: !6630)
!6641 = !DILocation(line: 2216, column: 2, scope: !6630)
!6642 = !DILocation(line: 2217, column: 22, scope: !6630)
!6643 = !DILocation(line: 2217, column: 32, scope: !6630)
!6644 = !DILocation(line: 2217, column: 42, scope: !6630)
!6645 = !DILocation(line: 2217, column: 2, scope: !6630)
!6646 = !DILocation(line: 2219, column: 2, scope: !6630)
!6647 = !DILocation(line: 2220, column: 2, scope: !6630)
!6648 = !DILocation(line: 2222, column: 15, scope: !6630)
!6649 = !DILocation(line: 2222, column: 2, scope: !6630)
!6650 = !DILocation(line: 2226, column: 1, scope: !6630)
!6651 = distinct !DISubprogram(name: "interp_weights_face_v3", scope: !3, file: !3, line: 2260, type: !6652, scopeLine: 2261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!6652 = !DISubroutineType(types: !6653)
!6653 = !{null, !10, !7, !7, !7, !7, !7}
!6654 = !DILocalVariable(name: "w", arg: 1, scope: !6651, file: !3, line: 2260, type: !10)
!6655 = !DILocation(line: 2260, column: 35, scope: !6651)
!6656 = !DILocalVariable(name: "v1", arg: 2, scope: !6651, file: !3, line: 2260, type: !7)
!6657 = !DILocation(line: 2260, column: 53, scope: !6651)
!6658 = !DILocalVariable(name: "v2", arg: 3, scope: !6651, file: !3, line: 2260, type: !7)
!6659 = !DILocation(line: 2260, column: 72, scope: !6651)
!6660 = !DILocalVariable(name: "v3", arg: 4, scope: !6651, file: !3, line: 2260, type: !7)
!6661 = !DILocation(line: 2260, column: 91, scope: !6651)
!6662 = !DILocalVariable(name: "v4", arg: 5, scope: !6651, file: !3, line: 2260, type: !7)
!6663 = !DILocation(line: 2260, column: 110, scope: !6651)
!6664 = !DILocalVariable(name: "co", arg: 6, scope: !6651, file: !3, line: 2260, type: !7)
!6665 = !DILocation(line: 2260, column: 129, scope: !6651)
!6666 = !DILocalVariable(name: "w2", scope: !6651, file: !3, line: 2262, type: !117)
!6667 = !DILocation(line: 2262, column: 8, scope: !6651)
!6668 = !DILocation(line: 2264, column: 23, scope: !6651)
!6669 = !DILocation(line: 2264, column: 28, scope: !6651)
!6670 = !DILocation(line: 2264, column: 16, scope: !6651)
!6671 = !DILocation(line: 2264, column: 21, scope: !6651)
!6672 = !DILocation(line: 2264, column: 9, scope: !6651)
!6673 = !DILocation(line: 2264, column: 14, scope: !6651)
!6674 = !DILocation(line: 2264, column: 2, scope: !6651)
!6675 = !DILocation(line: 2264, column: 7, scope: !6651)
!6676 = !DILocation(line: 2267, column: 18, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 2267, column: 6)
!6678 = !DILocation(line: 2267, column: 22, scope: !6677)
!6679 = !DILocation(line: 2267, column: 6, scope: !6677)
!6680 = !DILocation(line: 2267, column: 6, scope: !6651)
!6681 = !DILocation(line: 2268, column: 3, scope: !6677)
!6682 = !DILocation(line: 2268, column: 8, scope: !6677)
!6683 = !DILocation(line: 2269, column: 23, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6677, file: !3, line: 2269, column: 11)
!6685 = !DILocation(line: 2269, column: 27, scope: !6684)
!6686 = !DILocation(line: 2269, column: 11, scope: !6684)
!6687 = !DILocation(line: 2269, column: 11, scope: !6677)
!6688 = !DILocation(line: 2270, column: 3, scope: !6684)
!6689 = !DILocation(line: 2270, column: 8, scope: !6684)
!6690 = !DILocation(line: 2271, column: 23, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6684, file: !3, line: 2271, column: 11)
!6692 = !DILocation(line: 2271, column: 27, scope: !6691)
!6693 = !DILocation(line: 2271, column: 11, scope: !6691)
!6694 = !DILocation(line: 2271, column: 11, scope: !6684)
!6695 = !DILocation(line: 2272, column: 3, scope: !6691)
!6696 = !DILocation(line: 2272, column: 8, scope: !6691)
!6697 = !DILocation(line: 2273, column: 11, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6691, file: !3, line: 2273, column: 11)
!6699 = !DILocation(line: 2273, column: 14, scope: !6698)
!6700 = !DILocation(line: 2273, column: 29, scope: !6698)
!6701 = !DILocation(line: 2273, column: 33, scope: !6698)
!6702 = !DILocation(line: 2273, column: 17, scope: !6698)
!6703 = !DILocation(line: 2273, column: 11, scope: !6691)
!6704 = !DILocation(line: 2274, column: 3, scope: !6698)
!6705 = !DILocation(line: 2274, column: 8, scope: !6698)
!6706 = !DILocalVariable(name: "n1", scope: !6707, file: !3, line: 2277, type: !117)
!6707 = distinct !DILexicalBlock(scope: !6698, file: !3, line: 2275, column: 7)
!6708 = !DILocation(line: 2277, column: 9, scope: !6707)
!6709 = !DILocalVariable(name: "n2", scope: !6707, file: !3, line: 2277, type: !117)
!6710 = !DILocation(line: 2277, column: 16, scope: !6707)
!6711 = !DILocalVariable(name: "n", scope: !6707, file: !3, line: 2277, type: !117)
!6712 = !DILocation(line: 2277, column: 23, scope: !6707)
!6713 = !DILocalVariable(name: "degenerate", scope: !6707, file: !3, line: 2278, type: !6)
!6714 = !DILocation(line: 2278, column: 8, scope: !6707)
!6715 = !DILocation(line: 2280, column: 15, scope: !6707)
!6716 = !DILocation(line: 2280, column: 19, scope: !6707)
!6717 = !DILocation(line: 2280, column: 23, scope: !6707)
!6718 = !DILocation(line: 2280, column: 3, scope: !6707)
!6719 = !DILocation(line: 2281, column: 7, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6707, file: !3, line: 2281, column: 7)
!6721 = !DILocation(line: 2281, column: 7, scope: !6707)
!6722 = !DILocation(line: 2282, column: 16, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 2281, column: 11)
!6724 = !DILocation(line: 2282, column: 20, scope: !6723)
!6725 = !DILocation(line: 2282, column: 24, scope: !6723)
!6726 = !DILocation(line: 2282, column: 4, scope: !6723)
!6727 = !DILocation(line: 2283, column: 3, scope: !6723)
!6728 = !DILocation(line: 2285, column: 16, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 2284, column: 8)
!6730 = !DILocation(line: 2285, column: 20, scope: !6729)
!6731 = !DILocation(line: 2285, column: 24, scope: !6729)
!6732 = !DILocation(line: 2285, column: 4, scope: !6729)
!6733 = !DILocation(line: 2287, column: 17, scope: !6707)
!6734 = !DILocation(line: 2287, column: 20, scope: !6707)
!6735 = !DILocation(line: 2287, column: 24, scope: !6707)
!6736 = !DILocation(line: 2287, column: 3, scope: !6707)
!6737 = !DILocation(line: 2290, column: 7, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6707, file: !3, line: 2290, column: 7)
!6739 = !DILocation(line: 2290, column: 7, scope: !6707)
!6740 = !DILocation(line: 2291, column: 37, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6738, file: !3, line: 2290, column: 11)
!6742 = !DILocation(line: 2291, column: 41, scope: !6741)
!6743 = !DILocation(line: 2291, column: 45, scope: !6741)
!6744 = !DILocation(line: 2291, column: 49, scope: !6741)
!6745 = !DILocation(line: 2291, column: 53, scope: !6741)
!6746 = !DILocation(line: 2291, column: 56, scope: !6741)
!6747 = !DILocation(line: 2291, column: 17, scope: !6741)
!6748 = !DILocation(line: 2291, column: 15, scope: !6741)
!6749 = !DILocalVariable(name: "sw_ap", scope: !6750, file: !3, line: 2292, type: !9)
!6750 = distinct !DILexicalBlock(scope: !6741, file: !3, line: 2292, column: 4)
!6751 = !DILocation(line: 2292, column: 4, scope: !6750)
!6752 = !DILocation(line: 2294, column: 8, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6741, file: !3, line: 2294, column: 8)
!6754 = !DILocation(line: 2294, column: 19, scope: !6753)
!6755 = !DILocation(line: 2294, column: 23, scope: !6753)
!6756 = !DILocation(line: 2294, column: 28, scope: !6753)
!6757 = !DILocation(line: 2294, column: 8, scope: !6741)
!6758 = !DILocation(line: 2297, column: 38, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 2294, column: 37)
!6760 = !DILocation(line: 2297, column: 42, scope: !6759)
!6761 = !DILocation(line: 2297, column: 46, scope: !6759)
!6762 = !DILocation(line: 2297, column: 50, scope: !6759)
!6763 = !DILocation(line: 2297, column: 54, scope: !6759)
!6764 = !DILocation(line: 2297, column: 57, scope: !6759)
!6765 = !DILocation(line: 2297, column: 18, scope: !6759)
!6766 = !DILocation(line: 2297, column: 16, scope: !6759)
!6767 = !DILocation(line: 2299, column: 10, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6759, file: !3, line: 2299, column: 9)
!6769 = !DILocation(line: 2299, column: 9, scope: !6759)
!6770 = !DILocation(line: 2300, column: 6, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6768, file: !3, line: 2299, column: 22)
!6772 = !DILocation(line: 2300, column: 11, scope: !6771)
!6773 = !DILocation(line: 2301, column: 13, scope: !6771)
!6774 = !DILocation(line: 2301, column: 6, scope: !6771)
!6775 = !DILocation(line: 2301, column: 11, scope: !6771)
!6776 = !DILocation(line: 2302, column: 13, scope: !6771)
!6777 = !DILocation(line: 2302, column: 6, scope: !6771)
!6778 = !DILocation(line: 2302, column: 11, scope: !6771)
!6779 = !DILocation(line: 2303, column: 13, scope: !6771)
!6780 = !DILocation(line: 2303, column: 6, scope: !6771)
!6781 = !DILocation(line: 2303, column: 11, scope: !6771)
!6782 = !DILocation(line: 2304, column: 5, scope: !6771)
!6783 = !DILocation(line: 2305, column: 4, scope: !6759)
!6784 = !DILocation(line: 2306, column: 3, scope: !6741)
!6785 = !DILocation(line: 2308, column: 24, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6738, file: !3, line: 2307, column: 8)
!6787 = !DILocation(line: 2308, column: 28, scope: !6786)
!6788 = !DILocation(line: 2308, column: 32, scope: !6786)
!6789 = !DILocation(line: 2308, column: 36, scope: !6786)
!6790 = !DILocation(line: 2308, column: 40, scope: !6786)
!6791 = !DILocation(line: 2308, column: 43, scope: !6786)
!6792 = !DILocation(line: 2308, column: 4, scope: !6786)
!6793 = !DILocation(line: 2311, column: 1, scope: !6651)
!6794 = distinct !DISubprogram(name: "equals_v3v3", scope: !184, file: !184, line: 928, type: !2383, scopeLine: 929, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!6795 = !DILocalVariable(name: "v1", arg: 1, scope: !6794, file: !184, line: 928, type: !7)
!6796 = !DILocation(line: 928, column: 38, scope: !6794)
!6797 = !DILocalVariable(name: "v2", arg: 2, scope: !6794, file: !184, line: 928, type: !7)
!6798 = !DILocation(line: 928, column: 57, scope: !6794)
!6799 = !DILocation(line: 930, column: 11, scope: !6794)
!6800 = !DILocation(line: 930, column: 20, scope: !6794)
!6801 = !DILocation(line: 930, column: 17, scope: !6794)
!6802 = !DILocation(line: 930, column: 27, scope: !6794)
!6803 = !DILocation(line: 930, column: 31, scope: !6794)
!6804 = !DILocation(line: 930, column: 40, scope: !6794)
!6805 = !DILocation(line: 930, column: 37, scope: !6794)
!6806 = !DILocation(line: 930, column: 47, scope: !6794)
!6807 = !DILocation(line: 930, column: 51, scope: !6794)
!6808 = !DILocation(line: 930, column: 60, scope: !6794)
!6809 = !DILocation(line: 930, column: 57, scope: !6794)
!6810 = !DILocation(line: 0, scope: !6794)
!6811 = !DILocation(line: 930, column: 9, scope: !6794)
!6812 = !DILocation(line: 930, column: 2, scope: !6794)
!6813 = distinct !DISubprogram(name: "barycentric_weights", scope: !3, file: !3, line: 2236, type: !6814, scopeLine: 2237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!6814 = !DISubroutineType(types: !6815)
!6815 = !{!6, !7, !7, !7, !7, !7, !10}
!6816 = !DILocalVariable(name: "v1", arg: 1, scope: !6813, file: !3, line: 2236, type: !7)
!6817 = !DILocation(line: 2236, column: 45, scope: !6813)
!6818 = !DILocalVariable(name: "v2", arg: 2, scope: !6813, file: !3, line: 2236, type: !7)
!6819 = !DILocation(line: 2236, column: 64, scope: !6813)
!6820 = !DILocalVariable(name: "v3", arg: 3, scope: !6813, file: !3, line: 2236, type: !7)
!6821 = !DILocation(line: 2236, column: 83, scope: !6813)
!6822 = !DILocalVariable(name: "co", arg: 4, scope: !6813, file: !3, line: 2236, type: !7)
!6823 = !DILocation(line: 2236, column: 102, scope: !6813)
!6824 = !DILocalVariable(name: "n", arg: 5, scope: !6813, file: !3, line: 2236, type: !7)
!6825 = !DILocation(line: 2236, column: 121, scope: !6813)
!6826 = !DILocalVariable(name: "w", arg: 6, scope: !6813, file: !3, line: 2236, type: !10)
!6827 = !DILocation(line: 2236, column: 133, scope: !6813)
!6828 = !DILocalVariable(name: "wtot", scope: !6813, file: !3, line: 2238, type: !9)
!6829 = !DILocation(line: 2238, column: 8, scope: !6813)
!6830 = !DILocalVariable(name: "i", scope: !6813, file: !3, line: 2239, type: !17)
!6831 = !DILocation(line: 2239, column: 6, scope: !6813)
!6832 = !DILocalVariable(name: "j", scope: !6813, file: !3, line: 2239, type: !17)
!6833 = !DILocation(line: 2239, column: 9, scope: !6813)
!6834 = !DILocation(line: 2241, column: 27, scope: !6813)
!6835 = !DILocation(line: 2241, column: 2, scope: !6813)
!6836 = !DILocation(line: 2243, column: 25, scope: !6813)
!6837 = !DILocation(line: 2243, column: 29, scope: !6813)
!6838 = !DILocation(line: 2243, column: 33, scope: !6813)
!6839 = !DILocation(line: 2243, column: 37, scope: !6813)
!6840 = !DILocation(line: 2243, column: 40, scope: !6813)
!6841 = !DILocation(line: 2243, column: 9, scope: !6813)
!6842 = !DILocation(line: 2243, column: 2, scope: !6813)
!6843 = !DILocation(line: 2243, column: 7, scope: !6813)
!6844 = !DILocation(line: 2244, column: 25, scope: !6813)
!6845 = !DILocation(line: 2244, column: 29, scope: !6813)
!6846 = !DILocation(line: 2244, column: 33, scope: !6813)
!6847 = !DILocation(line: 2244, column: 37, scope: !6813)
!6848 = !DILocation(line: 2244, column: 40, scope: !6813)
!6849 = !DILocation(line: 2244, column: 9, scope: !6813)
!6850 = !DILocation(line: 2244, column: 2, scope: !6813)
!6851 = !DILocation(line: 2244, column: 7, scope: !6813)
!6852 = !DILocation(line: 2245, column: 25, scope: !6813)
!6853 = !DILocation(line: 2245, column: 29, scope: !6813)
!6854 = !DILocation(line: 2245, column: 33, scope: !6813)
!6855 = !DILocation(line: 2245, column: 37, scope: !6813)
!6856 = !DILocation(line: 2245, column: 40, scope: !6813)
!6857 = !DILocation(line: 2245, column: 9, scope: !6813)
!6858 = !DILocation(line: 2245, column: 2, scope: !6813)
!6859 = !DILocation(line: 2245, column: 7, scope: !6813)
!6860 = !DILocation(line: 2247, column: 9, scope: !6813)
!6861 = !DILocation(line: 2247, column: 16, scope: !6813)
!6862 = !DILocation(line: 2247, column: 14, scope: !6813)
!6863 = !DILocation(line: 2247, column: 23, scope: !6813)
!6864 = !DILocation(line: 2247, column: 21, scope: !6813)
!6865 = !DILocation(line: 2247, column: 7, scope: !6813)
!6866 = !DILocation(line: 2249, column: 12, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6813, file: !3, line: 2249, column: 6)
!6868 = !DILocation(line: 2249, column: 6, scope: !6867)
!6869 = !DILocation(line: 2249, column: 18, scope: !6867)
!6870 = !DILocation(line: 2249, column: 6, scope: !6813)
!6871 = !DILocation(line: 2250, column: 13, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6867, file: !3, line: 2249, column: 33)
!6873 = !DILocation(line: 2250, column: 23, scope: !6872)
!6874 = !DILocation(line: 2250, column: 21, scope: !6872)
!6875 = !DILocation(line: 2250, column: 3, scope: !6872)
!6876 = !DILocation(line: 2251, column: 3, scope: !6872)
!6877 = !DILocation(line: 2255, column: 14, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6867, file: !3, line: 2253, column: 7)
!6879 = !DILocation(line: 2255, column: 3, scope: !6878)
!6880 = !DILocation(line: 2256, column: 3, scope: !6878)
!6881 = !DILocation(line: 2258, column: 1, scope: !6813)
!6882 = distinct !DISubprogram(name: "barycentric_inside_triangle_v2", scope: !3, file: !3, line: 2314, type: !6883, scopeLine: 2315, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!6883 = !DISubroutineType(types: !6884)
!6884 = !{!17, !7}
!6885 = !DILocalVariable(name: "w", arg: 1, scope: !6882, file: !3, line: 2314, type: !7)
!6886 = !DILocation(line: 2314, column: 48, scope: !6882)
!6887 = !DILocation(line: 2316, column: 33, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 2316, column: 6)
!6889 = !DILocation(line: 2316, column: 6, scope: !6888)
!6890 = !DILocation(line: 2317, column: 33, scope: !6888)
!6891 = !DILocation(line: 2317, column: 6, scope: !6888)
!6892 = !DILocation(line: 2316, column: 6, scope: !6882)
!6893 = !DILocation(line: 2318, column: 6, scope: !6888)
!6894 = !DILocation(line: 2320, column: 3, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 2319, column: 2)
!6896 = !DILocation(line: 2322, column: 43, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 2322, column: 11)
!6898 = !DILocation(line: 2322, column: 11, scope: !6897)
!6899 = !DILocation(line: 2323, column: 43, scope: !6897)
!6900 = !DILocation(line: 2323, column: 11, scope: !6897)
!6901 = !DILocation(line: 2322, column: 11, scope: !6888)
!6902 = !DILocation(line: 2324, column: 11, scope: !6897)
!6903 = !DILocation(line: 2326, column: 3, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6897, file: !3, line: 2325, column: 2)
!6905 = !DILocation(line: 2329, column: 2, scope: !6882)
!6906 = !DILocation(line: 2330, column: 1, scope: !6882)
!6907 = distinct !DISubprogram(name: "barycentric_coords_v2", scope: !3, file: !3, line: 2333, type: !5928, scopeLine: 2334, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!6908 = !DILocalVariable(name: "v1", arg: 1, scope: !6907, file: !3, line: 2333, type: !7)
!6909 = !DILocation(line: 2333, column: 40, scope: !6907)
!6910 = !DILocalVariable(name: "v2", arg: 2, scope: !6907, file: !3, line: 2333, type: !7)
!6911 = !DILocation(line: 2333, column: 59, scope: !6907)
!6912 = !DILocalVariable(name: "v3", arg: 3, scope: !6907, file: !3, line: 2333, type: !7)
!6913 = !DILocation(line: 2333, column: 78, scope: !6907)
!6914 = !DILocalVariable(name: "co", arg: 4, scope: !6907, file: !3, line: 2333, type: !7)
!6915 = !DILocation(line: 2333, column: 97, scope: !6907)
!6916 = !DILocalVariable(name: "w", arg: 5, scope: !6907, file: !3, line: 2333, type: !10)
!6917 = !DILocation(line: 2333, column: 110, scope: !6907)
!6918 = !DILocalVariable(name: "x", scope: !6907, file: !3, line: 2335, type: !8)
!6919 = !DILocation(line: 2335, column: 14, scope: !6907)
!6920 = !DILocation(line: 2335, column: 18, scope: !6907)
!6921 = !DILocalVariable(name: "y", scope: !6907, file: !3, line: 2335, type: !8)
!6922 = !DILocation(line: 2335, column: 25, scope: !6907)
!6923 = !DILocation(line: 2335, column: 29, scope: !6907)
!6924 = !DILocalVariable(name: "x1", scope: !6907, file: !3, line: 2336, type: !8)
!6925 = !DILocation(line: 2336, column: 14, scope: !6907)
!6926 = !DILocation(line: 2336, column: 19, scope: !6907)
!6927 = !DILocalVariable(name: "y1", scope: !6907, file: !3, line: 2336, type: !8)
!6928 = !DILocation(line: 2336, column: 26, scope: !6907)
!6929 = !DILocation(line: 2336, column: 31, scope: !6907)
!6930 = !DILocalVariable(name: "x2", scope: !6907, file: !3, line: 2337, type: !8)
!6931 = !DILocation(line: 2337, column: 14, scope: !6907)
!6932 = !DILocation(line: 2337, column: 19, scope: !6907)
!6933 = !DILocalVariable(name: "y2", scope: !6907, file: !3, line: 2337, type: !8)
!6934 = !DILocation(line: 2337, column: 26, scope: !6907)
!6935 = !DILocation(line: 2337, column: 31, scope: !6907)
!6936 = !DILocalVariable(name: "x3", scope: !6907, file: !3, line: 2338, type: !8)
!6937 = !DILocation(line: 2338, column: 14, scope: !6907)
!6938 = !DILocation(line: 2338, column: 19, scope: !6907)
!6939 = !DILocalVariable(name: "y3", scope: !6907, file: !3, line: 2338, type: !8)
!6940 = !DILocation(line: 2338, column: 26, scope: !6907)
!6941 = !DILocation(line: 2338, column: 31, scope: !6907)
!6942 = !DILocalVariable(name: "det", scope: !6907, file: !3, line: 2339, type: !8)
!6943 = !DILocation(line: 2339, column: 14, scope: !6907)
!6944 = !DILocation(line: 2339, column: 21, scope: !6907)
!6945 = !DILocation(line: 2339, column: 26, scope: !6907)
!6946 = !DILocation(line: 2339, column: 24, scope: !6907)
!6947 = !DILocation(line: 2339, column: 33, scope: !6907)
!6948 = !DILocation(line: 2339, column: 38, scope: !6907)
!6949 = !DILocation(line: 2339, column: 36, scope: !6907)
!6950 = !DILocation(line: 2339, column: 30, scope: !6907)
!6951 = !DILocation(line: 2339, column: 45, scope: !6907)
!6952 = !DILocation(line: 2339, column: 50, scope: !6907)
!6953 = !DILocation(line: 2339, column: 48, scope: !6907)
!6954 = !DILocation(line: 2339, column: 57, scope: !6907)
!6955 = !DILocation(line: 2339, column: 62, scope: !6907)
!6956 = !DILocation(line: 2339, column: 60, scope: !6907)
!6957 = !DILocation(line: 2339, column: 54, scope: !6907)
!6958 = !DILocation(line: 2339, column: 42, scope: !6907)
!6959 = !DILocation(line: 2341, column: 12, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 2341, column: 6)
!6961 = !DILocation(line: 2341, column: 6, scope: !6960)
!6962 = !DILocation(line: 2341, column: 17, scope: !6960)
!6963 = !DILocation(line: 2341, column: 6, scope: !6907)
!6964 = !DILocation(line: 2342, column: 12, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6960, file: !3, line: 2341, column: 32)
!6966 = !DILocation(line: 2342, column: 17, scope: !6965)
!6967 = !DILocation(line: 2342, column: 15, scope: !6965)
!6968 = !DILocation(line: 2342, column: 24, scope: !6965)
!6969 = !DILocation(line: 2342, column: 28, scope: !6965)
!6970 = !DILocation(line: 2342, column: 26, scope: !6965)
!6971 = !DILocation(line: 2342, column: 21, scope: !6965)
!6972 = !DILocation(line: 2342, column: 35, scope: !6965)
!6973 = !DILocation(line: 2342, column: 40, scope: !6965)
!6974 = !DILocation(line: 2342, column: 38, scope: !6965)
!6975 = !DILocation(line: 2342, column: 47, scope: !6965)
!6976 = !DILocation(line: 2342, column: 51, scope: !6965)
!6977 = !DILocation(line: 2342, column: 49, scope: !6965)
!6978 = !DILocation(line: 2342, column: 44, scope: !6965)
!6979 = !DILocation(line: 2342, column: 32, scope: !6965)
!6980 = !DILocation(line: 2342, column: 58, scope: !6965)
!6981 = !DILocation(line: 2342, column: 56, scope: !6965)
!6982 = !DILocation(line: 2342, column: 3, scope: !6965)
!6983 = !DILocation(line: 2342, column: 8, scope: !6965)
!6984 = !DILocation(line: 2343, column: 12, scope: !6965)
!6985 = !DILocation(line: 2343, column: 17, scope: !6965)
!6986 = !DILocation(line: 2343, column: 15, scope: !6965)
!6987 = !DILocation(line: 2343, column: 24, scope: !6965)
!6988 = !DILocation(line: 2343, column: 28, scope: !6965)
!6989 = !DILocation(line: 2343, column: 26, scope: !6965)
!6990 = !DILocation(line: 2343, column: 21, scope: !6965)
!6991 = !DILocation(line: 2343, column: 35, scope: !6965)
!6992 = !DILocation(line: 2343, column: 40, scope: !6965)
!6993 = !DILocation(line: 2343, column: 38, scope: !6965)
!6994 = !DILocation(line: 2343, column: 47, scope: !6965)
!6995 = !DILocation(line: 2343, column: 51, scope: !6965)
!6996 = !DILocation(line: 2343, column: 49, scope: !6965)
!6997 = !DILocation(line: 2343, column: 44, scope: !6965)
!6998 = !DILocation(line: 2343, column: 32, scope: !6965)
!6999 = !DILocation(line: 2343, column: 58, scope: !6965)
!7000 = !DILocation(line: 2343, column: 56, scope: !6965)
!7001 = !DILocation(line: 2343, column: 3, scope: !6965)
!7002 = !DILocation(line: 2343, column: 8, scope: !6965)
!7003 = !DILocation(line: 2344, column: 17, scope: !6965)
!7004 = !DILocation(line: 2344, column: 15, scope: !6965)
!7005 = !DILocation(line: 2344, column: 24, scope: !6965)
!7006 = !DILocation(line: 2344, column: 22, scope: !6965)
!7007 = !DILocation(line: 2344, column: 3, scope: !6965)
!7008 = !DILocation(line: 2344, column: 8, scope: !6965)
!7009 = !DILocation(line: 2346, column: 3, scope: !6965)
!7010 = !DILocation(line: 2349, column: 2, scope: !6907)
!7011 = !DILocation(line: 2350, column: 1, scope: !6907)
!7012 = distinct !DISubprogram(name: "barycentric_weights_v2", scope: !3, file: !3, line: 2355, type: !7013, scopeLine: 2356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!7013 = !DISubroutineType(types: !7014)
!7014 = !{null, !7, !7, !7, !7, !10}
!7015 = !DILocalVariable(name: "v1", arg: 1, scope: !7012, file: !3, line: 2355, type: !7)
!7016 = !DILocation(line: 2355, column: 41, scope: !7012)
!7017 = !DILocalVariable(name: "v2", arg: 2, scope: !7012, file: !3, line: 2355, type: !7)
!7018 = !DILocation(line: 2355, column: 60, scope: !7012)
!7019 = !DILocalVariable(name: "v3", arg: 3, scope: !7012, file: !3, line: 2355, type: !7)
!7020 = !DILocation(line: 2355, column: 79, scope: !7012)
!7021 = !DILocalVariable(name: "co", arg: 4, scope: !7012, file: !3, line: 2355, type: !7)
!7022 = !DILocation(line: 2355, column: 98, scope: !7012)
!7023 = !DILocalVariable(name: "w", arg: 5, scope: !7012, file: !3, line: 2355, type: !10)
!7024 = !DILocation(line: 2355, column: 111, scope: !7012)
!7025 = !DILocalVariable(name: "wtot", scope: !7012, file: !3, line: 2357, type: !9)
!7026 = !DILocation(line: 2357, column: 8, scope: !7012)
!7027 = !DILocation(line: 2359, column: 28, scope: !7012)
!7028 = !DILocation(line: 2359, column: 32, scope: !7012)
!7029 = !DILocation(line: 2359, column: 36, scope: !7012)
!7030 = !DILocation(line: 2359, column: 9, scope: !7012)
!7031 = !DILocation(line: 2359, column: 2, scope: !7012)
!7032 = !DILocation(line: 2359, column: 7, scope: !7012)
!7033 = !DILocation(line: 2360, column: 28, scope: !7012)
!7034 = !DILocation(line: 2360, column: 32, scope: !7012)
!7035 = !DILocation(line: 2360, column: 36, scope: !7012)
!7036 = !DILocation(line: 2360, column: 9, scope: !7012)
!7037 = !DILocation(line: 2360, column: 2, scope: !7012)
!7038 = !DILocation(line: 2360, column: 7, scope: !7012)
!7039 = !DILocation(line: 2361, column: 28, scope: !7012)
!7040 = !DILocation(line: 2361, column: 32, scope: !7012)
!7041 = !DILocation(line: 2361, column: 36, scope: !7012)
!7042 = !DILocation(line: 2361, column: 9, scope: !7012)
!7043 = !DILocation(line: 2361, column: 2, scope: !7012)
!7044 = !DILocation(line: 2361, column: 7, scope: !7012)
!7045 = !DILocation(line: 2362, column: 9, scope: !7012)
!7046 = !DILocation(line: 2362, column: 16, scope: !7012)
!7047 = !DILocation(line: 2362, column: 14, scope: !7012)
!7048 = !DILocation(line: 2362, column: 23, scope: !7012)
!7049 = !DILocation(line: 2362, column: 21, scope: !7012)
!7050 = !DILocation(line: 2362, column: 7, scope: !7012)
!7051 = !DILocation(line: 2364, column: 6, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7012, file: !3, line: 2364, column: 6)
!7053 = !DILocation(line: 2364, column: 11, scope: !7052)
!7054 = !DILocation(line: 2364, column: 6, scope: !7012)
!7055 = !DILocation(line: 2365, column: 13, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7052, file: !3, line: 2364, column: 20)
!7057 = !DILocation(line: 2365, column: 23, scope: !7056)
!7058 = !DILocation(line: 2365, column: 21, scope: !7056)
!7059 = !DILocation(line: 2365, column: 3, scope: !7056)
!7060 = !DILocation(line: 2366, column: 2, scope: !7056)
!7061 = !DILocation(line: 2368, column: 14, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7052, file: !3, line: 2367, column: 7)
!7063 = !DILocation(line: 2368, column: 3, scope: !7062)
!7064 = !DILocation(line: 2370, column: 1, scope: !7012)
!7065 = distinct !DISubprogram(name: "area_tri_signed_v2", scope: !1369, file: !1369, line: 47, type: !489, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!7066 = !DILocalVariable(name: "v1", arg: 1, scope: !7065, file: !1369, line: 47, type: !7)
!7067 = !DILocation(line: 47, column: 46, scope: !7065)
!7068 = !DILocalVariable(name: "v2", arg: 2, scope: !7065, file: !1369, line: 47, type: !7)
!7069 = !DILocation(line: 47, column: 65, scope: !7065)
!7070 = !DILocalVariable(name: "v3", arg: 3, scope: !7065, file: !1369, line: 47, type: !7)
!7071 = !DILocation(line: 47, column: 84, scope: !7065)
!7072 = !DILocation(line: 49, column: 18, scope: !7065)
!7073 = !DILocation(line: 49, column: 26, scope: !7065)
!7074 = !DILocation(line: 49, column: 24, scope: !7065)
!7075 = !DILocation(line: 49, column: 36, scope: !7065)
!7076 = !DILocation(line: 49, column: 44, scope: !7065)
!7077 = !DILocation(line: 49, column: 42, scope: !7065)
!7078 = !DILocation(line: 49, column: 33, scope: !7065)
!7079 = !DILocation(line: 49, column: 54, scope: !7065)
!7080 = !DILocation(line: 49, column: 62, scope: !7065)
!7081 = !DILocation(line: 49, column: 60, scope: !7065)
!7082 = !DILocation(line: 49, column: 72, scope: !7065)
!7083 = !DILocation(line: 49, column: 80, scope: !7065)
!7084 = !DILocation(line: 49, column: 78, scope: !7065)
!7085 = !DILocation(line: 49, column: 69, scope: !7065)
!7086 = !DILocation(line: 49, column: 51, scope: !7065)
!7087 = !DILocation(line: 49, column: 14, scope: !7065)
!7088 = !DILocation(line: 49, column: 2, scope: !7065)
!7089 = distinct !DISubprogram(name: "copy_v3_fl", scope: !184, file: !184, line: 85, type: !1806, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!7090 = !DILocalVariable(name: "r", arg: 1, scope: !7089, file: !184, line: 85, type: !10)
!7091 = !DILocation(line: 85, column: 31, scope: !7089)
!7092 = !DILocalVariable(name: "f", arg: 2, scope: !7089, file: !184, line: 85, type: !9)
!7093 = !DILocation(line: 85, column: 43, scope: !7089)
!7094 = !DILocation(line: 87, column: 9, scope: !7089)
!7095 = !DILocation(line: 87, column: 2, scope: !7089)
!7096 = !DILocation(line: 87, column: 7, scope: !7089)
!7097 = !DILocation(line: 88, column: 9, scope: !7089)
!7098 = !DILocation(line: 88, column: 2, scope: !7089)
!7099 = !DILocation(line: 88, column: 7, scope: !7089)
!7100 = !DILocation(line: 89, column: 9, scope: !7089)
!7101 = !DILocation(line: 89, column: 2, scope: !7089)
!7102 = !DILocation(line: 89, column: 7, scope: !7089)
!7103 = !DILocation(line: 90, column: 1, scope: !7089)
!7104 = distinct !DISubprogram(name: "barycentric_weights_v2_persp", scope: !3, file: !3, line: 2376, type: !7013, scopeLine: 2377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!7105 = !DILocalVariable(name: "v1", arg: 1, scope: !7104, file: !3, line: 2376, type: !7)
!7106 = !DILocation(line: 2376, column: 47, scope: !7104)
!7107 = !DILocalVariable(name: "v2", arg: 2, scope: !7104, file: !3, line: 2376, type: !7)
!7108 = !DILocation(line: 2376, column: 66, scope: !7104)
!7109 = !DILocalVariable(name: "v3", arg: 3, scope: !7104, file: !3, line: 2376, type: !7)
!7110 = !DILocation(line: 2376, column: 85, scope: !7104)
!7111 = !DILocalVariable(name: "co", arg: 4, scope: !7104, file: !3, line: 2376, type: !7)
!7112 = !DILocation(line: 2376, column: 104, scope: !7104)
!7113 = !DILocalVariable(name: "w", arg: 5, scope: !7104, file: !3, line: 2376, type: !10)
!7114 = !DILocation(line: 2376, column: 117, scope: !7104)
!7115 = !DILocalVariable(name: "wtot", scope: !7104, file: !3, line: 2378, type: !9)
!7116 = !DILocation(line: 2378, column: 8, scope: !7104)
!7117 = !DILocation(line: 2380, column: 28, scope: !7104)
!7118 = !DILocation(line: 2380, column: 32, scope: !7104)
!7119 = !DILocation(line: 2380, column: 36, scope: !7104)
!7120 = !DILocation(line: 2380, column: 9, scope: !7104)
!7121 = !DILocation(line: 2380, column: 42, scope: !7104)
!7122 = !DILocation(line: 2380, column: 40, scope: !7104)
!7123 = !DILocation(line: 2380, column: 2, scope: !7104)
!7124 = !DILocation(line: 2380, column: 7, scope: !7104)
!7125 = !DILocation(line: 2381, column: 28, scope: !7104)
!7126 = !DILocation(line: 2381, column: 32, scope: !7104)
!7127 = !DILocation(line: 2381, column: 36, scope: !7104)
!7128 = !DILocation(line: 2381, column: 9, scope: !7104)
!7129 = !DILocation(line: 2381, column: 42, scope: !7104)
!7130 = !DILocation(line: 2381, column: 40, scope: !7104)
!7131 = !DILocation(line: 2381, column: 2, scope: !7104)
!7132 = !DILocation(line: 2381, column: 7, scope: !7104)
!7133 = !DILocation(line: 2382, column: 28, scope: !7104)
!7134 = !DILocation(line: 2382, column: 32, scope: !7104)
!7135 = !DILocation(line: 2382, column: 36, scope: !7104)
!7136 = !DILocation(line: 2382, column: 9, scope: !7104)
!7137 = !DILocation(line: 2382, column: 42, scope: !7104)
!7138 = !DILocation(line: 2382, column: 40, scope: !7104)
!7139 = !DILocation(line: 2382, column: 2, scope: !7104)
!7140 = !DILocation(line: 2382, column: 7, scope: !7104)
!7141 = !DILocation(line: 2383, column: 9, scope: !7104)
!7142 = !DILocation(line: 2383, column: 16, scope: !7104)
!7143 = !DILocation(line: 2383, column: 14, scope: !7104)
!7144 = !DILocation(line: 2383, column: 23, scope: !7104)
!7145 = !DILocation(line: 2383, column: 21, scope: !7104)
!7146 = !DILocation(line: 2383, column: 7, scope: !7104)
!7147 = !DILocation(line: 2385, column: 6, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7104, file: !3, line: 2385, column: 6)
!7149 = !DILocation(line: 2385, column: 11, scope: !7148)
!7150 = !DILocation(line: 2385, column: 6, scope: !7104)
!7151 = !DILocation(line: 2386, column: 13, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 2385, column: 20)
!7153 = !DILocation(line: 2386, column: 23, scope: !7152)
!7154 = !DILocation(line: 2386, column: 21, scope: !7152)
!7155 = !DILocation(line: 2386, column: 3, scope: !7152)
!7156 = !DILocation(line: 2387, column: 2, scope: !7152)
!7157 = !DILocation(line: 2389, column: 17, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 2388, column: 7)
!7159 = !DILocation(line: 2389, column: 22, scope: !7158)
!7160 = !DILocation(line: 2389, column: 10, scope: !7158)
!7161 = !DILocation(line: 2389, column: 15, scope: !7158)
!7162 = !DILocation(line: 2389, column: 3, scope: !7158)
!7163 = !DILocation(line: 2389, column: 8, scope: !7158)
!7164 = !DILocation(line: 2391, column: 1, scope: !7104)
!7165 = distinct !DISubprogram(name: "barycentric_weights_v2_quad", scope: !3, file: !3, line: 2396, type: !7166, scopeLine: 2398, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!7166 = !DISubroutineType(types: !7167)
!7167 = !{null, !7, !7, !7, !7, !7, !10}
!7168 = !DILocalVariable(name: "v1", arg: 1, scope: !7165, file: !3, line: 2396, type: !7)
!7169 = !DILocation(line: 2396, column: 46, scope: !7165)
!7170 = !DILocalVariable(name: "v2", arg: 2, scope: !7165, file: !3, line: 2396, type: !7)
!7171 = !DILocation(line: 2396, column: 65, scope: !7165)
!7172 = !DILocalVariable(name: "v3", arg: 3, scope: !7165, file: !3, line: 2396, type: !7)
!7173 = !DILocation(line: 2396, column: 84, scope: !7165)
!7174 = !DILocalVariable(name: "v4", arg: 4, scope: !7165, file: !3, line: 2396, type: !7)
!7175 = !DILocation(line: 2396, column: 103, scope: !7165)
!7176 = !DILocalVariable(name: "co", arg: 5, scope: !7165, file: !3, line: 2397, type: !7)
!7177 = !DILocation(line: 2397, column: 46, scope: !7165)
!7178 = !DILocalVariable(name: "w", arg: 6, scope: !7165, file: !3, line: 2397, type: !10)
!7179 = !DILocation(line: 2397, column: 59, scope: !7165)
!7180 = !DILocalVariable(name: "dirs", scope: !7165, file: !3, line: 2407, type: !7181)
!7181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 256, elements: !7182)
!7182 = !{!3954, !604}
!7183 = !DILocation(line: 2407, column: 14, scope: !7165)
!7184 = !DILocation(line: 2407, column: 27, scope: !7165)
!7185 = !DILocation(line: 2408, column: 6, scope: !7165)
!7186 = !DILocation(line: 2408, column: 7, scope: !7165)
!7187 = !DILocation(line: 2408, column: 15, scope: !7165)
!7188 = !DILocation(line: 2408, column: 13, scope: !7165)
!7189 = !DILocation(line: 2408, column: 22, scope: !7165)
!7190 = !DILocation(line: 2408, column: 30, scope: !7165)
!7191 = !DILocation(line: 2408, column: 28, scope: !7165)
!7192 = !DILocation(line: 2409, column: 6, scope: !7165)
!7193 = !DILocation(line: 2409, column: 7, scope: !7165)
!7194 = !DILocation(line: 2409, column: 15, scope: !7165)
!7195 = !DILocation(line: 2409, column: 13, scope: !7165)
!7196 = !DILocation(line: 2409, column: 22, scope: !7165)
!7197 = !DILocation(line: 2409, column: 30, scope: !7165)
!7198 = !DILocation(line: 2409, column: 28, scope: !7165)
!7199 = !DILocation(line: 2410, column: 6, scope: !7165)
!7200 = !DILocation(line: 2410, column: 7, scope: !7165)
!7201 = !DILocation(line: 2410, column: 15, scope: !7165)
!7202 = !DILocation(line: 2410, column: 13, scope: !7165)
!7203 = !DILocation(line: 2410, column: 22, scope: !7165)
!7204 = !DILocation(line: 2410, column: 30, scope: !7165)
!7205 = !DILocation(line: 2410, column: 28, scope: !7165)
!7206 = !DILocation(line: 2411, column: 6, scope: !7165)
!7207 = !DILocation(line: 2411, column: 7, scope: !7165)
!7208 = !DILocation(line: 2411, column: 15, scope: !7165)
!7209 = !DILocation(line: 2411, column: 13, scope: !7165)
!7210 = !DILocation(line: 2411, column: 22, scope: !7165)
!7211 = !DILocation(line: 2411, column: 30, scope: !7165)
!7212 = !DILocation(line: 2411, column: 28, scope: !7165)
!7213 = !DILocalVariable(name: "lens", scope: !7165, file: !3, line: 2414, type: !7214)
!7214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 128, elements: !3953)
!7215 = !DILocation(line: 2414, column: 14, scope: !7165)
!7216 = !DILocation(line: 2414, column: 24, scope: !7165)
!7217 = !DILocation(line: 2415, column: 13, scope: !7165)
!7218 = !DILocation(line: 2415, column: 6, scope: !7165)
!7219 = !DILocation(line: 2416, column: 13, scope: !7165)
!7220 = !DILocation(line: 2416, column: 6, scope: !7165)
!7221 = !DILocation(line: 2417, column: 13, scope: !7165)
!7222 = !DILocation(line: 2417, column: 6, scope: !7165)
!7223 = !DILocation(line: 2418, column: 13, scope: !7165)
!7224 = !DILocation(line: 2418, column: 6, scope: !7165)
!7225 = !DILocation(line: 2422, column: 11, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 2422, column: 11)
!7227 = !DILocation(line: 2422, column: 11, scope: !7165)
!7228 = !DILocation(line: 2422, column: 46, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7226, file: !3, line: 2422, column: 44)
!7230 = !DILocation(line: 2422, column: 51, scope: !7229)
!7231 = !DILocation(line: 2422, column: 73, scope: !7229)
!7232 = !DILocation(line: 2422, column: 78, scope: !7229)
!7233 = !DILocation(line: 2422, column: 66, scope: !7229)
!7234 = !DILocation(line: 2422, column: 71, scope: !7229)
!7235 = !DILocation(line: 2422, column: 59, scope: !7229)
!7236 = !DILocation(line: 2422, column: 64, scope: !7229)
!7237 = !DILocation(line: 2422, column: 86, scope: !7229)
!7238 = !DILocation(line: 2423, column: 11, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7226, file: !3, line: 2423, column: 11)
!7240 = !DILocation(line: 2423, column: 11, scope: !7226)
!7241 = !DILocation(line: 2423, column: 46, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7239, file: !3, line: 2423, column: 44)
!7243 = !DILocation(line: 2423, column: 51, scope: !7242)
!7244 = !DILocation(line: 2423, column: 73, scope: !7242)
!7245 = !DILocation(line: 2423, column: 78, scope: !7242)
!7246 = !DILocation(line: 2423, column: 66, scope: !7242)
!7247 = !DILocation(line: 2423, column: 71, scope: !7242)
!7248 = !DILocation(line: 2423, column: 59, scope: !7242)
!7249 = !DILocation(line: 2423, column: 64, scope: !7242)
!7250 = !DILocation(line: 2423, column: 86, scope: !7242)
!7251 = !DILocation(line: 2424, column: 11, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7239, file: !3, line: 2424, column: 11)
!7253 = !DILocation(line: 2424, column: 11, scope: !7239)
!7254 = !DILocation(line: 2424, column: 46, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7252, file: !3, line: 2424, column: 44)
!7256 = !DILocation(line: 2424, column: 51, scope: !7255)
!7257 = !DILocation(line: 2424, column: 73, scope: !7255)
!7258 = !DILocation(line: 2424, column: 78, scope: !7255)
!7259 = !DILocation(line: 2424, column: 66, scope: !7255)
!7260 = !DILocation(line: 2424, column: 71, scope: !7255)
!7261 = !DILocation(line: 2424, column: 59, scope: !7255)
!7262 = !DILocation(line: 2424, column: 64, scope: !7255)
!7263 = !DILocation(line: 2424, column: 86, scope: !7255)
!7264 = !DILocation(line: 2425, column: 11, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7252, file: !3, line: 2425, column: 11)
!7266 = !DILocation(line: 2425, column: 11, scope: !7252)
!7267 = !DILocation(line: 2425, column: 46, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 2425, column: 44)
!7269 = !DILocation(line: 2425, column: 51, scope: !7268)
!7270 = !DILocation(line: 2425, column: 73, scope: !7268)
!7271 = !DILocation(line: 2425, column: 78, scope: !7268)
!7272 = !DILocation(line: 2425, column: 66, scope: !7268)
!7273 = !DILocation(line: 2425, column: 71, scope: !7268)
!7274 = !DILocation(line: 2425, column: 59, scope: !7268)
!7275 = !DILocation(line: 2425, column: 64, scope: !7268)
!7276 = !DILocation(line: 2425, column: 86, scope: !7268)
!7277 = !DILocalVariable(name: "wtot", scope: !7278, file: !3, line: 2427, type: !9)
!7278 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 2426, column: 7)
!7279 = !DILocation(line: 2427, column: 9, scope: !7278)
!7280 = !DILocalVariable(name: "area", scope: !7278, file: !3, line: 2427, type: !9)
!7281 = !DILocation(line: 2427, column: 15, scope: !7278)
!7282 = !DILocalVariable(name: "t", scope: !7278, file: !3, line: 2437, type: !7214)
!7283 = !DILocation(line: 2437, column: 15, scope: !7278)
!7284 = !DILocation(line: 2437, column: 22, scope: !7278)
!7285 = !DILocation(line: 2438, column: 4, scope: !7278)
!7286 = !DILocation(line: 2439, column: 4, scope: !7278)
!7287 = !DILocation(line: 2440, column: 4, scope: !7278)
!7288 = !DILocation(line: 2441, column: 4, scope: !7278)
!7289 = !DILocation(line: 2450, column: 11, scope: !7278)
!7290 = !DILocation(line: 2450, column: 18, scope: !7278)
!7291 = !DILocation(line: 2450, column: 16, scope: !7278)
!7292 = !DILocation(line: 2450, column: 26, scope: !7278)
!7293 = !DILocation(line: 2450, column: 24, scope: !7278)
!7294 = !DILocation(line: 2450, column: 3, scope: !7278)
!7295 = !DILocation(line: 2450, column: 8, scope: !7278)
!7296 = !DILocation(line: 2451, column: 11, scope: !7278)
!7297 = !DILocation(line: 2451, column: 18, scope: !7278)
!7298 = !DILocation(line: 2451, column: 16, scope: !7278)
!7299 = !DILocation(line: 2451, column: 26, scope: !7278)
!7300 = !DILocation(line: 2451, column: 24, scope: !7278)
!7301 = !DILocation(line: 2451, column: 3, scope: !7278)
!7302 = !DILocation(line: 2451, column: 8, scope: !7278)
!7303 = !DILocation(line: 2452, column: 11, scope: !7278)
!7304 = !DILocation(line: 2452, column: 18, scope: !7278)
!7305 = !DILocation(line: 2452, column: 16, scope: !7278)
!7306 = !DILocation(line: 2452, column: 26, scope: !7278)
!7307 = !DILocation(line: 2452, column: 24, scope: !7278)
!7308 = !DILocation(line: 2452, column: 3, scope: !7278)
!7309 = !DILocation(line: 2452, column: 8, scope: !7278)
!7310 = !DILocation(line: 2453, column: 11, scope: !7278)
!7311 = !DILocation(line: 2453, column: 18, scope: !7278)
!7312 = !DILocation(line: 2453, column: 16, scope: !7278)
!7313 = !DILocation(line: 2453, column: 26, scope: !7278)
!7314 = !DILocation(line: 2453, column: 24, scope: !7278)
!7315 = !DILocation(line: 2453, column: 3, scope: !7278)
!7316 = !DILocation(line: 2453, column: 8, scope: !7278)
!7317 = !DILocation(line: 2455, column: 10, scope: !7278)
!7318 = !DILocation(line: 2455, column: 17, scope: !7278)
!7319 = !DILocation(line: 2455, column: 15, scope: !7278)
!7320 = !DILocation(line: 2455, column: 24, scope: !7278)
!7321 = !DILocation(line: 2455, column: 22, scope: !7278)
!7322 = !DILocation(line: 2455, column: 31, scope: !7278)
!7323 = !DILocation(line: 2455, column: 29, scope: !7278)
!7324 = !DILocation(line: 2455, column: 8, scope: !7278)
!7325 = !DILocation(line: 2457, column: 7, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7278, file: !3, line: 2457, column: 7)
!7327 = !DILocation(line: 2457, column: 12, scope: !7326)
!7328 = !DILocation(line: 2457, column: 7, scope: !7278)
!7329 = !DILocation(line: 2458, column: 14, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7326, file: !3, line: 2457, column: 21)
!7331 = !DILocation(line: 2458, column: 24, scope: !7330)
!7332 = !DILocation(line: 2458, column: 22, scope: !7330)
!7333 = !DILocation(line: 2458, column: 4, scope: !7330)
!7334 = !DILocation(line: 2459, column: 3, scope: !7330)
!7335 = !DILocation(line: 2461, column: 15, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7326, file: !3, line: 2460, column: 8)
!7337 = !DILocation(line: 2461, column: 4, scope: !7336)
!7338 = !DILocation(line: 2464, column: 1, scope: !7165)
!7339 = distinct !DISubprogram(name: "len_v2", scope: !184, file: !184, line: 691, type: !479, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!7340 = !DILocalVariable(name: "v", arg: 1, scope: !7339, file: !184, line: 691, type: !7)
!7341 = !DILocation(line: 691, column: 34, scope: !7339)
!7342 = !DILocation(line: 693, column: 15, scope: !7339)
!7343 = !DILocation(line: 693, column: 22, scope: !7339)
!7344 = !DILocation(line: 693, column: 20, scope: !7339)
!7345 = !DILocation(line: 693, column: 29, scope: !7339)
!7346 = !DILocation(line: 693, column: 36, scope: !7339)
!7347 = !DILocation(line: 693, column: 34, scope: !7339)
!7348 = !DILocation(line: 693, column: 27, scope: !7339)
!7349 = !DILocation(line: 693, column: 9, scope: !7339)
!7350 = !DILocation(line: 693, column: 2, scope: !7339)
!7351 = distinct !DISubprogram(name: "cross_v2v2", scope: !184, file: !184, line: 629, type: !565, scopeLine: 630, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!7352 = !DILocalVariable(name: "a", arg: 1, scope: !7351, file: !184, line: 629, type: !7)
!7353 = !DILocation(line: 629, column: 38, scope: !7351)
!7354 = !DILocalVariable(name: "b", arg: 2, scope: !7351, file: !184, line: 629, type: !7)
!7355 = !DILocation(line: 629, column: 56, scope: !7351)
!7356 = !DILocation(line: 631, column: 9, scope: !7351)
!7357 = !DILocation(line: 631, column: 16, scope: !7351)
!7358 = !DILocation(line: 631, column: 14, scope: !7351)
!7359 = !DILocation(line: 631, column: 23, scope: !7351)
!7360 = !DILocation(line: 631, column: 30, scope: !7351)
!7361 = !DILocation(line: 631, column: 28, scope: !7351)
!7362 = !DILocation(line: 631, column: 21, scope: !7351)
!7363 = !DILocation(line: 631, column: 2, scope: !7351)
!7364 = distinct !DISubprogram(name: "mul_v4_fl", scope: !184, file: !184, line: 419, type: !1806, scopeLine: 420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!7365 = !DILocalVariable(name: "r", arg: 1, scope: !7364, file: !184, line: 419, type: !10)
!7366 = !DILocation(line: 419, column: 30, scope: !7364)
!7367 = !DILocalVariable(name: "f", arg: 2, scope: !7364, file: !184, line: 419, type: !9)
!7368 = !DILocation(line: 419, column: 42, scope: !7364)
!7369 = !DILocation(line: 421, column: 10, scope: !7364)
!7370 = !DILocation(line: 421, column: 2, scope: !7364)
!7371 = !DILocation(line: 421, column: 7, scope: !7364)
!7372 = !DILocation(line: 422, column: 10, scope: !7364)
!7373 = !DILocation(line: 422, column: 2, scope: !7364)
!7374 = !DILocation(line: 422, column: 7, scope: !7364)
!7375 = !DILocation(line: 423, column: 10, scope: !7364)
!7376 = !DILocation(line: 423, column: 2, scope: !7364)
!7377 = !DILocation(line: 423, column: 7, scope: !7364)
!7378 = !DILocation(line: 424, column: 10, scope: !7364)
!7379 = !DILocation(line: 424, column: 2, scope: !7364)
!7380 = !DILocation(line: 424, column: 7, scope: !7364)
!7381 = !DILocation(line: 425, column: 1, scope: !7364)
!7382 = distinct !DISubprogram(name: "copy_v4_fl", scope: !184, file: !184, line: 92, type: !1806, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!7383 = !DILocalVariable(name: "r", arg: 1, scope: !7382, file: !184, line: 92, type: !10)
!7384 = !DILocation(line: 92, column: 31, scope: !7382)
!7385 = !DILocalVariable(name: "f", arg: 2, scope: !7382, file: !184, line: 92, type: !9)
!7386 = !DILocation(line: 92, column: 43, scope: !7382)
!7387 = !DILocation(line: 94, column: 9, scope: !7382)
!7388 = !DILocation(line: 94, column: 2, scope: !7382)
!7389 = !DILocation(line: 94, column: 7, scope: !7382)
!7390 = !DILocation(line: 95, column: 9, scope: !7382)
!7391 = !DILocation(line: 95, column: 2, scope: !7382)
!7392 = !DILocation(line: 95, column: 7, scope: !7382)
!7393 = !DILocation(line: 96, column: 9, scope: !7382)
!7394 = !DILocation(line: 96, column: 2, scope: !7382)
!7395 = !DILocation(line: 96, column: 7, scope: !7382)
!7396 = !DILocation(line: 97, column: 9, scope: !7382)
!7397 = !DILocation(line: 97, column: 2, scope: !7382)
!7398 = !DILocation(line: 97, column: 7, scope: !7382)
!7399 = !DILocation(line: 98, column: 1, scope: !7382)
!7400 = distinct !DISubprogram(name: "transform_point_by_tri_v3", scope: !3, file: !3, line: 2469, type: !7401, scopeLine: 2473, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!7401 = !DISubroutineType(types: !7402)
!7402 = !{null, !10, !7, !7, !7, !7, !7, !7, !7}
!7403 = !DILocalVariable(name: "pt_tar", arg: 1, scope: !7400, file: !3, line: 2470, type: !10)
!7404 = !DILocation(line: 2470, column: 15, scope: !7400)
!7405 = !DILocalVariable(name: "pt_src", arg: 2, scope: !7400, file: !3, line: 2470, type: !7)
!7406 = !DILocation(line: 2470, column: 38, scope: !7400)
!7407 = !DILocalVariable(name: "tri_tar_p1", arg: 3, scope: !7400, file: !3, line: 2471, type: !7)
!7408 = !DILocation(line: 2471, column: 21, scope: !7400)
!7409 = !DILocalVariable(name: "tri_tar_p2", arg: 4, scope: !7400, file: !3, line: 2471, type: !7)
!7410 = !DILocation(line: 2471, column: 48, scope: !7400)
!7411 = !DILocalVariable(name: "tri_tar_p3", arg: 5, scope: !7400, file: !3, line: 2471, type: !7)
!7412 = !DILocation(line: 2471, column: 75, scope: !7400)
!7413 = !DILocalVariable(name: "tri_src_p1", arg: 6, scope: !7400, file: !3, line: 2472, type: !7)
!7414 = !DILocation(line: 2472, column: 21, scope: !7400)
!7415 = !DILocalVariable(name: "tri_src_p2", arg: 7, scope: !7400, file: !3, line: 2472, type: !7)
!7416 = !DILocation(line: 2472, column: 48, scope: !7400)
!7417 = !DILocalVariable(name: "tri_src_p3", arg: 8, scope: !7400, file: !3, line: 2472, type: !7)
!7418 = !DILocation(line: 2472, column: 75, scope: !7400)
!7419 = !DILocalVariable(name: "no_tar", scope: !7400, file: !3, line: 2479, type: !117)
!7420 = !DILocation(line: 2479, column: 8, scope: !7400)
!7421 = !DILocalVariable(name: "no_src", scope: !7400, file: !3, line: 2479, type: !117)
!7422 = !DILocation(line: 2479, column: 19, scope: !7400)
!7423 = !DILocalVariable(name: "mat_src", scope: !7400, file: !3, line: 2480, type: !839)
!7424 = !DILocation(line: 2480, column: 8, scope: !7400)
!7425 = !DILocalVariable(name: "pt_src_xy", scope: !7400, file: !3, line: 2481, type: !117)
!7426 = !DILocation(line: 2481, column: 8, scope: !7400)
!7427 = !DILocalVariable(name: "tri_xy_src", scope: !7400, file: !3, line: 2482, type: !839)
!7428 = !DILocation(line: 2482, column: 8, scope: !7400)
!7429 = !DILocalVariable(name: "w_src", scope: !7400, file: !3, line: 2483, type: !117)
!7430 = !DILocation(line: 2483, column: 8, scope: !7400)
!7431 = !DILocalVariable(name: "area_tar", scope: !7400, file: !3, line: 2484, type: !9)
!7432 = !DILocation(line: 2484, column: 8, scope: !7400)
!7433 = !DILocalVariable(name: "area_src", scope: !7400, file: !3, line: 2484, type: !9)
!7434 = !DILocation(line: 2484, column: 18, scope: !7400)
!7435 = !DILocalVariable(name: "z_ofs_src", scope: !7400, file: !3, line: 2485, type: !9)
!7436 = !DILocation(line: 2485, column: 8, scope: !7400)
!7437 = !DILocation(line: 2487, column: 16, scope: !7400)
!7438 = !DILocation(line: 2487, column: 24, scope: !7400)
!7439 = !DILocation(line: 2487, column: 36, scope: !7400)
!7440 = !DILocation(line: 2487, column: 48, scope: !7400)
!7441 = !DILocation(line: 2487, column: 2, scope: !7400)
!7442 = !DILocation(line: 2488, column: 16, scope: !7400)
!7443 = !DILocation(line: 2488, column: 24, scope: !7400)
!7444 = !DILocation(line: 2488, column: 36, scope: !7400)
!7445 = !DILocation(line: 2488, column: 48, scope: !7400)
!7446 = !DILocation(line: 2488, column: 2, scope: !7400)
!7447 = !DILocation(line: 2490, column: 25, scope: !7400)
!7448 = !DILocation(line: 2490, column: 34, scope: !7400)
!7449 = !DILocation(line: 2490, column: 2, scope: !7400)
!7450 = !DILocation(line: 2493, column: 14, scope: !7400)
!7451 = !DILocation(line: 2493, column: 29, scope: !7400)
!7452 = !DILocation(line: 2493, column: 38, scope: !7400)
!7453 = !DILocation(line: 2493, column: 2, scope: !7400)
!7454 = !DILocation(line: 2494, column: 14, scope: !7400)
!7455 = !DILocation(line: 2494, column: 29, scope: !7400)
!7456 = !DILocation(line: 2494, column: 38, scope: !7400)
!7457 = !DILocation(line: 2494, column: 2, scope: !7400)
!7458 = !DILocation(line: 2495, column: 14, scope: !7400)
!7459 = !DILocation(line: 2495, column: 29, scope: !7400)
!7460 = !DILocation(line: 2495, column: 38, scope: !7400)
!7461 = !DILocation(line: 2495, column: 2, scope: !7400)
!7462 = !DILocation(line: 2496, column: 14, scope: !7400)
!7463 = !DILocation(line: 2496, column: 29, scope: !7400)
!7464 = !DILocation(line: 2496, column: 38, scope: !7400)
!7465 = !DILocation(line: 2496, column: 2, scope: !7400)
!7466 = !DILocation(line: 2499, column: 25, scope: !7400)
!7467 = !DILocation(line: 2499, column: 40, scope: !7400)
!7468 = !DILocation(line: 2499, column: 55, scope: !7400)
!7469 = !DILocation(line: 2499, column: 70, scope: !7400)
!7470 = !DILocation(line: 2499, column: 81, scope: !7400)
!7471 = !DILocation(line: 2499, column: 2, scope: !7400)
!7472 = !DILocation(line: 2500, column: 19, scope: !7400)
!7473 = !DILocation(line: 2500, column: 27, scope: !7400)
!7474 = !DILocation(line: 2500, column: 39, scope: !7400)
!7475 = !DILocation(line: 2500, column: 51, scope: !7400)
!7476 = !DILocation(line: 2500, column: 63, scope: !7400)
!7477 = !DILocation(line: 2500, column: 2, scope: !7400)
!7478 = !DILocation(line: 2502, column: 31, scope: !7400)
!7479 = !DILocation(line: 2502, column: 43, scope: !7400)
!7480 = !DILocation(line: 2502, column: 55, scope: !7400)
!7481 = !DILocation(line: 2502, column: 19, scope: !7400)
!7482 = !DILocation(line: 2502, column: 13, scope: !7400)
!7483 = !DILocation(line: 2502, column: 11, scope: !7400)
!7484 = !DILocation(line: 2503, column: 31, scope: !7400)
!7485 = !DILocation(line: 2503, column: 46, scope: !7400)
!7486 = !DILocation(line: 2503, column: 61, scope: !7400)
!7487 = !DILocation(line: 2503, column: 19, scope: !7400)
!7488 = !DILocation(line: 2503, column: 13, scope: !7400)
!7489 = !DILocation(line: 2503, column: 11, scope: !7400)
!7490 = !DILocation(line: 2505, column: 14, scope: !7400)
!7491 = !DILocation(line: 2505, column: 29, scope: !7400)
!7492 = !DILocation(line: 2505, column: 27, scope: !7400)
!7493 = !DILocation(line: 2505, column: 12, scope: !7400)
!7494 = !DILocation(line: 2506, column: 17, scope: !7400)
!7495 = !DILocation(line: 2506, column: 25, scope: !7400)
!7496 = !DILocation(line: 2506, column: 33, scope: !7400)
!7497 = !DILocation(line: 2506, column: 42, scope: !7400)
!7498 = !DILocation(line: 2506, column: 54, scope: !7400)
!7499 = !DILocation(line: 2506, column: 52, scope: !7400)
!7500 = !DILocation(line: 2506, column: 66, scope: !7400)
!7501 = !DILocation(line: 2506, column: 64, scope: !7400)
!7502 = !DILocation(line: 2506, column: 2, scope: !7400)
!7503 = !DILocation(line: 2507, column: 1, scope: !7400)
!7504 = distinct !DISubprogram(name: "area_tri_v2", scope: !1369, file: !1369, line: 52, type: !489, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!7505 = !DILocalVariable(name: "v1", arg: 1, scope: !7504, file: !1369, line: 52, type: !7)
!7506 = !DILocation(line: 52, column: 39, scope: !7504)
!7507 = !DILocalVariable(name: "v2", arg: 2, scope: !7504, file: !1369, line: 52, type: !7)
!7508 = !DILocation(line: 52, column: 58, scope: !7504)
!7509 = !DILocalVariable(name: "v3", arg: 3, scope: !7504, file: !1369, line: 52, type: !7)
!7510 = !DILocation(line: 52, column: 77, scope: !7504)
!7511 = !DILocation(line: 54, column: 34, scope: !7504)
!7512 = !DILocation(line: 54, column: 38, scope: !7504)
!7513 = !DILocation(line: 54, column: 42, scope: !7504)
!7514 = !DILocation(line: 54, column: 15, scope: !7504)
!7515 = !DILocation(line: 54, column: 9, scope: !7504)
!7516 = !DILocation(line: 54, column: 2, scope: !7504)
!7517 = distinct !DISubprogram(name: "transform_point_by_seg_v3", scope: !3, file: !3, line: 2513, type: !6652, scopeLine: 2517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!7518 = !DILocalVariable(name: "p_dst", arg: 1, scope: !7517, file: !3, line: 2514, type: !10)
!7519 = !DILocation(line: 2514, column: 15, scope: !7517)
!7520 = !DILocalVariable(name: "p_src", arg: 2, scope: !7517, file: !3, line: 2514, type: !7)
!7521 = !DILocation(line: 2514, column: 37, scope: !7517)
!7522 = !DILocalVariable(name: "l_dst_p1", arg: 3, scope: !7517, file: !3, line: 2515, type: !7)
!7523 = !DILocation(line: 2515, column: 21, scope: !7517)
!7524 = !DILocalVariable(name: "l_dst_p2", arg: 4, scope: !7517, file: !3, line: 2515, type: !7)
!7525 = !DILocation(line: 2515, column: 46, scope: !7517)
!7526 = !DILocalVariable(name: "l_src_p1", arg: 5, scope: !7517, file: !3, line: 2516, type: !7)
!7527 = !DILocation(line: 2516, column: 21, scope: !7517)
!7528 = !DILocalVariable(name: "l_src_p2", arg: 6, scope: !7517, file: !3, line: 2516, type: !7)
!7529 = !DILocation(line: 2516, column: 46, scope: !7517)
!7530 = !DILocalVariable(name: "t", scope: !7517, file: !3, line: 2518, type: !9)
!7531 = !DILocation(line: 2518, column: 8, scope: !7517)
!7532 = !DILocation(line: 2518, column: 33, scope: !7517)
!7533 = !DILocation(line: 2518, column: 40, scope: !7517)
!7534 = !DILocation(line: 2518, column: 50, scope: !7517)
!7535 = !DILocation(line: 2518, column: 12, scope: !7517)
!7536 = !DILocation(line: 2519, column: 17, scope: !7517)
!7537 = !DILocation(line: 2519, column: 24, scope: !7517)
!7538 = !DILocation(line: 2519, column: 34, scope: !7517)
!7539 = !DILocation(line: 2519, column: 44, scope: !7517)
!7540 = !DILocation(line: 2519, column: 2, scope: !7517)
!7541 = !DILocation(line: 2520, column: 1, scope: !7517)
!7542 = distinct !DISubprogram(name: "interp_sparse_array", scope: !3, file: !3, line: 2524, type: !7543, scopeLine: 2525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!7543 = !DISubroutineType(types: !7544)
!7544 = !{!17, !10, !1841, !8}
!7545 = !DILocalVariable(name: "array", arg: 1, scope: !7542, file: !3, line: 2524, type: !10)
!7546 = !DILocation(line: 2524, column: 32, scope: !7542)
!7547 = !DILocalVariable(name: "list_size", arg: 2, scope: !7542, file: !3, line: 2524, type: !1841)
!7548 = !DILocation(line: 2524, column: 49, scope: !7542)
!7549 = !DILocalVariable(name: "skipval", arg: 3, scope: !7542, file: !3, line: 2524, type: !8)
!7550 = !DILocation(line: 2524, column: 72, scope: !7542)
!7551 = !DILocalVariable(name: "found_invalid", scope: !7542, file: !3, line: 2526, type: !17)
!7552 = !DILocation(line: 2526, column: 6, scope: !7542)
!7553 = !DILocalVariable(name: "found_valid", scope: !7542, file: !3, line: 2527, type: !17)
!7554 = !DILocation(line: 2527, column: 6, scope: !7542)
!7555 = !DILocalVariable(name: "i", scope: !7542, file: !3, line: 2528, type: !17)
!7556 = !DILocation(line: 2528, column: 6, scope: !7542)
!7557 = !DILocation(line: 2530, column: 9, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7542, file: !3, line: 2530, column: 2)
!7559 = !DILocation(line: 2530, column: 7, scope: !7558)
!7560 = !DILocation(line: 2530, column: 14, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7558, file: !3, line: 2530, column: 2)
!7562 = !DILocation(line: 2530, column: 18, scope: !7561)
!7563 = !DILocation(line: 2530, column: 16, scope: !7561)
!7564 = !DILocation(line: 2530, column: 2, scope: !7558)
!7565 = !DILocation(line: 2531, column: 7, scope: !7566)
!7566 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 2531, column: 7)
!7567 = distinct !DILexicalBlock(scope: !7561, file: !3, line: 2530, column: 34)
!7568 = !DILocation(line: 2531, column: 13, scope: !7566)
!7569 = !DILocation(line: 2531, column: 19, scope: !7566)
!7570 = !DILocation(line: 2531, column: 16, scope: !7566)
!7571 = !DILocation(line: 2531, column: 7, scope: !7567)
!7572 = !DILocation(line: 2532, column: 18, scope: !7566)
!7573 = !DILocation(line: 2532, column: 4, scope: !7566)
!7574 = !DILocation(line: 2534, column: 16, scope: !7566)
!7575 = !DILocation(line: 2535, column: 2, scope: !7567)
!7576 = !DILocation(line: 2530, column: 30, scope: !7561)
!7577 = !DILocation(line: 2530, column: 2, scope: !7561)
!7578 = distinct !{!7578, !7564, !7579}
!7579 = !DILocation(line: 2535, column: 2, scope: !7558)
!7580 = !DILocation(line: 2537, column: 6, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7542, file: !3, line: 2537, column: 6)
!7582 = !DILocation(line: 2537, column: 18, scope: !7581)
!7583 = !DILocation(line: 2537, column: 6, scope: !7542)
!7584 = !DILocation(line: 2538, column: 3, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 2537, column: 24)
!7586 = !DILocation(line: 2540, column: 11, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 2540, column: 11)
!7588 = !DILocation(line: 2540, column: 25, scope: !7587)
!7589 = !DILocation(line: 2540, column: 11, scope: !7581)
!7590 = !DILocation(line: 2541, column: 3, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7587, file: !3, line: 2540, column: 31)
!7592 = !DILocalVariable(name: "valid_last", scope: !7593, file: !3, line: 2545, type: !9)
!7593 = distinct !DILexicalBlock(scope: !7587, file: !3, line: 2543, column: 7)
!7594 = !DILocation(line: 2545, column: 9, scope: !7593)
!7595 = !DILocation(line: 2545, column: 22, scope: !7593)
!7596 = !DILocalVariable(name: "valid_ofs", scope: !7593, file: !3, line: 2546, type: !17)
!7597 = !DILocation(line: 2546, column: 7, scope: !7593)
!7598 = !DILocalVariable(name: "array_up", scope: !7593, file: !3, line: 2548, type: !10)
!7599 = !DILocation(line: 2548, column: 10, scope: !7593)
!7600 = !DILocation(line: 2548, column: 21, scope: !7593)
!7601 = !DILocation(line: 2548, column: 57, scope: !7593)
!7602 = !DILocation(line: 2548, column: 49, scope: !7593)
!7603 = !DILocation(line: 2548, column: 47, scope: !7593)
!7604 = !DILocalVariable(name: "array_down", scope: !7593, file: !3, line: 2549, type: !10)
!7605 = !DILocation(line: 2549, column: 10, scope: !7593)
!7606 = !DILocation(line: 2549, column: 23, scope: !7593)
!7607 = !DILocation(line: 2549, column: 59, scope: !7593)
!7608 = !DILocation(line: 2549, column: 51, scope: !7593)
!7609 = !DILocation(line: 2549, column: 49, scope: !7593)
!7610 = !DILocalVariable(name: "ofs_tot_up", scope: !7593, file: !3, line: 2551, type: !6430)
!7611 = !DILocation(line: 2551, column: 8, scope: !7593)
!7612 = !DILocation(line: 2551, column: 21, scope: !7593)
!7613 = !DILocation(line: 2551, column: 55, scope: !7593)
!7614 = !DILocation(line: 2551, column: 47, scope: !7593)
!7615 = !DILocation(line: 2551, column: 45, scope: !7593)
!7616 = !DILocalVariable(name: "ofs_tot_down", scope: !7593, file: !3, line: 2552, type: !6430)
!7617 = !DILocation(line: 2552, column: 8, scope: !7593)
!7618 = !DILocation(line: 2552, column: 23, scope: !7593)
!7619 = !DILocation(line: 2552, column: 57, scope: !7593)
!7620 = !DILocation(line: 2552, column: 49, scope: !7593)
!7621 = !DILocation(line: 2552, column: 47, scope: !7593)
!7622 = !DILocation(line: 2554, column: 10, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7593, file: !3, line: 2554, column: 3)
!7624 = !DILocation(line: 2554, column: 8, scope: !7623)
!7625 = !DILocation(line: 2554, column: 15, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 2554, column: 3)
!7627 = !DILocation(line: 2554, column: 19, scope: !7626)
!7628 = !DILocation(line: 2554, column: 17, scope: !7626)
!7629 = !DILocation(line: 2554, column: 3, scope: !7623)
!7630 = !DILocation(line: 2555, column: 8, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 2555, column: 8)
!7632 = distinct !DILexicalBlock(scope: !7626, file: !3, line: 2554, column: 35)
!7633 = !DILocation(line: 2555, column: 14, scope: !7631)
!7634 = !DILocation(line: 2555, column: 20, scope: !7631)
!7635 = !DILocation(line: 2555, column: 17, scope: !7631)
!7636 = !DILocation(line: 2555, column: 8, scope: !7632)
!7637 = !DILocation(line: 2556, column: 19, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7631, file: !3, line: 2555, column: 29)
!7639 = !DILocation(line: 2556, column: 5, scope: !7638)
!7640 = !DILocation(line: 2556, column: 14, scope: !7638)
!7641 = !DILocation(line: 2556, column: 17, scope: !7638)
!7642 = !DILocation(line: 2557, column: 21, scope: !7638)
!7643 = !DILocation(line: 2557, column: 5, scope: !7638)
!7644 = !DILocation(line: 2557, column: 16, scope: !7638)
!7645 = !DILocation(line: 2557, column: 19, scope: !7638)
!7646 = !DILocation(line: 2558, column: 4, scope: !7638)
!7647 = !DILocation(line: 2560, column: 18, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7631, file: !3, line: 2559, column: 9)
!7649 = !DILocation(line: 2560, column: 24, scope: !7648)
!7650 = !DILocation(line: 2560, column: 16, scope: !7648)
!7651 = !DILocation(line: 2561, column: 15, scope: !7648)
!7652 = !DILocation(line: 2563, column: 3, scope: !7632)
!7653 = !DILocation(line: 2554, column: 31, scope: !7626)
!7654 = !DILocation(line: 2554, column: 3, scope: !7626)
!7655 = distinct !{!7655, !7629, !7656}
!7656 = !DILocation(line: 2563, column: 3, scope: !7623)
!7657 = !DILocation(line: 2565, column: 16, scope: !7593)
!7658 = !DILocation(line: 2565, column: 14, scope: !7593)
!7659 = !DILocation(line: 2566, column: 13, scope: !7593)
!7660 = !DILocation(line: 2568, column: 12, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7593, file: !3, line: 2568, column: 3)
!7662 = !DILocation(line: 2568, column: 22, scope: !7661)
!7663 = !DILocation(line: 2568, column: 10, scope: !7661)
!7664 = !DILocation(line: 2568, column: 8, scope: !7661)
!7665 = !DILocation(line: 2568, column: 27, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7661, file: !3, line: 2568, column: 3)
!7667 = !DILocation(line: 2568, column: 29, scope: !7666)
!7668 = !DILocation(line: 2568, column: 3, scope: !7661)
!7669 = !DILocation(line: 2569, column: 8, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 2569, column: 8)
!7671 = distinct !DILexicalBlock(scope: !7666, file: !3, line: 2568, column: 40)
!7672 = !DILocation(line: 2569, column: 14, scope: !7670)
!7673 = !DILocation(line: 2569, column: 20, scope: !7670)
!7674 = !DILocation(line: 2569, column: 17, scope: !7670)
!7675 = !DILocation(line: 2569, column: 8, scope: !7671)
!7676 = !DILocation(line: 2570, column: 21, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7670, file: !3, line: 2569, column: 29)
!7678 = !DILocation(line: 2570, column: 5, scope: !7677)
!7679 = !DILocation(line: 2570, column: 16, scope: !7677)
!7680 = !DILocation(line: 2570, column: 19, scope: !7677)
!7681 = !DILocation(line: 2571, column: 23, scope: !7677)
!7682 = !DILocation(line: 2571, column: 5, scope: !7677)
!7683 = !DILocation(line: 2571, column: 18, scope: !7677)
!7684 = !DILocation(line: 2571, column: 21, scope: !7677)
!7685 = !DILocation(line: 2572, column: 4, scope: !7677)
!7686 = !DILocation(line: 2574, column: 18, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7670, file: !3, line: 2573, column: 9)
!7688 = !DILocation(line: 2574, column: 24, scope: !7687)
!7689 = !DILocation(line: 2574, column: 16, scope: !7687)
!7690 = !DILocation(line: 2575, column: 15, scope: !7687)
!7691 = !DILocation(line: 2577, column: 3, scope: !7671)
!7692 = !DILocation(line: 2568, column: 36, scope: !7666)
!7693 = !DILocation(line: 2568, column: 3, scope: !7666)
!7694 = distinct !{!7694, !7668, !7695}
!7695 = !DILocation(line: 2577, column: 3, scope: !7661)
!7696 = !DILocation(line: 2580, column: 10, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7593, file: !3, line: 2580, column: 3)
!7698 = !DILocation(line: 2580, column: 8, scope: !7697)
!7699 = !DILocation(line: 2580, column: 15, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 2580, column: 3)
!7701 = !DILocation(line: 2580, column: 19, scope: !7700)
!7702 = !DILocation(line: 2580, column: 17, scope: !7700)
!7703 = !DILocation(line: 2580, column: 3, scope: !7697)
!7704 = !DILocation(line: 2581, column: 8, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7706, file: !3, line: 2581, column: 8)
!7706 = distinct !DILexicalBlock(scope: !7700, file: !3, line: 2580, column: 35)
!7707 = !DILocation(line: 2581, column: 14, scope: !7705)
!7708 = !DILocation(line: 2581, column: 20, scope: !7705)
!7709 = !DILocation(line: 2581, column: 17, scope: !7705)
!7710 = !DILocation(line: 2581, column: 8, scope: !7706)
!7711 = !DILocation(line: 2582, column: 9, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7713, file: !3, line: 2582, column: 9)
!7713 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 2581, column: 29)
!7714 = !DILocation(line: 2582, column: 18, scope: !7712)
!7715 = !DILocation(line: 2582, column: 24, scope: !7712)
!7716 = !DILocation(line: 2582, column: 21, scope: !7712)
!7717 = !DILocation(line: 2582, column: 32, scope: !7712)
!7718 = !DILocation(line: 2582, column: 35, scope: !7712)
!7719 = !DILocation(line: 2582, column: 46, scope: !7712)
!7720 = !DILocation(line: 2582, column: 52, scope: !7712)
!7721 = !DILocation(line: 2582, column: 49, scope: !7712)
!7722 = !DILocation(line: 2582, column: 9, scope: !7713)
!7723 = !DILocation(line: 2583, column: 19, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7712, file: !3, line: 2582, column: 61)
!7725 = !DILocation(line: 2583, column: 28, scope: !7724)
!7726 = !DILocation(line: 2583, column: 42, scope: !7724)
!7727 = !DILocation(line: 2583, column: 55, scope: !7724)
!7728 = !DILocation(line: 2583, column: 35, scope: !7724)
!7729 = !DILocation(line: 2583, column: 33, scope: !7724)
!7730 = !DILocation(line: 2584, column: 19, scope: !7724)
!7731 = !DILocation(line: 2584, column: 30, scope: !7724)
!7732 = !DILocation(line: 2584, column: 42, scope: !7724)
!7733 = !DILocation(line: 2584, column: 53, scope: !7724)
!7734 = !DILocation(line: 2584, column: 35, scope: !7724)
!7735 = !DILocation(line: 2584, column: 33, scope: !7724)
!7736 = !DILocation(line: 2583, column: 59, scope: !7724)
!7737 = !DILocation(line: 2584, column: 68, scope: !7724)
!7738 = !DILocation(line: 2584, column: 81, scope: !7724)
!7739 = !DILocation(line: 2584, column: 86, scope: !7724)
!7740 = !DILocation(line: 2584, column: 97, scope: !7724)
!7741 = !DILocation(line: 2584, column: 84, scope: !7724)
!7742 = !DILocation(line: 2584, column: 60, scope: !7724)
!7743 = !DILocation(line: 2584, column: 58, scope: !7724)
!7744 = !DILocation(line: 2583, column: 6, scope: !7724)
!7745 = !DILocation(line: 2583, column: 12, scope: !7724)
!7746 = !DILocation(line: 2583, column: 15, scope: !7724)
!7747 = !DILocation(line: 2585, column: 5, scope: !7724)
!7748 = !DILocation(line: 2586, column: 14, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7712, file: !3, line: 2586, column: 14)
!7750 = !DILocation(line: 2586, column: 23, scope: !7749)
!7751 = !DILocation(line: 2586, column: 29, scope: !7749)
!7752 = !DILocation(line: 2586, column: 26, scope: !7749)
!7753 = !DILocation(line: 2586, column: 14, scope: !7712)
!7754 = !DILocation(line: 2587, column: 17, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 2586, column: 38)
!7756 = !DILocation(line: 2587, column: 26, scope: !7755)
!7757 = !DILocation(line: 2587, column: 6, scope: !7755)
!7758 = !DILocation(line: 2587, column: 12, scope: !7755)
!7759 = !DILocation(line: 2587, column: 15, scope: !7755)
!7760 = !DILocation(line: 2588, column: 5, scope: !7755)
!7761 = !DILocation(line: 2589, column: 14, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 2589, column: 14)
!7763 = !DILocation(line: 2589, column: 25, scope: !7762)
!7764 = !DILocation(line: 2589, column: 31, scope: !7762)
!7765 = !DILocation(line: 2589, column: 28, scope: !7762)
!7766 = !DILocation(line: 2589, column: 14, scope: !7749)
!7767 = !DILocation(line: 2590, column: 17, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7762, file: !3, line: 2589, column: 40)
!7769 = !DILocation(line: 2590, column: 28, scope: !7768)
!7770 = !DILocation(line: 2590, column: 6, scope: !7768)
!7771 = !DILocation(line: 2590, column: 12, scope: !7768)
!7772 = !DILocation(line: 2590, column: 15, scope: !7768)
!7773 = !DILocation(line: 2591, column: 5, scope: !7768)
!7774 = !DILocation(line: 2592, column: 4, scope: !7713)
!7775 = !DILocation(line: 2593, column: 3, scope: !7706)
!7776 = !DILocation(line: 2580, column: 31, scope: !7700)
!7777 = !DILocation(line: 2580, column: 3, scope: !7700)
!7778 = distinct !{!7778, !7703, !7779}
!7779 = !DILocation(line: 2593, column: 3, scope: !7697)
!7780 = !DILocation(line: 2595, column: 3, scope: !7593)
!7781 = !DILocation(line: 2595, column: 13, scope: !7593)
!7782 = !DILocation(line: 2596, column: 3, scope: !7593)
!7783 = !DILocation(line: 2596, column: 13, scope: !7593)
!7784 = !DILocation(line: 2598, column: 3, scope: !7593)
!7785 = !DILocation(line: 2598, column: 13, scope: !7593)
!7786 = !DILocation(line: 2599, column: 3, scope: !7593)
!7787 = !DILocation(line: 2599, column: 13, scope: !7593)
!7788 = !DILocation(line: 2602, column: 2, scope: !7542)
!7789 = !DILocation(line: 2603, column: 1, scope: !7542)
!7790 = distinct !DISubprogram(name: "interp_weights_poly_v3", scope: !3, file: !3, line: 2644, type: !7791, scopeLine: 2645, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!7791 = !DISubroutineType(types: !7792)
!7792 = !{null, !10, !6633, !1841, !7}
!7793 = !DILocalVariable(name: "w", arg: 1, scope: !7790, file: !3, line: 2644, type: !10)
!7794 = !DILocation(line: 2644, column: 36, scope: !7790)
!7795 = !DILocalVariable(name: "v", arg: 2, scope: !7790, file: !3, line: 2644, type: !6633)
!7796 = !DILocation(line: 2644, column: 45, scope: !7790)
!7797 = !DILocalVariable(name: "n", arg: 3, scope: !7790, file: !3, line: 2644, type: !1841)
!7798 = !DILocation(line: 2644, column: 63, scope: !7790)
!7799 = !DILocalVariable(name: "co", arg: 4, scope: !7790, file: !3, line: 2644, type: !7)
!7800 = !DILocation(line: 2644, column: 78, scope: !7790)
!7801 = !DILocalVariable(name: "eps", scope: !7790, file: !3, line: 2646, type: !8)
!7802 = !DILocation(line: 2646, column: 14, scope: !7790)
!7803 = !DILocalVariable(name: "eps_sq", scope: !7790, file: !3, line: 2647, type: !8)
!7804 = !DILocation(line: 2647, column: 14, scope: !7790)
!7805 = !DILocalVariable(name: "v_curr", scope: !7790, file: !3, line: 2648, type: !7)
!7806 = !DILocation(line: 2648, column: 15, scope: !7790)
!7807 = !DILocalVariable(name: "v_next", scope: !7790, file: !3, line: 2648, type: !7)
!7808 = !DILocation(line: 2648, column: 24, scope: !7790)
!7809 = !DILocalVariable(name: "ht_prev", scope: !7790, file: !3, line: 2649, type: !9)
!7810 = !DILocation(line: 2649, column: 8, scope: !7790)
!7811 = !DILocalVariable(name: "ht", scope: !7790, file: !3, line: 2649, type: !9)
!7812 = !DILocation(line: 2649, column: 17, scope: !7790)
!7813 = !DILocalVariable(name: "totweight", scope: !7790, file: !3, line: 2650, type: !9)
!7814 = !DILocation(line: 2650, column: 8, scope: !7790)
!7815 = !DILocalVariable(name: "i", scope: !7790, file: !3, line: 2651, type: !17)
!7816 = !DILocation(line: 2651, column: 6, scope: !7790)
!7817 = !DILocalVariable(name: "vert_interp", scope: !7790, file: !3, line: 2652, type: !6)
!7818 = !DILocation(line: 2652, column: 7, scope: !7790)
!7819 = !DILocalVariable(name: "edge_interp", scope: !7790, file: !3, line: 2653, type: !6)
!7820 = !DILocation(line: 2653, column: 7, scope: !7790)
!7821 = !DILocation(line: 2655, column: 11, scope: !7790)
!7822 = !DILocation(line: 2655, column: 9, scope: !7790)
!7823 = !DILocation(line: 2656, column: 11, scope: !7790)
!7824 = !DILocation(line: 2656, column: 9, scope: !7790)
!7825 = !DILocation(line: 2658, column: 35, scope: !7790)
!7826 = !DILocation(line: 2658, column: 39, scope: !7790)
!7827 = !DILocation(line: 2658, column: 41, scope: !7790)
!7828 = !DILocation(line: 2658, column: 43, scope: !7790)
!7829 = !DILocation(line: 2658, column: 49, scope: !7790)
!7830 = !DILocation(line: 2658, column: 12, scope: !7790)
!7831 = !DILocation(line: 2658, column: 10, scope: !7790)
!7832 = !DILocation(line: 2660, column: 2, scope: !7790)
!7833 = !DILocation(line: 2660, column: 9, scope: !7790)
!7834 = !DILocation(line: 2660, column: 13, scope: !7790)
!7835 = !DILocation(line: 2660, column: 11, scope: !7790)
!7836 = !DILocalVariable(name: "len_sq", scope: !7837, file: !3, line: 2661, type: !8)
!7837 = distinct !DILexicalBlock(scope: !7790, file: !3, line: 2660, column: 16)
!7838 = !DILocation(line: 2661, column: 15, scope: !7837)
!7839 = !DILocation(line: 2661, column: 41, scope: !7837)
!7840 = !DILocation(line: 2661, column: 45, scope: !7837)
!7841 = !DILocation(line: 2661, column: 24, scope: !7837)
!7842 = !DILocation(line: 2665, column: 7, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7837, file: !3, line: 2665, column: 7)
!7844 = !DILocation(line: 2665, column: 14, scope: !7843)
!7845 = !DILocation(line: 2665, column: 7, scope: !7837)
!7846 = !DILocation(line: 2666, column: 16, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7843, file: !3, line: 2665, column: 24)
!7848 = !DILocation(line: 2667, column: 4, scope: !7847)
!7849 = !DILocation(line: 2669, column: 44, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7843, file: !3, line: 2669, column: 12)
!7851 = !DILocation(line: 2669, column: 48, scope: !7850)
!7852 = !DILocation(line: 2669, column: 56, scope: !7850)
!7853 = !DILocation(line: 2669, column: 12, scope: !7850)
!7854 = !DILocation(line: 2669, column: 64, scope: !7850)
!7855 = !DILocation(line: 2669, column: 12, scope: !7843)
!7856 = !DILocation(line: 2670, column: 16, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7850, file: !3, line: 2669, column: 74)
!7858 = !DILocation(line: 2671, column: 4, scope: !7857)
!7859 = !DILocation(line: 2674, column: 31, scope: !7837)
!7860 = !DILocation(line: 2674, column: 35, scope: !7837)
!7861 = !DILocation(line: 2674, column: 43, scope: !7837)
!7862 = !DILocation(line: 2674, column: 8, scope: !7837)
!7863 = !DILocation(line: 2674, column: 6, scope: !7837)
!7864 = !DILocation(line: 2675, column: 11, scope: !7837)
!7865 = !DILocation(line: 2675, column: 21, scope: !7837)
!7866 = !DILocation(line: 2675, column: 19, scope: !7837)
!7867 = !DILocation(line: 2675, column: 33, scope: !7837)
!7868 = !DILocation(line: 2675, column: 27, scope: !7837)
!7869 = !DILocation(line: 2675, column: 25, scope: !7837)
!7870 = !DILocation(line: 2675, column: 3, scope: !7837)
!7871 = !DILocation(line: 2675, column: 5, scope: !7837)
!7872 = !DILocation(line: 2675, column: 8, scope: !7837)
!7873 = !DILocation(line: 2676, column: 16, scope: !7837)
!7874 = !DILocation(line: 2676, column: 18, scope: !7837)
!7875 = !DILocation(line: 2676, column: 13, scope: !7837)
!7876 = !DILocation(line: 2679, column: 4, scope: !7837)
!7877 = !DILocation(line: 2680, column: 12, scope: !7837)
!7878 = !DILocation(line: 2680, column: 10, scope: !7837)
!7879 = !DILocation(line: 2681, column: 12, scope: !7837)
!7880 = !DILocation(line: 2681, column: 15, scope: !7837)
!7881 = !DILocation(line: 2681, column: 17, scope: !7837)
!7882 = !DILocation(line: 2681, column: 24, scope: !7837)
!7883 = !DILocation(line: 2681, column: 22, scope: !7837)
!7884 = !DILocation(line: 2681, column: 10, scope: !7837)
!7885 = !DILocation(line: 2683, column: 13, scope: !7837)
!7886 = !DILocation(line: 2683, column: 11, scope: !7837)
!7887 = distinct !{!7887, !7832, !7888}
!7888 = !DILocation(line: 2684, column: 2, scope: !7790)
!7889 = !DILocation(line: 2686, column: 6, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7790, file: !3, line: 2686, column: 6)
!7891 = !DILocation(line: 2686, column: 6, scope: !7790)
!7892 = !DILocalVariable(name: "i_curr", scope: !7893, file: !3, line: 2687, type: !1841)
!7893 = distinct !DILexicalBlock(scope: !7890, file: !3, line: 2686, column: 19)
!7894 = !DILocation(line: 2687, column: 13, scope: !7893)
!7895 = !DILocation(line: 2687, column: 22, scope: !7893)
!7896 = !DILocation(line: 2688, column: 10, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7893, file: !3, line: 2688, column: 3)
!7898 = !DILocation(line: 2688, column: 8, scope: !7897)
!7899 = !DILocation(line: 2688, column: 15, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7897, file: !3, line: 2688, column: 3)
!7901 = !DILocation(line: 2688, column: 19, scope: !7900)
!7902 = !DILocation(line: 2688, column: 17, scope: !7900)
!7903 = !DILocation(line: 2688, column: 3, scope: !7897)
!7904 = !DILocation(line: 2689, column: 4, scope: !7900)
!7905 = !DILocation(line: 2689, column: 6, scope: !7900)
!7906 = !DILocation(line: 2689, column: 9, scope: !7900)
!7907 = !DILocation(line: 2688, column: 23, scope: !7900)
!7908 = !DILocation(line: 2688, column: 3, scope: !7900)
!7909 = distinct !{!7909, !7903, !7910}
!7910 = !DILocation(line: 2689, column: 11, scope: !7897)
!7911 = !DILocation(line: 2690, column: 3, scope: !7893)
!7912 = !DILocation(line: 2690, column: 5, scope: !7893)
!7913 = !DILocation(line: 2690, column: 13, scope: !7893)
!7914 = !DILocation(line: 2691, column: 2, scope: !7893)
!7915 = !DILocation(line: 2692, column: 11, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7890, file: !3, line: 2692, column: 11)
!7917 = !DILocation(line: 2692, column: 11, scope: !7890)
!7918 = !DILocalVariable(name: "i_curr", scope: !7919, file: !3, line: 2693, type: !1841)
!7919 = distinct !DILexicalBlock(scope: !7916, file: !3, line: 2692, column: 24)
!7920 = !DILocation(line: 2693, column: 13, scope: !7919)
!7921 = !DILocation(line: 2693, column: 22, scope: !7919)
!7922 = !DILocalVariable(name: "len_curr", scope: !7919, file: !3, line: 2694, type: !9)
!7923 = !DILocation(line: 2694, column: 9, scope: !7919)
!7924 = !DILocation(line: 2694, column: 29, scope: !7919)
!7925 = !DILocation(line: 2694, column: 33, scope: !7919)
!7926 = !DILocation(line: 2694, column: 20, scope: !7919)
!7927 = !DILocalVariable(name: "len_next", scope: !7919, file: !3, line: 2695, type: !9)
!7928 = !DILocation(line: 2695, column: 9, scope: !7919)
!7929 = !DILocation(line: 2695, column: 29, scope: !7919)
!7930 = !DILocation(line: 2695, column: 33, scope: !7919)
!7931 = !DILocation(line: 2695, column: 20, scope: !7919)
!7932 = !DILocalVariable(name: "edge_len", scope: !7919, file: !3, line: 2696, type: !9)
!7933 = !DILocation(line: 2696, column: 9, scope: !7919)
!7934 = !DILocation(line: 2696, column: 20, scope: !7919)
!7935 = !DILocation(line: 2696, column: 31, scope: !7919)
!7936 = !DILocation(line: 2696, column: 29, scope: !7919)
!7937 = !DILocation(line: 2697, column: 10, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7919, file: !3, line: 2697, column: 3)
!7939 = !DILocation(line: 2697, column: 8, scope: !7938)
!7940 = !DILocation(line: 2697, column: 15, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7938, file: !3, line: 2697, column: 3)
!7942 = !DILocation(line: 2697, column: 19, scope: !7941)
!7943 = !DILocation(line: 2697, column: 17, scope: !7941)
!7944 = !DILocation(line: 2697, column: 3, scope: !7938)
!7945 = !DILocation(line: 2698, column: 4, scope: !7941)
!7946 = !DILocation(line: 2698, column: 6, scope: !7941)
!7947 = !DILocation(line: 2698, column: 9, scope: !7941)
!7948 = !DILocation(line: 2697, column: 23, scope: !7941)
!7949 = !DILocation(line: 2697, column: 3, scope: !7941)
!7950 = distinct !{!7950, !7944, !7951}
!7951 = !DILocation(line: 2698, column: 11, scope: !7938)
!7952 = !DILocation(line: 2700, column: 15, scope: !7919)
!7953 = !DILocation(line: 2700, column: 26, scope: !7919)
!7954 = !DILocation(line: 2700, column: 24, scope: !7919)
!7955 = !DILocation(line: 2700, column: 3, scope: !7919)
!7956 = !DILocation(line: 2700, column: 5, scope: !7919)
!7957 = !DILocation(line: 2700, column: 13, scope: !7919)
!7958 = !DILocation(line: 2701, column: 25, scope: !7919)
!7959 = !DILocation(line: 2701, column: 36, scope: !7919)
!7960 = !DILocation(line: 2701, column: 34, scope: !7919)
!7961 = !DILocation(line: 2701, column: 3, scope: !7919)
!7962 = !DILocation(line: 2701, column: 6, scope: !7919)
!7963 = !DILocation(line: 2701, column: 13, scope: !7919)
!7964 = !DILocation(line: 2701, column: 20, scope: !7919)
!7965 = !DILocation(line: 2701, column: 18, scope: !7919)
!7966 = !DILocation(line: 2701, column: 23, scope: !7919)
!7967 = !DILocation(line: 2702, column: 2, scope: !7919)
!7968 = !DILocation(line: 2704, column: 7, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7970, file: !3, line: 2704, column: 7)
!7970 = distinct !DILexicalBlock(scope: !7916, file: !3, line: 2703, column: 7)
!7971 = !DILocation(line: 2704, column: 17, scope: !7969)
!7972 = !DILocation(line: 2704, column: 7, scope: !7970)
!7973 = !DILocation(line: 2705, column: 11, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7975, file: !3, line: 2705, column: 4)
!7975 = distinct !DILexicalBlock(scope: !7969, file: !3, line: 2704, column: 26)
!7976 = !DILocation(line: 2705, column: 9, scope: !7974)
!7977 = !DILocation(line: 2705, column: 16, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 2705, column: 4)
!7979 = !DILocation(line: 2705, column: 20, scope: !7978)
!7980 = !DILocation(line: 2705, column: 18, scope: !7978)
!7981 = !DILocation(line: 2705, column: 4, scope: !7974)
!7982 = !DILocation(line: 2706, column: 13, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7978, file: !3, line: 2705, column: 28)
!7984 = !DILocation(line: 2706, column: 5, scope: !7983)
!7985 = !DILocation(line: 2706, column: 7, scope: !7983)
!7986 = !DILocation(line: 2706, column: 10, scope: !7983)
!7987 = !DILocation(line: 2707, column: 4, scope: !7983)
!7988 = !DILocation(line: 2705, column: 24, scope: !7978)
!7989 = !DILocation(line: 2705, column: 4, scope: !7978)
!7990 = distinct !{!7990, !7981, !7991}
!7991 = !DILocation(line: 2707, column: 4, scope: !7974)
!7992 = !DILocation(line: 2708, column: 3, scope: !7975)
!7993 = !DILocation(line: 2710, column: 1, scope: !7790)
!7994 = distinct !DISubprogram(name: "mean_value_half_tan_v3", scope: !3, file: !3, line: 2607, type: !489, scopeLine: 2608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!7995 = !DILocalVariable(name: "v1", arg: 1, scope: !7994, file: !3, line: 2607, type: !7)
!7996 = !DILocation(line: 2607, column: 49, scope: !7994)
!7997 = !DILocalVariable(name: "v2", arg: 2, scope: !7994, file: !3, line: 2607, type: !7)
!7998 = !DILocation(line: 2607, column: 68, scope: !7994)
!7999 = !DILocalVariable(name: "v3", arg: 3, scope: !7994, file: !3, line: 2607, type: !7)
!8000 = !DILocation(line: 2607, column: 87, scope: !7994)
!8001 = !DILocalVariable(name: "d2", scope: !7994, file: !3, line: 2609, type: !117)
!8002 = !DILocation(line: 2609, column: 8, scope: !7994)
!8003 = !DILocalVariable(name: "d3", scope: !7994, file: !3, line: 2609, type: !117)
!8004 = !DILocation(line: 2609, column: 15, scope: !7994)
!8005 = !DILocalVariable(name: "cross", scope: !7994, file: !3, line: 2609, type: !117)
!8006 = !DILocation(line: 2609, column: 22, scope: !7994)
!8007 = !DILocalVariable(name: "area", scope: !7994, file: !3, line: 2609, type: !9)
!8008 = !DILocation(line: 2609, column: 32, scope: !7994)
!8009 = !DILocation(line: 2611, column: 14, scope: !7994)
!8010 = !DILocation(line: 2611, column: 18, scope: !7994)
!8011 = !DILocation(line: 2611, column: 22, scope: !7994)
!8012 = !DILocation(line: 2611, column: 2, scope: !7994)
!8013 = !DILocation(line: 2612, column: 14, scope: !7994)
!8014 = !DILocation(line: 2612, column: 18, scope: !7994)
!8015 = !DILocation(line: 2612, column: 22, scope: !7994)
!8016 = !DILocation(line: 2612, column: 2, scope: !7994)
!8017 = !DILocation(line: 2613, column: 16, scope: !7994)
!8018 = !DILocation(line: 2613, column: 23, scope: !7994)
!8019 = !DILocation(line: 2613, column: 27, scope: !7994)
!8020 = !DILocation(line: 2613, column: 2, scope: !7994)
!8021 = !DILocation(line: 2615, column: 16, scope: !7994)
!8022 = !DILocation(line: 2615, column: 9, scope: !7994)
!8023 = !DILocation(line: 2615, column: 7, scope: !7994)
!8024 = !DILocation(line: 2616, column: 6, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !7994, file: !3, line: 2616, column: 6)
!8026 = !DILocation(line: 2616, column: 6, scope: !7994)
!8027 = !DILocalVariable(name: "dot", scope: !8028, file: !3, line: 2617, type: !8)
!8028 = distinct !DILexicalBlock(scope: !8025, file: !3, line: 2616, column: 28)
!8029 = !DILocation(line: 2617, column: 15, scope: !8028)
!8030 = !DILocation(line: 2617, column: 30, scope: !8028)
!8031 = !DILocation(line: 2617, column: 34, scope: !8028)
!8032 = !DILocation(line: 2617, column: 21, scope: !8028)
!8033 = !DILocalVariable(name: "len", scope: !8028, file: !3, line: 2618, type: !8)
!8034 = !DILocation(line: 2618, column: 15, scope: !8028)
!8035 = !DILocation(line: 2618, column: 28, scope: !8028)
!8036 = !DILocation(line: 2618, column: 21, scope: !8028)
!8037 = !DILocation(line: 2618, column: 41, scope: !8028)
!8038 = !DILocation(line: 2618, column: 34, scope: !8028)
!8039 = !DILocation(line: 2618, column: 32, scope: !8028)
!8040 = !DILocation(line: 2619, column: 11, scope: !8028)
!8041 = !DILocation(line: 2619, column: 17, scope: !8028)
!8042 = !DILocation(line: 2619, column: 15, scope: !8028)
!8043 = !DILocation(line: 2619, column: 24, scope: !8028)
!8044 = !DILocation(line: 2619, column: 22, scope: !8028)
!8045 = !DILocation(line: 2619, column: 3, scope: !8028)
!8046 = !DILocation(line: 2622, column: 3, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8025, file: !3, line: 2621, column: 7)
!8048 = !DILocation(line: 2624, column: 1, scope: !7994)
!8049 = distinct !DISubprogram(name: "interp_weights_poly_v2", scope: !3, file: !3, line: 2713, type: !8050, scopeLine: 2714, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!8050 = !DISubroutineType(types: !8051)
!8051 = !{null, !10, !8052, !1841, !7}
!8052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!8053 = !DILocalVariable(name: "w", arg: 1, scope: !8049, file: !3, line: 2713, type: !10)
!8054 = !DILocation(line: 2713, column: 36, scope: !8049)
!8055 = !DILocalVariable(name: "v", arg: 2, scope: !8049, file: !3, line: 2713, type: !8052)
!8056 = !DILocation(line: 2713, column: 45, scope: !8049)
!8057 = !DILocalVariable(name: "n", arg: 3, scope: !8049, file: !3, line: 2713, type: !1841)
!8058 = !DILocation(line: 2713, column: 63, scope: !8049)
!8059 = !DILocalVariable(name: "co", arg: 4, scope: !8049, file: !3, line: 2713, type: !7)
!8060 = !DILocation(line: 2713, column: 78, scope: !8049)
!8061 = !DILocalVariable(name: "eps", scope: !8049, file: !3, line: 2715, type: !8)
!8062 = !DILocation(line: 2715, column: 14, scope: !8049)
!8063 = !DILocalVariable(name: "eps_sq", scope: !8049, file: !3, line: 2716, type: !8)
!8064 = !DILocation(line: 2716, column: 14, scope: !8049)
!8065 = !DILocalVariable(name: "v_curr", scope: !8049, file: !3, line: 2717, type: !7)
!8066 = !DILocation(line: 2717, column: 15, scope: !8049)
!8067 = !DILocalVariable(name: "v_next", scope: !8049, file: !3, line: 2717, type: !7)
!8068 = !DILocation(line: 2717, column: 24, scope: !8049)
!8069 = !DILocalVariable(name: "ht_prev", scope: !8049, file: !3, line: 2718, type: !9)
!8070 = !DILocation(line: 2718, column: 8, scope: !8049)
!8071 = !DILocalVariable(name: "ht", scope: !8049, file: !3, line: 2718, type: !9)
!8072 = !DILocation(line: 2718, column: 17, scope: !8049)
!8073 = !DILocalVariable(name: "totweight", scope: !8049, file: !3, line: 2719, type: !9)
!8074 = !DILocation(line: 2719, column: 8, scope: !8049)
!8075 = !DILocalVariable(name: "i", scope: !8049, file: !3, line: 2720, type: !17)
!8076 = !DILocation(line: 2720, column: 6, scope: !8049)
!8077 = !DILocalVariable(name: "vert_interp", scope: !8049, file: !3, line: 2721, type: !6)
!8078 = !DILocation(line: 2721, column: 7, scope: !8049)
!8079 = !DILocalVariable(name: "edge_interp", scope: !8049, file: !3, line: 2722, type: !6)
!8080 = !DILocation(line: 2722, column: 7, scope: !8049)
!8081 = !DILocation(line: 2724, column: 11, scope: !8049)
!8082 = !DILocation(line: 2724, column: 9, scope: !8049)
!8083 = !DILocation(line: 2725, column: 11, scope: !8049)
!8084 = !DILocation(line: 2725, column: 9, scope: !8049)
!8085 = !DILocation(line: 2727, column: 35, scope: !8049)
!8086 = !DILocation(line: 2727, column: 39, scope: !8049)
!8087 = !DILocation(line: 2727, column: 41, scope: !8049)
!8088 = !DILocation(line: 2727, column: 43, scope: !8049)
!8089 = !DILocation(line: 2727, column: 49, scope: !8049)
!8090 = !DILocation(line: 2727, column: 12, scope: !8049)
!8091 = !DILocation(line: 2727, column: 10, scope: !8049)
!8092 = !DILocation(line: 2729, column: 2, scope: !8049)
!8093 = !DILocation(line: 2729, column: 9, scope: !8049)
!8094 = !DILocation(line: 2729, column: 13, scope: !8049)
!8095 = !DILocation(line: 2729, column: 11, scope: !8049)
!8096 = !DILocalVariable(name: "len_sq", scope: !8097, file: !3, line: 2730, type: !8)
!8097 = distinct !DILexicalBlock(scope: !8049, file: !3, line: 2729, column: 16)
!8098 = !DILocation(line: 2730, column: 15, scope: !8097)
!8099 = !DILocation(line: 2730, column: 41, scope: !8097)
!8100 = !DILocation(line: 2730, column: 45, scope: !8097)
!8101 = !DILocation(line: 2730, column: 24, scope: !8097)
!8102 = !DILocation(line: 2734, column: 7, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8097, file: !3, line: 2734, column: 7)
!8104 = !DILocation(line: 2734, column: 14, scope: !8103)
!8105 = !DILocation(line: 2734, column: 7, scope: !8097)
!8106 = !DILocation(line: 2735, column: 16, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 2734, column: 24)
!8108 = !DILocation(line: 2736, column: 4, scope: !8107)
!8109 = !DILocation(line: 2738, column: 44, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 2738, column: 12)
!8111 = !DILocation(line: 2738, column: 48, scope: !8110)
!8112 = !DILocation(line: 2738, column: 56, scope: !8110)
!8113 = !DILocation(line: 2738, column: 12, scope: !8110)
!8114 = !DILocation(line: 2738, column: 64, scope: !8110)
!8115 = !DILocation(line: 2738, column: 12, scope: !8103)
!8116 = !DILocation(line: 2739, column: 16, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8110, file: !3, line: 2738, column: 74)
!8118 = !DILocation(line: 2740, column: 4, scope: !8117)
!8119 = !DILocation(line: 2743, column: 31, scope: !8097)
!8120 = !DILocation(line: 2743, column: 35, scope: !8097)
!8121 = !DILocation(line: 2743, column: 43, scope: !8097)
!8122 = !DILocation(line: 2743, column: 8, scope: !8097)
!8123 = !DILocation(line: 2743, column: 6, scope: !8097)
!8124 = !DILocation(line: 2744, column: 11, scope: !8097)
!8125 = !DILocation(line: 2744, column: 21, scope: !8097)
!8126 = !DILocation(line: 2744, column: 19, scope: !8097)
!8127 = !DILocation(line: 2744, column: 33, scope: !8097)
!8128 = !DILocation(line: 2744, column: 27, scope: !8097)
!8129 = !DILocation(line: 2744, column: 25, scope: !8097)
!8130 = !DILocation(line: 2744, column: 3, scope: !8097)
!8131 = !DILocation(line: 2744, column: 5, scope: !8097)
!8132 = !DILocation(line: 2744, column: 8, scope: !8097)
!8133 = !DILocation(line: 2745, column: 16, scope: !8097)
!8134 = !DILocation(line: 2745, column: 18, scope: !8097)
!8135 = !DILocation(line: 2745, column: 13, scope: !8097)
!8136 = !DILocation(line: 2748, column: 4, scope: !8097)
!8137 = !DILocation(line: 2749, column: 12, scope: !8097)
!8138 = !DILocation(line: 2749, column: 10, scope: !8097)
!8139 = !DILocation(line: 2750, column: 12, scope: !8097)
!8140 = !DILocation(line: 2750, column: 15, scope: !8097)
!8141 = !DILocation(line: 2750, column: 17, scope: !8097)
!8142 = !DILocation(line: 2750, column: 24, scope: !8097)
!8143 = !DILocation(line: 2750, column: 22, scope: !8097)
!8144 = !DILocation(line: 2750, column: 10, scope: !8097)
!8145 = !DILocation(line: 2752, column: 13, scope: !8097)
!8146 = !DILocation(line: 2752, column: 11, scope: !8097)
!8147 = distinct !{!8147, !8092, !8148}
!8148 = !DILocation(line: 2753, column: 2, scope: !8049)
!8149 = !DILocation(line: 2755, column: 6, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8049, file: !3, line: 2755, column: 6)
!8151 = !DILocation(line: 2755, column: 6, scope: !8049)
!8152 = !DILocalVariable(name: "i_curr", scope: !8153, file: !3, line: 2756, type: !1841)
!8153 = distinct !DILexicalBlock(scope: !8150, file: !3, line: 2755, column: 19)
!8154 = !DILocation(line: 2756, column: 13, scope: !8153)
!8155 = !DILocation(line: 2756, column: 22, scope: !8153)
!8156 = !DILocation(line: 2757, column: 10, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8153, file: !3, line: 2757, column: 3)
!8158 = !DILocation(line: 2757, column: 8, scope: !8157)
!8159 = !DILocation(line: 2757, column: 15, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 2757, column: 3)
!8161 = !DILocation(line: 2757, column: 19, scope: !8160)
!8162 = !DILocation(line: 2757, column: 17, scope: !8160)
!8163 = !DILocation(line: 2757, column: 3, scope: !8157)
!8164 = !DILocation(line: 2758, column: 4, scope: !8160)
!8165 = !DILocation(line: 2758, column: 6, scope: !8160)
!8166 = !DILocation(line: 2758, column: 9, scope: !8160)
!8167 = !DILocation(line: 2757, column: 23, scope: !8160)
!8168 = !DILocation(line: 2757, column: 3, scope: !8160)
!8169 = distinct !{!8169, !8163, !8170}
!8170 = !DILocation(line: 2758, column: 11, scope: !8157)
!8171 = !DILocation(line: 2759, column: 3, scope: !8153)
!8172 = !DILocation(line: 2759, column: 5, scope: !8153)
!8173 = !DILocation(line: 2759, column: 13, scope: !8153)
!8174 = !DILocation(line: 2760, column: 2, scope: !8153)
!8175 = !DILocation(line: 2761, column: 11, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8150, file: !3, line: 2761, column: 11)
!8177 = !DILocation(line: 2761, column: 11, scope: !8150)
!8178 = !DILocalVariable(name: "i_curr", scope: !8179, file: !3, line: 2762, type: !1841)
!8179 = distinct !DILexicalBlock(scope: !8176, file: !3, line: 2761, column: 24)
!8180 = !DILocation(line: 2762, column: 13, scope: !8179)
!8181 = !DILocation(line: 2762, column: 22, scope: !8179)
!8182 = !DILocalVariable(name: "len_curr", scope: !8179, file: !3, line: 2763, type: !9)
!8183 = !DILocation(line: 2763, column: 9, scope: !8179)
!8184 = !DILocation(line: 2763, column: 29, scope: !8179)
!8185 = !DILocation(line: 2763, column: 33, scope: !8179)
!8186 = !DILocation(line: 2763, column: 20, scope: !8179)
!8187 = !DILocalVariable(name: "len_next", scope: !8179, file: !3, line: 2764, type: !9)
!8188 = !DILocation(line: 2764, column: 9, scope: !8179)
!8189 = !DILocation(line: 2764, column: 29, scope: !8179)
!8190 = !DILocation(line: 2764, column: 33, scope: !8179)
!8191 = !DILocation(line: 2764, column: 20, scope: !8179)
!8192 = !DILocalVariable(name: "edge_len", scope: !8179, file: !3, line: 2765, type: !9)
!8193 = !DILocation(line: 2765, column: 9, scope: !8179)
!8194 = !DILocation(line: 2765, column: 20, scope: !8179)
!8195 = !DILocation(line: 2765, column: 31, scope: !8179)
!8196 = !DILocation(line: 2765, column: 29, scope: !8179)
!8197 = !DILocation(line: 2766, column: 10, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8179, file: !3, line: 2766, column: 3)
!8199 = !DILocation(line: 2766, column: 8, scope: !8198)
!8200 = !DILocation(line: 2766, column: 15, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8198, file: !3, line: 2766, column: 3)
!8202 = !DILocation(line: 2766, column: 19, scope: !8201)
!8203 = !DILocation(line: 2766, column: 17, scope: !8201)
!8204 = !DILocation(line: 2766, column: 3, scope: !8198)
!8205 = !DILocation(line: 2767, column: 4, scope: !8201)
!8206 = !DILocation(line: 2767, column: 6, scope: !8201)
!8207 = !DILocation(line: 2767, column: 9, scope: !8201)
!8208 = !DILocation(line: 2766, column: 23, scope: !8201)
!8209 = !DILocation(line: 2766, column: 3, scope: !8201)
!8210 = distinct !{!8210, !8204, !8211}
!8211 = !DILocation(line: 2767, column: 11, scope: !8198)
!8212 = !DILocation(line: 2769, column: 15, scope: !8179)
!8213 = !DILocation(line: 2769, column: 26, scope: !8179)
!8214 = !DILocation(line: 2769, column: 24, scope: !8179)
!8215 = !DILocation(line: 2769, column: 3, scope: !8179)
!8216 = !DILocation(line: 2769, column: 5, scope: !8179)
!8217 = !DILocation(line: 2769, column: 13, scope: !8179)
!8218 = !DILocation(line: 2770, column: 25, scope: !8179)
!8219 = !DILocation(line: 2770, column: 36, scope: !8179)
!8220 = !DILocation(line: 2770, column: 34, scope: !8179)
!8221 = !DILocation(line: 2770, column: 3, scope: !8179)
!8222 = !DILocation(line: 2770, column: 6, scope: !8179)
!8223 = !DILocation(line: 2770, column: 13, scope: !8179)
!8224 = !DILocation(line: 2770, column: 20, scope: !8179)
!8225 = !DILocation(line: 2770, column: 18, scope: !8179)
!8226 = !DILocation(line: 2770, column: 23, scope: !8179)
!8227 = !DILocation(line: 2771, column: 2, scope: !8179)
!8228 = !DILocation(line: 2773, column: 7, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8230, file: !3, line: 2773, column: 7)
!8230 = distinct !DILexicalBlock(scope: !8176, file: !3, line: 2772, column: 7)
!8231 = !DILocation(line: 2773, column: 17, scope: !8229)
!8232 = !DILocation(line: 2773, column: 7, scope: !8230)
!8233 = !DILocation(line: 2774, column: 11, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8235, file: !3, line: 2774, column: 4)
!8235 = distinct !DILexicalBlock(scope: !8229, file: !3, line: 2773, column: 26)
!8236 = !DILocation(line: 2774, column: 9, scope: !8234)
!8237 = !DILocation(line: 2774, column: 16, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8234, file: !3, line: 2774, column: 4)
!8239 = !DILocation(line: 2774, column: 20, scope: !8238)
!8240 = !DILocation(line: 2774, column: 18, scope: !8238)
!8241 = !DILocation(line: 2774, column: 4, scope: !8234)
!8242 = !DILocation(line: 2775, column: 13, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8238, file: !3, line: 2774, column: 28)
!8244 = !DILocation(line: 2775, column: 5, scope: !8243)
!8245 = !DILocation(line: 2775, column: 7, scope: !8243)
!8246 = !DILocation(line: 2775, column: 10, scope: !8243)
!8247 = !DILocation(line: 2776, column: 4, scope: !8243)
!8248 = !DILocation(line: 2774, column: 24, scope: !8238)
!8249 = !DILocation(line: 2774, column: 4, scope: !8238)
!8250 = distinct !{!8250, !8241, !8251}
!8251 = !DILocation(line: 2776, column: 4, scope: !8234)
!8252 = !DILocation(line: 2777, column: 3, scope: !8235)
!8253 = !DILocation(line: 2779, column: 1, scope: !8049)
!8254 = distinct !DISubprogram(name: "mean_value_half_tan_v2", scope: !3, file: !3, line: 2625, type: !489, scopeLine: 2626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!8255 = !DILocalVariable(name: "v1", arg: 1, scope: !8254, file: !3, line: 2625, type: !7)
!8256 = !DILocation(line: 2625, column: 49, scope: !8254)
!8257 = !DILocalVariable(name: "v2", arg: 2, scope: !8254, file: !3, line: 2625, type: !7)
!8258 = !DILocation(line: 2625, column: 68, scope: !8254)
!8259 = !DILocalVariable(name: "v3", arg: 3, scope: !8254, file: !3, line: 2625, type: !7)
!8260 = !DILocation(line: 2625, column: 87, scope: !8254)
!8261 = !DILocalVariable(name: "d2", scope: !8254, file: !3, line: 2627, type: !894)
!8262 = !DILocation(line: 2627, column: 8, scope: !8254)
!8263 = !DILocalVariable(name: "d3", scope: !8254, file: !3, line: 2627, type: !894)
!8264 = !DILocation(line: 2627, column: 15, scope: !8254)
!8265 = !DILocalVariable(name: "area", scope: !8254, file: !3, line: 2627, type: !9)
!8266 = !DILocation(line: 2627, column: 22, scope: !8254)
!8267 = !DILocation(line: 2629, column: 14, scope: !8254)
!8268 = !DILocation(line: 2629, column: 18, scope: !8254)
!8269 = !DILocation(line: 2629, column: 22, scope: !8254)
!8270 = !DILocation(line: 2629, column: 2, scope: !8254)
!8271 = !DILocation(line: 2630, column: 14, scope: !8254)
!8272 = !DILocation(line: 2630, column: 18, scope: !8254)
!8273 = !DILocation(line: 2630, column: 22, scope: !8254)
!8274 = !DILocation(line: 2630, column: 2, scope: !8254)
!8275 = !DILocation(line: 2633, column: 20, scope: !8254)
!8276 = !DILocation(line: 2633, column: 24, scope: !8254)
!8277 = !DILocation(line: 2633, column: 9, scope: !8254)
!8278 = !DILocation(line: 2633, column: 7, scope: !8254)
!8279 = !DILocation(line: 2634, column: 6, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8254, file: !3, line: 2634, column: 6)
!8281 = !DILocation(line: 2634, column: 6, scope: !8254)
!8282 = !DILocalVariable(name: "dot", scope: !8283, file: !3, line: 2635, type: !8)
!8283 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 2634, column: 28)
!8284 = !DILocation(line: 2635, column: 15, scope: !8283)
!8285 = !DILocation(line: 2635, column: 30, scope: !8283)
!8286 = !DILocation(line: 2635, column: 34, scope: !8283)
!8287 = !DILocation(line: 2635, column: 21, scope: !8283)
!8288 = !DILocalVariable(name: "len", scope: !8283, file: !3, line: 2636, type: !8)
!8289 = !DILocation(line: 2636, column: 15, scope: !8283)
!8290 = !DILocation(line: 2636, column: 28, scope: !8283)
!8291 = !DILocation(line: 2636, column: 21, scope: !8283)
!8292 = !DILocation(line: 2636, column: 41, scope: !8283)
!8293 = !DILocation(line: 2636, column: 34, scope: !8283)
!8294 = !DILocation(line: 2636, column: 32, scope: !8283)
!8295 = !DILocation(line: 2637, column: 11, scope: !8283)
!8296 = !DILocation(line: 2637, column: 17, scope: !8283)
!8297 = !DILocation(line: 2637, column: 15, scope: !8283)
!8298 = !DILocation(line: 2637, column: 24, scope: !8283)
!8299 = !DILocation(line: 2637, column: 22, scope: !8283)
!8300 = !DILocation(line: 2637, column: 3, scope: !8283)
!8301 = !DILocation(line: 2640, column: 3, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 2639, column: 7)
!8303 = !DILocation(line: 2642, column: 1, scope: !8254)
!8304 = distinct !DISubprogram(name: "len_v2v2", scope: !184, file: !184, line: 696, type: !565, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!8305 = !DILocalVariable(name: "v1", arg: 1, scope: !8304, file: !184, line: 696, type: !7)
!8306 = !DILocation(line: 696, column: 36, scope: !8304)
!8307 = !DILocalVariable(name: "v2", arg: 2, scope: !8304, file: !184, line: 696, type: !7)
!8308 = !DILocation(line: 696, column: 55, scope: !8304)
!8309 = !DILocalVariable(name: "x", scope: !8304, file: !184, line: 698, type: !9)
!8310 = !DILocation(line: 698, column: 8, scope: !8304)
!8311 = !DILocalVariable(name: "y", scope: !8304, file: !184, line: 698, type: !9)
!8312 = !DILocation(line: 698, column: 11, scope: !8304)
!8313 = !DILocation(line: 700, column: 6, scope: !8304)
!8314 = !DILocation(line: 700, column: 14, scope: !8304)
!8315 = !DILocation(line: 700, column: 12, scope: !8304)
!8316 = !DILocation(line: 700, column: 4, scope: !8304)
!8317 = !DILocation(line: 701, column: 6, scope: !8304)
!8318 = !DILocation(line: 701, column: 14, scope: !8304)
!8319 = !DILocation(line: 701, column: 12, scope: !8304)
!8320 = !DILocation(line: 701, column: 4, scope: !8304)
!8321 = !DILocation(line: 702, column: 15, scope: !8304)
!8322 = !DILocation(line: 702, column: 19, scope: !8304)
!8323 = !DILocation(line: 702, column: 17, scope: !8304)
!8324 = !DILocation(line: 702, column: 23, scope: !8304)
!8325 = !DILocation(line: 702, column: 27, scope: !8304)
!8326 = !DILocation(line: 702, column: 25, scope: !8304)
!8327 = !DILocation(line: 702, column: 21, scope: !8304)
!8328 = !DILocation(line: 702, column: 9, scope: !8304)
!8329 = !DILocation(line: 702, column: 2, scope: !8304)
!8330 = distinct !DISubprogram(name: "interp_cubic_v3", scope: !3, file: !3, line: 2782, type: !8331, scopeLine: 2783, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!8331 = !DISubroutineType(types: !8332)
!8332 = !{null, !10, !10, !7, !7, !7, !7, !8}
!8333 = !DILocalVariable(name: "x", arg: 1, scope: !8330, file: !3, line: 2782, type: !10)
!8334 = !DILocation(line: 2782, column: 28, scope: !8330)
!8335 = !DILocalVariable(name: "v", arg: 2, scope: !8330, file: !3, line: 2782, type: !10)
!8336 = !DILocation(line: 2782, column: 40, scope: !8330)
!8337 = !DILocalVariable(name: "x1", arg: 3, scope: !8330, file: !3, line: 2782, type: !7)
!8338 = !DILocation(line: 2782, column: 58, scope: !8330)
!8339 = !DILocalVariable(name: "v1", arg: 4, scope: !8330, file: !3, line: 2782, type: !7)
!8340 = !DILocation(line: 2782, column: 77, scope: !8330)
!8341 = !DILocalVariable(name: "x2", arg: 5, scope: !8330, file: !3, line: 2782, type: !7)
!8342 = !DILocation(line: 2782, column: 96, scope: !8330)
!8343 = !DILocalVariable(name: "v2", arg: 6, scope: !8330, file: !3, line: 2782, type: !7)
!8344 = !DILocation(line: 2782, column: 115, scope: !8330)
!8345 = !DILocalVariable(name: "t", arg: 7, scope: !8330, file: !3, line: 2782, type: !8)
!8346 = !DILocation(line: 2782, column: 134, scope: !8330)
!8347 = !DILocalVariable(name: "a", scope: !8330, file: !3, line: 2784, type: !117)
!8348 = !DILocation(line: 2784, column: 8, scope: !8330)
!8349 = !DILocalVariable(name: "b", scope: !8330, file: !3, line: 2784, type: !117)
!8350 = !DILocation(line: 2784, column: 14, scope: !8330)
!8351 = !DILocalVariable(name: "t2", scope: !8330, file: !3, line: 2785, type: !8)
!8352 = !DILocation(line: 2785, column: 14, scope: !8330)
!8353 = !DILocation(line: 2785, column: 19, scope: !8330)
!8354 = !DILocation(line: 2785, column: 23, scope: !8330)
!8355 = !DILocation(line: 2785, column: 21, scope: !8330)
!8356 = !DILocalVariable(name: "t3", scope: !8330, file: !3, line: 2786, type: !8)
!8357 = !DILocation(line: 2786, column: 14, scope: !8330)
!8358 = !DILocation(line: 2786, column: 19, scope: !8330)
!8359 = !DILocation(line: 2786, column: 24, scope: !8330)
!8360 = !DILocation(line: 2786, column: 22, scope: !8330)
!8361 = !DILocation(line: 2789, column: 9, scope: !8330)
!8362 = !DILocation(line: 2789, column: 17, scope: !8330)
!8363 = !DILocation(line: 2789, column: 15, scope: !8330)
!8364 = !DILocation(line: 2789, column: 30, scope: !8330)
!8365 = !DILocation(line: 2789, column: 38, scope: !8330)
!8366 = !DILocation(line: 2789, column: 36, scope: !8330)
!8367 = !DILocation(line: 2789, column: 27, scope: !8330)
!8368 = !DILocation(line: 2789, column: 23, scope: !8330)
!8369 = !DILocation(line: 2789, column: 2, scope: !8330)
!8370 = !DILocation(line: 2789, column: 7, scope: !8330)
!8371 = !DILocation(line: 2790, column: 9, scope: !8330)
!8372 = !DILocation(line: 2790, column: 17, scope: !8330)
!8373 = !DILocation(line: 2790, column: 15, scope: !8330)
!8374 = !DILocation(line: 2790, column: 30, scope: !8330)
!8375 = !DILocation(line: 2790, column: 38, scope: !8330)
!8376 = !DILocation(line: 2790, column: 36, scope: !8330)
!8377 = !DILocation(line: 2790, column: 27, scope: !8330)
!8378 = !DILocation(line: 2790, column: 23, scope: !8330)
!8379 = !DILocation(line: 2790, column: 2, scope: !8330)
!8380 = !DILocation(line: 2790, column: 7, scope: !8330)
!8381 = !DILocation(line: 2791, column: 9, scope: !8330)
!8382 = !DILocation(line: 2791, column: 17, scope: !8330)
!8383 = !DILocation(line: 2791, column: 15, scope: !8330)
!8384 = !DILocation(line: 2791, column: 30, scope: !8330)
!8385 = !DILocation(line: 2791, column: 38, scope: !8330)
!8386 = !DILocation(line: 2791, column: 36, scope: !8330)
!8387 = !DILocation(line: 2791, column: 27, scope: !8330)
!8388 = !DILocation(line: 2791, column: 23, scope: !8330)
!8389 = !DILocation(line: 2791, column: 2, scope: !8330)
!8390 = !DILocation(line: 2791, column: 7, scope: !8330)
!8391 = !DILocation(line: 2793, column: 14, scope: !8330)
!8392 = !DILocation(line: 2793, column: 12, scope: !8330)
!8393 = !DILocation(line: 2793, column: 22, scope: !8330)
!8394 = !DILocation(line: 2793, column: 20, scope: !8330)
!8395 = !DILocation(line: 2793, column: 35, scope: !8330)
!8396 = !DILocation(line: 2793, column: 43, scope: !8330)
!8397 = !DILocation(line: 2793, column: 41, scope: !8330)
!8398 = !DILocation(line: 2793, column: 32, scope: !8330)
!8399 = !DILocation(line: 2793, column: 28, scope: !8330)
!8400 = !DILocation(line: 2793, column: 2, scope: !8330)
!8401 = !DILocation(line: 2793, column: 7, scope: !8330)
!8402 = !DILocation(line: 2794, column: 14, scope: !8330)
!8403 = !DILocation(line: 2794, column: 12, scope: !8330)
!8404 = !DILocation(line: 2794, column: 22, scope: !8330)
!8405 = !DILocation(line: 2794, column: 20, scope: !8330)
!8406 = !DILocation(line: 2794, column: 35, scope: !8330)
!8407 = !DILocation(line: 2794, column: 43, scope: !8330)
!8408 = !DILocation(line: 2794, column: 41, scope: !8330)
!8409 = !DILocation(line: 2794, column: 32, scope: !8330)
!8410 = !DILocation(line: 2794, column: 28, scope: !8330)
!8411 = !DILocation(line: 2794, column: 2, scope: !8330)
!8412 = !DILocation(line: 2794, column: 7, scope: !8330)
!8413 = !DILocation(line: 2795, column: 14, scope: !8330)
!8414 = !DILocation(line: 2795, column: 12, scope: !8330)
!8415 = !DILocation(line: 2795, column: 22, scope: !8330)
!8416 = !DILocation(line: 2795, column: 20, scope: !8330)
!8417 = !DILocation(line: 2795, column: 35, scope: !8330)
!8418 = !DILocation(line: 2795, column: 43, scope: !8330)
!8419 = !DILocation(line: 2795, column: 41, scope: !8330)
!8420 = !DILocation(line: 2795, column: 32, scope: !8330)
!8421 = !DILocation(line: 2795, column: 28, scope: !8330)
!8422 = !DILocation(line: 2795, column: 2, scope: !8330)
!8423 = !DILocation(line: 2795, column: 7, scope: !8330)
!8424 = !DILocation(line: 2797, column: 9, scope: !8330)
!8425 = !DILocation(line: 2797, column: 16, scope: !8330)
!8426 = !DILocation(line: 2797, column: 14, scope: !8330)
!8427 = !DILocation(line: 2797, column: 21, scope: !8330)
!8428 = !DILocation(line: 2797, column: 28, scope: !8330)
!8429 = !DILocation(line: 2797, column: 26, scope: !8330)
!8430 = !DILocation(line: 2797, column: 19, scope: !8330)
!8431 = !DILocation(line: 2797, column: 33, scope: !8330)
!8432 = !DILocation(line: 2797, column: 41, scope: !8330)
!8433 = !DILocation(line: 2797, column: 39, scope: !8330)
!8434 = !DILocation(line: 2797, column: 31, scope: !8330)
!8435 = !DILocation(line: 2797, column: 45, scope: !8330)
!8436 = !DILocation(line: 2797, column: 43, scope: !8330)
!8437 = !DILocation(line: 2797, column: 2, scope: !8330)
!8438 = !DILocation(line: 2797, column: 7, scope: !8330)
!8439 = !DILocation(line: 2798, column: 9, scope: !8330)
!8440 = !DILocation(line: 2798, column: 16, scope: !8330)
!8441 = !DILocation(line: 2798, column: 14, scope: !8330)
!8442 = !DILocation(line: 2798, column: 21, scope: !8330)
!8443 = !DILocation(line: 2798, column: 28, scope: !8330)
!8444 = !DILocation(line: 2798, column: 26, scope: !8330)
!8445 = !DILocation(line: 2798, column: 19, scope: !8330)
!8446 = !DILocation(line: 2798, column: 33, scope: !8330)
!8447 = !DILocation(line: 2798, column: 41, scope: !8330)
!8448 = !DILocation(line: 2798, column: 39, scope: !8330)
!8449 = !DILocation(line: 2798, column: 31, scope: !8330)
!8450 = !DILocation(line: 2798, column: 45, scope: !8330)
!8451 = !DILocation(line: 2798, column: 43, scope: !8330)
!8452 = !DILocation(line: 2798, column: 2, scope: !8330)
!8453 = !DILocation(line: 2798, column: 7, scope: !8330)
!8454 = !DILocation(line: 2799, column: 9, scope: !8330)
!8455 = !DILocation(line: 2799, column: 16, scope: !8330)
!8456 = !DILocation(line: 2799, column: 14, scope: !8330)
!8457 = !DILocation(line: 2799, column: 21, scope: !8330)
!8458 = !DILocation(line: 2799, column: 28, scope: !8330)
!8459 = !DILocation(line: 2799, column: 26, scope: !8330)
!8460 = !DILocation(line: 2799, column: 19, scope: !8330)
!8461 = !DILocation(line: 2799, column: 33, scope: !8330)
!8462 = !DILocation(line: 2799, column: 41, scope: !8330)
!8463 = !DILocation(line: 2799, column: 39, scope: !8330)
!8464 = !DILocation(line: 2799, column: 31, scope: !8330)
!8465 = !DILocation(line: 2799, column: 45, scope: !8330)
!8466 = !DILocation(line: 2799, column: 43, scope: !8330)
!8467 = !DILocation(line: 2799, column: 2, scope: !8330)
!8468 = !DILocation(line: 2799, column: 7, scope: !8330)
!8469 = !DILocation(line: 2801, column: 13, scope: !8330)
!8470 = !DILocation(line: 2801, column: 11, scope: !8330)
!8471 = !DILocation(line: 2801, column: 20, scope: !8330)
!8472 = !DILocation(line: 2801, column: 18, scope: !8330)
!8473 = !DILocation(line: 2801, column: 29, scope: !8330)
!8474 = !DILocation(line: 2801, column: 27, scope: !8330)
!8475 = !DILocation(line: 2801, column: 36, scope: !8330)
!8476 = !DILocation(line: 2801, column: 34, scope: !8330)
!8477 = !DILocation(line: 2801, column: 23, scope: !8330)
!8478 = !DILocation(line: 2801, column: 40, scope: !8330)
!8479 = !DILocation(line: 2801, column: 38, scope: !8330)
!8480 = !DILocation(line: 2801, column: 2, scope: !8330)
!8481 = !DILocation(line: 2801, column: 7, scope: !8330)
!8482 = !DILocation(line: 2802, column: 13, scope: !8330)
!8483 = !DILocation(line: 2802, column: 11, scope: !8330)
!8484 = !DILocation(line: 2802, column: 20, scope: !8330)
!8485 = !DILocation(line: 2802, column: 18, scope: !8330)
!8486 = !DILocation(line: 2802, column: 29, scope: !8330)
!8487 = !DILocation(line: 2802, column: 27, scope: !8330)
!8488 = !DILocation(line: 2802, column: 36, scope: !8330)
!8489 = !DILocation(line: 2802, column: 34, scope: !8330)
!8490 = !DILocation(line: 2802, column: 23, scope: !8330)
!8491 = !DILocation(line: 2802, column: 40, scope: !8330)
!8492 = !DILocation(line: 2802, column: 38, scope: !8330)
!8493 = !DILocation(line: 2802, column: 2, scope: !8330)
!8494 = !DILocation(line: 2802, column: 7, scope: !8330)
!8495 = !DILocation(line: 2803, column: 13, scope: !8330)
!8496 = !DILocation(line: 2803, column: 11, scope: !8330)
!8497 = !DILocation(line: 2803, column: 20, scope: !8330)
!8498 = !DILocation(line: 2803, column: 18, scope: !8330)
!8499 = !DILocation(line: 2803, column: 29, scope: !8330)
!8500 = !DILocation(line: 2803, column: 27, scope: !8330)
!8501 = !DILocation(line: 2803, column: 36, scope: !8330)
!8502 = !DILocation(line: 2803, column: 34, scope: !8330)
!8503 = !DILocation(line: 2803, column: 23, scope: !8330)
!8504 = !DILocation(line: 2803, column: 40, scope: !8330)
!8505 = !DILocation(line: 2803, column: 38, scope: !8330)
!8506 = !DILocation(line: 2803, column: 2, scope: !8330)
!8507 = !DILocation(line: 2803, column: 7, scope: !8330)
!8508 = !DILocation(line: 2804, column: 1, scope: !8330)
!8509 = distinct !DISubprogram(name: "resolve_tri_uv_v2", scope: !3, file: !3, line: 2815, type: !62, scopeLine: 2817, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!8510 = !DILocalVariable(name: "r_uv", arg: 1, scope: !8509, file: !3, line: 2815, type: !10)
!8511 = !DILocation(line: 2815, column: 30, scope: !8509)
!8512 = !DILocalVariable(name: "st", arg: 2, scope: !8509, file: !3, line: 2815, type: !7)
!8513 = !DILocation(line: 2815, column: 51, scope: !8509)
!8514 = !DILocalVariable(name: "st0", arg: 3, scope: !8509, file: !3, line: 2816, type: !7)
!8515 = !DILocation(line: 2816, column: 36, scope: !8509)
!8516 = !DILocalVariable(name: "st1", arg: 4, scope: !8509, file: !3, line: 2816, type: !7)
!8517 = !DILocation(line: 2816, column: 56, scope: !8509)
!8518 = !DILocalVariable(name: "st2", arg: 5, scope: !8509, file: !3, line: 2816, type: !7)
!8519 = !DILocation(line: 2816, column: 76, scope: !8509)
!8520 = !DILocalVariable(name: "a", scope: !8509, file: !3, line: 2821, type: !8521)
!8521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18)
!8522 = !DILocation(line: 2821, column: 15, scope: !8509)
!8523 = !DILocation(line: 2821, column: 19, scope: !8509)
!8524 = !DILocation(line: 2821, column: 28, scope: !8509)
!8525 = !DILocation(line: 2821, column: 26, scope: !8509)
!8526 = !DILocalVariable(name: "b", scope: !8509, file: !3, line: 2821, type: !8521)
!8527 = !DILocation(line: 2821, column: 36, scope: !8509)
!8528 = !DILocation(line: 2821, column: 40, scope: !8509)
!8529 = !DILocation(line: 2821, column: 49, scope: !8509)
!8530 = !DILocation(line: 2821, column: 47, scope: !8509)
!8531 = !DILocalVariable(name: "c", scope: !8509, file: !3, line: 2822, type: !8521)
!8532 = !DILocation(line: 2822, column: 15, scope: !8509)
!8533 = !DILocation(line: 2822, column: 19, scope: !8509)
!8534 = !DILocation(line: 2822, column: 28, scope: !8509)
!8535 = !DILocation(line: 2822, column: 26, scope: !8509)
!8536 = !DILocalVariable(name: "d", scope: !8509, file: !3, line: 2822, type: !8521)
!8537 = !DILocation(line: 2822, column: 36, scope: !8509)
!8538 = !DILocation(line: 2822, column: 40, scope: !8509)
!8539 = !DILocation(line: 2822, column: 49, scope: !8509)
!8540 = !DILocation(line: 2822, column: 47, scope: !8509)
!8541 = !DILocalVariable(name: "det", scope: !8509, file: !3, line: 2823, type: !8521)
!8542 = !DILocation(line: 2823, column: 15, scope: !8509)
!8543 = !DILocation(line: 2823, column: 21, scope: !8509)
!8544 = !DILocation(line: 2823, column: 25, scope: !8509)
!8545 = !DILocation(line: 2823, column: 23, scope: !8509)
!8546 = !DILocation(line: 2823, column: 29, scope: !8509)
!8547 = !DILocation(line: 2823, column: 33, scope: !8509)
!8548 = !DILocation(line: 2823, column: 31, scope: !8509)
!8549 = !DILocation(line: 2823, column: 27, scope: !8509)
!8550 = !DILocation(line: 2826, column: 6, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8509, file: !3, line: 2826, column: 6)
!8552 = !DILocation(line: 0, scope: !8551)
!8553 = !DILocation(line: 2826, column: 19, scope: !8551)
!8554 = !DILocation(line: 2826, column: 6, scope: !8509)
!8555 = !DILocalVariable(name: "x", scope: !8556, file: !3, line: 2827, type: !8557)
!8556 = distinct !DILexicalBlock(scope: !8551, file: !3, line: 2826, column: 25)
!8557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8521, size: 128, elements: !603)
!8558 = !DILocation(line: 2827, column: 16, scope: !8556)
!8559 = !DILocation(line: 2827, column: 23, scope: !8556)
!8560 = !DILocation(line: 2827, column: 24, scope: !8556)
!8561 = !DILocation(line: 2827, column: 32, scope: !8556)
!8562 = !DILocation(line: 2827, column: 30, scope: !8556)
!8563 = !DILocation(line: 2827, column: 40, scope: !8556)
!8564 = !DILocation(line: 2827, column: 48, scope: !8556)
!8565 = !DILocation(line: 2827, column: 46, scope: !8556)
!8566 = !DILocation(line: 2829, column: 22, scope: !8556)
!8567 = !DILocation(line: 2829, column: 26, scope: !8556)
!8568 = !DILocation(line: 2829, column: 24, scope: !8556)
!8569 = !DILocation(line: 2829, column: 33, scope: !8556)
!8570 = !DILocation(line: 2829, column: 37, scope: !8556)
!8571 = !DILocation(line: 2829, column: 35, scope: !8556)
!8572 = !DILocation(line: 2829, column: 31, scope: !8556)
!8573 = !DILocation(line: 2829, column: 45, scope: !8556)
!8574 = !DILocation(line: 2829, column: 43, scope: !8556)
!8575 = !DILocation(line: 2829, column: 13, scope: !8556)
!8576 = !DILocation(line: 2829, column: 3, scope: !8556)
!8577 = !DILocation(line: 2829, column: 11, scope: !8556)
!8578 = !DILocation(line: 2830, column: 24, scope: !8556)
!8579 = !DILocation(line: 2830, column: 23, scope: !8556)
!8580 = !DILocation(line: 2830, column: 29, scope: !8556)
!8581 = !DILocation(line: 2830, column: 27, scope: !8556)
!8582 = !DILocation(line: 2830, column: 36, scope: !8556)
!8583 = !DILocation(line: 2830, column: 40, scope: !8556)
!8584 = !DILocation(line: 2830, column: 38, scope: !8556)
!8585 = !DILocation(line: 2830, column: 34, scope: !8556)
!8586 = !DILocation(line: 2830, column: 48, scope: !8556)
!8587 = !DILocation(line: 2830, column: 46, scope: !8556)
!8588 = !DILocation(line: 2830, column: 13, scope: !8556)
!8589 = !DILocation(line: 2830, column: 3, scope: !8556)
!8590 = !DILocation(line: 2830, column: 11, scope: !8556)
!8591 = !DILocation(line: 2831, column: 2, scope: !8556)
!8592 = !DILocation(line: 2833, column: 11, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8551, file: !3, line: 2832, column: 7)
!8594 = !DILocation(line: 2833, column: 3, scope: !8593)
!8595 = !DILocation(line: 2835, column: 1, scope: !8509)
!8596 = distinct !DISubprogram(name: "zero_v2", scope: !184, file: !184, line: 37, type: !320, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!8597 = !DILocalVariable(name: "r", arg: 1, scope: !8596, file: !184, line: 37, type: !10)
!8598 = !DILocation(line: 37, column: 28, scope: !8596)
!8599 = !DILocation(line: 39, column: 2, scope: !8596)
!8600 = !DILocation(line: 39, column: 7, scope: !8596)
!8601 = !DILocation(line: 40, column: 2, scope: !8596)
!8602 = !DILocation(line: 40, column: 7, scope: !8596)
!8603 = !DILocation(line: 41, column: 1, scope: !8596)
!8604 = distinct !DISubprogram(name: "resolve_tri_uv_v3", scope: !3, file: !3, line: 2842, type: !62, scopeLine: 2843, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!8605 = !DILocalVariable(name: "r_uv", arg: 1, scope: !8604, file: !3, line: 2842, type: !10)
!8606 = !DILocation(line: 2842, column: 30, scope: !8604)
!8607 = !DILocalVariable(name: "st", arg: 2, scope: !8604, file: !3, line: 2842, type: !7)
!8608 = !DILocation(line: 2842, column: 51, scope: !8604)
!8609 = !DILocalVariable(name: "st0", arg: 3, scope: !8604, file: !3, line: 2842, type: !7)
!8610 = !DILocation(line: 2842, column: 70, scope: !8604)
!8611 = !DILocalVariable(name: "st1", arg: 4, scope: !8604, file: !3, line: 2842, type: !7)
!8612 = !DILocation(line: 2842, column: 90, scope: !8604)
!8613 = !DILocalVariable(name: "st2", arg: 5, scope: !8604, file: !3, line: 2842, type: !7)
!8614 = !DILocation(line: 2842, column: 110, scope: !8604)
!8615 = !DILocalVariable(name: "v0", scope: !8604, file: !3, line: 2844, type: !117)
!8616 = !DILocation(line: 2844, column: 8, scope: !8604)
!8617 = !DILocalVariable(name: "v1", scope: !8604, file: !3, line: 2844, type: !117)
!8618 = !DILocation(line: 2844, column: 15, scope: !8604)
!8619 = !DILocalVariable(name: "v2", scope: !8604, file: !3, line: 2844, type: !117)
!8620 = !DILocation(line: 2844, column: 22, scope: !8604)
!8621 = !DILocalVariable(name: "d00", scope: !8604, file: !3, line: 2845, type: !18)
!8622 = !DILocation(line: 2845, column: 9, scope: !8604)
!8623 = !DILocalVariable(name: "d01", scope: !8604, file: !3, line: 2845, type: !18)
!8624 = !DILocation(line: 2845, column: 14, scope: !8604)
!8625 = !DILocalVariable(name: "d11", scope: !8604, file: !3, line: 2845, type: !18)
!8626 = !DILocation(line: 2845, column: 19, scope: !8604)
!8627 = !DILocalVariable(name: "d20", scope: !8604, file: !3, line: 2845, type: !18)
!8628 = !DILocation(line: 2845, column: 24, scope: !8604)
!8629 = !DILocalVariable(name: "d21", scope: !8604, file: !3, line: 2845, type: !18)
!8630 = !DILocation(line: 2845, column: 29, scope: !8604)
!8631 = !DILocalVariable(name: "det", scope: !8604, file: !3, line: 2845, type: !18)
!8632 = !DILocation(line: 2845, column: 34, scope: !8604)
!8633 = !DILocation(line: 2847, column: 14, scope: !8604)
!8634 = !DILocation(line: 2847, column: 18, scope: !8604)
!8635 = !DILocation(line: 2847, column: 23, scope: !8604)
!8636 = !DILocation(line: 2847, column: 2, scope: !8604)
!8637 = !DILocation(line: 2848, column: 14, scope: !8604)
!8638 = !DILocation(line: 2848, column: 18, scope: !8604)
!8639 = !DILocation(line: 2848, column: 23, scope: !8604)
!8640 = !DILocation(line: 2848, column: 2, scope: !8604)
!8641 = !DILocation(line: 2849, column: 14, scope: !8604)
!8642 = !DILocation(line: 2849, column: 18, scope: !8604)
!8643 = !DILocation(line: 2849, column: 22, scope: !8604)
!8644 = !DILocation(line: 2849, column: 2, scope: !8604)
!8645 = !DILocation(line: 2851, column: 17, scope: !8604)
!8646 = !DILocation(line: 2851, column: 21, scope: !8604)
!8647 = !DILocation(line: 2851, column: 8, scope: !8604)
!8648 = !DILocation(line: 2851, column: 6, scope: !8604)
!8649 = !DILocation(line: 2852, column: 17, scope: !8604)
!8650 = !DILocation(line: 2852, column: 21, scope: !8604)
!8651 = !DILocation(line: 2852, column: 8, scope: !8604)
!8652 = !DILocation(line: 2852, column: 6, scope: !8604)
!8653 = !DILocation(line: 2853, column: 17, scope: !8604)
!8654 = !DILocation(line: 2853, column: 21, scope: !8604)
!8655 = !DILocation(line: 2853, column: 8, scope: !8604)
!8656 = !DILocation(line: 2853, column: 6, scope: !8604)
!8657 = !DILocation(line: 2854, column: 17, scope: !8604)
!8658 = !DILocation(line: 2854, column: 21, scope: !8604)
!8659 = !DILocation(line: 2854, column: 8, scope: !8604)
!8660 = !DILocation(line: 2854, column: 6, scope: !8604)
!8661 = !DILocation(line: 2855, column: 17, scope: !8604)
!8662 = !DILocation(line: 2855, column: 21, scope: !8604)
!8663 = !DILocation(line: 2855, column: 8, scope: !8604)
!8664 = !DILocation(line: 2855, column: 6, scope: !8604)
!8665 = !DILocation(line: 2857, column: 8, scope: !8604)
!8666 = !DILocation(line: 2857, column: 14, scope: !8604)
!8667 = !DILocation(line: 2857, column: 12, scope: !8604)
!8668 = !DILocation(line: 2857, column: 20, scope: !8604)
!8669 = !DILocation(line: 2857, column: 26, scope: !8604)
!8670 = !DILocation(line: 2857, column: 24, scope: !8604)
!8671 = !DILocation(line: 2857, column: 18, scope: !8604)
!8672 = !DILocation(line: 2857, column: 6, scope: !8604)
!8673 = !DILocation(line: 2860, column: 6, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !8604, file: !3, line: 2860, column: 6)
!8675 = !DILocation(line: 0, scope: !8674)
!8676 = !DILocation(line: 2860, column: 19, scope: !8674)
!8677 = !DILocation(line: 2860, column: 6, scope: !8604)
!8678 = !DILocalVariable(name: "w", scope: !8679, file: !3, line: 2861, type: !9)
!8679 = distinct !DILexicalBlock(scope: !8674, file: !3, line: 2860, column: 25)
!8680 = !DILocation(line: 2861, column: 9, scope: !8679)
!8681 = !DILocation(line: 2863, column: 22, scope: !8679)
!8682 = !DILocation(line: 2863, column: 28, scope: !8679)
!8683 = !DILocation(line: 2863, column: 26, scope: !8679)
!8684 = !DILocation(line: 2863, column: 34, scope: !8679)
!8685 = !DILocation(line: 2863, column: 40, scope: !8679)
!8686 = !DILocation(line: 2863, column: 38, scope: !8679)
!8687 = !DILocation(line: 2863, column: 32, scope: !8679)
!8688 = !DILocation(line: 2863, column: 47, scope: !8679)
!8689 = !DILocation(line: 2863, column: 45, scope: !8679)
!8690 = !DILocation(line: 2863, column: 13, scope: !8679)
!8691 = !DILocation(line: 2863, column: 5, scope: !8679)
!8692 = !DILocation(line: 2864, column: 22, scope: !8679)
!8693 = !DILocation(line: 2864, column: 28, scope: !8679)
!8694 = !DILocation(line: 2864, column: 26, scope: !8679)
!8695 = !DILocation(line: 2864, column: 34, scope: !8679)
!8696 = !DILocation(line: 2864, column: 40, scope: !8679)
!8697 = !DILocation(line: 2864, column: 38, scope: !8679)
!8698 = !DILocation(line: 2864, column: 32, scope: !8679)
!8699 = !DILocation(line: 2864, column: 47, scope: !8679)
!8700 = !DILocation(line: 2864, column: 45, scope: !8679)
!8701 = !DILocation(line: 2864, column: 13, scope: !8679)
!8702 = !DILocation(line: 2864, column: 3, scope: !8679)
!8703 = !DILocation(line: 2864, column: 11, scope: !8679)
!8704 = !DILocation(line: 2865, column: 20, scope: !8679)
!8705 = !DILocation(line: 2865, column: 18, scope: !8679)
!8706 = !DILocation(line: 2865, column: 30, scope: !8679)
!8707 = !DILocation(line: 2865, column: 28, scope: !8679)
!8708 = !DILocation(line: 2865, column: 3, scope: !8679)
!8709 = !DILocation(line: 2865, column: 11, scope: !8679)
!8710 = !DILocation(line: 2866, column: 2, scope: !8679)
!8711 = !DILocation(line: 2868, column: 11, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8674, file: !3, line: 2867, column: 7)
!8713 = !DILocation(line: 2868, column: 3, scope: !8712)
!8714 = !DILocation(line: 2870, column: 1, scope: !8604)
!8715 = distinct !DISubprogram(name: "resolve_quad_uv_v2", scope: !3, file: !3, line: 2873, type: !6652, scopeLine: 2875, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!8716 = !DILocalVariable(name: "r_uv", arg: 1, scope: !8715, file: !3, line: 2873, type: !10)
!8717 = !DILocation(line: 2873, column: 31, scope: !8715)
!8718 = !DILocalVariable(name: "st", arg: 2, scope: !8715, file: !3, line: 2873, type: !7)
!8719 = !DILocation(line: 2873, column: 52, scope: !8715)
!8720 = !DILocalVariable(name: "st0", arg: 3, scope: !8715, file: !3, line: 2874, type: !7)
!8721 = !DILocation(line: 2874, column: 37, scope: !8715)
!8722 = !DILocalVariable(name: "st1", arg: 4, scope: !8715, file: !3, line: 2874, type: !7)
!8723 = !DILocation(line: 2874, column: 57, scope: !8715)
!8724 = !DILocalVariable(name: "st2", arg: 5, scope: !8715, file: !3, line: 2874, type: !7)
!8725 = !DILocation(line: 2874, column: 77, scope: !8715)
!8726 = !DILocalVariable(name: "st3", arg: 6, scope: !8715, file: !3, line: 2874, type: !7)
!8727 = !DILocation(line: 2874, column: 97, scope: !8715)
!8728 = !DILocation(line: 2876, column: 27, scope: !8715)
!8729 = !DILocation(line: 2876, column: 39, scope: !8715)
!8730 = !DILocation(line: 2876, column: 43, scope: !8715)
!8731 = !DILocation(line: 2876, column: 48, scope: !8715)
!8732 = !DILocation(line: 2876, column: 53, scope: !8715)
!8733 = !DILocation(line: 2876, column: 58, scope: !8715)
!8734 = !DILocation(line: 2876, column: 2, scope: !8715)
!8735 = !DILocation(line: 2877, column: 1, scope: !8715)
!8736 = distinct !DISubprogram(name: "resolve_quad_uv_v2_deriv", scope: !3, file: !3, line: 2880, type: !8737, scopeLine: 2882, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!8737 = !DISubroutineType(types: !8738)
!8738 = !{null, !10, !8052, !7, !7, !7, !7, !7}
!8739 = !DILocalVariable(name: "r_uv", arg: 1, scope: !8736, file: !3, line: 2880, type: !10)
!8740 = !DILocation(line: 2880, column: 37, scope: !8736)
!8741 = !DILocalVariable(name: "r_deriv", arg: 2, scope: !8736, file: !3, line: 2880, type: !8052)
!8742 = !DILocation(line: 2880, column: 52, scope: !8736)
!8743 = !DILocalVariable(name: "st", arg: 3, scope: !8736, file: !3, line: 2881, type: !7)
!8744 = !DILocation(line: 2881, column: 43, scope: !8736)
!8745 = !DILocalVariable(name: "st0", arg: 4, scope: !8736, file: !3, line: 2881, type: !7)
!8746 = !DILocation(line: 2881, column: 62, scope: !8736)
!8747 = !DILocalVariable(name: "st1", arg: 5, scope: !8736, file: !3, line: 2881, type: !7)
!8748 = !DILocation(line: 2881, column: 82, scope: !8736)
!8749 = !DILocalVariable(name: "st2", arg: 6, scope: !8736, file: !3, line: 2881, type: !7)
!8750 = !DILocation(line: 2881, column: 102, scope: !8736)
!8751 = !DILocalVariable(name: "st3", arg: 7, scope: !8736, file: !3, line: 2881, type: !7)
!8752 = !DILocation(line: 2881, column: 122, scope: !8736)
!8753 = !DILocalVariable(name: "signed_area", scope: !8736, file: !3, line: 2883, type: !8521)
!8754 = !DILocation(line: 2883, column: 15, scope: !8736)
!8755 = !DILocation(line: 2883, column: 30, scope: !8736)
!8756 = !DILocation(line: 2883, column: 39, scope: !8736)
!8757 = !DILocation(line: 2883, column: 37, scope: !8736)
!8758 = !DILocation(line: 2883, column: 48, scope: !8736)
!8759 = !DILocation(line: 2883, column: 57, scope: !8736)
!8760 = !DILocation(line: 2883, column: 55, scope: !8736)
!8761 = !DILocation(line: 2883, column: 46, scope: !8736)
!8762 = !DILocation(line: 2883, column: 68, scope: !8736)
!8763 = !DILocation(line: 2883, column: 77, scope: !8736)
!8764 = !DILocation(line: 2883, column: 75, scope: !8736)
!8765 = !DILocation(line: 2883, column: 86, scope: !8736)
!8766 = !DILocation(line: 2883, column: 95, scope: !8736)
!8767 = !DILocation(line: 2883, column: 93, scope: !8736)
!8768 = !DILocation(line: 2883, column: 84, scope: !8736)
!8769 = !DILocation(line: 2883, column: 65, scope: !8736)
!8770 = !DILocation(line: 2884, column: 30, scope: !8736)
!8771 = !DILocation(line: 2884, column: 39, scope: !8736)
!8772 = !DILocation(line: 2884, column: 37, scope: !8736)
!8773 = !DILocation(line: 2884, column: 48, scope: !8736)
!8774 = !DILocation(line: 2884, column: 57, scope: !8736)
!8775 = !DILocation(line: 2884, column: 55, scope: !8736)
!8776 = !DILocation(line: 2884, column: 46, scope: !8736)
!8777 = !DILocation(line: 2883, column: 103, scope: !8736)
!8778 = !DILocation(line: 2884, column: 68, scope: !8736)
!8779 = !DILocation(line: 2884, column: 77, scope: !8736)
!8780 = !DILocation(line: 2884, column: 75, scope: !8736)
!8781 = !DILocation(line: 2884, column: 86, scope: !8736)
!8782 = !DILocation(line: 2884, column: 95, scope: !8736)
!8783 = !DILocation(line: 2884, column: 93, scope: !8736)
!8784 = !DILocation(line: 2884, column: 84, scope: !8736)
!8785 = !DILocation(line: 2884, column: 65, scope: !8736)
!8786 = !DILocation(line: 2883, column: 29, scope: !8736)
!8787 = !DILocalVariable(name: "a", scope: !8736, file: !3, line: 2888, type: !8521)
!8788 = !DILocation(line: 2888, column: 15, scope: !8736)
!8789 = !DILocation(line: 2888, column: 20, scope: !8736)
!8790 = !DILocation(line: 2888, column: 29, scope: !8736)
!8791 = !DILocation(line: 2888, column: 27, scope: !8736)
!8792 = !DILocation(line: 2888, column: 39, scope: !8736)
!8793 = !DILocation(line: 2888, column: 48, scope: !8736)
!8794 = !DILocation(line: 2888, column: 46, scope: !8736)
!8795 = !DILocation(line: 2888, column: 36, scope: !8736)
!8796 = !DILocation(line: 2888, column: 59, scope: !8736)
!8797 = !DILocation(line: 2888, column: 68, scope: !8736)
!8798 = !DILocation(line: 2888, column: 66, scope: !8736)
!8799 = !DILocation(line: 2888, column: 78, scope: !8736)
!8800 = !DILocation(line: 2888, column: 87, scope: !8736)
!8801 = !DILocation(line: 2888, column: 85, scope: !8736)
!8802 = !DILocation(line: 2888, column: 75, scope: !8736)
!8803 = !DILocation(line: 2888, column: 56, scope: !8736)
!8804 = !DILocation(line: 2888, column: 19, scope: !8736)
!8805 = !DILocalVariable(name: "b", scope: !8736, file: !3, line: 2891, type: !8521)
!8806 = !DILocation(line: 2891, column: 15, scope: !8736)
!8807 = !DILocation(line: 2891, column: 36, scope: !8736)
!8808 = !DILocation(line: 2891, column: 45, scope: !8736)
!8809 = !DILocation(line: 2891, column: 43, scope: !8736)
!8810 = !DILocation(line: 2891, column: 55, scope: !8736)
!8811 = !DILocation(line: 2891, column: 64, scope: !8736)
!8812 = !DILocation(line: 2891, column: 62, scope: !8736)
!8813 = !DILocation(line: 2891, column: 52, scope: !8736)
!8814 = !DILocation(line: 2891, column: 75, scope: !8736)
!8815 = !DILocation(line: 2891, column: 84, scope: !8736)
!8816 = !DILocation(line: 2891, column: 82, scope: !8736)
!8817 = !DILocation(line: 2891, column: 94, scope: !8736)
!8818 = !DILocation(line: 2891, column: 103, scope: !8736)
!8819 = !DILocation(line: 2891, column: 101, scope: !8736)
!8820 = !DILocation(line: 2891, column: 91, scope: !8736)
!8821 = !DILocation(line: 2891, column: 72, scope: !8736)
!8822 = !DILocation(line: 2892, column: 36, scope: !8736)
!8823 = !DILocation(line: 2892, column: 45, scope: !8736)
!8824 = !DILocation(line: 2892, column: 43, scope: !8736)
!8825 = !DILocation(line: 2892, column: 55, scope: !8736)
!8826 = !DILocation(line: 2892, column: 64, scope: !8736)
!8827 = !DILocation(line: 2892, column: 62, scope: !8736)
!8828 = !DILocation(line: 2892, column: 52, scope: !8736)
!8829 = !DILocation(line: 2892, column: 75, scope: !8736)
!8830 = !DILocation(line: 2892, column: 84, scope: !8736)
!8831 = !DILocation(line: 2892, column: 82, scope: !8736)
!8832 = !DILocation(line: 2892, column: 94, scope: !8736)
!8833 = !DILocation(line: 2892, column: 103, scope: !8736)
!8834 = !DILocation(line: 2892, column: 101, scope: !8736)
!8835 = !DILocation(line: 2892, column: 91, scope: !8736)
!8836 = !DILocation(line: 2892, column: 72, scope: !8736)
!8837 = !DILocation(line: 2891, column: 112, scope: !8736)
!8838 = !DILocation(line: 2891, column: 25, scope: !8736)
!8839 = !DILocation(line: 2891, column: 23, scope: !8736)
!8840 = !DILocalVariable(name: "fC", scope: !8736, file: !3, line: 2895, type: !8521)
!8841 = !DILocation(line: 2895, column: 15, scope: !8736)
!8842 = !DILocation(line: 2895, column: 21, scope: !8736)
!8843 = !DILocation(line: 2895, column: 30, scope: !8736)
!8844 = !DILocation(line: 2895, column: 28, scope: !8736)
!8845 = !DILocation(line: 2895, column: 40, scope: !8736)
!8846 = !DILocation(line: 2895, column: 49, scope: !8736)
!8847 = !DILocation(line: 2895, column: 47, scope: !8736)
!8848 = !DILocation(line: 2895, column: 37, scope: !8736)
!8849 = !DILocation(line: 2895, column: 60, scope: !8736)
!8850 = !DILocation(line: 2895, column: 69, scope: !8736)
!8851 = !DILocation(line: 2895, column: 67, scope: !8736)
!8852 = !DILocation(line: 2895, column: 79, scope: !8736)
!8853 = !DILocation(line: 2895, column: 88, scope: !8736)
!8854 = !DILocation(line: 2895, column: 86, scope: !8736)
!8855 = !DILocation(line: 2895, column: 76, scope: !8736)
!8856 = !DILocation(line: 2895, column: 57, scope: !8736)
!8857 = !DILocation(line: 2895, column: 20, scope: !8736)
!8858 = !DILocalVariable(name: "denom", scope: !8736, file: !3, line: 2896, type: !18)
!8859 = !DILocation(line: 2896, column: 9, scope: !8736)
!8860 = !DILocation(line: 2896, column: 17, scope: !8736)
!8861 = !DILocation(line: 2896, column: 25, scope: !8736)
!8862 = !DILocation(line: 2896, column: 23, scope: !8736)
!8863 = !DILocation(line: 2896, column: 19, scope: !8736)
!8864 = !DILocation(line: 2896, column: 29, scope: !8736)
!8865 = !DILocation(line: 2896, column: 27, scope: !8736)
!8866 = !DILocation(line: 2899, column: 10, scope: !8736)
!8867 = !DILocation(line: 2899, column: 2, scope: !8736)
!8868 = !DILocation(line: 2901, column: 6, scope: !8869)
!8869 = distinct !DILexicalBlock(scope: !8736, file: !3, line: 2901, column: 6)
!8870 = !DILocation(line: 0, scope: !8869)
!8871 = !DILocation(line: 2901, column: 21, scope: !8869)
!8872 = !DILocation(line: 2901, column: 6, scope: !8736)
!8873 = !DILocalVariable(name: "fDen", scope: !8874, file: !3, line: 2902, type: !8521)
!8874 = distinct !DILexicalBlock(scope: !8869, file: !3, line: 2901, column: 27)
!8875 = !DILocation(line: 2902, column: 16, scope: !8874)
!8876 = !DILocation(line: 2902, column: 23, scope: !8874)
!8877 = !DILocation(line: 2902, column: 27, scope: !8874)
!8878 = !DILocation(line: 2902, column: 25, scope: !8874)
!8879 = !DILocation(line: 2903, column: 7, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8874, file: !3, line: 2903, column: 7)
!8881 = !DILocation(line: 0, scope: !8880)
!8882 = !DILocation(line: 2903, column: 21, scope: !8880)
!8883 = !DILocation(line: 2903, column: 7, scope: !8874)
!8884 = !DILocation(line: 2904, column: 22, scope: !8880)
!8885 = !DILocation(line: 2904, column: 26, scope: !8880)
!8886 = !DILocation(line: 2904, column: 24, scope: !8880)
!8887 = !DILocation(line: 2904, column: 14, scope: !8880)
!8888 = !DILocation(line: 2904, column: 4, scope: !8880)
!8889 = !DILocation(line: 2904, column: 12, scope: !8880)
!8890 = !DILocation(line: 2905, column: 2, scope: !8874)
!8891 = !DILocalVariable(name: "desc_sq", scope: !8892, file: !3, line: 2907, type: !8521)
!8892 = distinct !DILexicalBlock(scope: !8869, file: !3, line: 2906, column: 7)
!8893 = !DILocation(line: 2907, column: 16, scope: !8892)
!8894 = !DILocation(line: 2907, column: 26, scope: !8892)
!8895 = !DILocation(line: 2907, column: 30, scope: !8892)
!8896 = !DILocation(line: 2907, column: 28, scope: !8892)
!8897 = !DILocation(line: 2907, column: 34, scope: !8892)
!8898 = !DILocation(line: 2907, column: 38, scope: !8892)
!8899 = !DILocation(line: 2907, column: 36, scope: !8892)
!8900 = !DILocation(line: 2907, column: 32, scope: !8892)
!8901 = !DILocalVariable(name: "desc", scope: !8892, file: !3, line: 2908, type: !8521)
!8902 = !DILocation(line: 2908, column: 16, scope: !8892)
!8903 = !DILocation(line: 2908, column: 28, scope: !8892)
!8904 = !DILocation(line: 2908, column: 36, scope: !8892)
!8905 = !DILocation(line: 2908, column: 50, scope: !8892)
!8906 = !DILocation(line: 2908, column: 23, scope: !8892)
!8907 = !DILocalVariable(name: "s", scope: !8892, file: !3, line: 2909, type: !8521)
!8908 = !DILocation(line: 2909, column: 16, scope: !8892)
!8909 = !DILocation(line: 2909, column: 20, scope: !8892)
!8910 = !DILocation(line: 2909, column: 32, scope: !8892)
!8911 = !DILocation(line: 2911, column: 23, scope: !8892)
!8912 = !DILocation(line: 2911, column: 27, scope: !8892)
!8913 = !DILocation(line: 2911, column: 25, scope: !8892)
!8914 = !DILocation(line: 2911, column: 32, scope: !8892)
!8915 = !DILocation(line: 2911, column: 36, scope: !8892)
!8916 = !DILocation(line: 2911, column: 34, scope: !8892)
!8917 = !DILocation(line: 2911, column: 30, scope: !8892)
!8918 = !DILocation(line: 2911, column: 44, scope: !8892)
!8919 = !DILocation(line: 2911, column: 42, scope: !8892)
!8920 = !DILocation(line: 2911, column: 13, scope: !8892)
!8921 = !DILocation(line: 2911, column: 3, scope: !8892)
!8922 = !DILocation(line: 2911, column: 11, scope: !8892)
!8923 = !DILocalVariable(name: "denom_s", scope: !8924, file: !3, line: 2917, type: !8521)
!8924 = distinct !DILexicalBlock(scope: !8736, file: !3, line: 2916, column: 2)
!8925 = !DILocation(line: 2917, column: 16, scope: !8924)
!8926 = !DILocation(line: 2917, column: 31, scope: !8924)
!8927 = !DILocation(line: 2917, column: 29, scope: !8924)
!8928 = !DILocation(line: 2917, column: 43, scope: !8924)
!8929 = !DILocation(line: 2917, column: 52, scope: !8924)
!8930 = !DILocation(line: 2917, column: 50, scope: !8924)
!8931 = !DILocation(line: 2917, column: 40, scope: !8924)
!8932 = !DILocation(line: 2917, column: 62, scope: !8924)
!8933 = !DILocation(line: 2917, column: 73, scope: !8924)
!8934 = !DILocation(line: 2917, column: 82, scope: !8924)
!8935 = !DILocation(line: 2917, column: 80, scope: !8924)
!8936 = !DILocation(line: 2917, column: 70, scope: !8924)
!8937 = !DILocation(line: 2917, column: 60, scope: !8924)
!8938 = !DILocation(line: 2917, column: 26, scope: !8924)
!8939 = !DILocalVariable(name: "denom_t", scope: !8924, file: !3, line: 2918, type: !8521)
!8940 = !DILocation(line: 2918, column: 16, scope: !8924)
!8941 = !DILocation(line: 2918, column: 31, scope: !8924)
!8942 = !DILocation(line: 2918, column: 29, scope: !8924)
!8943 = !DILocation(line: 2918, column: 43, scope: !8924)
!8944 = !DILocation(line: 2918, column: 52, scope: !8924)
!8945 = !DILocation(line: 2918, column: 50, scope: !8924)
!8946 = !DILocation(line: 2918, column: 40, scope: !8924)
!8947 = !DILocation(line: 2918, column: 62, scope: !8924)
!8948 = !DILocation(line: 2918, column: 73, scope: !8924)
!8949 = !DILocation(line: 2918, column: 82, scope: !8924)
!8950 = !DILocation(line: 2918, column: 80, scope: !8924)
!8951 = !DILocation(line: 2918, column: 70, scope: !8924)
!8952 = !DILocation(line: 2918, column: 60, scope: !8924)
!8953 = !DILocation(line: 2918, column: 26, scope: !8924)
!8954 = !DILocalVariable(name: "i", scope: !8924, file: !3, line: 2919, type: !17)
!8955 = !DILocation(line: 2919, column: 7, scope: !8924)
!8956 = !DILocation(line: 2920, column: 11, scope: !8924)
!8957 = !DILocation(line: 2920, column: 9, scope: !8924)
!8958 = !DILocation(line: 2922, column: 12, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8924, file: !3, line: 2922, column: 7)
!8960 = !DILocation(line: 2922, column: 7, scope: !8959)
!8961 = !DILocation(line: 2922, column: 28, scope: !8959)
!8962 = !DILocation(line: 2922, column: 23, scope: !8959)
!8963 = !DILocation(line: 2922, column: 21, scope: !8959)
!8964 = !DILocation(line: 2922, column: 7, scope: !8924)
!8965 = !DILocation(line: 2923, column: 6, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8959, file: !3, line: 2922, column: 38)
!8967 = !DILocation(line: 2924, column: 12, scope: !8966)
!8968 = !DILocation(line: 2924, column: 10, scope: !8966)
!8969 = !DILocation(line: 2925, column: 3, scope: !8966)
!8970 = !DILocation(line: 2927, column: 7, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8924, file: !3, line: 2927, column: 7)
!8972 = !DILocation(line: 0, scope: !8971)
!8973 = !DILocation(line: 2927, column: 22, scope: !8971)
!8974 = !DILocation(line: 2927, column: 7, scope: !8924)
!8975 = !DILocation(line: 2928, column: 39, scope: !8971)
!8976 = !DILocation(line: 2928, column: 37, scope: !8971)
!8977 = !DILocation(line: 2928, column: 51, scope: !8971)
!8978 = !DILocation(line: 2928, column: 55, scope: !8971)
!8979 = !DILocation(line: 2928, column: 60, scope: !8971)
!8980 = !DILocation(line: 2928, column: 63, scope: !8971)
!8981 = !DILocation(line: 2928, column: 58, scope: !8971)
!8982 = !DILocation(line: 2928, column: 48, scope: !8971)
!8983 = !DILocation(line: 2928, column: 69, scope: !8971)
!8984 = !DILocation(line: 2928, column: 80, scope: !8971)
!8985 = !DILocation(line: 2928, column: 84, scope: !8971)
!8986 = !DILocation(line: 2928, column: 89, scope: !8971)
!8987 = !DILocation(line: 2928, column: 92, scope: !8971)
!8988 = !DILocation(line: 2928, column: 87, scope: !8971)
!8989 = !DILocation(line: 2928, column: 77, scope: !8971)
!8990 = !DILocation(line: 2928, column: 67, scope: !8971)
!8991 = !DILocation(line: 2928, column: 22, scope: !8971)
!8992 = !DILocation(line: 2928, column: 99, scope: !8971)
!8993 = !DILocation(line: 2928, column: 97, scope: !8971)
!8994 = !DILocation(line: 2928, column: 14, scope: !8971)
!8995 = !DILocation(line: 2928, column: 4, scope: !8971)
!8996 = !DILocation(line: 2928, column: 12, scope: !8971)
!8997 = !DILocation(line: 2931, column: 6, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8736, file: !3, line: 2931, column: 6)
!8999 = !DILocation(line: 2931, column: 6, scope: !8736)
!9000 = !DILocalVariable(name: "tmp1", scope: !9001, file: !3, line: 2932, type: !894)
!9001 = distinct !DILexicalBlock(scope: !8998, file: !3, line: 2931, column: 15)
!9002 = !DILocation(line: 2932, column: 9, scope: !9001)
!9003 = !DILocalVariable(name: "tmp2", scope: !9001, file: !3, line: 2932, type: !894)
!9004 = !DILocation(line: 2932, column: 18, scope: !9001)
!9005 = !DILocalVariable(name: "s", scope: !9001, file: !3, line: 2932, type: !894)
!9006 = !DILocation(line: 2932, column: 27, scope: !9001)
!9007 = !DILocalVariable(name: "t", scope: !9001, file: !3, line: 2932, type: !894)
!9008 = !DILocation(line: 2932, column: 33, scope: !9001)
!9009 = !DILocation(line: 2935, column: 11, scope: !9001)
!9010 = !DILocation(line: 2935, column: 3, scope: !9001)
!9011 = !DILocation(line: 2936, column: 11, scope: !9001)
!9012 = !DILocation(line: 2936, column: 3, scope: !9001)
!9013 = !DILocation(line: 2938, column: 15, scope: !9001)
!9014 = !DILocation(line: 2938, column: 21, scope: !9001)
!9015 = !DILocation(line: 2938, column: 26, scope: !9001)
!9016 = !DILocation(line: 2938, column: 3, scope: !9001)
!9017 = !DILocation(line: 2939, column: 15, scope: !9001)
!9018 = !DILocation(line: 2939, column: 21, scope: !9001)
!9019 = !DILocation(line: 2939, column: 26, scope: !9001)
!9020 = !DILocation(line: 2939, column: 3, scope: !9001)
!9021 = !DILocation(line: 2940, column: 18, scope: !9001)
!9022 = !DILocation(line: 2940, column: 21, scope: !9001)
!9023 = !DILocation(line: 2940, column: 27, scope: !9001)
!9024 = !DILocation(line: 2940, column: 33, scope: !9001)
!9025 = !DILocation(line: 2940, column: 3, scope: !9001)
!9026 = !DILocation(line: 2941, column: 15, scope: !9001)
!9027 = !DILocation(line: 2941, column: 21, scope: !9001)
!9028 = !DILocation(line: 2941, column: 26, scope: !9001)
!9029 = !DILocation(line: 2941, column: 3, scope: !9001)
!9030 = !DILocation(line: 2942, column: 15, scope: !9001)
!9031 = !DILocation(line: 2942, column: 21, scope: !9001)
!9032 = !DILocation(line: 2942, column: 26, scope: !9001)
!9033 = !DILocation(line: 2942, column: 3, scope: !9001)
!9034 = !DILocation(line: 2943, column: 18, scope: !9001)
!9035 = !DILocation(line: 2943, column: 21, scope: !9001)
!9036 = !DILocation(line: 2943, column: 27, scope: !9001)
!9037 = !DILocation(line: 2943, column: 33, scope: !9001)
!9038 = !DILocation(line: 2943, column: 3, scope: !9001)
!9039 = !DILocation(line: 2945, column: 11, scope: !9001)
!9040 = !DILocation(line: 2945, column: 18, scope: !9001)
!9041 = !DILocation(line: 2945, column: 16, scope: !9001)
!9042 = !DILocation(line: 2945, column: 25, scope: !9001)
!9043 = !DILocation(line: 2945, column: 32, scope: !9001)
!9044 = !DILocation(line: 2945, column: 30, scope: !9001)
!9045 = !DILocation(line: 2945, column: 23, scope: !9001)
!9046 = !DILocation(line: 2945, column: 9, scope: !9001)
!9047 = !DILocation(line: 2947, column: 8, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9001, file: !3, line: 2947, column: 7)
!9049 = !DILocation(line: 2947, column: 7, scope: !9001)
!9050 = !DILocalVariable(name: "inv_denom", scope: !9051, file: !3, line: 2948, type: !18)
!9051 = distinct !DILexicalBlock(scope: !9048, file: !3, line: 2947, column: 24)
!9052 = !DILocation(line: 2948, column: 11, scope: !9051)
!9053 = !DILocation(line: 2948, column: 29, scope: !9051)
!9054 = !DILocation(line: 2948, column: 27, scope: !9051)
!9055 = !DILocation(line: 2949, column: 37, scope: !9051)
!9056 = !DILocation(line: 2949, column: 36, scope: !9051)
!9057 = !DILocation(line: 2949, column: 28, scope: !9051)
!9058 = !DILocation(line: 2949, column: 44, scope: !9051)
!9059 = !DILocation(line: 2949, column: 42, scope: !9051)
!9060 = !DILocation(line: 2949, column: 20, scope: !9051)
!9061 = !DILocation(line: 2949, column: 4, scope: !9051)
!9062 = !DILocation(line: 2949, column: 18, scope: !9051)
!9063 = !DILocation(line: 2950, column: 37, scope: !9051)
!9064 = !DILocation(line: 2950, column: 28, scope: !9051)
!9065 = !DILocation(line: 2950, column: 44, scope: !9051)
!9066 = !DILocation(line: 2950, column: 42, scope: !9051)
!9067 = !DILocation(line: 2950, column: 20, scope: !9051)
!9068 = !DILocation(line: 2950, column: 4, scope: !9051)
!9069 = !DILocation(line: 2950, column: 18, scope: !9051)
!9070 = !DILocation(line: 2951, column: 37, scope: !9051)
!9071 = !DILocation(line: 2951, column: 28, scope: !9051)
!9072 = !DILocation(line: 2951, column: 44, scope: !9051)
!9073 = !DILocation(line: 2951, column: 42, scope: !9051)
!9074 = !DILocation(line: 2951, column: 20, scope: !9051)
!9075 = !DILocation(line: 2951, column: 4, scope: !9051)
!9076 = !DILocation(line: 2951, column: 18, scope: !9051)
!9077 = !DILocation(line: 2952, column: 37, scope: !9051)
!9078 = !DILocation(line: 2952, column: 36, scope: !9051)
!9079 = !DILocation(line: 2952, column: 28, scope: !9051)
!9080 = !DILocation(line: 2952, column: 44, scope: !9051)
!9081 = !DILocation(line: 2952, column: 42, scope: !9051)
!9082 = !DILocation(line: 2952, column: 20, scope: !9051)
!9083 = !DILocation(line: 2952, column: 4, scope: !9051)
!9084 = !DILocation(line: 2952, column: 18, scope: !9051)
!9085 = !DILocation(line: 2953, column: 3, scope: !9051)
!9086 = !DILocation(line: 2954, column: 2, scope: !9001)
!9087 = !DILocation(line: 2955, column: 1, scope: !8736)
!9088 = distinct !DISubprogram(name: "interp_bilinear_quad_v3", scope: !3, file: !3, line: 2960, type: !9089, scopeLine: 2961, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!9089 = !DISubroutineType(types: !9090)
!9090 = !{null, !6633, !9, !9, !10}
!9091 = !DILocalVariable(name: "data", arg: 1, scope: !9088, file: !3, line: 2960, type: !6633)
!9092 = !DILocation(line: 2960, column: 36, scope: !9088)
!9093 = !DILocalVariable(name: "u", arg: 2, scope: !9088, file: !3, line: 2960, type: !9)
!9094 = !DILocation(line: 2960, column: 54, scope: !9088)
!9095 = !DILocalVariable(name: "v", arg: 3, scope: !9088, file: !3, line: 2960, type: !9)
!9096 = !DILocation(line: 2960, column: 63, scope: !9088)
!9097 = !DILocalVariable(name: "res", arg: 4, scope: !9088, file: !3, line: 2960, type: !10)
!9098 = !DILocation(line: 2960, column: 72, scope: !9088)
!9099 = !DILocalVariable(name: "vec", scope: !9088, file: !3, line: 2962, type: !117)
!9100 = !DILocation(line: 2962, column: 8, scope: !9088)
!9101 = !DILocation(line: 2964, column: 13, scope: !9088)
!9102 = !DILocation(line: 2964, column: 18, scope: !9088)
!9103 = !DILocation(line: 2964, column: 2, scope: !9088)
!9104 = !DILocation(line: 2965, column: 12, scope: !9088)
!9105 = !DILocation(line: 2965, column: 22, scope: !9088)
!9106 = !DILocation(line: 2965, column: 20, scope: !9088)
!9107 = !DILocation(line: 2965, column: 32, scope: !9088)
!9108 = !DILocation(line: 2965, column: 30, scope: !9088)
!9109 = !DILocation(line: 2965, column: 25, scope: !9088)
!9110 = !DILocation(line: 2965, column: 2, scope: !9088)
!9111 = !DILocation(line: 2966, column: 13, scope: !9088)
!9112 = !DILocation(line: 2966, column: 18, scope: !9088)
!9113 = !DILocation(line: 2966, column: 2, scope: !9088)
!9114 = !DILocation(line: 2967, column: 12, scope: !9088)
!9115 = !DILocation(line: 2967, column: 17, scope: !9088)
!9116 = !DILocation(line: 2967, column: 26, scope: !9088)
!9117 = !DILocation(line: 2967, column: 24, scope: !9088)
!9118 = !DILocation(line: 2967, column: 19, scope: !9088)
!9119 = !DILocation(line: 2967, column: 2, scope: !9088)
!9120 = !DILocation(line: 2967, column: 41, scope: !9088)
!9121 = !DILocation(line: 2967, column: 46, scope: !9088)
!9122 = !DILocation(line: 2967, column: 31, scope: !9088)
!9123 = !DILocation(line: 2968, column: 13, scope: !9088)
!9124 = !DILocation(line: 2968, column: 18, scope: !9088)
!9125 = !DILocation(line: 2968, column: 2, scope: !9088)
!9126 = !DILocation(line: 2969, column: 12, scope: !9088)
!9127 = !DILocation(line: 2969, column: 17, scope: !9088)
!9128 = !DILocation(line: 2969, column: 21, scope: !9088)
!9129 = !DILocation(line: 2969, column: 19, scope: !9088)
!9130 = !DILocation(line: 2969, column: 2, scope: !9088)
!9131 = !DILocation(line: 2969, column: 35, scope: !9088)
!9132 = !DILocation(line: 2969, column: 40, scope: !9088)
!9133 = !DILocation(line: 2969, column: 25, scope: !9088)
!9134 = !DILocation(line: 2970, column: 13, scope: !9088)
!9135 = !DILocation(line: 2970, column: 18, scope: !9088)
!9136 = !DILocation(line: 2970, column: 2, scope: !9088)
!9137 = !DILocation(line: 2971, column: 12, scope: !9088)
!9138 = !DILocation(line: 2971, column: 22, scope: !9088)
!9139 = !DILocation(line: 2971, column: 20, scope: !9088)
!9140 = !DILocation(line: 2971, column: 27, scope: !9088)
!9141 = !DILocation(line: 2971, column: 25, scope: !9088)
!9142 = !DILocation(line: 2971, column: 2, scope: !9088)
!9143 = !DILocation(line: 2971, column: 41, scope: !9088)
!9144 = !DILocation(line: 2971, column: 46, scope: !9088)
!9145 = !DILocation(line: 2971, column: 31, scope: !9088)
!9146 = !DILocation(line: 2972, column: 1, scope: !9088)
!9147 = distinct !DISubprogram(name: "interp_barycentric_tri_v3", scope: !3, file: !3, line: 2974, type: !9089, scopeLine: 2975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!9148 = !DILocalVariable(name: "data", arg: 1, scope: !9147, file: !3, line: 2974, type: !6633)
!9149 = !DILocation(line: 2974, column: 38, scope: !9147)
!9150 = !DILocalVariable(name: "u", arg: 2, scope: !9147, file: !3, line: 2974, type: !9)
!9151 = !DILocation(line: 2974, column: 56, scope: !9147)
!9152 = !DILocalVariable(name: "v", arg: 3, scope: !9147, file: !3, line: 2974, type: !9)
!9153 = !DILocation(line: 2974, column: 65, scope: !9147)
!9154 = !DILocalVariable(name: "res", arg: 4, scope: !9147, file: !3, line: 2974, type: !10)
!9155 = !DILocation(line: 2974, column: 74, scope: !9147)
!9156 = !DILocalVariable(name: "vec", scope: !9147, file: !3, line: 2976, type: !117)
!9157 = !DILocation(line: 2976, column: 8, scope: !9147)
!9158 = !DILocation(line: 2978, column: 13, scope: !9147)
!9159 = !DILocation(line: 2978, column: 18, scope: !9147)
!9160 = !DILocation(line: 2978, column: 2, scope: !9147)
!9161 = !DILocation(line: 2979, column: 12, scope: !9147)
!9162 = !DILocation(line: 2979, column: 17, scope: !9147)
!9163 = !DILocation(line: 2979, column: 2, scope: !9147)
!9164 = !DILocation(line: 2980, column: 13, scope: !9147)
!9165 = !DILocation(line: 2980, column: 18, scope: !9147)
!9166 = !DILocation(line: 2980, column: 2, scope: !9147)
!9167 = !DILocation(line: 2981, column: 12, scope: !9147)
!9168 = !DILocation(line: 2981, column: 17, scope: !9147)
!9169 = !DILocation(line: 2981, column: 2, scope: !9147)
!9170 = !DILocation(line: 2981, column: 31, scope: !9147)
!9171 = !DILocation(line: 2981, column: 36, scope: !9147)
!9172 = !DILocation(line: 2981, column: 21, scope: !9147)
!9173 = !DILocation(line: 2982, column: 13, scope: !9147)
!9174 = !DILocation(line: 2982, column: 18, scope: !9147)
!9175 = !DILocation(line: 2982, column: 2, scope: !9147)
!9176 = !DILocation(line: 2983, column: 12, scope: !9147)
!9177 = !DILocation(line: 2983, column: 24, scope: !9147)
!9178 = !DILocation(line: 2983, column: 22, scope: !9147)
!9179 = !DILocation(line: 2983, column: 28, scope: !9147)
!9180 = !DILocation(line: 2983, column: 26, scope: !9147)
!9181 = !DILocation(line: 2983, column: 2, scope: !9147)
!9182 = !DILocation(line: 2983, column: 42, scope: !9147)
!9183 = !DILocation(line: 2983, column: 47, scope: !9147)
!9184 = !DILocation(line: 2983, column: 32, scope: !9147)
!9185 = !DILocation(line: 2984, column: 1, scope: !9147)
!9186 = distinct !DISubprogram(name: "orthographic_m4", scope: !3, file: !3, line: 2988, type: !9187, scopeLine: 2990, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!9187 = !DISubroutineType(types: !9188)
!9188 = !{null, !3951, !8, !8, !8, !8, !8, !8}
!9189 = !DILocalVariable(name: "matrix", arg: 1, scope: !9186, file: !3, line: 2988, type: !3951)
!9190 = !DILocation(line: 2988, column: 28, scope: !9186)
!9191 = !DILocalVariable(name: "left", arg: 2, scope: !9186, file: !3, line: 2988, type: !8)
!9192 = !DILocation(line: 2988, column: 54, scope: !9186)
!9193 = !DILocalVariable(name: "right", arg: 3, scope: !9186, file: !3, line: 2988, type: !8)
!9194 = !DILocation(line: 2988, column: 72, scope: !9186)
!9195 = !DILocalVariable(name: "bottom", arg: 4, scope: !9186, file: !3, line: 2988, type: !8)
!9196 = !DILocation(line: 2988, column: 91, scope: !9186)
!9197 = !DILocalVariable(name: "top", arg: 5, scope: !9186, file: !3, line: 2988, type: !8)
!9198 = !DILocation(line: 2988, column: 111, scope: !9186)
!9199 = !DILocalVariable(name: "nearClip", arg: 6, scope: !9186, file: !3, line: 2989, type: !8)
!9200 = !DILocation(line: 2989, column: 34, scope: !9186)
!9201 = !DILocalVariable(name: "farClip", arg: 7, scope: !9186, file: !3, line: 2989, type: !8)
!9202 = !DILocation(line: 2989, column: 56, scope: !9186)
!9203 = !DILocalVariable(name: "Xdelta", scope: !9186, file: !3, line: 2991, type: !9)
!9204 = !DILocation(line: 2991, column: 8, scope: !9186)
!9205 = !DILocalVariable(name: "Ydelta", scope: !9186, file: !3, line: 2991, type: !9)
!9206 = !DILocation(line: 2991, column: 16, scope: !9186)
!9207 = !DILocalVariable(name: "Zdelta", scope: !9186, file: !3, line: 2991, type: !9)
!9208 = !DILocation(line: 2991, column: 24, scope: !9186)
!9209 = !DILocation(line: 2993, column: 11, scope: !9186)
!9210 = !DILocation(line: 2993, column: 19, scope: !9186)
!9211 = !DILocation(line: 2993, column: 17, scope: !9186)
!9212 = !DILocation(line: 2993, column: 9, scope: !9186)
!9213 = !DILocation(line: 2994, column: 11, scope: !9186)
!9214 = !DILocation(line: 2994, column: 17, scope: !9186)
!9215 = !DILocation(line: 2994, column: 15, scope: !9186)
!9216 = !DILocation(line: 2994, column: 9, scope: !9186)
!9217 = !DILocation(line: 2995, column: 11, scope: !9186)
!9218 = !DILocation(line: 2995, column: 21, scope: !9186)
!9219 = !DILocation(line: 2995, column: 19, scope: !9186)
!9220 = !DILocation(line: 2995, column: 9, scope: !9186)
!9221 = !DILocation(line: 2996, column: 6, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !9186, file: !3, line: 2996, column: 6)
!9223 = !DILocation(line: 2996, column: 13, scope: !9222)
!9224 = !DILocation(line: 2996, column: 21, scope: !9222)
!9225 = !DILocation(line: 2996, column: 24, scope: !9222)
!9226 = !DILocation(line: 2996, column: 31, scope: !9222)
!9227 = !DILocation(line: 2996, column: 39, scope: !9222)
!9228 = !DILocation(line: 2996, column: 42, scope: !9222)
!9229 = !DILocation(line: 2996, column: 49, scope: !9222)
!9230 = !DILocation(line: 2996, column: 6, scope: !9186)
!9231 = !DILocation(line: 2997, column: 3, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9222, file: !3, line: 2996, column: 58)
!9233 = !DILocation(line: 2999, column: 10, scope: !9186)
!9234 = !DILocation(line: 2999, column: 2, scope: !9186)
!9235 = !DILocation(line: 3000, column: 24, scope: !9186)
!9236 = !DILocation(line: 3000, column: 22, scope: !9186)
!9237 = !DILocation(line: 3000, column: 2, scope: !9186)
!9238 = !DILocation(line: 3000, column: 15, scope: !9186)
!9239 = !DILocation(line: 3001, column: 19, scope: !9186)
!9240 = !DILocation(line: 3001, column: 27, scope: !9186)
!9241 = !DILocation(line: 3001, column: 25, scope: !9186)
!9242 = !DILocation(line: 3001, column: 17, scope: !9186)
!9243 = !DILocation(line: 3001, column: 35, scope: !9186)
!9244 = !DILocation(line: 3001, column: 33, scope: !9186)
!9245 = !DILocation(line: 3001, column: 2, scope: !9186)
!9246 = !DILocation(line: 3001, column: 15, scope: !9186)
!9247 = !DILocation(line: 3002, column: 24, scope: !9186)
!9248 = !DILocation(line: 3002, column: 22, scope: !9186)
!9249 = !DILocation(line: 3002, column: 2, scope: !9186)
!9250 = !DILocation(line: 3002, column: 15, scope: !9186)
!9251 = !DILocation(line: 3003, column: 19, scope: !9186)
!9252 = !DILocation(line: 3003, column: 25, scope: !9186)
!9253 = !DILocation(line: 3003, column: 23, scope: !9186)
!9254 = !DILocation(line: 3003, column: 17, scope: !9186)
!9255 = !DILocation(line: 3003, column: 35, scope: !9186)
!9256 = !DILocation(line: 3003, column: 33, scope: !9186)
!9257 = !DILocation(line: 3003, column: 2, scope: !9186)
!9258 = !DILocation(line: 3003, column: 15, scope: !9186)
!9259 = !DILocation(line: 3004, column: 25, scope: !9186)
!9260 = !DILocation(line: 3004, column: 23, scope: !9186)
!9261 = !DILocation(line: 3004, column: 2, scope: !9186)
!9262 = !DILocation(line: 3004, column: 15, scope: !9186)
!9263 = !DILocation(line: 3005, column: 19, scope: !9186)
!9264 = !DILocation(line: 3005, column: 29, scope: !9186)
!9265 = !DILocation(line: 3005, column: 27, scope: !9186)
!9266 = !DILocation(line: 3005, column: 17, scope: !9186)
!9267 = !DILocation(line: 3005, column: 41, scope: !9186)
!9268 = !DILocation(line: 3005, column: 39, scope: !9186)
!9269 = !DILocation(line: 3005, column: 2, scope: !9186)
!9270 = !DILocation(line: 3005, column: 15, scope: !9186)
!9271 = !DILocation(line: 3006, column: 1, scope: !9186)
!9272 = distinct !DISubprogram(name: "perspective_m4", scope: !3, file: !3, line: 3008, type: !9187, scopeLine: 3010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!9273 = !DILocalVariable(name: "mat", arg: 1, scope: !9272, file: !3, line: 3008, type: !3951)
!9274 = !DILocation(line: 3008, column: 27, scope: !9272)
!9275 = !DILocalVariable(name: "left", arg: 2, scope: !9272, file: !3, line: 3008, type: !8)
!9276 = !DILocation(line: 3008, column: 50, scope: !9272)
!9277 = !DILocalVariable(name: "right", arg: 3, scope: !9272, file: !3, line: 3008, type: !8)
!9278 = !DILocation(line: 3008, column: 68, scope: !9272)
!9279 = !DILocalVariable(name: "bottom", arg: 4, scope: !9272, file: !3, line: 3008, type: !8)
!9280 = !DILocation(line: 3008, column: 87, scope: !9272)
!9281 = !DILocalVariable(name: "top", arg: 5, scope: !9272, file: !3, line: 3008, type: !8)
!9282 = !DILocation(line: 3008, column: 107, scope: !9272)
!9283 = !DILocalVariable(name: "nearClip", arg: 6, scope: !9272, file: !3, line: 3009, type: !8)
!9284 = !DILocation(line: 3009, column: 33, scope: !9272)
!9285 = !DILocalVariable(name: "farClip", arg: 7, scope: !9272, file: !3, line: 3009, type: !8)
!9286 = !DILocation(line: 3009, column: 55, scope: !9272)
!9287 = !DILocalVariable(name: "Xdelta", scope: !9272, file: !3, line: 3011, type: !8)
!9288 = !DILocation(line: 3011, column: 14, scope: !9272)
!9289 = !DILocation(line: 3011, column: 23, scope: !9272)
!9290 = !DILocation(line: 3011, column: 31, scope: !9272)
!9291 = !DILocation(line: 3011, column: 29, scope: !9272)
!9292 = !DILocalVariable(name: "Ydelta", scope: !9272, file: !3, line: 3012, type: !8)
!9293 = !DILocation(line: 3012, column: 14, scope: !9272)
!9294 = !DILocation(line: 3012, column: 23, scope: !9272)
!9295 = !DILocation(line: 3012, column: 29, scope: !9272)
!9296 = !DILocation(line: 3012, column: 27, scope: !9272)
!9297 = !DILocalVariable(name: "Zdelta", scope: !9272, file: !3, line: 3013, type: !8)
!9298 = !DILocation(line: 3013, column: 14, scope: !9272)
!9299 = !DILocation(line: 3013, column: 23, scope: !9272)
!9300 = !DILocation(line: 3013, column: 33, scope: !9272)
!9301 = !DILocation(line: 3013, column: 31, scope: !9272)
!9302 = !DILocation(line: 3015, column: 6, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9272, file: !3, line: 3015, column: 6)
!9304 = !DILocation(line: 3015, column: 13, scope: !9303)
!9305 = !DILocation(line: 3015, column: 21, scope: !9303)
!9306 = !DILocation(line: 3015, column: 24, scope: !9303)
!9307 = !DILocation(line: 3015, column: 31, scope: !9303)
!9308 = !DILocation(line: 3015, column: 39, scope: !9303)
!9309 = !DILocation(line: 3015, column: 42, scope: !9303)
!9310 = !DILocation(line: 3015, column: 49, scope: !9303)
!9311 = !DILocation(line: 3015, column: 6, scope: !9272)
!9312 = !DILocation(line: 3016, column: 3, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9303, file: !3, line: 3015, column: 58)
!9314 = !DILocation(line: 3018, column: 14, scope: !9272)
!9315 = !DILocation(line: 3018, column: 23, scope: !9272)
!9316 = !DILocation(line: 3018, column: 32, scope: !9272)
!9317 = !DILocation(line: 3018, column: 30, scope: !9272)
!9318 = !DILocation(line: 3018, column: 2, scope: !9272)
!9319 = !DILocation(line: 3018, column: 12, scope: !9272)
!9320 = !DILocation(line: 3019, column: 14, scope: !9272)
!9321 = !DILocation(line: 3019, column: 23, scope: !9272)
!9322 = !DILocation(line: 3019, column: 32, scope: !9272)
!9323 = !DILocation(line: 3019, column: 30, scope: !9272)
!9324 = !DILocation(line: 3019, column: 2, scope: !9272)
!9325 = !DILocation(line: 3019, column: 12, scope: !9272)
!9326 = !DILocation(line: 3020, column: 15, scope: !9272)
!9327 = !DILocation(line: 3020, column: 23, scope: !9272)
!9328 = !DILocation(line: 3020, column: 21, scope: !9272)
!9329 = !DILocation(line: 3020, column: 31, scope: !9272)
!9330 = !DILocation(line: 3020, column: 29, scope: !9272)
!9331 = !DILocation(line: 3020, column: 2, scope: !9272)
!9332 = !DILocation(line: 3020, column: 12, scope: !9272)
!9333 = !DILocation(line: 3021, column: 15, scope: !9272)
!9334 = !DILocation(line: 3021, column: 21, scope: !9272)
!9335 = !DILocation(line: 3021, column: 19, scope: !9272)
!9336 = !DILocation(line: 3021, column: 31, scope: !9272)
!9337 = !DILocation(line: 3021, column: 29, scope: !9272)
!9338 = !DILocation(line: 3021, column: 2, scope: !9272)
!9339 = !DILocation(line: 3021, column: 12, scope: !9272)
!9340 = !DILocation(line: 3022, column: 16, scope: !9272)
!9341 = !DILocation(line: 3022, column: 26, scope: !9272)
!9342 = !DILocation(line: 3022, column: 24, scope: !9272)
!9343 = !DILocation(line: 3022, column: 14, scope: !9272)
!9344 = !DILocation(line: 3022, column: 38, scope: !9272)
!9345 = !DILocation(line: 3022, column: 36, scope: !9272)
!9346 = !DILocation(line: 3022, column: 2, scope: !9272)
!9347 = !DILocation(line: 3022, column: 12, scope: !9272)
!9348 = !DILocation(line: 3023, column: 2, scope: !9272)
!9349 = !DILocation(line: 3023, column: 12, scope: !9272)
!9350 = !DILocation(line: 3024, column: 23, scope: !9272)
!9351 = !DILocation(line: 3024, column: 21, scope: !9272)
!9352 = !DILocation(line: 3024, column: 34, scope: !9272)
!9353 = !DILocation(line: 3024, column: 32, scope: !9272)
!9354 = !DILocation(line: 3024, column: 45, scope: !9272)
!9355 = !DILocation(line: 3024, column: 43, scope: !9272)
!9356 = !DILocation(line: 3024, column: 2, scope: !9272)
!9357 = !DILocation(line: 3024, column: 12, scope: !9272)
!9358 = !DILocation(line: 3027, column: 34, scope: !9272)
!9359 = !DILocation(line: 3027, column: 44, scope: !9272)
!9360 = !DILocation(line: 3027, column: 22, scope: !9272)
!9361 = !DILocation(line: 3027, column: 32, scope: !9272)
!9362 = !DILocation(line: 3027, column: 10, scope: !9272)
!9363 = !DILocation(line: 3027, column: 20, scope: !9272)
!9364 = !DILocation(line: 3026, column: 34, scope: !9272)
!9365 = !DILocation(line: 3026, column: 44, scope: !9272)
!9366 = !DILocation(line: 3026, column: 22, scope: !9272)
!9367 = !DILocation(line: 3026, column: 32, scope: !9272)
!9368 = !DILocation(line: 3026, column: 10, scope: !9272)
!9369 = !DILocation(line: 3026, column: 20, scope: !9272)
!9370 = !DILocation(line: 3025, column: 26, scope: !9272)
!9371 = !DILocation(line: 3025, column: 36, scope: !9272)
!9372 = !DILocation(line: 3025, column: 14, scope: !9272)
!9373 = !DILocation(line: 3025, column: 24, scope: !9272)
!9374 = !DILocation(line: 3025, column: 2, scope: !9272)
!9375 = !DILocation(line: 3025, column: 12, scope: !9272)
!9376 = !DILocation(line: 3029, column: 1, scope: !9272)
!9377 = distinct !DISubprogram(name: "window_translate_m4", scope: !3, file: !3, line: 3032, type: !9378, scopeLine: 3033, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!9378 = !DISubroutineType(types: !9379)
!9379 = !{null, !3951, !3951, !8, !8}
!9380 = !DILocalVariable(name: "winmat", arg: 1, scope: !9377, file: !3, line: 3032, type: !3951)
!9381 = !DILocation(line: 3032, column: 32, scope: !9377)
!9382 = !DILocalVariable(name: "perspmat", arg: 2, scope: !9377, file: !3, line: 3032, type: !3951)
!9383 = !DILocation(line: 3032, column: 52, scope: !9377)
!9384 = !DILocalVariable(name: "x", arg: 3, scope: !9377, file: !3, line: 3032, type: !8)
!9385 = !DILocation(line: 3032, column: 80, scope: !9377)
!9386 = !DILocalVariable(name: "y", arg: 4, scope: !9377, file: !3, line: 3032, type: !8)
!9387 = !DILocation(line: 3032, column: 95, scope: !9377)
!9388 = !DILocation(line: 3034, column: 6, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9377, file: !3, line: 3034, column: 6)
!9390 = !DILocation(line: 3034, column: 19, scope: !9389)
!9391 = !DILocation(line: 3034, column: 6, scope: !9377)
!9392 = !DILocalVariable(name: "v1", scope: !9393, file: !3, line: 3036, type: !117)
!9393 = distinct !DILexicalBlock(scope: !9389, file: !3, line: 3034, column: 29)
!9394 = !DILocation(line: 3036, column: 9, scope: !9393)
!9395 = !DILocalVariable(name: "v2", scope: !9393, file: !3, line: 3037, type: !117)
!9396 = !DILocation(line: 3037, column: 9, scope: !9393)
!9397 = !DILocalVariable(name: "len1", scope: !9393, file: !3, line: 3038, type: !9)
!9398 = !DILocation(line: 3038, column: 9, scope: !9393)
!9399 = !DILocalVariable(name: "len2", scope: !9393, file: !3, line: 3038, type: !9)
!9400 = !DILocation(line: 3038, column: 15, scope: !9393)
!9401 = !DILocation(line: 3040, column: 11, scope: !9393)
!9402 = !DILocation(line: 3040, column: 3, scope: !9393)
!9403 = !DILocation(line: 3040, column: 9, scope: !9393)
!9404 = !DILocation(line: 3041, column: 11, scope: !9393)
!9405 = !DILocation(line: 3041, column: 3, scope: !9393)
!9406 = !DILocation(line: 3041, column: 9, scope: !9393)
!9407 = !DILocation(line: 3042, column: 11, scope: !9393)
!9408 = !DILocation(line: 3042, column: 3, scope: !9393)
!9409 = !DILocation(line: 3042, column: 9, scope: !9393)
!9410 = !DILocation(line: 3044, column: 11, scope: !9393)
!9411 = !DILocation(line: 3044, column: 3, scope: !9393)
!9412 = !DILocation(line: 3044, column: 9, scope: !9393)
!9413 = !DILocation(line: 3045, column: 11, scope: !9393)
!9414 = !DILocation(line: 3045, column: 3, scope: !9393)
!9415 = !DILocation(line: 3045, column: 9, scope: !9393)
!9416 = !DILocation(line: 3046, column: 11, scope: !9393)
!9417 = !DILocation(line: 3046, column: 3, scope: !9393)
!9418 = !DILocation(line: 3046, column: 9, scope: !9393)
!9419 = !DILocation(line: 3048, column: 25, scope: !9393)
!9420 = !DILocation(line: 3048, column: 18, scope: !9393)
!9421 = !DILocation(line: 3048, column: 16, scope: !9393)
!9422 = !DILocation(line: 3048, column: 8, scope: !9393)
!9423 = !DILocation(line: 3049, column: 25, scope: !9393)
!9424 = !DILocation(line: 3049, column: 18, scope: !9393)
!9425 = !DILocation(line: 3049, column: 16, scope: !9393)
!9426 = !DILocation(line: 3049, column: 8, scope: !9393)
!9427 = !DILocation(line: 3051, column: 19, scope: !9393)
!9428 = !DILocation(line: 3051, column: 26, scope: !9393)
!9429 = !DILocation(line: 3051, column: 24, scope: !9393)
!9430 = !DILocation(line: 3051, column: 41, scope: !9393)
!9431 = !DILocation(line: 3051, column: 39, scope: !9393)
!9432 = !DILocation(line: 3051, column: 3, scope: !9393)
!9433 = !DILocation(line: 3051, column: 16, scope: !9393)
!9434 = !DILocation(line: 3052, column: 19, scope: !9393)
!9435 = !DILocation(line: 3052, column: 26, scope: !9393)
!9436 = !DILocation(line: 3052, column: 24, scope: !9393)
!9437 = !DILocation(line: 3052, column: 41, scope: !9393)
!9438 = !DILocation(line: 3052, column: 39, scope: !9393)
!9439 = !DILocation(line: 3052, column: 3, scope: !9393)
!9440 = !DILocation(line: 3052, column: 16, scope: !9393)
!9441 = !DILocation(line: 3053, column: 2, scope: !9393)
!9442 = !DILocation(line: 3055, column: 19, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9389, file: !3, line: 3054, column: 7)
!9444 = !DILocation(line: 3055, column: 3, scope: !9443)
!9445 = !DILocation(line: 3055, column: 16, scope: !9443)
!9446 = !DILocation(line: 3056, column: 19, scope: !9443)
!9447 = !DILocation(line: 3056, column: 3, scope: !9443)
!9448 = !DILocation(line: 3056, column: 16, scope: !9443)
!9449 = !DILocation(line: 3058, column: 1, scope: !9377)
!9450 = distinct !DISubprogram(name: "polarview_m4", scope: !3, file: !3, line: 3074, type: !9451, scopeLine: 3075, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!9451 = !DISubroutineType(types: !9452)
!9452 = !{null, !3951, !9, !9, !9, !9}
!9453 = !DILocalVariable(name: "Vm", arg: 1, scope: !9450, file: !3, line: 3074, type: !3951)
!9454 = !DILocation(line: 3074, column: 25, scope: !9450)
!9455 = !DILocalVariable(name: "dist", arg: 2, scope: !9450, file: !3, line: 3074, type: !9)
!9456 = !DILocation(line: 3074, column: 41, scope: !9450)
!9457 = !DILocalVariable(name: "azimuth", arg: 3, scope: !9450, file: !3, line: 3074, type: !9)
!9458 = !DILocation(line: 3074, column: 53, scope: !9450)
!9459 = !DILocalVariable(name: "incidence", arg: 4, scope: !9450, file: !3, line: 3074, type: !9)
!9460 = !DILocation(line: 3074, column: 68, scope: !9450)
!9461 = !DILocalVariable(name: "twist", arg: 5, scope: !9450, file: !3, line: 3074, type: !9)
!9462 = !DILocation(line: 3074, column: 85, scope: !9450)
!9463 = !DILocation(line: 3076, column: 10, scope: !9450)
!9464 = !DILocation(line: 3076, column: 2, scope: !9450)
!9465 = !DILocation(line: 3078, column: 15, scope: !9450)
!9466 = !DILocation(line: 3078, column: 30, scope: !9450)
!9467 = !DILocation(line: 3078, column: 29, scope: !9450)
!9468 = !DILocation(line: 3078, column: 2, scope: !9450)
!9469 = !DILocation(line: 3079, column: 12, scope: !9450)
!9470 = !DILocation(line: 3079, column: 22, scope: !9450)
!9471 = !DILocation(line: 3079, column: 21, scope: !9450)
!9472 = !DILocation(line: 3079, column: 2, scope: !9450)
!9473 = !DILocation(line: 3080, column: 12, scope: !9450)
!9474 = !DILocation(line: 3080, column: 22, scope: !9450)
!9475 = !DILocation(line: 3080, column: 21, scope: !9450)
!9476 = !DILocation(line: 3080, column: 2, scope: !9450)
!9477 = !DILocation(line: 3081, column: 12, scope: !9450)
!9478 = !DILocation(line: 3081, column: 22, scope: !9450)
!9479 = !DILocation(line: 3081, column: 21, scope: !9450)
!9480 = !DILocation(line: 3081, column: 2, scope: !9450)
!9481 = !DILocation(line: 3082, column: 1, scope: !9450)
!9482 = distinct !DISubprogram(name: "lookat_m4", scope: !3, file: !3, line: 3084, type: !9483, scopeLine: 3085, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!9483 = !DISubroutineType(types: !9484)
!9484 = !{null, !3951, !9, !9, !9, !9, !9, !9, !9}
!9485 = !DILocalVariable(name: "mat", arg: 1, scope: !9482, file: !3, line: 3084, type: !3951)
!9486 = !DILocation(line: 3084, column: 22, scope: !9482)
!9487 = !DILocalVariable(name: "vx", arg: 2, scope: !9482, file: !3, line: 3084, type: !9)
!9488 = !DILocation(line: 3084, column: 39, scope: !9482)
!9489 = !DILocalVariable(name: "vy", arg: 3, scope: !9482, file: !3, line: 3084, type: !9)
!9490 = !DILocation(line: 3084, column: 49, scope: !9482)
!9491 = !DILocalVariable(name: "vz", arg: 4, scope: !9482, file: !3, line: 3084, type: !9)
!9492 = !DILocation(line: 3084, column: 59, scope: !9482)
!9493 = !DILocalVariable(name: "px", arg: 5, scope: !9482, file: !3, line: 3084, type: !9)
!9494 = !DILocation(line: 3084, column: 69, scope: !9482)
!9495 = !DILocalVariable(name: "py", arg: 6, scope: !9482, file: !3, line: 3084, type: !9)
!9496 = !DILocation(line: 3084, column: 79, scope: !9482)
!9497 = !DILocalVariable(name: "pz", arg: 7, scope: !9482, file: !3, line: 3084, type: !9)
!9498 = !DILocation(line: 3084, column: 89, scope: !9482)
!9499 = !DILocalVariable(name: "twist", arg: 8, scope: !9482, file: !3, line: 3084, type: !9)
!9500 = !DILocation(line: 3084, column: 99, scope: !9482)
!9501 = !DILocalVariable(name: "sine", scope: !9482, file: !3, line: 3086, type: !9)
!9502 = !DILocation(line: 3086, column: 8, scope: !9482)
!9503 = !DILocalVariable(name: "cosine", scope: !9482, file: !3, line: 3086, type: !9)
!9504 = !DILocation(line: 3086, column: 14, scope: !9482)
!9505 = !DILocalVariable(name: "hyp", scope: !9482, file: !3, line: 3086, type: !9)
!9506 = !DILocation(line: 3086, column: 22, scope: !9482)
!9507 = !DILocalVariable(name: "hyp1", scope: !9482, file: !3, line: 3086, type: !9)
!9508 = !DILocation(line: 3086, column: 27, scope: !9482)
!9509 = !DILocalVariable(name: "dx", scope: !9482, file: !3, line: 3086, type: !9)
!9510 = !DILocation(line: 3086, column: 33, scope: !9482)
!9511 = !DILocalVariable(name: "dy", scope: !9482, file: !3, line: 3086, type: !9)
!9512 = !DILocation(line: 3086, column: 37, scope: !9482)
!9513 = !DILocalVariable(name: "dz", scope: !9482, file: !3, line: 3086, type: !9)
!9514 = !DILocation(line: 3086, column: 41, scope: !9482)
!9515 = !DILocalVariable(name: "mat1", scope: !9482, file: !3, line: 3087, type: !9516)
!9516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 512, elements: !9517)
!9517 = !{!3954, !3954}
!9518 = !DILocation(line: 3087, column: 8, scope: !9482)
!9519 = !DILocation(line: 3089, column: 10, scope: !9482)
!9520 = !DILocation(line: 3089, column: 2, scope: !9482)
!9521 = !DILocation(line: 3090, column: 10, scope: !9482)
!9522 = !DILocation(line: 3090, column: 2, scope: !9482)
!9523 = !DILocation(line: 3092, column: 12, scope: !9482)
!9524 = !DILocation(line: 3092, column: 23, scope: !9482)
!9525 = !DILocation(line: 3092, column: 22, scope: !9482)
!9526 = !DILocation(line: 3092, column: 2, scope: !9482)
!9527 = !DILocation(line: 3094, column: 7, scope: !9482)
!9528 = !DILocation(line: 3094, column: 12, scope: !9482)
!9529 = !DILocation(line: 3094, column: 10, scope: !9482)
!9530 = !DILocation(line: 3094, column: 5, scope: !9482)
!9531 = !DILocation(line: 3095, column: 7, scope: !9482)
!9532 = !DILocation(line: 3095, column: 12, scope: !9482)
!9533 = !DILocation(line: 3095, column: 10, scope: !9482)
!9534 = !DILocation(line: 3095, column: 5, scope: !9482)
!9535 = !DILocation(line: 3096, column: 7, scope: !9482)
!9536 = !DILocation(line: 3096, column: 12, scope: !9482)
!9537 = !DILocation(line: 3096, column: 10, scope: !9482)
!9538 = !DILocation(line: 3096, column: 5, scope: !9482)
!9539 = !DILocation(line: 3097, column: 8, scope: !9482)
!9540 = !DILocation(line: 3097, column: 13, scope: !9482)
!9541 = !DILocation(line: 3097, column: 11, scope: !9482)
!9542 = !DILocation(line: 3097, column: 18, scope: !9482)
!9543 = !DILocation(line: 3097, column: 23, scope: !9482)
!9544 = !DILocation(line: 3097, column: 21, scope: !9482)
!9545 = !DILocation(line: 3097, column: 16, scope: !9482)
!9546 = !DILocation(line: 3097, column: 6, scope: !9482)
!9547 = !DILocation(line: 3098, column: 15, scope: !9482)
!9548 = !DILocation(line: 3098, column: 20, scope: !9482)
!9549 = !DILocation(line: 3098, column: 18, scope: !9482)
!9550 = !DILocation(line: 3098, column: 25, scope: !9482)
!9551 = !DILocation(line: 3098, column: 23, scope: !9482)
!9552 = !DILocation(line: 3098, column: 9, scope: !9482)
!9553 = !DILocation(line: 3098, column: 7, scope: !9482)
!9554 = !DILocation(line: 3099, column: 14, scope: !9482)
!9555 = !DILocation(line: 3099, column: 8, scope: !9482)
!9556 = !DILocation(line: 3099, column: 6, scope: !9482)
!9557 = !DILocation(line: 3101, column: 6, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9482, file: !3, line: 3101, column: 6)
!9559 = !DILocation(line: 3101, column: 11, scope: !9558)
!9560 = !DILocation(line: 3101, column: 6, scope: !9482)
!9561 = !DILocation(line: 3102, column: 11, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9558, file: !3, line: 3101, column: 20)
!9563 = !DILocation(line: 3102, column: 10, scope: !9562)
!9564 = !DILocation(line: 3102, column: 16, scope: !9562)
!9565 = !DILocation(line: 3102, column: 14, scope: !9562)
!9566 = !DILocation(line: 3102, column: 8, scope: !9562)
!9567 = !DILocation(line: 3103, column: 12, scope: !9562)
!9568 = !DILocation(line: 3103, column: 18, scope: !9562)
!9569 = !DILocation(line: 3103, column: 16, scope: !9562)
!9570 = !DILocation(line: 3103, column: 10, scope: !9562)
!9571 = !DILocation(line: 3104, column: 2, scope: !9562)
!9572 = !DILocation(line: 3106, column: 8, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9558, file: !3, line: 3105, column: 7)
!9574 = !DILocation(line: 3107, column: 10, scope: !9573)
!9575 = !DILocation(line: 3109, column: 15, scope: !9482)
!9576 = !DILocation(line: 3109, column: 2, scope: !9482)
!9577 = !DILocation(line: 3109, column: 13, scope: !9482)
!9578 = !DILocation(line: 3110, column: 15, scope: !9482)
!9579 = !DILocation(line: 3110, column: 2, scope: !9482)
!9580 = !DILocation(line: 3110, column: 13, scope: !9482)
!9581 = !DILocation(line: 3111, column: 16, scope: !9482)
!9582 = !DILocation(line: 3111, column: 15, scope: !9482)
!9583 = !DILocation(line: 3111, column: 2, scope: !9482)
!9584 = !DILocation(line: 3111, column: 13, scope: !9482)
!9585 = !DILocation(line: 3112, column: 15, scope: !9482)
!9586 = !DILocation(line: 3112, column: 2, scope: !9482)
!9587 = !DILocation(line: 3112, column: 13, scope: !9482)
!9588 = !DILocation(line: 3114, column: 15, scope: !9482)
!9589 = !DILocation(line: 3114, column: 21, scope: !9482)
!9590 = !DILocation(line: 3114, column: 2, scope: !9482)
!9591 = !DILocation(line: 3116, column: 15, scope: !9482)
!9592 = !DILocation(line: 3116, column: 26, scope: !9482)
!9593 = !DILocation(line: 3116, column: 2, scope: !9482)
!9594 = !DILocation(line: 3116, column: 13, scope: !9482)
!9595 = !DILocation(line: 3117, column: 15, scope: !9482)
!9596 = !DILocation(line: 3117, column: 26, scope: !9482)
!9597 = !DILocation(line: 3117, column: 2, scope: !9482)
!9598 = !DILocation(line: 3117, column: 13, scope: !9482)
!9599 = !DILocation(line: 3120, column: 6, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9482, file: !3, line: 3120, column: 6)
!9601 = !DILocation(line: 3120, column: 10, scope: !9600)
!9602 = !DILocation(line: 3120, column: 6, scope: !9482)
!9603 = !DILocation(line: 3121, column: 10, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9600, file: !3, line: 3120, column: 19)
!9605 = !DILocation(line: 3121, column: 15, scope: !9604)
!9606 = !DILocation(line: 3121, column: 13, scope: !9604)
!9607 = !DILocation(line: 3121, column: 8, scope: !9604)
!9608 = !DILocation(line: 3122, column: 13, scope: !9604)
!9609 = !DILocation(line: 3122, column: 12, scope: !9604)
!9610 = !DILocation(line: 3122, column: 18, scope: !9604)
!9611 = !DILocation(line: 3122, column: 16, scope: !9604)
!9612 = !DILocation(line: 3122, column: 10, scope: !9604)
!9613 = !DILocation(line: 3123, column: 2, scope: !9604)
!9614 = !DILocation(line: 3125, column: 8, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9600, file: !3, line: 3124, column: 7)
!9616 = !DILocation(line: 3126, column: 10, scope: !9615)
!9617 = !DILocation(line: 3128, column: 15, scope: !9482)
!9618 = !DILocation(line: 3128, column: 2, scope: !9482)
!9619 = !DILocation(line: 3128, column: 13, scope: !9482)
!9620 = !DILocation(line: 3129, column: 16, scope: !9482)
!9621 = !DILocation(line: 3129, column: 15, scope: !9482)
!9622 = !DILocation(line: 3129, column: 2, scope: !9482)
!9623 = !DILocation(line: 3129, column: 13, scope: !9482)
!9624 = !DILocation(line: 3130, column: 15, scope: !9482)
!9625 = !DILocation(line: 3130, column: 2, scope: !9482)
!9626 = !DILocation(line: 3130, column: 13, scope: !9482)
!9627 = !DILocation(line: 3131, column: 15, scope: !9482)
!9628 = !DILocation(line: 3131, column: 2, scope: !9482)
!9629 = !DILocation(line: 3131, column: 13, scope: !9482)
!9630 = !DILocation(line: 3133, column: 15, scope: !9482)
!9631 = !DILocation(line: 3133, column: 21, scope: !9482)
!9632 = !DILocation(line: 3133, column: 2, scope: !9482)
!9633 = !DILocation(line: 3134, column: 15, scope: !9482)
!9634 = !DILocation(line: 3134, column: 21, scope: !9482)
!9635 = !DILocation(line: 3134, column: 20, scope: !9482)
!9636 = !DILocation(line: 3134, column: 26, scope: !9482)
!9637 = !DILocation(line: 3134, column: 25, scope: !9482)
!9638 = !DILocation(line: 3134, column: 31, scope: !9482)
!9639 = !DILocation(line: 3134, column: 30, scope: !9482)
!9640 = !DILocation(line: 3134, column: 2, scope: !9482)
!9641 = !DILocation(line: 3135, column: 1, scope: !9482)
!9642 = distinct !DISubprogram(name: "i_multmatrix", scope: !3, file: !3, line: 3060, type: !9643, scopeLine: 3061, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!9643 = !DISubroutineType(types: !9644)
!9644 = !{null, !3951, !3951}
!9645 = !DILocalVariable(name: "icand", arg: 1, scope: !9642, file: !3, line: 3060, type: !3951)
!9646 = !DILocation(line: 3060, column: 32, scope: !9642)
!9647 = !DILocalVariable(name: "Vm", arg: 2, scope: !9642, file: !3, line: 3060, type: !3951)
!9648 = !DILocation(line: 3060, column: 51, scope: !9642)
!9649 = !DILocalVariable(name: "row", scope: !9642, file: !3, line: 3062, type: !17)
!9650 = !DILocation(line: 3062, column: 6, scope: !9642)
!9651 = !DILocalVariable(name: "col", scope: !9642, file: !3, line: 3062, type: !17)
!9652 = !DILocation(line: 3062, column: 11, scope: !9642)
!9653 = !DILocalVariable(name: "temp", scope: !9642, file: !3, line: 3063, type: !9516)
!9654 = !DILocation(line: 3063, column: 8, scope: !9642)
!9655 = !DILocation(line: 3065, column: 11, scope: !9656)
!9656 = distinct !DILexicalBlock(scope: !9642, file: !3, line: 3065, column: 2)
!9657 = !DILocation(line: 3065, column: 7, scope: !9656)
!9658 = !DILocation(line: 3065, column: 16, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9656, file: !3, line: 3065, column: 2)
!9660 = !DILocation(line: 3065, column: 20, scope: !9659)
!9661 = !DILocation(line: 3065, column: 2, scope: !9656)
!9662 = !DILocation(line: 3066, column: 12, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9659, file: !3, line: 3066, column: 3)
!9664 = !DILocation(line: 3066, column: 8, scope: !9663)
!9665 = !DILocation(line: 3066, column: 17, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9663, file: !3, line: 3066, column: 3)
!9667 = !DILocation(line: 3066, column: 21, scope: !9666)
!9668 = !DILocation(line: 3066, column: 3, scope: !9663)
!9669 = !DILocation(line: 3067, column: 22, scope: !9666)
!9670 = !DILocation(line: 3067, column: 28, scope: !9666)
!9671 = !DILocation(line: 3067, column: 38, scope: !9666)
!9672 = !DILocation(line: 3067, column: 44, scope: !9666)
!9673 = !DILocation(line: 3067, column: 36, scope: !9666)
!9674 = !DILocation(line: 3068, column: 22, scope: !9666)
!9675 = !DILocation(line: 3068, column: 28, scope: !9666)
!9676 = !DILocation(line: 3068, column: 38, scope: !9666)
!9677 = !DILocation(line: 3068, column: 44, scope: !9666)
!9678 = !DILocation(line: 3068, column: 36, scope: !9666)
!9679 = !DILocation(line: 3067, column: 49, scope: !9666)
!9680 = !DILocation(line: 3069, column: 22, scope: !9666)
!9681 = !DILocation(line: 3069, column: 28, scope: !9666)
!9682 = !DILocation(line: 3069, column: 38, scope: !9666)
!9683 = !DILocation(line: 3069, column: 44, scope: !9666)
!9684 = !DILocation(line: 3069, column: 36, scope: !9666)
!9685 = !DILocation(line: 3068, column: 49, scope: !9666)
!9686 = !DILocation(line: 3070, column: 22, scope: !9666)
!9687 = !DILocation(line: 3070, column: 28, scope: !9666)
!9688 = !DILocation(line: 3070, column: 38, scope: !9666)
!9689 = !DILocation(line: 3070, column: 44, scope: !9666)
!9690 = !DILocation(line: 3070, column: 36, scope: !9666)
!9691 = !DILocation(line: 3069, column: 49, scope: !9666)
!9692 = !DILocation(line: 3067, column: 9, scope: !9666)
!9693 = !DILocation(line: 3067, column: 4, scope: !9666)
!9694 = !DILocation(line: 3067, column: 14, scope: !9666)
!9695 = !DILocation(line: 3067, column: 19, scope: !9666)
!9696 = !DILocation(line: 3066, column: 29, scope: !9666)
!9697 = !DILocation(line: 3066, column: 3, scope: !9666)
!9698 = distinct !{!9698, !9668, !9699}
!9699 = !DILocation(line: 3070, column: 48, scope: !9663)
!9700 = !DILocation(line: 3065, column: 28, scope: !9659)
!9701 = !DILocation(line: 3065, column: 2, scope: !9659)
!9702 = distinct !{!9702, !9661, !9703}
!9703 = !DILocation(line: 3070, column: 48, scope: !9656)
!9704 = !DILocation(line: 3071, column: 13, scope: !9642)
!9705 = !DILocation(line: 3071, column: 17, scope: !9642)
!9706 = !DILocation(line: 3071, column: 2, scope: !9642)
!9707 = !DILocation(line: 3072, column: 1, scope: !9642)
!9708 = distinct !DISubprogram(name: "box_clip_bounds_m4", scope: !3, file: !3, line: 3137, type: !9709, scopeLine: 3138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!9709 = !DISubroutineType(types: !9710)
!9710 = !{!17, !6633, !7, !3951}
!9711 = !DILocalVariable(name: "boundbox", arg: 1, scope: !9708, file: !3, line: 3137, type: !6633)
!9712 = !DILocation(line: 3137, column: 30, scope: !9708)
!9713 = !DILocalVariable(name: "bounds", arg: 2, scope: !9708, file: !3, line: 3137, type: !7)
!9714 = !DILocation(line: 3137, column: 58, scope: !9708)
!9715 = !DILocalVariable(name: "winmat", arg: 3, scope: !9708, file: !3, line: 3137, type: !3951)
!9716 = !DILocation(line: 3137, column: 75, scope: !9708)
!9717 = !DILocalVariable(name: "mat", scope: !9708, file: !3, line: 3139, type: !9516)
!9718 = !DILocation(line: 3139, column: 8, scope: !9708)
!9719 = !DILocalVariable(name: "vec", scope: !9708, file: !3, line: 3139, type: !3952)
!9720 = !DILocation(line: 3139, column: 19, scope: !9708)
!9721 = !DILocalVariable(name: "a", scope: !9708, file: !3, line: 3140, type: !17)
!9722 = !DILocation(line: 3140, column: 6, scope: !9708)
!9723 = !DILocalVariable(name: "fl", scope: !9708, file: !3, line: 3140, type: !17)
!9724 = !DILocation(line: 3140, column: 9, scope: !9708)
!9725 = !DILocalVariable(name: "flag", scope: !9708, file: !3, line: 3140, type: !17)
!9726 = !DILocation(line: 3140, column: 13, scope: !9708)
!9727 = !DILocation(line: 3142, column: 13, scope: !9708)
!9728 = !DILocation(line: 3142, column: 18, scope: !9708)
!9729 = !DILocation(line: 3142, column: 2, scope: !9708)
!9730 = !DILocation(line: 3144, column: 9, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9708, file: !3, line: 3144, column: 2)
!9732 = !DILocation(line: 3144, column: 7, scope: !9731)
!9733 = !DILocation(line: 3144, column: 14, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9731, file: !3, line: 3144, column: 2)
!9735 = !DILocation(line: 3144, column: 16, scope: !9734)
!9736 = !DILocation(line: 3144, column: 2, scope: !9731)
!9737 = !DILocation(line: 3145, column: 13, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9734, file: !3, line: 3144, column: 26)
!9739 = !DILocation(line: 3145, column: 15, scope: !9738)
!9740 = !DILocation(line: 3145, column: 12, scope: !9738)
!9741 = !DILocation(line: 3145, column: 22, scope: !9738)
!9742 = !DILocation(line: 3145, column: 39, scope: !9738)
!9743 = !DILocation(line: 3145, column: 3, scope: !9738)
!9744 = !DILocation(line: 3145, column: 10, scope: !9738)
!9745 = !DILocation(line: 3146, column: 13, scope: !9738)
!9746 = !DILocation(line: 3146, column: 15, scope: !9738)
!9747 = !DILocation(line: 3146, column: 12, scope: !9738)
!9748 = !DILocation(line: 3146, column: 22, scope: !9738)
!9749 = !DILocation(line: 3146, column: 39, scope: !9738)
!9750 = !DILocation(line: 3146, column: 3, scope: !9738)
!9751 = !DILocation(line: 3146, column: 10, scope: !9738)
!9752 = !DILocation(line: 3147, column: 13, scope: !9738)
!9753 = !DILocation(line: 3147, column: 15, scope: !9738)
!9754 = !DILocation(line: 3147, column: 12, scope: !9738)
!9755 = !DILocation(line: 3147, column: 22, scope: !9738)
!9756 = !DILocation(line: 3147, column: 39, scope: !9738)
!9757 = !DILocation(line: 3147, column: 3, scope: !9738)
!9758 = !DILocation(line: 3147, column: 10, scope: !9738)
!9759 = !DILocation(line: 3148, column: 3, scope: !9738)
!9760 = !DILocation(line: 3148, column: 10, scope: !9738)
!9761 = !DILocation(line: 3149, column: 13, scope: !9738)
!9762 = !DILocation(line: 3149, column: 18, scope: !9738)
!9763 = !DILocation(line: 3149, column: 3, scope: !9738)
!9764 = !DILocation(line: 3151, column: 6, scope: !9738)
!9765 = !DILocation(line: 3152, column: 7, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9738, file: !3, line: 3152, column: 7)
!9767 = !DILocation(line: 3152, column: 7, scope: !9738)
!9768 = !DILocation(line: 3153, column: 8, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9770, file: !3, line: 3153, column: 8)
!9770 = distinct !DILexicalBlock(scope: !9766, file: !3, line: 3152, column: 15)
!9771 = !DILocation(line: 3153, column: 17, scope: !9769)
!9772 = !DILocation(line: 3153, column: 29, scope: !9769)
!9773 = !DILocation(line: 3153, column: 27, scope: !9769)
!9774 = !DILocation(line: 3153, column: 15, scope: !9769)
!9775 = !DILocation(line: 3153, column: 8, scope: !9770)
!9776 = !DILocation(line: 3153, column: 40, scope: !9769)
!9777 = !DILocation(line: 3153, column: 37, scope: !9769)
!9778 = !DILocation(line: 3154, column: 8, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9770, file: !3, line: 3154, column: 8)
!9780 = !DILocation(line: 3154, column: 17, scope: !9779)
!9781 = !DILocation(line: 3154, column: 29, scope: !9779)
!9782 = !DILocation(line: 3154, column: 27, scope: !9779)
!9783 = !DILocation(line: 3154, column: 15, scope: !9779)
!9784 = !DILocation(line: 3154, column: 8, scope: !9770)
!9785 = !DILocation(line: 3154, column: 40, scope: !9779)
!9786 = !DILocation(line: 3154, column: 37, scope: !9779)
!9787 = !DILocation(line: 3155, column: 8, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9770, file: !3, line: 3155, column: 8)
!9789 = !DILocation(line: 3155, column: 17, scope: !9788)
!9790 = !DILocation(line: 3155, column: 29, scope: !9788)
!9791 = !DILocation(line: 3155, column: 27, scope: !9788)
!9792 = !DILocation(line: 3155, column: 15, scope: !9788)
!9793 = !DILocation(line: 3155, column: 8, scope: !9770)
!9794 = !DILocation(line: 3155, column: 40, scope: !9788)
!9795 = !DILocation(line: 3155, column: 37, scope: !9788)
!9796 = !DILocation(line: 3156, column: 8, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9770, file: !3, line: 3156, column: 8)
!9798 = !DILocation(line: 3156, column: 17, scope: !9797)
!9799 = !DILocation(line: 3156, column: 29, scope: !9797)
!9800 = !DILocation(line: 3156, column: 27, scope: !9797)
!9801 = !DILocation(line: 3156, column: 15, scope: !9797)
!9802 = !DILocation(line: 3156, column: 8, scope: !9770)
!9803 = !DILocation(line: 3156, column: 40, scope: !9797)
!9804 = !DILocation(line: 3156, column: 37, scope: !9797)
!9805 = !DILocation(line: 3157, column: 3, scope: !9770)
!9806 = !DILocation(line: 3159, column: 8, scope: !9807)
!9807 = distinct !DILexicalBlock(scope: !9808, file: !3, line: 3159, column: 8)
!9808 = distinct !DILexicalBlock(scope: !9766, file: !3, line: 3158, column: 8)
!9809 = !DILocation(line: 3159, column: 18, scope: !9807)
!9810 = !DILocation(line: 3159, column: 17, scope: !9807)
!9811 = !DILocation(line: 3159, column: 15, scope: !9807)
!9812 = !DILocation(line: 3159, column: 8, scope: !9808)
!9813 = !DILocation(line: 3159, column: 29, scope: !9807)
!9814 = !DILocation(line: 3159, column: 26, scope: !9807)
!9815 = !DILocation(line: 3160, column: 8, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9808, file: !3, line: 3160, column: 8)
!9817 = !DILocation(line: 3160, column: 17, scope: !9816)
!9818 = !DILocation(line: 3160, column: 15, scope: !9816)
!9819 = !DILocation(line: 3160, column: 8, scope: !9808)
!9820 = !DILocation(line: 3160, column: 28, scope: !9816)
!9821 = !DILocation(line: 3160, column: 25, scope: !9816)
!9822 = !DILocation(line: 3161, column: 8, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9808, file: !3, line: 3161, column: 8)
!9824 = !DILocation(line: 3161, column: 18, scope: !9823)
!9825 = !DILocation(line: 3161, column: 17, scope: !9823)
!9826 = !DILocation(line: 3161, column: 15, scope: !9823)
!9827 = !DILocation(line: 3161, column: 8, scope: !9808)
!9828 = !DILocation(line: 3161, column: 29, scope: !9823)
!9829 = !DILocation(line: 3161, column: 26, scope: !9823)
!9830 = !DILocation(line: 3162, column: 8, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9808, file: !3, line: 3162, column: 8)
!9832 = !DILocation(line: 3162, column: 17, scope: !9831)
!9833 = !DILocation(line: 3162, column: 15, scope: !9831)
!9834 = !DILocation(line: 3162, column: 8, scope: !9808)
!9835 = !DILocation(line: 3162, column: 28, scope: !9831)
!9836 = !DILocation(line: 3162, column: 25, scope: !9831)
!9837 = !DILocation(line: 3164, column: 7, scope: !9838)
!9838 = distinct !DILexicalBlock(scope: !9738, file: !3, line: 3164, column: 7)
!9839 = !DILocation(line: 3164, column: 17, scope: !9838)
!9840 = !DILocation(line: 3164, column: 16, scope: !9838)
!9841 = !DILocation(line: 3164, column: 14, scope: !9838)
!9842 = !DILocation(line: 3164, column: 7, scope: !9738)
!9843 = !DILocation(line: 3164, column: 28, scope: !9838)
!9844 = !DILocation(line: 3164, column: 25, scope: !9838)
!9845 = !DILocation(line: 3165, column: 7, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9738, file: !3, line: 3165, column: 7)
!9847 = !DILocation(line: 3165, column: 16, scope: !9846)
!9848 = !DILocation(line: 3165, column: 14, scope: !9846)
!9849 = !DILocation(line: 3165, column: 7, scope: !9738)
!9850 = !DILocation(line: 3165, column: 27, scope: !9846)
!9851 = !DILocation(line: 3165, column: 24, scope: !9846)
!9852 = !DILocation(line: 3167, column: 11, scope: !9738)
!9853 = !DILocation(line: 3167, column: 8, scope: !9738)
!9854 = !DILocation(line: 3168, column: 7, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9738, file: !3, line: 3168, column: 7)
!9856 = !DILocation(line: 3168, column: 12, scope: !9855)
!9857 = !DILocation(line: 3168, column: 7, scope: !9738)
!9858 = !DILocation(line: 3168, column: 18, scope: !9855)
!9859 = !DILocation(line: 3169, column: 2, scope: !9738)
!9860 = !DILocation(line: 3144, column: 22, scope: !9734)
!9861 = !DILocation(line: 3144, column: 2, scope: !9734)
!9862 = distinct !{!9862, !9736, !9863}
!9863 = !DILocation(line: 3169, column: 2, scope: !9731)
!9864 = !DILocation(line: 3171, column: 9, scope: !9708)
!9865 = !DILocation(line: 3171, column: 2, scope: !9708)
!9866 = !DILocation(line: 3172, column: 1, scope: !9708)
!9867 = distinct !DISubprogram(name: "box_minmax_bounds_m4", scope: !3, file: !3, line: 3174, type: !9868, scopeLine: 3175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!9868 = !DISubroutineType(types: !9869)
!9869 = !{null, !10, !10, !6633, !3951}
!9870 = !DILocalVariable(name: "min", arg: 1, scope: !9867, file: !3, line: 3174, type: !10)
!9871 = !DILocation(line: 3174, column: 33, scope: !9867)
!9872 = !DILocalVariable(name: "max", arg: 2, scope: !9867, file: !3, line: 3174, type: !10)
!9873 = !DILocation(line: 3174, column: 47, scope: !9867)
!9874 = !DILocalVariable(name: "boundbox", arg: 3, scope: !9867, file: !3, line: 3174, type: !6633)
!9875 = !DILocation(line: 3174, column: 61, scope: !9867)
!9876 = !DILocalVariable(name: "mat", arg: 4, scope: !9867, file: !3, line: 3174, type: !3951)
!9877 = !DILocation(line: 3174, column: 83, scope: !9867)
!9878 = !DILocalVariable(name: "mn", scope: !9867, file: !3, line: 3176, type: !117)
!9879 = !DILocation(line: 3176, column: 8, scope: !9867)
!9880 = !DILocalVariable(name: "mx", scope: !9867, file: !3, line: 3176, type: !117)
!9881 = !DILocation(line: 3176, column: 15, scope: !9867)
!9882 = !DILocalVariable(name: "vec", scope: !9867, file: !3, line: 3176, type: !117)
!9883 = !DILocation(line: 3176, column: 22, scope: !9867)
!9884 = !DILocalVariable(name: "a", scope: !9867, file: !3, line: 3177, type: !17)
!9885 = !DILocation(line: 3177, column: 6, scope: !9867)
!9886 = !DILocation(line: 3179, column: 13, scope: !9867)
!9887 = !DILocation(line: 3179, column: 17, scope: !9867)
!9888 = !DILocation(line: 3179, column: 2, scope: !9867)
!9889 = !DILocation(line: 3180, column: 13, scope: !9867)
!9890 = !DILocation(line: 3180, column: 17, scope: !9867)
!9891 = !DILocation(line: 3180, column: 2, scope: !9867)
!9892 = !DILocation(line: 3182, column: 9, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9867, file: !3, line: 3182, column: 2)
!9894 = !DILocation(line: 3182, column: 7, scope: !9893)
!9895 = !DILocation(line: 3182, column: 14, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !9893, file: !3, line: 3182, column: 2)
!9897 = !DILocation(line: 3182, column: 16, scope: !9896)
!9898 = !DILocation(line: 3182, column: 2, scope: !9893)
!9899 = !DILocation(line: 3183, column: 13, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9896, file: !3, line: 3182, column: 26)
!9901 = !DILocation(line: 3183, column: 15, scope: !9900)
!9902 = !DILocation(line: 3183, column: 12, scope: !9900)
!9903 = !DILocation(line: 3183, column: 22, scope: !9900)
!9904 = !DILocation(line: 3183, column: 39, scope: !9900)
!9905 = !DILocation(line: 3183, column: 3, scope: !9900)
!9906 = !DILocation(line: 3183, column: 10, scope: !9900)
!9907 = !DILocation(line: 3184, column: 13, scope: !9900)
!9908 = !DILocation(line: 3184, column: 15, scope: !9900)
!9909 = !DILocation(line: 3184, column: 12, scope: !9900)
!9910 = !DILocation(line: 3184, column: 22, scope: !9900)
!9911 = !DILocation(line: 3184, column: 39, scope: !9900)
!9912 = !DILocation(line: 3184, column: 3, scope: !9900)
!9913 = !DILocation(line: 3184, column: 10, scope: !9900)
!9914 = !DILocation(line: 3185, column: 13, scope: !9900)
!9915 = !DILocation(line: 3185, column: 15, scope: !9900)
!9916 = !DILocation(line: 3185, column: 12, scope: !9900)
!9917 = !DILocation(line: 3185, column: 22, scope: !9900)
!9918 = !DILocation(line: 3185, column: 39, scope: !9900)
!9919 = !DILocation(line: 3185, column: 3, scope: !9900)
!9920 = !DILocation(line: 3185, column: 10, scope: !9900)
!9921 = !DILocation(line: 3187, column: 13, scope: !9900)
!9922 = !DILocation(line: 3187, column: 18, scope: !9900)
!9923 = !DILocation(line: 3187, column: 3, scope: !9900)
!9924 = !DILocation(line: 3188, column: 18, scope: !9900)
!9925 = !DILocation(line: 3188, column: 22, scope: !9900)
!9926 = !DILocation(line: 3188, column: 26, scope: !9900)
!9927 = !DILocation(line: 3188, column: 3, scope: !9900)
!9928 = !DILocation(line: 3189, column: 2, scope: !9900)
!9929 = !DILocation(line: 3182, column: 22, scope: !9896)
!9930 = !DILocation(line: 3182, column: 2, scope: !9896)
!9931 = distinct !{!9931, !9898, !9932}
!9932 = !DILocation(line: 3189, column: 2, scope: !9893)
!9933 = !DILocation(line: 3191, column: 13, scope: !9867)
!9934 = !DILocation(line: 3191, column: 18, scope: !9867)
!9935 = !DILocation(line: 3191, column: 2, scope: !9867)
!9936 = !DILocation(line: 3192, column: 13, scope: !9867)
!9937 = !DILocation(line: 3192, column: 18, scope: !9867)
!9938 = !DILocation(line: 3192, column: 2, scope: !9867)
!9939 = !DILocation(line: 3193, column: 1, scope: !9867)
!9940 = distinct !DISubprogram(name: "map_to_tube", scope: !3, file: !3, line: 3197, type: !9941, scopeLine: 3198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!9941 = !DISubroutineType(types: !9942)
!9942 = !{null, !10, !10, !8, !8, !8}
!9943 = !DILocalVariable(name: "r_u", arg: 1, scope: !9940, file: !3, line: 3197, type: !10)
!9944 = !DILocation(line: 3197, column: 25, scope: !9940)
!9945 = !DILocalVariable(name: "r_v", arg: 2, scope: !9940, file: !3, line: 3197, type: !10)
!9946 = !DILocation(line: 3197, column: 37, scope: !9940)
!9947 = !DILocalVariable(name: "x", arg: 3, scope: !9940, file: !3, line: 3197, type: !8)
!9948 = !DILocation(line: 3197, column: 54, scope: !9940)
!9949 = !DILocalVariable(name: "y", arg: 4, scope: !9940, file: !3, line: 3197, type: !8)
!9950 = !DILocation(line: 3197, column: 69, scope: !9940)
!9951 = !DILocalVariable(name: "z", arg: 5, scope: !9940, file: !3, line: 3197, type: !8)
!9952 = !DILocation(line: 3197, column: 84, scope: !9940)
!9953 = !DILocalVariable(name: "len", scope: !9940, file: !3, line: 3199, type: !9)
!9954 = !DILocation(line: 3199, column: 8, scope: !9940)
!9955 = !DILocation(line: 3201, column: 10, scope: !9940)
!9956 = !DILocation(line: 3201, column: 12, scope: !9940)
!9957 = !DILocation(line: 3201, column: 20, scope: !9940)
!9958 = !DILocation(line: 3201, column: 3, scope: !9940)
!9959 = !DILocation(line: 3201, column: 7, scope: !9940)
!9960 = !DILocation(line: 3203, column: 14, scope: !9940)
!9961 = !DILocation(line: 3203, column: 18, scope: !9940)
!9962 = !DILocation(line: 3203, column: 16, scope: !9940)
!9963 = !DILocation(line: 3203, column: 22, scope: !9940)
!9964 = !DILocation(line: 3203, column: 26, scope: !9940)
!9965 = !DILocation(line: 3203, column: 24, scope: !9940)
!9966 = !DILocation(line: 3203, column: 20, scope: !9940)
!9967 = !DILocation(line: 3203, column: 8, scope: !9940)
!9968 = !DILocation(line: 3203, column: 6, scope: !9940)
!9969 = !DILocation(line: 3204, column: 6, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9940, file: !3, line: 3204, column: 6)
!9971 = !DILocation(line: 3204, column: 10, scope: !9970)
!9972 = !DILocation(line: 3204, column: 6, scope: !9940)
!9973 = !DILocation(line: 3205, column: 26, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9970, file: !3, line: 3204, column: 18)
!9975 = !DILocation(line: 3205, column: 30, scope: !9974)
!9976 = !DILocation(line: 3205, column: 28, scope: !9974)
!9977 = !DILocation(line: 3205, column: 35, scope: !9974)
!9978 = !DILocation(line: 3205, column: 39, scope: !9974)
!9979 = !DILocation(line: 3205, column: 37, scope: !9974)
!9980 = !DILocation(line: 3205, column: 19, scope: !9974)
!9981 = !DILocation(line: 3205, column: 44, scope: !9974)
!9982 = !DILocation(line: 3205, column: 16, scope: !9974)
!9983 = !DILocation(line: 3205, column: 60, scope: !9974)
!9984 = !DILocation(line: 3205, column: 4, scope: !9974)
!9985 = !DILocation(line: 3205, column: 8, scope: !9974)
!9986 = !DILocation(line: 3206, column: 2, scope: !9974)
!9987 = !DILocation(line: 3208, column: 11, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9970, file: !3, line: 3207, column: 7)
!9989 = !DILocation(line: 3208, column: 15, scope: !9988)
!9990 = !DILocation(line: 3208, column: 4, scope: !9988)
!9991 = !DILocation(line: 3208, column: 8, scope: !9988)
!9992 = !DILocation(line: 3210, column: 1, scope: !9940)
!9993 = distinct !DISubprogram(name: "map_to_sphere", scope: !3, file: !3, line: 3212, type: !9941, scopeLine: 3213, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!9994 = !DILocalVariable(name: "r_u", arg: 1, scope: !9993, file: !3, line: 3212, type: !10)
!9995 = !DILocation(line: 3212, column: 27, scope: !9993)
!9996 = !DILocalVariable(name: "r_v", arg: 2, scope: !9993, file: !3, line: 3212, type: !10)
!9997 = !DILocation(line: 3212, column: 39, scope: !9993)
!9998 = !DILocalVariable(name: "x", arg: 3, scope: !9993, file: !3, line: 3212, type: !8)
!9999 = !DILocation(line: 3212, column: 56, scope: !9993)
!10000 = !DILocalVariable(name: "y", arg: 4, scope: !9993, file: !3, line: 3212, type: !8)
!10001 = !DILocation(line: 3212, column: 71, scope: !9993)
!10002 = !DILocalVariable(name: "z", arg: 5, scope: !9993, file: !3, line: 3212, type: !8)
!10003 = !DILocation(line: 3212, column: 86, scope: !9993)
!10004 = !DILocalVariable(name: "len", scope: !9993, file: !3, line: 3214, type: !9)
!10005 = !DILocation(line: 3214, column: 8, scope: !9993)
!10006 = !DILocation(line: 3216, column: 14, scope: !9993)
!10007 = !DILocation(line: 3216, column: 18, scope: !9993)
!10008 = !DILocation(line: 3216, column: 16, scope: !9993)
!10009 = !DILocation(line: 3216, column: 22, scope: !9993)
!10010 = !DILocation(line: 3216, column: 26, scope: !9993)
!10011 = !DILocation(line: 3216, column: 24, scope: !9993)
!10012 = !DILocation(line: 3216, column: 20, scope: !9993)
!10013 = !DILocation(line: 3216, column: 30, scope: !9993)
!10014 = !DILocation(line: 3216, column: 34, scope: !9993)
!10015 = !DILocation(line: 3216, column: 32, scope: !9993)
!10016 = !DILocation(line: 3216, column: 28, scope: !9993)
!10017 = !DILocation(line: 3216, column: 8, scope: !9993)
!10018 = !DILocation(line: 3216, column: 6, scope: !9993)
!10019 = !DILocation(line: 3217, column: 6, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !9993, file: !3, line: 3217, column: 6)
!10021 = !DILocation(line: 3217, column: 10, scope: !10020)
!10022 = !DILocation(line: 3217, column: 6, scope: !9993)
!10023 = !DILocation(line: 3218, column: 7, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10025, file: !3, line: 3218, column: 7)
!10025 = distinct !DILexicalBlock(scope: !10020, file: !3, line: 3217, column: 18)
!10026 = !DILocation(line: 3218, column: 7, scope: !10025)
!10027 = !DILocation(line: 3219, column: 5, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10024, file: !3, line: 3218, column: 41)
!10029 = !DILocation(line: 3219, column: 9, scope: !10028)
!10030 = !DILocation(line: 3220, column: 3, scope: !10028)
!10031 = !DILocation(line: 3222, column: 26, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10024, file: !3, line: 3221, column: 8)
!10033 = !DILocation(line: 3222, column: 29, scope: !10032)
!10034 = !DILocation(line: 3222, column: 19, scope: !10032)
!10035 = !DILocation(line: 3222, column: 32, scope: !10032)
!10036 = !DILocation(line: 3222, column: 17, scope: !10032)
!10037 = !DILocation(line: 3222, column: 47, scope: !10032)
!10038 = !DILocation(line: 3222, column: 5, scope: !10032)
!10039 = !DILocation(line: 3222, column: 9, scope: !10032)
!10040 = !DILocation(line: 3225, column: 24, scope: !10025)
!10041 = !DILocation(line: 3225, column: 28, scope: !10025)
!10042 = !DILocation(line: 3225, column: 26, scope: !10025)
!10043 = !DILocation(line: 3225, column: 17, scope: !10025)
!10044 = !DILocation(line: 3225, column: 33, scope: !10025)
!10045 = !DILocation(line: 3225, column: 15, scope: !10025)
!10046 = !DILocation(line: 3225, column: 4, scope: !10025)
!10047 = !DILocation(line: 3225, column: 8, scope: !10025)
!10048 = !DILocation(line: 3226, column: 2, scope: !10025)
!10049 = !DILocation(line: 3228, column: 11, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !10020, file: !3, line: 3227, column: 7)
!10051 = !DILocation(line: 3228, column: 15, scope: !10050)
!10052 = !DILocation(line: 3228, column: 4, scope: !10050)
!10053 = !DILocation(line: 3228, column: 8, scope: !10050)
!10054 = !DILocation(line: 3230, column: 1, scope: !9993)
!10055 = distinct !DISubprogram(name: "saacos", scope: !2446, file: !2446, line: 66, type: !10056, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!10056 = !DISubroutineType(types: !10057)
!10057 = !{!9, !9}
!10058 = !DILocalVariable(name: "fac", arg: 1, scope: !10055, file: !2446, line: 66, type: !9)
!10059 = !DILocation(line: 66, column: 28, scope: !10055)
!10060 = !DILocation(line: 68, column: 11, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10055, file: !2446, line: 68, column: 11)
!10062 = !DILocation(line: 68, column: 11, scope: !10055)
!10063 = !DILocation(line: 68, column: 35, scope: !10061)
!10064 = !DILocation(line: 69, column: 11, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10061, file: !2446, line: 69, column: 11)
!10066 = !DILocation(line: 69, column: 11, scope: !10061)
!10067 = !DILocation(line: 69, column: 35, scope: !10065)
!10068 = !DILocation(line: 70, column: 48, scope: !10065)
!10069 = !DILocation(line: 70, column: 42, scope: !10065)
!10070 = !DILocation(line: 70, column: 35, scope: !10065)
!10071 = !DILocation(line: 71, column: 1, scope: !10055)
!10072 = distinct !DISubprogram(name: "accumulate_vertex_normals", scope: !3, file: !3, line: 3234, type: !10073, scopeLine: 3238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!10073 = !DISubroutineType(types: !10074)
!10074 = !{null, !10, !10, !10, !10, !7, !7, !7, !7, !7}
!10075 = !DILocalVariable(name: "n1", arg: 1, scope: !10072, file: !3, line: 3235, type: !10)
!10076 = !DILocation(line: 3235, column: 15, scope: !10072)
!10077 = !DILocalVariable(name: "n2", arg: 2, scope: !10072, file: !3, line: 3235, type: !10)
!10078 = !DILocation(line: 3235, column: 28, scope: !10072)
!10079 = !DILocalVariable(name: "n3", arg: 3, scope: !10072, file: !3, line: 3235, type: !10)
!10080 = !DILocation(line: 3235, column: 41, scope: !10072)
!10081 = !DILocalVariable(name: "n4", arg: 4, scope: !10072, file: !3, line: 3235, type: !10)
!10082 = !DILocation(line: 3235, column: 54, scope: !10072)
!10083 = !DILocalVariable(name: "f_no", arg: 5, scope: !10072, file: !3, line: 3236, type: !7)
!10084 = !DILocation(line: 3236, column: 21, scope: !10072)
!10085 = !DILocalVariable(name: "co1", arg: 6, scope: !10072, file: !3, line: 3237, type: !7)
!10086 = !DILocation(line: 3237, column: 21, scope: !10072)
!10087 = !DILocalVariable(name: "co2", arg: 7, scope: !10072, file: !3, line: 3237, type: !7)
!10088 = !DILocation(line: 3237, column: 41, scope: !10072)
!10089 = !DILocalVariable(name: "co3", arg: 8, scope: !10072, file: !3, line: 3237, type: !7)
!10090 = !DILocation(line: 3237, column: 61, scope: !10072)
!10091 = !DILocalVariable(name: "co4", arg: 9, scope: !10072, file: !3, line: 3237, type: !7)
!10092 = !DILocation(line: 3237, column: 81, scope: !10072)
!10093 = !DILocalVariable(name: "vdiffs", scope: !10072, file: !3, line: 3239, type: !10094)
!10094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 384, elements: !10095)
!10095 = !{!3954, !119}
!10096 = !DILocation(line: 3239, column: 8, scope: !10072)
!10097 = !DILocalVariable(name: "nverts", scope: !10072, file: !3, line: 3240, type: !1841)
!10098 = !DILocation(line: 3240, column: 12, scope: !10072)
!10099 = !DILocation(line: 3240, column: 22, scope: !10072)
!10100 = !DILocation(line: 3240, column: 25, scope: !10072)
!10101 = !DILocation(line: 3240, column: 33, scope: !10072)
!10102 = !DILocation(line: 3240, column: 36, scope: !10072)
!10103 = !DILocation(line: 3240, column: 40, scope: !10072)
!10104 = !DILocation(line: 0, scope: !10072)
!10105 = !DILocation(line: 3240, column: 21, scope: !10072)
!10106 = !DILocation(line: 3243, column: 14, scope: !10072)
!10107 = !DILocation(line: 3243, column: 25, scope: !10072)
!10108 = !DILocation(line: 3243, column: 30, scope: !10072)
!10109 = !DILocation(line: 3243, column: 2, scope: !10072)
!10110 = !DILocation(line: 3244, column: 14, scope: !10072)
!10111 = !DILocation(line: 3244, column: 25, scope: !10072)
!10112 = !DILocation(line: 3244, column: 30, scope: !10072)
!10113 = !DILocation(line: 3244, column: 2, scope: !10072)
!10114 = !DILocation(line: 3246, column: 6, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !10072, file: !3, line: 3246, column: 6)
!10116 = !DILocation(line: 3246, column: 13, scope: !10115)
!10117 = !DILocation(line: 3246, column: 6, scope: !10072)
!10118 = !DILocation(line: 3247, column: 15, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 3246, column: 19)
!10120 = !DILocation(line: 3247, column: 26, scope: !10119)
!10121 = !DILocation(line: 3247, column: 31, scope: !10119)
!10122 = !DILocation(line: 3247, column: 3, scope: !10119)
!10123 = !DILocation(line: 3248, column: 2, scope: !10119)
!10124 = !DILocation(line: 3250, column: 15, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 3249, column: 7)
!10126 = !DILocation(line: 3250, column: 26, scope: !10125)
!10127 = !DILocation(line: 3250, column: 31, scope: !10125)
!10128 = !DILocation(line: 3250, column: 3, scope: !10125)
!10129 = !DILocation(line: 3251, column: 15, scope: !10125)
!10130 = !DILocation(line: 3251, column: 26, scope: !10125)
!10131 = !DILocation(line: 3251, column: 31, scope: !10125)
!10132 = !DILocation(line: 3251, column: 3, scope: !10125)
!10133 = !DILocation(line: 3252, column: 16, scope: !10125)
!10134 = !DILocation(line: 3252, column: 3, scope: !10125)
!10135 = !DILocation(line: 3255, column: 15, scope: !10072)
!10136 = !DILocation(line: 3255, column: 2, scope: !10072)
!10137 = !DILocation(line: 3256, column: 15, scope: !10072)
!10138 = !DILocation(line: 3256, column: 2, scope: !10072)
!10139 = !DILocation(line: 3257, column: 15, scope: !10072)
!10140 = !DILocation(line: 3257, column: 2, scope: !10072)
!10141 = !DILocalVariable(name: "vn", scope: !10142, file: !3, line: 3261, type: !10143)
!10142 = distinct !DILexicalBlock(scope: !10072, file: !3, line: 3260, column: 2)
!10143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 256, elements: !3953)
!10144 = !DILocation(line: 3261, column: 10, scope: !10142)
!10145 = !DILocation(line: 3261, column: 17, scope: !10142)
!10146 = !DILocation(line: 3261, column: 18, scope: !10142)
!10147 = !DILocation(line: 3261, column: 22, scope: !10142)
!10148 = !DILocation(line: 3261, column: 26, scope: !10142)
!10149 = !DILocation(line: 3261, column: 30, scope: !10142)
!10150 = !DILocalVariable(name: "prev_edge", scope: !10142, file: !3, line: 3262, type: !7)
!10151 = !DILocation(line: 3262, column: 16, scope: !10142)
!10152 = !DILocation(line: 3262, column: 35, scope: !10142)
!10153 = !DILocation(line: 3262, column: 42, scope: !10142)
!10154 = !DILocation(line: 3262, column: 28, scope: !10142)
!10155 = !DILocalVariable(name: "i", scope: !10142, file: !3, line: 3263, type: !17)
!10156 = !DILocation(line: 3263, column: 7, scope: !10142)
!10157 = !DILocation(line: 3265, column: 10, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10142, file: !3, line: 3265, column: 3)
!10159 = !DILocation(line: 3265, column: 8, scope: !10158)
!10160 = !DILocation(line: 3265, column: 15, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10158, file: !3, line: 3265, column: 3)
!10162 = !DILocation(line: 3265, column: 19, scope: !10161)
!10163 = !DILocation(line: 3265, column: 17, scope: !10161)
!10164 = !DILocation(line: 3265, column: 3, scope: !10158)
!10165 = !DILocalVariable(name: "cur_edge", scope: !10166, file: !3, line: 3266, type: !7)
!10166 = distinct !DILexicalBlock(scope: !10161, file: !3, line: 3265, column: 32)
!10167 = !DILocation(line: 3266, column: 17, scope: !10166)
!10168 = !DILocation(line: 3266, column: 35, scope: !10166)
!10169 = !DILocation(line: 3266, column: 28, scope: !10166)
!10170 = !DILocalVariable(name: "fac", scope: !10166, file: !3, line: 3267, type: !8)
!10171 = !DILocation(line: 3267, column: 16, scope: !10166)
!10172 = !DILocation(line: 3267, column: 39, scope: !10166)
!10173 = !DILocation(line: 3267, column: 49, scope: !10166)
!10174 = !DILocation(line: 3267, column: 30, scope: !10166)
!10175 = !DILocation(line: 3267, column: 29, scope: !10166)
!10176 = !DILocation(line: 3267, column: 22, scope: !10166)
!10177 = !DILocation(line: 3270, column: 20, scope: !10166)
!10178 = !DILocation(line: 3270, column: 17, scope: !10166)
!10179 = !DILocation(line: 3270, column: 24, scope: !10166)
!10180 = !DILocation(line: 3270, column: 30, scope: !10166)
!10181 = !DILocation(line: 3270, column: 4, scope: !10166)
!10182 = !DILocation(line: 3271, column: 16, scope: !10166)
!10183 = !DILocation(line: 3271, column: 14, scope: !10166)
!10184 = !DILocation(line: 3272, column: 3, scope: !10166)
!10185 = !DILocation(line: 3265, column: 28, scope: !10161)
!10186 = !DILocation(line: 3265, column: 3, scope: !10161)
!10187 = distinct !{!10187, !10164, !10188}
!10188 = !DILocation(line: 3272, column: 3, scope: !10158)
!10189 = !DILocation(line: 3274, column: 1, scope: !10072)
!10190 = distinct !DISubprogram(name: "madd_v3_v3fl", scope: !184, file: !184, line: 507, type: !10191, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!10191 = !DISubroutineType(types: !10192)
!10192 = !{null, !10, !7, !9}
!10193 = !DILocalVariable(name: "r", arg: 1, scope: !10190, file: !184, line: 507, type: !10)
!10194 = !DILocation(line: 507, column: 33, scope: !10190)
!10195 = !DILocalVariable(name: "a", arg: 2, scope: !10190, file: !184, line: 507, type: !7)
!10196 = !DILocation(line: 507, column: 51, scope: !10190)
!10197 = !DILocalVariable(name: "f", arg: 3, scope: !10190, file: !184, line: 507, type: !9)
!10198 = !DILocation(line: 507, column: 63, scope: !10190)
!10199 = !DILocation(line: 509, column: 10, scope: !10190)
!10200 = !DILocation(line: 509, column: 17, scope: !10190)
!10201 = !DILocation(line: 509, column: 15, scope: !10190)
!10202 = !DILocation(line: 509, column: 2, scope: !10190)
!10203 = !DILocation(line: 509, column: 7, scope: !10190)
!10204 = !DILocation(line: 510, column: 10, scope: !10190)
!10205 = !DILocation(line: 510, column: 17, scope: !10190)
!10206 = !DILocation(line: 510, column: 15, scope: !10190)
!10207 = !DILocation(line: 510, column: 2, scope: !10190)
!10208 = !DILocation(line: 510, column: 7, scope: !10190)
!10209 = !DILocation(line: 511, column: 10, scope: !10190)
!10210 = !DILocation(line: 511, column: 17, scope: !10190)
!10211 = !DILocation(line: 511, column: 15, scope: !10190)
!10212 = !DILocation(line: 511, column: 2, scope: !10190)
!10213 = !DILocation(line: 511, column: 7, scope: !10190)
!10214 = !DILocation(line: 512, column: 1, scope: !10190)
!10215 = distinct !DISubprogram(name: "accumulate_vertex_normals_poly", scope: !3, file: !3, line: 3278, type: !10216, scopeLine: 3280, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!10216 = !DISubroutineType(types: !10217)
!10217 = !{null, !10218, !7, !10219, !6633, !1841}
!10218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!10219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!10220 = !DILocalVariable(name: "vertnos", arg: 1, scope: !10215, file: !3, line: 3278, type: !10218)
!10221 = !DILocation(line: 3278, column: 45, scope: !10215)
!10222 = !DILocalVariable(name: "polyno", arg: 2, scope: !10215, file: !3, line: 3278, type: !7)
!10223 = !DILocation(line: 3278, column: 66, scope: !10215)
!10224 = !DILocalVariable(name: "vertcos", arg: 3, scope: !10215, file: !3, line: 3279, type: !10219)
!10225 = !DILocation(line: 3279, column: 51, scope: !10215)
!10226 = !DILocalVariable(name: "vdiffs", arg: 4, scope: !10215, file: !3, line: 3279, type: !6633)
!10227 = !DILocation(line: 3279, column: 66, scope: !10215)
!10228 = !DILocalVariable(name: "nverts", arg: 5, scope: !10215, file: !3, line: 3279, type: !1841)
!10229 = !DILocation(line: 3279, column: 89, scope: !10215)
!10230 = !DILocalVariable(name: "i", scope: !10215, file: !3, line: 3281, type: !17)
!10231 = !DILocation(line: 3281, column: 6, scope: !10215)
!10232 = !DILocation(line: 3284, column: 9, scope: !10233)
!10233 = distinct !DILexicalBlock(scope: !10215, file: !3, line: 3284, column: 2)
!10234 = !DILocation(line: 3284, column: 7, scope: !10233)
!10235 = !DILocation(line: 3284, column: 14, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10233, file: !3, line: 3284, column: 2)
!10237 = !DILocation(line: 3284, column: 18, scope: !10236)
!10238 = !DILocation(line: 3284, column: 16, scope: !10236)
!10239 = !DILocation(line: 3284, column: 2, scope: !10233)
!10240 = !DILocation(line: 3285, column: 15, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10236, file: !3, line: 3284, column: 31)
!10242 = !DILocation(line: 3285, column: 22, scope: !10241)
!10243 = !DILocation(line: 3285, column: 26, scope: !10241)
!10244 = !DILocation(line: 3285, column: 35, scope: !10241)
!10245 = !DILocation(line: 3285, column: 37, scope: !10241)
!10246 = !DILocation(line: 3285, column: 44, scope: !10241)
!10247 = !DILocation(line: 3285, column: 42, scope: !10241)
!10248 = !DILocation(line: 3285, column: 53, scope: !10241)
!10249 = !DILocation(line: 3285, column: 61, scope: !10241)
!10250 = !DILocation(line: 3285, column: 3, scope: !10241)
!10251 = !DILocation(line: 3286, column: 16, scope: !10241)
!10252 = !DILocation(line: 3286, column: 23, scope: !10241)
!10253 = !DILocation(line: 3286, column: 3, scope: !10241)
!10254 = !DILocation(line: 3287, column: 2, scope: !10241)
!10255 = !DILocation(line: 3284, column: 27, scope: !10236)
!10256 = !DILocation(line: 3284, column: 2, scope: !10236)
!10257 = distinct !{!10257, !10239, !10258}
!10258 = !DILocation(line: 3287, column: 2, scope: !10233)
!10259 = !DILocalVariable(name: "prev_edge", scope: !10260, file: !3, line: 3291, type: !7)
!10260 = distinct !DILexicalBlock(scope: !10215, file: !3, line: 3290, column: 2)
!10261 = !DILocation(line: 3291, column: 16, scope: !10260)
!10262 = !DILocation(line: 3291, column: 28, scope: !10260)
!10263 = !DILocation(line: 3291, column: 35, scope: !10260)
!10264 = !DILocation(line: 3291, column: 42, scope: !10260)
!10265 = !DILocation(line: 3293, column: 10, scope: !10266)
!10266 = distinct !DILexicalBlock(scope: !10260, file: !3, line: 3293, column: 3)
!10267 = !DILocation(line: 3293, column: 8, scope: !10266)
!10268 = !DILocation(line: 3293, column: 15, scope: !10269)
!10269 = distinct !DILexicalBlock(scope: !10266, file: !3, line: 3293, column: 3)
!10270 = !DILocation(line: 3293, column: 19, scope: !10269)
!10271 = !DILocation(line: 3293, column: 17, scope: !10269)
!10272 = !DILocation(line: 3293, column: 3, scope: !10266)
!10273 = !DILocalVariable(name: "cur_edge", scope: !10274, file: !3, line: 3294, type: !7)
!10274 = distinct !DILexicalBlock(scope: !10269, file: !3, line: 3293, column: 32)
!10275 = !DILocation(line: 3294, column: 17, scope: !10274)
!10276 = !DILocation(line: 3294, column: 28, scope: !10274)
!10277 = !DILocation(line: 3294, column: 35, scope: !10274)
!10278 = !DILocalVariable(name: "fac", scope: !10274, file: !3, line: 3298, type: !8)
!10279 = !DILocation(line: 3298, column: 16, scope: !10274)
!10280 = !DILocation(line: 3298, column: 39, scope: !10274)
!10281 = !DILocation(line: 3298, column: 49, scope: !10274)
!10282 = !DILocation(line: 3298, column: 30, scope: !10274)
!10283 = !DILocation(line: 3298, column: 29, scope: !10274)
!10284 = !DILocation(line: 3298, column: 22, scope: !10274)
!10285 = !DILocation(line: 3301, column: 17, scope: !10274)
!10286 = !DILocation(line: 3301, column: 25, scope: !10274)
!10287 = !DILocation(line: 3301, column: 29, scope: !10274)
!10288 = !DILocation(line: 3301, column: 37, scope: !10274)
!10289 = !DILocation(line: 3301, column: 4, scope: !10274)
!10290 = !DILocation(line: 3302, column: 16, scope: !10274)
!10291 = !DILocation(line: 3302, column: 14, scope: !10274)
!10292 = !DILocation(line: 3303, column: 3, scope: !10274)
!10293 = !DILocation(line: 3293, column: 28, scope: !10269)
!10294 = !DILocation(line: 3293, column: 3, scope: !10269)
!10295 = distinct !{!10295, !10272, !10296}
!10296 = !DILocation(line: 3303, column: 3, scope: !10266)
!10297 = !DILocation(line: 3305, column: 1, scope: !10215)
!10298 = distinct !DISubprogram(name: "tangent_from_uv", scope: !3, file: !3, line: 3309, type: !10299, scopeLine: 3314, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!10299 = !DISubroutineType(types: !10300)
!10300 = !{null, !7, !7, !7, !7, !7, !7, !7, !10}
!10301 = !DILocalVariable(name: "uv1", arg: 1, scope: !10298, file: !3, line: 3310, type: !7)
!10302 = !DILocation(line: 3310, column: 21, scope: !10298)
!10303 = !DILocalVariable(name: "uv2", arg: 2, scope: !10298, file: !3, line: 3310, type: !7)
!10304 = !DILocation(line: 3310, column: 41, scope: !10298)
!10305 = !DILocalVariable(name: "uv3", arg: 3, scope: !10298, file: !3, line: 3310, type: !7)
!10306 = !DILocation(line: 3310, column: 61, scope: !10298)
!10307 = !DILocalVariable(name: "co1", arg: 4, scope: !10298, file: !3, line: 3311, type: !7)
!10308 = !DILocation(line: 3311, column: 21, scope: !10298)
!10309 = !DILocalVariable(name: "co2", arg: 5, scope: !10298, file: !3, line: 3311, type: !7)
!10310 = !DILocation(line: 3311, column: 41, scope: !10298)
!10311 = !DILocalVariable(name: "co3", arg: 6, scope: !10298, file: !3, line: 3311, type: !7)
!10312 = !DILocation(line: 3311, column: 61, scope: !10298)
!10313 = !DILocalVariable(name: "n", arg: 7, scope: !10298, file: !3, line: 3312, type: !7)
!10314 = !DILocation(line: 3312, column: 21, scope: !10298)
!10315 = !DILocalVariable(name: "r_tang", arg: 8, scope: !10298, file: !3, line: 3313, type: !10)
!10316 = !DILocation(line: 3313, column: 15, scope: !10298)
!10317 = !DILocalVariable(name: "s1", scope: !10298, file: !3, line: 3315, type: !8)
!10318 = !DILocation(line: 3315, column: 14, scope: !10298)
!10319 = !DILocation(line: 3315, column: 19, scope: !10298)
!10320 = !DILocation(line: 3315, column: 28, scope: !10298)
!10321 = !DILocation(line: 3315, column: 26, scope: !10298)
!10322 = !DILocalVariable(name: "s2", scope: !10298, file: !3, line: 3316, type: !8)
!10323 = !DILocation(line: 3316, column: 14, scope: !10298)
!10324 = !DILocation(line: 3316, column: 19, scope: !10298)
!10325 = !DILocation(line: 3316, column: 28, scope: !10298)
!10326 = !DILocation(line: 3316, column: 26, scope: !10298)
!10327 = !DILocalVariable(name: "t1", scope: !10298, file: !3, line: 3317, type: !8)
!10328 = !DILocation(line: 3317, column: 14, scope: !10298)
!10329 = !DILocation(line: 3317, column: 19, scope: !10298)
!10330 = !DILocation(line: 3317, column: 28, scope: !10298)
!10331 = !DILocation(line: 3317, column: 26, scope: !10298)
!10332 = !DILocalVariable(name: "t2", scope: !10298, file: !3, line: 3318, type: !8)
!10333 = !DILocation(line: 3318, column: 14, scope: !10298)
!10334 = !DILocation(line: 3318, column: 19, scope: !10298)
!10335 = !DILocation(line: 3318, column: 28, scope: !10298)
!10336 = !DILocation(line: 3318, column: 26, scope: !10298)
!10337 = !DILocalVariable(name: "det", scope: !10298, file: !3, line: 3319, type: !9)
!10338 = !DILocation(line: 3319, column: 8, scope: !10298)
!10339 = !DILocation(line: 3319, column: 15, scope: !10298)
!10340 = !DILocation(line: 3319, column: 20, scope: !10298)
!10341 = !DILocation(line: 3319, column: 18, scope: !10298)
!10342 = !DILocation(line: 3319, column: 25, scope: !10298)
!10343 = !DILocation(line: 3319, column: 30, scope: !10298)
!10344 = !DILocation(line: 3319, column: 28, scope: !10298)
!10345 = !DILocation(line: 3319, column: 23, scope: !10298)
!10346 = !DILocation(line: 3322, column: 6, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10298, file: !3, line: 3322, column: 6)
!10348 = !DILocation(line: 3322, column: 10, scope: !10347)
!10349 = !DILocation(line: 3322, column: 6, scope: !10298)
!10350 = !DILocalVariable(name: "tangv", scope: !10351, file: !3, line: 3323, type: !117)
!10351 = distinct !DILexicalBlock(scope: !10347, file: !3, line: 3322, column: 19)
!10352 = !DILocation(line: 3323, column: 9, scope: !10351)
!10353 = !DILocalVariable(name: "ct", scope: !10351, file: !3, line: 3323, type: !117)
!10354 = !DILocation(line: 3323, column: 19, scope: !10351)
!10355 = !DILocalVariable(name: "e1", scope: !10351, file: !3, line: 3323, type: !117)
!10356 = !DILocation(line: 3323, column: 26, scope: !10351)
!10357 = !DILocalVariable(name: "e2", scope: !10351, file: !3, line: 3323, type: !117)
!10358 = !DILocation(line: 3323, column: 33, scope: !10351)
!10359 = !DILocation(line: 3325, column: 16, scope: !10351)
!10360 = !DILocation(line: 3325, column: 14, scope: !10351)
!10361 = !DILocation(line: 3325, column: 7, scope: !10351)
!10362 = !DILocation(line: 3328, column: 15, scope: !10351)
!10363 = !DILocation(line: 3328, column: 19, scope: !10351)
!10364 = !DILocation(line: 3328, column: 24, scope: !10351)
!10365 = !DILocation(line: 3328, column: 3, scope: !10351)
!10366 = !DILocation(line: 3329, column: 15, scope: !10351)
!10367 = !DILocation(line: 3329, column: 19, scope: !10351)
!10368 = !DILocation(line: 3329, column: 24, scope: !10351)
!10369 = !DILocation(line: 3329, column: 3, scope: !10351)
!10370 = !DILocation(line: 3330, column: 16, scope: !10351)
!10371 = !DILocation(line: 3330, column: 21, scope: !10351)
!10372 = !DILocation(line: 3330, column: 19, scope: !10351)
!10373 = !DILocation(line: 3330, column: 29, scope: !10351)
!10374 = !DILocation(line: 3330, column: 34, scope: !10351)
!10375 = !DILocation(line: 3330, column: 32, scope: !10351)
!10376 = !DILocation(line: 3330, column: 27, scope: !10351)
!10377 = !DILocation(line: 3330, column: 43, scope: !10351)
!10378 = !DILocation(line: 3330, column: 41, scope: !10351)
!10379 = !DILocation(line: 3330, column: 3, scope: !10351)
!10380 = !DILocation(line: 3330, column: 13, scope: !10351)
!10381 = !DILocation(line: 3331, column: 16, scope: !10351)
!10382 = !DILocation(line: 3331, column: 21, scope: !10351)
!10383 = !DILocation(line: 3331, column: 19, scope: !10351)
!10384 = !DILocation(line: 3331, column: 29, scope: !10351)
!10385 = !DILocation(line: 3331, column: 34, scope: !10351)
!10386 = !DILocation(line: 3331, column: 32, scope: !10351)
!10387 = !DILocation(line: 3331, column: 27, scope: !10351)
!10388 = !DILocation(line: 3331, column: 43, scope: !10351)
!10389 = !DILocation(line: 3331, column: 41, scope: !10351)
!10390 = !DILocation(line: 3331, column: 3, scope: !10351)
!10391 = !DILocation(line: 3331, column: 13, scope: !10351)
!10392 = !DILocation(line: 3332, column: 16, scope: !10351)
!10393 = !DILocation(line: 3332, column: 21, scope: !10351)
!10394 = !DILocation(line: 3332, column: 19, scope: !10351)
!10395 = !DILocation(line: 3332, column: 29, scope: !10351)
!10396 = !DILocation(line: 3332, column: 34, scope: !10351)
!10397 = !DILocation(line: 3332, column: 32, scope: !10351)
!10398 = !DILocation(line: 3332, column: 27, scope: !10351)
!10399 = !DILocation(line: 3332, column: 43, scope: !10351)
!10400 = !DILocation(line: 3332, column: 41, scope: !10351)
!10401 = !DILocation(line: 3332, column: 3, scope: !10351)
!10402 = !DILocation(line: 3332, column: 13, scope: !10351)
!10403 = !DILocation(line: 3333, column: 15, scope: !10351)
!10404 = !DILocation(line: 3333, column: 20, scope: !10351)
!10405 = !DILocation(line: 3333, column: 18, scope: !10351)
!10406 = !DILocation(line: 3333, column: 28, scope: !10351)
!10407 = !DILocation(line: 3333, column: 33, scope: !10351)
!10408 = !DILocation(line: 3333, column: 31, scope: !10351)
!10409 = !DILocation(line: 3333, column: 26, scope: !10351)
!10410 = !DILocation(line: 3333, column: 42, scope: !10351)
!10411 = !DILocation(line: 3333, column: 40, scope: !10351)
!10412 = !DILocation(line: 3333, column: 3, scope: !10351)
!10413 = !DILocation(line: 3333, column: 12, scope: !10351)
!10414 = !DILocation(line: 3334, column: 15, scope: !10351)
!10415 = !DILocation(line: 3334, column: 20, scope: !10351)
!10416 = !DILocation(line: 3334, column: 18, scope: !10351)
!10417 = !DILocation(line: 3334, column: 28, scope: !10351)
!10418 = !DILocation(line: 3334, column: 33, scope: !10351)
!10419 = !DILocation(line: 3334, column: 31, scope: !10351)
!10420 = !DILocation(line: 3334, column: 26, scope: !10351)
!10421 = !DILocation(line: 3334, column: 42, scope: !10351)
!10422 = !DILocation(line: 3334, column: 40, scope: !10351)
!10423 = !DILocation(line: 3334, column: 3, scope: !10351)
!10424 = !DILocation(line: 3334, column: 12, scope: !10351)
!10425 = !DILocation(line: 3335, column: 15, scope: !10351)
!10426 = !DILocation(line: 3335, column: 20, scope: !10351)
!10427 = !DILocation(line: 3335, column: 18, scope: !10351)
!10428 = !DILocation(line: 3335, column: 28, scope: !10351)
!10429 = !DILocation(line: 3335, column: 33, scope: !10351)
!10430 = !DILocation(line: 3335, column: 31, scope: !10351)
!10431 = !DILocation(line: 3335, column: 26, scope: !10351)
!10432 = !DILocation(line: 3335, column: 42, scope: !10351)
!10433 = !DILocation(line: 3335, column: 40, scope: !10351)
!10434 = !DILocation(line: 3335, column: 3, scope: !10351)
!10435 = !DILocation(line: 3335, column: 12, scope: !10351)
!10436 = !DILocation(line: 3336, column: 17, scope: !10351)
!10437 = !DILocation(line: 3336, column: 21, scope: !10351)
!10438 = !DILocation(line: 3336, column: 29, scope: !10351)
!10439 = !DILocation(line: 3336, column: 3, scope: !10351)
!10440 = !DILocation(line: 3339, column: 16, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10351, file: !3, line: 3339, column: 7)
!10442 = !DILocation(line: 3339, column: 20, scope: !10441)
!10443 = !DILocation(line: 3339, column: 7, scope: !10441)
!10444 = !DILocation(line: 3339, column: 23, scope: !10441)
!10445 = !DILocation(line: 3339, column: 7, scope: !10351)
!10446 = !DILocation(line: 3340, column: 14, scope: !10447)
!10447 = distinct !DILexicalBlock(scope: !10441, file: !3, line: 3339, column: 31)
!10448 = !DILocation(line: 3340, column: 4, scope: !10447)
!10449 = !DILocation(line: 3341, column: 3, scope: !10447)
!10450 = !DILocation(line: 3342, column: 2, scope: !10351)
!10451 = !DILocation(line: 3344, column: 11, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10347, file: !3, line: 3343, column: 7)
!10453 = !DILocation(line: 3344, column: 3, scope: !10452)
!10454 = !DILocation(line: 3346, column: 1, scope: !10298)
!10455 = distinct !DISubprogram(name: "vcloud_estimate_transform", scope: !3, file: !3, line: 3373, type: !10456, scopeLine: 3375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!10456 = !DISubroutineType(types: !10457)
!10457 = !{null, !17, !6633, !10, !6633, !10, !10, !10, !6633, !6633}
!10458 = !DILocalVariable(name: "list_size", arg: 1, scope: !10455, file: !3, line: 3373, type: !17)
!10459 = !DILocation(line: 3373, column: 36, scope: !10455)
!10460 = !DILocalVariable(name: "pos", arg: 2, scope: !10455, file: !3, line: 3373, type: !6633)
!10461 = !DILocation(line: 3373, column: 55, scope: !10455)
!10462 = !DILocalVariable(name: "weight", arg: 3, scope: !10455, file: !3, line: 3373, type: !10)
!10463 = !DILocation(line: 3373, column: 71, scope: !10455)
!10464 = !DILocalVariable(name: "rpos", arg: 4, scope: !10455, file: !3, line: 3373, type: !6633)
!10465 = !DILocation(line: 3373, column: 87, scope: !10455)
!10466 = !DILocalVariable(name: "rweight", arg: 5, scope: !10455, file: !3, line: 3373, type: !10)
!10467 = !DILocation(line: 3373, column: 104, scope: !10455)
!10468 = !DILocalVariable(name: "lloc", arg: 6, scope: !10455, file: !3, line: 3374, type: !10)
!10469 = !DILocation(line: 3374, column: 38, scope: !10455)
!10470 = !DILocalVariable(name: "rloc", arg: 7, scope: !10455, file: !3, line: 3374, type: !10)
!10471 = !DILocation(line: 3374, column: 53, scope: !10455)
!10472 = !DILocalVariable(name: "lrot", arg: 8, scope: !10455, file: !3, line: 3374, type: !6633)
!10473 = !DILocation(line: 3374, column: 68, scope: !10455)
!10474 = !DILocalVariable(name: "lscale", arg: 9, scope: !10455, file: !3, line: 3374, type: !6633)
!10475 = !DILocation(line: 3374, column: 86, scope: !10455)
!10476 = !DILocalVariable(name: "accu_com", scope: !10455, file: !3, line: 3376, type: !117)
!10477 = !DILocation(line: 3376, column: 8, scope: !10455)
!10478 = !DILocalVariable(name: "accu_rcom", scope: !10455, file: !3, line: 3376, type: !117)
!10479 = !DILocation(line: 3376, column: 42, scope: !10455)
!10480 = !DILocalVariable(name: "accu_weight", scope: !10455, file: !3, line: 3377, type: !9)
!10481 = !DILocation(line: 3377, column: 8, scope: !10455)
!10482 = !DILocalVariable(name: "accu_rweight", scope: !10455, file: !3, line: 3377, type: !9)
!10483 = !DILocation(line: 3377, column: 28, scope: !10455)
!10484 = !DILocalVariable(name: "eps", scope: !10455, file: !3, line: 3378, type: !8)
!10485 = !DILocation(line: 3378, column: 14, scope: !10455)
!10486 = !DILocalVariable(name: "a", scope: !10455, file: !3, line: 3380, type: !17)
!10487 = !DILocation(line: 3380, column: 6, scope: !10455)
!10488 = !DILocation(line: 3382, column: 6, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10455, file: !3, line: 3382, column: 6)
!10490 = !DILocation(line: 3382, column: 6, scope: !10455)
!10491 = !DILocation(line: 3382, column: 20, scope: !10489)
!10492 = !DILocation(line: 3382, column: 12, scope: !10489)
!10493 = !DILocation(line: 3383, column: 6, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !10455, file: !3, line: 3383, column: 6)
!10495 = !DILocation(line: 3383, column: 6, scope: !10455)
!10496 = !DILocation(line: 3383, column: 20, scope: !10494)
!10497 = !DILocation(line: 3383, column: 12, scope: !10494)
!10498 = !DILocation(line: 3384, column: 6, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10455, file: !3, line: 3384, column: 6)
!10500 = !DILocation(line: 3384, column: 6, scope: !10455)
!10501 = !DILocation(line: 3384, column: 20, scope: !10499)
!10502 = !DILocation(line: 3384, column: 12, scope: !10499)
!10503 = !DILocation(line: 3385, column: 6, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10455, file: !3, line: 3385, column: 6)
!10505 = !DILocation(line: 3385, column: 6, scope: !10455)
!10506 = !DILocation(line: 3385, column: 22, scope: !10504)
!10507 = !DILocation(line: 3385, column: 14, scope: !10504)
!10508 = !DILocation(line: 3387, column: 6, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10455, file: !3, line: 3387, column: 6)
!10510 = !DILocation(line: 3387, column: 10, scope: !10509)
!10511 = !DILocation(line: 3387, column: 13, scope: !10509)
!10512 = !DILocation(line: 3387, column: 18, scope: !10509)
!10513 = !DILocation(line: 3387, column: 22, scope: !10509)
!10514 = !DILocation(line: 3387, column: 32, scope: !10509)
!10515 = !DILocation(line: 3387, column: 6, scope: !10455)
!10516 = !DILocation(line: 3389, column: 10, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10518, file: !3, line: 3389, column: 3)
!10518 = distinct !DILexicalBlock(scope: !10509, file: !3, line: 3387, column: 38)
!10519 = !DILocation(line: 3389, column: 8, scope: !10517)
!10520 = !DILocation(line: 3389, column: 15, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10517, file: !3, line: 3389, column: 3)
!10522 = !DILocation(line: 3389, column: 19, scope: !10521)
!10523 = !DILocation(line: 3389, column: 17, scope: !10521)
!10524 = !DILocation(line: 3389, column: 3, scope: !10517)
!10525 = !DILocation(line: 3390, column: 8, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10527, file: !3, line: 3390, column: 8)
!10527 = distinct !DILexicalBlock(scope: !10521, file: !3, line: 3389, column: 35)
!10528 = !DILocation(line: 3390, column: 8, scope: !10527)
!10529 = !DILocalVariable(name: "v", scope: !10530, file: !3, line: 3391, type: !117)
!10530 = distinct !DILexicalBlock(scope: !10526, file: !3, line: 3390, column: 16)
!10531 = !DILocation(line: 3391, column: 11, scope: !10530)
!10532 = !DILocation(line: 3392, column: 16, scope: !10530)
!10533 = !DILocation(line: 3392, column: 19, scope: !10530)
!10534 = !DILocation(line: 3392, column: 23, scope: !10530)
!10535 = !DILocation(line: 3392, column: 5, scope: !10530)
!10536 = !DILocation(line: 3393, column: 15, scope: !10530)
!10537 = !DILocation(line: 3393, column: 18, scope: !10530)
!10538 = !DILocation(line: 3393, column: 25, scope: !10530)
!10539 = !DILocation(line: 3393, column: 5, scope: !10530)
!10540 = !DILocation(line: 3394, column: 15, scope: !10530)
!10541 = !DILocation(line: 3394, column: 25, scope: !10530)
!10542 = !DILocation(line: 3394, column: 5, scope: !10530)
!10543 = !DILocation(line: 3395, column: 20, scope: !10530)
!10544 = !DILocation(line: 3395, column: 27, scope: !10530)
!10545 = !DILocation(line: 3395, column: 17, scope: !10530)
!10546 = !DILocation(line: 3396, column: 4, scope: !10530)
!10547 = !DILocation(line: 3398, column: 15, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !10526, file: !3, line: 3397, column: 9)
!10549 = !DILocation(line: 3398, column: 25, scope: !10548)
!10550 = !DILocation(line: 3398, column: 29, scope: !10548)
!10551 = !DILocation(line: 3398, column: 5, scope: !10548)
!10552 = !DILocation(line: 3401, column: 8, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10527, file: !3, line: 3401, column: 8)
!10554 = !DILocation(line: 3401, column: 8, scope: !10527)
!10555 = !DILocalVariable(name: "v", scope: !10556, file: !3, line: 3402, type: !117)
!10556 = distinct !DILexicalBlock(scope: !10553, file: !3, line: 3401, column: 17)
!10557 = !DILocation(line: 3402, column: 11, scope: !10556)
!10558 = !DILocation(line: 3403, column: 16, scope: !10556)
!10559 = !DILocation(line: 3403, column: 19, scope: !10556)
!10560 = !DILocation(line: 3403, column: 24, scope: !10556)
!10561 = !DILocation(line: 3403, column: 5, scope: !10556)
!10562 = !DILocation(line: 3404, column: 15, scope: !10556)
!10563 = !DILocation(line: 3404, column: 18, scope: !10556)
!10564 = !DILocation(line: 3404, column: 26, scope: !10556)
!10565 = !DILocation(line: 3404, column: 5, scope: !10556)
!10566 = !DILocation(line: 3405, column: 15, scope: !10556)
!10567 = !DILocation(line: 3405, column: 26, scope: !10556)
!10568 = !DILocation(line: 3405, column: 5, scope: !10556)
!10569 = !DILocation(line: 3406, column: 21, scope: !10556)
!10570 = !DILocation(line: 3406, column: 29, scope: !10556)
!10571 = !DILocation(line: 3406, column: 18, scope: !10556)
!10572 = !DILocation(line: 3407, column: 4, scope: !10556)
!10573 = !DILocation(line: 3409, column: 15, scope: !10574)
!10574 = distinct !DILexicalBlock(scope: !10553, file: !3, line: 3408, column: 9)
!10575 = !DILocation(line: 3409, column: 26, scope: !10574)
!10576 = !DILocation(line: 3409, column: 31, scope: !10574)
!10577 = !DILocation(line: 3409, column: 5, scope: !10574)
!10578 = !DILocation(line: 3411, column: 3, scope: !10527)
!10579 = !DILocation(line: 3389, column: 31, scope: !10521)
!10580 = !DILocation(line: 3389, column: 3, scope: !10521)
!10581 = distinct !{!10581, !10524, !10582}
!10582 = !DILocation(line: 3411, column: 3, scope: !10517)
!10583 = !DILocation(line: 3412, column: 8, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10518, file: !3, line: 3412, column: 7)
!10585 = !DILocation(line: 3412, column: 15, scope: !10584)
!10586 = !DILocation(line: 3412, column: 19, scope: !10584)
!10587 = !DILocation(line: 3412, column: 7, scope: !10518)
!10588 = !DILocation(line: 3413, column: 40, scope: !10589)
!10589 = distinct !DILexicalBlock(scope: !10584, file: !3, line: 3412, column: 28)
!10590 = !DILocation(line: 3413, column: 33, scope: !10589)
!10591 = !DILocation(line: 3413, column: 31, scope: !10589)
!10592 = !DILocation(line: 3413, column: 16, scope: !10589)
!10593 = !DILocation(line: 3414, column: 3, scope: !10589)
!10594 = !DILocation(line: 3416, column: 13, scope: !10518)
!10595 = !DILocation(line: 3416, column: 30, scope: !10518)
!10596 = !DILocation(line: 3416, column: 28, scope: !10518)
!10597 = !DILocation(line: 3416, column: 3, scope: !10518)
!10598 = !DILocation(line: 3417, column: 13, scope: !10518)
!10599 = !DILocation(line: 3417, column: 31, scope: !10518)
!10600 = !DILocation(line: 3417, column: 29, scope: !10518)
!10601 = !DILocation(line: 3417, column: 3, scope: !10518)
!10602 = !DILocation(line: 3418, column: 7, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10518, file: !3, line: 3418, column: 7)
!10604 = !DILocation(line: 3418, column: 7, scope: !10518)
!10605 = !DILocation(line: 3418, column: 24, scope: !10603)
!10606 = !DILocation(line: 3418, column: 30, scope: !10603)
!10607 = !DILocation(line: 3418, column: 13, scope: !10603)
!10608 = !DILocation(line: 3419, column: 7, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10518, file: !3, line: 3419, column: 7)
!10610 = !DILocation(line: 3419, column: 7, scope: !10518)
!10611 = !DILocation(line: 3419, column: 24, scope: !10609)
!10612 = !DILocation(line: 3419, column: 30, scope: !10609)
!10613 = !DILocation(line: 3419, column: 13, scope: !10609)
!10614 = !DILocation(line: 3420, column: 7, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10518, file: !3, line: 3420, column: 7)
!10616 = !DILocation(line: 3420, column: 12, scope: !10615)
!10617 = !DILocation(line: 3420, column: 15, scope: !10615)
!10618 = !DILocation(line: 3420, column: 7, scope: !10518)
!10619 = !DILocalVariable(name: "m", scope: !10620, file: !3, line: 3423, type: !839)
!10620 = distinct !DILexicalBlock(scope: !10615, file: !3, line: 3420, column: 23)
!10621 = !DILocation(line: 3423, column: 10, scope: !10620)
!10622 = !DILocalVariable(name: "mr", scope: !10620, file: !3, line: 3423, type: !839)
!10623 = !DILocation(line: 3423, column: 19, scope: !10620)
!10624 = !DILocalVariable(name: "q", scope: !10620, file: !3, line: 3423, type: !839)
!10625 = !DILocation(line: 3423, column: 29, scope: !10620)
!10626 = !DILocalVariable(name: "qi", scope: !10620, file: !3, line: 3423, type: !839)
!10627 = !DILocation(line: 3423, column: 38, scope: !10620)
!10628 = !DILocalVariable(name: "va", scope: !10620, file: !3, line: 3424, type: !117)
!10629 = !DILocation(line: 3424, column: 10, scope: !10620)
!10630 = !DILocalVariable(name: "vb", scope: !10620, file: !3, line: 3424, type: !117)
!10631 = !DILocation(line: 3424, column: 17, scope: !10620)
!10632 = !DILocalVariable(name: "stunt", scope: !10620, file: !3, line: 3424, type: !117)
!10633 = !DILocation(line: 3424, column: 24, scope: !10620)
!10634 = !DILocalVariable(name: "odet", scope: !10620, file: !3, line: 3425, type: !9)
!10635 = !DILocation(line: 3425, column: 10, scope: !10620)
!10636 = !DILocalVariable(name: "ndet", scope: !10620, file: !3, line: 3425, type: !9)
!10637 = !DILocation(line: 3425, column: 16, scope: !10620)
!10638 = !DILocalVariable(name: "i", scope: !10620, file: !3, line: 3426, type: !17)
!10639 = !DILocation(line: 3426, column: 8, scope: !10620)
!10640 = !DILocalVariable(name: "imax", scope: !10620, file: !3, line: 3426, type: !17)
!10641 = !DILocation(line: 3426, column: 15, scope: !10620)
!10642 = !DILocation(line: 3427, column: 12, scope: !10620)
!10643 = !DILocation(line: 3427, column: 4, scope: !10620)
!10644 = !DILocation(line: 3428, column: 12, scope: !10620)
!10645 = !DILocation(line: 3428, column: 4, scope: !10620)
!10646 = !DILocation(line: 3431, column: 11, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10620, file: !3, line: 3431, column: 4)
!10648 = !DILocation(line: 3431, column: 9, scope: !10647)
!10649 = !DILocation(line: 3431, column: 16, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10647, file: !3, line: 3431, column: 4)
!10651 = !DILocation(line: 3431, column: 20, scope: !10650)
!10652 = !DILocation(line: 3431, column: 18, scope: !10650)
!10653 = !DILocation(line: 3431, column: 4, scope: !10647)
!10654 = !DILocation(line: 3432, column: 17, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10650, file: !3, line: 3431, column: 36)
!10656 = !DILocation(line: 3432, column: 21, scope: !10655)
!10657 = !DILocation(line: 3432, column: 26, scope: !10655)
!10658 = !DILocation(line: 3432, column: 30, scope: !10655)
!10659 = !DILocation(line: 3432, column: 5, scope: !10655)
!10660 = !DILocation(line: 3434, column: 17, scope: !10655)
!10661 = !DILocation(line: 3434, column: 21, scope: !10655)
!10662 = !DILocation(line: 3434, column: 25, scope: !10655)
!10663 = !DILocation(line: 3434, column: 29, scope: !10655)
!10664 = !DILocation(line: 3434, column: 5, scope: !10655)
!10665 = !DILocation(line: 3436, column: 16, scope: !10655)
!10666 = !DILocation(line: 3436, column: 24, scope: !10655)
!10667 = !DILocation(line: 3436, column: 22, scope: !10655)
!10668 = !DILocation(line: 3436, column: 5, scope: !10655)
!10669 = !DILocation(line: 3436, column: 13, scope: !10655)
!10670 = !DILocation(line: 3437, column: 16, scope: !10655)
!10671 = !DILocation(line: 3437, column: 24, scope: !10655)
!10672 = !DILocation(line: 3437, column: 22, scope: !10655)
!10673 = !DILocation(line: 3437, column: 5, scope: !10655)
!10674 = !DILocation(line: 3437, column: 13, scope: !10655)
!10675 = !DILocation(line: 3438, column: 16, scope: !10655)
!10676 = !DILocation(line: 3438, column: 24, scope: !10655)
!10677 = !DILocation(line: 3438, column: 22, scope: !10655)
!10678 = !DILocation(line: 3438, column: 5, scope: !10655)
!10679 = !DILocation(line: 3438, column: 13, scope: !10655)
!10680 = !DILocation(line: 3440, column: 16, scope: !10655)
!10681 = !DILocation(line: 3440, column: 24, scope: !10655)
!10682 = !DILocation(line: 3440, column: 22, scope: !10655)
!10683 = !DILocation(line: 3440, column: 5, scope: !10655)
!10684 = !DILocation(line: 3440, column: 13, scope: !10655)
!10685 = !DILocation(line: 3441, column: 16, scope: !10655)
!10686 = !DILocation(line: 3441, column: 24, scope: !10655)
!10687 = !DILocation(line: 3441, column: 22, scope: !10655)
!10688 = !DILocation(line: 3441, column: 5, scope: !10655)
!10689 = !DILocation(line: 3441, column: 13, scope: !10655)
!10690 = !DILocation(line: 3442, column: 16, scope: !10655)
!10691 = !DILocation(line: 3442, column: 24, scope: !10655)
!10692 = !DILocation(line: 3442, column: 22, scope: !10655)
!10693 = !DILocation(line: 3442, column: 5, scope: !10655)
!10694 = !DILocation(line: 3442, column: 13, scope: !10655)
!10695 = !DILocation(line: 3444, column: 16, scope: !10655)
!10696 = !DILocation(line: 3444, column: 24, scope: !10655)
!10697 = !DILocation(line: 3444, column: 22, scope: !10655)
!10698 = !DILocation(line: 3444, column: 5, scope: !10655)
!10699 = !DILocation(line: 3444, column: 13, scope: !10655)
!10700 = !DILocation(line: 3445, column: 16, scope: !10655)
!10701 = !DILocation(line: 3445, column: 24, scope: !10655)
!10702 = !DILocation(line: 3445, column: 22, scope: !10655)
!10703 = !DILocation(line: 3445, column: 5, scope: !10655)
!10704 = !DILocation(line: 3445, column: 13, scope: !10655)
!10705 = !DILocation(line: 3446, column: 16, scope: !10655)
!10706 = !DILocation(line: 3446, column: 24, scope: !10655)
!10707 = !DILocation(line: 3446, column: 22, scope: !10655)
!10708 = !DILocation(line: 3446, column: 5, scope: !10655)
!10709 = !DILocation(line: 3446, column: 13, scope: !10655)
!10710 = !DILocation(line: 3451, column: 17, scope: !10655)
!10711 = !DILocation(line: 3451, column: 25, scope: !10655)
!10712 = !DILocation(line: 3451, column: 23, scope: !10655)
!10713 = !DILocation(line: 3451, column: 5, scope: !10655)
!10714 = !DILocation(line: 3451, column: 14, scope: !10655)
!10715 = !DILocation(line: 3452, column: 17, scope: !10655)
!10716 = !DILocation(line: 3452, column: 25, scope: !10655)
!10717 = !DILocation(line: 3452, column: 23, scope: !10655)
!10718 = !DILocation(line: 3452, column: 5, scope: !10655)
!10719 = !DILocation(line: 3452, column: 14, scope: !10655)
!10720 = !DILocation(line: 3453, column: 17, scope: !10655)
!10721 = !DILocation(line: 3453, column: 25, scope: !10655)
!10722 = !DILocation(line: 3453, column: 23, scope: !10655)
!10723 = !DILocation(line: 3453, column: 5, scope: !10655)
!10724 = !DILocation(line: 3453, column: 14, scope: !10655)
!10725 = !DILocation(line: 3455, column: 17, scope: !10655)
!10726 = !DILocation(line: 3455, column: 25, scope: !10655)
!10727 = !DILocation(line: 3455, column: 23, scope: !10655)
!10728 = !DILocation(line: 3455, column: 5, scope: !10655)
!10729 = !DILocation(line: 3455, column: 14, scope: !10655)
!10730 = !DILocation(line: 3456, column: 17, scope: !10655)
!10731 = !DILocation(line: 3456, column: 25, scope: !10655)
!10732 = !DILocation(line: 3456, column: 23, scope: !10655)
!10733 = !DILocation(line: 3456, column: 5, scope: !10655)
!10734 = !DILocation(line: 3456, column: 14, scope: !10655)
!10735 = !DILocation(line: 3457, column: 17, scope: !10655)
!10736 = !DILocation(line: 3457, column: 25, scope: !10655)
!10737 = !DILocation(line: 3457, column: 23, scope: !10655)
!10738 = !DILocation(line: 3457, column: 5, scope: !10655)
!10739 = !DILocation(line: 3457, column: 14, scope: !10655)
!10740 = !DILocation(line: 3459, column: 17, scope: !10655)
!10741 = !DILocation(line: 3459, column: 25, scope: !10655)
!10742 = !DILocation(line: 3459, column: 23, scope: !10655)
!10743 = !DILocation(line: 3459, column: 5, scope: !10655)
!10744 = !DILocation(line: 3459, column: 14, scope: !10655)
!10745 = !DILocation(line: 3460, column: 17, scope: !10655)
!10746 = !DILocation(line: 3460, column: 25, scope: !10655)
!10747 = !DILocation(line: 3460, column: 23, scope: !10655)
!10748 = !DILocation(line: 3460, column: 5, scope: !10655)
!10749 = !DILocation(line: 3460, column: 14, scope: !10655)
!10750 = !DILocation(line: 3461, column: 17, scope: !10655)
!10751 = !DILocation(line: 3461, column: 25, scope: !10655)
!10752 = !DILocation(line: 3461, column: 23, scope: !10655)
!10753 = !DILocation(line: 3461, column: 5, scope: !10655)
!10754 = !DILocation(line: 3461, column: 14, scope: !10655)
!10755 = !DILocation(line: 3462, column: 4, scope: !10655)
!10756 = !DILocation(line: 3431, column: 32, scope: !10650)
!10757 = !DILocation(line: 3431, column: 4, scope: !10650)
!10758 = distinct !{!10758, !10653, !10759}
!10759 = !DILocation(line: 3462, column: 4, scope: !10647)
!10760 = !DILocation(line: 3463, column: 15, scope: !10620)
!10761 = !DILocation(line: 3463, column: 18, scope: !10620)
!10762 = !DILocation(line: 3463, column: 4, scope: !10620)
!10763 = !DILocation(line: 3464, column: 15, scope: !10620)
!10764 = !DILocation(line: 3464, column: 4, scope: !10620)
!10765 = !DILocation(line: 3464, column: 13, scope: !10620)
!10766 = !DILocation(line: 3465, column: 15, scope: !10620)
!10767 = !DILocation(line: 3465, column: 4, scope: !10620)
!10768 = !DILocation(line: 3465, column: 13, scope: !10620)
!10769 = !DILocation(line: 3466, column: 15, scope: !10620)
!10770 = !DILocation(line: 3466, column: 4, scope: !10620)
!10771 = !DILocation(line: 3466, column: 13, scope: !10620)
!10772 = !DILocation(line: 3468, column: 14, scope: !10620)
!10773 = !DILocation(line: 3468, column: 30, scope: !10620)
!10774 = !DILocation(line: 3468, column: 23, scope: !10620)
!10775 = !DILocation(line: 3468, column: 21, scope: !10620)
!10776 = !DILocation(line: 3468, column: 4, scope: !10620)
!10777 = !DILocation(line: 3472, column: 9, scope: !10620)
!10778 = !DILocation(line: 3473, column: 32, scope: !10620)
!10779 = !DILocation(line: 3473, column: 11, scope: !10620)
!10780 = !DILocation(line: 3473, column: 9, scope: !10620)
!10781 = !DILocation(line: 3474, column: 4, scope: !10620)
!10782 = !DILocation(line: 3474, column: 12, scope: !10620)
!10783 = !DILocation(line: 3474, column: 19, scope: !10620)
!10784 = !DILocation(line: 3474, column: 17, scope: !10620)
!10785 = !DILocation(line: 3474, column: 28, scope: !10620)
!10786 = !DILocation(line: 3474, column: 35, scope: !10620)
!10787 = !DILocation(line: 3474, column: 33, scope: !10620)
!10788 = !DILocation(line: 3474, column: 25, scope: !10620)
!10789 = !DILocation(line: 3474, column: 41, scope: !10620)
!10790 = !DILocation(line: 3474, column: 47, scope: !10620)
!10791 = !DILocation(line: 3474, column: 50, scope: !10620)
!10792 = !DILocation(line: 3474, column: 54, scope: !10620)
!10793 = !DILocation(line: 3474, column: 52, scope: !10620)
!10794 = !DILocation(line: 0, scope: !10620)
!10795 = !DILocation(line: 3475, column: 18, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10620, file: !3, line: 3474, column: 60)
!10797 = !DILocation(line: 3475, column: 22, scope: !10796)
!10798 = !DILocation(line: 3475, column: 5, scope: !10796)
!10799 = !DILocation(line: 3476, column: 18, scope: !10796)
!10800 = !DILocation(line: 3476, column: 5, scope: !10796)
!10801 = !DILocation(line: 3477, column: 17, scope: !10796)
!10802 = !DILocation(line: 3477, column: 20, scope: !10796)
!10803 = !DILocation(line: 3477, column: 23, scope: !10796)
!10804 = !DILocation(line: 3477, column: 5, scope: !10796)
!10805 = !DILocation(line: 3478, column: 15, scope: !10796)
!10806 = !DILocation(line: 3478, column: 5, scope: !10796)
!10807 = !DILocation(line: 3479, column: 12, scope: !10796)
!10808 = !DILocation(line: 3479, column: 10, scope: !10796)
!10809 = !DILocation(line: 3480, column: 33, scope: !10796)
!10810 = !DILocation(line: 3480, column: 12, scope: !10796)
!10811 = !DILocation(line: 3480, column: 10, scope: !10796)
!10812 = !DILocation(line: 3481, column: 6, scope: !10796)
!10813 = distinct !{!10813, !10781, !10814}
!10814 = !DILocation(line: 3482, column: 4, scope: !10620)
!10815 = !DILocation(line: 3484, column: 8, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10620, file: !3, line: 3484, column: 8)
!10817 = !DILocation(line: 3484, column: 8, scope: !10620)
!10818 = !DILocalVariable(name: "scale", scope: !10819, file: !3, line: 3485, type: !839)
!10819 = distinct !DILexicalBlock(scope: !10816, file: !3, line: 3484, column: 11)
!10820 = !DILocation(line: 3485, column: 11, scope: !10819)
!10821 = !DILocalVariable(name: "irot", scope: !10819, file: !3, line: 3486, type: !839)
!10822 = !DILocation(line: 3486, column: 11, scope: !10819)
!10823 = !DILocation(line: 3487, column: 9, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10819, file: !3, line: 3487, column: 9)
!10825 = !DILocation(line: 3487, column: 9, scope: !10819)
!10826 = !DILocation(line: 3487, column: 26, scope: !10824)
!10827 = !DILocation(line: 3487, column: 32, scope: !10824)
!10828 = !DILocation(line: 3487, column: 15, scope: !10824)
!10829 = !DILocation(line: 3488, column: 18, scope: !10819)
!10830 = !DILocation(line: 3488, column: 24, scope: !10819)
!10831 = !DILocation(line: 3488, column: 5, scope: !10819)
!10832 = !DILocation(line: 3489, column: 18, scope: !10819)
!10833 = !DILocation(line: 3489, column: 22, scope: !10819)
!10834 = !DILocation(line: 3489, column: 5, scope: !10819)
!10835 = !DILocation(line: 3490, column: 17, scope: !10819)
!10836 = !DILocation(line: 3490, column: 20, scope: !10819)
!10837 = !DILocation(line: 3490, column: 23, scope: !10819)
!10838 = !DILocation(line: 3490, column: 5, scope: !10819)
!10839 = !DILocation(line: 3491, column: 17, scope: !10819)
!10840 = !DILocation(line: 3491, column: 24, scope: !10819)
!10841 = !DILocation(line: 3491, column: 30, scope: !10819)
!10842 = !DILocation(line: 3491, column: 5, scope: !10819)
!10843 = !DILocation(line: 3492, column: 9, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10819, file: !3, line: 3492, column: 9)
!10845 = !DILocation(line: 3492, column: 9, scope: !10819)
!10846 = !DILocation(line: 3492, column: 28, scope: !10844)
!10847 = !DILocation(line: 3492, column: 36, scope: !10844)
!10848 = !DILocation(line: 3492, column: 17, scope: !10844)
!10849 = !DILocation(line: 3494, column: 4, scope: !10819)
!10850 = !DILocation(line: 3495, column: 3, scope: !10620)
!10851 = !DILocation(line: 3496, column: 2, scope: !10518)
!10852 = !DILocation(line: 3497, column: 1, scope: !10455)
!10853 = !DILocalVariable(name: "p", arg: 1, scope: !2, file: !3, line: 3508, type: !7)
!10854 = !DILocation(line: 3508, column: 43, scope: !2)
!10855 = !DILocalVariable(name: "n", arg: 2, scope: !2, file: !3, line: 3508, type: !7)
!10856 = !DILocation(line: 3508, column: 61, scope: !2)
!10857 = !DILocalVariable(name: "v0", arg: 3, scope: !2, file: !3, line: 3509, type: !7)
!10858 = !DILocation(line: 3509, column: 43, scope: !2)
!10859 = !DILocalVariable(name: "v1", arg: 4, scope: !2, file: !3, line: 3509, type: !7)
!10860 = !DILocation(line: 3509, column: 62, scope: !2)
!10861 = !DILocalVariable(name: "v2", arg: 5, scope: !2, file: !3, line: 3509, type: !7)
!10862 = !DILocation(line: 3509, column: 81, scope: !2)
!10863 = !DILocalVariable(name: "q0", arg: 6, scope: !2, file: !3, line: 3510, type: !10)
!10864 = !DILocation(line: 3510, column: 37, scope: !2)
!10865 = !DILocalVariable(name: "q1", arg: 7, scope: !2, file: !3, line: 3510, type: !10)
!10866 = !DILocation(line: 3510, column: 50, scope: !2)
!10867 = !DILocalVariable(name: "q2", arg: 8, scope: !2, file: !3, line: 3510, type: !10)
!10868 = !DILocation(line: 3510, column: 63, scope: !2)
!10869 = !DILocalVariable(name: "q3", arg: 9, scope: !2, file: !3, line: 3510, type: !10)
!10870 = !DILocation(line: 3510, column: 76, scope: !2)
!10871 = !DILocalVariable(name: "sd", scope: !2, file: !3, line: 3513, type: !117)
!10872 = !DILocation(line: 3513, column: 8, scope: !2)
!10873 = !DILocalVariable(name: "c", scope: !2, file: !3, line: 3514, type: !8)
!10874 = !DILocation(line: 3514, column: 14, scope: !2)
!10875 = !DILocation(line: 3514, column: 27, scope: !2)
!10876 = !DILocation(line: 3514, column: 30, scope: !2)
!10877 = !DILocation(line: 3514, column: 18, scope: !2)
!10878 = !DILocation(line: 3517, column: 19, scope: !2)
!10879 = !DILocation(line: 3517, column: 22, scope: !2)
!10880 = !DILocation(line: 3517, column: 10, scope: !2)
!10881 = !DILocation(line: 3517, column: 28, scope: !2)
!10882 = !DILocation(line: 3517, column: 26, scope: !2)
!10883 = !DILocation(line: 3517, column: 2, scope: !2)
!10884 = !DILocation(line: 3517, column: 8, scope: !2)
!10885 = !DILocation(line: 3518, column: 19, scope: !2)
!10886 = !DILocation(line: 3518, column: 22, scope: !2)
!10887 = !DILocation(line: 3518, column: 10, scope: !2)
!10888 = !DILocation(line: 3518, column: 28, scope: !2)
!10889 = !DILocation(line: 3518, column: 26, scope: !2)
!10890 = !DILocation(line: 3518, column: 2, scope: !2)
!10891 = !DILocation(line: 3518, column: 8, scope: !2)
!10892 = !DILocation(line: 3519, column: 19, scope: !2)
!10893 = !DILocation(line: 3519, column: 22, scope: !2)
!10894 = !DILocation(line: 3519, column: 10, scope: !2)
!10895 = !DILocation(line: 3519, column: 28, scope: !2)
!10896 = !DILocation(line: 3519, column: 26, scope: !2)
!10897 = !DILocation(line: 3519, column: 2, scope: !2)
!10898 = !DILocation(line: 3519, column: 8, scope: !2)
!10899 = !DILocation(line: 3521, column: 12, scope: !10900)
!10900 = distinct !DILexicalBlock(scope: !2, file: !3, line: 3521, column: 6)
!10901 = !DILocation(line: 3521, column: 6, scope: !10900)
!10902 = !DILocation(line: 3521, column: 19, scope: !10900)
!10903 = !DILocation(line: 3521, column: 6, scope: !2)
!10904 = !DILocation(line: 3521, column: 30, scope: !10900)
!10905 = !DILocation(line: 3521, column: 36, scope: !10900)
!10906 = !DILocation(line: 3522, column: 12, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !2, file: !3, line: 3522, column: 6)
!10908 = !DILocation(line: 3522, column: 6, scope: !10907)
!10909 = !DILocation(line: 3522, column: 19, scope: !10907)
!10910 = !DILocation(line: 3522, column: 6, scope: !2)
!10911 = !DILocation(line: 3522, column: 30, scope: !10907)
!10912 = !DILocation(line: 3522, column: 36, scope: !10907)
!10913 = !DILocation(line: 3523, column: 12, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !2, file: !3, line: 3523, column: 6)
!10915 = !DILocation(line: 3523, column: 6, scope: !10914)
!10916 = !DILocation(line: 3523, column: 19, scope: !10914)
!10917 = !DILocation(line: 3523, column: 6, scope: !2)
!10918 = !DILocation(line: 3523, column: 30, scope: !10914)
!10919 = !DILocation(line: 3523, column: 36, scope: !10914)
!10920 = !DILocation(line: 3525, column: 6, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !2, file: !3, line: 3525, column: 6)
!10922 = !DILocation(line: 3525, column: 12, scope: !10921)
!10923 = !DILocation(line: 3525, column: 6, scope: !2)
!10924 = !DILocation(line: 3526, column: 7, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10926, file: !3, line: 3526, column: 7)
!10926 = distinct !DILexicalBlock(scope: !10921, file: !3, line: 3525, column: 20)
!10927 = !DILocation(line: 3526, column: 13, scope: !10925)
!10928 = !DILocation(line: 3526, column: 7, scope: !10926)
!10929 = !DILocation(line: 3527, column: 8, scope: !10930)
!10930 = distinct !DILexicalBlock(scope: !10931, file: !3, line: 3527, column: 8)
!10931 = distinct !DILexicalBlock(scope: !10925, file: !3, line: 3526, column: 21)
!10932 = !DILocation(line: 3527, column: 14, scope: !10930)
!10933 = !DILocation(line: 3527, column: 8, scope: !10931)
!10934 = !DILocation(line: 3529, column: 16, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10930, file: !3, line: 3527, column: 22)
!10936 = !DILocation(line: 3529, column: 20, scope: !10935)
!10937 = !DILocation(line: 3529, column: 5, scope: !10935)
!10938 = !DILocation(line: 3530, column: 16, scope: !10935)
!10939 = !DILocation(line: 3530, column: 20, scope: !10935)
!10940 = !DILocation(line: 3530, column: 5, scope: !10935)
!10941 = !DILocation(line: 3531, column: 16, scope: !10935)
!10942 = !DILocation(line: 3531, column: 20, scope: !10935)
!10943 = !DILocation(line: 3531, column: 5, scope: !10935)
!10944 = !DILocation(line: 3532, column: 16, scope: !10935)
!10945 = !DILocation(line: 3532, column: 20, scope: !10935)
!10946 = !DILocation(line: 3532, column: 5, scope: !10935)
!10947 = !DILocation(line: 3533, column: 4, scope: !10935)
!10948 = !DILocation(line: 3534, column: 13, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10930, file: !3, line: 3534, column: 13)
!10950 = !DILocation(line: 3534, column: 19, scope: !10949)
!10951 = !DILocation(line: 3534, column: 13, scope: !10930)
!10952 = !DILocation(line: 3536, column: 16, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10949, file: !3, line: 3534, column: 27)
!10954 = !DILocation(line: 3536, column: 20, scope: !10953)
!10955 = !DILocation(line: 3536, column: 5, scope: !10953)
!10956 = !DILocation(line: 3537, column: 16, scope: !10953)
!10957 = !DILocation(line: 3537, column: 20, scope: !10953)
!10958 = !DILocation(line: 3537, column: 5, scope: !10953)
!10959 = !DILocation(line: 3538, column: 17, scope: !10953)
!10960 = !DILocation(line: 3538, column: 21, scope: !10953)
!10961 = !DILocation(line: 3538, column: 25, scope: !10953)
!10962 = !DILocation(line: 3538, column: 30, scope: !10953)
!10963 = !DILocation(line: 3538, column: 39, scope: !10953)
!10964 = !DILocation(line: 3538, column: 47, scope: !10953)
!10965 = !DILocation(line: 3538, column: 45, scope: !10953)
!10966 = !DILocation(line: 3538, column: 36, scope: !10953)
!10967 = !DILocation(line: 3538, column: 5, scope: !10953)
!10968 = !DILocation(line: 3539, column: 17, scope: !10953)
!10969 = !DILocation(line: 3539, column: 21, scope: !10953)
!10970 = !DILocation(line: 3539, column: 25, scope: !10953)
!10971 = !DILocation(line: 3539, column: 30, scope: !10953)
!10972 = !DILocation(line: 3539, column: 39, scope: !10953)
!10973 = !DILocation(line: 3539, column: 47, scope: !10953)
!10974 = !DILocation(line: 3539, column: 45, scope: !10953)
!10975 = !DILocation(line: 3539, column: 36, scope: !10953)
!10976 = !DILocation(line: 3539, column: 5, scope: !10953)
!10977 = !DILocation(line: 3540, column: 4, scope: !10953)
!10978 = !DILocation(line: 3543, column: 16, scope: !10979)
!10979 = distinct !DILexicalBlock(scope: !10949, file: !3, line: 3541, column: 9)
!10980 = !DILocation(line: 3543, column: 20, scope: !10979)
!10981 = !DILocation(line: 3543, column: 5, scope: !10979)
!10982 = !DILocation(line: 3544, column: 16, scope: !10979)
!10983 = !DILocation(line: 3544, column: 20, scope: !10979)
!10984 = !DILocation(line: 3544, column: 5, scope: !10979)
!10985 = !DILocation(line: 3545, column: 16, scope: !10979)
!10986 = !DILocation(line: 3545, column: 20, scope: !10979)
!10987 = !DILocation(line: 3545, column: 5, scope: !10979)
!10988 = !DILocation(line: 3546, column: 16, scope: !10979)
!10989 = !DILocation(line: 3546, column: 20, scope: !10979)
!10990 = !DILocation(line: 3546, column: 5, scope: !10979)
!10991 = !DILocation(line: 3548, column: 3, scope: !10931)
!10992 = !DILocation(line: 3549, column: 12, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10925, file: !3, line: 3549, column: 12)
!10994 = !DILocation(line: 3549, column: 18, scope: !10993)
!10995 = !DILocation(line: 3549, column: 12, scope: !10925)
!10996 = !DILocation(line: 3550, column: 8, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10998, file: !3, line: 3550, column: 8)
!10998 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 3549, column: 26)
!10999 = !DILocation(line: 3550, column: 14, scope: !10997)
!11000 = !DILocation(line: 3550, column: 8, scope: !10998)
!11001 = !DILocation(line: 3552, column: 16, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10997, file: !3, line: 3550, column: 22)
!11003 = !DILocation(line: 3552, column: 20, scope: !11002)
!11004 = !DILocation(line: 3552, column: 5, scope: !11002)
!11005 = !DILocation(line: 3553, column: 17, scope: !11002)
!11006 = !DILocation(line: 3553, column: 21, scope: !11002)
!11007 = !DILocation(line: 3553, column: 25, scope: !11002)
!11008 = !DILocation(line: 3553, column: 30, scope: !11002)
!11009 = !DILocation(line: 3553, column: 39, scope: !11002)
!11010 = !DILocation(line: 3553, column: 47, scope: !11002)
!11011 = !DILocation(line: 3553, column: 45, scope: !11002)
!11012 = !DILocation(line: 3553, column: 36, scope: !11002)
!11013 = !DILocation(line: 3553, column: 5, scope: !11002)
!11014 = !DILocation(line: 3554, column: 17, scope: !11002)
!11015 = !DILocation(line: 3554, column: 21, scope: !11002)
!11016 = !DILocation(line: 3554, column: 25, scope: !11002)
!11017 = !DILocation(line: 3554, column: 30, scope: !11002)
!11018 = !DILocation(line: 3554, column: 39, scope: !11002)
!11019 = !DILocation(line: 3554, column: 47, scope: !11002)
!11020 = !DILocation(line: 3554, column: 45, scope: !11002)
!11021 = !DILocation(line: 3554, column: 36, scope: !11002)
!11022 = !DILocation(line: 3554, column: 5, scope: !11002)
!11023 = !DILocation(line: 3555, column: 16, scope: !11002)
!11024 = !DILocation(line: 3555, column: 20, scope: !11002)
!11025 = !DILocation(line: 3555, column: 5, scope: !11002)
!11026 = !DILocation(line: 3556, column: 4, scope: !11002)
!11027 = !DILocation(line: 3557, column: 13, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !10997, file: !3, line: 3557, column: 13)
!11029 = !DILocation(line: 3557, column: 19, scope: !11028)
!11030 = !DILocation(line: 3557, column: 13, scope: !10997)
!11031 = !DILocation(line: 3559, column: 16, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11028, file: !3, line: 3557, column: 27)
!11033 = !DILocation(line: 3559, column: 20, scope: !11032)
!11034 = !DILocation(line: 3559, column: 5, scope: !11032)
!11035 = !DILocation(line: 3560, column: 17, scope: !11032)
!11036 = !DILocation(line: 3560, column: 21, scope: !11032)
!11037 = !DILocation(line: 3560, column: 25, scope: !11032)
!11038 = !DILocation(line: 3560, column: 30, scope: !11032)
!11039 = !DILocation(line: 3560, column: 39, scope: !11032)
!11040 = !DILocation(line: 3560, column: 47, scope: !11032)
!11041 = !DILocation(line: 3560, column: 45, scope: !11032)
!11042 = !DILocation(line: 3560, column: 36, scope: !11032)
!11043 = !DILocation(line: 3560, column: 5, scope: !11032)
!11044 = !DILocation(line: 3561, column: 17, scope: !11032)
!11045 = !DILocation(line: 3561, column: 21, scope: !11032)
!11046 = !DILocation(line: 3561, column: 25, scope: !11032)
!11047 = !DILocation(line: 3561, column: 30, scope: !11032)
!11048 = !DILocation(line: 3561, column: 39, scope: !11032)
!11049 = !DILocation(line: 3561, column: 47, scope: !11032)
!11050 = !DILocation(line: 3561, column: 45, scope: !11032)
!11051 = !DILocation(line: 3561, column: 36, scope: !11032)
!11052 = !DILocation(line: 3561, column: 5, scope: !11032)
!11053 = !DILocation(line: 3562, column: 16, scope: !11032)
!11054 = !DILocation(line: 3562, column: 20, scope: !11032)
!11055 = !DILocation(line: 3562, column: 5, scope: !11032)
!11056 = !DILocation(line: 3563, column: 4, scope: !11032)
!11057 = !DILocation(line: 3566, column: 16, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11028, file: !3, line: 3564, column: 9)
!11059 = !DILocation(line: 3566, column: 20, scope: !11058)
!11060 = !DILocation(line: 3566, column: 5, scope: !11058)
!11061 = !DILocation(line: 3567, column: 17, scope: !11058)
!11062 = !DILocation(line: 3567, column: 21, scope: !11058)
!11063 = !DILocation(line: 3567, column: 25, scope: !11058)
!11064 = !DILocation(line: 3567, column: 30, scope: !11058)
!11065 = !DILocation(line: 3567, column: 39, scope: !11058)
!11066 = !DILocation(line: 3567, column: 47, scope: !11058)
!11067 = !DILocation(line: 3567, column: 45, scope: !11058)
!11068 = !DILocation(line: 3567, column: 36, scope: !11058)
!11069 = !DILocation(line: 3567, column: 5, scope: !11058)
!11070 = !DILocation(line: 3568, column: 16, scope: !11058)
!11071 = !DILocation(line: 3568, column: 20, scope: !11058)
!11072 = !DILocation(line: 3568, column: 5, scope: !11058)
!11073 = !DILocation(line: 3569, column: 16, scope: !11058)
!11074 = !DILocation(line: 3569, column: 20, scope: !11058)
!11075 = !DILocation(line: 3569, column: 5, scope: !11058)
!11076 = !DILocation(line: 3571, column: 3, scope: !10998)
!11077 = !DILocation(line: 3573, column: 8, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11079, file: !3, line: 3573, column: 8)
!11079 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 3572, column: 8)
!11080 = !DILocation(line: 3573, column: 14, scope: !11078)
!11081 = !DILocation(line: 3573, column: 8, scope: !11079)
!11082 = !DILocation(line: 3575, column: 16, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11078, file: !3, line: 3573, column: 22)
!11084 = !DILocation(line: 3575, column: 20, scope: !11083)
!11085 = !DILocation(line: 3575, column: 5, scope: !11083)
!11086 = !DILocation(line: 3576, column: 16, scope: !11083)
!11087 = !DILocation(line: 3576, column: 20, scope: !11083)
!11088 = !DILocation(line: 3576, column: 5, scope: !11083)
!11089 = !DILocation(line: 3577, column: 16, scope: !11083)
!11090 = !DILocation(line: 3577, column: 20, scope: !11083)
!11091 = !DILocation(line: 3577, column: 5, scope: !11083)
!11092 = !DILocation(line: 3578, column: 16, scope: !11083)
!11093 = !DILocation(line: 3578, column: 20, scope: !11083)
!11094 = !DILocation(line: 3578, column: 5, scope: !11083)
!11095 = !DILocation(line: 3579, column: 4, scope: !11083)
!11096 = !DILocation(line: 3580, column: 13, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11078, file: !3, line: 3580, column: 13)
!11098 = !DILocation(line: 3580, column: 19, scope: !11097)
!11099 = !DILocation(line: 3580, column: 13, scope: !11078)
!11100 = !DILocation(line: 3582, column: 16, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11097, file: !3, line: 3580, column: 27)
!11102 = !DILocation(line: 3582, column: 20, scope: !11101)
!11103 = !DILocation(line: 3582, column: 5, scope: !11101)
!11104 = !DILocation(line: 3583, column: 16, scope: !11101)
!11105 = !DILocation(line: 3583, column: 20, scope: !11101)
!11106 = !DILocation(line: 3583, column: 5, scope: !11101)
!11107 = !DILocation(line: 3584, column: 17, scope: !11101)
!11108 = !DILocation(line: 3584, column: 21, scope: !11101)
!11109 = !DILocation(line: 3584, column: 25, scope: !11101)
!11110 = !DILocation(line: 3584, column: 30, scope: !11101)
!11111 = !DILocation(line: 3584, column: 39, scope: !11101)
!11112 = !DILocation(line: 3584, column: 47, scope: !11101)
!11113 = !DILocation(line: 3584, column: 45, scope: !11101)
!11114 = !DILocation(line: 3584, column: 36, scope: !11101)
!11115 = !DILocation(line: 3584, column: 5, scope: !11101)
!11116 = !DILocation(line: 3585, column: 16, scope: !11101)
!11117 = !DILocation(line: 3585, column: 20, scope: !11101)
!11118 = !DILocation(line: 3585, column: 5, scope: !11101)
!11119 = !DILocation(line: 3586, column: 4, scope: !11101)
!11120 = !DILocation(line: 3589, column: 16, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11097, file: !3, line: 3587, column: 9)
!11122 = !DILocation(line: 3589, column: 20, scope: !11121)
!11123 = !DILocation(line: 3589, column: 5, scope: !11121)
!11124 = !DILocation(line: 3590, column: 16, scope: !11121)
!11125 = !DILocation(line: 3590, column: 20, scope: !11121)
!11126 = !DILocation(line: 3590, column: 5, scope: !11121)
!11127 = !DILocation(line: 3591, column: 16, scope: !11121)
!11128 = !DILocation(line: 3591, column: 20, scope: !11121)
!11129 = !DILocation(line: 3591, column: 5, scope: !11121)
!11130 = !DILocation(line: 3592, column: 16, scope: !11121)
!11131 = !DILocation(line: 3592, column: 20, scope: !11121)
!11132 = !DILocation(line: 3592, column: 5, scope: !11121)
!11133 = !DILocation(line: 3595, column: 2, scope: !10926)
!11134 = !DILocation(line: 3596, column: 11, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !10921, file: !3, line: 3596, column: 11)
!11136 = !DILocation(line: 3596, column: 17, scope: !11135)
!11137 = !DILocation(line: 3596, column: 11, scope: !10921)
!11138 = !DILocation(line: 3597, column: 7, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11140, file: !3, line: 3597, column: 7)
!11140 = distinct !DILexicalBlock(scope: !11135, file: !3, line: 3596, column: 25)
!11141 = !DILocation(line: 3597, column: 13, scope: !11139)
!11142 = !DILocation(line: 3597, column: 7, scope: !11140)
!11143 = !DILocation(line: 3598, column: 8, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11145, file: !3, line: 3598, column: 8)
!11145 = distinct !DILexicalBlock(scope: !11139, file: !3, line: 3597, column: 21)
!11146 = !DILocation(line: 3598, column: 14, scope: !11144)
!11147 = !DILocation(line: 3598, column: 8, scope: !11145)
!11148 = !DILocation(line: 3600, column: 17, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11144, file: !3, line: 3598, column: 22)
!11150 = !DILocation(line: 3600, column: 21, scope: !11149)
!11151 = !DILocation(line: 3600, column: 25, scope: !11149)
!11152 = !DILocation(line: 3600, column: 30, scope: !11149)
!11153 = !DILocation(line: 3600, column: 39, scope: !11149)
!11154 = !DILocation(line: 3600, column: 47, scope: !11149)
!11155 = !DILocation(line: 3600, column: 45, scope: !11149)
!11156 = !DILocation(line: 3600, column: 36, scope: !11149)
!11157 = !DILocation(line: 3600, column: 5, scope: !11149)
!11158 = !DILocation(line: 3601, column: 16, scope: !11149)
!11159 = !DILocation(line: 3601, column: 20, scope: !11149)
!11160 = !DILocation(line: 3601, column: 5, scope: !11149)
!11161 = !DILocation(line: 3602, column: 16, scope: !11149)
!11162 = !DILocation(line: 3602, column: 20, scope: !11149)
!11163 = !DILocation(line: 3602, column: 5, scope: !11149)
!11164 = !DILocation(line: 3603, column: 17, scope: !11149)
!11165 = !DILocation(line: 3603, column: 21, scope: !11149)
!11166 = !DILocation(line: 3603, column: 25, scope: !11149)
!11167 = !DILocation(line: 3603, column: 30, scope: !11149)
!11168 = !DILocation(line: 3603, column: 39, scope: !11149)
!11169 = !DILocation(line: 3603, column: 47, scope: !11149)
!11170 = !DILocation(line: 3603, column: 45, scope: !11149)
!11171 = !DILocation(line: 3603, column: 36, scope: !11149)
!11172 = !DILocation(line: 3603, column: 5, scope: !11149)
!11173 = !DILocation(line: 3604, column: 4, scope: !11149)
!11174 = !DILocation(line: 3605, column: 13, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11144, file: !3, line: 3605, column: 13)
!11176 = !DILocation(line: 3605, column: 19, scope: !11175)
!11177 = !DILocation(line: 3605, column: 13, scope: !11144)
!11178 = !DILocation(line: 3607, column: 17, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11175, file: !3, line: 3605, column: 27)
!11180 = !DILocation(line: 3607, column: 21, scope: !11179)
!11181 = !DILocation(line: 3607, column: 25, scope: !11179)
!11182 = !DILocation(line: 3607, column: 30, scope: !11179)
!11183 = !DILocation(line: 3607, column: 39, scope: !11179)
!11184 = !DILocation(line: 3607, column: 47, scope: !11179)
!11185 = !DILocation(line: 3607, column: 45, scope: !11179)
!11186 = !DILocation(line: 3607, column: 36, scope: !11179)
!11187 = !DILocation(line: 3607, column: 5, scope: !11179)
!11188 = !DILocation(line: 3608, column: 16, scope: !11179)
!11189 = !DILocation(line: 3608, column: 20, scope: !11179)
!11190 = !DILocation(line: 3608, column: 5, scope: !11179)
!11191 = !DILocation(line: 3609, column: 17, scope: !11179)
!11192 = !DILocation(line: 3609, column: 21, scope: !11179)
!11193 = !DILocation(line: 3609, column: 25, scope: !11179)
!11194 = !DILocation(line: 3609, column: 30, scope: !11179)
!11195 = !DILocation(line: 3609, column: 39, scope: !11179)
!11196 = !DILocation(line: 3609, column: 47, scope: !11179)
!11197 = !DILocation(line: 3609, column: 45, scope: !11179)
!11198 = !DILocation(line: 3609, column: 36, scope: !11179)
!11199 = !DILocation(line: 3609, column: 5, scope: !11179)
!11200 = !DILocation(line: 3610, column: 16, scope: !11179)
!11201 = !DILocation(line: 3610, column: 20, scope: !11179)
!11202 = !DILocation(line: 3610, column: 5, scope: !11179)
!11203 = !DILocation(line: 3611, column: 4, scope: !11179)
!11204 = !DILocation(line: 3614, column: 17, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11175, file: !3, line: 3612, column: 9)
!11206 = !DILocation(line: 3614, column: 21, scope: !11205)
!11207 = !DILocation(line: 3614, column: 25, scope: !11205)
!11208 = !DILocation(line: 3614, column: 30, scope: !11205)
!11209 = !DILocation(line: 3614, column: 39, scope: !11205)
!11210 = !DILocation(line: 3614, column: 47, scope: !11205)
!11211 = !DILocation(line: 3614, column: 45, scope: !11205)
!11212 = !DILocation(line: 3614, column: 36, scope: !11205)
!11213 = !DILocation(line: 3614, column: 5, scope: !11205)
!11214 = !DILocation(line: 3615, column: 16, scope: !11205)
!11215 = !DILocation(line: 3615, column: 20, scope: !11205)
!11216 = !DILocation(line: 3615, column: 5, scope: !11205)
!11217 = !DILocation(line: 3616, column: 16, scope: !11205)
!11218 = !DILocation(line: 3616, column: 20, scope: !11205)
!11219 = !DILocation(line: 3616, column: 5, scope: !11205)
!11220 = !DILocation(line: 3617, column: 16, scope: !11205)
!11221 = !DILocation(line: 3617, column: 20, scope: !11205)
!11222 = !DILocation(line: 3617, column: 5, scope: !11205)
!11223 = !DILocation(line: 3619, column: 3, scope: !11145)
!11224 = !DILocation(line: 3620, column: 12, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11139, file: !3, line: 3620, column: 12)
!11226 = !DILocation(line: 3620, column: 18, scope: !11225)
!11227 = !DILocation(line: 3620, column: 12, scope: !11139)
!11228 = !DILocation(line: 3621, column: 8, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11230, file: !3, line: 3621, column: 8)
!11230 = distinct !DILexicalBlock(scope: !11225, file: !3, line: 3620, column: 26)
!11231 = !DILocation(line: 3621, column: 14, scope: !11229)
!11232 = !DILocation(line: 3621, column: 8, scope: !11230)
!11233 = !DILocation(line: 3623, column: 17, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 3621, column: 22)
!11235 = !DILocation(line: 3623, column: 21, scope: !11234)
!11236 = !DILocation(line: 3623, column: 25, scope: !11234)
!11237 = !DILocation(line: 3623, column: 30, scope: !11234)
!11238 = !DILocation(line: 3623, column: 39, scope: !11234)
!11239 = !DILocation(line: 3623, column: 47, scope: !11234)
!11240 = !DILocation(line: 3623, column: 45, scope: !11234)
!11241 = !DILocation(line: 3623, column: 36, scope: !11234)
!11242 = !DILocation(line: 3623, column: 5, scope: !11234)
!11243 = !DILocation(line: 3624, column: 17, scope: !11234)
!11244 = !DILocation(line: 3624, column: 21, scope: !11234)
!11245 = !DILocation(line: 3624, column: 25, scope: !11234)
!11246 = !DILocation(line: 3624, column: 30, scope: !11234)
!11247 = !DILocation(line: 3624, column: 39, scope: !11234)
!11248 = !DILocation(line: 3624, column: 47, scope: !11234)
!11249 = !DILocation(line: 3624, column: 45, scope: !11234)
!11250 = !DILocation(line: 3624, column: 36, scope: !11234)
!11251 = !DILocation(line: 3624, column: 5, scope: !11234)
!11252 = !DILocation(line: 3625, column: 16, scope: !11234)
!11253 = !DILocation(line: 3625, column: 20, scope: !11234)
!11254 = !DILocation(line: 3625, column: 5, scope: !11234)
!11255 = !DILocation(line: 3626, column: 16, scope: !11234)
!11256 = !DILocation(line: 3626, column: 20, scope: !11234)
!11257 = !DILocation(line: 3626, column: 5, scope: !11234)
!11258 = !DILocation(line: 3627, column: 4, scope: !11234)
!11259 = !DILocation(line: 3628, column: 13, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 3628, column: 13)
!11261 = !DILocation(line: 3628, column: 19, scope: !11260)
!11262 = !DILocation(line: 3628, column: 13, scope: !11229)
!11263 = !DILocation(line: 3630, column: 5, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11260, file: !3, line: 3628, column: 27)
!11265 = !DILocation(line: 3634, column: 5, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11260, file: !3, line: 3632, column: 9)
!11267 = !DILocation(line: 3636, column: 3, scope: !11230)
!11268 = !DILocation(line: 3638, column: 8, scope: !11269)
!11269 = distinct !DILexicalBlock(scope: !11270, file: !3, line: 3638, column: 8)
!11270 = distinct !DILexicalBlock(scope: !11225, file: !3, line: 3637, column: 8)
!11271 = !DILocation(line: 3638, column: 14, scope: !11269)
!11272 = !DILocation(line: 3638, column: 8, scope: !11270)
!11273 = !DILocation(line: 3640, column: 17, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11269, file: !3, line: 3638, column: 22)
!11275 = !DILocation(line: 3640, column: 21, scope: !11274)
!11276 = !DILocation(line: 3640, column: 25, scope: !11274)
!11277 = !DILocation(line: 3640, column: 30, scope: !11274)
!11278 = !DILocation(line: 3640, column: 39, scope: !11274)
!11279 = !DILocation(line: 3640, column: 47, scope: !11274)
!11280 = !DILocation(line: 3640, column: 45, scope: !11274)
!11281 = !DILocation(line: 3640, column: 36, scope: !11274)
!11282 = !DILocation(line: 3640, column: 5, scope: !11274)
!11283 = !DILocation(line: 3641, column: 16, scope: !11274)
!11284 = !DILocation(line: 3641, column: 20, scope: !11274)
!11285 = !DILocation(line: 3641, column: 5, scope: !11274)
!11286 = !DILocation(line: 3642, column: 16, scope: !11274)
!11287 = !DILocation(line: 3642, column: 20, scope: !11274)
!11288 = !DILocation(line: 3642, column: 5, scope: !11274)
!11289 = !DILocation(line: 3643, column: 16, scope: !11274)
!11290 = !DILocation(line: 3643, column: 20, scope: !11274)
!11291 = !DILocation(line: 3643, column: 5, scope: !11274)
!11292 = !DILocation(line: 3644, column: 4, scope: !11274)
!11293 = !DILocation(line: 3645, column: 13, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11269, file: !3, line: 3645, column: 13)
!11295 = !DILocation(line: 3645, column: 19, scope: !11294)
!11296 = !DILocation(line: 3645, column: 13, scope: !11269)
!11297 = !DILocation(line: 3647, column: 5, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11294, file: !3, line: 3645, column: 27)
!11299 = !DILocation(line: 3651, column: 5, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11294, file: !3, line: 3649, column: 9)
!11301 = !DILocation(line: 3654, column: 2, scope: !11140)
!11302 = !DILocation(line: 3656, column: 7, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11304, file: !3, line: 3656, column: 7)
!11304 = distinct !DILexicalBlock(scope: !11135, file: !3, line: 3655, column: 7)
!11305 = !DILocation(line: 3656, column: 13, scope: !11303)
!11306 = !DILocation(line: 3656, column: 7, scope: !11304)
!11307 = !DILocation(line: 3657, column: 8, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11309, file: !3, line: 3657, column: 8)
!11309 = distinct !DILexicalBlock(scope: !11303, file: !3, line: 3656, column: 21)
!11310 = !DILocation(line: 3657, column: 14, scope: !11308)
!11311 = !DILocation(line: 3657, column: 8, scope: !11309)
!11312 = !DILocation(line: 3659, column: 16, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !11308, file: !3, line: 3657, column: 22)
!11314 = !DILocation(line: 3659, column: 20, scope: !11313)
!11315 = !DILocation(line: 3659, column: 5, scope: !11313)
!11316 = !DILocation(line: 3660, column: 16, scope: !11313)
!11317 = !DILocation(line: 3660, column: 20, scope: !11313)
!11318 = !DILocation(line: 3660, column: 5, scope: !11313)
!11319 = !DILocation(line: 3661, column: 16, scope: !11313)
!11320 = !DILocation(line: 3661, column: 20, scope: !11313)
!11321 = !DILocation(line: 3661, column: 5, scope: !11313)
!11322 = !DILocation(line: 3662, column: 16, scope: !11313)
!11323 = !DILocation(line: 3662, column: 20, scope: !11313)
!11324 = !DILocation(line: 3662, column: 5, scope: !11313)
!11325 = !DILocation(line: 3663, column: 4, scope: !11313)
!11326 = !DILocation(line: 3664, column: 13, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11308, file: !3, line: 3664, column: 13)
!11328 = !DILocation(line: 3664, column: 19, scope: !11327)
!11329 = !DILocation(line: 3664, column: 13, scope: !11308)
!11330 = !DILocation(line: 3666, column: 16, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11327, file: !3, line: 3664, column: 27)
!11332 = !DILocation(line: 3666, column: 20, scope: !11331)
!11333 = !DILocation(line: 3666, column: 5, scope: !11331)
!11334 = !DILocation(line: 3667, column: 16, scope: !11331)
!11335 = !DILocation(line: 3667, column: 20, scope: !11331)
!11336 = !DILocation(line: 3667, column: 5, scope: !11331)
!11337 = !DILocation(line: 3668, column: 17, scope: !11331)
!11338 = !DILocation(line: 3668, column: 21, scope: !11331)
!11339 = !DILocation(line: 3668, column: 25, scope: !11331)
!11340 = !DILocation(line: 3668, column: 30, scope: !11331)
!11341 = !DILocation(line: 3668, column: 39, scope: !11331)
!11342 = !DILocation(line: 3668, column: 47, scope: !11331)
!11343 = !DILocation(line: 3668, column: 45, scope: !11331)
!11344 = !DILocation(line: 3668, column: 36, scope: !11331)
!11345 = !DILocation(line: 3668, column: 5, scope: !11331)
!11346 = !DILocation(line: 3669, column: 16, scope: !11331)
!11347 = !DILocation(line: 3669, column: 20, scope: !11331)
!11348 = !DILocation(line: 3669, column: 5, scope: !11331)
!11349 = !DILocation(line: 3670, column: 4, scope: !11331)
!11350 = !DILocation(line: 3673, column: 16, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11327, file: !3, line: 3671, column: 9)
!11352 = !DILocation(line: 3673, column: 20, scope: !11351)
!11353 = !DILocation(line: 3673, column: 5, scope: !11351)
!11354 = !DILocation(line: 3674, column: 16, scope: !11351)
!11355 = !DILocation(line: 3674, column: 20, scope: !11351)
!11356 = !DILocation(line: 3674, column: 5, scope: !11351)
!11357 = !DILocation(line: 3675, column: 16, scope: !11351)
!11358 = !DILocation(line: 3675, column: 20, scope: !11351)
!11359 = !DILocation(line: 3675, column: 5, scope: !11351)
!11360 = !DILocation(line: 3676, column: 16, scope: !11351)
!11361 = !DILocation(line: 3676, column: 20, scope: !11351)
!11362 = !DILocation(line: 3676, column: 5, scope: !11351)
!11363 = !DILocation(line: 3678, column: 3, scope: !11309)
!11364 = !DILocation(line: 3679, column: 12, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11303, file: !3, line: 3679, column: 12)
!11366 = !DILocation(line: 3679, column: 18, scope: !11365)
!11367 = !DILocation(line: 3679, column: 12, scope: !11303)
!11368 = !DILocation(line: 3680, column: 8, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11370, file: !3, line: 3680, column: 8)
!11370 = distinct !DILexicalBlock(scope: !11365, file: !3, line: 3679, column: 26)
!11371 = !DILocation(line: 3680, column: 14, scope: !11369)
!11372 = !DILocation(line: 3680, column: 8, scope: !11370)
!11373 = !DILocation(line: 3682, column: 16, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11369, file: !3, line: 3680, column: 22)
!11375 = !DILocation(line: 3682, column: 20, scope: !11374)
!11376 = !DILocation(line: 3682, column: 5, scope: !11374)
!11377 = !DILocation(line: 3683, column: 17, scope: !11374)
!11378 = !DILocation(line: 3683, column: 21, scope: !11374)
!11379 = !DILocation(line: 3683, column: 25, scope: !11374)
!11380 = !DILocation(line: 3683, column: 30, scope: !11374)
!11381 = !DILocation(line: 3683, column: 39, scope: !11374)
!11382 = !DILocation(line: 3683, column: 47, scope: !11374)
!11383 = !DILocation(line: 3683, column: 45, scope: !11374)
!11384 = !DILocation(line: 3683, column: 36, scope: !11374)
!11385 = !DILocation(line: 3683, column: 5, scope: !11374)
!11386 = !DILocation(line: 3684, column: 16, scope: !11374)
!11387 = !DILocation(line: 3684, column: 20, scope: !11374)
!11388 = !DILocation(line: 3684, column: 5, scope: !11374)
!11389 = !DILocation(line: 3685, column: 16, scope: !11374)
!11390 = !DILocation(line: 3685, column: 20, scope: !11374)
!11391 = !DILocation(line: 3685, column: 5, scope: !11374)
!11392 = !DILocation(line: 3686, column: 4, scope: !11374)
!11393 = !DILocation(line: 3687, column: 13, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11369, file: !3, line: 3687, column: 13)
!11395 = !DILocation(line: 3687, column: 19, scope: !11394)
!11396 = !DILocation(line: 3687, column: 13, scope: !11369)
!11397 = !DILocation(line: 3689, column: 5, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11394, file: !3, line: 3687, column: 27)
!11399 = !DILocation(line: 3693, column: 5, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11394, file: !3, line: 3691, column: 9)
!11401 = !DILocation(line: 3695, column: 3, scope: !11370)
!11402 = !DILocation(line: 3697, column: 8, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11404, file: !3, line: 3697, column: 8)
!11404 = distinct !DILexicalBlock(scope: !11365, file: !3, line: 3696, column: 8)
!11405 = !DILocation(line: 3697, column: 14, scope: !11403)
!11406 = !DILocation(line: 3697, column: 8, scope: !11404)
!11407 = !DILocation(line: 3699, column: 16, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11403, file: !3, line: 3697, column: 22)
!11409 = !DILocation(line: 3699, column: 20, scope: !11408)
!11410 = !DILocation(line: 3699, column: 5, scope: !11408)
!11411 = !DILocation(line: 3700, column: 16, scope: !11408)
!11412 = !DILocation(line: 3700, column: 20, scope: !11408)
!11413 = !DILocation(line: 3700, column: 5, scope: !11408)
!11414 = !DILocation(line: 3701, column: 16, scope: !11408)
!11415 = !DILocation(line: 3701, column: 20, scope: !11408)
!11416 = !DILocation(line: 3701, column: 5, scope: !11408)
!11417 = !DILocation(line: 3702, column: 16, scope: !11408)
!11418 = !DILocation(line: 3702, column: 20, scope: !11408)
!11419 = !DILocation(line: 3702, column: 5, scope: !11408)
!11420 = !DILocation(line: 3703, column: 4, scope: !11408)
!11421 = !DILocation(line: 3704, column: 13, scope: !11422)
!11422 = distinct !DILexicalBlock(scope: !11403, file: !3, line: 3704, column: 13)
!11423 = !DILocation(line: 3704, column: 19, scope: !11422)
!11424 = !DILocation(line: 3704, column: 13, scope: !11403)
!11425 = !DILocation(line: 3706, column: 5, scope: !11426)
!11426 = distinct !DILexicalBlock(scope: !11422, file: !3, line: 3704, column: 27)
!11427 = !DILocation(line: 3710, column: 5, scope: !11428)
!11428 = distinct !DILexicalBlock(scope: !11422, file: !3, line: 3708, column: 9)
!11429 = !DILocation(line: 3715, column: 2, scope: !2)
!11430 = !DILocation(line: 3716, column: 1, scope: !2)
!11431 = distinct !DISubprogram(name: "vec_add_dir", scope: !3, file: !3, line: 3501, type: !11432, scopeLine: 3502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!11432 = !DISubroutineType(types: !11433)
!11433 = !{null, !10, !7, !7, !8}
!11434 = !DILocalVariable(name: "r", arg: 1, scope: !11431, file: !3, line: 3501, type: !10)
!11435 = !DILocation(line: 3501, column: 31, scope: !11431)
!11436 = !DILocalVariable(name: "v1", arg: 2, scope: !11431, file: !3, line: 3501, type: !7)
!11437 = !DILocation(line: 3501, column: 49, scope: !11431)
!11438 = !DILocalVariable(name: "v2", arg: 3, scope: !11431, file: !3, line: 3501, type: !7)
!11439 = !DILocation(line: 3501, column: 68, scope: !11431)
!11440 = !DILocalVariable(name: "fac", arg: 4, scope: !11431, file: !3, line: 3501, type: !8)
!11441 = !DILocation(line: 3501, column: 87, scope: !11431)
!11442 = !DILocation(line: 3503, column: 9, scope: !11431)
!11443 = !DILocation(line: 3503, column: 17, scope: !11431)
!11444 = !DILocation(line: 3503, column: 24, scope: !11431)
!11445 = !DILocation(line: 3503, column: 32, scope: !11431)
!11446 = !DILocation(line: 3503, column: 30, scope: !11431)
!11447 = !DILocation(line: 3503, column: 21, scope: !11431)
!11448 = !DILocation(line: 3503, column: 15, scope: !11431)
!11449 = !DILocation(line: 3503, column: 2, scope: !11431)
!11450 = !DILocation(line: 3503, column: 7, scope: !11431)
!11451 = !DILocation(line: 3504, column: 9, scope: !11431)
!11452 = !DILocation(line: 3504, column: 17, scope: !11431)
!11453 = !DILocation(line: 3504, column: 24, scope: !11431)
!11454 = !DILocation(line: 3504, column: 32, scope: !11431)
!11455 = !DILocation(line: 3504, column: 30, scope: !11431)
!11456 = !DILocation(line: 3504, column: 21, scope: !11431)
!11457 = !DILocation(line: 3504, column: 15, scope: !11431)
!11458 = !DILocation(line: 3504, column: 2, scope: !11431)
!11459 = !DILocation(line: 3504, column: 7, scope: !11431)
!11460 = !DILocation(line: 3505, column: 9, scope: !11431)
!11461 = !DILocation(line: 3505, column: 17, scope: !11431)
!11462 = !DILocation(line: 3505, column: 24, scope: !11431)
!11463 = !DILocation(line: 3505, column: 32, scope: !11431)
!11464 = !DILocation(line: 3505, column: 30, scope: !11431)
!11465 = !DILocation(line: 3505, column: 21, scope: !11431)
!11466 = !DILocation(line: 3505, column: 15, scope: !11431)
!11467 = !DILocation(line: 3505, column: 2, scope: !11431)
!11468 = !DILocation(line: 3505, column: 7, scope: !11431)
!11469 = !DILocation(line: 3506, column: 1, scope: !11431)
!11470 = distinct !DISubprogram(name: "form_factor_quad", scope: !3, file: !3, line: 3868, type: !11471, scopeLine: 3870, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!11471 = !DISubroutineType(types: !11472)
!11472 = !{!9, !7, !7, !7, !7, !7, !7}
!11473 = !DILocalVariable(name: "p", arg: 1, scope: !11470, file: !3, line: 3868, type: !7)
!11474 = !DILocation(line: 3868, column: 36, scope: !11470)
!11475 = !DILocalVariable(name: "n", arg: 2, scope: !11470, file: !3, line: 3868, type: !7)
!11476 = !DILocation(line: 3868, column: 54, scope: !11470)
!11477 = !DILocalVariable(name: "q0", arg: 3, scope: !11470, file: !3, line: 3869, type: !7)
!11478 = !DILocation(line: 3869, column: 36, scope: !11470)
!11479 = !DILocalVariable(name: "q1", arg: 4, scope: !11470, file: !3, line: 3869, type: !7)
!11480 = !DILocation(line: 3869, column: 55, scope: !11470)
!11481 = !DILocalVariable(name: "q2", arg: 5, scope: !11470, file: !3, line: 3869, type: !7)
!11482 = !DILocation(line: 3869, column: 74, scope: !11470)
!11483 = !DILocalVariable(name: "q3", arg: 6, scope: !11470, file: !3, line: 3869, type: !7)
!11484 = !DILocation(line: 3869, column: 93, scope: !11470)
!11485 = !DILocalVariable(name: "r0", scope: !11470, file: !3, line: 3871, type: !117)
!11486 = !DILocation(line: 3871, column: 8, scope: !11470)
!11487 = !DILocalVariable(name: "r1", scope: !11470, file: !3, line: 3871, type: !117)
!11488 = !DILocation(line: 3871, column: 15, scope: !11470)
!11489 = !DILocalVariable(name: "r2", scope: !11470, file: !3, line: 3871, type: !117)
!11490 = !DILocation(line: 3871, column: 22, scope: !11470)
!11491 = !DILocalVariable(name: "r3", scope: !11470, file: !3, line: 3871, type: !117)
!11492 = !DILocation(line: 3871, column: 29, scope: !11470)
!11493 = !DILocalVariable(name: "g0", scope: !11470, file: !3, line: 3871, type: !117)
!11494 = !DILocation(line: 3871, column: 36, scope: !11470)
!11495 = !DILocalVariable(name: "g1", scope: !11470, file: !3, line: 3871, type: !117)
!11496 = !DILocation(line: 3871, column: 43, scope: !11470)
!11497 = !DILocalVariable(name: "g2", scope: !11470, file: !3, line: 3871, type: !117)
!11498 = !DILocation(line: 3871, column: 50, scope: !11470)
!11499 = !DILocalVariable(name: "g3", scope: !11470, file: !3, line: 3871, type: !117)
!11500 = !DILocation(line: 3871, column: 57, scope: !11470)
!11501 = !DILocalVariable(name: "a1", scope: !11470, file: !3, line: 3872, type: !9)
!11502 = !DILocation(line: 3872, column: 8, scope: !11470)
!11503 = !DILocalVariable(name: "a2", scope: !11470, file: !3, line: 3872, type: !9)
!11504 = !DILocation(line: 3872, column: 12, scope: !11470)
!11505 = !DILocalVariable(name: "a3", scope: !11470, file: !3, line: 3872, type: !9)
!11506 = !DILocation(line: 3872, column: 16, scope: !11470)
!11507 = !DILocalVariable(name: "a4", scope: !11470, file: !3, line: 3872, type: !9)
!11508 = !DILocation(line: 3872, column: 20, scope: !11470)
!11509 = !DILocalVariable(name: "dot1", scope: !11470, file: !3, line: 3872, type: !9)
!11510 = !DILocation(line: 3872, column: 24, scope: !11470)
!11511 = !DILocalVariable(name: "dot2", scope: !11470, file: !3, line: 3872, type: !9)
!11512 = !DILocation(line: 3872, column: 30, scope: !11470)
!11513 = !DILocalVariable(name: "dot3", scope: !11470, file: !3, line: 3872, type: !9)
!11514 = !DILocation(line: 3872, column: 36, scope: !11470)
!11515 = !DILocalVariable(name: "dot4", scope: !11470, file: !3, line: 3872, type: !9)
!11516 = !DILocation(line: 3872, column: 42, scope: !11470)
!11517 = !DILocalVariable(name: "result", scope: !11470, file: !3, line: 3872, type: !9)
!11518 = !DILocation(line: 3872, column: 48, scope: !11470)
!11519 = !DILocation(line: 3874, column: 14, scope: !11470)
!11520 = !DILocation(line: 3874, column: 18, scope: !11470)
!11521 = !DILocation(line: 3874, column: 22, scope: !11470)
!11522 = !DILocation(line: 3874, column: 2, scope: !11470)
!11523 = !DILocation(line: 3875, column: 14, scope: !11470)
!11524 = !DILocation(line: 3875, column: 18, scope: !11470)
!11525 = !DILocation(line: 3875, column: 22, scope: !11470)
!11526 = !DILocation(line: 3875, column: 2, scope: !11470)
!11527 = !DILocation(line: 3876, column: 14, scope: !11470)
!11528 = !DILocation(line: 3876, column: 18, scope: !11470)
!11529 = !DILocation(line: 3876, column: 22, scope: !11470)
!11530 = !DILocation(line: 3876, column: 2, scope: !11470)
!11531 = !DILocation(line: 3877, column: 14, scope: !11470)
!11532 = !DILocation(line: 3877, column: 18, scope: !11470)
!11533 = !DILocation(line: 3877, column: 22, scope: !11470)
!11534 = !DILocation(line: 3877, column: 2, scope: !11470)
!11535 = !DILocation(line: 3879, column: 15, scope: !11470)
!11536 = !DILocation(line: 3879, column: 2, scope: !11470)
!11537 = !DILocation(line: 3880, column: 15, scope: !11470)
!11538 = !DILocation(line: 3880, column: 2, scope: !11470)
!11539 = !DILocation(line: 3881, column: 15, scope: !11470)
!11540 = !DILocation(line: 3881, column: 2, scope: !11470)
!11541 = !DILocation(line: 3882, column: 15, scope: !11470)
!11542 = !DILocation(line: 3882, column: 2, scope: !11470)
!11543 = !DILocation(line: 3884, column: 16, scope: !11470)
!11544 = !DILocation(line: 3884, column: 20, scope: !11470)
!11545 = !DILocation(line: 3884, column: 24, scope: !11470)
!11546 = !DILocation(line: 3884, column: 2, scope: !11470)
!11547 = !DILocation(line: 3885, column: 15, scope: !11470)
!11548 = !DILocation(line: 3885, column: 2, scope: !11470)
!11549 = !DILocation(line: 3886, column: 16, scope: !11470)
!11550 = !DILocation(line: 3886, column: 20, scope: !11470)
!11551 = !DILocation(line: 3886, column: 24, scope: !11470)
!11552 = !DILocation(line: 3886, column: 2, scope: !11470)
!11553 = !DILocation(line: 3887, column: 15, scope: !11470)
!11554 = !DILocation(line: 3887, column: 2, scope: !11470)
!11555 = !DILocation(line: 3888, column: 16, scope: !11470)
!11556 = !DILocation(line: 3888, column: 20, scope: !11470)
!11557 = !DILocation(line: 3888, column: 24, scope: !11470)
!11558 = !DILocation(line: 3888, column: 2, scope: !11470)
!11559 = !DILocation(line: 3889, column: 15, scope: !11470)
!11560 = !DILocation(line: 3889, column: 2, scope: !11470)
!11561 = !DILocation(line: 3890, column: 16, scope: !11470)
!11562 = !DILocation(line: 3890, column: 20, scope: !11470)
!11563 = !DILocation(line: 3890, column: 24, scope: !11470)
!11564 = !DILocation(line: 3890, column: 2, scope: !11470)
!11565 = !DILocation(line: 3891, column: 15, scope: !11470)
!11566 = !DILocation(line: 3891, column: 2, scope: !11470)
!11567 = !DILocation(line: 3893, column: 24, scope: !11470)
!11568 = !DILocation(line: 3893, column: 28, scope: !11470)
!11569 = !DILocation(line: 3893, column: 15, scope: !11470)
!11570 = !DILocation(line: 3893, column: 7, scope: !11470)
!11571 = !DILocation(line: 3893, column: 5, scope: !11470)
!11572 = !DILocation(line: 3894, column: 24, scope: !11470)
!11573 = !DILocation(line: 3894, column: 28, scope: !11470)
!11574 = !DILocation(line: 3894, column: 15, scope: !11470)
!11575 = !DILocation(line: 3894, column: 7, scope: !11470)
!11576 = !DILocation(line: 3894, column: 5, scope: !11470)
!11577 = !DILocation(line: 3895, column: 24, scope: !11470)
!11578 = !DILocation(line: 3895, column: 28, scope: !11470)
!11579 = !DILocation(line: 3895, column: 15, scope: !11470)
!11580 = !DILocation(line: 3895, column: 7, scope: !11470)
!11581 = !DILocation(line: 3895, column: 5, scope: !11470)
!11582 = !DILocation(line: 3896, column: 24, scope: !11470)
!11583 = !DILocation(line: 3896, column: 28, scope: !11470)
!11584 = !DILocation(line: 3896, column: 15, scope: !11470)
!11585 = !DILocation(line: 3896, column: 7, scope: !11470)
!11586 = !DILocation(line: 3896, column: 5, scope: !11470)
!11587 = !DILocation(line: 3898, column: 18, scope: !11470)
!11588 = !DILocation(line: 3898, column: 21, scope: !11470)
!11589 = !DILocation(line: 3898, column: 9, scope: !11470)
!11590 = !DILocation(line: 3898, column: 7, scope: !11470)
!11591 = !DILocation(line: 3899, column: 18, scope: !11470)
!11592 = !DILocation(line: 3899, column: 21, scope: !11470)
!11593 = !DILocation(line: 3899, column: 9, scope: !11470)
!11594 = !DILocation(line: 3899, column: 7, scope: !11470)
!11595 = !DILocation(line: 3900, column: 18, scope: !11470)
!11596 = !DILocation(line: 3900, column: 21, scope: !11470)
!11597 = !DILocation(line: 3900, column: 9, scope: !11470)
!11598 = !DILocation(line: 3900, column: 7, scope: !11470)
!11599 = !DILocation(line: 3901, column: 18, scope: !11470)
!11600 = !DILocation(line: 3901, column: 21, scope: !11470)
!11601 = !DILocation(line: 3901, column: 9, scope: !11470)
!11602 = !DILocation(line: 3901, column: 7, scope: !11470)
!11603 = !DILocation(line: 3903, column: 12, scope: !11470)
!11604 = !DILocation(line: 3903, column: 17, scope: !11470)
!11605 = !DILocation(line: 3903, column: 15, scope: !11470)
!11606 = !DILocation(line: 3903, column: 24, scope: !11470)
!11607 = !DILocation(line: 3903, column: 29, scope: !11470)
!11608 = !DILocation(line: 3903, column: 27, scope: !11470)
!11609 = !DILocation(line: 3903, column: 22, scope: !11470)
!11610 = !DILocation(line: 3903, column: 36, scope: !11470)
!11611 = !DILocation(line: 3903, column: 41, scope: !11470)
!11612 = !DILocation(line: 3903, column: 39, scope: !11470)
!11613 = !DILocation(line: 3903, column: 34, scope: !11470)
!11614 = !DILocation(line: 3903, column: 48, scope: !11470)
!11615 = !DILocation(line: 3903, column: 53, scope: !11470)
!11616 = !DILocation(line: 3903, column: 51, scope: !11470)
!11617 = !DILocation(line: 3903, column: 46, scope: !11470)
!11618 = !DILocation(line: 3903, column: 59, scope: !11470)
!11619 = !DILocation(line: 3903, column: 66, scope: !11470)
!11620 = !DILocation(line: 3903, column: 9, scope: !11470)
!11621 = !DILocation(line: 3904, column: 11, scope: !11470)
!11622 = !DILocation(line: 3904, column: 9, scope: !11470)
!11623 = !DILocation(line: 3906, column: 9, scope: !11470)
!11624 = !DILocation(line: 3906, column: 2, scope: !11470)
!11625 = distinct !DISubprogram(name: "ff_normalize", scope: !3, file: !3, line: 3853, type: !320, scopeLine: 3854, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!11626 = !DILocalVariable(name: "n", arg: 1, scope: !11625, file: !3, line: 3853, type: !10)
!11627 = !DILocation(line: 3853, column: 32, scope: !11625)
!11628 = !DILocalVariable(name: "d", scope: !11625, file: !3, line: 3855, type: !9)
!11629 = !DILocation(line: 3855, column: 8, scope: !11625)
!11630 = !DILocation(line: 3857, column: 15, scope: !11625)
!11631 = !DILocation(line: 3857, column: 18, scope: !11625)
!11632 = !DILocation(line: 3857, column: 6, scope: !11625)
!11633 = !DILocation(line: 3857, column: 4, scope: !11625)
!11634 = !DILocation(line: 3859, column: 6, scope: !11635)
!11635 = distinct !DILexicalBlock(scope: !11625, file: !3, line: 3859, column: 6)
!11636 = !DILocation(line: 3859, column: 8, scope: !11635)
!11637 = !DILocation(line: 3859, column: 6, scope: !11625)
!11638 = !DILocation(line: 3860, column: 20, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11635, file: !3, line: 3859, column: 20)
!11640 = !DILocation(line: 3860, column: 14, scope: !11639)
!11641 = !DILocation(line: 3860, column: 12, scope: !11639)
!11642 = !DILocation(line: 3860, column: 5, scope: !11639)
!11643 = !DILocation(line: 3862, column: 11, scope: !11639)
!11644 = !DILocation(line: 3862, column: 3, scope: !11639)
!11645 = !DILocation(line: 3862, column: 8, scope: !11639)
!11646 = !DILocation(line: 3863, column: 11, scope: !11639)
!11647 = !DILocation(line: 3863, column: 3, scope: !11639)
!11648 = !DILocation(line: 3863, column: 8, scope: !11639)
!11649 = !DILocation(line: 3864, column: 11, scope: !11639)
!11650 = !DILocation(line: 3864, column: 3, scope: !11639)
!11651 = !DILocation(line: 3864, column: 8, scope: !11639)
!11652 = !DILocation(line: 3865, column: 2, scope: !11639)
!11653 = !DILocation(line: 3866, column: 1, scope: !11625)
!11654 = distinct !DISubprogram(name: "saacosf", scope: !2446, file: !2446, line: 86, type: !10056, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!11655 = !DILocalVariable(name: "fac", arg: 1, scope: !11654, file: !2446, line: 86, type: !9)
!11656 = !DILocation(line: 86, column: 29, scope: !11654)
!11657 = !DILocation(line: 88, column: 11, scope: !11658)
!11658 = distinct !DILexicalBlock(scope: !11654, file: !2446, line: 88, column: 11)
!11659 = !DILocation(line: 88, column: 11, scope: !11654)
!11660 = !DILocation(line: 88, column: 35, scope: !11658)
!11661 = !DILocation(line: 89, column: 11, scope: !11662)
!11662 = distinct !DILexicalBlock(scope: !11658, file: !2446, line: 89, column: 11)
!11663 = !DILocation(line: 89, column: 11, scope: !11658)
!11664 = !DILocation(line: 89, column: 35, scope: !11662)
!11665 = !DILocation(line: 90, column: 48, scope: !11662)
!11666 = !DILocation(line: 90, column: 42, scope: !11662)
!11667 = !DILocation(line: 90, column: 35, scope: !11662)
!11668 = !DILocation(line: 91, column: 1, scope: !11654)
!11669 = distinct !DISubprogram(name: "form_factor_hemi_poly", scope: !3, file: !3, line: 3909, type: !11670, scopeLine: 3910, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!11670 = !DISubroutineType(types: !11671)
!11671 = !{!9, !10, !10, !10, !10, !10, !10}
!11672 = !DILocalVariable(name: "p", arg: 1, scope: !11669, file: !3, line: 3909, type: !10)
!11673 = !DILocation(line: 3909, column: 35, scope: !11669)
!11674 = !DILocalVariable(name: "n", arg: 2, scope: !11669, file: !3, line: 3909, type: !10)
!11675 = !DILocation(line: 3909, column: 47, scope: !11669)
!11676 = !DILocalVariable(name: "v1", arg: 3, scope: !11669, file: !3, line: 3909, type: !10)
!11677 = !DILocation(line: 3909, column: 59, scope: !11669)
!11678 = !DILocalVariable(name: "v2", arg: 4, scope: !11669, file: !3, line: 3909, type: !10)
!11679 = !DILocation(line: 3909, column: 72, scope: !11669)
!11680 = !DILocalVariable(name: "v3", arg: 5, scope: !11669, file: !3, line: 3909, type: !10)
!11681 = !DILocation(line: 3909, column: 85, scope: !11669)
!11682 = !DILocalVariable(name: "v4", arg: 6, scope: !11669, file: !3, line: 3909, type: !10)
!11683 = !DILocation(line: 3909, column: 98, scope: !11669)
!11684 = !DILocalVariable(name: "q0", scope: !11669, file: !3, line: 3913, type: !117)
!11685 = !DILocation(line: 3913, column: 8, scope: !11669)
!11686 = !DILocalVariable(name: "q1", scope: !11669, file: !3, line: 3913, type: !117)
!11687 = !DILocation(line: 3913, column: 15, scope: !11669)
!11688 = !DILocalVariable(name: "q2", scope: !11669, file: !3, line: 3913, type: !117)
!11689 = !DILocation(line: 3913, column: 22, scope: !11669)
!11690 = !DILocalVariable(name: "q3", scope: !11669, file: !3, line: 3913, type: !117)
!11691 = !DILocation(line: 3913, column: 29, scope: !11669)
!11692 = !DILocalVariable(name: "contrib", scope: !11669, file: !3, line: 3913, type: !9)
!11693 = !DILocation(line: 3913, column: 36, scope: !11669)
!11694 = !DILocation(line: 3915, column: 31, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !11669, file: !3, line: 3915, column: 6)
!11696 = !DILocation(line: 3915, column: 34, scope: !11695)
!11697 = !DILocation(line: 3915, column: 37, scope: !11695)
!11698 = !DILocation(line: 3915, column: 41, scope: !11695)
!11699 = !DILocation(line: 3915, column: 45, scope: !11695)
!11700 = !DILocation(line: 3915, column: 49, scope: !11695)
!11701 = !DILocation(line: 3915, column: 53, scope: !11695)
!11702 = !DILocation(line: 3915, column: 57, scope: !11695)
!11703 = !DILocation(line: 3915, column: 61, scope: !11695)
!11704 = !DILocation(line: 3915, column: 6, scope: !11695)
!11705 = !DILocation(line: 3915, column: 6, scope: !11669)
!11706 = !DILocation(line: 3916, column: 31, scope: !11695)
!11707 = !DILocation(line: 3916, column: 34, scope: !11695)
!11708 = !DILocation(line: 3916, column: 37, scope: !11695)
!11709 = !DILocation(line: 3916, column: 41, scope: !11695)
!11710 = !DILocation(line: 3916, column: 45, scope: !11695)
!11711 = !DILocation(line: 3916, column: 49, scope: !11695)
!11712 = !DILocation(line: 3916, column: 14, scope: !11695)
!11713 = !DILocation(line: 3916, column: 11, scope: !11695)
!11714 = !DILocation(line: 3916, column: 3, scope: !11695)
!11715 = !DILocation(line: 3918, column: 6, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11669, file: !3, line: 3918, column: 6)
!11717 = !DILocation(line: 3918, column: 9, scope: !11716)
!11718 = !DILocation(line: 3918, column: 37, scope: !11716)
!11719 = !DILocation(line: 3918, column: 40, scope: !11716)
!11720 = !DILocation(line: 3918, column: 43, scope: !11716)
!11721 = !DILocation(line: 3918, column: 47, scope: !11716)
!11722 = !DILocation(line: 3918, column: 51, scope: !11716)
!11723 = !DILocation(line: 3918, column: 55, scope: !11716)
!11724 = !DILocation(line: 3918, column: 59, scope: !11716)
!11725 = !DILocation(line: 3918, column: 63, scope: !11716)
!11726 = !DILocation(line: 3918, column: 67, scope: !11716)
!11727 = !DILocation(line: 3918, column: 12, scope: !11716)
!11728 = !DILocation(line: 3918, column: 6, scope: !11669)
!11729 = !DILocation(line: 3919, column: 31, scope: !11716)
!11730 = !DILocation(line: 3919, column: 34, scope: !11716)
!11731 = !DILocation(line: 3919, column: 37, scope: !11716)
!11732 = !DILocation(line: 3919, column: 41, scope: !11716)
!11733 = !DILocation(line: 3919, column: 45, scope: !11716)
!11734 = !DILocation(line: 3919, column: 49, scope: !11716)
!11735 = !DILocation(line: 3919, column: 14, scope: !11716)
!11736 = !DILocation(line: 3919, column: 11, scope: !11716)
!11737 = !DILocation(line: 3919, column: 3, scope: !11716)
!11738 = !DILocation(line: 3921, column: 9, scope: !11669)
!11739 = !DILocation(line: 3921, column: 2, scope: !11669)
!11740 = distinct !DISubprogram(name: "is_quad_convex_v3", scope: !3, file: !3, line: 3925, type: !2473, scopeLine: 3926, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!11741 = !DILocalVariable(name: "v1", arg: 1, scope: !11740, file: !3, line: 3925, type: !7)
!11742 = !DILocation(line: 3925, column: 36, scope: !11740)
!11743 = !DILocalVariable(name: "v2", arg: 2, scope: !11740, file: !3, line: 3925, type: !7)
!11744 = !DILocation(line: 3925, column: 55, scope: !11740)
!11745 = !DILocalVariable(name: "v3", arg: 3, scope: !11740, file: !3, line: 3925, type: !7)
!11746 = !DILocation(line: 3925, column: 74, scope: !11740)
!11747 = !DILocalVariable(name: "v4", arg: 4, scope: !11740, file: !3, line: 3925, type: !7)
!11748 = !DILocation(line: 3925, column: 93, scope: !11740)
!11749 = !DILocalVariable(name: "nor", scope: !11740, file: !3, line: 3927, type: !117)
!11750 = !DILocation(line: 3927, column: 8, scope: !11740)
!11751 = !DILocalVariable(name: "nor_a", scope: !11740, file: !3, line: 3927, type: !117)
!11752 = !DILocation(line: 3927, column: 16, scope: !11740)
!11753 = !DILocalVariable(name: "nor_b", scope: !11740, file: !3, line: 3927, type: !117)
!11754 = !DILocation(line: 3927, column: 26, scope: !11740)
!11755 = !DILocalVariable(name: "vec", scope: !11740, file: !3, line: 3927, type: !11756)
!11756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 256, elements: !7182)
!11757 = !DILocation(line: 3927, column: 36, scope: !11740)
!11758 = !DILocalVariable(name: "mat", scope: !11740, file: !3, line: 3928, type: !839)
!11759 = !DILocation(line: 3928, column: 8, scope: !11740)
!11760 = !DILocalVariable(name: "is_ok_a", scope: !11740, file: !3, line: 3929, type: !2794)
!11761 = !DILocation(line: 3929, column: 13, scope: !11740)
!11762 = !DILocation(line: 3929, column: 38, scope: !11740)
!11763 = !DILocation(line: 3929, column: 45, scope: !11740)
!11764 = !DILocation(line: 3929, column: 49, scope: !11740)
!11765 = !DILocation(line: 3929, column: 53, scope: !11740)
!11766 = !DILocation(line: 3929, column: 24, scope: !11740)
!11767 = !DILocation(line: 3929, column: 57, scope: !11740)
!11768 = !DILocation(line: 3929, column: 23, scope: !11740)
!11769 = !DILocalVariable(name: "is_ok_b", scope: !11740, file: !3, line: 3930, type: !2794)
!11770 = !DILocation(line: 3930, column: 13, scope: !11740)
!11771 = !DILocation(line: 3930, column: 38, scope: !11740)
!11772 = !DILocation(line: 3930, column: 45, scope: !11740)
!11773 = !DILocation(line: 3930, column: 49, scope: !11740)
!11774 = !DILocation(line: 3930, column: 53, scope: !11740)
!11775 = !DILocation(line: 3930, column: 24, scope: !11740)
!11776 = !DILocation(line: 3930, column: 57, scope: !11740)
!11777 = !DILocation(line: 3930, column: 23, scope: !11740)
!11778 = !DILocation(line: 3935, column: 6, scope: !11779)
!11779 = distinct !DILexicalBlock(scope: !11740, file: !3, line: 3935, column: 6)
!11780 = !DILocation(line: 3935, column: 6, scope: !11740)
!11781 = !DILocation(line: 3936, column: 7, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11783, file: !3, line: 3936, column: 7)
!11783 = distinct !DILexicalBlock(scope: !11779, file: !3, line: 3935, column: 15)
!11784 = !DILocation(line: 3936, column: 7, scope: !11783)
!11785 = !DILocation(line: 3942, column: 8, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11787, file: !3, line: 3942, column: 8)
!11787 = distinct !DILexicalBlock(scope: !11782, file: !3, line: 3936, column: 16)
!11788 = !DILocation(line: 3942, column: 8, scope: !11787)
!11789 = !DILocation(line: 3945, column: 15, scope: !11790)
!11790 = distinct !DILexicalBlock(scope: !11786, file: !3, line: 3942, column: 49)
!11791 = !DILocation(line: 3945, column: 5, scope: !11790)
!11792 = !DILocation(line: 3946, column: 4, scope: !11790)
!11793 = !DILocation(line: 3948, column: 16, scope: !11787)
!11794 = !DILocation(line: 3948, column: 21, scope: !11787)
!11795 = !DILocation(line: 3948, column: 28, scope: !11787)
!11796 = !DILocation(line: 3948, column: 4, scope: !11787)
!11797 = !DILocation(line: 3949, column: 17, scope: !11787)
!11798 = !DILocation(line: 3949, column: 4, scope: !11787)
!11799 = !DILocation(line: 3950, column: 3, scope: !11787)
!11800 = !DILocation(line: 3952, column: 15, scope: !11801)
!11801 = distinct !DILexicalBlock(scope: !11782, file: !3, line: 3951, column: 8)
!11802 = !DILocation(line: 3952, column: 20, scope: !11801)
!11803 = !DILocation(line: 3952, column: 4, scope: !11801)
!11804 = !DILocation(line: 3954, column: 2, scope: !11783)
!11805 = !DILocation(line: 3956, column: 7, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 3956, column: 7)
!11807 = distinct !DILexicalBlock(scope: !11779, file: !3, line: 3955, column: 7)
!11808 = !DILocation(line: 3956, column: 7, scope: !11807)
!11809 = !DILocation(line: 3957, column: 15, scope: !11810)
!11810 = distinct !DILexicalBlock(scope: !11806, file: !3, line: 3956, column: 16)
!11811 = !DILocation(line: 3957, column: 20, scope: !11810)
!11812 = !DILocation(line: 3957, column: 4, scope: !11810)
!11813 = !DILocation(line: 3958, column: 3, scope: !11810)
!11814 = !DILocation(line: 3960, column: 4, scope: !11815)
!11815 = distinct !DILexicalBlock(scope: !11806, file: !3, line: 3959, column: 8)
!11816 = !DILocation(line: 3964, column: 25, scope: !11740)
!11817 = !DILocation(line: 3964, column: 30, scope: !11740)
!11818 = !DILocation(line: 3964, column: 2, scope: !11740)
!11819 = !DILocation(line: 3966, column: 14, scope: !11740)
!11820 = !DILocation(line: 3966, column: 22, scope: !11740)
!11821 = !DILocation(line: 3966, column: 27, scope: !11740)
!11822 = !DILocation(line: 3966, column: 2, scope: !11740)
!11823 = !DILocation(line: 3967, column: 14, scope: !11740)
!11824 = !DILocation(line: 3967, column: 22, scope: !11740)
!11825 = !DILocation(line: 3967, column: 27, scope: !11740)
!11826 = !DILocation(line: 3967, column: 2, scope: !11740)
!11827 = !DILocation(line: 3968, column: 14, scope: !11740)
!11828 = !DILocation(line: 3968, column: 22, scope: !11740)
!11829 = !DILocation(line: 3968, column: 27, scope: !11740)
!11830 = !DILocation(line: 3968, column: 2, scope: !11740)
!11831 = !DILocation(line: 3969, column: 14, scope: !11740)
!11832 = !DILocation(line: 3969, column: 22, scope: !11740)
!11833 = !DILocation(line: 3969, column: 27, scope: !11740)
!11834 = !DILocation(line: 3969, column: 2, scope: !11740)
!11835 = !DILocation(line: 3972, column: 29, scope: !11740)
!11836 = !DILocation(line: 3972, column: 37, scope: !11740)
!11837 = !DILocation(line: 3972, column: 45, scope: !11740)
!11838 = !DILocation(line: 3972, column: 53, scope: !11740)
!11839 = !DILocation(line: 3972, column: 10, scope: !11740)
!11840 = !DILocation(line: 3972, column: 61, scope: !11740)
!11841 = !DILocation(line: 3972, column: 9, scope: !11740)
!11842 = !DILocation(line: 3972, column: 2, scope: !11740)
!11843 = !DILocation(line: 3973, column: 1, scope: !11740)
!11844 = distinct !DISubprogram(name: "is_quad_convex_v2", scope: !3, file: !3, line: 3975, type: !2473, scopeLine: 3976, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!11845 = !DILocalVariable(name: "v1", arg: 1, scope: !11844, file: !3, line: 3975, type: !7)
!11846 = !DILocation(line: 3975, column: 36, scope: !11844)
!11847 = !DILocalVariable(name: "v2", arg: 2, scope: !11844, file: !3, line: 3975, type: !7)
!11848 = !DILocation(line: 3975, column: 55, scope: !11844)
!11849 = !DILocalVariable(name: "v3", arg: 3, scope: !11844, file: !3, line: 3975, type: !7)
!11850 = !DILocation(line: 3975, column: 74, scope: !11844)
!11851 = !DILocalVariable(name: "v4", arg: 4, scope: !11844, file: !3, line: 3975, type: !7)
!11852 = !DILocation(line: 3975, column: 93, scope: !11844)
!11853 = !DILocation(line: 3978, column: 29, scope: !11844)
!11854 = !DILocation(line: 3978, column: 33, scope: !11844)
!11855 = !DILocation(line: 3978, column: 37, scope: !11844)
!11856 = !DILocation(line: 3978, column: 41, scope: !11844)
!11857 = !DILocation(line: 3978, column: 10, scope: !11844)
!11858 = !DILocation(line: 3978, column: 45, scope: !11844)
!11859 = !DILocation(line: 3978, column: 9, scope: !11844)
!11860 = !DILocation(line: 3978, column: 2, scope: !11844)
!11861 = distinct !DISubprogram(name: "is_poly_convex_v2", scope: !3, file: !3, line: 3981, type: !11862, scopeLine: 3982, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !12)
!11862 = !DISubroutineType(types: !11863)
!11863 = !{!6, !601, !275}
!11864 = !DILocalVariable(name: "verts", arg: 1, scope: !11861, file: !3, line: 3981, type: !601)
!11865 = !DILocation(line: 3981, column: 36, scope: !11861)
!11866 = !DILocalVariable(name: "nr", arg: 2, scope: !11861, file: !3, line: 3981, type: !275)
!11867 = !DILocation(line: 3981, column: 61, scope: !11861)
!11868 = !DILocalVariable(name: "sign_flag", scope: !11861, file: !3, line: 3983, type: !275)
!11869 = !DILocation(line: 3983, column: 15, scope: !11861)
!11870 = !DILocalVariable(name: "a", scope: !11861, file: !3, line: 3984, type: !275)
!11871 = !DILocation(line: 3984, column: 15, scope: !11861)
!11872 = !DILocalVariable(name: "co_curr", scope: !11861, file: !3, line: 3985, type: !7)
!11873 = !DILocation(line: 3985, column: 15, scope: !11861)
!11874 = !DILocalVariable(name: "co_prev", scope: !11861, file: !3, line: 3985, type: !7)
!11875 = !DILocation(line: 3985, column: 25, scope: !11861)
!11876 = !DILocalVariable(name: "dir_curr", scope: !11861, file: !3, line: 3986, type: !894)
!11877 = !DILocation(line: 3986, column: 8, scope: !11861)
!11878 = !DILocalVariable(name: "dir_prev", scope: !11861, file: !3, line: 3986, type: !894)
!11879 = !DILocation(line: 3986, column: 21, scope: !11861)
!11880 = !DILocation(line: 3988, column: 12, scope: !11861)
!11881 = !DILocation(line: 3988, column: 18, scope: !11861)
!11882 = !DILocation(line: 3988, column: 21, scope: !11861)
!11883 = !DILocation(line: 3988, column: 10, scope: !11861)
!11884 = !DILocation(line: 3989, column: 12, scope: !11861)
!11885 = !DILocation(line: 3989, column: 10, scope: !11861)
!11886 = !DILocation(line: 3991, column: 14, scope: !11861)
!11887 = !DILocation(line: 3991, column: 24, scope: !11861)
!11888 = !DILocation(line: 3991, column: 30, scope: !11861)
!11889 = !DILocation(line: 3991, column: 33, scope: !11861)
!11890 = !DILocation(line: 3991, column: 39, scope: !11861)
!11891 = !DILocation(line: 3991, column: 2, scope: !11861)
!11892 = !DILocation(line: 3993, column: 9, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11861, file: !3, line: 3993, column: 2)
!11894 = !DILocation(line: 3993, column: 7, scope: !11893)
!11895 = !DILocation(line: 3993, column: 14, scope: !11896)
!11896 = distinct !DILexicalBlock(scope: !11893, file: !3, line: 3993, column: 2)
!11897 = !DILocation(line: 3993, column: 18, scope: !11896)
!11898 = !DILocation(line: 3993, column: 16, scope: !11896)
!11899 = !DILocation(line: 3993, column: 2, scope: !11893)
!11900 = !DILocalVariable(name: "cross", scope: !11901, file: !3, line: 3994, type: !9)
!11901 = distinct !DILexicalBlock(scope: !11896, file: !3, line: 3993, column: 27)
!11902 = !DILocation(line: 3994, column: 9, scope: !11901)
!11903 = !DILocation(line: 3996, column: 15, scope: !11901)
!11904 = !DILocation(line: 3996, column: 25, scope: !11901)
!11905 = !DILocation(line: 3996, column: 34, scope: !11901)
!11906 = !DILocation(line: 3996, column: 3, scope: !11901)
!11907 = !DILocation(line: 3998, column: 22, scope: !11901)
!11908 = !DILocation(line: 3998, column: 32, scope: !11901)
!11909 = !DILocation(line: 3998, column: 11, scope: !11901)
!11910 = !DILocation(line: 3998, column: 9, scope: !11901)
!11911 = !DILocation(line: 4000, column: 7, scope: !11912)
!11912 = distinct !DILexicalBlock(scope: !11901, file: !3, line: 4000, column: 7)
!11913 = !DILocation(line: 4000, column: 13, scope: !11912)
!11914 = !DILocation(line: 4000, column: 7, scope: !11901)
!11915 = !DILocation(line: 4001, column: 14, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11912, file: !3, line: 4000, column: 21)
!11917 = !DILocation(line: 4002, column: 3, scope: !11916)
!11918 = !DILocation(line: 4003, column: 12, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11912, file: !3, line: 4003, column: 12)
!11920 = !DILocation(line: 4003, column: 18, scope: !11919)
!11921 = !DILocation(line: 4003, column: 12, scope: !11912)
!11922 = !DILocation(line: 4004, column: 14, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11919, file: !3, line: 4003, column: 26)
!11924 = !DILocation(line: 4005, column: 3, scope: !11923)
!11925 = !DILocation(line: 4007, column: 7, scope: !11926)
!11926 = distinct !DILexicalBlock(scope: !11901, file: !3, line: 4007, column: 7)
!11927 = !DILocation(line: 4007, column: 17, scope: !11926)
!11928 = !DILocation(line: 4007, column: 7, scope: !11901)
!11929 = !DILocation(line: 4008, column: 4, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11926, file: !3, line: 4007, column: 29)
!11931 = !DILocation(line: 4011, column: 14, scope: !11901)
!11932 = !DILocation(line: 4011, column: 24, scope: !11901)
!11933 = !DILocation(line: 4011, column: 3, scope: !11901)
!11934 = !DILocation(line: 4013, column: 13, scope: !11901)
!11935 = !DILocation(line: 4013, column: 11, scope: !11901)
!11936 = !DILocation(line: 4014, column: 11, scope: !11901)
!11937 = !DILocation(line: 4015, column: 2, scope: !11901)
!11938 = !DILocation(line: 3993, column: 23, scope: !11896)
!11939 = !DILocation(line: 3993, column: 2, scope: !11896)
!11940 = distinct !{!11940, !11899, !11941}
!11941 = !DILocation(line: 4015, column: 2, scope: !11893)
!11942 = !DILocation(line: 4017, column: 2, scope: !11861)
!11943 = !DILocation(line: 4018, column: 1, scope: !11861)
!11944 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !184, file: !184, line: 399, type: !10191, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!11945 = !DILocalVariable(name: "r", arg: 1, scope: !11944, file: !184, line: 399, type: !10)
!11946 = !DILocation(line: 399, column: 32, scope: !11944)
!11947 = !DILocalVariable(name: "a", arg: 2, scope: !11944, file: !184, line: 399, type: !7)
!11948 = !DILocation(line: 399, column: 50, scope: !11944)
!11949 = !DILocalVariable(name: "f", arg: 3, scope: !11944, file: !184, line: 399, type: !9)
!11950 = !DILocation(line: 399, column: 62, scope: !11944)
!11951 = !DILocation(line: 401, column: 9, scope: !11944)
!11952 = !DILocation(line: 401, column: 16, scope: !11944)
!11953 = !DILocation(line: 401, column: 14, scope: !11944)
!11954 = !DILocation(line: 401, column: 2, scope: !11944)
!11955 = !DILocation(line: 401, column: 7, scope: !11944)
!11956 = !DILocation(line: 402, column: 9, scope: !11944)
!11957 = !DILocation(line: 402, column: 16, scope: !11944)
!11958 = !DILocation(line: 402, column: 14, scope: !11944)
!11959 = !DILocation(line: 402, column: 2, scope: !11944)
!11960 = !DILocation(line: 402, column: 7, scope: !11944)
!11961 = !DILocation(line: 403, column: 9, scope: !11944)
!11962 = !DILocation(line: 403, column: 16, scope: !11944)
!11963 = !DILocation(line: 403, column: 14, scope: !11944)
!11964 = !DILocation(line: 403, column: 2, scope: !11944)
!11965 = !DILocation(line: 403, column: 7, scope: !11944)
!11966 = !DILocation(line: 404, column: 1, scope: !11944)
!11967 = distinct !DISubprogram(name: "axis_dominant_v3", scope: !1369, file: !1369, line: 162, type: !11968, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!11968 = !DISubroutineType(types: !11969)
!11969 = !{null, !6430, !6430, !7}
!11970 = !DILocalVariable(name: "r_axis_a", arg: 1, scope: !11967, file: !1369, line: 162, type: !6430)
!11971 = !DILocation(line: 162, column: 36, scope: !11967)
!11972 = !DILocalVariable(name: "r_axis_b", arg: 2, scope: !11967, file: !1369, line: 162, type: !6430)
!11973 = !DILocation(line: 162, column: 51, scope: !11967)
!11974 = !DILocalVariable(name: "axis", arg: 3, scope: !11967, file: !1369, line: 162, type: !7)
!11975 = !DILocation(line: 162, column: 73, scope: !11967)
!11976 = !DILocalVariable(name: "xn", scope: !11967, file: !1369, line: 164, type: !8)
!11977 = !DILocation(line: 164, column: 14, scope: !11967)
!11978 = !DILocation(line: 164, column: 25, scope: !11967)
!11979 = !DILocation(line: 164, column: 19, scope: !11967)
!11980 = !DILocalVariable(name: "yn", scope: !11967, file: !1369, line: 165, type: !8)
!11981 = !DILocation(line: 165, column: 14, scope: !11967)
!11982 = !DILocation(line: 165, column: 25, scope: !11967)
!11983 = !DILocation(line: 165, column: 19, scope: !11967)
!11984 = !DILocalVariable(name: "zn", scope: !11967, file: !1369, line: 166, type: !8)
!11985 = !DILocation(line: 166, column: 14, scope: !11967)
!11986 = !DILocation(line: 166, column: 25, scope: !11967)
!11987 = !DILocation(line: 166, column: 19, scope: !11967)
!11988 = !DILocation(line: 168, column: 11, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11967, file: !1369, line: 168, column: 11)
!11990 = !DILocation(line: 168, column: 17, scope: !11989)
!11991 = !DILocation(line: 168, column: 14, scope: !11989)
!11992 = !DILocation(line: 168, column: 20, scope: !11989)
!11993 = !DILocation(line: 168, column: 23, scope: !11989)
!11994 = !DILocation(line: 168, column: 29, scope: !11989)
!11995 = !DILocation(line: 168, column: 26, scope: !11989)
!11996 = !DILocation(line: 168, column: 11, scope: !11967)
!11997 = !DILocation(line: 168, column: 36, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11989, file: !1369, line: 168, column: 33)
!11999 = !DILocation(line: 168, column: 45, scope: !11998)
!12000 = !DILocation(line: 168, column: 51, scope: !11998)
!12001 = !DILocation(line: 168, column: 60, scope: !11998)
!12002 = !DILocation(line: 168, column: 65, scope: !11998)
!12003 = !DILocation(line: 169, column: 11, scope: !12004)
!12004 = distinct !DILexicalBlock(scope: !11989, file: !1369, line: 169, column: 11)
!12005 = !DILocation(line: 169, column: 17, scope: !12004)
!12006 = !DILocation(line: 169, column: 14, scope: !12004)
!12007 = !DILocation(line: 169, column: 20, scope: !12004)
!12008 = !DILocation(line: 169, column: 23, scope: !12004)
!12009 = !DILocation(line: 169, column: 29, scope: !12004)
!12010 = !DILocation(line: 169, column: 26, scope: !12004)
!12011 = !DILocation(line: 169, column: 11, scope: !11989)
!12012 = !DILocation(line: 169, column: 36, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !12004, file: !1369, line: 169, column: 33)
!12014 = !DILocation(line: 169, column: 45, scope: !12013)
!12015 = !DILocation(line: 169, column: 51, scope: !12013)
!12016 = !DILocation(line: 169, column: 60, scope: !12013)
!12017 = !DILocation(line: 169, column: 65, scope: !12013)
!12018 = !DILocation(line: 170, column: 36, scope: !12019)
!12019 = distinct !DILexicalBlock(scope: !12004, file: !1369, line: 170, column: 33)
!12020 = !DILocation(line: 170, column: 45, scope: !12019)
!12021 = !DILocation(line: 170, column: 51, scope: !12019)
!12022 = !DILocation(line: 170, column: 60, scope: !12019)
!12023 = !DILocation(line: 171, column: 1, scope: !11967)
!12024 = distinct !DISubprogram(name: "tri_signed_area", scope: !3, file: !3, line: 2230, type: !12025, scopeLine: 2231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11, retainedNodes: !12)
!12025 = !DISubroutineType(types: !12026)
!12026 = !{!9, !7, !7, !7, !1841, !1841}
!12027 = !DILocalVariable(name: "v1", arg: 1, scope: !12024, file: !3, line: 2230, type: !7)
!12028 = !DILocation(line: 2230, column: 42, scope: !12024)
!12029 = !DILocalVariable(name: "v2", arg: 2, scope: !12024, file: !3, line: 2230, type: !7)
!12030 = !DILocation(line: 2230, column: 61, scope: !12024)
!12031 = !DILocalVariable(name: "v3", arg: 3, scope: !12024, file: !3, line: 2230, type: !7)
!12032 = !DILocation(line: 2230, column: 80, scope: !12024)
!12033 = !DILocalVariable(name: "i", arg: 4, scope: !12024, file: !3, line: 2230, type: !1841)
!12034 = !DILocation(line: 2230, column: 97, scope: !12024)
!12035 = !DILocalVariable(name: "j", arg: 5, scope: !12024, file: !3, line: 2230, type: !1841)
!12036 = !DILocation(line: 2230, column: 110, scope: !12024)
!12037 = !DILocation(line: 2232, column: 18, scope: !12024)
!12038 = !DILocation(line: 2232, column: 21, scope: !12024)
!12039 = !DILocation(line: 2232, column: 26, scope: !12024)
!12040 = !DILocation(line: 2232, column: 29, scope: !12024)
!12041 = !DILocation(line: 2232, column: 24, scope: !12024)
!12042 = !DILocation(line: 2232, column: 36, scope: !12024)
!12043 = !DILocation(line: 2232, column: 39, scope: !12024)
!12044 = !DILocation(line: 2232, column: 44, scope: !12024)
!12045 = !DILocation(line: 2232, column: 47, scope: !12024)
!12046 = !DILocation(line: 2232, column: 42, scope: !12024)
!12047 = !DILocation(line: 2232, column: 33, scope: !12024)
!12048 = !DILocation(line: 2232, column: 54, scope: !12024)
!12049 = !DILocation(line: 2232, column: 57, scope: !12024)
!12050 = !DILocation(line: 2232, column: 62, scope: !12024)
!12051 = !DILocation(line: 2232, column: 65, scope: !12024)
!12052 = !DILocation(line: 2232, column: 60, scope: !12024)
!12053 = !DILocation(line: 2232, column: 72, scope: !12024)
!12054 = !DILocation(line: 2232, column: 75, scope: !12024)
!12055 = !DILocation(line: 2232, column: 80, scope: !12024)
!12056 = !DILocation(line: 2232, column: 83, scope: !12024)
!12057 = !DILocation(line: 2232, column: 78, scope: !12024)
!12058 = !DILocation(line: 2232, column: 69, scope: !12024)
!12059 = !DILocation(line: 2232, column: 51, scope: !12024)
!12060 = !DILocation(line: 2232, column: 14, scope: !12024)
!12061 = !DILocation(line: 2232, column: 2, scope: !12024)
