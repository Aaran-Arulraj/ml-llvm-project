; ModuleID = 'blender/source/blender/blenkernel/intern/text.c'
source_filename = "blender/source/blender/blenkernel/intern/text.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.ListBase = type { i8*, i8* }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.EvaluationContext = type { i32 }
%struct.MainLock = type opaque
%struct.Text = type { %struct.ID, i8*, i32, i32, %struct.ListBase, %struct.TextLine*, %struct.TextLine*, i32, i32, i8*, i32, i32, i8*, double }
%struct.TextLine = type { %struct.TextLine*, %struct.TextLine*, i8*, i8*, i32, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.Ipo = type opaque
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.rctf = type { float, float, float, float }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type { i32, [64 x i8], [64 x i8], [256 x i8], i32, void (%struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.Scene*, i8*, void (i8*, i32, i8*)*)*, i32 (%struct.bContext*, %struct.bNodeTreeType*)*, void (%struct.bContext*, %struct.bNodeTreeType*, %struct.bNodeTree**, %struct.ID**, %struct.ID**)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*)*, i32 (%struct.bNodeTree*, %struct.bNodeLink*)*, void (%struct.bNodeTree*, %struct.bNode*)*, %struct.ExtensionRNA }
%struct.bContext = type opaque
%struct.bNodeLink = type { %struct.bNodeLink*, %struct.bNodeLink*, %struct.bNode*, %struct.bNode*, %struct.bNodeSocket*, %struct.bNodeSocket*, i32, i32 }
%struct.bNode = type { %struct.bNode*, %struct.bNode*, %struct.bNode*, %struct.IDProperty*, %struct.bNodeType*, [64 x i8], [64 x i8], i32, i16, i16, i16, i16, i16, i16, i16, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.bNode*, %struct.ID*, i8*, %struct.bNode*, %struct.ListBase, float, float, float, float, float, float, float, i32, [64 x i8], i16, i16, float, float, i16, i16, i8*, %struct.rctf, %struct.rctf, %struct.rctf, i16, i16, i32, %struct.uiBlock* }
%struct.bNodeType = type { i8*, i8*, i16, [64 x i8], i32, [64 x i8], [256 x i8], i32, float, float, float, float, float, float, i16, i16, i16, %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate*, [64 x i8], void (%struct.bContext*, %struct.ARegion*, %struct.SpaceNode*, %struct.bNodeTree*, %struct.bNode*, i32)*, void (%struct.bContext*, %struct.bNodeTree*, %struct.bNode*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.SpaceNode*, %struct.ImBuf*, %struct.bNode*, i32, i32)*, void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, {}*, void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)*, {}*, void (%struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)*, void (%struct.bContext*, %struct.PointerRNA*)*, void (%struct.PointerRNA*)*, void (%struct.PointerRNA*, %struct.bNode*)*, i32 (%struct.bNodeType*, %struct.bNodeTree*)*, i32 (%struct.bNode*, %struct.bNodeTree*)*, {}*, i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)*, void (i8*)*, void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)*, i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)*, %struct.ExtensionRNA }
%struct.bNodeSocketTemplate = type { i32, i32, [64 x i8], float, float, float, float, float, float, i32, i32, %struct.bNodeSocket*, [64 x i8] }
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.rcti = type { i32, i32, i32, i32 }
%struct.ARegionType = type opaque
%struct.SpaceNode = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, %struct.ID*, %struct.ID*, i16, i16, float, float, float, float, float, [2 x float], %struct.ListBase, %struct.bNodeTree*, %struct.bNodeTree*, [64 x i8], i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.bGPdata* }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.uiLayout = type opaque
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.bNodeExecContext = type opaque
%struct.bNodeExecData = type opaque
%struct.bNodeStack = type { [4 x float], float, float, i8*, i16, i16, i16, i16, i16, i16, [2 x i16] }
%struct.GPUMaterial = type opaque
%struct.GPUNodeStack = type opaque
%struct.uiBlock = type opaque
%struct.bNodeSocket = type { %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.IDProperty*, [64 x i8], [64 x i8], i8*, i16, i16, i16, i16, %struct.bNodeSocketType*, [64 x i8], float, float, i8*, i16, i16, i32, i8*, i32, i32, %struct.bNodeSocket*, %struct.bNodeLink*, %struct.bNodeStack }
%struct.bNodeSocketType = type { [64 x i8], void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*, %struct.PointerRNA*, i8*)*, void (%struct.bContext*, %struct.PointerRNA*, %struct.PointerRNA*, float*)*, void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*)*, void (%struct.bContext*, %struct.PointerRNA*, float*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)*, %struct.ExtensionRNA, %struct.ExtensionRNA, i32, i32 }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.StructRNA = type opaque
%struct.bNodeInstanceHash = type { %struct.GHash* }
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Mask = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.wmTimer = type opaque
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.SpaceType = type opaque
%struct.bController = type { %struct.bController*, %struct.bController*, %struct.bController*, i16, i16, i16, i16, i16, i16, i16, i16, [64 x i8], i8*, %struct.bActuator**, %struct.bSensor**, i16, i16, i32 }
%struct.bActuator = type { %struct.bActuator*, %struct.bActuator*, %struct.bActuator*, i16, i16, i16, i16, [64 x i8], i8*, %struct.Object* }
%struct.bSensor = type opaque
%struct.bConstraint = type { %struct.bConstraint*, %struct.bConstraint*, i8*, i16, i16, i8, i8, [64 x i8], i16, float, float, %struct.Ipo*, float, float }
%struct.SceneRenderLayer = type { %struct.SceneRenderLayer*, %struct.SceneRenderLayer*, [64 x i8], %struct.Material*, %struct.Group*, i32, i32, i32, i32, i32, i32, i32, float, %struct.FreestyleConfig }
%struct.FreestyleConfig = type { %struct.ListBase, i32, i32, i32, float, float, float, %struct.ListBase }
%struct.FreestyleModuleConfig = type { %struct.FreestyleModuleConfig*, %struct.FreestyleModuleConfig*, %struct.Text*, i16, [3 x i16] }
%struct.bPythonCont = type { %struct.Text*, [64 x i8], i32, i32 }
%struct.bTwoDFilterActuator = type { [4 x i8], i16, i16, i32, float, %struct.Text* }
%struct.bPoseChannel = type { %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.IDProperty*, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i8, i8, [6 x i8], %struct.Bone*, %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.ListBase, %struct.ListBase, %struct.bMotionPath*, %struct.Object*, %struct.bPoseChannel*, [3 x float], [3 x float], [3 x float], [4 x float], [3 x float], float, i16, i16, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, float, i8* }
%struct.Bone = type opaque
%struct.bPythonConstraint = type { %struct.Text*, %struct.IDProperty*, i32, i32, %struct.ListBase, %struct.Object*, [64 x i8] }
%struct.SpaceText = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.Text*, i32, i32, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, float, %struct.rcti, %struct.rcti, i32, i32, [256 x i8], [256 x i8], i16, i16, [4 x i8], i8*, [2 x float] }

@undoing = internal global i8 0, align 1, !dbg !0
@MEM_freeN = external dso_local global void (i8*)*, align 8
@U = external dso_local global %struct.UserDef, align 8
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [9 x i8] c"textline\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"textline_string\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"text_line\00", align 1
@G = external dso_local global %struct.Global, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"text_buffer\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"text_name\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"text buffer\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"cut buffer\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"sel buffer\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"dblock buffer\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"iblock buffer\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"\09\00", align 1
@tab_to_spaces = internal global [5 x i8] c"    \00", align 1, !dbg !308
@.str.12 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@txt_setcurr_tab_spaces.back_words = internal global [6 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i32 0, i32 0), i8* null], align 16, !dbg !297
@.str.14 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"continue\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"pass\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"yield\00", align 1
@__const.text_check_bracket.opens = private unnamed_addr constant [4 x i8] c"([{\00", align 1
@__const.text_check_bracket.close = private unnamed_addr constant [4 x i8] c")]}\00", align 1
@__const.text_check_delim.delims = private unnamed_addr constant [30 x i8] c"():\22' ~!%^&*-+=[]{};/<>|.#\09,@\00", align 16
@.str.19 = private unnamed_addr constant [9 x i8] c"undo buf\00", align 1
@.str.20 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_set_undostate(i32 %u) #0 !dbg !318 {
entry:
  %u.addr = alloca i32, align 4
  store i32 %u, i32* %u.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr, metadata !321, metadata !DIExpression()), !dbg !322
  %0 = load i32, i32* %u.addr, align 4, !dbg !323
  %conv = trunc i32 %0 to i8, !dbg !323
  store i8 %conv, i8* @undoing, align 1, !dbg !324
  ret void, !dbg !325
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @txt_get_undostate() #0 !dbg !326 {
entry:
  %0 = load i8, i8* @undoing, align 1, !dbg !329
  %conv = zext i8 %0 to i32, !dbg !329
  ret i32 %conv, !dbg !330
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_text_free(%struct.Text* %text) #0 !dbg !331 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %tmp = alloca %struct.TextLine*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !334, metadata !DIExpression()), !dbg !335
  call void @llvm.dbg.declare(metadata %struct.TextLine** %tmp, metadata !336, metadata !DIExpression()), !dbg !337
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !338
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 4, !dbg !340
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !341
  %1 = load i8*, i8** %first, align 8, !dbg !341
  %2 = bitcast i8* %1 to %struct.TextLine*, !dbg !338
  store %struct.TextLine* %2, %struct.TextLine** %tmp, align 8, !dbg !342
  br label %for.cond, !dbg !343

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !344
  %tobool = icmp ne %struct.TextLine* %3, null, !dbg !346
  br i1 %tobool, label %for.body, label %for.end, !dbg !346

for.body:                                         ; preds = %for.cond
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !347
  %5 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !349
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %5, i32 0, i32 2, !dbg !350
  %6 = load i8*, i8** %line, align 8, !dbg !350
  call void %4(i8* %6), !dbg !347
  %7 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !351
  %format = getelementptr inbounds %struct.TextLine, %struct.TextLine* %7, i32 0, i32 3, !dbg !353
  %8 = load i8*, i8** %format, align 8, !dbg !353
  %tobool1 = icmp ne i8* %8, null, !dbg !351
  br i1 %tobool1, label %if.then, label %if.end, !dbg !354

if.then:                                          ; preds = %for.body
  %9 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !355
  %10 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !356
  %format2 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %10, i32 0, i32 3, !dbg !357
  %11 = load i8*, i8** %format2, align 8, !dbg !357
  call void %9(i8* %11), !dbg !355
  br label %if.end, !dbg !355

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !358

for.inc:                                          ; preds = %if.end
  %12 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !359
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %12, i32 0, i32 0, !dbg !360
  %13 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !360
  store %struct.TextLine* %13, %struct.TextLine** %tmp, align 8, !dbg !361
  br label %for.cond, !dbg !362, !llvm.loop !363

for.end:                                          ; preds = %for.cond
  %14 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !365
  %lines3 = getelementptr inbounds %struct.Text, %struct.Text* %14, i32 0, i32 4, !dbg !366
  call void @BLI_freelistN(%struct.ListBase* %lines3), !dbg !367
  %15 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !368
  %name = getelementptr inbounds %struct.Text, %struct.Text* %15, i32 0, i32 1, !dbg !370
  %16 = load i8*, i8** %name, align 8, !dbg !370
  %tobool4 = icmp ne i8* %16, null, !dbg !368
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !371

if.then5:                                         ; preds = %for.end
  %17 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !372
  %18 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !373
  %name6 = getelementptr inbounds %struct.Text, %struct.Text* %18, i32 0, i32 1, !dbg !374
  %19 = load i8*, i8** %name6, align 8, !dbg !374
  call void %17(i8* %19), !dbg !372
  br label %if.end7, !dbg !372

if.end7:                                          ; preds = %if.then5, %for.end
  %20 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !375
  %21 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !376
  %undo_buf = getelementptr inbounds %struct.Text, %struct.Text* %21, i32 0, i32 9, !dbg !377
  %22 = load i8*, i8** %undo_buf, align 8, !dbg !377
  call void %20(i8* %22), !dbg !375
  ret void, !dbg !378
}

declare dso_local void @BLI_freelistN(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Text* @BKE_text_add(%struct.Main* %bmain, i8* %name) #0 !dbg !379 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %name.addr = alloca i8*, align 8
  %ta = alloca %struct.Text*, align 8
  %tmp = alloca %struct.TextLine*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !451, metadata !DIExpression()), !dbg !452
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !453, metadata !DIExpression()), !dbg !454
  call void @llvm.dbg.declare(metadata %struct.Text** %ta, metadata !455, metadata !DIExpression()), !dbg !456
  call void @llvm.dbg.declare(metadata %struct.TextLine** %tmp, metadata !457, metadata !DIExpression()), !dbg !458
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !459
  %1 = load i8*, i8** %name.addr, align 8, !dbg !460
  %call = call i8* @BKE_libblock_alloc(%struct.Main* %0, i16 signext 22612, i8* %1), !dbg !461
  %2 = bitcast i8* %call to %struct.Text*, !dbg !461
  store %struct.Text* %2, %struct.Text** %ta, align 8, !dbg !462
  %3 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !463
  %id = getelementptr inbounds %struct.Text, %struct.Text* %3, i32 0, i32 0, !dbg !464
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !465
  store i32 1, i32* %us, align 4, !dbg !466
  %4 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !467
  %name1 = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 1, !dbg !468
  store i8* null, i8** %name1, align 8, !dbg !469
  %5 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !470
  call void @init_undo_text(%struct.Text* %5), !dbg !471
  %6 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !472
  %nlines = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 3, !dbg !473
  store i32 1, i32* %nlines, align 4, !dbg !474
  %7 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !475
  %flags = getelementptr inbounds %struct.Text, %struct.Text* %7, i32 0, i32 2, !dbg !476
  store i32 5, i32* %flags, align 8, !dbg !477
  %8 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 2), align 8, !dbg !478
  %and = and i32 %8, 33554432, !dbg !480
  %cmp = icmp eq i32 %and, 0, !dbg !481
  br i1 %cmp, label %if.then, label %if.end, !dbg !482

if.then:                                          ; preds = %entry
  %9 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !483
  %flags2 = getelementptr inbounds %struct.Text, %struct.Text* %9, i32 0, i32 2, !dbg !484
  %10 = load i32, i32* %flags2, align 8, !dbg !485
  %or = or i32 %10, 1024, !dbg !485
  store i32 %or, i32* %flags2, align 8, !dbg !485
  br label %if.end, !dbg !483

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !486
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %11, i32 0, i32 4, !dbg !487
  call void @BLI_listbase_clear(%struct.ListBase* %lines), !dbg !488
  %12 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !489
  %call3 = call i8* %12(i64 40, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)), !dbg !489
  %13 = bitcast i8* %call3 to %struct.TextLine*, !dbg !490
  store %struct.TextLine* %13, %struct.TextLine** %tmp, align 8, !dbg !491
  %14 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !492
  %call4 = call i8* %14(i64 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)), !dbg !492
  %15 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !493
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %15, i32 0, i32 2, !dbg !494
  store i8* %call4, i8** %line, align 8, !dbg !495
  %16 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !496
  %format = getelementptr inbounds %struct.TextLine, %struct.TextLine* %16, i32 0, i32 3, !dbg !497
  store i8* null, i8** %format, align 8, !dbg !498
  %17 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !499
  %line5 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %17, i32 0, i32 2, !dbg !500
  %18 = load i8*, i8** %line5, align 8, !dbg !500
  %arrayidx = getelementptr inbounds i8, i8* %18, i64 0, !dbg !499
  store i8 0, i8* %arrayidx, align 1, !dbg !501
  %19 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !502
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %19, i32 0, i32 4, !dbg !503
  store i32 0, i32* %len, align 8, !dbg !504
  %20 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !505
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %20, i32 0, i32 0, !dbg !506
  store %struct.TextLine* null, %struct.TextLine** %next, align 8, !dbg !507
  %21 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !508
  %prev = getelementptr inbounds %struct.TextLine, %struct.TextLine* %21, i32 0, i32 1, !dbg !509
  store %struct.TextLine* null, %struct.TextLine** %prev, align 8, !dbg !510
  %22 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !511
  %lines6 = getelementptr inbounds %struct.Text, %struct.Text* %22, i32 0, i32 4, !dbg !512
  %23 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !513
  %24 = bitcast %struct.TextLine* %23 to i8*, !dbg !513
  call void @BLI_addhead(%struct.ListBase* %lines6, i8* %24), !dbg !514
  %25 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !515
  %lines7 = getelementptr inbounds %struct.Text, %struct.Text* %25, i32 0, i32 4, !dbg !516
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines7, i32 0, i32 0, !dbg !517
  %26 = load i8*, i8** %first, align 8, !dbg !517
  %27 = bitcast i8* %26 to %struct.TextLine*, !dbg !515
  %28 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !518
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %28, i32 0, i32 5, !dbg !519
  store %struct.TextLine* %27, %struct.TextLine** %curl, align 8, !dbg !520
  %29 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !521
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %29, i32 0, i32 7, !dbg !522
  store i32 0, i32* %curc, align 8, !dbg !523
  %30 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !524
  %lines8 = getelementptr inbounds %struct.Text, %struct.Text* %30, i32 0, i32 4, !dbg !525
  %first9 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines8, i32 0, i32 0, !dbg !526
  %31 = load i8*, i8** %first9, align 8, !dbg !526
  %32 = bitcast i8* %31 to %struct.TextLine*, !dbg !524
  %33 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !527
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %33, i32 0, i32 6, !dbg !528
  store %struct.TextLine* %32, %struct.TextLine** %sell, align 8, !dbg !529
  %34 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !530
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %34, i32 0, i32 8, !dbg !531
  store i32 0, i32* %selc, align 4, !dbg !532
  %35 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !533
  ret %struct.Text* %35, !dbg !534
}

declare dso_local i8* @BKE_libblock_alloc(%struct.Main*, i16 signext, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @init_undo_text(%struct.Text* %text) #0 !dbg !535 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !536, metadata !DIExpression()), !dbg !537
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !538
  %undo_pos = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 10, !dbg !539
  store i32 -1, i32* %undo_pos, align 8, !dbg !540
  %1 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !541
  %undo_len = getelementptr inbounds %struct.Text, %struct.Text* %1, i32 0, i32 11, !dbg !542
  store i32 1024, i32* %undo_len, align 4, !dbg !543
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !544
  %3 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !545
  %undo_len1 = getelementptr inbounds %struct.Text, %struct.Text* %3, i32 0, i32 11, !dbg !546
  %4 = load i32, i32* %undo_len1, align 4, !dbg !546
  %conv = sext i32 %4 to i64, !dbg !545
  %call = call i8* %2(i64 %conv, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i64 0, i64 0)), !dbg !544
  %5 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !547
  %undo_buf = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 9, !dbg !548
  store i8* %call, i8** %undo_buf, align 8, !dbg !549
  ret void, !dbg !550
}

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_listbase_clear(%struct.ListBase* %lb) #0 !dbg !551 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !556, metadata !DIExpression()), !dbg !557
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !558
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !559
  store i8* null, i8** %last, align 8, !dbg !560
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !561
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !562
  store i8* null, i8** %first, align 8, !dbg !563
  ret void, !dbg !564
}

declare dso_local void @BLI_addhead(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @txt_extended_ascii_as_utf8(i8** %str) #0 !dbg !565 {
entry:
  %str.addr = alloca i8**, align 8
  %bad_char = alloca i32, align 4
  %added = alloca i32, align 4
  %i = alloca i32, align 4
  %length = alloca i32, align 4
  %newstr = alloca i8*, align 8
  %mi = alloca i32, align 4
  store i8** %str, i8*** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %str.addr, metadata !569, metadata !DIExpression()), !dbg !570
  call void @llvm.dbg.declare(metadata i32* %bad_char, metadata !571, metadata !DIExpression()), !dbg !572
  call void @llvm.dbg.declare(metadata i32* %added, metadata !573, metadata !DIExpression()), !dbg !574
  store i32 0, i32* %added, align 4, !dbg !574
  call void @llvm.dbg.declare(metadata i32* %i, metadata !575, metadata !DIExpression()), !dbg !576
  store i32 0, i32* %i, align 4, !dbg !576
  call void @llvm.dbg.declare(metadata i32* %length, metadata !577, metadata !DIExpression()), !dbg !578
  %0 = load i8**, i8*** %str.addr, align 8, !dbg !579
  %1 = load i8*, i8** %0, align 8, !dbg !580
  %call = call i64 @strlen(i8* %1) #6, !dbg !581
  %conv = trunc i64 %call to i32, !dbg !581
  store i32 %conv, i32* %length, align 4, !dbg !578
  br label %while.cond, !dbg !582

while.cond:                                       ; preds = %if.end, %entry
  %2 = load i8**, i8*** %str.addr, align 8, !dbg !583
  %3 = load i8*, i8** %2, align 8, !dbg !584
  %4 = load i32, i32* %i, align 4, !dbg !585
  %idxprom = sext i32 %4 to i64, !dbg !586
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom, !dbg !586
  %5 = load i8, i8* %arrayidx, align 1, !dbg !586
  %tobool = icmp ne i8 %5, 0, !dbg !582
  br i1 %tobool, label %while.body, label %while.end, !dbg !582

while.body:                                       ; preds = %while.cond
  %6 = load i8**, i8*** %str.addr, align 8, !dbg !587
  %7 = load i8*, i8** %6, align 8, !dbg !590
  %8 = load i32, i32* %i, align 4, !dbg !591
  %idx.ext = sext i32 %8 to i64, !dbg !592
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %idx.ext, !dbg !592
  %9 = load i32, i32* %length, align 4, !dbg !593
  %10 = load i32, i32* %i, align 4, !dbg !594
  %sub = sub nsw i32 %9, %10, !dbg !595
  %call1 = call i32 @BLI_utf8_invalid_byte(i8* %add.ptr, i32 %sub), !dbg !596
  store i32 %call1, i32* %bad_char, align 4, !dbg !597
  %cmp = icmp eq i32 %call1, -1, !dbg !598
  br i1 %cmp, label %if.then, label %if.end, !dbg !599

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !600

if.end:                                           ; preds = %while.body
  %11 = load i32, i32* %added, align 4, !dbg !601
  %inc = add nsw i32 %11, 1, !dbg !601
  store i32 %inc, i32* %added, align 4, !dbg !601
  %12 = load i32, i32* %bad_char, align 4, !dbg !602
  %add = add nsw i32 %12, 1, !dbg !603
  %13 = load i32, i32* %i, align 4, !dbg !604
  %add3 = add nsw i32 %13, %add, !dbg !604
  store i32 %add3, i32* %i, align 4, !dbg !604
  br label %while.cond, !dbg !582, !llvm.loop !605

while.end:                                        ; preds = %if.then, %while.cond
  %14 = load i32, i32* %added, align 4, !dbg !607
  %cmp4 = icmp ne i32 %14, 0, !dbg !609
  br i1 %cmp4, label %if.then6, label %if.end53, !dbg !610

if.then6:                                         ; preds = %while.end
  call void @llvm.dbg.declare(metadata i8** %newstr, metadata !611, metadata !DIExpression()), !dbg !613
  %15 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !614
  %16 = load i32, i32* %length, align 4, !dbg !615
  %17 = load i32, i32* %added, align 4, !dbg !616
  %add7 = add nsw i32 %16, %17, !dbg !617
  %add8 = add nsw i32 %add7, 1, !dbg !618
  %conv9 = sext i32 %add8 to i64, !dbg !615
  %call10 = call i8* %15(i64 %conv9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)), !dbg !614
  store i8* %call10, i8** %newstr, align 8, !dbg !613
  call void @llvm.dbg.declare(metadata i32* %mi, metadata !619, metadata !DIExpression()), !dbg !620
  store i32 0, i32* %mi, align 4, !dbg !620
  store i32 0, i32* %i, align 4, !dbg !621
  br label %while.cond11, !dbg !622

while.cond11:                                     ; preds = %if.end30, %if.then6
  %18 = load i8**, i8*** %str.addr, align 8, !dbg !623
  %19 = load i8*, i8** %18, align 8, !dbg !624
  %20 = load i32, i32* %i, align 4, !dbg !625
  %idxprom12 = sext i32 %20 to i64, !dbg !626
  %arrayidx13 = getelementptr inbounds i8, i8* %19, i64 %idxprom12, !dbg !626
  %21 = load i8, i8* %arrayidx13, align 1, !dbg !626
  %tobool14 = icmp ne i8 %21, 0, !dbg !622
  br i1 %tobool14, label %while.body15, label %while.end49, !dbg !622

while.body15:                                     ; preds = %while.cond11
  %22 = load i8**, i8*** %str.addr, align 8, !dbg !627
  %23 = load i8*, i8** %22, align 8, !dbg !630
  %24 = load i32, i32* %i, align 4, !dbg !631
  %idx.ext16 = sext i32 %24 to i64, !dbg !632
  %add.ptr17 = getelementptr inbounds i8, i8* %23, i64 %idx.ext16, !dbg !632
  %25 = load i32, i32* %length, align 4, !dbg !633
  %26 = load i32, i32* %i, align 4, !dbg !634
  %sub18 = sub nsw i32 %25, %26, !dbg !635
  %call19 = call i32 @BLI_utf8_invalid_byte(i8* %add.ptr17, i32 %sub18), !dbg !636
  store i32 %call19, i32* %bad_char, align 4, !dbg !637
  %cmp20 = icmp eq i32 %call19, -1, !dbg !638
  br i1 %cmp20, label %if.then22, label %if.end30, !dbg !639

if.then22:                                        ; preds = %while.body15
  %27 = load i8*, i8** %newstr, align 8, !dbg !640
  %28 = load i32, i32* %mi, align 4, !dbg !642
  %idx.ext23 = sext i32 %28 to i64, !dbg !643
  %add.ptr24 = getelementptr inbounds i8, i8* %27, i64 %idx.ext23, !dbg !643
  %29 = load i8**, i8*** %str.addr, align 8, !dbg !644
  %30 = load i8*, i8** %29, align 8, !dbg !645
  %31 = load i32, i32* %i, align 4, !dbg !646
  %idx.ext25 = sext i32 %31 to i64, !dbg !647
  %add.ptr26 = getelementptr inbounds i8, i8* %30, i64 %idx.ext25, !dbg !647
  %32 = load i32, i32* %length, align 4, !dbg !648
  %33 = load i32, i32* %i, align 4, !dbg !649
  %sub27 = sub nsw i32 %32, %33, !dbg !650
  %add28 = add nsw i32 %sub27, 1, !dbg !651
  %conv29 = sext i32 %add28 to i64, !dbg !648
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr24, i8* align 1 %add.ptr26, i64 %conv29, i1 false), !dbg !652
  br label %while.end49, !dbg !653

if.end30:                                         ; preds = %while.body15
  %34 = load i8*, i8** %newstr, align 8, !dbg !654
  %35 = load i32, i32* %mi, align 4, !dbg !655
  %idx.ext31 = sext i32 %35 to i64, !dbg !656
  %add.ptr32 = getelementptr inbounds i8, i8* %34, i64 %idx.ext31, !dbg !656
  %36 = load i8**, i8*** %str.addr, align 8, !dbg !657
  %37 = load i8*, i8** %36, align 8, !dbg !658
  %38 = load i32, i32* %i, align 4, !dbg !659
  %idx.ext33 = sext i32 %38 to i64, !dbg !660
  %add.ptr34 = getelementptr inbounds i8, i8* %37, i64 %idx.ext33, !dbg !660
  %39 = load i32, i32* %bad_char, align 4, !dbg !661
  %conv35 = sext i32 %39 to i64, !dbg !661
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr32, i8* align 1 %add.ptr34, i64 %conv35, i1 false), !dbg !662
  %40 = load i8**, i8*** %str.addr, align 8, !dbg !663
  %41 = load i8*, i8** %40, align 8, !dbg !664
  %42 = load i32, i32* %i, align 4, !dbg !665
  %43 = load i32, i32* %bad_char, align 4, !dbg !666
  %add36 = add nsw i32 %42, %43, !dbg !667
  %idxprom37 = sext i32 %add36 to i64, !dbg !668
  %arrayidx38 = getelementptr inbounds i8, i8* %41, i64 %idxprom37, !dbg !668
  %44 = load i8, i8* %arrayidx38, align 1, !dbg !668
  %conv39 = zext i8 %44 to i32, !dbg !668
  %45 = load i8*, i8** %newstr, align 8, !dbg !669
  %46 = load i32, i32* %mi, align 4, !dbg !670
  %idx.ext40 = sext i32 %46 to i64, !dbg !671
  %add.ptr41 = getelementptr inbounds i8, i8* %45, i64 %idx.ext40, !dbg !671
  %47 = load i32, i32* %bad_char, align 4, !dbg !672
  %idx.ext42 = sext i32 %47 to i64, !dbg !673
  %add.ptr43 = getelementptr inbounds i8, i8* %add.ptr41, i64 %idx.ext42, !dbg !673
  %call44 = call i64 @BLI_str_utf8_from_unicode(i32 %conv39, i8* %add.ptr43), !dbg !674
  %48 = load i32, i32* %bad_char, align 4, !dbg !675
  %add45 = add nsw i32 %48, 1, !dbg !676
  %49 = load i32, i32* %i, align 4, !dbg !677
  %add46 = add nsw i32 %49, %add45, !dbg !677
  store i32 %add46, i32* %i, align 4, !dbg !677
  %50 = load i32, i32* %bad_char, align 4, !dbg !678
  %add47 = add nsw i32 %50, 2, !dbg !679
  %51 = load i32, i32* %mi, align 4, !dbg !680
  %add48 = add nsw i32 %51, %add47, !dbg !680
  store i32 %add48, i32* %mi, align 4, !dbg !680
  br label %while.cond11, !dbg !622, !llvm.loop !681

while.end49:                                      ; preds = %if.then22, %while.cond11
  %52 = load i8*, i8** %newstr, align 8, !dbg !683
  %53 = load i32, i32* %length, align 4, !dbg !684
  %54 = load i32, i32* %added, align 4, !dbg !685
  %add50 = add nsw i32 %53, %54, !dbg !686
  %idxprom51 = sext i32 %add50 to i64, !dbg !683
  %arrayidx52 = getelementptr inbounds i8, i8* %52, i64 %idxprom51, !dbg !683
  store i8 0, i8* %arrayidx52, align 1, !dbg !687
  %55 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !688
  %56 = load i8**, i8*** %str.addr, align 8, !dbg !689
  %57 = load i8*, i8** %56, align 8, !dbg !690
  call void %55(i8* %57), !dbg !688
  %58 = load i8*, i8** %newstr, align 8, !dbg !691
  %59 = load i8**, i8*** %str.addr, align 8, !dbg !692
  store i8* %58, i8** %59, align 8, !dbg !693
  br label %if.end53, !dbg !694

if.end53:                                         ; preds = %while.end49, %while.end
  %60 = load i32, i32* %added, align 4, !dbg !695
  ret i32 %60, !dbg !696
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #3

declare dso_local i32 @BLI_utf8_invalid_byte(i8*, i32) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local i64 @BLI_str_utf8_from_unicode(i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_text_reload(%struct.Text* %text) #0 !dbg !697 {
entry:
  %retval = alloca i32, align 4
  %text.addr = alloca %struct.Text*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %len = alloca i32, align 4
  %buffer = alloca i8*, align 8
  %tmp = alloca %struct.TextLine*, align 8
  %str = alloca [1024 x i8], align 16
  %st = alloca %struct.stat, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !700, metadata !DIExpression()), !dbg !701
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !702, metadata !DIExpression()), !dbg !760
  call void @llvm.dbg.declare(metadata i32* %len, metadata !761, metadata !DIExpression()), !dbg !762
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !763, metadata !DIExpression()), !dbg !765
  call void @llvm.dbg.declare(metadata %struct.TextLine** %tmp, metadata !766, metadata !DIExpression()), !dbg !767
  call void @llvm.dbg.declare(metadata [1024 x i8]* %str, metadata !768, metadata !DIExpression()), !dbg !769
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !770, metadata !DIExpression()), !dbg !809
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !810
  %name = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 1, !dbg !812
  %1 = load i8*, i8** %name, align 8, !dbg !812
  %tobool = icmp ne i8* %1, null, !dbg !810
  br i1 %tobool, label %if.end, label %if.then, !dbg !813

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !814
  br label %return, !dbg !814

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !815
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !816
  %name1 = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 1, !dbg !817
  %3 = load i8*, i8** %name1, align 8, !dbg !817
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %3, i64 1024), !dbg !818
  %arraydecay2 = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !819
  %4 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !820
  %name3 = getelementptr inbounds %struct.Main, %struct.Main* %4, i32 0, i32 2, !dbg !821
  %arraydecay4 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name3, i64 0, i64 0, !dbg !822
  %call5 = call zeroext i8 @BLI_path_abs(i8* %arraydecay2, i8* %arraydecay4), !dbg !823
  %arraydecay6 = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !824
  %call7 = call %struct._IO_FILE* @BLI_fopen(i8* %arraydecay6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)), !dbg !825
  store %struct._IO_FILE* %call7, %struct._IO_FILE** %fp, align 8, !dbg !826
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !827
  %cmp = icmp eq %struct._IO_FILE* %5, null, !dbg !829
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !830

if.then8:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !831
  br label %return, !dbg !831

if.end9:                                          ; preds = %if.end
  %6 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !832
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 4, !dbg !834
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !835
  %7 = load i8*, i8** %first, align 8, !dbg !835
  %8 = bitcast i8* %7 to %struct.TextLine*, !dbg !832
  store %struct.TextLine* %8, %struct.TextLine** %tmp, align 8, !dbg !836
  br label %for.cond, !dbg !837

for.cond:                                         ; preds = %for.inc, %if.end9
  %9 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !838
  %tobool10 = icmp ne %struct.TextLine* %9, null, !dbg !840
  br i1 %tobool10, label %for.body, label %for.end, !dbg !840

for.body:                                         ; preds = %for.cond
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !841
  %11 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !843
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %11, i32 0, i32 2, !dbg !844
  %12 = load i8*, i8** %line, align 8, !dbg !844
  call void %10(i8* %12), !dbg !841
  %13 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !845
  %format = getelementptr inbounds %struct.TextLine, %struct.TextLine* %13, i32 0, i32 3, !dbg !847
  %14 = load i8*, i8** %format, align 8, !dbg !847
  %tobool11 = icmp ne i8* %14, null, !dbg !845
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !848

if.then12:                                        ; preds = %for.body
  %15 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !849
  %16 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !850
  %format13 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %16, i32 0, i32 3, !dbg !851
  %17 = load i8*, i8** %format13, align 8, !dbg !851
  call void %15(i8* %17), !dbg !849
  br label %if.end14, !dbg !849

if.end14:                                         ; preds = %if.then12, %for.body
  br label %for.inc, !dbg !852

for.inc:                                          ; preds = %if.end14
  %18 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !853
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %18, i32 0, i32 0, !dbg !854
  %19 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !854
  store %struct.TextLine* %19, %struct.TextLine** %tmp, align 8, !dbg !855
  br label %for.cond, !dbg !856, !llvm.loop !857

for.end:                                          ; preds = %for.cond
  %20 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !859
  %lines15 = getelementptr inbounds %struct.Text, %struct.Text* %20, i32 0, i32 4, !dbg !860
  call void @BLI_freelistN(%struct.ListBase* %lines15), !dbg !861
  %21 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !862
  %lines16 = getelementptr inbounds %struct.Text, %struct.Text* %21, i32 0, i32 4, !dbg !863
  call void @BLI_listbase_clear(%struct.ListBase* %lines16), !dbg !864
  %22 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !865
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %22, i32 0, i32 6, !dbg !866
  store %struct.TextLine* null, %struct.TextLine** %sell, align 8, !dbg !867
  %23 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !868
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %23, i32 0, i32 5, !dbg !869
  store %struct.TextLine* null, %struct.TextLine** %curl, align 8, !dbg !870
  %24 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !871
  %25 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !872
  %undo_buf = getelementptr inbounds %struct.Text, %struct.Text* %25, i32 0, i32 9, !dbg !873
  %26 = load i8*, i8** %undo_buf, align 8, !dbg !873
  call void %24(i8* %26), !dbg !871
  %27 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !874
  call void @init_undo_text(%struct.Text* %27), !dbg !875
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !876
  %call17 = call i32 @fseek(%struct._IO_FILE* %28, i64 0, i32 2), !dbg !877
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !878
  %call18 = call i64 @ftell(%struct._IO_FILE* %29), !dbg !879
  %conv = trunc i64 %call18 to i32, !dbg !879
  store i32 %conv, i32* %len, align 4, !dbg !880
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !881
  %call19 = call i32 @fseek(%struct._IO_FILE* %30, i64 0, i32 0), !dbg !882
  %31 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !883
  %32 = load i32, i32* %len, align 4, !dbg !884
  %conv20 = sext i32 %32 to i64, !dbg !884
  %call21 = call i8* %31(i64 %conv20, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)), !dbg !883
  store i8* %call21, i8** %buffer, align 8, !dbg !885
  %33 = load i8*, i8** %buffer, align 8, !dbg !886
  %34 = load i32, i32* %len, align 4, !dbg !887
  %conv22 = sext i32 %34 to i64, !dbg !887
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !888
  %call23 = call i64 @fread(i8* %33, i64 1, i64 %conv22, %struct._IO_FILE* %35), !dbg !889
  %conv24 = trunc i64 %call23 to i32, !dbg !889
  store i32 %conv24, i32* %len, align 4, !dbg !890
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !891
  %call25 = call i32 @fclose(%struct._IO_FILE* %36), !dbg !892
  %arraydecay26 = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !893
  %call27 = call i32 @BLI_stat(i8* %arraydecay26, %struct.stat* %st), !dbg !894
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 12, !dbg !895
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !895
  %37 = load i64, i64* %tv_sec, align 8, !dbg !895
  %conv28 = sitofp i64 %37 to double, !dbg !896
  %38 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !897
  %mtime = getelementptr inbounds %struct.Text, %struct.Text* %38, i32 0, i32 13, !dbg !898
  store double %conv28, double* %mtime, align 8, !dbg !899
  %39 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !900
  %40 = load i8*, i8** %buffer, align 8, !dbg !901
  %41 = load i32, i32* %len, align 4, !dbg !902
  call void @text_from_buf(%struct.Text* %39, i8* %40, i32 %41), !dbg !903
  %42 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !904
  %43 = load i8*, i8** %buffer, align 8, !dbg !905
  call void %42(i8* %43), !dbg !904
  store i32 1, i32* %retval, align 4, !dbg !906
  br label %return, !dbg !906

return:                                           ; preds = %for.end, %if.then8, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !907
  ret i32 %44, !dbg !907
}

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #2

declare dso_local zeroext i8 @BLI_path_abs(i8*, i8*) #2

declare dso_local %struct._IO_FILE* @BLI_fopen(i8*, i8*) #2

declare dso_local i32 @fseek(%struct._IO_FILE*, i64, i32) #2

declare dso_local i64 @ftell(%struct._IO_FILE*) #2

declare dso_local i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #2

declare dso_local i32 @fclose(%struct._IO_FILE*) #2

declare dso_local i32 @BLI_stat(i8*, %struct.stat*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @text_from_buf(%struct.Text* %text, i8* %buffer, i32 %len) #0 !dbg !908 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %buffer.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %llen = alloca i32, align 4
  %tmp = alloca %struct.TextLine*, align 8
  %tmp31 = alloca %struct.TextLine*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !914, metadata !DIExpression()), !dbg !915
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !916, metadata !DIExpression()), !dbg !917
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !918, metadata !DIExpression()), !dbg !919
  call void @llvm.dbg.declare(metadata i32* %i, metadata !920, metadata !DIExpression()), !dbg !921
  call void @llvm.dbg.declare(metadata i32* %llen, metadata !922, metadata !DIExpression()), !dbg !923
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !924
  %nlines = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 3, !dbg !925
  store i32 0, i32* %nlines, align 4, !dbg !926
  store i32 0, i32* %llen, align 4, !dbg !927
  store i32 0, i32* %i, align 4, !dbg !928
  br label %for.cond, !dbg !930

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !931
  %2 = load i32, i32* %len.addr, align 4, !dbg !933
  %cmp = icmp slt i32 %1, %2, !dbg !934
  br i1 %cmp, label %for.body, label %for.end, !dbg !935

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !936
  %4 = load i32, i32* %i, align 4, !dbg !939
  %idxprom = sext i32 %4 to i64, !dbg !936
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom, !dbg !936
  %5 = load i8, i8* %arrayidx, align 1, !dbg !936
  %conv = zext i8 %5 to i32, !dbg !936
  %cmp1 = icmp eq i32 %conv, 10, !dbg !940
  br i1 %cmp1, label %if.then, label %if.end15, !dbg !941

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.TextLine** %tmp, metadata !942, metadata !DIExpression()), !dbg !944
  %6 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !945
  %call = call i8* %6(i64 40, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)), !dbg !945
  %7 = bitcast i8* %call to %struct.TextLine*, !dbg !946
  store %struct.TextLine* %7, %struct.TextLine** %tmp, align 8, !dbg !947
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !948
  %9 = load i32, i32* %llen, align 4, !dbg !949
  %add = add nsw i32 %9, 1, !dbg !950
  %conv3 = sext i32 %add to i64, !dbg !949
  %call4 = call i8* %8(i64 %conv3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)), !dbg !948
  %10 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !951
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %10, i32 0, i32 2, !dbg !952
  store i8* %call4, i8** %line, align 8, !dbg !953
  %11 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !954
  %format = getelementptr inbounds %struct.TextLine, %struct.TextLine* %11, i32 0, i32 3, !dbg !955
  store i8* null, i8** %format, align 8, !dbg !956
  %12 = load i32, i32* %llen, align 4, !dbg !957
  %tobool = icmp ne i32 %12, 0, !dbg !957
  br i1 %tobool, label %if.then5, label %if.end, !dbg !959

if.then5:                                         ; preds = %if.then
  %13 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !960
  %line6 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %13, i32 0, i32 2, !dbg !961
  %14 = load i8*, i8** %line6, align 8, !dbg !961
  %15 = load i8*, i8** %buffer.addr, align 8, !dbg !962
  %16 = load i32, i32* %i, align 4, !dbg !963
  %17 = load i32, i32* %llen, align 4, !dbg !964
  %sub = sub nsw i32 %16, %17, !dbg !965
  %idxprom7 = sext i32 %sub to i64, !dbg !962
  %arrayidx8 = getelementptr inbounds i8, i8* %15, i64 %idxprom7, !dbg !962
  %18 = load i32, i32* %llen, align 4, !dbg !966
  %conv9 = sext i32 %18 to i64, !dbg !966
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %arrayidx8, i64 %conv9, i1 false), !dbg !967
  br label %if.end, !dbg !967

if.end:                                           ; preds = %if.then5, %if.then
  %19 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !968
  %line10 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %19, i32 0, i32 2, !dbg !969
  %20 = load i8*, i8** %line10, align 8, !dbg !969
  %21 = load i32, i32* %llen, align 4, !dbg !970
  %idxprom11 = sext i32 %21 to i64, !dbg !968
  %arrayidx12 = getelementptr inbounds i8, i8* %20, i64 %idxprom11, !dbg !968
  store i8 0, i8* %arrayidx12, align 1, !dbg !971
  %22 = load i32, i32* %llen, align 4, !dbg !972
  %23 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !973
  %len13 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %23, i32 0, i32 4, !dbg !974
  store i32 %22, i32* %len13, align 8, !dbg !975
  %24 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !976
  call void @cleanup_textline(%struct.TextLine* %24), !dbg !977
  %25 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !978
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %25, i32 0, i32 4, !dbg !979
  %26 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !980
  %27 = bitcast %struct.TextLine* %26 to i8*, !dbg !980
  call void @BLI_addtail(%struct.ListBase* %lines, i8* %27), !dbg !981
  %28 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !982
  %nlines14 = getelementptr inbounds %struct.Text, %struct.Text* %28, i32 0, i32 3, !dbg !983
  %29 = load i32, i32* %nlines14, align 4, !dbg !984
  %inc = add nsw i32 %29, 1, !dbg !984
  store i32 %inc, i32* %nlines14, align 4, !dbg !984
  store i32 0, i32* %llen, align 4, !dbg !985
  br label %for.inc, !dbg !986

if.end15:                                         ; preds = %for.body
  %30 = load i32, i32* %llen, align 4, !dbg !987
  %inc16 = add nsw i32 %30, 1, !dbg !987
  store i32 %inc16, i32* %llen, align 4, !dbg !987
  br label %for.inc, !dbg !988

for.inc:                                          ; preds = %if.end15, %if.end
  %31 = load i32, i32* %i, align 4, !dbg !989
  %inc17 = add nsw i32 %31, 1, !dbg !989
  store i32 %inc17, i32* %i, align 4, !dbg !989
  br label %for.cond, !dbg !990, !llvm.loop !991

for.end:                                          ; preds = %for.cond
  %32 = load i32, i32* %llen, align 4, !dbg !993
  %cmp18 = icmp ne i32 %32, 0, !dbg !995
  br i1 %cmp18, label %if.then30, label %lor.lhs.false, !dbg !996

lor.lhs.false:                                    ; preds = %for.end
  %33 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !997
  %nlines20 = getelementptr inbounds %struct.Text, %struct.Text* %33, i32 0, i32 3, !dbg !998
  %34 = load i32, i32* %nlines20, align 4, !dbg !998
  %cmp21 = icmp eq i32 %34, 0, !dbg !999
  br i1 %cmp21, label %if.then30, label %lor.lhs.false23, !dbg !1000

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %35 = load i8*, i8** %buffer.addr, align 8, !dbg !1001
  %36 = load i32, i32* %len.addr, align 4, !dbg !1002
  %sub24 = sub nsw i32 %36, 1, !dbg !1003
  %idxprom25 = sext i32 %sub24 to i64, !dbg !1001
  %arrayidx26 = getelementptr inbounds i8, i8* %35, i64 %idxprom25, !dbg !1001
  %37 = load i8, i8* %arrayidx26, align 1, !dbg !1001
  %conv27 = zext i8 %37 to i32, !dbg !1001
  %cmp28 = icmp eq i32 %conv27, 10, !dbg !1004
  br i1 %cmp28, label %if.then30, label %if.end53, !dbg !1005

if.then30:                                        ; preds = %lor.lhs.false23, %lor.lhs.false, %for.end
  call void @llvm.dbg.declare(metadata %struct.TextLine** %tmp31, metadata !1006, metadata !DIExpression()), !dbg !1008
  %38 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !1009
  %call32 = call i8* %38(i64 40, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)), !dbg !1009
  %39 = bitcast i8* %call32 to %struct.TextLine*, !dbg !1010
  store %struct.TextLine* %39, %struct.TextLine** %tmp31, align 8, !dbg !1011
  %40 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !1012
  %41 = load i32, i32* %llen, align 4, !dbg !1013
  %add33 = add nsw i32 %41, 1, !dbg !1014
  %conv34 = sext i32 %add33 to i64, !dbg !1013
  %call35 = call i8* %40(i64 %conv34, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)), !dbg !1012
  %42 = load %struct.TextLine*, %struct.TextLine** %tmp31, align 8, !dbg !1015
  %line36 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %42, i32 0, i32 2, !dbg !1016
  store i8* %call35, i8** %line36, align 8, !dbg !1017
  %43 = load %struct.TextLine*, %struct.TextLine** %tmp31, align 8, !dbg !1018
  %format37 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %43, i32 0, i32 3, !dbg !1019
  store i8* null, i8** %format37, align 8, !dbg !1020
  %44 = load i32, i32* %llen, align 4, !dbg !1021
  %tobool38 = icmp ne i32 %44, 0, !dbg !1021
  br i1 %tobool38, label %if.then39, label %if.end45, !dbg !1023

if.then39:                                        ; preds = %if.then30
  %45 = load %struct.TextLine*, %struct.TextLine** %tmp31, align 8, !dbg !1024
  %line40 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %45, i32 0, i32 2, !dbg !1025
  %46 = load i8*, i8** %line40, align 8, !dbg !1025
  %47 = load i8*, i8** %buffer.addr, align 8, !dbg !1026
  %48 = load i32, i32* %i, align 4, !dbg !1027
  %49 = load i32, i32* %llen, align 4, !dbg !1028
  %sub41 = sub nsw i32 %48, %49, !dbg !1029
  %idxprom42 = sext i32 %sub41 to i64, !dbg !1026
  %arrayidx43 = getelementptr inbounds i8, i8* %47, i64 %idxprom42, !dbg !1026
  %50 = load i32, i32* %llen, align 4, !dbg !1030
  %conv44 = sext i32 %50 to i64, !dbg !1030
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %46, i8* align 1 %arrayidx43, i64 %conv44, i1 false), !dbg !1031
  br label %if.end45, !dbg !1031

if.end45:                                         ; preds = %if.then39, %if.then30
  %51 = load %struct.TextLine*, %struct.TextLine** %tmp31, align 8, !dbg !1032
  %line46 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %51, i32 0, i32 2, !dbg !1033
  %52 = load i8*, i8** %line46, align 8, !dbg !1033
  %53 = load i32, i32* %llen, align 4, !dbg !1034
  %idxprom47 = sext i32 %53 to i64, !dbg !1032
  %arrayidx48 = getelementptr inbounds i8, i8* %52, i64 %idxprom47, !dbg !1032
  store i8 0, i8* %arrayidx48, align 1, !dbg !1035
  %54 = load i32, i32* %llen, align 4, !dbg !1036
  %55 = load %struct.TextLine*, %struct.TextLine** %tmp31, align 8, !dbg !1037
  %len49 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %55, i32 0, i32 4, !dbg !1038
  store i32 %54, i32* %len49, align 8, !dbg !1039
  %56 = load %struct.TextLine*, %struct.TextLine** %tmp31, align 8, !dbg !1040
  call void @cleanup_textline(%struct.TextLine* %56), !dbg !1041
  %57 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !1042
  %lines50 = getelementptr inbounds %struct.Text, %struct.Text* %57, i32 0, i32 4, !dbg !1043
  %58 = load %struct.TextLine*, %struct.TextLine** %tmp31, align 8, !dbg !1044
  %59 = bitcast %struct.TextLine* %58 to i8*, !dbg !1044
  call void @BLI_addtail(%struct.ListBase* %lines50, i8* %59), !dbg !1045
  %60 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !1046
  %nlines51 = getelementptr inbounds %struct.Text, %struct.Text* %60, i32 0, i32 3, !dbg !1047
  %61 = load i32, i32* %nlines51, align 4, !dbg !1048
  %inc52 = add nsw i32 %61, 1, !dbg !1048
  store i32 %inc52, i32* %nlines51, align 4, !dbg !1048
  br label %if.end53, !dbg !1049

if.end53:                                         ; preds = %if.end45, %lor.lhs.false23
  %62 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !1050
  %lines54 = getelementptr inbounds %struct.Text, %struct.Text* %62, i32 0, i32 4, !dbg !1051
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines54, i32 0, i32 0, !dbg !1052
  %63 = load i8*, i8** %first, align 8, !dbg !1052
  %64 = bitcast i8* %63 to %struct.TextLine*, !dbg !1050
  %65 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !1053
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %65, i32 0, i32 6, !dbg !1054
  store %struct.TextLine* %64, %struct.TextLine** %sell, align 8, !dbg !1055
  %66 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !1056
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %66, i32 0, i32 5, !dbg !1057
  store %struct.TextLine* %64, %struct.TextLine** %curl, align 8, !dbg !1058
  %67 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !1059
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %67, i32 0, i32 8, !dbg !1060
  store i32 0, i32* %selc, align 4, !dbg !1061
  %68 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !1062
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %68, i32 0, i32 7, !dbg !1063
  store i32 0, i32* %curc, align 8, !dbg !1064
  ret void, !dbg !1065
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Text* @BKE_text_load_ex(%struct.Main* %bmain, i8* %file, i8* %relpath, i8 zeroext %is_internal) #0 !dbg !1066 {
entry:
  %retval = alloca %struct.Text*, align 8
  %bmain.addr = alloca %struct.Main*, align 8
  %file.addr = alloca i8*, align 8
  %relpath.addr = alloca i8*, align 8
  %is_internal.addr = alloca i8, align 1
  %fp = alloca %struct._IO_FILE*, align 8
  %len = alloca i32, align 4
  %buffer = alloca i8*, align 8
  %ta = alloca %struct.Text*, align 8
  %str = alloca [1024 x i8], align 16
  %st = alloca %struct.stat, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !1069, metadata !DIExpression()), !dbg !1070
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !1071, metadata !DIExpression()), !dbg !1072
  store i8* %relpath, i8** %relpath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %relpath.addr, metadata !1073, metadata !DIExpression()), !dbg !1074
  store i8 %is_internal, i8* %is_internal.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_internal.addr, metadata !1075, metadata !DIExpression()), !dbg !1076
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !1077, metadata !DIExpression()), !dbg !1078
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1079, metadata !DIExpression()), !dbg !1080
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !1081, metadata !DIExpression()), !dbg !1082
  call void @llvm.dbg.declare(metadata %struct.Text** %ta, metadata !1083, metadata !DIExpression()), !dbg !1084
  call void @llvm.dbg.declare(metadata [1024 x i8]* %str, metadata !1085, metadata !DIExpression()), !dbg !1086
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !1087, metadata !DIExpression()), !dbg !1088
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !1089
  %0 = load i8*, i8** %file.addr, align 8, !dbg !1090
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %0, i64 1024), !dbg !1091
  %1 = load i8*, i8** %relpath.addr, align 8, !dbg !1092
  %tobool = icmp ne i8* %1, null, !dbg !1092
  br i1 %tobool, label %if.then, label %if.end, !dbg !1094

if.then:                                          ; preds = %entry
  %arraydecay1 = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !1095
  %2 = load i8*, i8** %relpath.addr, align 8, !dbg !1096
  %call2 = call zeroext i8 @BLI_path_abs(i8* %arraydecay1, i8* %2), !dbg !1097
  br label %if.end, !dbg !1097

if.end:                                           ; preds = %if.then, %entry
  %arraydecay3 = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !1098
  %call4 = call %struct._IO_FILE* @BLI_fopen(i8* %arraydecay3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)), !dbg !1099
  store %struct._IO_FILE* %call4, %struct._IO_FILE** %fp, align 8, !dbg !1100
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !1101
  %cmp = icmp eq %struct._IO_FILE* %3, null, !dbg !1103
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !1104

if.then5:                                         ; preds = %if.end
  store %struct.Text* null, %struct.Text** %retval, align 8, !dbg !1105
  br label %return, !dbg !1105

if.end6:                                          ; preds = %if.end
  %4 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !1106
  %arraydecay7 = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !1107
  %call8 = call i8* @BLI_path_basename(i8* %arraydecay7), !dbg !1108
  %call9 = call i8* @BKE_libblock_alloc(%struct.Main* %4, i16 signext 22612, i8* %call8), !dbg !1109
  %5 = bitcast i8* %call9 to %struct.Text*, !dbg !1109
  store %struct.Text* %5, %struct.Text** %ta, align 8, !dbg !1110
  %6 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !1111
  %id = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 0, !dbg !1112
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !1113
  store i32 1, i32* %us, align 4, !dbg !1114
  %7 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !1115
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %7, i32 0, i32 4, !dbg !1116
  call void @BLI_listbase_clear(%struct.ListBase* %lines), !dbg !1117
  %8 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !1118
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 6, !dbg !1119
  store %struct.TextLine* null, %struct.TextLine** %sell, align 8, !dbg !1120
  %9 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !1121
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %9, i32 0, i32 5, !dbg !1122
  store %struct.TextLine* null, %struct.TextLine** %curl, align 8, !dbg !1123
  %10 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 2), align 8, !dbg !1124
  %and = and i32 %10, 33554432, !dbg !1126
  %cmp10 = icmp eq i32 %and, 0, !dbg !1127
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !1128

if.then11:                                        ; preds = %if.end6
  %11 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !1129
  %flags = getelementptr inbounds %struct.Text, %struct.Text* %11, i32 0, i32 2, !dbg !1130
  store i32 1024, i32* %flags, align 8, !dbg !1131
  br label %if.end12, !dbg !1129

if.end12:                                         ; preds = %if.then11, %if.end6
  %12 = load i8, i8* %is_internal.addr, align 1, !dbg !1132
  %conv = zext i8 %12 to i32, !dbg !1132
  %cmp13 = icmp eq i32 %conv, 0, !dbg !1134
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !1135

if.then15:                                        ; preds = %if.end12
  %13 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !1136
  %14 = load i8*, i8** %file.addr, align 8, !dbg !1138
  %call16 = call i64 @strlen(i8* %14) #6, !dbg !1139
  %add = add i64 %call16, 1, !dbg !1140
  %call17 = call i8* %13(i64 %add, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0)), !dbg !1136
  %15 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !1141
  %name = getelementptr inbounds %struct.Text, %struct.Text* %15, i32 0, i32 1, !dbg !1142
  store i8* %call17, i8** %name, align 8, !dbg !1143
  %16 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !1144
  %name18 = getelementptr inbounds %struct.Text, %struct.Text* %16, i32 0, i32 1, !dbg !1145
  %17 = load i8*, i8** %name18, align 8, !dbg !1145
  %18 = load i8*, i8** %file.addr, align 8, !dbg !1146
  %call19 = call i8* @strcpy(i8* %17, i8* %18) #7, !dbg !1147
  br label %if.end21, !dbg !1148

if.else:                                          ; preds = %if.end12
  %19 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !1149
  %flags20 = getelementptr inbounds %struct.Text, %struct.Text* %19, i32 0, i32 2, !dbg !1151
  %20 = load i32, i32* %flags20, align 8, !dbg !1152
  %or = or i32 %20, 5, !dbg !1152
  store i32 %or, i32* %flags20, align 8, !dbg !1152
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then15
  %21 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !1153
  call void @init_undo_text(%struct.Text* %21), !dbg !1154
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !1155
  %call22 = call i32 @fseek(%struct._IO_FILE* %22, i64 0, i32 2), !dbg !1156
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !1157
  %call23 = call i64 @ftell(%struct._IO_FILE* %23), !dbg !1158
  %conv24 = trunc i64 %call23 to i32, !dbg !1158
  store i32 %conv24, i32* %len, align 4, !dbg !1159
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !1160
  %call25 = call i32 @fseek(%struct._IO_FILE* %24, i64 0, i32 0), !dbg !1161
  %25 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !1162
  %26 = load i32, i32* %len, align 4, !dbg !1163
  %conv26 = sext i32 %26 to i64, !dbg !1163
  %call27 = call i8* %25(i64 %conv26, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)), !dbg !1162
  store i8* %call27, i8** %buffer, align 8, !dbg !1164
  %27 = load i8*, i8** %buffer, align 8, !dbg !1165
  %28 = load i32, i32* %len, align 4, !dbg !1166
  %conv28 = sext i32 %28 to i64, !dbg !1166
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !1167
  %call29 = call i64 @fread(i8* %27, i64 1, i64 %conv28, %struct._IO_FILE* %29), !dbg !1168
  %conv30 = trunc i64 %call29 to i32, !dbg !1168
  store i32 %conv30, i32* %len, align 4, !dbg !1169
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !1170
  %call31 = call i32 @fclose(%struct._IO_FILE* %30), !dbg !1171
  %arraydecay32 = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !1172
  %call33 = call i32 @BLI_stat(i8* %arraydecay32, %struct.stat* %st), !dbg !1173
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 12, !dbg !1174
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !1174
  %31 = load i64, i64* %tv_sec, align 8, !dbg !1174
  %conv34 = sitofp i64 %31 to double, !dbg !1175
  %32 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !1176
  %mtime = getelementptr inbounds %struct.Text, %struct.Text* %32, i32 0, i32 13, !dbg !1177
  store double %conv34, double* %mtime, align 8, !dbg !1178
  %33 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !1179
  %34 = load i8*, i8** %buffer, align 8, !dbg !1180
  %35 = load i32, i32* %len, align 4, !dbg !1181
  call void @text_from_buf(%struct.Text* %33, i8* %34, i32 %35), !dbg !1182
  %36 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1183
  %37 = load i8*, i8** %buffer, align 8, !dbg !1184
  call void %36(i8* %37), !dbg !1183
  %38 = load %struct.Text*, %struct.Text** %ta, align 8, !dbg !1185
  store %struct.Text* %38, %struct.Text** %retval, align 8, !dbg !1186
  br label %return, !dbg !1186

return:                                           ; preds = %if.end21, %if.then5
  %39 = load %struct.Text*, %struct.Text** %retval, align 8, !dbg !1187
  ret %struct.Text* %39, !dbg !1187
}

declare dso_local i8* @BLI_path_basename(i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #5

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Text* @BKE_text_load(%struct.Main* %bmain, i8* %file, i8* %relpath) #0 !dbg !1188 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %file.addr = alloca i8*, align 8
  %relpath.addr = alloca i8*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !1191, metadata !DIExpression()), !dbg !1192
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !1193, metadata !DIExpression()), !dbg !1194
  store i8* %relpath, i8** %relpath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %relpath.addr, metadata !1195, metadata !DIExpression()), !dbg !1196
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !1197
  %1 = load i8*, i8** %file.addr, align 8, !dbg !1198
  %2 = load i8*, i8** %relpath.addr, align 8, !dbg !1199
  %call = call %struct.Text* @BKE_text_load_ex(%struct.Main* %0, i8* %1, i8* %2, i8 zeroext 0), !dbg !1200
  ret %struct.Text* %call, !dbg !1201
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Text* @BKE_text_copy(%struct.Text* %ta) #0 !dbg !1202 {
entry:
  %ta.addr = alloca %struct.Text*, align 8
  %tan = alloca %struct.Text*, align 8
  %line = alloca %struct.TextLine*, align 8
  %tmp = alloca %struct.TextLine*, align 8
  store %struct.Text* %ta, %struct.Text** %ta.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %ta.addr, metadata !1205, metadata !DIExpression()), !dbg !1206
  call void @llvm.dbg.declare(metadata %struct.Text** %tan, metadata !1207, metadata !DIExpression()), !dbg !1208
  call void @llvm.dbg.declare(metadata %struct.TextLine** %line, metadata !1209, metadata !DIExpression()), !dbg !1210
  call void @llvm.dbg.declare(metadata %struct.TextLine** %tmp, metadata !1211, metadata !DIExpression()), !dbg !1212
  %0 = load %struct.Text*, %struct.Text** %ta.addr, align 8, !dbg !1213
  %id = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 0, !dbg !1214
  %call = call i8* @BKE_libblock_copy(%struct.ID* %id), !dbg !1215
  %1 = bitcast i8* %call to %struct.Text*, !dbg !1215
  store %struct.Text* %1, %struct.Text** %tan, align 8, !dbg !1216
  %2 = load %struct.Text*, %struct.Text** %ta.addr, align 8, !dbg !1217
  %name = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 1, !dbg !1219
  %3 = load i8*, i8** %name, align 8, !dbg !1219
  %tobool = icmp ne i8* %3, null, !dbg !1217
  br i1 %tobool, label %if.then, label %if.else, !dbg !1220

if.then:                                          ; preds = %entry
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !1221
  %5 = load %struct.Text*, %struct.Text** %ta.addr, align 8, !dbg !1223
  %name1 = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 1, !dbg !1224
  %6 = load i8*, i8** %name1, align 8, !dbg !1224
  %call2 = call i64 @strlen(i8* %6) #6, !dbg !1225
  %add = add i64 %call2, 1, !dbg !1226
  %call3 = call i8* %4(i64 %add, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0)), !dbg !1221
  %7 = load %struct.Text*, %struct.Text** %tan, align 8, !dbg !1227
  %name4 = getelementptr inbounds %struct.Text, %struct.Text* %7, i32 0, i32 1, !dbg !1228
  store i8* %call3, i8** %name4, align 8, !dbg !1229
  %8 = load %struct.Text*, %struct.Text** %tan, align 8, !dbg !1230
  %name5 = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 1, !dbg !1231
  %9 = load i8*, i8** %name5, align 8, !dbg !1231
  %10 = load %struct.Text*, %struct.Text** %ta.addr, align 8, !dbg !1232
  %name6 = getelementptr inbounds %struct.Text, %struct.Text* %10, i32 0, i32 1, !dbg !1233
  %11 = load i8*, i8** %name6, align 8, !dbg !1233
  %call7 = call i8* @strcpy(i8* %9, i8* %11) #7, !dbg !1234
  br label %if.end, !dbg !1235

if.else:                                          ; preds = %entry
  %12 = load %struct.Text*, %struct.Text** %tan, align 8, !dbg !1236
  %name8 = getelementptr inbounds %struct.Text, %struct.Text* %12, i32 0, i32 1, !dbg !1238
  store i8* null, i8** %name8, align 8, !dbg !1239
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.Text*, %struct.Text** %ta.addr, align 8, !dbg !1240
  %flags = getelementptr inbounds %struct.Text, %struct.Text* %13, i32 0, i32 2, !dbg !1241
  %14 = load i32, i32* %flags, align 8, !dbg !1241
  %or = or i32 %14, 1, !dbg !1242
  %15 = load %struct.Text*, %struct.Text** %tan, align 8, !dbg !1243
  %flags9 = getelementptr inbounds %struct.Text, %struct.Text* %15, i32 0, i32 2, !dbg !1244
  store i32 %or, i32* %flags9, align 8, !dbg !1245
  %16 = load %struct.Text*, %struct.Text** %tan, align 8, !dbg !1246
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %16, i32 0, i32 4, !dbg !1247
  call void @BLI_listbase_clear(%struct.ListBase* %lines), !dbg !1248
  %17 = load %struct.Text*, %struct.Text** %tan, align 8, !dbg !1249
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %17, i32 0, i32 6, !dbg !1250
  store %struct.TextLine* null, %struct.TextLine** %sell, align 8, !dbg !1251
  %18 = load %struct.Text*, %struct.Text** %tan, align 8, !dbg !1252
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %18, i32 0, i32 5, !dbg !1253
  store %struct.TextLine* null, %struct.TextLine** %curl, align 8, !dbg !1254
  %19 = load %struct.Text*, %struct.Text** %ta.addr, align 8, !dbg !1255
  %nlines = getelementptr inbounds %struct.Text, %struct.Text* %19, i32 0, i32 3, !dbg !1256
  %20 = load i32, i32* %nlines, align 4, !dbg !1256
  %21 = load %struct.Text*, %struct.Text** %tan, align 8, !dbg !1257
  %nlines10 = getelementptr inbounds %struct.Text, %struct.Text* %21, i32 0, i32 3, !dbg !1258
  store i32 %20, i32* %nlines10, align 4, !dbg !1259
  %22 = load %struct.Text*, %struct.Text** %ta.addr, align 8, !dbg !1260
  %lines11 = getelementptr inbounds %struct.Text, %struct.Text* %22, i32 0, i32 4, !dbg !1261
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines11, i32 0, i32 0, !dbg !1262
  %23 = load i8*, i8** %first, align 8, !dbg !1262
  %24 = bitcast i8* %23 to %struct.TextLine*, !dbg !1260
  store %struct.TextLine* %24, %struct.TextLine** %line, align 8, !dbg !1263
  br label %while.cond, !dbg !1264

while.cond:                                       ; preds = %while.body, %if.end
  %25 = load %struct.TextLine*, %struct.TextLine** %line, align 8, !dbg !1265
  %tobool12 = icmp ne %struct.TextLine* %25, null, !dbg !1264
  br i1 %tobool12, label %while.body, label %while.end, !dbg !1264

while.body:                                       ; preds = %while.cond
  %26 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !1266
  %call13 = call i8* %26(i64 40, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)), !dbg !1266
  %27 = bitcast i8* %call13 to %struct.TextLine*, !dbg !1268
  store %struct.TextLine* %27, %struct.TextLine** %tmp, align 8, !dbg !1269
  %28 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !1270
  %29 = load %struct.TextLine*, %struct.TextLine** %line, align 8, !dbg !1271
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %29, i32 0, i32 4, !dbg !1272
  %30 = load i32, i32* %len, align 8, !dbg !1272
  %add14 = add nsw i32 %30, 1, !dbg !1273
  %conv = sext i32 %add14 to i64, !dbg !1271
  %call15 = call i8* %28(i64 %conv, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)), !dbg !1270
  %31 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !1274
  %line16 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %31, i32 0, i32 2, !dbg !1275
  store i8* %call15, i8** %line16, align 8, !dbg !1276
  %32 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !1277
  %format = getelementptr inbounds %struct.TextLine, %struct.TextLine* %32, i32 0, i32 3, !dbg !1278
  store i8* null, i8** %format, align 8, !dbg !1279
  %33 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !1280
  %line17 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %33, i32 0, i32 2, !dbg !1281
  %34 = load i8*, i8** %line17, align 8, !dbg !1281
  %35 = load %struct.TextLine*, %struct.TextLine** %line, align 8, !dbg !1282
  %line18 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %35, i32 0, i32 2, !dbg !1283
  %36 = load i8*, i8** %line18, align 8, !dbg !1283
  %call19 = call i8* @strcpy(i8* %34, i8* %36) #7, !dbg !1284
  %37 = load %struct.TextLine*, %struct.TextLine** %line, align 8, !dbg !1285
  %len20 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %37, i32 0, i32 4, !dbg !1286
  %38 = load i32, i32* %len20, align 8, !dbg !1286
  %39 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !1287
  %len21 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %39, i32 0, i32 4, !dbg !1288
  store i32 %38, i32* %len21, align 8, !dbg !1289
  %40 = load %struct.Text*, %struct.Text** %tan, align 8, !dbg !1290
  %lines22 = getelementptr inbounds %struct.Text, %struct.Text* %40, i32 0, i32 4, !dbg !1291
  %41 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !1292
  %42 = bitcast %struct.TextLine* %41 to i8*, !dbg !1292
  call void @BLI_addtail(%struct.ListBase* %lines22, i8* %42), !dbg !1293
  %43 = load %struct.TextLine*, %struct.TextLine** %line, align 8, !dbg !1294
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %43, i32 0, i32 0, !dbg !1295
  %44 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !1295
  store %struct.TextLine* %44, %struct.TextLine** %line, align 8, !dbg !1296
  br label %while.cond, !dbg !1264, !llvm.loop !1297

while.end:                                        ; preds = %while.cond
  %45 = load %struct.Text*, %struct.Text** %tan, align 8, !dbg !1299
  %lines23 = getelementptr inbounds %struct.Text, %struct.Text* %45, i32 0, i32 4, !dbg !1300
  %first24 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines23, i32 0, i32 0, !dbg !1301
  %46 = load i8*, i8** %first24, align 8, !dbg !1301
  %47 = bitcast i8* %46 to %struct.TextLine*, !dbg !1299
  %48 = load %struct.Text*, %struct.Text** %tan, align 8, !dbg !1302
  %sell25 = getelementptr inbounds %struct.Text, %struct.Text* %48, i32 0, i32 6, !dbg !1303
  store %struct.TextLine* %47, %struct.TextLine** %sell25, align 8, !dbg !1304
  %49 = load %struct.Text*, %struct.Text** %tan, align 8, !dbg !1305
  %curl26 = getelementptr inbounds %struct.Text, %struct.Text* %49, i32 0, i32 5, !dbg !1306
  store %struct.TextLine* %47, %struct.TextLine** %curl26, align 8, !dbg !1307
  %50 = load %struct.Text*, %struct.Text** %tan, align 8, !dbg !1308
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %50, i32 0, i32 8, !dbg !1309
  store i32 0, i32* %selc, align 4, !dbg !1310
  %51 = load %struct.Text*, %struct.Text** %tan, align 8, !dbg !1311
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %51, i32 0, i32 7, !dbg !1312
  store i32 0, i32* %curc, align 8, !dbg !1313
  %52 = load %struct.Text*, %struct.Text** %tan, align 8, !dbg !1314
  call void @init_undo_text(%struct.Text* %52), !dbg !1315
  %53 = load %struct.Text*, %struct.Text** %tan, align 8, !dbg !1316
  ret %struct.Text* %53, !dbg !1317
}

declare dso_local i8* @BKE_libblock_copy(%struct.ID*) #2

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_text_unlink(%struct.Main* %bmain, %struct.Text* %text) #0 !dbg !1318 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %text.addr = alloca %struct.Text*, align 8
  %scr = alloca %struct.bScreen*, align 8
  %area = alloca %struct.ScrArea*, align 8
  %sl = alloca %struct.SpaceLink*, align 8
  %ob = alloca %struct.Object*, align 8
  %cont = alloca %struct.bController*, align 8
  %act = alloca %struct.bActuator*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  %mat = alloca %struct.Material*, align 8
  %sce = alloca %struct.Scene*, align 8
  %srl = alloca %struct.SceneRenderLayer*, align 8
  %module = alloca %struct.FreestyleModuleConfig*, align 8
  %update = alloca i16, align 2
  %pc = alloca %struct.bPythonCont*, align 8
  %tfa = alloca %struct.bTwoDFilterActuator*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  %data52 = alloca %struct.bPythonConstraint*, align 8
  %data78 = alloca %struct.bPythonConstraint*, align 8
  %ntext = alloca %struct.Text*, align 8
  %ntext143 = alloca %struct.Text*, align 8
  %st = alloca %struct.SpaceText*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !1321, metadata !DIExpression()), !dbg !1322
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !1323, metadata !DIExpression()), !dbg !1324
  call void @llvm.dbg.declare(metadata %struct.bScreen** %scr, metadata !1325, metadata !DIExpression()), !dbg !3737
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %area, metadata !3738, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.declare(metadata %struct.SpaceLink** %sl, metadata !3786, metadata !DIExpression()), !dbg !3787
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !3788, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.declare(metadata %struct.bController** %cont, metadata !3792, metadata !DIExpression()), !dbg !3834
  call void @llvm.dbg.declare(metadata %struct.bActuator** %act, metadata !3835, metadata !DIExpression()), !dbg !3838
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !3839, metadata !DIExpression()), !dbg !3859
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !3860, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !3864, metadata !DIExpression()), !dbg !3865
  call void @llvm.dbg.declare(metadata %struct.Material** %mat, metadata !3866, metadata !DIExpression()), !dbg !3869
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce, metadata !3870, metadata !DIExpression()), !dbg !3873
  call void @llvm.dbg.declare(metadata %struct.SceneRenderLayer** %srl, metadata !3874, metadata !DIExpression()), !dbg !3905
  call void @llvm.dbg.declare(metadata %struct.FreestyleModuleConfig** %module, metadata !3906, metadata !DIExpression()), !dbg !3917
  call void @llvm.dbg.declare(metadata i16* %update, metadata !3918, metadata !DIExpression()), !dbg !3919
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !3920
  %object = getelementptr inbounds %struct.Main, %struct.Main* %0, i32 0, i32 13, !dbg !3922
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object, i32 0, i32 0, !dbg !3923
  %1 = load i8*, i8** %first, align 8, !dbg !3923
  %2 = bitcast i8* %1 to %struct.Object*, !dbg !3920
  store %struct.Object* %2, %struct.Object** %ob, align 8, !dbg !3924
  br label %for.cond, !dbg !3925

for.cond:                                         ; preds = %for.inc93, %entry
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3926
  %tobool = icmp ne %struct.Object* %3, null, !dbg !3928
  br i1 %tobool, label %for.body, label %for.end96, !dbg !3928

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3929
  %controllers = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 93, !dbg !3932
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %controllers, i32 0, i32 0, !dbg !3933
  %5 = load i8*, i8** %first1, align 8, !dbg !3933
  %6 = bitcast i8* %5 to %struct.bController*, !dbg !3929
  store %struct.bController* %6, %struct.bController** %cont, align 8, !dbg !3934
  br label %for.cond2, !dbg !3935

for.cond2:                                        ; preds = %for.inc, %for.body
  %7 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !3936
  %tobool3 = icmp ne %struct.bController* %7, null, !dbg !3938
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !3938

for.body4:                                        ; preds = %for.cond2
  %8 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !3939
  %type = getelementptr inbounds %struct.bController, %struct.bController* %8, i32 0, i32 3, !dbg !3942
  %9 = load i16, i16* %type, align 8, !dbg !3942
  %conv = sext i16 %9 to i32, !dbg !3939
  %cmp = icmp eq i32 %conv, 3, !dbg !3943
  br i1 %cmp, label %if.then, label %if.end11, !dbg !3944

if.then:                                          ; preds = %for.body4
  call void @llvm.dbg.declare(metadata %struct.bPythonCont** %pc, metadata !3945, metadata !DIExpression()), !dbg !3955
  %10 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !3956
  %data = getelementptr inbounds %struct.bController, %struct.bController* %10, i32 0, i32 12, !dbg !3957
  %11 = load i8*, i8** %data, align 8, !dbg !3957
  %12 = bitcast i8* %11 to %struct.bPythonCont*, !dbg !3956
  store %struct.bPythonCont* %12, %struct.bPythonCont** %pc, align 8, !dbg !3958
  %13 = load %struct.bPythonCont*, %struct.bPythonCont** %pc, align 8, !dbg !3959
  %text6 = getelementptr inbounds %struct.bPythonCont, %struct.bPythonCont* %13, i32 0, i32 0, !dbg !3961
  %14 = load %struct.Text*, %struct.Text** %text6, align 8, !dbg !3961
  %15 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !3962
  %cmp7 = icmp eq %struct.Text* %14, %15, !dbg !3963
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !3964

if.then9:                                         ; preds = %if.then
  %16 = load %struct.bPythonCont*, %struct.bPythonCont** %pc, align 8, !dbg !3965
  %text10 = getelementptr inbounds %struct.bPythonCont, %struct.bPythonCont* %16, i32 0, i32 0, !dbg !3966
  store %struct.Text* null, %struct.Text** %text10, align 8, !dbg !3967
  br label %if.end, !dbg !3965

if.end:                                           ; preds = %if.then9, %if.then
  br label %if.end11, !dbg !3968

if.end11:                                         ; preds = %if.end, %for.body4
  br label %for.inc, !dbg !3969

for.inc:                                          ; preds = %if.end11
  %17 = load %struct.bController*, %struct.bController** %cont, align 8, !dbg !3970
  %next = getelementptr inbounds %struct.bController, %struct.bController* %17, i32 0, i32 0, !dbg !3971
  %18 = load %struct.bController*, %struct.bController** %next, align 8, !dbg !3971
  store %struct.bController* %18, %struct.bController** %cont, align 8, !dbg !3972
  br label %for.cond2, !dbg !3973, !llvm.loop !3974

for.end:                                          ; preds = %for.cond2
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3976
  %actuators = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 94, !dbg !3978
  %first12 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %actuators, i32 0, i32 0, !dbg !3979
  %20 = load i8*, i8** %first12, align 8, !dbg !3979
  %21 = bitcast i8* %20 to %struct.bActuator*, !dbg !3976
  store %struct.bActuator* %21, %struct.bActuator** %act, align 8, !dbg !3980
  br label %for.cond13, !dbg !3981

for.cond13:                                       ; preds = %for.inc29, %for.end
  %22 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !3982
  %tobool14 = icmp ne %struct.bActuator* %22, null, !dbg !3984
  br i1 %tobool14, label %for.body15, label %for.end31, !dbg !3984

for.body15:                                       ; preds = %for.cond13
  %23 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !3985
  %type16 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %23, i32 0, i32 3, !dbg !3988
  %24 = load i16, i16* %type16, align 8, !dbg !3988
  %conv17 = sext i16 %24 to i32, !dbg !3985
  %cmp18 = icmp eq i32 %conv17, 19, !dbg !3989
  br i1 %cmp18, label %if.then20, label %if.end28, !dbg !3990

if.then20:                                        ; preds = %for.body15
  call void @llvm.dbg.declare(metadata %struct.bTwoDFilterActuator** %tfa, metadata !3991, metadata !DIExpression()), !dbg !4003
  %25 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !4004
  %data21 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %25, i32 0, i32 8, !dbg !4005
  %26 = load i8*, i8** %data21, align 8, !dbg !4005
  %27 = bitcast i8* %26 to %struct.bTwoDFilterActuator*, !dbg !4004
  store %struct.bTwoDFilterActuator* %27, %struct.bTwoDFilterActuator** %tfa, align 8, !dbg !4006
  %28 = load %struct.bTwoDFilterActuator*, %struct.bTwoDFilterActuator** %tfa, align 8, !dbg !4007
  %text22 = getelementptr inbounds %struct.bTwoDFilterActuator, %struct.bTwoDFilterActuator* %28, i32 0, i32 5, !dbg !4009
  %29 = load %struct.Text*, %struct.Text** %text22, align 8, !dbg !4009
  %30 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4010
  %cmp23 = icmp eq %struct.Text* %29, %30, !dbg !4011
  br i1 %cmp23, label %if.then25, label %if.end27, !dbg !4012

if.then25:                                        ; preds = %if.then20
  %31 = load %struct.bTwoDFilterActuator*, %struct.bTwoDFilterActuator** %tfa, align 8, !dbg !4013
  %text26 = getelementptr inbounds %struct.bTwoDFilterActuator, %struct.bTwoDFilterActuator* %31, i32 0, i32 5, !dbg !4014
  store %struct.Text* null, %struct.Text** %text26, align 8, !dbg !4015
  br label %if.end27, !dbg !4013

if.end27:                                         ; preds = %if.then25, %if.then20
  br label %if.end28, !dbg !4016

if.end28:                                         ; preds = %if.end27, %for.body15
  br label %for.inc29, !dbg !4017

for.inc29:                                        ; preds = %if.end28
  %32 = load %struct.bActuator*, %struct.bActuator** %act, align 8, !dbg !4018
  %next30 = getelementptr inbounds %struct.bActuator, %struct.bActuator* %32, i32 0, i32 0, !dbg !4019
  %33 = load %struct.bActuator*, %struct.bActuator** %next30, align 8, !dbg !4019
  store %struct.bActuator* %33, %struct.bActuator** %act, align 8, !dbg !4020
  br label %for.cond13, !dbg !4021, !llvm.loop !4022

for.end31:                                        ; preds = %for.cond13
  store i16 0, i16* %update, align 2, !dbg !4024
  %34 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4025
  %type32 = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 3, !dbg !4027
  %35 = load i16, i16* %type32, align 8, !dbg !4027
  %conv33 = sext i16 %35 to i32, !dbg !4025
  %cmp34 = icmp eq i32 %conv33, 25, !dbg !4028
  br i1 %cmp34, label %land.lhs.true, label %if.end67, !dbg !4029

land.lhs.true:                                    ; preds = %for.end31
  %36 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4030
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 18, !dbg !4031
  %37 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !4031
  %tobool36 = icmp ne %struct.bPose* %37, null, !dbg !4030
  br i1 %tobool36, label %if.then37, label %if.end67, !dbg !4032

if.then37:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !4033, metadata !DIExpression()), !dbg !4082
  %38 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4083
  %pose38 = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 18, !dbg !4085
  %39 = load %struct.bPose*, %struct.bPose** %pose38, align 8, !dbg !4085
  %chanbase = getelementptr inbounds %struct.bPose, %struct.bPose* %39, i32 0, i32 0, !dbg !4086
  %first39 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase, i32 0, i32 0, !dbg !4087
  %40 = load i8*, i8** %first39, align 8, !dbg !4087
  %41 = bitcast i8* %40 to %struct.bPoseChannel*, !dbg !4083
  store %struct.bPoseChannel* %41, %struct.bPoseChannel** %pchan, align 8, !dbg !4088
  br label %for.cond40, !dbg !4089

for.cond40:                                       ; preds = %for.inc64, %if.then37
  %42 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4090
  %tobool41 = icmp ne %struct.bPoseChannel* %42, null, !dbg !4092
  br i1 %tobool41, label %for.body42, label %for.end66, !dbg !4092

for.body42:                                       ; preds = %for.cond40
  %43 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4093
  %constraints = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %43, i32 0, i32 3, !dbg !4096
  %first43 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints, i32 0, i32 0, !dbg !4097
  %44 = load i8*, i8** %first43, align 8, !dbg !4097
  %45 = bitcast i8* %44 to %struct.bConstraint*, !dbg !4093
  store %struct.bConstraint* %45, %struct.bConstraint** %con, align 8, !dbg !4098
  br label %for.cond44, !dbg !4099

for.cond44:                                       ; preds = %for.inc61, %for.body42
  %46 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4100
  %tobool45 = icmp ne %struct.bConstraint* %46, null, !dbg !4102
  br i1 %tobool45, label %for.body46, label %for.end63, !dbg !4102

for.body46:                                       ; preds = %for.cond44
  %47 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4103
  %type47 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %47, i32 0, i32 3, !dbg !4106
  %48 = load i16, i16* %type47, align 8, !dbg !4106
  %conv48 = sext i16 %48 to i32, !dbg !4103
  %cmp49 = icmp eq i32 %conv48, 11, !dbg !4107
  br i1 %cmp49, label %if.then51, label %if.end60, !dbg !4108

if.then51:                                        ; preds = %for.body46
  call void @llvm.dbg.declare(metadata %struct.bPythonConstraint** %data52, metadata !4109, metadata !DIExpression()), !dbg !4122
  %49 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4123
  %data53 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %49, i32 0, i32 2, !dbg !4124
  %50 = load i8*, i8** %data53, align 8, !dbg !4124
  %51 = bitcast i8* %50 to %struct.bPythonConstraint*, !dbg !4123
  store %struct.bPythonConstraint* %51, %struct.bPythonConstraint** %data52, align 8, !dbg !4122
  %52 = load %struct.bPythonConstraint*, %struct.bPythonConstraint** %data52, align 8, !dbg !4125
  %text54 = getelementptr inbounds %struct.bPythonConstraint, %struct.bPythonConstraint* %52, i32 0, i32 0, !dbg !4127
  %53 = load %struct.Text*, %struct.Text** %text54, align 8, !dbg !4127
  %54 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4128
  %cmp55 = icmp eq %struct.Text* %53, %54, !dbg !4129
  br i1 %cmp55, label %if.then57, label %if.end59, !dbg !4130

if.then57:                                        ; preds = %if.then51
  %55 = load %struct.bPythonConstraint*, %struct.bPythonConstraint** %data52, align 8, !dbg !4131
  %text58 = getelementptr inbounds %struct.bPythonConstraint, %struct.bPythonConstraint* %55, i32 0, i32 0, !dbg !4132
  store %struct.Text* null, %struct.Text** %text58, align 8, !dbg !4133
  br label %if.end59, !dbg !4131

if.end59:                                         ; preds = %if.then57, %if.then51
  store i16 1, i16* %update, align 2, !dbg !4134
  br label %if.end60, !dbg !4135

if.end60:                                         ; preds = %if.end59, %for.body46
  br label %for.inc61, !dbg !4136

for.inc61:                                        ; preds = %if.end60
  %56 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4137
  %next62 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %56, i32 0, i32 0, !dbg !4138
  %57 = load %struct.bConstraint*, %struct.bConstraint** %next62, align 8, !dbg !4138
  store %struct.bConstraint* %57, %struct.bConstraint** %con, align 8, !dbg !4139
  br label %for.cond44, !dbg !4140, !llvm.loop !4141

for.end63:                                        ; preds = %for.cond44
  br label %for.inc64, !dbg !4143

for.inc64:                                        ; preds = %for.end63
  %58 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4144
  %next65 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %58, i32 0, i32 0, !dbg !4145
  %59 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next65, align 8, !dbg !4145
  store %struct.bPoseChannel* %59, %struct.bPoseChannel** %pchan, align 8, !dbg !4146
  br label %for.cond40, !dbg !4147, !llvm.loop !4148

for.end66:                                        ; preds = %for.cond40
  br label %if.end67, !dbg !4150

if.end67:                                         ; preds = %for.end66, %land.lhs.true, %for.end31
  %60 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4151
  %constraints68 = getelementptr inbounds %struct.Object, %struct.Object* %60, i32 0, i32 106, !dbg !4153
  %first69 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints68, i32 0, i32 0, !dbg !4154
  %61 = load i8*, i8** %first69, align 8, !dbg !4154
  %62 = bitcast i8* %61 to %struct.bConstraint*, !dbg !4151
  store %struct.bConstraint* %62, %struct.bConstraint** %con, align 8, !dbg !4155
  br label %for.cond70, !dbg !4156

for.cond70:                                       ; preds = %for.inc87, %if.end67
  %63 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4157
  %tobool71 = icmp ne %struct.bConstraint* %63, null, !dbg !4159
  br i1 %tobool71, label %for.body72, label %for.end89, !dbg !4159

for.body72:                                       ; preds = %for.cond70
  %64 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4160
  %type73 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %64, i32 0, i32 3, !dbg !4163
  %65 = load i16, i16* %type73, align 8, !dbg !4163
  %conv74 = sext i16 %65 to i32, !dbg !4160
  %cmp75 = icmp eq i32 %conv74, 11, !dbg !4164
  br i1 %cmp75, label %if.then77, label %if.end86, !dbg !4165

if.then77:                                        ; preds = %for.body72
  call void @llvm.dbg.declare(metadata %struct.bPythonConstraint** %data78, metadata !4166, metadata !DIExpression()), !dbg !4168
  %66 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4169
  %data79 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %66, i32 0, i32 2, !dbg !4170
  %67 = load i8*, i8** %data79, align 8, !dbg !4170
  %68 = bitcast i8* %67 to %struct.bPythonConstraint*, !dbg !4169
  store %struct.bPythonConstraint* %68, %struct.bPythonConstraint** %data78, align 8, !dbg !4168
  %69 = load %struct.bPythonConstraint*, %struct.bPythonConstraint** %data78, align 8, !dbg !4171
  %text80 = getelementptr inbounds %struct.bPythonConstraint, %struct.bPythonConstraint* %69, i32 0, i32 0, !dbg !4173
  %70 = load %struct.Text*, %struct.Text** %text80, align 8, !dbg !4173
  %71 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4174
  %cmp81 = icmp eq %struct.Text* %70, %71, !dbg !4175
  br i1 %cmp81, label %if.then83, label %if.end85, !dbg !4176

if.then83:                                        ; preds = %if.then77
  %72 = load %struct.bPythonConstraint*, %struct.bPythonConstraint** %data78, align 8, !dbg !4177
  %text84 = getelementptr inbounds %struct.bPythonConstraint, %struct.bPythonConstraint* %72, i32 0, i32 0, !dbg !4178
  store %struct.Text* null, %struct.Text** %text84, align 8, !dbg !4179
  br label %if.end85, !dbg !4177

if.end85:                                         ; preds = %if.then83, %if.then77
  store i16 1, i16* %update, align 2, !dbg !4180
  br label %if.end86, !dbg !4181

if.end86:                                         ; preds = %if.end85, %for.body72
  br label %for.inc87, !dbg !4182

for.inc87:                                        ; preds = %if.end86
  %73 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !4183
  %next88 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %73, i32 0, i32 0, !dbg !4184
  %74 = load %struct.bConstraint*, %struct.bConstraint** %next88, align 8, !dbg !4184
  store %struct.bConstraint* %74, %struct.bConstraint** %con, align 8, !dbg !4185
  br label %for.cond70, !dbg !4186, !llvm.loop !4187

for.end89:                                        ; preds = %for.cond70
  %75 = load i16, i16* %update, align 2, !dbg !4189
  %tobool90 = icmp ne i16 %75, 0, !dbg !4189
  br i1 %tobool90, label %if.then91, label %if.end92, !dbg !4191

if.then91:                                        ; preds = %for.end89
  %76 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4192
  %id = getelementptr inbounds %struct.Object, %struct.Object* %76, i32 0, i32 0, !dbg !4193
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !4194
  br label %if.end92, !dbg !4194

if.end92:                                         ; preds = %if.then91, %for.end89
  br label %for.inc93, !dbg !4195

for.inc93:                                        ; preds = %if.end92
  %77 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4196
  %id94 = getelementptr inbounds %struct.Object, %struct.Object* %77, i32 0, i32 0, !dbg !4197
  %next95 = getelementptr inbounds %struct.ID, %struct.ID* %id94, i32 0, i32 0, !dbg !4198
  %78 = load i8*, i8** %next95, align 8, !dbg !4198
  %79 = bitcast i8* %78 to %struct.Object*, !dbg !4196
  store %struct.Object* %79, %struct.Object** %ob, align 8, !dbg !4199
  br label %for.cond, !dbg !4200, !llvm.loop !4201

for.end96:                                        ; preds = %for.cond
  %80 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4203
  %mat97 = getelementptr inbounds %struct.Main, %struct.Main* %80, i32 0, i32 17, !dbg !4205
  %first98 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mat97, i32 0, i32 0, !dbg !4206
  %81 = load i8*, i8** %first98, align 8, !dbg !4206
  %82 = bitcast i8* %81 to %struct.Material*, !dbg !4203
  store %struct.Material* %82, %struct.Material** %mat, align 8, !dbg !4207
  br label %for.cond99, !dbg !4208

for.cond99:                                       ; preds = %for.inc124, %for.end96
  %83 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !4209
  %tobool100 = icmp ne %struct.Material* %83, null, !dbg !4211
  br i1 %tobool100, label %for.body101, label %for.end127, !dbg !4211

for.body101:                                      ; preds = %for.cond99
  %84 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !4212
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %84, i32 0, i32 103, !dbg !4214
  %85 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !4214
  store %struct.bNodeTree* %85, %struct.bNodeTree** %ntree, align 8, !dbg !4215
  %86 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !4216
  %tobool102 = icmp ne %struct.bNodeTree* %86, null, !dbg !4216
  br i1 %tobool102, label %if.end104, label %if.then103, !dbg !4218

if.then103:                                       ; preds = %for.body101
  br label %for.inc124, !dbg !4219

if.end104:                                        ; preds = %for.body101
  %87 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !4220
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %87, i32 0, i32 7, !dbg !4222
  %first105 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !4223
  %88 = load i8*, i8** %first105, align 8, !dbg !4223
  %89 = bitcast i8* %88 to %struct.bNode*, !dbg !4220
  store %struct.bNode* %89, %struct.bNode** %node, align 8, !dbg !4224
  br label %for.cond106, !dbg !4225

for.cond106:                                      ; preds = %for.inc121, %if.end104
  %90 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4226
  %tobool107 = icmp ne %struct.bNode* %90, null, !dbg !4228
  br i1 %tobool107, label %for.body108, label %for.end123, !dbg !4228

for.body108:                                      ; preds = %for.cond106
  %91 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4229
  %type109 = getelementptr inbounds %struct.bNode, %struct.bNode* %91, i32 0, i32 8, !dbg !4232
  %92 = load i16, i16* %type109, align 4, !dbg !4232
  %conv110 = sext i16 %92 to i32, !dbg !4229
  %cmp111 = icmp eq i32 %conv110, 171, !dbg !4233
  br i1 %cmp111, label %if.then113, label %if.end120, !dbg !4234

if.then113:                                       ; preds = %for.body108
  call void @llvm.dbg.declare(metadata %struct.Text** %ntext, metadata !4235, metadata !DIExpression()), !dbg !4237
  %93 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4238
  %id114 = getelementptr inbounds %struct.bNode, %struct.bNode* %93, i32 0, i32 20, !dbg !4239
  %94 = load %struct.ID*, %struct.ID** %id114, align 8, !dbg !4239
  %95 = bitcast %struct.ID* %94 to %struct.Text*, !dbg !4240
  store %struct.Text* %95, %struct.Text** %ntext, align 8, !dbg !4237
  %96 = load %struct.Text*, %struct.Text** %ntext, align 8, !dbg !4241
  %97 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4243
  %cmp115 = icmp eq %struct.Text* %96, %97, !dbg !4244
  br i1 %cmp115, label %if.then117, label %if.end119, !dbg !4245

if.then117:                                       ; preds = %if.then113
  %98 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4246
  %id118 = getelementptr inbounds %struct.bNode, %struct.bNode* %98, i32 0, i32 20, !dbg !4247
  store %struct.ID* null, %struct.ID** %id118, align 8, !dbg !4248
  br label %if.end119, !dbg !4246

if.end119:                                        ; preds = %if.then117, %if.then113
  br label %if.end120, !dbg !4249

if.end120:                                        ; preds = %if.end119, %for.body108
  br label %for.inc121, !dbg !4250

for.inc121:                                       ; preds = %if.end120
  %99 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4251
  %next122 = getelementptr inbounds %struct.bNode, %struct.bNode* %99, i32 0, i32 0, !dbg !4252
  %100 = load %struct.bNode*, %struct.bNode** %next122, align 8, !dbg !4252
  store %struct.bNode* %100, %struct.bNode** %node, align 8, !dbg !4253
  br label %for.cond106, !dbg !4254, !llvm.loop !4255

for.end123:                                       ; preds = %for.cond106
  br label %for.inc124, !dbg !4257

for.inc124:                                       ; preds = %for.end123, %if.then103
  %101 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !4258
  %id125 = getelementptr inbounds %struct.Material, %struct.Material* %101, i32 0, i32 0, !dbg !4259
  %next126 = getelementptr inbounds %struct.ID, %struct.ID* %id125, i32 0, i32 0, !dbg !4260
  %102 = load i8*, i8** %next126, align 8, !dbg !4260
  %103 = bitcast i8* %102 to %struct.Material*, !dbg !4258
  store %struct.Material* %103, %struct.Material** %mat, align 8, !dbg !4261
  br label %for.cond99, !dbg !4262, !llvm.loop !4263

for.end127:                                       ; preds = %for.cond99
  %104 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4265
  %nodetree128 = getelementptr inbounds %struct.Main, %struct.Main* %104, i32 0, i32 35, !dbg !4267
  %first129 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodetree128, i32 0, i32 0, !dbg !4268
  %105 = load i8*, i8** %first129, align 8, !dbg !4268
  %106 = bitcast i8* %105 to %struct.bNodeTree*, !dbg !4265
  store %struct.bNodeTree* %106, %struct.bNodeTree** %ntree, align 8, !dbg !4269
  br label %for.cond130, !dbg !4270

for.cond130:                                      ; preds = %for.inc154, %for.end127
  %107 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !4271
  %tobool131 = icmp ne %struct.bNodeTree* %107, null, !dbg !4273
  br i1 %tobool131, label %for.body132, label %for.end157, !dbg !4273

for.body132:                                      ; preds = %for.cond130
  %108 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !4274
  %nodes133 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %108, i32 0, i32 7, !dbg !4277
  %first134 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes133, i32 0, i32 0, !dbg !4278
  %109 = load i8*, i8** %first134, align 8, !dbg !4278
  %110 = bitcast i8* %109 to %struct.bNode*, !dbg !4274
  store %struct.bNode* %110, %struct.bNode** %node, align 8, !dbg !4279
  br label %for.cond135, !dbg !4280

for.cond135:                                      ; preds = %for.inc151, %for.body132
  %111 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4281
  %tobool136 = icmp ne %struct.bNode* %111, null, !dbg !4283
  br i1 %tobool136, label %for.body137, label %for.end153, !dbg !4283

for.body137:                                      ; preds = %for.cond135
  %112 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4284
  %type138 = getelementptr inbounds %struct.bNode, %struct.bNode* %112, i32 0, i32 8, !dbg !4287
  %113 = load i16, i16* %type138, align 4, !dbg !4287
  %conv139 = sext i16 %113 to i32, !dbg !4284
  %cmp140 = icmp eq i32 %conv139, 171, !dbg !4288
  br i1 %cmp140, label %if.then142, label %if.end150, !dbg !4289

if.then142:                                       ; preds = %for.body137
  call void @llvm.dbg.declare(metadata %struct.Text** %ntext143, metadata !4290, metadata !DIExpression()), !dbg !4292
  %114 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4293
  %id144 = getelementptr inbounds %struct.bNode, %struct.bNode* %114, i32 0, i32 20, !dbg !4294
  %115 = load %struct.ID*, %struct.ID** %id144, align 8, !dbg !4294
  %116 = bitcast %struct.ID* %115 to %struct.Text*, !dbg !4295
  store %struct.Text* %116, %struct.Text** %ntext143, align 8, !dbg !4292
  %117 = load %struct.Text*, %struct.Text** %ntext143, align 8, !dbg !4296
  %118 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4298
  %cmp145 = icmp eq %struct.Text* %117, %118, !dbg !4299
  br i1 %cmp145, label %if.then147, label %if.end149, !dbg !4300

if.then147:                                       ; preds = %if.then142
  %119 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4301
  %id148 = getelementptr inbounds %struct.bNode, %struct.bNode* %119, i32 0, i32 20, !dbg !4302
  store %struct.ID* null, %struct.ID** %id148, align 8, !dbg !4303
  br label %if.end149, !dbg !4301

if.end149:                                        ; preds = %if.then147, %if.then142
  br label %if.end150, !dbg !4304

if.end150:                                        ; preds = %if.end149, %for.body137
  br label %for.inc151, !dbg !4305

for.inc151:                                       ; preds = %if.end150
  %120 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4306
  %next152 = getelementptr inbounds %struct.bNode, %struct.bNode* %120, i32 0, i32 0, !dbg !4307
  %121 = load %struct.bNode*, %struct.bNode** %next152, align 8, !dbg !4307
  store %struct.bNode* %121, %struct.bNode** %node, align 8, !dbg !4308
  br label %for.cond135, !dbg !4309, !llvm.loop !4310

for.end153:                                       ; preds = %for.cond135
  br label %for.inc154, !dbg !4312

for.inc154:                                       ; preds = %for.end153
  %122 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !4313
  %id155 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %122, i32 0, i32 0, !dbg !4314
  %next156 = getelementptr inbounds %struct.ID, %struct.ID* %id155, i32 0, i32 0, !dbg !4315
  %123 = load i8*, i8** %next156, align 8, !dbg !4315
  %124 = bitcast i8* %123 to %struct.bNodeTree*, !dbg !4313
  store %struct.bNodeTree* %124, %struct.bNodeTree** %ntree, align 8, !dbg !4316
  br label %for.cond130, !dbg !4317, !llvm.loop !4318

for.end157:                                       ; preds = %for.cond130
  %125 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4320
  %screen = getelementptr inbounds %struct.Main, %struct.Main* %125, i32 0, i32 26, !dbg !4322
  %first158 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %screen, i32 0, i32 0, !dbg !4323
  %126 = load i8*, i8** %first158, align 8, !dbg !4323
  %127 = bitcast i8* %126 to %struct.bScreen*, !dbg !4320
  store %struct.bScreen* %127, %struct.bScreen** %scr, align 8, !dbg !4324
  br label %for.cond159, !dbg !4325

for.cond159:                                      ; preds = %for.inc186, %for.end157
  %128 = load %struct.bScreen*, %struct.bScreen** %scr, align 8, !dbg !4326
  %tobool160 = icmp ne %struct.bScreen* %128, null, !dbg !4328
  br i1 %tobool160, label %for.body161, label %for.end189, !dbg !4328

for.body161:                                      ; preds = %for.cond159
  %129 = load %struct.bScreen*, %struct.bScreen** %scr, align 8, !dbg !4329
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %129, i32 0, i32 3, !dbg !4332
  %first162 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !4333
  %130 = load i8*, i8** %first162, align 8, !dbg !4333
  %131 = bitcast i8* %130 to %struct.ScrArea*, !dbg !4329
  store %struct.ScrArea* %131, %struct.ScrArea** %area, align 8, !dbg !4334
  br label %for.cond163, !dbg !4335

for.cond163:                                      ; preds = %for.inc183, %for.body161
  %132 = load %struct.ScrArea*, %struct.ScrArea** %area, align 8, !dbg !4336
  %tobool164 = icmp ne %struct.ScrArea* %132, null, !dbg !4338
  br i1 %tobool164, label %for.body165, label %for.end185, !dbg !4338

for.body165:                                      ; preds = %for.cond163
  %133 = load %struct.ScrArea*, %struct.ScrArea** %area, align 8, !dbg !4339
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %133, i32 0, i32 19, !dbg !4342
  %first166 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !4343
  %134 = load i8*, i8** %first166, align 8, !dbg !4343
  %135 = bitcast i8* %134 to %struct.SpaceLink*, !dbg !4339
  store %struct.SpaceLink* %135, %struct.SpaceLink** %sl, align 8, !dbg !4344
  br label %for.cond167, !dbg !4345

for.cond167:                                      ; preds = %for.inc180, %for.body165
  %136 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !4346
  %tobool168 = icmp ne %struct.SpaceLink* %136, null, !dbg !4348
  br i1 %tobool168, label %for.body169, label %for.end182, !dbg !4348

for.body169:                                      ; preds = %for.cond167
  %137 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !4349
  %spacetype = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %137, i32 0, i32 3, !dbg !4352
  %138 = load i32, i32* %spacetype, align 8, !dbg !4352
  %cmp170 = icmp eq i32 %138, 9, !dbg !4353
  br i1 %cmp170, label %if.then172, label %if.end179, !dbg !4354

if.then172:                                       ; preds = %for.body169
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !4355, metadata !DIExpression()), !dbg !4357
  %139 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !4358
  %140 = bitcast %struct.SpaceLink* %139 to %struct.SpaceText*, !dbg !4359
  store %struct.SpaceText* %140, %struct.SpaceText** %st, align 8, !dbg !4357
  %141 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !4360
  %text173 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %141, i32 0, i32 6, !dbg !4362
  %142 = load %struct.Text*, %struct.Text** %text173, align 8, !dbg !4362
  %143 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4363
  %cmp174 = icmp eq %struct.Text* %142, %143, !dbg !4364
  br i1 %cmp174, label %if.then176, label %if.end178, !dbg !4365

if.then176:                                       ; preds = %if.then172
  %144 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !4366
  %text177 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %144, i32 0, i32 6, !dbg !4368
  store %struct.Text* null, %struct.Text** %text177, align 8, !dbg !4369
  %145 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !4370
  %top = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %145, i32 0, i32 7, !dbg !4371
  store i32 0, i32* %top, align 8, !dbg !4372
  br label %if.end178, !dbg !4373

if.end178:                                        ; preds = %if.then176, %if.then172
  br label %if.end179, !dbg !4374

if.end179:                                        ; preds = %if.end178, %for.body169
  br label %for.inc180, !dbg !4375

for.inc180:                                       ; preds = %if.end179
  %146 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !4376
  %next181 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %146, i32 0, i32 0, !dbg !4377
  %147 = load %struct.SpaceLink*, %struct.SpaceLink** %next181, align 8, !dbg !4377
  store %struct.SpaceLink* %147, %struct.SpaceLink** %sl, align 8, !dbg !4378
  br label %for.cond167, !dbg !4379, !llvm.loop !4380

for.end182:                                       ; preds = %for.cond167
  br label %for.inc183, !dbg !4382

for.inc183:                                       ; preds = %for.end182
  %148 = load %struct.ScrArea*, %struct.ScrArea** %area, align 8, !dbg !4383
  %next184 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %148, i32 0, i32 0, !dbg !4384
  %149 = load %struct.ScrArea*, %struct.ScrArea** %next184, align 8, !dbg !4384
  store %struct.ScrArea* %149, %struct.ScrArea** %area, align 8, !dbg !4385
  br label %for.cond163, !dbg !4386, !llvm.loop !4387

for.end185:                                       ; preds = %for.cond163
  br label %for.inc186, !dbg !4389

for.inc186:                                       ; preds = %for.end185
  %150 = load %struct.bScreen*, %struct.bScreen** %scr, align 8, !dbg !4390
  %id187 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %150, i32 0, i32 0, !dbg !4391
  %next188 = getelementptr inbounds %struct.ID, %struct.ID* %id187, i32 0, i32 0, !dbg !4392
  %151 = load i8*, i8** %next188, align 8, !dbg !4392
  %152 = bitcast i8* %151 to %struct.bScreen*, !dbg !4390
  store %struct.bScreen* %152, %struct.bScreen** %scr, align 8, !dbg !4393
  br label %for.cond159, !dbg !4394, !llvm.loop !4395

for.end189:                                       ; preds = %for.cond159
  %153 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4397
  %scene = getelementptr inbounds %struct.Main, %struct.Main* %153, i32 0, i32 11, !dbg !4399
  %first190 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %scene, i32 0, i32 0, !dbg !4400
  %154 = load i8*, i8** %first190, align 8, !dbg !4400
  %155 = bitcast i8* %154 to %struct.Scene*, !dbg !4397
  store %struct.Scene* %155, %struct.Scene** %sce, align 8, !dbg !4401
  br label %for.cond191, !dbg !4402

for.cond191:                                      ; preds = %for.inc213, %for.end189
  %156 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !4403
  %tobool192 = icmp ne %struct.Scene* %156, null, !dbg !4405
  br i1 %tobool192, label %for.body193, label %for.end216, !dbg !4405

for.body193:                                      ; preds = %for.cond191
  %157 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !4406
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %157, i32 0, i32 22, !dbg !4409
  %layers = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 60, !dbg !4410
  %first194 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers, i32 0, i32 0, !dbg !4411
  %158 = load i8*, i8** %first194, align 8, !dbg !4411
  %159 = bitcast i8* %158 to %struct.SceneRenderLayer*, !dbg !4406
  store %struct.SceneRenderLayer* %159, %struct.SceneRenderLayer** %srl, align 8, !dbg !4412
  br label %for.cond195, !dbg !4413

for.cond195:                                      ; preds = %for.inc210, %for.body193
  %160 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !4414
  %tobool196 = icmp ne %struct.SceneRenderLayer* %160, null, !dbg !4416
  br i1 %tobool196, label %for.body197, label %for.end212, !dbg !4416

for.body197:                                      ; preds = %for.cond195
  %161 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !4417
  %freestyleConfig = getelementptr inbounds %struct.SceneRenderLayer, %struct.SceneRenderLayer* %161, i32 0, i32 13, !dbg !4420
  %modules = getelementptr inbounds %struct.FreestyleConfig, %struct.FreestyleConfig* %freestyleConfig, i32 0, i32 0, !dbg !4421
  %first198 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %modules, i32 0, i32 0, !dbg !4422
  %162 = load i8*, i8** %first198, align 8, !dbg !4422
  %163 = bitcast i8* %162 to %struct.FreestyleModuleConfig*, !dbg !4417
  store %struct.FreestyleModuleConfig* %163, %struct.FreestyleModuleConfig** %module, align 8, !dbg !4423
  br label %for.cond199, !dbg !4424

for.cond199:                                      ; preds = %for.inc207, %for.body197
  %164 = load %struct.FreestyleModuleConfig*, %struct.FreestyleModuleConfig** %module, align 8, !dbg !4425
  %tobool200 = icmp ne %struct.FreestyleModuleConfig* %164, null, !dbg !4427
  br i1 %tobool200, label %for.body201, label %for.end209, !dbg !4427

for.body201:                                      ; preds = %for.cond199
  %165 = load %struct.FreestyleModuleConfig*, %struct.FreestyleModuleConfig** %module, align 8, !dbg !4428
  %script = getelementptr inbounds %struct.FreestyleModuleConfig, %struct.FreestyleModuleConfig* %165, i32 0, i32 2, !dbg !4431
  %166 = load %struct.Text*, %struct.Text** %script, align 8, !dbg !4431
  %167 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4432
  %cmp202 = icmp eq %struct.Text* %166, %167, !dbg !4433
  br i1 %cmp202, label %if.then204, label %if.end206, !dbg !4434

if.then204:                                       ; preds = %for.body201
  %168 = load %struct.FreestyleModuleConfig*, %struct.FreestyleModuleConfig** %module, align 8, !dbg !4435
  %script205 = getelementptr inbounds %struct.FreestyleModuleConfig, %struct.FreestyleModuleConfig* %168, i32 0, i32 2, !dbg !4436
  store %struct.Text* null, %struct.Text** %script205, align 8, !dbg !4437
  br label %if.end206, !dbg !4435

if.end206:                                        ; preds = %if.then204, %for.body201
  br label %for.inc207, !dbg !4438

for.inc207:                                       ; preds = %if.end206
  %169 = load %struct.FreestyleModuleConfig*, %struct.FreestyleModuleConfig** %module, align 8, !dbg !4439
  %next208 = getelementptr inbounds %struct.FreestyleModuleConfig, %struct.FreestyleModuleConfig* %169, i32 0, i32 0, !dbg !4440
  %170 = load %struct.FreestyleModuleConfig*, %struct.FreestyleModuleConfig** %next208, align 8, !dbg !4440
  store %struct.FreestyleModuleConfig* %170, %struct.FreestyleModuleConfig** %module, align 8, !dbg !4441
  br label %for.cond199, !dbg !4442, !llvm.loop !4443

for.end209:                                       ; preds = %for.cond199
  br label %for.inc210, !dbg !4445

for.inc210:                                       ; preds = %for.end209
  %171 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !4446
  %next211 = getelementptr inbounds %struct.SceneRenderLayer, %struct.SceneRenderLayer* %171, i32 0, i32 0, !dbg !4447
  %172 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %next211, align 8, !dbg !4447
  store %struct.SceneRenderLayer* %172, %struct.SceneRenderLayer** %srl, align 8, !dbg !4448
  br label %for.cond195, !dbg !4449, !llvm.loop !4450

for.end212:                                       ; preds = %for.cond195
  br label %for.inc213, !dbg !4452

for.inc213:                                       ; preds = %for.end212
  %173 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !4453
  %id214 = getelementptr inbounds %struct.Scene, %struct.Scene* %173, i32 0, i32 0, !dbg !4454
  %next215 = getelementptr inbounds %struct.ID, %struct.ID* %id214, i32 0, i32 0, !dbg !4455
  %174 = load i8*, i8** %next215, align 8, !dbg !4455
  %175 = bitcast i8* %174 to %struct.Scene*, !dbg !4453
  store %struct.Scene* %175, %struct.Scene** %sce, align 8, !dbg !4456
  br label %for.cond191, !dbg !4457, !llvm.loop !4458

for.end216:                                       ; preds = %for.cond191
  %176 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4460
  %id217 = getelementptr inbounds %struct.Text, %struct.Text* %176, i32 0, i32 0, !dbg !4461
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id217, i32 0, i32 6, !dbg !4462
  store i32 0, i32* %us, align 4, !dbg !4463
  ret void, !dbg !4464
}

declare dso_local void @DAG_id_tag_update(%struct.ID*, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_text_clear(%struct.Text* %text) #0 !dbg !4465 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %oldstate = alloca i32, align 4
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !4466, metadata !DIExpression()), !dbg !4467
  call void @llvm.dbg.declare(metadata i32* %oldstate, metadata !4468, metadata !DIExpression()), !dbg !4469
  %call = call i32 @txt_get_undostate(), !dbg !4470
  store i32 %call, i32* %oldstate, align 4, !dbg !4471
  call void @txt_set_undostate(i32 1), !dbg !4472
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4473
  call void @txt_sel_all(%struct.Text* %0), !dbg !4474
  %1 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4475
  call void @txt_delete_sel(%struct.Text* %1), !dbg !4476
  %2 = load i32, i32* %oldstate, align 4, !dbg !4477
  call void @txt_set_undostate(i32 %2), !dbg !4478
  %3 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4479
  call void @txt_make_dirty(%struct.Text* %3), !dbg !4480
  ret void, !dbg !4481
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_sel_all(%struct.Text* %text) #0 !dbg !4482 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !4483, metadata !DIExpression()), !dbg !4484
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4485
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 4, !dbg !4486
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !4487
  %1 = load i8*, i8** %first, align 8, !dbg !4487
  %2 = bitcast i8* %1 to %struct.TextLine*, !dbg !4485
  %3 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4488
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %3, i32 0, i32 5, !dbg !4489
  store %struct.TextLine* %2, %struct.TextLine** %curl, align 8, !dbg !4490
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4491
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 7, !dbg !4492
  store i32 0, i32* %curc, align 8, !dbg !4493
  %5 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4494
  %lines1 = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 4, !dbg !4495
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines1, i32 0, i32 1, !dbg !4496
  %6 = load i8*, i8** %last, align 8, !dbg !4496
  %7 = bitcast i8* %6 to %struct.TextLine*, !dbg !4494
  %8 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4497
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 6, !dbg !4498
  store %struct.TextLine* %7, %struct.TextLine** %sell, align 8, !dbg !4499
  %9 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4500
  %sell2 = getelementptr inbounds %struct.Text, %struct.Text* %9, i32 0, i32 6, !dbg !4501
  %10 = load %struct.TextLine*, %struct.TextLine** %sell2, align 8, !dbg !4501
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %10, i32 0, i32 4, !dbg !4502
  %11 = load i32, i32* %len, align 8, !dbg !4502
  %12 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4503
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %12, i32 0, i32 8, !dbg !4504
  store i32 %11, i32* %selc, align 4, !dbg !4505
  ret void, !dbg !4506
}

; Function Attrs: noinline nounwind uwtable
define internal void @txt_delete_sel(%struct.Text* %text) #0 !dbg !4507 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %tmpl = alloca %struct.TextLine*, align 8
  %buf = alloca i8*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !4508, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.declare(metadata %struct.TextLine** %tmpl, metadata !4510, metadata !DIExpression()), !dbg !4511
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !4512, metadata !DIExpression()), !dbg !4513
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4514
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !4516
  %1 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !4516
  %tobool = icmp ne %struct.TextLine* %1, null, !dbg !4514
  br i1 %tobool, label %if.end, label %if.then, !dbg !4517

if.then:                                          ; preds = %entry
  br label %return, !dbg !4518

if.end:                                           ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4519
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 6, !dbg !4521
  %3 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !4521
  %tobool1 = icmp ne %struct.TextLine* %3, null, !dbg !4519
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !4522

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !4523

if.end3:                                          ; preds = %if.end
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4524
  %call = call zeroext i8 @txt_has_sel(%struct.Text* %4), !dbg !4526
  %tobool4 = icmp ne i8 %call, 0, !dbg !4526
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !4527

if.then5:                                         ; preds = %if.end3
  br label %return, !dbg !4528

if.end6:                                          ; preds = %if.end3
  %5 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4529
  call void @txt_order_cursors(%struct.Text* %5, i8 zeroext 0), !dbg !4530
  %6 = load i8, i8* @undoing, align 1, !dbg !4531
  %tobool7 = icmp ne i8 %6, 0, !dbg !4531
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !4533

if.then8:                                         ; preds = %if.end6
  %7 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4534
  %call9 = call i8* @txt_sel_to_buf(%struct.Text* %7), !dbg !4536
  store i8* %call9, i8** %buf, align 8, !dbg !4537
  %8 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4538
  %9 = load i8*, i8** %buf, align 8, !dbg !4539
  call void @txt_undo_add_blockop(%struct.Text* %8, i32 23, i8* %9), !dbg !4540
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4541
  %11 = load i8*, i8** %buf, align 8, !dbg !4542
  call void %10(i8* %11), !dbg !4541
  br label %if.end10, !dbg !4543

if.end10:                                         ; preds = %if.then8, %if.end6
  %12 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4544
  %13 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4545
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %13, i32 0, i32 7, !dbg !4546
  %14 = load i32, i32* %curc, align 8, !dbg !4546
  %15 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4547
  %sell11 = getelementptr inbounds %struct.Text, %struct.Text* %15, i32 0, i32 6, !dbg !4548
  %16 = load %struct.TextLine*, %struct.TextLine** %sell11, align 8, !dbg !4548
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %16, i32 0, i32 4, !dbg !4549
  %17 = load i32, i32* %len, align 8, !dbg !4549
  %18 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4550
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %18, i32 0, i32 8, !dbg !4551
  %19 = load i32, i32* %selc, align 4, !dbg !4551
  %sub = sub nsw i32 %17, %19, !dbg !4552
  %add = add nsw i32 %14, %sub, !dbg !4553
  %add12 = add nsw i32 %add, 1, !dbg !4554
  %conv = sext i32 %add12 to i64, !dbg !4545
  %call13 = call i8* %12(i64 %conv, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)), !dbg !4544
  store i8* %call13, i8** %buf, align 8, !dbg !4555
  %20 = load i8*, i8** %buf, align 8, !dbg !4556
  %21 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4557
  %curl14 = getelementptr inbounds %struct.Text, %struct.Text* %21, i32 0, i32 5, !dbg !4558
  %22 = load %struct.TextLine*, %struct.TextLine** %curl14, align 8, !dbg !4558
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %22, i32 0, i32 2, !dbg !4559
  %23 = load i8*, i8** %line, align 8, !dbg !4559
  %24 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4560
  %curc15 = getelementptr inbounds %struct.Text, %struct.Text* %24, i32 0, i32 7, !dbg !4561
  %25 = load i32, i32* %curc15, align 8, !dbg !4561
  %conv16 = sext i32 %25 to i64, !dbg !4560
  %call17 = call i8* @strncpy(i8* %20, i8* %23, i64 %conv16) #7, !dbg !4562
  %26 = load i8*, i8** %buf, align 8, !dbg !4563
  %27 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4564
  %curc18 = getelementptr inbounds %struct.Text, %struct.Text* %27, i32 0, i32 7, !dbg !4565
  %28 = load i32, i32* %curc18, align 8, !dbg !4565
  %idx.ext = sext i32 %28 to i64, !dbg !4566
  %add.ptr = getelementptr inbounds i8, i8* %26, i64 %idx.ext, !dbg !4566
  %29 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4567
  %sell19 = getelementptr inbounds %struct.Text, %struct.Text* %29, i32 0, i32 6, !dbg !4568
  %30 = load %struct.TextLine*, %struct.TextLine** %sell19, align 8, !dbg !4568
  %line20 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %30, i32 0, i32 2, !dbg !4569
  %31 = load i8*, i8** %line20, align 8, !dbg !4569
  %32 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4570
  %selc21 = getelementptr inbounds %struct.Text, %struct.Text* %32, i32 0, i32 8, !dbg !4571
  %33 = load i32, i32* %selc21, align 4, !dbg !4571
  %idx.ext22 = sext i32 %33 to i64, !dbg !4572
  %add.ptr23 = getelementptr inbounds i8, i8* %31, i64 %idx.ext22, !dbg !4572
  %call24 = call i8* @strcpy(i8* %add.ptr, i8* %add.ptr23) #7, !dbg !4573
  %34 = load i8*, i8** %buf, align 8, !dbg !4574
  %35 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4575
  %curc25 = getelementptr inbounds %struct.Text, %struct.Text* %35, i32 0, i32 7, !dbg !4576
  %36 = load i32, i32* %curc25, align 8, !dbg !4576
  %37 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4577
  %sell26 = getelementptr inbounds %struct.Text, %struct.Text* %37, i32 0, i32 6, !dbg !4578
  %38 = load %struct.TextLine*, %struct.TextLine** %sell26, align 8, !dbg !4578
  %len27 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %38, i32 0, i32 4, !dbg !4579
  %39 = load i32, i32* %len27, align 8, !dbg !4579
  %40 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4580
  %selc28 = getelementptr inbounds %struct.Text, %struct.Text* %40, i32 0, i32 8, !dbg !4581
  %41 = load i32, i32* %selc28, align 4, !dbg !4581
  %sub29 = sub nsw i32 %39, %41, !dbg !4582
  %add30 = add nsw i32 %36, %sub29, !dbg !4583
  %idxprom = sext i32 %add30 to i64, !dbg !4574
  %arrayidx = getelementptr inbounds i8, i8* %34, i64 %idxprom, !dbg !4574
  store i8 0, i8* %arrayidx, align 1, !dbg !4584
  %42 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4585
  %curl31 = getelementptr inbounds %struct.Text, %struct.Text* %42, i32 0, i32 5, !dbg !4586
  %43 = load %struct.TextLine*, %struct.TextLine** %curl31, align 8, !dbg !4586
  %44 = load i8*, i8** %buf, align 8, !dbg !4587
  call void @make_new_line(%struct.TextLine* %43, i8* %44), !dbg !4588
  %45 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4589
  %sell32 = getelementptr inbounds %struct.Text, %struct.Text* %45, i32 0, i32 6, !dbg !4590
  %46 = load %struct.TextLine*, %struct.TextLine** %sell32, align 8, !dbg !4590
  store %struct.TextLine* %46, %struct.TextLine** %tmpl, align 8, !dbg !4591
  br label %while.cond, !dbg !4592

while.cond:                                       ; preds = %if.end37, %if.end10
  %47 = load %struct.TextLine*, %struct.TextLine** %tmpl, align 8, !dbg !4593
  %48 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4594
  %curl33 = getelementptr inbounds %struct.Text, %struct.Text* %48, i32 0, i32 5, !dbg !4595
  %49 = load %struct.TextLine*, %struct.TextLine** %curl33, align 8, !dbg !4595
  %cmp = icmp ne %struct.TextLine* %47, %49, !dbg !4596
  br i1 %cmp, label %while.body, label %while.end, !dbg !4592

while.body:                                       ; preds = %while.cond
  %50 = load %struct.TextLine*, %struct.TextLine** %tmpl, align 8, !dbg !4597
  %prev = getelementptr inbounds %struct.TextLine, %struct.TextLine* %50, i32 0, i32 1, !dbg !4599
  %51 = load %struct.TextLine*, %struct.TextLine** %prev, align 8, !dbg !4599
  store %struct.TextLine* %51, %struct.TextLine** %tmpl, align 8, !dbg !4600
  %52 = load %struct.TextLine*, %struct.TextLine** %tmpl, align 8, !dbg !4601
  %tobool35 = icmp ne %struct.TextLine* %52, null, !dbg !4601
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !4603

if.then36:                                        ; preds = %while.body
  br label %while.end, !dbg !4604

if.end37:                                         ; preds = %while.body
  %53 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4605
  %54 = load %struct.TextLine*, %struct.TextLine** %tmpl, align 8, !dbg !4606
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %54, i32 0, i32 0, !dbg !4607
  %55 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !4607
  call void @txt_delete_line(%struct.Text* %53, %struct.TextLine* %55), !dbg !4608
  br label %while.cond, !dbg !4592, !llvm.loop !4609

while.end:                                        ; preds = %if.then36, %while.cond
  %56 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4611
  %curl38 = getelementptr inbounds %struct.Text, %struct.Text* %56, i32 0, i32 5, !dbg !4612
  %57 = load %struct.TextLine*, %struct.TextLine** %curl38, align 8, !dbg !4612
  %58 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4613
  %sell39 = getelementptr inbounds %struct.Text, %struct.Text* %58, i32 0, i32 6, !dbg !4614
  store %struct.TextLine* %57, %struct.TextLine** %sell39, align 8, !dbg !4615
  %59 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4616
  %curc40 = getelementptr inbounds %struct.Text, %struct.Text* %59, i32 0, i32 7, !dbg !4617
  %60 = load i32, i32* %curc40, align 8, !dbg !4617
  %61 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4618
  %selc41 = getelementptr inbounds %struct.Text, %struct.Text* %61, i32 0, i32 8, !dbg !4619
  store i32 %60, i32* %selc41, align 4, !dbg !4620
  br label %return, !dbg !4621

return:                                           ; preds = %while.end, %if.then5, %if.then2, %if.then
  ret void, !dbg !4621
}

; Function Attrs: noinline nounwind uwtable
define internal void @txt_make_dirty(%struct.Text* %text) #0 !dbg !4622 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !4623, metadata !DIExpression()), !dbg !4624
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4625
  %flags = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 2, !dbg !4626
  %1 = load i32, i32* %flags, align 8, !dbg !4627
  %or = or i32 %1, 1, !dbg !4627
  store i32 %or, i32* %flags, align 8, !dbg !4627
  ret void, !dbg !4628
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_text_write(%struct.Text* %text, i8* %str) #0 !dbg !4629 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %str.addr = alloca i8*, align 8
  %oldstate = alloca i32, align 4
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !4632, metadata !DIExpression()), !dbg !4633
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !4634, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.declare(metadata i32* %oldstate, metadata !4636, metadata !DIExpression()), !dbg !4637
  %call = call i32 @txt_get_undostate(), !dbg !4638
  store i32 %call, i32* %oldstate, align 4, !dbg !4639
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4640
  %1 = load i8*, i8** %str.addr, align 8, !dbg !4641
  call void @txt_insert_buf(%struct.Text* %0, i8* %1), !dbg !4642
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4643
  call void @txt_move_eof(%struct.Text* %2, i8 zeroext 0), !dbg !4644
  %3 = load i32, i32* %oldstate, align 4, !dbg !4645
  call void @txt_set_undostate(i32 %3), !dbg !4646
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4647
  call void @txt_make_dirty(%struct.Text* %4), !dbg !4648
  ret void, !dbg !4649
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_insert_buf(%struct.Text* %text, i8* %in_buffer) #0 !dbg !4650 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %in_buffer.addr = alloca i8*, align 8
  %l = alloca i32, align 4
  %u = alloca i32, align 4
  %len = alloca i32, align 4
  %i = alloca i64, align 8
  %j = alloca i64, align 8
  %add = alloca %struct.TextLine*, align 8
  %buffer = alloca i8*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !4651, metadata !DIExpression()), !dbg !4652
  store i8* %in_buffer, i8** %in_buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in_buffer.addr, metadata !4653, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.declare(metadata i32* %l, metadata !4655, metadata !DIExpression()), !dbg !4656
  store i32 0, i32* %l, align 4, !dbg !4656
  call void @llvm.dbg.declare(metadata i32* %u, metadata !4657, metadata !DIExpression()), !dbg !4658
  call void @llvm.dbg.declare(metadata i32* %len, metadata !4659, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4661, metadata !DIExpression()), !dbg !4662
  store i64 0, i64* %i, align 8, !dbg !4662
  call void @llvm.dbg.declare(metadata i64* %j, metadata !4663, metadata !DIExpression()), !dbg !4664
  call void @llvm.dbg.declare(metadata %struct.TextLine** %add, metadata !4665, metadata !DIExpression()), !dbg !4666
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !4667, metadata !DIExpression()), !dbg !4668
  %0 = load i8*, i8** %in_buffer.addr, align 8, !dbg !4669
  %tobool = icmp ne i8* %0, null, !dbg !4669
  br i1 %tobool, label %if.end, label %if.then, !dbg !4671

if.then:                                          ; preds = %entry
  br label %return, !dbg !4672

if.end:                                           ; preds = %entry
  %1 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4673
  call void @txt_delete_sel(%struct.Text* %1), !dbg !4674
  %2 = load i8*, i8** %in_buffer.addr, align 8, !dbg !4675
  %call = call i64 @strlen(i8* %2) #6, !dbg !4676
  %conv = trunc i64 %call to i32, !dbg !4676
  store i32 %conv, i32* %len, align 4, !dbg !4677
  %3 = load i8*, i8** %in_buffer.addr, align 8, !dbg !4678
  %4 = load i32, i32* %len, align 4, !dbg !4679
  %conv1 = sext i32 %4 to i64, !dbg !4679
  %call2 = call i8* @BLI_strdupn(i8* %3, i64 %conv1), !dbg !4680
  store i8* %call2, i8** %buffer, align 8, !dbg !4681
  %call3 = call i32 @txt_extended_ascii_as_utf8(i8** %buffer), !dbg !4682
  %5 = load i32, i32* %len, align 4, !dbg !4683
  %add4 = add nsw i32 %5, %call3, !dbg !4683
  store i32 %add4, i32* %len, align 4, !dbg !4683
  %6 = load i8, i8* @undoing, align 1, !dbg !4684
  %tobool5 = icmp ne i8 %6, 0, !dbg !4684
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !4686

if.then6:                                         ; preds = %if.end
  %7 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4687
  %8 = load i8*, i8** %buffer, align 8, !dbg !4688
  call void @txt_undo_add_blockop(%struct.Text* %7, i32 24, i8* %8), !dbg !4689
  br label %if.end7, !dbg !4689

if.end7:                                          ; preds = %if.then6, %if.end
  %9 = load i8, i8* @undoing, align 1, !dbg !4690
  %conv8 = zext i8 %9 to i32, !dbg !4690
  store i32 %conv8, i32* %u, align 4, !dbg !4691
  store i8 1, i8* @undoing, align 1, !dbg !4692
  br label %while.cond, !dbg !4693

while.cond:                                       ; preds = %while.body, %if.end7
  %10 = load i8*, i8** %buffer, align 8, !dbg !4694
  %11 = load i64, i64* %i, align 8, !dbg !4695
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !4694
  %12 = load i8, i8* %arrayidx, align 1, !dbg !4694
  %conv9 = zext i8 %12 to i32, !dbg !4694
  %tobool10 = icmp ne i32 %conv9, 0, !dbg !4694
  br i1 %tobool10, label %land.rhs, label %land.end, !dbg !4696

land.rhs:                                         ; preds = %while.cond
  %13 = load i8*, i8** %buffer, align 8, !dbg !4697
  %14 = load i64, i64* %i, align 8, !dbg !4698
  %arrayidx11 = getelementptr inbounds i8, i8* %13, i64 %14, !dbg !4697
  %15 = load i8, i8* %arrayidx11, align 1, !dbg !4697
  %conv12 = zext i8 %15 to i32, !dbg !4697
  %cmp = icmp ne i32 %conv12, 10, !dbg !4699
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %16 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !4700
  br i1 %16, label %while.body, label %while.end, !dbg !4693

while.body:                                       ; preds = %land.end
  %17 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4701
  %18 = load i8*, i8** %buffer, align 8, !dbg !4702
  %call14 = call i32 @BLI_str_utf8_as_unicode_step(i8* %18, i64* %i), !dbg !4703
  %call15 = call zeroext i8 @txt_add_raw_char(%struct.Text* %17, i32 %call14), !dbg !4704
  br label %while.cond, !dbg !4693, !llvm.loop !4705

while.end:                                        ; preds = %land.end
  %19 = load i8*, i8** %buffer, align 8, !dbg !4707
  %20 = load i64, i64* %i, align 8, !dbg !4709
  %arrayidx16 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !4707
  %21 = load i8, i8* %arrayidx16, align 1, !dbg !4707
  %conv17 = zext i8 %21 to i32, !dbg !4707
  %cmp18 = icmp eq i32 %conv17, 10, !dbg !4710
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !4711

if.then20:                                        ; preds = %while.end
  %22 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4712
  call void @txt_split_curline(%struct.Text* %22), !dbg !4713
  br label %if.end22, !dbg !4713

if.else:                                          ; preds = %while.end
  %23 = load i32, i32* %u, align 4, !dbg !4714
  %conv21 = trunc i32 %23 to i8, !dbg !4714
  store i8 %conv21, i8* @undoing, align 1, !dbg !4716
  %24 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4717
  %25 = load i8*, i8** %buffer, align 8, !dbg !4718
  call void %24(i8* %25), !dbg !4717
  br label %return, !dbg !4719

if.end22:                                         ; preds = %if.then20
  %26 = load i64, i64* %i, align 8, !dbg !4720
  %inc = add i64 %26, 1, !dbg !4720
  store i64 %inc, i64* %i, align 8, !dbg !4720
  br label %while.cond23, !dbg !4721

while.cond23:                                     ; preds = %if.end62, %if.end22
  %27 = load i64, i64* %i, align 8, !dbg !4722
  %28 = load i32, i32* %len, align 4, !dbg !4723
  %conv24 = sext i32 %28 to i64, !dbg !4723
  %cmp25 = icmp ult i64 %27, %conv24, !dbg !4724
  br i1 %cmp25, label %while.body27, label %while.end63, !dbg !4721

while.body27:                                     ; preds = %while.cond23
  store i32 0, i32* %l, align 4, !dbg !4725
  br label %while.cond28, !dbg !4727

while.cond28:                                     ; preds = %while.body38, %while.body27
  %29 = load i8*, i8** %buffer, align 8, !dbg !4728
  %30 = load i64, i64* %i, align 8, !dbg !4729
  %arrayidx29 = getelementptr inbounds i8, i8* %29, i64 %30, !dbg !4728
  %31 = load i8, i8* %arrayidx29, align 1, !dbg !4728
  %conv30 = zext i8 %31 to i32, !dbg !4728
  %tobool31 = icmp ne i32 %conv30, 0, !dbg !4728
  br i1 %tobool31, label %land.rhs32, label %land.end37, !dbg !4730

land.rhs32:                                       ; preds = %while.cond28
  %32 = load i8*, i8** %buffer, align 8, !dbg !4731
  %33 = load i64, i64* %i, align 8, !dbg !4732
  %arrayidx33 = getelementptr inbounds i8, i8* %32, i64 %33, !dbg !4731
  %34 = load i8, i8* %arrayidx33, align 1, !dbg !4731
  %conv34 = zext i8 %34 to i32, !dbg !4731
  %cmp35 = icmp ne i32 %conv34, 10, !dbg !4733
  br label %land.end37

land.end37:                                       ; preds = %land.rhs32, %while.cond28
  %35 = phi i1 [ false, %while.cond28 ], [ %cmp35, %land.rhs32 ], !dbg !4734
  br i1 %35, label %while.body38, label %while.end41, !dbg !4727

while.body38:                                     ; preds = %land.end37
  %36 = load i64, i64* %i, align 8, !dbg !4735
  %inc39 = add i64 %36, 1, !dbg !4735
  store i64 %inc39, i64* %i, align 8, !dbg !4735
  %37 = load i32, i32* %l, align 4, !dbg !4737
  %inc40 = add nsw i32 %37, 1, !dbg !4737
  store i32 %inc40, i32* %l, align 4, !dbg !4737
  br label %while.cond28, !dbg !4727, !llvm.loop !4738

while.end41:                                      ; preds = %land.end37
  %38 = load i8*, i8** %buffer, align 8, !dbg !4740
  %39 = load i64, i64* %i, align 8, !dbg !4742
  %arrayidx42 = getelementptr inbounds i8, i8* %38, i64 %39, !dbg !4740
  %40 = load i8, i8* %arrayidx42, align 1, !dbg !4740
  %conv43 = zext i8 %40 to i32, !dbg !4740
  %cmp44 = icmp eq i32 %conv43, 10, !dbg !4743
  br i1 %cmp44, label %if.then46, label %if.else50, !dbg !4744

if.then46:                                        ; preds = %while.end41
  %41 = load i8*, i8** %buffer, align 8, !dbg !4745
  %42 = load i64, i64* %i, align 8, !dbg !4747
  %43 = load i32, i32* %l, align 4, !dbg !4748
  %conv47 = sext i32 %43 to i64, !dbg !4748
  %sub = sub i64 %42, %conv47, !dbg !4749
  %add.ptr = getelementptr inbounds i8, i8* %41, i64 %sub, !dbg !4750
  %44 = load i32, i32* %l, align 4, !dbg !4751
  %call48 = call %struct.TextLine* @txt_new_linen(i8* %add.ptr, i32 %44), !dbg !4752
  store %struct.TextLine* %call48, %struct.TextLine** %add, align 8, !dbg !4753
  %45 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4754
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %45, i32 0, i32 4, !dbg !4755
  %46 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4756
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %46, i32 0, i32 5, !dbg !4757
  %47 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !4757
  %48 = bitcast %struct.TextLine* %47 to i8*, !dbg !4756
  %49 = load %struct.TextLine*, %struct.TextLine** %add, align 8, !dbg !4758
  %50 = bitcast %struct.TextLine* %49 to i8*, !dbg !4758
  call void @BLI_insertlinkbefore(%struct.ListBase* %lines, i8* %48, i8* %50), !dbg !4759
  %51 = load i64, i64* %i, align 8, !dbg !4760
  %inc49 = add i64 %51, 1, !dbg !4760
  store i64 %inc49, i64* %i, align 8, !dbg !4760
  br label %if.end62, !dbg !4761

if.else50:                                        ; preds = %while.end41
  %52 = load i64, i64* %i, align 8, !dbg !4762
  %53 = load i32, i32* %l, align 4, !dbg !4765
  %conv51 = sext i32 %53 to i64, !dbg !4765
  %sub52 = sub i64 %52, %conv51, !dbg !4766
  store i64 %sub52, i64* %j, align 8, !dbg !4767
  br label %for.cond, !dbg !4768

for.cond:                                         ; preds = %for.body, %if.else50
  %54 = load i64, i64* %j, align 8, !dbg !4769
  %55 = load i64, i64* %i, align 8, !dbg !4771
  %cmp53 = icmp ult i64 %54, %55, !dbg !4772
  br i1 %cmp53, label %land.rhs55, label %land.end59, !dbg !4773

land.rhs55:                                       ; preds = %for.cond
  %56 = load i64, i64* %j, align 8, !dbg !4774
  %57 = load i32, i32* %len, align 4, !dbg !4775
  %conv56 = sext i32 %57 to i64, !dbg !4775
  %cmp57 = icmp ult i64 %56, %conv56, !dbg !4776
  br label %land.end59

land.end59:                                       ; preds = %land.rhs55, %for.cond
  %58 = phi i1 [ false, %for.cond ], [ %cmp57, %land.rhs55 ], !dbg !4777
  br i1 %58, label %for.body, label %for.end, !dbg !4778

for.body:                                         ; preds = %land.end59
  %59 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4779
  %60 = load i8*, i8** %buffer, align 8, !dbg !4780
  %call60 = call i32 @BLI_str_utf8_as_unicode_step(i8* %60, i64* %j), !dbg !4781
  %call61 = call zeroext i8 @txt_add_raw_char(%struct.Text* %59, i32 %call60), !dbg !4782
  br label %for.cond, !dbg !4783, !llvm.loop !4784

for.end:                                          ; preds = %land.end59
  br label %while.end63, !dbg !4786

if.end62:                                         ; preds = %if.then46
  br label %while.cond23, !dbg !4721, !llvm.loop !4787

while.end63:                                      ; preds = %for.end, %while.cond23
  %61 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4789
  %62 = load i8*, i8** %buffer, align 8, !dbg !4790
  call void %61(i8* %62), !dbg !4789
  %63 = load i32, i32* %u, align 4, !dbg !4791
  %conv64 = trunc i32 %63 to i8, !dbg !4791
  store i8 %conv64, i8* @undoing, align 1, !dbg !4792
  br label %return, !dbg !4793

return:                                           ; preds = %while.end63, %if.else, %if.then
  ret void, !dbg !4793
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_move_eof(%struct.Text* %text, i8 zeroext %sel) #0 !dbg !4794 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %sel.addr = alloca i8, align 1
  %linep = alloca %struct.TextLine**, align 8
  %charp = alloca i32*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !4797, metadata !DIExpression()), !dbg !4798
  store i8 %sel, i8* %sel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sel.addr, metadata !4799, metadata !DIExpression()), !dbg !4800
  call void @llvm.dbg.declare(metadata %struct.TextLine*** %linep, metadata !4801, metadata !DIExpression()), !dbg !4802
  call void @llvm.dbg.declare(metadata i32** %charp, metadata !4803, metadata !DIExpression()), !dbg !4805
  %0 = load i8, i8* %sel.addr, align 1, !dbg !4806
  %tobool = icmp ne i8 %0, 0, !dbg !4806
  br i1 %tobool, label %if.then, label %if.else, !dbg !4808

if.then:                                          ; preds = %entry
  %1 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4809
  call void @txt_curs_sel(%struct.Text* %1, %struct.TextLine*** %linep, i32** %charp), !dbg !4810
  br label %if.end, !dbg !4810

if.else:                                          ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4811
  call void @txt_curs_cur(%struct.Text* %2, %struct.TextLine*** %linep, i32** %charp), !dbg !4812
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %3 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !4813
  %4 = load %struct.TextLine*, %struct.TextLine** %3, align 8, !dbg !4815
  %tobool1 = icmp ne %struct.TextLine* %4, null, !dbg !4815
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !4816

if.then2:                                         ; preds = %if.end
  br label %if.end6, !dbg !4817

if.end3:                                          ; preds = %if.end
  %5 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4818
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 4, !dbg !4819
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 1, !dbg !4820
  %6 = load i8*, i8** %last, align 8, !dbg !4820
  %7 = bitcast i8* %6 to %struct.TextLine*, !dbg !4818
  %8 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !4821
  store %struct.TextLine* %7, %struct.TextLine** %8, align 8, !dbg !4822
  %9 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !4823
  %10 = load %struct.TextLine*, %struct.TextLine** %9, align 8, !dbg !4824
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %10, i32 0, i32 4, !dbg !4825
  %11 = load i32, i32* %len, align 8, !dbg !4825
  %12 = load i32*, i32** %charp, align 8, !dbg !4826
  store i32 %11, i32* %12, align 4, !dbg !4827
  %13 = load i8, i8* %sel.addr, align 1, !dbg !4828
  %tobool4 = icmp ne i8 %13, 0, !dbg !4828
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !4830

if.then5:                                         ; preds = %if.end3
  %14 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4831
  call void @txt_pop_sel(%struct.Text* %14), !dbg !4832
  br label %if.end6, !dbg !4832

if.end6:                                          ; preds = %if.then2, %if.then5, %if.end3
  ret void, !dbg !4833
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_text_file_modified_check(%struct.Text* %text) #0 !dbg !4834 {
entry:
  %retval = alloca i32, align 4
  %text.addr = alloca %struct.Text*, align 8
  %st = alloca %struct.stat, align 8
  %result = alloca i32, align 4
  %file = alloca [1024 x i8], align 16
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !4835, metadata !DIExpression()), !dbg !4836
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !4837, metadata !DIExpression()), !dbg !4838
  call void @llvm.dbg.declare(metadata i32* %result, metadata !4839, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.declare(metadata [1024 x i8]* %file, metadata !4841, metadata !DIExpression()), !dbg !4842
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4843
  %name = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 1, !dbg !4845
  %1 = load i8*, i8** %name, align 8, !dbg !4845
  %tobool = icmp ne i8* %1, null, !dbg !4843
  br i1 %tobool, label %if.end, label %if.then, !dbg !4846

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4847
  br label %return, !dbg !4847

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %file, i64 0, i64 0, !dbg !4848
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4849
  %name1 = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 1, !dbg !4850
  %3 = load i8*, i8** %name1, align 8, !dbg !4850
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %3, i64 1024), !dbg !4851
  %arraydecay2 = getelementptr inbounds [1024 x i8], [1024 x i8]* %file, i64 0, i64 0, !dbg !4852
  %4 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !4853
  %name3 = getelementptr inbounds %struct.Main, %struct.Main* %4, i32 0, i32 2, !dbg !4854
  %arraydecay4 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name3, i64 0, i64 0, !dbg !4855
  %call5 = call zeroext i8 @BLI_path_abs(i8* %arraydecay2, i8* %arraydecay4), !dbg !4856
  %arraydecay6 = getelementptr inbounds [1024 x i8], [1024 x i8]* %file, i64 0, i64 0, !dbg !4857
  %call7 = call i32 @BLI_exists(i8* %arraydecay6), !dbg !4859
  %tobool8 = icmp ne i32 %call7, 0, !dbg !4859
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !4860

if.then9:                                         ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !4861
  br label %return, !dbg !4861

if.end10:                                         ; preds = %if.end
  %arraydecay11 = getelementptr inbounds [1024 x i8], [1024 x i8]* %file, i64 0, i64 0, !dbg !4862
  %call12 = call i32 @BLI_stat(i8* %arraydecay11, %struct.stat* %st), !dbg !4863
  store i32 %call12, i32* %result, align 4, !dbg !4864
  %5 = load i32, i32* %result, align 4, !dbg !4865
  %cmp = icmp eq i32 %5, -1, !dbg !4867
  br i1 %cmp, label %if.then13, label %if.end14, !dbg !4868

if.then13:                                        ; preds = %if.end10
  store i32 -1, i32* %retval, align 4, !dbg !4869
  br label %return, !dbg !4869

if.end14:                                         ; preds = %if.end10
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !4870
  %6 = load i32, i32* %st_mode, align 8, !dbg !4870
  %and = and i32 %6, 61440, !dbg !4870
  %cmp15 = icmp eq i32 %and, 32768, !dbg !4870
  br i1 %cmp15, label %if.end17, label %if.then16, !dbg !4872

if.then16:                                        ; preds = %if.end14
  store i32 -1, i32* %retval, align 4, !dbg !4873
  br label %return, !dbg !4873

if.end17:                                         ; preds = %if.end14
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 12, !dbg !4874
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !4874
  %7 = load i64, i64* %tv_sec, align 8, !dbg !4874
  %conv = sitofp i64 %7 to double, !dbg !4876
  %8 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4877
  %mtime = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 13, !dbg !4878
  %9 = load double, double* %mtime, align 8, !dbg !4878
  %cmp18 = fcmp ogt double %conv, %9, !dbg !4879
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !4880

if.then20:                                        ; preds = %if.end17
  store i32 1, i32* %retval, align 4, !dbg !4881
  br label %return, !dbg !4881

if.end21:                                         ; preds = %if.end17
  store i32 0, i32* %retval, align 4, !dbg !4882
  br label %return, !dbg !4882

return:                                           ; preds = %if.end21, %if.then20, %if.then16, %if.then13, %if.then9, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !4883
  ret i32 %10, !dbg !4883
}

declare dso_local i32 @BLI_exists(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_text_file_modified_ignore(%struct.Text* %text) #0 !dbg !4884 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %st = alloca %struct.stat, align 8
  %result = alloca i32, align 4
  %file = alloca [1024 x i8], align 16
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !4885, metadata !DIExpression()), !dbg !4886
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !4887, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.declare(metadata i32* %result, metadata !4889, metadata !DIExpression()), !dbg !4890
  call void @llvm.dbg.declare(metadata [1024 x i8]* %file, metadata !4891, metadata !DIExpression()), !dbg !4892
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4893
  %name = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 1, !dbg !4895
  %1 = load i8*, i8** %name, align 8, !dbg !4895
  %tobool = icmp ne i8* %1, null, !dbg !4893
  br i1 %tobool, label %if.end, label %if.then, !dbg !4896

if.then:                                          ; preds = %entry
  br label %return, !dbg !4897

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %file, i64 0, i64 0, !dbg !4898
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4899
  %name1 = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 1, !dbg !4900
  %3 = load i8*, i8** %name1, align 8, !dbg !4900
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %3, i64 1024), !dbg !4901
  %arraydecay2 = getelementptr inbounds [1024 x i8], [1024 x i8]* %file, i64 0, i64 0, !dbg !4902
  %4 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !4903
  %name3 = getelementptr inbounds %struct.Main, %struct.Main* %4, i32 0, i32 2, !dbg !4904
  %arraydecay4 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name3, i64 0, i64 0, !dbg !4905
  %call5 = call zeroext i8 @BLI_path_abs(i8* %arraydecay2, i8* %arraydecay4), !dbg !4906
  %arraydecay6 = getelementptr inbounds [1024 x i8], [1024 x i8]* %file, i64 0, i64 0, !dbg !4907
  %call7 = call i32 @BLI_exists(i8* %arraydecay6), !dbg !4909
  %tobool8 = icmp ne i32 %call7, 0, !dbg !4909
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !4910

if.then9:                                         ; preds = %if.end
  br label %return, !dbg !4911

if.end10:                                         ; preds = %if.end
  %arraydecay11 = getelementptr inbounds [1024 x i8], [1024 x i8]* %file, i64 0, i64 0, !dbg !4912
  %call12 = call i32 @BLI_stat(i8* %arraydecay11, %struct.stat* %st), !dbg !4913
  store i32 %call12, i32* %result, align 4, !dbg !4914
  %5 = load i32, i32* %result, align 4, !dbg !4915
  %cmp = icmp eq i32 %5, -1, !dbg !4917
  br i1 %cmp, label %if.then14, label %lor.lhs.false, !dbg !4918

lor.lhs.false:                                    ; preds = %if.end10
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !4919
  %6 = load i32, i32* %st_mode, align 8, !dbg !4919
  %and = and i32 %6, 61440, !dbg !4919
  %cmp13 = icmp eq i32 %and, 32768, !dbg !4919
  br i1 %cmp13, label %if.end15, label %if.then14, !dbg !4920

if.then14:                                        ; preds = %lor.lhs.false, %if.end10
  br label %return, !dbg !4921

if.end15:                                         ; preds = %lor.lhs.false
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 12, !dbg !4922
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !4922
  %7 = load i64, i64* %tv_sec, align 8, !dbg !4922
  %conv = sitofp i64 %7 to double, !dbg !4923
  %8 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4924
  %mtime = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 13, !dbg !4925
  store double %conv, double* %mtime, align 8, !dbg !4926
  br label %return, !dbg !4927

return:                                           ; preds = %if.end15, %if.then14, %if.then9, %if.then
  ret void, !dbg !4927
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_clean_text(%struct.Text* %text) #0 !dbg !4928 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %top = alloca %struct.TextLine**, align 8
  %bot = alloca %struct.TextLine**, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !4929, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.declare(metadata %struct.TextLine*** %top, metadata !4931, metadata !DIExpression()), !dbg !4932
  call void @llvm.dbg.declare(metadata %struct.TextLine*** %bot, metadata !4933, metadata !DIExpression()), !dbg !4934
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4935
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 4, !dbg !4937
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !4938
  %1 = load i8*, i8** %first, align 8, !dbg !4938
  %tobool = icmp ne i8* %1, null, !dbg !4935
  br i1 %tobool, label %if.end12, label %if.then, !dbg !4939

if.then:                                          ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4940
  %lines1 = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 4, !dbg !4943
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines1, i32 0, i32 1, !dbg !4944
  %3 = load i8*, i8** %last, align 8, !dbg !4944
  %tobool2 = icmp ne i8* %3, null, !dbg !4940
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !4945

if.then3:                                         ; preds = %if.then
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4946
  %lines4 = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 4, !dbg !4947
  %last5 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines4, i32 0, i32 1, !dbg !4948
  %5 = load i8*, i8** %last5, align 8, !dbg !4948
  %6 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4949
  %lines6 = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 4, !dbg !4950
  %first7 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines6, i32 0, i32 0, !dbg !4951
  store i8* %5, i8** %first7, align 8, !dbg !4952
  br label %if.end, !dbg !4949

if.else:                                          ; preds = %if.then
  %call = call %struct.TextLine* @txt_new_line(i8* null), !dbg !4953
  %7 = bitcast %struct.TextLine* %call to i8*, !dbg !4953
  %8 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4954
  %lines8 = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 4, !dbg !4955
  %last9 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines8, i32 0, i32 1, !dbg !4956
  store i8* %7, i8** %last9, align 8, !dbg !4957
  %9 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4958
  %lines10 = getelementptr inbounds %struct.Text, %struct.Text* %9, i32 0, i32 4, !dbg !4959
  %first11 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines10, i32 0, i32 0, !dbg !4960
  store i8* %7, i8** %first11, align 8, !dbg !4961
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end12, !dbg !4962

if.end12:                                         ; preds = %if.end, %entry
  %10 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4963
  %lines13 = getelementptr inbounds %struct.Text, %struct.Text* %10, i32 0, i32 4, !dbg !4965
  %last14 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines13, i32 0, i32 1, !dbg !4966
  %11 = load i8*, i8** %last14, align 8, !dbg !4966
  %tobool15 = icmp ne i8* %11, null, !dbg !4963
  br i1 %tobool15, label %if.end21, label %if.then16, !dbg !4967

if.then16:                                        ; preds = %if.end12
  %12 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4968
  %lines17 = getelementptr inbounds %struct.Text, %struct.Text* %12, i32 0, i32 4, !dbg !4969
  %first18 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines17, i32 0, i32 0, !dbg !4970
  %13 = load i8*, i8** %first18, align 8, !dbg !4970
  %14 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4971
  %lines19 = getelementptr inbounds %struct.Text, %struct.Text* %14, i32 0, i32 4, !dbg !4972
  %last20 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines19, i32 0, i32 1, !dbg !4973
  store i8* %13, i8** %last20, align 8, !dbg !4974
  br label %if.end21, !dbg !4971

if.end21:                                         ; preds = %if.then16, %if.end12
  %15 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4975
  %lines22 = getelementptr inbounds %struct.Text, %struct.Text* %15, i32 0, i32 4, !dbg !4976
  %first23 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines22, i32 0, i32 0, !dbg !4977
  %16 = bitcast i8** %first23 to %struct.TextLine**, !dbg !4978
  store %struct.TextLine** %16, %struct.TextLine*** %top, align 8, !dbg !4979
  %17 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !4980
  %lines24 = getelementptr inbounds %struct.Text, %struct.Text* %17, i32 0, i32 4, !dbg !4981
  %last25 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines24, i32 0, i32 1, !dbg !4982
  %18 = bitcast i8** %last25 to %struct.TextLine**, !dbg !4983
  store %struct.TextLine** %18, %struct.TextLine*** %bot, align 8, !dbg !4984
  br label %while.cond, !dbg !4985

while.cond:                                       ; preds = %while.body, %if.end21
  %19 = load %struct.TextLine**, %struct.TextLine*** %top, align 8, !dbg !4986
  %20 = load %struct.TextLine*, %struct.TextLine** %19, align 8, !dbg !4987
  %prev = getelementptr inbounds %struct.TextLine, %struct.TextLine* %20, i32 0, i32 1, !dbg !4988
  %21 = load %struct.TextLine*, %struct.TextLine** %prev, align 8, !dbg !4988
  %tobool26 = icmp ne %struct.TextLine* %21, null, !dbg !4985
  br i1 %tobool26, label %while.body, label %while.end, !dbg !4985

while.body:                                       ; preds = %while.cond
  %22 = load %struct.TextLine**, %struct.TextLine*** %top, align 8, !dbg !4989
  %23 = load %struct.TextLine*, %struct.TextLine** %22, align 8, !dbg !4990
  %prev27 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %23, i32 0, i32 1, !dbg !4991
  %24 = load %struct.TextLine*, %struct.TextLine** %prev27, align 8, !dbg !4991
  %25 = load %struct.TextLine**, %struct.TextLine*** %top, align 8, !dbg !4992
  store %struct.TextLine* %24, %struct.TextLine** %25, align 8, !dbg !4993
  br label %while.cond, !dbg !4985, !llvm.loop !4994

while.end:                                        ; preds = %while.cond
  br label %while.cond28, !dbg !4995

while.cond28:                                     ; preds = %while.body30, %while.end
  %26 = load %struct.TextLine**, %struct.TextLine*** %bot, align 8, !dbg !4996
  %27 = load %struct.TextLine*, %struct.TextLine** %26, align 8, !dbg !4997
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %27, i32 0, i32 0, !dbg !4998
  %28 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !4998
  %tobool29 = icmp ne %struct.TextLine* %28, null, !dbg !4995
  br i1 %tobool29, label %while.body30, label %while.end32, !dbg !4995

while.body30:                                     ; preds = %while.cond28
  %29 = load %struct.TextLine**, %struct.TextLine*** %bot, align 8, !dbg !4999
  %30 = load %struct.TextLine*, %struct.TextLine** %29, align 8, !dbg !5000
  %next31 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %30, i32 0, i32 0, !dbg !5001
  %31 = load %struct.TextLine*, %struct.TextLine** %next31, align 8, !dbg !5001
  %32 = load %struct.TextLine**, %struct.TextLine*** %bot, align 8, !dbg !5002
  store %struct.TextLine* %31, %struct.TextLine** %32, align 8, !dbg !5003
  br label %while.cond28, !dbg !4995, !llvm.loop !5004

while.end32:                                      ; preds = %while.cond28
  %33 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5005
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %33, i32 0, i32 5, !dbg !5007
  %34 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !5007
  %tobool33 = icmp ne %struct.TextLine* %34, null, !dbg !5005
  br i1 %tobool33, label %if.end44, label %if.then34, !dbg !5008

if.then34:                                        ; preds = %while.end32
  %35 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5009
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %35, i32 0, i32 6, !dbg !5012
  %36 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !5012
  %tobool35 = icmp ne %struct.TextLine* %36, null, !dbg !5009
  br i1 %tobool35, label %if.then36, label %if.else39, !dbg !5013

if.then36:                                        ; preds = %if.then34
  %37 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5014
  %sell37 = getelementptr inbounds %struct.Text, %struct.Text* %37, i32 0, i32 6, !dbg !5015
  %38 = load %struct.TextLine*, %struct.TextLine** %sell37, align 8, !dbg !5015
  %39 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5016
  %curl38 = getelementptr inbounds %struct.Text, %struct.Text* %39, i32 0, i32 5, !dbg !5017
  store %struct.TextLine* %38, %struct.TextLine** %curl38, align 8, !dbg !5018
  br label %if.end43, !dbg !5016

if.else39:                                        ; preds = %if.then34
  %40 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5019
  %lines40 = getelementptr inbounds %struct.Text, %struct.Text* %40, i32 0, i32 4, !dbg !5020
  %first41 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines40, i32 0, i32 0, !dbg !5021
  %41 = load i8*, i8** %first41, align 8, !dbg !5021
  %42 = bitcast i8* %41 to %struct.TextLine*, !dbg !5019
  %43 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5022
  %curl42 = getelementptr inbounds %struct.Text, %struct.Text* %43, i32 0, i32 5, !dbg !5023
  store %struct.TextLine* %42, %struct.TextLine** %curl42, align 8, !dbg !5024
  br label %if.end43

if.end43:                                         ; preds = %if.else39, %if.then36
  %44 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5025
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %44, i32 0, i32 7, !dbg !5026
  store i32 0, i32* %curc, align 8, !dbg !5027
  br label %if.end44, !dbg !5028

if.end44:                                         ; preds = %if.end43, %while.end32
  %45 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5029
  %sell45 = getelementptr inbounds %struct.Text, %struct.Text* %45, i32 0, i32 6, !dbg !5031
  %46 = load %struct.TextLine*, %struct.TextLine** %sell45, align 8, !dbg !5031
  %tobool46 = icmp ne %struct.TextLine* %46, null, !dbg !5029
  br i1 %tobool46, label %if.end50, label %if.then47, !dbg !5032

if.then47:                                        ; preds = %if.end44
  %47 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5033
  %curl48 = getelementptr inbounds %struct.Text, %struct.Text* %47, i32 0, i32 5, !dbg !5035
  %48 = load %struct.TextLine*, %struct.TextLine** %curl48, align 8, !dbg !5035
  %49 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5036
  %sell49 = getelementptr inbounds %struct.Text, %struct.Text* %49, i32 0, i32 6, !dbg !5037
  store %struct.TextLine* %48, %struct.TextLine** %sell49, align 8, !dbg !5038
  %50 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5039
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %50, i32 0, i32 8, !dbg !5040
  store i32 0, i32* %selc, align 4, !dbg !5041
  br label %if.end50, !dbg !5042

if.end50:                                         ; preds = %if.then47, %if.end44
  ret void, !dbg !5043
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.TextLine* @txt_new_line(i8* %str) #0 !dbg !5044 {
entry:
  %str.addr = alloca i8*, align 8
  %tmp = alloca %struct.TextLine*, align 8
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !5047, metadata !DIExpression()), !dbg !5048
  call void @llvm.dbg.declare(metadata %struct.TextLine** %tmp, metadata !5049, metadata !DIExpression()), !dbg !5050
  %0 = load i8*, i8** %str.addr, align 8, !dbg !5051
  %tobool = icmp ne i8* %0, null, !dbg !5051
  br i1 %tobool, label %if.end, label %if.then, !dbg !5053

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i64 0, i64 0), i8** %str.addr, align 8, !dbg !5054
  br label %if.end, !dbg !5055

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5056
  %call = call i8* %1(i64 40, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)), !dbg !5056
  %2 = bitcast i8* %call to %struct.TextLine*, !dbg !5057
  store %struct.TextLine* %2, %struct.TextLine** %tmp, align 8, !dbg !5058
  %3 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5059
  %4 = load i8*, i8** %str.addr, align 8, !dbg !5060
  %call1 = call i64 @strlen(i8* %4) #6, !dbg !5061
  %add = add i64 %call1, 1, !dbg !5062
  %call2 = call i8* %3(i64 %add, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)), !dbg !5059
  %5 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !5063
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %5, i32 0, i32 2, !dbg !5064
  store i8* %call2, i8** %line, align 8, !dbg !5065
  %6 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !5066
  %format = getelementptr inbounds %struct.TextLine, %struct.TextLine* %6, i32 0, i32 3, !dbg !5067
  store i8* null, i8** %format, align 8, !dbg !5068
  %7 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !5069
  %line3 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %7, i32 0, i32 2, !dbg !5070
  %8 = load i8*, i8** %line3, align 8, !dbg !5070
  %9 = load i8*, i8** %str.addr, align 8, !dbg !5071
  %call4 = call i8* @strcpy(i8* %8, i8* %9) #7, !dbg !5072
  %10 = load i8*, i8** %str.addr, align 8, !dbg !5073
  %call5 = call i64 @strlen(i8* %10) #6, !dbg !5074
  %conv = trunc i64 %call5 to i32, !dbg !5074
  %11 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !5075
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %11, i32 0, i32 4, !dbg !5076
  store i32 %conv, i32* %len, align 8, !dbg !5077
  %12 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !5078
  %prev = getelementptr inbounds %struct.TextLine, %struct.TextLine* %12, i32 0, i32 1, !dbg !5079
  store %struct.TextLine* null, %struct.TextLine** %prev, align 8, !dbg !5080
  %13 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !5081
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %13, i32 0, i32 0, !dbg !5082
  store %struct.TextLine* null, %struct.TextLine** %next, align 8, !dbg !5083
  %14 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !5084
  ret %struct.TextLine* %14, !dbg !5085
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @txt_get_span(%struct.TextLine* %from, %struct.TextLine* %to) #0 !dbg !5086 {
entry:
  %retval = alloca i32, align 4
  %from.addr = alloca %struct.TextLine*, align 8
  %to.addr = alloca %struct.TextLine*, align 8
  %ret = alloca i32, align 4
  %tmp = alloca %struct.TextLine*, align 8
  store %struct.TextLine* %from, %struct.TextLine** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TextLine** %from.addr, metadata !5089, metadata !DIExpression()), !dbg !5090
  store %struct.TextLine* %to, %struct.TextLine** %to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TextLine** %to.addr, metadata !5091, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5093, metadata !DIExpression()), !dbg !5094
  store i32 0, i32* %ret, align 4, !dbg !5094
  call void @llvm.dbg.declare(metadata %struct.TextLine** %tmp, metadata !5095, metadata !DIExpression()), !dbg !5096
  %0 = load %struct.TextLine*, %struct.TextLine** %from.addr, align 8, !dbg !5097
  store %struct.TextLine* %0, %struct.TextLine** %tmp, align 8, !dbg !5096
  %1 = load %struct.TextLine*, %struct.TextLine** %to.addr, align 8, !dbg !5098
  %tobool = icmp ne %struct.TextLine* %1, null, !dbg !5098
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5100

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.TextLine*, %struct.TextLine** %from.addr, align 8, !dbg !5101
  %tobool1 = icmp ne %struct.TextLine* %2, null, !dbg !5101
  br i1 %tobool1, label %if.end, label %if.then, !dbg !5102

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !5103
  br label %return, !dbg !5103

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.TextLine*, %struct.TextLine** %from.addr, align 8, !dbg !5104
  %4 = load %struct.TextLine*, %struct.TextLine** %to.addr, align 8, !dbg !5106
  %cmp = icmp eq %struct.TextLine* %3, %4, !dbg !5107
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !5108

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5109
  br label %return, !dbg !5109

if.end3:                                          ; preds = %if.end
  br label %while.cond, !dbg !5110

while.cond:                                       ; preds = %if.end7, %if.end3
  %5 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !5111
  %tobool4 = icmp ne %struct.TextLine* %5, null, !dbg !5110
  br i1 %tobool4, label %while.body, label %while.end, !dbg !5110

while.body:                                       ; preds = %while.cond
  %6 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !5112
  %7 = load %struct.TextLine*, %struct.TextLine** %to.addr, align 8, !dbg !5115
  %cmp5 = icmp eq %struct.TextLine* %6, %7, !dbg !5116
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !5117

if.then6:                                         ; preds = %while.body
  %8 = load i32, i32* %ret, align 4, !dbg !5118
  store i32 %8, i32* %retval, align 4, !dbg !5119
  br label %return, !dbg !5119

if.end7:                                          ; preds = %while.body
  %9 = load i32, i32* %ret, align 4, !dbg !5120
  %inc = add nsw i32 %9, 1, !dbg !5120
  store i32 %inc, i32* %ret, align 4, !dbg !5120
  %10 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !5121
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %10, i32 0, i32 0, !dbg !5122
  %11 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !5122
  store %struct.TextLine* %11, %struct.TextLine** %tmp, align 8, !dbg !5123
  br label %while.cond, !dbg !5110, !llvm.loop !5124

while.end:                                        ; preds = %while.cond
  %12 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !5126
  %tobool8 = icmp ne %struct.TextLine* %12, null, !dbg !5126
  br i1 %tobool8, label %if.end20, label %if.then9, !dbg !5128

if.then9:                                         ; preds = %while.end
  %13 = load %struct.TextLine*, %struct.TextLine** %from.addr, align 8, !dbg !5129
  store %struct.TextLine* %13, %struct.TextLine** %tmp, align 8, !dbg !5131
  store i32 0, i32* %ret, align 4, !dbg !5132
  br label %while.cond10, !dbg !5133

while.cond10:                                     ; preds = %if.end15, %if.then9
  %14 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !5134
  %tobool11 = icmp ne %struct.TextLine* %14, null, !dbg !5133
  br i1 %tobool11, label %while.body12, label %while.end16, !dbg !5133

while.body12:                                     ; preds = %while.cond10
  %15 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !5135
  %16 = load %struct.TextLine*, %struct.TextLine** %to.addr, align 8, !dbg !5138
  %cmp13 = icmp eq %struct.TextLine* %15, %16, !dbg !5139
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !5140

if.then14:                                        ; preds = %while.body12
  br label %while.end16, !dbg !5141

if.end15:                                         ; preds = %while.body12
  %17 = load i32, i32* %ret, align 4, !dbg !5142
  %dec = add nsw i32 %17, -1, !dbg !5142
  store i32 %dec, i32* %ret, align 4, !dbg !5142
  %18 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !5143
  %prev = getelementptr inbounds %struct.TextLine, %struct.TextLine* %18, i32 0, i32 1, !dbg !5144
  %19 = load %struct.TextLine*, %struct.TextLine** %prev, align 8, !dbg !5144
  store %struct.TextLine* %19, %struct.TextLine** %tmp, align 8, !dbg !5145
  br label %while.cond10, !dbg !5133, !llvm.loop !5146

while.end16:                                      ; preds = %if.then14, %while.cond10
  %20 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !5148
  %tobool17 = icmp ne %struct.TextLine* %20, null, !dbg !5148
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !5150

if.then18:                                        ; preds = %while.end16
  store i32 0, i32* %ret, align 4, !dbg !5151
  br label %if.end19, !dbg !5152

if.end19:                                         ; preds = %if.then18, %while.end16
  br label %if.end20, !dbg !5153

if.end20:                                         ; preds = %if.end19, %while.end
  %21 = load i32, i32* %ret, align 4, !dbg !5154
  store i32 %21, i32* %retval, align 4, !dbg !5155
  br label %return, !dbg !5155

return:                                           ; preds = %if.end20, %if.then6, %if.then2, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !5156
  ret i32 %22, !dbg !5156
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @txt_cursor_is_line_start(%struct.Text* %text) #0 !dbg !5157 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !5160, metadata !DIExpression()), !dbg !5161
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5162
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 8, !dbg !5163
  %1 = load i32, i32* %selc, align 4, !dbg !5163
  %cmp = icmp eq i32 %1, 0, !dbg !5164
  %conv = zext i1 %cmp to i32, !dbg !5164
  %conv1 = trunc i32 %conv to i8, !dbg !5165
  ret i8 %conv1, !dbg !5166
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @txt_cursor_is_line_end(%struct.Text* %text) #0 !dbg !5167 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !5168, metadata !DIExpression()), !dbg !5169
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5170
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 8, !dbg !5171
  %1 = load i32, i32* %selc, align 4, !dbg !5171
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5172
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 6, !dbg !5173
  %3 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !5173
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %3, i32 0, i32 4, !dbg !5174
  %4 = load i32, i32* %len, align 8, !dbg !5174
  %cmp = icmp eq i32 %1, %4, !dbg !5175
  %conv = zext i1 %cmp to i32, !dbg !5175
  %conv1 = trunc i32 %conv to i8, !dbg !5176
  ret i8 %conv1, !dbg !5177
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @txt_utf8_offset_to_index(i8* %str, i32 %offset) #0 !dbg !5178 {
entry:
  %str.addr = alloca i8*, align 8
  %offset.addr = alloca i32, align 4
  %index = alloca i32, align 4
  %pos = alloca i32, align 4
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !5181, metadata !DIExpression()), !dbg !5182
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !5183, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5185, metadata !DIExpression()), !dbg !5186
  store i32 0, i32* %index, align 4, !dbg !5186
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !5187, metadata !DIExpression()), !dbg !5188
  store i32 0, i32* %pos, align 4, !dbg !5188
  br label %while.cond, !dbg !5189

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %pos, align 4, !dbg !5190
  %1 = load i32, i32* %offset.addr, align 4, !dbg !5191
  %cmp = icmp ne i32 %0, %1, !dbg !5192
  br i1 %cmp, label %while.body, label %while.end, !dbg !5189

while.body:                                       ; preds = %while.cond
  %2 = load i8*, i8** %str.addr, align 8, !dbg !5193
  %3 = load i32, i32* %pos, align 4, !dbg !5195
  %idx.ext = sext i32 %3 to i64, !dbg !5196
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %idx.ext, !dbg !5196
  %call = call i32 @BLI_str_utf8_size(i8* %add.ptr), !dbg !5197
  %4 = load i32, i32* %pos, align 4, !dbg !5198
  %add = add nsw i32 %4, %call, !dbg !5198
  store i32 %add, i32* %pos, align 4, !dbg !5198
  %5 = load i32, i32* %index, align 4, !dbg !5199
  %inc = add nsw i32 %5, 1, !dbg !5199
  store i32 %inc, i32* %index, align 4, !dbg !5199
  br label %while.cond, !dbg !5189, !llvm.loop !5200

while.end:                                        ; preds = %while.cond
  %6 = load i32, i32* %index, align 4, !dbg !5202
  ret i32 %6, !dbg !5203
}

declare dso_local i32 @BLI_str_utf8_size(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @txt_utf8_index_to_offset(i8* %str, i32 %index) #0 !dbg !5204 {
entry:
  %str.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %offset = alloca i32, align 4
  %pos = alloca i32, align 4
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !5205, metadata !DIExpression()), !dbg !5206
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5207, metadata !DIExpression()), !dbg !5208
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !5209, metadata !DIExpression()), !dbg !5210
  store i32 0, i32* %offset, align 4, !dbg !5210
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !5211, metadata !DIExpression()), !dbg !5212
  store i32 0, i32* %pos, align 4, !dbg !5212
  br label %while.cond, !dbg !5213

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %pos, align 4, !dbg !5214
  %1 = load i32, i32* %index.addr, align 4, !dbg !5215
  %cmp = icmp ne i32 %0, %1, !dbg !5216
  br i1 %cmp, label %while.body, label %while.end, !dbg !5213

while.body:                                       ; preds = %while.cond
  %2 = load i8*, i8** %str.addr, align 8, !dbg !5217
  %3 = load i32, i32* %offset, align 4, !dbg !5219
  %idx.ext = sext i32 %3 to i64, !dbg !5220
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %idx.ext, !dbg !5220
  %call = call i32 @BLI_str_utf8_size(i8* %add.ptr), !dbg !5221
  %4 = load i32, i32* %offset, align 4, !dbg !5222
  %add = add nsw i32 %4, %call, !dbg !5222
  store i32 %add, i32* %offset, align 4, !dbg !5222
  %5 = load i32, i32* %pos, align 4, !dbg !5223
  %inc = add nsw i32 %5, 1, !dbg !5223
  store i32 %inc, i32* %pos, align 4, !dbg !5223
  br label %while.cond, !dbg !5213, !llvm.loop !5224

while.end:                                        ; preds = %while.cond
  %6 = load i32, i32* %offset, align 4, !dbg !5226
  ret i32 %6, !dbg !5227
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @txt_utf8_offset_to_column(i8* %str, i32 %offset) #0 !dbg !5228 {
entry:
  %str.addr = alloca i8*, align 8
  %offset.addr = alloca i32, align 4
  %column = alloca i32, align 4
  %pos = alloca i32, align 4
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !5229, metadata !DIExpression()), !dbg !5230
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !5231, metadata !DIExpression()), !dbg !5232
  call void @llvm.dbg.declare(metadata i32* %column, metadata !5233, metadata !DIExpression()), !dbg !5234
  store i32 0, i32* %column, align 4, !dbg !5234
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !5235, metadata !DIExpression()), !dbg !5236
  store i32 0, i32* %pos, align 4, !dbg !5236
  br label %while.cond, !dbg !5237

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %pos, align 4, !dbg !5238
  %1 = load i32, i32* %offset.addr, align 4, !dbg !5239
  %cmp = icmp slt i32 %0, %1, !dbg !5240
  br i1 %cmp, label %while.body, label %while.end, !dbg !5237

while.body:                                       ; preds = %while.cond
  %2 = load i8*, i8** %str.addr, align 8, !dbg !5241
  %3 = load i32, i32* %pos, align 4, !dbg !5243
  %idx.ext = sext i32 %3 to i64, !dbg !5244
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %idx.ext, !dbg !5244
  %call = call i32 @BLI_str_utf8_char_width_safe(i8* %add.ptr), !dbg !5245
  %4 = load i32, i32* %column, align 4, !dbg !5246
  %add = add nsw i32 %4, %call, !dbg !5246
  store i32 %add, i32* %column, align 4, !dbg !5246
  %5 = load i8*, i8** %str.addr, align 8, !dbg !5247
  %6 = load i32, i32* %pos, align 4, !dbg !5248
  %idx.ext1 = sext i32 %6 to i64, !dbg !5249
  %add.ptr2 = getelementptr inbounds i8, i8* %5, i64 %idx.ext1, !dbg !5249
  %call3 = call i32 @BLI_str_utf8_size_safe(i8* %add.ptr2), !dbg !5250
  %7 = load i32, i32* %pos, align 4, !dbg !5251
  %add4 = add nsw i32 %7, %call3, !dbg !5251
  store i32 %add4, i32* %pos, align 4, !dbg !5251
  br label %while.cond, !dbg !5237, !llvm.loop !5252

while.end:                                        ; preds = %while.cond
  %8 = load i32, i32* %column, align 4, !dbg !5254
  ret i32 %8, !dbg !5255
}

declare dso_local i32 @BLI_str_utf8_char_width_safe(i8*) #2

declare dso_local i32 @BLI_str_utf8_size_safe(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @txt_utf8_column_to_offset(i8* %str, i32 %column) #0 !dbg !5256 {
entry:
  %str.addr = alloca i8*, align 8
  %column.addr = alloca i32, align 4
  %offset = alloca i32, align 4
  %pos = alloca i32, align 4
  %col = alloca i32, align 4
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !5257, metadata !DIExpression()), !dbg !5258
  store i32 %column, i32* %column.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %column.addr, metadata !5259, metadata !DIExpression()), !dbg !5260
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !5261, metadata !DIExpression()), !dbg !5262
  store i32 0, i32* %offset, align 4, !dbg !5262
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !5263, metadata !DIExpression()), !dbg !5264
  store i32 0, i32* %pos, align 4, !dbg !5264
  call void @llvm.dbg.declare(metadata i32* %col, metadata !5265, metadata !DIExpression()), !dbg !5266
  br label %while.cond, !dbg !5267

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i8*, i8** %str.addr, align 8, !dbg !5268
  %1 = load i32, i32* %offset, align 4, !dbg !5269
  %idx.ext = sext i32 %1 to i64, !dbg !5270
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext, !dbg !5270
  %2 = load i8, i8* %add.ptr, align 1, !dbg !5271
  %conv = zext i8 %2 to i32, !dbg !5271
  %tobool = icmp ne i32 %conv, 0, !dbg !5271
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5272

land.rhs:                                         ; preds = %while.cond
  %3 = load i32, i32* %pos, align 4, !dbg !5273
  %4 = load i32, i32* %column.addr, align 4, !dbg !5274
  %cmp = icmp slt i32 %3, %4, !dbg !5275
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %5 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !5276
  br i1 %5, label %while.body, label %while.end, !dbg !5267

while.body:                                       ; preds = %land.end
  %6 = load i8*, i8** %str.addr, align 8, !dbg !5277
  %7 = load i32, i32* %offset, align 4, !dbg !5279
  %idx.ext2 = sext i32 %7 to i64, !dbg !5280
  %add.ptr3 = getelementptr inbounds i8, i8* %6, i64 %idx.ext2, !dbg !5280
  %call = call i32 @BLI_str_utf8_char_width_safe(i8* %add.ptr3), !dbg !5281
  store i32 %call, i32* %col, align 4, !dbg !5282
  %8 = load i32, i32* %pos, align 4, !dbg !5283
  %9 = load i32, i32* %col, align 4, !dbg !5285
  %add = add nsw i32 %8, %9, !dbg !5286
  %10 = load i32, i32* %column.addr, align 4, !dbg !5287
  %cmp4 = icmp sgt i32 %add, %10, !dbg !5288
  br i1 %cmp4, label %if.then, label %if.end, !dbg !5289

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !5290

if.end:                                           ; preds = %while.body
  %11 = load i8*, i8** %str.addr, align 8, !dbg !5291
  %12 = load i32, i32* %offset, align 4, !dbg !5292
  %idx.ext6 = sext i32 %12 to i64, !dbg !5293
  %add.ptr7 = getelementptr inbounds i8, i8* %11, i64 %idx.ext6, !dbg !5293
  %call8 = call i32 @BLI_str_utf8_size_safe(i8* %add.ptr7), !dbg !5294
  %13 = load i32, i32* %offset, align 4, !dbg !5295
  %add9 = add nsw i32 %13, %call8, !dbg !5295
  store i32 %add9, i32* %offset, align 4, !dbg !5295
  %14 = load i32, i32* %col, align 4, !dbg !5296
  %15 = load i32, i32* %pos, align 4, !dbg !5297
  %add10 = add nsw i32 %15, %14, !dbg !5297
  store i32 %add10, i32* %pos, align 4, !dbg !5297
  br label %while.cond, !dbg !5267, !llvm.loop !5298

while.end:                                        ; preds = %if.then, %land.end
  %16 = load i32, i32* %offset, align 4, !dbg !5300
  ret i32 %16, !dbg !5301
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_move_up(%struct.Text* %text, i8 zeroext %sel) #0 !dbg !5302 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %sel.addr = alloca i8, align 1
  %linep = alloca %struct.TextLine**, align 8
  %charp = alloca i32*, align 8
  %column = alloca i32, align 4
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !5303, metadata !DIExpression()), !dbg !5304
  store i8 %sel, i8* %sel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sel.addr, metadata !5305, metadata !DIExpression()), !dbg !5306
  call void @llvm.dbg.declare(metadata %struct.TextLine*** %linep, metadata !5307, metadata !DIExpression()), !dbg !5308
  call void @llvm.dbg.declare(metadata i32** %charp, metadata !5309, metadata !DIExpression()), !dbg !5310
  %0 = load i8, i8* %sel.addr, align 1, !dbg !5311
  %tobool = icmp ne i8 %0, 0, !dbg !5311
  br i1 %tobool, label %if.then, label %if.else, !dbg !5313

if.then:                                          ; preds = %entry
  %1 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5314
  call void @txt_curs_sel(%struct.Text* %1, %struct.TextLine*** %linep, i32** %charp), !dbg !5315
  br label %if.end, !dbg !5315

if.else:                                          ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5316
  call void @txt_pop_first(%struct.Text* %2), !dbg !5318
  %3 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5319
  call void @txt_curs_cur(%struct.Text* %3, %struct.TextLine*** %linep, i32** %charp), !dbg !5320
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5321
  %5 = load %struct.TextLine*, %struct.TextLine** %4, align 8, !dbg !5323
  %tobool1 = icmp ne %struct.TextLine* %5, null, !dbg !5323
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !5324

if.then2:                                         ; preds = %if.end
  br label %if.end13, !dbg !5325

if.end3:                                          ; preds = %if.end
  %6 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5326
  %7 = load %struct.TextLine*, %struct.TextLine** %6, align 8, !dbg !5328
  %prev = getelementptr inbounds %struct.TextLine, %struct.TextLine* %7, i32 0, i32 1, !dbg !5329
  %8 = load %struct.TextLine*, %struct.TextLine** %prev, align 8, !dbg !5329
  %tobool4 = icmp ne %struct.TextLine* %8, null, !dbg !5330
  br i1 %tobool4, label %if.then5, label %if.else9, !dbg !5331

if.then5:                                         ; preds = %if.end3
  call void @llvm.dbg.declare(metadata i32* %column, metadata !5332, metadata !DIExpression()), !dbg !5334
  %9 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5335
  %10 = load %struct.TextLine*, %struct.TextLine** %9, align 8, !dbg !5336
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %10, i32 0, i32 2, !dbg !5337
  %11 = load i8*, i8** %line, align 8, !dbg !5337
  %12 = load i32*, i32** %charp, align 8, !dbg !5338
  %13 = load i32, i32* %12, align 4, !dbg !5339
  %call = call i32 @txt_utf8_offset_to_column(i8* %11, i32 %13), !dbg !5340
  store i32 %call, i32* %column, align 4, !dbg !5334
  %14 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5341
  %15 = load %struct.TextLine*, %struct.TextLine** %14, align 8, !dbg !5342
  %prev6 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %15, i32 0, i32 1, !dbg !5343
  %16 = load %struct.TextLine*, %struct.TextLine** %prev6, align 8, !dbg !5343
  %17 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5344
  store %struct.TextLine* %16, %struct.TextLine** %17, align 8, !dbg !5345
  %18 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5346
  %19 = load %struct.TextLine*, %struct.TextLine** %18, align 8, !dbg !5347
  %line7 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %19, i32 0, i32 2, !dbg !5348
  %20 = load i8*, i8** %line7, align 8, !dbg !5348
  %21 = load i32, i32* %column, align 4, !dbg !5349
  %call8 = call i32 @txt_utf8_column_to_offset(i8* %20, i32 %21), !dbg !5350
  %22 = load i32*, i32** %charp, align 8, !dbg !5351
  store i32 %call8, i32* %22, align 4, !dbg !5352
  br label %if.end10, !dbg !5353

if.else9:                                         ; preds = %if.end3
  %23 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5354
  %24 = load i8, i8* %sel.addr, align 1, !dbg !5356
  call void @txt_move_bol(%struct.Text* %23, i8 zeroext %24), !dbg !5357
  br label %if.end10

if.end10:                                         ; preds = %if.else9, %if.then5
  %25 = load i8, i8* %sel.addr, align 1, !dbg !5358
  %tobool11 = icmp ne i8 %25, 0, !dbg !5358
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !5360

if.then12:                                        ; preds = %if.end10
  %26 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5361
  call void @txt_pop_sel(%struct.Text* %26), !dbg !5362
  br label %if.end13, !dbg !5362

if.end13:                                         ; preds = %if.then2, %if.then12, %if.end10
  ret void, !dbg !5363
}

; Function Attrs: noinline nounwind uwtable
define internal void @txt_curs_sel(%struct.Text* %text, %struct.TextLine*** %linep, i32** %charp) #0 !dbg !5364 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %linep.addr = alloca %struct.TextLine***, align 8
  %charp.addr = alloca i32**, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !5369, metadata !DIExpression()), !dbg !5370
  store %struct.TextLine*** %linep, %struct.TextLine**** %linep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TextLine**** %linep.addr, metadata !5371, metadata !DIExpression()), !dbg !5372
  store i32** %charp, i32*** %charp.addr, align 8
  call void @llvm.dbg.declare(metadata i32*** %charp.addr, metadata !5373, metadata !DIExpression()), !dbg !5374
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5375
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 6, !dbg !5376
  %1 = load %struct.TextLine***, %struct.TextLine**** %linep.addr, align 8, !dbg !5377
  store %struct.TextLine** %sell, %struct.TextLine*** %1, align 8, !dbg !5378
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5379
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 8, !dbg !5380
  %3 = load i32**, i32*** %charp.addr, align 8, !dbg !5381
  store i32* %selc, i32** %3, align 8, !dbg !5382
  ret void, !dbg !5383
}

; Function Attrs: noinline nounwind uwtable
define internal void @txt_pop_first(%struct.Text* %text) #0 !dbg !5384 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !5385, metadata !DIExpression()), !dbg !5386
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5387
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !5389
  %1 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !5389
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5390
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 6, !dbg !5391
  %3 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !5391
  %call = call i32 @txt_get_span(%struct.TextLine* %1, %struct.TextLine* %3), !dbg !5392
  %cmp = icmp slt i32 %call, 0, !dbg !5393
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5394

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5395
  %curl1 = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 5, !dbg !5396
  %5 = load %struct.TextLine*, %struct.TextLine** %curl1, align 8, !dbg !5396
  %6 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5397
  %sell2 = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 6, !dbg !5398
  %7 = load %struct.TextLine*, %struct.TextLine** %sell2, align 8, !dbg !5398
  %cmp3 = icmp eq %struct.TextLine* %5, %7, !dbg !5399
  br i1 %cmp3, label %land.lhs.true, label %if.end, !dbg !5400

land.lhs.true:                                    ; preds = %lor.lhs.false
  %8 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5401
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 7, !dbg !5402
  %9 = load i32, i32* %curc, align 8, !dbg !5402
  %10 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5403
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %10, i32 0, i32 8, !dbg !5404
  %11 = load i32, i32* %selc, align 4, !dbg !5404
  %cmp4 = icmp sgt i32 %9, %11, !dbg !5405
  br i1 %cmp4, label %if.then, label %if.end, !dbg !5406

if.then:                                          ; preds = %land.lhs.true, %entry
  %12 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5407
  call void @txt_curs_swap(%struct.Text* %12), !dbg !5409
  br label %if.end, !dbg !5410

if.end:                                           ; preds = %if.then, %land.lhs.true, %lor.lhs.false
  %13 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5411
  call void @txt_pop_sel(%struct.Text* %13), !dbg !5412
  ret void, !dbg !5413
}

; Function Attrs: noinline nounwind uwtable
define internal void @txt_curs_cur(%struct.Text* %text, %struct.TextLine*** %linep, i32** %charp) #0 !dbg !5414 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %linep.addr = alloca %struct.TextLine***, align 8
  %charp.addr = alloca i32**, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !5415, metadata !DIExpression()), !dbg !5416
  store %struct.TextLine*** %linep, %struct.TextLine**** %linep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TextLine**** %linep.addr, metadata !5417, metadata !DIExpression()), !dbg !5418
  store i32** %charp, i32*** %charp.addr, align 8
  call void @llvm.dbg.declare(metadata i32*** %charp.addr, metadata !5419, metadata !DIExpression()), !dbg !5420
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5421
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !5422
  %1 = load %struct.TextLine***, %struct.TextLine**** %linep.addr, align 8, !dbg !5423
  store %struct.TextLine** %curl, %struct.TextLine*** %1, align 8, !dbg !5424
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5425
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 7, !dbg !5426
  %3 = load i32**, i32*** %charp.addr, align 8, !dbg !5427
  store i32* %curc, i32** %3, align 8, !dbg !5428
  ret void, !dbg !5429
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_move_bol(%struct.Text* %text, i8 zeroext %sel) #0 !dbg !5430 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %sel.addr = alloca i8, align 1
  %linep = alloca %struct.TextLine**, align 8
  %charp = alloca i32*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !5431, metadata !DIExpression()), !dbg !5432
  store i8 %sel, i8* %sel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sel.addr, metadata !5433, metadata !DIExpression()), !dbg !5434
  call void @llvm.dbg.declare(metadata %struct.TextLine*** %linep, metadata !5435, metadata !DIExpression()), !dbg !5436
  call void @llvm.dbg.declare(metadata i32** %charp, metadata !5437, metadata !DIExpression()), !dbg !5438
  %0 = load i8, i8* %sel.addr, align 1, !dbg !5439
  %tobool = icmp ne i8 %0, 0, !dbg !5439
  br i1 %tobool, label %if.then, label %if.else, !dbg !5441

if.then:                                          ; preds = %entry
  %1 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5442
  call void @txt_curs_sel(%struct.Text* %1, %struct.TextLine*** %linep, i32** %charp), !dbg !5443
  br label %if.end, !dbg !5443

if.else:                                          ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5444
  call void @txt_curs_cur(%struct.Text* %2, %struct.TextLine*** %linep, i32** %charp), !dbg !5445
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %3 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5446
  %4 = load %struct.TextLine*, %struct.TextLine** %3, align 8, !dbg !5448
  %tobool1 = icmp ne %struct.TextLine* %4, null, !dbg !5448
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !5449

if.then2:                                         ; preds = %if.end
  br label %if.end6, !dbg !5450

if.end3:                                          ; preds = %if.end
  %5 = load i32*, i32** %charp, align 8, !dbg !5451
  store i32 0, i32* %5, align 4, !dbg !5452
  %6 = load i8, i8* %sel.addr, align 1, !dbg !5453
  %tobool4 = icmp ne i8 %6, 0, !dbg !5453
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !5455

if.then5:                                         ; preds = %if.end3
  %7 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5456
  call void @txt_pop_sel(%struct.Text* %7), !dbg !5457
  br label %if.end6, !dbg !5457

if.end6:                                          ; preds = %if.then2, %if.then5, %if.end3
  ret void, !dbg !5458
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_pop_sel(%struct.Text* %text) #0 !dbg !5459 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !5460, metadata !DIExpression()), !dbg !5461
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5462
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !5463
  %1 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !5463
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5464
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 6, !dbg !5465
  store %struct.TextLine* %1, %struct.TextLine** %sell, align 8, !dbg !5466
  %3 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5467
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %3, i32 0, i32 7, !dbg !5468
  %4 = load i32, i32* %curc, align 8, !dbg !5468
  %5 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5469
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 8, !dbg !5470
  store i32 %4, i32* %selc, align 4, !dbg !5471
  ret void, !dbg !5472
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_move_down(%struct.Text* %text, i8 zeroext %sel) #0 !dbg !5473 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %sel.addr = alloca i8, align 1
  %linep = alloca %struct.TextLine**, align 8
  %charp = alloca i32*, align 8
  %column = alloca i32, align 4
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !5474, metadata !DIExpression()), !dbg !5475
  store i8 %sel, i8* %sel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sel.addr, metadata !5476, metadata !DIExpression()), !dbg !5477
  call void @llvm.dbg.declare(metadata %struct.TextLine*** %linep, metadata !5478, metadata !DIExpression()), !dbg !5479
  call void @llvm.dbg.declare(metadata i32** %charp, metadata !5480, metadata !DIExpression()), !dbg !5481
  %0 = load i8, i8* %sel.addr, align 1, !dbg !5482
  %tobool = icmp ne i8 %0, 0, !dbg !5482
  br i1 %tobool, label %if.then, label %if.else, !dbg !5484

if.then:                                          ; preds = %entry
  %1 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5485
  call void @txt_curs_sel(%struct.Text* %1, %struct.TextLine*** %linep, i32** %charp), !dbg !5486
  br label %if.end, !dbg !5486

if.else:                                          ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5487
  call void @txt_pop_last(%struct.Text* %2), !dbg !5489
  %3 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5490
  call void @txt_curs_cur(%struct.Text* %3, %struct.TextLine*** %linep, i32** %charp), !dbg !5491
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5492
  %5 = load %struct.TextLine*, %struct.TextLine** %4, align 8, !dbg !5494
  %tobool1 = icmp ne %struct.TextLine* %5, null, !dbg !5494
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !5495

if.then2:                                         ; preds = %if.end
  br label %if.end13, !dbg !5496

if.end3:                                          ; preds = %if.end
  %6 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5497
  %7 = load %struct.TextLine*, %struct.TextLine** %6, align 8, !dbg !5499
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %7, i32 0, i32 0, !dbg !5500
  %8 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !5500
  %tobool4 = icmp ne %struct.TextLine* %8, null, !dbg !5501
  br i1 %tobool4, label %if.then5, label %if.else9, !dbg !5502

if.then5:                                         ; preds = %if.end3
  call void @llvm.dbg.declare(metadata i32* %column, metadata !5503, metadata !DIExpression()), !dbg !5505
  %9 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5506
  %10 = load %struct.TextLine*, %struct.TextLine** %9, align 8, !dbg !5507
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %10, i32 0, i32 2, !dbg !5508
  %11 = load i8*, i8** %line, align 8, !dbg !5508
  %12 = load i32*, i32** %charp, align 8, !dbg !5509
  %13 = load i32, i32* %12, align 4, !dbg !5510
  %call = call i32 @txt_utf8_offset_to_column(i8* %11, i32 %13), !dbg !5511
  store i32 %call, i32* %column, align 4, !dbg !5505
  %14 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5512
  %15 = load %struct.TextLine*, %struct.TextLine** %14, align 8, !dbg !5513
  %next6 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %15, i32 0, i32 0, !dbg !5514
  %16 = load %struct.TextLine*, %struct.TextLine** %next6, align 8, !dbg !5514
  %17 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5515
  store %struct.TextLine* %16, %struct.TextLine** %17, align 8, !dbg !5516
  %18 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5517
  %19 = load %struct.TextLine*, %struct.TextLine** %18, align 8, !dbg !5518
  %line7 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %19, i32 0, i32 2, !dbg !5519
  %20 = load i8*, i8** %line7, align 8, !dbg !5519
  %21 = load i32, i32* %column, align 4, !dbg !5520
  %call8 = call i32 @txt_utf8_column_to_offset(i8* %20, i32 %21), !dbg !5521
  %22 = load i32*, i32** %charp, align 8, !dbg !5522
  store i32 %call8, i32* %22, align 4, !dbg !5523
  br label %if.end10, !dbg !5524

if.else9:                                         ; preds = %if.end3
  %23 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5525
  %24 = load i8, i8* %sel.addr, align 1, !dbg !5527
  call void @txt_move_eol(%struct.Text* %23, i8 zeroext %24), !dbg !5528
  br label %if.end10

if.end10:                                         ; preds = %if.else9, %if.then5
  %25 = load i8, i8* %sel.addr, align 1, !dbg !5529
  %tobool11 = icmp ne i8 %25, 0, !dbg !5529
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !5531

if.then12:                                        ; preds = %if.end10
  %26 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5532
  call void @txt_pop_sel(%struct.Text* %26), !dbg !5533
  br label %if.end13, !dbg !5533

if.end13:                                         ; preds = %if.then2, %if.then12, %if.end10
  ret void, !dbg !5534
}

; Function Attrs: noinline nounwind uwtable
define internal void @txt_pop_last(%struct.Text* %text) #0 !dbg !5535 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !5536, metadata !DIExpression()), !dbg !5537
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5538
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !5540
  %1 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !5540
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5541
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 6, !dbg !5542
  %3 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !5542
  %call = call i32 @txt_get_span(%struct.TextLine* %1, %struct.TextLine* %3), !dbg !5543
  %cmp = icmp sgt i32 %call, 0, !dbg !5544
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5545

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5546
  %curl1 = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 5, !dbg !5547
  %5 = load %struct.TextLine*, %struct.TextLine** %curl1, align 8, !dbg !5547
  %6 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5548
  %sell2 = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 6, !dbg !5549
  %7 = load %struct.TextLine*, %struct.TextLine** %sell2, align 8, !dbg !5549
  %cmp3 = icmp eq %struct.TextLine* %5, %7, !dbg !5550
  br i1 %cmp3, label %land.lhs.true, label %if.end, !dbg !5551

land.lhs.true:                                    ; preds = %lor.lhs.false
  %8 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5552
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 7, !dbg !5553
  %9 = load i32, i32* %curc, align 8, !dbg !5553
  %10 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5554
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %10, i32 0, i32 8, !dbg !5555
  %11 = load i32, i32* %selc, align 4, !dbg !5555
  %cmp4 = icmp slt i32 %9, %11, !dbg !5556
  br i1 %cmp4, label %if.then, label %if.end, !dbg !5557

if.then:                                          ; preds = %land.lhs.true, %entry
  %12 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5558
  call void @txt_curs_swap(%struct.Text* %12), !dbg !5560
  br label %if.end, !dbg !5561

if.end:                                           ; preds = %if.then, %land.lhs.true, %lor.lhs.false
  %13 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5562
  call void @txt_pop_sel(%struct.Text* %13), !dbg !5563
  ret void, !dbg !5564
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_move_eol(%struct.Text* %text, i8 zeroext %sel) #0 !dbg !5565 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %sel.addr = alloca i8, align 1
  %linep = alloca %struct.TextLine**, align 8
  %charp = alloca i32*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !5566, metadata !DIExpression()), !dbg !5567
  store i8 %sel, i8* %sel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sel.addr, metadata !5568, metadata !DIExpression()), !dbg !5569
  call void @llvm.dbg.declare(metadata %struct.TextLine*** %linep, metadata !5570, metadata !DIExpression()), !dbg !5571
  call void @llvm.dbg.declare(metadata i32** %charp, metadata !5572, metadata !DIExpression()), !dbg !5573
  %0 = load i8, i8* %sel.addr, align 1, !dbg !5574
  %tobool = icmp ne i8 %0, 0, !dbg !5574
  br i1 %tobool, label %if.then, label %if.else, !dbg !5576

if.then:                                          ; preds = %entry
  %1 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5577
  call void @txt_curs_sel(%struct.Text* %1, %struct.TextLine*** %linep, i32** %charp), !dbg !5578
  br label %if.end, !dbg !5578

if.else:                                          ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5579
  call void @txt_curs_cur(%struct.Text* %2, %struct.TextLine*** %linep, i32** %charp), !dbg !5580
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %3 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5581
  %4 = load %struct.TextLine*, %struct.TextLine** %3, align 8, !dbg !5583
  %tobool1 = icmp ne %struct.TextLine* %4, null, !dbg !5583
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !5584

if.then2:                                         ; preds = %if.end
  br label %if.end6, !dbg !5585

if.end3:                                          ; preds = %if.end
  %5 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5586
  %6 = load %struct.TextLine*, %struct.TextLine** %5, align 8, !dbg !5587
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %6, i32 0, i32 4, !dbg !5588
  %7 = load i32, i32* %len, align 8, !dbg !5588
  %8 = load i32*, i32** %charp, align 8, !dbg !5589
  store i32 %7, i32* %8, align 4, !dbg !5590
  %9 = load i8, i8* %sel.addr, align 1, !dbg !5591
  %tobool4 = icmp ne i8 %9, 0, !dbg !5591
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !5593

if.then5:                                         ; preds = %if.end3
  %10 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5594
  call void @txt_pop_sel(%struct.Text* %10), !dbg !5595
  br label %if.end6, !dbg !5595

if.end6:                                          ; preds = %if.then2, %if.then5, %if.end3
  ret void, !dbg !5596
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_move_left(%struct.Text* %text, i8 zeroext %sel) #0 !dbg !5597 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %sel.addr = alloca i8, align 1
  %linep = alloca %struct.TextLine**, align 8
  %charp = alloca i32*, align 8
  %tabsize = alloca i32, align 4
  %i = alloca i32, align 4
  %prev27 = alloca i8*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !5598, metadata !DIExpression()), !dbg !5599
  store i8 %sel, i8* %sel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sel.addr, metadata !5600, metadata !DIExpression()), !dbg !5601
  call void @llvm.dbg.declare(metadata %struct.TextLine*** %linep, metadata !5602, metadata !DIExpression()), !dbg !5603
  call void @llvm.dbg.declare(metadata i32** %charp, metadata !5604, metadata !DIExpression()), !dbg !5605
  call void @llvm.dbg.declare(metadata i32* %tabsize, metadata !5606, metadata !DIExpression()), !dbg !5607
  store i32 0, i32* %tabsize, align 4, !dbg !5607
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5608, metadata !DIExpression()), !dbg !5609
  store i32 0, i32* %i, align 4, !dbg !5609
  %0 = load i8, i8* %sel.addr, align 1, !dbg !5610
  %tobool = icmp ne i8 %0, 0, !dbg !5610
  br i1 %tobool, label %if.then, label %if.else, !dbg !5612

if.then:                                          ; preds = %entry
  %1 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5613
  call void @txt_curs_sel(%struct.Text* %1, %struct.TextLine*** %linep, i32** %charp), !dbg !5614
  br label %if.end, !dbg !5614

if.else:                                          ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5615
  call void @txt_pop_first(%struct.Text* %2), !dbg !5617
  %3 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5618
  call void @txt_curs_cur(%struct.Text* %3, %struct.TextLine*** %linep, i32** %charp), !dbg !5619
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5620
  %5 = load %struct.TextLine*, %struct.TextLine** %4, align 8, !dbg !5622
  %tobool1 = icmp ne %struct.TextLine* %5, null, !dbg !5622
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !5623

if.then2:                                         ; preds = %if.end
  br label %if.end35, !dbg !5624

if.end3:                                          ; preds = %if.end
  %6 = load i32*, i32** %charp, align 8, !dbg !5625
  %7 = load i32, i32* %6, align 4, !dbg !5627
  %cmp = icmp eq i32 %7, 0, !dbg !5628
  br i1 %cmp, label %if.then4, label %if.else8, !dbg !5629

if.then4:                                         ; preds = %if.end3
  %8 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5630
  %9 = load %struct.TextLine*, %struct.TextLine** %8, align 8, !dbg !5633
  %prev = getelementptr inbounds %struct.TextLine, %struct.TextLine* %9, i32 0, i32 1, !dbg !5634
  %10 = load %struct.TextLine*, %struct.TextLine** %prev, align 8, !dbg !5634
  %tobool5 = icmp ne %struct.TextLine* %10, null, !dbg !5635
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !5636

if.then6:                                         ; preds = %if.then4
  %11 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5637
  %12 = load i8, i8* %sel.addr, align 1, !dbg !5639
  call void @txt_move_up(%struct.Text* %11, i8 zeroext %12), !dbg !5640
  %13 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5641
  %14 = load %struct.TextLine*, %struct.TextLine** %13, align 8, !dbg !5642
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %14, i32 0, i32 4, !dbg !5643
  %15 = load i32, i32* %len, align 8, !dbg !5643
  %16 = load i32*, i32** %charp, align 8, !dbg !5644
  store i32 %15, i32* %16, align 4, !dbg !5645
  br label %if.end7, !dbg !5646

if.end7:                                          ; preds = %if.then6, %if.then4
  br label %if.end32, !dbg !5647

if.else8:                                         ; preds = %if.end3
  %17 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5648
  %flags = getelementptr inbounds %struct.Text, %struct.Text* %17, i32 0, i32 2, !dbg !5651
  %18 = load i32, i32* %flags, align 8, !dbg !5651
  %and = and i32 %18, 1024, !dbg !5652
  %tobool9 = icmp ne i32 %and, 0, !dbg !5652
  br i1 %tobool9, label %if.then10, label %if.end23, !dbg !5653

if.then10:                                        ; preds = %if.else8
  %19 = load i32*, i32** %charp, align 8, !dbg !5654
  %20 = load i32, i32* %19, align 4, !dbg !5656
  %cmp11 = icmp slt i32 %20, 4, !dbg !5657
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !5658

cond.true:                                        ; preds = %if.then10
  %21 = load i32*, i32** %charp, align 8, !dbg !5659
  %22 = load i32, i32* %21, align 4, !dbg !5660
  br label %cond.end, !dbg !5658

cond.false:                                       ; preds = %if.then10
  br label %cond.end, !dbg !5658

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %22, %cond.true ], [ 4, %cond.false ], !dbg !5658
  store i32 %cond, i32* %tabsize, align 4, !dbg !5661
  store i32 0, i32* %i, align 4, !dbg !5662
  br label %for.cond, !dbg !5664

for.cond:                                         ; preds = %for.inc, %cond.end
  %23 = load i32, i32* %i, align 4, !dbg !5665
  %24 = load i32*, i32** %charp, align 8, !dbg !5667
  %25 = load i32, i32* %24, align 4, !dbg !5668
  %cmp12 = icmp slt i32 %23, %25, !dbg !5669
  br i1 %cmp12, label %for.body, label %for.end, !dbg !5670

for.body:                                         ; preds = %for.cond
  %26 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5671
  %27 = load %struct.TextLine*, %struct.TextLine** %26, align 8, !dbg !5673
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %27, i32 0, i32 2, !dbg !5674
  %28 = load i8*, i8** %line, align 8, !dbg !5674
  %29 = load i32, i32* %i, align 4, !dbg !5675
  %idxprom = sext i32 %29 to i64, !dbg !5676
  %arrayidx = getelementptr inbounds i8, i8* %28, i64 %idxprom, !dbg !5676
  %30 = load i8, i8* %arrayidx, align 1, !dbg !5676
  %conv = zext i8 %30 to i32, !dbg !5676
  %cmp13 = icmp ne i32 %conv, 32, !dbg !5677
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !5678

if.then15:                                        ; preds = %for.body
  store i32 0, i32* %tabsize, align 4, !dbg !5679
  br label %for.end, !dbg !5681

if.end16:                                         ; preds = %for.body
  br label %for.inc, !dbg !5682

for.inc:                                          ; preds = %if.end16
  %31 = load i32, i32* %i, align 4, !dbg !5683
  %inc = add nsw i32 %31, 1, !dbg !5683
  store i32 %inc, i32* %i, align 4, !dbg !5683
  br label %for.cond, !dbg !5684, !llvm.loop !5685

for.end:                                          ; preds = %if.then15, %for.cond
  %32 = load i32, i32* %tabsize, align 4, !dbg !5687
  %tobool17 = icmp ne i32 %32, 0, !dbg !5687
  br i1 %tobool17, label %land.lhs.true, label %if.end22, !dbg !5689

land.lhs.true:                                    ; preds = %for.end
  %33 = load i32*, i32** %charp, align 8, !dbg !5690
  %34 = load i32, i32* %33, align 4, !dbg !5691
  %rem = srem i32 %34, 4, !dbg !5692
  %cmp18 = icmp ne i32 %rem, 0, !dbg !5693
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !5694

if.then20:                                        ; preds = %land.lhs.true
  %35 = load i32*, i32** %charp, align 8, !dbg !5695
  %36 = load i32, i32* %35, align 4, !dbg !5696
  %rem21 = srem i32 %36, 4, !dbg !5697
  store i32 %rem21, i32* %tabsize, align 4, !dbg !5698
  br label %if.end22, !dbg !5699

if.end22:                                         ; preds = %if.then20, %land.lhs.true, %for.end
  br label %if.end23, !dbg !5700

if.end23:                                         ; preds = %if.end22, %if.else8
  %37 = load i32, i32* %tabsize, align 4, !dbg !5701
  %tobool24 = icmp ne i32 %37, 0, !dbg !5701
  br i1 %tobool24, label %if.then25, label %if.else26, !dbg !5703

if.then25:                                        ; preds = %if.end23
  %38 = load i32, i32* %tabsize, align 4, !dbg !5704
  %39 = load i32*, i32** %charp, align 8, !dbg !5705
  %40 = load i32, i32* %39, align 4, !dbg !5706
  %sub = sub nsw i32 %40, %38, !dbg !5706
  store i32 %sub, i32* %39, align 4, !dbg !5706
  br label %if.end31, !dbg !5707

if.else26:                                        ; preds = %if.end23
  call void @llvm.dbg.declare(metadata i8** %prev27, metadata !5708, metadata !DIExpression()), !dbg !5710
  %41 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5711
  %42 = load %struct.TextLine*, %struct.TextLine** %41, align 8, !dbg !5712
  %line28 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %42, i32 0, i32 2, !dbg !5713
  %43 = load i8*, i8** %line28, align 8, !dbg !5713
  %44 = load i32*, i32** %charp, align 8, !dbg !5714
  %45 = load i32, i32* %44, align 4, !dbg !5715
  %idx.ext = sext i32 %45 to i64, !dbg !5716
  %add.ptr = getelementptr inbounds i8, i8* %43, i64 %idx.ext, !dbg !5716
  %call = call i8* @BLI_str_prev_char_utf8(i8* %add.ptr), !dbg !5717
  store i8* %call, i8** %prev27, align 8, !dbg !5710
  %46 = load i8*, i8** %prev27, align 8, !dbg !5718
  %47 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5719
  %48 = load %struct.TextLine*, %struct.TextLine** %47, align 8, !dbg !5720
  %line29 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %48, i32 0, i32 2, !dbg !5721
  %49 = load i8*, i8** %line29, align 8, !dbg !5721
  %sub.ptr.lhs.cast = ptrtoint i8* %46 to i64, !dbg !5722
  %sub.ptr.rhs.cast = ptrtoint i8* %49 to i64, !dbg !5722
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5722
  %conv30 = trunc i64 %sub.ptr.sub to i32, !dbg !5718
  %50 = load i32*, i32** %charp, align 8, !dbg !5723
  store i32 %conv30, i32* %50, align 4, !dbg !5724
  br label %if.end31

if.end31:                                         ; preds = %if.else26, %if.then25
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.end7
  %51 = load i8, i8* %sel.addr, align 1, !dbg !5725
  %tobool33 = icmp ne i8 %51, 0, !dbg !5725
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !5727

if.then34:                                        ; preds = %if.end32
  %52 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5728
  call void @txt_pop_sel(%struct.Text* %52), !dbg !5729
  br label %if.end35, !dbg !5729

if.end35:                                         ; preds = %if.then2, %if.then34, %if.end32
  ret void, !dbg !5730
}

declare dso_local i8* @BLI_str_prev_char_utf8(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_move_right(%struct.Text* %text, i8 zeroext %sel) #0 !dbg !5731 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %sel.addr = alloca i8, align 1
  %linep = alloca %struct.TextLine**, align 8
  %charp = alloca i32*, align 8
  %i = alloca i32, align 4
  %do_tab = alloca i8, align 1
  %tabsize = alloca i32, align 4
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !5732, metadata !DIExpression()), !dbg !5733
  store i8 %sel, i8* %sel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sel.addr, metadata !5734, metadata !DIExpression()), !dbg !5735
  call void @llvm.dbg.declare(metadata %struct.TextLine*** %linep, metadata !5736, metadata !DIExpression()), !dbg !5737
  call void @llvm.dbg.declare(metadata i32** %charp, metadata !5738, metadata !DIExpression()), !dbg !5739
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5740, metadata !DIExpression()), !dbg !5741
  call void @llvm.dbg.declare(metadata i8* %do_tab, metadata !5742, metadata !DIExpression()), !dbg !5743
  store i8 0, i8* %do_tab, align 1, !dbg !5743
  %0 = load i8, i8* %sel.addr, align 1, !dbg !5744
  %tobool = icmp ne i8 %0, 0, !dbg !5744
  br i1 %tobool, label %if.then, label %if.else, !dbg !5746

if.then:                                          ; preds = %entry
  %1 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5747
  call void @txt_curs_sel(%struct.Text* %1, %struct.TextLine*** %linep, i32** %charp), !dbg !5748
  br label %if.end, !dbg !5748

if.else:                                          ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5749
  call void @txt_pop_last(%struct.Text* %2), !dbg !5751
  %3 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5752
  call void @txt_curs_cur(%struct.Text* %3, %struct.TextLine*** %linep, i32** %charp), !dbg !5753
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5754
  %5 = load %struct.TextLine*, %struct.TextLine** %4, align 8, !dbg !5756
  %tobool1 = icmp ne %struct.TextLine* %5, null, !dbg !5756
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !5757

if.then2:                                         ; preds = %if.end
  br label %if.end48, !dbg !5758

if.end3:                                          ; preds = %if.end
  %6 = load i32*, i32** %charp, align 8, !dbg !5759
  %7 = load i32, i32* %6, align 4, !dbg !5761
  %8 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5762
  %9 = load %struct.TextLine*, %struct.TextLine** %8, align 8, !dbg !5763
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %9, i32 0, i32 4, !dbg !5764
  %10 = load i32, i32* %len, align 8, !dbg !5764
  %cmp = icmp eq i32 %7, %10, !dbg !5765
  br i1 %cmp, label %if.then4, label %if.else8, !dbg !5766

if.then4:                                         ; preds = %if.end3
  %11 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5767
  %12 = load %struct.TextLine*, %struct.TextLine** %11, align 8, !dbg !5770
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %12, i32 0, i32 0, !dbg !5771
  %13 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !5771
  %tobool5 = icmp ne %struct.TextLine* %13, null, !dbg !5772
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !5773

if.then6:                                         ; preds = %if.then4
  %14 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5774
  %15 = load i8, i8* %sel.addr, align 1, !dbg !5776
  call void @txt_move_down(%struct.Text* %14, i8 zeroext %15), !dbg !5777
  %16 = load i32*, i32** %charp, align 8, !dbg !5778
  store i32 0, i32* %16, align 4, !dbg !5779
  br label %if.end7, !dbg !5780

if.end7:                                          ; preds = %if.then6, %if.then4
  br label %if.end45, !dbg !5781

if.else8:                                         ; preds = %if.end3
  %17 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5782
  %flags = getelementptr inbounds %struct.Text, %struct.Text* %17, i32 0, i32 2, !dbg !5785
  %18 = load i32, i32* %flags, align 8, !dbg !5785
  %and = and i32 %18, 1024, !dbg !5786
  %tobool9 = icmp ne i32 %and, 0, !dbg !5786
  br i1 %tobool9, label %land.lhs.true, label %if.end23, !dbg !5787

land.lhs.true:                                    ; preds = %if.else8
  %19 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5788
  %20 = load %struct.TextLine*, %struct.TextLine** %19, align 8, !dbg !5789
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %20, i32 0, i32 2, !dbg !5790
  %21 = load i8*, i8** %line, align 8, !dbg !5790
  %22 = load i32*, i32** %charp, align 8, !dbg !5791
  %23 = load i32, i32* %22, align 4, !dbg !5792
  %idxprom = sext i32 %23 to i64, !dbg !5793
  %arrayidx = getelementptr inbounds i8, i8* %21, i64 %idxprom, !dbg !5793
  %24 = load i8, i8* %arrayidx, align 1, !dbg !5793
  %conv = zext i8 %24 to i32, !dbg !5793
  %cmp10 = icmp eq i32 %conv, 32, !dbg !5794
  br i1 %cmp10, label %if.then12, label %if.end23, !dbg !5795

if.then12:                                        ; preds = %land.lhs.true
  store i8 1, i8* %do_tab, align 1, !dbg !5796
  store i32 0, i32* %i, align 4, !dbg !5798
  br label %for.cond, !dbg !5800

for.cond:                                         ; preds = %for.inc, %if.then12
  %25 = load i32, i32* %i, align 4, !dbg !5801
  %26 = load i32*, i32** %charp, align 8, !dbg !5803
  %27 = load i32, i32* %26, align 4, !dbg !5804
  %cmp13 = icmp slt i32 %25, %27, !dbg !5805
  br i1 %cmp13, label %for.body, label %for.end, !dbg !5806

for.body:                                         ; preds = %for.cond
  %28 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5807
  %29 = load %struct.TextLine*, %struct.TextLine** %28, align 8, !dbg !5809
  %line15 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %29, i32 0, i32 2, !dbg !5810
  %30 = load i8*, i8** %line15, align 8, !dbg !5810
  %31 = load i32, i32* %i, align 4, !dbg !5811
  %idxprom16 = sext i32 %31 to i64, !dbg !5812
  %arrayidx17 = getelementptr inbounds i8, i8* %30, i64 %idxprom16, !dbg !5812
  %32 = load i8, i8* %arrayidx17, align 1, !dbg !5812
  %conv18 = zext i8 %32 to i32, !dbg !5812
  %cmp19 = icmp ne i32 %conv18, 32, !dbg !5813
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !5814

if.then21:                                        ; preds = %for.body
  store i8 0, i8* %do_tab, align 1, !dbg !5815
  br label %for.end, !dbg !5817

if.end22:                                         ; preds = %for.body
  br label %for.inc, !dbg !5818

for.inc:                                          ; preds = %if.end22
  %33 = load i32, i32* %i, align 4, !dbg !5819
  %inc = add nsw i32 %33, 1, !dbg !5819
  store i32 %inc, i32* %i, align 4, !dbg !5819
  br label %for.cond, !dbg !5820, !llvm.loop !5821

for.end:                                          ; preds = %if.then21, %for.cond
  br label %if.end23, !dbg !5823

if.end23:                                         ; preds = %for.end, %land.lhs.true, %if.else8
  %34 = load i8, i8* %do_tab, align 1, !dbg !5824
  %tobool24 = icmp ne i8 %34, 0, !dbg !5824
  br i1 %tobool24, label %if.then25, label %if.else41, !dbg !5826

if.then25:                                        ; preds = %if.end23
  call void @llvm.dbg.declare(metadata i32* %tabsize, metadata !5827, metadata !DIExpression()), !dbg !5829
  %35 = load i32*, i32** %charp, align 8, !dbg !5830
  %36 = load i32, i32* %35, align 4, !dbg !5831
  %rem = srem i32 %36, 4, !dbg !5832
  %add = add nsw i32 %rem, 1, !dbg !5833
  store i32 %add, i32* %tabsize, align 4, !dbg !5829
  %37 = load i32*, i32** %charp, align 8, !dbg !5834
  %38 = load i32, i32* %37, align 4, !dbg !5836
  %add26 = add nsw i32 %38, 1, !dbg !5837
  store i32 %add26, i32* %i, align 4, !dbg !5838
  br label %for.cond27, !dbg !5839

for.cond27:                                       ; preds = %for.inc38, %if.then25
  %39 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5840
  %40 = load %struct.TextLine*, %struct.TextLine** %39, align 8, !dbg !5842
  %line28 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %40, i32 0, i32 2, !dbg !5843
  %41 = load i8*, i8** %line28, align 8, !dbg !5843
  %42 = load i32, i32* %i, align 4, !dbg !5844
  %idxprom29 = sext i32 %42 to i64, !dbg !5845
  %arrayidx30 = getelementptr inbounds i8, i8* %41, i64 %idxprom29, !dbg !5845
  %43 = load i8, i8* %arrayidx30, align 1, !dbg !5845
  %conv31 = zext i8 %43 to i32, !dbg !5845
  %cmp32 = icmp eq i32 %conv31, 32, !dbg !5846
  br i1 %cmp32, label %land.rhs, label %land.end, !dbg !5847

land.rhs:                                         ; preds = %for.cond27
  %44 = load i32, i32* %tabsize, align 4, !dbg !5848
  %cmp34 = icmp slt i32 %44, 4, !dbg !5849
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond27
  %45 = phi i1 [ false, %for.cond27 ], [ %cmp34, %land.rhs ], !dbg !5850
  br i1 %45, label %for.body36, label %for.end40, !dbg !5851

for.body36:                                       ; preds = %land.end
  %46 = load i32, i32* %tabsize, align 4, !dbg !5852
  %inc37 = add nsw i32 %46, 1, !dbg !5852
  store i32 %inc37, i32* %tabsize, align 4, !dbg !5852
  br label %for.inc38, !dbg !5853

for.inc38:                                        ; preds = %for.body36
  %47 = load i32, i32* %i, align 4, !dbg !5854
  %inc39 = add nsw i32 %47, 1, !dbg !5854
  store i32 %inc39, i32* %i, align 4, !dbg !5854
  br label %for.cond27, !dbg !5855, !llvm.loop !5856

for.end40:                                        ; preds = %land.end
  %48 = load i32, i32* %i, align 4, !dbg !5858
  %49 = load i32*, i32** %charp, align 8, !dbg !5859
  store i32 %48, i32* %49, align 4, !dbg !5860
  br label %if.end44, !dbg !5861

if.else41:                                        ; preds = %if.end23
  %50 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5862
  %51 = load %struct.TextLine*, %struct.TextLine** %50, align 8, !dbg !5864
  %line42 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %51, i32 0, i32 2, !dbg !5865
  %52 = load i8*, i8** %line42, align 8, !dbg !5865
  %53 = load i32*, i32** %charp, align 8, !dbg !5866
  %54 = load i32, i32* %53, align 4, !dbg !5867
  %idx.ext = sext i32 %54 to i64, !dbg !5868
  %add.ptr = getelementptr inbounds i8, i8* %52, i64 %idx.ext, !dbg !5868
  %call = call i32 @BLI_str_utf8_size(i8* %add.ptr), !dbg !5869
  %55 = load i32*, i32** %charp, align 8, !dbg !5870
  %56 = load i32, i32* %55, align 4, !dbg !5871
  %add43 = add nsw i32 %56, %call, !dbg !5871
  store i32 %add43, i32* %55, align 4, !dbg !5871
  br label %if.end44

if.end44:                                         ; preds = %if.else41, %for.end40
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.end7
  %57 = load i8, i8* %sel.addr, align 1, !dbg !5872
  %tobool46 = icmp ne i8 %57, 0, !dbg !5872
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !5874

if.then47:                                        ; preds = %if.end45
  %58 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5875
  call void @txt_pop_sel(%struct.Text* %58), !dbg !5876
  br label %if.end48, !dbg !5876

if.end48:                                         ; preds = %if.then2, %if.then47, %if.end45
  ret void, !dbg !5877
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_jump_left(%struct.Text* %text, i8 zeroext %sel, i8 zeroext %use_init_step) #0 !dbg !5878 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %sel.addr = alloca i8, align 1
  %use_init_step.addr = alloca i8, align 1
  %linep = alloca %struct.TextLine**, align 8
  %charp = alloca i32*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !5881, metadata !DIExpression()), !dbg !5882
  store i8 %sel, i8* %sel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sel.addr, metadata !5883, metadata !DIExpression()), !dbg !5884
  store i8 %use_init_step, i8* %use_init_step.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_init_step.addr, metadata !5885, metadata !DIExpression()), !dbg !5886
  call void @llvm.dbg.declare(metadata %struct.TextLine*** %linep, metadata !5887, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.declare(metadata i32** %charp, metadata !5889, metadata !DIExpression()), !dbg !5890
  %0 = load i8, i8* %sel.addr, align 1, !dbg !5891
  %tobool = icmp ne i8 %0, 0, !dbg !5891
  br i1 %tobool, label %if.then, label %if.else, !dbg !5893

if.then:                                          ; preds = %entry
  %1 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5894
  call void @txt_curs_sel(%struct.Text* %1, %struct.TextLine*** %linep, i32** %charp), !dbg !5895
  br label %if.end, !dbg !5895

if.else:                                          ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5896
  call void @txt_pop_first(%struct.Text* %2), !dbg !5898
  %3 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5899
  call void @txt_curs_cur(%struct.Text* %3, %struct.TextLine*** %linep, i32** %charp), !dbg !5900
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5901
  %5 = load %struct.TextLine*, %struct.TextLine** %4, align 8, !dbg !5903
  %tobool1 = icmp ne %struct.TextLine* %5, null, !dbg !5903
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !5904

if.then2:                                         ; preds = %if.end
  br label %if.end6, !dbg !5905

if.end3:                                          ; preds = %if.end
  %6 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5906
  %7 = load %struct.TextLine*, %struct.TextLine** %6, align 8, !dbg !5907
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %7, i32 0, i32 2, !dbg !5908
  %8 = load i8*, i8** %line, align 8, !dbg !5908
  %9 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5909
  %10 = load %struct.TextLine*, %struct.TextLine** %9, align 8, !dbg !5910
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %10, i32 0, i32 4, !dbg !5911
  %11 = load i32, i32* %len, align 8, !dbg !5911
  %conv = sext i32 %11 to i64, !dbg !5912
  %12 = load i32*, i32** %charp, align 8, !dbg !5913
  %13 = load i8, i8* %use_init_step.addr, align 1, !dbg !5914
  call void @BLI_str_cursor_step_utf8(i8* %8, i64 %conv, i32* %12, i32 0, i32 1, i8 zeroext %13), !dbg !5915
  %14 = load i8, i8* %sel.addr, align 1, !dbg !5916
  %tobool4 = icmp ne i8 %14, 0, !dbg !5916
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !5918

if.then5:                                         ; preds = %if.end3
  %15 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5919
  call void @txt_pop_sel(%struct.Text* %15), !dbg !5920
  br label %if.end6, !dbg !5920

if.end6:                                          ; preds = %if.then2, %if.then5, %if.end3
  ret void, !dbg !5921
}

declare dso_local void @BLI_str_cursor_step_utf8(i8*, i64, i32*, i32, i32, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_jump_right(%struct.Text* %text, i8 zeroext %sel, i8 zeroext %use_init_step) #0 !dbg !5922 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %sel.addr = alloca i8, align 1
  %use_init_step.addr = alloca i8, align 1
  %linep = alloca %struct.TextLine**, align 8
  %charp = alloca i32*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !5923, metadata !DIExpression()), !dbg !5924
  store i8 %sel, i8* %sel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sel.addr, metadata !5925, metadata !DIExpression()), !dbg !5926
  store i8 %use_init_step, i8* %use_init_step.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_init_step.addr, metadata !5927, metadata !DIExpression()), !dbg !5928
  call void @llvm.dbg.declare(metadata %struct.TextLine*** %linep, metadata !5929, metadata !DIExpression()), !dbg !5930
  call void @llvm.dbg.declare(metadata i32** %charp, metadata !5931, metadata !DIExpression()), !dbg !5932
  %0 = load i8, i8* %sel.addr, align 1, !dbg !5933
  %tobool = icmp ne i8 %0, 0, !dbg !5933
  br i1 %tobool, label %if.then, label %if.else, !dbg !5935

if.then:                                          ; preds = %entry
  %1 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5936
  call void @txt_curs_sel(%struct.Text* %1, %struct.TextLine*** %linep, i32** %charp), !dbg !5937
  br label %if.end, !dbg !5937

if.else:                                          ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5938
  call void @txt_pop_last(%struct.Text* %2), !dbg !5940
  %3 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5941
  call void @txt_curs_cur(%struct.Text* %3, %struct.TextLine*** %linep, i32** %charp), !dbg !5942
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5943
  %5 = load %struct.TextLine*, %struct.TextLine** %4, align 8, !dbg !5945
  %tobool1 = icmp ne %struct.TextLine* %5, null, !dbg !5945
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !5946

if.then2:                                         ; preds = %if.end
  br label %if.end6, !dbg !5947

if.end3:                                          ; preds = %if.end
  %6 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5948
  %7 = load %struct.TextLine*, %struct.TextLine** %6, align 8, !dbg !5949
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %7, i32 0, i32 2, !dbg !5950
  %8 = load i8*, i8** %line, align 8, !dbg !5950
  %9 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5951
  %10 = load %struct.TextLine*, %struct.TextLine** %9, align 8, !dbg !5952
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %10, i32 0, i32 4, !dbg !5953
  %11 = load i32, i32* %len, align 8, !dbg !5953
  %conv = sext i32 %11 to i64, !dbg !5954
  %12 = load i32*, i32** %charp, align 8, !dbg !5955
  %13 = load i8, i8* %use_init_step.addr, align 1, !dbg !5956
  call void @BLI_str_cursor_step_utf8(i8* %8, i64 %conv, i32* %12, i32 1, i32 1, i8 zeroext %13), !dbg !5957
  %14 = load i8, i8* %sel.addr, align 1, !dbg !5958
  %tobool4 = icmp ne i8 %14, 0, !dbg !5958
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !5960

if.then5:                                         ; preds = %if.end3
  %15 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5961
  call void @txt_pop_sel(%struct.Text* %15), !dbg !5962
  br label %if.end6, !dbg !5962

if.end6:                                          ; preds = %if.then2, %if.then5, %if.end3
  ret void, !dbg !5963
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_move_bof(%struct.Text* %text, i8 zeroext %sel) #0 !dbg !5964 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %sel.addr = alloca i8, align 1
  %linep = alloca %struct.TextLine**, align 8
  %charp = alloca i32*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !5965, metadata !DIExpression()), !dbg !5966
  store i8 %sel, i8* %sel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sel.addr, metadata !5967, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.declare(metadata %struct.TextLine*** %linep, metadata !5969, metadata !DIExpression()), !dbg !5970
  call void @llvm.dbg.declare(metadata i32** %charp, metadata !5971, metadata !DIExpression()), !dbg !5972
  %0 = load i8, i8* %sel.addr, align 1, !dbg !5973
  %tobool = icmp ne i8 %0, 0, !dbg !5973
  br i1 %tobool, label %if.then, label %if.else, !dbg !5975

if.then:                                          ; preds = %entry
  %1 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5976
  call void @txt_curs_sel(%struct.Text* %1, %struct.TextLine*** %linep, i32** %charp), !dbg !5977
  br label %if.end, !dbg !5977

if.else:                                          ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5978
  call void @txt_curs_cur(%struct.Text* %2, %struct.TextLine*** %linep, i32** %charp), !dbg !5979
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %3 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5980
  %4 = load %struct.TextLine*, %struct.TextLine** %3, align 8, !dbg !5982
  %tobool1 = icmp ne %struct.TextLine* %4, null, !dbg !5982
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !5983

if.then2:                                         ; preds = %if.end
  br label %if.end6, !dbg !5984

if.end3:                                          ; preds = %if.end
  %5 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5985
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 4, !dbg !5986
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !5987
  %6 = load i8*, i8** %first, align 8, !dbg !5987
  %7 = bitcast i8* %6 to %struct.TextLine*, !dbg !5985
  %8 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !5988
  store %struct.TextLine* %7, %struct.TextLine** %8, align 8, !dbg !5989
  %9 = load i32*, i32** %charp, align 8, !dbg !5990
  store i32 0, i32* %9, align 4, !dbg !5991
  %10 = load i8, i8* %sel.addr, align 1, !dbg !5992
  %tobool4 = icmp ne i8 %10, 0, !dbg !5992
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !5994

if.then5:                                         ; preds = %if.end3
  %11 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !5995
  call void @txt_pop_sel(%struct.Text* %11), !dbg !5996
  br label %if.end6, !dbg !5996

if.end6:                                          ; preds = %if.then2, %if.then5, %if.end3
  ret void, !dbg !5997
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_move_toline(%struct.Text* %text, i32 %line, i8 zeroext %sel) #0 !dbg !5998 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %line.addr = alloca i32, align 4
  %sel.addr = alloca i8, align 1
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !6001, metadata !DIExpression()), !dbg !6002
  store i32 %line, i32* %line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %line.addr, metadata !6003, metadata !DIExpression()), !dbg !6004
  store i8 %sel, i8* %sel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sel.addr, metadata !6005, metadata !DIExpression()), !dbg !6006
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6007
  %1 = load i32, i32* %line.addr, align 4, !dbg !6008
  %2 = load i8, i8* %sel.addr, align 1, !dbg !6009
  call void @txt_move_to(%struct.Text* %0, i32 %1, i32 0, i8 zeroext %2), !dbg !6010
  ret void, !dbg !6011
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_move_to(%struct.Text* %text, i32 %line, i32 %ch, i8 zeroext %sel) #0 !dbg !6012 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %line.addr = alloca i32, align 4
  %ch.addr = alloca i32, align 4
  %sel.addr = alloca i8, align 1
  %linep = alloca %struct.TextLine**, align 8
  %charp = alloca i32*, align 8
  %i = alloca i32, align 4
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !6015, metadata !DIExpression()), !dbg !6016
  store i32 %line, i32* %line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %line.addr, metadata !6017, metadata !DIExpression()), !dbg !6018
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !6019, metadata !DIExpression()), !dbg !6020
  store i8 %sel, i8* %sel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sel.addr, metadata !6021, metadata !DIExpression()), !dbg !6022
  call void @llvm.dbg.declare(metadata %struct.TextLine*** %linep, metadata !6023, metadata !DIExpression()), !dbg !6024
  call void @llvm.dbg.declare(metadata i32** %charp, metadata !6025, metadata !DIExpression()), !dbg !6026
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6027, metadata !DIExpression()), !dbg !6028
  %0 = load i8, i8* %sel.addr, align 1, !dbg !6029
  %tobool = icmp ne i8 %0, 0, !dbg !6029
  br i1 %tobool, label %if.then, label %if.else, !dbg !6031

if.then:                                          ; preds = %entry
  %1 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6032
  call void @txt_curs_sel(%struct.Text* %1, %struct.TextLine*** %linep, i32** %charp), !dbg !6033
  br label %if.end, !dbg !6033

if.else:                                          ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6034
  call void @txt_curs_cur(%struct.Text* %2, %struct.TextLine*** %linep, i32** %charp), !dbg !6035
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %3 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !6036
  %4 = load %struct.TextLine*, %struct.TextLine** %3, align 8, !dbg !6038
  %tobool1 = icmp ne %struct.TextLine* %4, null, !dbg !6038
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !6039

if.then2:                                         ; preds = %if.end
  br label %if.end15, !dbg !6040

if.end3:                                          ; preds = %if.end
  %5 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6041
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 4, !dbg !6042
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !6043
  %6 = load i8*, i8** %first, align 8, !dbg !6043
  %7 = bitcast i8* %6 to %struct.TextLine*, !dbg !6041
  %8 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !6044
  store %struct.TextLine* %7, %struct.TextLine** %8, align 8, !dbg !6045
  store i32 0, i32* %i, align 4, !dbg !6046
  br label %for.cond, !dbg !6048

for.cond:                                         ; preds = %for.inc, %if.end3
  %9 = load i32, i32* %i, align 4, !dbg !6049
  %10 = load i32, i32* %line.addr, align 4, !dbg !6051
  %cmp = icmp ult i32 %9, %10, !dbg !6052
  br i1 %cmp, label %for.body, label %for.end, !dbg !6053

for.body:                                         ; preds = %for.cond
  %11 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !6054
  %12 = load %struct.TextLine*, %struct.TextLine** %11, align 8, !dbg !6057
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %12, i32 0, i32 0, !dbg !6058
  %13 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !6058
  %tobool4 = icmp ne %struct.TextLine* %13, null, !dbg !6059
  br i1 %tobool4, label %if.then5, label %if.else7, !dbg !6060

if.then5:                                         ; preds = %for.body
  %14 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !6061
  %15 = load %struct.TextLine*, %struct.TextLine** %14, align 8, !dbg !6062
  %next6 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %15, i32 0, i32 0, !dbg !6063
  %16 = load %struct.TextLine*, %struct.TextLine** %next6, align 8, !dbg !6063
  %17 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !6064
  store %struct.TextLine* %16, %struct.TextLine** %17, align 8, !dbg !6065
  br label %if.end8, !dbg !6066

if.else7:                                         ; preds = %for.body
  br label %for.end, !dbg !6067

if.end8:                                          ; preds = %if.then5
  br label %for.inc, !dbg !6068

for.inc:                                          ; preds = %if.end8
  %18 = load i32, i32* %i, align 4, !dbg !6069
  %inc = add i32 %18, 1, !dbg !6069
  store i32 %inc, i32* %i, align 4, !dbg !6069
  br label %for.cond, !dbg !6070, !llvm.loop !6071

for.end:                                          ; preds = %if.else7, %for.cond
  %19 = load i32, i32* %ch.addr, align 4, !dbg !6073
  %20 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !6075
  %21 = load %struct.TextLine*, %struct.TextLine** %20, align 8, !dbg !6076
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %21, i32 0, i32 4, !dbg !6077
  %22 = load i32, i32* %len, align 8, !dbg !6077
  %cmp9 = icmp ugt i32 %19, %22, !dbg !6078
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !6079

if.then10:                                        ; preds = %for.end
  %23 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !6080
  %24 = load %struct.TextLine*, %struct.TextLine** %23, align 8, !dbg !6081
  %len11 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %24, i32 0, i32 4, !dbg !6082
  %25 = load i32, i32* %len11, align 8, !dbg !6082
  store i32 %25, i32* %ch.addr, align 4, !dbg !6083
  br label %if.end12, !dbg !6084

if.end12:                                         ; preds = %if.then10, %for.end
  %26 = load i32, i32* %ch.addr, align 4, !dbg !6085
  %27 = load i32*, i32** %charp, align 8, !dbg !6086
  store i32 %26, i32* %27, align 4, !dbg !6087
  %28 = load i8, i8* %sel.addr, align 1, !dbg !6088
  %tobool13 = icmp ne i8 %28, 0, !dbg !6088
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !6090

if.then14:                                        ; preds = %if.end12
  %29 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6091
  call void @txt_pop_sel(%struct.Text* %29), !dbg !6092
  br label %if.end15, !dbg !6092

if.end15:                                         ; preds = %if.then2, %if.then14, %if.end12
  ret void, !dbg !6093
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_order_cursors(%struct.Text* %text, i8 zeroext %reverse) #0 !dbg !6094 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %reverse.addr = alloca i8, align 1
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !6095, metadata !DIExpression()), !dbg !6096
  store i8 %reverse, i8* %reverse.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reverse.addr, metadata !6097, metadata !DIExpression()), !dbg !6098
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6099
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !6101
  %1 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !6101
  %tobool = icmp ne %struct.TextLine* %1, null, !dbg !6099
  br i1 %tobool, label %if.end, label %if.then, !dbg !6102

if.then:                                          ; preds = %entry
  br label %if.end35, !dbg !6103

if.end:                                           ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6104
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 6, !dbg !6106
  %3 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !6106
  %tobool1 = icmp ne %struct.TextLine* %3, null, !dbg !6104
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !6107

if.then2:                                         ; preds = %if.end
  br label %if.end35, !dbg !6108

if.end3:                                          ; preds = %if.end
  %4 = load i8, i8* %reverse.addr, align 1, !dbg !6109
  %conv = zext i8 %4 to i32, !dbg !6109
  %cmp = icmp eq i32 %conv, 0, !dbg !6111
  br i1 %cmp, label %if.then5, label %if.else, !dbg !6112

if.then5:                                         ; preds = %if.end3
  %5 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6113
  %curl6 = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 5, !dbg !6116
  %6 = load %struct.TextLine*, %struct.TextLine** %curl6, align 8, !dbg !6116
  %7 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6117
  %sell7 = getelementptr inbounds %struct.Text, %struct.Text* %7, i32 0, i32 6, !dbg !6118
  %8 = load %struct.TextLine*, %struct.TextLine** %sell7, align 8, !dbg !6118
  %call = call i32 @txt_get_span(%struct.TextLine* %6, %struct.TextLine* %8), !dbg !6119
  %cmp8 = icmp slt i32 %call, 0, !dbg !6120
  br i1 %cmp8, label %if.then16, label %lor.lhs.false, !dbg !6121

lor.lhs.false:                                    ; preds = %if.then5
  %9 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6122
  %curl10 = getelementptr inbounds %struct.Text, %struct.Text* %9, i32 0, i32 5, !dbg !6123
  %10 = load %struct.TextLine*, %struct.TextLine** %curl10, align 8, !dbg !6123
  %11 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6124
  %sell11 = getelementptr inbounds %struct.Text, %struct.Text* %11, i32 0, i32 6, !dbg !6125
  %12 = load %struct.TextLine*, %struct.TextLine** %sell11, align 8, !dbg !6125
  %cmp12 = icmp eq %struct.TextLine* %10, %12, !dbg !6126
  br i1 %cmp12, label %land.lhs.true, label %if.end17, !dbg !6127

land.lhs.true:                                    ; preds = %lor.lhs.false
  %13 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6128
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %13, i32 0, i32 7, !dbg !6129
  %14 = load i32, i32* %curc, align 8, !dbg !6129
  %15 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6130
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %15, i32 0, i32 8, !dbg !6131
  %16 = load i32, i32* %selc, align 4, !dbg !6131
  %cmp14 = icmp sgt i32 %14, %16, !dbg !6132
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !6133

if.then16:                                        ; preds = %land.lhs.true, %if.then5
  %17 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6134
  call void @txt_curs_swap(%struct.Text* %17), !dbg !6136
  br label %if.end17, !dbg !6137

if.end17:                                         ; preds = %if.then16, %land.lhs.true, %lor.lhs.false
  br label %if.end35, !dbg !6138

if.else:                                          ; preds = %if.end3
  %18 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6139
  %curl18 = getelementptr inbounds %struct.Text, %struct.Text* %18, i32 0, i32 5, !dbg !6142
  %19 = load %struct.TextLine*, %struct.TextLine** %curl18, align 8, !dbg !6142
  %20 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6143
  %sell19 = getelementptr inbounds %struct.Text, %struct.Text* %20, i32 0, i32 6, !dbg !6144
  %21 = load %struct.TextLine*, %struct.TextLine** %sell19, align 8, !dbg !6144
  %call20 = call i32 @txt_get_span(%struct.TextLine* %19, %struct.TextLine* %21), !dbg !6145
  %cmp21 = icmp sgt i32 %call20, 0, !dbg !6146
  br i1 %cmp21, label %if.then33, label %lor.lhs.false23, !dbg !6147

lor.lhs.false23:                                  ; preds = %if.else
  %22 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6148
  %curl24 = getelementptr inbounds %struct.Text, %struct.Text* %22, i32 0, i32 5, !dbg !6149
  %23 = load %struct.TextLine*, %struct.TextLine** %curl24, align 8, !dbg !6149
  %24 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6150
  %sell25 = getelementptr inbounds %struct.Text, %struct.Text* %24, i32 0, i32 6, !dbg !6151
  %25 = load %struct.TextLine*, %struct.TextLine** %sell25, align 8, !dbg !6151
  %cmp26 = icmp eq %struct.TextLine* %23, %25, !dbg !6152
  br i1 %cmp26, label %land.lhs.true28, label %if.end34, !dbg !6153

land.lhs.true28:                                  ; preds = %lor.lhs.false23
  %26 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6154
  %curc29 = getelementptr inbounds %struct.Text, %struct.Text* %26, i32 0, i32 7, !dbg !6155
  %27 = load i32, i32* %curc29, align 8, !dbg !6155
  %28 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6156
  %selc30 = getelementptr inbounds %struct.Text, %struct.Text* %28, i32 0, i32 8, !dbg !6157
  %29 = load i32, i32* %selc30, align 4, !dbg !6157
  %cmp31 = icmp slt i32 %27, %29, !dbg !6158
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !6159

if.then33:                                        ; preds = %land.lhs.true28, %if.else
  %30 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6160
  call void @txt_curs_swap(%struct.Text* %30), !dbg !6162
  br label %if.end34, !dbg !6163

if.end34:                                         ; preds = %if.then33, %land.lhs.true28, %lor.lhs.false23
  br label %if.end35

if.end35:                                         ; preds = %if.then, %if.then2, %if.end34, %if.end17
  ret void, !dbg !6164
}

; Function Attrs: noinline nounwind uwtable
define internal void @txt_curs_swap(%struct.Text* %text) #0 !dbg !6165 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %tmpl = alloca %struct.TextLine*, align 8
  %tmpc = alloca i32, align 4
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !6166, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.declare(metadata %struct.TextLine** %tmpl, metadata !6168, metadata !DIExpression()), !dbg !6169
  call void @llvm.dbg.declare(metadata i32* %tmpc, metadata !6170, metadata !DIExpression()), !dbg !6171
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6172
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !6173
  %1 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !6173
  store %struct.TextLine* %1, %struct.TextLine** %tmpl, align 8, !dbg !6174
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6175
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 6, !dbg !6176
  %3 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !6176
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6177
  %curl1 = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 5, !dbg !6178
  store %struct.TextLine* %3, %struct.TextLine** %curl1, align 8, !dbg !6179
  %5 = load %struct.TextLine*, %struct.TextLine** %tmpl, align 8, !dbg !6180
  %6 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6181
  %sell2 = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 6, !dbg !6182
  store %struct.TextLine* %5, %struct.TextLine** %sell2, align 8, !dbg !6183
  %7 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6184
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %7, i32 0, i32 7, !dbg !6185
  %8 = load i32, i32* %curc, align 8, !dbg !6185
  store i32 %8, i32* %tmpc, align 4, !dbg !6186
  %9 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6187
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %9, i32 0, i32 8, !dbg !6188
  %10 = load i32, i32* %selc, align 4, !dbg !6188
  %11 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6189
  %curc3 = getelementptr inbounds %struct.Text, %struct.Text* %11, i32 0, i32 7, !dbg !6190
  store i32 %10, i32* %curc3, align 8, !dbg !6191
  %12 = load i32, i32* %tmpc, align 4, !dbg !6192
  %13 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6193
  %selc4 = getelementptr inbounds %struct.Text, %struct.Text* %13, i32 0, i32 8, !dbg !6194
  store i32 %12, i32* %selc4, align 4, !dbg !6195
  ret void, !dbg !6196
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @txt_has_sel(%struct.Text* %text) #0 !dbg !6197 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !6198, metadata !DIExpression()), !dbg !6199
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6200
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !6201
  %1 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !6201
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6202
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 6, !dbg !6203
  %3 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !6203
  %cmp = icmp ne %struct.TextLine* %1, %3, !dbg !6204
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6205

lor.rhs:                                          ; preds = %entry
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6206
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 7, !dbg !6207
  %5 = load i32, i32* %curc, align 8, !dbg !6207
  %6 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6208
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 8, !dbg !6209
  %7 = load i32, i32* %selc, align 4, !dbg !6209
  %cmp1 = icmp ne i32 %5, %7, !dbg !6210
  br label %lor.end, !dbg !6205

lor.end:                                          ; preds = %lor.rhs, %entry
  %8 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  %lor.ext = zext i1 %8 to i32, !dbg !6205
  %conv = trunc i32 %lor.ext to i8, !dbg !6211
  ret i8 %conv, !dbg !6212
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_sel_clear(%struct.Text* %text) #0 !dbg !6213 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !6214, metadata !DIExpression()), !dbg !6215
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6216
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 6, !dbg !6218
  %1 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !6218
  %tobool = icmp ne %struct.TextLine* %1, null, !dbg !6216
  br i1 %tobool, label %if.then, label %if.end, !dbg !6219

if.then:                                          ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6220
  %sell1 = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 6, !dbg !6222
  %3 = load %struct.TextLine*, %struct.TextLine** %sell1, align 8, !dbg !6222
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6223
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 5, !dbg !6224
  store %struct.TextLine* %3, %struct.TextLine** %curl, align 8, !dbg !6225
  %5 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6226
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 8, !dbg !6227
  %6 = load i32, i32* %selc, align 4, !dbg !6227
  %7 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6228
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %7, i32 0, i32 7, !dbg !6229
  store i32 %6, i32* %curc, align 8, !dbg !6230
  br label %if.end, !dbg !6231

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6232
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_sel_line(%struct.Text* %text) #0 !dbg !6233 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !6234, metadata !DIExpression()), !dbg !6235
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6236
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !6238
  %1 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !6238
  %tobool = icmp ne %struct.TextLine* %1, null, !dbg !6236
  br i1 %tobool, label %if.end, label %if.then, !dbg !6239

if.then:                                          ; preds = %entry
  br label %return, !dbg !6240

if.end:                                           ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6241
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 7, !dbg !6242
  store i32 0, i32* %curc, align 8, !dbg !6243
  %3 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6244
  %curl1 = getelementptr inbounds %struct.Text, %struct.Text* %3, i32 0, i32 5, !dbg !6245
  %4 = load %struct.TextLine*, %struct.TextLine** %curl1, align 8, !dbg !6245
  %5 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6246
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 6, !dbg !6247
  store %struct.TextLine* %4, %struct.TextLine** %sell, align 8, !dbg !6248
  %6 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6249
  %sell2 = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 6, !dbg !6250
  %7 = load %struct.TextLine*, %struct.TextLine** %sell2, align 8, !dbg !6250
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %7, i32 0, i32 4, !dbg !6251
  %8 = load i32, i32* %len, align 8, !dbg !6251
  %9 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6252
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %9, i32 0, i32 8, !dbg !6253
  store i32 %8, i32* %selc, align 4, !dbg !6254
  br label %return, !dbg !6255

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6255
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @txt_to_buf(%struct.Text* %text) #0 !dbg !6256 {
entry:
  %retval = alloca i8*, align 8
  %text.addr = alloca %struct.Text*, align 8
  %length = alloca i32, align 4
  %tmp = alloca %struct.TextLine*, align 8
  %linef = alloca %struct.TextLine*, align 8
  %linel = alloca %struct.TextLine*, align 8
  %charf = alloca i32, align 4
  %charl = alloca i32, align 4
  %buf = alloca i8*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !6259, metadata !DIExpression()), !dbg !6260
  call void @llvm.dbg.declare(metadata i32* %length, metadata !6261, metadata !DIExpression()), !dbg !6262
  call void @llvm.dbg.declare(metadata %struct.TextLine** %tmp, metadata !6263, metadata !DIExpression()), !dbg !6264
  call void @llvm.dbg.declare(metadata %struct.TextLine** %linef, metadata !6265, metadata !DIExpression()), !dbg !6266
  call void @llvm.dbg.declare(metadata %struct.TextLine** %linel, metadata !6267, metadata !DIExpression()), !dbg !6268
  call void @llvm.dbg.declare(metadata i32* %charf, metadata !6269, metadata !DIExpression()), !dbg !6270
  call void @llvm.dbg.declare(metadata i32* %charl, metadata !6271, metadata !DIExpression()), !dbg !6272
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6273, metadata !DIExpression()), !dbg !6274
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6275
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !6277
  %1 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !6277
  %tobool = icmp ne %struct.TextLine* %1, null, !dbg !6275
  br i1 %tobool, label %if.end, label %if.then, !dbg !6278

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !6279
  br label %return, !dbg !6279

if.end:                                           ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6280
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 6, !dbg !6282
  %3 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !6282
  %tobool1 = icmp ne %struct.TextLine* %3, null, !dbg !6280
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !6283

if.then2:                                         ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !6284
  br label %return, !dbg !6284

if.end3:                                          ; preds = %if.end
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6285
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 4, !dbg !6287
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !6288
  %5 = load i8*, i8** %first, align 8, !dbg !6288
  %tobool4 = icmp ne i8* %5, null, !dbg !6285
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !6289

if.then5:                                         ; preds = %if.end3
  store i8* null, i8** %retval, align 8, !dbg !6290
  br label %return, !dbg !6290

if.end6:                                          ; preds = %if.end3
  %6 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6291
  %lines7 = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 4, !dbg !6292
  %first8 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines7, i32 0, i32 0, !dbg !6293
  %7 = load i8*, i8** %first8, align 8, !dbg !6293
  %8 = bitcast i8* %7 to %struct.TextLine*, !dbg !6291
  store %struct.TextLine* %8, %struct.TextLine** %linef, align 8, !dbg !6294
  store i32 0, i32* %charf, align 4, !dbg !6295
  %9 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6296
  %lines9 = getelementptr inbounds %struct.Text, %struct.Text* %9, i32 0, i32 4, !dbg !6297
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines9, i32 0, i32 1, !dbg !6298
  %10 = load i8*, i8** %last, align 8, !dbg !6298
  %11 = bitcast i8* %10 to %struct.TextLine*, !dbg !6296
  store %struct.TextLine* %11, %struct.TextLine** %linel, align 8, !dbg !6299
  %12 = load %struct.TextLine*, %struct.TextLine** %linel, align 8, !dbg !6300
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %12, i32 0, i32 4, !dbg !6301
  %13 = load i32, i32* %len, align 8, !dbg !6301
  store i32 %13, i32* %charl, align 4, !dbg !6302
  %14 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !6303
  %15 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6305
  %lines10 = getelementptr inbounds %struct.Text, %struct.Text* %15, i32 0, i32 4, !dbg !6306
  %last11 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines10, i32 0, i32 1, !dbg !6307
  %16 = load i8*, i8** %last11, align 8, !dbg !6307
  %17 = bitcast i8* %16 to %struct.TextLine*, !dbg !6305
  %cmp = icmp eq %struct.TextLine* %14, %17, !dbg !6308
  br i1 %cmp, label %if.then12, label %if.else, !dbg !6309

if.then12:                                        ; preds = %if.end6
  %18 = load i32, i32* %charl, align 4, !dbg !6310
  %19 = load i32, i32* %charf, align 4, !dbg !6312
  %sub = sub nsw i32 %18, %19, !dbg !6313
  store i32 %sub, i32* %length, align 4, !dbg !6314
  %20 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6315
  %21 = load i32, i32* %length, align 4, !dbg !6316
  %add = add nsw i32 %21, 2, !dbg !6317
  %conv = sext i32 %add to i64, !dbg !6316
  %call = call i8* %20(i64 %conv, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0)), !dbg !6315
  store i8* %call, i8** %buf, align 8, !dbg !6318
  %22 = load i8*, i8** %buf, align 8, !dbg !6319
  %23 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !6320
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %23, i32 0, i32 2, !dbg !6321
  %24 = load i8*, i8** %line, align 8, !dbg !6321
  %25 = load i32, i32* %charf, align 4, !dbg !6322
  %idx.ext = sext i32 %25 to i64, !dbg !6323
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %idx.ext, !dbg !6323
  %26 = load i32, i32* %length, align 4, !dbg !6324
  %add13 = add nsw i32 %26, 1, !dbg !6325
  %conv14 = sext i32 %add13 to i64, !dbg !6324
  %call15 = call i8* @BLI_strncpy(i8* %22, i8* %add.ptr, i64 %conv14), !dbg !6326
  %27 = load i8*, i8** %buf, align 8, !dbg !6327
  %28 = load i32, i32* %length, align 4, !dbg !6328
  %idxprom = sext i32 %28 to i64, !dbg !6327
  %arrayidx = getelementptr inbounds i8, i8* %27, i64 %idxprom, !dbg !6327
  store i8 0, i8* %arrayidx, align 1, !dbg !6329
  br label %if.end73, !dbg !6330

if.else:                                          ; preds = %if.end6
  %29 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !6331
  %len16 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %29, i32 0, i32 4, !dbg !6333
  %30 = load i32, i32* %len16, align 8, !dbg !6333
  %31 = load i32, i32* %charf, align 4, !dbg !6334
  %sub17 = sub nsw i32 %30, %31, !dbg !6335
  store i32 %sub17, i32* %length, align 4, !dbg !6336
  %32 = load i32, i32* %charl, align 4, !dbg !6337
  %33 = load i32, i32* %length, align 4, !dbg !6338
  %add18 = add nsw i32 %33, %32, !dbg !6338
  store i32 %add18, i32* %length, align 4, !dbg !6338
  %34 = load i32, i32* %length, align 4, !dbg !6339
  %add19 = add nsw i32 %34, 2, !dbg !6339
  store i32 %add19, i32* %length, align 4, !dbg !6339
  %35 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !6340
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %35, i32 0, i32 0, !dbg !6341
  %36 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !6341
  store %struct.TextLine* %36, %struct.TextLine** %tmp, align 8, !dbg !6342
  br label %while.cond, !dbg !6343

while.cond:                                       ; preds = %while.body, %if.else
  %37 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6344
  %tobool20 = icmp ne %struct.TextLine* %37, null, !dbg !6344
  br i1 %tobool20, label %land.rhs, label %land.end, !dbg !6345

land.rhs:                                         ; preds = %while.cond
  %38 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6346
  %39 = load %struct.TextLine*, %struct.TextLine** %linel, align 8, !dbg !6347
  %cmp21 = icmp ne %struct.TextLine* %38, %39, !dbg !6348
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %40 = phi i1 [ false, %while.cond ], [ %cmp21, %land.rhs ], !dbg !6349
  br i1 %40, label %while.body, label %while.end, !dbg !6343

while.body:                                       ; preds = %land.end
  %41 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6350
  %len23 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %41, i32 0, i32 4, !dbg !6352
  %42 = load i32, i32* %len23, align 8, !dbg !6352
  %add24 = add nsw i32 %42, 1, !dbg !6353
  %43 = load i32, i32* %length, align 4, !dbg !6354
  %add25 = add nsw i32 %43, %add24, !dbg !6354
  store i32 %add25, i32* %length, align 4, !dbg !6354
  %44 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6355
  %next26 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %44, i32 0, i32 0, !dbg !6356
  %45 = load %struct.TextLine*, %struct.TextLine** %next26, align 8, !dbg !6356
  store %struct.TextLine* %45, %struct.TextLine** %tmp, align 8, !dbg !6357
  br label %while.cond, !dbg !6343, !llvm.loop !6358

while.end:                                        ; preds = %land.end
  %46 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6360
  %47 = load i32, i32* %length, align 4, !dbg !6361
  %add27 = add nsw i32 %47, 1, !dbg !6362
  %conv28 = sext i32 %add27 to i64, !dbg !6361
  %call29 = call i8* %46(i64 %conv28, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0)), !dbg !6360
  store i8* %call29, i8** %buf, align 8, !dbg !6363
  %48 = load i8*, i8** %buf, align 8, !dbg !6364
  %49 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !6365
  %line30 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %49, i32 0, i32 2, !dbg !6366
  %50 = load i8*, i8** %line30, align 8, !dbg !6366
  %51 = load i32, i32* %charf, align 4, !dbg !6367
  %idx.ext31 = sext i32 %51 to i64, !dbg !6368
  %add.ptr32 = getelementptr inbounds i8, i8* %50, i64 %idx.ext31, !dbg !6368
  %52 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !6369
  %len33 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %52, i32 0, i32 4, !dbg !6370
  %53 = load i32, i32* %len33, align 8, !dbg !6370
  %54 = load i32, i32* %charf, align 4, !dbg !6371
  %sub34 = sub nsw i32 %53, %54, !dbg !6372
  %conv35 = sext i32 %sub34 to i64, !dbg !6369
  %call36 = call i8* @strncpy(i8* %48, i8* %add.ptr32, i64 %conv35) #7, !dbg !6373
  %55 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !6374
  %len37 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %55, i32 0, i32 4, !dbg !6375
  %56 = load i32, i32* %len37, align 8, !dbg !6375
  %57 = load i32, i32* %charf, align 4, !dbg !6376
  %sub38 = sub nsw i32 %56, %57, !dbg !6377
  store i32 %sub38, i32* %length, align 4, !dbg !6378
  %58 = load i8*, i8** %buf, align 8, !dbg !6379
  %59 = load i32, i32* %length, align 4, !dbg !6380
  %inc = add nsw i32 %59, 1, !dbg !6380
  store i32 %inc, i32* %length, align 4, !dbg !6380
  %idxprom39 = sext i32 %59 to i64, !dbg !6379
  %arrayidx40 = getelementptr inbounds i8, i8* %58, i64 %idxprom39, !dbg !6379
  store i8 10, i8* %arrayidx40, align 1, !dbg !6381
  %60 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !6382
  %next41 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %60, i32 0, i32 0, !dbg !6383
  %61 = load %struct.TextLine*, %struct.TextLine** %next41, align 8, !dbg !6383
  store %struct.TextLine* %61, %struct.TextLine** %tmp, align 8, !dbg !6384
  br label %while.cond42, !dbg !6385

while.cond42:                                     ; preds = %while.body48, %while.end
  %62 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6386
  %tobool43 = icmp ne %struct.TextLine* %62, null, !dbg !6386
  br i1 %tobool43, label %land.rhs44, label %land.end47, !dbg !6387

land.rhs44:                                       ; preds = %while.cond42
  %63 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6388
  %64 = load %struct.TextLine*, %struct.TextLine** %linel, align 8, !dbg !6389
  %cmp45 = icmp ne %struct.TextLine* %63, %64, !dbg !6390
  br label %land.end47

land.end47:                                       ; preds = %land.rhs44, %while.cond42
  %65 = phi i1 [ false, %while.cond42 ], [ %cmp45, %land.rhs44 ], !dbg !6349
  br i1 %65, label %while.body48, label %while.end61, !dbg !6385

while.body48:                                     ; preds = %land.end47
  %66 = load i8*, i8** %buf, align 8, !dbg !6391
  %67 = load i32, i32* %length, align 4, !dbg !6393
  %idx.ext49 = sext i32 %67 to i64, !dbg !6394
  %add.ptr50 = getelementptr inbounds i8, i8* %66, i64 %idx.ext49, !dbg !6394
  %68 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6395
  %line51 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %68, i32 0, i32 2, !dbg !6396
  %69 = load i8*, i8** %line51, align 8, !dbg !6396
  %70 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6397
  %len52 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %70, i32 0, i32 4, !dbg !6398
  %71 = load i32, i32* %len52, align 8, !dbg !6398
  %conv53 = sext i32 %71 to i64, !dbg !6397
  %call54 = call i8* @strncpy(i8* %add.ptr50, i8* %69, i64 %conv53) #7, !dbg !6399
  %72 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6400
  %len55 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %72, i32 0, i32 4, !dbg !6401
  %73 = load i32, i32* %len55, align 8, !dbg !6401
  %74 = load i32, i32* %length, align 4, !dbg !6402
  %add56 = add nsw i32 %74, %73, !dbg !6402
  store i32 %add56, i32* %length, align 4, !dbg !6402
  %75 = load i8*, i8** %buf, align 8, !dbg !6403
  %76 = load i32, i32* %length, align 4, !dbg !6404
  %inc57 = add nsw i32 %76, 1, !dbg !6404
  store i32 %inc57, i32* %length, align 4, !dbg !6404
  %idxprom58 = sext i32 %76 to i64, !dbg !6403
  %arrayidx59 = getelementptr inbounds i8, i8* %75, i64 %idxprom58, !dbg !6403
  store i8 10, i8* %arrayidx59, align 1, !dbg !6405
  %77 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6406
  %next60 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %77, i32 0, i32 0, !dbg !6407
  %78 = load %struct.TextLine*, %struct.TextLine** %next60, align 8, !dbg !6407
  store %struct.TextLine* %78, %struct.TextLine** %tmp, align 8, !dbg !6408
  br label %while.cond42, !dbg !6385, !llvm.loop !6409

while.end61:                                      ; preds = %land.end47
  %79 = load i8*, i8** %buf, align 8, !dbg !6411
  %80 = load i32, i32* %length, align 4, !dbg !6412
  %idx.ext62 = sext i32 %80 to i64, !dbg !6413
  %add.ptr63 = getelementptr inbounds i8, i8* %79, i64 %idx.ext62, !dbg !6413
  %81 = load %struct.TextLine*, %struct.TextLine** %linel, align 8, !dbg !6414
  %line64 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %81, i32 0, i32 2, !dbg !6415
  %82 = load i8*, i8** %line64, align 8, !dbg !6415
  %83 = load i32, i32* %charl, align 4, !dbg !6416
  %conv65 = sext i32 %83 to i64, !dbg !6416
  %call66 = call i8* @strncpy(i8* %add.ptr63, i8* %82, i64 %conv65) #7, !dbg !6417
  %84 = load i32, i32* %charl, align 4, !dbg !6418
  %85 = load i32, i32* %length, align 4, !dbg !6419
  %add67 = add nsw i32 %85, %84, !dbg !6419
  store i32 %add67, i32* %length, align 4, !dbg !6419
  %86 = load i8*, i8** %buf, align 8, !dbg !6420
  %87 = load i32, i32* %length, align 4, !dbg !6421
  %inc68 = add nsw i32 %87, 1, !dbg !6421
  store i32 %inc68, i32* %length, align 4, !dbg !6421
  %idxprom69 = sext i32 %87 to i64, !dbg !6420
  %arrayidx70 = getelementptr inbounds i8, i8* %86, i64 %idxprom69, !dbg !6420
  store i8 10, i8* %arrayidx70, align 1, !dbg !6422
  %88 = load i8*, i8** %buf, align 8, !dbg !6423
  %89 = load i32, i32* %length, align 4, !dbg !6424
  %idxprom71 = sext i32 %89 to i64, !dbg !6423
  %arrayidx72 = getelementptr inbounds i8, i8* %88, i64 %idxprom71, !dbg !6423
  store i8 0, i8* %arrayidx72, align 1, !dbg !6425
  br label %if.end73

if.end73:                                         ; preds = %while.end61, %if.then12
  %90 = load i8*, i8** %buf, align 8, !dbg !6426
  store i8* %90, i8** %retval, align 8, !dbg !6427
  br label %return, !dbg !6427

return:                                           ; preds = %if.end73, %if.then5, %if.then2, %if.then
  %91 = load i8*, i8** %retval, align 8, !dbg !6428
  ret i8* %91, !dbg !6428
}

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8*, i8*, i64) #5

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @txt_find_string(%struct.Text* %text, i8* %findstr, i32 %wrap, i32 %match_case) #0 !dbg !6429 {
entry:
  %retval = alloca i32, align 4
  %text.addr = alloca %struct.Text*, align 8
  %findstr.addr = alloca i8*, align 8
  %wrap.addr = alloca i32, align 4
  %match_case.addr = alloca i32, align 4
  %tl = alloca %struct.TextLine*, align 8
  %startl = alloca %struct.TextLine*, align 8
  %s = alloca i8*, align 8
  %newl = alloca i32, align 4
  %newc = alloca i32, align 4
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !6432, metadata !DIExpression()), !dbg !6433
  store i8* %findstr, i8** %findstr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %findstr.addr, metadata !6434, metadata !DIExpression()), !dbg !6435
  store i32 %wrap, i32* %wrap.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %wrap.addr, metadata !6436, metadata !DIExpression()), !dbg !6437
  store i32 %match_case, i32* %match_case.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %match_case.addr, metadata !6438, metadata !DIExpression()), !dbg !6439
  call void @llvm.dbg.declare(metadata %struct.TextLine** %tl, metadata !6440, metadata !DIExpression()), !dbg !6441
  call void @llvm.dbg.declare(metadata %struct.TextLine** %startl, metadata !6442, metadata !DIExpression()), !dbg !6443
  call void @llvm.dbg.declare(metadata i8** %s, metadata !6444, metadata !DIExpression()), !dbg !6445
  store i8* null, i8** %s, align 8, !dbg !6445
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6446
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !6448
  %1 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !6448
  %tobool = icmp ne %struct.TextLine* %1, null, !dbg !6446
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6449

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6450
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 6, !dbg !6451
  %3 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !6451
  %tobool1 = icmp ne %struct.TextLine* %3, null, !dbg !6450
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6452

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !6453
  br label %return, !dbg !6453

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6454
  call void @txt_order_cursors(%struct.Text* %4, i8 zeroext 0), !dbg !6455
  %5 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6456
  %sell2 = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 6, !dbg !6457
  %6 = load %struct.TextLine*, %struct.TextLine** %sell2, align 8, !dbg !6457
  store %struct.TextLine* %6, %struct.TextLine** %startl, align 8, !dbg !6458
  store %struct.TextLine* %6, %struct.TextLine** %tl, align 8, !dbg !6459
  %7 = load i32, i32* %match_case.addr, align 4, !dbg !6460
  %tobool3 = icmp ne i32 %7, 0, !dbg !6460
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !6462

if.then4:                                         ; preds = %if.end
  %8 = load %struct.TextLine*, %struct.TextLine** %tl, align 8, !dbg !6463
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %8, i32 0, i32 2, !dbg !6464
  %9 = load i8*, i8** %line, align 8, !dbg !6464
  %10 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6465
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %10, i32 0, i32 8, !dbg !6466
  %11 = load i32, i32* %selc, align 4, !dbg !6466
  %idxprom = sext i32 %11 to i64, !dbg !6463
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 %idxprom, !dbg !6463
  %12 = load i8*, i8** %findstr.addr, align 8, !dbg !6467
  %call = call i8* @strstr(i8* %arrayidx, i8* %12) #6, !dbg !6468
  store i8* %call, i8** %s, align 8, !dbg !6469
  br label %if.end10, !dbg !6470

if.else:                                          ; preds = %if.end
  %13 = load %struct.TextLine*, %struct.TextLine** %tl, align 8, !dbg !6471
  %line5 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %13, i32 0, i32 2, !dbg !6472
  %14 = load i8*, i8** %line5, align 8, !dbg !6472
  %15 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6473
  %selc6 = getelementptr inbounds %struct.Text, %struct.Text* %15, i32 0, i32 8, !dbg !6474
  %16 = load i32, i32* %selc6, align 4, !dbg !6474
  %idxprom7 = sext i32 %16 to i64, !dbg !6471
  %arrayidx8 = getelementptr inbounds i8, i8* %14, i64 %idxprom7, !dbg !6471
  %17 = load i8*, i8** %findstr.addr, align 8, !dbg !6475
  %call9 = call i8* @BLI_strcasestr(i8* %arrayidx8, i8* %17), !dbg !6476
  store i8* %call9, i8** %s, align 8, !dbg !6477
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then4
  br label %while.cond, !dbg !6478

while.cond:                                       ; preds = %if.end28, %if.end10
  %18 = load i8*, i8** %s, align 8, !dbg !6479
  %tobool11 = icmp ne i8* %18, null, !dbg !6480
  %lnot = xor i1 %tobool11, true, !dbg !6480
  br i1 %lnot, label %while.body, label %while.end, !dbg !6478

while.body:                                       ; preds = %while.cond
  %19 = load %struct.TextLine*, %struct.TextLine** %tl, align 8, !dbg !6481
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %19, i32 0, i32 0, !dbg !6483
  %20 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !6483
  store %struct.TextLine* %20, %struct.TextLine** %tl, align 8, !dbg !6484
  %21 = load %struct.TextLine*, %struct.TextLine** %tl, align 8, !dbg !6485
  %tobool12 = icmp ne %struct.TextLine* %21, null, !dbg !6485
  br i1 %tobool12, label %if.end18, label %if.then13, !dbg !6487

if.then13:                                        ; preds = %while.body
  %22 = load i32, i32* %wrap.addr, align 4, !dbg !6488
  %tobool14 = icmp ne i32 %22, 0, !dbg !6488
  br i1 %tobool14, label %if.then15, label %if.else16, !dbg !6491

if.then15:                                        ; preds = %if.then13
  %23 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6492
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %23, i32 0, i32 4, !dbg !6493
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !6494
  %24 = load i8*, i8** %first, align 8, !dbg !6494
  %25 = bitcast i8* %24 to %struct.TextLine*, !dbg !6492
  store %struct.TextLine* %25, %struct.TextLine** %tl, align 8, !dbg !6495
  br label %if.end17, !dbg !6496

if.else16:                                        ; preds = %if.then13
  br label %while.end, !dbg !6497

if.end17:                                         ; preds = %if.then15
  br label %if.end18, !dbg !6498

if.end18:                                         ; preds = %if.end17, %while.body
  %26 = load i32, i32* %match_case.addr, align 4, !dbg !6499
  %tobool19 = icmp ne i32 %26, 0, !dbg !6499
  br i1 %tobool19, label %if.then20, label %if.else23, !dbg !6501

if.then20:                                        ; preds = %if.end18
  %27 = load %struct.TextLine*, %struct.TextLine** %tl, align 8, !dbg !6502
  %line21 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %27, i32 0, i32 2, !dbg !6503
  %28 = load i8*, i8** %line21, align 8, !dbg !6503
  %29 = load i8*, i8** %findstr.addr, align 8, !dbg !6504
  %call22 = call i8* @strstr(i8* %28, i8* %29) #6, !dbg !6505
  store i8* %call22, i8** %s, align 8, !dbg !6506
  br label %if.end26, !dbg !6507

if.else23:                                        ; preds = %if.end18
  %30 = load %struct.TextLine*, %struct.TextLine** %tl, align 8, !dbg !6508
  %line24 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %30, i32 0, i32 2, !dbg !6509
  %31 = load i8*, i8** %line24, align 8, !dbg !6509
  %32 = load i8*, i8** %findstr.addr, align 8, !dbg !6510
  %call25 = call i8* @BLI_strcasestr(i8* %31, i8* %32), !dbg !6511
  store i8* %call25, i8** %s, align 8, !dbg !6512
  br label %if.end26

if.end26:                                         ; preds = %if.else23, %if.then20
  %33 = load %struct.TextLine*, %struct.TextLine** %tl, align 8, !dbg !6513
  %34 = load %struct.TextLine*, %struct.TextLine** %startl, align 8, !dbg !6515
  %cmp = icmp eq %struct.TextLine* %33, %34, !dbg !6516
  br i1 %cmp, label %if.then27, label %if.end28, !dbg !6517

if.then27:                                        ; preds = %if.end26
  br label %while.end, !dbg !6518

if.end28:                                         ; preds = %if.end26
  br label %while.cond, !dbg !6478, !llvm.loop !6519

while.end:                                        ; preds = %if.then27, %if.else16, %while.cond
  %35 = load i8*, i8** %s, align 8, !dbg !6521
  %tobool29 = icmp ne i8* %35, null, !dbg !6521
  br i1 %tobool29, label %if.then30, label %if.else38, !dbg !6523

if.then30:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata i32* %newl, metadata !6524, metadata !DIExpression()), !dbg !6526
  %36 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6527
  %lines31 = getelementptr inbounds %struct.Text, %struct.Text* %36, i32 0, i32 4, !dbg !6528
  %first32 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines31, i32 0, i32 0, !dbg !6529
  %37 = load i8*, i8** %first32, align 8, !dbg !6529
  %38 = bitcast i8* %37 to %struct.TextLine*, !dbg !6527
  %39 = load %struct.TextLine*, %struct.TextLine** %tl, align 8, !dbg !6530
  %call33 = call i32 @txt_get_span(%struct.TextLine* %38, %struct.TextLine* %39), !dbg !6531
  store i32 %call33, i32* %newl, align 4, !dbg !6526
  call void @llvm.dbg.declare(metadata i32* %newc, metadata !6532, metadata !DIExpression()), !dbg !6533
  %40 = load i8*, i8** %s, align 8, !dbg !6534
  %41 = load %struct.TextLine*, %struct.TextLine** %tl, align 8, !dbg !6535
  %line34 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %41, i32 0, i32 2, !dbg !6536
  %42 = load i8*, i8** %line34, align 8, !dbg !6536
  %sub.ptr.lhs.cast = ptrtoint i8* %40 to i64, !dbg !6537
  %sub.ptr.rhs.cast = ptrtoint i8* %42 to i64, !dbg !6537
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6537
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !6538
  store i32 %conv, i32* %newc, align 4, !dbg !6533
  %43 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6539
  %44 = load i32, i32* %newl, align 4, !dbg !6540
  %45 = load i32, i32* %newc, align 4, !dbg !6541
  call void @txt_move_to(%struct.Text* %43, i32 %44, i32 %45, i8 zeroext 0), !dbg !6542
  %46 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6543
  %47 = load i32, i32* %newl, align 4, !dbg !6544
  %48 = load i32, i32* %newc, align 4, !dbg !6545
  %conv35 = sext i32 %48 to i64, !dbg !6545
  %49 = load i8*, i8** %findstr.addr, align 8, !dbg !6546
  %call36 = call i64 @strlen(i8* %49) #6, !dbg !6547
  %add = add i64 %conv35, %call36, !dbg !6548
  %conv37 = trunc i64 %add to i32, !dbg !6545
  call void @txt_move_to(%struct.Text* %46, i32 %47, i32 %conv37, i8 zeroext 1), !dbg !6549
  store i32 1, i32* %retval, align 4, !dbg !6550
  br label %return, !dbg !6550

if.else38:                                        ; preds = %while.end
  store i32 0, i32* %retval, align 4, !dbg !6551
  br label %return, !dbg !6551

return:                                           ; preds = %if.else38, %if.then30, %if.then
  %50 = load i32, i32* %retval, align 4, !dbg !6552
  ret i32 %50, !dbg !6552
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strstr(i8*, i8*) #3

declare dso_local i8* @BLI_strcasestr(i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @txt_sel_to_buf(%struct.Text* %text) #0 !dbg !6553 {
entry:
  %retval = alloca i8*, align 8
  %text.addr = alloca %struct.Text*, align 8
  %buf = alloca i8*, align 8
  %length = alloca i32, align 4
  %tmp = alloca %struct.TextLine*, align 8
  %linef = alloca %struct.TextLine*, align 8
  %linel = alloca %struct.TextLine*, align 8
  %charf = alloca i32, align 4
  %charl = alloca i32, align 4
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !6554, metadata !DIExpression()), !dbg !6555
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6556, metadata !DIExpression()), !dbg !6557
  call void @llvm.dbg.declare(metadata i32* %length, metadata !6558, metadata !DIExpression()), !dbg !6559
  store i32 0, i32* %length, align 4, !dbg !6559
  call void @llvm.dbg.declare(metadata %struct.TextLine** %tmp, metadata !6560, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.declare(metadata %struct.TextLine** %linef, metadata !6562, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.declare(metadata %struct.TextLine** %linel, metadata !6564, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.declare(metadata i32* %charf, metadata !6566, metadata !DIExpression()), !dbg !6567
  call void @llvm.dbg.declare(metadata i32* %charl, metadata !6568, metadata !DIExpression()), !dbg !6569
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6570
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !6572
  %1 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !6572
  %tobool = icmp ne %struct.TextLine* %1, null, !dbg !6570
  br i1 %tobool, label %if.end, label %if.then, !dbg !6573

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !6574
  br label %return, !dbg !6574

if.end:                                           ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6575
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 6, !dbg !6577
  %3 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !6577
  %tobool1 = icmp ne %struct.TextLine* %3, null, !dbg !6575
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !6578

if.then2:                                         ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !6579
  br label %return, !dbg !6579

if.end3:                                          ; preds = %if.end
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6580
  %curl4 = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 5, !dbg !6582
  %5 = load %struct.TextLine*, %struct.TextLine** %curl4, align 8, !dbg !6582
  %6 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6583
  %sell5 = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 6, !dbg !6584
  %7 = load %struct.TextLine*, %struct.TextLine** %sell5, align 8, !dbg !6584
  %cmp = icmp eq %struct.TextLine* %5, %7, !dbg !6585
  br i1 %cmp, label %if.then6, label %if.else15, !dbg !6586

if.then6:                                         ; preds = %if.end3
  %8 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6587
  %curl7 = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 5, !dbg !6589
  %9 = load %struct.TextLine*, %struct.TextLine** %curl7, align 8, !dbg !6589
  store %struct.TextLine* %9, %struct.TextLine** %linel, align 8, !dbg !6590
  store %struct.TextLine* %9, %struct.TextLine** %linef, align 8, !dbg !6591
  %10 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6592
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %10, i32 0, i32 7, !dbg !6594
  %11 = load i32, i32* %curc, align 8, !dbg !6594
  %12 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6595
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %12, i32 0, i32 8, !dbg !6596
  %13 = load i32, i32* %selc, align 4, !dbg !6596
  %cmp8 = icmp slt i32 %11, %13, !dbg !6597
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !6598

if.then9:                                         ; preds = %if.then6
  %14 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6599
  %curc10 = getelementptr inbounds %struct.Text, %struct.Text* %14, i32 0, i32 7, !dbg !6601
  %15 = load i32, i32* %curc10, align 8, !dbg !6601
  store i32 %15, i32* %charf, align 4, !dbg !6602
  %16 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6603
  %selc11 = getelementptr inbounds %struct.Text, %struct.Text* %16, i32 0, i32 8, !dbg !6604
  %17 = load i32, i32* %selc11, align 4, !dbg !6604
  store i32 %17, i32* %charl, align 4, !dbg !6605
  br label %if.end14, !dbg !6606

if.else:                                          ; preds = %if.then6
  %18 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6607
  %selc12 = getelementptr inbounds %struct.Text, %struct.Text* %18, i32 0, i32 8, !dbg !6609
  %19 = load i32, i32* %selc12, align 4, !dbg !6609
  store i32 %19, i32* %charf, align 4, !dbg !6610
  %20 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6611
  %curc13 = getelementptr inbounds %struct.Text, %struct.Text* %20, i32 0, i32 7, !dbg !6612
  %21 = load i32, i32* %curc13, align 8, !dbg !6612
  store i32 %21, i32* %charl, align 4, !dbg !6613
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then9
  br label %if.end30, !dbg !6614

if.else15:                                        ; preds = %if.end3
  %22 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6615
  %curl16 = getelementptr inbounds %struct.Text, %struct.Text* %22, i32 0, i32 5, !dbg !6617
  %23 = load %struct.TextLine*, %struct.TextLine** %curl16, align 8, !dbg !6617
  %24 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6618
  %sell17 = getelementptr inbounds %struct.Text, %struct.Text* %24, i32 0, i32 6, !dbg !6619
  %25 = load %struct.TextLine*, %struct.TextLine** %sell17, align 8, !dbg !6619
  %call = call i32 @txt_get_span(%struct.TextLine* %23, %struct.TextLine* %25), !dbg !6620
  %cmp18 = icmp slt i32 %call, 0, !dbg !6621
  br i1 %cmp18, label %if.then19, label %if.else24, !dbg !6622

if.then19:                                        ; preds = %if.else15
  %26 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6623
  %sell20 = getelementptr inbounds %struct.Text, %struct.Text* %26, i32 0, i32 6, !dbg !6625
  %27 = load %struct.TextLine*, %struct.TextLine** %sell20, align 8, !dbg !6625
  store %struct.TextLine* %27, %struct.TextLine** %linef, align 8, !dbg !6626
  %28 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6627
  %curl21 = getelementptr inbounds %struct.Text, %struct.Text* %28, i32 0, i32 5, !dbg !6628
  %29 = load %struct.TextLine*, %struct.TextLine** %curl21, align 8, !dbg !6628
  store %struct.TextLine* %29, %struct.TextLine** %linel, align 8, !dbg !6629
  %30 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6630
  %selc22 = getelementptr inbounds %struct.Text, %struct.Text* %30, i32 0, i32 8, !dbg !6631
  %31 = load i32, i32* %selc22, align 4, !dbg !6631
  store i32 %31, i32* %charf, align 4, !dbg !6632
  %32 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6633
  %curc23 = getelementptr inbounds %struct.Text, %struct.Text* %32, i32 0, i32 7, !dbg !6634
  %33 = load i32, i32* %curc23, align 8, !dbg !6634
  store i32 %33, i32* %charl, align 4, !dbg !6635
  br label %if.end29, !dbg !6636

if.else24:                                        ; preds = %if.else15
  %34 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6637
  %curl25 = getelementptr inbounds %struct.Text, %struct.Text* %34, i32 0, i32 5, !dbg !6639
  %35 = load %struct.TextLine*, %struct.TextLine** %curl25, align 8, !dbg !6639
  store %struct.TextLine* %35, %struct.TextLine** %linef, align 8, !dbg !6640
  %36 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6641
  %sell26 = getelementptr inbounds %struct.Text, %struct.Text* %36, i32 0, i32 6, !dbg !6642
  %37 = load %struct.TextLine*, %struct.TextLine** %sell26, align 8, !dbg !6642
  store %struct.TextLine* %37, %struct.TextLine** %linel, align 8, !dbg !6643
  %38 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6644
  %curc27 = getelementptr inbounds %struct.Text, %struct.Text* %38, i32 0, i32 7, !dbg !6645
  %39 = load i32, i32* %curc27, align 8, !dbg !6645
  store i32 %39, i32* %charf, align 4, !dbg !6646
  %40 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6647
  %selc28 = getelementptr inbounds %struct.Text, %struct.Text* %40, i32 0, i32 8, !dbg !6648
  %41 = load i32, i32* %selc28, align 4, !dbg !6648
  store i32 %41, i32* %charl, align 4, !dbg !6649
  br label %if.end29

if.end29:                                         ; preds = %if.else24, %if.then19
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.end14
  %42 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !6650
  %43 = load %struct.TextLine*, %struct.TextLine** %linel, align 8, !dbg !6652
  %cmp31 = icmp eq %struct.TextLine* %42, %43, !dbg !6653
  br i1 %cmp31, label %if.then32, label %if.else37, !dbg !6654

if.then32:                                        ; preds = %if.end30
  %44 = load i32, i32* %charl, align 4, !dbg !6655
  %45 = load i32, i32* %charf, align 4, !dbg !6657
  %sub = sub nsw i32 %44, %45, !dbg !6658
  store i32 %sub, i32* %length, align 4, !dbg !6659
  %46 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6660
  %47 = load i32, i32* %length, align 4, !dbg !6661
  %add = add nsw i32 %47, 1, !dbg !6662
  %conv = sext i32 %add to i64, !dbg !6661
  %call33 = call i8* %46(i64 %conv, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0)), !dbg !6660
  store i8* %call33, i8** %buf, align 8, !dbg !6663
  %48 = load i8*, i8** %buf, align 8, !dbg !6664
  %49 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !6665
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %49, i32 0, i32 2, !dbg !6666
  %50 = load i8*, i8** %line, align 8, !dbg !6666
  %51 = load i32, i32* %charf, align 4, !dbg !6667
  %idx.ext = sext i32 %51 to i64, !dbg !6668
  %add.ptr = getelementptr inbounds i8, i8* %50, i64 %idx.ext, !dbg !6668
  %52 = load i32, i32* %length, align 4, !dbg !6669
  %add34 = add nsw i32 %52, 1, !dbg !6670
  %conv35 = sext i32 %add34 to i64, !dbg !6669
  %call36 = call i8* @BLI_strncpy(i8* %48, i8* %add.ptr, i64 %conv35), !dbg !6671
  br label %if.end90, !dbg !6672

if.else37:                                        ; preds = %if.end30
  %53 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !6673
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %53, i32 0, i32 4, !dbg !6675
  %54 = load i32, i32* %len, align 8, !dbg !6675
  %55 = load i32, i32* %charf, align 4, !dbg !6676
  %sub38 = sub nsw i32 %54, %55, !dbg !6677
  %56 = load i32, i32* %length, align 4, !dbg !6678
  %add39 = add nsw i32 %56, %sub38, !dbg !6678
  store i32 %add39, i32* %length, align 4, !dbg !6678
  %57 = load i32, i32* %charl, align 4, !dbg !6679
  %58 = load i32, i32* %length, align 4, !dbg !6680
  %add40 = add nsw i32 %58, %57, !dbg !6680
  store i32 %add40, i32* %length, align 4, !dbg !6680
  %59 = load i32, i32* %length, align 4, !dbg !6681
  %inc = add nsw i32 %59, 1, !dbg !6681
  store i32 %inc, i32* %length, align 4, !dbg !6681
  %60 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !6682
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %60, i32 0, i32 0, !dbg !6683
  %61 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !6683
  store %struct.TextLine* %61, %struct.TextLine** %tmp, align 8, !dbg !6684
  br label %while.cond, !dbg !6685

while.cond:                                       ; preds = %while.body, %if.else37
  %62 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6686
  %tobool41 = icmp ne %struct.TextLine* %62, null, !dbg !6686
  br i1 %tobool41, label %land.rhs, label %land.end, !dbg !6687

land.rhs:                                         ; preds = %while.cond
  %63 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6688
  %64 = load %struct.TextLine*, %struct.TextLine** %linel, align 8, !dbg !6689
  %cmp42 = icmp ne %struct.TextLine* %63, %64, !dbg !6690
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %65 = phi i1 [ false, %while.cond ], [ %cmp42, %land.rhs ], !dbg !6691
  br i1 %65, label %while.body, label %while.end, !dbg !6685

while.body:                                       ; preds = %land.end
  %66 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6692
  %len44 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %66, i32 0, i32 4, !dbg !6694
  %67 = load i32, i32* %len44, align 8, !dbg !6694
  %add45 = add nsw i32 %67, 1, !dbg !6695
  %68 = load i32, i32* %length, align 4, !dbg !6696
  %add46 = add nsw i32 %68, %add45, !dbg !6696
  store i32 %add46, i32* %length, align 4, !dbg !6696
  %69 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6697
  %next47 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %69, i32 0, i32 0, !dbg !6698
  %70 = load %struct.TextLine*, %struct.TextLine** %next47, align 8, !dbg !6698
  store %struct.TextLine* %70, %struct.TextLine** %tmp, align 8, !dbg !6699
  br label %while.cond, !dbg !6685, !llvm.loop !6700

while.end:                                        ; preds = %land.end
  %71 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6702
  %72 = load i32, i32* %length, align 4, !dbg !6703
  %add48 = add nsw i32 %72, 1, !dbg !6704
  %conv49 = sext i32 %add48 to i64, !dbg !6703
  %call50 = call i8* %71(i64 %conv49, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0)), !dbg !6702
  store i8* %call50, i8** %buf, align 8, !dbg !6705
  %73 = load i8*, i8** %buf, align 8, !dbg !6706
  %74 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !6707
  %line51 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %74, i32 0, i32 2, !dbg !6708
  %75 = load i8*, i8** %line51, align 8, !dbg !6708
  %76 = load i32, i32* %charf, align 4, !dbg !6709
  %idx.ext52 = sext i32 %76 to i64, !dbg !6710
  %add.ptr53 = getelementptr inbounds i8, i8* %75, i64 %idx.ext52, !dbg !6710
  %77 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !6711
  %len54 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %77, i32 0, i32 4, !dbg !6712
  %78 = load i32, i32* %len54, align 8, !dbg !6712
  %79 = load i32, i32* %charf, align 4, !dbg !6713
  %sub55 = sub nsw i32 %78, %79, !dbg !6714
  %conv56 = sext i32 %sub55 to i64, !dbg !6711
  %call57 = call i8* @strncpy(i8* %73, i8* %add.ptr53, i64 %conv56) #7, !dbg !6715
  %80 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !6716
  %len58 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %80, i32 0, i32 4, !dbg !6717
  %81 = load i32, i32* %len58, align 8, !dbg !6717
  %82 = load i32, i32* %charf, align 4, !dbg !6718
  %sub59 = sub nsw i32 %81, %82, !dbg !6719
  store i32 %sub59, i32* %length, align 4, !dbg !6720
  %83 = load i8*, i8** %buf, align 8, !dbg !6721
  %84 = load i32, i32* %length, align 4, !dbg !6722
  %inc60 = add nsw i32 %84, 1, !dbg !6722
  store i32 %inc60, i32* %length, align 4, !dbg !6722
  %idxprom = sext i32 %84 to i64, !dbg !6721
  %arrayidx = getelementptr inbounds i8, i8* %83, i64 %idxprom, !dbg !6721
  store i8 10, i8* %arrayidx, align 1, !dbg !6723
  %85 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !6724
  %next61 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %85, i32 0, i32 0, !dbg !6725
  %86 = load %struct.TextLine*, %struct.TextLine** %next61, align 8, !dbg !6725
  store %struct.TextLine* %86, %struct.TextLine** %tmp, align 8, !dbg !6726
  br label %while.cond62, !dbg !6727

while.cond62:                                     ; preds = %while.body68, %while.end
  %87 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6728
  %tobool63 = icmp ne %struct.TextLine* %87, null, !dbg !6728
  br i1 %tobool63, label %land.rhs64, label %land.end67, !dbg !6729

land.rhs64:                                       ; preds = %while.cond62
  %88 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6730
  %89 = load %struct.TextLine*, %struct.TextLine** %linel, align 8, !dbg !6731
  %cmp65 = icmp ne %struct.TextLine* %88, %89, !dbg !6732
  br label %land.end67

land.end67:                                       ; preds = %land.rhs64, %while.cond62
  %90 = phi i1 [ false, %while.cond62 ], [ %cmp65, %land.rhs64 ], !dbg !6691
  br i1 %90, label %while.body68, label %while.end81, !dbg !6727

while.body68:                                     ; preds = %land.end67
  %91 = load i8*, i8** %buf, align 8, !dbg !6733
  %92 = load i32, i32* %length, align 4, !dbg !6735
  %idx.ext69 = sext i32 %92 to i64, !dbg !6736
  %add.ptr70 = getelementptr inbounds i8, i8* %91, i64 %idx.ext69, !dbg !6736
  %93 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6737
  %line71 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %93, i32 0, i32 2, !dbg !6738
  %94 = load i8*, i8** %line71, align 8, !dbg !6738
  %95 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6739
  %len72 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %95, i32 0, i32 4, !dbg !6740
  %96 = load i32, i32* %len72, align 8, !dbg !6740
  %conv73 = sext i32 %96 to i64, !dbg !6739
  %call74 = call i8* @strncpy(i8* %add.ptr70, i8* %94, i64 %conv73) #7, !dbg !6741
  %97 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6742
  %len75 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %97, i32 0, i32 4, !dbg !6743
  %98 = load i32, i32* %len75, align 8, !dbg !6743
  %99 = load i32, i32* %length, align 4, !dbg !6744
  %add76 = add nsw i32 %99, %98, !dbg !6744
  store i32 %add76, i32* %length, align 4, !dbg !6744
  %100 = load i8*, i8** %buf, align 8, !dbg !6745
  %101 = load i32, i32* %length, align 4, !dbg !6746
  %inc77 = add nsw i32 %101, 1, !dbg !6746
  store i32 %inc77, i32* %length, align 4, !dbg !6746
  %idxprom78 = sext i32 %101 to i64, !dbg !6745
  %arrayidx79 = getelementptr inbounds i8, i8* %100, i64 %idxprom78, !dbg !6745
  store i8 10, i8* %arrayidx79, align 1, !dbg !6747
  %102 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6748
  %next80 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %102, i32 0, i32 0, !dbg !6749
  %103 = load %struct.TextLine*, %struct.TextLine** %next80, align 8, !dbg !6749
  store %struct.TextLine* %103, %struct.TextLine** %tmp, align 8, !dbg !6750
  br label %while.cond62, !dbg !6727, !llvm.loop !6751

while.end81:                                      ; preds = %land.end67
  %104 = load i8*, i8** %buf, align 8, !dbg !6753
  %105 = load i32, i32* %length, align 4, !dbg !6754
  %idx.ext82 = sext i32 %105 to i64, !dbg !6755
  %add.ptr83 = getelementptr inbounds i8, i8* %104, i64 %idx.ext82, !dbg !6755
  %106 = load %struct.TextLine*, %struct.TextLine** %linel, align 8, !dbg !6756
  %line84 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %106, i32 0, i32 2, !dbg !6757
  %107 = load i8*, i8** %line84, align 8, !dbg !6757
  %108 = load i32, i32* %charl, align 4, !dbg !6758
  %conv85 = sext i32 %108 to i64, !dbg !6758
  %call86 = call i8* @strncpy(i8* %add.ptr83, i8* %107, i64 %conv85) #7, !dbg !6759
  %109 = load i32, i32* %charl, align 4, !dbg !6760
  %110 = load i32, i32* %length, align 4, !dbg !6761
  %add87 = add nsw i32 %110, %109, !dbg !6761
  store i32 %add87, i32* %length, align 4, !dbg !6761
  %111 = load i8*, i8** %buf, align 8, !dbg !6762
  %112 = load i32, i32* %length, align 4, !dbg !6763
  %idxprom88 = sext i32 %112 to i64, !dbg !6762
  %arrayidx89 = getelementptr inbounds i8, i8* %111, i64 %idxprom88, !dbg !6762
  store i8 0, i8* %arrayidx89, align 1, !dbg !6764
  br label %if.end90

if.end90:                                         ; preds = %while.end81, %if.then32
  %113 = load i8*, i8** %buf, align 8, !dbg !6765
  store i8* %113, i8** %retval, align 8, !dbg !6766
  br label %return, !dbg !6766

return:                                           ; preds = %if.end90, %if.then2, %if.then
  %114 = load i8*, i8** %retval, align 8, !dbg !6767
  ret i8* %114, !dbg !6767
}

declare dso_local i8* @BLI_strdupn(i8*, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal void @txt_undo_add_blockop(%struct.Text* %text, i32 %op, i8* %buf) #0 !dbg !6768 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %op.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %length = alloca i32, align 4
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !6771, metadata !DIExpression()), !dbg !6772
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !6773, metadata !DIExpression()), !dbg !6774
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6775, metadata !DIExpression()), !dbg !6776
  call void @llvm.dbg.declare(metadata i32* %length, metadata !6777, metadata !DIExpression()), !dbg !6778
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !6779
  %call = call i64 @strlen(i8* %0) #6, !dbg !6780
  %conv = trunc i64 %call to i32, !dbg !6780
  store i32 %conv, i32* %length, align 4, !dbg !6778
  %1 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6781
  %2 = load i32, i32* %length, align 4, !dbg !6783
  %add = add i32 %2, 11, !dbg !6784
  %add1 = add i32 %add, 12, !dbg !6785
  %call2 = call zeroext i8 @max_undo_test(%struct.Text* %1, i32 %add1), !dbg !6786
  %tobool = icmp ne i8 %call2, 0, !dbg !6786
  br i1 %tobool, label %if.end, label %if.then, !dbg !6787

if.then:                                          ; preds = %entry
  br label %return, !dbg !6788

if.end:                                           ; preds = %entry
  %3 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6789
  %undo_pos = getelementptr inbounds %struct.Text, %struct.Text* %3, i32 0, i32 10, !dbg !6790
  %4 = load i32, i32* %undo_pos, align 8, !dbg !6791
  %inc = add nsw i32 %4, 1, !dbg !6791
  store i32 %inc, i32* %undo_pos, align 8, !dbg !6791
  %5 = load i32, i32* %op.addr, align 4, !dbg !6792
  %conv3 = trunc i32 %5 to i8, !dbg !6792
  %6 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6793
  %undo_buf = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 9, !dbg !6794
  %7 = load i8*, i8** %undo_buf, align 8, !dbg !6794
  %8 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6795
  %undo_pos4 = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 10, !dbg !6796
  %9 = load i32, i32* %undo_pos4, align 8, !dbg !6796
  %idxprom = sext i32 %9 to i64, !dbg !6793
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !6793
  store i8 %conv3, i8* %arrayidx, align 1, !dbg !6797
  %10 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6798
  %undo_pos5 = getelementptr inbounds %struct.Text, %struct.Text* %10, i32 0, i32 10, !dbg !6799
  %11 = load i32, i32* %undo_pos5, align 8, !dbg !6800
  %inc6 = add nsw i32 %11, 1, !dbg !6800
  store i32 %inc6, i32* %undo_pos5, align 8, !dbg !6800
  %12 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6801
  call void @txt_undo_store_cursors(%struct.Text* %12), !dbg !6802
  %13 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6803
  %undo_buf7 = getelementptr inbounds %struct.Text, %struct.Text* %13, i32 0, i32 9, !dbg !6804
  %14 = load i8*, i8** %undo_buf7, align 8, !dbg !6804
  %15 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6805
  %undo_pos8 = getelementptr inbounds %struct.Text, %struct.Text* %15, i32 0, i32 10, !dbg !6806
  %16 = load i32, i32* %length, align 4, !dbg !6807
  call void @txt_undo_store_uint32(i8* %14, i32* %undo_pos8, i32 %16), !dbg !6808
  %17 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6809
  %undo_buf9 = getelementptr inbounds %struct.Text, %struct.Text* %17, i32 0, i32 9, !dbg !6810
  %18 = load i8*, i8** %undo_buf9, align 8, !dbg !6810
  %19 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6811
  %undo_pos10 = getelementptr inbounds %struct.Text, %struct.Text* %19, i32 0, i32 10, !dbg !6812
  %20 = load i32, i32* %undo_pos10, align 8, !dbg !6812
  %idx.ext = sext i32 %20 to i64, !dbg !6813
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 %idx.ext, !dbg !6813
  %21 = load i8*, i8** %buf.addr, align 8, !dbg !6814
  %22 = load i32, i32* %length, align 4, !dbg !6815
  %conv11 = zext i32 %22 to i64, !dbg !6815
  %call12 = call i8* @strncpy(i8* %add.ptr, i8* %21, i64 %conv11) #7, !dbg !6816
  %23 = load i32, i32* %length, align 4, !dbg !6817
  %24 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6818
  %undo_pos13 = getelementptr inbounds %struct.Text, %struct.Text* %24, i32 0, i32 10, !dbg !6819
  %25 = load i32, i32* %undo_pos13, align 8, !dbg !6820
  %add14 = add i32 %25, %23, !dbg !6820
  store i32 %add14, i32* %undo_pos13, align 8, !dbg !6820
  %26 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6821
  %undo_buf15 = getelementptr inbounds %struct.Text, %struct.Text* %26, i32 0, i32 9, !dbg !6822
  %27 = load i8*, i8** %undo_buf15, align 8, !dbg !6822
  %28 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6823
  %undo_pos16 = getelementptr inbounds %struct.Text, %struct.Text* %28, i32 0, i32 10, !dbg !6824
  %29 = load i32, i32* %length, align 4, !dbg !6825
  call void @txt_undo_store_uint32(i8* %27, i32* %undo_pos16, i32 %29), !dbg !6826
  %30 = load i32, i32* %op.addr, align 4, !dbg !6827
  %conv17 = trunc i32 %30 to i8, !dbg !6827
  %31 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6828
  %undo_buf18 = getelementptr inbounds %struct.Text, %struct.Text* %31, i32 0, i32 9, !dbg !6829
  %32 = load i8*, i8** %undo_buf18, align 8, !dbg !6829
  %33 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6830
  %undo_pos19 = getelementptr inbounds %struct.Text, %struct.Text* %33, i32 0, i32 10, !dbg !6831
  %34 = load i32, i32* %undo_pos19, align 8, !dbg !6831
  %idxprom20 = sext i32 %34 to i64, !dbg !6828
  %arrayidx21 = getelementptr inbounds i8, i8* %32, i64 %idxprom20, !dbg !6828
  store i8 %conv17, i8* %arrayidx21, align 1, !dbg !6832
  %35 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6833
  %undo_buf22 = getelementptr inbounds %struct.Text, %struct.Text* %35, i32 0, i32 9, !dbg !6834
  %36 = load i8*, i8** %undo_buf22, align 8, !dbg !6834
  %37 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6835
  %undo_pos23 = getelementptr inbounds %struct.Text, %struct.Text* %37, i32 0, i32 10, !dbg !6836
  %38 = load i32, i32* %undo_pos23, align 8, !dbg !6836
  %add24 = add nsw i32 %38, 1, !dbg !6837
  %idxprom25 = sext i32 %add24 to i64, !dbg !6833
  %arrayidx26 = getelementptr inbounds i8, i8* %36, i64 %idxprom25, !dbg !6833
  store i8 0, i8* %arrayidx26, align 1, !dbg !6838
  br label %return, !dbg !6839

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6839
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @txt_add_raw_char(%struct.Text* %text, i32 %add) #0 !dbg !6840 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %add.addr = alloca i32, align 4
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !6843, metadata !DIExpression()), !dbg !6844
  store i32 %add, i32* %add.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %add.addr, metadata !6845, metadata !DIExpression()), !dbg !6846
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6847
  %1 = load i32, i32* %add.addr, align 4, !dbg !6848
  %call = call zeroext i8 @txt_add_char_intern(%struct.Text* %0, i32 %1, i8 zeroext 0), !dbg !6849
  ret i8 %call, !dbg !6850
}

declare dso_local i32 @BLI_str_utf8_as_unicode_step(i8*, i64*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_split_curline(%struct.Text* %text) #0 !dbg !6851 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %ins = alloca %struct.TextLine*, align 8
  %left = alloca i8*, align 8
  %right = alloca i8*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !6852, metadata !DIExpression()), !dbg !6853
  call void @llvm.dbg.declare(metadata %struct.TextLine** %ins, metadata !6854, metadata !DIExpression()), !dbg !6855
  call void @llvm.dbg.declare(metadata i8** %left, metadata !6856, metadata !DIExpression()), !dbg !6857
  call void @llvm.dbg.declare(metadata i8** %right, metadata !6858, metadata !DIExpression()), !dbg !6859
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6860
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !6862
  %1 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !6862
  %tobool = icmp ne %struct.TextLine* %1, null, !dbg !6860
  br i1 %tobool, label %if.end, label %if.then, !dbg !6863

if.then:                                          ; preds = %entry
  br label %return, !dbg !6864

if.end:                                           ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6865
  call void @txt_delete_sel(%struct.Text* %2), !dbg !6866
  %3 = load i8, i8* @undoing, align 1, !dbg !6867
  %tobool1 = icmp ne i8 %3, 0, !dbg !6867
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !6869

if.then2:                                         ; preds = %if.end
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6870
  call void @txt_undo_add_charop(%struct.Text* %4, i32 11, i32 10), !dbg !6871
  br label %if.end3, !dbg !6871

if.end3:                                          ; preds = %if.then2, %if.end
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6872
  %6 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6873
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 7, !dbg !6874
  %7 = load i32, i32* %curc, align 8, !dbg !6874
  %add = add nsw i32 %7, 1, !dbg !6875
  %conv = sext i32 %add to i64, !dbg !6873
  %call = call i8* %5(i64 %conv, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)), !dbg !6872
  store i8* %call, i8** %left, align 8, !dbg !6876
  %8 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6877
  %curc4 = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 7, !dbg !6879
  %9 = load i32, i32* %curc4, align 8, !dbg !6879
  %tobool5 = icmp ne i32 %9, 0, !dbg !6877
  br i1 %tobool5, label %if.then6, label %if.end10, !dbg !6880

if.then6:                                         ; preds = %if.end3
  %10 = load i8*, i8** %left, align 8, !dbg !6881
  %11 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6882
  %curl7 = getelementptr inbounds %struct.Text, %struct.Text* %11, i32 0, i32 5, !dbg !6883
  %12 = load %struct.TextLine*, %struct.TextLine** %curl7, align 8, !dbg !6883
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %12, i32 0, i32 2, !dbg !6884
  %13 = load i8*, i8** %line, align 8, !dbg !6884
  %14 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6885
  %curc8 = getelementptr inbounds %struct.Text, %struct.Text* %14, i32 0, i32 7, !dbg !6886
  %15 = load i32, i32* %curc8, align 8, !dbg !6886
  %conv9 = sext i32 %15 to i64, !dbg !6885
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %13, i64 %conv9, i1 false), !dbg !6887
  br label %if.end10, !dbg !6887

if.end10:                                         ; preds = %if.then6, %if.end3
  %16 = load i8*, i8** %left, align 8, !dbg !6888
  %17 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6889
  %curc11 = getelementptr inbounds %struct.Text, %struct.Text* %17, i32 0, i32 7, !dbg !6890
  %18 = load i32, i32* %curc11, align 8, !dbg !6890
  %idxprom = sext i32 %18 to i64, !dbg !6888
  %arrayidx = getelementptr inbounds i8, i8* %16, i64 %idxprom, !dbg !6888
  store i8 0, i8* %arrayidx, align 1, !dbg !6891
  %19 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6892
  %20 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6893
  %curl12 = getelementptr inbounds %struct.Text, %struct.Text* %20, i32 0, i32 5, !dbg !6894
  %21 = load %struct.TextLine*, %struct.TextLine** %curl12, align 8, !dbg !6894
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %21, i32 0, i32 4, !dbg !6895
  %22 = load i32, i32* %len, align 8, !dbg !6895
  %23 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6896
  %curc13 = getelementptr inbounds %struct.Text, %struct.Text* %23, i32 0, i32 7, !dbg !6897
  %24 = load i32, i32* %curc13, align 8, !dbg !6897
  %sub = sub nsw i32 %22, %24, !dbg !6898
  %add14 = add nsw i32 %sub, 1, !dbg !6899
  %conv15 = sext i32 %add14 to i64, !dbg !6893
  %call16 = call i8* %19(i64 %conv15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)), !dbg !6892
  store i8* %call16, i8** %right, align 8, !dbg !6900
  %25 = load i8*, i8** %right, align 8, !dbg !6901
  %26 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6902
  %curl17 = getelementptr inbounds %struct.Text, %struct.Text* %26, i32 0, i32 5, !dbg !6903
  %27 = load %struct.TextLine*, %struct.TextLine** %curl17, align 8, !dbg !6903
  %line18 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %27, i32 0, i32 2, !dbg !6904
  %28 = load i8*, i8** %line18, align 8, !dbg !6904
  %29 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6905
  %curc19 = getelementptr inbounds %struct.Text, %struct.Text* %29, i32 0, i32 7, !dbg !6906
  %30 = load i32, i32* %curc19, align 8, !dbg !6906
  %idx.ext = sext i32 %30 to i64, !dbg !6907
  %add.ptr = getelementptr inbounds i8, i8* %28, i64 %idx.ext, !dbg !6907
  %31 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6908
  %curl20 = getelementptr inbounds %struct.Text, %struct.Text* %31, i32 0, i32 5, !dbg !6909
  %32 = load %struct.TextLine*, %struct.TextLine** %curl20, align 8, !dbg !6909
  %len21 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %32, i32 0, i32 4, !dbg !6910
  %33 = load i32, i32* %len21, align 8, !dbg !6910
  %34 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6911
  %curc22 = getelementptr inbounds %struct.Text, %struct.Text* %34, i32 0, i32 7, !dbg !6912
  %35 = load i32, i32* %curc22, align 8, !dbg !6912
  %sub23 = sub nsw i32 %33, %35, !dbg !6913
  %add24 = add nsw i32 %sub23, 1, !dbg !6914
  %conv25 = sext i32 %add24 to i64, !dbg !6908
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %add.ptr, i64 %conv25, i1 false), !dbg !6915
  %36 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6916
  %37 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6917
  %curl26 = getelementptr inbounds %struct.Text, %struct.Text* %37, i32 0, i32 5, !dbg !6918
  %38 = load %struct.TextLine*, %struct.TextLine** %curl26, align 8, !dbg !6918
  %line27 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %38, i32 0, i32 2, !dbg !6919
  %39 = load i8*, i8** %line27, align 8, !dbg !6919
  call void %36(i8* %39), !dbg !6916
  %40 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6920
  %curl28 = getelementptr inbounds %struct.Text, %struct.Text* %40, i32 0, i32 5, !dbg !6922
  %41 = load %struct.TextLine*, %struct.TextLine** %curl28, align 8, !dbg !6922
  %format = getelementptr inbounds %struct.TextLine, %struct.TextLine* %41, i32 0, i32 3, !dbg !6923
  %42 = load i8*, i8** %format, align 8, !dbg !6923
  %tobool29 = icmp ne i8* %42, null, !dbg !6920
  br i1 %tobool29, label %if.then30, label %if.end33, !dbg !6924

if.then30:                                        ; preds = %if.end10
  %43 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6925
  %44 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6926
  %curl31 = getelementptr inbounds %struct.Text, %struct.Text* %44, i32 0, i32 5, !dbg !6927
  %45 = load %struct.TextLine*, %struct.TextLine** %curl31, align 8, !dbg !6927
  %format32 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %45, i32 0, i32 3, !dbg !6928
  %46 = load i8*, i8** %format32, align 8, !dbg !6928
  call void %43(i8* %46), !dbg !6925
  br label %if.end33, !dbg !6925

if.end33:                                         ; preds = %if.then30, %if.end10
  %47 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6929
  %call34 = call i8* %47(i64 40, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)), !dbg !6929
  %48 = bitcast i8* %call34 to %struct.TextLine*, !dbg !6929
  store %struct.TextLine* %48, %struct.TextLine** %ins, align 8, !dbg !6930
  %49 = load i8*, i8** %left, align 8, !dbg !6931
  %50 = load %struct.TextLine*, %struct.TextLine** %ins, align 8, !dbg !6932
  %line35 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %50, i32 0, i32 2, !dbg !6933
  store i8* %49, i8** %line35, align 8, !dbg !6934
  %51 = load %struct.TextLine*, %struct.TextLine** %ins, align 8, !dbg !6935
  %format36 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %51, i32 0, i32 3, !dbg !6936
  store i8* null, i8** %format36, align 8, !dbg !6937
  %52 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6938
  %curc37 = getelementptr inbounds %struct.Text, %struct.Text* %52, i32 0, i32 7, !dbg !6939
  %53 = load i32, i32* %curc37, align 8, !dbg !6939
  %54 = load %struct.TextLine*, %struct.TextLine** %ins, align 8, !dbg !6940
  %len38 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %54, i32 0, i32 4, !dbg !6941
  store i32 %53, i32* %len38, align 8, !dbg !6942
  %55 = load i8*, i8** %right, align 8, !dbg !6943
  %56 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6944
  %curl39 = getelementptr inbounds %struct.Text, %struct.Text* %56, i32 0, i32 5, !dbg !6945
  %57 = load %struct.TextLine*, %struct.TextLine** %curl39, align 8, !dbg !6945
  %line40 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %57, i32 0, i32 2, !dbg !6946
  store i8* %55, i8** %line40, align 8, !dbg !6947
  %58 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6948
  %curl41 = getelementptr inbounds %struct.Text, %struct.Text* %58, i32 0, i32 5, !dbg !6949
  %59 = load %struct.TextLine*, %struct.TextLine** %curl41, align 8, !dbg !6949
  %format42 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %59, i32 0, i32 3, !dbg !6950
  store i8* null, i8** %format42, align 8, !dbg !6951
  %60 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6952
  %curl43 = getelementptr inbounds %struct.Text, %struct.Text* %60, i32 0, i32 5, !dbg !6953
  %61 = load %struct.TextLine*, %struct.TextLine** %curl43, align 8, !dbg !6953
  %len44 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %61, i32 0, i32 4, !dbg !6954
  %62 = load i32, i32* %len44, align 8, !dbg !6954
  %63 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6955
  %curc45 = getelementptr inbounds %struct.Text, %struct.Text* %63, i32 0, i32 7, !dbg !6956
  %64 = load i32, i32* %curc45, align 8, !dbg !6956
  %sub46 = sub nsw i32 %62, %64, !dbg !6957
  %65 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6958
  %curl47 = getelementptr inbounds %struct.Text, %struct.Text* %65, i32 0, i32 5, !dbg !6959
  %66 = load %struct.TextLine*, %struct.TextLine** %curl47, align 8, !dbg !6959
  %len48 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %66, i32 0, i32 4, !dbg !6960
  store i32 %sub46, i32* %len48, align 8, !dbg !6961
  %67 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6962
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %67, i32 0, i32 4, !dbg !6963
  %68 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6964
  %curl49 = getelementptr inbounds %struct.Text, %struct.Text* %68, i32 0, i32 5, !dbg !6965
  %69 = load %struct.TextLine*, %struct.TextLine** %curl49, align 8, !dbg !6965
  %70 = bitcast %struct.TextLine* %69 to i8*, !dbg !6964
  %71 = load %struct.TextLine*, %struct.TextLine** %ins, align 8, !dbg !6966
  %72 = bitcast %struct.TextLine* %71 to i8*, !dbg !6966
  call void @BLI_insertlinkbefore(%struct.ListBase* %lines, i8* %70, i8* %72), !dbg !6967
  %73 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6968
  %curc50 = getelementptr inbounds %struct.Text, %struct.Text* %73, i32 0, i32 7, !dbg !6969
  store i32 0, i32* %curc50, align 8, !dbg !6970
  %74 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6971
  call void @txt_make_dirty(%struct.Text* %74), !dbg !6972
  %75 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6973
  call void @txt_clean_text(%struct.Text* %75), !dbg !6974
  %76 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6975
  call void @txt_pop_sel(%struct.Text* %76), !dbg !6976
  br label %return, !dbg !6977

return:                                           ; preds = %if.end33, %if.then
  ret void, !dbg !6977
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.TextLine* @txt_new_linen(i8* %str, i32 %n) #0 !dbg !6978 {
entry:
  %str.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca %struct.TextLine*, align 8
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !6981, metadata !DIExpression()), !dbg !6982
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6983, metadata !DIExpression()), !dbg !6984
  call void @llvm.dbg.declare(metadata %struct.TextLine** %tmp, metadata !6985, metadata !DIExpression()), !dbg !6986
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6987
  %call = call i8* %0(i64 40, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)), !dbg !6987
  %1 = bitcast i8* %call to %struct.TextLine*, !dbg !6988
  store %struct.TextLine* %1, %struct.TextLine** %tmp, align 8, !dbg !6989
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6990
  %3 = load i32, i32* %n.addr, align 4, !dbg !6991
  %add = add nsw i32 %3, 1, !dbg !6992
  %conv = sext i32 %add to i64, !dbg !6991
  %call1 = call i8* %2(i64 %conv, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)), !dbg !6990
  %4 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6993
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %4, i32 0, i32 2, !dbg !6994
  store i8* %call1, i8** %line, align 8, !dbg !6995
  %5 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6996
  %format = getelementptr inbounds %struct.TextLine, %struct.TextLine* %5, i32 0, i32 3, !dbg !6997
  store i8* null, i8** %format, align 8, !dbg !6998
  %6 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6999
  %line2 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %6, i32 0, i32 2, !dbg !7000
  %7 = load i8*, i8** %line2, align 8, !dbg !7000
  %8 = load i8*, i8** %str.addr, align 8, !dbg !7001
  %tobool = icmp ne i8* %8, null, !dbg !7002
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7002

cond.true:                                        ; preds = %entry
  %9 = load i8*, i8** %str.addr, align 8, !dbg !7003
  br label %cond.end, !dbg !7002

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7002

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %9, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i64 0, i64 0), %cond.false ], !dbg !7002
  %10 = load i32, i32* %n.addr, align 4, !dbg !7004
  %add3 = add nsw i32 %10, 1, !dbg !7005
  %conv4 = sext i32 %add3 to i64, !dbg !7004
  %call5 = call i8* @BLI_strncpy(i8* %7, i8* %cond, i64 %conv4), !dbg !7006
  %11 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !7007
  %line6 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %11, i32 0, i32 2, !dbg !7008
  %12 = load i8*, i8** %line6, align 8, !dbg !7008
  %call7 = call i64 @strlen(i8* %12) #6, !dbg !7009
  %conv8 = trunc i64 %call7 to i32, !dbg !7009
  %13 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !7010
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %13, i32 0, i32 4, !dbg !7011
  store i32 %conv8, i32* %len, align 8, !dbg !7012
  %14 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !7013
  %prev = getelementptr inbounds %struct.TextLine, %struct.TextLine* %14, i32 0, i32 1, !dbg !7014
  store %struct.TextLine* null, %struct.TextLine** %prev, align 8, !dbg !7015
  %15 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !7016
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %15, i32 0, i32 0, !dbg !7017
  store %struct.TextLine* null, %struct.TextLine** %next, align 8, !dbg !7018
  %16 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !7019
  ret %struct.TextLine* %16, !dbg !7020
}

declare dso_local void @BLI_insertlinkbefore(%struct.ListBase*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_undo_add_op(%struct.Text* %text, i32 %op) #0 !dbg !7021 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %op.addr = alloca i32, align 4
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !7024, metadata !DIExpression()), !dbg !7025
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !7026, metadata !DIExpression()), !dbg !7027
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7028
  %call = call zeroext i8 @max_undo_test(%struct.Text* %0, i32 15), !dbg !7030
  %tobool = icmp ne i8 %call, 0, !dbg !7030
  br i1 %tobool, label %if.end, label %if.then, !dbg !7031

if.then:                                          ; preds = %entry
  br label %return, !dbg !7032

if.end:                                           ; preds = %entry
  %1 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7033
  %undo_pos = getelementptr inbounds %struct.Text, %struct.Text* %1, i32 0, i32 10, !dbg !7034
  %2 = load i32, i32* %undo_pos, align 8, !dbg !7035
  %inc = add nsw i32 %2, 1, !dbg !7035
  store i32 %inc, i32* %undo_pos, align 8, !dbg !7035
  %3 = load i32, i32* %op.addr, align 4, !dbg !7036
  %conv = trunc i32 %3 to i8, !dbg !7036
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7037
  %undo_buf = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 9, !dbg !7038
  %5 = load i8*, i8** %undo_buf, align 8, !dbg !7038
  %6 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7039
  %undo_pos1 = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 10, !dbg !7040
  %7 = load i32, i32* %undo_pos1, align 8, !dbg !7040
  %idxprom = sext i32 %7 to i64, !dbg !7037
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %idxprom, !dbg !7037
  store i8 %conv, i8* %arrayidx, align 1, !dbg !7041
  %8 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7042
  %undo_pos2 = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 10, !dbg !7043
  %9 = load i32, i32* %undo_pos2, align 8, !dbg !7044
  %inc3 = add nsw i32 %9, 1, !dbg !7044
  store i32 %inc3, i32* %undo_pos2, align 8, !dbg !7044
  %10 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7045
  call void @txt_undo_store_cursors(%struct.Text* %10), !dbg !7046
  %11 = load i32, i32* %op.addr, align 4, !dbg !7047
  %conv4 = trunc i32 %11 to i8, !dbg !7047
  %12 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7048
  %undo_buf5 = getelementptr inbounds %struct.Text, %struct.Text* %12, i32 0, i32 9, !dbg !7049
  %13 = load i8*, i8** %undo_buf5, align 8, !dbg !7049
  %14 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7050
  %undo_pos6 = getelementptr inbounds %struct.Text, %struct.Text* %14, i32 0, i32 10, !dbg !7051
  %15 = load i32, i32* %undo_pos6, align 8, !dbg !7051
  %idxprom7 = sext i32 %15 to i64, !dbg !7048
  %arrayidx8 = getelementptr inbounds i8, i8* %13, i64 %idxprom7, !dbg !7048
  store i8 %conv4, i8* %arrayidx8, align 1, !dbg !7052
  %16 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7053
  %undo_buf9 = getelementptr inbounds %struct.Text, %struct.Text* %16, i32 0, i32 9, !dbg !7054
  %17 = load i8*, i8** %undo_buf9, align 8, !dbg !7054
  %18 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7055
  %undo_pos10 = getelementptr inbounds %struct.Text, %struct.Text* %18, i32 0, i32 10, !dbg !7056
  %19 = load i32, i32* %undo_pos10, align 8, !dbg !7056
  %add = add nsw i32 %19, 1, !dbg !7057
  %idxprom11 = sext i32 %add to i64, !dbg !7053
  %arrayidx12 = getelementptr inbounds i8, i8* %17, i64 %idxprom11, !dbg !7053
  store i8 0, i8* %arrayidx12, align 1, !dbg !7058
  br label %return, !dbg !7059

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7059
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @max_undo_test(%struct.Text* %text, i32 %x) #0 !dbg !7060 {
entry:
  %retval = alloca i8, align 1
  %text.addr = alloca %struct.Text*, align 8
  %x.addr = alloca i32, align 4
  %tmp = alloca i8*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !7063, metadata !DIExpression()), !dbg !7064
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !7065, metadata !DIExpression()), !dbg !7066
  br label %while.cond, !dbg !7067

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7068
  %undo_pos = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 10, !dbg !7069
  %1 = load i32, i32* %undo_pos, align 8, !dbg !7069
  %2 = load i32, i32* %x.addr, align 4, !dbg !7070
  %add = add nsw i32 %1, %2, !dbg !7071
  %3 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7072
  %undo_len = getelementptr inbounds %struct.Text, %struct.Text* %3, i32 0, i32 11, !dbg !7073
  %4 = load i32, i32* %undo_len, align 4, !dbg !7073
  %cmp = icmp sge i32 %add, %4, !dbg !7074
  br i1 %cmp, label %while.body, label %while.end, !dbg !7067

while.body:                                       ; preds = %while.cond
  %5 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7075
  %undo_len1 = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 11, !dbg !7078
  %6 = load i32, i32* %undo_len1, align 4, !dbg !7078
  %mul = mul nsw i32 %6, 2, !dbg !7079
  %cmp2 = icmp sgt i32 %mul, 1048576, !dbg !7080
  br i1 %cmp2, label %if.then, label %if.else, !dbg !7081

if.then:                                          ; preds = %while.body
  %7 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7082
  %8 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7084
  %undo_buf = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 9, !dbg !7085
  %9 = load i8*, i8** %undo_buf, align 8, !dbg !7085
  call void %7(i8* %9), !dbg !7082
  %10 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7086
  call void @init_undo_text(%struct.Text* %10), !dbg !7087
  store i8 0, i8* %retval, align 1, !dbg !7088
  br label %return, !dbg !7088

if.else:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !7089, metadata !DIExpression()), !dbg !7091
  %11 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7092
  %undo_buf3 = getelementptr inbounds %struct.Text, %struct.Text* %11, i32 0, i32 9, !dbg !7093
  %12 = load i8*, i8** %undo_buf3, align 8, !dbg !7093
  store i8* %12, i8** %tmp, align 8, !dbg !7091
  %13 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7094
  %14 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7095
  %undo_len4 = getelementptr inbounds %struct.Text, %struct.Text* %14, i32 0, i32 11, !dbg !7096
  %15 = load i32, i32* %undo_len4, align 4, !dbg !7096
  %mul5 = mul nsw i32 %15, 2, !dbg !7097
  %conv = sext i32 %mul5 to i64, !dbg !7095
  %call = call i8* %13(i64 %conv, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i64 0, i64 0)), !dbg !7094
  %16 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7098
  %undo_buf6 = getelementptr inbounds %struct.Text, %struct.Text* %16, i32 0, i32 9, !dbg !7099
  store i8* %call, i8** %undo_buf6, align 8, !dbg !7100
  %17 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7101
  %undo_buf7 = getelementptr inbounds %struct.Text, %struct.Text* %17, i32 0, i32 9, !dbg !7102
  %18 = load i8*, i8** %undo_buf7, align 8, !dbg !7102
  %19 = load i8*, i8** %tmp, align 8, !dbg !7103
  %20 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7104
  %undo_len8 = getelementptr inbounds %struct.Text, %struct.Text* %20, i32 0, i32 11, !dbg !7105
  %21 = load i32, i32* %undo_len8, align 4, !dbg !7105
  %conv9 = sext i32 %21 to i64, !dbg !7104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %19, i64 %conv9, i1 false), !dbg !7106
  %22 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7107
  %undo_len10 = getelementptr inbounds %struct.Text, %struct.Text* %22, i32 0, i32 11, !dbg !7108
  %23 = load i32, i32* %undo_len10, align 4, !dbg !7109
  %mul11 = mul nsw i32 %23, 2, !dbg !7109
  store i32 %mul11, i32* %undo_len10, align 4, !dbg !7109
  %24 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7110
  %25 = load i8*, i8** %tmp, align 8, !dbg !7111
  call void %24(i8* %25), !dbg !7110
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %while.cond, !dbg !7067, !llvm.loop !7112

while.end:                                        ; preds = %while.cond
  store i8 1, i8* %retval, align 1, !dbg !7114
  br label %return, !dbg !7114

return:                                           ; preds = %while.end, %if.then
  %26 = load i8, i8* %retval, align 1, !dbg !7115
  ret i8 %26, !dbg !7115
}

; Function Attrs: noinline nounwind uwtable
define internal void @txt_undo_store_cursors(%struct.Text* %text) #0 !dbg !7116 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !7117, metadata !DIExpression()), !dbg !7118
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7119
  call void @txt_undo_store_cur(%struct.Text* %0), !dbg !7120
  %1 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7121
  call void @txt_undo_store_sel(%struct.Text* %1), !dbg !7122
  ret void, !dbg !7123
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_do_undo(%struct.Text* %text) #0 !dbg !7124 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %op = alloca i32, align 4
  %prev_flags = alloca i32, align 4
  %linep = alloca i32, align 4
  %i = alloca i32, align 4
  %uchar = alloca i32, align 4
  %curln = alloca i32, align 4
  %selln = alloca i32, align 4
  %curc = alloca i16, align 2
  %selc = alloca i16, align 2
  %charp = alloca i16, align 2
  %buf = alloca i8*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !7125, metadata !DIExpression()), !dbg !7126
  call void @llvm.dbg.declare(metadata i32* %op, metadata !7127, metadata !DIExpression()), !dbg !7128
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7129
  %undo_buf = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 9, !dbg !7130
  %1 = load i8*, i8** %undo_buf, align 8, !dbg !7130
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7131
  %undo_pos = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 10, !dbg !7132
  %3 = load i32, i32* %undo_pos, align 8, !dbg !7132
  %idxprom = sext i32 %3 to i64, !dbg !7129
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom, !dbg !7129
  %4 = load i8, i8* %arrayidx, align 1, !dbg !7129
  %conv = zext i8 %4 to i32, !dbg !7129
  store i32 %conv, i32* %op, align 4, !dbg !7128
  call void @llvm.dbg.declare(metadata i32* %prev_flags, metadata !7133, metadata !DIExpression()), !dbg !7134
  call void @llvm.dbg.declare(metadata i32* %linep, metadata !7135, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7137, metadata !DIExpression()), !dbg !7138
  call void @llvm.dbg.declare(metadata i32* %uchar, metadata !7139, metadata !DIExpression()), !dbg !7140
  call void @llvm.dbg.declare(metadata i32* %curln, metadata !7141, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.declare(metadata i32* %selln, metadata !7143, metadata !DIExpression()), !dbg !7144
  call void @llvm.dbg.declare(metadata i16* %curc, metadata !7145, metadata !DIExpression()), !dbg !7146
  call void @llvm.dbg.declare(metadata i16* %selc, metadata !7147, metadata !DIExpression()), !dbg !7148
  call void @llvm.dbg.declare(metadata i16* %charp, metadata !7149, metadata !DIExpression()), !dbg !7150
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !7151, metadata !DIExpression()), !dbg !7152
  %5 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7153
  %undo_pos1 = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 10, !dbg !7155
  %6 = load i32, i32* %undo_pos1, align 8, !dbg !7155
  %cmp = icmp slt i32 %6, 0, !dbg !7156
  br i1 %cmp, label %if.then, label %if.end, !dbg !7157

if.then:                                          ; preds = %entry
  br label %return, !dbg !7158

if.end:                                           ; preds = %entry
  %7 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7160
  %undo_pos3 = getelementptr inbounds %struct.Text, %struct.Text* %7, i32 0, i32 10, !dbg !7161
  %8 = load i32, i32* %undo_pos3, align 8, !dbg !7162
  %dec = add nsw i32 %8, -1, !dbg !7162
  store i32 %dec, i32* %undo_pos3, align 8, !dbg !7162
  store i8 1, i8* @undoing, align 1, !dbg !7163
  %9 = load i32, i32* %op, align 4, !dbg !7164
  switch i32 %9, label %sw.default [
    i32 11, label %sw.bb
    i32 12, label %sw.bb
    i32 13, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb12
    i32 16, label %sw.bb12
    i32 17, label %sw.bb12
    i32 18, label %sw.bb12
    i32 19, label %sw.bb25
    i32 20, label %sw.bb25
    i32 21, label %sw.bb25
    i32 22, label %sw.bb25
    i32 23, label %sw.bb39
    i32 24, label %sw.bb69
    i32 26, label %sw.bb122
    i32 27, label %sw.bb122
    i32 28, label %sw.bb122
    i32 29, label %sw.bb122
    i32 32, label %sw.bb122
    i32 30, label %sw.bb122
    i32 31, label %sw.bb122
  ], !dbg !7165

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end
  %10 = load i32, i32* %op, align 4, !dbg !7166
  %sub = sub nsw i32 %10, 11, !dbg !7168
  %add = add nsw i32 %sub, 1, !dbg !7169
  %11 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7170
  %undo_pos4 = getelementptr inbounds %struct.Text, %struct.Text* %11, i32 0, i32 10, !dbg !7171
  %12 = load i32, i32* %undo_pos4, align 8, !dbg !7172
  %sub5 = sub nsw i32 %12, %add, !dbg !7172
  store i32 %sub5, i32* %undo_pos4, align 8, !dbg !7172
  %13 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7173
  %undo_buf6 = getelementptr inbounds %struct.Text, %struct.Text* %13, i32 0, i32 9, !dbg !7174
  %14 = load i8*, i8** %undo_buf6, align 8, !dbg !7174
  %15 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7175
  %undo_pos7 = getelementptr inbounds %struct.Text, %struct.Text* %15, i32 0, i32 10, !dbg !7176
  call void @txt_undo_read_cur(i8* %14, i32* %undo_pos7, i32* %curln, i16* %curc), !dbg !7177
  %16 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7178
  %17 = load i32, i32* %curln, align 4, !dbg !7179
  %18 = load i16, i16* %curc, align 2, !dbg !7180
  %conv8 = zext i16 %18 to i32, !dbg !7180
  call void @txt_move_to(%struct.Text* %16, i32 %17, i32 %conv8, i8 zeroext 0), !dbg !7181
  %19 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7182
  %20 = load i32, i32* %curln, align 4, !dbg !7183
  %21 = load i16, i16* %curc, align 2, !dbg !7184
  %conv9 = zext i16 %21 to i32, !dbg !7184
  call void @txt_move_to(%struct.Text* %19, i32 %20, i32 %conv9, i8 zeroext 1), !dbg !7185
  %22 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7186
  call void @txt_delete_char(%struct.Text* %22), !dbg !7187
  %23 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7188
  %undo_pos10 = getelementptr inbounds %struct.Text, %struct.Text* %23, i32 0, i32 10, !dbg !7189
  %24 = load i32, i32* %undo_pos10, align 8, !dbg !7190
  %dec11 = add nsw i32 %24, -1, !dbg !7190
  store i32 %dec11, i32* %undo_pos10, align 8, !dbg !7190
  br label %sw.epilog, !dbg !7191

sw.bb12:                                          ; preds = %if.end, %if.end, %if.end, %if.end
  %25 = load i32, i32* %op, align 4, !dbg !7192
  %sub13 = sub nsw i32 %25, 15, !dbg !7193
  %add14 = add nsw i32 %sub13, 1, !dbg !7194
  %conv15 = trunc i32 %add14 to i16, !dbg !7192
  store i16 %conv15, i16* %charp, align 2, !dbg !7195
  %26 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7196
  %undo_buf16 = getelementptr inbounds %struct.Text, %struct.Text* %26, i32 0, i32 9, !dbg !7197
  %27 = load i8*, i8** %undo_buf16, align 8, !dbg !7197
  %28 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7198
  %undo_pos17 = getelementptr inbounds %struct.Text, %struct.Text* %28, i32 0, i32 10, !dbg !7199
  %29 = load i16, i16* %charp, align 2, !dbg !7200
  %call = call i32 @txt_undo_read_unicode(i8* %27, i32* %undo_pos17, i16 signext %29), !dbg !7201
  store i32 %call, i32* %uchar, align 4, !dbg !7202
  %30 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7203
  %undo_buf18 = getelementptr inbounds %struct.Text, %struct.Text* %30, i32 0, i32 9, !dbg !7204
  %31 = load i8*, i8** %undo_buf18, align 8, !dbg !7204
  %32 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7205
  %undo_pos19 = getelementptr inbounds %struct.Text, %struct.Text* %32, i32 0, i32 10, !dbg !7206
  call void @txt_undo_read_cur(i8* %31, i32* %undo_pos19, i32* %curln, i16* %curc), !dbg !7207
  %33 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7208
  %34 = load i32, i32* %curln, align 4, !dbg !7209
  %35 = load i16, i16* %curc, align 2, !dbg !7210
  %conv20 = zext i16 %35 to i32, !dbg !7210
  call void @txt_move_to(%struct.Text* %33, i32 %34, i32 %conv20, i8 zeroext 0), !dbg !7211
  %36 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7212
  %37 = load i32, i32* %curln, align 4, !dbg !7213
  %38 = load i16, i16* %curc, align 2, !dbg !7214
  %conv21 = zext i16 %38 to i32, !dbg !7214
  call void @txt_move_to(%struct.Text* %36, i32 %37, i32 %conv21, i8 zeroext 1), !dbg !7215
  %39 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7216
  %40 = load i32, i32* %uchar, align 4, !dbg !7217
  %call22 = call zeroext i8 @txt_add_char(%struct.Text* %39, i32 %40), !dbg !7218
  %41 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7219
  %undo_pos23 = getelementptr inbounds %struct.Text, %struct.Text* %41, i32 0, i32 10, !dbg !7220
  %42 = load i32, i32* %undo_pos23, align 8, !dbg !7221
  %dec24 = add nsw i32 %42, -1, !dbg !7221
  store i32 %dec24, i32* %undo_pos23, align 8, !dbg !7221
  br label %sw.epilog, !dbg !7222

sw.bb25:                                          ; preds = %if.end, %if.end, %if.end, %if.end
  %43 = load i32, i32* %op, align 4, !dbg !7223
  %sub26 = sub nsw i32 %43, 19, !dbg !7224
  %add27 = add nsw i32 %sub26, 1, !dbg !7225
  %conv28 = trunc i32 %add27 to i16, !dbg !7223
  store i16 %conv28, i16* %charp, align 2, !dbg !7226
  %44 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7227
  %undo_buf29 = getelementptr inbounds %struct.Text, %struct.Text* %44, i32 0, i32 9, !dbg !7228
  %45 = load i8*, i8** %undo_buf29, align 8, !dbg !7228
  %46 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7229
  %undo_pos30 = getelementptr inbounds %struct.Text, %struct.Text* %46, i32 0, i32 10, !dbg !7230
  %47 = load i16, i16* %charp, align 2, !dbg !7231
  %call31 = call i32 @txt_undo_read_unicode(i8* %45, i32* %undo_pos30, i16 signext %47), !dbg !7232
  store i32 %call31, i32* %uchar, align 4, !dbg !7233
  %48 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7234
  %undo_buf32 = getelementptr inbounds %struct.Text, %struct.Text* %48, i32 0, i32 9, !dbg !7235
  %49 = load i8*, i8** %undo_buf32, align 8, !dbg !7235
  %50 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7236
  %undo_pos33 = getelementptr inbounds %struct.Text, %struct.Text* %50, i32 0, i32 10, !dbg !7237
  call void @txt_undo_read_cur(i8* %49, i32* %undo_pos33, i32* %curln, i16* %curc), !dbg !7238
  %51 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7239
  %52 = load i32, i32* %curln, align 4, !dbg !7240
  %53 = load i16, i16* %curc, align 2, !dbg !7241
  %conv34 = zext i16 %53 to i32, !dbg !7241
  call void @txt_move_to(%struct.Text* %51, i32 %52, i32 %conv34, i8 zeroext 0), !dbg !7242
  %54 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7243
  %55 = load i32, i32* %curln, align 4, !dbg !7244
  %56 = load i16, i16* %curc, align 2, !dbg !7245
  %conv35 = zext i16 %56 to i32, !dbg !7245
  call void @txt_move_to(%struct.Text* %54, i32 %55, i32 %conv35, i8 zeroext 1), !dbg !7246
  %57 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7247
  %58 = load i32, i32* %uchar, align 4, !dbg !7248
  %call36 = call zeroext i8 @txt_add_char(%struct.Text* %57, i32 %58), !dbg !7249
  %59 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7250
  call void @txt_move_left(%struct.Text* %59, i8 zeroext 0), !dbg !7251
  %60 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7252
  %undo_pos37 = getelementptr inbounds %struct.Text, %struct.Text* %60, i32 0, i32 10, !dbg !7253
  %61 = load i32, i32* %undo_pos37, align 8, !dbg !7254
  %dec38 = add nsw i32 %61, -1, !dbg !7254
  store i32 %dec38, i32* %undo_pos37, align 8, !dbg !7254
  br label %sw.epilog, !dbg !7255

sw.bb39:                                          ; preds = %if.end
  %62 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7256
  %undo_buf40 = getelementptr inbounds %struct.Text, %struct.Text* %62, i32 0, i32 9, !dbg !7257
  %63 = load i8*, i8** %undo_buf40, align 8, !dbg !7257
  %64 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7258
  %undo_pos41 = getelementptr inbounds %struct.Text, %struct.Text* %64, i32 0, i32 10, !dbg !7259
  %call42 = call i32 @txt_undo_read_uint32(i8* %63, i32* %undo_pos41), !dbg !7260
  store i32 %call42, i32* %linep, align 4, !dbg !7261
  %65 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7262
  %66 = load i32, i32* %linep, align 4, !dbg !7263
  %add43 = add i32 %66, 1, !dbg !7264
  %conv44 = zext i32 %add43 to i64, !dbg !7263
  %call45 = call i8* %65(i64 %conv44, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0)), !dbg !7262
  store i8* %call45, i8** %buf, align 8, !dbg !7265
  store i32 0, i32* %i, align 4, !dbg !7266
  br label %for.cond, !dbg !7268

for.cond:                                         ; preds = %for.inc, %sw.bb39
  %67 = load i32, i32* %i, align 4, !dbg !7269
  %68 = load i32, i32* %linep, align 4, !dbg !7271
  %cmp46 = icmp ult i32 %67, %68, !dbg !7272
  br i1 %cmp46, label %for.body, label %for.end, !dbg !7273

for.body:                                         ; preds = %for.cond
  %69 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7274
  %undo_buf48 = getelementptr inbounds %struct.Text, %struct.Text* %69, i32 0, i32 9, !dbg !7276
  %70 = load i8*, i8** %undo_buf48, align 8, !dbg !7276
  %71 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7277
  %undo_pos49 = getelementptr inbounds %struct.Text, %struct.Text* %71, i32 0, i32 10, !dbg !7278
  %72 = load i32, i32* %undo_pos49, align 8, !dbg !7278
  %idxprom50 = sext i32 %72 to i64, !dbg !7274
  %arrayidx51 = getelementptr inbounds i8, i8* %70, i64 %idxprom50, !dbg !7274
  %73 = load i8, i8* %arrayidx51, align 1, !dbg !7274
  %74 = load i8*, i8** %buf, align 8, !dbg !7279
  %75 = load i32, i32* %linep, align 4, !dbg !7280
  %sub52 = sub i32 %75, 1, !dbg !7281
  %76 = load i32, i32* %i, align 4, !dbg !7282
  %sub53 = sub i32 %sub52, %76, !dbg !7283
  %idxprom54 = zext i32 %sub53 to i64, !dbg !7279
  %arrayidx55 = getelementptr inbounds i8, i8* %74, i64 %idxprom54, !dbg !7279
  store i8 %73, i8* %arrayidx55, align 1, !dbg !7284
  %77 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7285
  %undo_pos56 = getelementptr inbounds %struct.Text, %struct.Text* %77, i32 0, i32 10, !dbg !7286
  %78 = load i32, i32* %undo_pos56, align 8, !dbg !7287
  %dec57 = add nsw i32 %78, -1, !dbg !7287
  store i32 %dec57, i32* %undo_pos56, align 8, !dbg !7287
  br label %for.inc, !dbg !7288

for.inc:                                          ; preds = %for.body
  %79 = load i32, i32* %i, align 4, !dbg !7289
  %inc = add i32 %79, 1, !dbg !7289
  store i32 %inc, i32* %i, align 4, !dbg !7289
  br label %for.cond, !dbg !7290, !llvm.loop !7291

for.end:                                          ; preds = %for.cond
  %80 = load i8*, i8** %buf, align 8, !dbg !7293
  %81 = load i32, i32* %i, align 4, !dbg !7294
  %idxprom58 = zext i32 %81 to i64, !dbg !7293
  %arrayidx59 = getelementptr inbounds i8, i8* %80, i64 %idxprom58, !dbg !7293
  store i8 0, i8* %arrayidx59, align 1, !dbg !7295
  %82 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7296
  %undo_pos60 = getelementptr inbounds %struct.Text, %struct.Text* %82, i32 0, i32 10, !dbg !7297
  %83 = load i32, i32* %undo_pos60, align 8, !dbg !7298
  %sub61 = sub nsw i32 %83, 4, !dbg !7298
  store i32 %sub61, i32* %undo_pos60, align 8, !dbg !7298
  %84 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7299
  %undo_buf62 = getelementptr inbounds %struct.Text, %struct.Text* %84, i32 0, i32 9, !dbg !7300
  %85 = load i8*, i8** %undo_buf62, align 8, !dbg !7300
  %86 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7301
  %undo_pos63 = getelementptr inbounds %struct.Text, %struct.Text* %86, i32 0, i32 10, !dbg !7302
  call void @txt_undo_read_cursors(i8* %85, i32* %undo_pos63, i32* %curln, i16* %curc, i32* %selln, i16* %selc), !dbg !7303
  %87 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7304
  %88 = load i32, i32* %curln, align 4, !dbg !7305
  %89 = load i16, i16* %curc, align 2, !dbg !7306
  %conv64 = zext i16 %89 to i32, !dbg !7306
  call void @txt_move_to(%struct.Text* %87, i32 %88, i32 %conv64, i8 zeroext 0), !dbg !7307
  %90 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7308
  %91 = load i8*, i8** %buf, align 8, !dbg !7309
  call void @txt_insert_buf(%struct.Text* %90, i8* %91), !dbg !7310
  %92 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7311
  %93 = load i8*, i8** %buf, align 8, !dbg !7312
  call void %92(i8* %93), !dbg !7311
  %94 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7313
  %95 = load i32, i32* %curln, align 4, !dbg !7314
  %96 = load i16, i16* %curc, align 2, !dbg !7315
  %conv65 = zext i16 %96 to i32, !dbg !7315
  call void @txt_move_to(%struct.Text* %94, i32 %95, i32 %conv65, i8 zeroext 0), !dbg !7316
  %97 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7317
  %98 = load i32, i32* %selln, align 4, !dbg !7318
  %99 = load i16, i16* %selc, align 2, !dbg !7319
  %conv66 = zext i16 %99 to i32, !dbg !7319
  call void @txt_move_to(%struct.Text* %97, i32 %98, i32 %conv66, i8 zeroext 1), !dbg !7320
  %100 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7321
  %undo_pos67 = getelementptr inbounds %struct.Text, %struct.Text* %100, i32 0, i32 10, !dbg !7322
  %101 = load i32, i32* %undo_pos67, align 8, !dbg !7323
  %dec68 = add nsw i32 %101, -1, !dbg !7323
  store i32 %dec68, i32* %undo_pos67, align 8, !dbg !7323
  br label %sw.epilog, !dbg !7324

sw.bb69:                                          ; preds = %if.end
  %102 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7325
  %undo_buf70 = getelementptr inbounds %struct.Text, %struct.Text* %102, i32 0, i32 9, !dbg !7326
  %103 = load i8*, i8** %undo_buf70, align 8, !dbg !7326
  %104 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7327
  %undo_pos71 = getelementptr inbounds %struct.Text, %struct.Text* %104, i32 0, i32 10, !dbg !7328
  %call72 = call i32 @txt_undo_read_uint32(i8* %103, i32* %undo_pos71), !dbg !7329
  store i32 %call72, i32* %linep, align 4, !dbg !7330
  %105 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7331
  %106 = load i32, i32* %linep, align 4, !dbg !7332
  %add73 = add i32 %106, 1, !dbg !7333
  %conv74 = zext i32 %add73 to i64, !dbg !7332
  %call75 = call i8* %105(i64 %conv74, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0)), !dbg !7331
  store i8* %call75, i8** %buf, align 8, !dbg !7334
  store i32 0, i32* %i, align 4, !dbg !7335
  br label %for.cond76, !dbg !7337

for.cond76:                                       ; preds = %for.inc90, %sw.bb69
  %107 = load i32, i32* %i, align 4, !dbg !7338
  %108 = load i32, i32* %linep, align 4, !dbg !7340
  %cmp77 = icmp ult i32 %107, %108, !dbg !7341
  br i1 %cmp77, label %for.body79, label %for.end92, !dbg !7342

for.body79:                                       ; preds = %for.cond76
  %109 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7343
  %undo_buf80 = getelementptr inbounds %struct.Text, %struct.Text* %109, i32 0, i32 9, !dbg !7345
  %110 = load i8*, i8** %undo_buf80, align 8, !dbg !7345
  %111 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7346
  %undo_pos81 = getelementptr inbounds %struct.Text, %struct.Text* %111, i32 0, i32 10, !dbg !7347
  %112 = load i32, i32* %undo_pos81, align 8, !dbg !7347
  %idxprom82 = sext i32 %112 to i64, !dbg !7343
  %arrayidx83 = getelementptr inbounds i8, i8* %110, i64 %idxprom82, !dbg !7343
  %113 = load i8, i8* %arrayidx83, align 1, !dbg !7343
  %114 = load i8*, i8** %buf, align 8, !dbg !7348
  %115 = load i32, i32* %linep, align 4, !dbg !7349
  %sub84 = sub i32 %115, 1, !dbg !7350
  %116 = load i32, i32* %i, align 4, !dbg !7351
  %sub85 = sub i32 %sub84, %116, !dbg !7352
  %idxprom86 = zext i32 %sub85 to i64, !dbg !7348
  %arrayidx87 = getelementptr inbounds i8, i8* %114, i64 %idxprom86, !dbg !7348
  store i8 %113, i8* %arrayidx87, align 1, !dbg !7353
  %117 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7354
  %undo_pos88 = getelementptr inbounds %struct.Text, %struct.Text* %117, i32 0, i32 10, !dbg !7355
  %118 = load i32, i32* %undo_pos88, align 8, !dbg !7356
  %dec89 = add nsw i32 %118, -1, !dbg !7356
  store i32 %dec89, i32* %undo_pos88, align 8, !dbg !7356
  br label %for.inc90, !dbg !7357

for.inc90:                                        ; preds = %for.body79
  %119 = load i32, i32* %i, align 4, !dbg !7358
  %inc91 = add i32 %119, 1, !dbg !7358
  store i32 %inc91, i32* %i, align 4, !dbg !7358
  br label %for.cond76, !dbg !7359, !llvm.loop !7360

for.end92:                                        ; preds = %for.cond76
  %120 = load i8*, i8** %buf, align 8, !dbg !7362
  %121 = load i32, i32* %i, align 4, !dbg !7363
  %idxprom93 = zext i32 %121 to i64, !dbg !7362
  %arrayidx94 = getelementptr inbounds i8, i8* %120, i64 %idxprom93, !dbg !7362
  store i8 0, i8* %arrayidx94, align 1, !dbg !7364
  %122 = load i8*, i8** %buf, align 8, !dbg !7365
  %call95 = call i64 @BLI_strlen_utf8(i8* %122), !dbg !7366
  %conv96 = trunc i64 %call95 to i32, !dbg !7366
  store i32 %conv96, i32* %linep, align 4, !dbg !7367
  %123 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7368
  %124 = load i8*, i8** %buf, align 8, !dbg !7369
  call void %123(i8* %124), !dbg !7368
  %125 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7370
  %undo_pos97 = getelementptr inbounds %struct.Text, %struct.Text* %125, i32 0, i32 10, !dbg !7371
  %126 = load i32, i32* %undo_pos97, align 8, !dbg !7372
  %sub98 = sub nsw i32 %126, 4, !dbg !7372
  store i32 %sub98, i32* %undo_pos97, align 8, !dbg !7372
  %127 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7373
  %undo_buf99 = getelementptr inbounds %struct.Text, %struct.Text* %127, i32 0, i32 9, !dbg !7374
  %128 = load i8*, i8** %undo_buf99, align 8, !dbg !7374
  %129 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7375
  %undo_pos100 = getelementptr inbounds %struct.Text, %struct.Text* %129, i32 0, i32 10, !dbg !7376
  call void @txt_undo_read_cursors(i8* %128, i32* %undo_pos100, i32* %curln, i16* %curc, i32* %selln, i16* %selc), !dbg !7377
  %130 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7378
  %131 = load i32, i32* %curln, align 4, !dbg !7379
  %132 = load i16, i16* %curc, align 2, !dbg !7380
  %conv101 = zext i16 %132 to i32, !dbg !7380
  call void @txt_move_to(%struct.Text* %130, i32 %131, i32 %conv101, i8 zeroext 0), !dbg !7381
  %133 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7382
  %134 = load i32, i32* %selln, align 4, !dbg !7383
  %135 = load i16, i16* %selc, align 2, !dbg !7384
  %conv102 = zext i16 %135 to i32, !dbg !7384
  call void @txt_move_to(%struct.Text* %133, i32 %134, i32 %conv102, i8 zeroext 1), !dbg !7385
  %136 = load i32, i32* %curln, align 4, !dbg !7386
  %137 = load i32, i32* %selln, align 4, !dbg !7388
  %cmp103 = icmp eq i32 %136, %137, !dbg !7389
  br i1 %cmp103, label %land.lhs.true, label %if.end119, !dbg !7390

land.lhs.true:                                    ; preds = %for.end92
  %138 = load i16, i16* %curc, align 2, !dbg !7391
  %conv105 = zext i16 %138 to i32, !dbg !7391
  %139 = load i16, i16* %selc, align 2, !dbg !7392
  %conv106 = zext i16 %139 to i32, !dbg !7392
  %cmp107 = icmp eq i32 %conv105, %conv106, !dbg !7393
  br i1 %cmp107, label %if.then109, label %if.end119, !dbg !7394

if.then109:                                       ; preds = %land.lhs.true
  %140 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7395
  %flags = getelementptr inbounds %struct.Text, %struct.Text* %140, i32 0, i32 2, !dbg !7397
  %141 = load i32, i32* %flags, align 8, !dbg !7397
  store i32 %141, i32* %prev_flags, align 4, !dbg !7398
  %142 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7399
  %flags110 = getelementptr inbounds %struct.Text, %struct.Text* %142, i32 0, i32 2, !dbg !7400
  %143 = load i32, i32* %flags110, align 8, !dbg !7401
  %and = and i32 %143, -1025, !dbg !7401
  store i32 %and, i32* %flags110, align 8, !dbg !7401
  store i32 0, i32* %i, align 4, !dbg !7402
  br label %for.cond111, !dbg !7404

for.cond111:                                      ; preds = %for.inc115, %if.then109
  %144 = load i32, i32* %i, align 4, !dbg !7405
  %145 = load i32, i32* %linep, align 4, !dbg !7407
  %cmp112 = icmp ult i32 %144, %145, !dbg !7408
  br i1 %cmp112, label %for.body114, label %for.end117, !dbg !7409

for.body114:                                      ; preds = %for.cond111
  %146 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7410
  call void @txt_move_right(%struct.Text* %146, i8 zeroext 1), !dbg !7411
  br label %for.inc115, !dbg !7411

for.inc115:                                       ; preds = %for.body114
  %147 = load i32, i32* %i, align 4, !dbg !7412
  %inc116 = add i32 %147, 1, !dbg !7412
  store i32 %inc116, i32* %i, align 4, !dbg !7412
  br label %for.cond111, !dbg !7413, !llvm.loop !7414

for.end117:                                       ; preds = %for.cond111
  %148 = load i32, i32* %prev_flags, align 4, !dbg !7416
  %149 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7417
  %flags118 = getelementptr inbounds %struct.Text, %struct.Text* %149, i32 0, i32 2, !dbg !7418
  store i32 %148, i32* %flags118, align 8, !dbg !7419
  br label %if.end119, !dbg !7420

if.end119:                                        ; preds = %for.end117, %land.lhs.true, %for.end92
  %150 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7421
  call void @txt_delete_selected(%struct.Text* %150), !dbg !7422
  %151 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7423
  %undo_pos120 = getelementptr inbounds %struct.Text, %struct.Text* %151, i32 0, i32 10, !dbg !7424
  %152 = load i32, i32* %undo_pos120, align 8, !dbg !7425
  %dec121 = add nsw i32 %152, -1, !dbg !7425
  store i32 %dec121, i32* %undo_pos120, align 8, !dbg !7425
  br label %sw.epilog, !dbg !7426

sw.bb122:                                         ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %153 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7427
  %undo_buf123 = getelementptr inbounds %struct.Text, %struct.Text* %153, i32 0, i32 9, !dbg !7428
  %154 = load i8*, i8** %undo_buf123, align 8, !dbg !7428
  %155 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7429
  %undo_pos124 = getelementptr inbounds %struct.Text, %struct.Text* %155, i32 0, i32 10, !dbg !7430
  call void @txt_undo_read_cursors(i8* %154, i32* %undo_pos124, i32* %curln, i16* %curc, i32* %selln, i16* %selc), !dbg !7431
  %156 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7432
  %157 = load i32, i32* %curln, align 4, !dbg !7433
  %158 = load i16, i16* %curc, align 2, !dbg !7434
  %conv125 = zext i16 %158 to i32, !dbg !7434
  call void @txt_move_to(%struct.Text* %156, i32 %157, i32 %conv125, i8 zeroext 0), !dbg !7435
  %159 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7436
  %160 = load i32, i32* %selln, align 4, !dbg !7437
  %161 = load i16, i16* %selc, align 2, !dbg !7438
  %conv126 = zext i16 %161 to i32, !dbg !7438
  call void @txt_move_to(%struct.Text* %159, i32 %160, i32 %conv126, i8 zeroext 1), !dbg !7439
  %162 = load i32, i32* %op, align 4, !dbg !7440
  %cmp127 = icmp eq i32 %162, 26, !dbg !7442
  br i1 %cmp127, label %if.then129, label %if.else, !dbg !7443

if.then129:                                       ; preds = %sw.bb122
  %163 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7444
  call void @txt_unindent(%struct.Text* %163), !dbg !7446
  br label %if.end159, !dbg !7447

if.else:                                          ; preds = %sw.bb122
  %164 = load i32, i32* %op, align 4, !dbg !7448
  %cmp130 = icmp eq i32 %164, 27, !dbg !7450
  br i1 %cmp130, label %if.then132, label %if.else133, !dbg !7451

if.then132:                                       ; preds = %if.else
  %165 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7452
  call void @txt_indent(%struct.Text* %165), !dbg !7454
  br label %if.end158, !dbg !7455

if.else133:                                       ; preds = %if.else
  %166 = load i32, i32* %op, align 4, !dbg !7456
  %cmp134 = icmp eq i32 %166, 28, !dbg !7458
  br i1 %cmp134, label %if.then136, label %if.else137, !dbg !7459

if.then136:                                       ; preds = %if.else133
  %167 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7460
  call void @txt_uncomment(%struct.Text* %167), !dbg !7462
  br label %if.end157, !dbg !7463

if.else137:                                       ; preds = %if.else133
  %168 = load i32, i32* %op, align 4, !dbg !7464
  %cmp138 = icmp eq i32 %168, 29, !dbg !7466
  br i1 %cmp138, label %if.then140, label %if.else141, !dbg !7467

if.then140:                                       ; preds = %if.else137
  %169 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7468
  call void @txt_comment(%struct.Text* %169), !dbg !7470
  br label %if.end156, !dbg !7471

if.else141:                                       ; preds = %if.else137
  %170 = load i32, i32* %op, align 4, !dbg !7472
  %cmp142 = icmp eq i32 %170, 32, !dbg !7474
  br i1 %cmp142, label %if.then144, label %if.else145, !dbg !7475

if.then144:                                       ; preds = %if.else141
  %171 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7476
  %172 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7478
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %172, i32 0, i32 5, !dbg !7479
  %173 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !7479
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %173, i32 0, i32 0, !dbg !7480
  %174 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !7480
  call void @txt_delete_line(%struct.Text* %171, %struct.TextLine* %174), !dbg !7481
  br label %if.end155, !dbg !7482

if.else145:                                       ; preds = %if.else141
  %175 = load i32, i32* %op, align 4, !dbg !7483
  %cmp146 = icmp eq i32 %175, 30, !dbg !7485
  br i1 %cmp146, label %if.then148, label %if.else149, !dbg !7486

if.then148:                                       ; preds = %if.else145
  %176 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7487
  call void @txt_move_lines(%struct.Text* %176, i32 1), !dbg !7489
  br label %if.end154, !dbg !7490

if.else149:                                       ; preds = %if.else145
  %177 = load i32, i32* %op, align 4, !dbg !7491
  %cmp150 = icmp eq i32 %177, 31, !dbg !7493
  br i1 %cmp150, label %if.then152, label %if.end153, !dbg !7494

if.then152:                                       ; preds = %if.else149
  %178 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7495
  call void @txt_move_lines(%struct.Text* %178, i32 -1), !dbg !7497
  br label %if.end153, !dbg !7498

if.end153:                                        ; preds = %if.then152, %if.else149
  br label %if.end154

if.end154:                                        ; preds = %if.end153, %if.then148
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.then144
  br label %if.end156

if.end156:                                        ; preds = %if.end155, %if.then140
  br label %if.end157

if.end157:                                        ; preds = %if.end156, %if.then136
  br label %if.end158

if.end158:                                        ; preds = %if.end157, %if.then132
  br label %if.end159

if.end159:                                        ; preds = %if.end158, %if.then129
  %179 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7499
  %undo_pos160 = getelementptr inbounds %struct.Text, %struct.Text* %179, i32 0, i32 10, !dbg !7500
  %180 = load i32, i32* %undo_pos160, align 8, !dbg !7501
  %dec161 = add nsw i32 %180, -1, !dbg !7501
  store i32 %dec161, i32* %undo_pos160, align 8, !dbg !7501
  br label %sw.epilog, !dbg !7502

sw.default:                                       ; preds = %if.end
  %181 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7503
  %undo_pos162 = getelementptr inbounds %struct.Text, %struct.Text* %181, i32 0, i32 10, !dbg !7504
  store i32 -1, i32* %undo_pos162, align 8, !dbg !7505
  br label %sw.epilog, !dbg !7506

sw.epilog:                                        ; preds = %sw.default, %if.end159, %if.end119, %for.end, %sw.bb25, %sw.bb12, %sw.bb
  store i8 0, i8* @undoing, align 1, !dbg !7507
  br label %return, !dbg !7508

return:                                           ; preds = %sw.epilog, %if.then
  ret void, !dbg !7508
}

; Function Attrs: noinline nounwind uwtable
define internal void @txt_undo_read_cur(i8* %undo_buf, i32* %undo_pos, i32* %curln, i16* %curc) #0 !dbg !7509 {
entry:
  %undo_buf.addr = alloca i8*, align 8
  %undo_pos.addr = alloca i32*, align 8
  %curln.addr = alloca i32*, align 8
  %curc.addr = alloca i16*, align 8
  store i8* %undo_buf, i8** %undo_buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %undo_buf.addr, metadata !7513, metadata !DIExpression()), !dbg !7514
  store i32* %undo_pos, i32** %undo_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %undo_pos.addr, metadata !7515, metadata !DIExpression()), !dbg !7516
  store i32* %curln, i32** %curln.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %curln.addr, metadata !7517, metadata !DIExpression()), !dbg !7518
  store i16* %curc, i16** %curc.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %curc.addr, metadata !7519, metadata !DIExpression()), !dbg !7520
  %0 = load i8*, i8** %undo_buf.addr, align 8, !dbg !7521
  %1 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7522
  %call = call i32 @txt_undo_read_uint32(i8* %0, i32* %1), !dbg !7523
  %2 = load i32*, i32** %curln.addr, align 8, !dbg !7524
  store i32 %call, i32* %2, align 4, !dbg !7525
  %3 = load i8*, i8** %undo_buf.addr, align 8, !dbg !7526
  %4 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7527
  %call1 = call zeroext i16 @txt_undo_read_uint16(i8* %3, i32* %4), !dbg !7528
  %5 = load i16*, i16** %curc.addr, align 8, !dbg !7529
  store i16 %call1, i16* %5, align 2, !dbg !7530
  ret void, !dbg !7531
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_delete_char(%struct.Text* %text) #0 !dbg !7532 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %c = alloca i32, align 4
  %c_len = alloca i64, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !7533, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.declare(metadata i32* %c, metadata !7535, metadata !DIExpression()), !dbg !7536
  store i32 10, i32* %c, align 4, !dbg !7536
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7537
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !7539
  %1 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !7539
  %tobool = icmp ne %struct.TextLine* %1, null, !dbg !7537
  br i1 %tobool, label %if.end, label %if.then, !dbg !7540

if.then:                                          ; preds = %entry
  br label %if.end41, !dbg !7541

if.end:                                           ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7542
  %call = call zeroext i8 @txt_has_sel(%struct.Text* %2), !dbg !7544
  %tobool1 = icmp ne i8 %call, 0, !dbg !7544
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !7545

if.then2:                                         ; preds = %if.end
  %3 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7546
  call void @txt_delete_sel(%struct.Text* %3), !dbg !7548
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7549
  call void @txt_make_dirty(%struct.Text* %4), !dbg !7550
  br label %if.end41, !dbg !7551

if.else:                                          ; preds = %if.end
  %5 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7552
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 7, !dbg !7554
  %6 = load i32, i32* %curc, align 8, !dbg !7554
  %7 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7555
  %curl3 = getelementptr inbounds %struct.Text, %struct.Text* %7, i32 0, i32 5, !dbg !7556
  %8 = load %struct.TextLine*, %struct.TextLine** %curl3, align 8, !dbg !7556
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %8, i32 0, i32 4, !dbg !7557
  %9 = load i32, i32* %len, align 8, !dbg !7557
  %cmp = icmp eq i32 %6, %9, !dbg !7558
  br i1 %cmp, label %if.then4, label %if.else13, !dbg !7559

if.then4:                                         ; preds = %if.else
  %10 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7560
  %curl5 = getelementptr inbounds %struct.Text, %struct.Text* %10, i32 0, i32 5, !dbg !7563
  %11 = load %struct.TextLine*, %struct.TextLine** %curl5, align 8, !dbg !7563
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %11, i32 0, i32 0, !dbg !7564
  %12 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !7564
  %tobool6 = icmp ne %struct.TextLine* %12, null, !dbg !7560
  br i1 %tobool6, label %if.then7, label %if.else11, !dbg !7565

if.then7:                                         ; preds = %if.then4
  %13 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7566
  %14 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7568
  %curl8 = getelementptr inbounds %struct.Text, %struct.Text* %14, i32 0, i32 5, !dbg !7569
  %15 = load %struct.TextLine*, %struct.TextLine** %curl8, align 8, !dbg !7569
  %16 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7570
  %curl9 = getelementptr inbounds %struct.Text, %struct.Text* %16, i32 0, i32 5, !dbg !7571
  %17 = load %struct.TextLine*, %struct.TextLine** %curl9, align 8, !dbg !7571
  %next10 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %17, i32 0, i32 0, !dbg !7572
  %18 = load %struct.TextLine*, %struct.TextLine** %next10, align 8, !dbg !7572
  call void @txt_combine_lines(%struct.Text* %13, %struct.TextLine* %15, %struct.TextLine* %18), !dbg !7573
  %19 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7574
  call void @txt_pop_sel(%struct.Text* %19), !dbg !7575
  br label %if.end12, !dbg !7576

if.else11:                                        ; preds = %if.then4
  br label %if.end41, !dbg !7577

if.end12:                                         ; preds = %if.then7
  br label %if.end37, !dbg !7578

if.else13:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %c_len, metadata !7579, metadata !DIExpression()), !dbg !7581
  store i64 0, i64* %c_len, align 8, !dbg !7581
  %20 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7582
  %curl14 = getelementptr inbounds %struct.Text, %struct.Text* %20, i32 0, i32 5, !dbg !7583
  %21 = load %struct.TextLine*, %struct.TextLine** %curl14, align 8, !dbg !7583
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %21, i32 0, i32 2, !dbg !7584
  %22 = load i8*, i8** %line, align 8, !dbg !7584
  %23 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7585
  %curc15 = getelementptr inbounds %struct.Text, %struct.Text* %23, i32 0, i32 7, !dbg !7586
  %24 = load i32, i32* %curc15, align 8, !dbg !7586
  %idx.ext = sext i32 %24 to i64, !dbg !7587
  %add.ptr = getelementptr inbounds i8, i8* %22, i64 %idx.ext, !dbg !7587
  %call16 = call i32 @BLI_str_utf8_as_unicode_and_size(i8* %add.ptr, i64* %c_len), !dbg !7588
  store i32 %call16, i32* %c, align 4, !dbg !7589
  %25 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7590
  %curl17 = getelementptr inbounds %struct.Text, %struct.Text* %25, i32 0, i32 5, !dbg !7591
  %26 = load %struct.TextLine*, %struct.TextLine** %curl17, align 8, !dbg !7591
  %line18 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %26, i32 0, i32 2, !dbg !7592
  %27 = load i8*, i8** %line18, align 8, !dbg !7592
  %28 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7593
  %curc19 = getelementptr inbounds %struct.Text, %struct.Text* %28, i32 0, i32 7, !dbg !7594
  %29 = load i32, i32* %curc19, align 8, !dbg !7594
  %idx.ext20 = sext i32 %29 to i64, !dbg !7595
  %add.ptr21 = getelementptr inbounds i8, i8* %27, i64 %idx.ext20, !dbg !7595
  %30 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7596
  %curl22 = getelementptr inbounds %struct.Text, %struct.Text* %30, i32 0, i32 5, !dbg !7597
  %31 = load %struct.TextLine*, %struct.TextLine** %curl22, align 8, !dbg !7597
  %line23 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %31, i32 0, i32 2, !dbg !7598
  %32 = load i8*, i8** %line23, align 8, !dbg !7598
  %33 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7599
  %curc24 = getelementptr inbounds %struct.Text, %struct.Text* %33, i32 0, i32 7, !dbg !7600
  %34 = load i32, i32* %curc24, align 8, !dbg !7600
  %idx.ext25 = sext i32 %34 to i64, !dbg !7601
  %add.ptr26 = getelementptr inbounds i8, i8* %32, i64 %idx.ext25, !dbg !7601
  %35 = load i64, i64* %c_len, align 8, !dbg !7602
  %add.ptr27 = getelementptr inbounds i8, i8* %add.ptr26, i64 %35, !dbg !7603
  %36 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7604
  %curl28 = getelementptr inbounds %struct.Text, %struct.Text* %36, i32 0, i32 5, !dbg !7605
  %37 = load %struct.TextLine*, %struct.TextLine** %curl28, align 8, !dbg !7605
  %len29 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %37, i32 0, i32 4, !dbg !7606
  %38 = load i32, i32* %len29, align 8, !dbg !7606
  %39 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7607
  %curc30 = getelementptr inbounds %struct.Text, %struct.Text* %39, i32 0, i32 7, !dbg !7608
  %40 = load i32, i32* %curc30, align 8, !dbg !7608
  %sub = sub nsw i32 %38, %40, !dbg !7609
  %conv = sext i32 %sub to i64, !dbg !7604
  %41 = load i64, i64* %c_len, align 8, !dbg !7610
  %sub31 = sub i64 %conv, %41, !dbg !7611
  %add = add i64 %sub31, 1, !dbg !7612
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %add.ptr21, i8* align 1 %add.ptr27, i64 %add, i1 false), !dbg !7613
  %42 = load i64, i64* %c_len, align 8, !dbg !7614
  %43 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7615
  %curl32 = getelementptr inbounds %struct.Text, %struct.Text* %43, i32 0, i32 5, !dbg !7616
  %44 = load %struct.TextLine*, %struct.TextLine** %curl32, align 8, !dbg !7616
  %len33 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %44, i32 0, i32 4, !dbg !7617
  %45 = load i32, i32* %len33, align 8, !dbg !7618
  %conv34 = sext i32 %45 to i64, !dbg !7618
  %sub35 = sub i64 %conv34, %42, !dbg !7618
  %conv36 = trunc i64 %sub35 to i32, !dbg !7618
  store i32 %conv36, i32* %len33, align 8, !dbg !7618
  %46 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7619
  call void @txt_pop_sel(%struct.Text* %46), !dbg !7620
  br label %if.end37

if.end37:                                         ; preds = %if.else13, %if.end12
  br label %if.end38

if.end38:                                         ; preds = %if.end37
  %47 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7621
  call void @txt_make_dirty(%struct.Text* %47), !dbg !7622
  %48 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7623
  call void @txt_clean_text(%struct.Text* %48), !dbg !7624
  %49 = load i8, i8* @undoing, align 1, !dbg !7625
  %tobool39 = icmp ne i8 %49, 0, !dbg !7625
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !7627

if.then40:                                        ; preds = %if.end38
  %50 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7628
  %51 = load i32, i32* %c, align 4, !dbg !7629
  call void @txt_undo_add_charop(%struct.Text* %50, i32 19, i32 %51), !dbg !7630
  br label %if.end41, !dbg !7630

if.end41:                                         ; preds = %if.then, %if.then2, %if.else11, %if.then40, %if.end38
  ret void, !dbg !7631
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @txt_undo_read_unicode(i8* %undo_buf, i32* %undo_pos, i16 signext %bytes) #0 !dbg !7632 {
entry:
  %undo_buf.addr = alloca i8*, align 8
  %undo_pos.addr = alloca i32*, align 8
  %bytes.addr = alloca i16, align 2
  %unicode = alloca i32, align 4
  %utf8 = alloca [7 x i8], align 1
  store i8* %undo_buf, i8** %undo_buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %undo_buf.addr, metadata !7635, metadata !DIExpression()), !dbg !7636
  store i32* %undo_pos, i32** %undo_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %undo_pos.addr, metadata !7637, metadata !DIExpression()), !dbg !7638
  store i16 %bytes, i16* %bytes.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %bytes.addr, metadata !7639, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.declare(metadata i32* %unicode, metadata !7641, metadata !DIExpression()), !dbg !7642
  call void @llvm.dbg.declare(metadata [7 x i8]* %utf8, metadata !7643, metadata !DIExpression()), !dbg !7644
  %0 = load i16, i16* %bytes.addr, align 2, !dbg !7645
  %conv = sext i16 %0 to i32, !dbg !7645
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
    i32 3, label %sw.bb12
    i32 4, label %sw.bb28
  ], !dbg !7646

sw.bb:                                            ; preds = %entry
  %1 = load i8*, i8** %undo_buf.addr, align 8, !dbg !7647
  %2 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7649
  %3 = load i32, i32* %2, align 4, !dbg !7650
  %idxprom = sext i32 %3 to i64, !dbg !7647
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom, !dbg !7647
  %4 = load i8, i8* %arrayidx, align 1, !dbg !7647
  %conv1 = zext i8 %4 to i32, !dbg !7647
  store i32 %conv1, i32* %unicode, align 4, !dbg !7651
  %5 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7652
  %6 = load i32, i32* %5, align 4, !dbg !7653
  %dec = add nsw i32 %6, -1, !dbg !7653
  store i32 %dec, i32* %5, align 4, !dbg !7653
  br label %sw.epilog, !dbg !7654

sw.bb2:                                           ; preds = %entry
  %arrayidx3 = getelementptr inbounds [7 x i8], [7 x i8]* %utf8, i64 0, i64 2, !dbg !7655
  store i8 0, i8* %arrayidx3, align 1, !dbg !7656
  %7 = load i8*, i8** %undo_buf.addr, align 8, !dbg !7657
  %8 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7658
  %9 = load i32, i32* %8, align 4, !dbg !7659
  %idxprom4 = sext i32 %9 to i64, !dbg !7657
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i64 %idxprom4, !dbg !7657
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !7657
  %arrayidx6 = getelementptr inbounds [7 x i8], [7 x i8]* %utf8, i64 0, i64 1, !dbg !7660
  store i8 %10, i8* %arrayidx6, align 1, !dbg !7661
  %11 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7662
  %12 = load i32, i32* %11, align 4, !dbg !7663
  %dec7 = add nsw i32 %12, -1, !dbg !7663
  store i32 %dec7, i32* %11, align 4, !dbg !7663
  %13 = load i8*, i8** %undo_buf.addr, align 8, !dbg !7664
  %14 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7665
  %15 = load i32, i32* %14, align 4, !dbg !7666
  %idxprom8 = sext i32 %15 to i64, !dbg !7664
  %arrayidx9 = getelementptr inbounds i8, i8* %13, i64 %idxprom8, !dbg !7664
  %16 = load i8, i8* %arrayidx9, align 1, !dbg !7664
  %arrayidx10 = getelementptr inbounds [7 x i8], [7 x i8]* %utf8, i64 0, i64 0, !dbg !7667
  store i8 %16, i8* %arrayidx10, align 1, !dbg !7668
  %17 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7669
  %18 = load i32, i32* %17, align 4, !dbg !7670
  %dec11 = add nsw i32 %18, -1, !dbg !7670
  store i32 %dec11, i32* %17, align 4, !dbg !7670
  %arraydecay = getelementptr inbounds [7 x i8], [7 x i8]* %utf8, i64 0, i64 0, !dbg !7671
  %call = call i32 @BLI_str_utf8_as_unicode(i8* %arraydecay), !dbg !7672
  store i32 %call, i32* %unicode, align 4, !dbg !7673
  br label %sw.epilog, !dbg !7674

sw.bb12:                                          ; preds = %entry
  %arrayidx13 = getelementptr inbounds [7 x i8], [7 x i8]* %utf8, i64 0, i64 3, !dbg !7675
  store i8 0, i8* %arrayidx13, align 1, !dbg !7676
  %19 = load i8*, i8** %undo_buf.addr, align 8, !dbg !7677
  %20 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7678
  %21 = load i32, i32* %20, align 4, !dbg !7679
  %idxprom14 = sext i32 %21 to i64, !dbg !7677
  %arrayidx15 = getelementptr inbounds i8, i8* %19, i64 %idxprom14, !dbg !7677
  %22 = load i8, i8* %arrayidx15, align 1, !dbg !7677
  %arrayidx16 = getelementptr inbounds [7 x i8], [7 x i8]* %utf8, i64 0, i64 2, !dbg !7680
  store i8 %22, i8* %arrayidx16, align 1, !dbg !7681
  %23 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7682
  %24 = load i32, i32* %23, align 4, !dbg !7683
  %dec17 = add nsw i32 %24, -1, !dbg !7683
  store i32 %dec17, i32* %23, align 4, !dbg !7683
  %25 = load i8*, i8** %undo_buf.addr, align 8, !dbg !7684
  %26 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7685
  %27 = load i32, i32* %26, align 4, !dbg !7686
  %idxprom18 = sext i32 %27 to i64, !dbg !7684
  %arrayidx19 = getelementptr inbounds i8, i8* %25, i64 %idxprom18, !dbg !7684
  %28 = load i8, i8* %arrayidx19, align 1, !dbg !7684
  %arrayidx20 = getelementptr inbounds [7 x i8], [7 x i8]* %utf8, i64 0, i64 1, !dbg !7687
  store i8 %28, i8* %arrayidx20, align 1, !dbg !7688
  %29 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7689
  %30 = load i32, i32* %29, align 4, !dbg !7690
  %dec21 = add nsw i32 %30, -1, !dbg !7690
  store i32 %dec21, i32* %29, align 4, !dbg !7690
  %31 = load i8*, i8** %undo_buf.addr, align 8, !dbg !7691
  %32 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7692
  %33 = load i32, i32* %32, align 4, !dbg !7693
  %idxprom22 = sext i32 %33 to i64, !dbg !7691
  %arrayidx23 = getelementptr inbounds i8, i8* %31, i64 %idxprom22, !dbg !7691
  %34 = load i8, i8* %arrayidx23, align 1, !dbg !7691
  %arrayidx24 = getelementptr inbounds [7 x i8], [7 x i8]* %utf8, i64 0, i64 0, !dbg !7694
  store i8 %34, i8* %arrayidx24, align 1, !dbg !7695
  %35 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7696
  %36 = load i32, i32* %35, align 4, !dbg !7697
  %dec25 = add nsw i32 %36, -1, !dbg !7697
  store i32 %dec25, i32* %35, align 4, !dbg !7697
  %arraydecay26 = getelementptr inbounds [7 x i8], [7 x i8]* %utf8, i64 0, i64 0, !dbg !7698
  %call27 = call i32 @BLI_str_utf8_as_unicode(i8* %arraydecay26), !dbg !7699
  store i32 %call27, i32* %unicode, align 4, !dbg !7700
  br label %sw.epilog, !dbg !7701

sw.bb28:                                          ; preds = %entry
  %37 = load i8*, i8** %undo_buf.addr, align 8, !dbg !7702
  %38 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7703
  %call29 = call i32 @txt_undo_read_uint32(i8* %37, i32* %38), !dbg !7704
  store i32 %call29, i32* %unicode, align 4, !dbg !7705
  br label %sw.epilog, !dbg !7706

sw.default:                                       ; preds = %entry
  store i32 0, i32* %unicode, align 4, !dbg !7707
  br label %sw.epilog, !dbg !7708

sw.epilog:                                        ; preds = %sw.default, %sw.bb28, %sw.bb12, %sw.bb2, %sw.bb
  %39 = load i32, i32* %unicode, align 4, !dbg !7709
  ret i32 %39, !dbg !7710
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @txt_add_char(%struct.Text* %text, i32 %add) #0 !dbg !7711 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %add.addr = alloca i32, align 4
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !7712, metadata !DIExpression()), !dbg !7713
  store i32 %add, i32* %add.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %add.addr, metadata !7714, metadata !DIExpression()), !dbg !7715
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7716
  %1 = load i32, i32* %add.addr, align 4, !dbg !7717
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7718
  %flags = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 2, !dbg !7719
  %3 = load i32, i32* %flags, align 8, !dbg !7719
  %and = and i32 %3, 1024, !dbg !7720
  %cmp = icmp ne i32 %and, 0, !dbg !7721
  %conv = zext i1 %cmp to i32, !dbg !7721
  %conv1 = trunc i32 %conv to i8, !dbg !7722
  %call = call zeroext i8 @txt_add_char_intern(%struct.Text* %0, i32 %1, i8 zeroext %conv1), !dbg !7723
  ret i8 %call, !dbg !7724
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @txt_undo_read_uint32(i8* %undo_buf, i32* %undo_pos) #0 !dbg !7725 {
entry:
  %undo_buf.addr = alloca i8*, align 8
  %undo_pos.addr = alloca i32*, align 8
  %val = alloca i32, align 4
  store i8* %undo_buf, i8** %undo_buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %undo_buf.addr, metadata !7728, metadata !DIExpression()), !dbg !7729
  store i32* %undo_pos, i32** %undo_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %undo_pos.addr, metadata !7730, metadata !DIExpression()), !dbg !7731
  call void @llvm.dbg.declare(metadata i32* %val, metadata !7732, metadata !DIExpression()), !dbg !7733
  %0 = load i8*, i8** %undo_buf.addr, align 8, !dbg !7734
  %1 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7735
  %2 = load i32, i32* %1, align 4, !dbg !7736
  %idxprom = sext i32 %2 to i64, !dbg !7734
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !7734
  %3 = load i8, i8* %arrayidx, align 1, !dbg !7734
  %conv = zext i8 %3 to i32, !dbg !7734
  store i32 %conv, i32* %val, align 4, !dbg !7737
  %4 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7738
  %5 = load i32, i32* %4, align 4, !dbg !7739
  %dec = add nsw i32 %5, -1, !dbg !7739
  store i32 %dec, i32* %4, align 4, !dbg !7739
  %6 = load i32, i32* %val, align 4, !dbg !7740
  %shl = shl i32 %6, 8, !dbg !7741
  %7 = load i8*, i8** %undo_buf.addr, align 8, !dbg !7742
  %8 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7743
  %9 = load i32, i32* %8, align 4, !dbg !7744
  %idxprom1 = sext i32 %9 to i64, !dbg !7742
  %arrayidx2 = getelementptr inbounds i8, i8* %7, i64 %idxprom1, !dbg !7742
  %10 = load i8, i8* %arrayidx2, align 1, !dbg !7742
  %conv3 = zext i8 %10 to i32, !dbg !7742
  %add = add i32 %shl, %conv3, !dbg !7745
  store i32 %add, i32* %val, align 4, !dbg !7746
  %11 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7747
  %12 = load i32, i32* %11, align 4, !dbg !7748
  %dec4 = add nsw i32 %12, -1, !dbg !7748
  store i32 %dec4, i32* %11, align 4, !dbg !7748
  %13 = load i32, i32* %val, align 4, !dbg !7749
  %shl5 = shl i32 %13, 8, !dbg !7750
  %14 = load i8*, i8** %undo_buf.addr, align 8, !dbg !7751
  %15 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7752
  %16 = load i32, i32* %15, align 4, !dbg !7753
  %idxprom6 = sext i32 %16 to i64, !dbg !7751
  %arrayidx7 = getelementptr inbounds i8, i8* %14, i64 %idxprom6, !dbg !7751
  %17 = load i8, i8* %arrayidx7, align 1, !dbg !7751
  %conv8 = zext i8 %17 to i32, !dbg !7751
  %add9 = add i32 %shl5, %conv8, !dbg !7754
  store i32 %add9, i32* %val, align 4, !dbg !7755
  %18 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7756
  %19 = load i32, i32* %18, align 4, !dbg !7757
  %dec10 = add nsw i32 %19, -1, !dbg !7757
  store i32 %dec10, i32* %18, align 4, !dbg !7757
  %20 = load i32, i32* %val, align 4, !dbg !7758
  %shl11 = shl i32 %20, 8, !dbg !7759
  %21 = load i8*, i8** %undo_buf.addr, align 8, !dbg !7760
  %22 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7761
  %23 = load i32, i32* %22, align 4, !dbg !7762
  %idxprom12 = sext i32 %23 to i64, !dbg !7760
  %arrayidx13 = getelementptr inbounds i8, i8* %21, i64 %idxprom12, !dbg !7760
  %24 = load i8, i8* %arrayidx13, align 1, !dbg !7760
  %conv14 = zext i8 %24 to i32, !dbg !7760
  %add15 = add i32 %shl11, %conv14, !dbg !7763
  store i32 %add15, i32* %val, align 4, !dbg !7764
  %25 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7765
  %26 = load i32, i32* %25, align 4, !dbg !7766
  %dec16 = add nsw i32 %26, -1, !dbg !7766
  store i32 %dec16, i32* %25, align 4, !dbg !7766
  %27 = load i32, i32* %val, align 4, !dbg !7767
  ret i32 %27, !dbg !7768
}

; Function Attrs: noinline nounwind uwtable
define internal void @txt_undo_read_cursors(i8* %undo_buf, i32* %undo_pos, i32* %curln, i16* %curc, i32* %selln, i16* %selc) #0 !dbg !7769 {
entry:
  %undo_buf.addr = alloca i8*, align 8
  %undo_pos.addr = alloca i32*, align 8
  %curln.addr = alloca i32*, align 8
  %curc.addr = alloca i16*, align 8
  %selln.addr = alloca i32*, align 8
  %selc.addr = alloca i16*, align 8
  store i8* %undo_buf, i8** %undo_buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %undo_buf.addr, metadata !7772, metadata !DIExpression()), !dbg !7773
  store i32* %undo_pos, i32** %undo_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %undo_pos.addr, metadata !7774, metadata !DIExpression()), !dbg !7775
  store i32* %curln, i32** %curln.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %curln.addr, metadata !7776, metadata !DIExpression()), !dbg !7777
  store i16* %curc, i16** %curc.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %curc.addr, metadata !7778, metadata !DIExpression()), !dbg !7779
  store i32* %selln, i32** %selln.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %selln.addr, metadata !7780, metadata !DIExpression()), !dbg !7781
  store i16* %selc, i16** %selc.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %selc.addr, metadata !7782, metadata !DIExpression()), !dbg !7783
  %0 = load i8*, i8** %undo_buf.addr, align 8, !dbg !7784
  %1 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7785
  %2 = load i32*, i32** %selln.addr, align 8, !dbg !7786
  %3 = load i16*, i16** %selc.addr, align 8, !dbg !7787
  call void @txt_undo_read_sel(i8* %0, i32* %1, i32* %2, i16* %3), !dbg !7788
  %4 = load i8*, i8** %undo_buf.addr, align 8, !dbg !7789
  %5 = load i32*, i32** %undo_pos.addr, align 8, !dbg !7790
  %6 = load i32*, i32** %curln.addr, align 8, !dbg !7791
  %7 = load i16*, i16** %curc.addr, align 8, !dbg !7792
  call void @txt_undo_read_cur(i8* %4, i32* %5, i32* %6, i16* %7), !dbg !7793
  ret void, !dbg !7794
}

declare dso_local i64 @BLI_strlen_utf8(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_delete_selected(%struct.Text* %text) #0 !dbg !7795 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !7796, metadata !DIExpression()), !dbg !7797
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7798
  call void @txt_delete_sel(%struct.Text* %0), !dbg !7799
  %1 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7800
  call void @txt_make_dirty(%struct.Text* %1), !dbg !7801
  ret void, !dbg !7802
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_unindent(%struct.Text* %text) #0 !dbg !7803 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %num = alloca i32, align 4
  %remove = alloca i8*, align 8
  %indentlen = alloca i32, align 4
  %unindented_first = alloca i8, align 1
  %spaceslen = alloca i32, align 4
  %changed = alloca i8, align 1
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !7804, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.declare(metadata i32* %num, metadata !7806, metadata !DIExpression()), !dbg !7807
  store i32 0, i32* %num, align 4, !dbg !7807
  call void @llvm.dbg.declare(metadata i8** %remove, metadata !7808, metadata !DIExpression()), !dbg !7809
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i8** %remove, align 8, !dbg !7809
  call void @llvm.dbg.declare(metadata i32* %indentlen, metadata !7810, metadata !DIExpression()), !dbg !7811
  store i32 1, i32* %indentlen, align 4, !dbg !7811
  call void @llvm.dbg.declare(metadata i8* %unindented_first, metadata !7812, metadata !DIExpression()), !dbg !7813
  store i8 0, i8* %unindented_first, align 1, !dbg !7813
  call void @llvm.dbg.declare(metadata i32* %spaceslen, metadata !7814, metadata !DIExpression()), !dbg !7815
  store i32 4, i32* %spaceslen, align 4, !dbg !7815
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7816
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !7816
  %1 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !7816
  %cmp = icmp eq %struct.TextLine* null, %1, !dbg !7816
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7816

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7816
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 6, !dbg !7816
  %3 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !7816
  %cmp1 = icmp eq %struct.TextLine* null, %3, !dbg !7816
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7818

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end59, !dbg !7819

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7821
  %flags = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 2, !dbg !7823
  %5 = load i32, i32* %flags, align 8, !dbg !7823
  %and = and i32 %5, 1024, !dbg !7824
  %tobool = icmp ne i32 %and, 0, !dbg !7824
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !7825

if.then2:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @tab_to_spaces, i64 0, i64 0), i8** %remove, align 8, !dbg !7826
  %6 = load i32, i32* %spaceslen, align 4, !dbg !7828
  store i32 %6, i32* %indentlen, align 4, !dbg !7829
  br label %if.end3, !dbg !7830

if.end3:                                          ; preds = %if.then2, %if.end
  br label %while.body, !dbg !7831

while.body:                                       ; preds = %if.end3, %if.end37
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !7832, metadata !DIExpression()), !dbg !7834
  store i8 0, i8* %changed, align 1, !dbg !7834
  %7 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7835
  %curl4 = getelementptr inbounds %struct.Text, %struct.Text* %7, i32 0, i32 5, !dbg !7837
  %8 = load %struct.TextLine*, %struct.TextLine** %curl4, align 8, !dbg !7837
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %8, i32 0, i32 2, !dbg !7838
  %9 = load i8*, i8** %line, align 8, !dbg !7838
  %10 = load i8*, i8** %remove, align 8, !dbg !7839
  %11 = load i32, i32* %indentlen, align 4, !dbg !7840
  %conv = sext i32 %11 to i64, !dbg !7840
  %call = call i32 @strncmp(i8* %9, i8* %10, i64 %conv) #6, !dbg !7841
  %cmp5 = icmp eq i32 %call, 0, !dbg !7842
  br i1 %cmp5, label %if.then7, label %if.end20, !dbg !7843

if.then7:                                         ; preds = %while.body
  %12 = load i32, i32* %num, align 4, !dbg !7844
  %cmp8 = icmp eq i32 %12, 0, !dbg !7847
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !7848

if.then10:                                        ; preds = %if.then7
  store i8 1, i8* %unindented_first, align 1, !dbg !7849
  br label %if.end11, !dbg !7850

if.end11:                                         ; preds = %if.then10, %if.then7
  %13 = load i32, i32* %indentlen, align 4, !dbg !7851
  %14 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7852
  %curl12 = getelementptr inbounds %struct.Text, %struct.Text* %14, i32 0, i32 5, !dbg !7853
  %15 = load %struct.TextLine*, %struct.TextLine** %curl12, align 8, !dbg !7853
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %15, i32 0, i32 4, !dbg !7854
  %16 = load i32, i32* %len, align 8, !dbg !7855
  %sub = sub nsw i32 %16, %13, !dbg !7855
  store i32 %sub, i32* %len, align 8, !dbg !7855
  %17 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7856
  %curl13 = getelementptr inbounds %struct.Text, %struct.Text* %17, i32 0, i32 5, !dbg !7857
  %18 = load %struct.TextLine*, %struct.TextLine** %curl13, align 8, !dbg !7857
  %line14 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %18, i32 0, i32 2, !dbg !7858
  %19 = load i8*, i8** %line14, align 8, !dbg !7858
  %20 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7859
  %curl15 = getelementptr inbounds %struct.Text, %struct.Text* %20, i32 0, i32 5, !dbg !7860
  %21 = load %struct.TextLine*, %struct.TextLine** %curl15, align 8, !dbg !7860
  %line16 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %21, i32 0, i32 2, !dbg !7861
  %22 = load i8*, i8** %line16, align 8, !dbg !7861
  %23 = load i32, i32* %indentlen, align 4, !dbg !7862
  %idx.ext = sext i32 %23 to i64, !dbg !7863
  %add.ptr = getelementptr inbounds i8, i8* %22, i64 %idx.ext, !dbg !7863
  %24 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7864
  %curl17 = getelementptr inbounds %struct.Text, %struct.Text* %24, i32 0, i32 5, !dbg !7865
  %25 = load %struct.TextLine*, %struct.TextLine** %curl17, align 8, !dbg !7865
  %len18 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %25, i32 0, i32 4, !dbg !7866
  %26 = load i32, i32* %len18, align 8, !dbg !7866
  %add = add nsw i32 %26, 1, !dbg !7867
  %conv19 = sext i32 %add to i64, !dbg !7864
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %19, i8* align 1 %add.ptr, i64 %conv19, i1 false), !dbg !7868
  store i8 1, i8* %changed, align 1, !dbg !7869
  br label %if.end20, !dbg !7870

if.end20:                                         ; preds = %if.end11, %while.body
  %27 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7871
  call void @txt_make_dirty(%struct.Text* %27), !dbg !7872
  %28 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7873
  call void @txt_clean_text(%struct.Text* %28), !dbg !7874
  %29 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7875
  %curl21 = getelementptr inbounds %struct.Text, %struct.Text* %29, i32 0, i32 5, !dbg !7877
  %30 = load %struct.TextLine*, %struct.TextLine** %curl21, align 8, !dbg !7877
  %31 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7878
  %sell22 = getelementptr inbounds %struct.Text, %struct.Text* %31, i32 0, i32 6, !dbg !7879
  %32 = load %struct.TextLine*, %struct.TextLine** %sell22, align 8, !dbg !7879
  %cmp23 = icmp eq %struct.TextLine* %30, %32, !dbg !7880
  br i1 %cmp23, label %if.then25, label %if.else, !dbg !7881

if.then25:                                        ; preds = %if.end20
  %33 = load i8, i8* %changed, align 1, !dbg !7882
  %tobool26 = icmp ne i8 %33, 0, !dbg !7882
  br i1 %tobool26, label %if.then27, label %if.end34, !dbg !7885

if.then27:                                        ; preds = %if.then25
  %34 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7886
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %34, i32 0, i32 8, !dbg !7886
  %35 = load i32, i32* %selc, align 4, !dbg !7886
  %36 = load i32, i32* %indentlen, align 4, !dbg !7886
  %sub28 = sub nsw i32 %35, %36, !dbg !7886
  %cmp29 = icmp sgt i32 %sub28, 0, !dbg !7886
  br i1 %cmp29, label %cond.true, label %cond.false, !dbg !7886

cond.true:                                        ; preds = %if.then27
  %37 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7886
  %selc31 = getelementptr inbounds %struct.Text, %struct.Text* %37, i32 0, i32 8, !dbg !7886
  %38 = load i32, i32* %selc31, align 4, !dbg !7886
  %39 = load i32, i32* %indentlen, align 4, !dbg !7886
  %sub32 = sub nsw i32 %38, %39, !dbg !7886
  br label %cond.end, !dbg !7886

cond.false:                                       ; preds = %if.then27
  br label %cond.end, !dbg !7886

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub32, %cond.true ], [ 0, %cond.false ], !dbg !7886
  %40 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7887
  %selc33 = getelementptr inbounds %struct.Text, %struct.Text* %40, i32 0, i32 8, !dbg !7888
  store i32 %cond, i32* %selc33, align 4, !dbg !7889
  br label %if.end34, !dbg !7887

if.end34:                                         ; preds = %cond.end, %if.then25
  br label %while.end, !dbg !7890

if.else:                                          ; preds = %if.end20
  %41 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7891
  %curl35 = getelementptr inbounds %struct.Text, %struct.Text* %41, i32 0, i32 5, !dbg !7893
  %42 = load %struct.TextLine*, %struct.TextLine** %curl35, align 8, !dbg !7893
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %42, i32 0, i32 0, !dbg !7894
  %43 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !7894
  %44 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7895
  %curl36 = getelementptr inbounds %struct.Text, %struct.Text* %44, i32 0, i32 5, !dbg !7896
  store %struct.TextLine* %43, %struct.TextLine** %curl36, align 8, !dbg !7897
  %45 = load i32, i32* %num, align 4, !dbg !7898
  %inc = add nsw i32 %45, 1, !dbg !7898
  store i32 %inc, i32* %num, align 4, !dbg !7898
  br label %if.end37

if.end37:                                         ; preds = %if.else
  br label %while.body, !dbg !7831, !llvm.loop !7899

while.end:                                        ; preds = %if.end34
  %46 = load i8, i8* %unindented_first, align 1, !dbg !7901
  %tobool38 = icmp ne i8 %46, 0, !dbg !7901
  br i1 %tobool38, label %if.then39, label %if.end50, !dbg !7903

if.then39:                                        ; preds = %while.end
  %47 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7904
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %47, i32 0, i32 7, !dbg !7904
  %48 = load i32, i32* %curc, align 8, !dbg !7904
  %49 = load i32, i32* %indentlen, align 4, !dbg !7904
  %sub40 = sub nsw i32 %48, %49, !dbg !7904
  %cmp41 = icmp sgt i32 %sub40, 0, !dbg !7904
  br i1 %cmp41, label %cond.true43, label %cond.false46, !dbg !7904

cond.true43:                                      ; preds = %if.then39
  %50 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7904
  %curc44 = getelementptr inbounds %struct.Text, %struct.Text* %50, i32 0, i32 7, !dbg !7904
  %51 = load i32, i32* %curc44, align 8, !dbg !7904
  %52 = load i32, i32* %indentlen, align 4, !dbg !7904
  %sub45 = sub nsw i32 %51, %52, !dbg !7904
  br label %cond.end47, !dbg !7904

cond.false46:                                     ; preds = %if.then39
  br label %cond.end47, !dbg !7904

cond.end47:                                       ; preds = %cond.false46, %cond.true43
  %cond48 = phi i32 [ %sub45, %cond.true43 ], [ 0, %cond.false46 ], !dbg !7904
  %53 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7905
  %curc49 = getelementptr inbounds %struct.Text, %struct.Text* %53, i32 0, i32 7, !dbg !7906
  store i32 %cond48, i32* %curc49, align 8, !dbg !7907
  br label %if.end50, !dbg !7905

if.end50:                                         ; preds = %cond.end47, %while.end
  br label %while.cond, !dbg !7908

while.cond:                                       ; preds = %while.body53, %if.end50
  %54 = load i32, i32* %num, align 4, !dbg !7909
  %cmp51 = icmp sgt i32 %54, 0, !dbg !7910
  br i1 %cmp51, label %while.body53, label %while.end56, !dbg !7908

while.body53:                                     ; preds = %while.cond
  %55 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7911
  %curl54 = getelementptr inbounds %struct.Text, %struct.Text* %55, i32 0, i32 5, !dbg !7913
  %56 = load %struct.TextLine*, %struct.TextLine** %curl54, align 8, !dbg !7913
  %prev = getelementptr inbounds %struct.TextLine, %struct.TextLine* %56, i32 0, i32 1, !dbg !7914
  %57 = load %struct.TextLine*, %struct.TextLine** %prev, align 8, !dbg !7914
  %58 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7915
  %curl55 = getelementptr inbounds %struct.Text, %struct.Text* %58, i32 0, i32 5, !dbg !7916
  store %struct.TextLine* %57, %struct.TextLine** %curl55, align 8, !dbg !7917
  %59 = load i32, i32* %num, align 4, !dbg !7918
  %dec = add nsw i32 %59, -1, !dbg !7918
  store i32 %dec, i32* %num, align 4, !dbg !7918
  br label %while.cond, !dbg !7908, !llvm.loop !7919

while.end56:                                      ; preds = %while.cond
  %60 = load i8, i8* @undoing, align 1, !dbg !7921
  %tobool57 = icmp ne i8 %60, 0, !dbg !7921
  br i1 %tobool57, label %if.end59, label %if.then58, !dbg !7923

if.then58:                                        ; preds = %while.end56
  %61 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7924
  call void @txt_undo_add_op(%struct.Text* %61, i32 27), !dbg !7926
  br label %if.end59, !dbg !7927

if.end59:                                         ; preds = %if.then, %if.then58, %while.end56
  ret void, !dbg !7928
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_indent(%struct.Text* %text) #0 !dbg !7929 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %len = alloca i32, align 4
  %num = alloca i32, align 4
  %curc_old = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %add = alloca i8*, align 8
  %indentlen = alloca i32, align 4
  %spaceslen = alloca i32, align 4
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !7930, metadata !DIExpression()), !dbg !7931
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7932, metadata !DIExpression()), !dbg !7933
  call void @llvm.dbg.declare(metadata i32* %num, metadata !7934, metadata !DIExpression()), !dbg !7935
  call void @llvm.dbg.declare(metadata i32* %curc_old, metadata !7936, metadata !DIExpression()), !dbg !7937
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !7938, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.declare(metadata i8** %add, metadata !7940, metadata !DIExpression()), !dbg !7941
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i8** %add, align 8, !dbg !7941
  call void @llvm.dbg.declare(metadata i32* %indentlen, metadata !7942, metadata !DIExpression()), !dbg !7943
  store i32 1, i32* %indentlen, align 4, !dbg !7943
  call void @llvm.dbg.declare(metadata i32* %spaceslen, metadata !7944, metadata !DIExpression()), !dbg !7945
  store i32 4, i32* %spaceslen, align 4, !dbg !7945
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7946
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !7946
  %1 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !7946
  %cmp = icmp eq %struct.TextLine* null, %1, !dbg !7946
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7946

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7946
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 6, !dbg !7946
  %3 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !7946
  %cmp1 = icmp eq %struct.TextLine* null, %3, !dbg !7946
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7948

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end71, !dbg !7949

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7951
  %flags = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 2, !dbg !7953
  %5 = load i32, i32* %flags, align 8, !dbg !7953
  %and = and i32 %5, 1024, !dbg !7954
  %tobool = icmp ne i32 %and, 0, !dbg !7954
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !7955

if.then2:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @tab_to_spaces, i64 0, i64 0), i8** %add, align 8, !dbg !7956
  %6 = load i32, i32* %spaceslen, align 4, !dbg !7958
  store i32 %6, i32* %indentlen, align 4, !dbg !7959
  br label %if.end3, !dbg !7960

if.end3:                                          ; preds = %if.then2, %if.end
  %7 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7961
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %7, i32 0, i32 7, !dbg !7962
  %8 = load i32, i32* %curc, align 8, !dbg !7962
  store i32 %8, i32* %curc_old, align 4, !dbg !7963
  store i32 0, i32* %num, align 4, !dbg !7964
  br label %while.body, !dbg !7965

while.body:                                       ; preds = %if.end3, %if.end55
  %9 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7966
  %curl4 = getelementptr inbounds %struct.Text, %struct.Text* %9, i32 0, i32 5, !dbg !7969
  %10 = load %struct.TextLine*, %struct.TextLine** %curl4, align 8, !dbg !7969
  %len5 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %10, i32 0, i32 4, !dbg !7970
  %11 = load i32, i32* %len5, align 8, !dbg !7970
  %cmp6 = icmp ne i32 %11, 0, !dbg !7971
  br i1 %cmp6, label %if.then7, label %if.end46, !dbg !7972

if.then7:                                         ; preds = %while.body
  %12 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7973
  %13 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7975
  %curl8 = getelementptr inbounds %struct.Text, %struct.Text* %13, i32 0, i32 5, !dbg !7976
  %14 = load %struct.TextLine*, %struct.TextLine** %curl8, align 8, !dbg !7976
  %len9 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %14, i32 0, i32 4, !dbg !7977
  %15 = load i32, i32* %len9, align 8, !dbg !7977
  %16 = load i32, i32* %indentlen, align 4, !dbg !7978
  %add10 = add nsw i32 %15, %16, !dbg !7979
  %add11 = add nsw i32 %add10, 1, !dbg !7980
  %conv = sext i32 %add11 to i64, !dbg !7975
  %call = call i8* %12(i64 %conv, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)), !dbg !7973
  store i8* %call, i8** %tmp, align 8, !dbg !7981
  %17 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7982
  %curc12 = getelementptr inbounds %struct.Text, %struct.Text* %17, i32 0, i32 7, !dbg !7983
  store i32 0, i32* %curc12, align 8, !dbg !7984
  %18 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7985
  %curc13 = getelementptr inbounds %struct.Text, %struct.Text* %18, i32 0, i32 7, !dbg !7987
  %19 = load i32, i32* %curc13, align 8, !dbg !7987
  %tobool14 = icmp ne i32 %19, 0, !dbg !7985
  br i1 %tobool14, label %if.then15, label %if.end19, !dbg !7988

if.then15:                                        ; preds = %if.then7
  %20 = load i8*, i8** %tmp, align 8, !dbg !7989
  %21 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7990
  %curl16 = getelementptr inbounds %struct.Text, %struct.Text* %21, i32 0, i32 5, !dbg !7991
  %22 = load %struct.TextLine*, %struct.TextLine** %curl16, align 8, !dbg !7991
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %22, i32 0, i32 2, !dbg !7992
  %23 = load i8*, i8** %line, align 8, !dbg !7992
  %24 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7993
  %curc17 = getelementptr inbounds %struct.Text, %struct.Text* %24, i32 0, i32 7, !dbg !7994
  %25 = load i32, i32* %curc17, align 8, !dbg !7994
  %conv18 = sext i32 %25 to i64, !dbg !7993
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %23, i64 %conv18, i1 false), !dbg !7995
  br label %if.end19, !dbg !7995

if.end19:                                         ; preds = %if.then15, %if.then7
  %26 = load i8*, i8** %tmp, align 8, !dbg !7996
  %27 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7997
  %curc20 = getelementptr inbounds %struct.Text, %struct.Text* %27, i32 0, i32 7, !dbg !7998
  %28 = load i32, i32* %curc20, align 8, !dbg !7998
  %idx.ext = sext i32 %28 to i64, !dbg !7999
  %add.ptr = getelementptr inbounds i8, i8* %26, i64 %idx.ext, !dbg !7999
  %29 = load i8*, i8** %add, align 8, !dbg !8000
  %30 = load i32, i32* %indentlen, align 4, !dbg !8001
  %conv21 = sext i32 %30 to i64, !dbg !8001
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %29, i64 %conv21, i1 false), !dbg !8002
  %31 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8003
  %curl22 = getelementptr inbounds %struct.Text, %struct.Text* %31, i32 0, i32 5, !dbg !8004
  %32 = load %struct.TextLine*, %struct.TextLine** %curl22, align 8, !dbg !8004
  %len23 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %32, i32 0, i32 4, !dbg !8005
  %33 = load i32, i32* %len23, align 8, !dbg !8005
  %34 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8006
  %curc24 = getelementptr inbounds %struct.Text, %struct.Text* %34, i32 0, i32 7, !dbg !8007
  %35 = load i32, i32* %curc24, align 8, !dbg !8007
  %sub = sub nsw i32 %33, %35, !dbg !8008
  store i32 %sub, i32* %len, align 4, !dbg !8009
  %36 = load i32, i32* %len, align 4, !dbg !8010
  %cmp25 = icmp sgt i32 %36, 0, !dbg !8012
  br i1 %cmp25, label %if.then27, label %if.end39, !dbg !8013

if.then27:                                        ; preds = %if.end19
  %37 = load i8*, i8** %tmp, align 8, !dbg !8014
  %38 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8015
  %curc28 = getelementptr inbounds %struct.Text, %struct.Text* %38, i32 0, i32 7, !dbg !8016
  %39 = load i32, i32* %curc28, align 8, !dbg !8016
  %idx.ext29 = sext i32 %39 to i64, !dbg !8017
  %add.ptr30 = getelementptr inbounds i8, i8* %37, i64 %idx.ext29, !dbg !8017
  %40 = load i32, i32* %indentlen, align 4, !dbg !8018
  %idx.ext31 = sext i32 %40 to i64, !dbg !8019
  %add.ptr32 = getelementptr inbounds i8, i8* %add.ptr30, i64 %idx.ext31, !dbg !8019
  %41 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8020
  %curl33 = getelementptr inbounds %struct.Text, %struct.Text* %41, i32 0, i32 5, !dbg !8021
  %42 = load %struct.TextLine*, %struct.TextLine** %curl33, align 8, !dbg !8021
  %line34 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %42, i32 0, i32 2, !dbg !8022
  %43 = load i8*, i8** %line34, align 8, !dbg !8022
  %44 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8023
  %curc35 = getelementptr inbounds %struct.Text, %struct.Text* %44, i32 0, i32 7, !dbg !8024
  %45 = load i32, i32* %curc35, align 8, !dbg !8024
  %idx.ext36 = sext i32 %45 to i64, !dbg !8025
  %add.ptr37 = getelementptr inbounds i8, i8* %43, i64 %idx.ext36, !dbg !8025
  %46 = load i32, i32* %len, align 4, !dbg !8026
  %conv38 = sext i32 %46 to i64, !dbg !8026
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr32, i8* align 1 %add.ptr37, i64 %conv38, i1 false), !dbg !8027
  br label %if.end39, !dbg !8027

if.end39:                                         ; preds = %if.then27, %if.end19
  %47 = load i8*, i8** %tmp, align 8, !dbg !8028
  %48 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8029
  %curl40 = getelementptr inbounds %struct.Text, %struct.Text* %48, i32 0, i32 5, !dbg !8030
  %49 = load %struct.TextLine*, %struct.TextLine** %curl40, align 8, !dbg !8030
  %len41 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %49, i32 0, i32 4, !dbg !8031
  %50 = load i32, i32* %len41, align 8, !dbg !8031
  %51 = load i32, i32* %indentlen, align 4, !dbg !8032
  %add42 = add nsw i32 %50, %51, !dbg !8033
  %idxprom = sext i32 %add42 to i64, !dbg !8028
  %arrayidx = getelementptr inbounds i8, i8* %47, i64 %idxprom, !dbg !8028
  store i8 0, i8* %arrayidx, align 1, !dbg !8034
  %52 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8035
  %curl43 = getelementptr inbounds %struct.Text, %struct.Text* %52, i32 0, i32 5, !dbg !8036
  %53 = load %struct.TextLine*, %struct.TextLine** %curl43, align 8, !dbg !8036
  %54 = load i8*, i8** %tmp, align 8, !dbg !8037
  call void @make_new_line(%struct.TextLine* %53, i8* %54), !dbg !8038
  %55 = load i32, i32* %indentlen, align 4, !dbg !8039
  %56 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8040
  %curc44 = getelementptr inbounds %struct.Text, %struct.Text* %56, i32 0, i32 7, !dbg !8041
  %57 = load i32, i32* %curc44, align 8, !dbg !8042
  %add45 = add nsw i32 %57, %55, !dbg !8042
  store i32 %add45, i32* %curc44, align 8, !dbg !8042
  %58 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8043
  call void @txt_make_dirty(%struct.Text* %58), !dbg !8044
  %59 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8045
  call void @txt_clean_text(%struct.Text* %59), !dbg !8046
  br label %if.end46, !dbg !8047

if.end46:                                         ; preds = %if.end39, %while.body
  %60 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8048
  %curl47 = getelementptr inbounds %struct.Text, %struct.Text* %60, i32 0, i32 5, !dbg !8050
  %61 = load %struct.TextLine*, %struct.TextLine** %curl47, align 8, !dbg !8050
  %62 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8051
  %sell48 = getelementptr inbounds %struct.Text, %struct.Text* %62, i32 0, i32 6, !dbg !8052
  %63 = load %struct.TextLine*, %struct.TextLine** %sell48, align 8, !dbg !8052
  %cmp49 = icmp eq %struct.TextLine* %61, %63, !dbg !8053
  br i1 %cmp49, label %if.then51, label %if.else, !dbg !8054

if.then51:                                        ; preds = %if.end46
  %64 = load i32, i32* %indentlen, align 4, !dbg !8055
  %65 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8057
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %65, i32 0, i32 8, !dbg !8058
  %66 = load i32, i32* %selc, align 4, !dbg !8059
  %add52 = add nsw i32 %66, %64, !dbg !8059
  store i32 %add52, i32* %selc, align 4, !dbg !8059
  br label %while.end, !dbg !8060

if.else:                                          ; preds = %if.end46
  %67 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8061
  %curl53 = getelementptr inbounds %struct.Text, %struct.Text* %67, i32 0, i32 5, !dbg !8063
  %68 = load %struct.TextLine*, %struct.TextLine** %curl53, align 8, !dbg !8063
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %68, i32 0, i32 0, !dbg !8064
  %69 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !8064
  %70 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8065
  %curl54 = getelementptr inbounds %struct.Text, %struct.Text* %70, i32 0, i32 5, !dbg !8066
  store %struct.TextLine* %69, %struct.TextLine** %curl54, align 8, !dbg !8067
  %71 = load i32, i32* %num, align 4, !dbg !8068
  %inc = add nsw i32 %71, 1, !dbg !8068
  store i32 %inc, i32* %num, align 4, !dbg !8068
  br label %if.end55

if.end55:                                         ; preds = %if.else
  br label %while.body, !dbg !7965, !llvm.loop !8069

while.end:                                        ; preds = %if.then51
  %72 = load i32, i32* %curc_old, align 4, !dbg !8071
  %tobool56 = icmp ne i32 %72, 0, !dbg !8071
  br i1 %tobool56, label %if.else59, label %if.then57, !dbg !8073

if.then57:                                        ; preds = %while.end
  %73 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8074
  %curc58 = getelementptr inbounds %struct.Text, %struct.Text* %73, i32 0, i32 7, !dbg !8075
  store i32 0, i32* %curc58, align 8, !dbg !8076
  br label %if.end62, !dbg !8074

if.else59:                                        ; preds = %while.end
  %74 = load i32, i32* %curc_old, align 4, !dbg !8077
  %75 = load i32, i32* %indentlen, align 4, !dbg !8078
  %add60 = add nsw i32 %74, %75, !dbg !8079
  %76 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8080
  %curc61 = getelementptr inbounds %struct.Text, %struct.Text* %76, i32 0, i32 7, !dbg !8081
  store i32 %add60, i32* %curc61, align 8, !dbg !8082
  br label %if.end62

if.end62:                                         ; preds = %if.else59, %if.then57
  br label %while.cond, !dbg !8083

while.cond:                                       ; preds = %while.body65, %if.end62
  %77 = load i32, i32* %num, align 4, !dbg !8084
  %cmp63 = icmp sgt i32 %77, 0, !dbg !8085
  br i1 %cmp63, label %while.body65, label %while.end68, !dbg !8083

while.body65:                                     ; preds = %while.cond
  %78 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8086
  %curl66 = getelementptr inbounds %struct.Text, %struct.Text* %78, i32 0, i32 5, !dbg !8088
  %79 = load %struct.TextLine*, %struct.TextLine** %curl66, align 8, !dbg !8088
  %prev = getelementptr inbounds %struct.TextLine, %struct.TextLine* %79, i32 0, i32 1, !dbg !8089
  %80 = load %struct.TextLine*, %struct.TextLine** %prev, align 8, !dbg !8089
  %81 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8090
  %curl67 = getelementptr inbounds %struct.Text, %struct.Text* %81, i32 0, i32 5, !dbg !8091
  store %struct.TextLine* %80, %struct.TextLine** %curl67, align 8, !dbg !8092
  %82 = load i32, i32* %num, align 4, !dbg !8093
  %dec = add nsw i32 %82, -1, !dbg !8093
  store i32 %dec, i32* %num, align 4, !dbg !8093
  br label %while.cond, !dbg !8083, !llvm.loop !8094

while.end68:                                      ; preds = %while.cond
  %83 = load i8, i8* @undoing, align 1, !dbg !8096
  %tobool69 = icmp ne i8 %83, 0, !dbg !8096
  br i1 %tobool69, label %if.end71, label %if.then70, !dbg !8098

if.then70:                                        ; preds = %while.end68
  %84 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8099
  call void @txt_undo_add_op(%struct.Text* %84, i32 26), !dbg !8101
  br label %if.end71, !dbg !8102

if.end71:                                         ; preds = %if.then, %if.then70, %while.end68
  ret void, !dbg !8103
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_uncomment(%struct.Text* %text) #0 !dbg !8104 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %num = alloca i32, align 4
  %remove = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !8105, metadata !DIExpression()), !dbg !8106
  call void @llvm.dbg.declare(metadata i32* %num, metadata !8107, metadata !DIExpression()), !dbg !8108
  store i32 0, i32* %num, align 4, !dbg !8108
  call void @llvm.dbg.declare(metadata i8* %remove, metadata !8109, metadata !DIExpression()), !dbg !8110
  store i8 35, i8* %remove, align 1, !dbg !8110
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8111
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !8113
  %1 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !8113
  %tobool = icmp ne %struct.TextLine* %1, null, !dbg !8111
  br i1 %tobool, label %if.end, label %if.then, !dbg !8114

if.then:                                          ; preds = %entry
  br label %if.end45, !dbg !8115

if.end:                                           ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8116
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 6, !dbg !8118
  %3 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !8118
  %tobool1 = icmp ne %struct.TextLine* %3, null, !dbg !8116
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !8119

if.then2:                                         ; preds = %if.end
  br label %if.end45, !dbg !8120

if.end3:                                          ; preds = %if.end
  br label %while.body, !dbg !8121

while.body:                                       ; preds = %if.end3, %if.end34
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8122, metadata !DIExpression()), !dbg !8124
  store i32 0, i32* %i, align 4, !dbg !8124
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8125
  %curl4 = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 5, !dbg !8127
  %5 = load %struct.TextLine*, %struct.TextLine** %curl4, align 8, !dbg !8127
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %5, i32 0, i32 2, !dbg !8128
  %6 = load i8*, i8** %line, align 8, !dbg !8128
  %7 = load i32, i32* %i, align 4, !dbg !8129
  %idxprom = sext i32 %7 to i64, !dbg !8125
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 %idxprom, !dbg !8125
  %8 = load i8, i8* %arrayidx, align 1, !dbg !8125
  %conv = zext i8 %8 to i32, !dbg !8125
  %9 = load i8, i8* %remove, align 1, !dbg !8130
  %conv5 = zext i8 %9 to i32, !dbg !8130
  %cmp = icmp eq i32 %conv, %conv5, !dbg !8131
  br i1 %cmp, label %if.then7, label %if.end23, !dbg !8132

if.then7:                                         ; preds = %while.body
  br label %while.cond8, !dbg !8133

while.cond8:                                      ; preds = %while.body12, %if.then7
  %10 = load i32, i32* %i, align 4, !dbg !8135
  %11 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8136
  %curl9 = getelementptr inbounds %struct.Text, %struct.Text* %11, i32 0, i32 5, !dbg !8137
  %12 = load %struct.TextLine*, %struct.TextLine** %curl9, align 8, !dbg !8137
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %12, i32 0, i32 4, !dbg !8138
  %13 = load i32, i32* %len, align 8, !dbg !8138
  %cmp10 = icmp slt i32 %10, %13, !dbg !8139
  br i1 %cmp10, label %while.body12, label %while.end, !dbg !8133

while.body12:                                     ; preds = %while.cond8
  %14 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8140
  %curl13 = getelementptr inbounds %struct.Text, %struct.Text* %14, i32 0, i32 5, !dbg !8142
  %15 = load %struct.TextLine*, %struct.TextLine** %curl13, align 8, !dbg !8142
  %line14 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %15, i32 0, i32 2, !dbg !8143
  %16 = load i8*, i8** %line14, align 8, !dbg !8143
  %17 = load i32, i32* %i, align 4, !dbg !8144
  %add = add nsw i32 %17, 1, !dbg !8145
  %idxprom15 = sext i32 %add to i64, !dbg !8140
  %arrayidx16 = getelementptr inbounds i8, i8* %16, i64 %idxprom15, !dbg !8140
  %18 = load i8, i8* %arrayidx16, align 1, !dbg !8140
  %19 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8146
  %curl17 = getelementptr inbounds %struct.Text, %struct.Text* %19, i32 0, i32 5, !dbg !8147
  %20 = load %struct.TextLine*, %struct.TextLine** %curl17, align 8, !dbg !8147
  %line18 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %20, i32 0, i32 2, !dbg !8148
  %21 = load i8*, i8** %line18, align 8, !dbg !8148
  %22 = load i32, i32* %i, align 4, !dbg !8149
  %idxprom19 = sext i32 %22 to i64, !dbg !8146
  %arrayidx20 = getelementptr inbounds i8, i8* %21, i64 %idxprom19, !dbg !8146
  store i8 %18, i8* %arrayidx20, align 1, !dbg !8150
  %23 = load i32, i32* %i, align 4, !dbg !8151
  %inc = add nsw i32 %23, 1, !dbg !8151
  store i32 %inc, i32* %i, align 4, !dbg !8151
  br label %while.cond8, !dbg !8133, !llvm.loop !8152

while.end:                                        ; preds = %while.cond8
  %24 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8154
  %curl21 = getelementptr inbounds %struct.Text, %struct.Text* %24, i32 0, i32 5, !dbg !8155
  %25 = load %struct.TextLine*, %struct.TextLine** %curl21, align 8, !dbg !8155
  %len22 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %25, i32 0, i32 4, !dbg !8156
  %26 = load i32, i32* %len22, align 8, !dbg !8157
  %dec = add nsw i32 %26, -1, !dbg !8157
  store i32 %dec, i32* %len22, align 8, !dbg !8157
  br label %if.end23, !dbg !8158

if.end23:                                         ; preds = %while.end, %while.body
  %27 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8159
  call void @txt_make_dirty(%struct.Text* %27), !dbg !8160
  %28 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8161
  call void @txt_clean_text(%struct.Text* %28), !dbg !8162
  %29 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8163
  %curl24 = getelementptr inbounds %struct.Text, %struct.Text* %29, i32 0, i32 5, !dbg !8165
  %30 = load %struct.TextLine*, %struct.TextLine** %curl24, align 8, !dbg !8165
  %31 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8166
  %sell25 = getelementptr inbounds %struct.Text, %struct.Text* %31, i32 0, i32 6, !dbg !8167
  %32 = load %struct.TextLine*, %struct.TextLine** %sell25, align 8, !dbg !8167
  %cmp26 = icmp eq %struct.TextLine* %30, %32, !dbg !8168
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !8169

if.then28:                                        ; preds = %if.end23
  %33 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8170
  %sell29 = getelementptr inbounds %struct.Text, %struct.Text* %33, i32 0, i32 6, !dbg !8172
  %34 = load %struct.TextLine*, %struct.TextLine** %sell29, align 8, !dbg !8172
  %len30 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %34, i32 0, i32 4, !dbg !8173
  %35 = load i32, i32* %len30, align 8, !dbg !8173
  %36 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8174
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %36, i32 0, i32 8, !dbg !8175
  store i32 %35, i32* %selc, align 4, !dbg !8176
  br label %while.end35, !dbg !8177

if.else:                                          ; preds = %if.end23
  %37 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8178
  %curl31 = getelementptr inbounds %struct.Text, %struct.Text* %37, i32 0, i32 5, !dbg !8180
  %38 = load %struct.TextLine*, %struct.TextLine** %curl31, align 8, !dbg !8180
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %38, i32 0, i32 0, !dbg !8181
  %39 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !8181
  %40 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8182
  %curl32 = getelementptr inbounds %struct.Text, %struct.Text* %40, i32 0, i32 5, !dbg !8183
  store %struct.TextLine* %39, %struct.TextLine** %curl32, align 8, !dbg !8184
  %41 = load i32, i32* %num, align 4, !dbg !8185
  %inc33 = add nsw i32 %41, 1, !dbg !8185
  store i32 %inc33, i32* %num, align 4, !dbg !8185
  br label %if.end34

if.end34:                                         ; preds = %if.else
  br label %while.body, !dbg !8121, !llvm.loop !8186

while.end35:                                      ; preds = %if.then28
  %42 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8188
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %42, i32 0, i32 7, !dbg !8189
  store i32 0, i32* %curc, align 8, !dbg !8190
  br label %while.cond, !dbg !8191

while.cond:                                       ; preds = %while.body38, %while.end35
  %43 = load i32, i32* %num, align 4, !dbg !8192
  %cmp36 = icmp sgt i32 %43, 0, !dbg !8193
  br i1 %cmp36, label %while.body38, label %while.end42, !dbg !8191

while.body38:                                     ; preds = %while.cond
  %44 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8194
  %curl39 = getelementptr inbounds %struct.Text, %struct.Text* %44, i32 0, i32 5, !dbg !8196
  %45 = load %struct.TextLine*, %struct.TextLine** %curl39, align 8, !dbg !8196
  %prev = getelementptr inbounds %struct.TextLine, %struct.TextLine* %45, i32 0, i32 1, !dbg !8197
  %46 = load %struct.TextLine*, %struct.TextLine** %prev, align 8, !dbg !8197
  %47 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8198
  %curl40 = getelementptr inbounds %struct.Text, %struct.Text* %47, i32 0, i32 5, !dbg !8199
  store %struct.TextLine* %46, %struct.TextLine** %curl40, align 8, !dbg !8200
  %48 = load i32, i32* %num, align 4, !dbg !8201
  %dec41 = add nsw i32 %48, -1, !dbg !8201
  store i32 %dec41, i32* %num, align 4, !dbg !8201
  br label %while.cond, !dbg !8191, !llvm.loop !8202

while.end42:                                      ; preds = %while.cond
  %49 = load i8, i8* @undoing, align 1, !dbg !8204
  %tobool43 = icmp ne i8 %49, 0, !dbg !8204
  br i1 %tobool43, label %if.end45, label %if.then44, !dbg !8206

if.then44:                                        ; preds = %while.end42
  %50 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8207
  call void @txt_undo_add_op(%struct.Text* %50, i32 29), !dbg !8209
  br label %if.end45, !dbg !8210

if.end45:                                         ; preds = %if.then, %if.then2, %if.then44, %while.end42
  ret void, !dbg !8211
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_comment(%struct.Text* %text) #0 !dbg !8212 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %len = alloca i32, align 4
  %num = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %add = alloca i8, align 1
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !8213, metadata !DIExpression()), !dbg !8214
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8215, metadata !DIExpression()), !dbg !8216
  call void @llvm.dbg.declare(metadata i32* %num, metadata !8217, metadata !DIExpression()), !dbg !8218
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !8219, metadata !DIExpression()), !dbg !8220
  call void @llvm.dbg.declare(metadata i8* %add, metadata !8221, metadata !DIExpression()), !dbg !8222
  store i8 35, i8* %add, align 1, !dbg !8222
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8223
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !8225
  %1 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !8225
  %tobool = icmp ne %struct.TextLine* %1, null, !dbg !8223
  br i1 %tobool, label %if.end, label %if.then, !dbg !8226

if.then:                                          ; preds = %entry
  br label %if.end56, !dbg !8227

if.end:                                           ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8228
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 6, !dbg !8230
  %3 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !8230
  %tobool1 = icmp ne %struct.TextLine* %3, null, !dbg !8228
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !8231

if.then2:                                         ; preds = %if.end
  br label %if.end56, !dbg !8232

if.end3:                                          ; preds = %if.end
  store i32 0, i32* %num, align 4, !dbg !8233
  br label %while.body, !dbg !8234

while.body:                                       ; preds = %if.end3, %if.end46
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8235
  %5 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8237
  %curl4 = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 5, !dbg !8238
  %6 = load %struct.TextLine*, %struct.TextLine** %curl4, align 8, !dbg !8238
  %len5 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %6, i32 0, i32 4, !dbg !8239
  %7 = load i32, i32* %len5, align 8, !dbg !8239
  %add6 = add nsw i32 %7, 2, !dbg !8240
  %conv = sext i32 %add6 to i64, !dbg !8237
  %call = call i8* %4(i64 %conv, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)), !dbg !8235
  store i8* %call, i8** %tmp, align 8, !dbg !8241
  %8 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8242
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 7, !dbg !8243
  store i32 0, i32* %curc, align 8, !dbg !8244
  %9 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8245
  %curc7 = getelementptr inbounds %struct.Text, %struct.Text* %9, i32 0, i32 7, !dbg !8247
  %10 = load i32, i32* %curc7, align 8, !dbg !8247
  %tobool8 = icmp ne i32 %10, 0, !dbg !8245
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !8248

if.then9:                                         ; preds = %while.body
  %11 = load i8*, i8** %tmp, align 8, !dbg !8249
  %12 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8250
  %curl10 = getelementptr inbounds %struct.Text, %struct.Text* %12, i32 0, i32 5, !dbg !8251
  %13 = load %struct.TextLine*, %struct.TextLine** %curl10, align 8, !dbg !8251
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %13, i32 0, i32 2, !dbg !8252
  %14 = load i8*, i8** %line, align 8, !dbg !8252
  %15 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8253
  %curc11 = getelementptr inbounds %struct.Text, %struct.Text* %15, i32 0, i32 7, !dbg !8254
  %16 = load i32, i32* %curc11, align 8, !dbg !8254
  %conv12 = sext i32 %16 to i64, !dbg !8253
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %14, i64 %conv12, i1 false), !dbg !8255
  br label %if.end13, !dbg !8255

if.end13:                                         ; preds = %if.then9, %while.body
  %17 = load i8, i8* %add, align 1, !dbg !8256
  %18 = load i8*, i8** %tmp, align 8, !dbg !8257
  %19 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8258
  %curc14 = getelementptr inbounds %struct.Text, %struct.Text* %19, i32 0, i32 7, !dbg !8259
  %20 = load i32, i32* %curc14, align 8, !dbg !8259
  %idxprom = sext i32 %20 to i64, !dbg !8257
  %arrayidx = getelementptr inbounds i8, i8* %18, i64 %idxprom, !dbg !8257
  store i8 %17, i8* %arrayidx, align 1, !dbg !8260
  %21 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8261
  %curl15 = getelementptr inbounds %struct.Text, %struct.Text* %21, i32 0, i32 5, !dbg !8262
  %22 = load %struct.TextLine*, %struct.TextLine** %curl15, align 8, !dbg !8262
  %len16 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %22, i32 0, i32 4, !dbg !8263
  %23 = load i32, i32* %len16, align 8, !dbg !8263
  %24 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8264
  %curc17 = getelementptr inbounds %struct.Text, %struct.Text* %24, i32 0, i32 7, !dbg !8265
  %25 = load i32, i32* %curc17, align 8, !dbg !8265
  %sub = sub nsw i32 %23, %25, !dbg !8266
  store i32 %sub, i32* %len, align 4, !dbg !8267
  %26 = load i32, i32* %len, align 4, !dbg !8268
  %cmp = icmp sgt i32 %26, 0, !dbg !8270
  br i1 %cmp, label %if.then19, label %if.end28, !dbg !8271

if.then19:                                        ; preds = %if.end13
  %27 = load i8*, i8** %tmp, align 8, !dbg !8272
  %28 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8273
  %curc20 = getelementptr inbounds %struct.Text, %struct.Text* %28, i32 0, i32 7, !dbg !8274
  %29 = load i32, i32* %curc20, align 8, !dbg !8274
  %idx.ext = sext i32 %29 to i64, !dbg !8275
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 %idx.ext, !dbg !8275
  %add.ptr21 = getelementptr inbounds i8, i8* %add.ptr, i64 1, !dbg !8276
  %30 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8277
  %curl22 = getelementptr inbounds %struct.Text, %struct.Text* %30, i32 0, i32 5, !dbg !8278
  %31 = load %struct.TextLine*, %struct.TextLine** %curl22, align 8, !dbg !8278
  %line23 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %31, i32 0, i32 2, !dbg !8279
  %32 = load i8*, i8** %line23, align 8, !dbg !8279
  %33 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8280
  %curc24 = getelementptr inbounds %struct.Text, %struct.Text* %33, i32 0, i32 7, !dbg !8281
  %34 = load i32, i32* %curc24, align 8, !dbg !8281
  %idx.ext25 = sext i32 %34 to i64, !dbg !8282
  %add.ptr26 = getelementptr inbounds i8, i8* %32, i64 %idx.ext25, !dbg !8282
  %35 = load i32, i32* %len, align 4, !dbg !8283
  %conv27 = sext i32 %35 to i64, !dbg !8283
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr21, i8* align 1 %add.ptr26, i64 %conv27, i1 false), !dbg !8284
  br label %if.end28, !dbg !8284

if.end28:                                         ; preds = %if.then19, %if.end13
  %36 = load i8*, i8** %tmp, align 8, !dbg !8285
  %37 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8286
  %curl29 = getelementptr inbounds %struct.Text, %struct.Text* %37, i32 0, i32 5, !dbg !8287
  %38 = load %struct.TextLine*, %struct.TextLine** %curl29, align 8, !dbg !8287
  %len30 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %38, i32 0, i32 4, !dbg !8288
  %39 = load i32, i32* %len30, align 8, !dbg !8288
  %add31 = add nsw i32 %39, 1, !dbg !8289
  %idxprom32 = sext i32 %add31 to i64, !dbg !8285
  %arrayidx33 = getelementptr inbounds i8, i8* %36, i64 %idxprom32, !dbg !8285
  store i8 0, i8* %arrayidx33, align 1, !dbg !8290
  %40 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8291
  %curl34 = getelementptr inbounds %struct.Text, %struct.Text* %40, i32 0, i32 5, !dbg !8292
  %41 = load %struct.TextLine*, %struct.TextLine** %curl34, align 8, !dbg !8292
  %42 = load i8*, i8** %tmp, align 8, !dbg !8293
  call void @make_new_line(%struct.TextLine* %41, i8* %42), !dbg !8294
  %43 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8295
  %curc35 = getelementptr inbounds %struct.Text, %struct.Text* %43, i32 0, i32 7, !dbg !8296
  %44 = load i32, i32* %curc35, align 8, !dbg !8297
  %inc = add nsw i32 %44, 1, !dbg !8297
  store i32 %inc, i32* %curc35, align 8, !dbg !8297
  %45 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8298
  call void @txt_make_dirty(%struct.Text* %45), !dbg !8299
  %46 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8300
  call void @txt_clean_text(%struct.Text* %46), !dbg !8301
  %47 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8302
  %curl36 = getelementptr inbounds %struct.Text, %struct.Text* %47, i32 0, i32 5, !dbg !8304
  %48 = load %struct.TextLine*, %struct.TextLine** %curl36, align 8, !dbg !8304
  %49 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8305
  %sell37 = getelementptr inbounds %struct.Text, %struct.Text* %49, i32 0, i32 6, !dbg !8306
  %50 = load %struct.TextLine*, %struct.TextLine** %sell37, align 8, !dbg !8306
  %cmp38 = icmp eq %struct.TextLine* %48, %50, !dbg !8307
  br i1 %cmp38, label %if.then40, label %if.else, !dbg !8308

if.then40:                                        ; preds = %if.end28
  %51 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8309
  %sell41 = getelementptr inbounds %struct.Text, %struct.Text* %51, i32 0, i32 6, !dbg !8311
  %52 = load %struct.TextLine*, %struct.TextLine** %sell41, align 8, !dbg !8311
  %len42 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %52, i32 0, i32 4, !dbg !8312
  %53 = load i32, i32* %len42, align 8, !dbg !8312
  %54 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8313
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %54, i32 0, i32 8, !dbg !8314
  store i32 %53, i32* %selc, align 4, !dbg !8315
  br label %while.end, !dbg !8316

if.else:                                          ; preds = %if.end28
  %55 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8317
  %curl43 = getelementptr inbounds %struct.Text, %struct.Text* %55, i32 0, i32 5, !dbg !8319
  %56 = load %struct.TextLine*, %struct.TextLine** %curl43, align 8, !dbg !8319
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %56, i32 0, i32 0, !dbg !8320
  %57 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !8320
  %58 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8321
  %curl44 = getelementptr inbounds %struct.Text, %struct.Text* %58, i32 0, i32 5, !dbg !8322
  store %struct.TextLine* %57, %struct.TextLine** %curl44, align 8, !dbg !8323
  %59 = load i32, i32* %num, align 4, !dbg !8324
  %inc45 = add nsw i32 %59, 1, !dbg !8324
  store i32 %inc45, i32* %num, align 4, !dbg !8324
  br label %if.end46

if.end46:                                         ; preds = %if.else
  br label %while.body, !dbg !8234, !llvm.loop !8325

while.end:                                        ; preds = %if.then40
  %60 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8327
  %curc47 = getelementptr inbounds %struct.Text, %struct.Text* %60, i32 0, i32 7, !dbg !8328
  store i32 0, i32* %curc47, align 8, !dbg !8329
  br label %while.cond, !dbg !8330

while.cond:                                       ; preds = %while.body50, %while.end
  %61 = load i32, i32* %num, align 4, !dbg !8331
  %cmp48 = icmp sgt i32 %61, 0, !dbg !8332
  br i1 %cmp48, label %while.body50, label %while.end53, !dbg !8330

while.body50:                                     ; preds = %while.cond
  %62 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8333
  %curl51 = getelementptr inbounds %struct.Text, %struct.Text* %62, i32 0, i32 5, !dbg !8335
  %63 = load %struct.TextLine*, %struct.TextLine** %curl51, align 8, !dbg !8335
  %prev = getelementptr inbounds %struct.TextLine, %struct.TextLine* %63, i32 0, i32 1, !dbg !8336
  %64 = load %struct.TextLine*, %struct.TextLine** %prev, align 8, !dbg !8336
  %65 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8337
  %curl52 = getelementptr inbounds %struct.Text, %struct.Text* %65, i32 0, i32 5, !dbg !8338
  store %struct.TextLine* %64, %struct.TextLine** %curl52, align 8, !dbg !8339
  %66 = load i32, i32* %num, align 4, !dbg !8340
  %dec = add nsw i32 %66, -1, !dbg !8340
  store i32 %dec, i32* %num, align 4, !dbg !8340
  br label %while.cond, !dbg !8330, !llvm.loop !8341

while.end53:                                      ; preds = %while.cond
  %67 = load i8, i8* @undoing, align 1, !dbg !8343
  %tobool54 = icmp ne i8 %67, 0, !dbg !8343
  br i1 %tobool54, label %if.end56, label %if.then55, !dbg !8345

if.then55:                                        ; preds = %while.end53
  %68 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8346
  call void @txt_undo_add_op(%struct.Text* %68, i32 28), !dbg !8348
  br label %if.end56, !dbg !8349

if.end56:                                         ; preds = %if.then, %if.then2, %if.then55, %while.end53
  ret void, !dbg !8350
}

; Function Attrs: noinline nounwind uwtable
define internal void @txt_delete_line(%struct.Text* %text, %struct.TextLine* %line) #0 !dbg !8351 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %line.addr = alloca %struct.TextLine*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !8354, metadata !DIExpression()), !dbg !8355
  store %struct.TextLine* %line, %struct.TextLine** %line.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TextLine** %line.addr, metadata !8356, metadata !DIExpression()), !dbg !8357
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8358
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !8360
  %1 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !8360
  %tobool = icmp ne %struct.TextLine* %1, null, !dbg !8358
  br i1 %tobool, label %if.end, label %if.then, !dbg !8361

if.then:                                          ; preds = %entry
  br label %return, !dbg !8362

if.end:                                           ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8363
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 4, !dbg !8364
  %3 = load %struct.TextLine*, %struct.TextLine** %line.addr, align 8, !dbg !8365
  %4 = bitcast %struct.TextLine* %3 to i8*, !dbg !8365
  call void @BLI_remlink(%struct.ListBase* %lines, i8* %4), !dbg !8366
  %5 = load %struct.TextLine*, %struct.TextLine** %line.addr, align 8, !dbg !8367
  %line1 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %5, i32 0, i32 2, !dbg !8369
  %6 = load i8*, i8** %line1, align 8, !dbg !8369
  %tobool2 = icmp ne i8* %6, null, !dbg !8367
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !8370

if.then3:                                         ; preds = %if.end
  %7 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8371
  %8 = load %struct.TextLine*, %struct.TextLine** %line.addr, align 8, !dbg !8372
  %line4 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %8, i32 0, i32 2, !dbg !8373
  %9 = load i8*, i8** %line4, align 8, !dbg !8373
  call void %7(i8* %9), !dbg !8371
  br label %if.end5, !dbg !8371

if.end5:                                          ; preds = %if.then3, %if.end
  %10 = load %struct.TextLine*, %struct.TextLine** %line.addr, align 8, !dbg !8374
  %format = getelementptr inbounds %struct.TextLine, %struct.TextLine* %10, i32 0, i32 3, !dbg !8376
  %11 = load i8*, i8** %format, align 8, !dbg !8376
  %tobool6 = icmp ne i8* %11, null, !dbg !8374
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !8377

if.then7:                                         ; preds = %if.end5
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8378
  %13 = load %struct.TextLine*, %struct.TextLine** %line.addr, align 8, !dbg !8379
  %format8 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %13, i32 0, i32 3, !dbg !8380
  %14 = load i8*, i8** %format8, align 8, !dbg !8380
  call void %12(i8* %14), !dbg !8378
  br label %if.end9, !dbg !8378

if.end9:                                          ; preds = %if.then7, %if.end5
  %15 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8381
  %16 = load %struct.TextLine*, %struct.TextLine** %line.addr, align 8, !dbg !8382
  %17 = bitcast %struct.TextLine* %16 to i8*, !dbg !8382
  call void %15(i8* %17), !dbg !8381
  %18 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8383
  call void @txt_make_dirty(%struct.Text* %18), !dbg !8384
  %19 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8385
  call void @txt_clean_text(%struct.Text* %19), !dbg !8386
  br label %return, !dbg !8387

return:                                           ; preds = %if.end9, %if.then
  ret void, !dbg !8387
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_move_lines(%struct.Text* %text, i32 %direction) #0 !dbg !8388 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %direction.addr = alloca i32, align 4
  %line_other = alloca %struct.TextLine*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !8391, metadata !DIExpression()), !dbg !8392
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !8393, metadata !DIExpression()), !dbg !8394
  call void @llvm.dbg.declare(metadata %struct.TextLine** %line_other, metadata !8395, metadata !DIExpression()), !dbg !8396
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8397
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !8399
  %1 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !8399
  %tobool = icmp ne %struct.TextLine* %1, null, !dbg !8397
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8400

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8401
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 6, !dbg !8402
  %3 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !8402
  %tobool1 = icmp ne %struct.TextLine* %3, null, !dbg !8401
  br i1 %tobool1, label %if.end, label %if.then, !dbg !8403

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end18, !dbg !8404

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8405
  call void @txt_order_cursors(%struct.Text* %4, i8 zeroext 0), !dbg !8406
  %5 = load i32, i32* %direction.addr, align 4, !dbg !8407
  %cmp = icmp eq i32 %5, 1, !dbg !8408
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8409

cond.true:                                        ; preds = %if.end
  %6 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8410
  %sell2 = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 6, !dbg !8411
  %7 = load %struct.TextLine*, %struct.TextLine** %sell2, align 8, !dbg !8411
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %7, i32 0, i32 0, !dbg !8412
  %8 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !8412
  br label %cond.end, !dbg !8409

cond.false:                                       ; preds = %if.end
  %9 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8413
  %curl3 = getelementptr inbounds %struct.Text, %struct.Text* %9, i32 0, i32 5, !dbg !8414
  %10 = load %struct.TextLine*, %struct.TextLine** %curl3, align 8, !dbg !8414
  %prev = getelementptr inbounds %struct.TextLine, %struct.TextLine* %10, i32 0, i32 1, !dbg !8415
  %11 = load %struct.TextLine*, %struct.TextLine** %prev, align 8, !dbg !8415
  br label %cond.end, !dbg !8409

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.TextLine* [ %8, %cond.true ], [ %11, %cond.false ], !dbg !8409
  store %struct.TextLine* %cond, %struct.TextLine** %line_other, align 8, !dbg !8416
  %12 = load %struct.TextLine*, %struct.TextLine** %line_other, align 8, !dbg !8417
  %tobool4 = icmp ne %struct.TextLine* %12, null, !dbg !8417
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !8419

if.then5:                                         ; preds = %cond.end
  br label %if.end18, !dbg !8420

if.end6:                                          ; preds = %cond.end
  %13 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8421
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %13, i32 0, i32 4, !dbg !8422
  %14 = load %struct.TextLine*, %struct.TextLine** %line_other, align 8, !dbg !8423
  %15 = bitcast %struct.TextLine* %14 to i8*, !dbg !8423
  call void @BLI_remlink(%struct.ListBase* %lines, i8* %15), !dbg !8424
  %16 = load i32, i32* %direction.addr, align 4, !dbg !8425
  %cmp7 = icmp eq i32 %16, 1, !dbg !8427
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !8428

if.then8:                                         ; preds = %if.end6
  %17 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8429
  %lines9 = getelementptr inbounds %struct.Text, %struct.Text* %17, i32 0, i32 4, !dbg !8431
  %18 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8432
  %curl10 = getelementptr inbounds %struct.Text, %struct.Text* %18, i32 0, i32 5, !dbg !8433
  %19 = load %struct.TextLine*, %struct.TextLine** %curl10, align 8, !dbg !8433
  %20 = bitcast %struct.TextLine* %19 to i8*, !dbg !8432
  %21 = load %struct.TextLine*, %struct.TextLine** %line_other, align 8, !dbg !8434
  %22 = bitcast %struct.TextLine* %21 to i8*, !dbg !8434
  call void @BLI_insertlinkbefore(%struct.ListBase* %lines9, i8* %20, i8* %22), !dbg !8435
  br label %if.end13, !dbg !8436

if.else:                                          ; preds = %if.end6
  %23 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8437
  %lines11 = getelementptr inbounds %struct.Text, %struct.Text* %23, i32 0, i32 4, !dbg !8439
  %24 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8440
  %sell12 = getelementptr inbounds %struct.Text, %struct.Text* %24, i32 0, i32 6, !dbg !8441
  %25 = load %struct.TextLine*, %struct.TextLine** %sell12, align 8, !dbg !8441
  %26 = bitcast %struct.TextLine* %25 to i8*, !dbg !8440
  %27 = load %struct.TextLine*, %struct.TextLine** %line_other, align 8, !dbg !8442
  %28 = bitcast %struct.TextLine* %27 to i8*, !dbg !8442
  call void @BLI_insertlinkafter(%struct.ListBase* %lines11, i8* %26, i8* %28), !dbg !8443
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then8
  %29 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8444
  call void @txt_make_dirty(%struct.Text* %29), !dbg !8445
  %30 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8446
  call void @txt_clean_text(%struct.Text* %30), !dbg !8447
  %31 = load i8, i8* @undoing, align 1, !dbg !8448
  %tobool14 = icmp ne i8 %31, 0, !dbg !8448
  br i1 %tobool14, label %if.end18, label %if.then15, !dbg !8450

if.then15:                                        ; preds = %if.end13
  %32 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8451
  %33 = load i32, i32* %direction.addr, align 4, !dbg !8453
  %cmp16 = icmp eq i32 %33, 1, !dbg !8454
  %34 = zext i1 %cmp16 to i64, !dbg !8455
  %cond17 = select i1 %cmp16, i32 31, i32 30, !dbg !8455
  call void @txt_undo_add_op(%struct.Text* %32, i32 %cond17), !dbg !8456
  br label %if.end18, !dbg !8457

if.end18:                                         ; preds = %if.then, %if.then5, %if.then15, %if.end13
  ret void, !dbg !8458
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_do_redo(%struct.Text* %text) #0 !dbg !8459 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %op = alloca i8, align 1
  %buf = alloca i8*, align 8
  %linep = alloca i32, align 4
  %charp = alloca i16, align 2
  %uchar = alloca i32, align 4
  %curln = alloca i32, align 4
  %selln = alloca i32, align 4
  %curc = alloca i16, align 2
  %selc = alloca i16, align 2
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !8460, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.declare(metadata i8* %op, metadata !8462, metadata !DIExpression()), !dbg !8463
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !8464, metadata !DIExpression()), !dbg !8465
  call void @llvm.dbg.declare(metadata i32* %linep, metadata !8466, metadata !DIExpression()), !dbg !8467
  call void @llvm.dbg.declare(metadata i16* %charp, metadata !8468, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.declare(metadata i32* %uchar, metadata !8470, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.declare(metadata i32* %curln, metadata !8472, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.declare(metadata i32* %selln, metadata !8474, metadata !DIExpression()), !dbg !8475
  call void @llvm.dbg.declare(metadata i16* %curc, metadata !8476, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.declare(metadata i16* %selc, metadata !8478, metadata !DIExpression()), !dbg !8479
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8480
  %undo_pos = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 10, !dbg !8481
  %1 = load i32, i32* %undo_pos, align 8, !dbg !8482
  %inc = add nsw i32 %1, 1, !dbg !8482
  store i32 %inc, i32* %undo_pos, align 8, !dbg !8482
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8483
  %undo_buf = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 9, !dbg !8484
  %3 = load i8*, i8** %undo_buf, align 8, !dbg !8484
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8485
  %undo_pos1 = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 10, !dbg !8486
  %5 = load i32, i32* %undo_pos1, align 8, !dbg !8486
  %idxprom = sext i32 %5 to i64, !dbg !8483
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom, !dbg !8483
  %6 = load i8, i8* %arrayidx, align 1, !dbg !8483
  store i8 %6, i8* %op, align 1, !dbg !8487
  %7 = load i8, i8* %op, align 1, !dbg !8488
  %tobool = icmp ne i8 %7, 0, !dbg !8488
  br i1 %tobool, label %if.end, label %if.then, !dbg !8490

if.then:                                          ; preds = %entry
  %8 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8491
  %undo_pos2 = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 10, !dbg !8493
  %9 = load i32, i32* %undo_pos2, align 8, !dbg !8494
  %dec = add nsw i32 %9, -1, !dbg !8494
  store i32 %dec, i32* %undo_pos2, align 8, !dbg !8494
  br label %return, !dbg !8495

if.end:                                           ; preds = %entry
  store i8 1, i8* @undoing, align 1, !dbg !8496
  %10 = load i8, i8* %op, align 1, !dbg !8497
  %conv = zext i8 %10 to i32, !dbg !8497
  switch i32 %conv, label %sw.default [
    i32 11, label %sw.bb
    i32 12, label %sw.bb
    i32 13, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb14
    i32 16, label %sw.bb14
    i32 17, label %sw.bb14
    i32 18, label %sw.bb14
    i32 19, label %sw.bb26
    i32 20, label %sw.bb26
    i32 21, label %sw.bb26
    i32 22, label %sw.bb26
    i32 23, label %sw.bb38
    i32 24, label %sw.bb52
    i32 26, label %sw.bb76
    i32 27, label %sw.bb76
    i32 28, label %sw.bb76
    i32 29, label %sw.bb76
    i32 32, label %sw.bb76
    i32 30, label %sw.bb76
    i32 31, label %sw.bb76
  ], !dbg !8498

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end
  %11 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8499
  %undo_pos3 = getelementptr inbounds %struct.Text, %struct.Text* %11, i32 0, i32 10, !dbg !8501
  %12 = load i32, i32* %undo_pos3, align 8, !dbg !8502
  %inc4 = add nsw i32 %12, 1, !dbg !8502
  store i32 %inc4, i32* %undo_pos3, align 8, !dbg !8502
  %13 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8503
  %undo_buf5 = getelementptr inbounds %struct.Text, %struct.Text* %13, i32 0, i32 9, !dbg !8504
  %14 = load i8*, i8** %undo_buf5, align 8, !dbg !8504
  %15 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8505
  %undo_pos6 = getelementptr inbounds %struct.Text, %struct.Text* %15, i32 0, i32 10, !dbg !8506
  call void @txt_redo_read_cur(i8* %14, i32* %undo_pos6, i32* %curln, i16* %curc), !dbg !8507
  %16 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8508
  %17 = load i32, i32* %curln, align 4, !dbg !8509
  %18 = load i16, i16* %curc, align 2, !dbg !8510
  %conv7 = zext i16 %18 to i32, !dbg !8510
  call void @txt_move_to(%struct.Text* %16, i32 %17, i32 %conv7, i8 zeroext 0), !dbg !8511
  %19 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8512
  %20 = load i32, i32* %curln, align 4, !dbg !8513
  %21 = load i16, i16* %curc, align 2, !dbg !8514
  %conv8 = zext i16 %21 to i32, !dbg !8514
  call void @txt_move_to(%struct.Text* %19, i32 %20, i32 %conv8, i8 zeroext 1), !dbg !8515
  %22 = load i8, i8* %op, align 1, !dbg !8516
  %conv9 = zext i8 %22 to i32, !dbg !8516
  %sub = sub nsw i32 %conv9, 11, !dbg !8517
  %add = add nsw i32 %sub, 1, !dbg !8518
  %conv10 = trunc i32 %add to i16, !dbg !8516
  store i16 %conv10, i16* %charp, align 2, !dbg !8519
  %23 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8520
  %undo_buf11 = getelementptr inbounds %struct.Text, %struct.Text* %23, i32 0, i32 9, !dbg !8521
  %24 = load i8*, i8** %undo_buf11, align 8, !dbg !8521
  %25 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8522
  %undo_pos12 = getelementptr inbounds %struct.Text, %struct.Text* %25, i32 0, i32 10, !dbg !8523
  %26 = load i16, i16* %charp, align 2, !dbg !8524
  %call = call i32 @txt_redo_read_unicode(i8* %24, i32* %undo_pos12, i16 signext %26), !dbg !8525
  store i32 %call, i32* %uchar, align 4, !dbg !8526
  %27 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8527
  %28 = load i32, i32* %uchar, align 4, !dbg !8528
  %call13 = call zeroext i8 @txt_add_char(%struct.Text* %27, i32 %28), !dbg !8529
  br label %sw.epilog, !dbg !8530

sw.bb14:                                          ; preds = %if.end, %if.end, %if.end, %if.end
  %29 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8531
  %undo_pos15 = getelementptr inbounds %struct.Text, %struct.Text* %29, i32 0, i32 10, !dbg !8532
  %30 = load i32, i32* %undo_pos15, align 8, !dbg !8533
  %inc16 = add nsw i32 %30, 1, !dbg !8533
  store i32 %inc16, i32* %undo_pos15, align 8, !dbg !8533
  %31 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8534
  %undo_buf17 = getelementptr inbounds %struct.Text, %struct.Text* %31, i32 0, i32 9, !dbg !8535
  %32 = load i8*, i8** %undo_buf17, align 8, !dbg !8535
  %33 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8536
  %undo_pos18 = getelementptr inbounds %struct.Text, %struct.Text* %33, i32 0, i32 10, !dbg !8537
  call void @txt_redo_read_cur(i8* %32, i32* %undo_pos18, i32* %curln, i16* %curc), !dbg !8538
  %34 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8539
  %35 = load i32, i32* %curln, align 4, !dbg !8540
  %36 = load i16, i16* %curc, align 2, !dbg !8541
  %conv19 = zext i16 %36 to i32, !dbg !8541
  call void @txt_move_to(%struct.Text* %34, i32 %35, i32 %conv19, i8 zeroext 0), !dbg !8542
  %37 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8543
  %38 = load i32, i32* %curln, align 4, !dbg !8544
  %39 = load i16, i16* %curc, align 2, !dbg !8545
  %conv20 = zext i16 %39 to i32, !dbg !8545
  call void @txt_move_to(%struct.Text* %37, i32 %38, i32 %conv20, i8 zeroext 1), !dbg !8546
  %40 = load i8, i8* %op, align 1, !dbg !8547
  %conv21 = zext i8 %40 to i32, !dbg !8547
  %sub22 = sub nsw i32 %conv21, 15, !dbg !8548
  %add23 = add nsw i32 %sub22, 1, !dbg !8549
  %41 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8550
  %undo_pos24 = getelementptr inbounds %struct.Text, %struct.Text* %41, i32 0, i32 10, !dbg !8551
  %42 = load i32, i32* %undo_pos24, align 8, !dbg !8552
  %add25 = add nsw i32 %42, %add23, !dbg !8552
  store i32 %add25, i32* %undo_pos24, align 8, !dbg !8552
  %43 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8553
  call void @txt_move_right(%struct.Text* %43, i8 zeroext 0), !dbg !8554
  %44 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8555
  call void @txt_backspace_char(%struct.Text* %44), !dbg !8556
  br label %sw.epilog, !dbg !8557

sw.bb26:                                          ; preds = %if.end, %if.end, %if.end, %if.end
  %45 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8558
  %undo_pos27 = getelementptr inbounds %struct.Text, %struct.Text* %45, i32 0, i32 10, !dbg !8559
  %46 = load i32, i32* %undo_pos27, align 8, !dbg !8560
  %inc28 = add nsw i32 %46, 1, !dbg !8560
  store i32 %inc28, i32* %undo_pos27, align 8, !dbg !8560
  %47 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8561
  %undo_buf29 = getelementptr inbounds %struct.Text, %struct.Text* %47, i32 0, i32 9, !dbg !8562
  %48 = load i8*, i8** %undo_buf29, align 8, !dbg !8562
  %49 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8563
  %undo_pos30 = getelementptr inbounds %struct.Text, %struct.Text* %49, i32 0, i32 10, !dbg !8564
  call void @txt_redo_read_cur(i8* %48, i32* %undo_pos30, i32* %curln, i16* %curc), !dbg !8565
  %50 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8566
  %51 = load i32, i32* %curln, align 4, !dbg !8567
  %52 = load i16, i16* %curc, align 2, !dbg !8568
  %conv31 = zext i16 %52 to i32, !dbg !8568
  call void @txt_move_to(%struct.Text* %50, i32 %51, i32 %conv31, i8 zeroext 0), !dbg !8569
  %53 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8570
  %54 = load i32, i32* %curln, align 4, !dbg !8571
  %55 = load i16, i16* %curc, align 2, !dbg !8572
  %conv32 = zext i16 %55 to i32, !dbg !8572
  call void @txt_move_to(%struct.Text* %53, i32 %54, i32 %conv32, i8 zeroext 1), !dbg !8573
  %56 = load i8, i8* %op, align 1, !dbg !8574
  %conv33 = zext i8 %56 to i32, !dbg !8574
  %sub34 = sub nsw i32 %conv33, 19, !dbg !8575
  %add35 = add nsw i32 %sub34, 1, !dbg !8576
  %57 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8577
  %undo_pos36 = getelementptr inbounds %struct.Text, %struct.Text* %57, i32 0, i32 10, !dbg !8578
  %58 = load i32, i32* %undo_pos36, align 8, !dbg !8579
  %add37 = add nsw i32 %58, %add35, !dbg !8579
  store i32 %add37, i32* %undo_pos36, align 8, !dbg !8579
  %59 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8580
  call void @txt_delete_char(%struct.Text* %59), !dbg !8581
  br label %sw.epilog, !dbg !8582

sw.bb38:                                          ; preds = %if.end
  %60 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8583
  %undo_pos39 = getelementptr inbounds %struct.Text, %struct.Text* %60, i32 0, i32 10, !dbg !8584
  %61 = load i32, i32* %undo_pos39, align 8, !dbg !8585
  %inc40 = add nsw i32 %61, 1, !dbg !8585
  store i32 %inc40, i32* %undo_pos39, align 8, !dbg !8585
  %62 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8586
  %undo_buf41 = getelementptr inbounds %struct.Text, %struct.Text* %62, i32 0, i32 9, !dbg !8587
  %63 = load i8*, i8** %undo_buf41, align 8, !dbg !8587
  %64 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8588
  %undo_pos42 = getelementptr inbounds %struct.Text, %struct.Text* %64, i32 0, i32 10, !dbg !8589
  call void @txt_redo_read_cursors(i8* %63, i32* %undo_pos42, i32* %curln, i16* %curc, i32* %selln, i16* %selc), !dbg !8590
  %65 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8591
  %66 = load i32, i32* %curln, align 4, !dbg !8592
  %67 = load i16, i16* %curc, align 2, !dbg !8593
  %conv43 = zext i16 %67 to i32, !dbg !8593
  call void @txt_move_to(%struct.Text* %65, i32 %66, i32 %conv43, i8 zeroext 0), !dbg !8594
  %68 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8595
  %69 = load i32, i32* %selln, align 4, !dbg !8596
  %70 = load i16, i16* %selc, align 2, !dbg !8597
  %conv44 = zext i16 %70 to i32, !dbg !8597
  call void @txt_move_to(%struct.Text* %68, i32 %69, i32 %conv44, i8 zeroext 1), !dbg !8598
  %71 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8599
  %undo_buf45 = getelementptr inbounds %struct.Text, %struct.Text* %71, i32 0, i32 9, !dbg !8600
  %72 = load i8*, i8** %undo_buf45, align 8, !dbg !8600
  %73 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8601
  %undo_pos46 = getelementptr inbounds %struct.Text, %struct.Text* %73, i32 0, i32 10, !dbg !8602
  %call47 = call i32 @txt_redo_read_uint32(i8* %72, i32* %undo_pos46), !dbg !8603
  store i32 %call47, i32* %linep, align 4, !dbg !8604
  %74 = load i32, i32* %linep, align 4, !dbg !8605
  %75 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8606
  %undo_pos48 = getelementptr inbounds %struct.Text, %struct.Text* %75, i32 0, i32 10, !dbg !8607
  %76 = load i32, i32* %undo_pos48, align 8, !dbg !8608
  %add49 = add i32 %76, %74, !dbg !8608
  store i32 %add49, i32* %undo_pos48, align 8, !dbg !8608
  %77 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8609
  %undo_pos50 = getelementptr inbounds %struct.Text, %struct.Text* %77, i32 0, i32 10, !dbg !8610
  %78 = load i32, i32* %undo_pos50, align 8, !dbg !8611
  %add51 = add nsw i32 %78, 4, !dbg !8611
  store i32 %add51, i32* %undo_pos50, align 8, !dbg !8611
  %79 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8612
  call void @txt_delete_sel(%struct.Text* %79), !dbg !8613
  br label %sw.epilog, !dbg !8614

sw.bb52:                                          ; preds = %if.end
  %80 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8615
  %undo_pos53 = getelementptr inbounds %struct.Text, %struct.Text* %80, i32 0, i32 10, !dbg !8616
  %81 = load i32, i32* %undo_pos53, align 8, !dbg !8617
  %inc54 = add nsw i32 %81, 1, !dbg !8617
  store i32 %inc54, i32* %undo_pos53, align 8, !dbg !8617
  %82 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8618
  %undo_buf55 = getelementptr inbounds %struct.Text, %struct.Text* %82, i32 0, i32 9, !dbg !8619
  %83 = load i8*, i8** %undo_buf55, align 8, !dbg !8619
  %84 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8620
  %undo_pos56 = getelementptr inbounds %struct.Text, %struct.Text* %84, i32 0, i32 10, !dbg !8621
  call void @txt_redo_read_cursors(i8* %83, i32* %undo_pos56, i32* %curln, i16* %curc, i32* %selln, i16* %selc), !dbg !8622
  %85 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8623
  %86 = load i32, i32* %curln, align 4, !dbg !8624
  %87 = load i16, i16* %curc, align 2, !dbg !8625
  %conv57 = zext i16 %87 to i32, !dbg !8625
  call void @txt_move_to(%struct.Text* %85, i32 %86, i32 %conv57, i8 zeroext 0), !dbg !8626
  %88 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8627
  %89 = load i32, i32* %curln, align 4, !dbg !8628
  %90 = load i16, i16* %curc, align 2, !dbg !8629
  %conv58 = zext i16 %90 to i32, !dbg !8629
  call void @txt_move_to(%struct.Text* %88, i32 %89, i32 %conv58, i8 zeroext 1), !dbg !8630
  %91 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8631
  %undo_buf59 = getelementptr inbounds %struct.Text, %struct.Text* %91, i32 0, i32 9, !dbg !8632
  %92 = load i8*, i8** %undo_buf59, align 8, !dbg !8632
  %93 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8633
  %undo_pos60 = getelementptr inbounds %struct.Text, %struct.Text* %93, i32 0, i32 10, !dbg !8634
  %call61 = call i32 @txt_redo_read_uint32(i8* %92, i32* %undo_pos60), !dbg !8635
  store i32 %call61, i32* %linep, align 4, !dbg !8636
  %94 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8637
  %95 = load i32, i32* %linep, align 4, !dbg !8638
  %add62 = add i32 %95, 1, !dbg !8639
  %conv63 = zext i32 %add62 to i64, !dbg !8638
  %call64 = call i8* %94(i64 %conv63, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0)), !dbg !8637
  store i8* %call64, i8** %buf, align 8, !dbg !8640
  %96 = load i8*, i8** %buf, align 8, !dbg !8641
  %97 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8642
  %undo_buf65 = getelementptr inbounds %struct.Text, %struct.Text* %97, i32 0, i32 9, !dbg !8643
  %98 = load i8*, i8** %undo_buf65, align 8, !dbg !8643
  %99 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8644
  %undo_pos66 = getelementptr inbounds %struct.Text, %struct.Text* %99, i32 0, i32 10, !dbg !8645
  %100 = load i32, i32* %undo_pos66, align 8, !dbg !8645
  %idxprom67 = sext i32 %100 to i64, !dbg !8642
  %arrayidx68 = getelementptr inbounds i8, i8* %98, i64 %idxprom67, !dbg !8642
  %101 = load i32, i32* %linep, align 4, !dbg !8646
  %conv69 = zext i32 %101 to i64, !dbg !8646
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %96, i8* align 1 %arrayidx68, i64 %conv69, i1 false), !dbg !8647
  %102 = load i32, i32* %linep, align 4, !dbg !8648
  %103 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8649
  %undo_pos70 = getelementptr inbounds %struct.Text, %struct.Text* %103, i32 0, i32 10, !dbg !8650
  %104 = load i32, i32* %undo_pos70, align 8, !dbg !8651
  %add71 = add i32 %104, %102, !dbg !8651
  store i32 %add71, i32* %undo_pos70, align 8, !dbg !8651
  %105 = load i8*, i8** %buf, align 8, !dbg !8652
  %106 = load i32, i32* %linep, align 4, !dbg !8653
  %idxprom72 = zext i32 %106 to i64, !dbg !8652
  %arrayidx73 = getelementptr inbounds i8, i8* %105, i64 %idxprom72, !dbg !8652
  store i8 0, i8* %arrayidx73, align 1, !dbg !8654
  %107 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8655
  %108 = load i8*, i8** %buf, align 8, !dbg !8656
  call void @txt_insert_buf(%struct.Text* %107, i8* %108), !dbg !8657
  %109 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8658
  %110 = load i8*, i8** %buf, align 8, !dbg !8659
  call void %109(i8* %110), !dbg !8658
  %111 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8660
  %undo_pos74 = getelementptr inbounds %struct.Text, %struct.Text* %111, i32 0, i32 10, !dbg !8661
  %112 = load i32, i32* %undo_pos74, align 8, !dbg !8662
  %add75 = add nsw i32 %112, 4, !dbg !8662
  store i32 %add75, i32* %undo_pos74, align 8, !dbg !8662
  br label %sw.epilog, !dbg !8663

sw.bb76:                                          ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %113 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8664
  %undo_pos77 = getelementptr inbounds %struct.Text, %struct.Text* %113, i32 0, i32 10, !dbg !8665
  %114 = load i32, i32* %undo_pos77, align 8, !dbg !8666
  %inc78 = add nsw i32 %114, 1, !dbg !8666
  store i32 %inc78, i32* %undo_pos77, align 8, !dbg !8666
  %115 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8667
  %undo_buf79 = getelementptr inbounds %struct.Text, %struct.Text* %115, i32 0, i32 9, !dbg !8668
  %116 = load i8*, i8** %undo_buf79, align 8, !dbg !8668
  %117 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8669
  %undo_pos80 = getelementptr inbounds %struct.Text, %struct.Text* %117, i32 0, i32 10, !dbg !8670
  call void @txt_redo_read_cursors(i8* %116, i32* %undo_pos80, i32* %curln, i16* %curc, i32* %selln, i16* %selc), !dbg !8671
  %118 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8672
  %119 = load i32, i32* %curln, align 4, !dbg !8673
  %120 = load i16, i16* %curc, align 2, !dbg !8674
  %conv81 = zext i16 %120 to i32, !dbg !8674
  call void @txt_move_to(%struct.Text* %118, i32 %119, i32 %conv81, i8 zeroext 0), !dbg !8675
  %121 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8676
  %122 = load i32, i32* %selln, align 4, !dbg !8677
  %123 = load i16, i16* %selc, align 2, !dbg !8678
  %conv82 = zext i16 %123 to i32, !dbg !8678
  call void @txt_move_to(%struct.Text* %121, i32 %122, i32 %conv82, i8 zeroext 1), !dbg !8679
  %124 = load i8, i8* %op, align 1, !dbg !8680
  %conv83 = zext i8 %124 to i32, !dbg !8680
  %cmp = icmp eq i32 %conv83, 26, !dbg !8682
  br i1 %cmp, label %if.then85, label %if.else, !dbg !8683

if.then85:                                        ; preds = %sw.bb76
  %125 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8684
  call void @txt_indent(%struct.Text* %125), !dbg !8686
  br label %if.end129, !dbg !8687

if.else:                                          ; preds = %sw.bb76
  %126 = load i8, i8* %op, align 1, !dbg !8688
  %conv86 = zext i8 %126 to i32, !dbg !8688
  %cmp87 = icmp eq i32 %conv86, 27, !dbg !8690
  br i1 %cmp87, label %if.then89, label %if.else90, !dbg !8691

if.then89:                                        ; preds = %if.else
  %127 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8692
  call void @txt_unindent(%struct.Text* %127), !dbg !8694
  br label %if.end128, !dbg !8695

if.else90:                                        ; preds = %if.else
  %128 = load i8, i8* %op, align 1, !dbg !8696
  %conv91 = zext i8 %128 to i32, !dbg !8696
  %cmp92 = icmp eq i32 %conv91, 28, !dbg !8698
  br i1 %cmp92, label %if.then94, label %if.else95, !dbg !8699

if.then94:                                        ; preds = %if.else90
  %129 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8700
  call void @txt_comment(%struct.Text* %129), !dbg !8702
  br label %if.end127, !dbg !8703

if.else95:                                        ; preds = %if.else90
  %130 = load i8, i8* %op, align 1, !dbg !8704
  %conv96 = zext i8 %130 to i32, !dbg !8704
  %cmp97 = icmp eq i32 %conv96, 29, !dbg !8706
  br i1 %cmp97, label %if.then99, label %if.else100, !dbg !8707

if.then99:                                        ; preds = %if.else95
  %131 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8708
  call void @txt_uncomment(%struct.Text* %131), !dbg !8710
  br label %if.end126, !dbg !8711

if.else100:                                       ; preds = %if.else95
  %132 = load i8, i8* %op, align 1, !dbg !8712
  %conv101 = zext i8 %132 to i32, !dbg !8712
  %cmp102 = icmp eq i32 %conv101, 32, !dbg !8714
  br i1 %cmp102, label %if.then104, label %if.else105, !dbg !8715

if.then104:                                       ; preds = %if.else100
  %133 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8716
  call void @txt_duplicate_line(%struct.Text* %133), !dbg !8718
  br label %if.end125, !dbg !8719

if.else105:                                       ; preds = %if.else100
  %134 = load i8, i8* %op, align 1, !dbg !8720
  %conv106 = zext i8 %134 to i32, !dbg !8720
  %cmp107 = icmp eq i32 %conv106, 30, !dbg !8722
  br i1 %cmp107, label %if.then109, label %if.else114, !dbg !8723

if.then109:                                       ; preds = %if.else105
  %135 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8724
  %136 = load i32, i32* %curln, align 4, !dbg !8726
  %add110 = add i32 %136, 1, !dbg !8727
  %137 = load i16, i16* %curc, align 2, !dbg !8728
  %conv111 = zext i16 %137 to i32, !dbg !8728
  call void @txt_move_to(%struct.Text* %135, i32 %add110, i32 %conv111, i8 zeroext 0), !dbg !8729
  %138 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8730
  %139 = load i32, i32* %selln, align 4, !dbg !8731
  %add112 = add i32 %139, 1, !dbg !8732
  %140 = load i16, i16* %selc, align 2, !dbg !8733
  %conv113 = zext i16 %140 to i32, !dbg !8733
  call void @txt_move_to(%struct.Text* %138, i32 %add112, i32 %conv113, i8 zeroext 1), !dbg !8734
  %141 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8735
  call void @txt_move_lines(%struct.Text* %141, i32 -1), !dbg !8736
  br label %if.end124, !dbg !8737

if.else114:                                       ; preds = %if.else105
  %142 = load i8, i8* %op, align 1, !dbg !8738
  %conv115 = zext i8 %142 to i32, !dbg !8738
  %cmp116 = icmp eq i32 %conv115, 31, !dbg !8740
  br i1 %cmp116, label %if.then118, label %if.end123, !dbg !8741

if.then118:                                       ; preds = %if.else114
  %143 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8742
  %144 = load i32, i32* %curln, align 4, !dbg !8744
  %sub119 = sub i32 %144, 1, !dbg !8745
  %145 = load i16, i16* %curc, align 2, !dbg !8746
  %conv120 = zext i16 %145 to i32, !dbg !8746
  call void @txt_move_to(%struct.Text* %143, i32 %sub119, i32 %conv120, i8 zeroext 0), !dbg !8747
  %146 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8748
  %147 = load i32, i32* %selln, align 4, !dbg !8749
  %sub121 = sub i32 %147, 1, !dbg !8750
  %148 = load i16, i16* %selc, align 2, !dbg !8751
  %conv122 = zext i16 %148 to i32, !dbg !8751
  call void @txt_move_to(%struct.Text* %146, i32 %sub121, i32 %conv122, i8 zeroext 1), !dbg !8752
  %149 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8753
  call void @txt_move_lines(%struct.Text* %149, i32 1), !dbg !8754
  br label %if.end123, !dbg !8755

if.end123:                                        ; preds = %if.then118, %if.else114
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.then109
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %if.then104
  br label %if.end126

if.end126:                                        ; preds = %if.end125, %if.then99
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.then94
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.then89
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.then85
  %150 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8756
  %151 = load i32, i32* %curln, align 4, !dbg !8757
  %152 = load i16, i16* %curc, align 2, !dbg !8758
  %conv130 = zext i16 %152 to i32, !dbg !8758
  call void @txt_move_to(%struct.Text* %150, i32 %151, i32 %conv130, i8 zeroext 0), !dbg !8759
  %153 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8760
  %154 = load i32, i32* %selln, align 4, !dbg !8761
  %155 = load i16, i16* %selc, align 2, !dbg !8762
  %conv131 = zext i16 %155 to i32, !dbg !8762
  call void @txt_move_to(%struct.Text* %153, i32 %154, i32 %conv131, i8 zeroext 1), !dbg !8763
  br label %sw.epilog, !dbg !8764

sw.default:                                       ; preds = %if.end
  %156 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8765
  %undo_pos132 = getelementptr inbounds %struct.Text, %struct.Text* %156, i32 0, i32 10, !dbg !8766
  store i32 -1, i32* %undo_pos132, align 8, !dbg !8767
  br label %sw.epilog, !dbg !8768

sw.epilog:                                        ; preds = %sw.default, %if.end129, %sw.bb52, %sw.bb38, %sw.bb26, %sw.bb14, %sw.bb
  store i8 0, i8* @undoing, align 1, !dbg !8769
  br label %return, !dbg !8770

return:                                           ; preds = %sw.epilog, %if.then
  ret void, !dbg !8770
}

; Function Attrs: noinline nounwind uwtable
define internal void @txt_redo_read_cur(i8* %undo_buf, i32* %undo_pos, i32* %curln, i16* %curc) #0 !dbg !8771 {
entry:
  %undo_buf.addr = alloca i8*, align 8
  %undo_pos.addr = alloca i32*, align 8
  %curln.addr = alloca i32*, align 8
  %curc.addr = alloca i16*, align 8
  store i8* %undo_buf, i8** %undo_buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %undo_buf.addr, metadata !8772, metadata !DIExpression()), !dbg !8773
  store i32* %undo_pos, i32** %undo_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %undo_pos.addr, metadata !8774, metadata !DIExpression()), !dbg !8775
  store i32* %curln, i32** %curln.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %curln.addr, metadata !8776, metadata !DIExpression()), !dbg !8777
  store i16* %curc, i16** %curc.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %curc.addr, metadata !8778, metadata !DIExpression()), !dbg !8779
  %0 = load i8*, i8** %undo_buf.addr, align 8, !dbg !8780
  %1 = load i32*, i32** %undo_pos.addr, align 8, !dbg !8781
  %call = call zeroext i16 @txt_redo_read_uint16(i8* %0, i32* %1), !dbg !8782
  %2 = load i16*, i16** %curc.addr, align 8, !dbg !8783
  store i16 %call, i16* %2, align 2, !dbg !8784
  %3 = load i8*, i8** %undo_buf.addr, align 8, !dbg !8785
  %4 = load i32*, i32** %undo_pos.addr, align 8, !dbg !8786
  %call1 = call i32 @txt_redo_read_uint32(i8* %3, i32* %4), !dbg !8787
  %5 = load i32*, i32** %curln.addr, align 8, !dbg !8788
  store i32 %call1, i32* %5, align 4, !dbg !8789
  ret void, !dbg !8790
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @txt_redo_read_unicode(i8* %undo_buf, i32* %undo_pos, i16 signext %bytes) #0 !dbg !8791 {
entry:
  %undo_buf.addr = alloca i8*, align 8
  %undo_pos.addr = alloca i32*, align 8
  %bytes.addr = alloca i16, align 2
  %unicode = alloca i32, align 4
  %utf8 = alloca [7 x i8], align 1
  store i8* %undo_buf, i8** %undo_buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %undo_buf.addr, metadata !8792, metadata !DIExpression()), !dbg !8793
  store i32* %undo_pos, i32** %undo_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %undo_pos.addr, metadata !8794, metadata !DIExpression()), !dbg !8795
  store i16 %bytes, i16* %bytes.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %bytes.addr, metadata !8796, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.declare(metadata i32* %unicode, metadata !8798, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.declare(metadata [7 x i8]* %utf8, metadata !8800, metadata !DIExpression()), !dbg !8801
  %0 = load i16, i16* %bytes.addr, align 2, !dbg !8802
  %conv = sext i16 %0 to i32, !dbg !8802
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
    i32 3, label %sw.bb12
    i32 4, label %sw.bb28
  ], !dbg !8803

sw.bb:                                            ; preds = %entry
  %1 = load i8*, i8** %undo_buf.addr, align 8, !dbg !8804
  %2 = load i32*, i32** %undo_pos.addr, align 8, !dbg !8806
  %3 = load i32, i32* %2, align 4, !dbg !8807
  %idxprom = sext i32 %3 to i64, !dbg !8804
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom, !dbg !8804
  %4 = load i8, i8* %arrayidx, align 1, !dbg !8804
  %conv1 = zext i8 %4 to i32, !dbg !8804
  store i32 %conv1, i32* %unicode, align 4, !dbg !8808
  %5 = load i32*, i32** %undo_pos.addr, align 8, !dbg !8809
  %6 = load i32, i32* %5, align 4, !dbg !8810
  %inc = add nsw i32 %6, 1, !dbg !8810
  store i32 %inc, i32* %5, align 4, !dbg !8810
  br label %sw.epilog, !dbg !8811

sw.bb2:                                           ; preds = %entry
  %7 = load i8*, i8** %undo_buf.addr, align 8, !dbg !8812
  %8 = load i32*, i32** %undo_pos.addr, align 8, !dbg !8813
  %9 = load i32, i32* %8, align 4, !dbg !8814
  %idxprom3 = sext i32 %9 to i64, !dbg !8812
  %arrayidx4 = getelementptr inbounds i8, i8* %7, i64 %idxprom3, !dbg !8812
  %10 = load i8, i8* %arrayidx4, align 1, !dbg !8812
  %arrayidx5 = getelementptr inbounds [7 x i8], [7 x i8]* %utf8, i64 0, i64 0, !dbg !8815
  store i8 %10, i8* %arrayidx5, align 1, !dbg !8816
  %11 = load i32*, i32** %undo_pos.addr, align 8, !dbg !8817
  %12 = load i32, i32* %11, align 4, !dbg !8818
  %inc6 = add nsw i32 %12, 1, !dbg !8818
  store i32 %inc6, i32* %11, align 4, !dbg !8818
  %13 = load i8*, i8** %undo_buf.addr, align 8, !dbg !8819
  %14 = load i32*, i32** %undo_pos.addr, align 8, !dbg !8820
  %15 = load i32, i32* %14, align 4, !dbg !8821
  %idxprom7 = sext i32 %15 to i64, !dbg !8819
  %arrayidx8 = getelementptr inbounds i8, i8* %13, i64 %idxprom7, !dbg !8819
  %16 = load i8, i8* %arrayidx8, align 1, !dbg !8819
  %arrayidx9 = getelementptr inbounds [7 x i8], [7 x i8]* %utf8, i64 0, i64 1, !dbg !8822
  store i8 %16, i8* %arrayidx9, align 1, !dbg !8823
  %17 = load i32*, i32** %undo_pos.addr, align 8, !dbg !8824
  %18 = load i32, i32* %17, align 4, !dbg !8825
  %inc10 = add nsw i32 %18, 1, !dbg !8825
  store i32 %inc10, i32* %17, align 4, !dbg !8825
  %arrayidx11 = getelementptr inbounds [7 x i8], [7 x i8]* %utf8, i64 0, i64 2, !dbg !8826
  store i8 0, i8* %arrayidx11, align 1, !dbg !8827
  %arraydecay = getelementptr inbounds [7 x i8], [7 x i8]* %utf8, i64 0, i64 0, !dbg !8828
  %call = call i32 @BLI_str_utf8_as_unicode(i8* %arraydecay), !dbg !8829
  store i32 %call, i32* %unicode, align 4, !dbg !8830
  br label %sw.epilog, !dbg !8831

sw.bb12:                                          ; preds = %entry
  %19 = load i8*, i8** %undo_buf.addr, align 8, !dbg !8832
  %20 = load i32*, i32** %undo_pos.addr, align 8, !dbg !8833
  %21 = load i32, i32* %20, align 4, !dbg !8834
  %idxprom13 = sext i32 %21 to i64, !dbg !8832
  %arrayidx14 = getelementptr inbounds i8, i8* %19, i64 %idxprom13, !dbg !8832
  %22 = load i8, i8* %arrayidx14, align 1, !dbg !8832
  %arrayidx15 = getelementptr inbounds [7 x i8], [7 x i8]* %utf8, i64 0, i64 0, !dbg !8835
  store i8 %22, i8* %arrayidx15, align 1, !dbg !8836
  %23 = load i32*, i32** %undo_pos.addr, align 8, !dbg !8837
  %24 = load i32, i32* %23, align 4, !dbg !8838
  %inc16 = add nsw i32 %24, 1, !dbg !8838
  store i32 %inc16, i32* %23, align 4, !dbg !8838
  %25 = load i8*, i8** %undo_buf.addr, align 8, !dbg !8839
  %26 = load i32*, i32** %undo_pos.addr, align 8, !dbg !8840
  %27 = load i32, i32* %26, align 4, !dbg !8841
  %idxprom17 = sext i32 %27 to i64, !dbg !8839
  %arrayidx18 = getelementptr inbounds i8, i8* %25, i64 %idxprom17, !dbg !8839
  %28 = load i8, i8* %arrayidx18, align 1, !dbg !8839
  %arrayidx19 = getelementptr inbounds [7 x i8], [7 x i8]* %utf8, i64 0, i64 1, !dbg !8842
  store i8 %28, i8* %arrayidx19, align 1, !dbg !8843
  %29 = load i32*, i32** %undo_pos.addr, align 8, !dbg !8844
  %30 = load i32, i32* %29, align 4, !dbg !8845
  %inc20 = add nsw i32 %30, 1, !dbg !8845
  store i32 %inc20, i32* %29, align 4, !dbg !8845
  %31 = load i8*, i8** %undo_buf.addr, align 8, !dbg !8846
  %32 = load i32*, i32** %undo_pos.addr, align 8, !dbg !8847
  %33 = load i32, i32* %32, align 4, !dbg !8848
  %idxprom21 = sext i32 %33 to i64, !dbg !8846
  %arrayidx22 = getelementptr inbounds i8, i8* %31, i64 %idxprom21, !dbg !8846
  %34 = load i8, i8* %arrayidx22, align 1, !dbg !8846
  %arrayidx23 = getelementptr inbounds [7 x i8], [7 x i8]* %utf8, i64 0, i64 2, !dbg !8849
  store i8 %34, i8* %arrayidx23, align 1, !dbg !8850
  %35 = load i32*, i32** %undo_pos.addr, align 8, !dbg !8851
  %36 = load i32, i32* %35, align 4, !dbg !8852
  %inc24 = add nsw i32 %36, 1, !dbg !8852
  store i32 %inc24, i32* %35, align 4, !dbg !8852
  %arrayidx25 = getelementptr inbounds [7 x i8], [7 x i8]* %utf8, i64 0, i64 3, !dbg !8853
  store i8 0, i8* %arrayidx25, align 1, !dbg !8854
  %arraydecay26 = getelementptr inbounds [7 x i8], [7 x i8]* %utf8, i64 0, i64 0, !dbg !8855
  %call27 = call i32 @BLI_str_utf8_as_unicode(i8* %arraydecay26), !dbg !8856
  store i32 %call27, i32* %unicode, align 4, !dbg !8857
  br label %sw.epilog, !dbg !8858

sw.bb28:                                          ; preds = %entry
  %37 = load i8*, i8** %undo_buf.addr, align 8, !dbg !8859
  %38 = load i32*, i32** %undo_pos.addr, align 8, !dbg !8860
  %call29 = call i32 @txt_undo_read_uint32(i8* %37, i32* %38), !dbg !8861
  store i32 %call29, i32* %unicode, align 4, !dbg !8862
  br label %sw.epilog, !dbg !8863

sw.default:                                       ; preds = %entry
  store i32 0, i32* %unicode, align 4, !dbg !8864
  br label %sw.epilog, !dbg !8865

sw.epilog:                                        ; preds = %sw.default, %sw.bb28, %sw.bb12, %sw.bb2, %sw.bb
  %39 = load i32, i32* %unicode, align 4, !dbg !8866
  ret i32 %39, !dbg !8867
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_backspace_char(%struct.Text* %text) #0 !dbg !8868 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %c = alloca i32, align 4
  %c_len = alloca i64, align 8
  %prev16 = alloca i8*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !8869, metadata !DIExpression()), !dbg !8870
  call void @llvm.dbg.declare(metadata i32* %c, metadata !8871, metadata !DIExpression()), !dbg !8872
  store i32 10, i32* %c, align 4, !dbg !8872
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8873
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !8875
  %1 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !8875
  %tobool = icmp ne %struct.TextLine* %1, null, !dbg !8873
  br i1 %tobool, label %if.end, label %if.then, !dbg !8876

if.then:                                          ; preds = %entry
  br label %if.end48, !dbg !8877

if.end:                                           ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8878
  %call = call zeroext i8 @txt_has_sel(%struct.Text* %2), !dbg !8880
  %tobool1 = icmp ne i8 %call, 0, !dbg !8880
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !8881

if.then2:                                         ; preds = %if.end
  %3 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8882
  call void @txt_delete_sel(%struct.Text* %3), !dbg !8884
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8885
  call void @txt_make_dirty(%struct.Text* %4), !dbg !8886
  br label %if.end48, !dbg !8887

if.else:                                          ; preds = %if.end
  %5 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8888
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 7, !dbg !8890
  %6 = load i32, i32* %curc, align 8, !dbg !8890
  %cmp = icmp eq i32 %6, 0, !dbg !8891
  br i1 %cmp, label %if.then3, label %if.else15, !dbg !8892

if.then3:                                         ; preds = %if.else
  %7 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8893
  %curl4 = getelementptr inbounds %struct.Text, %struct.Text* %7, i32 0, i32 5, !dbg !8896
  %8 = load %struct.TextLine*, %struct.TextLine** %curl4, align 8, !dbg !8896
  %prev = getelementptr inbounds %struct.TextLine, %struct.TextLine* %8, i32 0, i32 1, !dbg !8897
  %9 = load %struct.TextLine*, %struct.TextLine** %prev, align 8, !dbg !8897
  %tobool5 = icmp ne %struct.TextLine* %9, null, !dbg !8893
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !8898

if.then6:                                         ; preds = %if.then3
  br label %if.end48, !dbg !8899

if.end7:                                          ; preds = %if.then3
  %10 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8900
  %curl8 = getelementptr inbounds %struct.Text, %struct.Text* %10, i32 0, i32 5, !dbg !8901
  %11 = load %struct.TextLine*, %struct.TextLine** %curl8, align 8, !dbg !8901
  %prev9 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %11, i32 0, i32 1, !dbg !8902
  %12 = load %struct.TextLine*, %struct.TextLine** %prev9, align 8, !dbg !8902
  %13 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8903
  %curl10 = getelementptr inbounds %struct.Text, %struct.Text* %13, i32 0, i32 5, !dbg !8904
  store %struct.TextLine* %12, %struct.TextLine** %curl10, align 8, !dbg !8905
  %14 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8906
  %curl11 = getelementptr inbounds %struct.Text, %struct.Text* %14, i32 0, i32 5, !dbg !8907
  %15 = load %struct.TextLine*, %struct.TextLine** %curl11, align 8, !dbg !8907
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %15, i32 0, i32 4, !dbg !8908
  %16 = load i32, i32* %len, align 8, !dbg !8908
  %17 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8909
  %curc12 = getelementptr inbounds %struct.Text, %struct.Text* %17, i32 0, i32 7, !dbg !8910
  store i32 %16, i32* %curc12, align 8, !dbg !8911
  %18 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8912
  %19 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8913
  %curl13 = getelementptr inbounds %struct.Text, %struct.Text* %19, i32 0, i32 5, !dbg !8914
  %20 = load %struct.TextLine*, %struct.TextLine** %curl13, align 8, !dbg !8914
  %21 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8915
  %curl14 = getelementptr inbounds %struct.Text, %struct.Text* %21, i32 0, i32 5, !dbg !8916
  %22 = load %struct.TextLine*, %struct.TextLine** %curl14, align 8, !dbg !8916
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %22, i32 0, i32 0, !dbg !8917
  %23 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !8917
  call void @txt_combine_lines(%struct.Text* %18, %struct.TextLine* %20, %struct.TextLine* %23), !dbg !8918
  %24 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8919
  call void @txt_pop_sel(%struct.Text* %24), !dbg !8920
  br label %if.end44, !dbg !8921

if.else15:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %c_len, metadata !8922, metadata !DIExpression()), !dbg !8924
  store i64 0, i64* %c_len, align 8, !dbg !8924
  call void @llvm.dbg.declare(metadata i8** %prev16, metadata !8925, metadata !DIExpression()), !dbg !8926
  %25 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8927
  %curl17 = getelementptr inbounds %struct.Text, %struct.Text* %25, i32 0, i32 5, !dbg !8928
  %26 = load %struct.TextLine*, %struct.TextLine** %curl17, align 8, !dbg !8928
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %26, i32 0, i32 2, !dbg !8929
  %27 = load i8*, i8** %line, align 8, !dbg !8929
  %28 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8930
  %curc18 = getelementptr inbounds %struct.Text, %struct.Text* %28, i32 0, i32 7, !dbg !8931
  %29 = load i32, i32* %curc18, align 8, !dbg !8931
  %idx.ext = sext i32 %29 to i64, !dbg !8932
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 %idx.ext, !dbg !8932
  %call19 = call i8* @BLI_str_prev_char_utf8(i8* %add.ptr), !dbg !8933
  store i8* %call19, i8** %prev16, align 8, !dbg !8926
  %30 = load i8*, i8** %prev16, align 8, !dbg !8934
  %call20 = call i32 @BLI_str_utf8_as_unicode_and_size(i8* %30, i64* %c_len), !dbg !8935
  store i32 %call20, i32* %c, align 4, !dbg !8936
  %31 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8937
  %curl21 = getelementptr inbounds %struct.Text, %struct.Text* %31, i32 0, i32 5, !dbg !8938
  %32 = load %struct.TextLine*, %struct.TextLine** %curl21, align 8, !dbg !8938
  %line22 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %32, i32 0, i32 2, !dbg !8939
  %33 = load i8*, i8** %line22, align 8, !dbg !8939
  %34 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8940
  %curc23 = getelementptr inbounds %struct.Text, %struct.Text* %34, i32 0, i32 7, !dbg !8941
  %35 = load i32, i32* %curc23, align 8, !dbg !8941
  %idx.ext24 = sext i32 %35 to i64, !dbg !8942
  %add.ptr25 = getelementptr inbounds i8, i8* %33, i64 %idx.ext24, !dbg !8942
  %36 = load i64, i64* %c_len, align 8, !dbg !8943
  %idx.neg = sub i64 0, %36, !dbg !8944
  %add.ptr26 = getelementptr inbounds i8, i8* %add.ptr25, i64 %idx.neg, !dbg !8944
  %37 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8945
  %curl27 = getelementptr inbounds %struct.Text, %struct.Text* %37, i32 0, i32 5, !dbg !8946
  %38 = load %struct.TextLine*, %struct.TextLine** %curl27, align 8, !dbg !8946
  %line28 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %38, i32 0, i32 2, !dbg !8947
  %39 = load i8*, i8** %line28, align 8, !dbg !8947
  %40 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8948
  %curc29 = getelementptr inbounds %struct.Text, %struct.Text* %40, i32 0, i32 7, !dbg !8949
  %41 = load i32, i32* %curc29, align 8, !dbg !8949
  %idx.ext30 = sext i32 %41 to i64, !dbg !8950
  %add.ptr31 = getelementptr inbounds i8, i8* %39, i64 %idx.ext30, !dbg !8950
  %42 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8951
  %curl32 = getelementptr inbounds %struct.Text, %struct.Text* %42, i32 0, i32 5, !dbg !8952
  %43 = load %struct.TextLine*, %struct.TextLine** %curl32, align 8, !dbg !8952
  %len33 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %43, i32 0, i32 4, !dbg !8953
  %44 = load i32, i32* %len33, align 8, !dbg !8953
  %45 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8954
  %curc34 = getelementptr inbounds %struct.Text, %struct.Text* %45, i32 0, i32 7, !dbg !8955
  %46 = load i32, i32* %curc34, align 8, !dbg !8955
  %sub = sub nsw i32 %44, %46, !dbg !8956
  %add = add nsw i32 %sub, 1, !dbg !8957
  %conv = sext i32 %add to i64, !dbg !8951
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %add.ptr26, i8* align 1 %add.ptr31, i64 %conv, i1 false), !dbg !8958
  %47 = load i64, i64* %c_len, align 8, !dbg !8959
  %48 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8960
  %curl35 = getelementptr inbounds %struct.Text, %struct.Text* %48, i32 0, i32 5, !dbg !8961
  %49 = load %struct.TextLine*, %struct.TextLine** %curl35, align 8, !dbg !8961
  %len36 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %49, i32 0, i32 4, !dbg !8962
  %50 = load i32, i32* %len36, align 8, !dbg !8963
  %conv37 = sext i32 %50 to i64, !dbg !8963
  %sub38 = sub i64 %conv37, %47, !dbg !8963
  %conv39 = trunc i64 %sub38 to i32, !dbg !8963
  store i32 %conv39, i32* %len36, align 8, !dbg !8963
  %51 = load i64, i64* %c_len, align 8, !dbg !8964
  %52 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8965
  %curc40 = getelementptr inbounds %struct.Text, %struct.Text* %52, i32 0, i32 7, !dbg !8966
  %53 = load i32, i32* %curc40, align 8, !dbg !8967
  %conv41 = sext i32 %53 to i64, !dbg !8967
  %sub42 = sub i64 %conv41, %51, !dbg !8967
  %conv43 = trunc i64 %sub42 to i32, !dbg !8967
  store i32 %conv43, i32* %curc40, align 8, !dbg !8967
  %54 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8968
  call void @txt_pop_sel(%struct.Text* %54), !dbg !8969
  br label %if.end44

if.end44:                                         ; preds = %if.else15, %if.end7
  br label %if.end45

if.end45:                                         ; preds = %if.end44
  %55 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8970
  call void @txt_make_dirty(%struct.Text* %55), !dbg !8971
  %56 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8972
  call void @txt_clean_text(%struct.Text* %56), !dbg !8973
  %57 = load i8, i8* @undoing, align 1, !dbg !8974
  %tobool46 = icmp ne i8 %57, 0, !dbg !8974
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !8976

if.then47:                                        ; preds = %if.end45
  %58 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8977
  %59 = load i32, i32* %c, align 4, !dbg !8978
  call void @txt_undo_add_charop(%struct.Text* %58, i32 15, i32 %59), !dbg !8979
  br label %if.end48, !dbg !8979

if.end48:                                         ; preds = %if.then, %if.then2, %if.then6, %if.then47, %if.end45
  ret void, !dbg !8980
}

; Function Attrs: noinline nounwind uwtable
define internal void @txt_redo_read_cursors(i8* %undo_buf, i32* %undo_pos, i32* %curln, i16* %curc, i32* %selln, i16* %selc) #0 !dbg !8981 {
entry:
  %undo_buf.addr = alloca i8*, align 8
  %undo_pos.addr = alloca i32*, align 8
  %curln.addr = alloca i32*, align 8
  %curc.addr = alloca i16*, align 8
  %selln.addr = alloca i32*, align 8
  %selc.addr = alloca i16*, align 8
  store i8* %undo_buf, i8** %undo_buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %undo_buf.addr, metadata !8982, metadata !DIExpression()), !dbg !8983
  store i32* %undo_pos, i32** %undo_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %undo_pos.addr, metadata !8984, metadata !DIExpression()), !dbg !8985
  store i32* %curln, i32** %curln.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %curln.addr, metadata !8986, metadata !DIExpression()), !dbg !8987
  store i16* %curc, i16** %curc.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %curc.addr, metadata !8988, metadata !DIExpression()), !dbg !8989
  store i32* %selln, i32** %selln.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %selln.addr, metadata !8990, metadata !DIExpression()), !dbg !8991
  store i16* %selc, i16** %selc.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %selc.addr, metadata !8992, metadata !DIExpression()), !dbg !8993
  %0 = load i8*, i8** %undo_buf.addr, align 8, !dbg !8994
  %1 = load i32*, i32** %undo_pos.addr, align 8, !dbg !8995
  %2 = load i32*, i32** %curln.addr, align 8, !dbg !8996
  %3 = load i16*, i16** %curc.addr, align 8, !dbg !8997
  call void @txt_redo_read_cur(i8* %0, i32* %1, i32* %2, i16* %3), !dbg !8998
  %4 = load i8*, i8** %undo_buf.addr, align 8, !dbg !8999
  %5 = load i32*, i32** %undo_pos.addr, align 8, !dbg !9000
  %6 = load i32*, i32** %selln.addr, align 8, !dbg !9001
  %7 = load i16*, i16** %selc.addr, align 8, !dbg !9002
  call void @txt_redo_read_sel(i8* %4, i32* %5, i32* %6, i16* %7), !dbg !9003
  ret void, !dbg !9004
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @txt_redo_read_uint32(i8* %undo_buf, i32* %undo_pos) #0 !dbg !9005 {
entry:
  %undo_buf.addr = alloca i8*, align 8
  %undo_pos.addr = alloca i32*, align 8
  %val = alloca i32, align 4
  store i8* %undo_buf, i8** %undo_buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %undo_buf.addr, metadata !9006, metadata !DIExpression()), !dbg !9007
  store i32* %undo_pos, i32** %undo_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %undo_pos.addr, metadata !9008, metadata !DIExpression()), !dbg !9009
  call void @llvm.dbg.declare(metadata i32* %val, metadata !9010, metadata !DIExpression()), !dbg !9011
  %0 = load i8*, i8** %undo_buf.addr, align 8, !dbg !9012
  %1 = load i32*, i32** %undo_pos.addr, align 8, !dbg !9013
  %2 = load i32, i32* %1, align 4, !dbg !9014
  %idxprom = sext i32 %2 to i64, !dbg !9012
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !9012
  %3 = load i8, i8* %arrayidx, align 1, !dbg !9012
  %conv = zext i8 %3 to i32, !dbg !9012
  store i32 %conv, i32* %val, align 4, !dbg !9015
  %4 = load i32*, i32** %undo_pos.addr, align 8, !dbg !9016
  %5 = load i32, i32* %4, align 4, !dbg !9017
  %inc = add nsw i32 %5, 1, !dbg !9017
  store i32 %inc, i32* %4, align 4, !dbg !9017
  %6 = load i32, i32* %val, align 4, !dbg !9018
  %7 = load i8*, i8** %undo_buf.addr, align 8, !dbg !9019
  %8 = load i32*, i32** %undo_pos.addr, align 8, !dbg !9020
  %9 = load i32, i32* %8, align 4, !dbg !9021
  %idxprom1 = sext i32 %9 to i64, !dbg !9019
  %arrayidx2 = getelementptr inbounds i8, i8* %7, i64 %idxprom1, !dbg !9019
  %10 = load i8, i8* %arrayidx2, align 1, !dbg !9019
  %conv3 = zext i8 %10 to i32, !dbg !9019
  %shl = shl i32 %conv3, 8, !dbg !9022
  %add = add i32 %6, %shl, !dbg !9023
  store i32 %add, i32* %val, align 4, !dbg !9024
  %11 = load i32*, i32** %undo_pos.addr, align 8, !dbg !9025
  %12 = load i32, i32* %11, align 4, !dbg !9026
  %inc4 = add nsw i32 %12, 1, !dbg !9026
  store i32 %inc4, i32* %11, align 4, !dbg !9026
  %13 = load i32, i32* %val, align 4, !dbg !9027
  %14 = load i8*, i8** %undo_buf.addr, align 8, !dbg !9028
  %15 = load i32*, i32** %undo_pos.addr, align 8, !dbg !9029
  %16 = load i32, i32* %15, align 4, !dbg !9030
  %idxprom5 = sext i32 %16 to i64, !dbg !9028
  %arrayidx6 = getelementptr inbounds i8, i8* %14, i64 %idxprom5, !dbg !9028
  %17 = load i8, i8* %arrayidx6, align 1, !dbg !9028
  %conv7 = zext i8 %17 to i32, !dbg !9028
  %shl8 = shl i32 %conv7, 16, !dbg !9031
  %add9 = add i32 %13, %shl8, !dbg !9032
  store i32 %add9, i32* %val, align 4, !dbg !9033
  %18 = load i32*, i32** %undo_pos.addr, align 8, !dbg !9034
  %19 = load i32, i32* %18, align 4, !dbg !9035
  %inc10 = add nsw i32 %19, 1, !dbg !9035
  store i32 %inc10, i32* %18, align 4, !dbg !9035
  %20 = load i32, i32* %val, align 4, !dbg !9036
  %21 = load i8*, i8** %undo_buf.addr, align 8, !dbg !9037
  %22 = load i32*, i32** %undo_pos.addr, align 8, !dbg !9038
  %23 = load i32, i32* %22, align 4, !dbg !9039
  %idxprom11 = sext i32 %23 to i64, !dbg !9037
  %arrayidx12 = getelementptr inbounds i8, i8* %21, i64 %idxprom11, !dbg !9037
  %24 = load i8, i8* %arrayidx12, align 1, !dbg !9037
  %conv13 = zext i8 %24 to i32, !dbg !9037
  %shl14 = shl i32 %conv13, 24, !dbg !9040
  %add15 = add i32 %20, %shl14, !dbg !9041
  store i32 %add15, i32* %val, align 4, !dbg !9042
  %25 = load i32*, i32** %undo_pos.addr, align 8, !dbg !9043
  %26 = load i32, i32* %25, align 4, !dbg !9044
  %inc16 = add nsw i32 %26, 1, !dbg !9044
  store i32 %inc16, i32* %25, align 4, !dbg !9044
  %27 = load i32, i32* %val, align 4, !dbg !9045
  ret i32 %27, !dbg !9046
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_duplicate_line(%struct.Text* %text) #0 !dbg !9047 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %textline = alloca %struct.TextLine*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !9048, metadata !DIExpression()), !dbg !9049
  call void @llvm.dbg.declare(metadata %struct.TextLine** %textline, metadata !9050, metadata !DIExpression()), !dbg !9051
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9052
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !9054
  %1 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !9054
  %tobool = icmp ne %struct.TextLine* %1, null, !dbg !9052
  br i1 %tobool, label %if.end, label %if.then, !dbg !9055

if.then:                                          ; preds = %entry
  br label %if.end8, !dbg !9056

if.end:                                           ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9057
  %curl1 = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 5, !dbg !9059
  %3 = load %struct.TextLine*, %struct.TextLine** %curl1, align 8, !dbg !9059
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9060
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 6, !dbg !9061
  %5 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !9061
  %cmp = icmp eq %struct.TextLine* %3, %5, !dbg !9062
  br i1 %cmp, label %if.then2, label %if.end8, !dbg !9063

if.then2:                                         ; preds = %if.end
  %6 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9064
  %curl3 = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 5, !dbg !9066
  %7 = load %struct.TextLine*, %struct.TextLine** %curl3, align 8, !dbg !9066
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %7, i32 0, i32 2, !dbg !9067
  %8 = load i8*, i8** %line, align 8, !dbg !9067
  %call = call %struct.TextLine* @txt_new_line(i8* %8), !dbg !9068
  store %struct.TextLine* %call, %struct.TextLine** %textline, align 8, !dbg !9069
  %9 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9070
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %9, i32 0, i32 4, !dbg !9071
  %10 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9072
  %curl4 = getelementptr inbounds %struct.Text, %struct.Text* %10, i32 0, i32 5, !dbg !9073
  %11 = load %struct.TextLine*, %struct.TextLine** %curl4, align 8, !dbg !9073
  %12 = bitcast %struct.TextLine* %11 to i8*, !dbg !9072
  %13 = load %struct.TextLine*, %struct.TextLine** %textline, align 8, !dbg !9074
  %14 = bitcast %struct.TextLine* %13 to i8*, !dbg !9074
  call void @BLI_insertlinkafter(%struct.ListBase* %lines, i8* %12, i8* %14), !dbg !9075
  %15 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9076
  call void @txt_make_dirty(%struct.Text* %15), !dbg !9077
  %16 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9078
  call void @txt_clean_text(%struct.Text* %16), !dbg !9079
  %17 = load i8, i8* @undoing, align 1, !dbg !9080
  %tobool5 = icmp ne i8 %17, 0, !dbg !9080
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !9082

if.then6:                                         ; preds = %if.then2
  %18 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9083
  call void @txt_undo_add_op(%struct.Text* %18, i32 32), !dbg !9084
  br label %if.end7, !dbg !9084

if.end7:                                          ; preds = %if.then6, %if.then2
  br label %if.end8, !dbg !9085

if.end8:                                          ; preds = %if.then, %if.end7, %if.end
  ret void, !dbg !9086
}

; Function Attrs: noinline nounwind uwtable
define internal void @txt_undo_add_charop(%struct.Text* %text, i32 %op_start, i32 %c) #0 !dbg !9087 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %op_start.addr = alloca i32, align 4
  %c.addr = alloca i32, align 4
  %utf8 = alloca [6 x i8], align 1
  %i = alloca i64, align 8
  %utf8_size = alloca i64, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !9090, metadata !DIExpression()), !dbg !9091
  store i32 %op_start, i32* %op_start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op_start.addr, metadata !9092, metadata !DIExpression()), !dbg !9093
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9094, metadata !DIExpression()), !dbg !9095
  call void @llvm.dbg.declare(metadata [6 x i8]* %utf8, metadata !9096, metadata !DIExpression()), !dbg !9097
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9098, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.declare(metadata i64* %utf8_size, metadata !9100, metadata !DIExpression()), !dbg !9101
  %0 = load i32, i32* %c.addr, align 4, !dbg !9102
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %utf8, i64 0, i64 0, !dbg !9103
  %call = call i64 @BLI_str_utf8_from_unicode(i32 %0, i8* %arraydecay), !dbg !9104
  store i64 %call, i64* %utf8_size, align 8, !dbg !9101
  %1 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9105
  %2 = load i64, i64* %utf8_size, align 8, !dbg !9107
  %add = add i64 3, %2, !dbg !9108
  %add1 = add i64 %add, 12, !dbg !9109
  %conv = trunc i64 %add1 to i32, !dbg !9110
  %call2 = call zeroext i8 @max_undo_test(%struct.Text* %1, i32 %conv), !dbg !9111
  %tobool = icmp ne i8 %call2, 0, !dbg !9111
  br i1 %tobool, label %if.end, label %if.then, !dbg !9112

if.then:                                          ; preds = %entry
  br label %return, !dbg !9113

if.end:                                           ; preds = %entry
  %3 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9114
  %undo_pos = getelementptr inbounds %struct.Text, %struct.Text* %3, i32 0, i32 10, !dbg !9115
  %4 = load i32, i32* %undo_pos, align 8, !dbg !9116
  %inc = add nsw i32 %4, 1, !dbg !9116
  store i32 %inc, i32* %undo_pos, align 8, !dbg !9116
  %5 = load i64, i64* %utf8_size, align 8, !dbg !9117
  %cmp = icmp ult i64 %5, 4, !dbg !9119
  br i1 %cmp, label %if.then4, label %if.else, !dbg !9120

if.then4:                                         ; preds = %if.end
  %6 = load i32, i32* %op_start.addr, align 4, !dbg !9121
  %conv5 = sext i32 %6 to i64, !dbg !9121
  %7 = load i64, i64* %utf8_size, align 8, !dbg !9123
  %add6 = add i64 %conv5, %7, !dbg !9124
  %sub = sub i64 %add6, 1, !dbg !9125
  %conv7 = trunc i64 %sub to i8, !dbg !9121
  %8 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9126
  %undo_buf = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 9, !dbg !9127
  %9 = load i8*, i8** %undo_buf, align 8, !dbg !9127
  %10 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9128
  %undo_pos8 = getelementptr inbounds %struct.Text, %struct.Text* %10, i32 0, i32 10, !dbg !9129
  %11 = load i32, i32* %undo_pos8, align 8, !dbg !9129
  %idxprom = sext i32 %11 to i64, !dbg !9126
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 %idxprom, !dbg !9126
  store i8 %conv7, i8* %arrayidx, align 1, !dbg !9130
  %12 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9131
  %undo_pos9 = getelementptr inbounds %struct.Text, %struct.Text* %12, i32 0, i32 10, !dbg !9132
  %13 = load i32, i32* %undo_pos9, align 8, !dbg !9133
  %inc10 = add nsw i32 %13, 1, !dbg !9133
  store i32 %inc10, i32* %undo_pos9, align 8, !dbg !9133
  %14 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9134
  call void @txt_undo_store_cur(%struct.Text* %14), !dbg !9135
  store i64 0, i64* %i, align 8, !dbg !9136
  br label %for.cond, !dbg !9138

for.cond:                                         ; preds = %for.inc, %if.then4
  %15 = load i64, i64* %i, align 8, !dbg !9139
  %16 = load i64, i64* %utf8_size, align 8, !dbg !9141
  %cmp11 = icmp ult i64 %15, %16, !dbg !9142
  br i1 %cmp11, label %for.body, label %for.end, !dbg !9143

for.body:                                         ; preds = %for.cond
  %17 = load i64, i64* %i, align 8, !dbg !9144
  %arrayidx13 = getelementptr inbounds [6 x i8], [6 x i8]* %utf8, i64 0, i64 %17, !dbg !9146
  %18 = load i8, i8* %arrayidx13, align 1, !dbg !9146
  %19 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9147
  %undo_buf14 = getelementptr inbounds %struct.Text, %struct.Text* %19, i32 0, i32 9, !dbg !9148
  %20 = load i8*, i8** %undo_buf14, align 8, !dbg !9148
  %21 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9149
  %undo_pos15 = getelementptr inbounds %struct.Text, %struct.Text* %21, i32 0, i32 10, !dbg !9150
  %22 = load i32, i32* %undo_pos15, align 8, !dbg !9150
  %idxprom16 = sext i32 %22 to i64, !dbg !9147
  %arrayidx17 = getelementptr inbounds i8, i8* %20, i64 %idxprom16, !dbg !9147
  store i8 %18, i8* %arrayidx17, align 1, !dbg !9151
  %23 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9152
  %undo_pos18 = getelementptr inbounds %struct.Text, %struct.Text* %23, i32 0, i32 10, !dbg !9153
  %24 = load i32, i32* %undo_pos18, align 8, !dbg !9154
  %inc19 = add nsw i32 %24, 1, !dbg !9154
  store i32 %inc19, i32* %undo_pos18, align 8, !dbg !9154
  br label %for.inc, !dbg !9155

for.inc:                                          ; preds = %for.body
  %25 = load i64, i64* %i, align 8, !dbg !9156
  %inc20 = add i64 %25, 1, !dbg !9156
  store i64 %inc20, i64* %i, align 8, !dbg !9156
  br label %for.cond, !dbg !9157, !llvm.loop !9158

for.end:                                          ; preds = %for.cond
  %26 = load i32, i32* %op_start.addr, align 4, !dbg !9160
  %conv21 = sext i32 %26 to i64, !dbg !9160
  %27 = load i64, i64* %utf8_size, align 8, !dbg !9161
  %add22 = add i64 %conv21, %27, !dbg !9162
  %sub23 = sub i64 %add22, 1, !dbg !9163
  %conv24 = trunc i64 %sub23 to i8, !dbg !9160
  %28 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9164
  %undo_buf25 = getelementptr inbounds %struct.Text, %struct.Text* %28, i32 0, i32 9, !dbg !9165
  %29 = load i8*, i8** %undo_buf25, align 8, !dbg !9165
  %30 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9166
  %undo_pos26 = getelementptr inbounds %struct.Text, %struct.Text* %30, i32 0, i32 10, !dbg !9167
  %31 = load i32, i32* %undo_pos26, align 8, !dbg !9167
  %idxprom27 = sext i32 %31 to i64, !dbg !9164
  %arrayidx28 = getelementptr inbounds i8, i8* %29, i64 %idxprom27, !dbg !9164
  store i8 %conv24, i8* %arrayidx28, align 1, !dbg !9168
  br label %if.end45, !dbg !9169

if.else:                                          ; preds = %if.end
  %32 = load i32, i32* %op_start.addr, align 4, !dbg !9170
  %add29 = add nsw i32 %32, 3, !dbg !9172
  %conv30 = trunc i32 %add29 to i8, !dbg !9170
  %33 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9173
  %undo_buf31 = getelementptr inbounds %struct.Text, %struct.Text* %33, i32 0, i32 9, !dbg !9174
  %34 = load i8*, i8** %undo_buf31, align 8, !dbg !9174
  %35 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9175
  %undo_pos32 = getelementptr inbounds %struct.Text, %struct.Text* %35, i32 0, i32 10, !dbg !9176
  %36 = load i32, i32* %undo_pos32, align 8, !dbg !9176
  %idxprom33 = sext i32 %36 to i64, !dbg !9173
  %arrayidx34 = getelementptr inbounds i8, i8* %34, i64 %idxprom33, !dbg !9173
  store i8 %conv30, i8* %arrayidx34, align 1, !dbg !9177
  %37 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9178
  %undo_pos35 = getelementptr inbounds %struct.Text, %struct.Text* %37, i32 0, i32 10, !dbg !9179
  %38 = load i32, i32* %undo_pos35, align 8, !dbg !9180
  %inc36 = add nsw i32 %38, 1, !dbg !9180
  store i32 %inc36, i32* %undo_pos35, align 8, !dbg !9180
  %39 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9181
  call void @txt_undo_store_cursors(%struct.Text* %39), !dbg !9182
  %40 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9183
  %undo_buf37 = getelementptr inbounds %struct.Text, %struct.Text* %40, i32 0, i32 9, !dbg !9184
  %41 = load i8*, i8** %undo_buf37, align 8, !dbg !9184
  %42 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9185
  %undo_pos38 = getelementptr inbounds %struct.Text, %struct.Text* %42, i32 0, i32 10, !dbg !9186
  %43 = load i32, i32* %c.addr, align 4, !dbg !9187
  call void @txt_undo_store_uint32(i8* %41, i32* %undo_pos38, i32 %43), !dbg !9188
  %44 = load i32, i32* %op_start.addr, align 4, !dbg !9189
  %add39 = add nsw i32 %44, 3, !dbg !9190
  %conv40 = trunc i32 %add39 to i8, !dbg !9189
  %45 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9191
  %undo_buf41 = getelementptr inbounds %struct.Text, %struct.Text* %45, i32 0, i32 9, !dbg !9192
  %46 = load i8*, i8** %undo_buf41, align 8, !dbg !9192
  %47 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9193
  %undo_pos42 = getelementptr inbounds %struct.Text, %struct.Text* %47, i32 0, i32 10, !dbg !9194
  %48 = load i32, i32* %undo_pos42, align 8, !dbg !9194
  %idxprom43 = sext i32 %48 to i64, !dbg !9191
  %arrayidx44 = getelementptr inbounds i8, i8* %46, i64 %idxprom43, !dbg !9191
  store i8 %conv40, i8* %arrayidx44, align 1, !dbg !9195
  br label %if.end45

if.end45:                                         ; preds = %if.else, %for.end
  %49 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9196
  %undo_buf46 = getelementptr inbounds %struct.Text, %struct.Text* %49, i32 0, i32 9, !dbg !9197
  %50 = load i8*, i8** %undo_buf46, align 8, !dbg !9197
  %51 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9198
  %undo_pos47 = getelementptr inbounds %struct.Text, %struct.Text* %51, i32 0, i32 10, !dbg !9199
  %52 = load i32, i32* %undo_pos47, align 8, !dbg !9199
  %add48 = add nsw i32 %52, 1, !dbg !9200
  %idxprom49 = sext i32 %add48 to i64, !dbg !9196
  %arrayidx50 = getelementptr inbounds i8, i8* %50, i64 %idxprom49, !dbg !9196
  store i8 0, i8* %arrayidx50, align 1, !dbg !9201
  br label %return, !dbg !9202

return:                                           ; preds = %if.end45, %if.then
  ret void, !dbg !9202
}

declare dso_local void @BLI_insertlinkafter(%struct.ListBase*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @txt_combine_lines(%struct.Text* %text, %struct.TextLine* %linea, %struct.TextLine* %lineb) #0 !dbg !9203 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %linea.addr = alloca %struct.TextLine*, align 8
  %lineb.addr = alloca %struct.TextLine*, align 8
  %tmp = alloca i8*, align 8
  %s = alloca i8*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !9206, metadata !DIExpression()), !dbg !9207
  store %struct.TextLine* %linea, %struct.TextLine** %linea.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TextLine** %linea.addr, metadata !9208, metadata !DIExpression()), !dbg !9209
  store %struct.TextLine* %lineb, %struct.TextLine** %lineb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TextLine** %lineb.addr, metadata !9210, metadata !DIExpression()), !dbg !9211
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !9212, metadata !DIExpression()), !dbg !9213
  call void @llvm.dbg.declare(metadata i8** %s, metadata !9214, metadata !DIExpression()), !dbg !9215
  %0 = load %struct.TextLine*, %struct.TextLine** %linea.addr, align 8, !dbg !9216
  %tobool = icmp ne %struct.TextLine* %0, null, !dbg !9216
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9218

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.TextLine*, %struct.TextLine** %lineb.addr, align 8, !dbg !9219
  %tobool1 = icmp ne %struct.TextLine* %1, null, !dbg !9219
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9220

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !9221

if.end:                                           ; preds = %lor.lhs.false
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !9222
  %3 = load %struct.TextLine*, %struct.TextLine** %linea.addr, align 8, !dbg !9223
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %3, i32 0, i32 4, !dbg !9224
  %4 = load i32, i32* %len, align 8, !dbg !9224
  %5 = load %struct.TextLine*, %struct.TextLine** %lineb.addr, align 8, !dbg !9225
  %len2 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %5, i32 0, i32 4, !dbg !9226
  %6 = load i32, i32* %len2, align 8, !dbg !9226
  %add = add nsw i32 %4, %6, !dbg !9227
  %add3 = add nsw i32 %add, 1, !dbg !9228
  %conv = sext i32 %add3 to i64, !dbg !9223
  %call = call i8* %2(i64 %conv, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)), !dbg !9222
  store i8* %call, i8** %tmp, align 8, !dbg !9229
  %7 = load i8*, i8** %tmp, align 8, !dbg !9230
  store i8* %7, i8** %s, align 8, !dbg !9231
  %8 = load i8*, i8** %s, align 8, !dbg !9232
  %9 = load %struct.TextLine*, %struct.TextLine** %linea.addr, align 8, !dbg !9233
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %9, i32 0, i32 2, !dbg !9234
  %10 = load i8*, i8** %line, align 8, !dbg !9234
  %call4 = call i64 @BLI_strcpy_rlen(i8* %8, i8* %10), !dbg !9235
  %11 = load i8*, i8** %s, align 8, !dbg !9236
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %call4, !dbg !9236
  store i8* %add.ptr, i8** %s, align 8, !dbg !9236
  %12 = load i8*, i8** %s, align 8, !dbg !9237
  %13 = load %struct.TextLine*, %struct.TextLine** %lineb.addr, align 8, !dbg !9238
  %line5 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %13, i32 0, i32 2, !dbg !9239
  %14 = load i8*, i8** %line5, align 8, !dbg !9239
  %call6 = call i64 @BLI_strcpy_rlen(i8* %12, i8* %14), !dbg !9240
  %15 = load i8*, i8** %s, align 8, !dbg !9241
  %add.ptr7 = getelementptr inbounds i8, i8* %15, i64 %call6, !dbg !9241
  store i8* %add.ptr7, i8** %s, align 8, !dbg !9241
  %16 = load i8*, i8** %s, align 8, !dbg !9242
  %17 = load %struct.TextLine*, %struct.TextLine** %linea.addr, align 8, !dbg !9243
  %18 = load i8*, i8** %tmp, align 8, !dbg !9244
  call void @make_new_line(%struct.TextLine* %17, i8* %18), !dbg !9245
  %19 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9246
  %20 = load %struct.TextLine*, %struct.TextLine** %lineb.addr, align 8, !dbg !9247
  call void @txt_delete_line(%struct.Text* %19, %struct.TextLine* %20), !dbg !9248
  %21 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9249
  call void @txt_make_dirty(%struct.Text* %21), !dbg !9250
  %22 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9251
  call void @txt_clean_text(%struct.Text* %22), !dbg !9252
  br label %return, !dbg !9253

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9253
}

declare dso_local i32 @BLI_str_utf8_as_unicode_and_size(i8*, i64*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_delete_word(%struct.Text* %text) #0 !dbg !9254 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !9255, metadata !DIExpression()), !dbg !9256
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9257
  call void @txt_jump_right(%struct.Text* %0, i8 zeroext 1, i8 zeroext 1), !dbg !9258
  %1 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9259
  call void @txt_delete_sel(%struct.Text* %1), !dbg !9260
  ret void, !dbg !9261
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @txt_backspace_word(%struct.Text* %text) #0 !dbg !9262 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !9263, metadata !DIExpression()), !dbg !9264
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9265
  call void @txt_jump_left(%struct.Text* %0, i8 zeroext 1, i8 zeroext 1), !dbg !9266
  %1 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9267
  call void @txt_delete_sel(%struct.Text* %1), !dbg !9268
  ret void, !dbg !9269
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @txt_add_char_intern(%struct.Text* %text, i32 %add, i8 zeroext %replace_tabs) #0 !dbg !9270 {
entry:
  %retval = alloca i8, align 1
  %text.addr = alloca %struct.Text*, align 8
  %add.addr = alloca i32, align 4
  %replace_tabs.addr = alloca i8, align 1
  %tmp = alloca i8*, align 8
  %ch = alloca [6 x i8], align 1
  %add_len = alloca i64, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !9273, metadata !DIExpression()), !dbg !9274
  store i32 %add, i32* %add.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %add.addr, metadata !9275, metadata !DIExpression()), !dbg !9276
  store i8 %replace_tabs, i8* %replace_tabs.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %replace_tabs.addr, metadata !9277, metadata !DIExpression()), !dbg !9278
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !9279, metadata !DIExpression()), !dbg !9280
  call void @llvm.dbg.declare(metadata [6 x i8]* %ch, metadata !9281, metadata !DIExpression()), !dbg !9282
  call void @llvm.dbg.declare(metadata i64* %add_len, metadata !9283, metadata !DIExpression()), !dbg !9284
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9285
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !9287
  %1 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !9287
  %tobool = icmp ne %struct.TextLine* %1, null, !dbg !9285
  br i1 %tobool, label %if.end, label %if.then, !dbg !9288

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !9289
  br label %return, !dbg !9289

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %add.addr, align 4, !dbg !9290
  %cmp = icmp eq i32 %2, 10, !dbg !9292
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !9293

if.then1:                                         ; preds = %if.end
  %3 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9294
  call void @txt_split_curline(%struct.Text* %3), !dbg !9296
  store i8 1, i8* %retval, align 1, !dbg !9297
  br label %return, !dbg !9297

if.end2:                                          ; preds = %if.end
  %4 = load i32, i32* %add.addr, align 4, !dbg !9298
  %cmp3 = icmp eq i32 %4, 9, !dbg !9300
  br i1 %cmp3, label %land.lhs.true, label %if.end6, !dbg !9301

land.lhs.true:                                    ; preds = %if.end2
  %5 = load i8, i8* %replace_tabs.addr, align 1, !dbg !9302
  %conv = zext i8 %5 to i32, !dbg !9302
  %tobool4 = icmp ne i32 %conv, 0, !dbg !9302
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !9303

if.then5:                                         ; preds = %land.lhs.true
  %6 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9304
  call void @txt_convert_tab_to_spaces(%struct.Text* %6), !dbg !9306
  store i8 1, i8* %retval, align 1, !dbg !9307
  br label %return, !dbg !9307

if.end6:                                          ; preds = %land.lhs.true, %if.end2
  %7 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9308
  call void @txt_delete_sel(%struct.Text* %7), !dbg !9309
  %8 = load i8, i8* @undoing, align 1, !dbg !9310
  %tobool7 = icmp ne i8 %8, 0, !dbg !9310
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !9312

if.then8:                                         ; preds = %if.end6
  %9 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9313
  %10 = load i32, i32* %add.addr, align 4, !dbg !9314
  call void @txt_undo_add_charop(%struct.Text* %9, i32 11, i32 %10), !dbg !9315
  br label %if.end9, !dbg !9315

if.end9:                                          ; preds = %if.then8, %if.end6
  %11 = load i32, i32* %add.addr, align 4, !dbg !9316
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %ch, i64 0, i64 0, !dbg !9317
  %call = call i64 @BLI_str_utf8_from_unicode(i32 %11, i8* %arraydecay), !dbg !9318
  store i64 %call, i64* %add_len, align 8, !dbg !9319
  %12 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !9320
  %13 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9321
  %curl10 = getelementptr inbounds %struct.Text, %struct.Text* %13, i32 0, i32 5, !dbg !9322
  %14 = load %struct.TextLine*, %struct.TextLine** %curl10, align 8, !dbg !9322
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %14, i32 0, i32 4, !dbg !9323
  %15 = load i32, i32* %len, align 8, !dbg !9323
  %conv11 = sext i32 %15 to i64, !dbg !9321
  %16 = load i64, i64* %add_len, align 8, !dbg !9324
  %add12 = add i64 %conv11, %16, !dbg !9325
  %add13 = add i64 %add12, 1, !dbg !9326
  %call14 = call i8* %12(i64 %add13, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)), !dbg !9320
  store i8* %call14, i8** %tmp, align 8, !dbg !9327
  %17 = load i8*, i8** %tmp, align 8, !dbg !9328
  %18 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9329
  %curl15 = getelementptr inbounds %struct.Text, %struct.Text* %18, i32 0, i32 5, !dbg !9330
  %19 = load %struct.TextLine*, %struct.TextLine** %curl15, align 8, !dbg !9330
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %19, i32 0, i32 2, !dbg !9331
  %20 = load i8*, i8** %line, align 8, !dbg !9331
  %21 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9332
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %21, i32 0, i32 7, !dbg !9333
  %22 = load i32, i32* %curc, align 8, !dbg !9333
  %conv16 = sext i32 %22 to i64, !dbg !9332
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 1 %20, i64 %conv16, i1 false), !dbg !9334
  %23 = load i8*, i8** %tmp, align 8, !dbg !9335
  %24 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9336
  %curc17 = getelementptr inbounds %struct.Text, %struct.Text* %24, i32 0, i32 7, !dbg !9337
  %25 = load i32, i32* %curc17, align 8, !dbg !9337
  %idx.ext = sext i32 %25 to i64, !dbg !9338
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 %idx.ext, !dbg !9338
  %arraydecay18 = getelementptr inbounds [6 x i8], [6 x i8]* %ch, i64 0, i64 0, !dbg !9339
  %26 = load i64, i64* %add_len, align 8, !dbg !9340
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %arraydecay18, i64 %26, i1 false), !dbg !9339
  %27 = load i8*, i8** %tmp, align 8, !dbg !9341
  %28 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9342
  %curc19 = getelementptr inbounds %struct.Text, %struct.Text* %28, i32 0, i32 7, !dbg !9343
  %29 = load i32, i32* %curc19, align 8, !dbg !9343
  %idx.ext20 = sext i32 %29 to i64, !dbg !9344
  %add.ptr21 = getelementptr inbounds i8, i8* %27, i64 %idx.ext20, !dbg !9344
  %30 = load i64, i64* %add_len, align 8, !dbg !9345
  %add.ptr22 = getelementptr inbounds i8, i8* %add.ptr21, i64 %30, !dbg !9346
  %31 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9347
  %curl23 = getelementptr inbounds %struct.Text, %struct.Text* %31, i32 0, i32 5, !dbg !9348
  %32 = load %struct.TextLine*, %struct.TextLine** %curl23, align 8, !dbg !9348
  %line24 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %32, i32 0, i32 2, !dbg !9349
  %33 = load i8*, i8** %line24, align 8, !dbg !9349
  %34 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9350
  %curc25 = getelementptr inbounds %struct.Text, %struct.Text* %34, i32 0, i32 7, !dbg !9351
  %35 = load i32, i32* %curc25, align 8, !dbg !9351
  %idx.ext26 = sext i32 %35 to i64, !dbg !9352
  %add.ptr27 = getelementptr inbounds i8, i8* %33, i64 %idx.ext26, !dbg !9352
  %36 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9353
  %curl28 = getelementptr inbounds %struct.Text, %struct.Text* %36, i32 0, i32 5, !dbg !9354
  %37 = load %struct.TextLine*, %struct.TextLine** %curl28, align 8, !dbg !9354
  %len29 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %37, i32 0, i32 4, !dbg !9355
  %38 = load i32, i32* %len29, align 8, !dbg !9355
  %39 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9356
  %curc30 = getelementptr inbounds %struct.Text, %struct.Text* %39, i32 0, i32 7, !dbg !9357
  %40 = load i32, i32* %curc30, align 8, !dbg !9357
  %sub = sub nsw i32 %38, %40, !dbg !9358
  %add31 = add nsw i32 %sub, 1, !dbg !9359
  %conv32 = sext i32 %add31 to i64, !dbg !9353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr22, i8* align 1 %add.ptr27, i64 %conv32, i1 false), !dbg !9360
  %41 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9361
  %curl33 = getelementptr inbounds %struct.Text, %struct.Text* %41, i32 0, i32 5, !dbg !9362
  %42 = load %struct.TextLine*, %struct.TextLine** %curl33, align 8, !dbg !9362
  %43 = load i8*, i8** %tmp, align 8, !dbg !9363
  call void @make_new_line(%struct.TextLine* %42, i8* %43), !dbg !9364
  %44 = load i64, i64* %add_len, align 8, !dbg !9365
  %45 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9366
  %curc34 = getelementptr inbounds %struct.Text, %struct.Text* %45, i32 0, i32 7, !dbg !9367
  %46 = load i32, i32* %curc34, align 8, !dbg !9368
  %conv35 = sext i32 %46 to i64, !dbg !9368
  %add36 = add i64 %conv35, %44, !dbg !9368
  %conv37 = trunc i64 %add36 to i32, !dbg !9368
  store i32 %conv37, i32* %curc34, align 8, !dbg !9368
  %47 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9369
  call void @txt_pop_sel(%struct.Text* %47), !dbg !9370
  %48 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9371
  call void @txt_make_dirty(%struct.Text* %48), !dbg !9372
  %49 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9373
  call void @txt_clean_text(%struct.Text* %49), !dbg !9374
  store i8 1, i8* %retval, align 1, !dbg !9375
  br label %return, !dbg !9375

return:                                           ; preds = %if.end9, %if.then5, %if.then1, %if.then
  %50 = load i8, i8* %retval, align 1, !dbg !9376
  ret i8 %50, !dbg !9376
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @txt_replace_char(%struct.Text* %text, i32 %add) #0 !dbg !9377 {
entry:
  %retval = alloca i8, align 1
  %text.addr = alloca %struct.Text*, align 8
  %add.addr = alloca i32, align 4
  %del = alloca i32, align 4
  %del_size = alloca i64, align 8
  %add_size = alloca i64, align 8
  %ch = alloca [6 x i8], align 1
  %tmp = alloca i8*, align 8
  %tmp50 = alloca i8*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !9378, metadata !DIExpression()), !dbg !9379
  store i32 %add, i32* %add.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %add.addr, metadata !9380, metadata !DIExpression()), !dbg !9381
  call void @llvm.dbg.declare(metadata i32* %del, metadata !9382, metadata !DIExpression()), !dbg !9383
  call void @llvm.dbg.declare(metadata i64* %del_size, metadata !9384, metadata !DIExpression()), !dbg !9385
  store i64 0, i64* %del_size, align 8, !dbg !9385
  call void @llvm.dbg.declare(metadata i64* %add_size, metadata !9386, metadata !DIExpression()), !dbg !9387
  call void @llvm.dbg.declare(metadata [6 x i8]* %ch, metadata !9388, metadata !DIExpression()), !dbg !9389
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9390
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 5, !dbg !9392
  %1 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !9392
  %tobool = icmp ne %struct.TextLine* %1, null, !dbg !9390
  br i1 %tobool, label %if.end, label %if.then, !dbg !9393

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !9394
  br label %return, !dbg !9394

if.end:                                           ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9395
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 7, !dbg !9397
  %3 = load i32, i32* %curc, align 8, !dbg !9397
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9398
  %curl1 = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 5, !dbg !9399
  %5 = load %struct.TextLine*, %struct.TextLine** %curl1, align 8, !dbg !9399
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %5, i32 0, i32 4, !dbg !9400
  %6 = load i32, i32* %len, align 8, !dbg !9400
  %cmp = icmp eq i32 %3, %6, !dbg !9401
  br i1 %cmp, label %if.then6, label %lor.lhs.false, !dbg !9402

lor.lhs.false:                                    ; preds = %if.end
  %7 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9403
  %call = call zeroext i8 @txt_has_sel(%struct.Text* %7), !dbg !9404
  %conv = zext i8 %call to i32, !dbg !9404
  %tobool2 = icmp ne i32 %conv, 0, !dbg !9404
  br i1 %tobool2, label %if.then6, label %lor.lhs.false3, !dbg !9405

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %8 = load i32, i32* %add.addr, align 4, !dbg !9406
  %cmp4 = icmp eq i32 %8, 10, !dbg !9407
  br i1 %cmp4, label %if.then6, label %if.end8, !dbg !9408

if.then6:                                         ; preds = %lor.lhs.false3, %lor.lhs.false, %if.end
  %9 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9409
  %10 = load i32, i32* %add.addr, align 4, !dbg !9411
  %call7 = call zeroext i8 @txt_add_char(%struct.Text* %9, i32 %10), !dbg !9412
  store i8 %call7, i8* %retval, align 1, !dbg !9413
  br label %return, !dbg !9413

if.end8:                                          ; preds = %lor.lhs.false3
  %11 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9414
  %curl9 = getelementptr inbounds %struct.Text, %struct.Text* %11, i32 0, i32 5, !dbg !9415
  %12 = load %struct.TextLine*, %struct.TextLine** %curl9, align 8, !dbg !9415
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %12, i32 0, i32 2, !dbg !9416
  %13 = load i8*, i8** %line, align 8, !dbg !9416
  %14 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9417
  %curc10 = getelementptr inbounds %struct.Text, %struct.Text* %14, i32 0, i32 7, !dbg !9418
  %15 = load i32, i32* %curc10, align 8, !dbg !9418
  %idx.ext = sext i32 %15 to i64, !dbg !9419
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 %idx.ext, !dbg !9419
  %call11 = call i32 @BLI_str_utf8_as_unicode_and_size(i8* %add.ptr, i64* %del_size), !dbg !9420
  store i32 %call11, i32* %del, align 4, !dbg !9421
  %16 = load i32, i32* %add.addr, align 4, !dbg !9422
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %ch, i64 0, i64 0, !dbg !9423
  %call12 = call i64 @BLI_str_utf8_from_unicode(i32 %16, i8* %arraydecay), !dbg !9424
  store i64 %call12, i64* %add_size, align 8, !dbg !9425
  %17 = load i64, i64* %add_size, align 8, !dbg !9426
  %18 = load i64, i64* %del_size, align 8, !dbg !9428
  %cmp13 = icmp ugt i64 %17, %18, !dbg !9429
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !9430

if.then15:                                        ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !9431, metadata !DIExpression()), !dbg !9433
  %19 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !9434
  %20 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9435
  %curl16 = getelementptr inbounds %struct.Text, %struct.Text* %20, i32 0, i32 5, !dbg !9436
  %21 = load %struct.TextLine*, %struct.TextLine** %curl16, align 8, !dbg !9436
  %len17 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %21, i32 0, i32 4, !dbg !9437
  %22 = load i32, i32* %len17, align 8, !dbg !9437
  %conv18 = sext i32 %22 to i64, !dbg !9435
  %23 = load i64, i64* %add_size, align 8, !dbg !9438
  %add19 = add i64 %conv18, %23, !dbg !9439
  %24 = load i64, i64* %del_size, align 8, !dbg !9440
  %sub = sub i64 %add19, %24, !dbg !9441
  %add20 = add i64 %sub, 1, !dbg !9442
  %call21 = call i8* %19(i64 %add20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)), !dbg !9434
  store i8* %call21, i8** %tmp, align 8, !dbg !9433
  %25 = load i8*, i8** %tmp, align 8, !dbg !9443
  %26 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9444
  %curl22 = getelementptr inbounds %struct.Text, %struct.Text* %26, i32 0, i32 5, !dbg !9445
  %27 = load %struct.TextLine*, %struct.TextLine** %curl22, align 8, !dbg !9445
  %line23 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %27, i32 0, i32 2, !dbg !9446
  %28 = load i8*, i8** %line23, align 8, !dbg !9446
  %29 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9447
  %curc24 = getelementptr inbounds %struct.Text, %struct.Text* %29, i32 0, i32 7, !dbg !9448
  %30 = load i32, i32* %curc24, align 8, !dbg !9448
  %conv25 = sext i32 %30 to i64, !dbg !9447
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %28, i64 %conv25, i1 false), !dbg !9449
  %31 = load i8*, i8** %tmp, align 8, !dbg !9450
  %32 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9451
  %curc26 = getelementptr inbounds %struct.Text, %struct.Text* %32, i32 0, i32 7, !dbg !9452
  %33 = load i32, i32* %curc26, align 8, !dbg !9452
  %idx.ext27 = sext i32 %33 to i64, !dbg !9453
  %add.ptr28 = getelementptr inbounds i8, i8* %31, i64 %idx.ext27, !dbg !9453
  %34 = load i64, i64* %add_size, align 8, !dbg !9454
  %add.ptr29 = getelementptr inbounds i8, i8* %add.ptr28, i64 %34, !dbg !9455
  %35 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9456
  %curl30 = getelementptr inbounds %struct.Text, %struct.Text* %35, i32 0, i32 5, !dbg !9457
  %36 = load %struct.TextLine*, %struct.TextLine** %curl30, align 8, !dbg !9457
  %line31 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %36, i32 0, i32 2, !dbg !9458
  %37 = load i8*, i8** %line31, align 8, !dbg !9458
  %38 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9459
  %curc32 = getelementptr inbounds %struct.Text, %struct.Text* %38, i32 0, i32 7, !dbg !9460
  %39 = load i32, i32* %curc32, align 8, !dbg !9460
  %idx.ext33 = sext i32 %39 to i64, !dbg !9461
  %add.ptr34 = getelementptr inbounds i8, i8* %37, i64 %idx.ext33, !dbg !9461
  %40 = load i64, i64* %del_size, align 8, !dbg !9462
  %add.ptr35 = getelementptr inbounds i8, i8* %add.ptr34, i64 %40, !dbg !9463
  %41 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9464
  %curl36 = getelementptr inbounds %struct.Text, %struct.Text* %41, i32 0, i32 5, !dbg !9465
  %42 = load %struct.TextLine*, %struct.TextLine** %curl36, align 8, !dbg !9465
  %len37 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %42, i32 0, i32 4, !dbg !9466
  %43 = load i32, i32* %len37, align 8, !dbg !9466
  %44 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9467
  %curc38 = getelementptr inbounds %struct.Text, %struct.Text* %44, i32 0, i32 7, !dbg !9468
  %45 = load i32, i32* %curc38, align 8, !dbg !9468
  %sub39 = sub nsw i32 %43, %45, !dbg !9469
  %conv40 = sext i32 %sub39 to i64, !dbg !9464
  %46 = load i64, i64* %del_size, align 8, !dbg !9470
  %sub41 = sub i64 %conv40, %46, !dbg !9471
  %add42 = add i64 %sub41, 1, !dbg !9472
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr29, i8* align 1 %add.ptr35, i64 %add42, i1 false), !dbg !9473
  %47 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9474
  %48 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9475
  %curl43 = getelementptr inbounds %struct.Text, %struct.Text* %48, i32 0, i32 5, !dbg !9476
  %49 = load %struct.TextLine*, %struct.TextLine** %curl43, align 8, !dbg !9476
  %line44 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %49, i32 0, i32 2, !dbg !9477
  %50 = load i8*, i8** %line44, align 8, !dbg !9477
  call void %47(i8* %50), !dbg !9474
  %51 = load i8*, i8** %tmp, align 8, !dbg !9478
  %52 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9479
  %curl45 = getelementptr inbounds %struct.Text, %struct.Text* %52, i32 0, i32 5, !dbg !9480
  %53 = load %struct.TextLine*, %struct.TextLine** %curl45, align 8, !dbg !9480
  %line46 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %53, i32 0, i32 2, !dbg !9481
  store i8* %51, i8** %line46, align 8, !dbg !9482
  br label %if.end69, !dbg !9483

if.else:                                          ; preds = %if.end8
  %54 = load i64, i64* %add_size, align 8, !dbg !9484
  %55 = load i64, i64* %del_size, align 8, !dbg !9486
  %cmp47 = icmp ult i64 %54, %55, !dbg !9487
  br i1 %cmp47, label %if.then49, label %if.end68, !dbg !9488

if.then49:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8** %tmp50, metadata !9489, metadata !DIExpression()), !dbg !9491
  %56 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9492
  %curl51 = getelementptr inbounds %struct.Text, %struct.Text* %56, i32 0, i32 5, !dbg !9493
  %57 = load %struct.TextLine*, %struct.TextLine** %curl51, align 8, !dbg !9493
  %line52 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %57, i32 0, i32 2, !dbg !9494
  %58 = load i8*, i8** %line52, align 8, !dbg !9494
  store i8* %58, i8** %tmp50, align 8, !dbg !9491
  %59 = load i8*, i8** %tmp50, align 8, !dbg !9495
  %60 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9496
  %curc53 = getelementptr inbounds %struct.Text, %struct.Text* %60, i32 0, i32 7, !dbg !9497
  %61 = load i32, i32* %curc53, align 8, !dbg !9497
  %idx.ext54 = sext i32 %61 to i64, !dbg !9498
  %add.ptr55 = getelementptr inbounds i8, i8* %59, i64 %idx.ext54, !dbg !9498
  %62 = load i64, i64* %add_size, align 8, !dbg !9499
  %add.ptr56 = getelementptr inbounds i8, i8* %add.ptr55, i64 %62, !dbg !9500
  %63 = load i8*, i8** %tmp50, align 8, !dbg !9501
  %64 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9502
  %curc57 = getelementptr inbounds %struct.Text, %struct.Text* %64, i32 0, i32 7, !dbg !9503
  %65 = load i32, i32* %curc57, align 8, !dbg !9503
  %idx.ext58 = sext i32 %65 to i64, !dbg !9504
  %add.ptr59 = getelementptr inbounds i8, i8* %63, i64 %idx.ext58, !dbg !9504
  %66 = load i64, i64* %del_size, align 8, !dbg !9505
  %add.ptr60 = getelementptr inbounds i8, i8* %add.ptr59, i64 %66, !dbg !9506
  %67 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9507
  %curl61 = getelementptr inbounds %struct.Text, %struct.Text* %67, i32 0, i32 5, !dbg !9508
  %68 = load %struct.TextLine*, %struct.TextLine** %curl61, align 8, !dbg !9508
  %len62 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %68, i32 0, i32 4, !dbg !9509
  %69 = load i32, i32* %len62, align 8, !dbg !9509
  %70 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9510
  %curc63 = getelementptr inbounds %struct.Text, %struct.Text* %70, i32 0, i32 7, !dbg !9511
  %71 = load i32, i32* %curc63, align 8, !dbg !9511
  %sub64 = sub nsw i32 %69, %71, !dbg !9512
  %conv65 = sext i32 %sub64 to i64, !dbg !9507
  %72 = load i64, i64* %del_size, align 8, !dbg !9513
  %sub66 = sub i64 %conv65, %72, !dbg !9514
  %add67 = add i64 %sub66, 1, !dbg !9515
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %add.ptr56, i8* align 1 %add.ptr60, i64 %add67, i1 false), !dbg !9516
  br label %if.end68, !dbg !9517

if.end68:                                         ; preds = %if.then49, %if.else
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then15
  %73 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9518
  %curl70 = getelementptr inbounds %struct.Text, %struct.Text* %73, i32 0, i32 5, !dbg !9519
  %74 = load %struct.TextLine*, %struct.TextLine** %curl70, align 8, !dbg !9519
  %line71 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %74, i32 0, i32 2, !dbg !9520
  %75 = load i8*, i8** %line71, align 8, !dbg !9520
  %76 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9521
  %curc72 = getelementptr inbounds %struct.Text, %struct.Text* %76, i32 0, i32 7, !dbg !9522
  %77 = load i32, i32* %curc72, align 8, !dbg !9522
  %idx.ext73 = sext i32 %77 to i64, !dbg !9523
  %add.ptr74 = getelementptr inbounds i8, i8* %75, i64 %idx.ext73, !dbg !9523
  %arraydecay75 = getelementptr inbounds [6 x i8], [6 x i8]* %ch, i64 0, i64 0, !dbg !9524
  %78 = load i64, i64* %add_size, align 8, !dbg !9525
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr74, i8* align 1 %arraydecay75, i64 %78, i1 false), !dbg !9524
  %79 = load i64, i64* %add_size, align 8, !dbg !9526
  %80 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9527
  %curc76 = getelementptr inbounds %struct.Text, %struct.Text* %80, i32 0, i32 7, !dbg !9528
  %81 = load i32, i32* %curc76, align 8, !dbg !9529
  %conv77 = sext i32 %81 to i64, !dbg !9529
  %add78 = add i64 %conv77, %79, !dbg !9529
  %conv79 = trunc i64 %add78 to i32, !dbg !9529
  store i32 %conv79, i32* %curc76, align 8, !dbg !9529
  %82 = load i64, i64* %add_size, align 8, !dbg !9530
  %83 = load i64, i64* %del_size, align 8, !dbg !9531
  %sub80 = sub i64 %82, %83, !dbg !9532
  %84 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9533
  %curl81 = getelementptr inbounds %struct.Text, %struct.Text* %84, i32 0, i32 5, !dbg !9534
  %85 = load %struct.TextLine*, %struct.TextLine** %curl81, align 8, !dbg !9534
  %len82 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %85, i32 0, i32 4, !dbg !9535
  %86 = load i32, i32* %len82, align 8, !dbg !9536
  %conv83 = sext i32 %86 to i64, !dbg !9536
  %add84 = add i64 %conv83, %sub80, !dbg !9536
  %conv85 = trunc i64 %add84 to i32, !dbg !9536
  store i32 %conv85, i32* %len82, align 8, !dbg !9536
  %87 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9537
  call void @txt_pop_sel(%struct.Text* %87), !dbg !9538
  %88 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9539
  call void @txt_make_dirty(%struct.Text* %88), !dbg !9540
  %89 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9541
  call void @txt_clean_text(%struct.Text* %89), !dbg !9542
  %90 = load i8, i8* @undoing, align 1, !dbg !9543
  %tobool86 = icmp ne i8 %90, 0, !dbg !9543
  br i1 %tobool86, label %if.end96, label %if.then87, !dbg !9545

if.then87:                                        ; preds = %if.end69
  %91 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9546
  %92 = load i32, i32* %add.addr, align 4, !dbg !9548
  call void @txt_undo_add_charop(%struct.Text* %91, i32 11, i32 %92), !dbg !9549
  %93 = load i64, i64* %add_size, align 8, !dbg !9550
  %94 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9551
  %curc88 = getelementptr inbounds %struct.Text, %struct.Text* %94, i32 0, i32 7, !dbg !9552
  %95 = load i32, i32* %curc88, align 8, !dbg !9553
  %conv89 = sext i32 %95 to i64, !dbg !9553
  %sub90 = sub i64 %conv89, %93, !dbg !9553
  %conv91 = trunc i64 %sub90 to i32, !dbg !9553
  store i32 %conv91, i32* %curc88, align 8, !dbg !9553
  %96 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9554
  call void @txt_pop_sel(%struct.Text* %96), !dbg !9555
  %97 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9556
  %98 = load i32, i32* %del, align 4, !dbg !9557
  call void @txt_undo_add_charop(%struct.Text* %97, i32 19, i32 %98), !dbg !9558
  %99 = load i64, i64* %add_size, align 8, !dbg !9559
  %100 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9560
  %curc92 = getelementptr inbounds %struct.Text, %struct.Text* %100, i32 0, i32 7, !dbg !9561
  %101 = load i32, i32* %curc92, align 8, !dbg !9562
  %conv93 = sext i32 %101 to i64, !dbg !9562
  %add94 = add i64 %conv93, %99, !dbg !9562
  %conv95 = trunc i64 %add94 to i32, !dbg !9562
  store i32 %conv95, i32* %curc92, align 8, !dbg !9562
  %102 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9563
  call void @txt_pop_sel(%struct.Text* %102), !dbg !9564
  br label %if.end96, !dbg !9565

if.end96:                                         ; preds = %if.then87, %if.end69
  store i8 1, i8* %retval, align 1, !dbg !9566
  br label %return, !dbg !9566

return:                                           ; preds = %if.end96, %if.then6, %if.then
  %103 = load i8, i8* %retval, align 1, !dbg !9567
  ret i8 %103, !dbg !9567
}

; Function Attrs: noinline nounwind uwtable
define internal void @make_new_line(%struct.TextLine* %line, i8* %newline) #0 !dbg !9568 {
entry:
  %line.addr = alloca %struct.TextLine*, align 8
  %newline.addr = alloca i8*, align 8
  store %struct.TextLine* %line, %struct.TextLine** %line.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TextLine** %line.addr, metadata !9571, metadata !DIExpression()), !dbg !9572
  store i8* %newline, i8** %newline.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %newline.addr, metadata !9573, metadata !DIExpression()), !dbg !9574
  %0 = load %struct.TextLine*, %struct.TextLine** %line.addr, align 8, !dbg !9575
  %line1 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %0, i32 0, i32 2, !dbg !9577
  %1 = load i8*, i8** %line1, align 8, !dbg !9577
  %tobool = icmp ne i8* %1, null, !dbg !9575
  br i1 %tobool, label %if.then, label %if.end, !dbg !9578

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9579
  %3 = load %struct.TextLine*, %struct.TextLine** %line.addr, align 8, !dbg !9580
  %line2 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %3, i32 0, i32 2, !dbg !9581
  %4 = load i8*, i8** %line2, align 8, !dbg !9581
  call void %2(i8* %4), !dbg !9579
  br label %if.end, !dbg !9579

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.TextLine*, %struct.TextLine** %line.addr, align 8, !dbg !9582
  %format = getelementptr inbounds %struct.TextLine, %struct.TextLine* %5, i32 0, i32 3, !dbg !9584
  %6 = load i8*, i8** %format, align 8, !dbg !9584
  %tobool3 = icmp ne i8* %6, null, !dbg !9582
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !9585

if.then4:                                         ; preds = %if.end
  %7 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9586
  %8 = load %struct.TextLine*, %struct.TextLine** %line.addr, align 8, !dbg !9587
  %format5 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %8, i32 0, i32 3, !dbg !9588
  %9 = load i8*, i8** %format5, align 8, !dbg !9588
  call void %7(i8* %9), !dbg !9586
  br label %if.end6, !dbg !9586

if.end6:                                          ; preds = %if.then4, %if.end
  %10 = load i8*, i8** %newline.addr, align 8, !dbg !9589
  %11 = load %struct.TextLine*, %struct.TextLine** %line.addr, align 8, !dbg !9590
  %line7 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %11, i32 0, i32 2, !dbg !9591
  store i8* %10, i8** %line7, align 8, !dbg !9592
  %12 = load i8*, i8** %newline.addr, align 8, !dbg !9593
  %call = call i64 @strlen(i8* %12) #6, !dbg !9594
  %conv = trunc i64 %call to i32, !dbg !9594
  %13 = load %struct.TextLine*, %struct.TextLine** %line.addr, align 8, !dbg !9595
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %13, i32 0, i32 4, !dbg !9596
  store i32 %conv, i32* %len, align 8, !dbg !9597
  %14 = load %struct.TextLine*, %struct.TextLine** %line.addr, align 8, !dbg !9598
  %format8 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %14, i32 0, i32 3, !dbg !9599
  store i8* null, i8** %format8, align 8, !dbg !9600
  ret void, !dbg !9601
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #3

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @txt_setcurr_tab_spaces(%struct.Text* %text, i32 %space) #0 !dbg !299 {
entry:
  %retval = alloca i32, align 4
  %text.addr = alloca %struct.Text*, align 8
  %space.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %test = alloca i32, align 4
  %word = alloca i8*, align 8
  %comm = alloca i8*, align 8
  %indent = alloca i8, align 1
  %a = alloca i32, align 4
  %is_indent = alloca i8, align 1
  %ch = alloca i8, align 1
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !9602, metadata !DIExpression()), !dbg !9603
  store i32 %space, i32* %space.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %space.addr, metadata !9604, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9606, metadata !DIExpression()), !dbg !9607
  store i32 0, i32* %i, align 4, !dbg !9607
  call void @llvm.dbg.declare(metadata i32* %test, metadata !9608, metadata !DIExpression()), !dbg !9609
  store i32 0, i32* %test, align 4, !dbg !9609
  call void @llvm.dbg.declare(metadata i8** %word, metadata !9610, metadata !DIExpression()), !dbg !9611
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i8** %word, align 8, !dbg !9611
  call void @llvm.dbg.declare(metadata i8** %comm, metadata !9612, metadata !DIExpression()), !dbg !9613
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), i8** %comm, align 8, !dbg !9613
  call void @llvm.dbg.declare(metadata i8* %indent, metadata !9614, metadata !DIExpression()), !dbg !9615
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9616
  %flags = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 2, !dbg !9617
  %1 = load i32, i32* %flags, align 8, !dbg !9617
  %and = and i32 %1, 1024, !dbg !9618
  %tobool = icmp ne i32 %and, 0, !dbg !9619
  %2 = zext i1 %tobool to i64, !dbg !9619
  %cond = select i1 %tobool, i32 32, i32 9, !dbg !9619
  %conv = trunc i32 %cond to i8, !dbg !9619
  store i8 %conv, i8* %indent, align 1, !dbg !9615
  %3 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9620
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %3, i32 0, i32 5, !dbg !9622
  %4 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !9622
  %tobool1 = icmp ne %struct.TextLine* %4, null, !dbg !9620
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9623

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9624
  br label %return, !dbg !9624

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !9625

while.cond:                                       ; preds = %if.end9, %if.end
  %5 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9626
  %curl2 = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 5, !dbg !9627
  %6 = load %struct.TextLine*, %struct.TextLine** %curl2, align 8, !dbg !9627
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %6, i32 0, i32 2, !dbg !9628
  %7 = load i8*, i8** %line, align 8, !dbg !9628
  %8 = load i32, i32* %i, align 4, !dbg !9629
  %idxprom = sext i32 %8 to i64, !dbg !9626
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !9626
  %9 = load i8, i8* %arrayidx, align 1, !dbg !9626
  %conv3 = zext i8 %9 to i32, !dbg !9626
  %10 = load i8, i8* %indent, align 1, !dbg !9630
  %conv4 = zext i8 %10 to i32, !dbg !9630
  %cmp = icmp eq i32 %conv3, %conv4, !dbg !9631
  br i1 %cmp, label %while.body, label %while.end, !dbg !9625

while.body:                                       ; preds = %while.cond
  %11 = load i32, i32* %i, align 4, !dbg !9632
  %12 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9635
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %12, i32 0, i32 7, !dbg !9636
  %13 = load i32, i32* %curc, align 8, !dbg !9636
  %cmp6 = icmp eq i32 %11, %13, !dbg !9637
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !9638

if.then8:                                         ; preds = %while.body
  %14 = load i32, i32* %i, align 4, !dbg !9639
  store i32 %14, i32* %retval, align 4, !dbg !9641
  br label %return, !dbg !9641

if.else:                                          ; preds = %while.body
  %15 = load i32, i32* %i, align 4, !dbg !9642
  %inc = add nsw i32 %15, 1, !dbg !9642
  store i32 %inc, i32* %i, align 4, !dbg !9642
  br label %if.end9

if.end9:                                          ; preds = %if.else
  br label %while.cond, !dbg !9625, !llvm.loop !9644

while.end:                                        ; preds = %while.cond
  %16 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9646
  %curl10 = getelementptr inbounds %struct.Text, %struct.Text* %16, i32 0, i32 5, !dbg !9648
  %17 = load %struct.TextLine*, %struct.TextLine** %curl10, align 8, !dbg !9648
  %line11 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %17, i32 0, i32 2, !dbg !9649
  %18 = load i8*, i8** %line11, align 8, !dbg !9649
  %19 = load i8*, i8** %word, align 8, !dbg !9650
  %call = call i8* @strstr(i8* %18, i8* %19) #6, !dbg !9651
  %tobool12 = icmp ne i8* %call, null, !dbg !9651
  br i1 %tobool12, label %if.then13, label %if.end52, !dbg !9652

if.then13:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata i32* %a, metadata !9653, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.declare(metadata i8* %is_indent, metadata !9656, metadata !DIExpression()), !dbg !9657
  store i8 0, i8* %is_indent, align 1, !dbg !9657
  store i32 0, i32* %a, align 4, !dbg !9658
  br label %for.cond, !dbg !9660

for.cond:                                         ; preds = %for.inc, %if.then13
  %20 = load i32, i32* %a, align 4, !dbg !9661
  %21 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9663
  %curc14 = getelementptr inbounds %struct.Text, %struct.Text* %21, i32 0, i32 7, !dbg !9664
  %22 = load i32, i32* %curc14, align 8, !dbg !9664
  %cmp15 = icmp slt i32 %20, %22, !dbg !9665
  br i1 %cmp15, label %land.rhs, label %land.end, !dbg !9666

land.rhs:                                         ; preds = %for.cond
  %23 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9667
  %curl17 = getelementptr inbounds %struct.Text, %struct.Text* %23, i32 0, i32 5, !dbg !9668
  %24 = load %struct.TextLine*, %struct.TextLine** %curl17, align 8, !dbg !9668
  %line18 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %24, i32 0, i32 2, !dbg !9669
  %25 = load i8*, i8** %line18, align 8, !dbg !9669
  %26 = load i32, i32* %a, align 4, !dbg !9670
  %idxprom19 = sext i32 %26 to i64, !dbg !9667
  %arrayidx20 = getelementptr inbounds i8, i8* %25, i64 %idxprom19, !dbg !9667
  %27 = load i8, i8* %arrayidx20, align 1, !dbg !9667
  %conv21 = zext i8 %27 to i32, !dbg !9667
  %cmp22 = icmp ne i32 %conv21, 0, !dbg !9671
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %28 = phi i1 [ false, %for.cond ], [ %cmp22, %land.rhs ], !dbg !9672
  br i1 %28, label %for.body, label %for.end, !dbg !9673

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !9674, metadata !DIExpression()), !dbg !9676
  %29 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9677
  %curl24 = getelementptr inbounds %struct.Text, %struct.Text* %29, i32 0, i32 5, !dbg !9678
  %30 = load %struct.TextLine*, %struct.TextLine** %curl24, align 8, !dbg !9678
  %line25 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %30, i32 0, i32 2, !dbg !9679
  %31 = load i8*, i8** %line25, align 8, !dbg !9679
  %32 = load i32, i32* %a, align 4, !dbg !9680
  %idxprom26 = sext i32 %32 to i64, !dbg !9677
  %arrayidx27 = getelementptr inbounds i8, i8* %31, i64 %idxprom26, !dbg !9677
  %33 = load i8, i8* %arrayidx27, align 1, !dbg !9677
  store i8 %33, i8* %ch, align 1, !dbg !9676
  %34 = load i8, i8* %ch, align 1, !dbg !9681
  %conv28 = zext i8 %34 to i32, !dbg !9681
  %cmp29 = icmp eq i32 %conv28, 35, !dbg !9683
  br i1 %cmp29, label %if.then31, label %if.else32, !dbg !9684

if.then31:                                        ; preds = %for.body
  br label %for.end, !dbg !9685

if.else32:                                        ; preds = %for.body
  %35 = load i8, i8* %ch, align 1, !dbg !9687
  %conv33 = zext i8 %35 to i32, !dbg !9687
  %cmp34 = icmp eq i32 %conv33, 58, !dbg !9689
  br i1 %cmp34, label %if.then36, label %if.else37, !dbg !9690

if.then36:                                        ; preds = %if.else32
  store i8 1, i8* %is_indent, align 1, !dbg !9691
  br label %if.end46, !dbg !9693

if.else37:                                        ; preds = %if.else32
  %36 = load i8, i8* %ch, align 1, !dbg !9694
  %conv38 = zext i8 %36 to i32, !dbg !9694
  %cmp39 = icmp ne i32 %conv38, 32, !dbg !9696
  br i1 %cmp39, label %land.lhs.true, label %if.end45, !dbg !9697

land.lhs.true:                                    ; preds = %if.else37
  %37 = load i8, i8* %ch, align 1, !dbg !9698
  %conv41 = zext i8 %37 to i32, !dbg !9698
  %cmp42 = icmp ne i32 %conv41, 9, !dbg !9699
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !9700

if.then44:                                        ; preds = %land.lhs.true
  store i8 0, i8* %is_indent, align 1, !dbg !9701
  br label %if.end45, !dbg !9703

if.end45:                                         ; preds = %if.then44, %land.lhs.true, %if.else37
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then36
  br label %if.end47

if.end47:                                         ; preds = %if.end46
  br label %for.inc, !dbg !9704

for.inc:                                          ; preds = %if.end47
  %38 = load i32, i32* %a, align 4, !dbg !9705
  %inc48 = add nsw i32 %38, 1, !dbg !9705
  store i32 %inc48, i32* %a, align 4, !dbg !9705
  br label %for.cond, !dbg !9706, !llvm.loop !9707

for.end:                                          ; preds = %if.then31, %land.end
  %39 = load i8, i8* %is_indent, align 1, !dbg !9709
  %tobool49 = icmp ne i8 %39, 0, !dbg !9709
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !9711

if.then50:                                        ; preds = %for.end
  %40 = load i32, i32* %space.addr, align 4, !dbg !9712
  %41 = load i32, i32* %i, align 4, !dbg !9714
  %add = add nsw i32 %41, %40, !dbg !9714
  store i32 %add, i32* %i, align 4, !dbg !9714
  br label %if.end51, !dbg !9715

if.end51:                                         ; preds = %if.then50, %for.end
  br label %if.end52, !dbg !9716

if.end52:                                         ; preds = %if.end51, %while.end
  store i32 0, i32* %test, align 4, !dbg !9717
  br label %for.cond53, !dbg !9719

for.cond53:                                       ; preds = %for.inc81, %if.end52
  %42 = load i32, i32* %test, align 4, !dbg !9720
  %idxprom54 = sext i32 %42 to i64, !dbg !9722
  %arrayidx55 = getelementptr inbounds [6 x i8*], [6 x i8*]* @txt_setcurr_tab_spaces.back_words, i64 0, i64 %idxprom54, !dbg !9722
  %43 = load i8*, i8** %arrayidx55, align 8, !dbg !9722
  %tobool56 = icmp ne i8* %43, null, !dbg !9723
  br i1 %tobool56, label %for.body57, label %for.end83, !dbg !9723

for.body57:                                       ; preds = %for.cond53
  %44 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9724
  %curl58 = getelementptr inbounds %struct.Text, %struct.Text* %44, i32 0, i32 5, !dbg !9727
  %45 = load %struct.TextLine*, %struct.TextLine** %curl58, align 8, !dbg !9727
  %line59 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %45, i32 0, i32 2, !dbg !9728
  %46 = load i8*, i8** %line59, align 8, !dbg !9728
  %47 = load i32, i32* %test, align 4, !dbg !9729
  %idxprom60 = sext i32 %47 to i64, !dbg !9730
  %arrayidx61 = getelementptr inbounds [6 x i8*], [6 x i8*]* @txt_setcurr_tab_spaces.back_words, i64 0, i64 %idxprom60, !dbg !9730
  %48 = load i8*, i8** %arrayidx61, align 8, !dbg !9730
  %call62 = call i8* @strstr(i8* %46, i8* %48) #6, !dbg !9731
  %tobool63 = icmp ne i8* %call62, null, !dbg !9731
  br i1 %tobool63, label %land.lhs.true64, label %if.end80, !dbg !9732

land.lhs.true64:                                  ; preds = %for.body57
  %49 = load i32, i32* %i, align 4, !dbg !9733
  %cmp65 = icmp sgt i32 %49, 0, !dbg !9734
  br i1 %cmp65, label %if.then67, label %if.end80, !dbg !9735

if.then67:                                        ; preds = %land.lhs.true64
  %50 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9736
  %curl68 = getelementptr inbounds %struct.Text, %struct.Text* %50, i32 0, i32 5, !dbg !9739
  %51 = load %struct.TextLine*, %struct.TextLine** %curl68, align 8, !dbg !9739
  %line69 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %51, i32 0, i32 2, !dbg !9740
  %52 = load i8*, i8** %line69, align 8, !dbg !9740
  %53 = load i32, i32* %test, align 4, !dbg !9741
  %idxprom70 = sext i32 %53 to i64, !dbg !9742
  %arrayidx71 = getelementptr inbounds [6 x i8*], [6 x i8*]* @txt_setcurr_tab_spaces.back_words, i64 0, i64 %idxprom70, !dbg !9742
  %54 = load i8*, i8** %arrayidx71, align 8, !dbg !9742
  %call72 = call i64 @strcspn(i8* %52, i8* %54) #6, !dbg !9743
  %55 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9744
  %curl73 = getelementptr inbounds %struct.Text, %struct.Text* %55, i32 0, i32 5, !dbg !9745
  %56 = load %struct.TextLine*, %struct.TextLine** %curl73, align 8, !dbg !9745
  %line74 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %56, i32 0, i32 2, !dbg !9746
  %57 = load i8*, i8** %line74, align 8, !dbg !9746
  %58 = load i8*, i8** %comm, align 8, !dbg !9747
  %call75 = call i64 @strcspn(i8* %57, i8* %58) #6, !dbg !9748
  %cmp76 = icmp ult i64 %call72, %call75, !dbg !9749
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !9750

if.then78:                                        ; preds = %if.then67
  %59 = load i32, i32* %space.addr, align 4, !dbg !9751
  %60 = load i32, i32* %i, align 4, !dbg !9753
  %sub = sub nsw i32 %60, %59, !dbg !9753
  store i32 %sub, i32* %i, align 4, !dbg !9753
  br label %if.end79, !dbg !9754

if.end79:                                         ; preds = %if.then78, %if.then67
  br label %if.end80, !dbg !9755

if.end80:                                         ; preds = %if.end79, %land.lhs.true64, %for.body57
  br label %for.inc81, !dbg !9756

for.inc81:                                        ; preds = %if.end80
  %61 = load i32, i32* %test, align 4, !dbg !9757
  %inc82 = add nsw i32 %61, 1, !dbg !9757
  store i32 %inc82, i32* %test, align 4, !dbg !9757
  br label %for.cond53, !dbg !9758, !llvm.loop !9759

for.end83:                                        ; preds = %for.cond53
  %62 = load i32, i32* %i, align 4, !dbg !9761
  store i32 %62, i32* %retval, align 4, !dbg !9762
  br label %return, !dbg !9762

return:                                           ; preds = %for.end83, %if.then8, %if.then
  %63 = load i32, i32* %retval, align 4, !dbg !9763
  ret i32 %63, !dbg !9763
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strcspn(i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @text_check_bracket(i8 zeroext %ch) #0 !dbg !9764 {
entry:
  %retval = alloca i32, align 4
  %ch.addr = alloca i8, align 1
  %a = alloca i32, align 4
  %opens = alloca [4 x i8], align 1
  %close = alloca [4 x i8], align 1
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !9767, metadata !DIExpression()), !dbg !9768
  call void @llvm.dbg.declare(metadata i32* %a, metadata !9769, metadata !DIExpression()), !dbg !9770
  call void @llvm.dbg.declare(metadata [4 x i8]* %opens, metadata !9771, metadata !DIExpression()), !dbg !9772
  %0 = bitcast [4 x i8]* %opens to i8*, !dbg !9772
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @__const.text_check_bracket.opens, i32 0, i32 0), i64 4, i1 false), !dbg !9772
  call void @llvm.dbg.declare(metadata [4 x i8]* %close, metadata !9773, metadata !DIExpression()), !dbg !9774
  %1 = bitcast [4 x i8]* %close to i8*, !dbg !9774
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @__const.text_check_bracket.close, i32 0, i32 0), i64 4, i1 false), !dbg !9774
  store i32 0, i32* %a, align 4, !dbg !9775
  br label %for.cond, !dbg !9777

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %a, align 4, !dbg !9778
  %conv = sext i32 %2 to i64, !dbg !9778
  %cmp = icmp ult i64 %conv, 3, !dbg !9780
  br i1 %cmp, label %for.body, label %for.end, !dbg !9781

for.body:                                         ; preds = %for.cond
  %3 = load i8, i8* %ch.addr, align 1, !dbg !9782
  %conv2 = zext i8 %3 to i32, !dbg !9782
  %4 = load i32, i32* %a, align 4, !dbg !9785
  %idxprom = sext i32 %4 to i64, !dbg !9786
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %opens, i64 0, i64 %idxprom, !dbg !9786
  %5 = load i8, i8* %arrayidx, align 1, !dbg !9786
  %conv3 = zext i8 %5 to i32, !dbg !9786
  %cmp4 = icmp eq i32 %conv2, %conv3, !dbg !9787
  br i1 %cmp4, label %if.then, label %if.else, !dbg !9788

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %a, align 4, !dbg !9789
  %add = add nsw i32 %6, 1, !dbg !9790
  store i32 %add, i32* %retval, align 4, !dbg !9791
  br label %return, !dbg !9791

if.else:                                          ; preds = %for.body
  %7 = load i8, i8* %ch.addr, align 1, !dbg !9792
  %conv6 = zext i8 %7 to i32, !dbg !9792
  %8 = load i32, i32* %a, align 4, !dbg !9794
  %idxprom7 = sext i32 %8 to i64, !dbg !9795
  %arrayidx8 = getelementptr inbounds [4 x i8], [4 x i8]* %close, i64 0, i64 %idxprom7, !dbg !9795
  %9 = load i8, i8* %arrayidx8, align 1, !dbg !9795
  %conv9 = zext i8 %9 to i32, !dbg !9795
  %cmp10 = icmp eq i32 %conv6, %conv9, !dbg !9796
  br i1 %cmp10, label %if.then12, label %if.end, !dbg !9797

if.then12:                                        ; preds = %if.else
  %10 = load i32, i32* %a, align 4, !dbg !9798
  %add13 = add nsw i32 %10, 1, !dbg !9799
  %sub = sub nsw i32 0, %add13, !dbg !9800
  store i32 %sub, i32* %retval, align 4, !dbg !9801
  br label %return, !dbg !9801

if.end:                                           ; preds = %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end
  br label %for.inc, !dbg !9802

for.inc:                                          ; preds = %if.end14
  %11 = load i32, i32* %a, align 4, !dbg !9803
  %inc = add nsw i32 %11, 1, !dbg !9803
  store i32 %inc, i32* %a, align 4, !dbg !9803
  br label %for.cond, !dbg !9804, !llvm.loop !9805

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !9807
  br label %return, !dbg !9807

return:                                           ; preds = %for.end, %if.then12, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !9808
  ret i32 %12, !dbg !9808
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @text_check_delim(i8 zeroext %ch) #0 !dbg !9809 {
entry:
  %retval = alloca i8, align 1
  %ch.addr = alloca i8, align 1
  %a = alloca i32, align 4
  %delims = alloca [30 x i8], align 16
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !9812, metadata !DIExpression()), !dbg !9813
  call void @llvm.dbg.declare(metadata i32* %a, metadata !9814, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.declare(metadata [30 x i8]* %delims, metadata !9816, metadata !DIExpression()), !dbg !9820
  %0 = bitcast [30 x i8]* %delims to i8*, !dbg !9820
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 getelementptr inbounds ([30 x i8], [30 x i8]* @__const.text_check_delim.delims, i32 0, i32 0), i64 30, i1 false), !dbg !9820
  store i32 0, i32* %a, align 4, !dbg !9821
  br label %for.cond, !dbg !9823

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %a, align 4, !dbg !9824
  %conv = sext i32 %1 to i64, !dbg !9824
  %cmp = icmp ult i64 %conv, 29, !dbg !9826
  br i1 %cmp, label %for.body, label %for.end, !dbg !9827

for.body:                                         ; preds = %for.cond
  %2 = load i8, i8* %ch.addr, align 1, !dbg !9828
  %conv2 = zext i8 %2 to i32, !dbg !9828
  %3 = load i32, i32* %a, align 4, !dbg !9831
  %idxprom = sext i32 %3 to i64, !dbg !9832
  %arrayidx = getelementptr inbounds [30 x i8], [30 x i8]* %delims, i64 0, i64 %idxprom, !dbg !9832
  %4 = load i8, i8* %arrayidx, align 1, !dbg !9832
  %conv3 = zext i8 %4 to i32, !dbg !9832
  %cmp4 = icmp eq i32 %conv2, %conv3, !dbg !9833
  br i1 %cmp4, label %if.then, label %if.end, !dbg !9834

if.then:                                          ; preds = %for.body
  store i8 1, i8* %retval, align 1, !dbg !9835
  br label %return, !dbg !9835

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9836

for.inc:                                          ; preds = %if.end
  %5 = load i32, i32* %a, align 4, !dbg !9837
  %inc = add nsw i32 %5, 1, !dbg !9837
  store i32 %inc, i32* %a, align 4, !dbg !9837
  br label %for.cond, !dbg !9838, !llvm.loop !9839

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !9841
  br label %return, !dbg !9841

return:                                           ; preds = %for.end, %if.then
  %6 = load i8, i8* %retval, align 1, !dbg !9842
  ret i8 %6, !dbg !9842
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @text_check_digit(i8 zeroext %ch) #0 !dbg !9843 {
entry:
  %retval = alloca i8, align 1
  %ch.addr = alloca i8, align 1
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !9844, metadata !DIExpression()), !dbg !9845
  %0 = load i8, i8* %ch.addr, align 1, !dbg !9846
  %conv = zext i8 %0 to i32, !dbg !9846
  %cmp = icmp slt i32 %conv, 48, !dbg !9848
  br i1 %cmp, label %if.then, label %if.end, !dbg !9849

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !9850
  br label %return, !dbg !9850

if.end:                                           ; preds = %entry
  %1 = load i8, i8* %ch.addr, align 1, !dbg !9851
  %conv2 = zext i8 %1 to i32, !dbg !9851
  %cmp3 = icmp sle i32 %conv2, 57, !dbg !9853
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !9854

if.then5:                                         ; preds = %if.end
  store i8 1, i8* %retval, align 1, !dbg !9855
  br label %return, !dbg !9855

if.end6:                                          ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !9856
  br label %return, !dbg !9856

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %2 = load i8, i8* %retval, align 1, !dbg !9857
  ret i8 %2, !dbg !9857
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @text_check_identifier(i8 zeroext %ch) #0 !dbg !9858 {
entry:
  %retval = alloca i8, align 1
  %ch.addr = alloca i8, align 1
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !9859, metadata !DIExpression()), !dbg !9860
  %0 = load i8, i8* %ch.addr, align 1, !dbg !9861
  %conv = zext i8 %0 to i32, !dbg !9861
  %cmp = icmp slt i32 %conv, 48, !dbg !9863
  br i1 %cmp, label %if.then, label %if.end, !dbg !9864

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !9865
  br label %return, !dbg !9865

if.end:                                           ; preds = %entry
  %1 = load i8, i8* %ch.addr, align 1, !dbg !9866
  %conv2 = zext i8 %1 to i32, !dbg !9866
  %cmp3 = icmp sle i32 %conv2, 57, !dbg !9868
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !9869

if.then5:                                         ; preds = %if.end
  store i8 1, i8* %retval, align 1, !dbg !9870
  br label %return, !dbg !9870

if.end6:                                          ; preds = %if.end
  %2 = load i8, i8* %ch.addr, align 1, !dbg !9871
  %conv7 = zext i8 %2 to i32, !dbg !9871
  %cmp8 = icmp slt i32 %conv7, 65, !dbg !9873
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !9874

if.then10:                                        ; preds = %if.end6
  store i8 0, i8* %retval, align 1, !dbg !9875
  br label %return, !dbg !9875

if.end11:                                         ; preds = %if.end6
  %3 = load i8, i8* %ch.addr, align 1, !dbg !9876
  %conv12 = zext i8 %3 to i32, !dbg !9876
  %cmp13 = icmp sle i32 %conv12, 90, !dbg !9878
  br i1 %cmp13, label %if.then18, label %lor.lhs.false, !dbg !9879

lor.lhs.false:                                    ; preds = %if.end11
  %4 = load i8, i8* %ch.addr, align 1, !dbg !9880
  %conv15 = zext i8 %4 to i32, !dbg !9880
  %cmp16 = icmp eq i32 %conv15, 95, !dbg !9881
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !9882

if.then18:                                        ; preds = %lor.lhs.false, %if.end11
  store i8 1, i8* %retval, align 1, !dbg !9883
  br label %return, !dbg !9883

if.end19:                                         ; preds = %lor.lhs.false
  %5 = load i8, i8* %ch.addr, align 1, !dbg !9884
  %conv20 = zext i8 %5 to i32, !dbg !9884
  %cmp21 = icmp slt i32 %conv20, 97, !dbg !9886
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !9887

if.then23:                                        ; preds = %if.end19
  store i8 0, i8* %retval, align 1, !dbg !9888
  br label %return, !dbg !9888

if.end24:                                         ; preds = %if.end19
  %6 = load i8, i8* %ch.addr, align 1, !dbg !9889
  %conv25 = zext i8 %6 to i32, !dbg !9889
  %cmp26 = icmp sle i32 %conv25, 122, !dbg !9891
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !9892

if.then28:                                        ; preds = %if.end24
  store i8 1, i8* %retval, align 1, !dbg !9893
  br label %return, !dbg !9893

if.end29:                                         ; preds = %if.end24
  store i8 0, i8* %retval, align 1, !dbg !9894
  br label %return, !dbg !9894

return:                                           ; preds = %if.end29, %if.then28, %if.then23, %if.then18, %if.then10, %if.then5, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !9895
  ret i8 %7, !dbg !9895
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @text_check_identifier_nodigit(i8 zeroext %ch) #0 !dbg !9896 {
entry:
  %retval = alloca i8, align 1
  %ch.addr = alloca i8, align 1
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !9897, metadata !DIExpression()), !dbg !9898
  %0 = load i8, i8* %ch.addr, align 1, !dbg !9899
  %conv = zext i8 %0 to i32, !dbg !9899
  %cmp = icmp sle i32 %conv, 57, !dbg !9901
  br i1 %cmp, label %if.then, label %if.end, !dbg !9902

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !9903
  br label %return, !dbg !9903

if.end:                                           ; preds = %entry
  %1 = load i8, i8* %ch.addr, align 1, !dbg !9904
  %conv2 = zext i8 %1 to i32, !dbg !9904
  %cmp3 = icmp slt i32 %conv2, 65, !dbg !9906
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !9907

if.then5:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !9908
  br label %return, !dbg !9908

if.end6:                                          ; preds = %if.end
  %2 = load i8, i8* %ch.addr, align 1, !dbg !9909
  %conv7 = zext i8 %2 to i32, !dbg !9909
  %cmp8 = icmp sle i32 %conv7, 90, !dbg !9911
  br i1 %cmp8, label %if.then13, label %lor.lhs.false, !dbg !9912

lor.lhs.false:                                    ; preds = %if.end6
  %3 = load i8, i8* %ch.addr, align 1, !dbg !9913
  %conv10 = zext i8 %3 to i32, !dbg !9913
  %cmp11 = icmp eq i32 %conv10, 95, !dbg !9914
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !9915

if.then13:                                        ; preds = %lor.lhs.false, %if.end6
  store i8 1, i8* %retval, align 1, !dbg !9916
  br label %return, !dbg !9916

if.end14:                                         ; preds = %lor.lhs.false
  %4 = load i8, i8* %ch.addr, align 1, !dbg !9917
  %conv15 = zext i8 %4 to i32, !dbg !9917
  %cmp16 = icmp slt i32 %conv15, 97, !dbg !9919
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !9920

if.then18:                                        ; preds = %if.end14
  store i8 0, i8* %retval, align 1, !dbg !9921
  br label %return, !dbg !9921

if.end19:                                         ; preds = %if.end14
  %5 = load i8, i8* %ch.addr, align 1, !dbg !9922
  %conv20 = zext i8 %5 to i32, !dbg !9922
  %cmp21 = icmp sle i32 %conv20, 122, !dbg !9924
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !9925

if.then23:                                        ; preds = %if.end19
  store i8 1, i8* %retval, align 1, !dbg !9926
  br label %return, !dbg !9926

if.end24:                                         ; preds = %if.end19
  store i8 0, i8* %retval, align 1, !dbg !9927
  br label %return, !dbg !9927

return:                                           ; preds = %if.end24, %if.then23, %if.then18, %if.then13, %if.then5, %if.then
  %6 = load i8, i8* %retval, align 1, !dbg !9928
  ret i8 %6, !dbg !9928
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @text_check_identifier_unicode(i32 %ch) #0 !dbg !9929 {
entry:
  %ch.addr = alloca i32, align 4
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !9933, metadata !DIExpression()), !dbg !9934
  %0 = load i32, i32* %ch.addr, align 4, !dbg !9935
  %cmp = icmp ult i32 %0, 255, !dbg !9936
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9937

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ch.addr, align 4, !dbg !9938
  %conv = trunc i32 %1 to i8, !dbg !9939
  %call = call zeroext i8 @text_check_identifier(i8 zeroext %conv), !dbg !9940
  %conv1 = zext i8 %call to i32, !dbg !9940
  %tobool = icmp ne i32 %conv1, 0, !dbg !9937
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %tobool, %land.rhs ], !dbg !9941
  %land.ext = zext i1 %2 to i32, !dbg !9937
  ret i32 %land.ext, !dbg !9942
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @text_check_identifier_nodigit_unicode(i32 %ch) #0 !dbg !9943 {
entry:
  %ch.addr = alloca i32, align 4
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !9944, metadata !DIExpression()), !dbg !9945
  %0 = load i32, i32* %ch.addr, align 4, !dbg !9946
  %cmp = icmp ult i32 %0, 255, !dbg !9947
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9948

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ch.addr, align 4, !dbg !9949
  %conv = trunc i32 %1 to i8, !dbg !9950
  %call = call zeroext i8 @text_check_identifier_nodigit(i8 zeroext %conv), !dbg !9951
  %conv1 = zext i8 %call to i32, !dbg !9951
  %tobool = icmp ne i32 %conv1, 0, !dbg !9948
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %tobool, %land.rhs ], !dbg !9952
  %land.ext = zext i1 %2 to i32, !dbg !9948
  ret i32 %land.ext, !dbg !9953
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @text_check_whitespace(i8 zeroext %ch) #0 !dbg !9954 {
entry:
  %retval = alloca i8, align 1
  %ch.addr = alloca i8, align 1
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !9955, metadata !DIExpression()), !dbg !9956
  %0 = load i8, i8* %ch.addr, align 1, !dbg !9957
  %conv = zext i8 %0 to i32, !dbg !9957
  %cmp = icmp eq i32 %conv, 32, !dbg !9959
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9960

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8, i8* %ch.addr, align 1, !dbg !9961
  %conv2 = zext i8 %1 to i32, !dbg !9961
  %cmp3 = icmp eq i32 %conv2, 9, !dbg !9962
  br i1 %cmp3, label %if.then, label %lor.lhs.false5, !dbg !9963

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %2 = load i8, i8* %ch.addr, align 1, !dbg !9964
  %conv6 = zext i8 %2 to i32, !dbg !9964
  %cmp7 = icmp eq i32 %conv6, 13, !dbg !9965
  br i1 %cmp7, label %if.then, label %lor.lhs.false9, !dbg !9966

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %3 = load i8, i8* %ch.addr, align 1, !dbg !9967
  %conv10 = zext i8 %3 to i32, !dbg !9967
  %cmp11 = icmp eq i32 %conv10, 10, !dbg !9968
  br i1 %cmp11, label %if.then, label %if.end, !dbg !9969

if.then:                                          ; preds = %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %entry
  store i8 1, i8* %retval, align 1, !dbg !9970
  br label %return, !dbg !9970

if.end:                                           ; preds = %lor.lhs.false9
  store i8 0, i8* %retval, align 1, !dbg !9971
  br label %return, !dbg !9971

return:                                           ; preds = %if.end, %if.then
  %4 = load i8, i8* %retval, align 1, !dbg !9972
  ret i8 %4, !dbg !9972
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @text_find_identifier_start(i8* %str, i32 %i) #0 !dbg !9973 {
entry:
  %retval = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %i.addr = alloca i32, align 4
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !9974, metadata !DIExpression()), !dbg !9975
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !9976, metadata !DIExpression()), !dbg !9977
  %0 = load i32, i32* %i.addr, align 4, !dbg !9978
  %cmp = icmp sle i32 %0, 0, !dbg !9978
  br i1 %cmp, label %if.then, label %if.end, !dbg !9980

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9981
  br label %return, !dbg !9981

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !9983

while.cond:                                       ; preds = %if.end3, %if.end
  %1 = load i32, i32* %i.addr, align 4, !dbg !9984
  %dec = add nsw i32 %1, -1, !dbg !9984
  store i32 %dec, i32* %i.addr, align 4, !dbg !9984
  %tobool = icmp ne i32 %1, 0, !dbg !9983
  br i1 %tobool, label %while.body, label %while.end, !dbg !9983

while.body:                                       ; preds = %while.cond
  %2 = load i8*, i8** %str.addr, align 8, !dbg !9985
  %3 = load i32, i32* %i.addr, align 4, !dbg !9988
  %idxprom = sext i32 %3 to i64, !dbg !9985
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !9985
  %4 = load i8, i8* %arrayidx, align 1, !dbg !9985
  %call = call zeroext i8 @text_check_identifier(i8 zeroext %4), !dbg !9989
  %tobool1 = icmp ne i8 %call, 0, !dbg !9989
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !9990

if.then2:                                         ; preds = %while.body
  br label %while.end, !dbg !9991

if.end3:                                          ; preds = %while.body
  br label %while.cond, !dbg !9983, !llvm.loop !9993

while.end:                                        ; preds = %if.then2, %while.cond
  %5 = load i32, i32* %i.addr, align 4, !dbg !9995
  %inc = add nsw i32 %5, 1, !dbg !9995
  store i32 %inc, i32* %i.addr, align 4, !dbg !9995
  %6 = load i32, i32* %i.addr, align 4, !dbg !9996
  store i32 %6, i32* %retval, align 4, !dbg !9997
  br label %return, !dbg !9997

return:                                           ; preds = %while.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !9998
  ret i32 %7, !dbg !9998
}

; Function Attrs: noinline nounwind uwtable
define internal void @cleanup_textline(%struct.TextLine* %tl) #0 !dbg !9999 {
entry:
  %tl.addr = alloca %struct.TextLine*, align 8
  %i = alloca i32, align 4
  store %struct.TextLine* %tl, %struct.TextLine** %tl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TextLine** %tl.addr, metadata !10002, metadata !DIExpression()), !dbg !10003
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10004, metadata !DIExpression()), !dbg !10005
  store i32 0, i32* %i, align 4, !dbg !10006
  br label %for.cond, !dbg !10008

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10009
  %1 = load %struct.TextLine*, %struct.TextLine** %tl.addr, align 8, !dbg !10011
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %1, i32 0, i32 4, !dbg !10012
  %2 = load i32, i32* %len, align 8, !dbg !10012
  %cmp = icmp slt i32 %0, %2, !dbg !10013
  br i1 %cmp, label %for.body, label %for.end, !dbg !10014

for.body:                                         ; preds = %for.cond
  %3 = load %struct.TextLine*, %struct.TextLine** %tl.addr, align 8, !dbg !10015
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %3, i32 0, i32 2, !dbg !10018
  %4 = load i8*, i8** %line, align 8, !dbg !10018
  %5 = load i32, i32* %i, align 4, !dbg !10019
  %idxprom = sext i32 %5 to i64, !dbg !10015
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !10015
  %6 = load i8, i8* %arrayidx, align 1, !dbg !10015
  %conv = zext i8 %6 to i32, !dbg !10015
  %cmp1 = icmp slt i32 %conv, 32, !dbg !10020
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !10021

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.TextLine*, %struct.TextLine** %tl.addr, align 8, !dbg !10022
  %line3 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %7, i32 0, i32 2, !dbg !10023
  %8 = load i8*, i8** %line3, align 8, !dbg !10023
  %9 = load i32, i32* %i, align 4, !dbg !10024
  %idxprom4 = sext i32 %9 to i64, !dbg !10022
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 %idxprom4, !dbg !10022
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !10022
  %conv6 = zext i8 %10 to i32, !dbg !10022
  %cmp7 = icmp ne i32 %conv6, 9, !dbg !10025
  br i1 %cmp7, label %if.then, label %if.end, !dbg !10026

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.TextLine*, %struct.TextLine** %tl.addr, align 8, !dbg !10027
  %line9 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %11, i32 0, i32 2, !dbg !10029
  %12 = load i8*, i8** %line9, align 8, !dbg !10029
  %13 = load i32, i32* %i, align 4, !dbg !10030
  %idx.ext = sext i32 %13 to i64, !dbg !10031
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %idx.ext, !dbg !10031
  %14 = load %struct.TextLine*, %struct.TextLine** %tl.addr, align 8, !dbg !10032
  %line10 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %14, i32 0, i32 2, !dbg !10033
  %15 = load i8*, i8** %line10, align 8, !dbg !10033
  %16 = load i32, i32* %i, align 4, !dbg !10034
  %idx.ext11 = sext i32 %16 to i64, !dbg !10035
  %add.ptr12 = getelementptr inbounds i8, i8* %15, i64 %idx.ext11, !dbg !10035
  %add.ptr13 = getelementptr inbounds i8, i8* %add.ptr12, i64 1, !dbg !10036
  %17 = load %struct.TextLine*, %struct.TextLine** %tl.addr, align 8, !dbg !10037
  %len14 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %17, i32 0, i32 4, !dbg !10038
  %18 = load i32, i32* %len14, align 8, !dbg !10038
  %19 = load i32, i32* %i, align 4, !dbg !10039
  %sub = sub nsw i32 %18, %19, !dbg !10040
  %conv15 = sext i32 %sub to i64, !dbg !10037
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %add.ptr13, i64 %conv15, i1 false), !dbg !10041
  %20 = load %struct.TextLine*, %struct.TextLine** %tl.addr, align 8, !dbg !10042
  %len16 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %20, i32 0, i32 4, !dbg !10043
  %21 = load i32, i32* %len16, align 8, !dbg !10044
  %dec = add nsw i32 %21, -1, !dbg !10044
  store i32 %dec, i32* %len16, align 8, !dbg !10044
  %22 = load i32, i32* %i, align 4, !dbg !10045
  %dec17 = add nsw i32 %22, -1, !dbg !10045
  store i32 %dec17, i32* %i, align 4, !dbg !10045
  br label %if.end, !dbg !10046

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !10047

for.inc:                                          ; preds = %if.end
  %23 = load i32, i32* %i, align 4, !dbg !10048
  %inc = add nsw i32 %23, 1, !dbg !10048
  store i32 %inc, i32* %i, align 4, !dbg !10048
  br label %for.cond, !dbg !10049, !llvm.loop !10050

for.end:                                          ; preds = %for.cond
  %24 = load %struct.TextLine*, %struct.TextLine** %tl.addr, align 8, !dbg !10052
  %line18 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %24, i32 0, i32 2, !dbg !10053
  %call = call i32 @txt_extended_ascii_as_utf8(i8** %line18), !dbg !10054
  %25 = load %struct.TextLine*, %struct.TextLine** %tl.addr, align 8, !dbg !10055
  %len19 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %25, i32 0, i32 4, !dbg !10056
  %26 = load i32, i32* %len19, align 8, !dbg !10057
  %add = add nsw i32 %26, %call, !dbg !10057
  store i32 %add, i32* %len19, align 8, !dbg !10057
  ret void, !dbg !10058
}

; Function Attrs: noinline nounwind uwtable
define internal void @txt_undo_store_uint32(i8* %undo_buf, i32* %undo_pos, i32 %value) #0 !dbg !10059 {
entry:
  %undo_buf.addr = alloca i8*, align 8
  %undo_pos.addr = alloca i32*, align 8
  %value.addr = alloca i32, align 4
  store i8* %undo_buf, i8** %undo_buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %undo_buf.addr, metadata !10062, metadata !DIExpression()), !dbg !10063
  store i32* %undo_pos, i32** %undo_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %undo_pos.addr, metadata !10064, metadata !DIExpression()), !dbg !10065
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !10066, metadata !DIExpression()), !dbg !10067
  %0 = load i32, i32* %value.addr, align 4, !dbg !10068
  %and = and i32 %0, 255, !dbg !10069
  %conv = trunc i32 %and to i8, !dbg !10070
  %1 = load i8*, i8** %undo_buf.addr, align 8, !dbg !10071
  %2 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10072
  %3 = load i32, i32* %2, align 4, !dbg !10073
  %idxprom = sext i32 %3 to i64, !dbg !10071
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom, !dbg !10071
  store i8 %conv, i8* %arrayidx, align 1, !dbg !10074
  %4 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10075
  %5 = load i32, i32* %4, align 4, !dbg !10076
  %inc = add nsw i32 %5, 1, !dbg !10076
  store i32 %inc, i32* %4, align 4, !dbg !10076
  %6 = load i32, i32* %value.addr, align 4, !dbg !10077
  %shr = lshr i32 %6, 8, !dbg !10078
  %and1 = and i32 %shr, 255, !dbg !10079
  %conv2 = trunc i32 %and1 to i8, !dbg !10080
  %7 = load i8*, i8** %undo_buf.addr, align 8, !dbg !10081
  %8 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10082
  %9 = load i32, i32* %8, align 4, !dbg !10083
  %idxprom3 = sext i32 %9 to i64, !dbg !10081
  %arrayidx4 = getelementptr inbounds i8, i8* %7, i64 %idxprom3, !dbg !10081
  store i8 %conv2, i8* %arrayidx4, align 1, !dbg !10084
  %10 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10085
  %11 = load i32, i32* %10, align 4, !dbg !10086
  %inc5 = add nsw i32 %11, 1, !dbg !10086
  store i32 %inc5, i32* %10, align 4, !dbg !10086
  %12 = load i32, i32* %value.addr, align 4, !dbg !10087
  %shr6 = lshr i32 %12, 16, !dbg !10088
  %and7 = and i32 %shr6, 255, !dbg !10089
  %conv8 = trunc i32 %and7 to i8, !dbg !10090
  %13 = load i8*, i8** %undo_buf.addr, align 8, !dbg !10091
  %14 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10092
  %15 = load i32, i32* %14, align 4, !dbg !10093
  %idxprom9 = sext i32 %15 to i64, !dbg !10091
  %arrayidx10 = getelementptr inbounds i8, i8* %13, i64 %idxprom9, !dbg !10091
  store i8 %conv8, i8* %arrayidx10, align 1, !dbg !10094
  %16 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10095
  %17 = load i32, i32* %16, align 4, !dbg !10096
  %inc11 = add nsw i32 %17, 1, !dbg !10096
  store i32 %inc11, i32* %16, align 4, !dbg !10096
  %18 = load i32, i32* %value.addr, align 4, !dbg !10097
  %shr12 = lshr i32 %18, 24, !dbg !10098
  %and13 = and i32 %shr12, 255, !dbg !10099
  %conv14 = trunc i32 %and13 to i8, !dbg !10100
  %19 = load i8*, i8** %undo_buf.addr, align 8, !dbg !10101
  %20 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10102
  %21 = load i32, i32* %20, align 4, !dbg !10103
  %idxprom15 = sext i32 %21 to i64, !dbg !10101
  %arrayidx16 = getelementptr inbounds i8, i8* %19, i64 %idxprom15, !dbg !10101
  store i8 %conv14, i8* %arrayidx16, align 1, !dbg !10104
  %22 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10105
  %23 = load i32, i32* %22, align 4, !dbg !10106
  %inc17 = add nsw i32 %23, 1, !dbg !10106
  store i32 %inc17, i32* %22, align 4, !dbg !10106
  ret void, !dbg !10107
}

; Function Attrs: noinline nounwind uwtable
define internal void @txt_undo_store_cur(%struct.Text* %text) #0 !dbg !10108 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !10109, metadata !DIExpression()), !dbg !10110
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !10111
  %undo_buf = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 9, !dbg !10112
  %1 = load i8*, i8** %undo_buf, align 8, !dbg !10112
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !10113
  %undo_pos = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 10, !dbg !10114
  %3 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !10115
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %3, i32 0, i32 7, !dbg !10116
  %4 = load i32, i32* %curc, align 8, !dbg !10116
  %conv = trunc i32 %4 to i16, !dbg !10115
  call void @txt_undo_store_uint16(i8* %1, i32* %undo_pos, i16 zeroext %conv), !dbg !10117
  %5 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !10118
  %undo_buf1 = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 9, !dbg !10119
  %6 = load i8*, i8** %undo_buf1, align 8, !dbg !10119
  %7 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !10120
  %undo_pos2 = getelementptr inbounds %struct.Text, %struct.Text* %7, i32 0, i32 10, !dbg !10121
  %8 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !10122
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 4, !dbg !10123
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !10124
  %9 = load i8*, i8** %first, align 8, !dbg !10124
  %10 = bitcast i8* %9 to %struct.TextLine*, !dbg !10122
  %11 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !10125
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %11, i32 0, i32 5, !dbg !10126
  %12 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !10126
  %call = call i32 @txt_get_span(%struct.TextLine* %10, %struct.TextLine* %12), !dbg !10127
  call void @txt_undo_store_uint32(i8* %6, i32* %undo_pos2, i32 %call), !dbg !10128
  ret void, !dbg !10129
}

; Function Attrs: noinline nounwind uwtable
define internal void @txt_undo_store_sel(%struct.Text* %text) #0 !dbg !10130 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !10131, metadata !DIExpression()), !dbg !10132
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !10133
  %undo_buf = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 9, !dbg !10134
  %1 = load i8*, i8** %undo_buf, align 8, !dbg !10134
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !10135
  %undo_pos = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 10, !dbg !10136
  %3 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !10137
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %3, i32 0, i32 8, !dbg !10138
  %4 = load i32, i32* %selc, align 4, !dbg !10138
  %conv = trunc i32 %4 to i16, !dbg !10137
  call void @txt_undo_store_uint16(i8* %1, i32* %undo_pos, i16 zeroext %conv), !dbg !10139
  %5 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !10140
  %undo_buf1 = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 9, !dbg !10141
  %6 = load i8*, i8** %undo_buf1, align 8, !dbg !10141
  %7 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !10142
  %undo_pos2 = getelementptr inbounds %struct.Text, %struct.Text* %7, i32 0, i32 10, !dbg !10143
  %8 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !10144
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 4, !dbg !10145
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !10146
  %9 = load i8*, i8** %first, align 8, !dbg !10146
  %10 = bitcast i8* %9 to %struct.TextLine*, !dbg !10144
  %11 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !10147
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %11, i32 0, i32 6, !dbg !10148
  %12 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !10148
  %call = call i32 @txt_get_span(%struct.TextLine* %10, %struct.TextLine* %12), !dbg !10149
  call void @txt_undo_store_uint32(i8* %6, i32* %undo_pos2, i32 %call), !dbg !10150
  ret void, !dbg !10151
}

; Function Attrs: noinline nounwind uwtable
define internal void @txt_undo_store_uint16(i8* %undo_buf, i32* %undo_pos, i16 zeroext %value) #0 !dbg !10152 {
entry:
  %undo_buf.addr = alloca i8*, align 8
  %undo_pos.addr = alloca i32*, align 8
  %value.addr = alloca i16, align 2
  store i8* %undo_buf, i8** %undo_buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %undo_buf.addr, metadata !10155, metadata !DIExpression()), !dbg !10156
  store i32* %undo_pos, i32** %undo_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %undo_pos.addr, metadata !10157, metadata !DIExpression()), !dbg !10158
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !10159, metadata !DIExpression()), !dbg !10160
  %0 = load i16, i16* %value.addr, align 2, !dbg !10161
  %conv = zext i16 %0 to i32, !dbg !10162
  %and = and i32 %conv, 255, !dbg !10163
  %conv1 = trunc i32 %and to i8, !dbg !10162
  %1 = load i8*, i8** %undo_buf.addr, align 8, !dbg !10164
  %2 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10165
  %3 = load i32, i32* %2, align 4, !dbg !10166
  %idxprom = sext i32 %3 to i64, !dbg !10164
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom, !dbg !10164
  store i8 %conv1, i8* %arrayidx, align 1, !dbg !10167
  %4 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10168
  %5 = load i32, i32* %4, align 4, !dbg !10169
  %inc = add nsw i32 %5, 1, !dbg !10169
  store i32 %inc, i32* %4, align 4, !dbg !10169
  %6 = load i16, i16* %value.addr, align 2, !dbg !10170
  %conv2 = zext i16 %6 to i32, !dbg !10170
  %shr = ashr i32 %conv2, 8, !dbg !10171
  %and3 = and i32 %shr, 255, !dbg !10172
  %conv4 = trunc i32 %and3 to i8, !dbg !10173
  %7 = load i8*, i8** %undo_buf.addr, align 8, !dbg !10174
  %8 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10175
  %9 = load i32, i32* %8, align 4, !dbg !10176
  %idxprom5 = sext i32 %9 to i64, !dbg !10174
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 %idxprom5, !dbg !10174
  store i8 %conv4, i8* %arrayidx6, align 1, !dbg !10177
  %10 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10178
  %11 = load i32, i32* %10, align 4, !dbg !10179
  %inc7 = add nsw i32 %11, 1, !dbg !10179
  store i32 %inc7, i32* %10, align 4, !dbg !10179
  ret void, !dbg !10180
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @txt_undo_read_uint16(i8* %undo_buf, i32* %undo_pos) #0 !dbg !10181 {
entry:
  %undo_buf.addr = alloca i8*, align 8
  %undo_pos.addr = alloca i32*, align 8
  %val = alloca i16, align 2
  store i8* %undo_buf, i8** %undo_buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %undo_buf.addr, metadata !10184, metadata !DIExpression()), !dbg !10185
  store i32* %undo_pos, i32** %undo_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %undo_pos.addr, metadata !10186, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.declare(metadata i16* %val, metadata !10188, metadata !DIExpression()), !dbg !10189
  %0 = load i8*, i8** %undo_buf.addr, align 8, !dbg !10190
  %1 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10191
  %2 = load i32, i32* %1, align 4, !dbg !10192
  %idxprom = sext i32 %2 to i64, !dbg !10190
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !10190
  %3 = load i8, i8* %arrayidx, align 1, !dbg !10190
  %conv = zext i8 %3 to i16, !dbg !10190
  store i16 %conv, i16* %val, align 2, !dbg !10193
  %4 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10194
  %5 = load i32, i32* %4, align 4, !dbg !10195
  %dec = add nsw i32 %5, -1, !dbg !10195
  store i32 %dec, i32* %4, align 4, !dbg !10195
  %6 = load i16, i16* %val, align 2, !dbg !10196
  %conv1 = zext i16 %6 to i32, !dbg !10196
  %shl = shl i32 %conv1, 8, !dbg !10197
  %7 = load i8*, i8** %undo_buf.addr, align 8, !dbg !10198
  %8 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10199
  %9 = load i32, i32* %8, align 4, !dbg !10200
  %idxprom2 = sext i32 %9 to i64, !dbg !10198
  %arrayidx3 = getelementptr inbounds i8, i8* %7, i64 %idxprom2, !dbg !10198
  %10 = load i8, i8* %arrayidx3, align 1, !dbg !10198
  %conv4 = zext i8 %10 to i32, !dbg !10198
  %add = add nsw i32 %shl, %conv4, !dbg !10201
  %conv5 = trunc i32 %add to i16, !dbg !10202
  store i16 %conv5, i16* %val, align 2, !dbg !10203
  %11 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10204
  %12 = load i32, i32* %11, align 4, !dbg !10205
  %dec6 = add nsw i32 %12, -1, !dbg !10205
  store i32 %dec6, i32* %11, align 4, !dbg !10205
  %13 = load i16, i16* %val, align 2, !dbg !10206
  ret i16 %13, !dbg !10207
}

declare dso_local i32 @BLI_str_utf8_as_unicode(i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @txt_undo_read_sel(i8* %undo_buf, i32* %undo_pos, i32* %selln, i16* %selc) #0 !dbg !10208 {
entry:
  %undo_buf.addr = alloca i8*, align 8
  %undo_pos.addr = alloca i32*, align 8
  %selln.addr = alloca i32*, align 8
  %selc.addr = alloca i16*, align 8
  store i8* %undo_buf, i8** %undo_buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %undo_buf.addr, metadata !10209, metadata !DIExpression()), !dbg !10210
  store i32* %undo_pos, i32** %undo_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %undo_pos.addr, metadata !10211, metadata !DIExpression()), !dbg !10212
  store i32* %selln, i32** %selln.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %selln.addr, metadata !10213, metadata !DIExpression()), !dbg !10214
  store i16* %selc, i16** %selc.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %selc.addr, metadata !10215, metadata !DIExpression()), !dbg !10216
  %0 = load i8*, i8** %undo_buf.addr, align 8, !dbg !10217
  %1 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10218
  %call = call i32 @txt_undo_read_uint32(i8* %0, i32* %1), !dbg !10219
  %2 = load i32*, i32** %selln.addr, align 8, !dbg !10220
  store i32 %call, i32* %2, align 4, !dbg !10221
  %3 = load i8*, i8** %undo_buf.addr, align 8, !dbg !10222
  %4 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10223
  %call1 = call zeroext i16 @txt_undo_read_uint16(i8* %3, i32* %4), !dbg !10224
  %5 = load i16*, i16** %selc.addr, align 8, !dbg !10225
  store i16 %call1, i16* %5, align 2, !dbg !10226
  ret void, !dbg !10227
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @txt_redo_read_uint16(i8* %undo_buf, i32* %undo_pos) #0 !dbg !10228 {
entry:
  %undo_buf.addr = alloca i8*, align 8
  %undo_pos.addr = alloca i32*, align 8
  %val = alloca i16, align 2
  store i8* %undo_buf, i8** %undo_buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %undo_buf.addr, metadata !10229, metadata !DIExpression()), !dbg !10230
  store i32* %undo_pos, i32** %undo_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %undo_pos.addr, metadata !10231, metadata !DIExpression()), !dbg !10232
  call void @llvm.dbg.declare(metadata i16* %val, metadata !10233, metadata !DIExpression()), !dbg !10234
  %0 = load i8*, i8** %undo_buf.addr, align 8, !dbg !10235
  %1 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10236
  %2 = load i32, i32* %1, align 4, !dbg !10237
  %idxprom = sext i32 %2 to i64, !dbg !10235
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !10235
  %3 = load i8, i8* %arrayidx, align 1, !dbg !10235
  %conv = zext i8 %3 to i16, !dbg !10235
  store i16 %conv, i16* %val, align 2, !dbg !10238
  %4 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10239
  %5 = load i32, i32* %4, align 4, !dbg !10240
  %inc = add nsw i32 %5, 1, !dbg !10240
  store i32 %inc, i32* %4, align 4, !dbg !10240
  %6 = load i16, i16* %val, align 2, !dbg !10241
  %conv1 = zext i16 %6 to i32, !dbg !10241
  %7 = load i8*, i8** %undo_buf.addr, align 8, !dbg !10242
  %8 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10243
  %9 = load i32, i32* %8, align 4, !dbg !10244
  %idxprom2 = sext i32 %9 to i64, !dbg !10242
  %arrayidx3 = getelementptr inbounds i8, i8* %7, i64 %idxprom2, !dbg !10242
  %10 = load i8, i8* %arrayidx3, align 1, !dbg !10242
  %conv4 = zext i8 %10 to i32, !dbg !10242
  %shl = shl i32 %conv4, 8, !dbg !10245
  %add = add nsw i32 %conv1, %shl, !dbg !10246
  %conv5 = trunc i32 %add to i16, !dbg !10241
  store i16 %conv5, i16* %val, align 2, !dbg !10247
  %11 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10248
  %12 = load i32, i32* %11, align 4, !dbg !10249
  %inc6 = add nsw i32 %12, 1, !dbg !10249
  store i32 %inc6, i32* %11, align 4, !dbg !10249
  %13 = load i16, i16* %val, align 2, !dbg !10250
  ret i16 %13, !dbg !10251
}

; Function Attrs: noinline nounwind uwtable
define internal void @txt_redo_read_sel(i8* %undo_buf, i32* %undo_pos, i32* %selln, i16* %selc) #0 !dbg !10252 {
entry:
  %undo_buf.addr = alloca i8*, align 8
  %undo_pos.addr = alloca i32*, align 8
  %selln.addr = alloca i32*, align 8
  %selc.addr = alloca i16*, align 8
  store i8* %undo_buf, i8** %undo_buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %undo_buf.addr, metadata !10253, metadata !DIExpression()), !dbg !10254
  store i32* %undo_pos, i32** %undo_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %undo_pos.addr, metadata !10255, metadata !DIExpression()), !dbg !10256
  store i32* %selln, i32** %selln.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %selln.addr, metadata !10257, metadata !DIExpression()), !dbg !10258
  store i16* %selc, i16** %selc.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %selc.addr, metadata !10259, metadata !DIExpression()), !dbg !10260
  %0 = load i8*, i8** %undo_buf.addr, align 8, !dbg !10261
  %1 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10262
  %call = call zeroext i16 @txt_redo_read_uint16(i8* %0, i32* %1), !dbg !10263
  %2 = load i16*, i16** %selc.addr, align 8, !dbg !10264
  store i16 %call, i16* %2, align 2, !dbg !10265
  %3 = load i8*, i8** %undo_buf.addr, align 8, !dbg !10266
  %4 = load i32*, i32** %undo_pos.addr, align 8, !dbg !10267
  %call1 = call i32 @txt_redo_read_uint32(i8* %3, i32* %4), !dbg !10268
  %5 = load i32*, i32** %selln.addr, align 8, !dbg !10269
  store i32 %call1, i32* %5, align 4, !dbg !10270
  ret void, !dbg !10271
}

declare dso_local i64 @BLI_strcpy_rlen(i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @txt_convert_tab_to_spaces(%struct.Text* %text) #0 !dbg !10272 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %sb = alloca i8*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !10273, metadata !DIExpression()), !dbg !10274
  call void @llvm.dbg.declare(metadata i8** %sb, metadata !10275, metadata !DIExpression()), !dbg !10276
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !10277
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 7, !dbg !10278
  %1 = load i32, i32* %curc, align 8, !dbg !10278
  %rem = srem i32 %1, 4, !dbg !10279
  %idxprom = sext i32 %rem to i64, !dbg !10280
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* @tab_to_spaces, i64 0, i64 %idxprom, !dbg !10280
  store i8* %arrayidx, i8** %sb, align 8, !dbg !10276
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !10281
  %3 = load i8*, i8** %sb, align 8, !dbg !10282
  call void @txt_insert_buf(%struct.Text* %2, i8* %3), !dbg !10283
  ret void, !dbg !10284
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!314, !315, !316}
!llvm.ident = !{!317}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "undoing", scope: !2, file: !3, line: 143, type: !313, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !123, globals: !296, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/blenkernel/intern/text.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !29, !43, !76, !82, !107, !112, !117}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eUserPref_Flag", file: !6, line: 569, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28}
!9 = !DIEnumerator(name: "USER_AUTOSAVE", value: 1, isUnsigned: true)
!10 = !DIEnumerator(name: "USER_SCENEGLOBAL", value: 16, isUnsigned: true)
!11 = !DIEnumerator(name: "USER_TRACKBALL", value: 32, isUnsigned: true)
!12 = !DIEnumerator(name: "USER_MAT_ON_OB", value: 256, isUnsigned: true)
!13 = !DIEnumerator(name: "USER_TOOLTIPS", value: 2048, isUnsigned: true)
!14 = !DIEnumerator(name: "USER_TWOBUTTONMOUSE", value: 4096, isUnsigned: true)
!15 = !DIEnumerator(name: "USER_NONUMPAD", value: 8192, isUnsigned: true)
!16 = !DIEnumerator(name: "USER_LMOUSESELECT", value: 16384, isUnsigned: true)
!17 = !DIEnumerator(name: "USER_FILECOMPRESS", value: 32768, isUnsigned: true)
!18 = !DIEnumerator(name: "USER_SAVE_PREVIEWS", value: 65536, isUnsigned: true)
!19 = !DIEnumerator(name: "USER_CUSTOM_RANGE", value: 131072, isUnsigned: true)
!20 = !DIEnumerator(name: "USER_ADD_EDITMODE", value: 262144, isUnsigned: true)
!21 = !DIEnumerator(name: "USER_ADD_VIEWALIGNED", value: 524288, isUnsigned: true)
!22 = !DIEnumerator(name: "USER_RELPATHS", value: 1048576, isUnsigned: true)
!23 = !DIEnumerator(name: "USER_RELEASECONFIRM", value: 2097152, isUnsigned: true)
!24 = !DIEnumerator(name: "USER_SCRIPT_AUTOEXEC_DISABLE", value: 4194304, isUnsigned: true)
!25 = !DIEnumerator(name: "USER_FILENOUI", value: 8388608, isUnsigned: true)
!26 = !DIEnumerator(name: "USER_NONEGFRAMES", value: 16777216, isUnsigned: true)
!27 = !DIEnumerator(name: "USER_TXT_TABSTOSPACES_DISABLE", value: 33554432, isUnsigned: true)
!28 = !DIEnumerator(name: "USER_TOOLTIPS_PYTHON", value: 67108864, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !30, line: 339, baseType: !7, size: 32, elements: !31)
!30 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!31 = !{!32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42}
!32 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!33 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!37 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!38 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!39 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!40 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!41 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!42 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBConstraint_Types", file: !44, line: 461, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "blender/source/blender/makesdna/DNA_constraint_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!45 = !{!46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75}
!46 = !DIEnumerator(name: "CONSTRAINT_TYPE_NULL", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "CONSTRAINT_TYPE_CHILDOF", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRACKTO", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "CONSTRAINT_TYPE_KINEMATIC", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "CONSTRAINT_TYPE_FOLLOWPATH", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "CONSTRAINT_TYPE_ROTLIMIT", value: 5, isUnsigned: true)
!52 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCLIMIT", value: 6, isUnsigned: true)
!53 = !DIEnumerator(name: "CONSTRAINT_TYPE_SIZELIMIT", value: 7, isUnsigned: true)
!54 = !DIEnumerator(name: "CONSTRAINT_TYPE_ROTLIKE", value: 8, isUnsigned: true)
!55 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCLIKE", value: 9, isUnsigned: true)
!56 = !DIEnumerator(name: "CONSTRAINT_TYPE_SIZELIKE", value: 10, isUnsigned: true)
!57 = !DIEnumerator(name: "CONSTRAINT_TYPE_PYTHON", value: 11, isUnsigned: true)
!58 = !DIEnumerator(name: "CONSTRAINT_TYPE_ACTION", value: 12, isUnsigned: true)
!59 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCKTRACK", value: 13, isUnsigned: true)
!60 = !DIEnumerator(name: "CONSTRAINT_TYPE_DISTLIMIT", value: 14, isUnsigned: true)
!61 = !DIEnumerator(name: "CONSTRAINT_TYPE_STRETCHTO", value: 15, isUnsigned: true)
!62 = !DIEnumerator(name: "CONSTRAINT_TYPE_MINMAX", value: 16, isUnsigned: true)
!63 = !DIEnumerator(name: "CONSTRAINT_TYPE_RIGIDBODYJOINT", value: 17, isUnsigned: true)
!64 = !DIEnumerator(name: "CONSTRAINT_TYPE_CLAMPTO", value: 18, isUnsigned: true)
!65 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRANSFORM", value: 19, isUnsigned: true)
!66 = !DIEnumerator(name: "CONSTRAINT_TYPE_SHRINKWRAP", value: 20, isUnsigned: true)
!67 = !DIEnumerator(name: "CONSTRAINT_TYPE_DAMPTRACK", value: 21, isUnsigned: true)
!68 = !DIEnumerator(name: "CONSTRAINT_TYPE_SPLINEIK", value: 22, isUnsigned: true)
!69 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRANSLIKE", value: 23, isUnsigned: true)
!70 = !DIEnumerator(name: "CONSTRAINT_TYPE_SAMEVOL", value: 24, isUnsigned: true)
!71 = !DIEnumerator(name: "CONSTRAINT_TYPE_PIVOT", value: 25, isUnsigned: true)
!72 = !DIEnumerator(name: "CONSTRAINT_TYPE_FOLLOWTRACK", value: 26, isUnsigned: true)
!73 = !DIEnumerator(name: "CONSTRAINT_TYPE_CAMERASOLVER", value: 27, isUnsigned: true)
!74 = !DIEnumerator(name: "CONSTRAINT_TYPE_OBJECTSOLVER", value: 28, isUnsigned: true)
!75 = !DIEnumerator(name: "NUM_CONSTRAINT_TYPES", value: 29, isUnsigned: true)
!76 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !30, line: 519, baseType: !7, size: 32, elements: !77)
!77 = !{!78, !79, !80, !81}
!78 = !DIEnumerator(name: "OB_RECALC_OB", value: 1, isUnsigned: true)
!79 = !DIEnumerator(name: "OB_RECALC_DATA", value: 2, isUnsigned: true)
!80 = !DIEnumerator(name: "OB_RECALC_TIME", value: 4, isUnsigned: true)
!81 = !DIEnumerator(name: "OB_RECALC_ALL", value: 7, isUnsigned: true)
!82 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpace_Type", file: !83, line: 1163, baseType: !7, size: 32, elements: !84)
!83 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!84 = !{!85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106}
!85 = !DIEnumerator(name: "SPACE_EMPTY", value: 0, isUnsigned: true)
!86 = !DIEnumerator(name: "SPACE_VIEW3D", value: 1, isUnsigned: true)
!87 = !DIEnumerator(name: "SPACE_IPO", value: 2, isUnsigned: true)
!88 = !DIEnumerator(name: "SPACE_OUTLINER", value: 3, isUnsigned: true)
!89 = !DIEnumerator(name: "SPACE_BUTS", value: 4, isUnsigned: true)
!90 = !DIEnumerator(name: "SPACE_FILE", value: 5, isUnsigned: true)
!91 = !DIEnumerator(name: "SPACE_IMAGE", value: 6, isUnsigned: true)
!92 = !DIEnumerator(name: "SPACE_INFO", value: 7, isUnsigned: true)
!93 = !DIEnumerator(name: "SPACE_SEQ", value: 8, isUnsigned: true)
!94 = !DIEnumerator(name: "SPACE_TEXT", value: 9, isUnsigned: true)
!95 = !DIEnumerator(name: "SPACE_IMASEL", value: 10, isUnsigned: true)
!96 = !DIEnumerator(name: "SPACE_SOUND", value: 11, isUnsigned: true)
!97 = !DIEnumerator(name: "SPACE_ACTION", value: 12, isUnsigned: true)
!98 = !DIEnumerator(name: "SPACE_NLA", value: 13, isUnsigned: true)
!99 = !DIEnumerator(name: "SPACE_SCRIPT", value: 14, isUnsigned: true)
!100 = !DIEnumerator(name: "SPACE_TIME", value: 15, isUnsigned: true)
!101 = !DIEnumerator(name: "SPACE_NODE", value: 16, isUnsigned: true)
!102 = !DIEnumerator(name: "SPACE_LOGIC", value: 17, isUnsigned: true)
!103 = !DIEnumerator(name: "SPACE_CONSOLE", value: 18, isUnsigned: true)
!104 = !DIEnumerator(name: "SPACE_USERPREF", value: 19, isUnsigned: true)
!105 = !DIEnumerator(name: "SPACE_CLIP", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "SPACEICONMAX", value: 20, isUnsigned: true)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "strCursorJumpDirection", file: !108, line: 39, baseType: !7, size: 32, elements: !109)
!108 = !DIFile(filename: "blender/source/blender/blenlib/BLI_string_cursor_utf8.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!109 = !{!110, !111}
!110 = !DIEnumerator(name: "STRCUR_DIR_PREV", value: 0, isUnsigned: true)
!111 = !DIEnumerator(name: "STRCUR_DIR_NEXT", value: 1, isUnsigned: true)
!112 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "strCursorJumpType", file: !108, line: 33, baseType: !7, size: 32, elements: !113)
!113 = !{!114, !115, !116}
!114 = !DIEnumerator(name: "STRCUR_JUMP_NONE", value: 0, isUnsigned: true)
!115 = !DIEnumerator(name: "STRCUR_JUMP_DELIM", value: 1, isUnsigned: true)
!116 = !DIEnumerator(name: "STRCUR_JUMP_ALL", value: 2, isUnsigned: true)
!117 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !118, line: 128, baseType: !119, size: 32, elements: !120)
!118 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_text.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!119 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!120 = !{!121, !122}
!121 = !DIEnumerator(name: "TXT_MOVE_LINE_UP", value: -1)
!122 = !DIEnumerator(name: "TXT_MOVE_LINE_DOWN", value: 1)
!123 = !{!124, !133, !138, !139, !226, !295, !7, !119, !134}
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 64)
!125 = !DIDerivedType(tag: DW_TAG_typedef, name: "TextLine", file: !126, line: 48, baseType: !127)
!126 = !DIFile(filename: "blender/source/blender/makesdna/DNA_text_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextLine", file: !126, line: 42, size: 320, elements: !128)
!128 = !{!129, !131, !132, !135, !136, !137}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !127, file: !126, line: 43, baseType: !130, size: 64)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 64)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !127, file: !126, line: 43, baseType: !130, size: 64, offset: 64)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !127, file: !126, line: 45, baseType: !133, size: 64, offset: 128)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 64)
!134 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !127, file: !126, line: 46, baseType: !133, size: 64, offset: 192)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !127, file: !126, line: 47, baseType: !119, size: 32, offset: 256)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "blen", scope: !127, file: !126, line: 47, baseType: !119, size: 32, offset: 288)
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 64)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "Text", file: !126, line: 66, baseType: !141)
!141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !126, line: 50, size: 1664, elements: !142)
!142 = !{!143, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !141, file: !126, line: 51, baseType: !144, size: 960)
!144 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !145, line: 130, baseType: !146)
!145 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !145, line: 117, size: 960, elements: !147)
!147 = !{!148, !149, !150, !152, !171, !175, !177, !178, !179, !180}
!148 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !146, file: !145, line: 118, baseType: !138, size: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !146, file: !145, line: 118, baseType: !138, size: 64, offset: 64)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !146, file: !145, line: 119, baseType: !151, size: 64, offset: 128)
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !146, file: !145, line: 120, baseType: !153, size: 64, offset: 192)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64)
!154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !145, line: 136, size: 17600, elements: !155)
!155 = !{!156, !157, !159, !162, !166, !167, !168}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !154, file: !145, line: 137, baseType: !144, size: 960)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !154, file: !145, line: 138, baseType: !158, size: 64, offset: 960)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !154, file: !145, line: 139, baseType: !160, size: 64, offset: 1024)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 64)
!161 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !145, line: 43, flags: DIFlagFwdDecl)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !154, file: !145, line: 140, baseType: !163, size: 8192, offset: 1088)
!163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 8192, elements: !164)
!164 = !{!165}
!165 = !DISubrange(count: 1024)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !154, file: !145, line: 141, baseType: !163, size: 8192, offset: 9280)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !154, file: !145, line: 148, baseType: !153, size: 64, offset: 17472)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !154, file: !145, line: 150, baseType: !169, size: 64, offset: 17536)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64)
!170 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !145, line: 45, flags: DIFlagFwdDecl)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !146, file: !145, line: 121, baseType: !172, size: 528, offset: 256)
!172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 528, elements: !173)
!173 = !{!174}
!174 = !DISubrange(count: 66)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !146, file: !145, line: 126, baseType: !176, size: 16, offset: 784)
!176 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !146, file: !145, line: 127, baseType: !119, size: 32, offset: 800)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !146, file: !145, line: 128, baseType: !119, size: 32, offset: 832)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !146, file: !145, line: 128, baseType: !119, size: 32, offset: 864)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !146, file: !145, line: 129, baseType: !181, size: 64, offset: 896)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64)
!182 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !145, line: 75, baseType: !183)
!183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !145, line: 62, size: 1024, elements: !184)
!184 = !{!185, !187, !188, !189, !190, !191, !195, !196, !210, !211}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !183, file: !145, line: 63, baseType: !186, size: 64)
!186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !183, file: !145, line: 63, baseType: !186, size: 64, offset: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !183, file: !145, line: 64, baseType: !134, size: 8, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !183, file: !145, line: 64, baseType: !134, size: 8, offset: 136)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !183, file: !145, line: 65, baseType: !176, size: 16, offset: 144)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !183, file: !145, line: 66, baseType: !192, size: 512, offset: 160)
!192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 512, elements: !193)
!193 = !{!194}
!194 = !DISubrange(count: 64)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !183, file: !145, line: 67, baseType: !119, size: 32, offset: 672)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !183, file: !145, line: 69, baseType: !197, size: 256, offset: 704)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !145, line: 60, baseType: !198)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !145, line: 48, size: 256, elements: !199)
!199 = !{!200, !201, !208, !209}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !198, file: !145, line: 49, baseType: !138, size: 64)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !198, file: !145, line: 58, baseType: !202, size: 128, offset: 64)
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !203, line: 71, baseType: !204)
!203 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !203, line: 69, size: 128, elements: !205)
!205 = !{!206, !207}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !204, file: !203, line: 70, baseType: !138, size: 64)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !204, file: !203, line: 70, baseType: !138, size: 64, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !198, file: !145, line: 59, baseType: !119, size: 32, offset: 192)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !198, file: !145, line: 59, baseType: !119, size: 32, offset: 224)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !183, file: !145, line: 70, baseType: !119, size: 32, offset: 960)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !183, file: !145, line: 74, baseType: !119, size: 32, offset: 992)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !141, file: !126, line: 53, baseType: !133, size: 64, offset: 960)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !141, file: !126, line: 55, baseType: !119, size: 32, offset: 1024)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "nlines", scope: !141, file: !126, line: 55, baseType: !119, size: 32, offset: 1056)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !141, file: !126, line: 57, baseType: !202, size: 128, offset: 1088)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "curl", scope: !141, file: !126, line: 58, baseType: !124, size: 64, offset: 1216)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "sell", scope: !141, file: !126, line: 58, baseType: !124, size: 64, offset: 1280)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "curc", scope: !141, file: !126, line: 59, baseType: !119, size: 32, offset: 1344)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "selc", scope: !141, file: !126, line: 59, baseType: !119, size: 32, offset: 1376)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "undo_buf", scope: !141, file: !126, line: 61, baseType: !133, size: 64, offset: 1408)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "undo_pos", scope: !141, file: !126, line: 62, baseType: !119, size: 32, offset: 1472)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "undo_len", scope: !141, file: !126, line: 62, baseType: !119, size: 32, offset: 1504)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "compiled", scope: !141, file: !126, line: 64, baseType: !138, size: 64, offset: 1536)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !141, file: !126, line: 65, baseType: !225, size: 64, offset: 1600)
!225 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceText", file: !83, line: 856, baseType: !228)
!228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceText", file: !83, line: 818, size: 5440, elements: !229)
!229 = !{!230, !246, !247, !248, !249, !250, !251, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !276, !277, !278, !279, !283, !284, !285, !286, !290, !291}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !228, file: !83, line: 819, baseType: !231, size: 64)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceLink", file: !83, line: 91, baseType: !233)
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !83, line: 85, size: 448, elements: !234)
!234 = !{!235, !237, !238, !239, !240, !242}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !233, file: !83, line: 86, baseType: !236, size: 64)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !233, file: !83, line: 86, baseType: !236, size: 64, offset: 64)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !233, file: !83, line: 87, baseType: !202, size: 128, offset: 128)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !233, file: !83, line: 88, baseType: !119, size: 32, offset: 256)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !233, file: !83, line: 89, baseType: !241, size: 32, offset: 288)
!241 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !233, file: !83, line: 90, baseType: !243, size: 128, offset: 320)
!243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 128, elements: !244)
!244 = !{!245}
!245 = !DISubrange(count: 8)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !228, file: !83, line: 819, baseType: !231, size: 64, offset: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !228, file: !83, line: 820, baseType: !202, size: 128, offset: 128)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !228, file: !83, line: 821, baseType: !119, size: 32, offset: 256)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !228, file: !83, line: 822, baseType: !241, size: 32, offset: 288)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !228, file: !83, line: 823, baseType: !243, size: 128, offset: 320)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !228, file: !83, line: 825, baseType: !252, size: 64, offset: 448)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !228, file: !83, line: 827, baseType: !119, size: 32, offset: 512)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "viewlines", scope: !228, file: !83, line: 827, baseType: !119, size: 32, offset: 544)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !228, file: !83, line: 828, baseType: !176, size: 16, offset: 576)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "menunr", scope: !228, file: !83, line: 828, baseType: !176, size: 16, offset: 592)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "lheight", scope: !228, file: !83, line: 830, baseType: !176, size: 16, offset: 608)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "cwidth", scope: !228, file: !83, line: 831, baseType: !134, size: 8, offset: 624)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "linenrs_tot", scope: !228, file: !83, line: 831, baseType: !134, size: 8, offset: 632)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !228, file: !83, line: 832, baseType: !119, size: 32, offset: 640)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "showlinenrs", scope: !228, file: !83, line: 833, baseType: !119, size: 32, offset: 672)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "tabnumber", scope: !228, file: !83, line: 834, baseType: !119, size: 32, offset: 704)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "showsyntax", scope: !228, file: !83, line: 836, baseType: !176, size: 16, offset: 736)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "line_hlight", scope: !228, file: !83, line: 837, baseType: !176, size: 16, offset: 752)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "overwrite", scope: !228, file: !83, line: 838, baseType: !176, size: 16, offset: 768)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "live_edit", scope: !228, file: !83, line: 839, baseType: !176, size: 16, offset: 784)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "pix_per_line", scope: !228, file: !83, line: 840, baseType: !241, size: 32, offset: 800)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "txtscroll", scope: !228, file: !83, line: 842, baseType: !269, size: 128, offset: 832)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !270, line: 86, size: 128, elements: !271)
!270 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!271 = !{!272, !273, !274, !275}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !269, file: !270, line: 87, baseType: !119, size: 32)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !269, file: !270, line: 87, baseType: !119, size: 32, offset: 32)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !269, file: !270, line: 88, baseType: !119, size: 32, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !269, file: !270, line: 88, baseType: !119, size: 32, offset: 96)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "txtbar", scope: !228, file: !83, line: 842, baseType: !269, size: 128, offset: 960)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "wordwrap", scope: !228, file: !83, line: 844, baseType: !119, size: 32, offset: 1088)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "doplugins", scope: !228, file: !83, line: 844, baseType: !119, size: 32, offset: 1120)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "findstr", scope: !228, file: !83, line: 846, baseType: !280, size: 2048, offset: 1152)
!280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 2048, elements: !281)
!281 = !{!282}
!282 = !DISubrange(count: 256)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "replacestr", scope: !228, file: !83, line: 847, baseType: !280, size: 2048, offset: 3200)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "margin_column", scope: !228, file: !83, line: 849, baseType: !176, size: 16, offset: 5248)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "lheight_dpi", scope: !228, file: !83, line: 850, baseType: !176, size: 16, offset: 5264)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !228, file: !83, line: 851, baseType: !287, size: 32, offset: 5280)
!287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 32, elements: !288)
!288 = !{!289}
!289 = !DISubrange(count: 4)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "drawcache", scope: !228, file: !83, line: 853, baseType: !138, size: 64, offset: 5312)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_accum", scope: !228, file: !83, line: 855, baseType: !292, size: 64, offset: 5376)
!292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 64, elements: !293)
!293 = !{!294}
!294 = !DISubrange(count: 2)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 64)
!296 = !{!297, !0, !308}
!297 = !DIGlobalVariableExpression(var: !298, expr: !DIExpression())
!298 = distinct !DIGlobalVariable(name: "back_words", scope: !299, file: !3, line: 2920, type: !303, isLocal: true, isDefinition: true)
!299 = distinct !DISubprogram(name: "txt_setcurr_tab_spaces", scope: !3, file: !3, line: 2913, type: !300, scopeLine: 2914, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!300 = !DISubroutineType(types: !301)
!301 = !{!119, !139, !119}
!302 = !{}
!303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 384, elements: !306)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !134)
!306 = !{!307}
!307 = !DISubrange(count: 6)
!308 = !DIGlobalVariableExpression(var: !309, expr: !DIExpression())
!309 = distinct !DIGlobalVariable(name: "tab_to_spaces", scope: !2, file: !3, line: 2546, type: !310, isLocal: true, isDefinition: true)
!310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 40, elements: !311)
!311 = !{!312}
!312 = !DISubrange(count: 5)
!313 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!314 = !{i32 7, !"Dwarf Version", i32 4}
!315 = !{i32 2, !"Debug Info Version", i32 3}
!316 = !{i32 1, !"wchar_size", i32 4}
!317 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!318 = distinct !DISubprogram(name: "txt_set_undostate", scope: !3, file: !3, line: 146, type: !319, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!319 = !DISubroutineType(types: !320)
!320 = !{null, !119}
!321 = !DILocalVariable(name: "u", arg: 1, scope: !318, file: !3, line: 146, type: !119)
!322 = !DILocation(line: 146, column: 28, scope: !318)
!323 = !DILocation(line: 148, column: 12, scope: !318)
!324 = !DILocation(line: 148, column: 10, scope: !318)
!325 = !DILocation(line: 149, column: 1, scope: !318)
!326 = distinct !DISubprogram(name: "txt_get_undostate", scope: !3, file: !3, line: 151, type: !327, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!327 = !DISubroutineType(types: !328)
!328 = !{!119}
!329 = !DILocation(line: 153, column: 9, scope: !326)
!330 = !DILocation(line: 153, column: 2, scope: !326)
!331 = distinct !DISubprogram(name: "BKE_text_free", scope: !3, file: !3, line: 163, type: !332, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!332 = !DISubroutineType(types: !333)
!333 = !{null, !139}
!334 = !DILocalVariable(name: "text", arg: 1, scope: !331, file: !3, line: 163, type: !139)
!335 = !DILocation(line: 163, column: 26, scope: !331)
!336 = !DILocalVariable(name: "tmp", scope: !331, file: !3, line: 165, type: !124)
!337 = !DILocation(line: 165, column: 12, scope: !331)
!338 = !DILocation(line: 167, column: 13, scope: !339)
!339 = distinct !DILexicalBlock(scope: !331, file: !3, line: 167, column: 2)
!340 = !DILocation(line: 167, column: 19, scope: !339)
!341 = !DILocation(line: 167, column: 25, scope: !339)
!342 = !DILocation(line: 167, column: 11, scope: !339)
!343 = !DILocation(line: 167, column: 7, scope: !339)
!344 = !DILocation(line: 167, column: 32, scope: !345)
!345 = distinct !DILexicalBlock(scope: !339, file: !3, line: 167, column: 2)
!346 = !DILocation(line: 167, column: 2, scope: !339)
!347 = !DILocation(line: 168, column: 3, scope: !348)
!348 = distinct !DILexicalBlock(scope: !345, file: !3, line: 167, column: 54)
!349 = !DILocation(line: 168, column: 13, scope: !348)
!350 = !DILocation(line: 168, column: 18, scope: !348)
!351 = !DILocation(line: 169, column: 7, scope: !352)
!352 = distinct !DILexicalBlock(scope: !348, file: !3, line: 169, column: 7)
!353 = !DILocation(line: 169, column: 12, scope: !352)
!354 = !DILocation(line: 169, column: 7, scope: !348)
!355 = !DILocation(line: 170, column: 4, scope: !352)
!356 = !DILocation(line: 170, column: 14, scope: !352)
!357 = !DILocation(line: 170, column: 19, scope: !352)
!358 = !DILocation(line: 171, column: 2, scope: !348)
!359 = !DILocation(line: 167, column: 43, scope: !345)
!360 = !DILocation(line: 167, column: 48, scope: !345)
!361 = !DILocation(line: 167, column: 41, scope: !345)
!362 = !DILocation(line: 167, column: 2, scope: !345)
!363 = distinct !{!363, !346, !364}
!364 = !DILocation(line: 171, column: 2, scope: !339)
!365 = !DILocation(line: 173, column: 17, scope: !331)
!366 = !DILocation(line: 173, column: 23, scope: !331)
!367 = !DILocation(line: 173, column: 2, scope: !331)
!368 = !DILocation(line: 175, column: 6, scope: !369)
!369 = distinct !DILexicalBlock(scope: !331, file: !3, line: 175, column: 6)
!370 = !DILocation(line: 175, column: 12, scope: !369)
!371 = !DILocation(line: 175, column: 6, scope: !331)
!372 = !DILocation(line: 175, column: 18, scope: !369)
!373 = !DILocation(line: 175, column: 28, scope: !369)
!374 = !DILocation(line: 175, column: 34, scope: !369)
!375 = !DILocation(line: 176, column: 2, scope: !331)
!376 = !DILocation(line: 176, column: 12, scope: !331)
!377 = !DILocation(line: 176, column: 18, scope: !331)
!378 = !DILocation(line: 180, column: 1, scope: !331)
!379 = distinct !DISubprogram(name: "BKE_text_add", scope: !3, file: !3, line: 182, type: !380, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!380 = !DISubroutineType(types: !381)
!381 = !{!252, !382, !304}
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !384, line: 104, baseType: !385)
!384 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !384, line: 53, size: 15232, elements: !386)
!386 = !{!387, !389, !390, !391, !392, !393, !394, !395, !401, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !448}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !385, file: !384, line: 54, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !385, file: !384, line: 54, baseType: !388, size: 64, offset: 64)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !385, file: !384, line: 55, baseType: !163, size: 8192, offset: 128)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !385, file: !384, line: 56, baseType: !176, size: 16, offset: 8320)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !385, file: !384, line: 56, baseType: !176, size: 16, offset: 8336)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !385, file: !384, line: 57, baseType: !176, size: 16, offset: 8352)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !385, file: !384, line: 57, baseType: !176, size: 16, offset: 8368)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !385, file: !384, line: 58, baseType: !396, size: 64, offset: 8384)
!396 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !397, line: 27, baseType: !398)
!397 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !399, line: 45, baseType: !400)
!399 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!400 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !385, file: !384, line: 59, baseType: !402, size: 128, offset: 8448)
!402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 128, elements: !403)
!403 = !{!404}
!404 = !DISubrange(count: 16)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !385, file: !384, line: 60, baseType: !176, size: 16, offset: 8576)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !385, file: !384, line: 62, baseType: !153, size: 64, offset: 8640)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !385, file: !384, line: 63, baseType: !202, size: 128, offset: 8704)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !385, file: !384, line: 64, baseType: !202, size: 128, offset: 8832)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !385, file: !384, line: 65, baseType: !202, size: 128, offset: 8960)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !385, file: !384, line: 66, baseType: !202, size: 128, offset: 9088)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !385, file: !384, line: 67, baseType: !202, size: 128, offset: 9216)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !385, file: !384, line: 68, baseType: !202, size: 128, offset: 9344)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !385, file: !384, line: 69, baseType: !202, size: 128, offset: 9472)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !385, file: !384, line: 70, baseType: !202, size: 128, offset: 9600)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !385, file: !384, line: 71, baseType: !202, size: 128, offset: 9728)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !385, file: !384, line: 72, baseType: !202, size: 128, offset: 9856)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !385, file: !384, line: 73, baseType: !202, size: 128, offset: 9984)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !385, file: !384, line: 74, baseType: !202, size: 128, offset: 10112)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !385, file: !384, line: 75, baseType: !202, size: 128, offset: 10240)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !385, file: !384, line: 76, baseType: !202, size: 128, offset: 10368)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !385, file: !384, line: 77, baseType: !202, size: 128, offset: 10496)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !385, file: !384, line: 78, baseType: !202, size: 128, offset: 10624)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !385, file: !384, line: 79, baseType: !202, size: 128, offset: 10752)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !385, file: !384, line: 80, baseType: !202, size: 128, offset: 10880)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !385, file: !384, line: 81, baseType: !202, size: 128, offset: 11008)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !385, file: !384, line: 82, baseType: !202, size: 128, offset: 11136)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !385, file: !384, line: 83, baseType: !202, size: 128, offset: 11264)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !385, file: !384, line: 84, baseType: !202, size: 128, offset: 11392)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !385, file: !384, line: 85, baseType: !202, size: 128, offset: 11520)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !385, file: !384, line: 86, baseType: !202, size: 128, offset: 11648)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !385, file: !384, line: 87, baseType: !202, size: 128, offset: 11776)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !385, file: !384, line: 88, baseType: !202, size: 128, offset: 11904)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !385, file: !384, line: 89, baseType: !202, size: 128, offset: 12032)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !385, file: !384, line: 90, baseType: !202, size: 128, offset: 12160)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !385, file: !384, line: 91, baseType: !202, size: 128, offset: 12288)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !385, file: !384, line: 92, baseType: !202, size: 128, offset: 12416)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !385, file: !384, line: 93, baseType: !202, size: 128, offset: 12544)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !385, file: !384, line: 94, baseType: !202, size: 128, offset: 12672)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !385, file: !384, line: 95, baseType: !202, size: 128, offset: 12800)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !385, file: !384, line: 96, baseType: !202, size: 128, offset: 12928)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !385, file: !384, line: 98, baseType: !280, size: 2048, offset: 13056)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !385, file: !384, line: 101, baseType: !443, size: 64, offset: 15104)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !445, line: 58, size: 32, elements: !446)
!445 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_depsgraph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!446 = !{!447}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !444, file: !445, line: 59, baseType: !119, size: 32)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !385, file: !384, line: 103, baseType: !449, size: 64, offset: 15168)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64)
!450 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !384, line: 51, flags: DIFlagFwdDecl)
!451 = !DILocalVariable(name: "bmain", arg: 1, scope: !379, file: !3, line: 182, type: !382)
!452 = !DILocation(line: 182, column: 26, scope: !379)
!453 = !DILocalVariable(name: "name", arg: 2, scope: !379, file: !3, line: 182, type: !304)
!454 = !DILocation(line: 182, column: 45, scope: !379)
!455 = !DILocalVariable(name: "ta", scope: !379, file: !3, line: 184, type: !139)
!456 = !DILocation(line: 184, column: 8, scope: !379)
!457 = !DILocalVariable(name: "tmp", scope: !379, file: !3, line: 185, type: !124)
!458 = !DILocation(line: 185, column: 12, scope: !379)
!459 = !DILocation(line: 187, column: 26, scope: !379)
!460 = !DILocation(line: 187, column: 41, scope: !379)
!461 = !DILocation(line: 187, column: 7, scope: !379)
!462 = !DILocation(line: 187, column: 5, scope: !379)
!463 = !DILocation(line: 188, column: 2, scope: !379)
!464 = !DILocation(line: 188, column: 6, scope: !379)
!465 = !DILocation(line: 188, column: 9, scope: !379)
!466 = !DILocation(line: 188, column: 12, scope: !379)
!467 = !DILocation(line: 190, column: 2, scope: !379)
!468 = !DILocation(line: 190, column: 6, scope: !379)
!469 = !DILocation(line: 190, column: 11, scope: !379)
!470 = !DILocation(line: 192, column: 17, scope: !379)
!471 = !DILocation(line: 192, column: 2, scope: !379)
!472 = !DILocation(line: 194, column: 2, scope: !379)
!473 = !DILocation(line: 194, column: 6, scope: !379)
!474 = !DILocation(line: 194, column: 13, scope: !379)
!475 = !DILocation(line: 195, column: 2, scope: !379)
!476 = !DILocation(line: 195, column: 6, scope: !379)
!477 = !DILocation(line: 195, column: 12, scope: !379)
!478 = !DILocation(line: 196, column: 9, scope: !479)
!479 = distinct !DILexicalBlock(scope: !379, file: !3, line: 196, column: 6)
!480 = !DILocation(line: 196, column: 14, scope: !479)
!481 = !DILocation(line: 196, column: 47, scope: !479)
!482 = !DILocation(line: 196, column: 6, scope: !379)
!483 = !DILocation(line: 197, column: 3, scope: !479)
!484 = !DILocation(line: 197, column: 7, scope: !479)
!485 = !DILocation(line: 197, column: 13, scope: !479)
!486 = !DILocation(line: 199, column: 22, scope: !379)
!487 = !DILocation(line: 199, column: 26, scope: !379)
!488 = !DILocation(line: 199, column: 2, scope: !379)
!489 = !DILocation(line: 201, column: 21, scope: !379)
!490 = !DILocation(line: 201, column: 8, scope: !379)
!491 = !DILocation(line: 201, column: 6, scope: !379)
!492 = !DILocation(line: 202, column: 23, scope: !379)
!493 = !DILocation(line: 202, column: 2, scope: !379)
!494 = !DILocation(line: 202, column: 7, scope: !379)
!495 = !DILocation(line: 202, column: 12, scope: !379)
!496 = !DILocation(line: 203, column: 2, scope: !379)
!497 = !DILocation(line: 203, column: 7, scope: !379)
!498 = !DILocation(line: 203, column: 14, scope: !379)
!499 = !DILocation(line: 205, column: 2, scope: !379)
!500 = !DILocation(line: 205, column: 7, scope: !379)
!501 = !DILocation(line: 205, column: 15, scope: !379)
!502 = !DILocation(line: 206, column: 2, scope: !379)
!503 = !DILocation(line: 206, column: 7, scope: !379)
!504 = !DILocation(line: 206, column: 11, scope: !379)
!505 = !DILocation(line: 208, column: 2, scope: !379)
!506 = !DILocation(line: 208, column: 7, scope: !379)
!507 = !DILocation(line: 208, column: 12, scope: !379)
!508 = !DILocation(line: 209, column: 2, scope: !379)
!509 = !DILocation(line: 209, column: 7, scope: !379)
!510 = !DILocation(line: 209, column: 12, scope: !379)
!511 = !DILocation(line: 211, column: 15, scope: !379)
!512 = !DILocation(line: 211, column: 19, scope: !379)
!513 = !DILocation(line: 211, column: 26, scope: !379)
!514 = !DILocation(line: 211, column: 2, scope: !379)
!515 = !DILocation(line: 213, column: 13, scope: !379)
!516 = !DILocation(line: 213, column: 17, scope: !379)
!517 = !DILocation(line: 213, column: 23, scope: !379)
!518 = !DILocation(line: 213, column: 2, scope: !379)
!519 = !DILocation(line: 213, column: 6, scope: !379)
!520 = !DILocation(line: 213, column: 11, scope: !379)
!521 = !DILocation(line: 214, column: 2, scope: !379)
!522 = !DILocation(line: 214, column: 6, scope: !379)
!523 = !DILocation(line: 214, column: 11, scope: !379)
!524 = !DILocation(line: 215, column: 13, scope: !379)
!525 = !DILocation(line: 215, column: 17, scope: !379)
!526 = !DILocation(line: 215, column: 23, scope: !379)
!527 = !DILocation(line: 215, column: 2, scope: !379)
!528 = !DILocation(line: 215, column: 6, scope: !379)
!529 = !DILocation(line: 215, column: 11, scope: !379)
!530 = !DILocation(line: 216, column: 2, scope: !379)
!531 = !DILocation(line: 216, column: 6, scope: !379)
!532 = !DILocation(line: 216, column: 11, scope: !379)
!533 = !DILocation(line: 218, column: 9, scope: !379)
!534 = !DILocation(line: 218, column: 2, scope: !379)
!535 = distinct !DISubprogram(name: "init_undo_text", scope: !3, file: !3, line: 156, type: !332, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!536 = !DILocalVariable(name: "text", arg: 1, scope: !535, file: !3, line: 156, type: !139)
!537 = !DILocation(line: 156, column: 34, scope: !535)
!538 = !DILocation(line: 158, column: 2, scope: !535)
!539 = !DILocation(line: 158, column: 8, scope: !535)
!540 = !DILocation(line: 158, column: 17, scope: !535)
!541 = !DILocation(line: 159, column: 2, scope: !535)
!542 = !DILocation(line: 159, column: 8, scope: !535)
!543 = !DILocation(line: 159, column: 17, scope: !535)
!544 = !DILocation(line: 160, column: 19, scope: !535)
!545 = !DILocation(line: 160, column: 31, scope: !535)
!546 = !DILocation(line: 160, column: 37, scope: !535)
!547 = !DILocation(line: 160, column: 2, scope: !535)
!548 = !DILocation(line: 160, column: 8, scope: !535)
!549 = !DILocation(line: 160, column: 17, scope: !535)
!550 = !DILocation(line: 161, column: 1, scope: !535)
!551 = distinct !DISubprogram(name: "BLI_listbase_clear", scope: !552, file: !552, line: 89, type: !553, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!552 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!553 = !DISubroutineType(types: !554)
!554 = !{null, !555}
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64)
!556 = !DILocalVariable(name: "lb", arg: 1, scope: !551, file: !552, line: 89, type: !555)
!557 = !DILocation(line: 89, column: 53, scope: !551)
!558 = !DILocation(line: 89, column: 71, scope: !551)
!559 = !DILocation(line: 89, column: 75, scope: !551)
!560 = !DILocation(line: 89, column: 80, scope: !551)
!561 = !DILocation(line: 89, column: 59, scope: !551)
!562 = !DILocation(line: 89, column: 63, scope: !551)
!563 = !DILocation(line: 89, column: 69, scope: !551)
!564 = !DILocation(line: 89, column: 93, scope: !551)
!565 = distinct !DISubprogram(name: "txt_extended_ascii_as_utf8", scope: !3, file: !3, line: 223, type: !566, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!566 = !DISubroutineType(types: !567)
!567 = !{!119, !568}
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 64)
!569 = !DILocalVariable(name: "str", arg: 1, scope: !565, file: !3, line: 223, type: !568)
!570 = !DILocation(line: 223, column: 39, scope: !565)
!571 = !DILocalVariable(name: "bad_char", scope: !565, file: !3, line: 225, type: !119)
!572 = !DILocation(line: 225, column: 6, scope: !565)
!573 = !DILocalVariable(name: "added", scope: !565, file: !3, line: 225, type: !119)
!574 = !DILocation(line: 225, column: 16, scope: !565)
!575 = !DILocalVariable(name: "i", scope: !565, file: !3, line: 225, type: !119)
!576 = !DILocation(line: 225, column: 27, scope: !565)
!577 = !DILocalVariable(name: "length", scope: !565, file: !3, line: 226, type: !119)
!578 = !DILocation(line: 226, column: 6, scope: !565)
!579 = !DILocation(line: 226, column: 23, scope: !565)
!580 = !DILocation(line: 226, column: 22, scope: !565)
!581 = !DILocation(line: 226, column: 15, scope: !565)
!582 = !DILocation(line: 228, column: 2, scope: !565)
!583 = !DILocation(line: 228, column: 11, scope: !565)
!584 = !DILocation(line: 228, column: 10, scope: !565)
!585 = !DILocation(line: 228, column: 16, scope: !565)
!586 = !DILocation(line: 228, column: 9, scope: !565)
!587 = !DILocation(line: 229, column: 42, scope: !588)
!588 = distinct !DILexicalBlock(scope: !589, file: !3, line: 229, column: 7)
!589 = distinct !DILexicalBlock(scope: !565, file: !3, line: 228, column: 20)
!590 = !DILocation(line: 229, column: 41, scope: !588)
!591 = !DILocation(line: 229, column: 48, scope: !588)
!592 = !DILocation(line: 229, column: 46, scope: !588)
!593 = !DILocation(line: 229, column: 51, scope: !588)
!594 = !DILocation(line: 229, column: 60, scope: !588)
!595 = !DILocation(line: 229, column: 58, scope: !588)
!596 = !DILocation(line: 229, column: 19, scope: !588)
!597 = !DILocation(line: 229, column: 17, scope: !588)
!598 = !DILocation(line: 229, column: 64, scope: !588)
!599 = !DILocation(line: 229, column: 7, scope: !589)
!600 = !DILocation(line: 230, column: 4, scope: !588)
!601 = !DILocation(line: 232, column: 8, scope: !589)
!602 = !DILocation(line: 233, column: 8, scope: !589)
!603 = !DILocation(line: 233, column: 17, scope: !589)
!604 = !DILocation(line: 233, column: 5, scope: !589)
!605 = distinct !{!605, !582, !606}
!606 = !DILocation(line: 234, column: 2, scope: !565)
!607 = !DILocation(line: 236, column: 6, scope: !608)
!608 = distinct !DILexicalBlock(scope: !565, file: !3, line: 236, column: 6)
!609 = !DILocation(line: 236, column: 12, scope: !608)
!610 = !DILocation(line: 236, column: 6, scope: !565)
!611 = !DILocalVariable(name: "newstr", scope: !612, file: !3, line: 237, type: !133)
!612 = distinct !DILexicalBlock(scope: !608, file: !3, line: 236, column: 18)
!613 = !DILocation(line: 237, column: 9, scope: !612)
!614 = !DILocation(line: 237, column: 18, scope: !612)
!615 = !DILocation(line: 237, column: 30, scope: !612)
!616 = !DILocation(line: 237, column: 39, scope: !612)
!617 = !DILocation(line: 237, column: 37, scope: !612)
!618 = !DILocation(line: 237, column: 45, scope: !612)
!619 = !DILocalVariable(name: "mi", scope: !612, file: !3, line: 238, type: !119)
!620 = !DILocation(line: 238, column: 7, scope: !612)
!621 = !DILocation(line: 239, column: 5, scope: !612)
!622 = !DILocation(line: 241, column: 3, scope: !612)
!623 = !DILocation(line: 241, column: 12, scope: !612)
!624 = !DILocation(line: 241, column: 11, scope: !612)
!625 = !DILocation(line: 241, column: 17, scope: !612)
!626 = !DILocation(line: 241, column: 10, scope: !612)
!627 = !DILocation(line: 242, column: 44, scope: !628)
!628 = distinct !DILexicalBlock(scope: !629, file: !3, line: 242, column: 8)
!629 = distinct !DILexicalBlock(scope: !612, file: !3, line: 241, column: 21)
!630 = !DILocation(line: 242, column: 43, scope: !628)
!631 = !DILocation(line: 242, column: 51, scope: !628)
!632 = !DILocation(line: 242, column: 49, scope: !628)
!633 = !DILocation(line: 242, column: 54, scope: !628)
!634 = !DILocation(line: 242, column: 63, scope: !628)
!635 = !DILocation(line: 242, column: 61, scope: !628)
!636 = !DILocation(line: 242, column: 20, scope: !628)
!637 = !DILocation(line: 242, column: 18, scope: !628)
!638 = !DILocation(line: 242, column: 67, scope: !628)
!639 = !DILocation(line: 242, column: 8, scope: !629)
!640 = !DILocation(line: 243, column: 12, scope: !641)
!641 = distinct !DILexicalBlock(scope: !628, file: !3, line: 242, column: 74)
!642 = !DILocation(line: 243, column: 21, scope: !641)
!643 = !DILocation(line: 243, column: 19, scope: !641)
!644 = !DILocation(line: 243, column: 27, scope: !641)
!645 = !DILocation(line: 243, column: 26, scope: !641)
!646 = !DILocation(line: 243, column: 34, scope: !641)
!647 = !DILocation(line: 243, column: 32, scope: !641)
!648 = !DILocation(line: 243, column: 37, scope: !641)
!649 = !DILocation(line: 243, column: 46, scope: !641)
!650 = !DILocation(line: 243, column: 44, scope: !641)
!651 = !DILocation(line: 243, column: 48, scope: !641)
!652 = !DILocation(line: 243, column: 5, scope: !641)
!653 = !DILocation(line: 244, column: 5, scope: !641)
!654 = !DILocation(line: 247, column: 11, scope: !629)
!655 = !DILocation(line: 247, column: 20, scope: !629)
!656 = !DILocation(line: 247, column: 18, scope: !629)
!657 = !DILocation(line: 247, column: 26, scope: !629)
!658 = !DILocation(line: 247, column: 25, scope: !629)
!659 = !DILocation(line: 247, column: 33, scope: !629)
!660 = !DILocation(line: 247, column: 31, scope: !629)
!661 = !DILocation(line: 247, column: 36, scope: !629)
!662 = !DILocation(line: 247, column: 4, scope: !629)
!663 = !DILocation(line: 249, column: 32, scope: !629)
!664 = !DILocation(line: 249, column: 31, scope: !629)
!665 = !DILocation(line: 249, column: 37, scope: !629)
!666 = !DILocation(line: 249, column: 41, scope: !629)
!667 = !DILocation(line: 249, column: 39, scope: !629)
!668 = !DILocation(line: 249, column: 30, scope: !629)
!669 = !DILocation(line: 249, column: 52, scope: !629)
!670 = !DILocation(line: 249, column: 61, scope: !629)
!671 = !DILocation(line: 249, column: 59, scope: !629)
!672 = !DILocation(line: 249, column: 66, scope: !629)
!673 = !DILocation(line: 249, column: 64, scope: !629)
!674 = !DILocation(line: 249, column: 4, scope: !629)
!675 = !DILocation(line: 250, column: 9, scope: !629)
!676 = !DILocation(line: 250, column: 18, scope: !629)
!677 = !DILocation(line: 250, column: 6, scope: !629)
!678 = !DILocation(line: 251, column: 10, scope: !629)
!679 = !DILocation(line: 251, column: 19, scope: !629)
!680 = !DILocation(line: 251, column: 7, scope: !629)
!681 = distinct !{!681, !622, !682}
!682 = !DILocation(line: 252, column: 3, scope: !612)
!683 = !DILocation(line: 253, column: 3, scope: !612)
!684 = !DILocation(line: 253, column: 10, scope: !612)
!685 = !DILocation(line: 253, column: 19, scope: !612)
!686 = !DILocation(line: 253, column: 17, scope: !612)
!687 = !DILocation(line: 253, column: 26, scope: !612)
!688 = !DILocation(line: 254, column: 3, scope: !612)
!689 = !DILocation(line: 254, column: 14, scope: !612)
!690 = !DILocation(line: 254, column: 13, scope: !612)
!691 = !DILocation(line: 255, column: 10, scope: !612)
!692 = !DILocation(line: 255, column: 4, scope: !612)
!693 = !DILocation(line: 255, column: 8, scope: !612)
!694 = !DILocation(line: 256, column: 2, scope: !612)
!695 = !DILocation(line: 258, column: 9, scope: !565)
!696 = !DILocation(line: 258, column: 2, scope: !565)
!697 = distinct !DISubprogram(name: "BKE_text_reload", scope: !3, file: !3, line: 341, type: !698, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!698 = !DISubroutineType(types: !699)
!699 = !{!119, !139}
!700 = !DILocalVariable(name: "text", arg: 1, scope: !697, file: !3, line: 341, type: !139)
!701 = !DILocation(line: 341, column: 27, scope: !697)
!702 = !DILocalVariable(name: "fp", scope: !697, file: !3, line: 343, type: !703)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !705, line: 7, baseType: !706)
!705 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !707, line: 49, size: 1728, elements: !708)
!707 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!708 = !{!709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !724, !726, !727, !728, !731, !733, !735, !739, !742, !744, !747, !750, !751, !752, !755, !756}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !706, file: !707, line: 51, baseType: !119, size: 32)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !706, file: !707, line: 54, baseType: !133, size: 64, offset: 64)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !706, file: !707, line: 55, baseType: !133, size: 64, offset: 128)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !706, file: !707, line: 56, baseType: !133, size: 64, offset: 192)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !706, file: !707, line: 57, baseType: !133, size: 64, offset: 256)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !706, file: !707, line: 58, baseType: !133, size: 64, offset: 320)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !706, file: !707, line: 59, baseType: !133, size: 64, offset: 384)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !706, file: !707, line: 60, baseType: !133, size: 64, offset: 448)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !706, file: !707, line: 61, baseType: !133, size: 64, offset: 512)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !706, file: !707, line: 64, baseType: !133, size: 64, offset: 576)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !706, file: !707, line: 65, baseType: !133, size: 64, offset: 640)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !706, file: !707, line: 66, baseType: !133, size: 64, offset: 704)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !706, file: !707, line: 68, baseType: !722, size: 64, offset: 768)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !707, line: 36, flags: DIFlagFwdDecl)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !706, file: !707, line: 70, baseType: !725, size: 64, offset: 832)
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !706, file: !707, line: 72, baseType: !119, size: 32, offset: 896)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !706, file: !707, line: 73, baseType: !119, size: 32, offset: 928)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !706, file: !707, line: 74, baseType: !729, size: 64, offset: 960)
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !399, line: 152, baseType: !730)
!730 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !706, file: !707, line: 77, baseType: !732, size: 16, offset: 1024)
!732 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !706, file: !707, line: 78, baseType: !734, size: 8, offset: 1040)
!734 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !706, file: !707, line: 79, baseType: !736, size: 8, offset: 1048)
!736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 8, elements: !737)
!737 = !{!738}
!738 = !DISubrange(count: 1)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !706, file: !707, line: 81, baseType: !740, size: 64, offset: 1088)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !707, line: 43, baseType: null)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !706, file: !707, line: 89, baseType: !743, size: 64, offset: 1152)
!743 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !399, line: 153, baseType: !730)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !706, file: !707, line: 91, baseType: !745, size: 64, offset: 1216)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 64)
!746 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !707, line: 37, flags: DIFlagFwdDecl)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !706, file: !707, line: 92, baseType: !748, size: 64, offset: 1280)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!749 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !707, line: 38, flags: DIFlagFwdDecl)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !706, file: !707, line: 93, baseType: !725, size: 64, offset: 1344)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !706, file: !707, line: 94, baseType: !138, size: 64, offset: 1408)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !706, file: !707, line: 95, baseType: !753, size: 64, offset: 1472)
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !754, line: 46, baseType: !400)
!754 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!755 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !706, file: !707, line: 96, baseType: !119, size: 32, offset: 1536)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !706, file: !707, line: 98, baseType: !757, size: 160, offset: 1568)
!757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 160, elements: !758)
!758 = !{!759}
!759 = !DISubrange(count: 20)
!760 = !DILocation(line: 343, column: 8, scope: !697)
!761 = !DILocalVariable(name: "len", scope: !697, file: !3, line: 344, type: !119)
!762 = !DILocation(line: 344, column: 6, scope: !697)
!763 = !DILocalVariable(name: "buffer", scope: !697, file: !3, line: 345, type: !764)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!765 = !DILocation(line: 345, column: 17, scope: !697)
!766 = !DILocalVariable(name: "tmp", scope: !697, file: !3, line: 346, type: !124)
!767 = !DILocation(line: 346, column: 12, scope: !697)
!768 = !DILocalVariable(name: "str", scope: !697, file: !3, line: 347, type: !163)
!769 = !DILocation(line: 347, column: 7, scope: !697)
!770 = !DILocalVariable(name: "st", scope: !697, file: !3, line: 348, type: !771)
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_stat_t", file: !772, line: 73, baseType: !773)
!772 = !DIFile(filename: "blender/source/blender/blenlib/BLI_fileops.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !774, line: 46, size: 1152, elements: !775)
!774 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!775 = !{!776, !778, !780, !782, !784, !786, !788, !789, !790, !791, !793, !795, !803, !804, !805}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !773, file: !774, line: 48, baseType: !777, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !399, line: 145, baseType: !400)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !773, file: !774, line: 53, baseType: !779, size: 64, offset: 64)
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !399, line: 148, baseType: !400)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !773, file: !774, line: 61, baseType: !781, size: 64, offset: 128)
!781 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !399, line: 151, baseType: !400)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !773, file: !774, line: 62, baseType: !783, size: 32, offset: 192)
!783 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !399, line: 150, baseType: !7)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !773, file: !774, line: 64, baseType: !785, size: 32, offset: 224)
!785 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !399, line: 146, baseType: !7)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !773, file: !774, line: 65, baseType: !787, size: 32, offset: 256)
!787 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !399, line: 147, baseType: !7)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !773, file: !774, line: 67, baseType: !119, size: 32, offset: 288)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !773, file: !774, line: 69, baseType: !777, size: 64, offset: 320)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !773, file: !774, line: 74, baseType: !729, size: 64, offset: 384)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !773, file: !774, line: 78, baseType: !792, size: 64, offset: 448)
!792 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !399, line: 174, baseType: !730)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !773, file: !774, line: 80, baseType: !794, size: 64, offset: 512)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !399, line: 179, baseType: !730)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !773, file: !774, line: 91, baseType: !796, size: 128, offset: 576)
!796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !797, line: 10, size: 128, elements: !798)
!797 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!798 = !{!799, !801}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !796, file: !797, line: 12, baseType: !800, size: 64)
!800 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !399, line: 160, baseType: !730)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !796, file: !797, line: 16, baseType: !802, size: 64, offset: 64)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !399, line: 196, baseType: !730)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !773, file: !774, line: 92, baseType: !796, size: 128, offset: 704)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !773, file: !774, line: 93, baseType: !796, size: 128, offset: 832)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !773, file: !774, line: 106, baseType: !806, size: 192, offset: 960)
!806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !802, size: 192, elements: !807)
!807 = !{!808}
!808 = !DISubrange(count: 3)
!809 = !DILocation(line: 348, column: 13, scope: !697)
!810 = !DILocation(line: 350, column: 7, scope: !811)
!811 = distinct !DILexicalBlock(scope: !697, file: !3, line: 350, column: 6)
!812 = !DILocation(line: 350, column: 13, scope: !811)
!813 = !DILocation(line: 350, column: 6, scope: !697)
!814 = !DILocation(line: 350, column: 19, scope: !811)
!815 = !DILocation(line: 352, column: 14, scope: !697)
!816 = !DILocation(line: 352, column: 19, scope: !697)
!817 = !DILocation(line: 352, column: 25, scope: !697)
!818 = !DILocation(line: 352, column: 2, scope: !697)
!819 = !DILocation(line: 353, column: 15, scope: !697)
!820 = !DILocation(line: 353, column: 22, scope: !697)
!821 = !DILocation(line: 353, column: 28, scope: !697)
!822 = !DILocation(line: 353, column: 20, scope: !697)
!823 = !DILocation(line: 353, column: 2, scope: !697)
!824 = !DILocation(line: 355, column: 17, scope: !697)
!825 = !DILocation(line: 355, column: 7, scope: !697)
!826 = !DILocation(line: 355, column: 5, scope: !697)
!827 = !DILocation(line: 356, column: 6, scope: !828)
!828 = distinct !DILexicalBlock(scope: !697, file: !3, line: 356, column: 6)
!829 = !DILocation(line: 356, column: 9, scope: !828)
!830 = !DILocation(line: 356, column: 6, scope: !697)
!831 = !DILocation(line: 356, column: 18, scope: !828)
!832 = !DILocation(line: 360, column: 13, scope: !833)
!833 = distinct !DILexicalBlock(scope: !697, file: !3, line: 360, column: 2)
!834 = !DILocation(line: 360, column: 19, scope: !833)
!835 = !DILocation(line: 360, column: 25, scope: !833)
!836 = !DILocation(line: 360, column: 11, scope: !833)
!837 = !DILocation(line: 360, column: 7, scope: !833)
!838 = !DILocation(line: 360, column: 32, scope: !839)
!839 = distinct !DILexicalBlock(scope: !833, file: !3, line: 360, column: 2)
!840 = !DILocation(line: 360, column: 2, scope: !833)
!841 = !DILocation(line: 361, column: 3, scope: !842)
!842 = distinct !DILexicalBlock(scope: !839, file: !3, line: 360, column: 54)
!843 = !DILocation(line: 361, column: 13, scope: !842)
!844 = !DILocation(line: 361, column: 18, scope: !842)
!845 = !DILocation(line: 362, column: 7, scope: !846)
!846 = distinct !DILexicalBlock(scope: !842, file: !3, line: 362, column: 7)
!847 = !DILocation(line: 362, column: 12, scope: !846)
!848 = !DILocation(line: 362, column: 7, scope: !842)
!849 = !DILocation(line: 362, column: 20, scope: !846)
!850 = !DILocation(line: 362, column: 30, scope: !846)
!851 = !DILocation(line: 362, column: 35, scope: !846)
!852 = !DILocation(line: 363, column: 2, scope: !842)
!853 = !DILocation(line: 360, column: 43, scope: !839)
!854 = !DILocation(line: 360, column: 48, scope: !839)
!855 = !DILocation(line: 360, column: 41, scope: !839)
!856 = !DILocation(line: 360, column: 2, scope: !839)
!857 = distinct !{!857, !840, !858}
!858 = !DILocation(line: 363, column: 2, scope: !833)
!859 = !DILocation(line: 365, column: 17, scope: !697)
!860 = !DILocation(line: 365, column: 23, scope: !697)
!861 = !DILocation(line: 365, column: 2, scope: !697)
!862 = !DILocation(line: 367, column: 22, scope: !697)
!863 = !DILocation(line: 367, column: 28, scope: !697)
!864 = !DILocation(line: 367, column: 2, scope: !697)
!865 = !DILocation(line: 368, column: 15, scope: !697)
!866 = !DILocation(line: 368, column: 21, scope: !697)
!867 = !DILocation(line: 368, column: 26, scope: !697)
!868 = !DILocation(line: 368, column: 2, scope: !697)
!869 = !DILocation(line: 368, column: 8, scope: !697)
!870 = !DILocation(line: 368, column: 13, scope: !697)
!871 = !DILocation(line: 371, column: 2, scope: !697)
!872 = !DILocation(line: 371, column: 12, scope: !697)
!873 = !DILocation(line: 371, column: 18, scope: !697)
!874 = !DILocation(line: 372, column: 17, scope: !697)
!875 = !DILocation(line: 372, column: 2, scope: !697)
!876 = !DILocation(line: 374, column: 8, scope: !697)
!877 = !DILocation(line: 374, column: 2, scope: !697)
!878 = !DILocation(line: 375, column: 14, scope: !697)
!879 = !DILocation(line: 375, column: 8, scope: !697)
!880 = !DILocation(line: 375, column: 6, scope: !697)
!881 = !DILocation(line: 376, column: 8, scope: !697)
!882 = !DILocation(line: 376, column: 2, scope: !697)
!883 = !DILocation(line: 379, column: 11, scope: !697)
!884 = !DILocation(line: 379, column: 23, scope: !697)
!885 = !DILocation(line: 379, column: 9, scope: !697)
!886 = !DILocation(line: 382, column: 14, scope: !697)
!887 = !DILocation(line: 382, column: 25, scope: !697)
!888 = !DILocation(line: 382, column: 30, scope: !697)
!889 = !DILocation(line: 382, column: 8, scope: !697)
!890 = !DILocation(line: 382, column: 6, scope: !697)
!891 = !DILocation(line: 384, column: 9, scope: !697)
!892 = !DILocation(line: 384, column: 2, scope: !697)
!893 = !DILocation(line: 386, column: 11, scope: !697)
!894 = !DILocation(line: 386, column: 2, scope: !697)
!895 = !DILocation(line: 387, column: 19, scope: !697)
!896 = !DILocation(line: 387, column: 16, scope: !697)
!897 = !DILocation(line: 387, column: 2, scope: !697)
!898 = !DILocation(line: 387, column: 8, scope: !697)
!899 = !DILocation(line: 387, column: 14, scope: !697)
!900 = !DILocation(line: 389, column: 16, scope: !697)
!901 = !DILocation(line: 389, column: 22, scope: !697)
!902 = !DILocation(line: 389, column: 30, scope: !697)
!903 = !DILocation(line: 389, column: 2, scope: !697)
!904 = !DILocation(line: 391, column: 2, scope: !697)
!905 = !DILocation(line: 391, column: 12, scope: !697)
!906 = !DILocation(line: 392, column: 2, scope: !697)
!907 = !DILocation(line: 393, column: 1, scope: !697)
!908 = distinct !DISubprogram(name: "text_from_buf", scope: !3, file: !3, line: 282, type: !909, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!909 = !DISubroutineType(types: !910)
!910 = !{null, !139, !911, !913}
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !313)
!913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!914 = !DILocalVariable(name: "text", arg: 1, scope: !908, file: !3, line: 282, type: !139)
!915 = !DILocation(line: 282, column: 33, scope: !908)
!916 = !DILocalVariable(name: "buffer", arg: 2, scope: !908, file: !3, line: 282, type: !911)
!917 = !DILocation(line: 282, column: 60, scope: !908)
!918 = !DILocalVariable(name: "len", arg: 3, scope: !908, file: !3, line: 282, type: !913)
!919 = !DILocation(line: 282, column: 78, scope: !908)
!920 = !DILocalVariable(name: "i", scope: !908, file: !3, line: 284, type: !119)
!921 = !DILocation(line: 284, column: 6, scope: !908)
!922 = !DILocalVariable(name: "llen", scope: !908, file: !3, line: 284, type: !119)
!923 = !DILocation(line: 284, column: 9, scope: !908)
!924 = !DILocation(line: 288, column: 2, scope: !908)
!925 = !DILocation(line: 288, column: 8, scope: !908)
!926 = !DILocation(line: 288, column: 15, scope: !908)
!927 = !DILocation(line: 289, column: 7, scope: !908)
!928 = !DILocation(line: 290, column: 9, scope: !929)
!929 = distinct !DILexicalBlock(scope: !908, file: !3, line: 290, column: 2)
!930 = !DILocation(line: 290, column: 7, scope: !929)
!931 = !DILocation(line: 290, column: 14, scope: !932)
!932 = distinct !DILexicalBlock(scope: !929, file: !3, line: 290, column: 2)
!933 = !DILocation(line: 290, column: 18, scope: !932)
!934 = !DILocation(line: 290, column: 16, scope: !932)
!935 = !DILocation(line: 290, column: 2, scope: !929)
!936 = !DILocation(line: 291, column: 7, scope: !937)
!937 = distinct !DILexicalBlock(scope: !938, file: !3, line: 291, column: 7)
!938 = distinct !DILexicalBlock(scope: !932, file: !3, line: 290, column: 28)
!939 = !DILocation(line: 291, column: 14, scope: !937)
!940 = !DILocation(line: 291, column: 17, scope: !937)
!941 = !DILocation(line: 291, column: 7, scope: !938)
!942 = !DILocalVariable(name: "tmp", scope: !943, file: !3, line: 292, type: !124)
!943 = distinct !DILexicalBlock(scope: !937, file: !3, line: 291, column: 26)
!944 = !DILocation(line: 292, column: 14, scope: !943)
!945 = !DILocation(line: 294, column: 23, scope: !943)
!946 = !DILocation(line: 294, column: 10, scope: !943)
!947 = !DILocation(line: 294, column: 8, scope: !943)
!948 = !DILocation(line: 295, column: 25, scope: !943)
!949 = !DILocation(line: 295, column: 37, scope: !943)
!950 = !DILocation(line: 295, column: 42, scope: !943)
!951 = !DILocation(line: 295, column: 4, scope: !943)
!952 = !DILocation(line: 295, column: 9, scope: !943)
!953 = !DILocation(line: 295, column: 14, scope: !943)
!954 = !DILocation(line: 296, column: 4, scope: !943)
!955 = !DILocation(line: 296, column: 9, scope: !943)
!956 = !DILocation(line: 296, column: 16, scope: !943)
!957 = !DILocation(line: 298, column: 8, scope: !958)
!958 = distinct !DILexicalBlock(scope: !943, file: !3, line: 298, column: 8)
!959 = !DILocation(line: 298, column: 8, scope: !943)
!960 = !DILocation(line: 298, column: 21, scope: !958)
!961 = !DILocation(line: 298, column: 26, scope: !958)
!962 = !DILocation(line: 298, column: 33, scope: !958)
!963 = !DILocation(line: 298, column: 40, scope: !958)
!964 = !DILocation(line: 298, column: 44, scope: !958)
!965 = !DILocation(line: 298, column: 42, scope: !958)
!966 = !DILocation(line: 298, column: 51, scope: !958)
!967 = !DILocation(line: 298, column: 14, scope: !958)
!968 = !DILocation(line: 299, column: 4, scope: !943)
!969 = !DILocation(line: 299, column: 9, scope: !943)
!970 = !DILocation(line: 299, column: 14, scope: !943)
!971 = !DILocation(line: 299, column: 20, scope: !943)
!972 = !DILocation(line: 300, column: 15, scope: !943)
!973 = !DILocation(line: 300, column: 4, scope: !943)
!974 = !DILocation(line: 300, column: 9, scope: !943)
!975 = !DILocation(line: 300, column: 13, scope: !943)
!976 = !DILocation(line: 302, column: 21, scope: !943)
!977 = !DILocation(line: 302, column: 4, scope: !943)
!978 = !DILocation(line: 304, column: 17, scope: !943)
!979 = !DILocation(line: 304, column: 23, scope: !943)
!980 = !DILocation(line: 304, column: 30, scope: !943)
!981 = !DILocation(line: 304, column: 4, scope: !943)
!982 = !DILocation(line: 305, column: 4, scope: !943)
!983 = !DILocation(line: 305, column: 10, scope: !943)
!984 = !DILocation(line: 305, column: 16, scope: !943)
!985 = !DILocation(line: 307, column: 9, scope: !943)
!986 = !DILocation(line: 308, column: 4, scope: !943)
!987 = !DILocation(line: 310, column: 7, scope: !938)
!988 = !DILocation(line: 311, column: 2, scope: !938)
!989 = !DILocation(line: 290, column: 24, scope: !932)
!990 = !DILocation(line: 290, column: 2, scope: !932)
!991 = distinct !{!991, !935, !992}
!992 = !DILocation(line: 311, column: 2, scope: !929)
!993 = !DILocation(line: 319, column: 6, scope: !994)
!994 = distinct !DILexicalBlock(scope: !908, file: !3, line: 319, column: 6)
!995 = !DILocation(line: 319, column: 11, scope: !994)
!996 = !DILocation(line: 319, column: 16, scope: !994)
!997 = !DILocation(line: 319, column: 19, scope: !994)
!998 = !DILocation(line: 319, column: 25, scope: !994)
!999 = !DILocation(line: 319, column: 32, scope: !994)
!1000 = !DILocation(line: 319, column: 37, scope: !994)
!1001 = !DILocation(line: 319, column: 40, scope: !994)
!1002 = !DILocation(line: 319, column: 47, scope: !994)
!1003 = !DILocation(line: 319, column: 51, scope: !994)
!1004 = !DILocation(line: 319, column: 56, scope: !994)
!1005 = !DILocation(line: 319, column: 6, scope: !908)
!1006 = !DILocalVariable(name: "tmp", scope: !1007, file: !3, line: 320, type: !124)
!1007 = distinct !DILexicalBlock(scope: !994, file: !3, line: 319, column: 65)
!1008 = !DILocation(line: 320, column: 13, scope: !1007)
!1009 = !DILocation(line: 322, column: 22, scope: !1007)
!1010 = !DILocation(line: 322, column: 9, scope: !1007)
!1011 = !DILocation(line: 322, column: 7, scope: !1007)
!1012 = !DILocation(line: 323, column: 24, scope: !1007)
!1013 = !DILocation(line: 323, column: 36, scope: !1007)
!1014 = !DILocation(line: 323, column: 41, scope: !1007)
!1015 = !DILocation(line: 323, column: 3, scope: !1007)
!1016 = !DILocation(line: 323, column: 8, scope: !1007)
!1017 = !DILocation(line: 323, column: 13, scope: !1007)
!1018 = !DILocation(line: 324, column: 3, scope: !1007)
!1019 = !DILocation(line: 324, column: 8, scope: !1007)
!1020 = !DILocation(line: 324, column: 15, scope: !1007)
!1021 = !DILocation(line: 326, column: 7, scope: !1022)
!1022 = distinct !DILexicalBlock(scope: !1007, file: !3, line: 326, column: 7)
!1023 = !DILocation(line: 326, column: 7, scope: !1007)
!1024 = !DILocation(line: 326, column: 20, scope: !1022)
!1025 = !DILocation(line: 326, column: 25, scope: !1022)
!1026 = !DILocation(line: 326, column: 32, scope: !1022)
!1027 = !DILocation(line: 326, column: 39, scope: !1022)
!1028 = !DILocation(line: 326, column: 43, scope: !1022)
!1029 = !DILocation(line: 326, column: 41, scope: !1022)
!1030 = !DILocation(line: 326, column: 50, scope: !1022)
!1031 = !DILocation(line: 326, column: 13, scope: !1022)
!1032 = !DILocation(line: 328, column: 3, scope: !1007)
!1033 = !DILocation(line: 328, column: 8, scope: !1007)
!1034 = !DILocation(line: 328, column: 13, scope: !1007)
!1035 = !DILocation(line: 328, column: 19, scope: !1007)
!1036 = !DILocation(line: 329, column: 14, scope: !1007)
!1037 = !DILocation(line: 329, column: 3, scope: !1007)
!1038 = !DILocation(line: 329, column: 8, scope: !1007)
!1039 = !DILocation(line: 329, column: 12, scope: !1007)
!1040 = !DILocation(line: 331, column: 20, scope: !1007)
!1041 = !DILocation(line: 331, column: 3, scope: !1007)
!1042 = !DILocation(line: 333, column: 16, scope: !1007)
!1043 = !DILocation(line: 333, column: 22, scope: !1007)
!1044 = !DILocation(line: 333, column: 29, scope: !1007)
!1045 = !DILocation(line: 333, column: 3, scope: !1007)
!1046 = !DILocation(line: 334, column: 3, scope: !1007)
!1047 = !DILocation(line: 334, column: 9, scope: !1007)
!1048 = !DILocation(line: 334, column: 15, scope: !1007)
!1049 = !DILocation(line: 335, column: 2, scope: !1007)
!1050 = !DILocation(line: 337, column: 28, scope: !908)
!1051 = !DILocation(line: 337, column: 34, scope: !908)
!1052 = !DILocation(line: 337, column: 40, scope: !908)
!1053 = !DILocation(line: 337, column: 15, scope: !908)
!1054 = !DILocation(line: 337, column: 21, scope: !908)
!1055 = !DILocation(line: 337, column: 26, scope: !908)
!1056 = !DILocation(line: 337, column: 2, scope: !908)
!1057 = !DILocation(line: 337, column: 8, scope: !908)
!1058 = !DILocation(line: 337, column: 13, scope: !908)
!1059 = !DILocation(line: 338, column: 15, scope: !908)
!1060 = !DILocation(line: 338, column: 21, scope: !908)
!1061 = !DILocation(line: 338, column: 26, scope: !908)
!1062 = !DILocation(line: 338, column: 2, scope: !908)
!1063 = !DILocation(line: 338, column: 8, scope: !908)
!1064 = !DILocation(line: 338, column: 13, scope: !908)
!1065 = !DILocation(line: 339, column: 1, scope: !908)
!1066 = distinct !DISubprogram(name: "BKE_text_load_ex", scope: !3, file: !3, line: 395, type: !1067, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!252, !382, !304, !304, !912}
!1069 = !DILocalVariable(name: "bmain", arg: 1, scope: !1066, file: !3, line: 395, type: !382)
!1070 = !DILocation(line: 395, column: 30, scope: !1066)
!1071 = !DILocalVariable(name: "file", arg: 2, scope: !1066, file: !3, line: 395, type: !304)
!1072 = !DILocation(line: 395, column: 49, scope: !1066)
!1073 = !DILocalVariable(name: "relpath", arg: 3, scope: !1066, file: !3, line: 395, type: !304)
!1074 = !DILocation(line: 395, column: 67, scope: !1066)
!1075 = !DILocalVariable(name: "is_internal", arg: 4, scope: !1066, file: !3, line: 395, type: !912)
!1076 = !DILocation(line: 395, column: 87, scope: !1066)
!1077 = !DILocalVariable(name: "fp", scope: !1066, file: !3, line: 397, type: !703)
!1078 = !DILocation(line: 397, column: 8, scope: !1066)
!1079 = !DILocalVariable(name: "len", scope: !1066, file: !3, line: 398, type: !119)
!1080 = !DILocation(line: 398, column: 6, scope: !1066)
!1081 = !DILocalVariable(name: "buffer", scope: !1066, file: !3, line: 399, type: !764)
!1082 = !DILocation(line: 399, column: 17, scope: !1066)
!1083 = !DILocalVariable(name: "ta", scope: !1066, file: !3, line: 400, type: !139)
!1084 = !DILocation(line: 400, column: 8, scope: !1066)
!1085 = !DILocalVariable(name: "str", scope: !1066, file: !3, line: 401, type: !163)
!1086 = !DILocation(line: 401, column: 7, scope: !1066)
!1087 = !DILocalVariable(name: "st", scope: !1066, file: !3, line: 402, type: !771)
!1088 = !DILocation(line: 402, column: 13, scope: !1066)
!1089 = !DILocation(line: 404, column: 14, scope: !1066)
!1090 = !DILocation(line: 404, column: 19, scope: !1066)
!1091 = !DILocation(line: 404, column: 2, scope: !1066)
!1092 = !DILocation(line: 405, column: 6, scope: !1093)
!1093 = distinct !DILexicalBlock(scope: !1066, file: !3, line: 405, column: 6)
!1094 = !DILocation(line: 405, column: 6, scope: !1066)
!1095 = !DILocation(line: 406, column: 16, scope: !1093)
!1096 = !DILocation(line: 406, column: 21, scope: !1093)
!1097 = !DILocation(line: 406, column: 3, scope: !1093)
!1098 = !DILocation(line: 408, column: 17, scope: !1066)
!1099 = !DILocation(line: 408, column: 7, scope: !1066)
!1100 = !DILocation(line: 408, column: 5, scope: !1066)
!1101 = !DILocation(line: 409, column: 6, scope: !1102)
!1102 = distinct !DILexicalBlock(scope: !1066, file: !3, line: 409, column: 6)
!1103 = !DILocation(line: 409, column: 9, scope: !1102)
!1104 = !DILocation(line: 409, column: 6, scope: !1066)
!1105 = !DILocation(line: 409, column: 18, scope: !1102)
!1106 = !DILocation(line: 411, column: 26, scope: !1066)
!1107 = !DILocation(line: 411, column: 59, scope: !1066)
!1108 = !DILocation(line: 411, column: 41, scope: !1066)
!1109 = !DILocation(line: 411, column: 7, scope: !1066)
!1110 = !DILocation(line: 411, column: 5, scope: !1066)
!1111 = !DILocation(line: 412, column: 2, scope: !1066)
!1112 = !DILocation(line: 412, column: 6, scope: !1066)
!1113 = !DILocation(line: 412, column: 9, scope: !1066)
!1114 = !DILocation(line: 412, column: 12, scope: !1066)
!1115 = !DILocation(line: 414, column: 22, scope: !1066)
!1116 = !DILocation(line: 414, column: 26, scope: !1066)
!1117 = !DILocation(line: 414, column: 2, scope: !1066)
!1118 = !DILocation(line: 415, column: 13, scope: !1066)
!1119 = !DILocation(line: 415, column: 17, scope: !1066)
!1120 = !DILocation(line: 415, column: 22, scope: !1066)
!1121 = !DILocation(line: 415, column: 2, scope: !1066)
!1122 = !DILocation(line: 415, column: 6, scope: !1066)
!1123 = !DILocation(line: 415, column: 11, scope: !1066)
!1124 = !DILocation(line: 417, column: 9, scope: !1125)
!1125 = distinct !DILexicalBlock(scope: !1066, file: !3, line: 417, column: 6)
!1126 = !DILocation(line: 417, column: 14, scope: !1125)
!1127 = !DILocation(line: 417, column: 47, scope: !1125)
!1128 = !DILocation(line: 417, column: 6, scope: !1066)
!1129 = !DILocation(line: 418, column: 3, scope: !1125)
!1130 = !DILocation(line: 418, column: 7, scope: !1125)
!1131 = !DILocation(line: 418, column: 13, scope: !1125)
!1132 = !DILocation(line: 420, column: 6, scope: !1133)
!1133 = distinct !DILexicalBlock(scope: !1066, file: !3, line: 420, column: 6)
!1134 = !DILocation(line: 420, column: 18, scope: !1133)
!1135 = !DILocation(line: 420, column: 6, scope: !1066)
!1136 = !DILocation(line: 421, column: 14, scope: !1137)
!1137 = distinct !DILexicalBlock(scope: !1133, file: !3, line: 420, column: 28)
!1138 = !DILocation(line: 421, column: 33, scope: !1137)
!1139 = !DILocation(line: 421, column: 26, scope: !1137)
!1140 = !DILocation(line: 421, column: 39, scope: !1137)
!1141 = !DILocation(line: 421, column: 3, scope: !1137)
!1142 = !DILocation(line: 421, column: 7, scope: !1137)
!1143 = !DILocation(line: 421, column: 12, scope: !1137)
!1144 = !DILocation(line: 422, column: 10, scope: !1137)
!1145 = !DILocation(line: 422, column: 14, scope: !1137)
!1146 = !DILocation(line: 422, column: 20, scope: !1137)
!1147 = !DILocation(line: 422, column: 3, scope: !1137)
!1148 = !DILocation(line: 423, column: 2, scope: !1137)
!1149 = !DILocation(line: 425, column: 3, scope: !1150)
!1150 = distinct !DILexicalBlock(scope: !1133, file: !3, line: 424, column: 7)
!1151 = !DILocation(line: 425, column: 7, scope: !1150)
!1152 = !DILocation(line: 425, column: 13, scope: !1150)
!1153 = !DILocation(line: 429, column: 17, scope: !1066)
!1154 = !DILocation(line: 429, column: 2, scope: !1066)
!1155 = !DILocation(line: 431, column: 8, scope: !1066)
!1156 = !DILocation(line: 431, column: 2, scope: !1066)
!1157 = !DILocation(line: 432, column: 14, scope: !1066)
!1158 = !DILocation(line: 432, column: 8, scope: !1066)
!1159 = !DILocation(line: 432, column: 6, scope: !1066)
!1160 = !DILocation(line: 433, column: 8, scope: !1066)
!1161 = !DILocation(line: 433, column: 2, scope: !1066)
!1162 = !DILocation(line: 435, column: 11, scope: !1066)
!1163 = !DILocation(line: 435, column: 23, scope: !1066)
!1164 = !DILocation(line: 435, column: 9, scope: !1066)
!1165 = !DILocation(line: 438, column: 14, scope: !1066)
!1166 = !DILocation(line: 438, column: 25, scope: !1066)
!1167 = !DILocation(line: 438, column: 30, scope: !1066)
!1168 = !DILocation(line: 438, column: 8, scope: !1066)
!1169 = !DILocation(line: 438, column: 6, scope: !1066)
!1170 = !DILocation(line: 440, column: 9, scope: !1066)
!1171 = !DILocation(line: 440, column: 2, scope: !1066)
!1172 = !DILocation(line: 442, column: 11, scope: !1066)
!1173 = !DILocation(line: 442, column: 2, scope: !1066)
!1174 = !DILocation(line: 443, column: 17, scope: !1066)
!1175 = !DILocation(line: 443, column: 14, scope: !1066)
!1176 = !DILocation(line: 443, column: 2, scope: !1066)
!1177 = !DILocation(line: 443, column: 6, scope: !1066)
!1178 = !DILocation(line: 443, column: 12, scope: !1066)
!1179 = !DILocation(line: 445, column: 16, scope: !1066)
!1180 = !DILocation(line: 445, column: 20, scope: !1066)
!1181 = !DILocation(line: 445, column: 28, scope: !1066)
!1182 = !DILocation(line: 445, column: 2, scope: !1066)
!1183 = !DILocation(line: 447, column: 2, scope: !1066)
!1184 = !DILocation(line: 447, column: 12, scope: !1066)
!1185 = !DILocation(line: 449, column: 9, scope: !1066)
!1186 = !DILocation(line: 449, column: 2, scope: !1066)
!1187 = !DILocation(line: 450, column: 1, scope: !1066)
!1188 = distinct !DISubprogram(name: "BKE_text_load", scope: !3, file: !3, line: 452, type: !1189, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!252, !382, !304, !304}
!1191 = !DILocalVariable(name: "bmain", arg: 1, scope: !1188, file: !3, line: 452, type: !382)
!1192 = !DILocation(line: 452, column: 27, scope: !1188)
!1193 = !DILocalVariable(name: "file", arg: 2, scope: !1188, file: !3, line: 452, type: !304)
!1194 = !DILocation(line: 452, column: 46, scope: !1188)
!1195 = !DILocalVariable(name: "relpath", arg: 3, scope: !1188, file: !3, line: 452, type: !304)
!1196 = !DILocation(line: 452, column: 64, scope: !1188)
!1197 = !DILocation(line: 454, column: 26, scope: !1188)
!1198 = !DILocation(line: 454, column: 33, scope: !1188)
!1199 = !DILocation(line: 454, column: 39, scope: !1188)
!1200 = !DILocation(line: 454, column: 9, scope: !1188)
!1201 = !DILocation(line: 454, column: 2, scope: !1188)
!1202 = distinct !DISubprogram(name: "BKE_text_copy", scope: !3, file: !3, line: 457, type: !1203, scopeLine: 458, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!1203 = !DISubroutineType(types: !1204)
!1204 = !{!252, !139}
!1205 = !DILocalVariable(name: "ta", arg: 1, scope: !1202, file: !3, line: 457, type: !139)
!1206 = !DILocation(line: 457, column: 27, scope: !1202)
!1207 = !DILocalVariable(name: "tan", scope: !1202, file: !3, line: 459, type: !139)
!1208 = !DILocation(line: 459, column: 8, scope: !1202)
!1209 = !DILocalVariable(name: "line", scope: !1202, file: !3, line: 460, type: !124)
!1210 = !DILocation(line: 460, column: 12, scope: !1202)
!1211 = !DILocalVariable(name: "tmp", scope: !1202, file: !3, line: 460, type: !124)
!1212 = !DILocation(line: 460, column: 19, scope: !1202)
!1213 = !DILocation(line: 462, column: 27, scope: !1202)
!1214 = !DILocation(line: 462, column: 31, scope: !1202)
!1215 = !DILocation(line: 462, column: 8, scope: !1202)
!1216 = !DILocation(line: 462, column: 6, scope: !1202)
!1217 = !DILocation(line: 465, column: 6, scope: !1218)
!1218 = distinct !DILexicalBlock(scope: !1202, file: !3, line: 465, column: 6)
!1219 = !DILocation(line: 465, column: 10, scope: !1218)
!1220 = !DILocation(line: 465, column: 6, scope: !1202)
!1221 = !DILocation(line: 466, column: 15, scope: !1222)
!1222 = distinct !DILexicalBlock(scope: !1218, file: !3, line: 465, column: 16)
!1223 = !DILocation(line: 466, column: 34, scope: !1222)
!1224 = !DILocation(line: 466, column: 38, scope: !1222)
!1225 = !DILocation(line: 466, column: 27, scope: !1222)
!1226 = !DILocation(line: 466, column: 44, scope: !1222)
!1227 = !DILocation(line: 466, column: 3, scope: !1222)
!1228 = !DILocation(line: 466, column: 8, scope: !1222)
!1229 = !DILocation(line: 466, column: 13, scope: !1222)
!1230 = !DILocation(line: 467, column: 10, scope: !1222)
!1231 = !DILocation(line: 467, column: 15, scope: !1222)
!1232 = !DILocation(line: 467, column: 21, scope: !1222)
!1233 = !DILocation(line: 467, column: 25, scope: !1222)
!1234 = !DILocation(line: 467, column: 3, scope: !1222)
!1235 = !DILocation(line: 468, column: 2, scope: !1222)
!1236 = !DILocation(line: 470, column: 3, scope: !1237)
!1237 = distinct !DILexicalBlock(scope: !1218, file: !3, line: 469, column: 7)
!1238 = !DILocation(line: 470, column: 8, scope: !1237)
!1239 = !DILocation(line: 470, column: 13, scope: !1237)
!1240 = !DILocation(line: 473, column: 15, scope: !1202)
!1241 = !DILocation(line: 473, column: 19, scope: !1202)
!1242 = !DILocation(line: 473, column: 25, scope: !1202)
!1243 = !DILocation(line: 473, column: 2, scope: !1202)
!1244 = !DILocation(line: 473, column: 7, scope: !1202)
!1245 = !DILocation(line: 473, column: 13, scope: !1202)
!1246 = !DILocation(line: 475, column: 22, scope: !1202)
!1247 = !DILocation(line: 475, column: 27, scope: !1202)
!1248 = !DILocation(line: 475, column: 2, scope: !1202)
!1249 = !DILocation(line: 476, column: 14, scope: !1202)
!1250 = !DILocation(line: 476, column: 19, scope: !1202)
!1251 = !DILocation(line: 476, column: 24, scope: !1202)
!1252 = !DILocation(line: 476, column: 2, scope: !1202)
!1253 = !DILocation(line: 476, column: 7, scope: !1202)
!1254 = !DILocation(line: 476, column: 12, scope: !1202)
!1255 = !DILocation(line: 478, column: 16, scope: !1202)
!1256 = !DILocation(line: 478, column: 20, scope: !1202)
!1257 = !DILocation(line: 478, column: 2, scope: !1202)
!1258 = !DILocation(line: 478, column: 7, scope: !1202)
!1259 = !DILocation(line: 478, column: 14, scope: !1202)
!1260 = !DILocation(line: 480, column: 9, scope: !1202)
!1261 = !DILocation(line: 480, column: 13, scope: !1202)
!1262 = !DILocation(line: 480, column: 19, scope: !1202)
!1263 = !DILocation(line: 480, column: 7, scope: !1202)
!1264 = !DILocation(line: 482, column: 2, scope: !1202)
!1265 = !DILocation(line: 482, column: 9, scope: !1202)
!1266 = !DILocation(line: 483, column: 22, scope: !1267)
!1267 = distinct !DILexicalBlock(scope: !1202, file: !3, line: 482, column: 15)
!1268 = !DILocation(line: 483, column: 9, scope: !1267)
!1269 = !DILocation(line: 483, column: 7, scope: !1267)
!1270 = !DILocation(line: 484, column: 15, scope: !1267)
!1271 = !DILocation(line: 484, column: 27, scope: !1267)
!1272 = !DILocation(line: 484, column: 33, scope: !1267)
!1273 = !DILocation(line: 484, column: 37, scope: !1267)
!1274 = !DILocation(line: 484, column: 3, scope: !1267)
!1275 = !DILocation(line: 484, column: 8, scope: !1267)
!1276 = !DILocation(line: 484, column: 13, scope: !1267)
!1277 = !DILocation(line: 485, column: 3, scope: !1267)
!1278 = !DILocation(line: 485, column: 8, scope: !1267)
!1279 = !DILocation(line: 485, column: 15, scope: !1267)
!1280 = !DILocation(line: 487, column: 10, scope: !1267)
!1281 = !DILocation(line: 487, column: 15, scope: !1267)
!1282 = !DILocation(line: 487, column: 21, scope: !1267)
!1283 = !DILocation(line: 487, column: 27, scope: !1267)
!1284 = !DILocation(line: 487, column: 3, scope: !1267)
!1285 = !DILocation(line: 489, column: 14, scope: !1267)
!1286 = !DILocation(line: 489, column: 20, scope: !1267)
!1287 = !DILocation(line: 489, column: 3, scope: !1267)
!1288 = !DILocation(line: 489, column: 8, scope: !1267)
!1289 = !DILocation(line: 489, column: 12, scope: !1267)
!1290 = !DILocation(line: 491, column: 16, scope: !1267)
!1291 = !DILocation(line: 491, column: 21, scope: !1267)
!1292 = !DILocation(line: 491, column: 28, scope: !1267)
!1293 = !DILocation(line: 491, column: 3, scope: !1267)
!1294 = !DILocation(line: 493, column: 10, scope: !1267)
!1295 = !DILocation(line: 493, column: 16, scope: !1267)
!1296 = !DILocation(line: 493, column: 8, scope: !1267)
!1297 = distinct !{!1297, !1264, !1298}
!1298 = !DILocation(line: 494, column: 2, scope: !1202)
!1299 = !DILocation(line: 496, column: 26, scope: !1202)
!1300 = !DILocation(line: 496, column: 31, scope: !1202)
!1301 = !DILocation(line: 496, column: 37, scope: !1202)
!1302 = !DILocation(line: 496, column: 14, scope: !1202)
!1303 = !DILocation(line: 496, column: 19, scope: !1202)
!1304 = !DILocation(line: 496, column: 24, scope: !1202)
!1305 = !DILocation(line: 496, column: 2, scope: !1202)
!1306 = !DILocation(line: 496, column: 7, scope: !1202)
!1307 = !DILocation(line: 496, column: 12, scope: !1202)
!1308 = !DILocation(line: 497, column: 14, scope: !1202)
!1309 = !DILocation(line: 497, column: 19, scope: !1202)
!1310 = !DILocation(line: 497, column: 24, scope: !1202)
!1311 = !DILocation(line: 497, column: 2, scope: !1202)
!1312 = !DILocation(line: 497, column: 7, scope: !1202)
!1313 = !DILocation(line: 497, column: 12, scope: !1202)
!1314 = !DILocation(line: 499, column: 17, scope: !1202)
!1315 = !DILocation(line: 499, column: 2, scope: !1202)
!1316 = !DILocation(line: 501, column: 9, scope: !1202)
!1317 = !DILocation(line: 501, column: 2, scope: !1202)
!1318 = distinct !DISubprogram(name: "BKE_text_unlink", scope: !3, file: !3, line: 504, type: !1319, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{null, !382, !139}
!1321 = !DILocalVariable(name: "bmain", arg: 1, scope: !1318, file: !3, line: 504, type: !382)
!1322 = !DILocation(line: 504, column: 28, scope: !1318)
!1323 = !DILocalVariable(name: "text", arg: 2, scope: !1318, file: !3, line: 504, type: !139)
!1324 = !DILocation(line: 504, column: 41, scope: !1318)
!1325 = !DILocalVariable(name: "scr", scope: !1318, file: !3, line: 506, type: !1326)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !1328, line: 80, baseType: !1329)
!1328 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !1328, line: 49, size: 1984, elements: !1330)
!1330 = !{!1331, !1332, !1333, !1334, !1335, !1336, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1329, file: !1328, line: 50, baseType: !144, size: 960)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !1329, file: !1328, line: 52, baseType: !202, size: 128, offset: 960)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !1329, file: !1328, line: 53, baseType: !202, size: 128, offset: 1088)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !1329, file: !1328, line: 54, baseType: !202, size: 128, offset: 1216)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !1329, file: !1328, line: 55, baseType: !202, size: 128, offset: 1344)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1329, file: !1328, line: 57, baseType: !1337, size: 64, offset: 1472)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !1339, line: 1216, size: 39680, elements: !1340)
!1339 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1340 = !{!1341, !1342, !1345, !2695, !2776, !2777, !2778, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !3146, !3356, !3359, !3596, !3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3618, !3619, !3620, !3621, !3622, !3630, !3696, !3703, !3704, !3711, !3712, !3713, !3714, !3715, !3716, !3717}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1338, file: !1339, line: 1217, baseType: !144, size: 960)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1338, file: !1339, line: 1218, baseType: !1343, size: 64, offset: 960)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !1339, line: 58, flags: DIFlagFwdDecl)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1338, file: !1339, line: 1220, baseType: !1346, size: 64, offset: 1024)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !30, line: 115, size: 11392, elements: !1348)
!1348 = !{!1349, !1350, !1351, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1368, !1377, !1391, !1392, !1434, !1435, !1438, !1439, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2647, !2650, !2651, !2652, !2653, !2654, !2655, !2658, !2661, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2673, !2676, !2679, !2680, !2683, !2684}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1347, file: !30, line: 116, baseType: !144, size: 960)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1347, file: !30, line: 117, baseType: !1343, size: 64, offset: 960)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1347, file: !30, line: 119, baseType: !1352, size: 64, offset: 1024)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1353 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !30, line: 57, flags: DIFlagFwdDecl)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1347, file: !30, line: 121, baseType: !176, size: 16, offset: 1088)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !1347, file: !30, line: 121, baseType: !176, size: 16, offset: 1104)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !1347, file: !30, line: 122, baseType: !119, size: 32, offset: 1120)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !1347, file: !30, line: 122, baseType: !119, size: 32, offset: 1152)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !1347, file: !30, line: 122, baseType: !119, size: 32, offset: 1184)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !1347, file: !30, line: 123, baseType: !192, size: 512, offset: 1216)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1347, file: !30, line: 124, baseType: !1346, size: 64, offset: 1728)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !1347, file: !30, line: 124, baseType: !1346, size: 64, offset: 1792)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1347, file: !30, line: 127, baseType: !1346, size: 64, offset: 1856)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !1347, file: !30, line: 127, baseType: !1346, size: 64, offset: 1920)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !1347, file: !30, line: 127, baseType: !1346, size: 64, offset: 1984)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1347, file: !30, line: 128, baseType: !1366, size: 64, offset: 2048)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64)
!1367 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !44, line: 42, flags: DIFlagFwdDecl)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1347, file: !30, line: 130, baseType: !1369, size: 64, offset: 2112)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !30, line: 97, size: 832, elements: !1371)
!1371 = !{!1372, !1375, !1376}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1370, file: !30, line: 98, baseType: !1373, size: 768)
!1373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 768, elements: !1374)
!1374 = !{!245, !808}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1370, file: !30, line: 99, baseType: !119, size: 32, offset: 768)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1370, file: !30, line: 99, baseType: !119, size: 32, offset: 800)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1347, file: !30, line: 131, baseType: !1378, size: 64, offset: 2176)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !1380, line: 486, size: 1600, elements: !1381)
!1380 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1381 = !{!1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1379, file: !1380, line: 487, baseType: !144, size: 960)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !1379, file: !1380, line: 489, baseType: !202, size: 128, offset: 960)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !1379, file: !1380, line: 490, baseType: !202, size: 128, offset: 1088)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1379, file: !1380, line: 491, baseType: !202, size: 128, offset: 1216)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1379, file: !1380, line: 492, baseType: !202, size: 128, offset: 1344)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1379, file: !1380, line: 494, baseType: !119, size: 32, offset: 1472)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !1379, file: !1380, line: 495, baseType: !119, size: 32, offset: 1504)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !1379, file: !1380, line: 497, baseType: !119, size: 32, offset: 1536)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1379, file: !1380, line: 498, baseType: !119, size: 32, offset: 1568)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !1347, file: !30, line: 132, baseType: !1378, size: 64, offset: 2240)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !1347, file: !30, line: 133, baseType: !1393, size: 64, offset: 2304)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !1380, line: 334, size: 1728, elements: !1395)
!1395 = !{!1396, !1397, !1400, !1401, !1402, !1403, !1404, !1405, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1433}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !1394, file: !1380, line: 335, baseType: !202, size: 128)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !1394, file: !1380, line: 336, baseType: !1398, size: 64, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !83, line: 74, flags: DIFlagFwdDecl)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1394, file: !1380, line: 338, baseType: !176, size: 16, offset: 192)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1394, file: !1380, line: 338, baseType: !176, size: 16, offset: 208)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !1394, file: !1380, line: 339, baseType: !7, size: 32, offset: 224)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1394, file: !1380, line: 340, baseType: !119, size: 32, offset: 256)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1394, file: !1380, line: 342, baseType: !241, size: 32, offset: 288)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !1394, file: !1380, line: 343, baseType: !1406, size: 96, offset: 320)
!1406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 96, elements: !807)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !1394, file: !1380, line: 344, baseType: !1406, size: 96, offset: 416)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !1394, file: !1380, line: 347, baseType: !202, size: 128, offset: 512)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !1394, file: !1380, line: 349, baseType: !119, size: 32, offset: 640)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !1394, file: !1380, line: 350, baseType: !119, size: 32, offset: 672)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !1394, file: !1380, line: 351, baseType: !138, size: 64, offset: 704)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !1394, file: !1380, line: 352, baseType: !138, size: 64, offset: 768)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !1394, file: !1380, line: 354, baseType: !1414, size: 384, offset: 832)
!1414 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !1380, line: 116, baseType: !1415)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !1380, line: 94, size: 384, elements: !1416)
!1416 = !{!1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !1415, file: !1380, line: 96, baseType: !119, size: 32)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !1415, file: !1380, line: 96, baseType: !119, size: 32, offset: 32)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !1415, file: !1380, line: 97, baseType: !119, size: 32, offset: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !1415, file: !1380, line: 97, baseType: !119, size: 32, offset: 96)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !1415, file: !1380, line: 99, baseType: !176, size: 16, offset: 128)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !1415, file: !1380, line: 100, baseType: !176, size: 16, offset: 144)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !1415, file: !1380, line: 102, baseType: !176, size: 16, offset: 160)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1415, file: !1380, line: 105, baseType: !176, size: 16, offset: 176)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !1415, file: !1380, line: 108, baseType: !176, size: 16, offset: 192)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !1415, file: !1380, line: 109, baseType: !176, size: 16, offset: 208)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !1415, file: !1380, line: 111, baseType: !176, size: 16, offset: 224)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !1415, file: !1380, line: 112, baseType: !176, size: 16, offset: 240)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !1415, file: !1380, line: 114, baseType: !119, size: 32, offset: 256)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !1415, file: !1380, line: 114, baseType: !119, size: 32, offset: 288)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !1415, file: !1380, line: 115, baseType: !119, size: 32, offset: 320)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !1415, file: !1380, line: 115, baseType: !119, size: 32, offset: 352)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !1394, file: !1380, line: 355, baseType: !192, size: 512, offset: 1216)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1347, file: !30, line: 134, baseType: !138, size: 64, offset: 2368)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1347, file: !30, line: 136, baseType: !1436, size: 64, offset: 2432)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 64)
!1437 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !1339, line: 61, flags: DIFlagFwdDecl)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !1347, file: !30, line: 138, baseType: !1414, size: 384, offset: 2496)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !1347, file: !30, line: 139, baseType: !1440, size: 64, offset: 2880)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 64)
!1441 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !1380, line: 80, baseType: !1442)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !1380, line: 72, size: 192, elements: !1443)
!1443 = !{!1444, !1451, !1452, !1453, !1454}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1442, file: !1380, line: 73, baseType: !1445, size: 64)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !1380, line: 59, baseType: !1447)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !1380, line: 56, size: 128, elements: !1448)
!1448 = !{!1449, !1450}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1447, file: !1380, line: 57, baseType: !1406, size: 96)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1447, file: !1380, line: 58, baseType: !119, size: 32, offset: 96)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1442, file: !1380, line: 74, baseType: !119, size: 32, offset: 64)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1442, file: !1380, line: 76, baseType: !119, size: 32, offset: 96)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1442, file: !1380, line: 77, baseType: !119, size: 32, offset: 128)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1442, file: !1380, line: 79, baseType: !119, size: 32, offset: 160)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !1347, file: !30, line: 141, baseType: !202, size: 128, offset: 2944)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !1347, file: !30, line: 142, baseType: !202, size: 128, offset: 3072)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !1347, file: !30, line: 143, baseType: !202, size: 128, offset: 3200)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1347, file: !30, line: 144, baseType: !202, size: 128, offset: 3328)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1347, file: !30, line: 146, baseType: !119, size: 32, offset: 3456)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !1347, file: !30, line: 147, baseType: !119, size: 32, offset: 3488)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1347, file: !30, line: 150, baseType: !1462, size: 64, offset: 3520)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64)
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !1465, line: 93, size: 7552, elements: !1466)
!1465 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1466 = !{!1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1515, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1582, !1583, !1584, !1585, !1586, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !2518, !2519, !2520, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2561}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1464, file: !1465, line: 94, baseType: !144, size: 960)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1464, file: !1465, line: 95, baseType: !1343, size: 64, offset: 960)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !1464, file: !1465, line: 97, baseType: !176, size: 16, offset: 1024)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1464, file: !1465, line: 97, baseType: !176, size: 16, offset: 1040)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1464, file: !1465, line: 99, baseType: !241, size: 32, offset: 1056)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1464, file: !1465, line: 99, baseType: !241, size: 32, offset: 1088)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1464, file: !1465, line: 99, baseType: !241, size: 32, offset: 1120)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !1464, file: !1465, line: 100, baseType: !241, size: 32, offset: 1152)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !1464, file: !1465, line: 100, baseType: !241, size: 32, offset: 1184)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !1464, file: !1465, line: 100, baseType: !241, size: 32, offset: 1216)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !1464, file: !1465, line: 101, baseType: !241, size: 32, offset: 1248)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !1464, file: !1465, line: 101, baseType: !241, size: 32, offset: 1280)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !1464, file: !1465, line: 101, baseType: !241, size: 32, offset: 1312)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !1464, file: !1465, line: 102, baseType: !241, size: 32, offset: 1344)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !1464, file: !1465, line: 102, baseType: !241, size: 32, offset: 1376)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !1464, file: !1465, line: 102, baseType: !241, size: 32, offset: 1408)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !1464, file: !1465, line: 103, baseType: !241, size: 32, offset: 1440)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !1464, file: !1465, line: 103, baseType: !241, size: 32, offset: 1472)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !1464, file: !1465, line: 103, baseType: !241, size: 32, offset: 1504)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !1464, file: !1465, line: 103, baseType: !241, size: 32, offset: 1536)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !1464, file: !1465, line: 103, baseType: !241, size: 32, offset: 1568)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1464, file: !1465, line: 104, baseType: !241, size: 32, offset: 1600)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1464, file: !1465, line: 104, baseType: !241, size: 32, offset: 1632)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !1464, file: !1465, line: 104, baseType: !241, size: 32, offset: 1664)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !1464, file: !1465, line: 104, baseType: !241, size: 32, offset: 1696)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !1464, file: !1465, line: 104, baseType: !241, size: 32, offset: 1728)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !1464, file: !1465, line: 105, baseType: !241, size: 32, offset: 1760)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !1464, file: !1465, line: 108, baseType: !1495, size: 704, offset: 1792)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !1465, line: 53, size: 704, elements: !1496)
!1496 = !{!1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !1495, file: !1465, line: 54, baseType: !241, size: 32)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !1495, file: !1465, line: 55, baseType: !241, size: 32, offset: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !1495, file: !1465, line: 56, baseType: !241, size: 32, offset: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !1495, file: !1465, line: 57, baseType: !241, size: 32, offset: 96)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !1495, file: !1465, line: 59, baseType: !1406, size: 96, offset: 128)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !1495, file: !1465, line: 60, baseType: !1406, size: 96, offset: 224)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !1495, file: !1465, line: 61, baseType: !1406, size: 96, offset: 320)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !1495, file: !1465, line: 63, baseType: !241, size: 32, offset: 416)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !1495, file: !1465, line: 64, baseType: !241, size: 32, offset: 448)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !1495, file: !1465, line: 65, baseType: !241, size: 32, offset: 480)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !1495, file: !1465, line: 67, baseType: !176, size: 16, offset: 512)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !1495, file: !1465, line: 68, baseType: !176, size: 16, offset: 528)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !1495, file: !1465, line: 69, baseType: !176, size: 16, offset: 544)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !1495, file: !1465, line: 70, baseType: !176, size: 16, offset: 560)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !1495, file: !1465, line: 72, baseType: !241, size: 32, offset: 576)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !1495, file: !1465, line: 73, baseType: !241, size: 32, offset: 608)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !1495, file: !1465, line: 74, baseType: !241, size: 32, offset: 640)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !1495, file: !1465, line: 75, baseType: !241, size: 32, offset: 672)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !1464, file: !1465, line: 109, baseType: !1516, size: 128, offset: 2496)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !1465, line: 79, size: 128, elements: !1517)
!1517 = !{!1518, !1519, !1520, !1521}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1516, file: !1465, line: 80, baseType: !119, size: 32)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !1516, file: !1465, line: 81, baseType: !119, size: 32, offset: 32)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !1516, file: !1465, line: 82, baseType: !119, size: 32, offset: 64)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1516, file: !1465, line: 83, baseType: !119, size: 32, offset: 96)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !1464, file: !1465, line: 111, baseType: !241, size: 32, offset: 2624)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !1464, file: !1465, line: 111, baseType: !241, size: 32, offset: 2656)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !1464, file: !1465, line: 112, baseType: !241, size: 32, offset: 2688)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !1464, file: !1465, line: 112, baseType: !241, size: 32, offset: 2720)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1464, file: !1465, line: 113, baseType: !241, size: 32, offset: 2752)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !1464, file: !1465, line: 114, baseType: !241, size: 32, offset: 2784)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !1464, file: !1465, line: 114, baseType: !241, size: 32, offset: 2816)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !1464, file: !1465, line: 115, baseType: !176, size: 16, offset: 2848)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !1464, file: !1465, line: 115, baseType: !176, size: 16, offset: 2864)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !1464, file: !1465, line: 116, baseType: !176, size: 16, offset: 2880)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !1464, file: !1465, line: 117, baseType: !134, size: 8, offset: 2896)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !1464, file: !1465, line: 117, baseType: !134, size: 8, offset: 2904)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !1464, file: !1465, line: 119, baseType: !241, size: 32, offset: 2912)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !1464, file: !1465, line: 119, baseType: !241, size: 32, offset: 2944)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !1464, file: !1465, line: 120, baseType: !176, size: 16, offset: 2976)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !1464, file: !1465, line: 120, baseType: !176, size: 16, offset: 2992)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !1464, file: !1465, line: 121, baseType: !241, size: 32, offset: 3008)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !1464, file: !1465, line: 121, baseType: !241, size: 32, offset: 3040)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !1464, file: !1465, line: 122, baseType: !241, size: 32, offset: 3072)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !1464, file: !1465, line: 123, baseType: !241, size: 32, offset: 3104)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !1464, file: !1465, line: 124, baseType: !176, size: 16, offset: 3136)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !1464, file: !1465, line: 125, baseType: !176, size: 16, offset: 3152)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1464, file: !1465, line: 127, baseType: !119, size: 32, offset: 3168)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !1464, file: !1465, line: 127, baseType: !119, size: 32, offset: 3200)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !1464, file: !1465, line: 128, baseType: !119, size: 32, offset: 3232)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !1464, file: !1465, line: 128, baseType: !119, size: 32, offset: 3264)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !1464, file: !1465, line: 129, baseType: !176, size: 16, offset: 3296)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !1464, file: !1465, line: 129, baseType: !176, size: 16, offset: 3312)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !1464, file: !1465, line: 129, baseType: !176, size: 16, offset: 3328)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !1464, file: !1465, line: 129, baseType: !176, size: 16, offset: 3344)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !1464, file: !1465, line: 130, baseType: !241, size: 32, offset: 3360)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !1464, file: !1465, line: 130, baseType: !241, size: 32, offset: 3392)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !1464, file: !1465, line: 130, baseType: !241, size: 32, offset: 3424)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !1464, file: !1465, line: 130, baseType: !241, size: 32, offset: 3456)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !1464, file: !1465, line: 131, baseType: !241, size: 32, offset: 3488)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !1464, file: !1465, line: 131, baseType: !241, size: 32, offset: 3520)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !1464, file: !1465, line: 131, baseType: !241, size: 32, offset: 3552)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !1464, file: !1465, line: 131, baseType: !241, size: 32, offset: 3584)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !1464, file: !1465, line: 132, baseType: !241, size: 32, offset: 3616)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !1464, file: !1465, line: 132, baseType: !241, size: 32, offset: 3648)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !1464, file: !1465, line: 133, baseType: !192, size: 512, offset: 3680)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !1464, file: !1465, line: 135, baseType: !241, size: 32, offset: 4192)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !1464, file: !1465, line: 136, baseType: !241, size: 32, offset: 4224)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !1464, file: !1465, line: 137, baseType: !241, size: 32, offset: 4256)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !1464, file: !1465, line: 138, baseType: !119, size: 32, offset: 4288)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !1464, file: !1465, line: 141, baseType: !134, size: 8, offset: 4320)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !1464, file: !1465, line: 141, baseType: !134, size: 8, offset: 4328)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !1464, file: !1465, line: 141, baseType: !134, size: 8, offset: 4336)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1464, file: !1465, line: 141, baseType: !134, size: 8, offset: 4344)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !1464, file: !1465, line: 142, baseType: !176, size: 16, offset: 4352)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !1464, file: !1465, line: 142, baseType: !176, size: 16, offset: 4368)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !1464, file: !1465, line: 142, baseType: !176, size: 16, offset: 4384)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !1464, file: !1465, line: 145, baseType: !134, size: 8, offset: 4400)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1464, file: !1465, line: 145, baseType: !134, size: 8, offset: 4408)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !1464, file: !1465, line: 148, baseType: !176, size: 16, offset: 4416)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !1464, file: !1465, line: 148, baseType: !176, size: 16, offset: 4432)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !1464, file: !1465, line: 149, baseType: !241, size: 32, offset: 4448)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !1464, file: !1465, line: 149, baseType: !241, size: 32, offset: 4480)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1464, file: !1465, line: 152, baseType: !1581, size: 128, offset: 4512)
!1581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 128, elements: !288)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !1464, file: !1465, line: 153, baseType: !241, size: 32, offset: 4640)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !1464, file: !1465, line: 154, baseType: !241, size: 32, offset: 4672)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !1464, file: !1465, line: 157, baseType: !176, size: 16, offset: 4704)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !1464, file: !1465, line: 157, baseType: !176, size: 16, offset: 4720)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !1464, file: !1465, line: 160, baseType: !1587, size: 64, offset: 4736)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !1589, line: 113, size: 6208, elements: !1590)
!1589 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1590 = !{!1591, !1592, !1593, !1594, !1595, !1596, !1597}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1588, file: !1589, line: 114, baseType: !176, size: 16)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1588, file: !1589, line: 114, baseType: !176, size: 16, offset: 16)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !1588, file: !1589, line: 115, baseType: !134, size: 8, offset: 32)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !1588, file: !1589, line: 115, baseType: !134, size: 8, offset: 40)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !1588, file: !1589, line: 116, baseType: !134, size: 8, offset: 48)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1588, file: !1589, line: 117, baseType: !736, size: 8, offset: 56)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1588, file: !1589, line: 119, baseType: !1598, size: 6144, offset: 64)
!1598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1599, size: 6144, elements: !1608)
!1599 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !1589, line: 109, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !1589, line: 106, size: 192, elements: !1601)
!1601 = !{!1602, !1603, !1604, !1605, !1606, !1607}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1600, file: !1589, line: 107, baseType: !241, size: 32)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1600, file: !1589, line: 107, baseType: !241, size: 32, offset: 32)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1600, file: !1589, line: 107, baseType: !241, size: 32, offset: 64)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1600, file: !1589, line: 107, baseType: !241, size: 32, offset: 96)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1600, file: !1589, line: 107, baseType: !241, size: 32, offset: 128)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1600, file: !1589, line: 108, baseType: !119, size: 32, offset: 160)
!1608 = !{!1609}
!1609 = !DISubrange(count: 32)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !1464, file: !1465, line: 161, baseType: !1587, size: 64, offset: 4800)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !1464, file: !1465, line: 162, baseType: !134, size: 8, offset: 4864)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !1464, file: !1465, line: 162, baseType: !134, size: 8, offset: 4872)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !1464, file: !1465, line: 163, baseType: !134, size: 8, offset: 4880)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !1464, file: !1465, line: 163, baseType: !134, size: 8, offset: 4888)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !1464, file: !1465, line: 164, baseType: !176, size: 16, offset: 4896)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1464, file: !1465, line: 164, baseType: !176, size: 16, offset: 4912)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !1464, file: !1465, line: 165, baseType: !241, size: 32, offset: 4928)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !1464, file: !1465, line: 165, baseType: !241, size: 32, offset: 4960)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !1464, file: !1465, line: 167, baseType: !1620, size: 1152, offset: 4992)
!1620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1621, size: 1152, elements: !2516)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 64)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !1589, line: 57, size: 2496, elements: !1623)
!1623 = !{!1624, !1625, !1626, !1627, !1628, !1629, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !1622, file: !1589, line: 59, baseType: !176, size: 16)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !1622, file: !1589, line: 59, baseType: !176, size: 16, offset: 16)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !1622, file: !1589, line: 59, baseType: !176, size: 16, offset: 32)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !1622, file: !1589, line: 59, baseType: !176, size: 16, offset: 48)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1622, file: !1589, line: 60, baseType: !1346, size: 64, offset: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !1622, file: !1589, line: 61, baseType: !1630, size: 64, offset: 128)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !1589, line: 202, size: 3328, elements: !1632)
!1632 = !{!1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1702, !2251, !2252, !2330, !2331, !2357, !2358, !2426, !2447, !2455, !2456}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1631, file: !1589, line: 203, baseType: !144, size: 960)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1631, file: !1589, line: 204, baseType: !1343, size: 64, offset: 960)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !1631, file: !1589, line: 206, baseType: !241, size: 32, offset: 1024)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !1631, file: !1589, line: 206, baseType: !241, size: 32, offset: 1056)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !1631, file: !1589, line: 207, baseType: !241, size: 32, offset: 1088)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !1631, file: !1589, line: 207, baseType: !241, size: 32, offset: 1120)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !1631, file: !1589, line: 207, baseType: !241, size: 32, offset: 1152)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !1631, file: !1589, line: 207, baseType: !241, size: 32, offset: 1184)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !1631, file: !1589, line: 207, baseType: !241, size: 32, offset: 1216)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !1631, file: !1589, line: 207, baseType: !241, size: 32, offset: 1248)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !1631, file: !1589, line: 208, baseType: !241, size: 32, offset: 1280)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1631, file: !1589, line: 208, baseType: !241, size: 32, offset: 1312)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !1631, file: !1589, line: 211, baseType: !241, size: 32, offset: 1344)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !1631, file: !1589, line: 211, baseType: !241, size: 32, offset: 1376)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !1631, file: !1589, line: 211, baseType: !241, size: 32, offset: 1408)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !1631, file: !1589, line: 211, baseType: !241, size: 32, offset: 1440)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !1631, file: !1589, line: 211, baseType: !241, size: 32, offset: 1472)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !1631, file: !1589, line: 214, baseType: !241, size: 32, offset: 1504)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !1631, file: !1589, line: 214, baseType: !241, size: 32, offset: 1536)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !1631, file: !1589, line: 217, baseType: !241, size: 32, offset: 1568)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !1631, file: !1589, line: 218, baseType: !241, size: 32, offset: 1600)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !1631, file: !1589, line: 219, baseType: !241, size: 32, offset: 1632)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !1631, file: !1589, line: 220, baseType: !241, size: 32, offset: 1664)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !1631, file: !1589, line: 221, baseType: !241, size: 32, offset: 1696)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !1631, file: !1589, line: 222, baseType: !176, size: 16, offset: 1728)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !1631, file: !1589, line: 222, baseType: !176, size: 16, offset: 1744)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !1631, file: !1589, line: 224, baseType: !176, size: 16, offset: 1760)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !1631, file: !1589, line: 224, baseType: !176, size: 16, offset: 1776)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !1631, file: !1589, line: 227, baseType: !176, size: 16, offset: 1792)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !1631, file: !1589, line: 227, baseType: !176, size: 16, offset: 1808)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !1631, file: !1589, line: 229, baseType: !176, size: 16, offset: 1824)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1631, file: !1589, line: 229, baseType: !176, size: 16, offset: 1840)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1631, file: !1589, line: 230, baseType: !176, size: 16, offset: 1856)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1631, file: !1589, line: 230, baseType: !176, size: 16, offset: 1872)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !1631, file: !1589, line: 232, baseType: !241, size: 32, offset: 1888)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !1631, file: !1589, line: 232, baseType: !241, size: 32, offset: 1920)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !1631, file: !1589, line: 232, baseType: !241, size: 32, offset: 1952)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !1631, file: !1589, line: 232, baseType: !241, size: 32, offset: 1984)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !1631, file: !1589, line: 233, baseType: !119, size: 32, offset: 2016)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !1631, file: !1589, line: 234, baseType: !119, size: 32, offset: 2048)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !1631, file: !1589, line: 235, baseType: !176, size: 16, offset: 2080)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !1631, file: !1589, line: 235, baseType: !176, size: 16, offset: 2096)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1631, file: !1589, line: 236, baseType: !176, size: 16, offset: 2112)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1631, file: !1589, line: 239, baseType: !176, size: 16, offset: 2128)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1631, file: !1589, line: 240, baseType: !119, size: 32, offset: 2144)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1631, file: !1589, line: 241, baseType: !119, size: 32, offset: 2176)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1631, file: !1589, line: 241, baseType: !119, size: 32, offset: 2208)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1631, file: !1589, line: 241, baseType: !119, size: 32, offset: 2240)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !1631, file: !1589, line: 243, baseType: !241, size: 32, offset: 2272)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !1631, file: !1589, line: 243, baseType: !241, size: 32, offset: 2304)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1631, file: !1589, line: 244, baseType: !241, size: 32, offset: 2336)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !1631, file: !1589, line: 246, baseType: !1685, size: 320, offset: 2368)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !1686, line: 50, size: 320, elements: !1687)
!1686 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1687 = !{!1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1685, file: !1686, line: 51, baseType: !1337, size: 64)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1685, file: !1686, line: 53, baseType: !119, size: 32, offset: 64)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1685, file: !1686, line: 54, baseType: !119, size: 32, offset: 96)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1685, file: !1686, line: 55, baseType: !119, size: 32, offset: 128)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1685, file: !1686, line: 55, baseType: !119, size: 32, offset: 160)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1685, file: !1686, line: 56, baseType: !134, size: 8, offset: 192)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !1685, file: !1686, line: 56, baseType: !134, size: 8, offset: 200)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1685, file: !1686, line: 57, baseType: !134, size: 8, offset: 208)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1685, file: !1686, line: 57, baseType: !134, size: 8, offset: 216)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !1685, file: !1686, line: 59, baseType: !176, size: 16, offset: 224)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1685, file: !1686, line: 59, baseType: !176, size: 16, offset: 240)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1685, file: !1686, line: 59, baseType: !176, size: 16, offset: 256)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1685, file: !1686, line: 61, baseType: !176, size: 16, offset: 272)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1685, file: !1686, line: 63, baseType: !119, size: 32, offset: 288)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1631, file: !1589, line: 248, baseType: !1703, size: 64, offset: 2688)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 64)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !1705, line: 328, size: 3456, elements: !1706)
!1705 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1706 = !{!1707, !1708, !1709, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2229, !2230, !2231, !2234, !2238, !2242, !2246, !2247, !2248, !2249, !2250}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1704, file: !1705, line: 329, baseType: !144, size: 960)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1704, file: !1705, line: 330, baseType: !1343, size: 64, offset: 960)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !1704, file: !1705, line: 332, baseType: !1710, size: 64, offset: 1024)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 64)
!1711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !1712, line: 283, size: 4096, elements: !1713)
!1712 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_node.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1713 = !{!1714, !1715, !1716, !1717, !1718, !1719, !1723, !2169, !2177, !2181, !2187, !2191, !2192, !2193, !2194, !2198, !2199}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1711, file: !1712, line: 284, baseType: !119, size: 32)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1711, file: !1712, line: 285, baseType: !192, size: 512, offset: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !1711, file: !1712, line: 287, baseType: !192, size: 512, offset: 544)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !1711, file: !1712, line: 288, baseType: !280, size: 2048, offset: 1056)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !1711, file: !1712, line: 289, baseType: !119, size: 32, offset: 3104)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "free_cache", scope: !1711, file: !1712, line: 292, baseType: !1720, size: 64, offset: 3136)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64)
!1721 = !DISubroutineType(types: !1722)
!1722 = !{null, !1703}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "free_node_cache", scope: !1711, file: !1712, line: 293, baseType: !1724, size: 64, offset: 3200)
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 64)
!1725 = !DISubroutineType(types: !1726)
!1726 = !{null, !1703, !1727}
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNode", file: !1705, line: 167, size: 3712, elements: !1729)
!1729 = !{!1730, !1731, !1732, !1733, !1734, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1728, file: !1705, line: 168, baseType: !1727, size: 64)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1728, file: !1705, line: 168, baseType: !1727, size: 64, offset: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "new_node", scope: !1728, file: !1705, line: 168, baseType: !1727, size: 64, offset: 128)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !1728, file: !1705, line: 170, baseType: !181, size: 64, offset: 192)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !1728, file: !1705, line: 172, baseType: !1735, size: 64, offset: 256)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeType", file: !1712, line: 144, size: 6016, elements: !1737)
!1737 = !{!1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1914, !1915, !1916, !2036, !2040, !2044, !2045, !2052, !2056, !2060, !2061, !2062, !2063, !2067, !2068, !2072, !2076, !2080, !2084, !2088, !2092, !2096, !2097, !2104, !2106, !2115, !2124}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1736, file: !1712, line: 145, baseType: !138, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1736, file: !1712, line: 145, baseType: !138, size: 64, offset: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free", scope: !1736, file: !1712, line: 146, baseType: !176, size: 16, offset: 128)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1736, file: !1712, line: 148, baseType: !192, size: 512, offset: 144)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1736, file: !1712, line: 149, baseType: !119, size: 32, offset: 672)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !1736, file: !1712, line: 151, baseType: !192, size: 512, offset: 704)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !1736, file: !1712, line: 152, baseType: !280, size: 2048, offset: 1216)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !1736, file: !1712, line: 153, baseType: !119, size: 32, offset: 3264)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1736, file: !1712, line: 155, baseType: !241, size: 32, offset: 3296)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !1736, file: !1712, line: 155, baseType: !241, size: 32, offset: 3328)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !1736, file: !1712, line: 155, baseType: !241, size: 32, offset: 3360)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1736, file: !1712, line: 156, baseType: !241, size: 32, offset: 3392)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "minheight", scope: !1736, file: !1712, line: 156, baseType: !241, size: 32, offset: 3424)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "maxheight", scope: !1736, file: !1712, line: 156, baseType: !241, size: 32, offset: 3456)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "nclass", scope: !1736, file: !1712, line: 157, baseType: !176, size: 16, offset: 3488)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1736, file: !1712, line: 157, baseType: !176, size: 16, offset: 3504)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "compatibility", scope: !1736, file: !1712, line: 157, baseType: !176, size: 16, offset: 3520)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !1736, file: !1712, line: 160, baseType: !1756, size: 64, offset: 3584)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 64)
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocketTemplate", file: !1712, line: 109, baseType: !1758)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketTemplate", file: !1712, line: 98, size: 1408, elements: !1759)
!1759 = !{!1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1913}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1758, file: !1712, line: 99, baseType: !119, size: 32)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1758, file: !1712, line: 99, baseType: !119, size: 32, offset: 32)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1758, file: !1712, line: 100, baseType: !192, size: 512, offset: 64)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "val1", scope: !1758, file: !1712, line: 101, baseType: !241, size: 32, offset: 576)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !1758, file: !1712, line: 101, baseType: !241, size: 32, offset: 608)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "val3", scope: !1758, file: !1712, line: 101, baseType: !241, size: 32, offset: 640)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "val4", scope: !1758, file: !1712, line: 101, baseType: !241, size: 32, offset: 672)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1758, file: !1712, line: 102, baseType: !241, size: 32, offset: 704)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1758, file: !1712, line: 102, baseType: !241, size: 32, offset: 736)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !1758, file: !1712, line: 103, baseType: !119, size: 32, offset: 768)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1758, file: !1712, line: 104, baseType: !119, size: 32, offset: 800)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !1758, file: !1712, line: 107, baseType: !1772, size: 64, offset: 832)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocket", file: !1705, line: 87, size: 2816, elements: !1774)
!1774 = !{!1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1897}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1773, file: !1705, line: 88, baseType: !1772, size: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1773, file: !1705, line: 88, baseType: !1772, size: 64, offset: 64)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "new_sock", scope: !1773, file: !1705, line: 88, baseType: !1772, size: 64, offset: 128)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !1773, file: !1705, line: 90, baseType: !181, size: 64, offset: 192)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !1773, file: !1705, line: 92, baseType: !192, size: 512, offset: 256)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1773, file: !1705, line: 94, baseType: !192, size: 512, offset: 768)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !1773, file: !1705, line: 99, baseType: !138, size: 64, offset: 1280)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1773, file: !1705, line: 101, baseType: !176, size: 16, offset: 1344)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1773, file: !1705, line: 101, baseType: !176, size: 16, offset: 1360)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1773, file: !1705, line: 102, baseType: !176, size: 16, offset: 1376)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "in_out", scope: !1773, file: !1705, line: 103, baseType: !176, size: 16, offset: 1392)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !1773, file: !1705, line: 104, baseType: !1787, size: 64, offset: 1408)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketType", file: !1712, line: 114, size: 1600, elements: !1789)
!1789 = !{!1790, !1791, !1812, !1817, !1821, !1825, !1829, !1833, !1834, !1838, !1867, !1868, !1869}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1788, file: !1712, line: 115, baseType: !192, size: 512)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !1788, file: !1712, line: 117, baseType: !1792, size: 64, offset: 512)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = !DISubroutineType(types: !1794)
!1794 = !{null, !1795, !1798, !1800, !1800, !304}
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1796 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !1797, line: 46, flags: DIFlagFwdDecl)
!1797 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_library.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !1328, line: 46, flags: DIFlagFwdDecl)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !1802, line: 55, size: 192, elements: !1803)
!1802 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1803 = !{!1804, !1808, !1811}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1801, file: !1802, line: 58, baseType: !1805, size: 64)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1801, file: !1802, line: 56, size: 64, elements: !1806)
!1806 = !{!1807}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1805, file: !1802, line: 57, baseType: !138, size: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1801, file: !1802, line: 60, baseType: !1809, size: 64, offset: 64)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!1810 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !1705, line: 335, flags: DIFlagFwdDecl)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1801, file: !1802, line: 61, baseType: !138, size: 64, offset: 128)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "draw_color", scope: !1788, file: !1712, line: 118, baseType: !1813, size: 64, offset: 576)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{null, !1795, !1800, !1800, !1816}
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 64)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw", scope: !1788, file: !1712, line: 120, baseType: !1818, size: 64, offset: 640)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1819 = !DISubroutineType(types: !1820)
!1820 = !{null, !1795, !1798, !1800}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw_color", scope: !1788, file: !1712, line: 121, baseType: !1822, size: 64, offset: 704)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 64)
!1823 = !DISubroutineType(types: !1824)
!1824 = !{null, !1795, !1800, !1816}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "interface_register_properties", scope: !1788, file: !1712, line: 122, baseType: !1826, size: 64, offset: 768)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64)
!1827 = !DISubroutineType(types: !1828)
!1828 = !{null, !1703, !1772, !1809}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "interface_init_socket", scope: !1788, file: !1712, line: 123, baseType: !1830, size: 64, offset: 832)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 64)
!1831 = !DISubroutineType(types: !1832)
!1832 = !{null, !1703, !1772, !1727, !1772, !304}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "interface_verify_socket", scope: !1788, file: !1712, line: 124, baseType: !1830, size: 64, offset: 896)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "interface_from_socket", scope: !1788, file: !1712, line: 125, baseType: !1835, size: 64, offset: 960)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 64)
!1836 = !DISubroutineType(types: !1837)
!1837 = !{null, !1703, !1772, !1727, !1772}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "ext_socket", scope: !1788, file: !1712, line: 128, baseType: !1839, size: 256, offset: 1024)
!1839 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !1802, line: 436, baseType: !1840)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !1802, line: 430, size: 256, elements: !1841)
!1841 = !{!1842, !1843, !1846, !1862}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1840, file: !1802, line: 431, baseType: !138, size: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !1840, file: !1802, line: 432, baseType: !1844, size: 64, offset: 64)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64)
!1845 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !1802, line: 417, baseType: !1810)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !1840, file: !1802, line: 433, baseType: !1847, size: 64, offset: 128)
!1847 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !1802, line: 408, baseType: !1848)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = !DISubroutineType(types: !1850)
!1850 = !{!119, !1795, !1800, !1851, !1853}
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !1802, line: 38, flags: DIFlagFwdDecl)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 64)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !1802, line: 348, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !1802, line: 337, size: 256, elements: !1856)
!1856 = !{!1857, !1858, !1859, !1860, !1861}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1855, file: !1802, line: 339, baseType: !138, size: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1855, file: !1802, line: 342, baseType: !1851, size: 64, offset: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !1855, file: !1802, line: 345, baseType: !119, size: 32, offset: 128)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !1855, file: !1802, line: 347, baseType: !119, size: 32, offset: 160)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !1855, file: !1802, line: 347, baseType: !119, size: 32, offset: 192)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1840, file: !1802, line: 434, baseType: !1863, size: 64, offset: 192)
!1863 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !1802, line: 409, baseType: !1864)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!1865 = !DISubroutineType(types: !1866)
!1866 = !{null, !138}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "ext_interface", scope: !1788, file: !1712, line: 129, baseType: !1839, size: 256, offset: 1280)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1788, file: !1712, line: 132, baseType: !119, size: 32, offset: 1536)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !1788, file: !1712, line: 132, baseType: !119, size: 32, offset: 1568)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1773, file: !1705, line: 105, baseType: !192, size: 512, offset: 1472)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !1773, file: !1705, line: 107, baseType: !241, size: 32, offset: 1984)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !1773, file: !1705, line: 107, baseType: !241, size: 32, offset: 2016)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "default_value", scope: !1773, file: !1705, line: 109, baseType: !138, size: 64, offset: 2048)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !1773, file: !1705, line: 112, baseType: !176, size: 16, offset: 2112)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "stack_type", scope: !1773, file: !1705, line: 114, baseType: !176, size: 16, offset: 2128)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1773, file: !1705, line: 115, baseType: !119, size: 32, offset: 2144)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1773, file: !1705, line: 117, baseType: !138, size: 64, offset: 2176)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "own_index", scope: !1773, file: !1705, line: 122, baseType: !119, size: 32, offset: 2240)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "to_index", scope: !1773, file: !1705, line: 124, baseType: !119, size: 32, offset: 2272)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "groupsock", scope: !1773, file: !1705, line: 126, baseType: !1772, size: 64, offset: 2304)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1773, file: !1705, line: 128, baseType: !1882, size: 64, offset: 2368)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeLink", file: !1705, line: 298, size: 448, elements: !1884)
!1884 = !{!1885, !1886, !1887, !1890, !1891, !1894, !1895, !1896}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1883, file: !1705, line: 299, baseType: !1882, size: 64)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1883, file: !1705, line: 299, baseType: !1882, size: 64, offset: 64)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "fromnode", scope: !1883, file: !1705, line: 301, baseType: !1888, size: 64, offset: 128)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNode", file: !1705, line: 218, baseType: !1728)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "tonode", scope: !1883, file: !1705, line: 301, baseType: !1888, size: 64, offset: 192)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "fromsock", scope: !1883, file: !1705, line: 302, baseType: !1892, size: 64, offset: 256)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64)
!1893 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocket", file: !1705, line: 132, baseType: !1773)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "tosock", scope: !1883, file: !1705, line: 302, baseType: !1892, size: 64, offset: 320)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1883, file: !1705, line: 304, baseType: !119, size: 32, offset: 384)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1883, file: !1705, line: 305, baseType: !119, size: 32, offset: 416)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1773, file: !1705, line: 131, baseType: !1898, size: 384, offset: 2432)
!1898 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeStack", file: !1705, line: 73, baseType: !1899)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeStack", file: !1705, line: 62, size: 384, elements: !1900)
!1900 = !{!1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1899, file: !1705, line: 63, baseType: !1581, size: 128)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1899, file: !1705, line: 64, baseType: !241, size: 32, offset: 128)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1899, file: !1705, line: 64, baseType: !241, size: 32, offset: 160)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1899, file: !1705, line: 65, baseType: !138, size: 64, offset: 192)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "hasinput", scope: !1899, file: !1705, line: 66, baseType: !176, size: 16, offset: 256)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "hasoutput", scope: !1899, file: !1705, line: 67, baseType: !176, size: 16, offset: 272)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "datatype", scope: !1899, file: !1705, line: 68, baseType: !176, size: 16, offset: 288)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "sockettype", scope: !1899, file: !1705, line: 69, baseType: !176, size: 16, offset: 304)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1899, file: !1705, line: 70, baseType: !176, size: 16, offset: 320)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !1899, file: !1705, line: 71, baseType: !176, size: 16, offset: 336)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1899, file: !1705, line: 72, baseType: !1912, size: 32, offset: 352)
!1912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 32, elements: !293)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !1758, file: !1712, line: 108, baseType: !192, size: 512, offset: 896)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !1736, file: !1712, line: 160, baseType: !1756, size: 64, offset: 3648)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "storagename", scope: !1736, file: !1712, line: 162, baseType: !192, size: 512, offset: 3712)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype", scope: !1736, file: !1712, line: 165, baseType: !1917, size: 64, offset: 4224)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 64)
!1918 = !DISubroutineType(types: !1919)
!1919 = !{null, !1920, !1922, !2000, !1703, !1727, !2032}
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1796)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !1328, line: 230, size: 3072, elements: !1924)
!1924 = !{!1925, !1926, !1927, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1923, file: !1328, line: 231, baseType: !1922, size: 64)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1923, file: !1328, line: 231, baseType: !1922, size: 64, offset: 64)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !1923, file: !1328, line: 233, baseType: !1928, size: 1280, offset: 128)
!1928 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !1929, line: 71, baseType: !1930)
!1929 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !1929, line: 40, size: 1280, elements: !1931)
!1931 = !{!1932, !1940, !1941, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1967}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1930, file: !1929, line: 41, baseType: !1933, size: 128)
!1933 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !270, line: 95, baseType: !1934)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !270, line: 92, size: 128, elements: !1935)
!1935 = !{!1936, !1937, !1938, !1939}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1934, file: !270, line: 93, baseType: !241, size: 32)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1934, file: !270, line: 93, baseType: !241, size: 32, offset: 32)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1934, file: !270, line: 94, baseType: !241, size: 32, offset: 64)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1934, file: !270, line: 94, baseType: !241, size: 32, offset: 96)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1930, file: !1929, line: 41, baseType: !1933, size: 128, offset: 128)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !1930, file: !1929, line: 42, baseType: !1942, size: 128, offset: 256)
!1942 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !270, line: 89, baseType: !269)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !1930, file: !1929, line: 42, baseType: !1942, size: 128, offset: 384)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1930, file: !1929, line: 43, baseType: !1942, size: 128, offset: 512)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1930, file: !1929, line: 45, baseType: !292, size: 64, offset: 640)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1930, file: !1929, line: 45, baseType: !292, size: 64, offset: 704)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !1930, file: !1929, line: 46, baseType: !241, size: 32, offset: 768)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !1930, file: !1929, line: 46, baseType: !241, size: 32, offset: 800)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !1930, file: !1929, line: 48, baseType: !176, size: 16, offset: 832)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !1930, file: !1929, line: 49, baseType: !176, size: 16, offset: 848)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !1930, file: !1929, line: 51, baseType: !176, size: 16, offset: 864)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !1930, file: !1929, line: 52, baseType: !176, size: 16, offset: 880)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !1930, file: !1929, line: 53, baseType: !176, size: 16, offset: 896)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1930, file: !1929, line: 55, baseType: !176, size: 16, offset: 912)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1930, file: !1929, line: 56, baseType: !176, size: 16, offset: 928)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !1930, file: !1929, line: 58, baseType: !176, size: 16, offset: 944)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !1930, file: !1929, line: 58, baseType: !176, size: 16, offset: 960)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !1930, file: !1929, line: 59, baseType: !176, size: 16, offset: 976)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !1930, file: !1929, line: 59, baseType: !176, size: 16, offset: 992)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !1930, file: !1929, line: 61, baseType: !176, size: 16, offset: 1008)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !1930, file: !1929, line: 63, baseType: !1816, size: 64, offset: 1024)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !1930, file: !1929, line: 64, baseType: !119, size: 32, offset: 1088)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !1930, file: !1929, line: 65, baseType: !119, size: 32, offset: 1120)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !1930, file: !1929, line: 68, baseType: !1965, size: 64, offset: 1152)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 64)
!1966 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !1929, line: 68, flags: DIFlagFwdDecl)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !1930, file: !1929, line: 69, baseType: !1968, size: 64, offset: 1216)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64)
!1969 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !1929, line: 69, flags: DIFlagFwdDecl)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !1923, file: !1328, line: 234, baseType: !1942, size: 128, offset: 1408)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !1923, file: !1328, line: 235, baseType: !1942, size: 128, offset: 1536)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !1923, file: !1328, line: 236, baseType: !176, size: 16, offset: 1664)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !1923, file: !1328, line: 236, baseType: !176, size: 16, offset: 1680)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !1923, file: !1328, line: 238, baseType: !176, size: 16, offset: 1696)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !1923, file: !1328, line: 239, baseType: !176, size: 16, offset: 1712)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1923, file: !1328, line: 240, baseType: !176, size: 16, offset: 1728)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1923, file: !1328, line: 241, baseType: !176, size: 16, offset: 1744)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !1923, file: !1328, line: 243, baseType: !241, size: 32, offset: 1760)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !1923, file: !1328, line: 244, baseType: !176, size: 16, offset: 1792)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !1923, file: !1328, line: 244, baseType: !176, size: 16, offset: 1808)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !1923, file: !1328, line: 246, baseType: !176, size: 16, offset: 1824)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !1923, file: !1328, line: 247, baseType: !176, size: 16, offset: 1840)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !1923, file: !1328, line: 248, baseType: !176, size: 16, offset: 1856)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !1923, file: !1328, line: 249, baseType: !176, size: 16, offset: 1872)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !1923, file: !1328, line: 250, baseType: !176, size: 16, offset: 1888)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1923, file: !1328, line: 251, baseType: !176, size: 16, offset: 1904)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1923, file: !1328, line: 253, baseType: !1988, size: 64, offset: 1920)
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!1989 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !1328, line: 42, flags: DIFlagFwdDecl)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !1923, file: !1328, line: 255, baseType: !202, size: 128, offset: 1984)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !1923, file: !1328, line: 256, baseType: !202, size: 128, offset: 2112)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !1923, file: !1328, line: 257, baseType: !202, size: 128, offset: 2240)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !1923, file: !1328, line: 258, baseType: !202, size: 128, offset: 2368)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !1923, file: !1328, line: 259, baseType: !202, size: 128, offset: 2496)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !1923, file: !1328, line: 260, baseType: !202, size: 128, offset: 2624)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !1923, file: !1328, line: 261, baseType: !202, size: 128, offset: 2752)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !1923, file: !1328, line: 263, baseType: !1968, size: 64, offset: 2880)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !1923, file: !1328, line: 265, baseType: !133, size: 64, offset: 2944)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !1923, file: !1328, line: 266, baseType: !138, size: 64, offset: 3008)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceNode", file: !83, line: 925, size: 3200, elements: !2002)
!2002 = !{!2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2001, file: !83, line: 926, baseType: !231, size: 64)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2001, file: !83, line: 926, baseType: !231, size: 64, offset: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2001, file: !83, line: 927, baseType: !202, size: 128, offset: 128)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !2001, file: !83, line: 928, baseType: !119, size: 32, offset: 256)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !2001, file: !83, line: 929, baseType: !241, size: 32, offset: 288)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !2001, file: !83, line: 930, baseType: !243, size: 128, offset: 320)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !2001, file: !83, line: 932, baseType: !1928, size: 1280, offset: 448)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2001, file: !83, line: 934, baseType: !151, size: 64, offset: 1728)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !2001, file: !83, line: 934, baseType: !151, size: 64, offset: 1792)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2001, file: !83, line: 935, baseType: !176, size: 16, offset: 1856)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2001, file: !83, line: 935, baseType: !176, size: 16, offset: 1872)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "aspect", scope: !2001, file: !83, line: 936, baseType: !241, size: 32, offset: 1888)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2001, file: !83, line: 936, baseType: !241, size: 32, offset: 1920)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !2001, file: !83, line: 938, baseType: !241, size: 32, offset: 1952)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !2001, file: !83, line: 938, baseType: !241, size: 32, offset: 1984)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !2001, file: !83, line: 939, baseType: !241, size: 32, offset: 2016)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !2001, file: !83, line: 940, baseType: !292, size: 64, offset: 2048)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "treepath", scope: !2001, file: !83, line: 947, baseType: !202, size: 128, offset: 2112)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2001, file: !83, line: 949, baseType: !1703, size: 64, offset: 2240)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "edittree", scope: !2001, file: !83, line: 949, baseType: !1703, size: 64, offset: 2304)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "tree_idname", scope: !2001, file: !83, line: 952, baseType: !192, size: 512, offset: 2368)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "treetype", scope: !2001, file: !83, line: 953, baseType: !119, size: 32, offset: 2880)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2001, file: !83, line: 954, baseType: !119, size: 32, offset: 2912)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "texfrom", scope: !2001, file: !83, line: 956, baseType: !176, size: 16, offset: 2944)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "shaderfrom", scope: !2001, file: !83, line: 957, baseType: !176, size: 16, offset: 2960)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !2001, file: !83, line: 958, baseType: !176, size: 16, offset: 2976)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2001, file: !83, line: 959, baseType: !176, size: 16, offset: 2992)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "linkdrag", scope: !2001, file: !83, line: 960, baseType: !202, size: 128, offset: 3008)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2001, file: !83, line: 962, baseType: !1436, size: 64, offset: 3136)
!2032 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !1705, line: 274, baseType: !2033)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !1705, line: 271, size: 32, elements: !2034)
!2034 = !{!2035}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2033, file: !1705, line: 273, baseType: !7, size: 32)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype_prepare", scope: !1736, file: !1712, line: 168, baseType: !2037, size: 64, offset: 4288)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64)
!2038 = !DISubroutineType(types: !2039)
!2039 = !{null, !1920, !1703, !1727}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons", scope: !1736, file: !1712, line: 171, baseType: !2041, size: 64, offset: 4352)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64)
!2042 = !DISubroutineType(types: !2043)
!2043 = !{null, !1798, !1795, !1800}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons_ex", scope: !1736, file: !1712, line: 173, baseType: !2041, size: 64, offset: 4416)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "draw_backdrop", scope: !1736, file: !1712, line: 176, baseType: !2046, size: 64, offset: 4480)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 64)
!2047 = !DISubroutineType(types: !2048)
!2048 = !{null, !2000, !2049, !1727, !119, !119}
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 64)
!2050 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !2051, line: 136, flags: DIFlagFwdDecl)
!2051 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "labelfunc", scope: !1736, file: !1712, line: 179, baseType: !2053, size: 64, offset: 4544)
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 64)
!2054 = !DISubroutineType(types: !2055)
!2055 = !{null, !1703, !1727, !133, !119}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "resize_area_func", scope: !1736, file: !1712, line: 181, baseType: !2057, size: 64, offset: 4608)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 64)
!2058 = !DISubroutineType(types: !2059)
!2059 = !{!119, !1727, !119, !119}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "select_area_func", scope: !1736, file: !1712, line: 183, baseType: !2057, size: 64, offset: 4672)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "tweak_area_func", scope: !1736, file: !1712, line: 185, baseType: !2057, size: 64, offset: 4736)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "updatefunc", scope: !1736, file: !1712, line: 188, baseType: !1724, size: 64, offset: 4800)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "verifyfunc", scope: !1736, file: !1712, line: 190, baseType: !2064, size: 64, offset: 4864)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64)
!2065 = !DISubroutineType(types: !2066)
!2066 = !{null, !1703, !1727, !151}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc", scope: !1736, file: !1712, line: 193, baseType: !1724, size: 64, offset: 4928)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc", scope: !1736, file: !1712, line: 195, baseType: !2069, size: 64, offset: 4992)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 64)
!2070 = !DISubroutineType(types: !2071)
!2071 = !{null, !1727}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc", scope: !1736, file: !1712, line: 197, baseType: !2073, size: 64, offset: 5056)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2074 = !DISubroutineType(types: !2075)
!2075 = !{null, !1703, !1727, !1727}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc_api", scope: !1736, file: !1712, line: 200, baseType: !2077, size: 64, offset: 5120)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2078 = !DISubroutineType(types: !2079)
!2079 = !{null, !1920, !1800}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc_api", scope: !1736, file: !1712, line: 201, baseType: !2081, size: 64, offset: 5184)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 64)
!2082 = !DISubroutineType(types: !2083)
!2083 = !{null, !1800}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc_api", scope: !1736, file: !1712, line: 202, baseType: !2085, size: 64, offset: 5248)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2086 = !DISubroutineType(types: !2087)
!2087 = !{null, !1800, !1727}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1736, file: !1712, line: 205, baseType: !2089, size: 64, offset: 5312)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 64)
!2090 = !DISubroutineType(types: !2091)
!2091 = !{!119, !1735, !1703}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "poll_instance", scope: !1736, file: !1712, line: 207, baseType: !2093, size: 64, offset: 5376)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64)
!2094 = !DISubroutineType(types: !2095)
!2095 = !{!119, !1727, !1703}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "update_internal_links", scope: !1736, file: !1712, line: 210, baseType: !1724, size: 64, offset: 5440)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "initexecfunc", scope: !1736, file: !1712, line: 213, baseType: !2098, size: 64, offset: 5504)
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeInitExecFunction", file: !1712, line: 135, baseType: !2099)
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 64)
!2100 = !DISubroutineType(types: !2101)
!2101 = !{!138, !2102, !1727, !2032}
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!2103 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecContext", file: !1712, line: 62, flags: DIFlagFwdDecl)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "freeexecfunc", scope: !1736, file: !1712, line: 214, baseType: !2105, size: 64, offset: 5568)
!2105 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeFreeExecFunction", file: !1712, line: 136, baseType: !1864)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "execfunc", scope: !1736, file: !1712, line: 215, baseType: !2107, size: 64, offset: 5632)
!2107 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeExecFunction", file: !1712, line: 137, baseType: !2108)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64)
!2109 = !DISubroutineType(types: !2110)
!2110 = !{null, !138, !119, !1727, !2111, !2113, !2113}
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 64)
!2112 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecData", file: !1712, line: 63, flags: DIFlagFwdDecl)
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 64)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 64)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "gpufunc", scope: !1736, file: !1712, line: 217, baseType: !2116, size: 64, offset: 5696)
!2116 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeGPUExecFunction", file: !1712, line: 138, baseType: !2117)
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 64)
!2118 = !DISubroutineType(types: !2119)
!2119 = !{!119, !2120, !1727, !2111, !2122, !2122}
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64)
!2121 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUMaterial", file: !1712, line: 64, flags: DIFlagFwdDecl)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64)
!2123 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUNodeStack", file: !1712, line: 66, flags: DIFlagFwdDecl)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !1736, file: !1712, line: 220, baseType: !1839, size: 256, offset: 5760)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1728, file: !1705, line: 173, baseType: !192, size: 512, offset: 320)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1728, file: !1705, line: 175, baseType: !192, size: 512, offset: 832)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1728, file: !1705, line: 176, baseType: !119, size: 32, offset: 1344)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1728, file: !1705, line: 177, baseType: !176, size: 16, offset: 1376)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1728, file: !1705, line: 177, baseType: !176, size: 16, offset: 1392)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1728, file: !1705, line: 178, baseType: !176, size: 16, offset: 1408)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1728, file: !1705, line: 178, baseType: !176, size: 16, offset: 1424)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "lasty", scope: !1728, file: !1705, line: 179, baseType: !176, size: 16, offset: 1440)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "menunr", scope: !1728, file: !1705, line: 179, baseType: !176, size: 16, offset: 1456)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !1728, file: !1705, line: 180, baseType: !176, size: 16, offset: 1472)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1728, file: !1705, line: 181, baseType: !176, size: 16, offset: 1488)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1728, file: !1705, line: 182, baseType: !1406, size: 96, offset: 1504)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !1728, file: !1705, line: 184, baseType: !202, size: 128, offset: 1600)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !1728, file: !1705, line: 184, baseType: !202, size: 128, offset: 1728)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1728, file: !1705, line: 185, baseType: !1727, size: 64, offset: 1856)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1728, file: !1705, line: 186, baseType: !151, size: 64, offset: 1920)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !1728, file: !1705, line: 187, baseType: !138, size: 64, offset: 1984)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "original", scope: !1728, file: !1705, line: 188, baseType: !1727, size: 64, offset: 2048)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "internal_links", scope: !1728, file: !1705, line: 189, baseType: !202, size: 128, offset: 2112)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !1728, file: !1705, line: 191, baseType: !241, size: 32, offset: 2240)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !1728, file: !1705, line: 191, baseType: !241, size: 32, offset: 2272)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1728, file: !1705, line: 192, baseType: !241, size: 32, offset: 2304)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1728, file: !1705, line: 192, baseType: !241, size: 32, offset: 2336)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "miniwidth", scope: !1728, file: !1705, line: 193, baseType: !241, size: 32, offset: 2368)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "offsetx", scope: !1728, file: !1705, line: 194, baseType: !241, size: 32, offset: 2400)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "offsety", scope: !1728, file: !1705, line: 194, baseType: !241, size: 32, offset: 2432)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1728, file: !1705, line: 196, baseType: !119, size: 32, offset: 2464)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1728, file: !1705, line: 198, baseType: !192, size: 512, offset: 2496)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "custom1", scope: !1728, file: !1705, line: 199, baseType: !176, size: 16, offset: 3008)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "custom2", scope: !1728, file: !1705, line: 199, baseType: !176, size: 16, offset: 3024)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "custom3", scope: !1728, file: !1705, line: 200, baseType: !241, size: 32, offset: 3040)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "custom4", scope: !1728, file: !1705, line: 200, baseType: !241, size: 32, offset: 3072)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "need_exec", scope: !1728, file: !1705, line: 202, baseType: !176, size: 16, offset: 3104)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !1728, file: !1705, line: 202, baseType: !176, size: 16, offset: 3120)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "threaddata", scope: !1728, file: !1705, line: 203, baseType: !138, size: 64, offset: 3136)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "totr", scope: !1728, file: !1705, line: 204, baseType: !1933, size: 128, offset: 3200)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "butr", scope: !1728, file: !1705, line: 205, baseType: !1933, size: 128, offset: 3328)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "prvr", scope: !1728, file: !1705, line: 206, baseType: !1933, size: 128, offset: 3456)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "preview_xsize", scope: !1728, file: !1705, line: 215, baseType: !176, size: 16, offset: 3584)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "preview_ysize", scope: !1728, file: !1705, line: 215, baseType: !176, size: 16, offset: 3600)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1728, file: !1705, line: 216, baseType: !119, size: 32, offset: 3616)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1728, file: !1705, line: 217, baseType: !2167, size: 64, offset: 3648)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 64)
!2168 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiBlock", file: !1705, line: 51, flags: DIFlagFwdDecl)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "foreach_nodeclass", scope: !1711, file: !1712, line: 294, baseType: !2170, size: 64, offset: 3264)
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!2171 = !DISubroutineType(types: !2172)
!2172 = !{null, !1337, !138, !2173}
!2173 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeClassCallback", file: !1712, line: 282, baseType: !2174)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 64)
!2175 = !DISubroutineType(types: !2176)
!2176 = !{null, !138, !119, !304}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1711, file: !1712, line: 296, baseType: !2178, size: 64, offset: 3328)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 64)
!2179 = !DISubroutineType(types: !2180)
!2180 = !{!119, !1920, !1710}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "get_from_context", scope: !1711, file: !1712, line: 298, baseType: !2182, size: 64, offset: 3392)
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 64)
!2183 = !DISubroutineType(types: !2184)
!2184 = !{null, !1920, !1710, !2185, !2186, !2186}
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "localize", scope: !1711, file: !1712, line: 302, baseType: !2188, size: 64, offset: 3456)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64)
!2189 = !DISubroutineType(types: !2190)
!2190 = !{null, !1703, !1703}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "local_sync", scope: !1711, file: !1712, line: 303, baseType: !2188, size: 64, offset: 3520)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "local_merge", scope: !1711, file: !1712, line: 304, baseType: !2188, size: 64, offset: 3584)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1711, file: !1712, line: 307, baseType: !1720, size: 64, offset: 3648)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "validate_link", scope: !1711, file: !1712, line: 309, baseType: !2195, size: 64, offset: 3712)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2196 = !DISubroutineType(types: !2197)
!2197 = !{!119, !1703, !1882}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "node_add_init", scope: !1711, file: !1712, line: 311, baseType: !1724, size: 64, offset: 3776)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !1711, file: !1712, line: 314, baseType: !1839, size: 256, offset: 3840)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1704, file: !1705, line: 333, baseType: !192, size: 512, offset: 1088)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !1704, file: !1705, line: 335, baseType: !1809, size: 64, offset: 1600)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1704, file: !1705, line: 337, baseType: !1436, size: 64, offset: 1664)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !1704, file: !1705, line: 338, baseType: !292, size: 64, offset: 1728)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !1704, file: !1705, line: 340, baseType: !202, size: 128, offset: 1792)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1704, file: !1705, line: 340, baseType: !202, size: 128, offset: 1920)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1704, file: !1705, line: 342, baseType: !119, size: 32, offset: 2048)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1704, file: !1705, line: 342, baseType: !119, size: 32, offset: 2080)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !1704, file: !1705, line: 343, baseType: !119, size: 32, offset: 2112)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1704, file: !1705, line: 345, baseType: !119, size: 32, offset: 2144)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1704, file: !1705, line: 346, baseType: !119, size: 32, offset: 2176)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !1704, file: !1705, line: 347, baseType: !176, size: 16, offset: 2208)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1704, file: !1705, line: 348, baseType: !176, size: 16, offset: 2224)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1704, file: !1705, line: 349, baseType: !119, size: 32, offset: 2240)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !1704, file: !1705, line: 351, baseType: !119, size: 32, offset: 2272)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !1704, file: !1705, line: 353, baseType: !176, size: 16, offset: 2304)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !1704, file: !1705, line: 354, baseType: !176, size: 16, offset: 2320)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !1704, file: !1705, line: 355, baseType: !119, size: 32, offset: 2336)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !1704, file: !1705, line: 357, baseType: !1933, size: 128, offset: 2368)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !1704, file: !1705, line: 363, baseType: !202, size: 128, offset: 2496)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !1704, file: !1705, line: 363, baseType: !202, size: 128, offset: 2624)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !1704, file: !1705, line: 368, baseType: !2222, size: 64, offset: 2752)
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 64)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !1712, line: 500, size: 64, elements: !2224)
!2224 = !{!2225}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !2223, file: !1712, line: 502, baseType: !2226, size: 64)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!2227 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !2228, line: 48, baseType: !1399)
!2228 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !1704, file: !1705, line: 372, baseType: !2032, size: 32, offset: 2816)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1704, file: !1705, line: 373, baseType: !119, size: 32, offset: 2848)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !1704, file: !1705, line: 382, baseType: !2232, size: 64, offset: 2880)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 64)
!2233 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !1705, line: 46, flags: DIFlagFwdDecl)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !1704, file: !1705, line: 385, baseType: !2235, size: 64, offset: 2944)
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 64)
!2236 = !DISubroutineType(types: !2237)
!2237 = !{null, !138, !241}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !1704, file: !1705, line: 386, baseType: !2239, size: 64, offset: 3008)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 64)
!2240 = !DISubroutineType(types: !2241)
!2241 = !{null, !138, !133}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !1704, file: !1705, line: 387, baseType: !2243, size: 64, offset: 3072)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 64)
!2244 = !DISubroutineType(types: !2245)
!2245 = !{!119, !138}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !1704, file: !1705, line: 388, baseType: !1864, size: 64, offset: 3136)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !1704, file: !1705, line: 389, baseType: !138, size: 64, offset: 3200)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !1704, file: !1705, line: 389, baseType: !138, size: 64, offset: 3264)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !1704, file: !1705, line: 389, baseType: !138, size: 64, offset: 3328)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !1704, file: !1705, line: 389, baseType: !138, size: 64, offset: 3392)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1631, file: !1589, line: 249, baseType: !1366, size: 64, offset: 2752)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1631, file: !1589, line: 250, baseType: !2253, size: 64, offset: 2816)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 64)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !1686, line: 77, size: 15424, elements: !2255)
!2255 = !{!2256, !2257, !2258, !2261, !2264, !2267, !2270, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2288, !2289, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2319, !2320, !2324}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2254, file: !1686, line: 78, baseType: !144, size: 960)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2254, file: !1686, line: 80, baseType: !163, size: 8192, offset: 960)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2254, file: !1686, line: 82, baseType: !2259, size: 64, offset: 9152)
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 64)
!2260 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !1686, line: 43, flags: DIFlagFwdDecl)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !2254, file: !1686, line: 83, baseType: !2262, size: 64, offset: 9216)
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 64)
!2263 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !145, line: 46, flags: DIFlagFwdDecl)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2254, file: !1686, line: 86, baseType: !2265, size: 64, offset: 9280)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 64)
!2266 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !1686, line: 41, flags: DIFlagFwdDecl)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !2254, file: !1686, line: 87, baseType: !2268, size: 64, offset: 9344)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 64)
!2269 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !1686, line: 44, flags: DIFlagFwdDecl)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !2254, file: !1686, line: 89, baseType: !2271, size: 512, offset: 9408)
!2271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2268, size: 512, elements: !244)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !2254, file: !1686, line: 90, baseType: !176, size: 16, offset: 9920)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !2254, file: !1686, line: 90, baseType: !176, size: 16, offset: 9936)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2254, file: !1686, line: 92, baseType: !176, size: 16, offset: 9952)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2254, file: !1686, line: 92, baseType: !176, size: 16, offset: 9968)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2254, file: !1686, line: 93, baseType: !176, size: 16, offset: 9984)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2254, file: !1686, line: 93, baseType: !176, size: 16, offset: 10000)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2254, file: !1686, line: 94, baseType: !119, size: 32, offset: 10016)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !2254, file: !1686, line: 97, baseType: !176, size: 16, offset: 10048)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !2254, file: !1686, line: 97, baseType: !176, size: 16, offset: 10064)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !2254, file: !1686, line: 98, baseType: !176, size: 16, offset: 10080)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !2254, file: !1686, line: 98, baseType: !176, size: 16, offset: 10096)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !2254, file: !1686, line: 99, baseType: !176, size: 16, offset: 10112)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !2254, file: !1686, line: 99, baseType: !176, size: 16, offset: 10128)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !2254, file: !1686, line: 100, baseType: !7, size: 32, offset: 10144)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !2254, file: !1686, line: 101, baseType: !2287, size: 64, offset: 10176)
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !2254, file: !1686, line: 103, baseType: !169, size: 64, offset: 10240)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2254, file: !1686, line: 104, baseType: !2290, size: 64, offset: 10304)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 64)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !145, line: 159, size: 448, elements: !2292)
!2292 = !{!2293, !2295, !2296, !2297, !2298, !2300}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2291, file: !145, line: 161, baseType: !2294, size: 64)
!2294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !293)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !2291, file: !145, line: 162, baseType: !2294, size: 64, offset: 64)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2291, file: !145, line: 163, baseType: !1912, size: 32, offset: 128)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !2291, file: !145, line: 164, baseType: !1912, size: 32, offset: 160)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !2291, file: !145, line: 165, baseType: !2299, size: 128, offset: 192)
!2299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2287, size: 128, elements: !293)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !2291, file: !145, line: 166, baseType: !2301, size: 128, offset: 320)
!2301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2262, size: 128, elements: !293)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !2254, file: !1686, line: 107, baseType: !241, size: 32, offset: 10368)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !2254, file: !1686, line: 108, baseType: !119, size: 32, offset: 10400)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !2254, file: !1686, line: 109, baseType: !176, size: 16, offset: 10432)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2254, file: !1686, line: 110, baseType: !176, size: 16, offset: 10448)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !2254, file: !1686, line: 113, baseType: !119, size: 32, offset: 10464)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !2254, file: !1686, line: 113, baseType: !119, size: 32, offset: 10496)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !2254, file: !1686, line: 114, baseType: !134, size: 8, offset: 10528)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !2254, file: !1686, line: 114, baseType: !134, size: 8, offset: 10536)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !2254, file: !1686, line: 115, baseType: !176, size: 16, offset: 10544)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !2254, file: !1686, line: 116, baseType: !1581, size: 128, offset: 10560)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !2254, file: !1686, line: 119, baseType: !241, size: 32, offset: 10688)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !2254, file: !1686, line: 119, baseType: !241, size: 32, offset: 10720)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !2254, file: !1686, line: 122, baseType: !2315, size: 512, offset: 10752)
!2315 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !2051, line: 182, baseType: !2316)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !2051, line: 180, size: 512, elements: !2317)
!2317 = !{!2318}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2316, file: !2051, line: 181, baseType: !192, size: 512)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !2254, file: !1686, line: 123, baseType: !134, size: 8, offset: 11264)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2254, file: !1686, line: 125, baseType: !2321, size: 56, offset: 11272)
!2321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 56, elements: !2322)
!2322 = !{!2323}
!2323 = !DISubrange(count: 7)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !2254, file: !1686, line: 126, baseType: !2325, size: 4096, offset: 11328)
!2325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2326, size: 4096, elements: !244)
!2326 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !1686, line: 69, baseType: !2327)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !1686, line: 67, size: 512, elements: !2328)
!2328 = !{!2329}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2327, file: !1686, line: 68, baseType: !192, size: 512)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1631, file: !1589, line: 251, baseType: !1587, size: 64, offset: 2880)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !1631, file: !1589, line: 252, baseType: !2332, size: 64, offset: 2944)
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2333, size: 64)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !1589, line: 122, size: 1600, elements: !2334)
!2334 = !{!2335, !2336, !2337, !2339, !2342, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2333, file: !1589, line: 123, baseType: !1346, size: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2333, file: !1589, line: 124, baseType: !2253, size: 64, offset: 64)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !2333, file: !1589, line: 125, baseType: !2338, size: 384, offset: 128)
!2338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2049, size: 384, elements: !306)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2333, file: !1589, line: 126, baseType: !2340, size: 512, offset: 512)
!2340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 512, elements: !2341)
!2341 = !{!289, !289}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !2333, file: !1589, line: 127, baseType: !2343, size: 288, offset: 1024)
!2343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 288, elements: !2344)
!2344 = !{!808, !808}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2333, file: !1589, line: 128, baseType: !176, size: 16, offset: 1312)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !2333, file: !1589, line: 128, baseType: !176, size: 16, offset: 1328)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !2333, file: !1589, line: 129, baseType: !241, size: 32, offset: 1344)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !2333, file: !1589, line: 129, baseType: !241, size: 32, offset: 1376)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !2333, file: !1589, line: 130, baseType: !241, size: 32, offset: 1408)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !2333, file: !1589, line: 131, baseType: !7, size: 32, offset: 1440)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !2333, file: !1589, line: 132, baseType: !176, size: 16, offset: 1472)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2333, file: !1589, line: 132, baseType: !176, size: 16, offset: 1488)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2333, file: !1589, line: 133, baseType: !119, size: 32, offset: 1504)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2333, file: !1589, line: 133, baseType: !119, size: 32, offset: 1536)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !2333, file: !1589, line: 134, baseType: !176, size: 16, offset: 1568)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !2333, file: !1589, line: 134, baseType: !176, size: 16, offset: 1584)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1631, file: !1589, line: 253, baseType: !2290, size: 64, offset: 3008)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1631, file: !1589, line: 254, baseType: !2359, size: 64, offset: 3072)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 64)
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !1589, line: 137, size: 832, elements: !2361)
!2361 = !{!2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2382, !2383, !2384, !2385, !2386, !2387}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2360, file: !1589, line: 138, baseType: !176, size: 16)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !2360, file: !1589, line: 140, baseType: !176, size: 16, offset: 16)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !2360, file: !1589, line: 141, baseType: !241, size: 32, offset: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !2360, file: !1589, line: 142, baseType: !241, size: 32, offset: 64)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2360, file: !1589, line: 143, baseType: !176, size: 16, offset: 96)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !2360, file: !1589, line: 144, baseType: !176, size: 16, offset: 112)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !2360, file: !1589, line: 145, baseType: !119, size: 32, offset: 128)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !2360, file: !1589, line: 147, baseType: !119, size: 32, offset: 160)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2360, file: !1589, line: 149, baseType: !1346, size: 64, offset: 192)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !2360, file: !1589, line: 150, baseType: !119, size: 32, offset: 256)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !2360, file: !1589, line: 151, baseType: !176, size: 16, offset: 288)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !2360, file: !1589, line: 152, baseType: !176, size: 16, offset: 304)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !2360, file: !1589, line: 154, baseType: !138, size: 64, offset: 320)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !2360, file: !1589, line: 155, baseType: !1816, size: 64, offset: 384)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !2360, file: !1589, line: 157, baseType: !241, size: 32, offset: 448)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !2360, file: !1589, line: 158, baseType: !176, size: 16, offset: 480)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !2360, file: !1589, line: 159, baseType: !176, size: 16, offset: 496)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !2360, file: !1589, line: 160, baseType: !176, size: 16, offset: 512)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !2360, file: !1589, line: 161, baseType: !2381, size: 48, offset: 528)
!2381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 48, elements: !807)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !2360, file: !1589, line: 162, baseType: !241, size: 32, offset: 576)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !2360, file: !1589, line: 164, baseType: !241, size: 32, offset: 608)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !2360, file: !1589, line: 164, baseType: !241, size: 32, offset: 640)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !2360, file: !1589, line: 164, baseType: !241, size: 32, offset: 672)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !2360, file: !1589, line: 165, baseType: !1587, size: 64, offset: 704)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !2360, file: !1589, line: 167, baseType: !2388, size: 64, offset: 768)
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 64)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !2051, line: 72, size: 3072, elements: !2390)
!2390 = !{!2391, !2392, !2393, !2394, !2395, !2396, !2397, !2422, !2423, !2424, !2425}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2389, file: !2051, line: 73, baseType: !119, size: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2389, file: !2051, line: 73, baseType: !119, size: 32, offset: 32)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !2389, file: !2051, line: 74, baseType: !119, size: 32, offset: 64)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !2389, file: !2051, line: 75, baseType: !119, size: 32, offset: 96)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !2389, file: !2051, line: 77, baseType: !1933, size: 128, offset: 128)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !2389, file: !2051, line: 77, baseType: !1933, size: 128, offset: 256)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !2389, file: !2051, line: 79, baseType: !2398, size: 2304, offset: 384)
!2398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2399, size: 2304, elements: !288)
!2399 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !2051, line: 67, baseType: !2400)
!2400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !2051, line: 55, size: 576, elements: !2401)
!2401 = !{!2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2418, !2419, !2420, !2421}
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2400, file: !2051, line: 56, baseType: !176, size: 16)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2400, file: !2051, line: 56, baseType: !176, size: 16, offset: 16)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2400, file: !2051, line: 58, baseType: !241, size: 32, offset: 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !2400, file: !2051, line: 59, baseType: !241, size: 32, offset: 64)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !2400, file: !2051, line: 59, baseType: !241, size: 32, offset: 96)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !2400, file: !2051, line: 60, baseType: !292, size: 64, offset: 128)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !2400, file: !2051, line: 60, baseType: !292, size: 64, offset: 192)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2400, file: !2051, line: 61, baseType: !2410, size: 64, offset: 256)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 64)
!2411 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !2051, line: 47, baseType: !2412)
!2412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !2051, line: 44, size: 96, elements: !2413)
!2413 = !{!2414, !2415, !2416, !2417}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2412, file: !2051, line: 45, baseType: !241, size: 32)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2412, file: !2051, line: 45, baseType: !241, size: 32, offset: 32)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2412, file: !2051, line: 46, baseType: !176, size: 16, offset: 64)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !2412, file: !2051, line: 46, baseType: !176, size: 16, offset: 80)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !2400, file: !2051, line: 62, baseType: !2410, size: 64, offset: 320)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !2400, file: !2051, line: 64, baseType: !2410, size: 64, offset: 384)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !2400, file: !2051, line: 65, baseType: !292, size: 64, offset: 448)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !2400, file: !2051, line: 66, baseType: !292, size: 64, offset: 512)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !2389, file: !2051, line: 80, baseType: !1406, size: 96, offset: 2688)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !2389, file: !2051, line: 80, baseType: !1406, size: 96, offset: 2784)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !2389, file: !2051, line: 81, baseType: !1406, size: 96, offset: 2880)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !2389, file: !2051, line: 83, baseType: !1406, size: 96, offset: 2976)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !1631, file: !1589, line: 255, baseType: !2427, size: 64, offset: 3136)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 64)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !1589, line: 170, size: 8704, elements: !2429)
!2429 = !{!2430, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !2428, file: !1589, line: 171, baseType: !2431, size: 96)
!2431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 96, elements: !807)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !2428, file: !1589, line: 172, baseType: !119, size: 32, offset: 96)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !2428, file: !1589, line: 173, baseType: !176, size: 16, offset: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2428, file: !1589, line: 174, baseType: !176, size: 16, offset: 144)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !2428, file: !1589, line: 175, baseType: !176, size: 16, offset: 160)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !2428, file: !1589, line: 176, baseType: !176, size: 16, offset: 176)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !2428, file: !1589, line: 177, baseType: !176, size: 16, offset: 192)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2428, file: !1589, line: 178, baseType: !176, size: 16, offset: 208)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !2428, file: !1589, line: 179, baseType: !119, size: 32, offset: 224)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2428, file: !1589, line: 181, baseType: !1346, size: 64, offset: 256)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !2428, file: !1589, line: 182, baseType: !241, size: 32, offset: 320)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !2428, file: !1589, line: 183, baseType: !119, size: 32, offset: 352)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !2428, file: !1589, line: 184, baseType: !163, size: 8192, offset: 384)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !2428, file: !1589, line: 187, baseType: !1816, size: 64, offset: 8576)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !2428, file: !1589, line: 188, baseType: !119, size: 32, offset: 8640)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2428, file: !1589, line: 189, baseType: !119, size: 32, offset: 8672)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !1631, file: !1589, line: 256, baseType: !2448, size: 64, offset: 3200)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2449, size: 64)
!2449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !1589, line: 193, size: 640, elements: !2450)
!2450 = !{!2451, !2452, !2453, !2454}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2449, file: !1589, line: 194, baseType: !1346, size: 64)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !2449, file: !1589, line: 195, baseType: !192, size: 512, offset: 64)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2449, file: !1589, line: 197, baseType: !119, size: 32, offset: 576)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2449, file: !1589, line: 198, baseType: !119, size: 32, offset: 608)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1631, file: !1589, line: 258, baseType: !134, size: 8, offset: 3264)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1631, file: !1589, line: 259, baseType: !2321, size: 56, offset: 3272)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !1622, file: !1589, line: 62, baseType: !192, size: 512, offset: 192)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !1622, file: !1589, line: 64, baseType: !134, size: 8, offset: 704)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !1622, file: !1589, line: 64, baseType: !134, size: 8, offset: 712)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !1622, file: !1589, line: 64, baseType: !134, size: 8, offset: 720)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1622, file: !1589, line: 64, baseType: !134, size: 8, offset: 728)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !1622, file: !1589, line: 65, baseType: !1406, size: 96, offset: 736)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1622, file: !1589, line: 65, baseType: !1406, size: 96, offset: 832)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1622, file: !1589, line: 65, baseType: !241, size: 32, offset: 928)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !1622, file: !1589, line: 67, baseType: !176, size: 16, offset: 960)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !1622, file: !1589, line: 67, baseType: !176, size: 16, offset: 976)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !1622, file: !1589, line: 67, baseType: !176, size: 16, offset: 992)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !1622, file: !1589, line: 67, baseType: !176, size: 16, offset: 1008)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !1622, file: !1589, line: 68, baseType: !176, size: 16, offset: 1024)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !1622, file: !1589, line: 68, baseType: !176, size: 16, offset: 1040)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !1622, file: !1589, line: 69, baseType: !134, size: 8, offset: 1056)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1622, file: !1589, line: 69, baseType: !2321, size: 56, offset: 1064)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1622, file: !1589, line: 70, baseType: !241, size: 32, offset: 1120)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1622, file: !1589, line: 70, baseType: !241, size: 32, offset: 1152)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1622, file: !1589, line: 70, baseType: !241, size: 32, offset: 1184)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !1622, file: !1589, line: 70, baseType: !241, size: 32, offset: 1216)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !1622, file: !1589, line: 71, baseType: !241, size: 32, offset: 1248)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1622, file: !1589, line: 71, baseType: !241, size: 32, offset: 1280)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !1622, file: !1589, line: 74, baseType: !241, size: 32, offset: 1312)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !1622, file: !1589, line: 74, baseType: !241, size: 32, offset: 1344)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !1622, file: !1589, line: 77, baseType: !241, size: 32, offset: 1376)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !1622, file: !1589, line: 77, baseType: !241, size: 32, offset: 1408)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !1622, file: !1589, line: 77, baseType: !241, size: 32, offset: 1440)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !1622, file: !1589, line: 78, baseType: !241, size: 32, offset: 1472)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !1622, file: !1589, line: 78, baseType: !241, size: 32, offset: 1504)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !1622, file: !1589, line: 78, baseType: !241, size: 32, offset: 1536)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !1622, file: !1589, line: 79, baseType: !241, size: 32, offset: 1568)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !1622, file: !1589, line: 79, baseType: !241, size: 32, offset: 1600)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !1622, file: !1589, line: 79, baseType: !241, size: 32, offset: 1632)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !1622, file: !1589, line: 79, baseType: !241, size: 32, offset: 1664)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !1622, file: !1589, line: 80, baseType: !241, size: 32, offset: 1696)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !1622, file: !1589, line: 80, baseType: !241, size: 32, offset: 1728)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !1622, file: !1589, line: 80, baseType: !241, size: 32, offset: 1760)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !1622, file: !1589, line: 81, baseType: !241, size: 32, offset: 1792)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !1622, file: !1589, line: 81, baseType: !241, size: 32, offset: 1824)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !1622, file: !1589, line: 81, baseType: !241, size: 32, offset: 1856)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !1622, file: !1589, line: 82, baseType: !241, size: 32, offset: 1888)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !1622, file: !1589, line: 82, baseType: !241, size: 32, offset: 1920)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !1622, file: !1589, line: 82, baseType: !241, size: 32, offset: 1952)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !1622, file: !1589, line: 85, baseType: !241, size: 32, offset: 1984)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !1622, file: !1589, line: 85, baseType: !241, size: 32, offset: 2016)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !1622, file: !1589, line: 85, baseType: !241, size: 32, offset: 2048)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !1622, file: !1589, line: 85, baseType: !241, size: 32, offset: 2080)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !1622, file: !1589, line: 86, baseType: !241, size: 32, offset: 2112)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !1622, file: !1589, line: 86, baseType: !241, size: 32, offset: 2144)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !1622, file: !1589, line: 86, baseType: !241, size: 32, offset: 2176)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !1622, file: !1589, line: 86, baseType: !241, size: 32, offset: 2208)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !1622, file: !1589, line: 87, baseType: !241, size: 32, offset: 2240)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !1622, file: !1589, line: 87, baseType: !241, size: 32, offset: 2272)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !1622, file: !1589, line: 87, baseType: !241, size: 32, offset: 2304)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !1622, file: !1589, line: 87, baseType: !241, size: 32, offset: 2336)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !1622, file: !1589, line: 90, baseType: !241, size: 32, offset: 2368)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !1622, file: !1589, line: 93, baseType: !241, size: 32, offset: 2400)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !1622, file: !1589, line: 93, baseType: !241, size: 32, offset: 2432)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !1622, file: !1589, line: 93, baseType: !241, size: 32, offset: 2464)
!2516 = !{!2517}
!2517 = !DISubrange(count: 18)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1464, file: !1465, line: 168, baseType: !1703, size: 64, offset: 6144)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1464, file: !1465, line: 169, baseType: !1366, size: 64, offset: 6208)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1464, file: !1465, line: 170, baseType: !2521, size: 64, offset: 6272)
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 64)
!2522 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !2523, line: 40, flags: DIFlagFwdDecl)
!2523 = !DIFile(filename: "blender/source/blender/makesdna/DNA_actuator_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1464, file: !1465, line: 171, baseType: !2290, size: 64, offset: 6336)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !1464, file: !1465, line: 174, baseType: !241, size: 32, offset: 6400)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !1464, file: !1465, line: 174, baseType: !241, size: 32, offset: 6432)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !1464, file: !1465, line: 174, baseType: !241, size: 32, offset: 6464)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !1464, file: !1465, line: 175, baseType: !241, size: 32, offset: 6496)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !1464, file: !1465, line: 175, baseType: !241, size: 32, offset: 6528)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !1464, file: !1465, line: 176, baseType: !176, size: 16, offset: 6560)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1464, file: !1465, line: 176, baseType: !176, size: 16, offset: 6576)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !1464, file: !1465, line: 179, baseType: !1406, size: 96, offset: 6592)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !1464, file: !1465, line: 179, baseType: !1406, size: 96, offset: 6688)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !1464, file: !1465, line: 180, baseType: !241, size: 32, offset: 6784)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !1464, file: !1465, line: 180, baseType: !241, size: 32, offset: 6816)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !1464, file: !1465, line: 180, baseType: !241, size: 32, offset: 6848)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !1464, file: !1465, line: 181, baseType: !241, size: 32, offset: 6880)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !1464, file: !1465, line: 181, baseType: !241, size: 32, offset: 6912)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !1464, file: !1465, line: 182, baseType: !241, size: 32, offset: 6944)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !1464, file: !1465, line: 182, baseType: !241, size: 32, offset: 6976)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !1464, file: !1465, line: 183, baseType: !176, size: 16, offset: 7008)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !1464, file: !1465, line: 183, baseType: !176, size: 16, offset: 7024)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !1464, file: !1465, line: 185, baseType: !119, size: 32, offset: 7040)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !1464, file: !1465, line: 186, baseType: !176, size: 16, offset: 7072)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1464, file: !1465, line: 187, baseType: !176, size: 16, offset: 7088)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !1464, file: !1465, line: 190, baseType: !1581, size: 128, offset: 7104)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !1464, file: !1465, line: 191, baseType: !176, size: 16, offset: 7232)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !1464, file: !1465, line: 192, baseType: !176, size: 16, offset: 7248)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !1464, file: !1465, line: 195, baseType: !176, size: 16, offset: 7264)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !1464, file: !1465, line: 196, baseType: !176, size: 16, offset: 7280)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !1464, file: !1465, line: 197, baseType: !176, size: 16, offset: 7296)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1464, file: !1465, line: 198, baseType: !2381, size: 48, offset: 7312)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !1464, file: !1465, line: 200, baseType: !2554, size: 64, offset: 7360)
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 64)
!2555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !1465, line: 86, size: 192, elements: !2556)
!2556 = !{!2557, !2558, !2559, !2560}
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2555, file: !1465, line: 87, baseType: !2253, size: 64)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !2555, file: !1465, line: 88, baseType: !133, size: 64, offset: 64)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2555, file: !1465, line: 89, baseType: !119, size: 32, offset: 128)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2555, file: !1465, line: 90, baseType: !119, size: 32, offset: 160)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !1464, file: !1465, line: 202, baseType: !202, size: 128, offset: 7424)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !1347, file: !30, line: 151, baseType: !133, size: 64, offset: 3584)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !1347, file: !30, line: 152, baseType: !119, size: 32, offset: 3648)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !1347, file: !30, line: 153, baseType: !119, size: 32, offset: 3680)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1347, file: !30, line: 156, baseType: !1406, size: 96, offset: 3712)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !1347, file: !30, line: 156, baseType: !1406, size: 96, offset: 3808)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !1347, file: !30, line: 156, baseType: !1406, size: 96, offset: 3904)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1347, file: !30, line: 157, baseType: !1406, size: 96, offset: 4000)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !1347, file: !30, line: 158, baseType: !1406, size: 96, offset: 4096)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !1347, file: !30, line: 159, baseType: !1406, size: 96, offset: 4192)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1347, file: !30, line: 160, baseType: !1406, size: 96, offset: 4288)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !1347, file: !30, line: 160, baseType: !1406, size: 96, offset: 4384)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !1347, file: !30, line: 161, baseType: !1581, size: 128, offset: 4480)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !1347, file: !30, line: 161, baseType: !1581, size: 128, offset: 4608)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !1347, file: !30, line: 162, baseType: !1406, size: 96, offset: 4736)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !1347, file: !30, line: 162, baseType: !1406, size: 96, offset: 4832)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !1347, file: !30, line: 163, baseType: !241, size: 32, offset: 4928)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !1347, file: !30, line: 163, baseType: !241, size: 32, offset: 4960)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !1347, file: !30, line: 164, baseType: !2340, size: 512, offset: 4992)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !1347, file: !30, line: 165, baseType: !2340, size: 512, offset: 5504)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !1347, file: !30, line: 166, baseType: !2340, size: 512, offset: 6016)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1347, file: !30, line: 167, baseType: !2340, size: 512, offset: 6528)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !1347, file: !30, line: 176, baseType: !2340, size: 512, offset: 7040)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1347, file: !30, line: 178, baseType: !7, size: 32, offset: 7552)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1347, file: !30, line: 180, baseType: !176, size: 16, offset: 7584)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !1347, file: !30, line: 181, baseType: !176, size: 16, offset: 7600)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !1347, file: !30, line: 183, baseType: !176, size: 16, offset: 7616)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !1347, file: !30, line: 183, baseType: !176, size: 16, offset: 7632)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !1347, file: !30, line: 184, baseType: !176, size: 16, offset: 7648)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !1347, file: !30, line: 184, baseType: !176, size: 16, offset: 7664)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !1347, file: !30, line: 185, baseType: !176, size: 16, offset: 7680)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !1347, file: !30, line: 186, baseType: !176, size: 16, offset: 7696)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !1347, file: !30, line: 187, baseType: !176, size: 16, offset: 7712)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !1347, file: !30, line: 188, baseType: !134, size: 8, offset: 7728)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !1347, file: !30, line: 189, baseType: !134, size: 8, offset: 7736)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !1347, file: !30, line: 192, baseType: !119, size: 32, offset: 7744)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !1347, file: !30, line: 192, baseType: !119, size: 32, offset: 7776)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !1347, file: !30, line: 192, baseType: !119, size: 32, offset: 7808)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !1347, file: !30, line: 192, baseType: !119, size: 32, offset: 7840)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1347, file: !30, line: 194, baseType: !119, size: 32, offset: 7872)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !1347, file: !30, line: 202, baseType: !241, size: 32, offset: 7904)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !1347, file: !30, line: 202, baseType: !241, size: 32, offset: 7936)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !1347, file: !30, line: 202, baseType: !241, size: 32, offset: 7968)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !1347, file: !30, line: 211, baseType: !241, size: 32, offset: 8000)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !1347, file: !30, line: 212, baseType: !241, size: 32, offset: 8032)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1347, file: !30, line: 213, baseType: !241, size: 32, offset: 8064)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !1347, file: !30, line: 214, baseType: !241, size: 32, offset: 8096)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !1347, file: !30, line: 215, baseType: !241, size: 32, offset: 8128)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !1347, file: !30, line: 216, baseType: !241, size: 32, offset: 8160)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !1347, file: !30, line: 219, baseType: !241, size: 32, offset: 8192)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !1347, file: !30, line: 220, baseType: !241, size: 32, offset: 8224)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !1347, file: !30, line: 221, baseType: !241, size: 32, offset: 8256)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !1347, file: !30, line: 224, baseType: !732, size: 16, offset: 8288)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !1347, file: !30, line: 224, baseType: !732, size: 16, offset: 8304)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !1347, file: !30, line: 226, baseType: !176, size: 16, offset: 8320)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !1347, file: !30, line: 228, baseType: !134, size: 8, offset: 8336)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !1347, file: !30, line: 229, baseType: !134, size: 8, offset: 8344)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !1347, file: !30, line: 231, baseType: !176, size: 16, offset: 8352)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !1347, file: !30, line: 232, baseType: !134, size: 8, offset: 8368)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !1347, file: !30, line: 233, baseType: !134, size: 8, offset: 8376)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !1347, file: !30, line: 234, baseType: !241, size: 32, offset: 8384)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !1347, file: !30, line: 235, baseType: !241, size: 32, offset: 8416)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !1347, file: !30, line: 237, baseType: !202, size: 128, offset: 8448)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !1347, file: !30, line: 238, baseType: !202, size: 128, offset: 8576)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !1347, file: !30, line: 239, baseType: !202, size: 128, offset: 8704)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !1347, file: !30, line: 240, baseType: !202, size: 128, offset: 8832)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1347, file: !30, line: 242, baseType: !241, size: 32, offset: 8960)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1347, file: !30, line: 244, baseType: !176, size: 16, offset: 8992)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !1347, file: !30, line: 245, baseType: !732, size: 16, offset: 9008)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1347, file: !30, line: 246, baseType: !1581, size: 128, offset: 9024)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !1347, file: !30, line: 248, baseType: !119, size: 32, offset: 9152)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !1347, file: !30, line: 249, baseType: !119, size: 32, offset: 9184)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !1347, file: !30, line: 251, baseType: !2634, size: 64, offset: 9216)
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 64)
!2635 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !30, line: 251, flags: DIFlagFwdDecl)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !1347, file: !30, line: 253, baseType: !134, size: 8, offset: 9280)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1347, file: !30, line: 254, baseType: !134, size: 8, offset: 9288)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !1347, file: !30, line: 255, baseType: !176, size: 16, offset: 9296)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !1347, file: !30, line: 256, baseType: !1406, size: 96, offset: 9312)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !1347, file: !30, line: 258, baseType: !202, size: 128, offset: 9408)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !1347, file: !30, line: 259, baseType: !202, size: 128, offset: 9536)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !1347, file: !30, line: 260, baseType: !202, size: 128, offset: 9664)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !1347, file: !30, line: 261, baseType: !202, size: 128, offset: 9792)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1347, file: !30, line: 263, baseType: !2645, size: 64, offset: 9920)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 64)
!2646 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !30, line: 52, flags: DIFlagFwdDecl)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !1347, file: !30, line: 264, baseType: !2648, size: 64, offset: 9984)
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2649, size: 64)
!2649 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !30, line: 53, flags: DIFlagFwdDecl)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !1347, file: !30, line: 265, baseType: !2521, size: 64, offset: 10048)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !1347, file: !30, line: 267, baseType: !134, size: 8, offset: 10112)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !1347, file: !30, line: 268, baseType: !134, size: 8, offset: 10120)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !1347, file: !30, line: 269, baseType: !176, size: 16, offset: 10128)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !1347, file: !30, line: 270, baseType: !241, size: 32, offset: 10144)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !1347, file: !30, line: 272, baseType: !2656, size: 64, offset: 10176)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 64)
!2657 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !30, line: 54, flags: DIFlagFwdDecl)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !1347, file: !30, line: 275, baseType: !2659, size: 64, offset: 10240)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 64)
!2660 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !30, line: 275, flags: DIFlagFwdDecl)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !1347, file: !30, line: 277, baseType: !2662, size: 64, offset: 10304)
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 64)
!2663 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !30, line: 56, flags: DIFlagFwdDecl)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !1347, file: !30, line: 277, baseType: !2662, size: 64, offset: 10368)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !1347, file: !30, line: 278, baseType: !396, size: 64, offset: 10432)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1347, file: !30, line: 279, baseType: !396, size: 64, offset: 10496)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1347, file: !30, line: 280, baseType: !7, size: 32, offset: 10560)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !1347, file: !30, line: 281, baseType: !7, size: 32, offset: 10592)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !1347, file: !30, line: 283, baseType: !202, size: 128, offset: 10624)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !1347, file: !30, line: 284, baseType: !202, size: 128, offset: 10752)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !1347, file: !30, line: 285, baseType: !2672, size: 64, offset: 10880)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !1347, file: !30, line: 287, baseType: !2674, size: 64, offset: 10944)
!2674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2675, size: 64)
!2675 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !30, line: 59, flags: DIFlagFwdDecl)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !1347, file: !30, line: 288, baseType: !2677, size: 64, offset: 11008)
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 64)
!2678 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !30, line: 288, flags: DIFlagFwdDecl)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !1347, file: !30, line: 290, baseType: !292, size: 64, offset: 11072)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !1347, file: !30, line: 291, baseType: !2681, size: 64, offset: 11136)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 64)
!2682 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !1686, line: 65, baseType: !1685)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !1347, file: !30, line: 293, baseType: !202, size: 128, offset: 11200)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !1347, file: !30, line: 294, baseType: !2685, size: 64, offset: 11328)
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2686, size: 64)
!2686 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !30, line: 113, baseType: !2687)
!2687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !30, line: 108, size: 256, elements: !2688)
!2688 = !{!2689, !2691, !2692, !2693, !2694}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2687, file: !30, line: 109, baseType: !2690, size: 64)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 64)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2687, file: !30, line: 109, baseType: !2690, size: 64, offset: 64)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2687, file: !30, line: 110, baseType: !1346, size: 64, offset: 128)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2687, file: !30, line: 111, baseType: !119, size: 32, offset: 192)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !2687, file: !30, line: 112, baseType: !241, size: 32, offset: 224)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !1338, file: !1339, line: 1221, baseType: !2696, size: 64, offset: 1088)
!2696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2697, size: 64)
!2697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !2698, line: 52, size: 4224, elements: !2699)
!2698 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2699 = !{!2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2697, file: !2698, line: 53, baseType: !144, size: 960)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2697, file: !2698, line: 54, baseType: !1343, size: 64, offset: 960)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !2697, file: !2698, line: 56, baseType: !176, size: 16, offset: 1024)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !2697, file: !2698, line: 56, baseType: !176, size: 16, offset: 1040)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !2697, file: !2698, line: 57, baseType: !176, size: 16, offset: 1056)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !2697, file: !2698, line: 57, baseType: !176, size: 16, offset: 1072)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !2697, file: !2698, line: 59, baseType: !241, size: 32, offset: 1088)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !2697, file: !2698, line: 59, baseType: !241, size: 32, offset: 1120)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !2697, file: !2698, line: 59, baseType: !241, size: 32, offset: 1152)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !2697, file: !2698, line: 60, baseType: !241, size: 32, offset: 1184)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !2697, file: !2698, line: 60, baseType: !241, size: 32, offset: 1216)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !2697, file: !2698, line: 60, baseType: !241, size: 32, offset: 1248)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !2697, file: !2698, line: 61, baseType: !241, size: 32, offset: 1280)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !2697, file: !2698, line: 61, baseType: !241, size: 32, offset: 1312)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !2697, file: !2698, line: 61, baseType: !241, size: 32, offset: 1344)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2697, file: !2698, line: 68, baseType: !241, size: 32, offset: 1376)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !2697, file: !2698, line: 68, baseType: !241, size: 32, offset: 1408)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2697, file: !2698, line: 68, baseType: !241, size: 32, offset: 1440)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !2697, file: !2698, line: 69, baseType: !241, size: 32, offset: 1472)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !2697, file: !2698, line: 69, baseType: !241, size: 32, offset: 1504)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2697, file: !2698, line: 74, baseType: !241, size: 32, offset: 1536)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2697, file: !2698, line: 79, baseType: !241, size: 32, offset: 1568)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !2697, file: !2698, line: 81, baseType: !176, size: 16, offset: 1600)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2697, file: !2698, line: 91, baseType: !176, size: 16, offset: 1616)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2697, file: !2698, line: 92, baseType: !176, size: 16, offset: 1632)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2697, file: !2698, line: 93, baseType: !176, size: 16, offset: 1648)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2697, file: !2698, line: 94, baseType: !176, size: 16, offset: 1664)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2697, file: !2698, line: 94, baseType: !176, size: 16, offset: 1680)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2697, file: !2698, line: 94, baseType: !176, size: 16, offset: 1696)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2697, file: !2698, line: 94, baseType: !176, size: 16, offset: 1712)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !2697, file: !2698, line: 96, baseType: !241, size: 32, offset: 1728)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !2697, file: !2698, line: 96, baseType: !241, size: 32, offset: 1760)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !2697, file: !2698, line: 96, baseType: !241, size: 32, offset: 1792)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !2697, file: !2698, line: 96, baseType: !241, size: 32, offset: 1824)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !2697, file: !2698, line: 98, baseType: !241, size: 32, offset: 1856)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !2697, file: !2698, line: 98, baseType: !241, size: 32, offset: 1888)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !2697, file: !2698, line: 98, baseType: !241, size: 32, offset: 1920)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !2697, file: !2698, line: 98, baseType: !241, size: 32, offset: 1952)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !2697, file: !2698, line: 99, baseType: !241, size: 32, offset: 1984)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !2697, file: !2698, line: 99, baseType: !241, size: 32, offset: 2016)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !2697, file: !2698, line: 100, baseType: !241, size: 32, offset: 2048)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !2697, file: !2698, line: 100, baseType: !241, size: 32, offset: 2080)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !2697, file: !2698, line: 103, baseType: !176, size: 16, offset: 2112)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !2697, file: !2698, line: 103, baseType: !176, size: 16, offset: 2128)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !2697, file: !2698, line: 103, baseType: !176, size: 16, offset: 2144)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !2697, file: !2698, line: 103, baseType: !176, size: 16, offset: 2160)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !2697, file: !2698, line: 106, baseType: !241, size: 32, offset: 2176)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !2697, file: !2698, line: 106, baseType: !241, size: 32, offset: 2208)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !2697, file: !2698, line: 106, baseType: !241, size: 32, offset: 2240)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !2697, file: !2698, line: 106, baseType: !241, size: 32, offset: 2272)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !2697, file: !2698, line: 107, baseType: !176, size: 16, offset: 2304)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !2697, file: !2698, line: 107, baseType: !176, size: 16, offset: 2320)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !2697, file: !2698, line: 107, baseType: !176, size: 16, offset: 2336)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !2697, file: !2698, line: 107, baseType: !176, size: 16, offset: 2352)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !2697, file: !2698, line: 108, baseType: !241, size: 32, offset: 2368)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !2697, file: !2698, line: 108, baseType: !241, size: 32, offset: 2400)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !2697, file: !2698, line: 109, baseType: !241, size: 32, offset: 2432)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !2697, file: !2698, line: 109, baseType: !241, size: 32, offset: 2464)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !2697, file: !2698, line: 110, baseType: !241, size: 32, offset: 2496)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !2697, file: !2698, line: 110, baseType: !241, size: 32, offset: 2528)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !2697, file: !2698, line: 110, baseType: !241, size: 32, offset: 2560)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !2697, file: !2698, line: 111, baseType: !176, size: 16, offset: 2592)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !2697, file: !2698, line: 111, baseType: !176, size: 16, offset: 2608)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !2697, file: !2698, line: 112, baseType: !176, size: 16, offset: 2624)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !2697, file: !2698, line: 112, baseType: !176, size: 16, offset: 2640)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !2697, file: !2698, line: 112, baseType: !176, size: 16, offset: 2656)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2697, file: !2698, line: 115, baseType: !176, size: 16, offset: 2672)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !2697, file: !2698, line: 118, baseType: !1816, size: 64, offset: 2688)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !2697, file: !2698, line: 118, baseType: !1816, size: 64, offset: 2752)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2697, file: !2698, line: 121, baseType: !1366, size: 64, offset: 2816)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !2697, file: !2698, line: 122, baseType: !1620, size: 1152, offset: 2880)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !2697, file: !2698, line: 123, baseType: !176, size: 16, offset: 4032)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !2697, file: !2698, line: 123, baseType: !176, size: 16, offset: 4048)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2697, file: !2698, line: 123, baseType: !1912, size: 32, offset: 4064)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2697, file: !2698, line: 126, baseType: !2290, size: 64, offset: 4096)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2697, file: !2698, line: 129, baseType: !1703, size: 64, offset: 4160)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1338, file: !1339, line: 1223, baseType: !1337, size: 64, offset: 1152)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1338, file: !1339, line: 1225, baseType: !202, size: 128, offset: 1216)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !1338, file: !1339, line: 1226, baseType: !2779, size: 64, offset: 1344)
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 64)
!2780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !1339, line: 69, size: 320, elements: !2781)
!2781 = !{!2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2780, file: !1339, line: 70, baseType: !2779, size: 64)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2780, file: !1339, line: 70, baseType: !2779, size: 64, offset: 64)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2780, file: !1339, line: 71, baseType: !7, size: 32, offset: 128)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !2780, file: !1339, line: 71, baseType: !7, size: 32, offset: 160)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2780, file: !1339, line: 72, baseType: !119, size: 32, offset: 192)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !2780, file: !1339, line: 73, baseType: !176, size: 16, offset: 224)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !2780, file: !1339, line: 73, baseType: !176, size: 16, offset: 240)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2780, file: !1339, line: 74, baseType: !1346, size: 64, offset: 256)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !1338, file: !1339, line: 1227, baseType: !1346, size: 64, offset: 1408)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1338, file: !1339, line: 1229, baseType: !1406, size: 96, offset: 1472)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !1338, file: !1339, line: 1230, baseType: !1406, size: 96, offset: 1568)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !1338, file: !1339, line: 1231, baseType: !1406, size: 96, offset: 1664)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !1338, file: !1339, line: 1231, baseType: !1406, size: 96, offset: 1760)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1338, file: !1339, line: 1233, baseType: !7, size: 32, offset: 1856)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !1338, file: !1339, line: 1234, baseType: !119, size: 32, offset: 1888)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !1338, file: !1339, line: 1235, baseType: !7, size: 32, offset: 1920)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1338, file: !1339, line: 1237, baseType: !176, size: 16, offset: 1952)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1338, file: !1339, line: 1239, baseType: !134, size: 8, offset: 1968)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1338, file: !1339, line: 1240, baseType: !736, size: 8, offset: 1976)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1338, file: !1339, line: 1242, baseType: !1703, size: 64, offset: 1984)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !1338, file: !1339, line: 1244, baseType: !2803, size: 64, offset: 2048)
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2804, size: 64)
!2804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !2805, line: 200, size: 17024, elements: !2806)
!2805 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2806 = !{!2807, !2808, !2809, !2810, !3139, !3140, !3141, !3142, !3143, !3144, !3145}
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !2804, file: !2805, line: 201, baseType: !2672, size: 64)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !2804, file: !2805, line: 202, baseType: !202, size: 128, offset: 64)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !2804, file: !2805, line: 203, baseType: !202, size: 128, offset: 192)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !2804, file: !2805, line: 206, baseType: !2811, size: 64, offset: 320)
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2812, size: 64)
!2812 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !2805, line: 190, baseType: !2813)
!2813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !2805, line: 126, size: 2816, elements: !2814)
!2814 = !{!2815, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2903, !2904, !2905, !2906, !3111, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3138}
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2813, file: !2805, line: 127, baseType: !2816, size: 64)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 64)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2813, file: !2805, line: 127, baseType: !2816, size: 64, offset: 64)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !2813, file: !2805, line: 128, baseType: !138, size: 64, offset: 128)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !2813, file: !2805, line: 129, baseType: !138, size: 64, offset: 192)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2813, file: !2805, line: 130, baseType: !192, size: 512, offset: 256)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2813, file: !2805, line: 132, baseType: !119, size: 32, offset: 768)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2813, file: !2805, line: 132, baseType: !119, size: 32, offset: 800)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2813, file: !2805, line: 133, baseType: !119, size: 32, offset: 832)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2813, file: !2805, line: 134, baseType: !119, size: 32, offset: 864)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !2813, file: !2805, line: 134, baseType: !119, size: 32, offset: 896)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !2813, file: !2805, line: 134, baseType: !119, size: 32, offset: 928)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !2813, file: !2805, line: 135, baseType: !119, size: 32, offset: 960)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !2813, file: !2805, line: 135, baseType: !119, size: 32, offset: 992)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !2813, file: !2805, line: 136, baseType: !119, size: 32, offset: 1024)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2813, file: !2805, line: 136, baseType: !119, size: 32, offset: 1056)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !2813, file: !2805, line: 137, baseType: !119, size: 32, offset: 1088)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !2813, file: !2805, line: 137, baseType: !119, size: 32, offset: 1120)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !2813, file: !2805, line: 138, baseType: !241, size: 32, offset: 1152)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !2813, file: !2805, line: 139, baseType: !241, size: 32, offset: 1184)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !2813, file: !2805, line: 139, baseType: !241, size: 32, offset: 1216)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !2813, file: !2805, line: 141, baseType: !176, size: 16, offset: 1248)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !2813, file: !2805, line: 142, baseType: !176, size: 16, offset: 1264)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !2813, file: !2805, line: 143, baseType: !119, size: 32, offset: 1280)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !2813, file: !2805, line: 144, baseType: !119, size: 32, offset: 1312)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !2813, file: !2805, line: 146, baseType: !2841, size: 64, offset: 1344)
!2841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2842, size: 64)
!2842 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !2805, line: 114, baseType: !2843)
!2843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !2805, line: 99, size: 7232, elements: !2844)
!2844 = !{!2845, !2847, !2848, !2849, !2850, !2851, !2852, !2860, !2864, !2876, !2885, !2892, !2902}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2843, file: !2805, line: 100, baseType: !2846, size: 64)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 64)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2843, file: !2805, line: 100, baseType: !2846, size: 64, offset: 64)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !2843, file: !2805, line: 101, baseType: !119, size: 32, offset: 128)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2843, file: !2805, line: 101, baseType: !119, size: 32, offset: 160)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !2843, file: !2805, line: 102, baseType: !119, size: 32, offset: 192)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !2843, file: !2805, line: 102, baseType: !119, size: 32, offset: 224)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !2843, file: !2805, line: 103, baseType: !2853, size: 64, offset: 256)
!2853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2854, size: 64)
!2854 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !2805, line: 59, baseType: !2855)
!2855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !2805, line: 56, size: 2112, elements: !2856)
!2856 = !{!2857, !2858, !2859}
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2855, file: !2805, line: 57, baseType: !280, size: 2048)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !2855, file: !2805, line: 58, baseType: !119, size: 32, offset: 2048)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !2855, file: !2805, line: 58, baseType: !119, size: 32, offset: 2080)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2843, file: !2805, line: 106, baseType: !2861, size: 6144, offset: 320)
!2861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 6144, elements: !2862)
!2862 = !{!2863}
!2863 = !DISubrange(count: 768)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !2843, file: !2805, line: 107, baseType: !2865, size: 64, offset: 6464)
!2865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2866, size: 64)
!2866 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !2805, line: 97, baseType: !2867)
!2867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !2805, line: 83, size: 8320, elements: !2868)
!2868 = !{!2869, !2870, !2871, !2872, !2873, !2874, !2875}
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2867, file: !2805, line: 84, baseType: !2861, size: 6144)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !2867, file: !2805, line: 87, baseType: !280, size: 2048, offset: 6144)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2867, file: !2805, line: 88, baseType: !2265, size: 64, offset: 8192)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !2867, file: !2805, line: 90, baseType: !176, size: 16, offset: 8256)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2867, file: !2805, line: 92, baseType: !176, size: 16, offset: 8272)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !2867, file: !2805, line: 93, baseType: !176, size: 16, offset: 8288)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !2867, file: !2805, line: 95, baseType: !176, size: 16, offset: 8304)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !2843, file: !2805, line: 108, baseType: !2877, size: 64, offset: 6528)
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 64)
!2878 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !2805, line: 66, baseType: !2879)
!2879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !2805, line: 61, size: 128, elements: !2880)
!2880 = !{!2881, !2882, !2883, !2884}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !2879, file: !2805, line: 62, baseType: !119, size: 32)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !2879, file: !2805, line: 63, baseType: !119, size: 32, offset: 32)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !2879, file: !2805, line: 64, baseType: !119, size: 32, offset: 64)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !2879, file: !2805, line: 65, baseType: !119, size: 32, offset: 96)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !2843, file: !2805, line: 109, baseType: !2886, size: 64, offset: 6592)
!2886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2887, size: 64)
!2887 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !2805, line: 71, baseType: !2888)
!2888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !2805, line: 68, size: 64, elements: !2889)
!2889 = !{!2890, !2891}
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !2888, file: !2805, line: 69, baseType: !119, size: 32)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !2888, file: !2805, line: 70, baseType: !119, size: 32, offset: 32)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !2843, file: !2805, line: 110, baseType: !2893, size: 64, offset: 6656)
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 64)
!2894 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !2805, line: 81, baseType: !2895)
!2895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !2805, line: 73, size: 352, elements: !2896)
!2896 = !{!2897, !2898, !2899, !2900, !2901}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !2895, file: !2805, line: 74, baseType: !1406, size: 96)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2895, file: !2805, line: 75, baseType: !1406, size: 96, offset: 96)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !2895, file: !2805, line: 76, baseType: !1406, size: 96, offset: 192)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2895, file: !2805, line: 77, baseType: !119, size: 32, offset: 288)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2895, file: !2805, line: 78, baseType: !119, size: 32, offset: 320)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !2843, file: !2805, line: 113, baseType: !2315, size: 512, offset: 6720)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2813, file: !2805, line: 148, baseType: !1366, size: 64, offset: 1408)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2813, file: !2805, line: 151, baseType: !1337, size: 64, offset: 1472)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !2813, file: !2805, line: 152, baseType: !1346, size: 64, offset: 1536)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2813, file: !2805, line: 153, baseType: !2907, size: 64, offset: 1600)
!2907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2908, size: 64)
!2908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !2909, line: 64, size: 19136, elements: !2910)
!2909 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2910 = !{!2911, !2912, !2913, !2914, !2915, !2916, !2918, !2919, !2920, !2921, !2924, !2925, !3097, !3098, !3106, !3107, !3108, !3109, !3110}
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2908, file: !2909, line: 65, baseType: !144, size: 960)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2908, file: !2909, line: 66, baseType: !1343, size: 64, offset: 960)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2908, file: !2909, line: 68, baseType: !163, size: 8192, offset: 1024)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2908, file: !2909, line: 70, baseType: !119, size: 32, offset: 9216)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2908, file: !2909, line: 71, baseType: !119, size: 32, offset: 9248)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !2908, file: !2909, line: 72, baseType: !2917, size: 64, offset: 9280)
!2917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 64, elements: !293)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !2908, file: !2909, line: 74, baseType: !241, size: 32, offset: 9344)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !2908, file: !2909, line: 74, baseType: !241, size: 32, offset: 9376)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2908, file: !2909, line: 76, baseType: !2265, size: 64, offset: 9408)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2908, file: !2909, line: 77, baseType: !2922, size: 64, offset: 9472)
!2922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2923, size: 64)
!2923 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !2909, line: 77, flags: DIFlagFwdDecl)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2908, file: !2909, line: 78, baseType: !1436, size: 64, offset: 9536)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !2908, file: !2909, line: 80, baseType: !2926, size: 2624, offset: 9600)
!2926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !2927, line: 340, size: 2624, elements: !2928)
!2927 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2928 = !{!2929, !2957, !2975, !2976, !2977, !2992, !3050, !3051, !3077, !3078, !3079, !3080, !3086}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !2926, file: !2927, line: 341, baseType: !2930, size: 576)
!2930 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !2927, line: 251, baseType: !2931)
!2931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !2927, line: 207, size: 576, elements: !2932)
!2932 = !{!2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2931, file: !2927, line: 208, baseType: !119, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !2931, file: !2927, line: 211, baseType: !176, size: 16, offset: 32)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !2931, file: !2927, line: 212, baseType: !176, size: 16, offset: 48)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !2931, file: !2927, line: 213, baseType: !241, size: 32, offset: 64)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !2931, file: !2927, line: 214, baseType: !176, size: 16, offset: 96)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !2931, file: !2927, line: 215, baseType: !176, size: 16, offset: 112)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !2931, file: !2927, line: 216, baseType: !176, size: 16, offset: 128)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !2931, file: !2927, line: 217, baseType: !176, size: 16, offset: 144)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !2931, file: !2927, line: 218, baseType: !176, size: 16, offset: 160)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !2931, file: !2927, line: 219, baseType: !176, size: 16, offset: 176)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !2931, file: !2927, line: 220, baseType: !241, size: 32, offset: 192)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !2931, file: !2927, line: 222, baseType: !176, size: 16, offset: 224)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !2931, file: !2927, line: 225, baseType: !176, size: 16, offset: 240)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !2931, file: !2927, line: 228, baseType: !119, size: 32, offset: 256)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !2931, file: !2927, line: 229, baseType: !119, size: 32, offset: 288)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !2931, file: !2927, line: 233, baseType: !119, size: 32, offset: 320)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !2931, file: !2927, line: 236, baseType: !176, size: 16, offset: 352)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2931, file: !2927, line: 236, baseType: !176, size: 16, offset: 368)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2931, file: !2927, line: 241, baseType: !241, size: 32, offset: 384)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !2931, file: !2927, line: 244, baseType: !119, size: 32, offset: 416)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !2931, file: !2927, line: 244, baseType: !119, size: 32, offset: 448)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !2931, file: !2927, line: 245, baseType: !241, size: 32, offset: 480)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !2931, file: !2927, line: 248, baseType: !241, size: 32, offset: 512)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2931, file: !2927, line: 250, baseType: !119, size: 32, offset: 544)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2926, file: !2927, line: 342, baseType: !2958, size: 448, offset: 576)
!2958 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !2927, line: 79, baseType: !2959)
!2959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !2927, line: 61, size: 448, elements: !2960)
!2960 = !{!2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974}
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !2959, file: !2927, line: 62, baseType: !138, size: 64)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !2959, file: !2927, line: 64, baseType: !176, size: 16, offset: 64)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2959, file: !2927, line: 65, baseType: !176, size: 16, offset: 80)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !2959, file: !2927, line: 67, baseType: !241, size: 32, offset: 96)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !2959, file: !2927, line: 68, baseType: !241, size: 32, offset: 128)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !2959, file: !2927, line: 69, baseType: !241, size: 32, offset: 160)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2959, file: !2927, line: 70, baseType: !176, size: 16, offset: 192)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2959, file: !2927, line: 71, baseType: !176, size: 16, offset: 208)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !2959, file: !2927, line: 72, baseType: !292, size: 64, offset: 224)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !2959, file: !2927, line: 75, baseType: !241, size: 32, offset: 288)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !2959, file: !2927, line: 75, baseType: !241, size: 32, offset: 320)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !2959, file: !2927, line: 75, baseType: !241, size: 32, offset: 352)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !2959, file: !2927, line: 78, baseType: !241, size: 32, offset: 384)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !2959, file: !2927, line: 78, baseType: !241, size: 32, offset: 416)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !2926, file: !2927, line: 343, baseType: !202, size: 128, offset: 1024)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !2926, file: !2927, line: 344, baseType: !202, size: 128, offset: 1152)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !2926, file: !2927, line: 345, baseType: !2978, size: 192, offset: 1280)
!2978 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !2927, line: 278, baseType: !2979)
!2979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !2927, line: 270, size: 192, elements: !2980)
!2980 = !{!2981, !2982, !2983, !2984, !2985}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2979, file: !2927, line: 271, baseType: !119, size: 32)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2979, file: !2927, line: 273, baseType: !241, size: 32, offset: 32)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !2979, file: !2927, line: 275, baseType: !119, size: 32, offset: 64)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !2979, file: !2927, line: 276, baseType: !119, size: 32, offset: 96)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !2979, file: !2927, line: 277, baseType: !2986, size: 64, offset: 128)
!2986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2987, size: 64)
!2987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !2927, line: 55, size: 576, elements: !2988)
!2988 = !{!2989, !2990, !2991}
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2987, file: !2927, line: 56, baseType: !119, size: 32)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2987, file: !2927, line: 57, baseType: !241, size: 32, offset: 32)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2987, file: !2927, line: 58, baseType: !2340, size: 512, offset: 64)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !2926, file: !2927, line: 346, baseType: !2993, size: 384, offset: 1472)
!2993 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !2927, line: 268, baseType: !2994)
!2994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !2927, line: 253, size: 384, elements: !2995)
!2995 = !{!2996, !2997, !2998, !2999, !3000, !3044, !3045, !3046, !3047, !3048, !3049}
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2994, file: !2927, line: 254, baseType: !119, size: 32)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !2994, file: !2927, line: 255, baseType: !119, size: 32, offset: 32)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !2994, file: !2927, line: 255, baseType: !119, size: 32, offset: 64)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !2994, file: !2927, line: 258, baseType: !241, size: 32, offset: 96)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !2994, file: !2927, line: 259, baseType: !3001, size: 64, offset: 128)
!3001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3002, size: 64)
!3002 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !2927, line: 164, baseType: !3003)
!3003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !2927, line: 108, size: 1664, elements: !3004)
!3004 = !{!3005, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043}
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3003, file: !2927, line: 109, baseType: !3006, size: 64)
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3003, size: 64)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3003, file: !2927, line: 109, baseType: !3006, size: 64, offset: 64)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3003, file: !2927, line: 111, baseType: !192, size: 512, offset: 128)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !3003, file: !2927, line: 119, baseType: !292, size: 64, offset: 640)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !3003, file: !2927, line: 119, baseType: !292, size: 64, offset: 704)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !3003, file: !2927, line: 125, baseType: !292, size: 64, offset: 768)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !3003, file: !2927, line: 125, baseType: !292, size: 64, offset: 832)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3003, file: !2927, line: 127, baseType: !292, size: 64, offset: 896)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !3003, file: !2927, line: 130, baseType: !119, size: 32, offset: 960)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !3003, file: !2927, line: 131, baseType: !119, size: 32, offset: 992)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !3003, file: !2927, line: 132, baseType: !3017, size: 64, offset: 1024)
!3017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3018, size: 64)
!3018 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !2927, line: 106, baseType: !3019)
!3019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !2927, line: 81, size: 512, elements: !3020)
!3020 = !{!3021, !3022, !3025, !3026, !3027, !3028}
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3019, file: !2927, line: 82, baseType: !292, size: 64)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !3019, file: !2927, line: 97, baseType: !3023, size: 256, offset: 64)
!3023 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 256, elements: !3024)
!3024 = !{!289, !294}
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !3019, file: !2927, line: 102, baseType: !292, size: 64, offset: 320)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !3019, file: !2927, line: 102, baseType: !292, size: 64, offset: 384)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !3019, file: !2927, line: 104, baseType: !119, size: 32, offset: 448)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3019, file: !2927, line: 105, baseType: !119, size: 32, offset: 480)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !3003, file: !2927, line: 135, baseType: !1406, size: 96, offset: 1088)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !3003, file: !2927, line: 136, baseType: !241, size: 32, offset: 1184)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3003, file: !2927, line: 139, baseType: !119, size: 32, offset: 1216)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !3003, file: !2927, line: 139, baseType: !119, size: 32, offset: 1248)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !3003, file: !2927, line: 139, baseType: !119, size: 32, offset: 1280)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !3003, file: !2927, line: 140, baseType: !1406, size: 96, offset: 1312)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !3003, file: !2927, line: 143, baseType: !176, size: 16, offset: 1408)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !3003, file: !2927, line: 144, baseType: !176, size: 16, offset: 1424)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !3003, file: !2927, line: 145, baseType: !176, size: 16, offset: 1440)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !3003, file: !2927, line: 148, baseType: !176, size: 16, offset: 1456)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !3003, file: !2927, line: 149, baseType: !119, size: 32, offset: 1472)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !3003, file: !2927, line: 150, baseType: !241, size: 32, offset: 1504)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !3003, file: !2927, line: 152, baseType: !1436, size: 64, offset: 1536)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3003, file: !2927, line: 163, baseType: !241, size: 32, offset: 1600)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3003, file: !2927, line: 163, baseType: !241, size: 32, offset: 1632)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !2994, file: !2927, line: 261, baseType: !241, size: 32, offset: 192)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !2994, file: !2927, line: 261, baseType: !241, size: 32, offset: 224)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !2994, file: !2927, line: 261, baseType: !241, size: 32, offset: 256)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2994, file: !2927, line: 263, baseType: !119, size: 32, offset: 288)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2994, file: !2927, line: 266, baseType: !119, size: 32, offset: 320)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !2994, file: !2927, line: 267, baseType: !241, size: 32, offset: 352)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !2926, file: !2927, line: 347, baseType: !3001, size: 64, offset: 1856)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !2926, file: !2927, line: 348, baseType: !3052, size: 64, offset: 1920)
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3053, size: 64)
!3053 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !2927, line: 205, baseType: !3054)
!3054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !2927, line: 186, size: 1024, elements: !3055)
!3055 = !{!3056, !3058, !3059, !3060, !3062, !3063, !3064, !3072, !3073, !3074, !3075, !3076}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3054, file: !2927, line: 187, baseType: !3057, size: 64)
!3057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 64)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3054, file: !2927, line: 187, baseType: !3057, size: 64, offset: 64)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3054, file: !2927, line: 189, baseType: !192, size: 512, offset: 128)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !3054, file: !2927, line: 191, baseType: !3061, size: 64, offset: 640)
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 64)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !3054, file: !2927, line: 193, baseType: !119, size: 32, offset: 704)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3054, file: !2927, line: 193, baseType: !119, size: 32, offset: 736)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !3054, file: !2927, line: 195, baseType: !3065, size: 64, offset: 768)
!3065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3066, size: 64)
!3066 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !2927, line: 184, baseType: !3067)
!3067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !2927, line: 166, size: 320, elements: !3068)
!3068 = !{!3069, !3070, !3071}
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !3067, file: !2927, line: 180, baseType: !3023, size: 256)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !3067, file: !2927, line: 182, baseType: !119, size: 32, offset: 256)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3067, file: !2927, line: 183, baseType: !119, size: 32, offset: 288)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !3054, file: !2927, line: 196, baseType: !119, size: 32, offset: 832)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3054, file: !2927, line: 198, baseType: !119, size: 32, offset: 864)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3054, file: !2927, line: 200, baseType: !2253, size: 64, offset: 896)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !3054, file: !2927, line: 201, baseType: !241, size: 32, offset: 960)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !3054, file: !2927, line: 204, baseType: !119, size: 32, offset: 992)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2926, file: !2927, line: 350, baseType: !202, size: 128, offset: 1984)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !2926, file: !2927, line: 351, baseType: !119, size: 32, offset: 2112)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !2926, file: !2927, line: 351, baseType: !119, size: 32, offset: 2144)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2926, file: !2927, line: 353, baseType: !3081, size: 64, offset: 2176)
!3081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3082, size: 64)
!3082 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !2927, line: 297, baseType: !3083)
!3083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !2927, line: 295, size: 2048, elements: !3084)
!3084 = !{!3085}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !3083, file: !2927, line: 296, baseType: !280, size: 2048)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !2926, file: !2927, line: 355, baseType: !3087, size: 384, offset: 2240)
!3087 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !2927, line: 338, baseType: !3088)
!3088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !2927, line: 322, size: 384, elements: !3089)
!3089 = !{!3090, !3091, !3092, !3093, !3094, !3095, !3096}
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !3088, file: !2927, line: 323, baseType: !119, size: 32)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !3088, file: !2927, line: 325, baseType: !176, size: 16, offset: 32)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3088, file: !2927, line: 326, baseType: !176, size: 16, offset: 48)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !3088, file: !2927, line: 331, baseType: !202, size: 128, offset: 64)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !3088, file: !2927, line: 334, baseType: !202, size: 128, offset: 192)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !3088, file: !2927, line: 335, baseType: !119, size: 32, offset: 320)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3088, file: !2927, line: 337, baseType: !119, size: 32, offset: 352)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !2908, file: !2909, line: 81, baseType: !138, size: 64, offset: 12224)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !2908, file: !2909, line: 85, baseType: !3099, size: 6208, offset: 12288)
!3099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !2909, line: 55, size: 6208, elements: !3100)
!3100 = !{!3101, !3102, !3103, !3104, !3105}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3099, file: !2909, line: 56, baseType: !2861, size: 6144)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !3099, file: !2909, line: 58, baseType: !176, size: 16, offset: 6144)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !3099, file: !2909, line: 59, baseType: !176, size: 16, offset: 6160)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !3099, file: !2909, line: 60, baseType: !176, size: 16, offset: 6176)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !3099, file: !2909, line: 61, baseType: !176, size: 16, offset: 6192)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2908, file: !2909, line: 86, baseType: !119, size: 32, offset: 18496)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2908, file: !2909, line: 88, baseType: !119, size: 32, offset: 18528)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !2908, file: !2909, line: 90, baseType: !119, size: 32, offset: 18560)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !2908, file: !2909, line: 94, baseType: !119, size: 32, offset: 18592)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !2908, file: !2909, line: 100, baseType: !2315, size: 512, offset: 18624)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2813, file: !2805, line: 154, baseType: !3112, size: 64, offset: 1664)
!3112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3113, size: 64)
!3113 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !2805, line: 154, flags: DIFlagFwdDecl)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2813, file: !2805, line: 156, baseType: !2265, size: 64, offset: 1728)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !2813, file: !2805, line: 158, baseType: !241, size: 32, offset: 1792)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !2813, file: !2805, line: 159, baseType: !241, size: 32, offset: 1824)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !2813, file: !2805, line: 162, baseType: !2816, size: 64, offset: 1856)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !2813, file: !2805, line: 162, baseType: !2816, size: 64, offset: 1920)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !2813, file: !2805, line: 162, baseType: !2816, size: 64, offset: 1984)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !2813, file: !2805, line: 164, baseType: !202, size: 128, offset: 2048)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !2813, file: !2805, line: 166, baseType: !3122, size: 64, offset: 2176)
!3122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3123, size: 64)
!3123 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !2523, line: 83, flags: DIFlagFwdDecl)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !2813, file: !2805, line: 167, baseType: !138, size: 64, offset: 2240)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2813, file: !2805, line: 168, baseType: !241, size: 32, offset: 2304)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !2813, file: !2805, line: 170, baseType: !241, size: 32, offset: 2336)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !2813, file: !2805, line: 170, baseType: !241, size: 32, offset: 2368)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !2813, file: !2805, line: 171, baseType: !241, size: 32, offset: 2400)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !2813, file: !2805, line: 173, baseType: !138, size: 64, offset: 2432)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !2813, file: !2805, line: 175, baseType: !119, size: 32, offset: 2496)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !2813, file: !2805, line: 176, baseType: !119, size: 32, offset: 2528)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !2813, file: !2805, line: 179, baseType: !119, size: 32, offset: 2560)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !2813, file: !2805, line: 180, baseType: !241, size: 32, offset: 2592)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2813, file: !2805, line: 183, baseType: !119, size: 32, offset: 2624)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !2813, file: !2805, line: 185, baseType: !134, size: 8, offset: 2656)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2813, file: !2805, line: 186, baseType: !3137, size: 24, offset: 2664)
!3137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 24, elements: !807)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !2813, file: !2805, line: 189, baseType: !202, size: 128, offset: 2688)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !2804, file: !2805, line: 207, baseType: !163, size: 8192, offset: 384)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !2804, file: !2805, line: 208, baseType: !163, size: 8192, offset: 8576)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !2804, file: !2805, line: 210, baseType: !119, size: 32, offset: 16768)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !2804, file: !2805, line: 210, baseType: !119, size: 32, offset: 16800)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !2804, file: !2805, line: 211, baseType: !119, size: 32, offset: 16832)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2804, file: !2805, line: 211, baseType: !119, size: 32, offset: 16864)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !2804, file: !2805, line: 212, baseType: !1933, size: 128, offset: 16896)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !1338, file: !1339, line: 1246, baseType: !3147, size: 64, offset: 2112)
!3147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3148, size: 64)
!3148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !1339, line: 1067, size: 5184, elements: !3149)
!3149 = !{!3150, !3179, !3180, !3194, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3229, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310, !3311, !3339}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !3148, file: !1339, line: 1068, baseType: !3151, size: 64)
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 64)
!3152 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !1339, line: 934, baseType: !3153)
!3153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !1339, line: 925, size: 576, elements: !3154)
!3154 = !{!3155, !3171, !3172, !3173, !3174, !3175, !3178}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !3153, file: !1339, line: 926, baseType: !3156, size: 320)
!3156 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !1339, line: 830, baseType: !3157)
!3157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !1339, line: 813, size: 320, elements: !3158)
!3158 = !{!3159, !3162, !3165, !3166, !3168, !3169, !3170}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !3157, file: !1339, line: 814, baseType: !3160, size: 64)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3161, size: 64)
!3161 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !1339, line: 51, flags: DIFlagFwdDecl)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !3157, file: !1339, line: 815, baseType: !3163, size: 64, offset: 64)
!3163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3164, size: 64)
!3164 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !1339, line: 815, flags: DIFlagFwdDecl)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !3157, file: !1339, line: 818, baseType: !138, size: 64, offset: 128)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !3157, file: !1339, line: 819, baseType: !3167, size: 32, offset: 192)
!3167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !313, size: 32, elements: !288)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3157, file: !1339, line: 822, baseType: !119, size: 32, offset: 224)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !3157, file: !1339, line: 826, baseType: !119, size: 32, offset: 256)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !3157, file: !1339, line: 829, baseType: !119, size: 32, offset: 288)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3153, file: !1339, line: 928, baseType: !176, size: 16, offset: 320)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3153, file: !1339, line: 928, baseType: !176, size: 16, offset: 336)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !3153, file: !1339, line: 929, baseType: !119, size: 32, offset: 352)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !3153, file: !1339, line: 930, baseType: !2287, size: 64, offset: 384)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !3153, file: !1339, line: 931, baseType: !3176, size: 64, offset: 448)
!3176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3177, size: 64)
!3177 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !1339, line: 931, flags: DIFlagFwdDecl)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !3153, file: !1339, line: 933, baseType: !138, size: 64, offset: 512)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !3148, file: !1339, line: 1069, baseType: !3151, size: 64, offset: 64)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !3148, file: !1339, line: 1070, baseType: !3181, size: 64, offset: 128)
!3181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3182, size: 64)
!3182 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !1339, line: 916, baseType: !3183)
!3183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !1339, line: 891, size: 704, elements: !3184)
!3184 = !{!3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !3183, file: !1339, line: 892, baseType: !3156, size: 320)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3183, file: !1339, line: 896, baseType: !119, size: 32, offset: 320)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !3183, file: !1339, line: 900, baseType: !2431, size: 96, offset: 352)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !3183, file: !1339, line: 903, baseType: !241, size: 32, offset: 448)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !3183, file: !1339, line: 906, baseType: !119, size: 32, offset: 480)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !3183, file: !1339, line: 909, baseType: !241, size: 32, offset: 512)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !3183, file: !1339, line: 912, baseType: !241, size: 32, offset: 544)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !3183, file: !1339, line: 914, baseType: !1346, size: 64, offset: 576)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3183, file: !1339, line: 915, baseType: !138, size: 64, offset: 640)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !3148, file: !1339, line: 1071, baseType: !3195, size: 64, offset: 192)
!3195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3196, size: 64)
!3196 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !1339, line: 920, baseType: !3197)
!3197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !1339, line: 918, size: 320, elements: !3198)
!3198 = !{!3199}
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !3197, file: !1339, line: 919, baseType: !3156, size: 320)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !3148, file: !1339, line: 1075, baseType: !241, size: 32, offset: 256)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !3148, file: !1339, line: 1077, baseType: !241, size: 32, offset: 288)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !3148, file: !1339, line: 1078, baseType: !241, size: 32, offset: 320)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !3148, file: !1339, line: 1079, baseType: !176, size: 16, offset: 352)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !3148, file: !1339, line: 1082, baseType: !176, size: 16, offset: 368)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !3148, file: !1339, line: 1085, baseType: !134, size: 8, offset: 384)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !3148, file: !1339, line: 1086, baseType: !134, size: 8, offset: 392)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !3148, file: !1339, line: 1087, baseType: !134, size: 8, offset: 400)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !3148, file: !1339, line: 1088, baseType: !134, size: 8, offset: 408)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !3148, file: !1339, line: 1090, baseType: !241, size: 32, offset: 416)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !3148, file: !1339, line: 1093, baseType: !176, size: 16, offset: 448)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !3148, file: !1339, line: 1096, baseType: !134, size: 8, offset: 464)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3148, file: !1339, line: 1098, baseType: !310, size: 40, offset: 472)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !3148, file: !1339, line: 1101, baseType: !3214, size: 832, offset: 512)
!3214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !1339, line: 836, size: 832, elements: !3215)
!3215 = !{!3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228}
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !3214, file: !1339, line: 837, baseType: !3156, size: 320)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3214, file: !1339, line: 839, baseType: !176, size: 16, offset: 320)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !3214, file: !1339, line: 839, baseType: !176, size: 16, offset: 336)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !3214, file: !1339, line: 842, baseType: !176, size: 16, offset: 352)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !3214, file: !1339, line: 842, baseType: !176, size: 16, offset: 368)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !3214, file: !1339, line: 843, baseType: !1912, size: 32, offset: 384)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3214, file: !1339, line: 845, baseType: !119, size: 32, offset: 416)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !3214, file: !1339, line: 847, baseType: !138, size: 64, offset: 448)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !3214, file: !1339, line: 848, baseType: !2253, size: 64, offset: 512)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !3214, file: !1339, line: 849, baseType: !2253, size: 64, offset: 576)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !3214, file: !1339, line: 850, baseType: !2253, size: 64, offset: 640)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !3214, file: !1339, line: 851, baseType: !1406, size: 96, offset: 704)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3214, file: !1339, line: 852, baseType: !241, size: 32, offset: 800)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !3148, file: !1339, line: 1104, baseType: !3230, size: 1344, offset: 1344)
!3230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !1339, line: 867, size: 1344, elements: !3231)
!3231 = !{!3232, !3233, !3234, !3235, !3236, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3230, file: !1339, line: 868, baseType: !176, size: 16)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !3230, file: !1339, line: 869, baseType: !176, size: 16, offset: 16)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !3230, file: !1339, line: 870, baseType: !176, size: 16, offset: 32)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !3230, file: !1339, line: 871, baseType: !176, size: 16, offset: 48)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !3230, file: !1339, line: 873, baseType: !3237, size: 896, offset: 64)
!3237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3238, size: 896, elements: !2322)
!3238 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !1339, line: 864, baseType: !3239)
!3239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !1339, line: 859, size: 128, elements: !3240)
!3240 = !{!3241, !3242, !3243, !3244, !3245, !3246}
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3239, file: !1339, line: 860, baseType: !176, size: 16)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !3239, file: !1339, line: 861, baseType: !176, size: 16, offset: 16)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !3239, file: !1339, line: 861, baseType: !176, size: 16, offset: 32)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3239, file: !1339, line: 861, baseType: !176, size: 16, offset: 48)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3239, file: !1339, line: 862, baseType: !119, size: 32, offset: 64)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !3239, file: !1339, line: 863, baseType: !241, size: 32, offset: 96)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !3230, file: !1339, line: 874, baseType: !138, size: 64, offset: 960)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !3230, file: !1339, line: 876, baseType: !241, size: 32, offset: 1024)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3230, file: !1339, line: 876, baseType: !241, size: 32, offset: 1056)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !3230, file: !1339, line: 878, baseType: !119, size: 32, offset: 1088)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !3230, file: !1339, line: 879, baseType: !119, size: 32, offset: 1120)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !3230, file: !1339, line: 881, baseType: !119, size: 32, offset: 1152)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !3230, file: !1339, line: 881, baseType: !119, size: 32, offset: 1184)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3230, file: !1339, line: 883, baseType: !1337, size: 64, offset: 1216)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3230, file: !1339, line: 884, baseType: !1346, size: 64, offset: 1280)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !3148, file: !1339, line: 1107, baseType: !241, size: 32, offset: 2688)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !3148, file: !1339, line: 1110, baseType: !241, size: 32, offset: 2720)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !3148, file: !1339, line: 1113, baseType: !176, size: 16, offset: 2752)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !3148, file: !1339, line: 1113, baseType: !176, size: 16, offset: 2768)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !3148, file: !1339, line: 1116, baseType: !134, size: 8, offset: 2784)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !3148, file: !1339, line: 1117, baseType: !736, size: 8, offset: 2792)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !3148, file: !1339, line: 1120, baseType: !176, size: 16, offset: 2800)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !3148, file: !1339, line: 1121, baseType: !241, size: 32, offset: 2816)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !3148, file: !1339, line: 1122, baseType: !241, size: 32, offset: 2848)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !3148, file: !1339, line: 1123, baseType: !241, size: 32, offset: 2880)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !3148, file: !1339, line: 1124, baseType: !241, size: 32, offset: 2912)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !3148, file: !1339, line: 1125, baseType: !241, size: 32, offset: 2944)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !3148, file: !1339, line: 1126, baseType: !241, size: 32, offset: 2976)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !3148, file: !1339, line: 1127, baseType: !241, size: 32, offset: 3008)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !3148, file: !1339, line: 1128, baseType: !241, size: 32, offset: 3040)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !3148, file: !1339, line: 1129, baseType: !241, size: 32, offset: 3072)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !3148, file: !1339, line: 1130, baseType: !241, size: 32, offset: 3104)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !3148, file: !1339, line: 1131, baseType: !176, size: 16, offset: 3136)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !3148, file: !1339, line: 1132, baseType: !134, size: 8, offset: 3152)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !3148, file: !1339, line: 1133, baseType: !134, size: 8, offset: 3160)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !3148, file: !1339, line: 1134, baseType: !3137, size: 24, offset: 3168)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !3148, file: !1339, line: 1135, baseType: !134, size: 8, offset: 3192)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !3148, file: !1339, line: 1138, baseType: !1346, size: 64, offset: 3200)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !3148, file: !1339, line: 1139, baseType: !134, size: 8, offset: 3264)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !3148, file: !1339, line: 1140, baseType: !134, size: 8, offset: 3272)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !3148, file: !1339, line: 1141, baseType: !134, size: 8, offset: 3280)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !3148, file: !1339, line: 1142, baseType: !134, size: 8, offset: 3288)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !3148, file: !1339, line: 1143, baseType: !134, size: 8, offset: 3296)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !3148, file: !1339, line: 1144, baseType: !3285, size: 64, offset: 3304)
!3285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 64, elements: !244)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !3148, file: !1339, line: 1145, baseType: !3285, size: 64, offset: 3368)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !3148, file: !1339, line: 1148, baseType: !134, size: 8, offset: 3432)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !3148, file: !1339, line: 1149, baseType: !134, size: 8, offset: 3440)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !3148, file: !1339, line: 1152, baseType: !134, size: 8, offset: 3448)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !3148, file: !1339, line: 1152, baseType: !134, size: 8, offset: 3456)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !3148, file: !1339, line: 1153, baseType: !134, size: 8, offset: 3464)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !3148, file: !1339, line: 1154, baseType: !176, size: 16, offset: 3472)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !3148, file: !1339, line: 1154, baseType: !176, size: 16, offset: 3488)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !3148, file: !1339, line: 1155, baseType: !176, size: 16, offset: 3504)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !3148, file: !1339, line: 1155, baseType: !176, size: 16, offset: 3520)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !3148, file: !1339, line: 1156, baseType: !134, size: 8, offset: 3536)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !3148, file: !1339, line: 1157, baseType: !134, size: 8, offset: 3544)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !3148, file: !1339, line: 1159, baseType: !134, size: 8, offset: 3552)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !3148, file: !1339, line: 1160, baseType: !134, size: 8, offset: 3560)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !3148, file: !1339, line: 1161, baseType: !134, size: 8, offset: 3568)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !3148, file: !1339, line: 1162, baseType: !134, size: 8, offset: 3576)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !3148, file: !1339, line: 1165, baseType: !119, size: 32, offset: 3584)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !3148, file: !1339, line: 1166, baseType: !119, size: 32, offset: 3616)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !3148, file: !1339, line: 1167, baseType: !119, size: 32, offset: 3648)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !3148, file: !1339, line: 1168, baseType: !119, size: 32, offset: 3680)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !3148, file: !1339, line: 1171, baseType: !176, size: 16, offset: 3712)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !3148, file: !1339, line: 1171, baseType: !176, size: 16, offset: 3728)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !3148, file: !1339, line: 1172, baseType: !119, size: 32, offset: 3744)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !3148, file: !1339, line: 1173, baseType: !241, size: 32, offset: 3776)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !3148, file: !1339, line: 1174, baseType: !241, size: 32, offset: 3808)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !3148, file: !1339, line: 1177, baseType: !3312, size: 1024, offset: 3840)
!3312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !1339, line: 963, size: 1024, elements: !3313)
!3313 = !{!3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3337, !3338}
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3312, file: !1339, line: 965, baseType: !119, size: 32)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !3312, file: !1339, line: 968, baseType: !241, size: 32, offset: 32)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !3312, file: !1339, line: 971, baseType: !241, size: 32, offset: 64)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3312, file: !1339, line: 974, baseType: !241, size: 32, offset: 96)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !3312, file: !1339, line: 977, baseType: !1406, size: 96, offset: 128)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !3312, file: !1339, line: 979, baseType: !1406, size: 96, offset: 224)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3312, file: !1339, line: 982, baseType: !119, size: 32, offset: 320)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !3312, file: !1339, line: 987, baseType: !292, size: 64, offset: 352)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !3312, file: !1339, line: 989, baseType: !241, size: 32, offset: 416)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !3312, file: !1339, line: 994, baseType: !119, size: 32, offset: 448)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !3312, file: !1339, line: 995, baseType: !119, size: 32, offset: 480)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !3312, file: !1339, line: 997, baseType: !134, size: 8, offset: 512)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !3312, file: !1339, line: 998, baseType: !2321, size: 56, offset: 520)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !3312, file: !1339, line: 1000, baseType: !241, size: 32, offset: 576)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !3312, file: !1339, line: 1003, baseType: !292, size: 64, offset: 608)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !3312, file: !1339, line: 1006, baseType: !119, size: 32, offset: 672)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !3312, file: !1339, line: 1009, baseType: !241, size: 32, offset: 704)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !3312, file: !1339, line: 1012, baseType: !292, size: 64, offset: 736)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !3312, file: !1339, line: 1015, baseType: !292, size: 64, offset: 800)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !3312, file: !1339, line: 1018, baseType: !119, size: 32, offset: 864)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !3312, file: !1339, line: 1019, baseType: !3335, size: 64, offset: 896)
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 64)
!3336 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !1339, line: 63, flags: DIFlagFwdDecl)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !3312, file: !1339, line: 1023, baseType: !241, size: 32, offset: 960)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !3312, file: !1339, line: 1024, baseType: !119, size: 32, offset: 992)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !3148, file: !1339, line: 1179, baseType: !3340, size: 320, offset: 4864)
!3340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !1339, line: 1043, size: 320, elements: !3341)
!3341 = !{!3342, !3343, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355}
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3340, file: !1339, line: 1044, baseType: !134, size: 8)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !3340, file: !1339, line: 1045, baseType: !3344, size: 16, offset: 8)
!3344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 16, elements: !293)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !3340, file: !1339, line: 1048, baseType: !134, size: 8, offset: 24)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !3340, file: !1339, line: 1049, baseType: !241, size: 32, offset: 32)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !3340, file: !1339, line: 1049, baseType: !241, size: 32, offset: 64)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !3340, file: !1339, line: 1052, baseType: !241, size: 32, offset: 96)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !3340, file: !1339, line: 1052, baseType: !241, size: 32, offset: 128)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !3340, file: !1339, line: 1053, baseType: !134, size: 8, offset: 160)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !3340, file: !1339, line: 1054, baseType: !3137, size: 24, offset: 168)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !3340, file: !1339, line: 1057, baseType: !241, size: 32, offset: 192)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !3340, file: !1339, line: 1057, baseType: !241, size: 32, offset: 224)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !3340, file: !1339, line: 1060, baseType: !241, size: 32, offset: 256)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !3340, file: !1339, line: 1060, baseType: !241, size: 32, offset: 288)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1338, file: !1339, line: 1247, baseType: !3357, size: 64, offset: 2176)
!3357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3358, size: 64)
!3358 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !1339, line: 60, flags: DIFlagFwdDecl)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1338, file: !1339, line: 1251, baseType: !3360, size: 31872, offset: 2240)
!3360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !1339, line: 403, size: 31872, elements: !3361)
!3361 = !{!3362, !3397, !3417, !3426, !3446, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3484, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3502, !3503, !3504, !3505, !3506, !3507, !3508, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3570, !3571, !3572, !3573, !3574, !3575, !3576, !3578, !3594, !3595}
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !3360, file: !1339, line: 404, baseType: !3363, size: 1984)
!3363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !1339, line: 259, size: 1984, elements: !3364)
!3364 = !{!3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3380, !3392}
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !3363, file: !1339, line: 260, baseType: !134, size: 8)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3363, file: !1339, line: 263, baseType: !134, size: 8, offset: 8)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !3363, file: !1339, line: 266, baseType: !134, size: 8, offset: 16)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3363, file: !1339, line: 267, baseType: !134, size: 8, offset: 24)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !3363, file: !1339, line: 269, baseType: !134, size: 8, offset: 32)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !3363, file: !1339, line: 270, baseType: !134, size: 8, offset: 40)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !3363, file: !1339, line: 276, baseType: !134, size: 8, offset: 48)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !3363, file: !1339, line: 279, baseType: !134, size: 8, offset: 56)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !3363, file: !1339, line: 280, baseType: !176, size: 16, offset: 64)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !3363, file: !1339, line: 280, baseType: !176, size: 16, offset: 80)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !3363, file: !1339, line: 281, baseType: !241, size: 32, offset: 96)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !3363, file: !1339, line: 284, baseType: !134, size: 8, offset: 128)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !3363, file: !1339, line: 285, baseType: !134, size: 8, offset: 136)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3363, file: !1339, line: 287, baseType: !3379, size: 48, offset: 144)
!3379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 48, elements: !306)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !3363, file: !1339, line: 290, baseType: !3381, size: 1280, offset: 192)
!3381 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !2051, line: 174, baseType: !3382)
!3382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !2051, line: 166, size: 1280, elements: !3383)
!3383 = !{!3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391}
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3382, file: !2051, line: 167, baseType: !119, size: 32)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3382, file: !2051, line: 167, baseType: !119, size: 32, offset: 32)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !3382, file: !2051, line: 168, baseType: !192, size: 512, offset: 64)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !3382, file: !2051, line: 169, baseType: !192, size: 512, offset: 576)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !3382, file: !2051, line: 170, baseType: !241, size: 32, offset: 1088)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !3382, file: !2051, line: 171, baseType: !241, size: 32, offset: 1120)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !3382, file: !2051, line: 172, baseType: !2388, size: 64, offset: 1152)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3382, file: !2051, line: 173, baseType: !138, size: 64, offset: 1216)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !3363, file: !1339, line: 291, baseType: !3393, size: 512, offset: 1472)
!3393 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !2051, line: 178, baseType: !3394)
!3394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !2051, line: 176, size: 512, elements: !3395)
!3395 = !{!3396}
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !3394, file: !2051, line: 177, baseType: !192, size: 512)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !3360, file: !1339, line: 406, baseType: !3398, size: 64, offset: 1984)
!3398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3399, size: 64)
!3399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !1339, line: 80, size: 1472, elements: !3400)
!3400 = !{!3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413}
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !3399, file: !1339, line: 81, baseType: !138, size: 64)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !3399, file: !1339, line: 82, baseType: !138, size: 64, offset: 64)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !3399, file: !1339, line: 83, baseType: !7, size: 32, offset: 128)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !3399, file: !1339, line: 84, baseType: !7, size: 32, offset: 160)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !3399, file: !1339, line: 86, baseType: !7, size: 32, offset: 192)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !3399, file: !1339, line: 87, baseType: !7, size: 32, offset: 224)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !3399, file: !1339, line: 88, baseType: !7, size: 32, offset: 256)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !3399, file: !1339, line: 89, baseType: !7, size: 32, offset: 288)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !3399, file: !1339, line: 90, baseType: !7, size: 32, offset: 320)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !3399, file: !1339, line: 91, baseType: !7, size: 32, offset: 352)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !3399, file: !1339, line: 92, baseType: !7, size: 32, offset: 384)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3399, file: !1339, line: 93, baseType: !7, size: 32, offset: 416)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !3399, file: !1339, line: 95, baseType: !3414, size: 1024, offset: 448)
!3414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 1024, elements: !3415)
!3415 = !{!3416}
!3416 = !DISubrange(count: 128)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !3360, file: !1339, line: 407, baseType: !3418, size: 64, offset: 2048)
!3418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3419, size: 64)
!3419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !1339, line: 98, size: 1216, elements: !3420)
!3420 = !{!3421, !3422, !3423, !3424, !3425}
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !3419, file: !1339, line: 100, baseType: !138, size: 64)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3419, file: !1339, line: 101, baseType: !138, size: 64, offset: 64)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !3419, file: !1339, line: 103, baseType: !7, size: 32, offset: 128)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3419, file: !1339, line: 104, baseType: !7, size: 32, offset: 160)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !3419, file: !1339, line: 106, baseType: !3414, size: 1024, offset: 192)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !3360, file: !1339, line: 408, baseType: !3427, size: 512, offset: 2112)
!3427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !1339, line: 109, size: 512, elements: !3428)
!3428 = !{!3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445}
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !3427, file: !1339, line: 111, baseType: !119, size: 32)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !3427, file: !1339, line: 112, baseType: !119, size: 32, offset: 32)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !3427, file: !1339, line: 115, baseType: !119, size: 32, offset: 64)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !3427, file: !1339, line: 116, baseType: !119, size: 32, offset: 96)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !3427, file: !1339, line: 117, baseType: !119, size: 32, offset: 128)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !3427, file: !1339, line: 118, baseType: !119, size: 32, offset: 160)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !3427, file: !1339, line: 119, baseType: !119, size: 32, offset: 192)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !3427, file: !1339, line: 120, baseType: !119, size: 32, offset: 224)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !3427, file: !1339, line: 121, baseType: !119, size: 32, offset: 256)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !3427, file: !1339, line: 122, baseType: !119, size: 32, offset: 288)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !3427, file: !1339, line: 125, baseType: !119, size: 32, offset: 320)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !3427, file: !1339, line: 126, baseType: !119, size: 32, offset: 352)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !3427, file: !1339, line: 127, baseType: !176, size: 16, offset: 384)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !3427, file: !1339, line: 128, baseType: !176, size: 16, offset: 400)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !3427, file: !1339, line: 129, baseType: !119, size: 32, offset: 416)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !3427, file: !1339, line: 130, baseType: !119, size: 32, offset: 448)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3427, file: !1339, line: 131, baseType: !119, size: 32, offset: 480)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !3360, file: !1339, line: 409, baseType: !3447, size: 576, offset: 2624)
!3447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !1339, line: 134, size: 576, elements: !3448)
!3448 = !{!3449, !3450, !3451, !3452, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461, !3462, !3463, !3464, !3465}
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3447, file: !1339, line: 135, baseType: !119, size: 32)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !3447, file: !1339, line: 136, baseType: !119, size: 32, offset: 32)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !3447, file: !1339, line: 137, baseType: !119, size: 32, offset: 64)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !3447, file: !1339, line: 138, baseType: !119, size: 32, offset: 96)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !3447, file: !1339, line: 139, baseType: !119, size: 32, offset: 128)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !3447, file: !1339, line: 140, baseType: !119, size: 32, offset: 160)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !3447, file: !1339, line: 141, baseType: !119, size: 32, offset: 192)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !3447, file: !1339, line: 142, baseType: !119, size: 32, offset: 224)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !3447, file: !1339, line: 143, baseType: !241, size: 32, offset: 256)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !3447, file: !1339, line: 144, baseType: !119, size: 32, offset: 288)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3447, file: !1339, line: 145, baseType: !119, size: 32, offset: 320)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !3447, file: !1339, line: 147, baseType: !119, size: 32, offset: 352)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !3447, file: !1339, line: 148, baseType: !119, size: 32, offset: 384)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !3447, file: !1339, line: 149, baseType: !119, size: 32, offset: 416)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !3447, file: !1339, line: 150, baseType: !119, size: 32, offset: 448)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !3447, file: !1339, line: 151, baseType: !119, size: 32, offset: 480)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3447, file: !1339, line: 152, baseType: !181, size: 64, offset: 512)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !3360, file: !1339, line: 411, baseType: !119, size: 32, offset: 3200)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !3360, file: !1339, line: 411, baseType: !119, size: 32, offset: 3232)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !3360, file: !1339, line: 411, baseType: !119, size: 32, offset: 3264)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !3360, file: !1339, line: 412, baseType: !241, size: 32, offset: 3296)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !3360, file: !1339, line: 413, baseType: !119, size: 32, offset: 3328)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !3360, file: !1339, line: 413, baseType: !119, size: 32, offset: 3360)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !3360, file: !1339, line: 415, baseType: !119, size: 32, offset: 3392)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !3360, file: !1339, line: 415, baseType: !119, size: 32, offset: 3424)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3360, file: !1339, line: 416, baseType: !176, size: 16, offset: 3456)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !3360, file: !1339, line: 416, baseType: !176, size: 16, offset: 3472)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !3360, file: !1339, line: 418, baseType: !241, size: 32, offset: 3488)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !3360, file: !1339, line: 418, baseType: !241, size: 32, offset: 3520)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !3360, file: !1339, line: 421, baseType: !241, size: 32, offset: 3552)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !3360, file: !1339, line: 421, baseType: !241, size: 32, offset: 3584)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !3360, file: !1339, line: 421, baseType: !241, size: 32, offset: 3616)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !3360, file: !1339, line: 425, baseType: !176, size: 16, offset: 3648)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !3360, file: !1339, line: 425, baseType: !176, size: 16, offset: 3664)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !3360, file: !1339, line: 425, baseType: !176, size: 16, offset: 3680)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !3360, file: !1339, line: 426, baseType: !176, size: 16, offset: 3696)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3360, file: !1339, line: 428, baseType: !176, size: 16, offset: 3712)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !3360, file: !1339, line: 428, baseType: !176, size: 16, offset: 3728)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !3360, file: !1339, line: 431, baseType: !119, size: 32, offset: 3744)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !3360, file: !1339, line: 433, baseType: !176, size: 16, offset: 3776)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !3360, file: !1339, line: 435, baseType: !176, size: 16, offset: 3792)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !3360, file: !1339, line: 437, baseType: !176, size: 16, offset: 3808)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3360, file: !1339, line: 439, baseType: !176, size: 16, offset: 3824)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !3360, file: !1339, line: 441, baseType: !176, size: 16, offset: 3840)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !3360, file: !1339, line: 443, baseType: !176, size: 16, offset: 3856)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !3360, file: !1339, line: 449, baseType: !119, size: 32, offset: 3872)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !3360, file: !1339, line: 453, baseType: !119, size: 32, offset: 3904)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !3360, file: !1339, line: 458, baseType: !176, size: 16, offset: 3936)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !3360, file: !1339, line: 462, baseType: !176, size: 16, offset: 3952)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !3360, file: !1339, line: 467, baseType: !119, size: 32, offset: 3968)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !3360, file: !1339, line: 467, baseType: !119, size: 32, offset: 4000)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !3360, file: !1339, line: 469, baseType: !176, size: 16, offset: 4032)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !3360, file: !1339, line: 469, baseType: !176, size: 16, offset: 4048)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !3360, file: !1339, line: 469, baseType: !176, size: 16, offset: 4064)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !3360, file: !1339, line: 469, baseType: !176, size: 16, offset: 4080)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !3360, file: !1339, line: 474, baseType: !176, size: 16, offset: 4096)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !3360, file: !1339, line: 475, baseType: !134, size: 8, offset: 4112)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !3360, file: !1339, line: 476, baseType: !134, size: 8, offset: 4120)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !3360, file: !1339, line: 481, baseType: !119, size: 32, offset: 4128)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3360, file: !1339, line: 486, baseType: !119, size: 32, offset: 4160)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !3360, file: !1339, line: 491, baseType: !119, size: 32, offset: 4192)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !3360, file: !1339, line: 496, baseType: !176, size: 16, offset: 4224)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3360, file: !1339, line: 498, baseType: !176, size: 16, offset: 4240)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !3360, file: !1339, line: 501, baseType: !176, size: 16, offset: 4256)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !3360, file: !1339, line: 502, baseType: !176, size: 16, offset: 4272)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !3360, file: !1339, line: 508, baseType: !176, size: 16, offset: 4288)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !3360, file: !1339, line: 513, baseType: !176, size: 16, offset: 4304)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !3360, file: !1339, line: 515, baseType: !176, size: 16, offset: 4320)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !3360, file: !1339, line: 515, baseType: !176, size: 16, offset: 4336)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !3360, file: !1339, line: 519, baseType: !1933, size: 128, offset: 4352)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !3360, file: !1339, line: 519, baseType: !1933, size: 128, offset: 4480)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !3360, file: !1339, line: 520, baseType: !1942, size: 128, offset: 4608)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !3360, file: !1339, line: 523, baseType: !202, size: 128, offset: 4736)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !3360, file: !1339, line: 524, baseType: !176, size: 16, offset: 4864)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !3360, file: !1339, line: 527, baseType: !176, size: 16, offset: 4880)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !3360, file: !1339, line: 532, baseType: !241, size: 32, offset: 4896)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !3360, file: !1339, line: 532, baseType: !241, size: 32, offset: 4928)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !3360, file: !1339, line: 534, baseType: !241, size: 32, offset: 4960)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !3360, file: !1339, line: 538, baseType: !241, size: 32, offset: 4992)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !3360, file: !1339, line: 542, baseType: !119, size: 32, offset: 5024)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !3360, file: !1339, line: 545, baseType: !241, size: 32, offset: 5056)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !3360, file: !1339, line: 545, baseType: !241, size: 32, offset: 5088)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !3360, file: !1339, line: 545, baseType: !241, size: 32, offset: 5120)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !3360, file: !1339, line: 548, baseType: !241, size: 32, offset: 5152)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !3360, file: !1339, line: 551, baseType: !176, size: 16, offset: 5184)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !3360, file: !1339, line: 551, baseType: !176, size: 16, offset: 5200)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !3360, file: !1339, line: 551, baseType: !176, size: 16, offset: 5216)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !3360, file: !1339, line: 551, baseType: !176, size: 16, offset: 5232)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !3360, file: !1339, line: 552, baseType: !176, size: 16, offset: 5248)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !3360, file: !1339, line: 552, baseType: !176, size: 16, offset: 5264)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !3360, file: !1339, line: 553, baseType: !241, size: 32, offset: 5280)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !3360, file: !1339, line: 553, baseType: !241, size: 32, offset: 5312)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !3360, file: !1339, line: 554, baseType: !176, size: 16, offset: 5344)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !3360, file: !1339, line: 554, baseType: !176, size: 16, offset: 5360)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !3360, file: !1339, line: 555, baseType: !241, size: 32, offset: 5376)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !3360, file: !1339, line: 555, baseType: !241, size: 32, offset: 5408)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !3360, file: !1339, line: 558, baseType: !163, size: 8192, offset: 5440)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3360, file: !1339, line: 561, baseType: !119, size: 32, offset: 13632)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !3360, file: !1339, line: 562, baseType: !176, size: 16, offset: 13664)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !3360, file: !1339, line: 562, baseType: !176, size: 16, offset: 13680)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !3360, file: !1339, line: 565, baseType: !2861, size: 6144, offset: 13696)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !3360, file: !1339, line: 568, baseType: !1581, size: 128, offset: 19840)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !3360, file: !1339, line: 569, baseType: !1581, size: 128, offset: 19968)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !3360, file: !1339, line: 572, baseType: !134, size: 8, offset: 20096)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !3360, file: !1339, line: 573, baseType: !134, size: 8, offset: 20104)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !3360, file: !1339, line: 574, baseType: !134, size: 8, offset: 20112)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !3360, file: !1339, line: 575, baseType: !310, size: 40, offset: 20120)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !3360, file: !1339, line: 578, baseType: !119, size: 32, offset: 20160)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !3360, file: !1339, line: 579, baseType: !176, size: 16, offset: 20192)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !3360, file: !1339, line: 580, baseType: !176, size: 16, offset: 20208)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !3360, file: !1339, line: 581, baseType: !241, size: 32, offset: 20224)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !3360, file: !1339, line: 582, baseType: !241, size: 32, offset: 20256)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !3360, file: !1339, line: 585, baseType: !176, size: 16, offset: 20288)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !3360, file: !1339, line: 585, baseType: !176, size: 16, offset: 20304)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !3360, file: !1339, line: 586, baseType: !241, size: 32, offset: 20320)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !3360, file: !1339, line: 589, baseType: !176, size: 16, offset: 20352)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !3360, file: !1339, line: 589, baseType: !176, size: 16, offset: 20368)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !3360, file: !1339, line: 590, baseType: !119, size: 32, offset: 20384)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !3360, file: !1339, line: 593, baseType: !176, size: 16, offset: 20416)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !3360, file: !1339, line: 593, baseType: !176, size: 16, offset: 20432)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !3360, file: !1339, line: 594, baseType: !176, size: 16, offset: 20448)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !3360, file: !1339, line: 594, baseType: !176, size: 16, offset: 20464)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !3360, file: !1339, line: 595, baseType: !241, size: 32, offset: 20480)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3360, file: !1339, line: 596, baseType: !241, size: 32, offset: 20512)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !3360, file: !1339, line: 597, baseType: !252, size: 64, offset: 20544)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !3360, file: !1339, line: 600, baseType: !119, size: 32, offset: 20608)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !3360, file: !1339, line: 601, baseType: !241, size: 32, offset: 20640)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !3360, file: !1339, line: 604, baseType: !3577, size: 256, offset: 20672)
!3577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 256, elements: !1608)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !3360, file: !1339, line: 607, baseType: !3579, size: 10880, offset: 20928)
!3579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !1339, line: 364, size: 10880, elements: !3580)
!3580 = !{!3581, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593}
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !3579, file: !1339, line: 365, baseType: !3363, size: 1984)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !3579, file: !1339, line: 367, baseType: !163, size: 8192, offset: 1984)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !3579, file: !1339, line: 369, baseType: !176, size: 16, offset: 10176)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !3579, file: !1339, line: 369, baseType: !176, size: 16, offset: 10192)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !3579, file: !1339, line: 370, baseType: !176, size: 16, offset: 10208)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3579, file: !1339, line: 370, baseType: !176, size: 16, offset: 10224)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !3579, file: !1339, line: 372, baseType: !241, size: 32, offset: 10240)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3579, file: !1339, line: 373, baseType: !241, size: 32, offset: 10272)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !3579, file: !1339, line: 375, baseType: !3137, size: 24, offset: 10304)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !3579, file: !1339, line: 376, baseType: !134, size: 8, offset: 10328)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !3579, file: !1339, line: 378, baseType: !134, size: 8, offset: 10336)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3579, file: !1339, line: 379, baseType: !3137, size: 24, offset: 10344)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !3579, file: !1339, line: 381, baseType: !192, size: 512, offset: 10368)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !3360, file: !1339, line: 609, baseType: !119, size: 32, offset: 31808)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3360, file: !1339, line: 610, baseType: !119, size: 32, offset: 31840)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !1338, file: !1339, line: 1252, baseType: !3597, size: 256, offset: 34112)
!3597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !1339, line: 158, size: 256, elements: !3598)
!3598 = !{!3599, !3600, !3601, !3602, !3603, !3604, !3605, !3606, !3607}
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !3597, file: !1339, line: 159, baseType: !119, size: 32)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !3597, file: !1339, line: 160, baseType: !241, size: 32, offset: 32)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !3597, file: !1339, line: 161, baseType: !241, size: 32, offset: 64)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !3597, file: !1339, line: 162, baseType: !241, size: 32, offset: 96)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !3597, file: !1339, line: 163, baseType: !119, size: 32, offset: 128)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3597, file: !1339, line: 164, baseType: !176, size: 16, offset: 160)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3597, file: !1339, line: 165, baseType: !176, size: 16, offset: 176)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !3597, file: !1339, line: 166, baseType: !241, size: 32, offset: 192)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3597, file: !1339, line: 167, baseType: !241, size: 32, offset: 224)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1338, file: !1339, line: 1254, baseType: !202, size: 128, offset: 34368)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !1338, file: !1339, line: 1255, baseType: !202, size: 128, offset: 34496)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !1338, file: !1339, line: 1257, baseType: !138, size: 64, offset: 34624)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !1338, file: !1339, line: 1258, baseType: !138, size: 64, offset: 34688)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !1338, file: !1339, line: 1259, baseType: !138, size: 64, offset: 34752)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !1338, file: !1339, line: 1260, baseType: !138, size: 64, offset: 34816)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !1338, file: !1339, line: 1262, baseType: !138, size: 64, offset: 34880)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !1338, file: !1339, line: 1265, baseType: !3616, size: 64, offset: 34944)
!3616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3617, size: 64)
!3617 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !1339, line: 1265, flags: DIFlagFwdDecl)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !1338, file: !1339, line: 1266, baseType: !176, size: 16, offset: 35008)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1338, file: !1339, line: 1267, baseType: !176, size: 16, offset: 35024)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !1338, file: !1339, line: 1270, baseType: !119, size: 32, offset: 35040)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !1338, file: !1339, line: 1271, baseType: !202, size: 128, offset: 35072)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1338, file: !1339, line: 1274, baseType: !3623, size: 128, offset: 35200)
!3623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !1339, line: 650, size: 128, elements: !3624)
!3624 = !{!3625, !3626, !3627, !3628, !3629}
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !3623, file: !1339, line: 651, baseType: !1406, size: 96)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3623, file: !1339, line: 652, baseType: !134, size: 8, offset: 96)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3623, file: !1339, line: 652, baseType: !134, size: 8, offset: 104)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3623, file: !1339, line: 652, baseType: !134, size: 8, offset: 112)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !3623, file: !1339, line: 652, baseType: !134, size: 8, offset: 120)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !1338, file: !1339, line: 1275, baseType: !3631, size: 1472, offset: 35328)
!3631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !1339, line: 676, size: 1472, elements: !3632)
!3632 = !{!3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643, !3644, !3654, !3655, !3656, !3657, !3676, !3677, !3678, !3679, !3680, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695}
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !3631, file: !1339, line: 679, baseType: !3623, size: 128)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !3631, file: !1339, line: 680, baseType: !176, size: 16, offset: 128)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !3631, file: !1339, line: 680, baseType: !176, size: 16, offset: 144)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !3631, file: !1339, line: 680, baseType: !176, size: 16, offset: 160)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !3631, file: !1339, line: 680, baseType: !176, size: 16, offset: 176)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3631, file: !1339, line: 681, baseType: !176, size: 16, offset: 192)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !3631, file: !1339, line: 681, baseType: !176, size: 16, offset: 208)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !3631, file: !1339, line: 681, baseType: !176, size: 16, offset: 224)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !3631, file: !1339, line: 681, baseType: !176, size: 16, offset: 240)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !3631, file: !1339, line: 682, baseType: !176, size: 16, offset: 256)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !3631, file: !1339, line: 682, baseType: !2381, size: 48, offset: 272)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !3631, file: !1339, line: 685, baseType: !3645, size: 192, offset: 320)
!3645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !1339, line: 633, size: 192, elements: !3646)
!3646 = !{!3647, !3648, !3649, !3650, !3651, !3652, !3653}
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !3645, file: !1339, line: 634, baseType: !176, size: 16)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3645, file: !1339, line: 634, baseType: !176, size: 16, offset: 16)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !3645, file: !1339, line: 635, baseType: !176, size: 16, offset: 32)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !3645, file: !1339, line: 635, baseType: !176, size: 16, offset: 48)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !3645, file: !1339, line: 636, baseType: !241, size: 32, offset: 64)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3645, file: !1339, line: 636, baseType: !241, size: 32, offset: 96)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !3645, file: !1339, line: 637, baseType: !252, size: 64, offset: 128)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !3631, file: !1339, line: 686, baseType: !176, size: 16, offset: 512)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !3631, file: !1339, line: 686, baseType: !176, size: 16, offset: 528)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !3631, file: !1339, line: 687, baseType: !241, size: 32, offset: 544)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !3631, file: !1339, line: 688, baseType: !3658, size: 448, offset: 576)
!3658 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !1339, line: 674, baseType: !3659)
!3659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !1339, line: 659, size: 448, elements: !3660)
!3660 = !{!3661, !3662, !3663, !3664, !3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675}
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !3659, file: !1339, line: 660, baseType: !241, size: 32)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !3659, file: !1339, line: 661, baseType: !241, size: 32, offset: 32)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !3659, file: !1339, line: 662, baseType: !241, size: 32, offset: 64)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !3659, file: !1339, line: 663, baseType: !241, size: 32, offset: 96)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !3659, file: !1339, line: 664, baseType: !241, size: 32, offset: 128)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !3659, file: !1339, line: 665, baseType: !241, size: 32, offset: 160)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !3659, file: !1339, line: 666, baseType: !241, size: 32, offset: 192)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !3659, file: !1339, line: 667, baseType: !241, size: 32, offset: 224)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !3659, file: !1339, line: 668, baseType: !241, size: 32, offset: 256)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !3659, file: !1339, line: 669, baseType: !241, size: 32, offset: 288)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !3659, file: !1339, line: 670, baseType: !119, size: 32, offset: 320)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !3659, file: !1339, line: 671, baseType: !241, size: 32, offset: 352)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !3659, file: !1339, line: 672, baseType: !241, size: 32, offset: 384)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3659, file: !1339, line: 673, baseType: !176, size: 16, offset: 416)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3659, file: !1339, line: 673, baseType: !176, size: 16, offset: 432)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !3631, file: !1339, line: 692, baseType: !241, size: 32, offset: 1024)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !3631, file: !1339, line: 697, baseType: !241, size: 32, offset: 1056)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3631, file: !1339, line: 703, baseType: !119, size: 32, offset: 1088)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3631, file: !1339, line: 704, baseType: !176, size: 16, offset: 1120)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !3631, file: !1339, line: 704, baseType: !176, size: 16, offset: 1136)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !3631, file: !1339, line: 705, baseType: !176, size: 16, offset: 1152)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !3631, file: !1339, line: 706, baseType: !176, size: 16, offset: 1168)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !3631, file: !1339, line: 707, baseType: !176, size: 16, offset: 1184)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !3631, file: !1339, line: 708, baseType: !176, size: 16, offset: 1200)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !3631, file: !1339, line: 709, baseType: !176, size: 16, offset: 1216)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !3631, file: !1339, line: 709, baseType: !176, size: 16, offset: 1232)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !3631, file: !1339, line: 709, baseType: !176, size: 16, offset: 1248)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !3631, file: !1339, line: 709, baseType: !176, size: 16, offset: 1264)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !3631, file: !1339, line: 710, baseType: !176, size: 16, offset: 1280)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !3631, file: !1339, line: 711, baseType: !176, size: 16, offset: 1296)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !3631, file: !1339, line: 712, baseType: !241, size: 32, offset: 1312)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !3631, file: !1339, line: 713, baseType: !241, size: 32, offset: 1344)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !3631, file: !1339, line: 713, baseType: !241, size: 32, offset: 1376)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !3631, file: !1339, line: 713, baseType: !241, size: 32, offset: 1408)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3631, file: !1339, line: 713, baseType: !241, size: 32, offset: 1440)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1338, file: !1339, line: 1278, baseType: !3697, size: 64, offset: 36800)
!3697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !1339, line: 1197, size: 64, elements: !3698)
!3698 = !{!3699, !3700, !3701, !3702}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !3697, file: !1339, line: 1199, baseType: !241, size: 32)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !3697, file: !1339, line: 1200, baseType: !134, size: 8, offset: 32)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !3697, file: !1339, line: 1201, baseType: !134, size: 8, offset: 40)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3697, file: !1339, line: 1202, baseType: !176, size: 16, offset: 48)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1338, file: !1339, line: 1281, baseType: !1436, size: 64, offset: 36864)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !1338, file: !1339, line: 1284, baseType: !3705, size: 192, offset: 36928)
!3705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !1339, line: 1208, size: 192, elements: !3706)
!3706 = !{!3707, !3708, !3709, !3710}
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !3705, file: !1339, line: 1209, baseType: !1406, size: 96)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3705, file: !1339, line: 1210, baseType: !119, size: 32, offset: 96)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !3705, file: !1339, line: 1210, baseType: !119, size: 32, offset: 128)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3705, file: !1339, line: 1210, baseType: !119, size: 32, offset: 160)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1338, file: !1339, line: 1287, baseType: !2907, size: 64, offset: 37120)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1338, file: !1339, line: 1289, baseType: !396, size: 64, offset: 37184)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !1338, file: !1339, line: 1290, baseType: !396, size: 64, offset: 37248)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1338, file: !1339, line: 1293, baseType: !3381, size: 1280, offset: 37312)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1338, file: !1339, line: 1294, baseType: !3393, size: 512, offset: 38592)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !1338, file: !1339, line: 1295, baseType: !2315, size: 512, offset: 39104)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !1338, file: !1339, line: 1298, baseType: !3718, size: 64, offset: 39616)
!3718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3719, size: 64)
!3719 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !1339, line: 1298, flags: DIFlagFwdDecl)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !1329, file: !1328, line: 58, baseType: !1337, size: 64, offset: 1536)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !1329, file: !1328, line: 60, baseType: !119, size: 32, offset: 1600)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1329, file: !1328, line: 61, baseType: !119, size: 32, offset: 1632)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1329, file: !1328, line: 63, baseType: !176, size: 16, offset: 1664)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1329, file: !1328, line: 64, baseType: !176, size: 16, offset: 1680)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !1329, file: !1328, line: 65, baseType: !176, size: 16, offset: 1696)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !1329, file: !1328, line: 66, baseType: !176, size: 16, offset: 1712)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !1329, file: !1328, line: 67, baseType: !176, size: 16, offset: 1728)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !1329, file: !1328, line: 68, baseType: !176, size: 16, offset: 1744)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !1329, file: !1328, line: 69, baseType: !176, size: 16, offset: 1760)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !1329, file: !1328, line: 70, baseType: !176, size: 16, offset: 1776)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !1329, file: !1328, line: 71, baseType: !176, size: 16, offset: 1792)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !1329, file: !1328, line: 73, baseType: !176, size: 16, offset: 1808)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !1329, file: !1328, line: 74, baseType: !176, size: 16, offset: 1824)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1329, file: !1328, line: 76, baseType: !176, size: 16, offset: 1840)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !1329, file: !1328, line: 78, baseType: !1968, size: 64, offset: 1856)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1329, file: !1328, line: 79, baseType: !138, size: 64, offset: 1920)
!3737 = !DILocation(line: 506, column: 11, scope: !1318)
!3738 = !DILocalVariable(name: "area", scope: !1318, file: !3, line: 507, type: !3739)
!3739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3740, size: 64)
!3740 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !1328, line: 228, baseType: !3741)
!3741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !1328, line: 203, size: 1280, elements: !3742)
!3742 = !{!3743, !3745, !3746, !3763, !3764, !3765, !3766, !3767, !3768, !3769, !3770, !3771, !3772, !3773, !3774, !3775, !3776, !3777, !3778, !3781, !3782, !3783, !3784}
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3741, file: !1328, line: 204, baseType: !3744, size: 64)
!3744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3741, size: 64)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3741, file: !1328, line: 204, baseType: !3744, size: 64, offset: 64)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3741, file: !1328, line: 206, baseType: !3747, size: 64, offset: 128)
!3747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3748, size: 64)
!3748 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !1328, line: 87, baseType: !3749)
!3749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !1328, line: 82, size: 256, elements: !3750)
!3750 = !{!3751, !3753, !3754, !3755, !3761, !3762}
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3749, file: !1328, line: 83, baseType: !3752, size: 64)
!3752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3749, size: 64)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3749, file: !1328, line: 83, baseType: !3752, size: 64, offset: 64)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !3749, file: !1328, line: 83, baseType: !3752, size: 64, offset: 128)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3749, file: !1328, line: 84, baseType: !3756, size: 32, offset: 192)
!3756 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !270, line: 43, baseType: !3757)
!3757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !270, line: 41, size: 32, elements: !3758)
!3758 = !{!3759, !3760}
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3757, file: !270, line: 42, baseType: !176, size: 16)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3757, file: !270, line: 42, baseType: !176, size: 16, offset: 16)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3749, file: !1328, line: 86, baseType: !176, size: 16, offset: 224)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !3749, file: !1328, line: 86, baseType: !176, size: 16, offset: 240)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3741, file: !1328, line: 206, baseType: !3747, size: 64, offset: 192)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3741, file: !1328, line: 206, baseType: !3747, size: 64, offset: 256)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3741, file: !1328, line: 206, baseType: !3747, size: 64, offset: 320)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !3741, file: !1328, line: 207, baseType: !1326, size: 64, offset: 384)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !3741, file: !1328, line: 209, baseType: !1942, size: 128, offset: 448)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !3741, file: !1328, line: 211, baseType: !134, size: 8, offset: 576)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !3741, file: !1328, line: 211, baseType: !134, size: 8, offset: 584)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3741, file: !1328, line: 212, baseType: !176, size: 16, offset: 592)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3741, file: !1328, line: 212, baseType: !176, size: 16, offset: 608)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !3741, file: !1328, line: 214, baseType: !176, size: 16, offset: 624)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !3741, file: !1328, line: 215, baseType: !176, size: 16, offset: 640)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3741, file: !1328, line: 216, baseType: !176, size: 16, offset: 656)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !3741, file: !1328, line: 217, baseType: !176, size: 16, offset: 672)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !3741, file: !1328, line: 219, baseType: !134, size: 8, offset: 688)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3741, file: !1328, line: 219, baseType: !134, size: 8, offset: 696)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3741, file: !1328, line: 221, baseType: !3779, size: 64, offset: 704)
!3779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3780, size: 64)
!3780 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !1328, line: 39, flags: DIFlagFwdDecl)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !3741, file: !1328, line: 223, baseType: !202, size: 128, offset: 768)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3741, file: !1328, line: 224, baseType: !202, size: 128, offset: 896)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !3741, file: !1328, line: 225, baseType: !202, size: 128, offset: 1024)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !3741, file: !1328, line: 227, baseType: !202, size: 128, offset: 1152)
!3785 = !DILocation(line: 507, column: 11, scope: !1318)
!3786 = !DILocalVariable(name: "sl", scope: !1318, file: !3, line: 508, type: !231)
!3787 = !DILocation(line: 508, column: 13, scope: !1318)
!3788 = !DILocalVariable(name: "ob", scope: !1318, file: !3, line: 509, type: !3789)
!3789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3790, size: 64)
!3790 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !30, line: 295, baseType: !1347)
!3791 = !DILocation(line: 509, column: 10, scope: !1318)
!3792 = !DILocalVariable(name: "cont", scope: !1318, file: !3, line: 510, type: !3793)
!3793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3794, size: 64)
!3794 = !DIDerivedType(tag: DW_TAG_typedef, name: "bController", file: !3795, line: 68, baseType: !3796)
!3795 = !DIFile(filename: "blender/source/blender/makesdna/DNA_controller_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bController", file: !3795, line: 54, size: 1088, elements: !3797)
!3797 = !{!3798, !3800, !3801, !3802, !3803, !3804, !3805, !3806, !3807, !3808, !3809, !3810, !3811, !3812, !3827, !3831, !3832, !3833}
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3796, file: !3795, line: 55, baseType: !3799, size: 64)
!3799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3796, size: 64)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3796, file: !3795, line: 55, baseType: !3799, size: 64, offset: 64)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "mynew", scope: !3796, file: !3795, line: 55, baseType: !3799, size: 64, offset: 128)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3796, file: !3795, line: 56, baseType: !176, size: 16, offset: 192)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3796, file: !3795, line: 56, baseType: !176, size: 16, offset: 208)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !3796, file: !3795, line: 56, baseType: !176, size: 16, offset: 224)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "totlinks", scope: !3796, file: !3795, line: 56, baseType: !176, size: 16, offset: 240)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "otype", scope: !3796, file: !3795, line: 57, baseType: !176, size: 16, offset: 256)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "totslinks", scope: !3796, file: !3795, line: 57, baseType: !176, size: 16, offset: 272)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3796, file: !3795, line: 57, baseType: !176, size: 16, offset: 288)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !3796, file: !3795, line: 57, baseType: !176, size: 16, offset: 304)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3796, file: !3795, line: 59, baseType: !192, size: 512, offset: 320)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3796, file: !3795, line: 60, baseType: !138, size: 64, offset: 832)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3796, file: !3795, line: 62, baseType: !3813, size: 64, offset: 896)
!3813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3814, size: 64)
!3814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3815, size: 64)
!3815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bActuator", file: !2523, line: 262, size: 896, elements: !3816)
!3816 = !{!3817, !3818, !3819, !3820, !3821, !3822, !3823, !3824, !3825, !3826}
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3815, file: !2523, line: 263, baseType: !3814, size: 64)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3815, file: !2523, line: 263, baseType: !3814, size: 64, offset: 64)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "mynew", scope: !3815, file: !2523, line: 263, baseType: !3814, size: 64, offset: 128)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3815, file: !2523, line: 264, baseType: !176, size: 16, offset: 192)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3815, file: !2523, line: 268, baseType: !176, size: 16, offset: 208)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "otype", scope: !3815, file: !2523, line: 269, baseType: !176, size: 16, offset: 224)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "go", scope: !3815, file: !2523, line: 269, baseType: !176, size: 16, offset: 240)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3815, file: !2523, line: 270, baseType: !192, size: 512, offset: 256)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3815, file: !2523, line: 275, baseType: !138, size: 64, offset: 768)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !3815, file: !2523, line: 280, baseType: !1346, size: 64, offset: 832)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "slinks", scope: !3796, file: !3795, line: 64, baseType: !3828, size: 64, offset: 960)
!3828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3829, size: 64)
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3830, size: 64)
!3830 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSensor", file: !3795, line: 39, flags: DIFlagFwdDecl)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3796, file: !3795, line: 65, baseType: !176, size: 16, offset: 1024)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "valo", scope: !3796, file: !3795, line: 65, baseType: !176, size: 16, offset: 1040)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "state_mask", scope: !3796, file: !3795, line: 66, baseType: !7, size: 32, offset: 1056)
!3834 = !DILocation(line: 510, column: 15, scope: !1318)
!3835 = !DILocalVariable(name: "act", scope: !1318, file: !3, line: 511, type: !3836)
!3836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3837, size: 64)
!3837 = !DIDerivedType(tag: DW_TAG_typedef, name: "bActuator", file: !2523, line: 282, baseType: !3815)
!3838 = !DILocation(line: 511, column: 13, scope: !1318)
!3839 = !DILocalVariable(name: "con", scope: !1318, file: !3, line: 512, type: !3840)
!3840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 64)
!3841 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraint", file: !44, line: 76, baseType: !3842)
!3842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraint", file: !44, line: 54, size: 960, elements: !3843)
!3843 = !{!3844, !3846, !3847, !3848, !3849, !3850, !3851, !3852, !3853, !3854, !3855, !3856, !3857, !3858}
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3842, file: !44, line: 55, baseType: !3845, size: 64)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3842, file: !44, line: 55, baseType: !3845, size: 64, offset: 64)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3842, file: !44, line: 57, baseType: !138, size: 64, offset: 128)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3842, file: !44, line: 58, baseType: !176, size: 16, offset: 192)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3842, file: !44, line: 59, baseType: !176, size: 16, offset: 208)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "ownspace", scope: !3842, file: !44, line: 61, baseType: !134, size: 8, offset: 224)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "tarspace", scope: !3842, file: !44, line: 62, baseType: !134, size: 8, offset: 232)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3842, file: !44, line: 64, baseType: !192, size: 512, offset: 240)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3842, file: !44, line: 66, baseType: !176, size: 16, offset: 752)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "enforce", scope: !3842, file: !44, line: 68, baseType: !241, size: 32, offset: 768)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "headtail", scope: !3842, file: !44, line: 69, baseType: !241, size: 32, offset: 800)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3842, file: !44, line: 71, baseType: !1366, size: 64, offset: 832)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "lin_error", scope: !3842, file: !44, line: 74, baseType: !241, size: 32, offset: 896)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "rot_error", scope: !3842, file: !44, line: 75, baseType: !241, size: 32, offset: 928)
!3859 = !DILocation(line: 512, column: 15, scope: !1318)
!3860 = !DILocalVariable(name: "ntree", scope: !1318, file: !3, line: 513, type: !3861)
!3861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3862, size: 64)
!3862 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeTree", file: !1705, line: 391, baseType: !1704)
!3863 = !DILocation(line: 513, column: 13, scope: !1318)
!3864 = !DILocalVariable(name: "node", scope: !1318, file: !3, line: 514, type: !1888)
!3865 = !DILocation(line: 514, column: 9, scope: !1318)
!3866 = !DILocalVariable(name: "mat", scope: !1318, file: !3, line: 515, type: !3867)
!3867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3868, size: 64)
!3868 = !DIDerivedType(tag: DW_TAG_typedef, name: "Material", file: !1465, line: 203, baseType: !1464)
!3869 = !DILocation(line: 515, column: 12, scope: !1318)
!3870 = !DILocalVariable(name: "sce", scope: !1318, file: !3, line: 516, type: !3871)
!3871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3872, size: 64)
!3872 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !1339, line: 1299, baseType: !1338)
!3873 = !DILocation(line: 516, column: 9, scope: !1318)
!3874 = !DILocalVariable(name: "srl", scope: !1318, file: !3, line: 517, type: !3875)
!3875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3876, size: 64)
!3876 = !DIDerivedType(tag: DW_TAG_typedef, name: "SceneRenderLayer", file: !1339, line: 194, baseType: !3877)
!3877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SceneRenderLayer", file: !1339, line: 174, size: 1472, elements: !3878)
!3878 = !{!3879, !3881, !3882, !3883, !3884, !3885, !3886, !3887, !3888, !3889, !3890, !3891, !3892, !3893}
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3877, file: !1339, line: 175, baseType: !3880, size: 64)
!3880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3877, size: 64)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3877, file: !1339, line: 175, baseType: !3880, size: 64, offset: 64)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3877, file: !1339, line: 177, baseType: !192, size: 512, offset: 128)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !3877, file: !1339, line: 179, baseType: !1463, size: 64, offset: 640)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !3877, file: !1339, line: 180, baseType: !2521, size: 64, offset: 704)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !3877, file: !1339, line: 182, baseType: !7, size: 32, offset: 768)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "lay_zmask", scope: !3877, file: !1339, line: 183, baseType: !7, size: 32, offset: 800)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "lay_exclude", scope: !3877, file: !1339, line: 184, baseType: !7, size: 32, offset: 832)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !3877, file: !1339, line: 185, baseType: !119, size: 32, offset: 864)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !3877, file: !1339, line: 187, baseType: !119, size: 32, offset: 896)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "pass_xor", scope: !3877, file: !1339, line: 188, baseType: !119, size: 32, offset: 928)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !3877, file: !1339, line: 190, baseType: !119, size: 32, offset: 960)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "pass_alpha_threshold", scope: !3877, file: !1339, line: 191, baseType: !241, size: 32, offset: 992)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "freestyleConfig", scope: !3877, file: !1339, line: 193, baseType: !3894, size: 448, offset: 1024)
!3894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FreestyleConfig", file: !3895, line: 127, size: 448, elements: !3896)
!3895 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3896 = !{!3897, !3898, !3899, !3900, !3901, !3902, !3903, !3904}
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "modules", scope: !3894, file: !3895, line: 128, baseType: !202, size: 128)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3894, file: !3895, line: 130, baseType: !119, size: 32, offset: 128)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "raycasting_algorithm", scope: !3894, file: !3895, line: 131, baseType: !119, size: 32, offset: 160)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3894, file: !3895, line: 132, baseType: !119, size: 32, offset: 192)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "sphere_radius", scope: !3894, file: !3895, line: 133, baseType: !241, size: 32, offset: 224)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "dkr_epsilon", scope: !3894, file: !3895, line: 134, baseType: !241, size: 32, offset: 256)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "crease_angle", scope: !3894, file: !3895, line: 135, baseType: !241, size: 32, offset: 288)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "linesets", scope: !3894, file: !3895, line: 137, baseType: !202, size: 128, offset: 320)
!3905 = !DILocation(line: 517, column: 20, scope: !1318)
!3906 = !DILocalVariable(name: "module", scope: !1318, file: !3, line: 518, type: !3907)
!3907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3908, size: 64)
!3908 = !DIDerivedType(tag: DW_TAG_typedef, name: "FreestyleModuleConfig", file: !3895, line: 125, baseType: !3909)
!3909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FreestyleModuleConfig", file: !3895, line: 119, size: 256, elements: !3910)
!3910 = !{!3911, !3913, !3914, !3915, !3916}
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3909, file: !3895, line: 120, baseType: !3912, size: 64)
!3912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3909, size: 64)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3909, file: !3895, line: 120, baseType: !3912, size: 64, offset: 64)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !3909, file: !3895, line: 122, baseType: !252, size: 64, offset: 128)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "is_displayed", scope: !3909, file: !3895, line: 123, baseType: !176, size: 16, offset: 192)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3909, file: !3895, line: 124, baseType: !2381, size: 48, offset: 208)
!3917 = !DILocation(line: 518, column: 25, scope: !1318)
!3918 = !DILocalVariable(name: "update", scope: !1318, file: !3, line: 519, type: !176)
!3919 = !DILocation(line: 519, column: 8, scope: !1318)
!3920 = !DILocation(line: 521, column: 12, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !1318, file: !3, line: 521, column: 2)
!3922 = !DILocation(line: 521, column: 19, scope: !3921)
!3923 = !DILocation(line: 521, column: 26, scope: !3921)
!3924 = !DILocation(line: 521, column: 10, scope: !3921)
!3925 = !DILocation(line: 521, column: 7, scope: !3921)
!3926 = !DILocation(line: 521, column: 33, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3921, file: !3, line: 521, column: 2)
!3928 = !DILocation(line: 521, column: 2, scope: !3921)
!3929 = !DILocation(line: 523, column: 15, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 523, column: 3)
!3931 = distinct !DILexicalBlock(scope: !3927, file: !3, line: 521, column: 55)
!3932 = !DILocation(line: 523, column: 19, scope: !3930)
!3933 = !DILocation(line: 523, column: 31, scope: !3930)
!3934 = !DILocation(line: 523, column: 13, scope: !3930)
!3935 = !DILocation(line: 523, column: 8, scope: !3930)
!3936 = !DILocation(line: 523, column: 38, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3930, file: !3, line: 523, column: 3)
!3938 = !DILocation(line: 523, column: 3, scope: !3930)
!3939 = !DILocation(line: 524, column: 8, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3941, file: !3, line: 524, column: 8)
!3941 = distinct !DILexicalBlock(scope: !3937, file: !3, line: 523, column: 63)
!3942 = !DILocation(line: 524, column: 14, scope: !3940)
!3943 = !DILocation(line: 524, column: 19, scope: !3940)
!3944 = !DILocation(line: 524, column: 8, scope: !3941)
!3945 = !DILocalVariable(name: "pc", scope: !3946, file: !3, line: 525, type: !3947)
!3946 = distinct !DILexicalBlock(scope: !3940, file: !3, line: 524, column: 35)
!3947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3948, size: 64)
!3948 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPythonCont", file: !3795, line: 52, baseType: !3949)
!3949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPythonCont", file: !3795, line: 47, size: 640, elements: !3950)
!3950 = !{!3951, !3952, !3953, !3954}
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !3949, file: !3795, line: 48, baseType: !252, size: 64)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !3949, file: !3795, line: 49, baseType: !192, size: 512, offset: 64)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3949, file: !3795, line: 50, baseType: !119, size: 32, offset: 576)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3949, file: !3795, line: 51, baseType: !119, size: 32, offset: 608)
!3955 = !DILocation(line: 525, column: 18, scope: !3946)
!3956 = !DILocation(line: 527, column: 10, scope: !3946)
!3957 = !DILocation(line: 527, column: 16, scope: !3946)
!3958 = !DILocation(line: 527, column: 8, scope: !3946)
!3959 = !DILocation(line: 528, column: 9, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3946, file: !3, line: 528, column: 9)
!3961 = !DILocation(line: 528, column: 13, scope: !3960)
!3962 = !DILocation(line: 528, column: 21, scope: !3960)
!3963 = !DILocation(line: 528, column: 18, scope: !3960)
!3964 = !DILocation(line: 528, column: 9, scope: !3946)
!3965 = !DILocation(line: 528, column: 27, scope: !3960)
!3966 = !DILocation(line: 528, column: 31, scope: !3960)
!3967 = !DILocation(line: 528, column: 36, scope: !3960)
!3968 = !DILocation(line: 529, column: 4, scope: !3946)
!3969 = !DILocation(line: 530, column: 3, scope: !3941)
!3970 = !DILocation(line: 523, column: 51, scope: !3937)
!3971 = !DILocation(line: 523, column: 57, scope: !3937)
!3972 = !DILocation(line: 523, column: 49, scope: !3937)
!3973 = !DILocation(line: 523, column: 3, scope: !3937)
!3974 = distinct !{!3974, !3938, !3975}
!3975 = !DILocation(line: 530, column: 3, scope: !3930)
!3976 = !DILocation(line: 532, column: 14, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 532, column: 3)
!3978 = !DILocation(line: 532, column: 18, scope: !3977)
!3979 = !DILocation(line: 532, column: 28, scope: !3977)
!3980 = !DILocation(line: 532, column: 12, scope: !3977)
!3981 = !DILocation(line: 532, column: 8, scope: !3977)
!3982 = !DILocation(line: 532, column: 35, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3977, file: !3, line: 532, column: 3)
!3984 = !DILocation(line: 532, column: 3, scope: !3977)
!3985 = !DILocation(line: 533, column: 8, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 533, column: 8)
!3987 = distinct !DILexicalBlock(scope: !3983, file: !3, line: 532, column: 57)
!3988 = !DILocation(line: 533, column: 13, scope: !3986)
!3989 = !DILocation(line: 533, column: 18, scope: !3986)
!3990 = !DILocation(line: 533, column: 8, scope: !3987)
!3991 = !DILocalVariable(name: "tfa", scope: !3992, file: !3, line: 534, type: !3993)
!3992 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 533, column: 35)
!3993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3994, size: 64)
!3994 = !DIDerivedType(tag: DW_TAG_typedef, name: "bTwoDFilterActuator", file: !2523, line: 211, baseType: !3995)
!3995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bTwoDFilterActuator", file: !2523, line: 200, size: 192, elements: !3996)
!3996 = !{!3997, !3998, !3999, !4000, !4001, !4002}
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3995, file: !2523, line: 201, baseType: !287, size: 32)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3995, file: !2523, line: 203, baseType: !176, size: 16, offset: 32)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3995, file: !2523, line: 206, baseType: !176, size: 16, offset: 48)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "int_arg", scope: !3995, file: !2523, line: 207, baseType: !119, size: 32, offset: 64)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "float_arg", scope: !3995, file: !2523, line: 209, baseType: !241, size: 32, offset: 96)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !3995, file: !2523, line: 210, baseType: !252, size: 64, offset: 128)
!4003 = !DILocation(line: 534, column: 26, scope: !3992)
!4004 = !DILocation(line: 536, column: 11, scope: !3992)
!4005 = !DILocation(line: 536, column: 16, scope: !3992)
!4006 = !DILocation(line: 536, column: 9, scope: !3992)
!4007 = !DILocation(line: 537, column: 9, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !3992, file: !3, line: 537, column: 9)
!4009 = !DILocation(line: 537, column: 14, scope: !4008)
!4010 = !DILocation(line: 537, column: 22, scope: !4008)
!4011 = !DILocation(line: 537, column: 19, scope: !4008)
!4012 = !DILocation(line: 537, column: 9, scope: !3992)
!4013 = !DILocation(line: 537, column: 28, scope: !4008)
!4014 = !DILocation(line: 537, column: 33, scope: !4008)
!4015 = !DILocation(line: 537, column: 38, scope: !4008)
!4016 = !DILocation(line: 538, column: 4, scope: !3992)
!4017 = !DILocation(line: 539, column: 3, scope: !3987)
!4018 = !DILocation(line: 532, column: 46, scope: !3983)
!4019 = !DILocation(line: 532, column: 51, scope: !3983)
!4020 = !DILocation(line: 532, column: 44, scope: !3983)
!4021 = !DILocation(line: 532, column: 3, scope: !3983)
!4022 = distinct !{!4022, !3984, !4023}
!4023 = !DILocation(line: 539, column: 3, scope: !3977)
!4024 = !DILocation(line: 542, column: 10, scope: !3931)
!4025 = !DILocation(line: 544, column: 7, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 544, column: 7)
!4027 = !DILocation(line: 544, column: 11, scope: !4026)
!4028 = !DILocation(line: 544, column: 16, scope: !4026)
!4029 = !DILocation(line: 544, column: 31, scope: !4026)
!4030 = !DILocation(line: 544, column: 34, scope: !4026)
!4031 = !DILocation(line: 544, column: 38, scope: !4026)
!4032 = !DILocation(line: 544, column: 7, scope: !3931)
!4033 = !DILocalVariable(name: "pchan", scope: !4034, file: !3, line: 545, type: !4035)
!4034 = distinct !DILexicalBlock(scope: !4026, file: !3, line: 544, column: 44)
!4035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4036, size: 64)
!4036 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPoseChannel", file: !1380, line: 243, baseType: !4037)
!4037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPoseChannel", file: !1380, line: 187, size: 4352, elements: !4038)
!4038 = !{!4039, !4041, !4042, !4043, !4044, !4045, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4055, !4056, !4057, !4058, !4059, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075, !4076, !4077, !4078, !4079, !4080, !4081}
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4037, file: !1380, line: 188, baseType: !4040, size: 64)
!4040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4037, size: 64)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4037, file: !1380, line: 188, baseType: !4040, size: 64, offset: 64)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !4037, file: !1380, line: 190, baseType: !181, size: 64, offset: 128)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !4037, file: !1380, line: 192, baseType: !202, size: 128, offset: 192)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4037, file: !1380, line: 193, baseType: !192, size: 512, offset: 320)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4037, file: !1380, line: 195, baseType: !176, size: 16, offset: 832)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "ikflag", scope: !4037, file: !1380, line: 196, baseType: !176, size: 16, offset: 848)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !4037, file: !1380, line: 197, baseType: !176, size: 16, offset: 864)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "agrp_index", scope: !4037, file: !1380, line: 198, baseType: !176, size: 16, offset: 880)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "constflag", scope: !4037, file: !1380, line: 199, baseType: !134, size: 8, offset: 896)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "selectflag", scope: !4037, file: !1380, line: 200, baseType: !134, size: 8, offset: 904)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "pad0", scope: !4037, file: !1380, line: 201, baseType: !3379, size: 48, offset: 912)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "bone", scope: !4037, file: !1380, line: 203, baseType: !4053, size: 64, offset: 960)
!4053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4054, size: 64)
!4054 = !DICompositeType(tag: DW_TAG_structure_type, name: "Bone", file: !1380, line: 203, flags: DIFlagFwdDecl)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4037, file: !1380, line: 204, baseType: !4040, size: 64, offset: 1024)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4037, file: !1380, line: 205, baseType: !4040, size: 64, offset: 1088)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "iktree", scope: !4037, file: !1380, line: 207, baseType: !204, size: 128, offset: 1152)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "siktree", scope: !4037, file: !1380, line: 208, baseType: !204, size: 128, offset: 1280)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !4037, file: !1380, line: 210, baseType: !1440, size: 64, offset: 1408)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !4037, file: !1380, line: 211, baseType: !1346, size: 64, offset: 1472)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "custom_tx", scope: !4037, file: !1380, line: 212, baseType: !4040, size: 64, offset: 1536)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !4037, file: !1380, line: 217, baseType: !1406, size: 96, offset: 1600)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4037, file: !1380, line: 218, baseType: !1406, size: 96, offset: 1696)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "eul", scope: !4037, file: !1380, line: 221, baseType: !1406, size: 96, offset: 1792)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !4037, file: !1380, line: 222, baseType: !1581, size: 128, offset: 1888)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !4037, file: !1380, line: 223, baseType: !1406, size: 96, offset: 2016)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !4037, file: !1380, line: 223, baseType: !241, size: 32, offset: 2112)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !4037, file: !1380, line: 224, baseType: !176, size: 16, offset: 2144)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4037, file: !1380, line: 225, baseType: !176, size: 16, offset: 2160)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "chan_mat", scope: !4037, file: !1380, line: 227, baseType: !2340, size: 512, offset: 2176)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "pose_mat", scope: !4037, file: !1380, line: 228, baseType: !2340, size: 512, offset: 2688)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !4037, file: !1380, line: 230, baseType: !2340, size: 512, offset: 3200)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "pose_head", scope: !4037, file: !1380, line: 233, baseType: !1406, size: 96, offset: 3712)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "pose_tail", scope: !4037, file: !1380, line: 234, baseType: !1406, size: 96, offset: 3808)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "limitmin", scope: !4037, file: !1380, line: 236, baseType: !1406, size: 96, offset: 3904)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "limitmax", scope: !4037, file: !1380, line: 236, baseType: !1406, size: 96, offset: 4000)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness", scope: !4037, file: !1380, line: 237, baseType: !1406, size: 96, offset: 4096)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "ikstretch", scope: !4037, file: !1380, line: 238, baseType: !241, size: 32, offset: 4192)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "ikrotweight", scope: !4037, file: !1380, line: 239, baseType: !241, size: 32, offset: 4224)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "iklinweight", scope: !4037, file: !1380, line: 240, baseType: !241, size: 32, offset: 4256)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !4037, file: !1380, line: 242, baseType: !138, size: 64, offset: 4288)
!4082 = !DILocation(line: 545, column: 18, scope: !4034)
!4083 = !DILocation(line: 546, column: 17, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4034, file: !3, line: 546, column: 4)
!4085 = !DILocation(line: 546, column: 21, scope: !4084)
!4086 = !DILocation(line: 546, column: 27, scope: !4084)
!4087 = !DILocation(line: 546, column: 36, scope: !4084)
!4088 = !DILocation(line: 546, column: 15, scope: !4084)
!4089 = !DILocation(line: 546, column: 9, scope: !4084)
!4090 = !DILocation(line: 546, column: 43, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4084, file: !3, line: 546, column: 4)
!4092 = !DILocation(line: 546, column: 4, scope: !4084)
!4093 = !DILocation(line: 547, column: 16, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4095, file: !3, line: 547, column: 5)
!4095 = distinct !DILexicalBlock(scope: !4091, file: !3, line: 546, column: 71)
!4096 = !DILocation(line: 547, column: 23, scope: !4094)
!4097 = !DILocation(line: 547, column: 35, scope: !4094)
!4098 = !DILocation(line: 547, column: 14, scope: !4094)
!4099 = !DILocation(line: 547, column: 10, scope: !4094)
!4100 = !DILocation(line: 547, column: 42, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4094, file: !3, line: 547, column: 5)
!4102 = !DILocation(line: 547, column: 5, scope: !4094)
!4103 = !DILocation(line: 548, column: 10, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4105, file: !3, line: 548, column: 10)
!4105 = distinct !DILexicalBlock(scope: !4101, file: !3, line: 547, column: 64)
!4106 = !DILocation(line: 548, column: 15, scope: !4104)
!4107 = !DILocation(line: 548, column: 20, scope: !4104)
!4108 = !DILocation(line: 548, column: 10, scope: !4105)
!4109 = !DILocalVariable(name: "data", scope: !4110, file: !3, line: 549, type: !4111)
!4110 = distinct !DILexicalBlock(scope: !4104, file: !3, line: 548, column: 47)
!4111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4112, size: 64)
!4112 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPythonConstraint", file: !44, line: 126, baseType: !4113)
!4113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPythonConstraint", file: !44, line: 115, size: 896, elements: !4114)
!4114 = !{!4115, !4116, !4117, !4118, !4119, !4120, !4121}
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !4113, file: !44, line: 116, baseType: !252, size: 64)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !4113, file: !44, line: 117, baseType: !181, size: 64, offset: 64)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4113, file: !44, line: 119, baseType: !119, size: 32, offset: 128)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "tarnum", scope: !4113, file: !44, line: 120, baseType: !119, size: 32, offset: 160)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "targets", scope: !4113, file: !44, line: 122, baseType: !202, size: 128, offset: 192)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !4113, file: !44, line: 124, baseType: !1346, size: 64, offset: 320)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !4113, file: !44, line: 125, baseType: !192, size: 512, offset: 384)
!4122 = !DILocation(line: 549, column: 26, scope: !4110)
!4123 = !DILocation(line: 549, column: 33, scope: !4110)
!4124 = !DILocation(line: 549, column: 38, scope: !4110)
!4125 = !DILocation(line: 550, column: 11, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4110, file: !3, line: 550, column: 11)
!4127 = !DILocation(line: 550, column: 17, scope: !4126)
!4128 = !DILocation(line: 550, column: 25, scope: !4126)
!4129 = !DILocation(line: 550, column: 22, scope: !4126)
!4130 = !DILocation(line: 550, column: 11, scope: !4110)
!4131 = !DILocation(line: 550, column: 31, scope: !4126)
!4132 = !DILocation(line: 550, column: 37, scope: !4126)
!4133 = !DILocation(line: 550, column: 42, scope: !4126)
!4134 = !DILocation(line: 551, column: 14, scope: !4110)
!4135 = !DILocation(line: 553, column: 6, scope: !4110)
!4136 = !DILocation(line: 554, column: 5, scope: !4105)
!4137 = !DILocation(line: 547, column: 53, scope: !4101)
!4138 = !DILocation(line: 547, column: 58, scope: !4101)
!4139 = !DILocation(line: 547, column: 51, scope: !4101)
!4140 = !DILocation(line: 547, column: 5, scope: !4101)
!4141 = distinct !{!4141, !4102, !4142}
!4142 = !DILocation(line: 554, column: 5, scope: !4094)
!4143 = !DILocation(line: 555, column: 4, scope: !4095)
!4144 = !DILocation(line: 546, column: 58, scope: !4091)
!4145 = !DILocation(line: 546, column: 65, scope: !4091)
!4146 = !DILocation(line: 546, column: 56, scope: !4091)
!4147 = !DILocation(line: 546, column: 4, scope: !4091)
!4148 = distinct !{!4148, !4092, !4149}
!4149 = !DILocation(line: 555, column: 4, scope: !4084)
!4150 = !DILocation(line: 556, column: 3, scope: !4034)
!4151 = !DILocation(line: 558, column: 14, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 558, column: 3)
!4153 = !DILocation(line: 558, column: 18, scope: !4152)
!4154 = !DILocation(line: 558, column: 30, scope: !4152)
!4155 = !DILocation(line: 558, column: 12, scope: !4152)
!4156 = !DILocation(line: 558, column: 8, scope: !4152)
!4157 = !DILocation(line: 558, column: 37, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 558, column: 3)
!4159 = !DILocation(line: 558, column: 3, scope: !4152)
!4160 = !DILocation(line: 559, column: 8, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4162, file: !3, line: 559, column: 8)
!4162 = distinct !DILexicalBlock(scope: !4158, file: !3, line: 558, column: 59)
!4163 = !DILocation(line: 559, column: 13, scope: !4161)
!4164 = !DILocation(line: 559, column: 18, scope: !4161)
!4165 = !DILocation(line: 559, column: 8, scope: !4162)
!4166 = !DILocalVariable(name: "data", scope: !4167, file: !3, line: 560, type: !4111)
!4167 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 559, column: 45)
!4168 = !DILocation(line: 560, column: 24, scope: !4167)
!4169 = !DILocation(line: 560, column: 31, scope: !4167)
!4170 = !DILocation(line: 560, column: 36, scope: !4167)
!4171 = !DILocation(line: 561, column: 9, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4167, file: !3, line: 561, column: 9)
!4173 = !DILocation(line: 561, column: 15, scope: !4172)
!4174 = !DILocation(line: 561, column: 23, scope: !4172)
!4175 = !DILocation(line: 561, column: 20, scope: !4172)
!4176 = !DILocation(line: 561, column: 9, scope: !4167)
!4177 = !DILocation(line: 561, column: 29, scope: !4172)
!4178 = !DILocation(line: 561, column: 35, scope: !4172)
!4179 = !DILocation(line: 561, column: 40, scope: !4172)
!4180 = !DILocation(line: 562, column: 12, scope: !4167)
!4181 = !DILocation(line: 563, column: 4, scope: !4167)
!4182 = !DILocation(line: 564, column: 3, scope: !4162)
!4183 = !DILocation(line: 558, column: 48, scope: !4158)
!4184 = !DILocation(line: 558, column: 53, scope: !4158)
!4185 = !DILocation(line: 558, column: 46, scope: !4158)
!4186 = !DILocation(line: 558, column: 3, scope: !4158)
!4187 = distinct !{!4187, !4159, !4188}
!4188 = !DILocation(line: 564, column: 3, scope: !4152)
!4189 = !DILocation(line: 566, column: 7, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 566, column: 7)
!4191 = !DILocation(line: 566, column: 7, scope: !3931)
!4192 = !DILocation(line: 567, column: 23, scope: !4190)
!4193 = !DILocation(line: 567, column: 27, scope: !4190)
!4194 = !DILocation(line: 567, column: 4, scope: !4190)
!4195 = !DILocation(line: 568, column: 2, scope: !3931)
!4196 = !DILocation(line: 521, column: 42, scope: !3927)
!4197 = !DILocation(line: 521, column: 46, scope: !3927)
!4198 = !DILocation(line: 521, column: 49, scope: !3927)
!4199 = !DILocation(line: 521, column: 40, scope: !3927)
!4200 = !DILocation(line: 521, column: 2, scope: !3927)
!4201 = distinct !{!4201, !3928, !4202}
!4202 = !DILocation(line: 568, column: 2, scope: !3921)
!4203 = !DILocation(line: 571, column: 13, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !1318, file: !3, line: 571, column: 2)
!4205 = !DILocation(line: 571, column: 20, scope: !4204)
!4206 = !DILocation(line: 571, column: 24, scope: !4204)
!4207 = !DILocation(line: 571, column: 11, scope: !4204)
!4208 = !DILocation(line: 571, column: 7, scope: !4204)
!4209 = !DILocation(line: 571, column: 31, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4204, file: !3, line: 571, column: 2)
!4211 = !DILocation(line: 571, column: 2, scope: !4204)
!4212 = !DILocation(line: 572, column: 11, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4210, file: !3, line: 571, column: 56)
!4214 = !DILocation(line: 572, column: 16, scope: !4213)
!4215 = !DILocation(line: 572, column: 9, scope: !4213)
!4216 = !DILocation(line: 573, column: 8, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4213, file: !3, line: 573, column: 7)
!4218 = !DILocation(line: 573, column: 7, scope: !4213)
!4219 = !DILocation(line: 574, column: 4, scope: !4217)
!4220 = !DILocation(line: 575, column: 15, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4213, file: !3, line: 575, column: 3)
!4222 = !DILocation(line: 575, column: 22, scope: !4221)
!4223 = !DILocation(line: 575, column: 28, scope: !4221)
!4224 = !DILocation(line: 575, column: 13, scope: !4221)
!4225 = !DILocation(line: 575, column: 8, scope: !4221)
!4226 = !DILocation(line: 575, column: 35, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4221, file: !3, line: 575, column: 3)
!4228 = !DILocation(line: 575, column: 3, scope: !4221)
!4229 = !DILocation(line: 576, column: 8, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4231, file: !3, line: 576, column: 8)
!4231 = distinct !DILexicalBlock(scope: !4227, file: !3, line: 575, column: 60)
!4232 = !DILocation(line: 576, column: 14, scope: !4230)
!4233 = !DILocation(line: 576, column: 19, scope: !4230)
!4234 = !DILocation(line: 576, column: 8, scope: !4231)
!4235 = !DILocalVariable(name: "ntext", scope: !4236, file: !3, line: 577, type: !139)
!4236 = distinct !DILexicalBlock(scope: !4230, file: !3, line: 576, column: 38)
!4237 = !DILocation(line: 577, column: 11, scope: !4236)
!4238 = !DILocation(line: 577, column: 27, scope: !4236)
!4239 = !DILocation(line: 577, column: 33, scope: !4236)
!4240 = !DILocation(line: 577, column: 19, scope: !4236)
!4241 = !DILocation(line: 578, column: 9, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4236, file: !3, line: 578, column: 9)
!4243 = !DILocation(line: 578, column: 18, scope: !4242)
!4244 = !DILocation(line: 578, column: 15, scope: !4242)
!4245 = !DILocation(line: 578, column: 9, scope: !4236)
!4246 = !DILocation(line: 578, column: 24, scope: !4242)
!4247 = !DILocation(line: 578, column: 30, scope: !4242)
!4248 = !DILocation(line: 578, column: 33, scope: !4242)
!4249 = !DILocation(line: 579, column: 4, scope: !4236)
!4250 = !DILocation(line: 580, column: 3, scope: !4231)
!4251 = !DILocation(line: 575, column: 48, scope: !4227)
!4252 = !DILocation(line: 575, column: 54, scope: !4227)
!4253 = !DILocation(line: 575, column: 46, scope: !4227)
!4254 = !DILocation(line: 575, column: 3, scope: !4227)
!4255 = distinct !{!4255, !4228, !4256}
!4256 = !DILocation(line: 580, column: 3, scope: !4221)
!4257 = !DILocation(line: 581, column: 2, scope: !4213)
!4258 = !DILocation(line: 571, column: 42, scope: !4210)
!4259 = !DILocation(line: 571, column: 47, scope: !4210)
!4260 = !DILocation(line: 571, column: 50, scope: !4210)
!4261 = !DILocation(line: 571, column: 40, scope: !4210)
!4262 = !DILocation(line: 571, column: 2, scope: !4210)
!4263 = distinct !{!4263, !4211, !4264}
!4264 = !DILocation(line: 581, column: 2, scope: !4204)
!4265 = !DILocation(line: 583, column: 15, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !1318, file: !3, line: 583, column: 2)
!4267 = !DILocation(line: 583, column: 22, scope: !4266)
!4268 = !DILocation(line: 583, column: 31, scope: !4266)
!4269 = !DILocation(line: 583, column: 13, scope: !4266)
!4270 = !DILocation(line: 583, column: 7, scope: !4266)
!4271 = !DILocation(line: 583, column: 38, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4266, file: !3, line: 583, column: 2)
!4273 = !DILocation(line: 583, column: 2, scope: !4266)
!4274 = !DILocation(line: 584, column: 15, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4276, file: !3, line: 584, column: 3)
!4276 = distinct !DILexicalBlock(scope: !4272, file: !3, line: 583, column: 69)
!4277 = !DILocation(line: 584, column: 22, scope: !4275)
!4278 = !DILocation(line: 584, column: 28, scope: !4275)
!4279 = !DILocation(line: 584, column: 13, scope: !4275)
!4280 = !DILocation(line: 584, column: 8, scope: !4275)
!4281 = !DILocation(line: 584, column: 35, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4275, file: !3, line: 584, column: 3)
!4283 = !DILocation(line: 584, column: 3, scope: !4275)
!4284 = !DILocation(line: 585, column: 8, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4286, file: !3, line: 585, column: 8)
!4286 = distinct !DILexicalBlock(scope: !4282, file: !3, line: 584, column: 60)
!4287 = !DILocation(line: 585, column: 14, scope: !4285)
!4288 = !DILocation(line: 585, column: 19, scope: !4285)
!4289 = !DILocation(line: 585, column: 8, scope: !4286)
!4290 = !DILocalVariable(name: "ntext", scope: !4291, file: !3, line: 586, type: !139)
!4291 = distinct !DILexicalBlock(scope: !4285, file: !3, line: 585, column: 38)
!4292 = !DILocation(line: 586, column: 11, scope: !4291)
!4293 = !DILocation(line: 586, column: 27, scope: !4291)
!4294 = !DILocation(line: 586, column: 33, scope: !4291)
!4295 = !DILocation(line: 586, column: 19, scope: !4291)
!4296 = !DILocation(line: 587, column: 9, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4291, file: !3, line: 587, column: 9)
!4298 = !DILocation(line: 587, column: 18, scope: !4297)
!4299 = !DILocation(line: 587, column: 15, scope: !4297)
!4300 = !DILocation(line: 587, column: 9, scope: !4291)
!4301 = !DILocation(line: 587, column: 24, scope: !4297)
!4302 = !DILocation(line: 587, column: 30, scope: !4297)
!4303 = !DILocation(line: 587, column: 33, scope: !4297)
!4304 = !DILocation(line: 588, column: 4, scope: !4291)
!4305 = !DILocation(line: 589, column: 3, scope: !4286)
!4306 = !DILocation(line: 584, column: 48, scope: !4282)
!4307 = !DILocation(line: 584, column: 54, scope: !4282)
!4308 = !DILocation(line: 584, column: 46, scope: !4282)
!4309 = !DILocation(line: 584, column: 3, scope: !4282)
!4310 = distinct !{!4310, !4283, !4311}
!4311 = !DILocation(line: 589, column: 3, scope: !4275)
!4312 = !DILocation(line: 590, column: 2, scope: !4276)
!4313 = !DILocation(line: 583, column: 53, scope: !4272)
!4314 = !DILocation(line: 583, column: 60, scope: !4272)
!4315 = !DILocation(line: 583, column: 63, scope: !4272)
!4316 = !DILocation(line: 583, column: 51, scope: !4272)
!4317 = !DILocation(line: 583, column: 2, scope: !4272)
!4318 = distinct !{!4318, !4273, !4319}
!4319 = !DILocation(line: 590, column: 2, scope: !4266)
!4320 = !DILocation(line: 593, column: 13, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !1318, file: !3, line: 593, column: 2)
!4322 = !DILocation(line: 593, column: 20, scope: !4321)
!4323 = !DILocation(line: 593, column: 27, scope: !4321)
!4324 = !DILocation(line: 593, column: 11, scope: !4321)
!4325 = !DILocation(line: 593, column: 7, scope: !4321)
!4326 = !DILocation(line: 593, column: 34, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4321, file: !3, line: 593, column: 2)
!4328 = !DILocation(line: 593, column: 2, scope: !4321)
!4329 = !DILocation(line: 594, column: 15, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 594, column: 3)
!4331 = distinct !DILexicalBlock(scope: !4327, file: !3, line: 593, column: 59)
!4332 = !DILocation(line: 594, column: 20, scope: !4330)
!4333 = !DILocation(line: 594, column: 29, scope: !4330)
!4334 = !DILocation(line: 594, column: 13, scope: !4330)
!4335 = !DILocation(line: 594, column: 8, scope: !4330)
!4336 = !DILocation(line: 594, column: 36, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4330, file: !3, line: 594, column: 3)
!4338 = !DILocation(line: 594, column: 3, scope: !4330)
!4339 = !DILocation(line: 595, column: 14, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 595, column: 4)
!4341 = distinct !DILexicalBlock(scope: !4337, file: !3, line: 594, column: 61)
!4342 = !DILocation(line: 595, column: 20, scope: !4340)
!4343 = !DILocation(line: 595, column: 30, scope: !4340)
!4344 = !DILocation(line: 595, column: 12, scope: !4340)
!4345 = !DILocation(line: 595, column: 9, scope: !4340)
!4346 = !DILocation(line: 595, column: 37, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4340, file: !3, line: 595, column: 4)
!4348 = !DILocation(line: 595, column: 4, scope: !4340)
!4349 = !DILocation(line: 596, column: 9, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4351, file: !3, line: 596, column: 9)
!4351 = distinct !DILexicalBlock(scope: !4347, file: !3, line: 595, column: 56)
!4352 = !DILocation(line: 596, column: 13, scope: !4350)
!4353 = !DILocation(line: 596, column: 23, scope: !4350)
!4354 = !DILocation(line: 596, column: 9, scope: !4351)
!4355 = !DILocalVariable(name: "st", scope: !4356, file: !3, line: 597, type: !226)
!4356 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 596, column: 38)
!4357 = !DILocation(line: 597, column: 17, scope: !4356)
!4358 = !DILocation(line: 597, column: 36, scope: !4356)
!4359 = !DILocation(line: 597, column: 22, scope: !4356)
!4360 = !DILocation(line: 599, column: 10, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4356, file: !3, line: 599, column: 10)
!4362 = !DILocation(line: 599, column: 14, scope: !4361)
!4363 = !DILocation(line: 599, column: 22, scope: !4361)
!4364 = !DILocation(line: 599, column: 19, scope: !4361)
!4365 = !DILocation(line: 599, column: 10, scope: !4356)
!4366 = !DILocation(line: 600, column: 7, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4361, file: !3, line: 599, column: 28)
!4368 = !DILocation(line: 600, column: 11, scope: !4367)
!4369 = !DILocation(line: 600, column: 16, scope: !4367)
!4370 = !DILocation(line: 601, column: 7, scope: !4367)
!4371 = !DILocation(line: 601, column: 11, scope: !4367)
!4372 = !DILocation(line: 601, column: 15, scope: !4367)
!4373 = !DILocation(line: 602, column: 6, scope: !4367)
!4374 = !DILocation(line: 603, column: 5, scope: !4356)
!4375 = !DILocation(line: 604, column: 4, scope: !4351)
!4376 = !DILocation(line: 595, column: 46, scope: !4347)
!4377 = !DILocation(line: 595, column: 50, scope: !4347)
!4378 = !DILocation(line: 595, column: 44, scope: !4347)
!4379 = !DILocation(line: 595, column: 4, scope: !4347)
!4380 = distinct !{!4380, !4348, !4381}
!4381 = !DILocation(line: 604, column: 4, scope: !4340)
!4382 = !DILocation(line: 605, column: 3, scope: !4341)
!4383 = !DILocation(line: 594, column: 49, scope: !4337)
!4384 = !DILocation(line: 594, column: 55, scope: !4337)
!4385 = !DILocation(line: 594, column: 47, scope: !4337)
!4386 = !DILocation(line: 594, column: 3, scope: !4337)
!4387 = distinct !{!4387, !4338, !4388}
!4388 = !DILocation(line: 605, column: 3, scope: !4330)
!4389 = !DILocation(line: 606, column: 2, scope: !4331)
!4390 = !DILocation(line: 593, column: 45, scope: !4327)
!4391 = !DILocation(line: 593, column: 50, scope: !4327)
!4392 = !DILocation(line: 593, column: 53, scope: !4327)
!4393 = !DILocation(line: 593, column: 43, scope: !4327)
!4394 = !DILocation(line: 593, column: 2, scope: !4327)
!4395 = distinct !{!4395, !4328, !4396}
!4396 = !DILocation(line: 606, column: 2, scope: !4321)
!4397 = !DILocation(line: 609, column: 13, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !1318, file: !3, line: 609, column: 2)
!4399 = !DILocation(line: 609, column: 20, scope: !4398)
!4400 = !DILocation(line: 609, column: 26, scope: !4398)
!4401 = !DILocation(line: 609, column: 11, scope: !4398)
!4402 = !DILocation(line: 609, column: 7, scope: !4398)
!4403 = !DILocation(line: 609, column: 33, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4398, file: !3, line: 609, column: 2)
!4405 = !DILocation(line: 609, column: 2, scope: !4398)
!4406 = !DILocation(line: 610, column: 14, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4408, file: !3, line: 610, column: 3)
!4408 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 609, column: 58)
!4409 = !DILocation(line: 610, column: 19, scope: !4407)
!4410 = !DILocation(line: 610, column: 21, scope: !4407)
!4411 = !DILocation(line: 610, column: 28, scope: !4407)
!4412 = !DILocation(line: 610, column: 12, scope: !4407)
!4413 = !DILocation(line: 610, column: 8, scope: !4407)
!4414 = !DILocation(line: 610, column: 35, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 610, column: 3)
!4416 = !DILocation(line: 610, column: 3, scope: !4407)
!4417 = !DILocation(line: 611, column: 18, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4419, file: !3, line: 611, column: 4)
!4419 = distinct !DILexicalBlock(scope: !4415, file: !3, line: 610, column: 57)
!4420 = !DILocation(line: 611, column: 23, scope: !4418)
!4421 = !DILocation(line: 611, column: 39, scope: !4418)
!4422 = !DILocation(line: 611, column: 47, scope: !4418)
!4423 = !DILocation(line: 611, column: 16, scope: !4418)
!4424 = !DILocation(line: 611, column: 9, scope: !4418)
!4425 = !DILocation(line: 611, column: 54, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4418, file: !3, line: 611, column: 4)
!4427 = !DILocation(line: 611, column: 4, scope: !4418)
!4428 = !DILocation(line: 612, column: 9, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4430, file: !3, line: 612, column: 9)
!4430 = distinct !DILexicalBlock(scope: !4426, file: !3, line: 611, column: 85)
!4431 = !DILocation(line: 612, column: 17, scope: !4429)
!4432 = !DILocation(line: 612, column: 27, scope: !4429)
!4433 = !DILocation(line: 612, column: 24, scope: !4429)
!4434 = !DILocation(line: 612, column: 9, scope: !4430)
!4435 = !DILocation(line: 613, column: 6, scope: !4429)
!4436 = !DILocation(line: 613, column: 14, scope: !4429)
!4437 = !DILocation(line: 613, column: 21, scope: !4429)
!4438 = !DILocation(line: 614, column: 4, scope: !4430)
!4439 = !DILocation(line: 611, column: 71, scope: !4426)
!4440 = !DILocation(line: 611, column: 79, scope: !4426)
!4441 = !DILocation(line: 611, column: 69, scope: !4426)
!4442 = !DILocation(line: 611, column: 4, scope: !4426)
!4443 = distinct !{!4443, !4427, !4444}
!4444 = !DILocation(line: 614, column: 4, scope: !4418)
!4445 = !DILocation(line: 615, column: 3, scope: !4419)
!4446 = !DILocation(line: 610, column: 46, scope: !4415)
!4447 = !DILocation(line: 610, column: 51, scope: !4415)
!4448 = !DILocation(line: 610, column: 44, scope: !4415)
!4449 = !DILocation(line: 610, column: 3, scope: !4415)
!4450 = distinct !{!4450, !4416, !4451}
!4451 = !DILocation(line: 615, column: 3, scope: !4407)
!4452 = !DILocation(line: 616, column: 2, scope: !4408)
!4453 = !DILocation(line: 609, column: 44, scope: !4404)
!4454 = !DILocation(line: 609, column: 49, scope: !4404)
!4455 = !DILocation(line: 609, column: 52, scope: !4404)
!4456 = !DILocation(line: 609, column: 42, scope: !4404)
!4457 = !DILocation(line: 609, column: 2, scope: !4404)
!4458 = distinct !{!4458, !4405, !4459}
!4459 = !DILocation(line: 616, column: 2, scope: !4398)
!4460 = !DILocation(line: 618, column: 2, scope: !1318)
!4461 = !DILocation(line: 618, column: 8, scope: !1318)
!4462 = !DILocation(line: 618, column: 11, scope: !1318)
!4463 = !DILocation(line: 618, column: 14, scope: !1318)
!4464 = !DILocation(line: 619, column: 1, scope: !1318)
!4465 = distinct !DISubprogram(name: "BKE_text_clear", scope: !3, file: !3, line: 621, type: !332, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!4466 = !DILocalVariable(name: "text", arg: 1, scope: !4465, file: !3, line: 621, type: !139)
!4467 = !DILocation(line: 621, column: 27, scope: !4465)
!4468 = !DILocalVariable(name: "oldstate", scope: !4465, file: !3, line: 623, type: !119)
!4469 = !DILocation(line: 623, column: 6, scope: !4465)
!4470 = !DILocation(line: 625, column: 13, scope: !4465)
!4471 = !DILocation(line: 625, column: 11, scope: !4465)
!4472 = !DILocation(line: 626, column: 2, scope: !4465)
!4473 = !DILocation(line: 627, column: 14, scope: !4465)
!4474 = !DILocation(line: 627, column: 2, scope: !4465)
!4475 = !DILocation(line: 628, column: 17, scope: !4465)
!4476 = !DILocation(line: 628, column: 2, scope: !4465)
!4477 = !DILocation(line: 629, column: 20, scope: !4465)
!4478 = !DILocation(line: 629, column: 2, scope: !4465)
!4479 = !DILocation(line: 631, column: 17, scope: !4465)
!4480 = !DILocation(line: 631, column: 2, scope: !4465)
!4481 = !DILocation(line: 632, column: 1, scope: !4465)
!4482 = distinct !DISubprogram(name: "txt_sel_all", scope: !3, file: !3, line: 1254, type: !332, scopeLine: 1255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!4483 = !DILocalVariable(name: "text", arg: 1, scope: !4482, file: !3, line: 1254, type: !139)
!4484 = !DILocation(line: 1254, column: 24, scope: !4482)
!4485 = !DILocation(line: 1256, column: 15, scope: !4482)
!4486 = !DILocation(line: 1256, column: 21, scope: !4482)
!4487 = !DILocation(line: 1256, column: 27, scope: !4482)
!4488 = !DILocation(line: 1256, column: 2, scope: !4482)
!4489 = !DILocation(line: 1256, column: 8, scope: !4482)
!4490 = !DILocation(line: 1256, column: 13, scope: !4482)
!4491 = !DILocation(line: 1257, column: 2, scope: !4482)
!4492 = !DILocation(line: 1257, column: 8, scope: !4482)
!4493 = !DILocation(line: 1257, column: 13, scope: !4482)
!4494 = !DILocation(line: 1259, column: 15, scope: !4482)
!4495 = !DILocation(line: 1259, column: 21, scope: !4482)
!4496 = !DILocation(line: 1259, column: 27, scope: !4482)
!4497 = !DILocation(line: 1259, column: 2, scope: !4482)
!4498 = !DILocation(line: 1259, column: 8, scope: !4482)
!4499 = !DILocation(line: 1259, column: 13, scope: !4482)
!4500 = !DILocation(line: 1260, column: 15, scope: !4482)
!4501 = !DILocation(line: 1260, column: 21, scope: !4482)
!4502 = !DILocation(line: 1260, column: 27, scope: !4482)
!4503 = !DILocation(line: 1260, column: 2, scope: !4482)
!4504 = !DILocation(line: 1260, column: 8, scope: !4482)
!4505 = !DILocation(line: 1260, column: 13, scope: !4482)
!4506 = !DILocation(line: 1261, column: 1, scope: !4482)
!4507 = distinct !DISubprogram(name: "txt_delete_sel", scope: !3, file: !3, line: 1216, type: !332, scopeLine: 1217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!4508 = !DILocalVariable(name: "text", arg: 1, scope: !4507, file: !3, line: 1216, type: !139)
!4509 = !DILocation(line: 1216, column: 34, scope: !4507)
!4510 = !DILocalVariable(name: "tmpl", scope: !4507, file: !3, line: 1218, type: !124)
!4511 = !DILocation(line: 1218, column: 12, scope: !4507)
!4512 = !DILocalVariable(name: "buf", scope: !4507, file: !3, line: 1219, type: !133)
!4513 = !DILocation(line: 1219, column: 8, scope: !4507)
!4514 = !DILocation(line: 1221, column: 7, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4507, file: !3, line: 1221, column: 6)
!4516 = !DILocation(line: 1221, column: 13, scope: !4515)
!4517 = !DILocation(line: 1221, column: 6, scope: !4507)
!4518 = !DILocation(line: 1221, column: 19, scope: !4515)
!4519 = !DILocation(line: 1222, column: 7, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4507, file: !3, line: 1222, column: 6)
!4521 = !DILocation(line: 1222, column: 13, scope: !4520)
!4522 = !DILocation(line: 1222, column: 6, scope: !4507)
!4523 = !DILocation(line: 1222, column: 19, scope: !4520)
!4524 = !DILocation(line: 1224, column: 19, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4507, file: !3, line: 1224, column: 6)
!4526 = !DILocation(line: 1224, column: 7, scope: !4525)
!4527 = !DILocation(line: 1224, column: 6, scope: !4507)
!4528 = !DILocation(line: 1224, column: 26, scope: !4525)
!4529 = !DILocation(line: 1226, column: 20, scope: !4507)
!4530 = !DILocation(line: 1226, column: 2, scope: !4507)
!4531 = !DILocation(line: 1228, column: 7, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4507, file: !3, line: 1228, column: 6)
!4533 = !DILocation(line: 1228, column: 6, scope: !4507)
!4534 = !DILocation(line: 1229, column: 24, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 1228, column: 16)
!4536 = !DILocation(line: 1229, column: 9, scope: !4535)
!4537 = !DILocation(line: 1229, column: 7, scope: !4535)
!4538 = !DILocation(line: 1230, column: 24, scope: !4535)
!4539 = !DILocation(line: 1230, column: 43, scope: !4535)
!4540 = !DILocation(line: 1230, column: 3, scope: !4535)
!4541 = !DILocation(line: 1231, column: 3, scope: !4535)
!4542 = !DILocation(line: 1231, column: 13, scope: !4535)
!4543 = !DILocation(line: 1232, column: 2, scope: !4535)
!4544 = !DILocation(line: 1234, column: 8, scope: !4507)
!4545 = !DILocation(line: 1234, column: 20, scope: !4507)
!4546 = !DILocation(line: 1234, column: 26, scope: !4507)
!4547 = !DILocation(line: 1234, column: 34, scope: !4507)
!4548 = !DILocation(line: 1234, column: 40, scope: !4507)
!4549 = !DILocation(line: 1234, column: 46, scope: !4507)
!4550 = !DILocation(line: 1234, column: 52, scope: !4507)
!4551 = !DILocation(line: 1234, column: 58, scope: !4507)
!4552 = !DILocation(line: 1234, column: 50, scope: !4507)
!4553 = !DILocation(line: 1234, column: 31, scope: !4507)
!4554 = !DILocation(line: 1234, column: 64, scope: !4507)
!4555 = !DILocation(line: 1234, column: 6, scope: !4507)
!4556 = !DILocation(line: 1236, column: 10, scope: !4507)
!4557 = !DILocation(line: 1236, column: 15, scope: !4507)
!4558 = !DILocation(line: 1236, column: 21, scope: !4507)
!4559 = !DILocation(line: 1236, column: 27, scope: !4507)
!4560 = !DILocation(line: 1236, column: 33, scope: !4507)
!4561 = !DILocation(line: 1236, column: 39, scope: !4507)
!4562 = !DILocation(line: 1236, column: 2, scope: !4507)
!4563 = !DILocation(line: 1237, column: 9, scope: !4507)
!4564 = !DILocation(line: 1237, column: 15, scope: !4507)
!4565 = !DILocation(line: 1237, column: 21, scope: !4507)
!4566 = !DILocation(line: 1237, column: 13, scope: !4507)
!4567 = !DILocation(line: 1237, column: 27, scope: !4507)
!4568 = !DILocation(line: 1237, column: 33, scope: !4507)
!4569 = !DILocation(line: 1237, column: 39, scope: !4507)
!4570 = !DILocation(line: 1237, column: 46, scope: !4507)
!4571 = !DILocation(line: 1237, column: 52, scope: !4507)
!4572 = !DILocation(line: 1237, column: 44, scope: !4507)
!4573 = !DILocation(line: 1237, column: 2, scope: !4507)
!4574 = !DILocation(line: 1238, column: 2, scope: !4507)
!4575 = !DILocation(line: 1238, column: 6, scope: !4507)
!4576 = !DILocation(line: 1238, column: 12, scope: !4507)
!4577 = !DILocation(line: 1238, column: 20, scope: !4507)
!4578 = !DILocation(line: 1238, column: 26, scope: !4507)
!4579 = !DILocation(line: 1238, column: 32, scope: !4507)
!4580 = !DILocation(line: 1238, column: 38, scope: !4507)
!4581 = !DILocation(line: 1238, column: 44, scope: !4507)
!4582 = !DILocation(line: 1238, column: 36, scope: !4507)
!4583 = !DILocation(line: 1238, column: 17, scope: !4507)
!4584 = !DILocation(line: 1238, column: 51, scope: !4507)
!4585 = !DILocation(line: 1240, column: 16, scope: !4507)
!4586 = !DILocation(line: 1240, column: 22, scope: !4507)
!4587 = !DILocation(line: 1240, column: 28, scope: !4507)
!4588 = !DILocation(line: 1240, column: 2, scope: !4507)
!4589 = !DILocation(line: 1242, column: 9, scope: !4507)
!4590 = !DILocation(line: 1242, column: 15, scope: !4507)
!4591 = !DILocation(line: 1242, column: 7, scope: !4507)
!4592 = !DILocation(line: 1243, column: 2, scope: !4507)
!4593 = !DILocation(line: 1243, column: 9, scope: !4507)
!4594 = !DILocation(line: 1243, column: 17, scope: !4507)
!4595 = !DILocation(line: 1243, column: 23, scope: !4507)
!4596 = !DILocation(line: 1243, column: 14, scope: !4507)
!4597 = !DILocation(line: 1244, column: 10, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4507, file: !3, line: 1243, column: 29)
!4599 = !DILocation(line: 1244, column: 16, scope: !4598)
!4600 = !DILocation(line: 1244, column: 8, scope: !4598)
!4601 = !DILocation(line: 1245, column: 8, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4598, file: !3, line: 1245, column: 7)
!4603 = !DILocation(line: 1245, column: 7, scope: !4598)
!4604 = !DILocation(line: 1245, column: 14, scope: !4602)
!4605 = !DILocation(line: 1247, column: 19, scope: !4598)
!4606 = !DILocation(line: 1247, column: 25, scope: !4598)
!4607 = !DILocation(line: 1247, column: 31, scope: !4598)
!4608 = !DILocation(line: 1247, column: 3, scope: !4598)
!4609 = distinct !{!4609, !4592, !4610}
!4610 = !DILocation(line: 1248, column: 2, scope: !4507)
!4611 = !DILocation(line: 1250, column: 15, scope: !4507)
!4612 = !DILocation(line: 1250, column: 21, scope: !4507)
!4613 = !DILocation(line: 1250, column: 2, scope: !4507)
!4614 = !DILocation(line: 1250, column: 8, scope: !4507)
!4615 = !DILocation(line: 1250, column: 13, scope: !4507)
!4616 = !DILocation(line: 1251, column: 15, scope: !4507)
!4617 = !DILocation(line: 1251, column: 21, scope: !4507)
!4618 = !DILocation(line: 1251, column: 2, scope: !4507)
!4619 = !DILocation(line: 1251, column: 8, scope: !4507)
!4620 = !DILocation(line: 1251, column: 13, scope: !4507)
!4621 = !DILocation(line: 1252, column: 1, scope: !4507)
!4622 = distinct !DISubprogram(name: "txt_make_dirty", scope: !3, file: !3, line: 817, type: !332, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!4623 = !DILocalVariable(name: "text", arg: 1, scope: !4622, file: !3, line: 817, type: !139)
!4624 = !DILocation(line: 817, column: 34, scope: !4622)
!4625 = !DILocation(line: 819, column: 2, scope: !4622)
!4626 = !DILocation(line: 819, column: 8, scope: !4622)
!4627 = !DILocation(line: 819, column: 14, scope: !4622)
!4628 = !DILocation(line: 823, column: 1, scope: !4622)
!4629 = distinct !DISubprogram(name: "BKE_text_write", scope: !3, file: !3, line: 634, type: !4630, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!4630 = !DISubroutineType(types: !4631)
!4631 = !{null, !139, !304}
!4632 = !DILocalVariable(name: "text", arg: 1, scope: !4629, file: !3, line: 634, type: !139)
!4633 = !DILocation(line: 634, column: 27, scope: !4629)
!4634 = !DILocalVariable(name: "str", arg: 2, scope: !4629, file: !3, line: 634, type: !304)
!4635 = !DILocation(line: 634, column: 45, scope: !4629)
!4636 = !DILocalVariable(name: "oldstate", scope: !4629, file: !3, line: 636, type: !119)
!4637 = !DILocation(line: 636, column: 6, scope: !4629)
!4638 = !DILocation(line: 638, column: 13, scope: !4629)
!4639 = !DILocation(line: 638, column: 11, scope: !4629)
!4640 = !DILocation(line: 639, column: 17, scope: !4629)
!4641 = !DILocation(line: 639, column: 23, scope: !4629)
!4642 = !DILocation(line: 639, column: 2, scope: !4629)
!4643 = !DILocation(line: 640, column: 15, scope: !4629)
!4644 = !DILocation(line: 640, column: 2, scope: !4629)
!4645 = !DILocation(line: 641, column: 20, scope: !4629)
!4646 = !DILocation(line: 641, column: 2, scope: !4629)
!4647 = !DILocation(line: 643, column: 17, scope: !4629)
!4648 = !DILocation(line: 643, column: 2, scope: !4629)
!4649 = !DILocation(line: 644, column: 1, scope: !4629)
!4650 = distinct !DISubprogram(name: "txt_insert_buf", scope: !3, file: !3, line: 1471, type: !4630, scopeLine: 1472, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!4651 = !DILocalVariable(name: "text", arg: 1, scope: !4650, file: !3, line: 1471, type: !139)
!4652 = !DILocation(line: 1471, column: 27, scope: !4650)
!4653 = !DILocalVariable(name: "in_buffer", arg: 2, scope: !4650, file: !3, line: 1471, type: !304)
!4654 = !DILocation(line: 1471, column: 45, scope: !4650)
!4655 = !DILocalVariable(name: "l", scope: !4650, file: !3, line: 1473, type: !119)
!4656 = !DILocation(line: 1473, column: 6, scope: !4650)
!4657 = !DILocalVariable(name: "u", scope: !4650, file: !3, line: 1473, type: !119)
!4658 = !DILocation(line: 1473, column: 13, scope: !4650)
!4659 = !DILocalVariable(name: "len", scope: !4650, file: !3, line: 1473, type: !119)
!4660 = !DILocation(line: 1473, column: 16, scope: !4650)
!4661 = !DILocalVariable(name: "i", scope: !4650, file: !3, line: 1474, type: !753)
!4662 = !DILocation(line: 1474, column: 9, scope: !4650)
!4663 = !DILocalVariable(name: "j", scope: !4650, file: !3, line: 1474, type: !753)
!4664 = !DILocation(line: 1474, column: 16, scope: !4650)
!4665 = !DILocalVariable(name: "add", scope: !4650, file: !3, line: 1475, type: !124)
!4666 = !DILocation(line: 1475, column: 12, scope: !4650)
!4667 = !DILocalVariable(name: "buffer", scope: !4650, file: !3, line: 1476, type: !133)
!4668 = !DILocation(line: 1476, column: 8, scope: !4650)
!4669 = !DILocation(line: 1478, column: 7, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4650, file: !3, line: 1478, column: 6)
!4671 = !DILocation(line: 1478, column: 6, scope: !4650)
!4672 = !DILocation(line: 1478, column: 18, scope: !4670)
!4673 = !DILocation(line: 1480, column: 17, scope: !4650)
!4674 = !DILocation(line: 1480, column: 2, scope: !4650)
!4675 = !DILocation(line: 1482, column: 15, scope: !4650)
!4676 = !DILocation(line: 1482, column: 8, scope: !4650)
!4677 = !DILocation(line: 1482, column: 6, scope: !4650)
!4678 = !DILocation(line: 1483, column: 23, scope: !4650)
!4679 = !DILocation(line: 1483, column: 34, scope: !4650)
!4680 = !DILocation(line: 1483, column: 11, scope: !4650)
!4681 = !DILocation(line: 1483, column: 9, scope: !4650)
!4682 = !DILocation(line: 1484, column: 9, scope: !4650)
!4683 = !DILocation(line: 1484, column: 6, scope: !4650)
!4684 = !DILocation(line: 1486, column: 7, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4650, file: !3, line: 1486, column: 6)
!4686 = !DILocation(line: 1486, column: 6, scope: !4650)
!4687 = !DILocation(line: 1486, column: 37, scope: !4685)
!4688 = !DILocation(line: 1486, column: 56, scope: !4685)
!4689 = !DILocation(line: 1486, column: 16, scope: !4685)
!4690 = !DILocation(line: 1488, column: 6, scope: !4650)
!4691 = !DILocation(line: 1488, column: 4, scope: !4650)
!4692 = !DILocation(line: 1489, column: 10, scope: !4650)
!4693 = !DILocation(line: 1492, column: 2, scope: !4650)
!4694 = !DILocation(line: 1492, column: 9, scope: !4650)
!4695 = !DILocation(line: 1492, column: 16, scope: !4650)
!4696 = !DILocation(line: 1492, column: 19, scope: !4650)
!4697 = !DILocation(line: 1492, column: 22, scope: !4650)
!4698 = !DILocation(line: 1492, column: 29, scope: !4650)
!4699 = !DILocation(line: 1492, column: 32, scope: !4650)
!4700 = !DILocation(line: 0, scope: !4650)
!4701 = !DILocation(line: 1493, column: 20, scope: !4650)
!4702 = !DILocation(line: 1493, column: 55, scope: !4650)
!4703 = !DILocation(line: 1493, column: 26, scope: !4650)
!4704 = !DILocation(line: 1493, column: 3, scope: !4650)
!4705 = distinct !{!4705, !4693, !4706}
!4706 = !DILocation(line: 1493, column: 66, scope: !4650)
!4707 = !DILocation(line: 1495, column: 6, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4650, file: !3, line: 1495, column: 6)
!4709 = !DILocation(line: 1495, column: 13, scope: !4708)
!4710 = !DILocation(line: 1495, column: 16, scope: !4708)
!4711 = !DILocation(line: 1495, column: 6, scope: !4650)
!4712 = !DILocation(line: 1495, column: 43, scope: !4708)
!4713 = !DILocation(line: 1495, column: 25, scope: !4708)
!4714 = !DILocation(line: 1496, column: 19, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 1496, column: 7)
!4716 = !DILocation(line: 1496, column: 17, scope: !4715)
!4717 = !DILocation(line: 1496, column: 22, scope: !4715)
!4718 = !DILocation(line: 1496, column: 32, scope: !4715)
!4719 = !DILocation(line: 1496, column: 41, scope: !4715)
!4720 = !DILocation(line: 1497, column: 3, scope: !4650)
!4721 = !DILocation(line: 1499, column: 2, scope: !4650)
!4722 = !DILocation(line: 1499, column: 9, scope: !4650)
!4723 = !DILocation(line: 1499, column: 13, scope: !4650)
!4724 = !DILocation(line: 1499, column: 11, scope: !4650)
!4725 = !DILocation(line: 1500, column: 5, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4650, file: !3, line: 1499, column: 18)
!4727 = !DILocation(line: 1502, column: 3, scope: !4726)
!4728 = !DILocation(line: 1502, column: 10, scope: !4726)
!4729 = !DILocation(line: 1502, column: 17, scope: !4726)
!4730 = !DILocation(line: 1502, column: 20, scope: !4726)
!4731 = !DILocation(line: 1502, column: 23, scope: !4726)
!4732 = !DILocation(line: 1502, column: 30, scope: !4726)
!4733 = !DILocation(line: 1502, column: 33, scope: !4726)
!4734 = !DILocation(line: 0, scope: !4726)
!4735 = !DILocation(line: 1503, column: 5, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4726, file: !3, line: 1502, column: 42)
!4737 = !DILocation(line: 1503, column: 10, scope: !4736)
!4738 = distinct !{!4738, !4727, !4739}
!4739 = !DILocation(line: 1504, column: 3, scope: !4726)
!4740 = !DILocation(line: 1506, column: 7, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4726, file: !3, line: 1506, column: 7)
!4742 = !DILocation(line: 1506, column: 14, scope: !4741)
!4743 = !DILocation(line: 1506, column: 17, scope: !4741)
!4744 = !DILocation(line: 1506, column: 7, scope: !4726)
!4745 = !DILocation(line: 1507, column: 24, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 1506, column: 26)
!4747 = !DILocation(line: 1507, column: 34, scope: !4746)
!4748 = !DILocation(line: 1507, column: 38, scope: !4746)
!4749 = !DILocation(line: 1507, column: 36, scope: !4746)
!4750 = !DILocation(line: 1507, column: 31, scope: !4746)
!4751 = !DILocation(line: 1507, column: 42, scope: !4746)
!4752 = !DILocation(line: 1507, column: 10, scope: !4746)
!4753 = !DILocation(line: 1507, column: 8, scope: !4746)
!4754 = !DILocation(line: 1508, column: 26, scope: !4746)
!4755 = !DILocation(line: 1508, column: 32, scope: !4746)
!4756 = !DILocation(line: 1508, column: 39, scope: !4746)
!4757 = !DILocation(line: 1508, column: 45, scope: !4746)
!4758 = !DILocation(line: 1508, column: 51, scope: !4746)
!4759 = !DILocation(line: 1508, column: 4, scope: !4746)
!4760 = !DILocation(line: 1509, column: 5, scope: !4746)
!4761 = !DILocation(line: 1510, column: 3, scope: !4746)
!4762 = !DILocation(line: 1512, column: 13, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4764, file: !3, line: 1512, column: 4)
!4764 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 1511, column: 8)
!4765 = !DILocation(line: 1512, column: 17, scope: !4763)
!4766 = !DILocation(line: 1512, column: 15, scope: !4763)
!4767 = !DILocation(line: 1512, column: 11, scope: !4763)
!4768 = !DILocation(line: 1512, column: 9, scope: !4763)
!4769 = !DILocation(line: 1512, column: 20, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4763, file: !3, line: 1512, column: 4)
!4771 = !DILocation(line: 1512, column: 24, scope: !4770)
!4772 = !DILocation(line: 1512, column: 22, scope: !4770)
!4773 = !DILocation(line: 1512, column: 26, scope: !4770)
!4774 = !DILocation(line: 1512, column: 29, scope: !4770)
!4775 = !DILocation(line: 1512, column: 33, scope: !4770)
!4776 = !DILocation(line: 1512, column: 31, scope: !4770)
!4777 = !DILocation(line: 0, scope: !4770)
!4778 = !DILocation(line: 1512, column: 4, scope: !4763)
!4779 = !DILocation(line: 1513, column: 22, scope: !4770)
!4780 = !DILocation(line: 1513, column: 57, scope: !4770)
!4781 = !DILocation(line: 1513, column: 28, scope: !4770)
!4782 = !DILocation(line: 1513, column: 5, scope: !4770)
!4783 = !DILocation(line: 1512, column: 4, scope: !4770)
!4784 = distinct !{!4784, !4778, !4785}
!4785 = !DILocation(line: 1513, column: 68, scope: !4763)
!4786 = !DILocation(line: 1514, column: 4, scope: !4764)
!4787 = distinct !{!4787, !4721, !4788}
!4788 = !DILocation(line: 1516, column: 2, scope: !4650)
!4789 = !DILocation(line: 1518, column: 2, scope: !4650)
!4790 = !DILocation(line: 1518, column: 12, scope: !4650)
!4791 = !DILocation(line: 1520, column: 12, scope: !4650)
!4792 = !DILocation(line: 1520, column: 10, scope: !4650)
!4793 = !DILocation(line: 1521, column: 1, scope: !4650)
!4794 = distinct !DISubprogram(name: "txt_move_eof", scope: !3, file: !3, line: 1100, type: !4795, scopeLine: 1101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!4795 = !DISubroutineType(types: !4796)
!4796 = !{null, !139, !912}
!4797 = !DILocalVariable(name: "text", arg: 1, scope: !4794, file: !3, line: 1100, type: !139)
!4798 = !DILocation(line: 1100, column: 25, scope: !4794)
!4799 = !DILocalVariable(name: "sel", arg: 2, scope: !4794, file: !3, line: 1100, type: !912)
!4800 = !DILocation(line: 1100, column: 42, scope: !4794)
!4801 = !DILocalVariable(name: "linep", scope: !4794, file: !3, line: 1102, type: !295)
!4802 = !DILocation(line: 1102, column: 13, scope: !4794)
!4803 = !DILocalVariable(name: "charp", scope: !4794, file: !3, line: 1103, type: !4804)
!4804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64)
!4805 = !DILocation(line: 1103, column: 7, scope: !4794)
!4806 = !DILocation(line: 1105, column: 6, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4794, file: !3, line: 1105, column: 6)
!4808 = !DILocation(line: 1105, column: 6, scope: !4794)
!4809 = !DILocation(line: 1105, column: 24, scope: !4807)
!4810 = !DILocation(line: 1105, column: 11, scope: !4807)
!4811 = !DILocation(line: 1106, column: 20, scope: !4807)
!4812 = !DILocation(line: 1106, column: 7, scope: !4807)
!4813 = !DILocation(line: 1107, column: 8, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4794, file: !3, line: 1107, column: 6)
!4815 = !DILocation(line: 1107, column: 7, scope: !4814)
!4816 = !DILocation(line: 1107, column: 6, scope: !4794)
!4817 = !DILocation(line: 1107, column: 15, scope: !4814)
!4818 = !DILocation(line: 1109, column: 11, scope: !4794)
!4819 = !DILocation(line: 1109, column: 17, scope: !4794)
!4820 = !DILocation(line: 1109, column: 23, scope: !4794)
!4821 = !DILocation(line: 1109, column: 3, scope: !4794)
!4822 = !DILocation(line: 1109, column: 9, scope: !4794)
!4823 = !DILocation(line: 1110, column: 13, scope: !4794)
!4824 = !DILocation(line: 1110, column: 12, scope: !4794)
!4825 = !DILocation(line: 1110, column: 21, scope: !4794)
!4826 = !DILocation(line: 1110, column: 3, scope: !4794)
!4827 = !DILocation(line: 1110, column: 9, scope: !4794)
!4828 = !DILocation(line: 1112, column: 7, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4794, file: !3, line: 1112, column: 6)
!4830 = !DILocation(line: 1112, column: 6, scope: !4794)
!4831 = !DILocation(line: 1112, column: 24, scope: !4829)
!4832 = !DILocation(line: 1112, column: 12, scope: !4829)
!4833 = !DILocation(line: 1113, column: 1, scope: !4794)
!4834 = distinct !DISubprogram(name: "BKE_text_file_modified_check", scope: !3, file: !3, line: 652, type: !698, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!4835 = !DILocalVariable(name: "text", arg: 1, scope: !4834, file: !3, line: 652, type: !139)
!4836 = !DILocation(line: 652, column: 40, scope: !4834)
!4837 = !DILocalVariable(name: "st", scope: !4834, file: !3, line: 654, type: !771)
!4838 = !DILocation(line: 654, column: 13, scope: !4834)
!4839 = !DILocalVariable(name: "result", scope: !4834, file: !3, line: 655, type: !119)
!4840 = !DILocation(line: 655, column: 6, scope: !4834)
!4841 = !DILocalVariable(name: "file", scope: !4834, file: !3, line: 656, type: !163)
!4842 = !DILocation(line: 656, column: 7, scope: !4834)
!4843 = !DILocation(line: 658, column: 7, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4834, file: !3, line: 658, column: 6)
!4845 = !DILocation(line: 658, column: 13, scope: !4844)
!4846 = !DILocation(line: 658, column: 6, scope: !4834)
!4847 = !DILocation(line: 659, column: 3, scope: !4844)
!4848 = !DILocation(line: 661, column: 14, scope: !4834)
!4849 = !DILocation(line: 661, column: 20, scope: !4834)
!4850 = !DILocation(line: 661, column: 26, scope: !4834)
!4851 = !DILocation(line: 661, column: 2, scope: !4834)
!4852 = !DILocation(line: 662, column: 15, scope: !4834)
!4853 = !DILocation(line: 662, column: 23, scope: !4834)
!4854 = !DILocation(line: 662, column: 29, scope: !4834)
!4855 = !DILocation(line: 662, column: 21, scope: !4834)
!4856 = !DILocation(line: 662, column: 2, scope: !4834)
!4857 = !DILocation(line: 664, column: 18, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4834, file: !3, line: 664, column: 6)
!4859 = !DILocation(line: 664, column: 7, scope: !4858)
!4860 = !DILocation(line: 664, column: 6, scope: !4834)
!4861 = !DILocation(line: 665, column: 3, scope: !4858)
!4862 = !DILocation(line: 667, column: 20, scope: !4834)
!4863 = !DILocation(line: 667, column: 11, scope: !4834)
!4864 = !DILocation(line: 667, column: 9, scope: !4834)
!4865 = !DILocation(line: 669, column: 6, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4834, file: !3, line: 669, column: 6)
!4867 = !DILocation(line: 669, column: 13, scope: !4866)
!4868 = !DILocation(line: 669, column: 6, scope: !4834)
!4869 = !DILocation(line: 670, column: 3, scope: !4866)
!4870 = !DILocation(line: 675, column: 7, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4834, file: !3, line: 675, column: 6)
!4872 = !DILocation(line: 675, column: 6, scope: !4834)
!4873 = !DILocation(line: 677, column: 3, scope: !4871)
!4874 = !DILocation(line: 679, column: 9, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4834, file: !3, line: 679, column: 6)
!4876 = !DILocation(line: 679, column: 6, scope: !4875)
!4877 = !DILocation(line: 679, column: 20, scope: !4875)
!4878 = !DILocation(line: 679, column: 26, scope: !4875)
!4879 = !DILocation(line: 679, column: 18, scope: !4875)
!4880 = !DILocation(line: 679, column: 6, scope: !4834)
!4881 = !DILocation(line: 680, column: 3, scope: !4875)
!4882 = !DILocation(line: 682, column: 2, scope: !4834)
!4883 = !DILocation(line: 683, column: 1, scope: !4834)
!4884 = distinct !DISubprogram(name: "BKE_text_file_modified_ignore", scope: !3, file: !3, line: 685, type: !332, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!4885 = !DILocalVariable(name: "text", arg: 1, scope: !4884, file: !3, line: 685, type: !139)
!4886 = !DILocation(line: 685, column: 42, scope: !4884)
!4887 = !DILocalVariable(name: "st", scope: !4884, file: !3, line: 687, type: !771)
!4888 = !DILocation(line: 687, column: 13, scope: !4884)
!4889 = !DILocalVariable(name: "result", scope: !4884, file: !3, line: 688, type: !119)
!4890 = !DILocation(line: 688, column: 6, scope: !4884)
!4891 = !DILocalVariable(name: "file", scope: !4884, file: !3, line: 689, type: !163)
!4892 = !DILocation(line: 689, column: 7, scope: !4884)
!4893 = !DILocation(line: 691, column: 7, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4884, file: !3, line: 691, column: 6)
!4895 = !DILocation(line: 691, column: 13, scope: !4894)
!4896 = !DILocation(line: 691, column: 6, scope: !4884)
!4897 = !DILocation(line: 691, column: 19, scope: !4894)
!4898 = !DILocation(line: 693, column: 14, scope: !4884)
!4899 = !DILocation(line: 693, column: 20, scope: !4884)
!4900 = !DILocation(line: 693, column: 26, scope: !4884)
!4901 = !DILocation(line: 693, column: 2, scope: !4884)
!4902 = !DILocation(line: 694, column: 15, scope: !4884)
!4903 = !DILocation(line: 694, column: 23, scope: !4884)
!4904 = !DILocation(line: 694, column: 29, scope: !4884)
!4905 = !DILocation(line: 694, column: 21, scope: !4884)
!4906 = !DILocation(line: 694, column: 2, scope: !4884)
!4907 = !DILocation(line: 696, column: 18, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4884, file: !3, line: 696, column: 6)
!4909 = !DILocation(line: 696, column: 7, scope: !4908)
!4910 = !DILocation(line: 696, column: 6, scope: !4884)
!4911 = !DILocation(line: 696, column: 25, scope: !4908)
!4912 = !DILocation(line: 698, column: 20, scope: !4884)
!4913 = !DILocation(line: 698, column: 11, scope: !4884)
!4914 = !DILocation(line: 698, column: 9, scope: !4884)
!4915 = !DILocation(line: 703, column: 6, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4884, file: !3, line: 703, column: 6)
!4917 = !DILocation(line: 703, column: 13, scope: !4916)
!4918 = !DILocation(line: 703, column: 19, scope: !4916)
!4919 = !DILocation(line: 703, column: 23, scope: !4916)
!4920 = !DILocation(line: 703, column: 6, scope: !4884)
!4921 = !DILocation(line: 705, column: 3, scope: !4916)
!4922 = !DILocation(line: 707, column: 19, scope: !4884)
!4923 = !DILocation(line: 707, column: 16, scope: !4884)
!4924 = !DILocation(line: 707, column: 2, scope: !4884)
!4925 = !DILocation(line: 707, column: 8, scope: !4884)
!4926 = !DILocation(line: 707, column: 14, scope: !4884)
!4927 = !DILocation(line: 708, column: 1, scope: !4884)
!4928 = distinct !DISubprogram(name: "txt_clean_text", scope: !3, file: !3, line: 758, type: !332, scopeLine: 759, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!4929 = !DILocalVariable(name: "text", arg: 1, scope: !4928, file: !3, line: 758, type: !139)
!4930 = !DILocation(line: 758, column: 27, scope: !4928)
!4931 = !DILocalVariable(name: "top", scope: !4928, file: !3, line: 760, type: !295)
!4932 = !DILocation(line: 760, column: 13, scope: !4928)
!4933 = !DILocalVariable(name: "bot", scope: !4928, file: !3, line: 760, type: !295)
!4934 = !DILocation(line: 760, column: 20, scope: !4928)
!4935 = !DILocation(line: 762, column: 7, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4928, file: !3, line: 762, column: 6)
!4937 = !DILocation(line: 762, column: 13, scope: !4936)
!4938 = !DILocation(line: 762, column: 19, scope: !4936)
!4939 = !DILocation(line: 762, column: 6, scope: !4928)
!4940 = !DILocation(line: 763, column: 7, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 763, column: 7)
!4942 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 762, column: 26)
!4943 = !DILocation(line: 763, column: 13, scope: !4941)
!4944 = !DILocation(line: 763, column: 19, scope: !4941)
!4945 = !DILocation(line: 763, column: 7, scope: !4942)
!4946 = !DILocation(line: 763, column: 45, scope: !4941)
!4947 = !DILocation(line: 763, column: 51, scope: !4941)
!4948 = !DILocation(line: 763, column: 57, scope: !4941)
!4949 = !DILocation(line: 763, column: 25, scope: !4941)
!4950 = !DILocation(line: 763, column: 31, scope: !4941)
!4951 = !DILocation(line: 763, column: 37, scope: !4941)
!4952 = !DILocation(line: 763, column: 43, scope: !4941)
!4953 = !DILocation(line: 764, column: 47, scope: !4941)
!4954 = !DILocation(line: 764, column: 28, scope: !4941)
!4955 = !DILocation(line: 764, column: 34, scope: !4941)
!4956 = !DILocation(line: 764, column: 40, scope: !4941)
!4957 = !DILocation(line: 764, column: 45, scope: !4941)
!4958 = !DILocation(line: 764, column: 8, scope: !4941)
!4959 = !DILocation(line: 764, column: 14, scope: !4941)
!4960 = !DILocation(line: 764, column: 20, scope: !4941)
!4961 = !DILocation(line: 764, column: 26, scope: !4941)
!4962 = !DILocation(line: 765, column: 2, scope: !4942)
!4963 = !DILocation(line: 767, column: 7, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4928, file: !3, line: 767, column: 6)
!4965 = !DILocation(line: 767, column: 13, scope: !4964)
!4966 = !DILocation(line: 767, column: 19, scope: !4964)
!4967 = !DILocation(line: 767, column: 6, scope: !4928)
!4968 = !DILocation(line: 767, column: 44, scope: !4964)
!4969 = !DILocation(line: 767, column: 50, scope: !4964)
!4970 = !DILocation(line: 767, column: 56, scope: !4964)
!4971 = !DILocation(line: 767, column: 25, scope: !4964)
!4972 = !DILocation(line: 767, column: 31, scope: !4964)
!4973 = !DILocation(line: 767, column: 37, scope: !4964)
!4974 = !DILocation(line: 767, column: 42, scope: !4964)
!4975 = !DILocation(line: 769, column: 23, scope: !4928)
!4976 = !DILocation(line: 769, column: 29, scope: !4928)
!4977 = !DILocation(line: 769, column: 35, scope: !4928)
!4978 = !DILocation(line: 769, column: 8, scope: !4928)
!4979 = !DILocation(line: 769, column: 6, scope: !4928)
!4980 = !DILocation(line: 770, column: 23, scope: !4928)
!4981 = !DILocation(line: 770, column: 29, scope: !4928)
!4982 = !DILocation(line: 770, column: 35, scope: !4928)
!4983 = !DILocation(line: 770, column: 8, scope: !4928)
!4984 = !DILocation(line: 770, column: 6, scope: !4928)
!4985 = !DILocation(line: 772, column: 2, scope: !4928)
!4986 = !DILocation(line: 772, column: 11, scope: !4928)
!4987 = !DILocation(line: 772, column: 10, scope: !4928)
!4988 = !DILocation(line: 772, column: 17, scope: !4928)
!4989 = !DILocation(line: 772, column: 32, scope: !4928)
!4990 = !DILocation(line: 772, column: 31, scope: !4928)
!4991 = !DILocation(line: 772, column: 38, scope: !4928)
!4992 = !DILocation(line: 772, column: 24, scope: !4928)
!4993 = !DILocation(line: 772, column: 28, scope: !4928)
!4994 = distinct !{!4994, !4985, !4991}
!4995 = !DILocation(line: 773, column: 2, scope: !4928)
!4996 = !DILocation(line: 773, column: 11, scope: !4928)
!4997 = !DILocation(line: 773, column: 10, scope: !4928)
!4998 = !DILocation(line: 773, column: 17, scope: !4928)
!4999 = !DILocation(line: 773, column: 32, scope: !4928)
!5000 = !DILocation(line: 773, column: 31, scope: !4928)
!5001 = !DILocation(line: 773, column: 38, scope: !4928)
!5002 = !DILocation(line: 773, column: 24, scope: !4928)
!5003 = !DILocation(line: 773, column: 28, scope: !4928)
!5004 = distinct !{!5004, !4995, !5001}
!5005 = !DILocation(line: 775, column: 7, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4928, file: !3, line: 775, column: 6)
!5007 = !DILocation(line: 775, column: 13, scope: !5006)
!5008 = !DILocation(line: 775, column: 6, scope: !4928)
!5009 = !DILocation(line: 776, column: 7, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5011, file: !3, line: 776, column: 7)
!5011 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 775, column: 19)
!5012 = !DILocation(line: 776, column: 13, scope: !5010)
!5013 = !DILocation(line: 776, column: 7, scope: !5011)
!5014 = !DILocation(line: 776, column: 32, scope: !5010)
!5015 = !DILocation(line: 776, column: 38, scope: !5010)
!5016 = !DILocation(line: 776, column: 19, scope: !5010)
!5017 = !DILocation(line: 776, column: 25, scope: !5010)
!5018 = !DILocation(line: 776, column: 30, scope: !5010)
!5019 = !DILocation(line: 777, column: 21, scope: !5010)
!5020 = !DILocation(line: 777, column: 27, scope: !5010)
!5021 = !DILocation(line: 777, column: 33, scope: !5010)
!5022 = !DILocation(line: 777, column: 8, scope: !5010)
!5023 = !DILocation(line: 777, column: 14, scope: !5010)
!5024 = !DILocation(line: 777, column: 19, scope: !5010)
!5025 = !DILocation(line: 778, column: 3, scope: !5011)
!5026 = !DILocation(line: 778, column: 9, scope: !5011)
!5027 = !DILocation(line: 778, column: 14, scope: !5011)
!5028 = !DILocation(line: 779, column: 2, scope: !5011)
!5029 = !DILocation(line: 781, column: 7, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !4928, file: !3, line: 781, column: 6)
!5031 = !DILocation(line: 781, column: 13, scope: !5030)
!5032 = !DILocation(line: 781, column: 6, scope: !4928)
!5033 = !DILocation(line: 782, column: 16, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5030, file: !3, line: 781, column: 19)
!5035 = !DILocation(line: 782, column: 22, scope: !5034)
!5036 = !DILocation(line: 782, column: 3, scope: !5034)
!5037 = !DILocation(line: 782, column: 9, scope: !5034)
!5038 = !DILocation(line: 782, column: 14, scope: !5034)
!5039 = !DILocation(line: 783, column: 3, scope: !5034)
!5040 = !DILocation(line: 783, column: 9, scope: !5034)
!5041 = !DILocation(line: 783, column: 14, scope: !5034)
!5042 = !DILocation(line: 784, column: 2, scope: !5034)
!5043 = !DILocation(line: 785, column: 1, scope: !4928)
!5044 = distinct !DISubprogram(name: "txt_new_line", scope: !3, file: !3, line: 724, type: !5045, scopeLine: 725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!5045 = !DISubroutineType(types: !5046)
!5046 = !{!124, !304}
!5047 = !DILocalVariable(name: "str", arg: 1, scope: !5044, file: !3, line: 724, type: !304)
!5048 = !DILocation(line: 724, column: 43, scope: !5044)
!5049 = !DILocalVariable(name: "tmp", scope: !5044, file: !3, line: 726, type: !124)
!5050 = !DILocation(line: 726, column: 12, scope: !5044)
!5051 = !DILocation(line: 728, column: 7, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 728, column: 6)
!5053 = !DILocation(line: 728, column: 6, scope: !5044)
!5054 = !DILocation(line: 728, column: 16, scope: !5052)
!5055 = !DILocation(line: 728, column: 12, scope: !5052)
!5056 = !DILocation(line: 730, column: 21, scope: !5044)
!5057 = !DILocation(line: 730, column: 8, scope: !5044)
!5058 = !DILocation(line: 730, column: 6, scope: !5044)
!5059 = !DILocation(line: 731, column: 14, scope: !5044)
!5060 = !DILocation(line: 731, column: 33, scope: !5044)
!5061 = !DILocation(line: 731, column: 26, scope: !5044)
!5062 = !DILocation(line: 731, column: 38, scope: !5044)
!5063 = !DILocation(line: 731, column: 2, scope: !5044)
!5064 = !DILocation(line: 731, column: 7, scope: !5044)
!5065 = !DILocation(line: 731, column: 12, scope: !5044)
!5066 = !DILocation(line: 732, column: 2, scope: !5044)
!5067 = !DILocation(line: 732, column: 7, scope: !5044)
!5068 = !DILocation(line: 732, column: 14, scope: !5044)
!5069 = !DILocation(line: 734, column: 9, scope: !5044)
!5070 = !DILocation(line: 734, column: 14, scope: !5044)
!5071 = !DILocation(line: 734, column: 20, scope: !5044)
!5072 = !DILocation(line: 734, column: 2, scope: !5044)
!5073 = !DILocation(line: 736, column: 20, scope: !5044)
!5074 = !DILocation(line: 736, column: 13, scope: !5044)
!5075 = !DILocation(line: 736, column: 2, scope: !5044)
!5076 = !DILocation(line: 736, column: 7, scope: !5044)
!5077 = !DILocation(line: 736, column: 11, scope: !5044)
!5078 = !DILocation(line: 737, column: 14, scope: !5044)
!5079 = !DILocation(line: 737, column: 19, scope: !5044)
!5080 = !DILocation(line: 737, column: 24, scope: !5044)
!5081 = !DILocation(line: 737, column: 2, scope: !5044)
!5082 = !DILocation(line: 737, column: 7, scope: !5044)
!5083 = !DILocation(line: 737, column: 12, scope: !5044)
!5084 = !DILocation(line: 739, column: 9, scope: !5044)
!5085 = !DILocation(line: 739, column: 2, scope: !5044)
!5086 = distinct !DISubprogram(name: "txt_get_span", scope: !3, file: !3, line: 787, type: !5087, scopeLine: 788, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!5087 = !DISubroutineType(types: !5088)
!5088 = !{!119, !124, !124}
!5089 = !DILocalVariable(name: "from", arg: 1, scope: !5086, file: !3, line: 787, type: !124)
!5090 = !DILocation(line: 787, column: 28, scope: !5086)
!5091 = !DILocalVariable(name: "to", arg: 2, scope: !5086, file: !3, line: 787, type: !124)
!5092 = !DILocation(line: 787, column: 44, scope: !5086)
!5093 = !DILocalVariable(name: "ret", scope: !5086, file: !3, line: 789, type: !119)
!5094 = !DILocation(line: 789, column: 6, scope: !5086)
!5095 = !DILocalVariable(name: "tmp", scope: !5086, file: !3, line: 790, type: !124)
!5096 = !DILocation(line: 790, column: 12, scope: !5086)
!5097 = !DILocation(line: 790, column: 18, scope: !5086)
!5098 = !DILocation(line: 792, column: 7, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5086, file: !3, line: 792, column: 6)
!5100 = !DILocation(line: 792, column: 10, scope: !5099)
!5101 = !DILocation(line: 792, column: 14, scope: !5099)
!5102 = !DILocation(line: 792, column: 6, scope: !5086)
!5103 = !DILocation(line: 792, column: 20, scope: !5099)
!5104 = !DILocation(line: 793, column: 6, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5086, file: !3, line: 793, column: 6)
!5106 = !DILocation(line: 793, column: 14, scope: !5105)
!5107 = !DILocation(line: 793, column: 11, scope: !5105)
!5108 = !DILocation(line: 793, column: 6, scope: !5086)
!5109 = !DILocation(line: 793, column: 18, scope: !5105)
!5110 = !DILocation(line: 796, column: 2, scope: !5086)
!5111 = !DILocation(line: 796, column: 9, scope: !5086)
!5112 = !DILocation(line: 797, column: 7, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 797, column: 7)
!5114 = distinct !DILexicalBlock(scope: !5086, file: !3, line: 796, column: 14)
!5115 = !DILocation(line: 797, column: 14, scope: !5113)
!5116 = !DILocation(line: 797, column: 11, scope: !5113)
!5117 = !DILocation(line: 797, column: 7, scope: !5114)
!5118 = !DILocation(line: 797, column: 25, scope: !5113)
!5119 = !DILocation(line: 797, column: 18, scope: !5113)
!5120 = !DILocation(line: 798, column: 6, scope: !5114)
!5121 = !DILocation(line: 799, column: 9, scope: !5114)
!5122 = !DILocation(line: 799, column: 14, scope: !5114)
!5123 = !DILocation(line: 799, column: 7, scope: !5114)
!5124 = distinct !{!5124, !5110, !5125}
!5125 = !DILocation(line: 800, column: 2, scope: !5086)
!5126 = !DILocation(line: 803, column: 7, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5086, file: !3, line: 803, column: 6)
!5128 = !DILocation(line: 803, column: 6, scope: !5086)
!5129 = !DILocation(line: 804, column: 9, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5127, file: !3, line: 803, column: 12)
!5131 = !DILocation(line: 804, column: 7, scope: !5130)
!5132 = !DILocation(line: 805, column: 7, scope: !5130)
!5133 = !DILocation(line: 806, column: 3, scope: !5130)
!5134 = !DILocation(line: 806, column: 10, scope: !5130)
!5135 = !DILocation(line: 807, column: 8, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 807, column: 8)
!5137 = distinct !DILexicalBlock(scope: !5130, file: !3, line: 806, column: 15)
!5138 = !DILocation(line: 807, column: 15, scope: !5136)
!5139 = !DILocation(line: 807, column: 12, scope: !5136)
!5140 = !DILocation(line: 807, column: 8, scope: !5137)
!5141 = !DILocation(line: 807, column: 19, scope: !5136)
!5142 = !DILocation(line: 808, column: 7, scope: !5137)
!5143 = !DILocation(line: 809, column: 10, scope: !5137)
!5144 = !DILocation(line: 809, column: 15, scope: !5137)
!5145 = !DILocation(line: 809, column: 8, scope: !5137)
!5146 = distinct !{!5146, !5133, !5147}
!5147 = !DILocation(line: 810, column: 3, scope: !5130)
!5148 = !DILocation(line: 811, column: 8, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5130, file: !3, line: 811, column: 7)
!5150 = !DILocation(line: 811, column: 7, scope: !5130)
!5151 = !DILocation(line: 811, column: 17, scope: !5149)
!5152 = !DILocation(line: 811, column: 13, scope: !5149)
!5153 = !DILocation(line: 812, column: 2, scope: !5130)
!5154 = !DILocation(line: 814, column: 9, scope: !5086)
!5155 = !DILocation(line: 814, column: 2, scope: !5086)
!5156 = !DILocation(line: 815, column: 1, scope: !5086)
!5157 = distinct !DISubprogram(name: "txt_cursor_is_line_start", scope: !3, file: !3, line: 839, type: !5158, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!5158 = !DISubroutineType(types: !5159)
!5159 = !{!313, !139}
!5160 = !DILocalVariable(name: "text", arg: 1, scope: !5157, file: !3, line: 839, type: !139)
!5161 = !DILocation(line: 839, column: 37, scope: !5157)
!5162 = !DILocation(line: 841, column: 10, scope: !5157)
!5163 = !DILocation(line: 841, column: 16, scope: !5157)
!5164 = !DILocation(line: 841, column: 21, scope: !5157)
!5165 = !DILocation(line: 841, column: 9, scope: !5157)
!5166 = !DILocation(line: 841, column: 2, scope: !5157)
!5167 = distinct !DISubprogram(name: "txt_cursor_is_line_end", scope: !3, file: !3, line: 844, type: !5158, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!5168 = !DILocalVariable(name: "text", arg: 1, scope: !5167, file: !3, line: 844, type: !139)
!5169 = !DILocation(line: 844, column: 35, scope: !5167)
!5170 = !DILocation(line: 846, column: 10, scope: !5167)
!5171 = !DILocation(line: 846, column: 16, scope: !5167)
!5172 = !DILocation(line: 846, column: 24, scope: !5167)
!5173 = !DILocation(line: 846, column: 30, scope: !5167)
!5174 = !DILocation(line: 846, column: 36, scope: !5167)
!5175 = !DILocation(line: 846, column: 21, scope: !5167)
!5176 = !DILocation(line: 846, column: 9, scope: !5167)
!5177 = !DILocation(line: 846, column: 2, scope: !5167)
!5178 = distinct !DISubprogram(name: "txt_utf8_offset_to_index", scope: !3, file: !3, line: 853, type: !5179, scopeLine: 854, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!5179 = !DISubroutineType(types: !5180)
!5180 = !{!119, !304, !119}
!5181 = !DILocalVariable(name: "str", arg: 1, scope: !5178, file: !3, line: 853, type: !304)
!5182 = !DILocation(line: 853, column: 42, scope: !5178)
!5183 = !DILocalVariable(name: "offset", arg: 2, scope: !5178, file: !3, line: 853, type: !119)
!5184 = !DILocation(line: 853, column: 51, scope: !5178)
!5185 = !DILocalVariable(name: "index", scope: !5178, file: !3, line: 855, type: !119)
!5186 = !DILocation(line: 855, column: 6, scope: !5178)
!5187 = !DILocalVariable(name: "pos", scope: !5178, file: !3, line: 855, type: !119)
!5188 = !DILocation(line: 855, column: 17, scope: !5178)
!5189 = !DILocation(line: 856, column: 2, scope: !5178)
!5190 = !DILocation(line: 856, column: 9, scope: !5178)
!5191 = !DILocation(line: 856, column: 16, scope: !5178)
!5192 = !DILocation(line: 856, column: 13, scope: !5178)
!5193 = !DILocation(line: 857, column: 28, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5178, file: !3, line: 856, column: 24)
!5195 = !DILocation(line: 857, column: 34, scope: !5194)
!5196 = !DILocation(line: 857, column: 32, scope: !5194)
!5197 = !DILocation(line: 857, column: 10, scope: !5194)
!5198 = !DILocation(line: 857, column: 7, scope: !5194)
!5199 = !DILocation(line: 858, column: 8, scope: !5194)
!5200 = distinct !{!5200, !5189, !5201}
!5201 = !DILocation(line: 859, column: 2, scope: !5178)
!5202 = !DILocation(line: 860, column: 9, scope: !5178)
!5203 = !DILocation(line: 860, column: 2, scope: !5178)
!5204 = distinct !DISubprogram(name: "txt_utf8_index_to_offset", scope: !3, file: !3, line: 863, type: !5179, scopeLine: 864, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!5205 = !DILocalVariable(name: "str", arg: 1, scope: !5204, file: !3, line: 863, type: !304)
!5206 = !DILocation(line: 863, column: 42, scope: !5204)
!5207 = !DILocalVariable(name: "index", arg: 2, scope: !5204, file: !3, line: 863, type: !119)
!5208 = !DILocation(line: 863, column: 51, scope: !5204)
!5209 = !DILocalVariable(name: "offset", scope: !5204, file: !3, line: 865, type: !119)
!5210 = !DILocation(line: 865, column: 6, scope: !5204)
!5211 = !DILocalVariable(name: "pos", scope: !5204, file: !3, line: 865, type: !119)
!5212 = !DILocation(line: 865, column: 18, scope: !5204)
!5213 = !DILocation(line: 866, column: 2, scope: !5204)
!5214 = !DILocation(line: 866, column: 9, scope: !5204)
!5215 = !DILocation(line: 866, column: 16, scope: !5204)
!5216 = !DILocation(line: 866, column: 13, scope: !5204)
!5217 = !DILocation(line: 867, column: 31, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5204, file: !3, line: 866, column: 23)
!5219 = !DILocation(line: 867, column: 37, scope: !5218)
!5220 = !DILocation(line: 867, column: 35, scope: !5218)
!5221 = !DILocation(line: 867, column: 13, scope: !5218)
!5222 = !DILocation(line: 867, column: 10, scope: !5218)
!5223 = !DILocation(line: 868, column: 6, scope: !5218)
!5224 = distinct !{!5224, !5213, !5225}
!5225 = !DILocation(line: 869, column: 2, scope: !5204)
!5226 = !DILocation(line: 870, column: 9, scope: !5204)
!5227 = !DILocation(line: 870, column: 2, scope: !5204)
!5228 = distinct !DISubprogram(name: "txt_utf8_offset_to_column", scope: !3, file: !3, line: 873, type: !5179, scopeLine: 874, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!5229 = !DILocalVariable(name: "str", arg: 1, scope: !5228, file: !3, line: 873, type: !304)
!5230 = !DILocation(line: 873, column: 43, scope: !5228)
!5231 = !DILocalVariable(name: "offset", arg: 2, scope: !5228, file: !3, line: 873, type: !119)
!5232 = !DILocation(line: 873, column: 52, scope: !5228)
!5233 = !DILocalVariable(name: "column", scope: !5228, file: !3, line: 875, type: !119)
!5234 = !DILocation(line: 875, column: 6, scope: !5228)
!5235 = !DILocalVariable(name: "pos", scope: !5228, file: !3, line: 875, type: !119)
!5236 = !DILocation(line: 875, column: 18, scope: !5228)
!5237 = !DILocation(line: 876, column: 2, scope: !5228)
!5238 = !DILocation(line: 876, column: 9, scope: !5228)
!5239 = !DILocation(line: 876, column: 15, scope: !5228)
!5240 = !DILocation(line: 876, column: 13, scope: !5228)
!5241 = !DILocation(line: 877, column: 42, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5228, file: !3, line: 876, column: 23)
!5243 = !DILocation(line: 877, column: 48, scope: !5242)
!5244 = !DILocation(line: 877, column: 46, scope: !5242)
!5245 = !DILocation(line: 877, column: 13, scope: !5242)
!5246 = !DILocation(line: 877, column: 10, scope: !5242)
!5247 = !DILocation(line: 878, column: 33, scope: !5242)
!5248 = !DILocation(line: 878, column: 39, scope: !5242)
!5249 = !DILocation(line: 878, column: 37, scope: !5242)
!5250 = !DILocation(line: 878, column: 10, scope: !5242)
!5251 = !DILocation(line: 878, column: 7, scope: !5242)
!5252 = distinct !{!5252, !5237, !5253}
!5253 = !DILocation(line: 879, column: 2, scope: !5228)
!5254 = !DILocation(line: 880, column: 9, scope: !5228)
!5255 = !DILocation(line: 880, column: 2, scope: !5228)
!5256 = distinct !DISubprogram(name: "txt_utf8_column_to_offset", scope: !3, file: !3, line: 883, type: !5179, scopeLine: 884, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!5257 = !DILocalVariable(name: "str", arg: 1, scope: !5256, file: !3, line: 883, type: !304)
!5258 = !DILocation(line: 883, column: 43, scope: !5256)
!5259 = !DILocalVariable(name: "column", arg: 2, scope: !5256, file: !3, line: 883, type: !119)
!5260 = !DILocation(line: 883, column: 52, scope: !5256)
!5261 = !DILocalVariable(name: "offset", scope: !5256, file: !3, line: 885, type: !119)
!5262 = !DILocation(line: 885, column: 6, scope: !5256)
!5263 = !DILocalVariable(name: "pos", scope: !5256, file: !3, line: 885, type: !119)
!5264 = !DILocation(line: 885, column: 18, scope: !5256)
!5265 = !DILocalVariable(name: "col", scope: !5256, file: !3, line: 885, type: !119)
!5266 = !DILocation(line: 885, column: 27, scope: !5256)
!5267 = !DILocation(line: 886, column: 2, scope: !5256)
!5268 = !DILocation(line: 886, column: 11, scope: !5256)
!5269 = !DILocation(line: 886, column: 17, scope: !5256)
!5270 = !DILocation(line: 886, column: 15, scope: !5256)
!5271 = !DILocation(line: 886, column: 9, scope: !5256)
!5272 = !DILocation(line: 886, column: 25, scope: !5256)
!5273 = !DILocation(line: 886, column: 28, scope: !5256)
!5274 = !DILocation(line: 886, column: 34, scope: !5256)
!5275 = !DILocation(line: 886, column: 32, scope: !5256)
!5276 = !DILocation(line: 0, scope: !5256)
!5277 = !DILocation(line: 887, column: 38, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5256, file: !3, line: 886, column: 42)
!5279 = !DILocation(line: 887, column: 44, scope: !5278)
!5280 = !DILocation(line: 887, column: 42, scope: !5278)
!5281 = !DILocation(line: 887, column: 9, scope: !5278)
!5282 = !DILocation(line: 887, column: 7, scope: !5278)
!5283 = !DILocation(line: 888, column: 7, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5278, file: !3, line: 888, column: 7)
!5285 = !DILocation(line: 888, column: 13, scope: !5284)
!5286 = !DILocation(line: 888, column: 11, scope: !5284)
!5287 = !DILocation(line: 888, column: 19, scope: !5284)
!5288 = !DILocation(line: 888, column: 17, scope: !5284)
!5289 = !DILocation(line: 888, column: 7, scope: !5278)
!5290 = !DILocation(line: 889, column: 4, scope: !5284)
!5291 = !DILocation(line: 890, column: 36, scope: !5278)
!5292 = !DILocation(line: 890, column: 42, scope: !5278)
!5293 = !DILocation(line: 890, column: 40, scope: !5278)
!5294 = !DILocation(line: 890, column: 13, scope: !5278)
!5295 = !DILocation(line: 890, column: 10, scope: !5278)
!5296 = !DILocation(line: 891, column: 10, scope: !5278)
!5297 = !DILocation(line: 891, column: 7, scope: !5278)
!5298 = distinct !{!5298, !5267, !5299}
!5299 = !DILocation(line: 892, column: 2, scope: !5256)
!5300 = !DILocation(line: 893, column: 9, scope: !5256)
!5301 = !DILocation(line: 893, column: 2, scope: !5256)
!5302 = distinct !DISubprogram(name: "txt_move_up", scope: !3, file: !3, line: 896, type: !4795, scopeLine: 897, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!5303 = !DILocalVariable(name: "text", arg: 1, scope: !5302, file: !3, line: 896, type: !139)
!5304 = !DILocation(line: 896, column: 24, scope: !5302)
!5305 = !DILocalVariable(name: "sel", arg: 2, scope: !5302, file: !3, line: 896, type: !912)
!5306 = !DILocation(line: 896, column: 41, scope: !5302)
!5307 = !DILocalVariable(name: "linep", scope: !5302, file: !3, line: 898, type: !295)
!5308 = !DILocation(line: 898, column: 13, scope: !5302)
!5309 = !DILocalVariable(name: "charp", scope: !5302, file: !3, line: 899, type: !4804)
!5310 = !DILocation(line: 899, column: 7, scope: !5302)
!5311 = !DILocation(line: 901, column: 6, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 901, column: 6)
!5313 = !DILocation(line: 901, column: 6, scope: !5302)
!5314 = !DILocation(line: 901, column: 24, scope: !5312)
!5315 = !DILocation(line: 901, column: 11, scope: !5312)
!5316 = !DILocation(line: 902, column: 23, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5312, file: !3, line: 902, column: 7)
!5318 = !DILocation(line: 902, column: 9, scope: !5317)
!5319 = !DILocation(line: 902, column: 43, scope: !5317)
!5320 = !DILocation(line: 902, column: 30, scope: !5317)
!5321 = !DILocation(line: 903, column: 8, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 903, column: 6)
!5323 = !DILocation(line: 903, column: 7, scope: !5322)
!5324 = !DILocation(line: 903, column: 6, scope: !5302)
!5325 = !DILocation(line: 903, column: 15, scope: !5322)
!5326 = !DILocation(line: 905, column: 8, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 905, column: 6)
!5328 = !DILocation(line: 905, column: 7, scope: !5327)
!5329 = !DILocation(line: 905, column: 16, scope: !5327)
!5330 = !DILocation(line: 905, column: 6, scope: !5327)
!5331 = !DILocation(line: 905, column: 6, scope: !5302)
!5332 = !DILocalVariable(name: "column", scope: !5333, file: !3, line: 906, type: !119)
!5333 = distinct !DILexicalBlock(scope: !5327, file: !3, line: 905, column: 22)
!5334 = !DILocation(line: 906, column: 7, scope: !5333)
!5335 = !DILocation(line: 906, column: 44, scope: !5333)
!5336 = !DILocation(line: 906, column: 43, scope: !5333)
!5337 = !DILocation(line: 906, column: 52, scope: !5333)
!5338 = !DILocation(line: 906, column: 59, scope: !5333)
!5339 = !DILocation(line: 906, column: 58, scope: !5333)
!5340 = !DILocation(line: 906, column: 16, scope: !5333)
!5341 = !DILocation(line: 907, column: 14, scope: !5333)
!5342 = !DILocation(line: 907, column: 13, scope: !5333)
!5343 = !DILocation(line: 907, column: 22, scope: !5333)
!5344 = !DILocation(line: 907, column: 4, scope: !5333)
!5345 = !DILocation(line: 907, column: 10, scope: !5333)
!5346 = !DILocation(line: 908, column: 40, scope: !5333)
!5347 = !DILocation(line: 908, column: 39, scope: !5333)
!5348 = !DILocation(line: 908, column: 48, scope: !5333)
!5349 = !DILocation(line: 908, column: 54, scope: !5333)
!5350 = !DILocation(line: 908, column: 12, scope: !5333)
!5351 = !DILocation(line: 908, column: 4, scope: !5333)
!5352 = !DILocation(line: 908, column: 10, scope: !5333)
!5353 = !DILocation(line: 910, column: 2, scope: !5333)
!5354 = !DILocation(line: 912, column: 16, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5327, file: !3, line: 911, column: 7)
!5356 = !DILocation(line: 912, column: 22, scope: !5355)
!5357 = !DILocation(line: 912, column: 3, scope: !5355)
!5358 = !DILocation(line: 915, column: 7, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 915, column: 6)
!5360 = !DILocation(line: 915, column: 6, scope: !5302)
!5361 = !DILocation(line: 915, column: 24, scope: !5359)
!5362 = !DILocation(line: 915, column: 12, scope: !5359)
!5363 = !DILocation(line: 916, column: 1, scope: !5302)
!5364 = distinct !DISubprogram(name: "txt_curs_sel", scope: !3, file: !3, line: 834, type: !5365, scopeLine: 835, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!5365 = !DISubroutineType(types: !5366)
!5366 = !{null, !139, !5367, !5368}
!5367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 64)
!5368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4804, size: 64)
!5369 = !DILocalVariable(name: "text", arg: 1, scope: !5364, file: !3, line: 834, type: !139)
!5370 = !DILocation(line: 834, column: 32, scope: !5364)
!5371 = !DILocalVariable(name: "linep", arg: 2, scope: !5364, file: !3, line: 834, type: !5367)
!5372 = !DILocation(line: 834, column: 50, scope: !5364)
!5373 = !DILocalVariable(name: "charp", arg: 3, scope: !5364, file: !3, line: 834, type: !5368)
!5374 = !DILocation(line: 834, column: 63, scope: !5364)
!5375 = !DILocation(line: 836, column: 12, scope: !5364)
!5376 = !DILocation(line: 836, column: 18, scope: !5364)
!5377 = !DILocation(line: 836, column: 3, scope: !5364)
!5378 = !DILocation(line: 836, column: 9, scope: !5364)
!5379 = !DILocation(line: 836, column: 34, scope: !5364)
!5380 = !DILocation(line: 836, column: 40, scope: !5364)
!5381 = !DILocation(line: 836, column: 25, scope: !5364)
!5382 = !DILocation(line: 836, column: 31, scope: !5364)
!5383 = !DILocation(line: 837, column: 1, scope: !5364)
!5384 = distinct !DISubprogram(name: "txt_pop_first", scope: !3, file: !3, line: 1161, type: !332, scopeLine: 1162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!5385 = !DILocalVariable(name: "text", arg: 1, scope: !5384, file: !3, line: 1161, type: !139)
!5386 = !DILocation(line: 1161, column: 33, scope: !5384)
!5387 = !DILocation(line: 1163, column: 19, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 1163, column: 6)
!5389 = !DILocation(line: 1163, column: 25, scope: !5388)
!5390 = !DILocation(line: 1163, column: 31, scope: !5388)
!5391 = !DILocation(line: 1163, column: 37, scope: !5388)
!5392 = !DILocation(line: 1163, column: 6, scope: !5388)
!5393 = !DILocation(line: 1163, column: 43, scope: !5388)
!5394 = !DILocation(line: 1163, column: 47, scope: !5388)
!5395 = !DILocation(line: 1164, column: 7, scope: !5388)
!5396 = !DILocation(line: 1164, column: 13, scope: !5388)
!5397 = !DILocation(line: 1164, column: 21, scope: !5388)
!5398 = !DILocation(line: 1164, column: 27, scope: !5388)
!5399 = !DILocation(line: 1164, column: 18, scope: !5388)
!5400 = !DILocation(line: 1164, column: 32, scope: !5388)
!5401 = !DILocation(line: 1164, column: 35, scope: !5388)
!5402 = !DILocation(line: 1164, column: 41, scope: !5388)
!5403 = !DILocation(line: 1164, column: 48, scope: !5388)
!5404 = !DILocation(line: 1164, column: 54, scope: !5388)
!5405 = !DILocation(line: 1164, column: 46, scope: !5388)
!5406 = !DILocation(line: 1163, column: 6, scope: !5384)
!5407 = !DILocation(line: 1166, column: 17, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5388, file: !3, line: 1165, column: 2)
!5409 = !DILocation(line: 1166, column: 3, scope: !5408)
!5410 = !DILocation(line: 1167, column: 2, scope: !5408)
!5411 = !DILocation(line: 1169, column: 14, scope: !5384)
!5412 = !DILocation(line: 1169, column: 2, scope: !5384)
!5413 = !DILocation(line: 1170, column: 1, scope: !5384)
!5414 = distinct !DISubprogram(name: "txt_curs_cur", scope: !3, file: !3, line: 829, type: !5365, scopeLine: 830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!5415 = !DILocalVariable(name: "text", arg: 1, scope: !5414, file: !3, line: 829, type: !139)
!5416 = !DILocation(line: 829, column: 32, scope: !5414)
!5417 = !DILocalVariable(name: "linep", arg: 2, scope: !5414, file: !3, line: 829, type: !5367)
!5418 = !DILocation(line: 829, column: 50, scope: !5414)
!5419 = !DILocalVariable(name: "charp", arg: 3, scope: !5414, file: !3, line: 829, type: !5368)
!5420 = !DILocation(line: 829, column: 63, scope: !5414)
!5421 = !DILocation(line: 831, column: 12, scope: !5414)
!5422 = !DILocation(line: 831, column: 18, scope: !5414)
!5423 = !DILocation(line: 831, column: 3, scope: !5414)
!5424 = !DILocation(line: 831, column: 9, scope: !5414)
!5425 = !DILocation(line: 831, column: 34, scope: !5414)
!5426 = !DILocation(line: 831, column: 40, scope: !5414)
!5427 = !DILocation(line: 831, column: 25, scope: !5414)
!5428 = !DILocation(line: 831, column: 31, scope: !5414)
!5429 = !DILocation(line: 832, column: 1, scope: !5414)
!5430 = distinct !DISubprogram(name: "txt_move_bol", scope: !3, file: !3, line: 1057, type: !4795, scopeLine: 1058, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!5431 = !DILocalVariable(name: "text", arg: 1, scope: !5430, file: !3, line: 1057, type: !139)
!5432 = !DILocation(line: 1057, column: 25, scope: !5430)
!5433 = !DILocalVariable(name: "sel", arg: 2, scope: !5430, file: !3, line: 1057, type: !912)
!5434 = !DILocation(line: 1057, column: 42, scope: !5430)
!5435 = !DILocalVariable(name: "linep", scope: !5430, file: !3, line: 1059, type: !295)
!5436 = !DILocation(line: 1059, column: 13, scope: !5430)
!5437 = !DILocalVariable(name: "charp", scope: !5430, file: !3, line: 1060, type: !4804)
!5438 = !DILocation(line: 1060, column: 7, scope: !5430)
!5439 = !DILocation(line: 1062, column: 6, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 1062, column: 6)
!5441 = !DILocation(line: 1062, column: 6, scope: !5430)
!5442 = !DILocation(line: 1062, column: 24, scope: !5440)
!5443 = !DILocation(line: 1062, column: 11, scope: !5440)
!5444 = !DILocation(line: 1063, column: 20, scope: !5440)
!5445 = !DILocation(line: 1063, column: 7, scope: !5440)
!5446 = !DILocation(line: 1064, column: 8, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 1064, column: 6)
!5448 = !DILocation(line: 1064, column: 7, scope: !5447)
!5449 = !DILocation(line: 1064, column: 6, scope: !5430)
!5450 = !DILocation(line: 1064, column: 15, scope: !5447)
!5451 = !DILocation(line: 1066, column: 3, scope: !5430)
!5452 = !DILocation(line: 1066, column: 9, scope: !5430)
!5453 = !DILocation(line: 1068, column: 7, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 1068, column: 6)
!5455 = !DILocation(line: 1068, column: 6, scope: !5430)
!5456 = !DILocation(line: 1068, column: 24, scope: !5454)
!5457 = !DILocation(line: 1068, column: 12, scope: !5454)
!5458 = !DILocation(line: 1069, column: 1, scope: !5430)
!5459 = distinct !DISubprogram(name: "txt_pop_sel", scope: !3, file: !3, line: 1183, type: !332, scopeLine: 1184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!5460 = !DILocalVariable(name: "text", arg: 1, scope: !5459, file: !3, line: 1183, type: !139)
!5461 = !DILocation(line: 1183, column: 24, scope: !5459)
!5462 = !DILocation(line: 1185, column: 15, scope: !5459)
!5463 = !DILocation(line: 1185, column: 21, scope: !5459)
!5464 = !DILocation(line: 1185, column: 2, scope: !5459)
!5465 = !DILocation(line: 1185, column: 8, scope: !5459)
!5466 = !DILocation(line: 1185, column: 13, scope: !5459)
!5467 = !DILocation(line: 1186, column: 15, scope: !5459)
!5468 = !DILocation(line: 1186, column: 21, scope: !5459)
!5469 = !DILocation(line: 1186, column: 2, scope: !5459)
!5470 = !DILocation(line: 1186, column: 8, scope: !5459)
!5471 = !DILocation(line: 1186, column: 13, scope: !5459)
!5472 = !DILocation(line: 1187, column: 1, scope: !5459)
!5473 = distinct !DISubprogram(name: "txt_move_down", scope: !3, file: !3, line: 918, type: !4795, scopeLine: 919, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!5474 = !DILocalVariable(name: "text", arg: 1, scope: !5473, file: !3, line: 918, type: !139)
!5475 = !DILocation(line: 918, column: 26, scope: !5473)
!5476 = !DILocalVariable(name: "sel", arg: 2, scope: !5473, file: !3, line: 918, type: !912)
!5477 = !DILocation(line: 918, column: 43, scope: !5473)
!5478 = !DILocalVariable(name: "linep", scope: !5473, file: !3, line: 920, type: !295)
!5479 = !DILocation(line: 920, column: 13, scope: !5473)
!5480 = !DILocalVariable(name: "charp", scope: !5473, file: !3, line: 921, type: !4804)
!5481 = !DILocation(line: 921, column: 7, scope: !5473)
!5482 = !DILocation(line: 923, column: 6, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5473, file: !3, line: 923, column: 6)
!5484 = !DILocation(line: 923, column: 6, scope: !5473)
!5485 = !DILocation(line: 923, column: 24, scope: !5483)
!5486 = !DILocation(line: 923, column: 11, scope: !5483)
!5487 = !DILocation(line: 924, column: 22, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 924, column: 7)
!5489 = !DILocation(line: 924, column: 9, scope: !5488)
!5490 = !DILocation(line: 924, column: 42, scope: !5488)
!5491 = !DILocation(line: 924, column: 29, scope: !5488)
!5492 = !DILocation(line: 925, column: 8, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5473, file: !3, line: 925, column: 6)
!5494 = !DILocation(line: 925, column: 7, scope: !5493)
!5495 = !DILocation(line: 925, column: 6, scope: !5473)
!5496 = !DILocation(line: 925, column: 15, scope: !5493)
!5497 = !DILocation(line: 927, column: 8, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5473, file: !3, line: 927, column: 6)
!5499 = !DILocation(line: 927, column: 7, scope: !5498)
!5500 = !DILocation(line: 927, column: 16, scope: !5498)
!5501 = !DILocation(line: 927, column: 6, scope: !5498)
!5502 = !DILocation(line: 927, column: 6, scope: !5473)
!5503 = !DILocalVariable(name: "column", scope: !5504, file: !3, line: 928, type: !119)
!5504 = distinct !DILexicalBlock(scope: !5498, file: !3, line: 927, column: 22)
!5505 = !DILocation(line: 928, column: 7, scope: !5504)
!5506 = !DILocation(line: 928, column: 44, scope: !5504)
!5507 = !DILocation(line: 928, column: 43, scope: !5504)
!5508 = !DILocation(line: 928, column: 52, scope: !5504)
!5509 = !DILocation(line: 928, column: 59, scope: !5504)
!5510 = !DILocation(line: 928, column: 58, scope: !5504)
!5511 = !DILocation(line: 928, column: 16, scope: !5504)
!5512 = !DILocation(line: 929, column: 14, scope: !5504)
!5513 = !DILocation(line: 929, column: 13, scope: !5504)
!5514 = !DILocation(line: 929, column: 22, scope: !5504)
!5515 = !DILocation(line: 929, column: 4, scope: !5504)
!5516 = !DILocation(line: 929, column: 10, scope: !5504)
!5517 = !DILocation(line: 930, column: 40, scope: !5504)
!5518 = !DILocation(line: 930, column: 39, scope: !5504)
!5519 = !DILocation(line: 930, column: 48, scope: !5504)
!5520 = !DILocation(line: 930, column: 54, scope: !5504)
!5521 = !DILocation(line: 930, column: 12, scope: !5504)
!5522 = !DILocation(line: 930, column: 4, scope: !5504)
!5523 = !DILocation(line: 930, column: 10, scope: !5504)
!5524 = !DILocation(line: 931, column: 2, scope: !5504)
!5525 = !DILocation(line: 933, column: 16, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5498, file: !3, line: 932, column: 7)
!5527 = !DILocation(line: 933, column: 22, scope: !5526)
!5528 = !DILocation(line: 933, column: 3, scope: !5526)
!5529 = !DILocation(line: 936, column: 7, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5473, file: !3, line: 936, column: 6)
!5531 = !DILocation(line: 936, column: 6, scope: !5473)
!5532 = !DILocation(line: 936, column: 24, scope: !5530)
!5533 = !DILocation(line: 936, column: 12, scope: !5530)
!5534 = !DILocation(line: 937, column: 1, scope: !5473)
!5535 = distinct !DISubprogram(name: "txt_pop_last", scope: !3, file: !3, line: 1172, type: !332, scopeLine: 1173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!5536 = !DILocalVariable(name: "text", arg: 1, scope: !5535, file: !3, line: 1172, type: !139)
!5537 = !DILocation(line: 1172, column: 32, scope: !5535)
!5538 = !DILocation(line: 1174, column: 19, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5535, file: !3, line: 1174, column: 6)
!5540 = !DILocation(line: 1174, column: 25, scope: !5539)
!5541 = !DILocation(line: 1174, column: 31, scope: !5539)
!5542 = !DILocation(line: 1174, column: 37, scope: !5539)
!5543 = !DILocation(line: 1174, column: 6, scope: !5539)
!5544 = !DILocation(line: 1174, column: 43, scope: !5539)
!5545 = !DILocation(line: 1174, column: 47, scope: !5539)
!5546 = !DILocation(line: 1175, column: 7, scope: !5539)
!5547 = !DILocation(line: 1175, column: 13, scope: !5539)
!5548 = !DILocation(line: 1175, column: 21, scope: !5539)
!5549 = !DILocation(line: 1175, column: 27, scope: !5539)
!5550 = !DILocation(line: 1175, column: 18, scope: !5539)
!5551 = !DILocation(line: 1175, column: 32, scope: !5539)
!5552 = !DILocation(line: 1175, column: 35, scope: !5539)
!5553 = !DILocation(line: 1175, column: 41, scope: !5539)
!5554 = !DILocation(line: 1175, column: 48, scope: !5539)
!5555 = !DILocation(line: 1175, column: 54, scope: !5539)
!5556 = !DILocation(line: 1175, column: 46, scope: !5539)
!5557 = !DILocation(line: 1174, column: 6, scope: !5535)
!5558 = !DILocation(line: 1177, column: 17, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5539, file: !3, line: 1176, column: 2)
!5560 = !DILocation(line: 1177, column: 3, scope: !5559)
!5561 = !DILocation(line: 1178, column: 2, scope: !5559)
!5562 = !DILocation(line: 1180, column: 14, scope: !5535)
!5563 = !DILocation(line: 1180, column: 2, scope: !5535)
!5564 = !DILocation(line: 1181, column: 1, scope: !5535)
!5565 = distinct !DISubprogram(name: "txt_move_eol", scope: !3, file: !3, line: 1071, type: !4795, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!5566 = !DILocalVariable(name: "text", arg: 1, scope: !5565, file: !3, line: 1071, type: !139)
!5567 = !DILocation(line: 1071, column: 25, scope: !5565)
!5568 = !DILocalVariable(name: "sel", arg: 2, scope: !5565, file: !3, line: 1071, type: !912)
!5569 = !DILocation(line: 1071, column: 42, scope: !5565)
!5570 = !DILocalVariable(name: "linep", scope: !5565, file: !3, line: 1073, type: !295)
!5571 = !DILocation(line: 1073, column: 13, scope: !5565)
!5572 = !DILocalVariable(name: "charp", scope: !5565, file: !3, line: 1074, type: !4804)
!5573 = !DILocation(line: 1074, column: 7, scope: !5565)
!5574 = !DILocation(line: 1076, column: 6, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5565, file: !3, line: 1076, column: 6)
!5576 = !DILocation(line: 1076, column: 6, scope: !5565)
!5577 = !DILocation(line: 1076, column: 24, scope: !5575)
!5578 = !DILocation(line: 1076, column: 11, scope: !5575)
!5579 = !DILocation(line: 1077, column: 20, scope: !5575)
!5580 = !DILocation(line: 1077, column: 7, scope: !5575)
!5581 = !DILocation(line: 1078, column: 8, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5565, file: !3, line: 1078, column: 6)
!5583 = !DILocation(line: 1078, column: 7, scope: !5582)
!5584 = !DILocation(line: 1078, column: 6, scope: !5565)
!5585 = !DILocation(line: 1078, column: 15, scope: !5582)
!5586 = !DILocation(line: 1080, column: 13, scope: !5565)
!5587 = !DILocation(line: 1080, column: 12, scope: !5565)
!5588 = !DILocation(line: 1080, column: 21, scope: !5565)
!5589 = !DILocation(line: 1080, column: 3, scope: !5565)
!5590 = !DILocation(line: 1080, column: 9, scope: !5565)
!5591 = !DILocation(line: 1082, column: 7, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !5565, file: !3, line: 1082, column: 6)
!5593 = !DILocation(line: 1082, column: 6, scope: !5565)
!5594 = !DILocation(line: 1082, column: 24, scope: !5592)
!5595 = !DILocation(line: 1082, column: 12, scope: !5592)
!5596 = !DILocation(line: 1083, column: 1, scope: !5565)
!5597 = distinct !DISubprogram(name: "txt_move_left", scope: !3, file: !3, line: 939, type: !4795, scopeLine: 940, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!5598 = !DILocalVariable(name: "text", arg: 1, scope: !5597, file: !3, line: 939, type: !139)
!5599 = !DILocation(line: 939, column: 26, scope: !5597)
!5600 = !DILocalVariable(name: "sel", arg: 2, scope: !5597, file: !3, line: 939, type: !912)
!5601 = !DILocation(line: 939, column: 43, scope: !5597)
!5602 = !DILocalVariable(name: "linep", scope: !5597, file: !3, line: 941, type: !295)
!5603 = !DILocation(line: 941, column: 13, scope: !5597)
!5604 = !DILocalVariable(name: "charp", scope: !5597, file: !3, line: 942, type: !4804)
!5605 = !DILocation(line: 942, column: 7, scope: !5597)
!5606 = !DILocalVariable(name: "tabsize", scope: !5597, file: !3, line: 943, type: !119)
!5607 = !DILocation(line: 943, column: 6, scope: !5597)
!5608 = !DILocalVariable(name: "i", scope: !5597, file: !3, line: 943, type: !119)
!5609 = !DILocation(line: 943, column: 19, scope: !5597)
!5610 = !DILocation(line: 945, column: 6, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5597, file: !3, line: 945, column: 6)
!5612 = !DILocation(line: 945, column: 6, scope: !5597)
!5613 = !DILocation(line: 945, column: 24, scope: !5611)
!5614 = !DILocation(line: 945, column: 11, scope: !5611)
!5615 = !DILocation(line: 946, column: 23, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !5611, file: !3, line: 946, column: 7)
!5617 = !DILocation(line: 946, column: 9, scope: !5616)
!5618 = !DILocation(line: 946, column: 43, scope: !5616)
!5619 = !DILocation(line: 946, column: 30, scope: !5616)
!5620 = !DILocation(line: 947, column: 8, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5597, file: !3, line: 947, column: 6)
!5622 = !DILocation(line: 947, column: 7, scope: !5621)
!5623 = !DILocation(line: 947, column: 6, scope: !5597)
!5624 = !DILocation(line: 947, column: 15, scope: !5621)
!5625 = !DILocation(line: 949, column: 7, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5597, file: !3, line: 949, column: 6)
!5627 = !DILocation(line: 949, column: 6, scope: !5626)
!5628 = !DILocation(line: 949, column: 13, scope: !5626)
!5629 = !DILocation(line: 949, column: 6, scope: !5597)
!5630 = !DILocation(line: 950, column: 9, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5632, file: !3, line: 950, column: 7)
!5632 = distinct !DILexicalBlock(scope: !5626, file: !3, line: 949, column: 19)
!5633 = !DILocation(line: 950, column: 8, scope: !5631)
!5634 = !DILocation(line: 950, column: 17, scope: !5631)
!5635 = !DILocation(line: 950, column: 7, scope: !5631)
!5636 = !DILocation(line: 950, column: 7, scope: !5632)
!5637 = !DILocation(line: 951, column: 16, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5631, file: !3, line: 950, column: 23)
!5639 = !DILocation(line: 951, column: 22, scope: !5638)
!5640 = !DILocation(line: 951, column: 4, scope: !5638)
!5641 = !DILocation(line: 952, column: 15, scope: !5638)
!5642 = !DILocation(line: 952, column: 14, scope: !5638)
!5643 = !DILocation(line: 952, column: 23, scope: !5638)
!5644 = !DILocation(line: 952, column: 5, scope: !5638)
!5645 = !DILocation(line: 952, column: 11, scope: !5638)
!5646 = !DILocation(line: 953, column: 3, scope: !5638)
!5647 = !DILocation(line: 954, column: 2, scope: !5632)
!5648 = !DILocation(line: 958, column: 7, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5650, file: !3, line: 958, column: 7)
!5650 = distinct !DILexicalBlock(scope: !5626, file: !3, line: 955, column: 7)
!5651 = !DILocation(line: 958, column: 13, scope: !5649)
!5652 = !DILocation(line: 958, column: 19, scope: !5649)
!5653 = !DILocation(line: 958, column: 7, scope: !5650)
!5654 = !DILocation(line: 959, column: 16, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 958, column: 39)
!5656 = !DILocation(line: 959, column: 15, scope: !5655)
!5657 = !DILocation(line: 959, column: 22, scope: !5655)
!5658 = !DILocation(line: 959, column: 14, scope: !5655)
!5659 = !DILocation(line: 959, column: 40, scope: !5655)
!5660 = !DILocation(line: 959, column: 39, scope: !5655)
!5661 = !DILocation(line: 959, column: 12, scope: !5655)
!5662 = !DILocation(line: 961, column: 11, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 961, column: 4)
!5664 = !DILocation(line: 961, column: 9, scope: !5663)
!5665 = !DILocation(line: 961, column: 16, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5663, file: !3, line: 961, column: 4)
!5667 = !DILocation(line: 961, column: 22, scope: !5666)
!5668 = !DILocation(line: 961, column: 21, scope: !5666)
!5669 = !DILocation(line: 961, column: 18, scope: !5666)
!5670 = !DILocation(line: 961, column: 4, scope: !5663)
!5671 = !DILocation(line: 962, column: 11, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 962, column: 9)
!5673 = !DILocation(line: 962, column: 10, scope: !5672)
!5674 = !DILocation(line: 962, column: 19, scope: !5672)
!5675 = !DILocation(line: 962, column: 24, scope: !5672)
!5676 = !DILocation(line: 962, column: 9, scope: !5672)
!5677 = !DILocation(line: 962, column: 27, scope: !5672)
!5678 = !DILocation(line: 962, column: 9, scope: !5666)
!5679 = !DILocation(line: 963, column: 14, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5672, file: !3, line: 962, column: 35)
!5681 = !DILocation(line: 964, column: 6, scope: !5680)
!5682 = !DILocation(line: 962, column: 30, scope: !5672)
!5683 = !DILocation(line: 961, column: 31, scope: !5666)
!5684 = !DILocation(line: 961, column: 4, scope: !5666)
!5685 = distinct !{!5685, !5670, !5686}
!5686 = !DILocation(line: 965, column: 5, scope: !5663)
!5687 = !DILocation(line: 968, column: 8, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 968, column: 8)
!5689 = !DILocation(line: 968, column: 16, scope: !5688)
!5690 = !DILocation(line: 968, column: 21, scope: !5688)
!5691 = !DILocation(line: 968, column: 20, scope: !5688)
!5692 = !DILocation(line: 968, column: 28, scope: !5688)
!5693 = !DILocation(line: 968, column: 42, scope: !5688)
!5694 = !DILocation(line: 968, column: 8, scope: !5655)
!5695 = !DILocation(line: 969, column: 18, scope: !5688)
!5696 = !DILocation(line: 969, column: 17, scope: !5688)
!5697 = !DILocation(line: 969, column: 25, scope: !5688)
!5698 = !DILocation(line: 969, column: 13, scope: !5688)
!5699 = !DILocation(line: 969, column: 5, scope: !5688)
!5700 = !DILocation(line: 970, column: 3, scope: !5655)
!5701 = !DILocation(line: 972, column: 7, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5650, file: !3, line: 972, column: 7)
!5703 = !DILocation(line: 972, column: 7, scope: !5650)
!5704 = !DILocation(line: 973, column: 16, scope: !5702)
!5705 = !DILocation(line: 973, column: 6, scope: !5702)
!5706 = !DILocation(line: 973, column: 13, scope: !5702)
!5707 = !DILocation(line: 973, column: 4, scope: !5702)
!5708 = !DILocalVariable(name: "prev", scope: !5709, file: !3, line: 975, type: !304)
!5709 = distinct !DILexicalBlock(scope: !5702, file: !3, line: 974, column: 8)
!5710 = !DILocation(line: 975, column: 16, scope: !5709)
!5711 = !DILocation(line: 975, column: 48, scope: !5709)
!5712 = !DILocation(line: 975, column: 47, scope: !5709)
!5713 = !DILocation(line: 975, column: 56, scope: !5709)
!5714 = !DILocation(line: 975, column: 64, scope: !5709)
!5715 = !DILocation(line: 975, column: 63, scope: !5709)
!5716 = !DILocation(line: 975, column: 61, scope: !5709)
!5717 = !DILocation(line: 975, column: 23, scope: !5709)
!5718 = !DILocation(line: 976, column: 13, scope: !5709)
!5719 = !DILocation(line: 976, column: 22, scope: !5709)
!5720 = !DILocation(line: 976, column: 21, scope: !5709)
!5721 = !DILocation(line: 976, column: 30, scope: !5709)
!5722 = !DILocation(line: 976, column: 18, scope: !5709)
!5723 = !DILocation(line: 976, column: 5, scope: !5709)
!5724 = !DILocation(line: 976, column: 11, scope: !5709)
!5725 = !DILocation(line: 980, column: 7, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5597, file: !3, line: 980, column: 6)
!5727 = !DILocation(line: 980, column: 6, scope: !5597)
!5728 = !DILocation(line: 980, column: 24, scope: !5726)
!5729 = !DILocation(line: 980, column: 12, scope: !5726)
!5730 = !DILocation(line: 981, column: 1, scope: !5597)
!5731 = distinct !DISubprogram(name: "txt_move_right", scope: !3, file: !3, line: 983, type: !4795, scopeLine: 984, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!5732 = !DILocalVariable(name: "text", arg: 1, scope: !5731, file: !3, line: 983, type: !139)
!5733 = !DILocation(line: 983, column: 27, scope: !5731)
!5734 = !DILocalVariable(name: "sel", arg: 2, scope: !5731, file: !3, line: 983, type: !912)
!5735 = !DILocation(line: 983, column: 44, scope: !5731)
!5736 = !DILocalVariable(name: "linep", scope: !5731, file: !3, line: 985, type: !295)
!5737 = !DILocation(line: 985, column: 13, scope: !5731)
!5738 = !DILocalVariable(name: "charp", scope: !5731, file: !3, line: 986, type: !4804)
!5739 = !DILocation(line: 986, column: 7, scope: !5731)
!5740 = !DILocalVariable(name: "i", scope: !5731, file: !3, line: 986, type: !119)
!5741 = !DILocation(line: 986, column: 14, scope: !5731)
!5742 = !DILocalVariable(name: "do_tab", scope: !5731, file: !3, line: 987, type: !313)
!5743 = !DILocation(line: 987, column: 7, scope: !5731)
!5744 = !DILocation(line: 989, column: 6, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 989, column: 6)
!5746 = !DILocation(line: 989, column: 6, scope: !5731)
!5747 = !DILocation(line: 989, column: 24, scope: !5745)
!5748 = !DILocation(line: 989, column: 11, scope: !5745)
!5749 = !DILocation(line: 990, column: 22, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5745, file: !3, line: 990, column: 7)
!5751 = !DILocation(line: 990, column: 9, scope: !5750)
!5752 = !DILocation(line: 990, column: 42, scope: !5750)
!5753 = !DILocation(line: 990, column: 29, scope: !5750)
!5754 = !DILocation(line: 991, column: 8, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 991, column: 6)
!5756 = !DILocation(line: 991, column: 7, scope: !5755)
!5757 = !DILocation(line: 991, column: 6, scope: !5731)
!5758 = !DILocation(line: 991, column: 15, scope: !5755)
!5759 = !DILocation(line: 993, column: 7, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 993, column: 6)
!5761 = !DILocation(line: 993, column: 6, scope: !5760)
!5762 = !DILocation(line: 993, column: 18, scope: !5760)
!5763 = !DILocation(line: 993, column: 17, scope: !5760)
!5764 = !DILocation(line: 993, column: 26, scope: !5760)
!5765 = !DILocation(line: 993, column: 13, scope: !5760)
!5766 = !DILocation(line: 993, column: 6, scope: !5731)
!5767 = !DILocation(line: 994, column: 9, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5769, file: !3, line: 994, column: 7)
!5769 = distinct !DILexicalBlock(scope: !5760, file: !3, line: 993, column: 31)
!5770 = !DILocation(line: 994, column: 8, scope: !5768)
!5771 = !DILocation(line: 994, column: 17, scope: !5768)
!5772 = !DILocation(line: 994, column: 7, scope: !5768)
!5773 = !DILocation(line: 994, column: 7, scope: !5769)
!5774 = !DILocation(line: 995, column: 18, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5768, file: !3, line: 994, column: 23)
!5776 = !DILocation(line: 995, column: 24, scope: !5775)
!5777 = !DILocation(line: 995, column: 4, scope: !5775)
!5778 = !DILocation(line: 996, column: 5, scope: !5775)
!5779 = !DILocation(line: 996, column: 11, scope: !5775)
!5780 = !DILocation(line: 997, column: 3, scope: !5775)
!5781 = !DILocation(line: 998, column: 2, scope: !5769)
!5782 = !DILocation(line: 1002, column: 7, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5784, file: !3, line: 1002, column: 7)
!5784 = distinct !DILexicalBlock(scope: !5760, file: !3, line: 999, column: 7)
!5785 = !DILocation(line: 1002, column: 13, scope: !5783)
!5786 = !DILocation(line: 1002, column: 19, scope: !5783)
!5787 = !DILocation(line: 1002, column: 38, scope: !5783)
!5788 = !DILocation(line: 1002, column: 43, scope: !5783)
!5789 = !DILocation(line: 1002, column: 42, scope: !5783)
!5790 = !DILocation(line: 1002, column: 51, scope: !5783)
!5791 = !DILocation(line: 1002, column: 57, scope: !5783)
!5792 = !DILocation(line: 1002, column: 56, scope: !5783)
!5793 = !DILocation(line: 1002, column: 41, scope: !5783)
!5794 = !DILocation(line: 1002, column: 64, scope: !5783)
!5795 = !DILocation(line: 1002, column: 7, scope: !5784)
!5796 = !DILocation(line: 1003, column: 11, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5783, file: !3, line: 1002, column: 72)
!5798 = !DILocation(line: 1004, column: 11, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5797, file: !3, line: 1004, column: 4)
!5800 = !DILocation(line: 1004, column: 9, scope: !5799)
!5801 = !DILocation(line: 1004, column: 16, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5799, file: !3, line: 1004, column: 4)
!5803 = !DILocation(line: 1004, column: 21, scope: !5802)
!5804 = !DILocation(line: 1004, column: 20, scope: !5802)
!5805 = !DILocation(line: 1004, column: 18, scope: !5802)
!5806 = !DILocation(line: 1004, column: 4, scope: !5799)
!5807 = !DILocation(line: 1005, column: 11, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 1005, column: 9)
!5809 = !DILocation(line: 1005, column: 10, scope: !5808)
!5810 = !DILocation(line: 1005, column: 19, scope: !5808)
!5811 = !DILocation(line: 1005, column: 24, scope: !5808)
!5812 = !DILocation(line: 1005, column: 9, scope: !5808)
!5813 = !DILocation(line: 1005, column: 27, scope: !5808)
!5814 = !DILocation(line: 1005, column: 9, scope: !5802)
!5815 = !DILocation(line: 1006, column: 13, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5808, file: !3, line: 1005, column: 35)
!5817 = !DILocation(line: 1007, column: 6, scope: !5816)
!5818 = !DILocation(line: 1005, column: 30, scope: !5808)
!5819 = !DILocation(line: 1004, column: 29, scope: !5802)
!5820 = !DILocation(line: 1004, column: 4, scope: !5802)
!5821 = distinct !{!5821, !5806, !5822}
!5822 = !DILocation(line: 1008, column: 5, scope: !5799)
!5823 = !DILocation(line: 1009, column: 3, scope: !5797)
!5824 = !DILocation(line: 1011, column: 7, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5784, file: !3, line: 1011, column: 7)
!5826 = !DILocation(line: 1011, column: 7, scope: !5784)
!5827 = !DILocalVariable(name: "tabsize", scope: !5828, file: !3, line: 1012, type: !119)
!5828 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 1011, column: 15)
!5829 = !DILocation(line: 1012, column: 8, scope: !5828)
!5830 = !DILocation(line: 1012, column: 20, scope: !5828)
!5831 = !DILocation(line: 1012, column: 19, scope: !5828)
!5832 = !DILocation(line: 1012, column: 27, scope: !5828)
!5833 = !DILocation(line: 1012, column: 41, scope: !5828)
!5834 = !DILocation(line: 1013, column: 14, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5828, file: !3, line: 1013, column: 4)
!5836 = !DILocation(line: 1013, column: 13, scope: !5835)
!5837 = !DILocation(line: 1013, column: 20, scope: !5835)
!5838 = !DILocation(line: 1013, column: 11, scope: !5835)
!5839 = !DILocation(line: 1013, column: 9, scope: !5835)
!5840 = !DILocation(line: 1013, column: 27, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 1013, column: 4)
!5842 = !DILocation(line: 1013, column: 26, scope: !5841)
!5843 = !DILocation(line: 1013, column: 35, scope: !5841)
!5844 = !DILocation(line: 1013, column: 40, scope: !5841)
!5845 = !DILocation(line: 1013, column: 25, scope: !5841)
!5846 = !DILocation(line: 1013, column: 43, scope: !5841)
!5847 = !DILocation(line: 1013, column: 50, scope: !5841)
!5848 = !DILocation(line: 1013, column: 53, scope: !5841)
!5849 = !DILocation(line: 1013, column: 61, scope: !5841)
!5850 = !DILocation(line: 0, scope: !5841)
!5851 = !DILocation(line: 1013, column: 4, scope: !5835)
!5852 = !DILocation(line: 1014, column: 12, scope: !5841)
!5853 = !DILocation(line: 1014, column: 5, scope: !5841)
!5854 = !DILocation(line: 1013, column: 77, scope: !5841)
!5855 = !DILocation(line: 1013, column: 4, scope: !5841)
!5856 = distinct !{!5856, !5851, !5857}
!5857 = !DILocation(line: 1014, column: 12, scope: !5835)
!5858 = !DILocation(line: 1015, column: 15, scope: !5828)
!5859 = !DILocation(line: 1015, column: 6, scope: !5828)
!5860 = !DILocation(line: 1015, column: 13, scope: !5828)
!5861 = !DILocation(line: 1016, column: 3, scope: !5828)
!5862 = !DILocation(line: 1018, column: 36, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 1017, column: 8)
!5864 = !DILocation(line: 1018, column: 35, scope: !5863)
!5865 = !DILocation(line: 1018, column: 44, scope: !5863)
!5866 = !DILocation(line: 1018, column: 52, scope: !5863)
!5867 = !DILocation(line: 1018, column: 51, scope: !5863)
!5868 = !DILocation(line: 1018, column: 49, scope: !5863)
!5869 = !DILocation(line: 1018, column: 16, scope: !5863)
!5870 = !DILocation(line: 1018, column: 6, scope: !5863)
!5871 = !DILocation(line: 1018, column: 13, scope: !5863)
!5872 = !DILocation(line: 1022, column: 7, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 1022, column: 6)
!5874 = !DILocation(line: 1022, column: 6, scope: !5731)
!5875 = !DILocation(line: 1022, column: 24, scope: !5873)
!5876 = !DILocation(line: 1022, column: 12, scope: !5873)
!5877 = !DILocation(line: 1023, column: 1, scope: !5731)
!5878 = distinct !DISubprogram(name: "txt_jump_left", scope: !3, file: !3, line: 1025, type: !5879, scopeLine: 1026, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!5879 = !DISubroutineType(types: !5880)
!5880 = !{null, !139, !912, !912}
!5881 = !DILocalVariable(name: "text", arg: 1, scope: !5878, file: !3, line: 1025, type: !139)
!5882 = !DILocation(line: 1025, column: 26, scope: !5878)
!5883 = !DILocalVariable(name: "sel", arg: 2, scope: !5878, file: !3, line: 1025, type: !912)
!5884 = !DILocation(line: 1025, column: 43, scope: !5878)
!5885 = !DILocalVariable(name: "use_init_step", arg: 3, scope: !5878, file: !3, line: 1025, type: !912)
!5886 = !DILocation(line: 1025, column: 59, scope: !5878)
!5887 = !DILocalVariable(name: "linep", scope: !5878, file: !3, line: 1027, type: !295)
!5888 = !DILocation(line: 1027, column: 13, scope: !5878)
!5889 = !DILocalVariable(name: "charp", scope: !5878, file: !3, line: 1028, type: !4804)
!5890 = !DILocation(line: 1028, column: 7, scope: !5878)
!5891 = !DILocation(line: 1030, column: 6, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 1030, column: 6)
!5893 = !DILocation(line: 1030, column: 6, scope: !5878)
!5894 = !DILocation(line: 1030, column: 24, scope: !5892)
!5895 = !DILocation(line: 1030, column: 11, scope: !5892)
!5896 = !DILocation(line: 1031, column: 23, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 1031, column: 7)
!5898 = !DILocation(line: 1031, column: 9, scope: !5897)
!5899 = !DILocation(line: 1031, column: 43, scope: !5897)
!5900 = !DILocation(line: 1031, column: 30, scope: !5897)
!5901 = !DILocation(line: 1032, column: 8, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 1032, column: 6)
!5903 = !DILocation(line: 1032, column: 7, scope: !5902)
!5904 = !DILocation(line: 1032, column: 6, scope: !5878)
!5905 = !DILocation(line: 1032, column: 15, scope: !5902)
!5906 = !DILocation(line: 1034, column: 29, scope: !5878)
!5907 = !DILocation(line: 1034, column: 28, scope: !5878)
!5908 = !DILocation(line: 1034, column: 37, scope: !5878)
!5909 = !DILocation(line: 1034, column: 45, scope: !5878)
!5910 = !DILocation(line: 1034, column: 44, scope: !5878)
!5911 = !DILocation(line: 1034, column: 53, scope: !5878)
!5912 = !DILocation(line: 1034, column: 43, scope: !5878)
!5913 = !DILocation(line: 1035, column: 27, scope: !5878)
!5914 = !DILocation(line: 1036, column: 46, scope: !5878)
!5915 = !DILocation(line: 1034, column: 2, scope: !5878)
!5916 = !DILocation(line: 1038, column: 7, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 1038, column: 6)
!5918 = !DILocation(line: 1038, column: 6, scope: !5878)
!5919 = !DILocation(line: 1038, column: 24, scope: !5917)
!5920 = !DILocation(line: 1038, column: 12, scope: !5917)
!5921 = !DILocation(line: 1039, column: 1, scope: !5878)
!5922 = distinct !DISubprogram(name: "txt_jump_right", scope: !3, file: !3, line: 1041, type: !5879, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!5923 = !DILocalVariable(name: "text", arg: 1, scope: !5922, file: !3, line: 1041, type: !139)
!5924 = !DILocation(line: 1041, column: 27, scope: !5922)
!5925 = !DILocalVariable(name: "sel", arg: 2, scope: !5922, file: !3, line: 1041, type: !912)
!5926 = !DILocation(line: 1041, column: 44, scope: !5922)
!5927 = !DILocalVariable(name: "use_init_step", arg: 3, scope: !5922, file: !3, line: 1041, type: !912)
!5928 = !DILocation(line: 1041, column: 60, scope: !5922)
!5929 = !DILocalVariable(name: "linep", scope: !5922, file: !3, line: 1043, type: !295)
!5930 = !DILocation(line: 1043, column: 13, scope: !5922)
!5931 = !DILocalVariable(name: "charp", scope: !5922, file: !3, line: 1044, type: !4804)
!5932 = !DILocation(line: 1044, column: 7, scope: !5922)
!5933 = !DILocation(line: 1046, column: 6, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5922, file: !3, line: 1046, column: 6)
!5935 = !DILocation(line: 1046, column: 6, scope: !5922)
!5936 = !DILocation(line: 1046, column: 24, scope: !5934)
!5937 = !DILocation(line: 1046, column: 11, scope: !5934)
!5938 = !DILocation(line: 1047, column: 22, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 1047, column: 7)
!5940 = !DILocation(line: 1047, column: 9, scope: !5939)
!5941 = !DILocation(line: 1047, column: 42, scope: !5939)
!5942 = !DILocation(line: 1047, column: 29, scope: !5939)
!5943 = !DILocation(line: 1048, column: 8, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5922, file: !3, line: 1048, column: 6)
!5945 = !DILocation(line: 1048, column: 7, scope: !5944)
!5946 = !DILocation(line: 1048, column: 6, scope: !5922)
!5947 = !DILocation(line: 1048, column: 15, scope: !5944)
!5948 = !DILocation(line: 1050, column: 29, scope: !5922)
!5949 = !DILocation(line: 1050, column: 28, scope: !5922)
!5950 = !DILocation(line: 1050, column: 37, scope: !5922)
!5951 = !DILocation(line: 1050, column: 45, scope: !5922)
!5952 = !DILocation(line: 1050, column: 44, scope: !5922)
!5953 = !DILocation(line: 1050, column: 53, scope: !5922)
!5954 = !DILocation(line: 1050, column: 43, scope: !5922)
!5955 = !DILocation(line: 1051, column: 27, scope: !5922)
!5956 = !DILocation(line: 1052, column: 46, scope: !5922)
!5957 = !DILocation(line: 1050, column: 2, scope: !5922)
!5958 = !DILocation(line: 1054, column: 7, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5922, file: !3, line: 1054, column: 6)
!5960 = !DILocation(line: 1054, column: 6, scope: !5922)
!5961 = !DILocation(line: 1054, column: 24, scope: !5959)
!5962 = !DILocation(line: 1054, column: 12, scope: !5959)
!5963 = !DILocation(line: 1055, column: 1, scope: !5922)
!5964 = distinct !DISubprogram(name: "txt_move_bof", scope: !3, file: !3, line: 1085, type: !4795, scopeLine: 1086, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!5965 = !DILocalVariable(name: "text", arg: 1, scope: !5964, file: !3, line: 1085, type: !139)
!5966 = !DILocation(line: 1085, column: 25, scope: !5964)
!5967 = !DILocalVariable(name: "sel", arg: 2, scope: !5964, file: !3, line: 1085, type: !912)
!5968 = !DILocation(line: 1085, column: 42, scope: !5964)
!5969 = !DILocalVariable(name: "linep", scope: !5964, file: !3, line: 1087, type: !295)
!5970 = !DILocation(line: 1087, column: 13, scope: !5964)
!5971 = !DILocalVariable(name: "charp", scope: !5964, file: !3, line: 1088, type: !4804)
!5972 = !DILocation(line: 1088, column: 7, scope: !5964)
!5973 = !DILocation(line: 1090, column: 6, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5964, file: !3, line: 1090, column: 6)
!5975 = !DILocation(line: 1090, column: 6, scope: !5964)
!5976 = !DILocation(line: 1090, column: 24, scope: !5974)
!5977 = !DILocation(line: 1090, column: 11, scope: !5974)
!5978 = !DILocation(line: 1091, column: 20, scope: !5974)
!5979 = !DILocation(line: 1091, column: 7, scope: !5974)
!5980 = !DILocation(line: 1092, column: 8, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5964, file: !3, line: 1092, column: 6)
!5982 = !DILocation(line: 1092, column: 7, scope: !5981)
!5983 = !DILocation(line: 1092, column: 6, scope: !5964)
!5984 = !DILocation(line: 1092, column: 15, scope: !5981)
!5985 = !DILocation(line: 1094, column: 11, scope: !5964)
!5986 = !DILocation(line: 1094, column: 17, scope: !5964)
!5987 = !DILocation(line: 1094, column: 23, scope: !5964)
!5988 = !DILocation(line: 1094, column: 3, scope: !5964)
!5989 = !DILocation(line: 1094, column: 9, scope: !5964)
!5990 = !DILocation(line: 1095, column: 3, scope: !5964)
!5991 = !DILocation(line: 1095, column: 9, scope: !5964)
!5992 = !DILocation(line: 1097, column: 7, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5964, file: !3, line: 1097, column: 6)
!5994 = !DILocation(line: 1097, column: 6, scope: !5964)
!5995 = !DILocation(line: 1097, column: 24, scope: !5993)
!5996 = !DILocation(line: 1097, column: 12, scope: !5993)
!5997 = !DILocation(line: 1098, column: 1, scope: !5964)
!5998 = distinct !DISubprogram(name: "txt_move_toline", scope: !3, file: !3, line: 1115, type: !5999, scopeLine: 1116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!5999 = !DISubroutineType(types: !6000)
!6000 = !{null, !139, !7, !912}
!6001 = !DILocalVariable(name: "text", arg: 1, scope: !5998, file: !3, line: 1115, type: !139)
!6002 = !DILocation(line: 1115, column: 28, scope: !5998)
!6003 = !DILocalVariable(name: "line", arg: 2, scope: !5998, file: !3, line: 1115, type: !7)
!6004 = !DILocation(line: 1115, column: 47, scope: !5998)
!6005 = !DILocalVariable(name: "sel", arg: 3, scope: !5998, file: !3, line: 1115, type: !912)
!6006 = !DILocation(line: 1115, column: 64, scope: !5998)
!6007 = !DILocation(line: 1117, column: 14, scope: !5998)
!6008 = !DILocation(line: 1117, column: 20, scope: !5998)
!6009 = !DILocation(line: 1117, column: 29, scope: !5998)
!6010 = !DILocation(line: 1117, column: 2, scope: !5998)
!6011 = !DILocation(line: 1118, column: 1, scope: !5998)
!6012 = distinct !DISubprogram(name: "txt_move_to", scope: !3, file: !3, line: 1121, type: !6013, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!6013 = !DISubroutineType(types: !6014)
!6014 = !{null, !139, !7, !7, !912}
!6015 = !DILocalVariable(name: "text", arg: 1, scope: !6012, file: !3, line: 1121, type: !139)
!6016 = !DILocation(line: 1121, column: 24, scope: !6012)
!6017 = !DILocalVariable(name: "line", arg: 2, scope: !6012, file: !3, line: 1121, type: !7)
!6018 = !DILocation(line: 1121, column: 43, scope: !6012)
!6019 = !DILocalVariable(name: "ch", arg: 3, scope: !6012, file: !3, line: 1121, type: !7)
!6020 = !DILocation(line: 1121, column: 62, scope: !6012)
!6021 = !DILocalVariable(name: "sel", arg: 4, scope: !6012, file: !3, line: 1121, type: !912)
!6022 = !DILocation(line: 1121, column: 77, scope: !6012)
!6023 = !DILocalVariable(name: "linep", scope: !6012, file: !3, line: 1123, type: !295)
!6024 = !DILocation(line: 1123, column: 13, scope: !6012)
!6025 = !DILocalVariable(name: "charp", scope: !6012, file: !3, line: 1124, type: !4804)
!6026 = !DILocation(line: 1124, column: 7, scope: !6012)
!6027 = !DILocalVariable(name: "i", scope: !6012, file: !3, line: 1125, type: !7)
!6028 = !DILocation(line: 1125, column: 15, scope: !6012)
!6029 = !DILocation(line: 1127, column: 6, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 1127, column: 6)
!6031 = !DILocation(line: 1127, column: 6, scope: !6012)
!6032 = !DILocation(line: 1127, column: 24, scope: !6030)
!6033 = !DILocation(line: 1127, column: 11, scope: !6030)
!6034 = !DILocation(line: 1128, column: 20, scope: !6030)
!6035 = !DILocation(line: 1128, column: 7, scope: !6030)
!6036 = !DILocation(line: 1129, column: 8, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 1129, column: 6)
!6038 = !DILocation(line: 1129, column: 7, scope: !6037)
!6039 = !DILocation(line: 1129, column: 6, scope: !6012)
!6040 = !DILocation(line: 1129, column: 15, scope: !6037)
!6041 = !DILocation(line: 1131, column: 11, scope: !6012)
!6042 = !DILocation(line: 1131, column: 17, scope: !6012)
!6043 = !DILocation(line: 1131, column: 23, scope: !6012)
!6044 = !DILocation(line: 1131, column: 3, scope: !6012)
!6045 = !DILocation(line: 1131, column: 9, scope: !6012)
!6046 = !DILocation(line: 1132, column: 9, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 1132, column: 2)
!6048 = !DILocation(line: 1132, column: 7, scope: !6047)
!6049 = !DILocation(line: 1132, column: 14, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 1132, column: 2)
!6051 = !DILocation(line: 1132, column: 18, scope: !6050)
!6052 = !DILocation(line: 1132, column: 16, scope: !6050)
!6053 = !DILocation(line: 1132, column: 2, scope: !6047)
!6054 = !DILocation(line: 1133, column: 9, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 1133, column: 7)
!6056 = distinct !DILexicalBlock(scope: !6050, file: !3, line: 1132, column: 29)
!6057 = !DILocation(line: 1133, column: 8, scope: !6055)
!6058 = !DILocation(line: 1133, column: 17, scope: !6055)
!6059 = !DILocation(line: 1133, column: 7, scope: !6055)
!6060 = !DILocation(line: 1133, column: 7, scope: !6056)
!6061 = !DILocation(line: 1133, column: 34, scope: !6055)
!6062 = !DILocation(line: 1133, column: 33, scope: !6055)
!6063 = !DILocation(line: 1133, column: 42, scope: !6055)
!6064 = !DILocation(line: 1133, column: 24, scope: !6055)
!6065 = !DILocation(line: 1133, column: 30, scope: !6055)
!6066 = !DILocation(line: 1133, column: 23, scope: !6055)
!6067 = !DILocation(line: 1134, column: 8, scope: !6055)
!6068 = !DILocation(line: 1135, column: 2, scope: !6056)
!6069 = !DILocation(line: 1132, column: 25, scope: !6050)
!6070 = !DILocation(line: 1132, column: 2, scope: !6050)
!6071 = distinct !{!6071, !6053, !6072}
!6072 = !DILocation(line: 1135, column: 2, scope: !6047)
!6073 = !DILocation(line: 1136, column: 6, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 1136, column: 6)
!6075 = !DILocation(line: 1136, column: 28, scope: !6074)
!6076 = !DILocation(line: 1136, column: 27, scope: !6074)
!6077 = !DILocation(line: 1136, column: 36, scope: !6074)
!6078 = !DILocation(line: 1136, column: 9, scope: !6074)
!6079 = !DILocation(line: 1136, column: 6, scope: !6012)
!6080 = !DILocation(line: 1137, column: 25, scope: !6074)
!6081 = !DILocation(line: 1137, column: 24, scope: !6074)
!6082 = !DILocation(line: 1137, column: 33, scope: !6074)
!6083 = !DILocation(line: 1137, column: 6, scope: !6074)
!6084 = !DILocation(line: 1137, column: 3, scope: !6074)
!6085 = !DILocation(line: 1138, column: 11, scope: !6012)
!6086 = !DILocation(line: 1138, column: 3, scope: !6012)
!6087 = !DILocation(line: 1138, column: 9, scope: !6012)
!6088 = !DILocation(line: 1140, column: 7, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 1140, column: 6)
!6090 = !DILocation(line: 1140, column: 6, scope: !6012)
!6091 = !DILocation(line: 1140, column: 24, scope: !6089)
!6092 = !DILocation(line: 1140, column: 12, scope: !6089)
!6093 = !DILocation(line: 1141, column: 1, scope: !6012)
!6094 = distinct !DISubprogram(name: "txt_order_cursors", scope: !3, file: !3, line: 1189, type: !4795, scopeLine: 1190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!6095 = !DILocalVariable(name: "text", arg: 1, scope: !6094, file: !3, line: 1189, type: !139)
!6096 = !DILocation(line: 1189, column: 30, scope: !6094)
!6097 = !DILocalVariable(name: "reverse", arg: 2, scope: !6094, file: !3, line: 1189, type: !912)
!6098 = !DILocation(line: 1189, column: 47, scope: !6094)
!6099 = !DILocation(line: 1191, column: 7, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6094, file: !3, line: 1191, column: 6)
!6101 = !DILocation(line: 1191, column: 13, scope: !6100)
!6102 = !DILocation(line: 1191, column: 6, scope: !6094)
!6103 = !DILocation(line: 1191, column: 19, scope: !6100)
!6104 = !DILocation(line: 1192, column: 7, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6094, file: !3, line: 1192, column: 6)
!6106 = !DILocation(line: 1192, column: 13, scope: !6105)
!6107 = !DILocation(line: 1192, column: 6, scope: !6094)
!6108 = !DILocation(line: 1192, column: 19, scope: !6105)
!6109 = !DILocation(line: 1195, column: 6, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6094, file: !3, line: 1195, column: 6)
!6111 = !DILocation(line: 1195, column: 14, scope: !6110)
!6112 = !DILocation(line: 1195, column: 6, scope: !6094)
!6113 = !DILocation(line: 1196, column: 21, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 1196, column: 7)
!6115 = distinct !DILexicalBlock(scope: !6110, file: !3, line: 1195, column: 24)
!6116 = !DILocation(line: 1196, column: 27, scope: !6114)
!6117 = !DILocation(line: 1196, column: 33, scope: !6114)
!6118 = !DILocation(line: 1196, column: 39, scope: !6114)
!6119 = !DILocation(line: 1196, column: 8, scope: !6114)
!6120 = !DILocation(line: 1196, column: 45, scope: !6114)
!6121 = !DILocation(line: 1196, column: 50, scope: !6114)
!6122 = !DILocation(line: 1197, column: 8, scope: !6114)
!6123 = !DILocation(line: 1197, column: 14, scope: !6114)
!6124 = !DILocation(line: 1197, column: 22, scope: !6114)
!6125 = !DILocation(line: 1197, column: 28, scope: !6114)
!6126 = !DILocation(line: 1197, column: 19, scope: !6114)
!6127 = !DILocation(line: 1197, column: 33, scope: !6114)
!6128 = !DILocation(line: 1197, column: 36, scope: !6114)
!6129 = !DILocation(line: 1197, column: 42, scope: !6114)
!6130 = !DILocation(line: 1197, column: 49, scope: !6114)
!6131 = !DILocation(line: 1197, column: 55, scope: !6114)
!6132 = !DILocation(line: 1197, column: 47, scope: !6114)
!6133 = !DILocation(line: 1196, column: 7, scope: !6115)
!6134 = !DILocation(line: 1199, column: 18, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !6114, file: !3, line: 1198, column: 3)
!6136 = !DILocation(line: 1199, column: 4, scope: !6135)
!6137 = !DILocation(line: 1200, column: 3, scope: !6135)
!6138 = !DILocation(line: 1201, column: 2, scope: !6115)
!6139 = !DILocation(line: 1203, column: 21, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6141, file: !3, line: 1203, column: 7)
!6141 = distinct !DILexicalBlock(scope: !6110, file: !3, line: 1202, column: 7)
!6142 = !DILocation(line: 1203, column: 27, scope: !6140)
!6143 = !DILocation(line: 1203, column: 33, scope: !6140)
!6144 = !DILocation(line: 1203, column: 39, scope: !6140)
!6145 = !DILocation(line: 1203, column: 8, scope: !6140)
!6146 = !DILocation(line: 1203, column: 45, scope: !6140)
!6147 = !DILocation(line: 1203, column: 50, scope: !6140)
!6148 = !DILocation(line: 1204, column: 8, scope: !6140)
!6149 = !DILocation(line: 1204, column: 14, scope: !6140)
!6150 = !DILocation(line: 1204, column: 22, scope: !6140)
!6151 = !DILocation(line: 1204, column: 28, scope: !6140)
!6152 = !DILocation(line: 1204, column: 19, scope: !6140)
!6153 = !DILocation(line: 1204, column: 33, scope: !6140)
!6154 = !DILocation(line: 1204, column: 36, scope: !6140)
!6155 = !DILocation(line: 1204, column: 42, scope: !6140)
!6156 = !DILocation(line: 1204, column: 49, scope: !6140)
!6157 = !DILocation(line: 1204, column: 55, scope: !6140)
!6158 = !DILocation(line: 1204, column: 47, scope: !6140)
!6159 = !DILocation(line: 1203, column: 7, scope: !6141)
!6160 = !DILocation(line: 1206, column: 18, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6140, file: !3, line: 1205, column: 3)
!6162 = !DILocation(line: 1206, column: 4, scope: !6161)
!6163 = !DILocation(line: 1207, column: 3, scope: !6161)
!6164 = !DILocation(line: 1209, column: 1, scope: !6094)
!6165 = distinct !DISubprogram(name: "txt_curs_swap", scope: !3, file: !3, line: 1147, type: !332, scopeLine: 1148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!6166 = !DILocalVariable(name: "text", arg: 1, scope: !6165, file: !3, line: 1147, type: !139)
!6167 = !DILocation(line: 1147, column: 33, scope: !6165)
!6168 = !DILocalVariable(name: "tmpl", scope: !6165, file: !3, line: 1149, type: !124)
!6169 = !DILocation(line: 1149, column: 12, scope: !6165)
!6170 = !DILocalVariable(name: "tmpc", scope: !6165, file: !3, line: 1150, type: !119)
!6171 = !DILocation(line: 1150, column: 6, scope: !6165)
!6172 = !DILocation(line: 1152, column: 9, scope: !6165)
!6173 = !DILocation(line: 1152, column: 15, scope: !6165)
!6174 = !DILocation(line: 1152, column: 7, scope: !6165)
!6175 = !DILocation(line: 1153, column: 15, scope: !6165)
!6176 = !DILocation(line: 1153, column: 21, scope: !6165)
!6177 = !DILocation(line: 1153, column: 2, scope: !6165)
!6178 = !DILocation(line: 1153, column: 8, scope: !6165)
!6179 = !DILocation(line: 1153, column: 13, scope: !6165)
!6180 = !DILocation(line: 1154, column: 15, scope: !6165)
!6181 = !DILocation(line: 1154, column: 2, scope: !6165)
!6182 = !DILocation(line: 1154, column: 8, scope: !6165)
!6183 = !DILocation(line: 1154, column: 13, scope: !6165)
!6184 = !DILocation(line: 1156, column: 9, scope: !6165)
!6185 = !DILocation(line: 1156, column: 15, scope: !6165)
!6186 = !DILocation(line: 1156, column: 7, scope: !6165)
!6187 = !DILocation(line: 1157, column: 15, scope: !6165)
!6188 = !DILocation(line: 1157, column: 21, scope: !6165)
!6189 = !DILocation(line: 1157, column: 2, scope: !6165)
!6190 = !DILocation(line: 1157, column: 8, scope: !6165)
!6191 = !DILocation(line: 1157, column: 13, scope: !6165)
!6192 = !DILocation(line: 1158, column: 15, scope: !6165)
!6193 = !DILocation(line: 1158, column: 2, scope: !6165)
!6194 = !DILocation(line: 1158, column: 8, scope: !6165)
!6195 = !DILocation(line: 1158, column: 13, scope: !6165)
!6196 = !DILocation(line: 1159, column: 1, scope: !6165)
!6197 = distinct !DISubprogram(name: "txt_has_sel", scope: !3, file: !3, line: 1211, type: !5158, scopeLine: 1212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!6198 = !DILocalVariable(name: "text", arg: 1, scope: !6197, file: !3, line: 1211, type: !139)
!6199 = !DILocation(line: 1211, column: 24, scope: !6197)
!6200 = !DILocation(line: 1213, column: 11, scope: !6197)
!6201 = !DILocation(line: 1213, column: 17, scope: !6197)
!6202 = !DILocation(line: 1213, column: 25, scope: !6197)
!6203 = !DILocation(line: 1213, column: 31, scope: !6197)
!6204 = !DILocation(line: 1213, column: 22, scope: !6197)
!6205 = !DILocation(line: 1213, column: 37, scope: !6197)
!6206 = !DILocation(line: 1213, column: 41, scope: !6197)
!6207 = !DILocation(line: 1213, column: 47, scope: !6197)
!6208 = !DILocation(line: 1213, column: 55, scope: !6197)
!6209 = !DILocation(line: 1213, column: 61, scope: !6197)
!6210 = !DILocation(line: 1213, column: 52, scope: !6197)
!6211 = !DILocation(line: 1213, column: 9, scope: !6197)
!6212 = !DILocation(line: 1213, column: 2, scope: !6197)
!6213 = distinct !DISubprogram(name: "txt_sel_clear", scope: !3, file: !3, line: 1268, type: !332, scopeLine: 1269, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!6214 = !DILocalVariable(name: "text", arg: 1, scope: !6213, file: !3, line: 1268, type: !139)
!6215 = !DILocation(line: 1268, column: 26, scope: !6213)
!6216 = !DILocation(line: 1270, column: 6, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6213, file: !3, line: 1270, column: 6)
!6218 = !DILocation(line: 1270, column: 12, scope: !6217)
!6219 = !DILocation(line: 1270, column: 6, scope: !6213)
!6220 = !DILocation(line: 1271, column: 16, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 1270, column: 18)
!6222 = !DILocation(line: 1271, column: 22, scope: !6221)
!6223 = !DILocation(line: 1271, column: 3, scope: !6221)
!6224 = !DILocation(line: 1271, column: 9, scope: !6221)
!6225 = !DILocation(line: 1271, column: 14, scope: !6221)
!6226 = !DILocation(line: 1272, column: 16, scope: !6221)
!6227 = !DILocation(line: 1272, column: 22, scope: !6221)
!6228 = !DILocation(line: 1272, column: 3, scope: !6221)
!6229 = !DILocation(line: 1272, column: 9, scope: !6221)
!6230 = !DILocation(line: 1272, column: 14, scope: !6221)
!6231 = !DILocation(line: 1273, column: 2, scope: !6221)
!6232 = !DILocation(line: 1274, column: 1, scope: !6213)
!6233 = distinct !DISubprogram(name: "txt_sel_line", scope: !3, file: !3, line: 1276, type: !332, scopeLine: 1277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!6234 = !DILocalVariable(name: "text", arg: 1, scope: !6233, file: !3, line: 1276, type: !139)
!6235 = !DILocation(line: 1276, column: 25, scope: !6233)
!6236 = !DILocation(line: 1278, column: 7, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6233, file: !3, line: 1278, column: 6)
!6238 = !DILocation(line: 1278, column: 13, scope: !6237)
!6239 = !DILocation(line: 1278, column: 6, scope: !6233)
!6240 = !DILocation(line: 1278, column: 19, scope: !6237)
!6241 = !DILocation(line: 1280, column: 2, scope: !6233)
!6242 = !DILocation(line: 1280, column: 8, scope: !6233)
!6243 = !DILocation(line: 1280, column: 13, scope: !6233)
!6244 = !DILocation(line: 1281, column: 15, scope: !6233)
!6245 = !DILocation(line: 1281, column: 21, scope: !6233)
!6246 = !DILocation(line: 1281, column: 2, scope: !6233)
!6247 = !DILocation(line: 1281, column: 8, scope: !6233)
!6248 = !DILocation(line: 1281, column: 13, scope: !6233)
!6249 = !DILocation(line: 1282, column: 15, scope: !6233)
!6250 = !DILocation(line: 1282, column: 21, scope: !6233)
!6251 = !DILocation(line: 1282, column: 27, scope: !6233)
!6252 = !DILocation(line: 1282, column: 2, scope: !6233)
!6253 = !DILocation(line: 1282, column: 8, scope: !6233)
!6254 = !DILocation(line: 1282, column: 13, scope: !6233)
!6255 = !DILocation(line: 1283, column: 1, scope: !6233)
!6256 = distinct !DISubprogram(name: "txt_to_buf", scope: !3, file: !3, line: 1289, type: !6257, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!6257 = !DISubroutineType(types: !6258)
!6258 = !{!133, !139}
!6259 = !DILocalVariable(name: "text", arg: 1, scope: !6256, file: !3, line: 1289, type: !139)
!6260 = !DILocation(line: 1289, column: 24, scope: !6256)
!6261 = !DILocalVariable(name: "length", scope: !6256, file: !3, line: 1291, type: !119)
!6262 = !DILocation(line: 1291, column: 6, scope: !6256)
!6263 = !DILocalVariable(name: "tmp", scope: !6256, file: !3, line: 1292, type: !124)
!6264 = !DILocation(line: 1292, column: 12, scope: !6256)
!6265 = !DILocalVariable(name: "linef", scope: !6256, file: !3, line: 1292, type: !124)
!6266 = !DILocation(line: 1292, column: 18, scope: !6256)
!6267 = !DILocalVariable(name: "linel", scope: !6256, file: !3, line: 1292, type: !124)
!6268 = !DILocation(line: 1292, column: 26, scope: !6256)
!6269 = !DILocalVariable(name: "charf", scope: !6256, file: !3, line: 1293, type: !119)
!6270 = !DILocation(line: 1293, column: 6, scope: !6256)
!6271 = !DILocalVariable(name: "charl", scope: !6256, file: !3, line: 1293, type: !119)
!6272 = !DILocation(line: 1293, column: 13, scope: !6256)
!6273 = !DILocalVariable(name: "buf", scope: !6256, file: !3, line: 1294, type: !133)
!6274 = !DILocation(line: 1294, column: 8, scope: !6256)
!6275 = !DILocation(line: 1296, column: 7, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 1296, column: 6)
!6277 = !DILocation(line: 1296, column: 13, scope: !6276)
!6278 = !DILocation(line: 1296, column: 6, scope: !6256)
!6279 = !DILocation(line: 1296, column: 19, scope: !6276)
!6280 = !DILocation(line: 1297, column: 7, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 1297, column: 6)
!6282 = !DILocation(line: 1297, column: 13, scope: !6281)
!6283 = !DILocation(line: 1297, column: 6, scope: !6256)
!6284 = !DILocation(line: 1297, column: 19, scope: !6281)
!6285 = !DILocation(line: 1298, column: 7, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 1298, column: 6)
!6287 = !DILocation(line: 1298, column: 13, scope: !6286)
!6288 = !DILocation(line: 1298, column: 19, scope: !6286)
!6289 = !DILocation(line: 1298, column: 6, scope: !6256)
!6290 = !DILocation(line: 1298, column: 26, scope: !6286)
!6291 = !DILocation(line: 1300, column: 10, scope: !6256)
!6292 = !DILocation(line: 1300, column: 16, scope: !6256)
!6293 = !DILocation(line: 1300, column: 22, scope: !6256)
!6294 = !DILocation(line: 1300, column: 8, scope: !6256)
!6295 = !DILocation(line: 1301, column: 8, scope: !6256)
!6296 = !DILocation(line: 1303, column: 10, scope: !6256)
!6297 = !DILocation(line: 1303, column: 16, scope: !6256)
!6298 = !DILocation(line: 1303, column: 22, scope: !6256)
!6299 = !DILocation(line: 1303, column: 8, scope: !6256)
!6300 = !DILocation(line: 1304, column: 10, scope: !6256)
!6301 = !DILocation(line: 1304, column: 17, scope: !6256)
!6302 = !DILocation(line: 1304, column: 8, scope: !6256)
!6303 = !DILocation(line: 1306, column: 6, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 1306, column: 6)
!6305 = !DILocation(line: 1306, column: 15, scope: !6304)
!6306 = !DILocation(line: 1306, column: 21, scope: !6304)
!6307 = !DILocation(line: 1306, column: 27, scope: !6304)
!6308 = !DILocation(line: 1306, column: 12, scope: !6304)
!6309 = !DILocation(line: 1306, column: 6, scope: !6256)
!6310 = !DILocation(line: 1307, column: 12, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 1306, column: 33)
!6312 = !DILocation(line: 1307, column: 20, scope: !6311)
!6313 = !DILocation(line: 1307, column: 18, scope: !6311)
!6314 = !DILocation(line: 1307, column: 10, scope: !6311)
!6315 = !DILocation(line: 1309, column: 9, scope: !6311)
!6316 = !DILocation(line: 1309, column: 21, scope: !6311)
!6317 = !DILocation(line: 1309, column: 28, scope: !6311)
!6318 = !DILocation(line: 1309, column: 7, scope: !6311)
!6319 = !DILocation(line: 1311, column: 15, scope: !6311)
!6320 = !DILocation(line: 1311, column: 20, scope: !6311)
!6321 = !DILocation(line: 1311, column: 27, scope: !6311)
!6322 = !DILocation(line: 1311, column: 34, scope: !6311)
!6323 = !DILocation(line: 1311, column: 32, scope: !6311)
!6324 = !DILocation(line: 1311, column: 41, scope: !6311)
!6325 = !DILocation(line: 1311, column: 48, scope: !6311)
!6326 = !DILocation(line: 1311, column: 3, scope: !6311)
!6327 = !DILocation(line: 1312, column: 3, scope: !6311)
!6328 = !DILocation(line: 1312, column: 7, scope: !6311)
!6329 = !DILocation(line: 1312, column: 15, scope: !6311)
!6330 = !DILocation(line: 1313, column: 2, scope: !6311)
!6331 = !DILocation(line: 1315, column: 12, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 1314, column: 7)
!6333 = !DILocation(line: 1315, column: 19, scope: !6332)
!6334 = !DILocation(line: 1315, column: 25, scope: !6332)
!6335 = !DILocation(line: 1315, column: 23, scope: !6332)
!6336 = !DILocation(line: 1315, column: 10, scope: !6332)
!6337 = !DILocation(line: 1316, column: 13, scope: !6332)
!6338 = !DILocation(line: 1316, column: 10, scope: !6332)
!6339 = !DILocation(line: 1317, column: 10, scope: !6332)
!6340 = !DILocation(line: 1319, column: 9, scope: !6332)
!6341 = !DILocation(line: 1319, column: 16, scope: !6332)
!6342 = !DILocation(line: 1319, column: 7, scope: !6332)
!6343 = !DILocation(line: 1320, column: 3, scope: !6332)
!6344 = !DILocation(line: 1320, column: 10, scope: !6332)
!6345 = !DILocation(line: 1320, column: 14, scope: !6332)
!6346 = !DILocation(line: 1320, column: 17, scope: !6332)
!6347 = !DILocation(line: 1320, column: 24, scope: !6332)
!6348 = !DILocation(line: 1320, column: 21, scope: !6332)
!6349 = !DILocation(line: 0, scope: !6332)
!6350 = !DILocation(line: 1321, column: 14, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 1320, column: 31)
!6352 = !DILocation(line: 1321, column: 19, scope: !6351)
!6353 = !DILocation(line: 1321, column: 23, scope: !6351)
!6354 = !DILocation(line: 1321, column: 11, scope: !6351)
!6355 = !DILocation(line: 1322, column: 10, scope: !6351)
!6356 = !DILocation(line: 1322, column: 15, scope: !6351)
!6357 = !DILocation(line: 1322, column: 8, scope: !6351)
!6358 = distinct !{!6358, !6343, !6359}
!6359 = !DILocation(line: 1323, column: 3, scope: !6332)
!6360 = !DILocation(line: 1325, column: 9, scope: !6332)
!6361 = !DILocation(line: 1325, column: 21, scope: !6332)
!6362 = !DILocation(line: 1325, column: 28, scope: !6332)
!6363 = !DILocation(line: 1325, column: 7, scope: !6332)
!6364 = !DILocation(line: 1327, column: 11, scope: !6332)
!6365 = !DILocation(line: 1327, column: 16, scope: !6332)
!6366 = !DILocation(line: 1327, column: 23, scope: !6332)
!6367 = !DILocation(line: 1327, column: 30, scope: !6332)
!6368 = !DILocation(line: 1327, column: 28, scope: !6332)
!6369 = !DILocation(line: 1327, column: 37, scope: !6332)
!6370 = !DILocation(line: 1327, column: 44, scope: !6332)
!6371 = !DILocation(line: 1327, column: 50, scope: !6332)
!6372 = !DILocation(line: 1327, column: 48, scope: !6332)
!6373 = !DILocation(line: 1327, column: 3, scope: !6332)
!6374 = !DILocation(line: 1328, column: 12, scope: !6332)
!6375 = !DILocation(line: 1328, column: 19, scope: !6332)
!6376 = !DILocation(line: 1328, column: 25, scope: !6332)
!6377 = !DILocation(line: 1328, column: 23, scope: !6332)
!6378 = !DILocation(line: 1328, column: 10, scope: !6332)
!6379 = !DILocation(line: 1330, column: 3, scope: !6332)
!6380 = !DILocation(line: 1330, column: 13, scope: !6332)
!6381 = !DILocation(line: 1330, column: 17, scope: !6332)
!6382 = !DILocation(line: 1332, column: 9, scope: !6332)
!6383 = !DILocation(line: 1332, column: 16, scope: !6332)
!6384 = !DILocation(line: 1332, column: 7, scope: !6332)
!6385 = !DILocation(line: 1333, column: 3, scope: !6332)
!6386 = !DILocation(line: 1333, column: 10, scope: !6332)
!6387 = !DILocation(line: 1333, column: 14, scope: !6332)
!6388 = !DILocation(line: 1333, column: 17, scope: !6332)
!6389 = !DILocation(line: 1333, column: 24, scope: !6332)
!6390 = !DILocation(line: 1333, column: 21, scope: !6332)
!6391 = !DILocation(line: 1334, column: 12, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 1333, column: 31)
!6393 = !DILocation(line: 1334, column: 18, scope: !6392)
!6394 = !DILocation(line: 1334, column: 16, scope: !6392)
!6395 = !DILocation(line: 1334, column: 26, scope: !6392)
!6396 = !DILocation(line: 1334, column: 31, scope: !6392)
!6397 = !DILocation(line: 1334, column: 37, scope: !6392)
!6398 = !DILocation(line: 1334, column: 42, scope: !6392)
!6399 = !DILocation(line: 1334, column: 4, scope: !6392)
!6400 = !DILocation(line: 1335, column: 14, scope: !6392)
!6401 = !DILocation(line: 1335, column: 19, scope: !6392)
!6402 = !DILocation(line: 1335, column: 11, scope: !6392)
!6403 = !DILocation(line: 1337, column: 4, scope: !6392)
!6404 = !DILocation(line: 1337, column: 14, scope: !6392)
!6405 = !DILocation(line: 1337, column: 18, scope: !6392)
!6406 = !DILocation(line: 1339, column: 10, scope: !6392)
!6407 = !DILocation(line: 1339, column: 15, scope: !6392)
!6408 = !DILocation(line: 1339, column: 8, scope: !6392)
!6409 = distinct !{!6409, !6385, !6410}
!6410 = !DILocation(line: 1340, column: 3, scope: !6332)
!6411 = !DILocation(line: 1341, column: 11, scope: !6332)
!6412 = !DILocation(line: 1341, column: 17, scope: !6332)
!6413 = !DILocation(line: 1341, column: 15, scope: !6332)
!6414 = !DILocation(line: 1341, column: 25, scope: !6332)
!6415 = !DILocation(line: 1341, column: 32, scope: !6332)
!6416 = !DILocation(line: 1341, column: 38, scope: !6332)
!6417 = !DILocation(line: 1341, column: 3, scope: !6332)
!6418 = !DILocation(line: 1342, column: 13, scope: !6332)
!6419 = !DILocation(line: 1342, column: 10, scope: !6332)
!6420 = !DILocation(line: 1345, column: 3, scope: !6332)
!6421 = !DILocation(line: 1345, column: 13, scope: !6332)
!6422 = !DILocation(line: 1345, column: 17, scope: !6332)
!6423 = !DILocation(line: 1346, column: 3, scope: !6332)
!6424 = !DILocation(line: 1346, column: 7, scope: !6332)
!6425 = !DILocation(line: 1346, column: 15, scope: !6332)
!6426 = !DILocation(line: 1349, column: 9, scope: !6256)
!6427 = !DILocation(line: 1349, column: 2, scope: !6256)
!6428 = !DILocation(line: 1350, column: 1, scope: !6256)
!6429 = distinct !DISubprogram(name: "txt_find_string", scope: !3, file: !3, line: 1352, type: !6430, scopeLine: 1353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!6430 = !DISubroutineType(types: !6431)
!6431 = !{!119, !139, !304, !119, !119}
!6432 = !DILocalVariable(name: "text", arg: 1, scope: !6429, file: !3, line: 1352, type: !139)
!6433 = !DILocation(line: 1352, column: 27, scope: !6429)
!6434 = !DILocalVariable(name: "findstr", arg: 2, scope: !6429, file: !3, line: 1352, type: !304)
!6435 = !DILocation(line: 1352, column: 45, scope: !6429)
!6436 = !DILocalVariable(name: "wrap", arg: 3, scope: !6429, file: !3, line: 1352, type: !119)
!6437 = !DILocation(line: 1352, column: 58, scope: !6429)
!6438 = !DILocalVariable(name: "match_case", arg: 4, scope: !6429, file: !3, line: 1352, type: !119)
!6439 = !DILocation(line: 1352, column: 68, scope: !6429)
!6440 = !DILocalVariable(name: "tl", scope: !6429, file: !3, line: 1354, type: !124)
!6441 = !DILocation(line: 1354, column: 12, scope: !6429)
!6442 = !DILocalVariable(name: "startl", scope: !6429, file: !3, line: 1354, type: !124)
!6443 = !DILocation(line: 1354, column: 17, scope: !6429)
!6444 = !DILocalVariable(name: "s", scope: !6429, file: !3, line: 1355, type: !304)
!6445 = !DILocation(line: 1355, column: 14, scope: !6429)
!6446 = !DILocation(line: 1357, column: 7, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6429, file: !3, line: 1357, column: 6)
!6448 = !DILocation(line: 1357, column: 13, scope: !6447)
!6449 = !DILocation(line: 1357, column: 18, scope: !6447)
!6450 = !DILocation(line: 1357, column: 22, scope: !6447)
!6451 = !DILocation(line: 1357, column: 28, scope: !6447)
!6452 = !DILocation(line: 1357, column: 6, scope: !6429)
!6453 = !DILocation(line: 1357, column: 34, scope: !6447)
!6454 = !DILocation(line: 1359, column: 20, scope: !6429)
!6455 = !DILocation(line: 1359, column: 2, scope: !6429)
!6456 = !DILocation(line: 1361, column: 16, scope: !6429)
!6457 = !DILocation(line: 1361, column: 22, scope: !6429)
!6458 = !DILocation(line: 1361, column: 14, scope: !6429)
!6459 = !DILocation(line: 1361, column: 5, scope: !6429)
!6460 = !DILocation(line: 1363, column: 6, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6429, file: !3, line: 1363, column: 6)
!6462 = !DILocation(line: 1363, column: 6, scope: !6429)
!6463 = !DILocation(line: 1363, column: 30, scope: !6461)
!6464 = !DILocation(line: 1363, column: 34, scope: !6461)
!6465 = !DILocation(line: 1363, column: 39, scope: !6461)
!6466 = !DILocation(line: 1363, column: 45, scope: !6461)
!6467 = !DILocation(line: 1363, column: 52, scope: !6461)
!6468 = !DILocation(line: 1363, column: 22, scope: !6461)
!6469 = !DILocation(line: 1363, column: 20, scope: !6461)
!6470 = !DILocation(line: 1363, column: 18, scope: !6461)
!6471 = !DILocation(line: 1364, column: 27, scope: !6461)
!6472 = !DILocation(line: 1364, column: 31, scope: !6461)
!6473 = !DILocation(line: 1364, column: 36, scope: !6461)
!6474 = !DILocation(line: 1364, column: 42, scope: !6461)
!6475 = !DILocation(line: 1364, column: 49, scope: !6461)
!6476 = !DILocation(line: 1364, column: 11, scope: !6461)
!6477 = !DILocation(line: 1364, column: 9, scope: !6461)
!6478 = !DILocation(line: 1365, column: 2, scope: !6429)
!6479 = !DILocation(line: 1365, column: 10, scope: !6429)
!6480 = !DILocation(line: 1365, column: 9, scope: !6429)
!6481 = !DILocation(line: 1366, column: 8, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6429, file: !3, line: 1365, column: 13)
!6483 = !DILocation(line: 1366, column: 12, scope: !6482)
!6484 = !DILocation(line: 1366, column: 6, scope: !6482)
!6485 = !DILocation(line: 1367, column: 8, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6482, file: !3, line: 1367, column: 7)
!6487 = !DILocation(line: 1367, column: 7, scope: !6482)
!6488 = !DILocation(line: 1368, column: 8, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6490, file: !3, line: 1368, column: 8)
!6490 = distinct !DILexicalBlock(scope: !6486, file: !3, line: 1367, column: 12)
!6491 = !DILocation(line: 1368, column: 8, scope: !6490)
!6492 = !DILocation(line: 1369, column: 10, scope: !6489)
!6493 = !DILocation(line: 1369, column: 16, scope: !6489)
!6494 = !DILocation(line: 1369, column: 22, scope: !6489)
!6495 = !DILocation(line: 1369, column: 8, scope: !6489)
!6496 = !DILocation(line: 1369, column: 5, scope: !6489)
!6497 = !DILocation(line: 1371, column: 5, scope: !6489)
!6498 = !DILocation(line: 1372, column: 3, scope: !6490)
!6499 = !DILocation(line: 1374, column: 7, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6482, file: !3, line: 1374, column: 7)
!6501 = !DILocation(line: 1374, column: 7, scope: !6482)
!6502 = !DILocation(line: 1374, column: 30, scope: !6500)
!6503 = !DILocation(line: 1374, column: 34, scope: !6500)
!6504 = !DILocation(line: 1374, column: 40, scope: !6500)
!6505 = !DILocation(line: 1374, column: 23, scope: !6500)
!6506 = !DILocation(line: 1374, column: 21, scope: !6500)
!6507 = !DILocation(line: 1374, column: 19, scope: !6500)
!6508 = !DILocation(line: 1375, column: 27, scope: !6500)
!6509 = !DILocation(line: 1375, column: 31, scope: !6500)
!6510 = !DILocation(line: 1375, column: 37, scope: !6500)
!6511 = !DILocation(line: 1375, column: 12, scope: !6500)
!6512 = !DILocation(line: 1375, column: 10, scope: !6500)
!6513 = !DILocation(line: 1376, column: 7, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6482, file: !3, line: 1376, column: 7)
!6515 = !DILocation(line: 1376, column: 13, scope: !6514)
!6516 = !DILocation(line: 1376, column: 10, scope: !6514)
!6517 = !DILocation(line: 1376, column: 7, scope: !6482)
!6518 = !DILocation(line: 1377, column: 4, scope: !6514)
!6519 = distinct !{!6519, !6478, !6520}
!6520 = !DILocation(line: 1378, column: 2, scope: !6429)
!6521 = !DILocation(line: 1380, column: 6, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6429, file: !3, line: 1380, column: 6)
!6523 = !DILocation(line: 1380, column: 6, scope: !6429)
!6524 = !DILocalVariable(name: "newl", scope: !6525, file: !3, line: 1381, type: !119)
!6525 = distinct !DILexicalBlock(scope: !6522, file: !3, line: 1380, column: 9)
!6526 = !DILocation(line: 1381, column: 7, scope: !6525)
!6527 = !DILocation(line: 1381, column: 27, scope: !6525)
!6528 = !DILocation(line: 1381, column: 33, scope: !6525)
!6529 = !DILocation(line: 1381, column: 39, scope: !6525)
!6530 = !DILocation(line: 1381, column: 46, scope: !6525)
!6531 = !DILocation(line: 1381, column: 14, scope: !6525)
!6532 = !DILocalVariable(name: "newc", scope: !6525, file: !3, line: 1382, type: !119)
!6533 = !DILocation(line: 1382, column: 7, scope: !6525)
!6534 = !DILocation(line: 1382, column: 20, scope: !6525)
!6535 = !DILocation(line: 1382, column: 24, scope: !6525)
!6536 = !DILocation(line: 1382, column: 28, scope: !6525)
!6537 = !DILocation(line: 1382, column: 22, scope: !6525)
!6538 = !DILocation(line: 1382, column: 14, scope: !6525)
!6539 = !DILocation(line: 1383, column: 15, scope: !6525)
!6540 = !DILocation(line: 1383, column: 21, scope: !6525)
!6541 = !DILocation(line: 1383, column: 27, scope: !6525)
!6542 = !DILocation(line: 1383, column: 3, scope: !6525)
!6543 = !DILocation(line: 1384, column: 15, scope: !6525)
!6544 = !DILocation(line: 1384, column: 21, scope: !6525)
!6545 = !DILocation(line: 1384, column: 27, scope: !6525)
!6546 = !DILocation(line: 1384, column: 41, scope: !6525)
!6547 = !DILocation(line: 1384, column: 34, scope: !6525)
!6548 = !DILocation(line: 1384, column: 32, scope: !6525)
!6549 = !DILocation(line: 1384, column: 3, scope: !6525)
!6550 = !DILocation(line: 1385, column: 3, scope: !6525)
!6551 = !DILocation(line: 1388, column: 3, scope: !6522)
!6552 = !DILocation(line: 1389, column: 1, scope: !6429)
!6553 = distinct !DISubprogram(name: "txt_sel_to_buf", scope: !3, file: !3, line: 1391, type: !6257, scopeLine: 1392, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!6554 = !DILocalVariable(name: "text", arg: 1, scope: !6553, file: !3, line: 1391, type: !139)
!6555 = !DILocation(line: 1391, column: 28, scope: !6553)
!6556 = !DILocalVariable(name: "buf", scope: !6553, file: !3, line: 1393, type: !133)
!6557 = !DILocation(line: 1393, column: 8, scope: !6553)
!6558 = !DILocalVariable(name: "length", scope: !6553, file: !3, line: 1394, type: !119)
!6559 = !DILocation(line: 1394, column: 6, scope: !6553)
!6560 = !DILocalVariable(name: "tmp", scope: !6553, file: !3, line: 1395, type: !124)
!6561 = !DILocation(line: 1395, column: 12, scope: !6553)
!6562 = !DILocalVariable(name: "linef", scope: !6553, file: !3, line: 1395, type: !124)
!6563 = !DILocation(line: 1395, column: 18, scope: !6553)
!6564 = !DILocalVariable(name: "linel", scope: !6553, file: !3, line: 1395, type: !124)
!6565 = !DILocation(line: 1395, column: 26, scope: !6553)
!6566 = !DILocalVariable(name: "charf", scope: !6553, file: !3, line: 1396, type: !119)
!6567 = !DILocation(line: 1396, column: 6, scope: !6553)
!6568 = !DILocalVariable(name: "charl", scope: !6553, file: !3, line: 1396, type: !119)
!6569 = !DILocation(line: 1396, column: 13, scope: !6553)
!6570 = !DILocation(line: 1398, column: 7, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 1398, column: 6)
!6572 = !DILocation(line: 1398, column: 13, scope: !6571)
!6573 = !DILocation(line: 1398, column: 6, scope: !6553)
!6574 = !DILocation(line: 1398, column: 19, scope: !6571)
!6575 = !DILocation(line: 1399, column: 7, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 1399, column: 6)
!6577 = !DILocation(line: 1399, column: 13, scope: !6576)
!6578 = !DILocation(line: 1399, column: 6, scope: !6553)
!6579 = !DILocation(line: 1399, column: 19, scope: !6576)
!6580 = !DILocation(line: 1401, column: 6, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 1401, column: 6)
!6582 = !DILocation(line: 1401, column: 12, scope: !6581)
!6583 = !DILocation(line: 1401, column: 20, scope: !6581)
!6584 = !DILocation(line: 1401, column: 26, scope: !6581)
!6585 = !DILocation(line: 1401, column: 17, scope: !6581)
!6586 = !DILocation(line: 1401, column: 6, scope: !6553)
!6587 = !DILocation(line: 1402, column: 19, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 1401, column: 32)
!6589 = !DILocation(line: 1402, column: 25, scope: !6588)
!6590 = !DILocation(line: 1402, column: 17, scope: !6588)
!6591 = !DILocation(line: 1402, column: 9, scope: !6588)
!6592 = !DILocation(line: 1404, column: 7, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6588, file: !3, line: 1404, column: 7)
!6594 = !DILocation(line: 1404, column: 13, scope: !6593)
!6595 = !DILocation(line: 1404, column: 20, scope: !6593)
!6596 = !DILocation(line: 1404, column: 26, scope: !6593)
!6597 = !DILocation(line: 1404, column: 18, scope: !6593)
!6598 = !DILocation(line: 1404, column: 7, scope: !6588)
!6599 = !DILocation(line: 1405, column: 12, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 1404, column: 32)
!6601 = !DILocation(line: 1405, column: 18, scope: !6600)
!6602 = !DILocation(line: 1405, column: 10, scope: !6600)
!6603 = !DILocation(line: 1406, column: 12, scope: !6600)
!6604 = !DILocation(line: 1406, column: 18, scope: !6600)
!6605 = !DILocation(line: 1406, column: 10, scope: !6600)
!6606 = !DILocation(line: 1407, column: 3, scope: !6600)
!6607 = !DILocation(line: 1409, column: 12, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 1408, column: 8)
!6609 = !DILocation(line: 1409, column: 18, scope: !6608)
!6610 = !DILocation(line: 1409, column: 10, scope: !6608)
!6611 = !DILocation(line: 1410, column: 12, scope: !6608)
!6612 = !DILocation(line: 1410, column: 18, scope: !6608)
!6613 = !DILocation(line: 1410, column: 10, scope: !6608)
!6614 = !DILocation(line: 1412, column: 2, scope: !6588)
!6615 = !DILocation(line: 1413, column: 24, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 1413, column: 11)
!6617 = !DILocation(line: 1413, column: 30, scope: !6616)
!6618 = !DILocation(line: 1413, column: 36, scope: !6616)
!6619 = !DILocation(line: 1413, column: 42, scope: !6616)
!6620 = !DILocation(line: 1413, column: 11, scope: !6616)
!6621 = !DILocation(line: 1413, column: 48, scope: !6616)
!6622 = !DILocation(line: 1413, column: 11, scope: !6581)
!6623 = !DILocation(line: 1414, column: 11, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6616, file: !3, line: 1413, column: 53)
!6625 = !DILocation(line: 1414, column: 17, scope: !6624)
!6626 = !DILocation(line: 1414, column: 9, scope: !6624)
!6627 = !DILocation(line: 1415, column: 11, scope: !6624)
!6628 = !DILocation(line: 1415, column: 17, scope: !6624)
!6629 = !DILocation(line: 1415, column: 9, scope: !6624)
!6630 = !DILocation(line: 1417, column: 11, scope: !6624)
!6631 = !DILocation(line: 1417, column: 17, scope: !6624)
!6632 = !DILocation(line: 1417, column: 9, scope: !6624)
!6633 = !DILocation(line: 1418, column: 11, scope: !6624)
!6634 = !DILocation(line: 1418, column: 17, scope: !6624)
!6635 = !DILocation(line: 1418, column: 9, scope: !6624)
!6636 = !DILocation(line: 1419, column: 2, scope: !6624)
!6637 = !DILocation(line: 1421, column: 11, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6616, file: !3, line: 1420, column: 7)
!6639 = !DILocation(line: 1421, column: 17, scope: !6638)
!6640 = !DILocation(line: 1421, column: 9, scope: !6638)
!6641 = !DILocation(line: 1422, column: 11, scope: !6638)
!6642 = !DILocation(line: 1422, column: 17, scope: !6638)
!6643 = !DILocation(line: 1422, column: 9, scope: !6638)
!6644 = !DILocation(line: 1424, column: 11, scope: !6638)
!6645 = !DILocation(line: 1424, column: 17, scope: !6638)
!6646 = !DILocation(line: 1424, column: 9, scope: !6638)
!6647 = !DILocation(line: 1425, column: 11, scope: !6638)
!6648 = !DILocation(line: 1425, column: 17, scope: !6638)
!6649 = !DILocation(line: 1425, column: 9, scope: !6638)
!6650 = !DILocation(line: 1428, column: 6, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 1428, column: 6)
!6652 = !DILocation(line: 1428, column: 15, scope: !6651)
!6653 = !DILocation(line: 1428, column: 12, scope: !6651)
!6654 = !DILocation(line: 1428, column: 6, scope: !6553)
!6655 = !DILocation(line: 1429, column: 12, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 1428, column: 22)
!6657 = !DILocation(line: 1429, column: 20, scope: !6656)
!6658 = !DILocation(line: 1429, column: 18, scope: !6656)
!6659 = !DILocation(line: 1429, column: 10, scope: !6656)
!6660 = !DILocation(line: 1431, column: 9, scope: !6656)
!6661 = !DILocation(line: 1431, column: 21, scope: !6656)
!6662 = !DILocation(line: 1431, column: 28, scope: !6656)
!6663 = !DILocation(line: 1431, column: 7, scope: !6656)
!6664 = !DILocation(line: 1433, column: 15, scope: !6656)
!6665 = !DILocation(line: 1433, column: 20, scope: !6656)
!6666 = !DILocation(line: 1433, column: 27, scope: !6656)
!6667 = !DILocation(line: 1433, column: 34, scope: !6656)
!6668 = !DILocation(line: 1433, column: 32, scope: !6656)
!6669 = !DILocation(line: 1433, column: 41, scope: !6656)
!6670 = !DILocation(line: 1433, column: 48, scope: !6656)
!6671 = !DILocation(line: 1433, column: 3, scope: !6656)
!6672 = !DILocation(line: 1434, column: 2, scope: !6656)
!6673 = !DILocation(line: 1436, column: 13, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 1435, column: 7)
!6675 = !DILocation(line: 1436, column: 20, scope: !6674)
!6676 = !DILocation(line: 1436, column: 26, scope: !6674)
!6677 = !DILocation(line: 1436, column: 24, scope: !6674)
!6678 = !DILocation(line: 1436, column: 10, scope: !6674)
!6679 = !DILocation(line: 1437, column: 13, scope: !6674)
!6680 = !DILocation(line: 1437, column: 10, scope: !6674)
!6681 = !DILocation(line: 1438, column: 9, scope: !6674)
!6682 = !DILocation(line: 1440, column: 9, scope: !6674)
!6683 = !DILocation(line: 1440, column: 16, scope: !6674)
!6684 = !DILocation(line: 1440, column: 7, scope: !6674)
!6685 = !DILocation(line: 1441, column: 3, scope: !6674)
!6686 = !DILocation(line: 1441, column: 10, scope: !6674)
!6687 = !DILocation(line: 1441, column: 14, scope: !6674)
!6688 = !DILocation(line: 1441, column: 17, scope: !6674)
!6689 = !DILocation(line: 1441, column: 24, scope: !6674)
!6690 = !DILocation(line: 1441, column: 21, scope: !6674)
!6691 = !DILocation(line: 0, scope: !6674)
!6692 = !DILocation(line: 1442, column: 14, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 1441, column: 31)
!6694 = !DILocation(line: 1442, column: 19, scope: !6693)
!6695 = !DILocation(line: 1442, column: 23, scope: !6693)
!6696 = !DILocation(line: 1442, column: 11, scope: !6693)
!6697 = !DILocation(line: 1443, column: 10, scope: !6693)
!6698 = !DILocation(line: 1443, column: 15, scope: !6693)
!6699 = !DILocation(line: 1443, column: 8, scope: !6693)
!6700 = distinct !{!6700, !6685, !6701}
!6701 = !DILocation(line: 1444, column: 3, scope: !6674)
!6702 = !DILocation(line: 1446, column: 9, scope: !6674)
!6703 = !DILocation(line: 1446, column: 21, scope: !6674)
!6704 = !DILocation(line: 1446, column: 28, scope: !6674)
!6705 = !DILocation(line: 1446, column: 7, scope: !6674)
!6706 = !DILocation(line: 1448, column: 11, scope: !6674)
!6707 = !DILocation(line: 1448, column: 16, scope: !6674)
!6708 = !DILocation(line: 1448, column: 23, scope: !6674)
!6709 = !DILocation(line: 1448, column: 30, scope: !6674)
!6710 = !DILocation(line: 1448, column: 28, scope: !6674)
!6711 = !DILocation(line: 1448, column: 37, scope: !6674)
!6712 = !DILocation(line: 1448, column: 44, scope: !6674)
!6713 = !DILocation(line: 1448, column: 50, scope: !6674)
!6714 = !DILocation(line: 1448, column: 48, scope: !6674)
!6715 = !DILocation(line: 1448, column: 3, scope: !6674)
!6716 = !DILocation(line: 1449, column: 12, scope: !6674)
!6717 = !DILocation(line: 1449, column: 19, scope: !6674)
!6718 = !DILocation(line: 1449, column: 25, scope: !6674)
!6719 = !DILocation(line: 1449, column: 23, scope: !6674)
!6720 = !DILocation(line: 1449, column: 10, scope: !6674)
!6721 = !DILocation(line: 1451, column: 3, scope: !6674)
!6722 = !DILocation(line: 1451, column: 13, scope: !6674)
!6723 = !DILocation(line: 1451, column: 17, scope: !6674)
!6724 = !DILocation(line: 1453, column: 9, scope: !6674)
!6725 = !DILocation(line: 1453, column: 16, scope: !6674)
!6726 = !DILocation(line: 1453, column: 7, scope: !6674)
!6727 = !DILocation(line: 1454, column: 3, scope: !6674)
!6728 = !DILocation(line: 1454, column: 10, scope: !6674)
!6729 = !DILocation(line: 1454, column: 14, scope: !6674)
!6730 = !DILocation(line: 1454, column: 17, scope: !6674)
!6731 = !DILocation(line: 1454, column: 24, scope: !6674)
!6732 = !DILocation(line: 1454, column: 21, scope: !6674)
!6733 = !DILocation(line: 1455, column: 12, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 1454, column: 31)
!6735 = !DILocation(line: 1455, column: 18, scope: !6734)
!6736 = !DILocation(line: 1455, column: 16, scope: !6734)
!6737 = !DILocation(line: 1455, column: 26, scope: !6734)
!6738 = !DILocation(line: 1455, column: 31, scope: !6734)
!6739 = !DILocation(line: 1455, column: 37, scope: !6734)
!6740 = !DILocation(line: 1455, column: 42, scope: !6734)
!6741 = !DILocation(line: 1455, column: 4, scope: !6734)
!6742 = !DILocation(line: 1456, column: 14, scope: !6734)
!6743 = !DILocation(line: 1456, column: 19, scope: !6734)
!6744 = !DILocation(line: 1456, column: 11, scope: !6734)
!6745 = !DILocation(line: 1458, column: 4, scope: !6734)
!6746 = !DILocation(line: 1458, column: 14, scope: !6734)
!6747 = !DILocation(line: 1458, column: 18, scope: !6734)
!6748 = !DILocation(line: 1460, column: 10, scope: !6734)
!6749 = !DILocation(line: 1460, column: 15, scope: !6734)
!6750 = !DILocation(line: 1460, column: 8, scope: !6734)
!6751 = distinct !{!6751, !6727, !6752}
!6752 = !DILocation(line: 1461, column: 3, scope: !6674)
!6753 = !DILocation(line: 1462, column: 11, scope: !6674)
!6754 = !DILocation(line: 1462, column: 17, scope: !6674)
!6755 = !DILocation(line: 1462, column: 15, scope: !6674)
!6756 = !DILocation(line: 1462, column: 25, scope: !6674)
!6757 = !DILocation(line: 1462, column: 32, scope: !6674)
!6758 = !DILocation(line: 1462, column: 38, scope: !6674)
!6759 = !DILocation(line: 1462, column: 3, scope: !6674)
!6760 = !DILocation(line: 1463, column: 13, scope: !6674)
!6761 = !DILocation(line: 1463, column: 10, scope: !6674)
!6762 = !DILocation(line: 1465, column: 3, scope: !6674)
!6763 = !DILocation(line: 1465, column: 7, scope: !6674)
!6764 = !DILocation(line: 1465, column: 15, scope: !6674)
!6765 = !DILocation(line: 1468, column: 9, scope: !6553)
!6766 = !DILocation(line: 1468, column: 2, scope: !6553)
!6767 = !DILocation(line: 1469, column: 1, scope: !6553)
!6768 = distinct !DISubprogram(name: "txt_undo_add_blockop", scope: !3, file: !3, line: 1757, type: !6769, scopeLine: 1758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!6769 = !DISubroutineType(types: !6770)
!6770 = !{null, !139, !119, !304}
!6771 = !DILocalVariable(name: "text", arg: 1, scope: !6768, file: !3, line: 1757, type: !139)
!6772 = !DILocation(line: 1757, column: 40, scope: !6768)
!6773 = !DILocalVariable(name: "op", arg: 2, scope: !6768, file: !3, line: 1757, type: !119)
!6774 = !DILocation(line: 1757, column: 50, scope: !6768)
!6775 = !DILocalVariable(name: "buf", arg: 3, scope: !6768, file: !3, line: 1757, type: !304)
!6776 = !DILocation(line: 1757, column: 66, scope: !6768)
!6777 = !DILocalVariable(name: "length", scope: !6768, file: !3, line: 1759, type: !7)
!6778 = !DILocation(line: 1759, column: 15, scope: !6768)
!6779 = !DILocation(line: 1759, column: 31, scope: !6768)
!6780 = !DILocation(line: 1759, column: 24, scope: !6768)
!6781 = !DILocation(line: 1761, column: 21, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6768, file: !3, line: 1761, column: 6)
!6783 = !DILocation(line: 1761, column: 27, scope: !6782)
!6784 = !DILocation(line: 1761, column: 34, scope: !6782)
!6785 = !DILocation(line: 1761, column: 39, scope: !6782)
!6786 = !DILocation(line: 1761, column: 7, scope: !6782)
!6787 = !DILocation(line: 1761, column: 6, scope: !6768)
!6788 = !DILocation(line: 1762, column: 3, scope: !6782)
!6789 = !DILocation(line: 1764, column: 2, scope: !6768)
!6790 = !DILocation(line: 1764, column: 8, scope: !6768)
!6791 = !DILocation(line: 1764, column: 16, scope: !6768)
!6792 = !DILocation(line: 1765, column: 35, scope: !6768)
!6793 = !DILocation(line: 1765, column: 2, scope: !6768)
!6794 = !DILocation(line: 1765, column: 8, scope: !6768)
!6795 = !DILocation(line: 1765, column: 17, scope: !6768)
!6796 = !DILocation(line: 1765, column: 23, scope: !6768)
!6797 = !DILocation(line: 1765, column: 33, scope: !6768)
!6798 = !DILocation(line: 1766, column: 2, scope: !6768)
!6799 = !DILocation(line: 1766, column: 8, scope: !6768)
!6800 = !DILocation(line: 1766, column: 16, scope: !6768)
!6801 = !DILocation(line: 1768, column: 25, scope: !6768)
!6802 = !DILocation(line: 1768, column: 2, scope: !6768)
!6803 = !DILocation(line: 1770, column: 24, scope: !6768)
!6804 = !DILocation(line: 1770, column: 30, scope: !6768)
!6805 = !DILocation(line: 1770, column: 41, scope: !6768)
!6806 = !DILocation(line: 1770, column: 47, scope: !6768)
!6807 = !DILocation(line: 1770, column: 57, scope: !6768)
!6808 = !DILocation(line: 1770, column: 2, scope: !6768)
!6809 = !DILocation(line: 1772, column: 10, scope: !6768)
!6810 = !DILocation(line: 1772, column: 16, scope: !6768)
!6811 = !DILocation(line: 1772, column: 27, scope: !6768)
!6812 = !DILocation(line: 1772, column: 33, scope: !6768)
!6813 = !DILocation(line: 1772, column: 25, scope: !6768)
!6814 = !DILocation(line: 1772, column: 43, scope: !6768)
!6815 = !DILocation(line: 1772, column: 48, scope: !6768)
!6816 = !DILocation(line: 1772, column: 2, scope: !6768)
!6817 = !DILocation(line: 1773, column: 20, scope: !6768)
!6818 = !DILocation(line: 1773, column: 2, scope: !6768)
!6819 = !DILocation(line: 1773, column: 8, scope: !6768)
!6820 = !DILocation(line: 1773, column: 17, scope: !6768)
!6821 = !DILocation(line: 1775, column: 24, scope: !6768)
!6822 = !DILocation(line: 1775, column: 30, scope: !6768)
!6823 = !DILocation(line: 1775, column: 41, scope: !6768)
!6824 = !DILocation(line: 1775, column: 47, scope: !6768)
!6825 = !DILocation(line: 1775, column: 57, scope: !6768)
!6826 = !DILocation(line: 1775, column: 2, scope: !6768)
!6827 = !DILocation(line: 1776, column: 35, scope: !6768)
!6828 = !DILocation(line: 1776, column: 2, scope: !6768)
!6829 = !DILocation(line: 1776, column: 8, scope: !6768)
!6830 = !DILocation(line: 1776, column: 17, scope: !6768)
!6831 = !DILocation(line: 1776, column: 23, scope: !6768)
!6832 = !DILocation(line: 1776, column: 33, scope: !6768)
!6833 = !DILocation(line: 1778, column: 2, scope: !6768)
!6834 = !DILocation(line: 1778, column: 8, scope: !6768)
!6835 = !DILocation(line: 1778, column: 17, scope: !6768)
!6836 = !DILocation(line: 1778, column: 23, scope: !6768)
!6837 = !DILocation(line: 1778, column: 32, scope: !6768)
!6838 = !DILocation(line: 1778, column: 37, scope: !6768)
!6839 = !DILocation(line: 1779, column: 1, scope: !6768)
!6840 = distinct !DISubprogram(name: "txt_add_raw_char", scope: !3, file: !3, line: 2605, type: !6841, scopeLine: 2606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!6841 = !DISubroutineType(types: !6842)
!6842 = !{!313, !139, !7}
!6843 = !DILocalVariable(name: "text", arg: 1, scope: !6840, file: !3, line: 2605, type: !139)
!6844 = !DILocation(line: 2605, column: 29, scope: !6840)
!6845 = !DILocalVariable(name: "add", arg: 2, scope: !6840, file: !3, line: 2605, type: !7)
!6846 = !DILocation(line: 2605, column: 48, scope: !6840)
!6847 = !DILocation(line: 2607, column: 29, scope: !6840)
!6848 = !DILocation(line: 2607, column: 35, scope: !6840)
!6849 = !DILocation(line: 2607, column: 9, scope: !6840)
!6850 = !DILocation(line: 2607, column: 2, scope: !6840)
!6851 = distinct !DISubprogram(name: "txt_split_curline", scope: !3, file: !3, line: 2355, type: !332, scopeLine: 2356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!6852 = !DILocalVariable(name: "text", arg: 1, scope: !6851, file: !3, line: 2355, type: !139)
!6853 = !DILocation(line: 2355, column: 30, scope: !6851)
!6854 = !DILocalVariable(name: "ins", scope: !6851, file: !3, line: 2357, type: !124)
!6855 = !DILocation(line: 2357, column: 12, scope: !6851)
!6856 = !DILocalVariable(name: "left", scope: !6851, file: !3, line: 2358, type: !133)
!6857 = !DILocation(line: 2358, column: 8, scope: !6851)
!6858 = !DILocalVariable(name: "right", scope: !6851, file: !3, line: 2358, type: !133)
!6859 = !DILocation(line: 2358, column: 15, scope: !6851)
!6860 = !DILocation(line: 2360, column: 7, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 2360, column: 6)
!6862 = !DILocation(line: 2360, column: 13, scope: !6861)
!6863 = !DILocation(line: 2360, column: 6, scope: !6851)
!6864 = !DILocation(line: 2360, column: 19, scope: !6861)
!6865 = !DILocation(line: 2362, column: 17, scope: !6851)
!6866 = !DILocation(line: 2362, column: 2, scope: !6851)
!6867 = !DILocation(line: 2364, column: 7, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 2364, column: 6)
!6869 = !DILocation(line: 2364, column: 6, scope: !6851)
!6870 = !DILocation(line: 2364, column: 36, scope: !6868)
!6871 = !DILocation(line: 2364, column: 16, scope: !6868)
!6872 = !DILocation(line: 2368, column: 9, scope: !6851)
!6873 = !DILocation(line: 2368, column: 21, scope: !6851)
!6874 = !DILocation(line: 2368, column: 27, scope: !6851)
!6875 = !DILocation(line: 2368, column: 32, scope: !6851)
!6876 = !DILocation(line: 2368, column: 7, scope: !6851)
!6877 = !DILocation(line: 2369, column: 6, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 2369, column: 6)
!6879 = !DILocation(line: 2369, column: 12, scope: !6878)
!6880 = !DILocation(line: 2369, column: 6, scope: !6851)
!6881 = !DILocation(line: 2369, column: 25, scope: !6878)
!6882 = !DILocation(line: 2369, column: 31, scope: !6878)
!6883 = !DILocation(line: 2369, column: 37, scope: !6878)
!6884 = !DILocation(line: 2369, column: 43, scope: !6878)
!6885 = !DILocation(line: 2369, column: 49, scope: !6878)
!6886 = !DILocation(line: 2369, column: 55, scope: !6878)
!6887 = !DILocation(line: 2369, column: 18, scope: !6878)
!6888 = !DILocation(line: 2370, column: 2, scope: !6851)
!6889 = !DILocation(line: 2370, column: 7, scope: !6851)
!6890 = !DILocation(line: 2370, column: 13, scope: !6851)
!6891 = !DILocation(line: 2370, column: 19, scope: !6851)
!6892 = !DILocation(line: 2372, column: 10, scope: !6851)
!6893 = !DILocation(line: 2372, column: 22, scope: !6851)
!6894 = !DILocation(line: 2372, column: 28, scope: !6851)
!6895 = !DILocation(line: 2372, column: 34, scope: !6851)
!6896 = !DILocation(line: 2372, column: 40, scope: !6851)
!6897 = !DILocation(line: 2372, column: 46, scope: !6851)
!6898 = !DILocation(line: 2372, column: 38, scope: !6851)
!6899 = !DILocation(line: 2372, column: 51, scope: !6851)
!6900 = !DILocation(line: 2372, column: 8, scope: !6851)
!6901 = !DILocation(line: 2373, column: 9, scope: !6851)
!6902 = !DILocation(line: 2373, column: 16, scope: !6851)
!6903 = !DILocation(line: 2373, column: 22, scope: !6851)
!6904 = !DILocation(line: 2373, column: 28, scope: !6851)
!6905 = !DILocation(line: 2373, column: 35, scope: !6851)
!6906 = !DILocation(line: 2373, column: 41, scope: !6851)
!6907 = !DILocation(line: 2373, column: 33, scope: !6851)
!6908 = !DILocation(line: 2373, column: 47, scope: !6851)
!6909 = !DILocation(line: 2373, column: 53, scope: !6851)
!6910 = !DILocation(line: 2373, column: 59, scope: !6851)
!6911 = !DILocation(line: 2373, column: 65, scope: !6851)
!6912 = !DILocation(line: 2373, column: 71, scope: !6851)
!6913 = !DILocation(line: 2373, column: 63, scope: !6851)
!6914 = !DILocation(line: 2373, column: 76, scope: !6851)
!6915 = !DILocation(line: 2373, column: 2, scope: !6851)
!6916 = !DILocation(line: 2375, column: 2, scope: !6851)
!6917 = !DILocation(line: 2375, column: 12, scope: !6851)
!6918 = !DILocation(line: 2375, column: 18, scope: !6851)
!6919 = !DILocation(line: 2375, column: 24, scope: !6851)
!6920 = !DILocation(line: 2376, column: 6, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 2376, column: 6)
!6922 = !DILocation(line: 2376, column: 12, scope: !6921)
!6923 = !DILocation(line: 2376, column: 18, scope: !6921)
!6924 = !DILocation(line: 2376, column: 6, scope: !6851)
!6925 = !DILocation(line: 2376, column: 26, scope: !6921)
!6926 = !DILocation(line: 2376, column: 36, scope: !6921)
!6927 = !DILocation(line: 2376, column: 42, scope: !6921)
!6928 = !DILocation(line: 2376, column: 48, scope: !6921)
!6929 = !DILocation(line: 2380, column: 8, scope: !6851)
!6930 = !DILocation(line: 2380, column: 6, scope: !6851)
!6931 = !DILocation(line: 2381, column: 14, scope: !6851)
!6932 = !DILocation(line: 2381, column: 2, scope: !6851)
!6933 = !DILocation(line: 2381, column: 7, scope: !6851)
!6934 = !DILocation(line: 2381, column: 12, scope: !6851)
!6935 = !DILocation(line: 2382, column: 2, scope: !6851)
!6936 = !DILocation(line: 2382, column: 7, scope: !6851)
!6937 = !DILocation(line: 2382, column: 14, scope: !6851)
!6938 = !DILocation(line: 2383, column: 13, scope: !6851)
!6939 = !DILocation(line: 2383, column: 19, scope: !6851)
!6940 = !DILocation(line: 2383, column: 2, scope: !6851)
!6941 = !DILocation(line: 2383, column: 7, scope: !6851)
!6942 = !DILocation(line: 2383, column: 11, scope: !6851)
!6943 = !DILocation(line: 2385, column: 21, scope: !6851)
!6944 = !DILocation(line: 2385, column: 2, scope: !6851)
!6945 = !DILocation(line: 2385, column: 8, scope: !6851)
!6946 = !DILocation(line: 2385, column: 14, scope: !6851)
!6947 = !DILocation(line: 2385, column: 19, scope: !6851)
!6948 = !DILocation(line: 2386, column: 2, scope: !6851)
!6949 = !DILocation(line: 2386, column: 8, scope: !6851)
!6950 = !DILocation(line: 2386, column: 14, scope: !6851)
!6951 = !DILocation(line: 2386, column: 21, scope: !6851)
!6952 = !DILocation(line: 2387, column: 20, scope: !6851)
!6953 = !DILocation(line: 2387, column: 26, scope: !6851)
!6954 = !DILocation(line: 2387, column: 32, scope: !6851)
!6955 = !DILocation(line: 2387, column: 38, scope: !6851)
!6956 = !DILocation(line: 2387, column: 44, scope: !6851)
!6957 = !DILocation(line: 2387, column: 36, scope: !6851)
!6958 = !DILocation(line: 2387, column: 2, scope: !6851)
!6959 = !DILocation(line: 2387, column: 8, scope: !6851)
!6960 = !DILocation(line: 2387, column: 14, scope: !6851)
!6961 = !DILocation(line: 2387, column: 18, scope: !6851)
!6962 = !DILocation(line: 2389, column: 24, scope: !6851)
!6963 = !DILocation(line: 2389, column: 30, scope: !6851)
!6964 = !DILocation(line: 2389, column: 37, scope: !6851)
!6965 = !DILocation(line: 2389, column: 43, scope: !6851)
!6966 = !DILocation(line: 2389, column: 49, scope: !6851)
!6967 = !DILocation(line: 2389, column: 2, scope: !6851)
!6968 = !DILocation(line: 2391, column: 2, scope: !6851)
!6969 = !DILocation(line: 2391, column: 8, scope: !6851)
!6970 = !DILocation(line: 2391, column: 13, scope: !6851)
!6971 = !DILocation(line: 2393, column: 17, scope: !6851)
!6972 = !DILocation(line: 2393, column: 2, scope: !6851)
!6973 = !DILocation(line: 2394, column: 17, scope: !6851)
!6974 = !DILocation(line: 2394, column: 2, scope: !6851)
!6975 = !DILocation(line: 2396, column: 14, scope: !6851)
!6976 = !DILocation(line: 2396, column: 2, scope: !6851)
!6977 = !DILocation(line: 2397, column: 1, scope: !6851)
!6978 = distinct !DISubprogram(name: "txt_new_linen", scope: !3, file: !3, line: 742, type: !6979, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!6979 = !DISubroutineType(types: !6980)
!6980 = !{!124, !304, !119}
!6981 = !DILocalVariable(name: "str", arg: 1, scope: !6978, file: !3, line: 742, type: !304)
!6982 = !DILocation(line: 742, column: 44, scope: !6978)
!6983 = !DILocalVariable(name: "n", arg: 2, scope: !6978, file: !3, line: 742, type: !119)
!6984 = !DILocation(line: 742, column: 53, scope: !6978)
!6985 = !DILocalVariable(name: "tmp", scope: !6978, file: !3, line: 744, type: !124)
!6986 = !DILocation(line: 744, column: 12, scope: !6978)
!6987 = !DILocation(line: 746, column: 21, scope: !6978)
!6988 = !DILocation(line: 746, column: 8, scope: !6978)
!6989 = !DILocation(line: 746, column: 6, scope: !6978)
!6990 = !DILocation(line: 747, column: 14, scope: !6978)
!6991 = !DILocation(line: 747, column: 26, scope: !6978)
!6992 = !DILocation(line: 747, column: 28, scope: !6978)
!6993 = !DILocation(line: 747, column: 2, scope: !6978)
!6994 = !DILocation(line: 747, column: 7, scope: !6978)
!6995 = !DILocation(line: 747, column: 12, scope: !6978)
!6996 = !DILocation(line: 748, column: 2, scope: !6978)
!6997 = !DILocation(line: 748, column: 7, scope: !6978)
!6998 = !DILocation(line: 748, column: 14, scope: !6978)
!6999 = !DILocation(line: 750, column: 14, scope: !6978)
!7000 = !DILocation(line: 750, column: 19, scope: !6978)
!7001 = !DILocation(line: 750, column: 26, scope: !6978)
!7002 = !DILocation(line: 750, column: 25, scope: !6978)
!7003 = !DILocation(line: 750, column: 33, scope: !6978)
!7004 = !DILocation(line: 750, column: 43, scope: !6978)
!7005 = !DILocation(line: 750, column: 45, scope: !6978)
!7006 = !DILocation(line: 750, column: 2, scope: !6978)
!7007 = !DILocation(line: 752, column: 20, scope: !6978)
!7008 = !DILocation(line: 752, column: 25, scope: !6978)
!7009 = !DILocation(line: 752, column: 13, scope: !6978)
!7010 = !DILocation(line: 752, column: 2, scope: !6978)
!7011 = !DILocation(line: 752, column: 7, scope: !6978)
!7012 = !DILocation(line: 752, column: 11, scope: !6978)
!7013 = !DILocation(line: 753, column: 14, scope: !6978)
!7014 = !DILocation(line: 753, column: 19, scope: !6978)
!7015 = !DILocation(line: 753, column: 24, scope: !6978)
!7016 = !DILocation(line: 753, column: 2, scope: !6978)
!7017 = !DILocation(line: 753, column: 7, scope: !6978)
!7018 = !DILocation(line: 753, column: 12, scope: !6978)
!7019 = !DILocation(line: 755, column: 9, scope: !6978)
!7020 = !DILocation(line: 755, column: 2, scope: !6978)
!7021 = distinct !DISubprogram(name: "txt_undo_add_op", scope: !3, file: !3, line: 1782, type: !7022, scopeLine: 1783, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!7022 = !DISubroutineType(types: !7023)
!7023 = !{null, !139, !119}
!7024 = !DILocalVariable(name: "text", arg: 1, scope: !7021, file: !3, line: 1782, type: !139)
!7025 = !DILocation(line: 1782, column: 28, scope: !7021)
!7026 = !DILocalVariable(name: "op", arg: 2, scope: !7021, file: !3, line: 1782, type: !119)
!7027 = !DILocation(line: 1782, column: 38, scope: !7021)
!7028 = !DILocation(line: 1784, column: 21, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7021, file: !3, line: 1784, column: 6)
!7030 = !DILocation(line: 1784, column: 7, scope: !7029)
!7031 = !DILocation(line: 1784, column: 6, scope: !7021)
!7032 = !DILocation(line: 1785, column: 3, scope: !7029)
!7033 = !DILocation(line: 1787, column: 2, scope: !7021)
!7034 = !DILocation(line: 1787, column: 8, scope: !7021)
!7035 = !DILocation(line: 1787, column: 16, scope: !7021)
!7036 = !DILocation(line: 1788, column: 35, scope: !7021)
!7037 = !DILocation(line: 1788, column: 2, scope: !7021)
!7038 = !DILocation(line: 1788, column: 8, scope: !7021)
!7039 = !DILocation(line: 1788, column: 17, scope: !7021)
!7040 = !DILocation(line: 1788, column: 23, scope: !7021)
!7041 = !DILocation(line: 1788, column: 33, scope: !7021)
!7042 = !DILocation(line: 1790, column: 2, scope: !7021)
!7043 = !DILocation(line: 1790, column: 8, scope: !7021)
!7044 = !DILocation(line: 1790, column: 16, scope: !7021)
!7045 = !DILocation(line: 1792, column: 25, scope: !7021)
!7046 = !DILocation(line: 1792, column: 2, scope: !7021)
!7047 = !DILocation(line: 1794, column: 35, scope: !7021)
!7048 = !DILocation(line: 1794, column: 2, scope: !7021)
!7049 = !DILocation(line: 1794, column: 8, scope: !7021)
!7050 = !DILocation(line: 1794, column: 17, scope: !7021)
!7051 = !DILocation(line: 1794, column: 23, scope: !7021)
!7052 = !DILocation(line: 1794, column: 33, scope: !7021)
!7053 = !DILocation(line: 1795, column: 2, scope: !7021)
!7054 = !DILocation(line: 1795, column: 8, scope: !7021)
!7055 = !DILocation(line: 1795, column: 17, scope: !7021)
!7056 = !DILocation(line: 1795, column: 23, scope: !7021)
!7057 = !DILocation(line: 1795, column: 32, scope: !7021)
!7058 = !DILocation(line: 1795, column: 37, scope: !7021)
!7059 = !DILocation(line: 1796, column: 1, scope: !7021)
!7060 = distinct !DISubprogram(name: "max_undo_test", scope: !3, file: !3, line: 1527, type: !7061, scopeLine: 1528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!7061 = !DISubroutineType(types: !7062)
!7062 = !{!313, !139, !119}
!7063 = !DILocalVariable(name: "text", arg: 1, scope: !7060, file: !3, line: 1527, type: !139)
!7064 = !DILocation(line: 1527, column: 33, scope: !7060)
!7065 = !DILocalVariable(name: "x", arg: 2, scope: !7060, file: !3, line: 1527, type: !119)
!7066 = !DILocation(line: 1527, column: 43, scope: !7060)
!7067 = !DILocation(line: 1529, column: 2, scope: !7060)
!7068 = !DILocation(line: 1529, column: 9, scope: !7060)
!7069 = !DILocation(line: 1529, column: 15, scope: !7060)
!7070 = !DILocation(line: 1529, column: 26, scope: !7060)
!7071 = !DILocation(line: 1529, column: 24, scope: !7060)
!7072 = !DILocation(line: 1529, column: 31, scope: !7060)
!7073 = !DILocation(line: 1529, column: 37, scope: !7060)
!7074 = !DILocation(line: 1529, column: 28, scope: !7060)
!7075 = !DILocation(line: 1530, column: 7, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7077, file: !3, line: 1530, column: 7)
!7077 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 1529, column: 47)
!7078 = !DILocation(line: 1530, column: 13, scope: !7076)
!7079 = !DILocation(line: 1530, column: 22, scope: !7076)
!7080 = !DILocation(line: 1530, column: 26, scope: !7076)
!7081 = !DILocation(line: 1530, column: 7, scope: !7077)
!7082 = !DILocation(line: 1532, column: 4, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 1530, column: 42)
!7084 = !DILocation(line: 1532, column: 14, scope: !7083)
!7085 = !DILocation(line: 1532, column: 20, scope: !7083)
!7086 = !DILocation(line: 1533, column: 19, scope: !7083)
!7087 = !DILocation(line: 1533, column: 4, scope: !7083)
!7088 = !DILocation(line: 1534, column: 4, scope: !7083)
!7089 = !DILocalVariable(name: "tmp", scope: !7090, file: !3, line: 1537, type: !138)
!7090 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 1536, column: 8)
!7091 = !DILocation(line: 1537, column: 10, scope: !7090)
!7092 = !DILocation(line: 1537, column: 16, scope: !7090)
!7093 = !DILocation(line: 1537, column: 22, scope: !7090)
!7094 = !DILocation(line: 1538, column: 21, scope: !7090)
!7095 = !DILocation(line: 1538, column: 33, scope: !7090)
!7096 = !DILocation(line: 1538, column: 39, scope: !7090)
!7097 = !DILocation(line: 1538, column: 48, scope: !7090)
!7098 = !DILocation(line: 1538, column: 4, scope: !7090)
!7099 = !DILocation(line: 1538, column: 10, scope: !7090)
!7100 = !DILocation(line: 1538, column: 19, scope: !7090)
!7101 = !DILocation(line: 1539, column: 11, scope: !7090)
!7102 = !DILocation(line: 1539, column: 17, scope: !7090)
!7103 = !DILocation(line: 1539, column: 27, scope: !7090)
!7104 = !DILocation(line: 1539, column: 32, scope: !7090)
!7105 = !DILocation(line: 1539, column: 38, scope: !7090)
!7106 = !DILocation(line: 1539, column: 4, scope: !7090)
!7107 = !DILocation(line: 1540, column: 4, scope: !7090)
!7108 = !DILocation(line: 1540, column: 10, scope: !7090)
!7109 = !DILocation(line: 1540, column: 19, scope: !7090)
!7110 = !DILocation(line: 1541, column: 4, scope: !7090)
!7111 = !DILocation(line: 1541, column: 14, scope: !7090)
!7112 = distinct !{!7112, !7067, !7113}
!7113 = !DILocation(line: 1543, column: 2, scope: !7060)
!7114 = !DILocation(line: 1545, column: 2, scope: !7060)
!7115 = !DILocation(line: 1546, column: 1, scope: !7060)
!7116 = distinct !DISubprogram(name: "txt_undo_store_cursors", scope: !3, file: !3, line: 1750, type: !332, scopeLine: 1751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!7117 = !DILocalVariable(name: "text", arg: 1, scope: !7116, file: !3, line: 1750, type: !139)
!7118 = !DILocation(line: 1750, column: 42, scope: !7116)
!7119 = !DILocation(line: 1752, column: 21, scope: !7116)
!7120 = !DILocation(line: 1752, column: 2, scope: !7116)
!7121 = !DILocation(line: 1753, column: 21, scope: !7116)
!7122 = !DILocation(line: 1753, column: 2, scope: !7116)
!7123 = !DILocation(line: 1754, column: 1, scope: !7116)
!7124 = distinct !DISubprogram(name: "txt_do_undo", scope: !3, file: !3, line: 1987, type: !332, scopeLine: 1988, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!7125 = !DILocalVariable(name: "text", arg: 1, scope: !7124, file: !3, line: 1987, type: !139)
!7126 = !DILocation(line: 1987, column: 24, scope: !7124)
!7127 = !DILocalVariable(name: "op", scope: !7124, file: !3, line: 1989, type: !119)
!7128 = !DILocation(line: 1989, column: 6, scope: !7124)
!7129 = !DILocation(line: 1989, column: 11, scope: !7124)
!7130 = !DILocation(line: 1989, column: 17, scope: !7124)
!7131 = !DILocation(line: 1989, column: 26, scope: !7124)
!7132 = !DILocation(line: 1989, column: 32, scope: !7124)
!7133 = !DILocalVariable(name: "prev_flags", scope: !7124, file: !3, line: 1990, type: !119)
!7134 = !DILocation(line: 1990, column: 6, scope: !7124)
!7135 = !DILocalVariable(name: "linep", scope: !7124, file: !3, line: 1991, type: !7)
!7136 = !DILocation(line: 1991, column: 15, scope: !7124)
!7137 = !DILocalVariable(name: "i", scope: !7124, file: !3, line: 1991, type: !7)
!7138 = !DILocation(line: 1991, column: 22, scope: !7124)
!7139 = !DILocalVariable(name: "uchar", scope: !7124, file: !3, line: 1992, type: !7)
!7140 = !DILocation(line: 1992, column: 15, scope: !7124)
!7141 = !DILocalVariable(name: "curln", scope: !7124, file: !3, line: 1993, type: !7)
!7142 = !DILocation(line: 1993, column: 15, scope: !7124)
!7143 = !DILocalVariable(name: "selln", scope: !7124, file: !3, line: 1993, type: !7)
!7144 = !DILocation(line: 1993, column: 22, scope: !7124)
!7145 = !DILocalVariable(name: "curc", scope: !7124, file: !3, line: 1994, type: !732)
!7146 = !DILocation(line: 1994, column: 17, scope: !7124)
!7147 = !DILocalVariable(name: "selc", scope: !7124, file: !3, line: 1994, type: !732)
!7148 = !DILocation(line: 1994, column: 23, scope: !7124)
!7149 = !DILocalVariable(name: "charp", scope: !7124, file: !3, line: 1995, type: !732)
!7150 = !DILocation(line: 1995, column: 17, scope: !7124)
!7151 = !DILocalVariable(name: "buf", scope: !7124, file: !3, line: 1996, type: !133)
!7152 = !DILocation(line: 1996, column: 8, scope: !7124)
!7153 = !DILocation(line: 1998, column: 6, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7124, file: !3, line: 1998, column: 6)
!7155 = !DILocation(line: 1998, column: 12, scope: !7154)
!7156 = !DILocation(line: 1998, column: 21, scope: !7154)
!7157 = !DILocation(line: 1998, column: 6, scope: !7124)
!7158 = !DILocation(line: 1999, column: 3, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 1998, column: 26)
!7160 = !DILocation(line: 2002, column: 2, scope: !7124)
!7161 = !DILocation(line: 2002, column: 8, scope: !7124)
!7162 = !DILocation(line: 2002, column: 16, scope: !7124)
!7163 = !DILocation(line: 2004, column: 10, scope: !7124)
!7164 = !DILocation(line: 2006, column: 10, scope: !7124)
!7165 = !DILocation(line: 2006, column: 2, scope: !7124)
!7166 = !DILocation(line: 2011, column: 22, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7124, file: !3, line: 2006, column: 14)
!7168 = !DILocation(line: 2011, column: 25, scope: !7167)
!7169 = !DILocation(line: 2011, column: 41, scope: !7167)
!7170 = !DILocation(line: 2011, column: 4, scope: !7167)
!7171 = !DILocation(line: 2011, column: 10, scope: !7167)
!7172 = !DILocation(line: 2011, column: 19, scope: !7167)
!7173 = !DILocation(line: 2014, column: 22, scope: !7167)
!7174 = !DILocation(line: 2014, column: 28, scope: !7167)
!7175 = !DILocation(line: 2014, column: 39, scope: !7167)
!7176 = !DILocation(line: 2014, column: 45, scope: !7167)
!7177 = !DILocation(line: 2014, column: 4, scope: !7167)
!7178 = !DILocation(line: 2015, column: 16, scope: !7167)
!7179 = !DILocation(line: 2015, column: 22, scope: !7167)
!7180 = !DILocation(line: 2015, column: 29, scope: !7167)
!7181 = !DILocation(line: 2015, column: 4, scope: !7167)
!7182 = !DILocation(line: 2016, column: 16, scope: !7167)
!7183 = !DILocation(line: 2016, column: 22, scope: !7167)
!7184 = !DILocation(line: 2016, column: 29, scope: !7167)
!7185 = !DILocation(line: 2016, column: 4, scope: !7167)
!7186 = !DILocation(line: 2018, column: 20, scope: !7167)
!7187 = !DILocation(line: 2018, column: 4, scope: !7167)
!7188 = !DILocation(line: 2020, column: 4, scope: !7167)
!7189 = !DILocation(line: 2020, column: 10, scope: !7167)
!7190 = !DILocation(line: 2020, column: 18, scope: !7167)
!7191 = !DILocation(line: 2021, column: 4, scope: !7167)
!7192 = !DILocation(line: 2027, column: 12, scope: !7167)
!7193 = !DILocation(line: 2027, column: 15, scope: !7167)
!7194 = !DILocation(line: 2027, column: 27, scope: !7167)
!7195 = !DILocation(line: 2027, column: 10, scope: !7167)
!7196 = !DILocation(line: 2028, column: 34, scope: !7167)
!7197 = !DILocation(line: 2028, column: 40, scope: !7167)
!7198 = !DILocation(line: 2028, column: 51, scope: !7167)
!7199 = !DILocation(line: 2028, column: 57, scope: !7167)
!7200 = !DILocation(line: 2028, column: 67, scope: !7167)
!7201 = !DILocation(line: 2028, column: 12, scope: !7167)
!7202 = !DILocation(line: 2028, column: 10, scope: !7167)
!7203 = !DILocation(line: 2031, column: 22, scope: !7167)
!7204 = !DILocation(line: 2031, column: 28, scope: !7167)
!7205 = !DILocation(line: 2031, column: 39, scope: !7167)
!7206 = !DILocation(line: 2031, column: 45, scope: !7167)
!7207 = !DILocation(line: 2031, column: 4, scope: !7167)
!7208 = !DILocation(line: 2032, column: 16, scope: !7167)
!7209 = !DILocation(line: 2032, column: 22, scope: !7167)
!7210 = !DILocation(line: 2032, column: 29, scope: !7167)
!7211 = !DILocation(line: 2032, column: 4, scope: !7167)
!7212 = !DILocation(line: 2033, column: 16, scope: !7167)
!7213 = !DILocation(line: 2033, column: 22, scope: !7167)
!7214 = !DILocation(line: 2033, column: 29, scope: !7167)
!7215 = !DILocation(line: 2033, column: 4, scope: !7167)
!7216 = !DILocation(line: 2035, column: 17, scope: !7167)
!7217 = !DILocation(line: 2035, column: 23, scope: !7167)
!7218 = !DILocation(line: 2035, column: 4, scope: !7167)
!7219 = !DILocation(line: 2037, column: 4, scope: !7167)
!7220 = !DILocation(line: 2037, column: 10, scope: !7167)
!7221 = !DILocation(line: 2037, column: 18, scope: !7167)
!7222 = !DILocation(line: 2038, column: 4, scope: !7167)
!7223 = !DILocation(line: 2044, column: 12, scope: !7167)
!7224 = !DILocation(line: 2044, column: 15, scope: !7167)
!7225 = !DILocation(line: 2044, column: 28, scope: !7167)
!7226 = !DILocation(line: 2044, column: 10, scope: !7167)
!7227 = !DILocation(line: 2045, column: 34, scope: !7167)
!7228 = !DILocation(line: 2045, column: 40, scope: !7167)
!7229 = !DILocation(line: 2045, column: 51, scope: !7167)
!7230 = !DILocation(line: 2045, column: 57, scope: !7167)
!7231 = !DILocation(line: 2045, column: 67, scope: !7167)
!7232 = !DILocation(line: 2045, column: 12, scope: !7167)
!7233 = !DILocation(line: 2045, column: 10, scope: !7167)
!7234 = !DILocation(line: 2048, column: 22, scope: !7167)
!7235 = !DILocation(line: 2048, column: 28, scope: !7167)
!7236 = !DILocation(line: 2048, column: 39, scope: !7167)
!7237 = !DILocation(line: 2048, column: 45, scope: !7167)
!7238 = !DILocation(line: 2048, column: 4, scope: !7167)
!7239 = !DILocation(line: 2049, column: 16, scope: !7167)
!7240 = !DILocation(line: 2049, column: 22, scope: !7167)
!7241 = !DILocation(line: 2049, column: 29, scope: !7167)
!7242 = !DILocation(line: 2049, column: 4, scope: !7167)
!7243 = !DILocation(line: 2050, column: 16, scope: !7167)
!7244 = !DILocation(line: 2050, column: 22, scope: !7167)
!7245 = !DILocation(line: 2050, column: 29, scope: !7167)
!7246 = !DILocation(line: 2050, column: 4, scope: !7167)
!7247 = !DILocation(line: 2052, column: 17, scope: !7167)
!7248 = !DILocation(line: 2052, column: 23, scope: !7167)
!7249 = !DILocation(line: 2052, column: 4, scope: !7167)
!7250 = !DILocation(line: 2054, column: 18, scope: !7167)
!7251 = !DILocation(line: 2054, column: 4, scope: !7167)
!7252 = !DILocation(line: 2056, column: 4, scope: !7167)
!7253 = !DILocation(line: 2056, column: 10, scope: !7167)
!7254 = !DILocation(line: 2056, column: 18, scope: !7167)
!7255 = !DILocation(line: 2057, column: 4, scope: !7167)
!7256 = !DILocation(line: 2061, column: 33, scope: !7167)
!7257 = !DILocation(line: 2061, column: 39, scope: !7167)
!7258 = !DILocation(line: 2061, column: 50, scope: !7167)
!7259 = !DILocation(line: 2061, column: 56, scope: !7167)
!7260 = !DILocation(line: 2061, column: 12, scope: !7167)
!7261 = !DILocation(line: 2061, column: 10, scope: !7167)
!7262 = !DILocation(line: 2063, column: 10, scope: !7167)
!7263 = !DILocation(line: 2063, column: 22, scope: !7167)
!7264 = !DILocation(line: 2063, column: 28, scope: !7167)
!7265 = !DILocation(line: 2063, column: 8, scope: !7167)
!7266 = !DILocation(line: 2064, column: 11, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 2064, column: 4)
!7268 = !DILocation(line: 2064, column: 9, scope: !7267)
!7269 = !DILocation(line: 2064, column: 16, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7267, file: !3, line: 2064, column: 4)
!7271 = !DILocation(line: 2064, column: 20, scope: !7270)
!7272 = !DILocation(line: 2064, column: 18, scope: !7270)
!7273 = !DILocation(line: 2064, column: 4, scope: !7267)
!7274 = !DILocation(line: 2065, column: 28, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7270, file: !3, line: 2064, column: 32)
!7276 = !DILocation(line: 2065, column: 34, scope: !7275)
!7277 = !DILocation(line: 2065, column: 43, scope: !7275)
!7278 = !DILocation(line: 2065, column: 49, scope: !7275)
!7279 = !DILocation(line: 2065, column: 5, scope: !7275)
!7280 = !DILocation(line: 2065, column: 10, scope: !7275)
!7281 = !DILocation(line: 2065, column: 16, scope: !7275)
!7282 = !DILocation(line: 2065, column: 23, scope: !7275)
!7283 = !DILocation(line: 2065, column: 21, scope: !7275)
!7284 = !DILocation(line: 2065, column: 26, scope: !7275)
!7285 = !DILocation(line: 2066, column: 5, scope: !7275)
!7286 = !DILocation(line: 2066, column: 11, scope: !7275)
!7287 = !DILocation(line: 2066, column: 19, scope: !7275)
!7288 = !DILocation(line: 2067, column: 4, scope: !7275)
!7289 = !DILocation(line: 2064, column: 28, scope: !7270)
!7290 = !DILocation(line: 2064, column: 4, scope: !7270)
!7291 = distinct !{!7291, !7273, !7292}
!7292 = !DILocation(line: 2067, column: 4, scope: !7267)
!7293 = !DILocation(line: 2068, column: 4, scope: !7167)
!7294 = !DILocation(line: 2068, column: 8, scope: !7167)
!7295 = !DILocation(line: 2068, column: 11, scope: !7167)
!7296 = !DILocation(line: 2071, column: 4, scope: !7167)
!7297 = !DILocation(line: 2071, column: 10, scope: !7167)
!7298 = !DILocation(line: 2071, column: 19, scope: !7167)
!7299 = !DILocation(line: 2074, column: 26, scope: !7167)
!7300 = !DILocation(line: 2074, column: 32, scope: !7167)
!7301 = !DILocation(line: 2074, column: 43, scope: !7167)
!7302 = !DILocation(line: 2074, column: 49, scope: !7167)
!7303 = !DILocation(line: 2074, column: 4, scope: !7167)
!7304 = !DILocation(line: 2077, column: 16, scope: !7167)
!7305 = !DILocation(line: 2077, column: 22, scope: !7167)
!7306 = !DILocation(line: 2077, column: 29, scope: !7167)
!7307 = !DILocation(line: 2077, column: 4, scope: !7167)
!7308 = !DILocation(line: 2079, column: 19, scope: !7167)
!7309 = !DILocation(line: 2079, column: 25, scope: !7167)
!7310 = !DILocation(line: 2079, column: 4, scope: !7167)
!7311 = !DILocation(line: 2080, column: 4, scope: !7167)
!7312 = !DILocation(line: 2080, column: 14, scope: !7167)
!7313 = !DILocation(line: 2083, column: 16, scope: !7167)
!7314 = !DILocation(line: 2083, column: 22, scope: !7167)
!7315 = !DILocation(line: 2083, column: 29, scope: !7167)
!7316 = !DILocation(line: 2083, column: 4, scope: !7167)
!7317 = !DILocation(line: 2084, column: 16, scope: !7167)
!7318 = !DILocation(line: 2084, column: 22, scope: !7167)
!7319 = !DILocation(line: 2084, column: 29, scope: !7167)
!7320 = !DILocation(line: 2084, column: 4, scope: !7167)
!7321 = !DILocation(line: 2086, column: 4, scope: !7167)
!7322 = !DILocation(line: 2086, column: 10, scope: !7167)
!7323 = !DILocation(line: 2086, column: 18, scope: !7167)
!7324 = !DILocation(line: 2088, column: 4, scope: !7167)
!7325 = !DILocation(line: 2092, column: 33, scope: !7167)
!7326 = !DILocation(line: 2092, column: 39, scope: !7167)
!7327 = !DILocation(line: 2092, column: 50, scope: !7167)
!7328 = !DILocation(line: 2092, column: 56, scope: !7167)
!7329 = !DILocation(line: 2092, column: 12, scope: !7167)
!7330 = !DILocation(line: 2092, column: 10, scope: !7167)
!7331 = !DILocation(line: 2095, column: 10, scope: !7167)
!7332 = !DILocation(line: 2095, column: 22, scope: !7167)
!7333 = !DILocation(line: 2095, column: 28, scope: !7167)
!7334 = !DILocation(line: 2095, column: 8, scope: !7167)
!7335 = !DILocation(line: 2096, column: 11, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 2096, column: 4)
!7337 = !DILocation(line: 2096, column: 9, scope: !7336)
!7338 = !DILocation(line: 2096, column: 16, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 2096, column: 4)
!7340 = !DILocation(line: 2096, column: 20, scope: !7339)
!7341 = !DILocation(line: 2096, column: 18, scope: !7339)
!7342 = !DILocation(line: 2096, column: 4, scope: !7336)
!7343 = !DILocation(line: 2097, column: 28, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7339, file: !3, line: 2096, column: 32)
!7345 = !DILocation(line: 2097, column: 34, scope: !7344)
!7346 = !DILocation(line: 2097, column: 43, scope: !7344)
!7347 = !DILocation(line: 2097, column: 49, scope: !7344)
!7348 = !DILocation(line: 2097, column: 5, scope: !7344)
!7349 = !DILocation(line: 2097, column: 10, scope: !7344)
!7350 = !DILocation(line: 2097, column: 16, scope: !7344)
!7351 = !DILocation(line: 2097, column: 23, scope: !7344)
!7352 = !DILocation(line: 2097, column: 21, scope: !7344)
!7353 = !DILocation(line: 2097, column: 26, scope: !7344)
!7354 = !DILocation(line: 2098, column: 5, scope: !7344)
!7355 = !DILocation(line: 2098, column: 11, scope: !7344)
!7356 = !DILocation(line: 2098, column: 19, scope: !7344)
!7357 = !DILocation(line: 2099, column: 4, scope: !7344)
!7358 = !DILocation(line: 2096, column: 28, scope: !7339)
!7359 = !DILocation(line: 2096, column: 4, scope: !7339)
!7360 = distinct !{!7360, !7342, !7361}
!7361 = !DILocation(line: 2099, column: 4, scope: !7336)
!7362 = !DILocation(line: 2100, column: 4, scope: !7167)
!7363 = !DILocation(line: 2100, column: 8, scope: !7167)
!7364 = !DILocation(line: 2100, column: 11, scope: !7167)
!7365 = !DILocation(line: 2101, column: 28, scope: !7167)
!7366 = !DILocation(line: 2101, column: 12, scope: !7167)
!7367 = !DILocation(line: 2101, column: 10, scope: !7167)
!7368 = !DILocation(line: 2102, column: 4, scope: !7167)
!7369 = !DILocation(line: 2102, column: 14, scope: !7167)
!7370 = !DILocation(line: 2105, column: 4, scope: !7167)
!7371 = !DILocation(line: 2105, column: 10, scope: !7167)
!7372 = !DILocation(line: 2105, column: 19, scope: !7167)
!7373 = !DILocation(line: 2108, column: 26, scope: !7167)
!7374 = !DILocation(line: 2108, column: 32, scope: !7167)
!7375 = !DILocation(line: 2108, column: 43, scope: !7167)
!7376 = !DILocation(line: 2108, column: 49, scope: !7167)
!7377 = !DILocation(line: 2108, column: 4, scope: !7167)
!7378 = !DILocation(line: 2110, column: 16, scope: !7167)
!7379 = !DILocation(line: 2110, column: 22, scope: !7167)
!7380 = !DILocation(line: 2110, column: 29, scope: !7167)
!7381 = !DILocation(line: 2110, column: 4, scope: !7167)
!7382 = !DILocation(line: 2111, column: 16, scope: !7167)
!7383 = !DILocation(line: 2111, column: 22, scope: !7167)
!7384 = !DILocation(line: 2111, column: 29, scope: !7167)
!7385 = !DILocation(line: 2111, column: 4, scope: !7167)
!7386 = !DILocation(line: 2113, column: 9, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 2113, column: 8)
!7388 = !DILocation(line: 2113, column: 18, scope: !7387)
!7389 = !DILocation(line: 2113, column: 15, scope: !7387)
!7390 = !DILocation(line: 2113, column: 25, scope: !7387)
!7391 = !DILocation(line: 2113, column: 29, scope: !7387)
!7392 = !DILocation(line: 2113, column: 37, scope: !7387)
!7393 = !DILocation(line: 2113, column: 34, scope: !7387)
!7394 = !DILocation(line: 2113, column: 8, scope: !7167)
!7395 = !DILocation(line: 2115, column: 18, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7387, file: !3, line: 2113, column: 44)
!7397 = !DILocation(line: 2115, column: 24, scope: !7396)
!7398 = !DILocation(line: 2115, column: 16, scope: !7396)
!7399 = !DILocation(line: 2116, column: 5, scope: !7396)
!7400 = !DILocation(line: 2116, column: 11, scope: !7396)
!7401 = !DILocation(line: 2116, column: 17, scope: !7396)
!7402 = !DILocation(line: 2118, column: 12, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7396, file: !3, line: 2118, column: 5)
!7404 = !DILocation(line: 2118, column: 10, scope: !7403)
!7405 = !DILocation(line: 2118, column: 17, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7403, file: !3, line: 2118, column: 5)
!7407 = !DILocation(line: 2118, column: 21, scope: !7406)
!7408 = !DILocation(line: 2118, column: 19, scope: !7406)
!7409 = !DILocation(line: 2118, column: 5, scope: !7403)
!7410 = !DILocation(line: 2119, column: 21, scope: !7406)
!7411 = !DILocation(line: 2119, column: 6, scope: !7406)
!7412 = !DILocation(line: 2118, column: 29, scope: !7406)
!7413 = !DILocation(line: 2118, column: 5, scope: !7406)
!7414 = distinct !{!7414, !7409, !7415}
!7415 = !DILocation(line: 2119, column: 28, scope: !7403)
!7416 = !DILocation(line: 2121, column: 19, scope: !7396)
!7417 = !DILocation(line: 2121, column: 5, scope: !7396)
!7418 = !DILocation(line: 2121, column: 11, scope: !7396)
!7419 = !DILocation(line: 2121, column: 17, scope: !7396)
!7420 = !DILocation(line: 2122, column: 4, scope: !7396)
!7421 = !DILocation(line: 2124, column: 24, scope: !7167)
!7422 = !DILocation(line: 2124, column: 4, scope: !7167)
!7423 = !DILocation(line: 2126, column: 4, scope: !7167)
!7424 = !DILocation(line: 2126, column: 10, scope: !7167)
!7425 = !DILocation(line: 2126, column: 18, scope: !7167)
!7426 = !DILocation(line: 2127, column: 4, scope: !7167)
!7427 = !DILocation(line: 2136, column: 26, scope: !7167)
!7428 = !DILocation(line: 2136, column: 32, scope: !7167)
!7429 = !DILocation(line: 2136, column: 43, scope: !7167)
!7430 = !DILocation(line: 2136, column: 49, scope: !7167)
!7431 = !DILocation(line: 2136, column: 4, scope: !7167)
!7432 = !DILocation(line: 2137, column: 16, scope: !7167)
!7433 = !DILocation(line: 2137, column: 22, scope: !7167)
!7434 = !DILocation(line: 2137, column: 29, scope: !7167)
!7435 = !DILocation(line: 2137, column: 4, scope: !7167)
!7436 = !DILocation(line: 2138, column: 16, scope: !7167)
!7437 = !DILocation(line: 2138, column: 22, scope: !7167)
!7438 = !DILocation(line: 2138, column: 29, scope: !7167)
!7439 = !DILocation(line: 2138, column: 4, scope: !7167)
!7440 = !DILocation(line: 2140, column: 8, scope: !7441)
!7441 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 2140, column: 8)
!7442 = !DILocation(line: 2140, column: 11, scope: !7441)
!7443 = !DILocation(line: 2140, column: 8, scope: !7167)
!7444 = !DILocation(line: 2141, column: 18, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7441, file: !3, line: 2140, column: 27)
!7446 = !DILocation(line: 2141, column: 5, scope: !7445)
!7447 = !DILocation(line: 2142, column: 4, scope: !7445)
!7448 = !DILocation(line: 2143, column: 13, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7441, file: !3, line: 2143, column: 13)
!7450 = !DILocation(line: 2143, column: 16, scope: !7449)
!7451 = !DILocation(line: 2143, column: 13, scope: !7441)
!7452 = !DILocation(line: 2144, column: 16, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7449, file: !3, line: 2143, column: 34)
!7454 = !DILocation(line: 2144, column: 5, scope: !7453)
!7455 = !DILocation(line: 2145, column: 4, scope: !7453)
!7456 = !DILocation(line: 2146, column: 13, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7449, file: !3, line: 2146, column: 13)
!7458 = !DILocation(line: 2146, column: 16, scope: !7457)
!7459 = !DILocation(line: 2146, column: 13, scope: !7449)
!7460 = !DILocation(line: 2147, column: 19, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7457, file: !3, line: 2146, column: 33)
!7462 = !DILocation(line: 2147, column: 5, scope: !7461)
!7463 = !DILocation(line: 2148, column: 4, scope: !7461)
!7464 = !DILocation(line: 2149, column: 13, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7457, file: !3, line: 2149, column: 13)
!7466 = !DILocation(line: 2149, column: 16, scope: !7465)
!7467 = !DILocation(line: 2149, column: 13, scope: !7457)
!7468 = !DILocation(line: 2150, column: 17, scope: !7469)
!7469 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 2149, column: 35)
!7470 = !DILocation(line: 2150, column: 5, scope: !7469)
!7471 = !DILocation(line: 2151, column: 4, scope: !7469)
!7472 = !DILocation(line: 2152, column: 13, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 2152, column: 13)
!7474 = !DILocation(line: 2152, column: 16, scope: !7473)
!7475 = !DILocation(line: 2152, column: 13, scope: !7465)
!7476 = !DILocation(line: 2153, column: 21, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7473, file: !3, line: 2152, column: 35)
!7478 = !DILocation(line: 2153, column: 27, scope: !7477)
!7479 = !DILocation(line: 2153, column: 33, scope: !7477)
!7480 = !DILocation(line: 2153, column: 39, scope: !7477)
!7481 = !DILocation(line: 2153, column: 5, scope: !7477)
!7482 = !DILocation(line: 2154, column: 4, scope: !7477)
!7483 = !DILocation(line: 2155, column: 13, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7473, file: !3, line: 2155, column: 13)
!7485 = !DILocation(line: 2155, column: 16, scope: !7484)
!7486 = !DILocation(line: 2155, column: 13, scope: !7473)
!7487 = !DILocation(line: 2156, column: 20, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7484, file: !3, line: 2155, column: 39)
!7489 = !DILocation(line: 2156, column: 5, scope: !7488)
!7490 = !DILocation(line: 2157, column: 4, scope: !7488)
!7491 = !DILocation(line: 2158, column: 13, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7484, file: !3, line: 2158, column: 13)
!7493 = !DILocation(line: 2158, column: 16, scope: !7492)
!7494 = !DILocation(line: 2158, column: 13, scope: !7484)
!7495 = !DILocation(line: 2159, column: 20, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 2158, column: 41)
!7497 = !DILocation(line: 2159, column: 5, scope: !7496)
!7498 = !DILocation(line: 2160, column: 4, scope: !7496)
!7499 = !DILocation(line: 2162, column: 4, scope: !7167)
!7500 = !DILocation(line: 2162, column: 10, scope: !7167)
!7501 = !DILocation(line: 2162, column: 18, scope: !7167)
!7502 = !DILocation(line: 2163, column: 4, scope: !7167)
!7503 = !DILocation(line: 2166, column: 4, scope: !7167)
!7504 = !DILocation(line: 2166, column: 10, scope: !7167)
!7505 = !DILocation(line: 2166, column: 19, scope: !7167)
!7506 = !DILocation(line: 2168, column: 4, scope: !7167)
!7507 = !DILocation(line: 2171, column: 10, scope: !7124)
!7508 = !DILocation(line: 2172, column: 1, scope: !7124)
!7509 = distinct !DISubprogram(name: "txt_undo_read_cur", scope: !3, file: !3, line: 1854, type: !7510, scopeLine: 1855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!7510 = !DISubroutineType(types: !7511)
!7511 = !{null, !304, !4804, !2287, !7512}
!7512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 64)
!7513 = !DILocalVariable(name: "undo_buf", arg: 1, scope: !7509, file: !3, line: 1854, type: !304)
!7514 = !DILocation(line: 1854, column: 43, scope: !7509)
!7515 = !DILocalVariable(name: "undo_pos", arg: 2, scope: !7509, file: !3, line: 1854, type: !4804)
!7516 = !DILocation(line: 1854, column: 58, scope: !7509)
!7517 = !DILocalVariable(name: "curln", arg: 3, scope: !7509, file: !3, line: 1854, type: !2287)
!7518 = !DILocation(line: 1854, column: 82, scope: !7509)
!7519 = !DILocalVariable(name: "curc", arg: 4, scope: !7509, file: !3, line: 1854, type: !7512)
!7520 = !DILocation(line: 1854, column: 105, scope: !7509)
!7521 = !DILocation(line: 1856, column: 32, scope: !7509)
!7522 = !DILocation(line: 1856, column: 42, scope: !7509)
!7523 = !DILocation(line: 1856, column: 11, scope: !7509)
!7524 = !DILocation(line: 1856, column: 3, scope: !7509)
!7525 = !DILocation(line: 1856, column: 9, scope: !7509)
!7526 = !DILocation(line: 1857, column: 32, scope: !7509)
!7527 = !DILocation(line: 1857, column: 42, scope: !7509)
!7528 = !DILocation(line: 1857, column: 11, scope: !7509)
!7529 = !DILocation(line: 1857, column: 3, scope: !7509)
!7530 = !DILocation(line: 1857, column: 9, scope: !7509)
!7531 = !DILocation(line: 1858, column: 1, scope: !7509)
!7532 = distinct !DISubprogram(name: "txt_delete_char", scope: !3, file: !3, line: 2453, type: !332, scopeLine: 2454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!7533 = !DILocalVariable(name: "text", arg: 1, scope: !7532, file: !3, line: 2453, type: !139)
!7534 = !DILocation(line: 2453, column: 28, scope: !7532)
!7535 = !DILocalVariable(name: "c", scope: !7532, file: !3, line: 2455, type: !7)
!7536 = !DILocation(line: 2455, column: 15, scope: !7532)
!7537 = !DILocation(line: 2457, column: 7, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 2457, column: 6)
!7539 = !DILocation(line: 2457, column: 13, scope: !7538)
!7540 = !DILocation(line: 2457, column: 6, scope: !7532)
!7541 = !DILocation(line: 2457, column: 19, scope: !7538)
!7542 = !DILocation(line: 2459, column: 18, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 2459, column: 6)
!7544 = !DILocation(line: 2459, column: 6, scope: !7543)
!7545 = !DILocation(line: 2459, column: 6, scope: !7532)
!7546 = !DILocation(line: 2460, column: 18, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7543, file: !3, line: 2459, column: 25)
!7548 = !DILocation(line: 2460, column: 3, scope: !7547)
!7549 = !DILocation(line: 2461, column: 18, scope: !7547)
!7550 = !DILocation(line: 2461, column: 3, scope: !7547)
!7551 = !DILocation(line: 2462, column: 3, scope: !7547)
!7552 = !DILocation(line: 2464, column: 11, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7543, file: !3, line: 2464, column: 11)
!7554 = !DILocation(line: 2464, column: 17, scope: !7553)
!7555 = !DILocation(line: 2464, column: 25, scope: !7553)
!7556 = !DILocation(line: 2464, column: 31, scope: !7553)
!7557 = !DILocation(line: 2464, column: 37, scope: !7553)
!7558 = !DILocation(line: 2464, column: 22, scope: !7553)
!7559 = !DILocation(line: 2464, column: 11, scope: !7543)
!7560 = !DILocation(line: 2465, column: 7, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7562, file: !3, line: 2465, column: 7)
!7562 = distinct !DILexicalBlock(scope: !7553, file: !3, line: 2464, column: 42)
!7563 = !DILocation(line: 2465, column: 13, scope: !7561)
!7564 = !DILocation(line: 2465, column: 19, scope: !7561)
!7565 = !DILocation(line: 2465, column: 7, scope: !7562)
!7566 = !DILocation(line: 2466, column: 22, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7561, file: !3, line: 2465, column: 25)
!7568 = !DILocation(line: 2466, column: 28, scope: !7567)
!7569 = !DILocation(line: 2466, column: 34, scope: !7567)
!7570 = !DILocation(line: 2466, column: 40, scope: !7567)
!7571 = !DILocation(line: 2466, column: 46, scope: !7567)
!7572 = !DILocation(line: 2466, column: 52, scope: !7567)
!7573 = !DILocation(line: 2466, column: 4, scope: !7567)
!7574 = !DILocation(line: 2467, column: 16, scope: !7567)
!7575 = !DILocation(line: 2467, column: 4, scope: !7567)
!7576 = !DILocation(line: 2468, column: 3, scope: !7567)
!7577 = !DILocation(line: 2470, column: 4, scope: !7561)
!7578 = !DILocation(line: 2471, column: 2, scope: !7562)
!7579 = !DILocalVariable(name: "c_len", scope: !7580, file: !3, line: 2473, type: !753)
!7580 = distinct !DILexicalBlock(scope: !7553, file: !3, line: 2472, column: 7)
!7581 = !DILocation(line: 2473, column: 10, scope: !7580)
!7582 = !DILocation(line: 2474, column: 40, scope: !7580)
!7583 = !DILocation(line: 2474, column: 46, scope: !7580)
!7584 = !DILocation(line: 2474, column: 52, scope: !7580)
!7585 = !DILocation(line: 2474, column: 59, scope: !7580)
!7586 = !DILocation(line: 2474, column: 65, scope: !7580)
!7587 = !DILocation(line: 2474, column: 57, scope: !7580)
!7588 = !DILocation(line: 2474, column: 7, scope: !7580)
!7589 = !DILocation(line: 2474, column: 5, scope: !7580)
!7590 = !DILocation(line: 2476, column: 11, scope: !7580)
!7591 = !DILocation(line: 2476, column: 17, scope: !7580)
!7592 = !DILocation(line: 2476, column: 23, scope: !7580)
!7593 = !DILocation(line: 2476, column: 30, scope: !7580)
!7594 = !DILocation(line: 2476, column: 36, scope: !7580)
!7595 = !DILocation(line: 2476, column: 28, scope: !7580)
!7596 = !DILocation(line: 2476, column: 42, scope: !7580)
!7597 = !DILocation(line: 2476, column: 48, scope: !7580)
!7598 = !DILocation(line: 2476, column: 54, scope: !7580)
!7599 = !DILocation(line: 2476, column: 61, scope: !7580)
!7600 = !DILocation(line: 2476, column: 67, scope: !7580)
!7601 = !DILocation(line: 2476, column: 59, scope: !7580)
!7602 = !DILocation(line: 2476, column: 74, scope: !7580)
!7603 = !DILocation(line: 2476, column: 72, scope: !7580)
!7604 = !DILocation(line: 2476, column: 81, scope: !7580)
!7605 = !DILocation(line: 2476, column: 87, scope: !7580)
!7606 = !DILocation(line: 2476, column: 93, scope: !7580)
!7607 = !DILocation(line: 2476, column: 99, scope: !7580)
!7608 = !DILocation(line: 2476, column: 105, scope: !7580)
!7609 = !DILocation(line: 2476, column: 97, scope: !7580)
!7610 = !DILocation(line: 2476, column: 112, scope: !7580)
!7611 = !DILocation(line: 2476, column: 110, scope: !7580)
!7612 = !DILocation(line: 2476, column: 118, scope: !7580)
!7613 = !DILocation(line: 2476, column: 3, scope: !7580)
!7614 = !DILocation(line: 2478, column: 22, scope: !7580)
!7615 = !DILocation(line: 2478, column: 3, scope: !7580)
!7616 = !DILocation(line: 2478, column: 9, scope: !7580)
!7617 = !DILocation(line: 2478, column: 15, scope: !7580)
!7618 = !DILocation(line: 2478, column: 19, scope: !7580)
!7619 = !DILocation(line: 2480, column: 15, scope: !7580)
!7620 = !DILocation(line: 2480, column: 3, scope: !7580)
!7621 = !DILocation(line: 2483, column: 17, scope: !7532)
!7622 = !DILocation(line: 2483, column: 2, scope: !7532)
!7623 = !DILocation(line: 2484, column: 17, scope: !7532)
!7624 = !DILocation(line: 2484, column: 2, scope: !7532)
!7625 = !DILocation(line: 2486, column: 7, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 2486, column: 6)
!7627 = !DILocation(line: 2486, column: 6, scope: !7532)
!7628 = !DILocation(line: 2486, column: 36, scope: !7626)
!7629 = !DILocation(line: 2486, column: 54, scope: !7626)
!7630 = !DILocation(line: 2486, column: 16, scope: !7626)
!7631 = !DILocation(line: 2487, column: 1, scope: !7532)
!7632 = distinct !DISubprogram(name: "txt_undo_read_unicode", scope: !3, file: !3, line: 1876, type: !7633, scopeLine: 1877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!7633 = !DISubroutineType(types: !7634)
!7634 = !{!7, !304, !4804, !176}
!7635 = !DILocalVariable(name: "undo_buf", arg: 1, scope: !7632, file: !3, line: 1876, type: !304)
!7636 = !DILocation(line: 1876, column: 55, scope: !7632)
!7637 = !DILocalVariable(name: "undo_pos", arg: 2, scope: !7632, file: !3, line: 1876, type: !4804)
!7638 = !DILocation(line: 1876, column: 70, scope: !7632)
!7639 = !DILocalVariable(name: "bytes", arg: 3, scope: !7632, file: !3, line: 1876, type: !176)
!7640 = !DILocation(line: 1876, column: 86, scope: !7632)
!7641 = !DILocalVariable(name: "unicode", scope: !7632, file: !3, line: 1878, type: !7)
!7642 = !DILocation(line: 1878, column: 15, scope: !7632)
!7643 = !DILocalVariable(name: "utf8", scope: !7632, file: !3, line: 1879, type: !2321)
!7644 = !DILocation(line: 1879, column: 7, scope: !7632)
!7645 = !DILocation(line: 1881, column: 10, scope: !7632)
!7646 = !DILocation(line: 1881, column: 2, scope: !7632)
!7647 = !DILocation(line: 1883, column: 14, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 1881, column: 17)
!7649 = !DILocation(line: 1883, column: 24, scope: !7648)
!7650 = !DILocation(line: 1883, column: 23, scope: !7648)
!7651 = !DILocation(line: 1883, column: 12, scope: !7648)
!7652 = !DILocation(line: 1883, column: 37, scope: !7648)
!7653 = !DILocation(line: 1883, column: 46, scope: !7648)
!7654 = !DILocation(line: 1884, column: 4, scope: !7648)
!7655 = !DILocation(line: 1886, column: 4, scope: !7648)
!7656 = !DILocation(line: 1886, column: 12, scope: !7648)
!7657 = !DILocation(line: 1887, column: 14, scope: !7648)
!7658 = !DILocation(line: 1887, column: 24, scope: !7648)
!7659 = !DILocation(line: 1887, column: 23, scope: !7648)
!7660 = !DILocation(line: 1887, column: 4, scope: !7648)
!7661 = !DILocation(line: 1887, column: 12, scope: !7648)
!7662 = !DILocation(line: 1887, column: 37, scope: !7648)
!7663 = !DILocation(line: 1887, column: 46, scope: !7648)
!7664 = !DILocation(line: 1888, column: 14, scope: !7648)
!7665 = !DILocation(line: 1888, column: 24, scope: !7648)
!7666 = !DILocation(line: 1888, column: 23, scope: !7648)
!7667 = !DILocation(line: 1888, column: 4, scope: !7648)
!7668 = !DILocation(line: 1888, column: 12, scope: !7648)
!7669 = !DILocation(line: 1888, column: 37, scope: !7648)
!7670 = !DILocation(line: 1888, column: 46, scope: !7648)
!7671 = !DILocation(line: 1889, column: 38, scope: !7648)
!7672 = !DILocation(line: 1889, column: 14, scope: !7648)
!7673 = !DILocation(line: 1889, column: 12, scope: !7648)
!7674 = !DILocation(line: 1890, column: 4, scope: !7648)
!7675 = !DILocation(line: 1892, column: 4, scope: !7648)
!7676 = !DILocation(line: 1892, column: 12, scope: !7648)
!7677 = !DILocation(line: 1893, column: 14, scope: !7648)
!7678 = !DILocation(line: 1893, column: 24, scope: !7648)
!7679 = !DILocation(line: 1893, column: 23, scope: !7648)
!7680 = !DILocation(line: 1893, column: 4, scope: !7648)
!7681 = !DILocation(line: 1893, column: 12, scope: !7648)
!7682 = !DILocation(line: 1893, column: 37, scope: !7648)
!7683 = !DILocation(line: 1893, column: 46, scope: !7648)
!7684 = !DILocation(line: 1894, column: 14, scope: !7648)
!7685 = !DILocation(line: 1894, column: 24, scope: !7648)
!7686 = !DILocation(line: 1894, column: 23, scope: !7648)
!7687 = !DILocation(line: 1894, column: 4, scope: !7648)
!7688 = !DILocation(line: 1894, column: 12, scope: !7648)
!7689 = !DILocation(line: 1894, column: 37, scope: !7648)
!7690 = !DILocation(line: 1894, column: 46, scope: !7648)
!7691 = !DILocation(line: 1895, column: 14, scope: !7648)
!7692 = !DILocation(line: 1895, column: 24, scope: !7648)
!7693 = !DILocation(line: 1895, column: 23, scope: !7648)
!7694 = !DILocation(line: 1895, column: 4, scope: !7648)
!7695 = !DILocation(line: 1895, column: 12, scope: !7648)
!7696 = !DILocation(line: 1895, column: 37, scope: !7648)
!7697 = !DILocation(line: 1895, column: 46, scope: !7648)
!7698 = !DILocation(line: 1896, column: 38, scope: !7648)
!7699 = !DILocation(line: 1896, column: 14, scope: !7648)
!7700 = !DILocation(line: 1896, column: 12, scope: !7648)
!7701 = !DILocation(line: 1897, column: 4, scope: !7648)
!7702 = !DILocation(line: 1899, column: 35, scope: !7648)
!7703 = !DILocation(line: 1899, column: 45, scope: !7648)
!7704 = !DILocation(line: 1899, column: 14, scope: !7648)
!7705 = !DILocation(line: 1899, column: 12, scope: !7648)
!7706 = !DILocation(line: 1900, column: 4, scope: !7648)
!7707 = !DILocation(line: 1904, column: 12, scope: !7648)
!7708 = !DILocation(line: 1905, column: 4, scope: !7648)
!7709 = !DILocation(line: 1908, column: 9, scope: !7632)
!7710 = !DILocation(line: 1908, column: 2, scope: !7632)
!7711 = distinct !DISubprogram(name: "txt_add_char", scope: !3, file: !3, line: 2600, type: !6841, scopeLine: 2601, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!7712 = !DILocalVariable(name: "text", arg: 1, scope: !7711, file: !3, line: 2600, type: !139)
!7713 = !DILocation(line: 2600, column: 25, scope: !7711)
!7714 = !DILocalVariable(name: "add", arg: 2, scope: !7711, file: !3, line: 2600, type: !7)
!7715 = !DILocation(line: 2600, column: 44, scope: !7711)
!7716 = !DILocation(line: 2602, column: 29, scope: !7711)
!7717 = !DILocation(line: 2602, column: 35, scope: !7711)
!7718 = !DILocation(line: 2602, column: 41, scope: !7711)
!7719 = !DILocation(line: 2602, column: 47, scope: !7711)
!7720 = !DILocation(line: 2602, column: 53, scope: !7711)
!7721 = !DILocation(line: 2602, column: 73, scope: !7711)
!7722 = !DILocation(line: 2602, column: 40, scope: !7711)
!7723 = !DILocation(line: 2602, column: 9, scope: !7711)
!7724 = !DILocation(line: 2602, column: 2, scope: !7711)
!7725 = distinct !DISubprogram(name: "txt_undo_read_uint32", scope: !3, file: !3, line: 1843, type: !7726, scopeLine: 1844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!7726 = !DISubroutineType(types: !7727)
!7727 = !{!7, !304, !4804}
!7728 = !DILocalVariable(name: "undo_buf", arg: 1, scope: !7725, file: !3, line: 1843, type: !304)
!7729 = !DILocation(line: 1843, column: 54, scope: !7725)
!7730 = !DILocalVariable(name: "undo_pos", arg: 2, scope: !7725, file: !3, line: 1843, type: !4804)
!7731 = !DILocation(line: 1843, column: 69, scope: !7725)
!7732 = !DILocalVariable(name: "val", scope: !7725, file: !3, line: 1845, type: !7)
!7733 = !DILocation(line: 1845, column: 15, scope: !7725)
!7734 = !DILocation(line: 1846, column: 8, scope: !7725)
!7735 = !DILocation(line: 1846, column: 18, scope: !7725)
!7736 = !DILocation(line: 1846, column: 17, scope: !7725)
!7737 = !DILocation(line: 1846, column: 6, scope: !7725)
!7738 = !DILocation(line: 1846, column: 31, scope: !7725)
!7739 = !DILocation(line: 1846, column: 40, scope: !7725)
!7740 = !DILocation(line: 1847, column: 9, scope: !7725)
!7741 = !DILocation(line: 1847, column: 13, scope: !7725)
!7742 = !DILocation(line: 1847, column: 21, scope: !7725)
!7743 = !DILocation(line: 1847, column: 31, scope: !7725)
!7744 = !DILocation(line: 1847, column: 30, scope: !7725)
!7745 = !DILocation(line: 1847, column: 19, scope: !7725)
!7746 = !DILocation(line: 1847, column: 6, scope: !7725)
!7747 = !DILocation(line: 1847, column: 44, scope: !7725)
!7748 = !DILocation(line: 1847, column: 53, scope: !7725)
!7749 = !DILocation(line: 1848, column: 9, scope: !7725)
!7750 = !DILocation(line: 1848, column: 13, scope: !7725)
!7751 = !DILocation(line: 1848, column: 21, scope: !7725)
!7752 = !DILocation(line: 1848, column: 31, scope: !7725)
!7753 = !DILocation(line: 1848, column: 30, scope: !7725)
!7754 = !DILocation(line: 1848, column: 19, scope: !7725)
!7755 = !DILocation(line: 1848, column: 6, scope: !7725)
!7756 = !DILocation(line: 1848, column: 44, scope: !7725)
!7757 = !DILocation(line: 1848, column: 53, scope: !7725)
!7758 = !DILocation(line: 1849, column: 9, scope: !7725)
!7759 = !DILocation(line: 1849, column: 13, scope: !7725)
!7760 = !DILocation(line: 1849, column: 21, scope: !7725)
!7761 = !DILocation(line: 1849, column: 31, scope: !7725)
!7762 = !DILocation(line: 1849, column: 30, scope: !7725)
!7763 = !DILocation(line: 1849, column: 19, scope: !7725)
!7764 = !DILocation(line: 1849, column: 6, scope: !7725)
!7765 = !DILocation(line: 1849, column: 44, scope: !7725)
!7766 = !DILocation(line: 1849, column: 53, scope: !7725)
!7767 = !DILocation(line: 1850, column: 9, scope: !7725)
!7768 = !DILocation(line: 1850, column: 2, scope: !7725)
!7769 = distinct !DISubprogram(name: "txt_undo_read_cursors", scope: !3, file: !3, line: 1868, type: !7770, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!7770 = !DISubroutineType(types: !7771)
!7771 = !{null, !304, !4804, !2287, !7512, !2287, !7512}
!7772 = !DILocalVariable(name: "undo_buf", arg: 1, scope: !7769, file: !3, line: 1868, type: !304)
!7773 = !DILocation(line: 1868, column: 47, scope: !7769)
!7774 = !DILocalVariable(name: "undo_pos", arg: 2, scope: !7769, file: !3, line: 1868, type: !4804)
!7775 = !DILocation(line: 1868, column: 62, scope: !7769)
!7776 = !DILocalVariable(name: "curln", arg: 3, scope: !7769, file: !3, line: 1869, type: !2287)
!7777 = !DILocation(line: 1869, column: 49, scope: !7769)
!7778 = !DILocalVariable(name: "curc", arg: 4, scope: !7769, file: !3, line: 1869, type: !7512)
!7779 = !DILocation(line: 1869, column: 72, scope: !7769)
!7780 = !DILocalVariable(name: "selln", arg: 5, scope: !7769, file: !3, line: 1870, type: !2287)
!7781 = !DILocation(line: 1870, column: 49, scope: !7769)
!7782 = !DILocalVariable(name: "selc", arg: 6, scope: !7769, file: !3, line: 1870, type: !7512)
!7783 = !DILocation(line: 1870, column: 72, scope: !7769)
!7784 = !DILocation(line: 1872, column: 20, scope: !7769)
!7785 = !DILocation(line: 1872, column: 30, scope: !7769)
!7786 = !DILocation(line: 1872, column: 40, scope: !7769)
!7787 = !DILocation(line: 1872, column: 47, scope: !7769)
!7788 = !DILocation(line: 1872, column: 2, scope: !7769)
!7789 = !DILocation(line: 1873, column: 20, scope: !7769)
!7790 = !DILocation(line: 1873, column: 30, scope: !7769)
!7791 = !DILocation(line: 1873, column: 40, scope: !7769)
!7792 = !DILocation(line: 1873, column: 47, scope: !7769)
!7793 = !DILocation(line: 1873, column: 2, scope: !7769)
!7794 = !DILocation(line: 1874, column: 1, scope: !7769)
!7795 = distinct !DISubprogram(name: "txt_delete_selected", scope: !3, file: !3, line: 2610, type: !332, scopeLine: 2611, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!7796 = !DILocalVariable(name: "text", arg: 1, scope: !7795, file: !3, line: 2610, type: !139)
!7797 = !DILocation(line: 2610, column: 32, scope: !7795)
!7798 = !DILocation(line: 2612, column: 17, scope: !7795)
!7799 = !DILocation(line: 2612, column: 2, scope: !7795)
!7800 = !DILocation(line: 2613, column: 17, scope: !7795)
!7801 = !DILocation(line: 2613, column: 2, scope: !7795)
!7802 = !DILocation(line: 2614, column: 1, scope: !7795)
!7803 = distinct !DISubprogram(name: "txt_unindent", scope: !3, file: !3, line: 2732, type: !332, scopeLine: 2733, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!7804 = !DILocalVariable(name: "text", arg: 1, scope: !7803, file: !3, line: 2732, type: !139)
!7805 = !DILocation(line: 2732, column: 25, scope: !7803)
!7806 = !DILocalVariable(name: "num", scope: !7803, file: !3, line: 2734, type: !119)
!7807 = !DILocation(line: 2734, column: 6, scope: !7803)
!7808 = !DILocalVariable(name: "remove", scope: !7803, file: !3, line: 2735, type: !304)
!7809 = !DILocation(line: 2735, column: 14, scope: !7803)
!7810 = !DILocalVariable(name: "indentlen", scope: !7803, file: !3, line: 2736, type: !119)
!7811 = !DILocation(line: 2736, column: 6, scope: !7803)
!7812 = !DILocalVariable(name: "unindented_first", scope: !7803, file: !3, line: 2737, type: !313)
!7813 = !DILocation(line: 2737, column: 7, scope: !7803)
!7814 = !DILocalVariable(name: "spaceslen", scope: !7803, file: !3, line: 2740, type: !119)
!7815 = !DILocation(line: 2740, column: 6, scope: !7803)
!7816 = !DILocation(line: 2742, column: 6, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 2742, column: 6)
!7818 = !DILocation(line: 2742, column: 6, scope: !7803)
!7819 = !DILocation(line: 2743, column: 3, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7817, file: !3, line: 2742, column: 42)
!7821 = !DILocation(line: 2747, column: 6, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 2747, column: 6)
!7823 = !DILocation(line: 2747, column: 12, scope: !7822)
!7824 = !DILocation(line: 2747, column: 18, scope: !7822)
!7825 = !DILocation(line: 2747, column: 6, scope: !7803)
!7826 = !DILocation(line: 2748, column: 10, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7822, file: !3, line: 2747, column: 38)
!7828 = !DILocation(line: 2749, column: 15, scope: !7827)
!7829 = !DILocation(line: 2749, column: 13, scope: !7827)
!7830 = !DILocation(line: 2750, column: 2, scope: !7827)
!7831 = !DILocation(line: 2752, column: 2, scope: !7803)
!7832 = !DILocalVariable(name: "changed", scope: !7833, file: !3, line: 2753, type: !313)
!7833 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 2752, column: 15)
!7834 = !DILocation(line: 2753, column: 8, scope: !7833)
!7835 = !DILocation(line: 2754, column: 15, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7833, file: !3, line: 2754, column: 7)
!7837 = !DILocation(line: 2754, column: 21, scope: !7836)
!7838 = !DILocation(line: 2754, column: 27, scope: !7836)
!7839 = !DILocation(line: 2754, column: 33, scope: !7836)
!7840 = !DILocation(line: 2754, column: 41, scope: !7836)
!7841 = !DILocation(line: 2754, column: 7, scope: !7836)
!7842 = !DILocation(line: 2754, column: 52, scope: !7836)
!7843 = !DILocation(line: 2754, column: 7, scope: !7833)
!7844 = !DILocation(line: 2755, column: 8, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7846, file: !3, line: 2755, column: 8)
!7846 = distinct !DILexicalBlock(scope: !7836, file: !3, line: 2754, column: 58)
!7847 = !DILocation(line: 2755, column: 12, scope: !7845)
!7848 = !DILocation(line: 2755, column: 8, scope: !7846)
!7849 = !DILocation(line: 2756, column: 22, scope: !7845)
!7850 = !DILocation(line: 2756, column: 5, scope: !7845)
!7851 = !DILocation(line: 2757, column: 23, scope: !7846)
!7852 = !DILocation(line: 2757, column: 4, scope: !7846)
!7853 = !DILocation(line: 2757, column: 10, scope: !7846)
!7854 = !DILocation(line: 2757, column: 16, scope: !7846)
!7855 = !DILocation(line: 2757, column: 20, scope: !7846)
!7856 = !DILocation(line: 2758, column: 12, scope: !7846)
!7857 = !DILocation(line: 2758, column: 18, scope: !7846)
!7858 = !DILocation(line: 2758, column: 24, scope: !7846)
!7859 = !DILocation(line: 2758, column: 30, scope: !7846)
!7860 = !DILocation(line: 2758, column: 36, scope: !7846)
!7861 = !DILocation(line: 2758, column: 42, scope: !7846)
!7862 = !DILocation(line: 2758, column: 49, scope: !7846)
!7863 = !DILocation(line: 2758, column: 47, scope: !7846)
!7864 = !DILocation(line: 2758, column: 60, scope: !7846)
!7865 = !DILocation(line: 2758, column: 66, scope: !7846)
!7866 = !DILocation(line: 2758, column: 72, scope: !7846)
!7867 = !DILocation(line: 2758, column: 76, scope: !7846)
!7868 = !DILocation(line: 2758, column: 4, scope: !7846)
!7869 = !DILocation(line: 2759, column: 12, scope: !7846)
!7870 = !DILocation(line: 2760, column: 3, scope: !7846)
!7871 = !DILocation(line: 2762, column: 18, scope: !7833)
!7872 = !DILocation(line: 2762, column: 3, scope: !7833)
!7873 = !DILocation(line: 2763, column: 18, scope: !7833)
!7874 = !DILocation(line: 2763, column: 3, scope: !7833)
!7875 = !DILocation(line: 2765, column: 7, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7833, file: !3, line: 2765, column: 7)
!7877 = !DILocation(line: 2765, column: 13, scope: !7876)
!7878 = !DILocation(line: 2765, column: 21, scope: !7876)
!7879 = !DILocation(line: 2765, column: 27, scope: !7876)
!7880 = !DILocation(line: 2765, column: 18, scope: !7876)
!7881 = !DILocation(line: 2765, column: 7, scope: !7833)
!7882 = !DILocation(line: 2766, column: 8, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7884, file: !3, line: 2766, column: 8)
!7884 = distinct !DILexicalBlock(scope: !7876, file: !3, line: 2765, column: 33)
!7885 = !DILocation(line: 2766, column: 8, scope: !7884)
!7886 = !DILocation(line: 2767, column: 18, scope: !7883)
!7887 = !DILocation(line: 2767, column: 5, scope: !7883)
!7888 = !DILocation(line: 2767, column: 11, scope: !7883)
!7889 = !DILocation(line: 2767, column: 16, scope: !7883)
!7890 = !DILocation(line: 2768, column: 4, scope: !7884)
!7891 = !DILocation(line: 2771, column: 17, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7876, file: !3, line: 2770, column: 8)
!7893 = !DILocation(line: 2771, column: 23, scope: !7892)
!7894 = !DILocation(line: 2771, column: 29, scope: !7892)
!7895 = !DILocation(line: 2771, column: 4, scope: !7892)
!7896 = !DILocation(line: 2771, column: 10, scope: !7892)
!7897 = !DILocation(line: 2771, column: 15, scope: !7892)
!7898 = !DILocation(line: 2772, column: 7, scope: !7892)
!7899 = distinct !{!7899, !7831, !7900}
!7900 = !DILocation(line: 2775, column: 2, scope: !7803)
!7901 = !DILocation(line: 2777, column: 6, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 2777, column: 6)
!7903 = !DILocation(line: 2777, column: 6, scope: !7803)
!7904 = !DILocation(line: 2778, column: 16, scope: !7902)
!7905 = !DILocation(line: 2778, column: 3, scope: !7902)
!7906 = !DILocation(line: 2778, column: 9, scope: !7902)
!7907 = !DILocation(line: 2778, column: 14, scope: !7902)
!7908 = !DILocation(line: 2780, column: 2, scope: !7803)
!7909 = !DILocation(line: 2780, column: 9, scope: !7803)
!7910 = !DILocation(line: 2780, column: 13, scope: !7803)
!7911 = !DILocation(line: 2781, column: 16, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 2780, column: 18)
!7913 = !DILocation(line: 2781, column: 22, scope: !7912)
!7914 = !DILocation(line: 2781, column: 28, scope: !7912)
!7915 = !DILocation(line: 2781, column: 3, scope: !7912)
!7916 = !DILocation(line: 2781, column: 9, scope: !7912)
!7917 = !DILocation(line: 2781, column: 14, scope: !7912)
!7918 = !DILocation(line: 2782, column: 6, scope: !7912)
!7919 = distinct !{!7919, !7908, !7920}
!7920 = !DILocation(line: 2783, column: 2, scope: !7803)
!7921 = !DILocation(line: 2785, column: 7, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 2785, column: 6)
!7923 = !DILocation(line: 2785, column: 6, scope: !7803)
!7924 = !DILocation(line: 2786, column: 19, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7922, file: !3, line: 2785, column: 16)
!7926 = !DILocation(line: 2786, column: 3, scope: !7925)
!7927 = !DILocation(line: 2787, column: 2, scope: !7925)
!7928 = !DILocation(line: 2788, column: 1, scope: !7803)
!7929 = distinct !DISubprogram(name: "txt_indent", scope: !3, file: !3, line: 2664, type: !332, scopeLine: 2665, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!7930 = !DILocalVariable(name: "text", arg: 1, scope: !7929, file: !3, line: 2664, type: !139)
!7931 = !DILocation(line: 2664, column: 23, scope: !7929)
!7932 = !DILocalVariable(name: "len", scope: !7929, file: !3, line: 2666, type: !119)
!7933 = !DILocation(line: 2666, column: 6, scope: !7929)
!7934 = !DILocalVariable(name: "num", scope: !7929, file: !3, line: 2666, type: !119)
!7935 = !DILocation(line: 2666, column: 11, scope: !7929)
!7936 = !DILocalVariable(name: "curc_old", scope: !7929, file: !3, line: 2666, type: !119)
!7937 = !DILocation(line: 2666, column: 16, scope: !7929)
!7938 = !DILocalVariable(name: "tmp", scope: !7929, file: !3, line: 2667, type: !133)
!7939 = !DILocation(line: 2667, column: 8, scope: !7929)
!7940 = !DILocalVariable(name: "add", scope: !7929, file: !3, line: 2669, type: !304)
!7941 = !DILocation(line: 2669, column: 14, scope: !7929)
!7942 = !DILocalVariable(name: "indentlen", scope: !7929, file: !3, line: 2670, type: !119)
!7943 = !DILocation(line: 2670, column: 6, scope: !7929)
!7944 = !DILocalVariable(name: "spaceslen", scope: !7929, file: !3, line: 2673, type: !119)
!7945 = !DILocation(line: 2673, column: 6, scope: !7929)
!7946 = !DILocation(line: 2675, column: 6, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7929, file: !3, line: 2675, column: 6)
!7948 = !DILocation(line: 2675, column: 6, scope: !7929)
!7949 = !DILocation(line: 2676, column: 3, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 2675, column: 42)
!7951 = !DILocation(line: 2680, column: 6, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7929, file: !3, line: 2680, column: 6)
!7953 = !DILocation(line: 2680, column: 12, scope: !7952)
!7954 = !DILocation(line: 2680, column: 18, scope: !7952)
!7955 = !DILocation(line: 2680, column: 6, scope: !7929)
!7956 = !DILocation(line: 2681, column: 7, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7952, file: !3, line: 2680, column: 38)
!7958 = !DILocation(line: 2682, column: 15, scope: !7957)
!7959 = !DILocation(line: 2682, column: 13, scope: !7957)
!7960 = !DILocation(line: 2683, column: 2, scope: !7957)
!7961 = !DILocation(line: 2685, column: 13, scope: !7929)
!7962 = !DILocation(line: 2685, column: 19, scope: !7929)
!7963 = !DILocation(line: 2685, column: 11, scope: !7929)
!7964 = !DILocation(line: 2687, column: 6, scope: !7929)
!7965 = !DILocation(line: 2688, column: 2, scope: !7929)
!7966 = !DILocation(line: 2691, column: 7, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7968, file: !3, line: 2691, column: 7)
!7968 = distinct !DILexicalBlock(scope: !7929, file: !3, line: 2688, column: 15)
!7969 = !DILocation(line: 2691, column: 13, scope: !7967)
!7970 = !DILocation(line: 2691, column: 19, scope: !7967)
!7971 = !DILocation(line: 2691, column: 23, scope: !7967)
!7972 = !DILocation(line: 2691, column: 7, scope: !7968)
!7973 = !DILocation(line: 2692, column: 10, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 2691, column: 29)
!7975 = !DILocation(line: 2692, column: 22, scope: !7974)
!7976 = !DILocation(line: 2692, column: 28, scope: !7974)
!7977 = !DILocation(line: 2692, column: 34, scope: !7974)
!7978 = !DILocation(line: 2692, column: 40, scope: !7974)
!7979 = !DILocation(line: 2692, column: 38, scope: !7974)
!7980 = !DILocation(line: 2692, column: 50, scope: !7974)
!7981 = !DILocation(line: 2692, column: 8, scope: !7974)
!7982 = !DILocation(line: 2694, column: 4, scope: !7974)
!7983 = !DILocation(line: 2694, column: 10, scope: !7974)
!7984 = !DILocation(line: 2694, column: 15, scope: !7974)
!7985 = !DILocation(line: 2695, column: 8, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 2695, column: 8)
!7987 = !DILocation(line: 2695, column: 14, scope: !7986)
!7988 = !DILocation(line: 2695, column: 8, scope: !7974)
!7989 = !DILocation(line: 2695, column: 27, scope: !7986)
!7990 = !DILocation(line: 2695, column: 32, scope: !7986)
!7991 = !DILocation(line: 2695, column: 38, scope: !7986)
!7992 = !DILocation(line: 2695, column: 44, scope: !7986)
!7993 = !DILocation(line: 2695, column: 50, scope: !7986)
!7994 = !DILocation(line: 2695, column: 56, scope: !7986)
!7995 = !DILocation(line: 2695, column: 20, scope: !7986)
!7996 = !DILocation(line: 2696, column: 11, scope: !7974)
!7997 = !DILocation(line: 2696, column: 17, scope: !7974)
!7998 = !DILocation(line: 2696, column: 23, scope: !7974)
!7999 = !DILocation(line: 2696, column: 15, scope: !7974)
!8000 = !DILocation(line: 2696, column: 29, scope: !7974)
!8001 = !DILocation(line: 2696, column: 34, scope: !7974)
!8002 = !DILocation(line: 2696, column: 4, scope: !7974)
!8003 = !DILocation(line: 2698, column: 10, scope: !7974)
!8004 = !DILocation(line: 2698, column: 16, scope: !7974)
!8005 = !DILocation(line: 2698, column: 22, scope: !7974)
!8006 = !DILocation(line: 2698, column: 28, scope: !7974)
!8007 = !DILocation(line: 2698, column: 34, scope: !7974)
!8008 = !DILocation(line: 2698, column: 26, scope: !7974)
!8009 = !DILocation(line: 2698, column: 8, scope: !7974)
!8010 = !DILocation(line: 2699, column: 8, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 2699, column: 8)
!8012 = !DILocation(line: 2699, column: 12, scope: !8011)
!8013 = !DILocation(line: 2699, column: 8, scope: !7974)
!8014 = !DILocation(line: 2699, column: 24, scope: !8011)
!8015 = !DILocation(line: 2699, column: 30, scope: !8011)
!8016 = !DILocation(line: 2699, column: 36, scope: !8011)
!8017 = !DILocation(line: 2699, column: 28, scope: !8011)
!8018 = !DILocation(line: 2699, column: 43, scope: !8011)
!8019 = !DILocation(line: 2699, column: 41, scope: !8011)
!8020 = !DILocation(line: 2699, column: 54, scope: !8011)
!8021 = !DILocation(line: 2699, column: 60, scope: !8011)
!8022 = !DILocation(line: 2699, column: 66, scope: !8011)
!8023 = !DILocation(line: 2699, column: 73, scope: !8011)
!8024 = !DILocation(line: 2699, column: 79, scope: !8011)
!8025 = !DILocation(line: 2699, column: 71, scope: !8011)
!8026 = !DILocation(line: 2699, column: 85, scope: !8011)
!8027 = !DILocation(line: 2699, column: 17, scope: !8011)
!8028 = !DILocation(line: 2700, column: 4, scope: !7974)
!8029 = !DILocation(line: 2700, column: 8, scope: !7974)
!8030 = !DILocation(line: 2700, column: 14, scope: !7974)
!8031 = !DILocation(line: 2700, column: 20, scope: !7974)
!8032 = !DILocation(line: 2700, column: 26, scope: !7974)
!8033 = !DILocation(line: 2700, column: 24, scope: !7974)
!8034 = !DILocation(line: 2700, column: 37, scope: !7974)
!8035 = !DILocation(line: 2702, column: 18, scope: !7974)
!8036 = !DILocation(line: 2702, column: 24, scope: !7974)
!8037 = !DILocation(line: 2702, column: 30, scope: !7974)
!8038 = !DILocation(line: 2702, column: 4, scope: !7974)
!8039 = !DILocation(line: 2704, column: 18, scope: !7974)
!8040 = !DILocation(line: 2704, column: 4, scope: !7974)
!8041 = !DILocation(line: 2704, column: 10, scope: !7974)
!8042 = !DILocation(line: 2704, column: 15, scope: !7974)
!8043 = !DILocation(line: 2706, column: 19, scope: !7974)
!8044 = !DILocation(line: 2706, column: 4, scope: !7974)
!8045 = !DILocation(line: 2707, column: 19, scope: !7974)
!8046 = !DILocation(line: 2707, column: 4, scope: !7974)
!8047 = !DILocation(line: 2708, column: 3, scope: !7974)
!8048 = !DILocation(line: 2710, column: 7, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !7968, file: !3, line: 2710, column: 7)
!8050 = !DILocation(line: 2710, column: 13, scope: !8049)
!8051 = !DILocation(line: 2710, column: 21, scope: !8049)
!8052 = !DILocation(line: 2710, column: 27, scope: !8049)
!8053 = !DILocation(line: 2710, column: 18, scope: !8049)
!8054 = !DILocation(line: 2710, column: 7, scope: !7968)
!8055 = !DILocation(line: 2711, column: 18, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8049, file: !3, line: 2710, column: 33)
!8057 = !DILocation(line: 2711, column: 4, scope: !8056)
!8058 = !DILocation(line: 2711, column: 10, scope: !8056)
!8059 = !DILocation(line: 2711, column: 15, scope: !8056)
!8060 = !DILocation(line: 2712, column: 4, scope: !8056)
!8061 = !DILocation(line: 2715, column: 17, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8049, file: !3, line: 2714, column: 8)
!8063 = !DILocation(line: 2715, column: 23, scope: !8062)
!8064 = !DILocation(line: 2715, column: 29, scope: !8062)
!8065 = !DILocation(line: 2715, column: 4, scope: !8062)
!8066 = !DILocation(line: 2715, column: 10, scope: !8062)
!8067 = !DILocation(line: 2715, column: 15, scope: !8062)
!8068 = !DILocation(line: 2716, column: 7, scope: !8062)
!8069 = distinct !{!8069, !7965, !8070}
!8070 = !DILocation(line: 2718, column: 2, scope: !7929)
!8071 = !DILocation(line: 2719, column: 7, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !7929, file: !3, line: 2719, column: 6)
!8073 = !DILocation(line: 2719, column: 6, scope: !7929)
!8074 = !DILocation(line: 2719, column: 17, scope: !8072)
!8075 = !DILocation(line: 2719, column: 23, scope: !8072)
!8076 = !DILocation(line: 2719, column: 28, scope: !8072)
!8077 = !DILocation(line: 2720, column: 20, scope: !8072)
!8078 = !DILocation(line: 2720, column: 31, scope: !8072)
!8079 = !DILocation(line: 2720, column: 29, scope: !8072)
!8080 = !DILocation(line: 2720, column: 7, scope: !8072)
!8081 = !DILocation(line: 2720, column: 13, scope: !8072)
!8082 = !DILocation(line: 2720, column: 18, scope: !8072)
!8083 = !DILocation(line: 2722, column: 2, scope: !7929)
!8084 = !DILocation(line: 2722, column: 9, scope: !7929)
!8085 = !DILocation(line: 2722, column: 13, scope: !7929)
!8086 = !DILocation(line: 2723, column: 16, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !7929, file: !3, line: 2722, column: 18)
!8088 = !DILocation(line: 2723, column: 22, scope: !8087)
!8089 = !DILocation(line: 2723, column: 28, scope: !8087)
!8090 = !DILocation(line: 2723, column: 3, scope: !8087)
!8091 = !DILocation(line: 2723, column: 9, scope: !8087)
!8092 = !DILocation(line: 2723, column: 14, scope: !8087)
!8093 = !DILocation(line: 2724, column: 6, scope: !8087)
!8094 = distinct !{!8094, !8083, !8095}
!8095 = !DILocation(line: 2725, column: 2, scope: !7929)
!8096 = !DILocation(line: 2727, column: 7, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !7929, file: !3, line: 2727, column: 6)
!8098 = !DILocation(line: 2727, column: 6, scope: !7929)
!8099 = !DILocation(line: 2728, column: 19, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8097, file: !3, line: 2727, column: 16)
!8101 = !DILocation(line: 2728, column: 3, scope: !8100)
!8102 = !DILocation(line: 2729, column: 2, scope: !8100)
!8103 = !DILocation(line: 2730, column: 1, scope: !7929)
!8104 = distinct !DISubprogram(name: "txt_uncomment", scope: !3, file: !3, line: 2838, type: !332, scopeLine: 2839, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!8105 = !DILocalVariable(name: "text", arg: 1, scope: !8104, file: !3, line: 2838, type: !139)
!8106 = !DILocation(line: 2838, column: 26, scope: !8104)
!8107 = !DILocalVariable(name: "num", scope: !8104, file: !3, line: 2840, type: !119)
!8108 = !DILocation(line: 2840, column: 6, scope: !8104)
!8109 = !DILocalVariable(name: "remove", scope: !8104, file: !3, line: 2841, type: !134)
!8110 = !DILocation(line: 2841, column: 7, scope: !8104)
!8111 = !DILocation(line: 2843, column: 7, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8104, file: !3, line: 2843, column: 6)
!8113 = !DILocation(line: 2843, column: 13, scope: !8112)
!8114 = !DILocation(line: 2843, column: 6, scope: !8104)
!8115 = !DILocation(line: 2843, column: 19, scope: !8112)
!8116 = !DILocation(line: 2844, column: 7, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8104, file: !3, line: 2844, column: 6)
!8118 = !DILocation(line: 2844, column: 13, scope: !8117)
!8119 = !DILocation(line: 2844, column: 6, scope: !8104)
!8120 = !DILocation(line: 2844, column: 19, scope: !8117)
!8121 = !DILocation(line: 2846, column: 2, scope: !8104)
!8122 = !DILocalVariable(name: "i", scope: !8123, file: !3, line: 2847, type: !119)
!8123 = distinct !DILexicalBlock(scope: !8104, file: !3, line: 2846, column: 15)
!8124 = !DILocation(line: 2847, column: 7, scope: !8123)
!8125 = !DILocation(line: 2849, column: 7, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8123, file: !3, line: 2849, column: 7)
!8127 = !DILocation(line: 2849, column: 13, scope: !8126)
!8128 = !DILocation(line: 2849, column: 19, scope: !8126)
!8129 = !DILocation(line: 2849, column: 24, scope: !8126)
!8130 = !DILocation(line: 2849, column: 30, scope: !8126)
!8131 = !DILocation(line: 2849, column: 27, scope: !8126)
!8132 = !DILocation(line: 2849, column: 7, scope: !8123)
!8133 = !DILocation(line: 2850, column: 4, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8126, file: !3, line: 2849, column: 38)
!8135 = !DILocation(line: 2850, column: 11, scope: !8134)
!8136 = !DILocation(line: 2850, column: 15, scope: !8134)
!8137 = !DILocation(line: 2850, column: 21, scope: !8134)
!8138 = !DILocation(line: 2850, column: 27, scope: !8134)
!8139 = !DILocation(line: 2850, column: 13, scope: !8134)
!8140 = !DILocation(line: 2851, column: 27, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8134, file: !3, line: 2850, column: 32)
!8142 = !DILocation(line: 2851, column: 33, scope: !8141)
!8143 = !DILocation(line: 2851, column: 39, scope: !8141)
!8144 = !DILocation(line: 2851, column: 44, scope: !8141)
!8145 = !DILocation(line: 2851, column: 46, scope: !8141)
!8146 = !DILocation(line: 2851, column: 5, scope: !8141)
!8147 = !DILocation(line: 2851, column: 11, scope: !8141)
!8148 = !DILocation(line: 2851, column: 17, scope: !8141)
!8149 = !DILocation(line: 2851, column: 22, scope: !8141)
!8150 = !DILocation(line: 2851, column: 25, scope: !8141)
!8151 = !DILocation(line: 2852, column: 6, scope: !8141)
!8152 = distinct !{!8152, !8133, !8153}
!8153 = !DILocation(line: 2853, column: 4, scope: !8134)
!8154 = !DILocation(line: 2854, column: 4, scope: !8134)
!8155 = !DILocation(line: 2854, column: 10, scope: !8134)
!8156 = !DILocation(line: 2854, column: 16, scope: !8134)
!8157 = !DILocation(line: 2854, column: 19, scope: !8134)
!8158 = !DILocation(line: 2855, column: 3, scope: !8134)
!8159 = !DILocation(line: 2858, column: 18, scope: !8123)
!8160 = !DILocation(line: 2858, column: 3, scope: !8123)
!8161 = !DILocation(line: 2859, column: 18, scope: !8123)
!8162 = !DILocation(line: 2859, column: 3, scope: !8123)
!8163 = !DILocation(line: 2861, column: 7, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8123, file: !3, line: 2861, column: 7)
!8165 = !DILocation(line: 2861, column: 13, scope: !8164)
!8166 = !DILocation(line: 2861, column: 21, scope: !8164)
!8167 = !DILocation(line: 2861, column: 27, scope: !8164)
!8168 = !DILocation(line: 2861, column: 18, scope: !8164)
!8169 = !DILocation(line: 2861, column: 7, scope: !8123)
!8170 = !DILocation(line: 2862, column: 17, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !8164, file: !3, line: 2861, column: 33)
!8172 = !DILocation(line: 2862, column: 23, scope: !8171)
!8173 = !DILocation(line: 2862, column: 29, scope: !8171)
!8174 = !DILocation(line: 2862, column: 4, scope: !8171)
!8175 = !DILocation(line: 2862, column: 10, scope: !8171)
!8176 = !DILocation(line: 2862, column: 15, scope: !8171)
!8177 = !DILocation(line: 2863, column: 4, scope: !8171)
!8178 = !DILocation(line: 2866, column: 17, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8164, file: !3, line: 2865, column: 8)
!8180 = !DILocation(line: 2866, column: 23, scope: !8179)
!8181 = !DILocation(line: 2866, column: 29, scope: !8179)
!8182 = !DILocation(line: 2866, column: 4, scope: !8179)
!8183 = !DILocation(line: 2866, column: 10, scope: !8179)
!8184 = !DILocation(line: 2866, column: 15, scope: !8179)
!8185 = !DILocation(line: 2867, column: 7, scope: !8179)
!8186 = distinct !{!8186, !8121, !8187}
!8187 = !DILocation(line: 2870, column: 2, scope: !8104)
!8188 = !DILocation(line: 2871, column: 2, scope: !8104)
!8189 = !DILocation(line: 2871, column: 8, scope: !8104)
!8190 = !DILocation(line: 2871, column: 13, scope: !8104)
!8191 = !DILocation(line: 2872, column: 2, scope: !8104)
!8192 = !DILocation(line: 2872, column: 9, scope: !8104)
!8193 = !DILocation(line: 2872, column: 13, scope: !8104)
!8194 = !DILocation(line: 2873, column: 16, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8104, file: !3, line: 2872, column: 18)
!8196 = !DILocation(line: 2873, column: 22, scope: !8195)
!8197 = !DILocation(line: 2873, column: 28, scope: !8195)
!8198 = !DILocation(line: 2873, column: 3, scope: !8195)
!8199 = !DILocation(line: 2873, column: 9, scope: !8195)
!8200 = !DILocation(line: 2873, column: 14, scope: !8195)
!8201 = !DILocation(line: 2874, column: 6, scope: !8195)
!8202 = distinct !{!8202, !8191, !8203}
!8203 = !DILocation(line: 2875, column: 2, scope: !8104)
!8204 = !DILocation(line: 2877, column: 7, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8104, file: !3, line: 2877, column: 6)
!8206 = !DILocation(line: 2877, column: 6, scope: !8104)
!8207 = !DILocation(line: 2878, column: 19, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8205, file: !3, line: 2877, column: 16)
!8209 = !DILocation(line: 2878, column: 3, scope: !8208)
!8210 = !DILocation(line: 2879, column: 2, scope: !8208)
!8211 = !DILocation(line: 2880, column: 1, scope: !8104)
!8212 = distinct !DISubprogram(name: "txt_comment", scope: !3, file: !3, line: 2790, type: !332, scopeLine: 2791, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!8213 = !DILocalVariable(name: "text", arg: 1, scope: !8212, file: !3, line: 2790, type: !139)
!8214 = !DILocation(line: 2790, column: 24, scope: !8212)
!8215 = !DILocalVariable(name: "len", scope: !8212, file: !3, line: 2792, type: !119)
!8216 = !DILocation(line: 2792, column: 6, scope: !8212)
!8217 = !DILocalVariable(name: "num", scope: !8212, file: !3, line: 2792, type: !119)
!8218 = !DILocation(line: 2792, column: 11, scope: !8212)
!8219 = !DILocalVariable(name: "tmp", scope: !8212, file: !3, line: 2793, type: !133)
!8220 = !DILocation(line: 2793, column: 8, scope: !8212)
!8221 = !DILocalVariable(name: "add", scope: !8212, file: !3, line: 2794, type: !134)
!8222 = !DILocation(line: 2794, column: 7, scope: !8212)
!8223 = !DILocation(line: 2796, column: 7, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 2796, column: 6)
!8225 = !DILocation(line: 2796, column: 13, scope: !8224)
!8226 = !DILocation(line: 2796, column: 6, scope: !8212)
!8227 = !DILocation(line: 2796, column: 19, scope: !8224)
!8228 = !DILocation(line: 2797, column: 7, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 2797, column: 6)
!8230 = !DILocation(line: 2797, column: 13, scope: !8229)
!8231 = !DILocation(line: 2797, column: 6, scope: !8212)
!8232 = !DILocation(line: 2797, column: 19, scope: !8229)
!8233 = !DILocation(line: 2799, column: 6, scope: !8212)
!8234 = !DILocation(line: 2800, column: 2, scope: !8212)
!8235 = !DILocation(line: 2801, column: 9, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 2800, column: 15)
!8237 = !DILocation(line: 2801, column: 21, scope: !8236)
!8238 = !DILocation(line: 2801, column: 27, scope: !8236)
!8239 = !DILocation(line: 2801, column: 33, scope: !8236)
!8240 = !DILocation(line: 2801, column: 37, scope: !8236)
!8241 = !DILocation(line: 2801, column: 7, scope: !8236)
!8242 = !DILocation(line: 2803, column: 3, scope: !8236)
!8243 = !DILocation(line: 2803, column: 9, scope: !8236)
!8244 = !DILocation(line: 2803, column: 14, scope: !8236)
!8245 = !DILocation(line: 2804, column: 7, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8236, file: !3, line: 2804, column: 7)
!8247 = !DILocation(line: 2804, column: 13, scope: !8246)
!8248 = !DILocation(line: 2804, column: 7, scope: !8236)
!8249 = !DILocation(line: 2804, column: 26, scope: !8246)
!8250 = !DILocation(line: 2804, column: 31, scope: !8246)
!8251 = !DILocation(line: 2804, column: 37, scope: !8246)
!8252 = !DILocation(line: 2804, column: 43, scope: !8246)
!8253 = !DILocation(line: 2804, column: 49, scope: !8246)
!8254 = !DILocation(line: 2804, column: 55, scope: !8246)
!8255 = !DILocation(line: 2804, column: 19, scope: !8246)
!8256 = !DILocation(line: 2805, column: 21, scope: !8236)
!8257 = !DILocation(line: 2805, column: 3, scope: !8236)
!8258 = !DILocation(line: 2805, column: 7, scope: !8236)
!8259 = !DILocation(line: 2805, column: 13, scope: !8236)
!8260 = !DILocation(line: 2805, column: 19, scope: !8236)
!8261 = !DILocation(line: 2807, column: 9, scope: !8236)
!8262 = !DILocation(line: 2807, column: 15, scope: !8236)
!8263 = !DILocation(line: 2807, column: 21, scope: !8236)
!8264 = !DILocation(line: 2807, column: 27, scope: !8236)
!8265 = !DILocation(line: 2807, column: 33, scope: !8236)
!8266 = !DILocation(line: 2807, column: 25, scope: !8236)
!8267 = !DILocation(line: 2807, column: 7, scope: !8236)
!8268 = !DILocation(line: 2808, column: 7, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8236, file: !3, line: 2808, column: 7)
!8270 = !DILocation(line: 2808, column: 11, scope: !8269)
!8271 = !DILocation(line: 2808, column: 7, scope: !8236)
!8272 = !DILocation(line: 2808, column: 23, scope: !8269)
!8273 = !DILocation(line: 2808, column: 29, scope: !8269)
!8274 = !DILocation(line: 2808, column: 35, scope: !8269)
!8275 = !DILocation(line: 2808, column: 27, scope: !8269)
!8276 = !DILocation(line: 2808, column: 40, scope: !8269)
!8277 = !DILocation(line: 2808, column: 45, scope: !8269)
!8278 = !DILocation(line: 2808, column: 51, scope: !8269)
!8279 = !DILocation(line: 2808, column: 57, scope: !8269)
!8280 = !DILocation(line: 2808, column: 64, scope: !8269)
!8281 = !DILocation(line: 2808, column: 70, scope: !8269)
!8282 = !DILocation(line: 2808, column: 62, scope: !8269)
!8283 = !DILocation(line: 2808, column: 76, scope: !8269)
!8284 = !DILocation(line: 2808, column: 16, scope: !8269)
!8285 = !DILocation(line: 2809, column: 3, scope: !8236)
!8286 = !DILocation(line: 2809, column: 7, scope: !8236)
!8287 = !DILocation(line: 2809, column: 13, scope: !8236)
!8288 = !DILocation(line: 2809, column: 19, scope: !8236)
!8289 = !DILocation(line: 2809, column: 23, scope: !8236)
!8290 = !DILocation(line: 2809, column: 28, scope: !8236)
!8291 = !DILocation(line: 2811, column: 17, scope: !8236)
!8292 = !DILocation(line: 2811, column: 23, scope: !8236)
!8293 = !DILocation(line: 2811, column: 29, scope: !8236)
!8294 = !DILocation(line: 2811, column: 3, scope: !8236)
!8295 = !DILocation(line: 2813, column: 3, scope: !8236)
!8296 = !DILocation(line: 2813, column: 9, scope: !8236)
!8297 = !DILocation(line: 2813, column: 13, scope: !8236)
!8298 = !DILocation(line: 2815, column: 18, scope: !8236)
!8299 = !DILocation(line: 2815, column: 3, scope: !8236)
!8300 = !DILocation(line: 2816, column: 18, scope: !8236)
!8301 = !DILocation(line: 2816, column: 3, scope: !8236)
!8302 = !DILocation(line: 2818, column: 7, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8236, file: !3, line: 2818, column: 7)
!8304 = !DILocation(line: 2818, column: 13, scope: !8303)
!8305 = !DILocation(line: 2818, column: 21, scope: !8303)
!8306 = !DILocation(line: 2818, column: 27, scope: !8303)
!8307 = !DILocation(line: 2818, column: 18, scope: !8303)
!8308 = !DILocation(line: 2818, column: 7, scope: !8236)
!8309 = !DILocation(line: 2819, column: 17, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8303, file: !3, line: 2818, column: 33)
!8311 = !DILocation(line: 2819, column: 23, scope: !8310)
!8312 = !DILocation(line: 2819, column: 29, scope: !8310)
!8313 = !DILocation(line: 2819, column: 4, scope: !8310)
!8314 = !DILocation(line: 2819, column: 10, scope: !8310)
!8315 = !DILocation(line: 2819, column: 15, scope: !8310)
!8316 = !DILocation(line: 2820, column: 4, scope: !8310)
!8317 = !DILocation(line: 2823, column: 17, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8303, file: !3, line: 2822, column: 8)
!8319 = !DILocation(line: 2823, column: 23, scope: !8318)
!8320 = !DILocation(line: 2823, column: 29, scope: !8318)
!8321 = !DILocation(line: 2823, column: 4, scope: !8318)
!8322 = !DILocation(line: 2823, column: 10, scope: !8318)
!8323 = !DILocation(line: 2823, column: 15, scope: !8318)
!8324 = !DILocation(line: 2824, column: 7, scope: !8318)
!8325 = distinct !{!8325, !8234, !8326}
!8326 = !DILocation(line: 2826, column: 2, scope: !8212)
!8327 = !DILocation(line: 2827, column: 2, scope: !8212)
!8328 = !DILocation(line: 2827, column: 8, scope: !8212)
!8329 = !DILocation(line: 2827, column: 13, scope: !8212)
!8330 = !DILocation(line: 2828, column: 2, scope: !8212)
!8331 = !DILocation(line: 2828, column: 9, scope: !8212)
!8332 = !DILocation(line: 2828, column: 13, scope: !8212)
!8333 = !DILocation(line: 2829, column: 16, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 2828, column: 18)
!8335 = !DILocation(line: 2829, column: 22, scope: !8334)
!8336 = !DILocation(line: 2829, column: 28, scope: !8334)
!8337 = !DILocation(line: 2829, column: 3, scope: !8334)
!8338 = !DILocation(line: 2829, column: 9, scope: !8334)
!8339 = !DILocation(line: 2829, column: 14, scope: !8334)
!8340 = !DILocation(line: 2830, column: 6, scope: !8334)
!8341 = distinct !{!8341, !8330, !8342}
!8342 = !DILocation(line: 2831, column: 2, scope: !8212)
!8343 = !DILocation(line: 2833, column: 7, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 2833, column: 6)
!8345 = !DILocation(line: 2833, column: 6, scope: !8212)
!8346 = !DILocation(line: 2834, column: 19, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8344, file: !3, line: 2833, column: 16)
!8348 = !DILocation(line: 2834, column: 3, scope: !8347)
!8349 = !DILocation(line: 2835, column: 2, scope: !8347)
!8350 = !DILocation(line: 2836, column: 1, scope: !8212)
!8351 = distinct !DISubprogram(name: "txt_delete_line", scope: !3, file: !3, line: 2399, type: !8352, scopeLine: 2400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!8352 = !DISubroutineType(types: !8353)
!8353 = !{null, !139, !124}
!8354 = !DILocalVariable(name: "text", arg: 1, scope: !8351, file: !3, line: 2399, type: !139)
!8355 = !DILocation(line: 2399, column: 35, scope: !8351)
!8356 = !DILocalVariable(name: "line", arg: 2, scope: !8351, file: !3, line: 2399, type: !124)
!8357 = !DILocation(line: 2399, column: 51, scope: !8351)
!8358 = !DILocation(line: 2401, column: 7, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8351, file: !3, line: 2401, column: 6)
!8360 = !DILocation(line: 2401, column: 13, scope: !8359)
!8361 = !DILocation(line: 2401, column: 6, scope: !8351)
!8362 = !DILocation(line: 2401, column: 19, scope: !8359)
!8363 = !DILocation(line: 2403, column: 15, scope: !8351)
!8364 = !DILocation(line: 2403, column: 21, scope: !8351)
!8365 = !DILocation(line: 2403, column: 28, scope: !8351)
!8366 = !DILocation(line: 2403, column: 2, scope: !8351)
!8367 = !DILocation(line: 2405, column: 6, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8351, file: !3, line: 2405, column: 6)
!8369 = !DILocation(line: 2405, column: 12, scope: !8368)
!8370 = !DILocation(line: 2405, column: 6, scope: !8351)
!8371 = !DILocation(line: 2405, column: 18, scope: !8368)
!8372 = !DILocation(line: 2405, column: 28, scope: !8368)
!8373 = !DILocation(line: 2405, column: 34, scope: !8368)
!8374 = !DILocation(line: 2406, column: 6, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8351, file: !3, line: 2406, column: 6)
!8376 = !DILocation(line: 2406, column: 12, scope: !8375)
!8377 = !DILocation(line: 2406, column: 6, scope: !8351)
!8378 = !DILocation(line: 2406, column: 20, scope: !8375)
!8379 = !DILocation(line: 2406, column: 30, scope: !8375)
!8380 = !DILocation(line: 2406, column: 36, scope: !8375)
!8381 = !DILocation(line: 2408, column: 2, scope: !8351)
!8382 = !DILocation(line: 2408, column: 12, scope: !8351)
!8383 = !DILocation(line: 2410, column: 17, scope: !8351)
!8384 = !DILocation(line: 2410, column: 2, scope: !8351)
!8385 = !DILocation(line: 2411, column: 17, scope: !8351)
!8386 = !DILocation(line: 2411, column: 2, scope: !8351)
!8387 = !DILocation(line: 2412, column: 1, scope: !8351)
!8388 = distinct !DISubprogram(name: "txt_move_lines", scope: !3, file: !3, line: 2882, type: !8389, scopeLine: 2883, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!8389 = !DISubroutineType(types: !8390)
!8390 = !{null, !252, !913}
!8391 = !DILocalVariable(name: "text", arg: 1, scope: !8388, file: !3, line: 2882, type: !252)
!8392 = !DILocation(line: 2882, column: 34, scope: !8388)
!8393 = !DILocalVariable(name: "direction", arg: 2, scope: !8388, file: !3, line: 2882, type: !913)
!8394 = !DILocation(line: 2882, column: 50, scope: !8388)
!8395 = !DILocalVariable(name: "line_other", scope: !8388, file: !3, line: 2884, type: !124)
!8396 = !DILocation(line: 2884, column: 12, scope: !8388)
!8397 = !DILocation(line: 2888, column: 7, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 2888, column: 6)
!8399 = !DILocation(line: 2888, column: 13, scope: !8398)
!8400 = !DILocation(line: 2888, column: 18, scope: !8398)
!8401 = !DILocation(line: 2888, column: 22, scope: !8398)
!8402 = !DILocation(line: 2888, column: 28, scope: !8398)
!8403 = !DILocation(line: 2888, column: 6, scope: !8388)
!8404 = !DILocation(line: 2888, column: 34, scope: !8398)
!8405 = !DILocation(line: 2890, column: 20, scope: !8388)
!8406 = !DILocation(line: 2890, column: 2, scope: !8388)
!8407 = !DILocation(line: 2892, column: 17, scope: !8388)
!8408 = !DILocation(line: 2892, column: 27, scope: !8388)
!8409 = !DILocation(line: 2892, column: 16, scope: !8388)
!8410 = !DILocation(line: 2892, column: 52, scope: !8388)
!8411 = !DILocation(line: 2892, column: 58, scope: !8388)
!8412 = !DILocation(line: 2892, column: 64, scope: !8388)
!8413 = !DILocation(line: 2892, column: 71, scope: !8388)
!8414 = !DILocation(line: 2892, column: 77, scope: !8388)
!8415 = !DILocation(line: 2892, column: 83, scope: !8388)
!8416 = !DILocation(line: 2892, column: 13, scope: !8388)
!8417 = !DILocation(line: 2894, column: 7, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 2894, column: 6)
!8419 = !DILocation(line: 2894, column: 6, scope: !8388)
!8420 = !DILocation(line: 2894, column: 19, scope: !8418)
!8421 = !DILocation(line: 2896, column: 15, scope: !8388)
!8422 = !DILocation(line: 2896, column: 21, scope: !8388)
!8423 = !DILocation(line: 2896, column: 28, scope: !8388)
!8424 = !DILocation(line: 2896, column: 2, scope: !8388)
!8425 = !DILocation(line: 2898, column: 6, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 2898, column: 6)
!8427 = !DILocation(line: 2898, column: 16, scope: !8426)
!8428 = !DILocation(line: 2898, column: 6, scope: !8388)
!8429 = !DILocation(line: 2899, column: 25, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 2898, column: 39)
!8431 = !DILocation(line: 2899, column: 31, scope: !8430)
!8432 = !DILocation(line: 2899, column: 38, scope: !8430)
!8433 = !DILocation(line: 2899, column: 44, scope: !8430)
!8434 = !DILocation(line: 2899, column: 50, scope: !8430)
!8435 = !DILocation(line: 2899, column: 3, scope: !8430)
!8436 = !DILocation(line: 2900, column: 2, scope: !8430)
!8437 = !DILocation(line: 2902, column: 24, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 2901, column: 7)
!8439 = !DILocation(line: 2902, column: 30, scope: !8438)
!8440 = !DILocation(line: 2902, column: 37, scope: !8438)
!8441 = !DILocation(line: 2902, column: 43, scope: !8438)
!8442 = !DILocation(line: 2902, column: 49, scope: !8438)
!8443 = !DILocation(line: 2902, column: 3, scope: !8438)
!8444 = !DILocation(line: 2905, column: 17, scope: !8388)
!8445 = !DILocation(line: 2905, column: 2, scope: !8388)
!8446 = !DILocation(line: 2906, column: 17, scope: !8388)
!8447 = !DILocation(line: 2906, column: 2, scope: !8388)
!8448 = !DILocation(line: 2908, column: 7, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 2908, column: 6)
!8450 = !DILocation(line: 2908, column: 6, scope: !8388)
!8451 = !DILocation(line: 2909, column: 19, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8449, file: !3, line: 2908, column: 16)
!8453 = !DILocation(line: 2909, column: 26, scope: !8452)
!8454 = !DILocation(line: 2909, column: 36, scope: !8452)
!8455 = !DILocation(line: 2909, column: 25, scope: !8452)
!8456 = !DILocation(line: 2909, column: 3, scope: !8452)
!8457 = !DILocation(line: 2910, column: 2, scope: !8452)
!8458 = !DILocation(line: 2911, column: 1, scope: !8388)
!8459 = distinct !DISubprogram(name: "txt_do_redo", scope: !3, file: !3, line: 2174, type: !332, scopeLine: 2175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!8460 = !DILocalVariable(name: "text", arg: 1, scope: !8459, file: !3, line: 2174, type: !139)
!8461 = !DILocation(line: 2174, column: 24, scope: !8459)
!8462 = !DILocalVariable(name: "op", scope: !8459, file: !3, line: 2176, type: !134)
!8463 = !DILocation(line: 2176, column: 7, scope: !8459)
!8464 = !DILocalVariable(name: "buf", scope: !8459, file: !3, line: 2177, type: !133)
!8465 = !DILocation(line: 2177, column: 8, scope: !8459)
!8466 = !DILocalVariable(name: "linep", scope: !8459, file: !3, line: 2178, type: !7)
!8467 = !DILocation(line: 2178, column: 15, scope: !8459)
!8468 = !DILocalVariable(name: "charp", scope: !8459, file: !3, line: 2179, type: !732)
!8469 = !DILocation(line: 2179, column: 17, scope: !8459)
!8470 = !DILocalVariable(name: "uchar", scope: !8459, file: !3, line: 2180, type: !7)
!8471 = !DILocation(line: 2180, column: 15, scope: !8459)
!8472 = !DILocalVariable(name: "curln", scope: !8459, file: !3, line: 2181, type: !7)
!8473 = !DILocation(line: 2181, column: 15, scope: !8459)
!8474 = !DILocalVariable(name: "selln", scope: !8459, file: !3, line: 2181, type: !7)
!8475 = !DILocation(line: 2181, column: 22, scope: !8459)
!8476 = !DILocalVariable(name: "curc", scope: !8459, file: !3, line: 2182, type: !732)
!8477 = !DILocation(line: 2182, column: 17, scope: !8459)
!8478 = !DILocalVariable(name: "selc", scope: !8459, file: !3, line: 2182, type: !732)
!8479 = !DILocation(line: 2182, column: 23, scope: !8459)
!8480 = !DILocation(line: 2184, column: 2, scope: !8459)
!8481 = !DILocation(line: 2184, column: 8, scope: !8459)
!8482 = !DILocation(line: 2184, column: 16, scope: !8459)
!8483 = !DILocation(line: 2185, column: 7, scope: !8459)
!8484 = !DILocation(line: 2185, column: 13, scope: !8459)
!8485 = !DILocation(line: 2185, column: 22, scope: !8459)
!8486 = !DILocation(line: 2185, column: 28, scope: !8459)
!8487 = !DILocation(line: 2185, column: 5, scope: !8459)
!8488 = !DILocation(line: 2187, column: 7, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8459, file: !3, line: 2187, column: 6)
!8490 = !DILocation(line: 2187, column: 6, scope: !8459)
!8491 = !DILocation(line: 2188, column: 3, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8489, file: !3, line: 2187, column: 11)
!8493 = !DILocation(line: 2188, column: 9, scope: !8492)
!8494 = !DILocation(line: 2188, column: 17, scope: !8492)
!8495 = !DILocation(line: 2189, column: 3, scope: !8492)
!8496 = !DILocation(line: 2192, column: 10, scope: !8459)
!8497 = !DILocation(line: 2194, column: 10, scope: !8459)
!8498 = !DILocation(line: 2194, column: 2, scope: !8459)
!8499 = !DILocation(line: 2199, column: 4, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8459, file: !3, line: 2194, column: 14)
!8501 = !DILocation(line: 2199, column: 10, scope: !8500)
!8502 = !DILocation(line: 2199, column: 18, scope: !8500)
!8503 = !DILocation(line: 2202, column: 22, scope: !8500)
!8504 = !DILocation(line: 2202, column: 28, scope: !8500)
!8505 = !DILocation(line: 2202, column: 39, scope: !8500)
!8506 = !DILocation(line: 2202, column: 45, scope: !8500)
!8507 = !DILocation(line: 2202, column: 4, scope: !8500)
!8508 = !DILocation(line: 2203, column: 16, scope: !8500)
!8509 = !DILocation(line: 2203, column: 22, scope: !8500)
!8510 = !DILocation(line: 2203, column: 29, scope: !8500)
!8511 = !DILocation(line: 2203, column: 4, scope: !8500)
!8512 = !DILocation(line: 2204, column: 16, scope: !8500)
!8513 = !DILocation(line: 2204, column: 22, scope: !8500)
!8514 = !DILocation(line: 2204, column: 29, scope: !8500)
!8515 = !DILocation(line: 2204, column: 4, scope: !8500)
!8516 = !DILocation(line: 2206, column: 12, scope: !8500)
!8517 = !DILocation(line: 2206, column: 15, scope: !8500)
!8518 = !DILocation(line: 2206, column: 31, scope: !8500)
!8519 = !DILocation(line: 2206, column: 10, scope: !8500)
!8520 = !DILocation(line: 2207, column: 34, scope: !8500)
!8521 = !DILocation(line: 2207, column: 40, scope: !8500)
!8522 = !DILocation(line: 2207, column: 51, scope: !8500)
!8523 = !DILocation(line: 2207, column: 57, scope: !8500)
!8524 = !DILocation(line: 2207, column: 67, scope: !8500)
!8525 = !DILocation(line: 2207, column: 12, scope: !8500)
!8526 = !DILocation(line: 2207, column: 10, scope: !8500)
!8527 = !DILocation(line: 2209, column: 17, scope: !8500)
!8528 = !DILocation(line: 2209, column: 23, scope: !8500)
!8529 = !DILocation(line: 2209, column: 4, scope: !8500)
!8530 = !DILocation(line: 2210, column: 4, scope: !8500)
!8531 = !DILocation(line: 2216, column: 4, scope: !8500)
!8532 = !DILocation(line: 2216, column: 10, scope: !8500)
!8533 = !DILocation(line: 2216, column: 18, scope: !8500)
!8534 = !DILocation(line: 2219, column: 22, scope: !8500)
!8535 = !DILocation(line: 2219, column: 28, scope: !8500)
!8536 = !DILocation(line: 2219, column: 39, scope: !8500)
!8537 = !DILocation(line: 2219, column: 45, scope: !8500)
!8538 = !DILocation(line: 2219, column: 4, scope: !8500)
!8539 = !DILocation(line: 2220, column: 16, scope: !8500)
!8540 = !DILocation(line: 2220, column: 22, scope: !8500)
!8541 = !DILocation(line: 2220, column: 29, scope: !8500)
!8542 = !DILocation(line: 2220, column: 4, scope: !8500)
!8543 = !DILocation(line: 2221, column: 16, scope: !8500)
!8544 = !DILocation(line: 2221, column: 22, scope: !8500)
!8545 = !DILocation(line: 2221, column: 29, scope: !8500)
!8546 = !DILocation(line: 2221, column: 4, scope: !8500)
!8547 = !DILocation(line: 2223, column: 22, scope: !8500)
!8548 = !DILocation(line: 2223, column: 25, scope: !8500)
!8549 = !DILocation(line: 2223, column: 37, scope: !8500)
!8550 = !DILocation(line: 2223, column: 4, scope: !8500)
!8551 = !DILocation(line: 2223, column: 10, scope: !8500)
!8552 = !DILocation(line: 2223, column: 19, scope: !8500)
!8553 = !DILocation(line: 2226, column: 19, scope: !8500)
!8554 = !DILocation(line: 2226, column: 4, scope: !8500)
!8555 = !DILocation(line: 2227, column: 23, scope: !8500)
!8556 = !DILocation(line: 2227, column: 4, scope: !8500)
!8557 = !DILocation(line: 2229, column: 4, scope: !8500)
!8558 = !DILocation(line: 2235, column: 4, scope: !8500)
!8559 = !DILocation(line: 2235, column: 10, scope: !8500)
!8560 = !DILocation(line: 2235, column: 18, scope: !8500)
!8561 = !DILocation(line: 2238, column: 22, scope: !8500)
!8562 = !DILocation(line: 2238, column: 28, scope: !8500)
!8563 = !DILocation(line: 2238, column: 39, scope: !8500)
!8564 = !DILocation(line: 2238, column: 45, scope: !8500)
!8565 = !DILocation(line: 2238, column: 4, scope: !8500)
!8566 = !DILocation(line: 2239, column: 16, scope: !8500)
!8567 = !DILocation(line: 2239, column: 22, scope: !8500)
!8568 = !DILocation(line: 2239, column: 29, scope: !8500)
!8569 = !DILocation(line: 2239, column: 4, scope: !8500)
!8570 = !DILocation(line: 2240, column: 16, scope: !8500)
!8571 = !DILocation(line: 2240, column: 22, scope: !8500)
!8572 = !DILocation(line: 2240, column: 29, scope: !8500)
!8573 = !DILocation(line: 2240, column: 4, scope: !8500)
!8574 = !DILocation(line: 2242, column: 22, scope: !8500)
!8575 = !DILocation(line: 2242, column: 25, scope: !8500)
!8576 = !DILocation(line: 2242, column: 38, scope: !8500)
!8577 = !DILocation(line: 2242, column: 4, scope: !8500)
!8578 = !DILocation(line: 2242, column: 10, scope: !8500)
!8579 = !DILocation(line: 2242, column: 19, scope: !8500)
!8580 = !DILocation(line: 2244, column: 20, scope: !8500)
!8581 = !DILocation(line: 2244, column: 4, scope: !8500)
!8582 = !DILocation(line: 2246, column: 4, scope: !8500)
!8583 = !DILocation(line: 2249, column: 4, scope: !8500)
!8584 = !DILocation(line: 2249, column: 10, scope: !8500)
!8585 = !DILocation(line: 2249, column: 18, scope: !8500)
!8586 = !DILocation(line: 2252, column: 26, scope: !8500)
!8587 = !DILocation(line: 2252, column: 32, scope: !8500)
!8588 = !DILocation(line: 2252, column: 43, scope: !8500)
!8589 = !DILocation(line: 2252, column: 49, scope: !8500)
!8590 = !DILocation(line: 2252, column: 4, scope: !8500)
!8591 = !DILocation(line: 2253, column: 16, scope: !8500)
!8592 = !DILocation(line: 2253, column: 22, scope: !8500)
!8593 = !DILocation(line: 2253, column: 29, scope: !8500)
!8594 = !DILocation(line: 2253, column: 4, scope: !8500)
!8595 = !DILocation(line: 2254, column: 16, scope: !8500)
!8596 = !DILocation(line: 2254, column: 22, scope: !8500)
!8597 = !DILocation(line: 2254, column: 29, scope: !8500)
!8598 = !DILocation(line: 2254, column: 4, scope: !8500)
!8599 = !DILocation(line: 2257, column: 33, scope: !8500)
!8600 = !DILocation(line: 2257, column: 39, scope: !8500)
!8601 = !DILocation(line: 2257, column: 50, scope: !8500)
!8602 = !DILocation(line: 2257, column: 56, scope: !8500)
!8603 = !DILocation(line: 2257, column: 12, scope: !8500)
!8604 = !DILocation(line: 2257, column: 10, scope: !8500)
!8605 = !DILocation(line: 2259, column: 22, scope: !8500)
!8606 = !DILocation(line: 2259, column: 4, scope: !8500)
!8607 = !DILocation(line: 2259, column: 10, scope: !8500)
!8608 = !DILocation(line: 2259, column: 19, scope: !8500)
!8609 = !DILocation(line: 2262, column: 4, scope: !8500)
!8610 = !DILocation(line: 2262, column: 10, scope: !8500)
!8611 = !DILocation(line: 2262, column: 19, scope: !8500)
!8612 = !DILocation(line: 2264, column: 19, scope: !8500)
!8613 = !DILocation(line: 2264, column: 4, scope: !8500)
!8614 = !DILocation(line: 2266, column: 4, scope: !8500)
!8615 = !DILocation(line: 2269, column: 4, scope: !8500)
!8616 = !DILocation(line: 2269, column: 10, scope: !8500)
!8617 = !DILocation(line: 2269, column: 18, scope: !8500)
!8618 = !DILocation(line: 2272, column: 26, scope: !8500)
!8619 = !DILocation(line: 2272, column: 32, scope: !8500)
!8620 = !DILocation(line: 2272, column: 43, scope: !8500)
!8621 = !DILocation(line: 2272, column: 49, scope: !8500)
!8622 = !DILocation(line: 2272, column: 4, scope: !8500)
!8623 = !DILocation(line: 2273, column: 16, scope: !8500)
!8624 = !DILocation(line: 2273, column: 22, scope: !8500)
!8625 = !DILocation(line: 2273, column: 29, scope: !8500)
!8626 = !DILocation(line: 2273, column: 4, scope: !8500)
!8627 = !DILocation(line: 2274, column: 16, scope: !8500)
!8628 = !DILocation(line: 2274, column: 22, scope: !8500)
!8629 = !DILocation(line: 2274, column: 29, scope: !8500)
!8630 = !DILocation(line: 2274, column: 4, scope: !8500)
!8631 = !DILocation(line: 2277, column: 33, scope: !8500)
!8632 = !DILocation(line: 2277, column: 39, scope: !8500)
!8633 = !DILocation(line: 2277, column: 50, scope: !8500)
!8634 = !DILocation(line: 2277, column: 56, scope: !8500)
!8635 = !DILocation(line: 2277, column: 12, scope: !8500)
!8636 = !DILocation(line: 2277, column: 10, scope: !8500)
!8637 = !DILocation(line: 2279, column: 10, scope: !8500)
!8638 = !DILocation(line: 2279, column: 22, scope: !8500)
!8639 = !DILocation(line: 2279, column: 28, scope: !8500)
!8640 = !DILocation(line: 2279, column: 8, scope: !8500)
!8641 = !DILocation(line: 2280, column: 11, scope: !8500)
!8642 = !DILocation(line: 2280, column: 17, scope: !8500)
!8643 = !DILocation(line: 2280, column: 23, scope: !8500)
!8644 = !DILocation(line: 2280, column: 32, scope: !8500)
!8645 = !DILocation(line: 2280, column: 38, scope: !8500)
!8646 = !DILocation(line: 2280, column: 49, scope: !8500)
!8647 = !DILocation(line: 2280, column: 4, scope: !8500)
!8648 = !DILocation(line: 2281, column: 22, scope: !8500)
!8649 = !DILocation(line: 2281, column: 4, scope: !8500)
!8650 = !DILocation(line: 2281, column: 10, scope: !8500)
!8651 = !DILocation(line: 2281, column: 19, scope: !8500)
!8652 = !DILocation(line: 2282, column: 4, scope: !8500)
!8653 = !DILocation(line: 2282, column: 8, scope: !8500)
!8654 = !DILocation(line: 2282, column: 15, scope: !8500)
!8655 = !DILocation(line: 2284, column: 19, scope: !8500)
!8656 = !DILocation(line: 2284, column: 25, scope: !8500)
!8657 = !DILocation(line: 2284, column: 4, scope: !8500)
!8658 = !DILocation(line: 2285, column: 4, scope: !8500)
!8659 = !DILocation(line: 2285, column: 14, scope: !8500)
!8660 = !DILocation(line: 2288, column: 4, scope: !8500)
!8661 = !DILocation(line: 2288, column: 10, scope: !8500)
!8662 = !DILocation(line: 2288, column: 19, scope: !8500)
!8663 = !DILocation(line: 2290, column: 4, scope: !8500)
!8664 = !DILocation(line: 2299, column: 4, scope: !8500)
!8665 = !DILocation(line: 2299, column: 10, scope: !8500)
!8666 = !DILocation(line: 2299, column: 18, scope: !8500)
!8667 = !DILocation(line: 2302, column: 26, scope: !8500)
!8668 = !DILocation(line: 2302, column: 32, scope: !8500)
!8669 = !DILocation(line: 2302, column: 43, scope: !8500)
!8670 = !DILocation(line: 2302, column: 49, scope: !8500)
!8671 = !DILocation(line: 2302, column: 4, scope: !8500)
!8672 = !DILocation(line: 2303, column: 16, scope: !8500)
!8673 = !DILocation(line: 2303, column: 22, scope: !8500)
!8674 = !DILocation(line: 2303, column: 29, scope: !8500)
!8675 = !DILocation(line: 2303, column: 4, scope: !8500)
!8676 = !DILocation(line: 2304, column: 16, scope: !8500)
!8677 = !DILocation(line: 2304, column: 22, scope: !8500)
!8678 = !DILocation(line: 2304, column: 29, scope: !8500)
!8679 = !DILocation(line: 2304, column: 4, scope: !8500)
!8680 = !DILocation(line: 2306, column: 8, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8500, file: !3, line: 2306, column: 8)
!8682 = !DILocation(line: 2306, column: 11, scope: !8681)
!8683 = !DILocation(line: 2306, column: 8, scope: !8500)
!8684 = !DILocation(line: 2307, column: 16, scope: !8685)
!8685 = distinct !DILexicalBlock(scope: !8681, file: !3, line: 2306, column: 27)
!8686 = !DILocation(line: 2307, column: 5, scope: !8685)
!8687 = !DILocation(line: 2308, column: 4, scope: !8685)
!8688 = !DILocation(line: 2309, column: 13, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8681, file: !3, line: 2309, column: 13)
!8690 = !DILocation(line: 2309, column: 16, scope: !8689)
!8691 = !DILocation(line: 2309, column: 13, scope: !8681)
!8692 = !DILocation(line: 2310, column: 18, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 2309, column: 34)
!8694 = !DILocation(line: 2310, column: 5, scope: !8693)
!8695 = !DILocation(line: 2311, column: 4, scope: !8693)
!8696 = !DILocation(line: 2312, column: 13, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 2312, column: 13)
!8698 = !DILocation(line: 2312, column: 16, scope: !8697)
!8699 = !DILocation(line: 2312, column: 13, scope: !8689)
!8700 = !DILocation(line: 2313, column: 17, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8697, file: !3, line: 2312, column: 33)
!8702 = !DILocation(line: 2313, column: 5, scope: !8701)
!8703 = !DILocation(line: 2314, column: 4, scope: !8701)
!8704 = !DILocation(line: 2315, column: 13, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8697, file: !3, line: 2315, column: 13)
!8706 = !DILocation(line: 2315, column: 16, scope: !8705)
!8707 = !DILocation(line: 2315, column: 13, scope: !8697)
!8708 = !DILocation(line: 2316, column: 19, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !8705, file: !3, line: 2315, column: 35)
!8710 = !DILocation(line: 2316, column: 5, scope: !8709)
!8711 = !DILocation(line: 2317, column: 4, scope: !8709)
!8712 = !DILocation(line: 2318, column: 13, scope: !8713)
!8713 = distinct !DILexicalBlock(scope: !8705, file: !3, line: 2318, column: 13)
!8714 = !DILocation(line: 2318, column: 16, scope: !8713)
!8715 = !DILocation(line: 2318, column: 13, scope: !8705)
!8716 = !DILocation(line: 2319, column: 24, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8713, file: !3, line: 2318, column: 35)
!8718 = !DILocation(line: 2319, column: 5, scope: !8717)
!8719 = !DILocation(line: 2320, column: 4, scope: !8717)
!8720 = !DILocation(line: 2321, column: 13, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8713, file: !3, line: 2321, column: 13)
!8722 = !DILocation(line: 2321, column: 16, scope: !8721)
!8723 = !DILocation(line: 2321, column: 13, scope: !8713)
!8724 = !DILocation(line: 2323, column: 17, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 2321, column: 39)
!8726 = !DILocation(line: 2323, column: 23, scope: !8725)
!8727 = !DILocation(line: 2323, column: 29, scope: !8725)
!8728 = !DILocation(line: 2323, column: 34, scope: !8725)
!8729 = !DILocation(line: 2323, column: 5, scope: !8725)
!8730 = !DILocation(line: 2324, column: 17, scope: !8725)
!8731 = !DILocation(line: 2324, column: 23, scope: !8725)
!8732 = !DILocation(line: 2324, column: 29, scope: !8725)
!8733 = !DILocation(line: 2324, column: 34, scope: !8725)
!8734 = !DILocation(line: 2324, column: 5, scope: !8725)
!8735 = !DILocation(line: 2326, column: 20, scope: !8725)
!8736 = !DILocation(line: 2326, column: 5, scope: !8725)
!8737 = !DILocation(line: 2327, column: 4, scope: !8725)
!8738 = !DILocation(line: 2328, column: 13, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 2328, column: 13)
!8740 = !DILocation(line: 2328, column: 16, scope: !8739)
!8741 = !DILocation(line: 2328, column: 13, scope: !8721)
!8742 = !DILocation(line: 2330, column: 17, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8739, file: !3, line: 2328, column: 41)
!8744 = !DILocation(line: 2330, column: 23, scope: !8743)
!8745 = !DILocation(line: 2330, column: 29, scope: !8743)
!8746 = !DILocation(line: 2330, column: 34, scope: !8743)
!8747 = !DILocation(line: 2330, column: 5, scope: !8743)
!8748 = !DILocation(line: 2331, column: 17, scope: !8743)
!8749 = !DILocation(line: 2331, column: 23, scope: !8743)
!8750 = !DILocation(line: 2331, column: 29, scope: !8743)
!8751 = !DILocation(line: 2331, column: 34, scope: !8743)
!8752 = !DILocation(line: 2331, column: 5, scope: !8743)
!8753 = !DILocation(line: 2333, column: 20, scope: !8743)
!8754 = !DILocation(line: 2333, column: 5, scope: !8743)
!8755 = !DILocation(line: 2334, column: 4, scope: !8743)
!8756 = !DILocation(line: 2337, column: 16, scope: !8500)
!8757 = !DILocation(line: 2337, column: 22, scope: !8500)
!8758 = !DILocation(line: 2337, column: 29, scope: !8500)
!8759 = !DILocation(line: 2337, column: 4, scope: !8500)
!8760 = !DILocation(line: 2338, column: 16, scope: !8500)
!8761 = !DILocation(line: 2338, column: 22, scope: !8500)
!8762 = !DILocation(line: 2338, column: 29, scope: !8500)
!8763 = !DILocation(line: 2338, column: 4, scope: !8500)
!8764 = !DILocation(line: 2340, column: 4, scope: !8500)
!8765 = !DILocation(line: 2343, column: 4, scope: !8500)
!8766 = !DILocation(line: 2343, column: 10, scope: !8500)
!8767 = !DILocation(line: 2343, column: 19, scope: !8500)
!8768 = !DILocation(line: 2345, column: 4, scope: !8500)
!8769 = !DILocation(line: 2348, column: 10, scope: !8459)
!8770 = !DILocation(line: 2349, column: 1, scope: !8459)
!8771 = distinct !DISubprogram(name: "txt_redo_read_cur", scope: !3, file: !3, line: 1930, type: !7510, scopeLine: 1931, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!8772 = !DILocalVariable(name: "undo_buf", arg: 1, scope: !8771, file: !3, line: 1930, type: !304)
!8773 = !DILocation(line: 1930, column: 43, scope: !8771)
!8774 = !DILocalVariable(name: "undo_pos", arg: 2, scope: !8771, file: !3, line: 1930, type: !4804)
!8775 = !DILocation(line: 1930, column: 58, scope: !8771)
!8776 = !DILocalVariable(name: "curln", arg: 3, scope: !8771, file: !3, line: 1930, type: !2287)
!8777 = !DILocation(line: 1930, column: 82, scope: !8771)
!8778 = !DILocalVariable(name: "curc", arg: 4, scope: !8771, file: !3, line: 1930, type: !7512)
!8779 = !DILocation(line: 1930, column: 105, scope: !8771)
!8780 = !DILocation(line: 1932, column: 32, scope: !8771)
!8781 = !DILocation(line: 1932, column: 42, scope: !8771)
!8782 = !DILocation(line: 1932, column: 11, scope: !8771)
!8783 = !DILocation(line: 1932, column: 3, scope: !8771)
!8784 = !DILocation(line: 1932, column: 9, scope: !8771)
!8785 = !DILocation(line: 1933, column: 32, scope: !8771)
!8786 = !DILocation(line: 1933, column: 42, scope: !8771)
!8787 = !DILocation(line: 1933, column: 11, scope: !8771)
!8788 = !DILocation(line: 1933, column: 3, scope: !8771)
!8789 = !DILocation(line: 1933, column: 9, scope: !8771)
!8790 = !DILocation(line: 1934, column: 1, scope: !8771)
!8791 = distinct !DISubprogram(name: "txt_redo_read_unicode", scope: !3, file: !3, line: 1952, type: !7633, scopeLine: 1953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!8792 = !DILocalVariable(name: "undo_buf", arg: 1, scope: !8791, file: !3, line: 1952, type: !304)
!8793 = !DILocation(line: 1952, column: 55, scope: !8791)
!8794 = !DILocalVariable(name: "undo_pos", arg: 2, scope: !8791, file: !3, line: 1952, type: !4804)
!8795 = !DILocation(line: 1952, column: 70, scope: !8791)
!8796 = !DILocalVariable(name: "bytes", arg: 3, scope: !8791, file: !3, line: 1952, type: !176)
!8797 = !DILocation(line: 1952, column: 86, scope: !8791)
!8798 = !DILocalVariable(name: "unicode", scope: !8791, file: !3, line: 1954, type: !7)
!8799 = !DILocation(line: 1954, column: 15, scope: !8791)
!8800 = !DILocalVariable(name: "utf8", scope: !8791, file: !3, line: 1955, type: !2321)
!8801 = !DILocation(line: 1955, column: 7, scope: !8791)
!8802 = !DILocation(line: 1957, column: 10, scope: !8791)
!8803 = !DILocation(line: 1957, column: 2, scope: !8791)
!8804 = !DILocation(line: 1959, column: 14, scope: !8805)
!8805 = distinct !DILexicalBlock(scope: !8791, file: !3, line: 1957, column: 17)
!8806 = !DILocation(line: 1959, column: 24, scope: !8805)
!8807 = !DILocation(line: 1959, column: 23, scope: !8805)
!8808 = !DILocation(line: 1959, column: 12, scope: !8805)
!8809 = !DILocation(line: 1959, column: 37, scope: !8805)
!8810 = !DILocation(line: 1959, column: 46, scope: !8805)
!8811 = !DILocation(line: 1960, column: 4, scope: !8805)
!8812 = !DILocation(line: 1962, column: 14, scope: !8805)
!8813 = !DILocation(line: 1962, column: 24, scope: !8805)
!8814 = !DILocation(line: 1962, column: 23, scope: !8805)
!8815 = !DILocation(line: 1962, column: 4, scope: !8805)
!8816 = !DILocation(line: 1962, column: 12, scope: !8805)
!8817 = !DILocation(line: 1962, column: 37, scope: !8805)
!8818 = !DILocation(line: 1962, column: 46, scope: !8805)
!8819 = !DILocation(line: 1963, column: 14, scope: !8805)
!8820 = !DILocation(line: 1963, column: 24, scope: !8805)
!8821 = !DILocation(line: 1963, column: 23, scope: !8805)
!8822 = !DILocation(line: 1963, column: 4, scope: !8805)
!8823 = !DILocation(line: 1963, column: 12, scope: !8805)
!8824 = !DILocation(line: 1963, column: 37, scope: !8805)
!8825 = !DILocation(line: 1963, column: 46, scope: !8805)
!8826 = !DILocation(line: 1964, column: 4, scope: !8805)
!8827 = !DILocation(line: 1964, column: 12, scope: !8805)
!8828 = !DILocation(line: 1965, column: 38, scope: !8805)
!8829 = !DILocation(line: 1965, column: 14, scope: !8805)
!8830 = !DILocation(line: 1965, column: 12, scope: !8805)
!8831 = !DILocation(line: 1966, column: 4, scope: !8805)
!8832 = !DILocation(line: 1968, column: 14, scope: !8805)
!8833 = !DILocation(line: 1968, column: 24, scope: !8805)
!8834 = !DILocation(line: 1968, column: 23, scope: !8805)
!8835 = !DILocation(line: 1968, column: 4, scope: !8805)
!8836 = !DILocation(line: 1968, column: 12, scope: !8805)
!8837 = !DILocation(line: 1968, column: 37, scope: !8805)
!8838 = !DILocation(line: 1968, column: 46, scope: !8805)
!8839 = !DILocation(line: 1969, column: 14, scope: !8805)
!8840 = !DILocation(line: 1969, column: 24, scope: !8805)
!8841 = !DILocation(line: 1969, column: 23, scope: !8805)
!8842 = !DILocation(line: 1969, column: 4, scope: !8805)
!8843 = !DILocation(line: 1969, column: 12, scope: !8805)
!8844 = !DILocation(line: 1969, column: 37, scope: !8805)
!8845 = !DILocation(line: 1969, column: 46, scope: !8805)
!8846 = !DILocation(line: 1970, column: 14, scope: !8805)
!8847 = !DILocation(line: 1970, column: 24, scope: !8805)
!8848 = !DILocation(line: 1970, column: 23, scope: !8805)
!8849 = !DILocation(line: 1970, column: 4, scope: !8805)
!8850 = !DILocation(line: 1970, column: 12, scope: !8805)
!8851 = !DILocation(line: 1970, column: 37, scope: !8805)
!8852 = !DILocation(line: 1970, column: 46, scope: !8805)
!8853 = !DILocation(line: 1971, column: 4, scope: !8805)
!8854 = !DILocation(line: 1971, column: 12, scope: !8805)
!8855 = !DILocation(line: 1972, column: 38, scope: !8805)
!8856 = !DILocation(line: 1972, column: 14, scope: !8805)
!8857 = !DILocation(line: 1972, column: 12, scope: !8805)
!8858 = !DILocation(line: 1973, column: 4, scope: !8805)
!8859 = !DILocation(line: 1975, column: 35, scope: !8805)
!8860 = !DILocation(line: 1975, column: 45, scope: !8805)
!8861 = !DILocation(line: 1975, column: 14, scope: !8805)
!8862 = !DILocation(line: 1975, column: 12, scope: !8805)
!8863 = !DILocation(line: 1976, column: 4, scope: !8805)
!8864 = !DILocation(line: 1980, column: 12, scope: !8805)
!8865 = !DILocation(line: 1981, column: 4, scope: !8805)
!8866 = !DILocation(line: 1984, column: 9, scope: !8791)
!8867 = !DILocation(line: 1984, column: 2, scope: !8791)
!8868 = distinct !DISubprogram(name: "txt_backspace_char", scope: !3, file: !3, line: 2495, type: !332, scopeLine: 2496, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!8869 = !DILocalVariable(name: "text", arg: 1, scope: !8868, file: !3, line: 2495, type: !139)
!8870 = !DILocation(line: 2495, column: 31, scope: !8868)
!8871 = !DILocalVariable(name: "c", scope: !8868, file: !3, line: 2497, type: !7)
!8872 = !DILocation(line: 2497, column: 15, scope: !8868)
!8873 = !DILocation(line: 2499, column: 7, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8868, file: !3, line: 2499, column: 6)
!8875 = !DILocation(line: 2499, column: 13, scope: !8874)
!8876 = !DILocation(line: 2499, column: 6, scope: !8868)
!8877 = !DILocation(line: 2499, column: 19, scope: !8874)
!8878 = !DILocation(line: 2501, column: 18, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8868, file: !3, line: 2501, column: 6)
!8880 = !DILocation(line: 2501, column: 6, scope: !8879)
!8881 = !DILocation(line: 2501, column: 6, scope: !8868)
!8882 = !DILocation(line: 2502, column: 18, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 2501, column: 25)
!8884 = !DILocation(line: 2502, column: 3, scope: !8883)
!8885 = !DILocation(line: 2503, column: 18, scope: !8883)
!8886 = !DILocation(line: 2503, column: 3, scope: !8883)
!8887 = !DILocation(line: 2504, column: 3, scope: !8883)
!8888 = !DILocation(line: 2506, column: 11, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 2506, column: 11)
!8890 = !DILocation(line: 2506, column: 17, scope: !8889)
!8891 = !DILocation(line: 2506, column: 22, scope: !8889)
!8892 = !DILocation(line: 2506, column: 11, scope: !8879)
!8893 = !DILocation(line: 2507, column: 8, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8895, file: !3, line: 2507, column: 7)
!8895 = distinct !DILexicalBlock(scope: !8889, file: !3, line: 2506, column: 28)
!8896 = !DILocation(line: 2507, column: 14, scope: !8894)
!8897 = !DILocation(line: 2507, column: 20, scope: !8894)
!8898 = !DILocation(line: 2507, column: 7, scope: !8895)
!8899 = !DILocation(line: 2507, column: 26, scope: !8894)
!8900 = !DILocation(line: 2509, column: 16, scope: !8895)
!8901 = !DILocation(line: 2509, column: 22, scope: !8895)
!8902 = !DILocation(line: 2509, column: 28, scope: !8895)
!8903 = !DILocation(line: 2509, column: 3, scope: !8895)
!8904 = !DILocation(line: 2509, column: 9, scope: !8895)
!8905 = !DILocation(line: 2509, column: 14, scope: !8895)
!8906 = !DILocation(line: 2510, column: 16, scope: !8895)
!8907 = !DILocation(line: 2510, column: 22, scope: !8895)
!8908 = !DILocation(line: 2510, column: 28, scope: !8895)
!8909 = !DILocation(line: 2510, column: 3, scope: !8895)
!8910 = !DILocation(line: 2510, column: 9, scope: !8895)
!8911 = !DILocation(line: 2510, column: 14, scope: !8895)
!8912 = !DILocation(line: 2512, column: 21, scope: !8895)
!8913 = !DILocation(line: 2512, column: 27, scope: !8895)
!8914 = !DILocation(line: 2512, column: 33, scope: !8895)
!8915 = !DILocation(line: 2512, column: 39, scope: !8895)
!8916 = !DILocation(line: 2512, column: 45, scope: !8895)
!8917 = !DILocation(line: 2512, column: 51, scope: !8895)
!8918 = !DILocation(line: 2512, column: 3, scope: !8895)
!8919 = !DILocation(line: 2513, column: 15, scope: !8895)
!8920 = !DILocation(line: 2513, column: 3, scope: !8895)
!8921 = !DILocation(line: 2514, column: 2, scope: !8895)
!8922 = !DILocalVariable(name: "c_len", scope: !8923, file: !3, line: 2516, type: !753)
!8923 = distinct !DILexicalBlock(scope: !8889, file: !3, line: 2515, column: 7)
!8924 = !DILocation(line: 2516, column: 10, scope: !8923)
!8925 = !DILocalVariable(name: "prev", scope: !8923, file: !3, line: 2517, type: !304)
!8926 = !DILocation(line: 2517, column: 15, scope: !8923)
!8927 = !DILocation(line: 2517, column: 45, scope: !8923)
!8928 = !DILocation(line: 2517, column: 51, scope: !8923)
!8929 = !DILocation(line: 2517, column: 57, scope: !8923)
!8930 = !DILocation(line: 2517, column: 64, scope: !8923)
!8931 = !DILocation(line: 2517, column: 70, scope: !8923)
!8932 = !DILocation(line: 2517, column: 62, scope: !8923)
!8933 = !DILocation(line: 2517, column: 22, scope: !8923)
!8934 = !DILocation(line: 2518, column: 40, scope: !8923)
!8935 = !DILocation(line: 2518, column: 7, scope: !8923)
!8936 = !DILocation(line: 2518, column: 5, scope: !8923)
!8937 = !DILocation(line: 2521, column: 11, scope: !8923)
!8938 = !DILocation(line: 2521, column: 17, scope: !8923)
!8939 = !DILocation(line: 2521, column: 23, scope: !8923)
!8940 = !DILocation(line: 2521, column: 30, scope: !8923)
!8941 = !DILocation(line: 2521, column: 36, scope: !8923)
!8942 = !DILocation(line: 2521, column: 28, scope: !8923)
!8943 = !DILocation(line: 2521, column: 43, scope: !8923)
!8944 = !DILocation(line: 2521, column: 41, scope: !8923)
!8945 = !DILocation(line: 2522, column: 11, scope: !8923)
!8946 = !DILocation(line: 2522, column: 17, scope: !8923)
!8947 = !DILocation(line: 2522, column: 23, scope: !8923)
!8948 = !DILocation(line: 2522, column: 30, scope: !8923)
!8949 = !DILocation(line: 2522, column: 36, scope: !8923)
!8950 = !DILocation(line: 2522, column: 28, scope: !8923)
!8951 = !DILocation(line: 2523, column: 11, scope: !8923)
!8952 = !DILocation(line: 2523, column: 17, scope: !8923)
!8953 = !DILocation(line: 2523, column: 23, scope: !8923)
!8954 = !DILocation(line: 2523, column: 30, scope: !8923)
!8955 = !DILocation(line: 2523, column: 36, scope: !8923)
!8956 = !DILocation(line: 2523, column: 28, scope: !8923)
!8957 = !DILocation(line: 2523, column: 41, scope: !8923)
!8958 = !DILocation(line: 2521, column: 3, scope: !8923)
!8959 = !DILocation(line: 2525, column: 22, scope: !8923)
!8960 = !DILocation(line: 2525, column: 3, scope: !8923)
!8961 = !DILocation(line: 2525, column: 9, scope: !8923)
!8962 = !DILocation(line: 2525, column: 15, scope: !8923)
!8963 = !DILocation(line: 2525, column: 19, scope: !8923)
!8964 = !DILocation(line: 2526, column: 17, scope: !8923)
!8965 = !DILocation(line: 2526, column: 3, scope: !8923)
!8966 = !DILocation(line: 2526, column: 9, scope: !8923)
!8967 = !DILocation(line: 2526, column: 14, scope: !8923)
!8968 = !DILocation(line: 2528, column: 15, scope: !8923)
!8969 = !DILocation(line: 2528, column: 3, scope: !8923)
!8970 = !DILocation(line: 2531, column: 17, scope: !8868)
!8971 = !DILocation(line: 2531, column: 2, scope: !8868)
!8972 = !DILocation(line: 2532, column: 17, scope: !8868)
!8973 = !DILocation(line: 2532, column: 2, scope: !8868)
!8974 = !DILocation(line: 2534, column: 7, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8868, file: !3, line: 2534, column: 6)
!8976 = !DILocation(line: 2534, column: 6, scope: !8868)
!8977 = !DILocation(line: 2534, column: 36, scope: !8975)
!8978 = !DILocation(line: 2534, column: 53, scope: !8975)
!8979 = !DILocation(line: 2534, column: 16, scope: !8975)
!8980 = !DILocation(line: 2535, column: 1, scope: !8868)
!8981 = distinct !DISubprogram(name: "txt_redo_read_cursors", scope: !3, file: !3, line: 1944, type: !7770, scopeLine: 1947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!8982 = !DILocalVariable(name: "undo_buf", arg: 1, scope: !8981, file: !3, line: 1944, type: !304)
!8983 = !DILocation(line: 1944, column: 47, scope: !8981)
!8984 = !DILocalVariable(name: "undo_pos", arg: 2, scope: !8981, file: !3, line: 1944, type: !4804)
!8985 = !DILocation(line: 1944, column: 62, scope: !8981)
!8986 = !DILocalVariable(name: "curln", arg: 3, scope: !8981, file: !3, line: 1945, type: !2287)
!8987 = !DILocation(line: 1945, column: 49, scope: !8981)
!8988 = !DILocalVariable(name: "curc", arg: 4, scope: !8981, file: !3, line: 1945, type: !7512)
!8989 = !DILocation(line: 1945, column: 72, scope: !8981)
!8990 = !DILocalVariable(name: "selln", arg: 5, scope: !8981, file: !3, line: 1946, type: !2287)
!8991 = !DILocation(line: 1946, column: 49, scope: !8981)
!8992 = !DILocalVariable(name: "selc", arg: 6, scope: !8981, file: !3, line: 1946, type: !7512)
!8993 = !DILocation(line: 1946, column: 72, scope: !8981)
!8994 = !DILocation(line: 1948, column: 20, scope: !8981)
!8995 = !DILocation(line: 1948, column: 30, scope: !8981)
!8996 = !DILocation(line: 1948, column: 40, scope: !8981)
!8997 = !DILocation(line: 1948, column: 47, scope: !8981)
!8998 = !DILocation(line: 1948, column: 2, scope: !8981)
!8999 = !DILocation(line: 1949, column: 20, scope: !8981)
!9000 = !DILocation(line: 1949, column: 30, scope: !8981)
!9001 = !DILocation(line: 1949, column: 40, scope: !8981)
!9002 = !DILocation(line: 1949, column: 47, scope: !8981)
!9003 = !DILocation(line: 1949, column: 2, scope: !8981)
!9004 = !DILocation(line: 1950, column: 1, scope: !8981)
!9005 = distinct !DISubprogram(name: "txt_redo_read_uint32", scope: !3, file: !3, line: 1919, type: !7726, scopeLine: 1920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!9006 = !DILocalVariable(name: "undo_buf", arg: 1, scope: !9005, file: !3, line: 1919, type: !304)
!9007 = !DILocation(line: 1919, column: 54, scope: !9005)
!9008 = !DILocalVariable(name: "undo_pos", arg: 2, scope: !9005, file: !3, line: 1919, type: !4804)
!9009 = !DILocation(line: 1919, column: 69, scope: !9005)
!9010 = !DILocalVariable(name: "val", scope: !9005, file: !3, line: 1921, type: !7)
!9011 = !DILocation(line: 1921, column: 15, scope: !9005)
!9012 = !DILocation(line: 1922, column: 8, scope: !9005)
!9013 = !DILocation(line: 1922, column: 18, scope: !9005)
!9014 = !DILocation(line: 1922, column: 17, scope: !9005)
!9015 = !DILocation(line: 1922, column: 6, scope: !9005)
!9016 = !DILocation(line: 1922, column: 31, scope: !9005)
!9017 = !DILocation(line: 1922, column: 40, scope: !9005)
!9018 = !DILocation(line: 1923, column: 8, scope: !9005)
!9019 = !DILocation(line: 1923, column: 15, scope: !9005)
!9020 = !DILocation(line: 1923, column: 25, scope: !9005)
!9021 = !DILocation(line: 1923, column: 24, scope: !9005)
!9022 = !DILocation(line: 1923, column: 35, scope: !9005)
!9023 = !DILocation(line: 1923, column: 12, scope: !9005)
!9024 = !DILocation(line: 1923, column: 6, scope: !9005)
!9025 = !DILocation(line: 1923, column: 44, scope: !9005)
!9026 = !DILocation(line: 1923, column: 53, scope: !9005)
!9027 = !DILocation(line: 1924, column: 8, scope: !9005)
!9028 = !DILocation(line: 1924, column: 15, scope: !9005)
!9029 = !DILocation(line: 1924, column: 25, scope: !9005)
!9030 = !DILocation(line: 1924, column: 24, scope: !9005)
!9031 = !DILocation(line: 1924, column: 35, scope: !9005)
!9032 = !DILocation(line: 1924, column: 12, scope: !9005)
!9033 = !DILocation(line: 1924, column: 6, scope: !9005)
!9034 = !DILocation(line: 1924, column: 45, scope: !9005)
!9035 = !DILocation(line: 1924, column: 54, scope: !9005)
!9036 = !DILocation(line: 1925, column: 8, scope: !9005)
!9037 = !DILocation(line: 1925, column: 15, scope: !9005)
!9038 = !DILocation(line: 1925, column: 25, scope: !9005)
!9039 = !DILocation(line: 1925, column: 24, scope: !9005)
!9040 = !DILocation(line: 1925, column: 35, scope: !9005)
!9041 = !DILocation(line: 1925, column: 12, scope: !9005)
!9042 = !DILocation(line: 1925, column: 6, scope: !9005)
!9043 = !DILocation(line: 1925, column: 45, scope: !9005)
!9044 = !DILocation(line: 1925, column: 54, scope: !9005)
!9045 = !DILocation(line: 1926, column: 9, scope: !9005)
!9046 = !DILocation(line: 1926, column: 2, scope: !9005)
!9047 = distinct !DISubprogram(name: "txt_duplicate_line", scope: !3, file: !3, line: 2436, type: !332, scopeLine: 2437, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!9048 = !DILocalVariable(name: "text", arg: 1, scope: !9047, file: !3, line: 2436, type: !139)
!9049 = !DILocation(line: 2436, column: 31, scope: !9047)
!9050 = !DILocalVariable(name: "textline", scope: !9047, file: !3, line: 2438, type: !124)
!9051 = !DILocation(line: 2438, column: 12, scope: !9047)
!9052 = !DILocation(line: 2440, column: 7, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9047, file: !3, line: 2440, column: 6)
!9054 = !DILocation(line: 2440, column: 13, scope: !9053)
!9055 = !DILocation(line: 2440, column: 6, scope: !9047)
!9056 = !DILocation(line: 2440, column: 19, scope: !9053)
!9057 = !DILocation(line: 2442, column: 6, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9047, file: !3, line: 2442, column: 6)
!9059 = !DILocation(line: 2442, column: 12, scope: !9058)
!9060 = !DILocation(line: 2442, column: 20, scope: !9058)
!9061 = !DILocation(line: 2442, column: 26, scope: !9058)
!9062 = !DILocation(line: 2442, column: 17, scope: !9058)
!9063 = !DILocation(line: 2442, column: 6, scope: !9047)
!9064 = !DILocation(line: 2443, column: 27, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9058, file: !3, line: 2442, column: 32)
!9066 = !DILocation(line: 2443, column: 33, scope: !9065)
!9067 = !DILocation(line: 2443, column: 39, scope: !9065)
!9068 = !DILocation(line: 2443, column: 14, scope: !9065)
!9069 = !DILocation(line: 2443, column: 12, scope: !9065)
!9070 = !DILocation(line: 2444, column: 24, scope: !9065)
!9071 = !DILocation(line: 2444, column: 30, scope: !9065)
!9072 = !DILocation(line: 2444, column: 37, scope: !9065)
!9073 = !DILocation(line: 2444, column: 43, scope: !9065)
!9074 = !DILocation(line: 2444, column: 49, scope: !9065)
!9075 = !DILocation(line: 2444, column: 3, scope: !9065)
!9076 = !DILocation(line: 2446, column: 18, scope: !9065)
!9077 = !DILocation(line: 2446, column: 3, scope: !9065)
!9078 = !DILocation(line: 2447, column: 18, scope: !9065)
!9079 = !DILocation(line: 2447, column: 3, scope: !9065)
!9080 = !DILocation(line: 2449, column: 8, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9065, file: !3, line: 2449, column: 7)
!9082 = !DILocation(line: 2449, column: 7, scope: !9065)
!9083 = !DILocation(line: 2449, column: 33, scope: !9081)
!9084 = !DILocation(line: 2449, column: 17, scope: !9081)
!9085 = !DILocation(line: 2450, column: 2, scope: !9065)
!9086 = !DILocation(line: 2451, column: 1, scope: !9047)
!9087 = distinct !DISubprogram(name: "txt_undo_add_charop", scope: !3, file: !3, line: 1799, type: !9088, scopeLine: 1800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!9088 = !DISubroutineType(types: !9089)
!9089 = !{null, !139, !119, !7}
!9090 = !DILocalVariable(name: "text", arg: 1, scope: !9087, file: !3, line: 1799, type: !139)
!9091 = !DILocation(line: 1799, column: 39, scope: !9087)
!9092 = !DILocalVariable(name: "op_start", arg: 2, scope: !9087, file: !3, line: 1799, type: !119)
!9093 = !DILocation(line: 1799, column: 49, scope: !9087)
!9094 = !DILocalVariable(name: "c", arg: 3, scope: !9087, file: !3, line: 1799, type: !7)
!9095 = !DILocation(line: 1799, column: 72, scope: !9087)
!9096 = !DILocalVariable(name: "utf8", scope: !9087, file: !3, line: 1801, type: !3379)
!9097 = !DILocation(line: 1801, column: 7, scope: !9087)
!9098 = !DILocalVariable(name: "i", scope: !9087, file: !3, line: 1802, type: !753)
!9099 = !DILocation(line: 1802, column: 9, scope: !9087)
!9100 = !DILocalVariable(name: "utf8_size", scope: !9087, file: !3, line: 1802, type: !753)
!9101 = !DILocation(line: 1802, column: 12, scope: !9087)
!9102 = !DILocation(line: 1802, column: 50, scope: !9087)
!9103 = !DILocation(line: 1802, column: 53, scope: !9087)
!9104 = !DILocation(line: 1802, column: 24, scope: !9087)
!9105 = !DILocation(line: 1804, column: 21, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 1804, column: 6)
!9107 = !DILocation(line: 1804, column: 31, scope: !9106)
!9108 = !DILocation(line: 1804, column: 29, scope: !9106)
!9109 = !DILocation(line: 1804, column: 41, scope: !9106)
!9110 = !DILocation(line: 1804, column: 27, scope: !9106)
!9111 = !DILocation(line: 1804, column: 7, scope: !9106)
!9112 = !DILocation(line: 1804, column: 6, scope: !9087)
!9113 = !DILocation(line: 1805, column: 3, scope: !9106)
!9114 = !DILocation(line: 1807, column: 2, scope: !9087)
!9115 = !DILocation(line: 1807, column: 8, scope: !9087)
!9116 = !DILocation(line: 1807, column: 16, scope: !9087)
!9117 = !DILocation(line: 1809, column: 6, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 1809, column: 6)
!9119 = !DILocation(line: 1809, column: 16, scope: !9118)
!9120 = !DILocation(line: 1809, column: 6, scope: !9087)
!9121 = !DILocation(line: 1810, column: 36, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9118, file: !3, line: 1809, column: 21)
!9123 = !DILocation(line: 1810, column: 47, scope: !9122)
!9124 = !DILocation(line: 1810, column: 45, scope: !9122)
!9125 = !DILocation(line: 1810, column: 57, scope: !9122)
!9126 = !DILocation(line: 1810, column: 3, scope: !9122)
!9127 = !DILocation(line: 1810, column: 9, scope: !9122)
!9128 = !DILocation(line: 1810, column: 18, scope: !9122)
!9129 = !DILocation(line: 1810, column: 24, scope: !9122)
!9130 = !DILocation(line: 1810, column: 34, scope: !9122)
!9131 = !DILocation(line: 1811, column: 3, scope: !9122)
!9132 = !DILocation(line: 1811, column: 9, scope: !9122)
!9133 = !DILocation(line: 1811, column: 17, scope: !9122)
!9134 = !DILocation(line: 1813, column: 22, scope: !9122)
!9135 = !DILocation(line: 1813, column: 3, scope: !9122)
!9136 = !DILocation(line: 1815, column: 10, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9122, file: !3, line: 1815, column: 3)
!9138 = !DILocation(line: 1815, column: 8, scope: !9137)
!9139 = !DILocation(line: 1815, column: 15, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 1815, column: 3)
!9141 = !DILocation(line: 1815, column: 19, scope: !9140)
!9142 = !DILocation(line: 1815, column: 17, scope: !9140)
!9143 = !DILocation(line: 1815, column: 3, scope: !9137)
!9144 = !DILocation(line: 1816, column: 42, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9140, file: !3, line: 1815, column: 35)
!9146 = !DILocation(line: 1816, column: 37, scope: !9145)
!9147 = !DILocation(line: 1816, column: 4, scope: !9145)
!9148 = !DILocation(line: 1816, column: 10, scope: !9145)
!9149 = !DILocation(line: 1816, column: 19, scope: !9145)
!9150 = !DILocation(line: 1816, column: 25, scope: !9145)
!9151 = !DILocation(line: 1816, column: 35, scope: !9145)
!9152 = !DILocation(line: 1817, column: 4, scope: !9145)
!9153 = !DILocation(line: 1817, column: 10, scope: !9145)
!9154 = !DILocation(line: 1817, column: 18, scope: !9145)
!9155 = !DILocation(line: 1818, column: 3, scope: !9145)
!9156 = !DILocation(line: 1815, column: 31, scope: !9140)
!9157 = !DILocation(line: 1815, column: 3, scope: !9140)
!9158 = distinct !{!9158, !9143, !9159}
!9159 = !DILocation(line: 1818, column: 3, scope: !9137)
!9160 = !DILocation(line: 1820, column: 36, scope: !9122)
!9161 = !DILocation(line: 1820, column: 47, scope: !9122)
!9162 = !DILocation(line: 1820, column: 45, scope: !9122)
!9163 = !DILocation(line: 1820, column: 57, scope: !9122)
!9164 = !DILocation(line: 1820, column: 3, scope: !9122)
!9165 = !DILocation(line: 1820, column: 9, scope: !9122)
!9166 = !DILocation(line: 1820, column: 18, scope: !9122)
!9167 = !DILocation(line: 1820, column: 24, scope: !9122)
!9168 = !DILocation(line: 1820, column: 34, scope: !9122)
!9169 = !DILocation(line: 1821, column: 2, scope: !9122)
!9170 = !DILocation(line: 1823, column: 36, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9118, file: !3, line: 1822, column: 7)
!9172 = !DILocation(line: 1823, column: 45, scope: !9171)
!9173 = !DILocation(line: 1823, column: 3, scope: !9171)
!9174 = !DILocation(line: 1823, column: 9, scope: !9171)
!9175 = !DILocation(line: 1823, column: 18, scope: !9171)
!9176 = !DILocation(line: 1823, column: 24, scope: !9171)
!9177 = !DILocation(line: 1823, column: 34, scope: !9171)
!9178 = !DILocation(line: 1824, column: 3, scope: !9171)
!9179 = !DILocation(line: 1824, column: 9, scope: !9171)
!9180 = !DILocation(line: 1824, column: 17, scope: !9171)
!9181 = !DILocation(line: 1826, column: 26, scope: !9171)
!9182 = !DILocation(line: 1826, column: 3, scope: !9171)
!9183 = !DILocation(line: 1828, column: 25, scope: !9171)
!9184 = !DILocation(line: 1828, column: 31, scope: !9171)
!9185 = !DILocation(line: 1828, column: 42, scope: !9171)
!9186 = !DILocation(line: 1828, column: 48, scope: !9171)
!9187 = !DILocation(line: 1828, column: 58, scope: !9171)
!9188 = !DILocation(line: 1828, column: 3, scope: !9171)
!9189 = !DILocation(line: 1829, column: 36, scope: !9171)
!9190 = !DILocation(line: 1829, column: 45, scope: !9171)
!9191 = !DILocation(line: 1829, column: 3, scope: !9171)
!9192 = !DILocation(line: 1829, column: 9, scope: !9171)
!9193 = !DILocation(line: 1829, column: 18, scope: !9171)
!9194 = !DILocation(line: 1829, column: 24, scope: !9171)
!9195 = !DILocation(line: 1829, column: 34, scope: !9171)
!9196 = !DILocation(line: 1832, column: 2, scope: !9087)
!9197 = !DILocation(line: 1832, column: 8, scope: !9087)
!9198 = !DILocation(line: 1832, column: 17, scope: !9087)
!9199 = !DILocation(line: 1832, column: 23, scope: !9087)
!9200 = !DILocation(line: 1832, column: 32, scope: !9087)
!9201 = !DILocation(line: 1832, column: 37, scope: !9087)
!9202 = !DILocation(line: 1833, column: 1, scope: !9087)
!9203 = distinct !DISubprogram(name: "txt_combine_lines", scope: !3, file: !3, line: 2414, type: !9204, scopeLine: 2415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!9204 = !DISubroutineType(types: !9205)
!9205 = !{null, !139, !124, !124}
!9206 = !DILocalVariable(name: "text", arg: 1, scope: !9203, file: !3, line: 2414, type: !139)
!9207 = !DILocation(line: 2414, column: 37, scope: !9203)
!9208 = !DILocalVariable(name: "linea", arg: 2, scope: !9203, file: !3, line: 2414, type: !124)
!9209 = !DILocation(line: 2414, column: 53, scope: !9203)
!9210 = !DILocalVariable(name: "lineb", arg: 3, scope: !9203, file: !3, line: 2414, type: !124)
!9211 = !DILocation(line: 2414, column: 70, scope: !9203)
!9212 = !DILocalVariable(name: "tmp", scope: !9203, file: !3, line: 2416, type: !133)
!9213 = !DILocation(line: 2416, column: 8, scope: !9203)
!9214 = !DILocalVariable(name: "s", scope: !9203, file: !3, line: 2416, type: !133)
!9215 = !DILocation(line: 2416, column: 14, scope: !9203)
!9216 = !DILocation(line: 2418, column: 7, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9203, file: !3, line: 2418, column: 6)
!9218 = !DILocation(line: 2418, column: 13, scope: !9217)
!9219 = !DILocation(line: 2418, column: 17, scope: !9217)
!9220 = !DILocation(line: 2418, column: 6, scope: !9203)
!9221 = !DILocation(line: 2418, column: 24, scope: !9217)
!9222 = !DILocation(line: 2421, column: 8, scope: !9203)
!9223 = !DILocation(line: 2421, column: 20, scope: !9203)
!9224 = !DILocation(line: 2421, column: 27, scope: !9203)
!9225 = !DILocation(line: 2421, column: 33, scope: !9203)
!9226 = !DILocation(line: 2421, column: 40, scope: !9203)
!9227 = !DILocation(line: 2421, column: 31, scope: !9203)
!9228 = !DILocation(line: 2421, column: 44, scope: !9203)
!9229 = !DILocation(line: 2421, column: 6, scope: !9203)
!9230 = !DILocation(line: 2423, column: 6, scope: !9203)
!9231 = !DILocation(line: 2423, column: 4, scope: !9203)
!9232 = !DILocation(line: 2424, column: 23, scope: !9203)
!9233 = !DILocation(line: 2424, column: 26, scope: !9203)
!9234 = !DILocation(line: 2424, column: 33, scope: !9203)
!9235 = !DILocation(line: 2424, column: 7, scope: !9203)
!9236 = !DILocation(line: 2424, column: 4, scope: !9203)
!9237 = !DILocation(line: 2425, column: 23, scope: !9203)
!9238 = !DILocation(line: 2425, column: 26, scope: !9203)
!9239 = !DILocation(line: 2425, column: 33, scope: !9203)
!9240 = !DILocation(line: 2425, column: 7, scope: !9203)
!9241 = !DILocation(line: 2425, column: 4, scope: !9203)
!9242 = !DILocation(line: 2426, column: 8, scope: !9203)
!9243 = !DILocation(line: 2428, column: 16, scope: !9203)
!9244 = !DILocation(line: 2428, column: 23, scope: !9203)
!9245 = !DILocation(line: 2428, column: 2, scope: !9203)
!9246 = !DILocation(line: 2430, column: 18, scope: !9203)
!9247 = !DILocation(line: 2430, column: 24, scope: !9203)
!9248 = !DILocation(line: 2430, column: 2, scope: !9203)
!9249 = !DILocation(line: 2432, column: 17, scope: !9203)
!9250 = !DILocation(line: 2432, column: 2, scope: !9203)
!9251 = !DILocation(line: 2433, column: 17, scope: !9203)
!9252 = !DILocation(line: 2433, column: 2, scope: !9203)
!9253 = !DILocation(line: 2434, column: 1, scope: !9203)
!9254 = distinct !DISubprogram(name: "txt_delete_word", scope: !3, file: !3, line: 2489, type: !332, scopeLine: 2490, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!9255 = !DILocalVariable(name: "text", arg: 1, scope: !9254, file: !3, line: 2489, type: !139)
!9256 = !DILocation(line: 2489, column: 28, scope: !9254)
!9257 = !DILocation(line: 2491, column: 17, scope: !9254)
!9258 = !DILocation(line: 2491, column: 2, scope: !9254)
!9259 = !DILocation(line: 2492, column: 17, scope: !9254)
!9260 = !DILocation(line: 2492, column: 2, scope: !9254)
!9261 = !DILocation(line: 2493, column: 1, scope: !9254)
!9262 = distinct !DISubprogram(name: "txt_backspace_word", scope: !3, file: !3, line: 2537, type: !332, scopeLine: 2538, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!9263 = !DILocalVariable(name: "text", arg: 1, scope: !9262, file: !3, line: 2537, type: !139)
!9264 = !DILocation(line: 2537, column: 31, scope: !9262)
!9265 = !DILocation(line: 2539, column: 16, scope: !9262)
!9266 = !DILocation(line: 2539, column: 2, scope: !9262)
!9267 = !DILocation(line: 2540, column: 17, scope: !9262)
!9268 = !DILocation(line: 2540, column: 2, scope: !9262)
!9269 = !DILocation(line: 2541, column: 1, scope: !9262)
!9270 = distinct !DISubprogram(name: "txt_add_char_intern", scope: !3, file: !3, line: 2558, type: !9271, scopeLine: 2559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!9271 = !DISubroutineType(types: !9272)
!9272 = !{!313, !139, !7, !313}
!9273 = !DILocalVariable(name: "text", arg: 1, scope: !9270, file: !3, line: 2558, type: !139)
!9274 = !DILocation(line: 2558, column: 39, scope: !9270)
!9275 = !DILocalVariable(name: "add", arg: 2, scope: !9270, file: !3, line: 2558, type: !7)
!9276 = !DILocation(line: 2558, column: 58, scope: !9270)
!9277 = !DILocalVariable(name: "replace_tabs", arg: 3, scope: !9270, file: !3, line: 2558, type: !313)
!9278 = !DILocation(line: 2558, column: 68, scope: !9270)
!9279 = !DILocalVariable(name: "tmp", scope: !9270, file: !3, line: 2560, type: !133)
!9280 = !DILocation(line: 2560, column: 8, scope: !9270)
!9281 = !DILocalVariable(name: "ch", scope: !9270, file: !3, line: 2560, type: !3379)
!9282 = !DILocation(line: 2560, column: 13, scope: !9270)
!9283 = !DILocalVariable(name: "add_len", scope: !9270, file: !3, line: 2561, type: !753)
!9284 = !DILocation(line: 2561, column: 9, scope: !9270)
!9285 = !DILocation(line: 2563, column: 7, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 2563, column: 6)
!9287 = !DILocation(line: 2563, column: 13, scope: !9286)
!9288 = !DILocation(line: 2563, column: 6, scope: !9270)
!9289 = !DILocation(line: 2563, column: 19, scope: !9286)
!9290 = !DILocation(line: 2565, column: 6, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 2565, column: 6)
!9292 = !DILocation(line: 2565, column: 10, scope: !9291)
!9293 = !DILocation(line: 2565, column: 6, scope: !9270)
!9294 = !DILocation(line: 2566, column: 21, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 2565, column: 19)
!9296 = !DILocation(line: 2566, column: 3, scope: !9295)
!9297 = !DILocation(line: 2567, column: 3, scope: !9295)
!9298 = !DILocation(line: 2571, column: 6, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 2571, column: 6)
!9300 = !DILocation(line: 2571, column: 10, scope: !9299)
!9301 = !DILocation(line: 2571, column: 18, scope: !9299)
!9302 = !DILocation(line: 2571, column: 21, scope: !9299)
!9303 = !DILocation(line: 2571, column: 6, scope: !9270)
!9304 = !DILocation(line: 2572, column: 29, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9299, file: !3, line: 2571, column: 35)
!9306 = !DILocation(line: 2572, column: 3, scope: !9305)
!9307 = !DILocation(line: 2573, column: 3, scope: !9305)
!9308 = !DILocation(line: 2576, column: 17, scope: !9270)
!9309 = !DILocation(line: 2576, column: 2, scope: !9270)
!9310 = !DILocation(line: 2578, column: 7, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 2578, column: 6)
!9312 = !DILocation(line: 2578, column: 6, scope: !9270)
!9313 = !DILocation(line: 2578, column: 36, scope: !9311)
!9314 = !DILocation(line: 2578, column: 57, scope: !9311)
!9315 = !DILocation(line: 2578, column: 16, scope: !9311)
!9316 = !DILocation(line: 2580, column: 38, scope: !9270)
!9317 = !DILocation(line: 2580, column: 43, scope: !9270)
!9318 = !DILocation(line: 2580, column: 12, scope: !9270)
!9319 = !DILocation(line: 2580, column: 10, scope: !9270)
!9320 = !DILocation(line: 2582, column: 8, scope: !9270)
!9321 = !DILocation(line: 2582, column: 20, scope: !9270)
!9322 = !DILocation(line: 2582, column: 26, scope: !9270)
!9323 = !DILocation(line: 2582, column: 32, scope: !9270)
!9324 = !DILocation(line: 2582, column: 38, scope: !9270)
!9325 = !DILocation(line: 2582, column: 36, scope: !9270)
!9326 = !DILocation(line: 2582, column: 46, scope: !9270)
!9327 = !DILocation(line: 2582, column: 6, scope: !9270)
!9328 = !DILocation(line: 2584, column: 9, scope: !9270)
!9329 = !DILocation(line: 2584, column: 14, scope: !9270)
!9330 = !DILocation(line: 2584, column: 20, scope: !9270)
!9331 = !DILocation(line: 2584, column: 26, scope: !9270)
!9332 = !DILocation(line: 2584, column: 32, scope: !9270)
!9333 = !DILocation(line: 2584, column: 38, scope: !9270)
!9334 = !DILocation(line: 2584, column: 2, scope: !9270)
!9335 = !DILocation(line: 2585, column: 9, scope: !9270)
!9336 = !DILocation(line: 2585, column: 15, scope: !9270)
!9337 = !DILocation(line: 2585, column: 21, scope: !9270)
!9338 = !DILocation(line: 2585, column: 13, scope: !9270)
!9339 = !DILocation(line: 2585, column: 2, scope: !9270)
!9340 = !DILocation(line: 2585, column: 31, scope: !9270)
!9341 = !DILocation(line: 2586, column: 9, scope: !9270)
!9342 = !DILocation(line: 2586, column: 15, scope: !9270)
!9343 = !DILocation(line: 2586, column: 21, scope: !9270)
!9344 = !DILocation(line: 2586, column: 13, scope: !9270)
!9345 = !DILocation(line: 2586, column: 28, scope: !9270)
!9346 = !DILocation(line: 2586, column: 26, scope: !9270)
!9347 = !DILocation(line: 2586, column: 37, scope: !9270)
!9348 = !DILocation(line: 2586, column: 43, scope: !9270)
!9349 = !DILocation(line: 2586, column: 49, scope: !9270)
!9350 = !DILocation(line: 2586, column: 56, scope: !9270)
!9351 = !DILocation(line: 2586, column: 62, scope: !9270)
!9352 = !DILocation(line: 2586, column: 54, scope: !9270)
!9353 = !DILocation(line: 2586, column: 68, scope: !9270)
!9354 = !DILocation(line: 2586, column: 74, scope: !9270)
!9355 = !DILocation(line: 2586, column: 80, scope: !9270)
!9356 = !DILocation(line: 2586, column: 86, scope: !9270)
!9357 = !DILocation(line: 2586, column: 92, scope: !9270)
!9358 = !DILocation(line: 2586, column: 84, scope: !9270)
!9359 = !DILocation(line: 2586, column: 97, scope: !9270)
!9360 = !DILocation(line: 2586, column: 2, scope: !9270)
!9361 = !DILocation(line: 2588, column: 16, scope: !9270)
!9362 = !DILocation(line: 2588, column: 22, scope: !9270)
!9363 = !DILocation(line: 2588, column: 28, scope: !9270)
!9364 = !DILocation(line: 2588, column: 2, scope: !9270)
!9365 = !DILocation(line: 2590, column: 16, scope: !9270)
!9366 = !DILocation(line: 2590, column: 2, scope: !9270)
!9367 = !DILocation(line: 2590, column: 8, scope: !9270)
!9368 = !DILocation(line: 2590, column: 13, scope: !9270)
!9369 = !DILocation(line: 2592, column: 14, scope: !9270)
!9370 = !DILocation(line: 2592, column: 2, scope: !9270)
!9371 = !DILocation(line: 2594, column: 17, scope: !9270)
!9372 = !DILocation(line: 2594, column: 2, scope: !9270)
!9373 = !DILocation(line: 2595, column: 17, scope: !9270)
!9374 = !DILocation(line: 2595, column: 2, scope: !9270)
!9375 = !DILocation(line: 2597, column: 2, scope: !9270)
!9376 = !DILocation(line: 2598, column: 1, scope: !9270)
!9377 = distinct !DISubprogram(name: "txt_replace_char", scope: !3, file: !3, line: 2616, type: !6841, scopeLine: 2617, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!9378 = !DILocalVariable(name: "text", arg: 1, scope: !9377, file: !3, line: 2616, type: !139)
!9379 = !DILocation(line: 2616, column: 29, scope: !9377)
!9380 = !DILocalVariable(name: "add", arg: 2, scope: !9377, file: !3, line: 2616, type: !7)
!9381 = !DILocation(line: 2616, column: 48, scope: !9377)
!9382 = !DILocalVariable(name: "del", scope: !9377, file: !3, line: 2618, type: !7)
!9383 = !DILocation(line: 2618, column: 15, scope: !9377)
!9384 = !DILocalVariable(name: "del_size", scope: !9377, file: !3, line: 2619, type: !753)
!9385 = !DILocation(line: 2619, column: 9, scope: !9377)
!9386 = !DILocalVariable(name: "add_size", scope: !9377, file: !3, line: 2619, type: !753)
!9387 = !DILocation(line: 2619, column: 23, scope: !9377)
!9388 = !DILocalVariable(name: "ch", scope: !9377, file: !3, line: 2620, type: !3379)
!9389 = !DILocation(line: 2620, column: 7, scope: !9377)
!9390 = !DILocation(line: 2622, column: 7, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9377, file: !3, line: 2622, column: 6)
!9392 = !DILocation(line: 2622, column: 13, scope: !9391)
!9393 = !DILocation(line: 2622, column: 6, scope: !9377)
!9394 = !DILocation(line: 2622, column: 19, scope: !9391)
!9395 = !DILocation(line: 2625, column: 6, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9377, file: !3, line: 2625, column: 6)
!9397 = !DILocation(line: 2625, column: 12, scope: !9396)
!9398 = !DILocation(line: 2625, column: 20, scope: !9396)
!9399 = !DILocation(line: 2625, column: 26, scope: !9396)
!9400 = !DILocation(line: 2625, column: 32, scope: !9396)
!9401 = !DILocation(line: 2625, column: 17, scope: !9396)
!9402 = !DILocation(line: 2625, column: 36, scope: !9396)
!9403 = !DILocation(line: 2625, column: 51, scope: !9396)
!9404 = !DILocation(line: 2625, column: 39, scope: !9396)
!9405 = !DILocation(line: 2625, column: 57, scope: !9396)
!9406 = !DILocation(line: 2625, column: 60, scope: !9396)
!9407 = !DILocation(line: 2625, column: 64, scope: !9396)
!9408 = !DILocation(line: 2625, column: 6, scope: !9377)
!9409 = !DILocation(line: 2626, column: 23, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9396, file: !3, line: 2625, column: 73)
!9411 = !DILocation(line: 2626, column: 29, scope: !9410)
!9412 = !DILocation(line: 2626, column: 10, scope: !9410)
!9413 = !DILocation(line: 2626, column: 3, scope: !9410)
!9414 = !DILocation(line: 2629, column: 41, scope: !9377)
!9415 = !DILocation(line: 2629, column: 47, scope: !9377)
!9416 = !DILocation(line: 2629, column: 53, scope: !9377)
!9417 = !DILocation(line: 2629, column: 60, scope: !9377)
!9418 = !DILocation(line: 2629, column: 66, scope: !9377)
!9419 = !DILocation(line: 2629, column: 58, scope: !9377)
!9420 = !DILocation(line: 2629, column: 8, scope: !9377)
!9421 = !DILocation(line: 2629, column: 6, scope: !9377)
!9422 = !DILocation(line: 2630, column: 39, scope: !9377)
!9423 = !DILocation(line: 2630, column: 44, scope: !9377)
!9424 = !DILocation(line: 2630, column: 13, scope: !9377)
!9425 = !DILocation(line: 2630, column: 11, scope: !9377)
!9426 = !DILocation(line: 2632, column: 6, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9377, file: !3, line: 2632, column: 6)
!9428 = !DILocation(line: 2632, column: 17, scope: !9427)
!9429 = !DILocation(line: 2632, column: 15, scope: !9427)
!9430 = !DILocation(line: 2632, column: 6, scope: !9377)
!9431 = !DILocalVariable(name: "tmp", scope: !9432, file: !3, line: 2633, type: !133)
!9432 = distinct !DILexicalBlock(scope: !9427, file: !3, line: 2632, column: 27)
!9433 = !DILocation(line: 2633, column: 9, scope: !9432)
!9434 = !DILocation(line: 2633, column: 15, scope: !9432)
!9435 = !DILocation(line: 2633, column: 27, scope: !9432)
!9436 = !DILocation(line: 2633, column: 33, scope: !9432)
!9437 = !DILocation(line: 2633, column: 39, scope: !9432)
!9438 = !DILocation(line: 2633, column: 45, scope: !9432)
!9439 = !DILocation(line: 2633, column: 43, scope: !9432)
!9440 = !DILocation(line: 2633, column: 56, scope: !9432)
!9441 = !DILocation(line: 2633, column: 54, scope: !9432)
!9442 = !DILocation(line: 2633, column: 65, scope: !9432)
!9443 = !DILocation(line: 2634, column: 10, scope: !9432)
!9444 = !DILocation(line: 2634, column: 15, scope: !9432)
!9445 = !DILocation(line: 2634, column: 21, scope: !9432)
!9446 = !DILocation(line: 2634, column: 27, scope: !9432)
!9447 = !DILocation(line: 2634, column: 33, scope: !9432)
!9448 = !DILocation(line: 2634, column: 39, scope: !9432)
!9449 = !DILocation(line: 2634, column: 3, scope: !9432)
!9450 = !DILocation(line: 2635, column: 10, scope: !9432)
!9451 = !DILocation(line: 2635, column: 16, scope: !9432)
!9452 = !DILocation(line: 2635, column: 22, scope: !9432)
!9453 = !DILocation(line: 2635, column: 14, scope: !9432)
!9454 = !DILocation(line: 2635, column: 29, scope: !9432)
!9455 = !DILocation(line: 2635, column: 27, scope: !9432)
!9456 = !DILocation(line: 2635, column: 39, scope: !9432)
!9457 = !DILocation(line: 2635, column: 45, scope: !9432)
!9458 = !DILocation(line: 2635, column: 51, scope: !9432)
!9459 = !DILocation(line: 2635, column: 58, scope: !9432)
!9460 = !DILocation(line: 2635, column: 64, scope: !9432)
!9461 = !DILocation(line: 2635, column: 56, scope: !9432)
!9462 = !DILocation(line: 2635, column: 71, scope: !9432)
!9463 = !DILocation(line: 2635, column: 69, scope: !9432)
!9464 = !DILocation(line: 2635, column: 81, scope: !9432)
!9465 = !DILocation(line: 2635, column: 87, scope: !9432)
!9466 = !DILocation(line: 2635, column: 93, scope: !9432)
!9467 = !DILocation(line: 2635, column: 99, scope: !9432)
!9468 = !DILocation(line: 2635, column: 105, scope: !9432)
!9469 = !DILocation(line: 2635, column: 97, scope: !9432)
!9470 = !DILocation(line: 2635, column: 112, scope: !9432)
!9471 = !DILocation(line: 2635, column: 110, scope: !9432)
!9472 = !DILocation(line: 2635, column: 121, scope: !9432)
!9473 = !DILocation(line: 2635, column: 3, scope: !9432)
!9474 = !DILocation(line: 2636, column: 3, scope: !9432)
!9475 = !DILocation(line: 2636, column: 13, scope: !9432)
!9476 = !DILocation(line: 2636, column: 19, scope: !9432)
!9477 = !DILocation(line: 2636, column: 25, scope: !9432)
!9478 = !DILocation(line: 2637, column: 22, scope: !9432)
!9479 = !DILocation(line: 2637, column: 3, scope: !9432)
!9480 = !DILocation(line: 2637, column: 9, scope: !9432)
!9481 = !DILocation(line: 2637, column: 15, scope: !9432)
!9482 = !DILocation(line: 2637, column: 20, scope: !9432)
!9483 = !DILocation(line: 2638, column: 2, scope: !9432)
!9484 = !DILocation(line: 2639, column: 11, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9427, file: !3, line: 2639, column: 11)
!9486 = !DILocation(line: 2639, column: 22, scope: !9485)
!9487 = !DILocation(line: 2639, column: 20, scope: !9485)
!9488 = !DILocation(line: 2639, column: 11, scope: !9427)
!9489 = !DILocalVariable(name: "tmp", scope: !9490, file: !3, line: 2640, type: !133)
!9490 = distinct !DILexicalBlock(scope: !9485, file: !3, line: 2639, column: 32)
!9491 = !DILocation(line: 2640, column: 9, scope: !9490)
!9492 = !DILocation(line: 2640, column: 15, scope: !9490)
!9493 = !DILocation(line: 2640, column: 21, scope: !9490)
!9494 = !DILocation(line: 2640, column: 27, scope: !9490)
!9495 = !DILocation(line: 2641, column: 11, scope: !9490)
!9496 = !DILocation(line: 2641, column: 17, scope: !9490)
!9497 = !DILocation(line: 2641, column: 23, scope: !9490)
!9498 = !DILocation(line: 2641, column: 15, scope: !9490)
!9499 = !DILocation(line: 2641, column: 30, scope: !9490)
!9500 = !DILocation(line: 2641, column: 28, scope: !9490)
!9501 = !DILocation(line: 2641, column: 40, scope: !9490)
!9502 = !DILocation(line: 2641, column: 46, scope: !9490)
!9503 = !DILocation(line: 2641, column: 52, scope: !9490)
!9504 = !DILocation(line: 2641, column: 44, scope: !9490)
!9505 = !DILocation(line: 2641, column: 59, scope: !9490)
!9506 = !DILocation(line: 2641, column: 57, scope: !9490)
!9507 = !DILocation(line: 2641, column: 69, scope: !9490)
!9508 = !DILocation(line: 2641, column: 75, scope: !9490)
!9509 = !DILocation(line: 2641, column: 81, scope: !9490)
!9510 = !DILocation(line: 2641, column: 87, scope: !9490)
!9511 = !DILocation(line: 2641, column: 93, scope: !9490)
!9512 = !DILocation(line: 2641, column: 85, scope: !9490)
!9513 = !DILocation(line: 2641, column: 100, scope: !9490)
!9514 = !DILocation(line: 2641, column: 98, scope: !9490)
!9515 = !DILocation(line: 2641, column: 109, scope: !9490)
!9516 = !DILocation(line: 2641, column: 3, scope: !9490)
!9517 = !DILocation(line: 2642, column: 2, scope: !9490)
!9518 = !DILocation(line: 2644, column: 9, scope: !9377)
!9519 = !DILocation(line: 2644, column: 15, scope: !9377)
!9520 = !DILocation(line: 2644, column: 21, scope: !9377)
!9521 = !DILocation(line: 2644, column: 28, scope: !9377)
!9522 = !DILocation(line: 2644, column: 34, scope: !9377)
!9523 = !DILocation(line: 2644, column: 26, scope: !9377)
!9524 = !DILocation(line: 2644, column: 2, scope: !9377)
!9525 = !DILocation(line: 2644, column: 44, scope: !9377)
!9526 = !DILocation(line: 2645, column: 16, scope: !9377)
!9527 = !DILocation(line: 2645, column: 2, scope: !9377)
!9528 = !DILocation(line: 2645, column: 8, scope: !9377)
!9529 = !DILocation(line: 2645, column: 13, scope: !9377)
!9530 = !DILocation(line: 2646, column: 21, scope: !9377)
!9531 = !DILocation(line: 2646, column: 32, scope: !9377)
!9532 = !DILocation(line: 2646, column: 30, scope: !9377)
!9533 = !DILocation(line: 2646, column: 2, scope: !9377)
!9534 = !DILocation(line: 2646, column: 8, scope: !9377)
!9535 = !DILocation(line: 2646, column: 14, scope: !9377)
!9536 = !DILocation(line: 2646, column: 18, scope: !9377)
!9537 = !DILocation(line: 2648, column: 14, scope: !9377)
!9538 = !DILocation(line: 2648, column: 2, scope: !9377)
!9539 = !DILocation(line: 2649, column: 17, scope: !9377)
!9540 = !DILocation(line: 2649, column: 2, scope: !9377)
!9541 = !DILocation(line: 2650, column: 17, scope: !9377)
!9542 = !DILocation(line: 2650, column: 2, scope: !9377)
!9543 = !DILocation(line: 2653, column: 7, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9377, file: !3, line: 2653, column: 6)
!9545 = !DILocation(line: 2653, column: 6, scope: !9377)
!9546 = !DILocation(line: 2654, column: 23, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9544, file: !3, line: 2653, column: 16)
!9548 = !DILocation(line: 2654, column: 44, scope: !9547)
!9549 = !DILocation(line: 2654, column: 3, scope: !9547)
!9550 = !DILocation(line: 2655, column: 17, scope: !9547)
!9551 = !DILocation(line: 2655, column: 3, scope: !9547)
!9552 = !DILocation(line: 2655, column: 9, scope: !9547)
!9553 = !DILocation(line: 2655, column: 14, scope: !9547)
!9554 = !DILocation(line: 2656, column: 15, scope: !9547)
!9555 = !DILocation(line: 2656, column: 3, scope: !9547)
!9556 = !DILocation(line: 2657, column: 23, scope: !9547)
!9557 = !DILocation(line: 2657, column: 41, scope: !9547)
!9558 = !DILocation(line: 2657, column: 3, scope: !9547)
!9559 = !DILocation(line: 2658, column: 17, scope: !9547)
!9560 = !DILocation(line: 2658, column: 3, scope: !9547)
!9561 = !DILocation(line: 2658, column: 9, scope: !9547)
!9562 = !DILocation(line: 2658, column: 14, scope: !9547)
!9563 = !DILocation(line: 2659, column: 15, scope: !9547)
!9564 = !DILocation(line: 2659, column: 3, scope: !9547)
!9565 = !DILocation(line: 2660, column: 2, scope: !9547)
!9566 = !DILocation(line: 2661, column: 2, scope: !9377)
!9567 = !DILocation(line: 2662, column: 1, scope: !9377)
!9568 = distinct !DISubprogram(name: "make_new_line", scope: !3, file: !3, line: 714, type: !9569, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!9569 = !DISubroutineType(types: !9570)
!9570 = !{null, !124, !133}
!9571 = !DILocalVariable(name: "line", arg: 1, scope: !9568, file: !3, line: 714, type: !124)
!9572 = !DILocation(line: 714, column: 37, scope: !9568)
!9573 = !DILocalVariable(name: "newline", arg: 2, scope: !9568, file: !3, line: 714, type: !133)
!9574 = !DILocation(line: 714, column: 49, scope: !9568)
!9575 = !DILocation(line: 716, column: 6, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 716, column: 6)
!9577 = !DILocation(line: 716, column: 12, scope: !9576)
!9578 = !DILocation(line: 716, column: 6, scope: !9568)
!9579 = !DILocation(line: 716, column: 18, scope: !9576)
!9580 = !DILocation(line: 716, column: 28, scope: !9576)
!9581 = !DILocation(line: 716, column: 34, scope: !9576)
!9582 = !DILocation(line: 717, column: 6, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 717, column: 6)
!9584 = !DILocation(line: 717, column: 12, scope: !9583)
!9585 = !DILocation(line: 717, column: 6, scope: !9568)
!9586 = !DILocation(line: 717, column: 20, scope: !9583)
!9587 = !DILocation(line: 717, column: 30, scope: !9583)
!9588 = !DILocation(line: 717, column: 36, scope: !9583)
!9589 = !DILocation(line: 719, column: 15, scope: !9568)
!9590 = !DILocation(line: 719, column: 2, scope: !9568)
!9591 = !DILocation(line: 719, column: 8, scope: !9568)
!9592 = !DILocation(line: 719, column: 13, scope: !9568)
!9593 = !DILocation(line: 720, column: 21, scope: !9568)
!9594 = !DILocation(line: 720, column: 14, scope: !9568)
!9595 = !DILocation(line: 720, column: 2, scope: !9568)
!9596 = !DILocation(line: 720, column: 8, scope: !9568)
!9597 = !DILocation(line: 720, column: 12, scope: !9568)
!9598 = !DILocation(line: 721, column: 2, scope: !9568)
!9599 = !DILocation(line: 721, column: 8, scope: !9568)
!9600 = !DILocation(line: 721, column: 15, scope: !9568)
!9601 = !DILocation(line: 722, column: 1, scope: !9568)
!9602 = !DILocalVariable(name: "text", arg: 1, scope: !299, file: !3, line: 2913, type: !139)
!9603 = !DILocation(line: 2913, column: 34, scope: !299)
!9604 = !DILocalVariable(name: "space", arg: 2, scope: !299, file: !3, line: 2913, type: !119)
!9605 = !DILocation(line: 2913, column: 44, scope: !299)
!9606 = !DILocalVariable(name: "i", scope: !299, file: !3, line: 2915, type: !119)
!9607 = !DILocation(line: 2915, column: 6, scope: !299)
!9608 = !DILocalVariable(name: "test", scope: !299, file: !3, line: 2916, type: !119)
!9609 = !DILocation(line: 2916, column: 6, scope: !299)
!9610 = !DILocalVariable(name: "word", scope: !299, file: !3, line: 2917, type: !304)
!9611 = !DILocation(line: 2917, column: 14, scope: !299)
!9612 = !DILocalVariable(name: "comm", scope: !299, file: !3, line: 2918, type: !304)
!9613 = !DILocation(line: 2918, column: 14, scope: !299)
!9614 = !DILocalVariable(name: "indent", scope: !299, file: !3, line: 2919, type: !305)
!9615 = !DILocation(line: 2919, column: 13, scope: !299)
!9616 = !DILocation(line: 2919, column: 23, scope: !299)
!9617 = !DILocation(line: 2919, column: 29, scope: !299)
!9618 = !DILocation(line: 2919, column: 35, scope: !299)
!9619 = !DILocation(line: 2919, column: 22, scope: !299)
!9620 = !DILocation(line: 2922, column: 7, scope: !9621)
!9621 = distinct !DILexicalBlock(scope: !299, file: !3, line: 2922, column: 6)
!9622 = !DILocation(line: 2922, column: 13, scope: !9621)
!9623 = !DILocation(line: 2922, column: 6, scope: !299)
!9624 = !DILocation(line: 2922, column: 19, scope: !9621)
!9625 = !DILocation(line: 2924, column: 2, scope: !299)
!9626 = !DILocation(line: 2924, column: 9, scope: !299)
!9627 = !DILocation(line: 2924, column: 15, scope: !299)
!9628 = !DILocation(line: 2924, column: 21, scope: !299)
!9629 = !DILocation(line: 2924, column: 26, scope: !299)
!9630 = !DILocation(line: 2924, column: 32, scope: !299)
!9631 = !DILocation(line: 2924, column: 29, scope: !299)
!9632 = !DILocation(line: 2926, column: 7, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 2926, column: 7)
!9634 = distinct !DILexicalBlock(scope: !299, file: !3, line: 2924, column: 40)
!9635 = !DILocation(line: 2926, column: 12, scope: !9633)
!9636 = !DILocation(line: 2926, column: 18, scope: !9633)
!9637 = !DILocation(line: 2926, column: 9, scope: !9633)
!9638 = !DILocation(line: 2926, column: 7, scope: !9634)
!9639 = !DILocation(line: 2927, column: 11, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9633, file: !3, line: 2926, column: 24)
!9641 = !DILocation(line: 2927, column: 4, scope: !9640)
!9642 = !DILocation(line: 2930, column: 5, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9633, file: !3, line: 2929, column: 8)
!9644 = distinct !{!9644, !9625, !9645}
!9645 = !DILocation(line: 2932, column: 2, scope: !299)
!9646 = !DILocation(line: 2933, column: 13, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !299, file: !3, line: 2933, column: 6)
!9648 = !DILocation(line: 2933, column: 19, scope: !9647)
!9649 = !DILocation(line: 2933, column: 25, scope: !9647)
!9650 = !DILocation(line: 2933, column: 31, scope: !9647)
!9651 = !DILocation(line: 2933, column: 6, scope: !9647)
!9652 = !DILocation(line: 2933, column: 6, scope: !299)
!9653 = !DILocalVariable(name: "a", scope: !9654, file: !3, line: 2939, type: !119)
!9654 = distinct !DILexicalBlock(scope: !9647, file: !3, line: 2933, column: 38)
!9655 = !DILocation(line: 2939, column: 7, scope: !9654)
!9656 = !DILocalVariable(name: "is_indent", scope: !9654, file: !3, line: 2940, type: !313)
!9657 = !DILocation(line: 2940, column: 8, scope: !9654)
!9658 = !DILocation(line: 2941, column: 10, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9654, file: !3, line: 2941, column: 3)
!9660 = !DILocation(line: 2941, column: 8, scope: !9659)
!9661 = !DILocation(line: 2941, column: 16, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9659, file: !3, line: 2941, column: 3)
!9663 = !DILocation(line: 2941, column: 20, scope: !9662)
!9664 = !DILocation(line: 2941, column: 26, scope: !9662)
!9665 = !DILocation(line: 2941, column: 18, scope: !9662)
!9666 = !DILocation(line: 2941, column: 32, scope: !9662)
!9667 = !DILocation(line: 2941, column: 36, scope: !9662)
!9668 = !DILocation(line: 2941, column: 42, scope: !9662)
!9669 = !DILocation(line: 2941, column: 48, scope: !9662)
!9670 = !DILocation(line: 2941, column: 53, scope: !9662)
!9671 = !DILocation(line: 2941, column: 56, scope: !9662)
!9672 = !DILocation(line: 0, scope: !9662)
!9673 = !DILocation(line: 2941, column: 3, scope: !9659)
!9674 = !DILocalVariable(name: "ch", scope: !9675, file: !3, line: 2942, type: !134)
!9675 = distinct !DILexicalBlock(scope: !9662, file: !3, line: 2941, column: 71)
!9676 = !DILocation(line: 2942, column: 9, scope: !9675)
!9677 = !DILocation(line: 2942, column: 14, scope: !9675)
!9678 = !DILocation(line: 2942, column: 20, scope: !9675)
!9679 = !DILocation(line: 2942, column: 26, scope: !9675)
!9680 = !DILocation(line: 2942, column: 31, scope: !9675)
!9681 = !DILocation(line: 2943, column: 8, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 2943, column: 8)
!9683 = !DILocation(line: 2943, column: 11, scope: !9682)
!9684 = !DILocation(line: 2943, column: 8, scope: !9675)
!9685 = !DILocation(line: 2944, column: 5, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9682, file: !3, line: 2943, column: 19)
!9687 = !DILocation(line: 2946, column: 13, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9682, file: !3, line: 2946, column: 13)
!9689 = !DILocation(line: 2946, column: 16, scope: !9688)
!9690 = !DILocation(line: 2946, column: 13, scope: !9682)
!9691 = !DILocation(line: 2947, column: 15, scope: !9692)
!9692 = distinct !DILexicalBlock(scope: !9688, file: !3, line: 2946, column: 24)
!9693 = !DILocation(line: 2948, column: 4, scope: !9692)
!9694 = !DILocation(line: 2949, column: 13, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9688, file: !3, line: 2949, column: 13)
!9696 = !DILocation(line: 2949, column: 16, scope: !9695)
!9697 = !DILocation(line: 2949, column: 23, scope: !9695)
!9698 = !DILocation(line: 2949, column: 26, scope: !9695)
!9699 = !DILocation(line: 2949, column: 29, scope: !9695)
!9700 = !DILocation(line: 2949, column: 13, scope: !9688)
!9701 = !DILocation(line: 2950, column: 15, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 2949, column: 38)
!9703 = !DILocation(line: 2951, column: 4, scope: !9702)
!9704 = !DILocation(line: 2952, column: 3, scope: !9675)
!9705 = !DILocation(line: 2941, column: 67, scope: !9662)
!9706 = !DILocation(line: 2941, column: 3, scope: !9662)
!9707 = distinct !{!9707, !9673, !9708}
!9708 = !DILocation(line: 2952, column: 3, scope: !9659)
!9709 = !DILocation(line: 2953, column: 7, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9654, file: !3, line: 2953, column: 7)
!9711 = !DILocation(line: 2953, column: 7, scope: !9654)
!9712 = !DILocation(line: 2954, column: 9, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9710, file: !3, line: 2953, column: 18)
!9714 = !DILocation(line: 2954, column: 6, scope: !9713)
!9715 = !DILocation(line: 2955, column: 3, scope: !9713)
!9716 = !DILocation(line: 2956, column: 2, scope: !9654)
!9717 = !DILocation(line: 2958, column: 12, scope: !9718)
!9718 = distinct !DILexicalBlock(scope: !299, file: !3, line: 2958, column: 2)
!9719 = !DILocation(line: 2958, column: 7, scope: !9718)
!9720 = !DILocation(line: 2958, column: 28, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !9718, file: !3, line: 2958, column: 2)
!9722 = !DILocation(line: 2958, column: 17, scope: !9721)
!9723 = !DILocation(line: 2958, column: 2, scope: !9718)
!9724 = !DILocation(line: 2960, column: 14, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9726, file: !3, line: 2960, column: 7)
!9726 = distinct !DILexicalBlock(scope: !9721, file: !3, line: 2958, column: 43)
!9727 = !DILocation(line: 2960, column: 20, scope: !9725)
!9728 = !DILocation(line: 2960, column: 26, scope: !9725)
!9729 = !DILocation(line: 2960, column: 43, scope: !9725)
!9730 = !DILocation(line: 2960, column: 32, scope: !9725)
!9731 = !DILocation(line: 2960, column: 7, scope: !9725)
!9732 = !DILocation(line: 2960, column: 50, scope: !9725)
!9733 = !DILocation(line: 2960, column: 53, scope: !9725)
!9734 = !DILocation(line: 2960, column: 55, scope: !9725)
!9735 = !DILocation(line: 2960, column: 7, scope: !9726)
!9736 = !DILocation(line: 2961, column: 16, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9738, file: !3, line: 2961, column: 8)
!9738 = distinct !DILexicalBlock(scope: !9725, file: !3, line: 2960, column: 60)
!9739 = !DILocation(line: 2961, column: 22, scope: !9737)
!9740 = !DILocation(line: 2961, column: 28, scope: !9737)
!9741 = !DILocation(line: 2961, column: 45, scope: !9737)
!9742 = !DILocation(line: 2961, column: 34, scope: !9737)
!9743 = !DILocation(line: 2961, column: 8, scope: !9737)
!9744 = !DILocation(line: 2961, column: 62, scope: !9737)
!9745 = !DILocation(line: 2961, column: 68, scope: !9737)
!9746 = !DILocation(line: 2961, column: 74, scope: !9737)
!9747 = !DILocation(line: 2961, column: 80, scope: !9737)
!9748 = !DILocation(line: 2961, column: 54, scope: !9737)
!9749 = !DILocation(line: 2961, column: 52, scope: !9737)
!9750 = !DILocation(line: 2961, column: 8, scope: !9738)
!9751 = !DILocation(line: 2962, column: 10, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9737, file: !3, line: 2961, column: 87)
!9753 = !DILocation(line: 2962, column: 7, scope: !9752)
!9754 = !DILocation(line: 2963, column: 4, scope: !9752)
!9755 = !DILocation(line: 2964, column: 3, scope: !9738)
!9756 = !DILocation(line: 2965, column: 2, scope: !9726)
!9757 = !DILocation(line: 2958, column: 39, scope: !9721)
!9758 = !DILocation(line: 2958, column: 2, scope: !9721)
!9759 = distinct !{!9759, !9723, !9760}
!9760 = !DILocation(line: 2965, column: 2, scope: !9718)
!9761 = !DILocation(line: 2966, column: 9, scope: !299)
!9762 = !DILocation(line: 2966, column: 2, scope: !299)
!9763 = !DILocation(line: 2967, column: 1, scope: !299)
!9764 = distinct !DISubprogram(name: "text_check_bracket", scope: !3, file: !3, line: 2973, type: !9765, scopeLine: 2974, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!9765 = !DISubroutineType(types: !9766)
!9766 = !{!119, !305}
!9767 = !DILocalVariable(name: "ch", arg: 1, scope: !9764, file: !3, line: 2973, type: !305)
!9768 = !DILocation(line: 2973, column: 35, scope: !9764)
!9769 = !DILocalVariable(name: "a", scope: !9764, file: !3, line: 2975, type: !119)
!9770 = !DILocation(line: 2975, column: 6, scope: !9764)
!9771 = !DILocalVariable(name: "opens", scope: !9764, file: !3, line: 2976, type: !287)
!9772 = !DILocation(line: 2976, column: 7, scope: !9764)
!9773 = !DILocalVariable(name: "close", scope: !9764, file: !3, line: 2977, type: !287)
!9774 = !DILocation(line: 2977, column: 7, scope: !9764)
!9775 = !DILocation(line: 2979, column: 9, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9764, file: !3, line: 2979, column: 2)
!9777 = !DILocation(line: 2979, column: 7, scope: !9776)
!9778 = !DILocation(line: 2979, column: 14, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9776, file: !3, line: 2979, column: 2)
!9780 = !DILocation(line: 2979, column: 16, scope: !9779)
!9781 = !DILocation(line: 2979, column: 2, scope: !9776)
!9782 = !DILocation(line: 2980, column: 7, scope: !9783)
!9783 = distinct !DILexicalBlock(scope: !9784, file: !3, line: 2980, column: 7)
!9784 = distinct !DILexicalBlock(scope: !9779, file: !3, line: 2979, column: 44)
!9785 = !DILocation(line: 2980, column: 19, scope: !9783)
!9786 = !DILocation(line: 2980, column: 13, scope: !9783)
!9787 = !DILocation(line: 2980, column: 10, scope: !9783)
!9788 = !DILocation(line: 2980, column: 7, scope: !9784)
!9789 = !DILocation(line: 2981, column: 11, scope: !9783)
!9790 = !DILocation(line: 2981, column: 13, scope: !9783)
!9791 = !DILocation(line: 2981, column: 4, scope: !9783)
!9792 = !DILocation(line: 2982, column: 12, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9783, file: !3, line: 2982, column: 12)
!9794 = !DILocation(line: 2982, column: 24, scope: !9793)
!9795 = !DILocation(line: 2982, column: 18, scope: !9793)
!9796 = !DILocation(line: 2982, column: 15, scope: !9793)
!9797 = !DILocation(line: 2982, column: 12, scope: !9783)
!9798 = !DILocation(line: 2983, column: 13, scope: !9793)
!9799 = !DILocation(line: 2983, column: 15, scope: !9793)
!9800 = !DILocation(line: 2983, column: 11, scope: !9793)
!9801 = !DILocation(line: 2983, column: 4, scope: !9793)
!9802 = !DILocation(line: 2984, column: 2, scope: !9784)
!9803 = !DILocation(line: 2979, column: 40, scope: !9779)
!9804 = !DILocation(line: 2979, column: 2, scope: !9779)
!9805 = distinct !{!9805, !9781, !9806}
!9806 = !DILocation(line: 2984, column: 2, scope: !9776)
!9807 = !DILocation(line: 2985, column: 2, scope: !9764)
!9808 = !DILocation(line: 2986, column: 1, scope: !9764)
!9809 = distinct !DISubprogram(name: "text_check_delim", scope: !3, file: !3, line: 2989, type: !9810, scopeLine: 2990, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!9810 = !DISubroutineType(types: !9811)
!9811 = !{!313, !305}
!9812 = !DILocalVariable(name: "ch", arg: 1, scope: !9809, file: !3, line: 2989, type: !305)
!9813 = !DILocation(line: 2989, column: 34, scope: !9809)
!9814 = !DILocalVariable(name: "a", scope: !9809, file: !3, line: 2991, type: !119)
!9815 = !DILocation(line: 2991, column: 6, scope: !9809)
!9816 = !DILocalVariable(name: "delims", scope: !9809, file: !3, line: 2992, type: !9817)
!9817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 240, elements: !9818)
!9818 = !{!9819}
!9819 = !DISubrange(count: 30)
!9820 = !DILocation(line: 2992, column: 7, scope: !9809)
!9821 = !DILocation(line: 2994, column: 9, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9809, file: !3, line: 2994, column: 2)
!9823 = !DILocation(line: 2994, column: 7, scope: !9822)
!9824 = !DILocation(line: 2994, column: 14, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9822, file: !3, line: 2994, column: 2)
!9826 = !DILocation(line: 2994, column: 16, scope: !9825)
!9827 = !DILocation(line: 2994, column: 2, scope: !9822)
!9828 = !DILocation(line: 2995, column: 7, scope: !9829)
!9829 = distinct !DILexicalBlock(scope: !9830, file: !3, line: 2995, column: 7)
!9830 = distinct !DILexicalBlock(scope: !9825, file: !3, line: 2994, column: 45)
!9831 = !DILocation(line: 2995, column: 20, scope: !9829)
!9832 = !DILocation(line: 2995, column: 13, scope: !9829)
!9833 = !DILocation(line: 2995, column: 10, scope: !9829)
!9834 = !DILocation(line: 2995, column: 7, scope: !9830)
!9835 = !DILocation(line: 2996, column: 4, scope: !9829)
!9836 = !DILocation(line: 2997, column: 2, scope: !9830)
!9837 = !DILocation(line: 2994, column: 41, scope: !9825)
!9838 = !DILocation(line: 2994, column: 2, scope: !9825)
!9839 = distinct !{!9839, !9827, !9840}
!9840 = !DILocation(line: 2997, column: 2, scope: !9822)
!9841 = !DILocation(line: 2998, column: 2, scope: !9809)
!9842 = !DILocation(line: 2999, column: 1, scope: !9809)
!9843 = distinct !DISubprogram(name: "text_check_digit", scope: !3, file: !3, line: 3001, type: !9810, scopeLine: 3002, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!9844 = !DILocalVariable(name: "ch", arg: 1, scope: !9843, file: !3, line: 3001, type: !305)
!9845 = !DILocation(line: 3001, column: 34, scope: !9843)
!9846 = !DILocation(line: 3003, column: 6, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9843, file: !3, line: 3003, column: 6)
!9848 = !DILocation(line: 3003, column: 9, scope: !9847)
!9849 = !DILocation(line: 3003, column: 6, scope: !9843)
!9850 = !DILocation(line: 3003, column: 16, scope: !9847)
!9851 = !DILocation(line: 3004, column: 6, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9843, file: !3, line: 3004, column: 6)
!9853 = !DILocation(line: 3004, column: 9, scope: !9852)
!9854 = !DILocation(line: 3004, column: 6, scope: !9843)
!9855 = !DILocation(line: 3004, column: 17, scope: !9852)
!9856 = !DILocation(line: 3005, column: 2, scope: !9843)
!9857 = !DILocation(line: 3006, column: 1, scope: !9843)
!9858 = distinct !DISubprogram(name: "text_check_identifier", scope: !3, file: !3, line: 3008, type: !9810, scopeLine: 3009, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!9859 = !DILocalVariable(name: "ch", arg: 1, scope: !9858, file: !3, line: 3008, type: !305)
!9860 = !DILocation(line: 3008, column: 39, scope: !9858)
!9861 = !DILocation(line: 3010, column: 6, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9858, file: !3, line: 3010, column: 6)
!9863 = !DILocation(line: 3010, column: 9, scope: !9862)
!9864 = !DILocation(line: 3010, column: 6, scope: !9858)
!9865 = !DILocation(line: 3010, column: 16, scope: !9862)
!9866 = !DILocation(line: 3011, column: 6, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9858, file: !3, line: 3011, column: 6)
!9868 = !DILocation(line: 3011, column: 9, scope: !9867)
!9869 = !DILocation(line: 3011, column: 6, scope: !9858)
!9870 = !DILocation(line: 3011, column: 17, scope: !9867)
!9871 = !DILocation(line: 3012, column: 6, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9858, file: !3, line: 3012, column: 6)
!9873 = !DILocation(line: 3012, column: 9, scope: !9872)
!9874 = !DILocation(line: 3012, column: 6, scope: !9858)
!9875 = !DILocation(line: 3012, column: 16, scope: !9872)
!9876 = !DILocation(line: 3013, column: 6, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9858, file: !3, line: 3013, column: 6)
!9878 = !DILocation(line: 3013, column: 9, scope: !9877)
!9879 = !DILocation(line: 3013, column: 16, scope: !9877)
!9880 = !DILocation(line: 3013, column: 19, scope: !9877)
!9881 = !DILocation(line: 3013, column: 22, scope: !9877)
!9882 = !DILocation(line: 3013, column: 6, scope: !9858)
!9883 = !DILocation(line: 3013, column: 30, scope: !9877)
!9884 = !DILocation(line: 3014, column: 6, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9858, file: !3, line: 3014, column: 6)
!9886 = !DILocation(line: 3014, column: 9, scope: !9885)
!9887 = !DILocation(line: 3014, column: 6, scope: !9858)
!9888 = !DILocation(line: 3014, column: 16, scope: !9885)
!9889 = !DILocation(line: 3015, column: 6, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9858, file: !3, line: 3015, column: 6)
!9891 = !DILocation(line: 3015, column: 9, scope: !9890)
!9892 = !DILocation(line: 3015, column: 6, scope: !9858)
!9893 = !DILocation(line: 3015, column: 17, scope: !9890)
!9894 = !DILocation(line: 3016, column: 2, scope: !9858)
!9895 = !DILocation(line: 3017, column: 1, scope: !9858)
!9896 = distinct !DISubprogram(name: "text_check_identifier_nodigit", scope: !3, file: !3, line: 3019, type: !9810, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!9897 = !DILocalVariable(name: "ch", arg: 1, scope: !9896, file: !3, line: 3019, type: !305)
!9898 = !DILocation(line: 3019, column: 47, scope: !9896)
!9899 = !DILocation(line: 3021, column: 6, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9896, file: !3, line: 3021, column: 6)
!9901 = !DILocation(line: 3021, column: 9, scope: !9900)
!9902 = !DILocation(line: 3021, column: 6, scope: !9896)
!9903 = !DILocation(line: 3021, column: 17, scope: !9900)
!9904 = !DILocation(line: 3022, column: 6, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9896, file: !3, line: 3022, column: 6)
!9906 = !DILocation(line: 3022, column: 9, scope: !9905)
!9907 = !DILocation(line: 3022, column: 6, scope: !9896)
!9908 = !DILocation(line: 3022, column: 16, scope: !9905)
!9909 = !DILocation(line: 3023, column: 6, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9896, file: !3, line: 3023, column: 6)
!9911 = !DILocation(line: 3023, column: 9, scope: !9910)
!9912 = !DILocation(line: 3023, column: 16, scope: !9910)
!9913 = !DILocation(line: 3023, column: 19, scope: !9910)
!9914 = !DILocation(line: 3023, column: 22, scope: !9910)
!9915 = !DILocation(line: 3023, column: 6, scope: !9896)
!9916 = !DILocation(line: 3023, column: 30, scope: !9910)
!9917 = !DILocation(line: 3024, column: 6, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9896, file: !3, line: 3024, column: 6)
!9919 = !DILocation(line: 3024, column: 9, scope: !9918)
!9920 = !DILocation(line: 3024, column: 6, scope: !9896)
!9921 = !DILocation(line: 3024, column: 16, scope: !9918)
!9922 = !DILocation(line: 3025, column: 6, scope: !9923)
!9923 = distinct !DILexicalBlock(scope: !9896, file: !3, line: 3025, column: 6)
!9924 = !DILocation(line: 3025, column: 9, scope: !9923)
!9925 = !DILocation(line: 3025, column: 6, scope: !9896)
!9926 = !DILocation(line: 3025, column: 17, scope: !9923)
!9927 = !DILocation(line: 3026, column: 2, scope: !9896)
!9928 = !DILocation(line: 3027, column: 1, scope: !9896)
!9929 = distinct !DISubprogram(name: "text_check_identifier_unicode", scope: !3, file: !3, line: 3030, type: !9930, scopeLine: 3031, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!9930 = !DISubroutineType(types: !9931)
!9931 = !{!119, !9932}
!9932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!9933 = !DILocalVariable(name: "ch", arg: 1, scope: !9929, file: !3, line: 3030, type: !9932)
!9934 = !DILocation(line: 3030, column: 54, scope: !9929)
!9935 = !DILocation(line: 3032, column: 10, scope: !9929)
!9936 = !DILocation(line: 3032, column: 13, scope: !9929)
!9937 = !DILocation(line: 3032, column: 19, scope: !9929)
!9938 = !DILocation(line: 3032, column: 58, scope: !9929)
!9939 = !DILocation(line: 3032, column: 44, scope: !9929)
!9940 = !DILocation(line: 3032, column: 22, scope: !9929)
!9941 = !DILocation(line: 0, scope: !9929)
!9942 = !DILocation(line: 3032, column: 2, scope: !9929)
!9943 = distinct !DISubprogram(name: "text_check_identifier_nodigit_unicode", scope: !3, file: !3, line: 3035, type: !9930, scopeLine: 3036, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!9944 = !DILocalVariable(name: "ch", arg: 1, scope: !9943, file: !3, line: 3035, type: !9932)
!9945 = !DILocation(line: 3035, column: 62, scope: !9943)
!9946 = !DILocation(line: 3037, column: 10, scope: !9943)
!9947 = !DILocation(line: 3037, column: 13, scope: !9943)
!9948 = !DILocation(line: 3037, column: 19, scope: !9943)
!9949 = !DILocation(line: 3037, column: 58, scope: !9943)
!9950 = !DILocation(line: 3037, column: 52, scope: !9943)
!9951 = !DILocation(line: 3037, column: 22, scope: !9943)
!9952 = !DILocation(line: 0, scope: !9943)
!9953 = !DILocation(line: 3037, column: 2, scope: !9943)
!9954 = distinct !DISubprogram(name: "text_check_whitespace", scope: !3, file: !3, line: 3041, type: !9810, scopeLine: 3042, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!9955 = !DILocalVariable(name: "ch", arg: 1, scope: !9954, file: !3, line: 3041, type: !305)
!9956 = !DILocation(line: 3041, column: 39, scope: !9954)
!9957 = !DILocation(line: 3043, column: 6, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9954, file: !3, line: 3043, column: 6)
!9959 = !DILocation(line: 3043, column: 9, scope: !9958)
!9960 = !DILocation(line: 3043, column: 16, scope: !9958)
!9961 = !DILocation(line: 3043, column: 19, scope: !9958)
!9962 = !DILocation(line: 3043, column: 22, scope: !9958)
!9963 = !DILocation(line: 3043, column: 30, scope: !9958)
!9964 = !DILocation(line: 3043, column: 33, scope: !9958)
!9965 = !DILocation(line: 3043, column: 36, scope: !9958)
!9966 = !DILocation(line: 3043, column: 44, scope: !9958)
!9967 = !DILocation(line: 3043, column: 47, scope: !9958)
!9968 = !DILocation(line: 3043, column: 50, scope: !9958)
!9969 = !DILocation(line: 3043, column: 6, scope: !9954)
!9970 = !DILocation(line: 3044, column: 3, scope: !9958)
!9971 = !DILocation(line: 3045, column: 2, scope: !9954)
!9972 = !DILocation(line: 3046, column: 1, scope: !9954)
!9973 = distinct !DISubprogram(name: "text_find_identifier_start", scope: !3, file: !3, line: 3048, type: !5179, scopeLine: 3049, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !302)
!9974 = !DILocalVariable(name: "str", arg: 1, scope: !9973, file: !3, line: 3048, type: !304)
!9975 = !DILocation(line: 3048, column: 44, scope: !9973)
!9976 = !DILocalVariable(name: "i", arg: 2, scope: !9973, file: !3, line: 3048, type: !119)
!9977 = !DILocation(line: 3048, column: 53, scope: !9973)
!9978 = !DILocation(line: 3050, column: 6, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9973, file: !3, line: 3050, column: 6)
!9980 = !DILocation(line: 3050, column: 6, scope: !9973)
!9981 = !DILocation(line: 3051, column: 3, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9979, file: !3, line: 3050, column: 24)
!9983 = !DILocation(line: 3054, column: 2, scope: !9973)
!9984 = !DILocation(line: 3054, column: 10, scope: !9973)
!9985 = !DILocation(line: 3055, column: 30, scope: !9986)
!9986 = distinct !DILexicalBlock(scope: !9987, file: !3, line: 3055, column: 7)
!9987 = distinct !DILexicalBlock(scope: !9973, file: !3, line: 3054, column: 14)
!9988 = !DILocation(line: 3055, column: 34, scope: !9986)
!9989 = !DILocation(line: 3055, column: 8, scope: !9986)
!9990 = !DILocation(line: 3055, column: 7, scope: !9987)
!9991 = !DILocation(line: 3056, column: 4, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9986, file: !3, line: 3055, column: 39)
!9993 = distinct !{!9993, !9983, !9994}
!9994 = !DILocation(line: 3058, column: 2, scope: !9973)
!9995 = !DILocation(line: 3059, column: 3, scope: !9973)
!9996 = !DILocation(line: 3060, column: 9, scope: !9973)
!9997 = !DILocation(line: 3060, column: 2, scope: !9973)
!9998 = !DILocation(line: 3061, column: 1, scope: !9973)
!9999 = distinct !DISubprogram(name: "cleanup_textline", scope: !3, file: !3, line: 264, type: !10000, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!10000 = !DISubroutineType(types: !10001)
!10001 = !{null, !124}
!10002 = !DILocalVariable(name: "tl", arg: 1, scope: !9999, file: !3, line: 264, type: !124)
!10003 = !DILocation(line: 264, column: 40, scope: !9999)
!10004 = !DILocalVariable(name: "i", scope: !9999, file: !3, line: 266, type: !119)
!10005 = !DILocation(line: 266, column: 6, scope: !9999)
!10006 = !DILocation(line: 268, column: 9, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !9999, file: !3, line: 268, column: 2)
!10008 = !DILocation(line: 268, column: 7, scope: !10007)
!10009 = !DILocation(line: 268, column: 14, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10007, file: !3, line: 268, column: 2)
!10011 = !DILocation(line: 268, column: 18, scope: !10010)
!10012 = !DILocation(line: 268, column: 22, scope: !10010)
!10013 = !DILocation(line: 268, column: 16, scope: !10010)
!10014 = !DILocation(line: 268, column: 2, scope: !10007)
!10015 = !DILocation(line: 269, column: 7, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !10017, file: !3, line: 269, column: 7)
!10017 = distinct !DILexicalBlock(scope: !10010, file: !3, line: 268, column: 32)
!10018 = !DILocation(line: 269, column: 11, scope: !10016)
!10019 = !DILocation(line: 269, column: 16, scope: !10016)
!10020 = !DILocation(line: 269, column: 19, scope: !10016)
!10021 = !DILocation(line: 269, column: 25, scope: !10016)
!10022 = !DILocation(line: 269, column: 28, scope: !10016)
!10023 = !DILocation(line: 269, column: 32, scope: !10016)
!10024 = !DILocation(line: 269, column: 37, scope: !10016)
!10025 = !DILocation(line: 269, column: 40, scope: !10016)
!10026 = !DILocation(line: 269, column: 7, scope: !10017)
!10027 = !DILocation(line: 270, column: 12, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 269, column: 49)
!10029 = !DILocation(line: 270, column: 16, scope: !10028)
!10030 = !DILocation(line: 270, column: 23, scope: !10028)
!10031 = !DILocation(line: 270, column: 21, scope: !10028)
!10032 = !DILocation(line: 270, column: 26, scope: !10028)
!10033 = !DILocation(line: 270, column: 30, scope: !10028)
!10034 = !DILocation(line: 270, column: 37, scope: !10028)
!10035 = !DILocation(line: 270, column: 35, scope: !10028)
!10036 = !DILocation(line: 270, column: 39, scope: !10028)
!10037 = !DILocation(line: 270, column: 44, scope: !10028)
!10038 = !DILocation(line: 270, column: 48, scope: !10028)
!10039 = !DILocation(line: 270, column: 54, scope: !10028)
!10040 = !DILocation(line: 270, column: 52, scope: !10028)
!10041 = !DILocation(line: 270, column: 4, scope: !10028)
!10042 = !DILocation(line: 271, column: 4, scope: !10028)
!10043 = !DILocation(line: 271, column: 8, scope: !10028)
!10044 = !DILocation(line: 271, column: 11, scope: !10028)
!10045 = !DILocation(line: 272, column: 5, scope: !10028)
!10046 = !DILocation(line: 273, column: 3, scope: !10028)
!10047 = !DILocation(line: 274, column: 2, scope: !10017)
!10048 = !DILocation(line: 268, column: 28, scope: !10010)
!10049 = !DILocation(line: 268, column: 2, scope: !10010)
!10050 = distinct !{!10050, !10014, !10051}
!10051 = !DILocation(line: 274, column: 2, scope: !10007)
!10052 = !DILocation(line: 275, column: 41, scope: !9999)
!10053 = !DILocation(line: 275, column: 45, scope: !9999)
!10054 = !DILocation(line: 275, column: 13, scope: !9999)
!10055 = !DILocation(line: 275, column: 2, scope: !9999)
!10056 = !DILocation(line: 275, column: 6, scope: !9999)
!10057 = !DILocation(line: 275, column: 10, scope: !9999)
!10058 = !DILocation(line: 276, column: 1, scope: !9999)
!10059 = distinct !DISubprogram(name: "txt_undo_store_uint32", scope: !3, file: !3, line: 1723, type: !10060, scopeLine: 1724, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!10060 = !DISubroutineType(types: !10061)
!10061 = !{null, !133, !4804, !7}
!10062 = !DILocalVariable(name: "undo_buf", arg: 1, scope: !10059, file: !3, line: 1723, type: !133)
!10063 = !DILocation(line: 1723, column: 41, scope: !10059)
!10064 = !DILocalVariable(name: "undo_pos", arg: 2, scope: !10059, file: !3, line: 1723, type: !4804)
!10065 = !DILocation(line: 1723, column: 56, scope: !10059)
!10066 = !DILocalVariable(name: "value", arg: 3, scope: !10059, file: !3, line: 1723, type: !7)
!10067 = !DILocation(line: 1723, column: 79, scope: !10059)
!10068 = !DILocation(line: 1725, column: 25, scope: !10059)
!10069 = !DILocation(line: 1725, column: 32, scope: !10059)
!10070 = !DILocation(line: 1725, column: 24, scope: !10059)
!10071 = !DILocation(line: 1725, column: 2, scope: !10059)
!10072 = !DILocation(line: 1725, column: 12, scope: !10059)
!10073 = !DILocation(line: 1725, column: 11, scope: !10059)
!10074 = !DILocation(line: 1725, column: 22, scope: !10059)
!10075 = !DILocation(line: 1726, column: 4, scope: !10059)
!10076 = !DILocation(line: 1726, column: 13, scope: !10059)
!10077 = !DILocation(line: 1727, column: 25, scope: !10059)
!10078 = !DILocation(line: 1727, column: 31, scope: !10059)
!10079 = !DILocation(line: 1727, column: 37, scope: !10059)
!10080 = !DILocation(line: 1727, column: 24, scope: !10059)
!10081 = !DILocation(line: 1727, column: 2, scope: !10059)
!10082 = !DILocation(line: 1727, column: 12, scope: !10059)
!10083 = !DILocation(line: 1727, column: 11, scope: !10059)
!10084 = !DILocation(line: 1727, column: 22, scope: !10059)
!10085 = !DILocation(line: 1728, column: 4, scope: !10059)
!10086 = !DILocation(line: 1728, column: 13, scope: !10059)
!10087 = !DILocation(line: 1729, column: 25, scope: !10059)
!10088 = !DILocation(line: 1729, column: 31, scope: !10059)
!10089 = !DILocation(line: 1729, column: 38, scope: !10059)
!10090 = !DILocation(line: 1729, column: 24, scope: !10059)
!10091 = !DILocation(line: 1729, column: 2, scope: !10059)
!10092 = !DILocation(line: 1729, column: 12, scope: !10059)
!10093 = !DILocation(line: 1729, column: 11, scope: !10059)
!10094 = !DILocation(line: 1729, column: 22, scope: !10059)
!10095 = !DILocation(line: 1730, column: 4, scope: !10059)
!10096 = !DILocation(line: 1730, column: 13, scope: !10059)
!10097 = !DILocation(line: 1731, column: 25, scope: !10059)
!10098 = !DILocation(line: 1731, column: 31, scope: !10059)
!10099 = !DILocation(line: 1731, column: 38, scope: !10059)
!10100 = !DILocation(line: 1731, column: 24, scope: !10059)
!10101 = !DILocation(line: 1731, column: 2, scope: !10059)
!10102 = !DILocation(line: 1731, column: 12, scope: !10059)
!10103 = !DILocation(line: 1731, column: 11, scope: !10059)
!10104 = !DILocation(line: 1731, column: 22, scope: !10059)
!10105 = !DILocation(line: 1732, column: 4, scope: !10059)
!10106 = !DILocation(line: 1732, column: 13, scope: !10059)
!10107 = !DILocation(line: 1733, column: 1, scope: !10059)
!10108 = distinct !DISubprogram(name: "txt_undo_store_cur", scope: !3, file: !3, line: 1736, type: !332, scopeLine: 1737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!10109 = !DILocalVariable(name: "text", arg: 1, scope: !10108, file: !3, line: 1736, type: !139)
!10110 = !DILocation(line: 1736, column: 38, scope: !10108)
!10111 = !DILocation(line: 1738, column: 24, scope: !10108)
!10112 = !DILocation(line: 1738, column: 30, scope: !10108)
!10113 = !DILocation(line: 1738, column: 41, scope: !10108)
!10114 = !DILocation(line: 1738, column: 47, scope: !10108)
!10115 = !DILocation(line: 1738, column: 57, scope: !10108)
!10116 = !DILocation(line: 1738, column: 63, scope: !10108)
!10117 = !DILocation(line: 1738, column: 2, scope: !10108)
!10118 = !DILocation(line: 1739, column: 24, scope: !10108)
!10119 = !DILocation(line: 1739, column: 30, scope: !10108)
!10120 = !DILocation(line: 1739, column: 41, scope: !10108)
!10121 = !DILocation(line: 1739, column: 47, scope: !10108)
!10122 = !DILocation(line: 1739, column: 70, scope: !10108)
!10123 = !DILocation(line: 1739, column: 76, scope: !10108)
!10124 = !DILocation(line: 1739, column: 82, scope: !10108)
!10125 = !DILocation(line: 1739, column: 89, scope: !10108)
!10126 = !DILocation(line: 1739, column: 95, scope: !10108)
!10127 = !DILocation(line: 1739, column: 57, scope: !10108)
!10128 = !DILocation(line: 1739, column: 2, scope: !10108)
!10129 = !DILocation(line: 1740, column: 1, scope: !10108)
!10130 = distinct !DISubprogram(name: "txt_undo_store_sel", scope: !3, file: !3, line: 1743, type: !332, scopeLine: 1744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!10131 = !DILocalVariable(name: "text", arg: 1, scope: !10130, file: !3, line: 1743, type: !139)
!10132 = !DILocation(line: 1743, column: 38, scope: !10130)
!10133 = !DILocation(line: 1745, column: 24, scope: !10130)
!10134 = !DILocation(line: 1745, column: 30, scope: !10130)
!10135 = !DILocation(line: 1745, column: 41, scope: !10130)
!10136 = !DILocation(line: 1745, column: 47, scope: !10130)
!10137 = !DILocation(line: 1745, column: 57, scope: !10130)
!10138 = !DILocation(line: 1745, column: 63, scope: !10130)
!10139 = !DILocation(line: 1745, column: 2, scope: !10130)
!10140 = !DILocation(line: 1746, column: 24, scope: !10130)
!10141 = !DILocation(line: 1746, column: 30, scope: !10130)
!10142 = !DILocation(line: 1746, column: 41, scope: !10130)
!10143 = !DILocation(line: 1746, column: 47, scope: !10130)
!10144 = !DILocation(line: 1746, column: 70, scope: !10130)
!10145 = !DILocation(line: 1746, column: 76, scope: !10130)
!10146 = !DILocation(line: 1746, column: 82, scope: !10130)
!10147 = !DILocation(line: 1746, column: 89, scope: !10130)
!10148 = !DILocation(line: 1746, column: 95, scope: !10130)
!10149 = !DILocation(line: 1746, column: 57, scope: !10130)
!10150 = !DILocation(line: 1746, column: 2, scope: !10130)
!10151 = !DILocation(line: 1747, column: 1, scope: !10130)
!10152 = distinct !DISubprogram(name: "txt_undo_store_uint16", scope: !3, file: !3, line: 1715, type: !10153, scopeLine: 1716, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!10153 = !DISubroutineType(types: !10154)
!10154 = !{null, !133, !4804, !732}
!10155 = !DILocalVariable(name: "undo_buf", arg: 1, scope: !10152, file: !3, line: 1715, type: !133)
!10156 = !DILocation(line: 1715, column: 41, scope: !10152)
!10157 = !DILocalVariable(name: "undo_pos", arg: 2, scope: !10152, file: !3, line: 1715, type: !4804)
!10158 = !DILocation(line: 1715, column: 56, scope: !10152)
!10159 = !DILocalVariable(name: "value", arg: 3, scope: !10152, file: !3, line: 1715, type: !732)
!10160 = !DILocation(line: 1715, column: 81, scope: !10152)
!10161 = !DILocation(line: 1717, column: 25, scope: !10152)
!10162 = !DILocation(line: 1717, column: 24, scope: !10152)
!10163 = !DILocation(line: 1717, column: 32, scope: !10152)
!10164 = !DILocation(line: 1717, column: 2, scope: !10152)
!10165 = !DILocation(line: 1717, column: 12, scope: !10152)
!10166 = !DILocation(line: 1717, column: 11, scope: !10152)
!10167 = !DILocation(line: 1717, column: 22, scope: !10152)
!10168 = !DILocation(line: 1718, column: 4, scope: !10152)
!10169 = !DILocation(line: 1718, column: 13, scope: !10152)
!10170 = !DILocation(line: 1719, column: 25, scope: !10152)
!10171 = !DILocation(line: 1719, column: 31, scope: !10152)
!10172 = !DILocation(line: 1719, column: 37, scope: !10152)
!10173 = !DILocation(line: 1719, column: 24, scope: !10152)
!10174 = !DILocation(line: 1719, column: 2, scope: !10152)
!10175 = !DILocation(line: 1719, column: 12, scope: !10152)
!10176 = !DILocation(line: 1719, column: 11, scope: !10152)
!10177 = !DILocation(line: 1719, column: 22, scope: !10152)
!10178 = !DILocation(line: 1720, column: 4, scope: !10152)
!10179 = !DILocation(line: 1720, column: 13, scope: !10152)
!10180 = !DILocation(line: 1721, column: 1, scope: !10152)
!10181 = distinct !DISubprogram(name: "txt_undo_read_uint16", scope: !3, file: !3, line: 1835, type: !10182, scopeLine: 1836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!10182 = !DISubroutineType(types: !10183)
!10183 = !{!732, !304, !4804}
!10184 = !DILocalVariable(name: "undo_buf", arg: 1, scope: !10181, file: !3, line: 1835, type: !304)
!10185 = !DILocation(line: 1835, column: 56, scope: !10181)
!10186 = !DILocalVariable(name: "undo_pos", arg: 2, scope: !10181, file: !3, line: 1835, type: !4804)
!10187 = !DILocation(line: 1835, column: 71, scope: !10181)
!10188 = !DILocalVariable(name: "val", scope: !10181, file: !3, line: 1837, type: !732)
!10189 = !DILocation(line: 1837, column: 17, scope: !10181)
!10190 = !DILocation(line: 1838, column: 8, scope: !10181)
!10191 = !DILocation(line: 1838, column: 18, scope: !10181)
!10192 = !DILocation(line: 1838, column: 17, scope: !10181)
!10193 = !DILocation(line: 1838, column: 6, scope: !10181)
!10194 = !DILocation(line: 1838, column: 31, scope: !10181)
!10195 = !DILocation(line: 1838, column: 40, scope: !10181)
!10196 = !DILocation(line: 1839, column: 9, scope: !10181)
!10197 = !DILocation(line: 1839, column: 13, scope: !10181)
!10198 = !DILocation(line: 1839, column: 21, scope: !10181)
!10199 = !DILocation(line: 1839, column: 31, scope: !10181)
!10200 = !DILocation(line: 1839, column: 30, scope: !10181)
!10201 = !DILocation(line: 1839, column: 19, scope: !10181)
!10202 = !DILocation(line: 1839, column: 8, scope: !10181)
!10203 = !DILocation(line: 1839, column: 6, scope: !10181)
!10204 = !DILocation(line: 1839, column: 44, scope: !10181)
!10205 = !DILocation(line: 1839, column: 53, scope: !10181)
!10206 = !DILocation(line: 1840, column: 9, scope: !10181)
!10207 = !DILocation(line: 1840, column: 2, scope: !10181)
!10208 = distinct !DISubprogram(name: "txt_undo_read_sel", scope: !3, file: !3, line: 1861, type: !7510, scopeLine: 1862, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!10209 = !DILocalVariable(name: "undo_buf", arg: 1, scope: !10208, file: !3, line: 1861, type: !304)
!10210 = !DILocation(line: 1861, column: 43, scope: !10208)
!10211 = !DILocalVariable(name: "undo_pos", arg: 2, scope: !10208, file: !3, line: 1861, type: !4804)
!10212 = !DILocation(line: 1861, column: 58, scope: !10208)
!10213 = !DILocalVariable(name: "selln", arg: 3, scope: !10208, file: !3, line: 1861, type: !2287)
!10214 = !DILocation(line: 1861, column: 82, scope: !10208)
!10215 = !DILocalVariable(name: "selc", arg: 4, scope: !10208, file: !3, line: 1861, type: !7512)
!10216 = !DILocation(line: 1861, column: 105, scope: !10208)
!10217 = !DILocation(line: 1863, column: 32, scope: !10208)
!10218 = !DILocation(line: 1863, column: 42, scope: !10208)
!10219 = !DILocation(line: 1863, column: 11, scope: !10208)
!10220 = !DILocation(line: 1863, column: 3, scope: !10208)
!10221 = !DILocation(line: 1863, column: 9, scope: !10208)
!10222 = !DILocation(line: 1864, column: 32, scope: !10208)
!10223 = !DILocation(line: 1864, column: 42, scope: !10208)
!10224 = !DILocation(line: 1864, column: 11, scope: !10208)
!10225 = !DILocation(line: 1864, column: 3, scope: !10208)
!10226 = !DILocation(line: 1864, column: 9, scope: !10208)
!10227 = !DILocation(line: 1865, column: 1, scope: !10208)
!10228 = distinct !DISubprogram(name: "txt_redo_read_uint16", scope: !3, file: !3, line: 1911, type: !10182, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!10229 = !DILocalVariable(name: "undo_buf", arg: 1, scope: !10228, file: !3, line: 1911, type: !304)
!10230 = !DILocation(line: 1911, column: 56, scope: !10228)
!10231 = !DILocalVariable(name: "undo_pos", arg: 2, scope: !10228, file: !3, line: 1911, type: !4804)
!10232 = !DILocation(line: 1911, column: 71, scope: !10228)
!10233 = !DILocalVariable(name: "val", scope: !10228, file: !3, line: 1913, type: !732)
!10234 = !DILocation(line: 1913, column: 17, scope: !10228)
!10235 = !DILocation(line: 1914, column: 8, scope: !10228)
!10236 = !DILocation(line: 1914, column: 18, scope: !10228)
!10237 = !DILocation(line: 1914, column: 17, scope: !10228)
!10238 = !DILocation(line: 1914, column: 6, scope: !10228)
!10239 = !DILocation(line: 1914, column: 31, scope: !10228)
!10240 = !DILocation(line: 1914, column: 40, scope: !10228)
!10241 = !DILocation(line: 1915, column: 8, scope: !10228)
!10242 = !DILocation(line: 1915, column: 15, scope: !10228)
!10243 = !DILocation(line: 1915, column: 25, scope: !10228)
!10244 = !DILocation(line: 1915, column: 24, scope: !10228)
!10245 = !DILocation(line: 1915, column: 35, scope: !10228)
!10246 = !DILocation(line: 1915, column: 12, scope: !10228)
!10247 = !DILocation(line: 1915, column: 6, scope: !10228)
!10248 = !DILocation(line: 1915, column: 44, scope: !10228)
!10249 = !DILocation(line: 1915, column: 53, scope: !10228)
!10250 = !DILocation(line: 1916, column: 9, scope: !10228)
!10251 = !DILocation(line: 1916, column: 2, scope: !10228)
!10252 = distinct !DISubprogram(name: "txt_redo_read_sel", scope: !3, file: !3, line: 1937, type: !7510, scopeLine: 1938, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!10253 = !DILocalVariable(name: "undo_buf", arg: 1, scope: !10252, file: !3, line: 1937, type: !304)
!10254 = !DILocation(line: 1937, column: 43, scope: !10252)
!10255 = !DILocalVariable(name: "undo_pos", arg: 2, scope: !10252, file: !3, line: 1937, type: !4804)
!10256 = !DILocation(line: 1937, column: 58, scope: !10252)
!10257 = !DILocalVariable(name: "selln", arg: 3, scope: !10252, file: !3, line: 1937, type: !2287)
!10258 = !DILocation(line: 1937, column: 82, scope: !10252)
!10259 = !DILocalVariable(name: "selc", arg: 4, scope: !10252, file: !3, line: 1937, type: !7512)
!10260 = !DILocation(line: 1937, column: 105, scope: !10252)
!10261 = !DILocation(line: 1939, column: 32, scope: !10252)
!10262 = !DILocation(line: 1939, column: 42, scope: !10252)
!10263 = !DILocation(line: 1939, column: 11, scope: !10252)
!10264 = !DILocation(line: 1939, column: 3, scope: !10252)
!10265 = !DILocation(line: 1939, column: 9, scope: !10252)
!10266 = !DILocation(line: 1940, column: 32, scope: !10252)
!10267 = !DILocation(line: 1940, column: 42, scope: !10252)
!10268 = !DILocation(line: 1940, column: 11, scope: !10252)
!10269 = !DILocation(line: 1940, column: 3, scope: !10252)
!10270 = !DILocation(line: 1940, column: 9, scope: !10252)
!10271 = !DILocation(line: 1941, column: 1, scope: !10252)
!10272 = distinct !DISubprogram(name: "txt_convert_tab_to_spaces", scope: !3, file: !3, line: 2548, type: !332, scopeLine: 2549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !302)
!10273 = !DILocalVariable(name: "text", arg: 1, scope: !10272, file: !3, line: 2548, type: !139)
!10274 = !DILocation(line: 2548, column: 45, scope: !10272)
!10275 = !DILocalVariable(name: "sb", scope: !10272, file: !3, line: 2554, type: !304)
!10276 = !DILocation(line: 2554, column: 14, scope: !10272)
!10277 = !DILocation(line: 2554, column: 34, scope: !10272)
!10278 = !DILocation(line: 2554, column: 40, scope: !10272)
!10279 = !DILocation(line: 2554, column: 45, scope: !10272)
!10280 = !DILocation(line: 2554, column: 20, scope: !10272)
!10281 = !DILocation(line: 2555, column: 17, scope: !10272)
!10282 = !DILocation(line: 2555, column: 23, scope: !10272)
!10283 = !DILocation(line: 2555, column: 2, scope: !10272)
!10284 = !DILocation(line: 2556, column: 1, scope: !10272)
