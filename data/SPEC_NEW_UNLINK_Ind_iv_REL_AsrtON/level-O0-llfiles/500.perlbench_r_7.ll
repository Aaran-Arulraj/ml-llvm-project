; ModuleID = 'ext/re/re_exec.c'
source_filename = "ext/re/re_exec.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.cop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i8, i8, i32, %struct.hv*, %struct.gv*, i32, i32, i64*, %struct.refcounted_he* }
%struct.op = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i8, i8 }
%struct.hv = type { %struct.xpvhv*, i32, i32, %union.anon.5 }
%struct.xpvhv = type { %struct.hv*, %union._xmgu, i64, i64 }
%union._xmgu = type { %struct.magic* }
%struct.magic = type { %struct.magic*, %struct.mgvtbl*, i16, i8, i8, i64, %struct.sv*, i8* }
%struct.mgvtbl = type { i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*, %struct.sv*, i8*, i32)*, i32 (%struct.magic*, %struct.clone_params*)*, i32 (%struct.sv*, %struct.magic*)* }
%struct.clone_params = type { %struct.av*, i64, %struct.interpreter*, %struct.interpreter*, %struct.av* }
%struct.interpreter = type { i8 }
%struct.av = type { %struct.xpvav*, i32, i32, %union.anon.3 }
%struct.xpvav = type { %struct.hv*, %union._xmgu, i64, i64, %struct.sv** }
%union.anon.3 = type { i8* }
%struct.sv = type { i8*, i32, i32, %union.anon }
%union.anon = type { i8* }
%union.anon.5 = type { i8* }
%struct.gv = type { %struct.xpvgv*, i32, i32, %union.anon.4 }
%struct.xpvgv = type { %struct.hv*, %union._xmgu, i64, %union.anon.8, %union._xivu, %union._xnvu }
%union.anon.8 = type { i64 }
%union._xivu = type { i64 }
%union._xnvu = type { double }
%union.anon.4 = type { i8* }
%struct.refcounted_he = type { %struct.refcounted_he*, %struct.hek*, %union.anon.34, i32, [1 x i8] }
%struct.hek = type { i32, i32, [1 x i8] }
%union.anon.34 = type { i64 }
%struct.regmatch_slab = type { [33 x %struct.regmatch_state], %struct.regmatch_slab*, %struct.regmatch_slab* }
%struct.regmatch_state = type { i32, i8*, %union.anon.19 }
%union.anon.19 = type { %struct.anon.31 }
%struct.anon.31 = type { i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, %struct.regnode*, %struct.regnode*, [14 x i8], [14 x i8] }
%struct.regnode = type { i8, i8, i16 }
%struct.pmop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i8, i8, %struct.op*, %struct.op*, %struct.p5rx*, i32, %union.anon.17, %union.anon.18, %struct.op* }
%struct.p5rx = type { %struct.regexp*, i32, i32, %union.anon.7 }
%struct.regexp = type { %struct.hv*, %union._xmgu, i64, %union.anon.6, %struct.regexp_engine*, %struct.p5rx*, %struct.hv*, i32, i64, i64, i64, %struct.reg_substr_data*, i32, i32, i8*, i32, i32, %struct.regexp_paren_pair*, i8*, %struct.sv*, i64, i64, i64, i64, i16, %struct.cv* }
%union.anon.6 = type { i64 }
%struct.regexp_engine = type { %struct.p5rx* (%struct.sv*, i32)*, i32 (%struct.p5rx*, i8*, i8*, i8*, i64, %struct.sv*, i8*, i32)*, {}*, %struct.sv* (%struct.p5rx*)*, void (%struct.p5rx*)*, void (%struct.p5rx*, i32, %struct.sv*)*, void (%struct.p5rx*, i32, %struct.sv*)*, i32 (%struct.p5rx*, %struct.sv*, i32)*, %struct.sv* (%struct.p5rx*, %struct.sv*, %struct.sv*, i32)*, %struct.sv* (%struct.p5rx*, %struct.sv*, i32)*, %struct.sv* (%struct.p5rx*)*, %struct.p5rx* (%struct.sv**, i32, %struct.op*, %struct.regexp_engine*, %struct.p5rx*, i8*, i32, i32)* }
%struct.reg_substr_data = type { i8, [3 x %struct.reg_substr_datum] }
%struct.reg_substr_datum = type { i64, i64, %struct.sv*, %struct.sv*, i64 }
%struct.regexp_paren_pair = type { i64, i64, i64 }
%struct.cv = type { %struct.xpvcv*, i32, i32, %union.anon.2 }
%struct.xpvcv = type { %struct.hv*, %union._xmgu, i64, %union.anon.9, %struct.hv*, %union.anon.10, %union.anon.11, %union.anon.12, i8*, %union.anon.13, %struct.cv*, i32, i32, i32 }
%union.anon.9 = type { i64 }
%union.anon.10 = type { %struct.op* }
%union.anon.11 = type { %struct.op* }
%union.anon.12 = type { %struct.gv* }
%union.anon.13 = type { %struct.padlist* }
%struct.padlist = type { i64, %struct.av**, i32, i32 }
%union.anon.2 = type { i8* }
%union.anon.7 = type { i8* }
%union.anon.17 = type { %struct.op* }
%union.anon.18 = type { %struct.op* }
%struct.stackinfo = type { %struct.av*, %struct.context*, %struct.stackinfo*, %struct.stackinfo*, i32, i32, i32, i32 }
%struct.context = type { %union.anon.37 }
%union.anon.37 = type { %struct.subst }
%struct.subst = type { i8, i8, i16, i32, i64, i64, i8*, %struct.sv*, %struct.sv*, i8*, i8*, i8*, i8*, %struct.p5rx* }
%struct.jmpenv = type { [1 x %struct.__jmp_buf_tag], %struct.jmpenv*, i32, i8 }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%union.any = type { i8* }
%struct.re_scream_pos_data_s = type { i8**, i64* }
%struct.regexp_internal = type { i32, %union.anon.16, %struct.regnode*, %struct.reg_data*, %struct.reg_code_block*, i32, [1 x %struct.regnode] }
%union.anon.16 = type { i32* }
%struct.reg_data = type { i32, i8*, [1 x i8*] }
%struct.reg_code_block = type { i64, i64, %struct.op*, %struct.p5rx* }
%struct.regmatch_info = type { %struct.p5rx*, i8*, i8*, i8*, %struct.sv*, i8*, i8*, %struct.regmatch_info_aux*, %struct.regmatch_info_aux_eval*, i32, i32, i64, i8, i8, i8, i8 }
%struct.regmatch_info_aux = type { %struct.regmatch_info_aux_eval*, %struct.regmatch_state*, %struct.regmatch_slab*, i8* }
%struct.regmatch_info_aux_eval = type { %struct.regexp*, %struct.pmop*, %struct.sv*, i8*, i64, i64, i64, %struct.magic*, i64, i8 }
%struct.xpv = type { %struct.hv*, %union._xmgu, i64, %union.anon.32 }
%union.anon.32 = type { i64 }
%struct.regnode_string = type { i8, i8, i16, [1 x i8] }
%struct.xpviv = type { %struct.hv*, %union._xmgu, i64, %union.anon.33, %union._xivu }
%union.anon.33 = type { i64 }
%struct._reg_ac_data = type { i32, i32, i32*, %struct._reg_trie_state* }
%struct._reg_trie_state = type { i16, %union.anon.35 }
%union.anon.35 = type { %struct._reg_trie_trans_list_elem* }
%struct._reg_trie_trans_list_elem = type { i16, i32 }
%struct._reg_trie_data = type { i32, i32, i16*, %struct._reg_trie_state*, %struct._reg_trie_trans*, i8*, i16*, %struct.reg_trie_wordinfo*, i16, i32, i64, i64, i32, i32, i32 }
%struct._reg_trie_trans = type { i32, i32 }
%struct.reg_trie_wordinfo = type { i16, i32, i32 }
%struct.regnode_charclass = type { i8, i8, i16, i32, [32 x i8] }
%struct.regnode_1 = type { i8, i8, i16, i32 }
%struct.xpvmg = type { %struct.hv*, %union._xmgu, i64, %union.anon.36, %union._xivu, %union._xnvu }
%union.anon.36 = type { i64 }
%struct.gp = type { %struct.sv*, %struct.io*, %struct.cv*, i32, i32, %struct.hv*, %struct.av*, %struct.cv*, %struct.gv*, i32, %struct.hek* }
%struct.io = type { %struct.xpvio*, i32, i32, %union.anon.1 }
%struct.xpvio = type { %struct.hv*, %union._xmgu, i64, %union.anon.14, %union._xivu, %struct._PerlIO**, %union.anon.15, i64, i64, i64, i8*, %struct.gv*, i8*, %struct.gv*, i8*, %struct.gv*, i8, i8 }
%union.anon.14 = type { i64 }
%struct._PerlIO = type opaque
%union.anon.15 = type { %struct.__dirstream* }
%struct.__dirstream = type opaque
%union.anon.1 = type { i8* }
%struct.regnode_charclass_class = type { i8, i8, i16, i32, [32 x i8], i32 }
%struct.anon.27 = type { i32 }
%struct.anon.23 = type { %struct.regmatch_state*, i32, i32, i32, i32, i8, i16*, %struct.regnode*, i8*, i32, i16, i16 }
%struct.anon.24 = type { %struct.regmatch_state*, %struct.regmatch_state*, %struct.regmatch_state*, %struct.p5rx*, i32, i32, i32, %struct.regnode* }
%struct.regnode_2L = type { i8, i8, i16, i32, i32 }
%struct.block = type { i8, i8, i16, i32, %struct.cop*, i32, i32, %struct.pmop*, %union.anon.38 }
%union.anon.38 = type { %struct.block_sub }
%struct.block_sub = type { %struct.op*, %struct.cv*, %struct.av*, %struct.av*, i32, %struct.av* }
%struct.unop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i8, i8, %struct.op* }
%struct.xpvnv = type { %struct.hv*, %union._xmgu, i64, %union.anon.44, %union._xivu, %union._xnvu }
%union.anon.44 = type { i64 }
%struct.anon.28 = type { %struct.regmatch_state*, %struct.regmatch_state*, %struct.regnode*, %struct.regnode*, i32, i8, i32, i32, i8* }
%struct.regnode_2 = type { i8, i8, i16, i16, i16 }
%struct.anon.29 = type { %struct.regmatch_state*, %struct.regmatch_state*, i32, i32, i8*, i32, i32 }
%struct.anon.22 = type { %struct.regmatch_state*, i32, i32, i32, %struct.regnode* }
%struct.anon.26 = type { %struct.regmatch_state*, %struct.regmatch_state*, %struct.sv*, i8* }
%struct.anon.30 = type { %struct.regmatch_state*, i32, i32, i32, i32, i32, i32, i32, i8, %struct.regnode*, %struct.regnode*, %struct.regnode*, [14 x i8], [14 x i8] }
%struct.anon.25 = type { %struct.regmatch_state*, i32, i32, %struct.regnode* }
%struct.anon.20 = type { %struct.regmatch_state* }
%struct.xpvuv = type { %struct.hv*, %union._xmgu, i64, %union.anon.45, %union._xivu }
%union.anon.45 = type { i64 }

@PL_regkind = external dso_local constant [0 x i8], align 1
@PL_curcop = external dso_local global %struct.cop*, align 8
@.str = private unnamed_addr constant [22 x i8] c"NULL regexp parameter\00", align 1
@PL_savestack_ix = external dso_local global i32, align 4
@.str.1 = private unnamed_addr constant [25 x i8] c"corrupted regexp program\00", align 1
@PL_regmatch_slab = external dso_local global %struct.regmatch_slab*, align 8
@PL_regmatch_state = external dso_local global %struct.regmatch_state*, align 8
@PL_curpm = external dso_local global %struct.pmop*, align 8
@PL_utf8skip = external dso_local constant [0 x i8], align 1
@PL_fold_latin1 = external dso_local constant [0 x i8], align 1
@PL_fold = external dso_local constant [0 x i8], align 1
@PL_in_utf8_CTYPE_locale = external dso_local global i8, align 1
@PL_fold_locale = external dso_local global [0 x i8], align 1
@.str.2 = private unnamed_addr constant [76 x i8] c"Use of \\b{} or \\B{} for non-UTF-8 locale is wrong.  Assuming a UTF-8 locale\00", align 1
@PL_utf8_swash_ptrs = external dso_local global [10 x %struct.sv*], align 16
@.str.3 = private unnamed_addr constant [5 x i8] c"utf8\00", align 1
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@PL_sv_undef = external dso_local global %struct.sv, align 8
@PL_XPosix_ptrs = external dso_local global [16 x %struct.sv*], align 16
@PL_charclass = external dso_local constant [0 x i32], align 4
@Grapheme_Cluster_Break_invmap = internal constant [1484 x i32] [i32 2, i32 6, i32 2, i32 1, i32 2, i32 0, i32 2, i32 0, i32 2, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 2, i32 0, i32 4, i32 0, i32 2, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 2, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 2, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 4, i32 11, i32 4, i32 0, i32 11, i32 4, i32 11, i32 4, i32 11, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 0, i32 11, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 4, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 4, i32 0, i32 11, i32 4, i32 0, i32 4, i32 11, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 0, i32 11, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 11, i32 0, i32 11, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 4, i32 11, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 4, i32 0, i32 11, i32 4, i32 11, i32 4, i32 11, i32 0, i32 4, i32 11, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 4, i32 11, i32 4, i32 0, i32 11, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 11, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 0, i32 4, i32 0, i32 11, i32 4, i32 0, i32 11, i32 0, i32 4, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 11, i32 0, i32 4, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 0, i32 4, i32 11, i32 4, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 5, i32 13, i32 12, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 11, i32 4, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 2, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 11, i32 0, i32 11, i32 4, i32 11, i32 4, i32 0, i32 11, i32 0, i32 11, i32 0, i32 4, i32 11, i32 4, i32 0, i32 11, i32 4, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 4, i32 11, i32 4, i32 11, i32 4, i32 11, i32 4, i32 11, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 11, i32 4, i32 11, i32 4, i32 11, i32 4, i32 0, i32 4, i32 11, i32 4, i32 11, i32 4, i32 11, i32 4, i32 11, i32 0, i32 11, i32 4, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 0, i32 4, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 2, i32 4, i32 2, i32 0, i32 2, i32 0, i32 2, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 11, i32 4, i32 11, i32 0, i32 11, i32 0, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 5, i32 0, i32 4, i32 11, i32 0, i32 4, i32 11, i32 4, i32 11, i32 4, i32 11, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 11, i32 4, i32 11, i32 0, i32 11, i32 4, i32 0, i32 11, i32 4, i32 11, i32 4, i32 11, i32 0, i32 11, i32 4, i32 0, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 7, i32 8, i32 0, i32 13, i32 0, i32 12, i32 0, i32 2, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 2, i32 0, i32 4, i32 0, i32 2, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 11, i32 4, i32 11, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 11, i32 4, i32 11, i32 4, i32 0, i32 2, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 0, i32 11, i32 4, i32 11, i32 0, i32 11, i32 4, i32 11, i32 4, i32 11, i32 4, i32 0, i32 4, i32 11, i32 4, i32 0, i32 4, i32 11, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 11, i32 0, i32 11, i32 0, i32 11, i32 0, i32 4, i32 0, i32 11, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 11, i32 4, i32 11, i32 4, i32 11, i32 4, i32 11, i32 4, i32 11, i32 4, i32 0, i32 4, i32 11, i32 4, i32 0, i32 11, i32 4, i32 11, i32 4, i32 0, i32 11, i32 4, i32 11, i32 4, i32 11, i32 4, i32 0, i32 4, i32 11, i32 4, i32 11, i32 4, i32 11, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 11, i32 0, i32 4, i32 0, i32 4, i32 0, i32 2, i32 0, i32 4, i32 11, i32 4, i32 0, i32 11, i32 4, i32 2, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 10, i32 0, i32 2, i32 4, i32 2, i32 0], align 16
@PL_GCB_invlist = external dso_local global %struct.sv*, align 8
@Sentence_Break_invmap = internal constant [2835 x i32] [i32 0, i32 14, i32 7, i32 14, i32 2, i32 0, i32 14, i32 12, i32 3, i32 0, i32 3, i32 0, i32 11, i32 1, i32 0, i32 9, i32 11, i32 0, i32 12, i32 0, i32 15, i32 3, i32 0, i32 3, i32 0, i32 8, i32 3, i32 0, i32 3, i32 0, i32 13, i32 0, i32 14, i32 0, i32 8, i32 3, i32 0, i32 6, i32 0, i32 8, i32 0, i32 8, i32 3, i32 0, i32 15, i32 0, i32 15, i32 8, i32 0, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 10, i32 15, i32 8, i32 10, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 10, i32 8, i32 10, i32 8, i32 0, i32 10, i32 0, i32 8, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 15, i32 8, i32 15, i32 8, i32 10, i32 0, i32 15, i32 8, i32 0, i32 8, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 8, i32 15, i32 0, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 0, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 0, i32 5, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 0, i32 15, i32 0, i32 10, i32 0, i32 11, i32 0, i32 8, i32 0, i32 12, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 6, i32 0, i32 11, i32 0, i32 5, i32 0, i32 6, i32 0, i32 12, i32 10, i32 5, i32 9, i32 0, i32 9, i32 0, i32 10, i32 5, i32 10, i32 12, i32 10, i32 5, i32 6, i32 0, i32 5, i32 10, i32 5, i32 0, i32 5, i32 10, i32 9, i32 10, i32 0, i32 10, i32 12, i32 0, i32 6, i32 10, i32 5, i32 10, i32 5, i32 0, i32 10, i32 5, i32 10, i32 0, i32 9, i32 10, i32 5, i32 10, i32 0, i32 11, i32 12, i32 10, i32 0, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 0, i32 10, i32 5, i32 0, i32 10, i32 0, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 12, i32 9, i32 0, i32 10, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 10, i32 5, i32 0, i32 5, i32 0, i32 5, i32 10, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 9, i32 10, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 9, i32 5, i32 10, i32 5, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 10, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 9, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 10, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 9, i32 0, i32 10, i32 0, i32 5, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 10, i32 0, i32 5, i32 0, i32 9, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 9, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 10, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 9, i32 0, i32 10, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 5, i32 0, i32 5, i32 10, i32 0, i32 5, i32 0, i32 10, i32 5, i32 0, i32 9, i32 0, i32 10, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 9, i32 0, i32 5, i32 0, i32 10, i32 5, i32 10, i32 5, i32 0, i32 10, i32 5, i32 0, i32 9, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 5, i32 10, i32 5, i32 0, i32 5, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 9, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 9, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 3, i32 5, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 5, i32 10, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 10, i32 5, i32 10, i32 9, i32 12, i32 0, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 9, i32 5, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 12, i32 0, i32 12, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 12, i32 10, i32 14, i32 10, i32 3, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 10, i32 5, i32 12, i32 0, i32 10, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 10, i32 5, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 9, i32 0, i32 11, i32 12, i32 0, i32 11, i32 12, i32 0, i32 5, i32 6, i32 0, i32 9, i32 0, i32 10, i32 0, i32 10, i32 5, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 5, i32 0, i32 12, i32 9, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 10, i32 5, i32 0, i32 9, i32 0, i32 10, i32 5, i32 0, i32 10, i32 5, i32 0, i32 5, i32 0, i32 5, i32 9, i32 0, i32 9, i32 0, i32 10, i32 12, i32 0, i32 5, i32 0, i32 5, i32 10, i32 5, i32 10, i32 0, i32 9, i32 12, i32 0, i32 12, i32 0, i32 5, i32 0, i32 5, i32 10, i32 5, i32 10, i32 9, i32 10, i32 5, i32 0, i32 10, i32 5, i32 0, i32 12, i32 0, i32 9, i32 0, i32 10, i32 9, i32 10, i32 12, i32 0, i32 5, i32 0, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 0, i32 5, i32 0, i32 8, i32 5, i32 0, i32 5, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 0, i32 15, i32 0, i32 8, i32 15, i32 8, i32 15, i32 8, i32 0, i32 15, i32 0, i32 8, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 8, i32 15, i32 8, i32 0, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 0, i32 8, i32 15, i32 0, i32 8, i32 0, i32 8, i32 0, i32 8, i32 15, i32 0, i32 8, i32 0, i32 8, i32 15, i32 0, i32 8, i32 15, i32 0, i32 8, i32 0, i32 8, i32 15, i32 0, i32 14, i32 6, i32 5, i32 6, i32 0, i32 11, i32 0, i32 3, i32 0, i32 1, i32 0, i32 13, i32 6, i32 14, i32 0, i32 3, i32 0, i32 12, i32 0, i32 3, i32 12, i32 0, i32 14, i32 6, i32 0, i32 6, i32 0, i32 8, i32 0, i32 3, i32 8, i32 0, i32 3, i32 0, i32 8, i32 0, i32 5, i32 0, i32 15, i32 0, i32 15, i32 0, i32 8, i32 15, i32 8, i32 15, i32 8, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 8, i32 15, i32 8, i32 10, i32 8, i32 0, i32 8, i32 15, i32 0, i32 15, i32 8, i32 0, i32 8, i32 0, i32 15, i32 8, i32 10, i32 15, i32 8, i32 10, i32 0, i32 3, i32 0, i32 3, i32 0, i32 15, i32 8, i32 0, i32 3, i32 0, i32 3, i32 0, i32 3, i32 0, i32 3, i32 0, i32 3, i32 0, i32 3, i32 0, i32 3, i32 0, i32 15, i32 0, i32 8, i32 0, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 0, i32 15, i32 8, i32 15, i32 8, i32 5, i32 15, i32 8, i32 0, i32 8, i32 0, i32 8, i32 0, i32 8, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 3, i32 0, i32 3, i32 0, i32 3, i32 0, i32 12, i32 10, i32 0, i32 12, i32 0, i32 3, i32 0, i32 14, i32 11, i32 12, i32 0, i32 10, i32 3, i32 0, i32 3, i32 0, i32 3, i32 0, i32 10, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 12, i32 10, i32 0, i32 12, i32 10, i32 9, i32 10, i32 0, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 10, i32 5, i32 0, i32 5, i32 0, i32 10, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 0, i32 5, i32 10, i32 5, i32 0, i32 12, i32 0, i32 12, i32 0, i32 10, i32 0, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 10, i32 0, i32 15, i32 8, i32 15, i32 8, i32 0, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 0, i32 15, i32 0, i32 10, i32 8, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 0, i32 10, i32 0, i32 12, i32 0, i32 5, i32 10, i32 5, i32 0, i32 12, i32 9, i32 0, i32 5, i32 10, i32 0, i32 10, i32 0, i32 9, i32 10, i32 5, i32 0, i32 12, i32 10, i32 5, i32 0, i32 10, i32 0, i32 5, i32 10, i32 5, i32 0, i32 12, i32 0, i32 10, i32 9, i32 0, i32 10, i32 5, i32 10, i32 9, i32 10, i32 0, i32 10, i32 5, i32 0, i32 10, i32 5, i32 10, i32 5, i32 0, i32 9, i32 0, i32 12, i32 10, i32 0, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 5, i32 10, i32 0, i32 10, i32 0, i32 10, i32 5, i32 12, i32 10, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 8, i32 0, i32 8, i32 0, i32 8, i32 0, i32 10, i32 5, i32 12, i32 5, i32 0, i32 9, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 8, i32 0, i32 8, i32 0, i32 10, i32 5, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 3, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 11, i32 0, i32 11, i32 0, i32 3, i32 0, i32 5, i32 0, i32 11, i32 0, i32 3, i32 0, i32 3, i32 0, i32 11, i32 1, i32 0, i32 11, i32 12, i32 11, i32 3, i32 0, i32 11, i32 0, i32 10, i32 0, i32 10, i32 0, i32 6, i32 0, i32 12, i32 0, i32 3, i32 0, i32 11, i32 1, i32 0, i32 11, i32 0, i32 12, i32 0, i32 15, i32 3, i32 0, i32 3, i32 0, i32 8, i32 3, i32 0, i32 3, i32 0, i32 3, i32 12, i32 3, i32 11, i32 0, i32 10, i32 5, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 6, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 15, i32 8, i32 10, i32 0, i32 9, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 5, i32 0, i32 5, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 0, i32 5, i32 0, i32 12, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 10, i32 5, i32 12, i32 0, i32 9, i32 0, i32 5, i32 10, i32 5, i32 0, i32 6, i32 12, i32 0, i32 10, i32 0, i32 9, i32 0, i32 5, i32 10, i32 5, i32 0, i32 9, i32 0, i32 12, i32 0, i32 10, i32 5, i32 0, i32 10, i32 0, i32 5, i32 10, i32 5, i32 10, i32 12, i32 0, i32 12, i32 0, i32 9, i32 10, i32 0, i32 10, i32 0, i32 10, i32 5, i32 12, i32 0, i32 12, i32 0, i32 10, i32 5, i32 0, i32 9, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 10, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 10, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 10, i32 5, i32 10, i32 0, i32 10, i32 0, i32 9, i32 0, i32 10, i32 5, i32 0, i32 5, i32 0, i32 12, i32 0, i32 12, i32 0, i32 10, i32 5, i32 12, i32 0, i32 10, i32 0, i32 9, i32 0, i32 10, i32 5, i32 0, i32 9, i32 0, i32 15, i32 8, i32 9, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 9, i32 0, i32 12, i32 0, i32 10, i32 0, i32 5, i32 12, i32 0, i32 10, i32 5, i32 12, i32 0, i32 10, i32 12, i32 0, i32 9, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 5, i32 0, i32 5, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 5, i32 12, i32 6, i32 0, i32 5, i32 0, i32 5, i32 6, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 15, i32 8, i32 15, i32 8, i32 0, i32 8, i32 15, i32 8, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 8, i32 0, i32 8, i32 0, i32 8, i32 0, i32 8, i32 15, i32 8, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 8, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 15, i32 8, i32 0, i32 15, i32 0, i32 8, i32 0, i32 8, i32 15, i32 0, i32 8, i32 0, i32 8, i32 15, i32 0, i32 8, i32 0, i32 8, i32 15, i32 0, i32 8, i32 0, i32 8, i32 15, i32 0, i32 8, i32 0, i32 8, i32 15, i32 8, i32 0, i32 9, i32 0, i32 10, i32 0, i32 5, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 15, i32 0, i32 15, i32 0, i32 15, i32 0, i32 3, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 10, i32 0, i32 6, i32 0, i32 6, i32 0, i32 5, i32 0], align 16
@PL_SB_invlist = external dso_local global %struct.sv*, align 8
@Word_Break_invmap = internal constant [1480 x i32] [i32 0, i32 10, i32 14, i32 2, i32 0, i32 3, i32 0, i32 17, i32 0, i32 12, i32 0, i32 13, i32 0, i32 15, i32 11, i32 12, i32 0, i32 1, i32 0, i32 6, i32 0, i32 1, i32 0, i32 14, i32 0, i32 1, i32 0, i32 7, i32 0, i32 1, i32 0, i32 11, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 11, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 1, i32 0, i32 1, i32 0, i32 1, i32 12, i32 1, i32 0, i32 1, i32 11, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 12, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 8, i32 0, i32 8, i32 1, i32 11, i32 0, i32 7, i32 0, i32 12, i32 0, i32 5, i32 0, i32 7, i32 0, i32 1, i32 5, i32 15, i32 0, i32 15, i32 12, i32 0, i32 1, i32 5, i32 1, i32 0, i32 1, i32 5, i32 7, i32 0, i32 5, i32 1, i32 5, i32 0, i32 5, i32 1, i32 15, i32 1, i32 0, i32 1, i32 0, i32 7, i32 1, i32 5, i32 1, i32 5, i32 0, i32 1, i32 5, i32 1, i32 0, i32 15, i32 1, i32 5, i32 1, i32 0, i32 12, i32 0, i32 1, i32 0, i32 1, i32 5, i32 1, i32 5, i32 1, i32 5, i32 1, i32 5, i32 0, i32 1, i32 5, i32 0, i32 1, i32 0, i32 5, i32 1, i32 5, i32 1, i32 5, i32 1, i32 5, i32 1, i32 5, i32 0, i32 15, i32 0, i32 1, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 1, i32 5, i32 0, i32 5, i32 0, i32 5, i32 1, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 15, i32 1, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 15, i32 5, i32 1, i32 5, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 1, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 15, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 1, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 15, i32 0, i32 1, i32 0, i32 5, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 1, i32 0, i32 5, i32 0, i32 15, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 15, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 1, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 15, i32 0, i32 1, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 5, i32 0, i32 5, i32 1, i32 0, i32 5, i32 0, i32 1, i32 5, i32 0, i32 15, i32 0, i32 1, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 15, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 15, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 15, i32 0, i32 1, i32 0, i32 5, i32 0, i32 15, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 5, i32 1, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 15, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 15, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 1, i32 5, i32 0, i32 1, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 15, i32 0, i32 5, i32 7, i32 0, i32 15, i32 0, i32 1, i32 0, i32 1, i32 5, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 5, i32 0, i32 15, i32 0, i32 5, i32 0, i32 5, i32 0, i32 15, i32 0, i32 1, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 15, i32 0, i32 15, i32 0, i32 5, i32 0, i32 5, i32 1, i32 5, i32 1, i32 0, i32 15, i32 0, i32 5, i32 0, i32 5, i32 1, i32 5, i32 1, i32 15, i32 1, i32 5, i32 0, i32 1, i32 5, i32 0, i32 15, i32 0, i32 1, i32 15, i32 1, i32 0, i32 5, i32 0, i32 5, i32 1, i32 5, i32 1, i32 5, i32 1, i32 0, i32 5, i32 0, i32 1, i32 5, i32 0, i32 5, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 7, i32 0, i32 13, i32 0, i32 13, i32 0, i32 11, i32 14, i32 7, i32 0, i32 6, i32 0, i32 12, i32 0, i32 6, i32 0, i32 7, i32 0, i32 7, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 5, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 9, i32 0, i32 1, i32 0, i32 5, i32 9, i32 0, i32 9, i32 0, i32 9, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 9, i32 0, i32 9, i32 0, i32 9, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 15, i32 1, i32 0, i32 1, i32 5, i32 0, i32 5, i32 0, i32 1, i32 0, i32 5, i32 1, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 5, i32 1, i32 5, i32 1, i32 5, i32 1, i32 5, i32 0, i32 1, i32 0, i32 5, i32 1, i32 5, i32 0, i32 15, i32 0, i32 5, i32 1, i32 0, i32 1, i32 0, i32 15, i32 1, i32 5, i32 0, i32 1, i32 5, i32 0, i32 1, i32 0, i32 5, i32 1, i32 5, i32 0, i32 1, i32 15, i32 0, i32 5, i32 0, i32 15, i32 0, i32 1, i32 5, i32 0, i32 1, i32 5, i32 1, i32 5, i32 0, i32 15, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 1, i32 5, i32 0, i32 1, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 5, i32 0, i32 15, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 8, i32 5, i32 8, i32 0, i32 8, i32 0, i32 8, i32 0, i32 8, i32 0, i32 8, i32 0, i32 8, i32 0, i32 8, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 12, i32 0, i32 11, i32 12, i32 0, i32 5, i32 0, i32 6, i32 0, i32 6, i32 12, i32 0, i32 13, i32 0, i32 12, i32 11, i32 0, i32 1, i32 0, i32 1, i32 0, i32 7, i32 0, i32 13, i32 0, i32 12, i32 0, i32 13, i32 0, i32 11, i32 12, i32 0, i32 1, i32 0, i32 6, i32 0, i32 1, i32 0, i32 9, i32 5, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 7, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 15, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 5, i32 0, i32 5, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 1, i32 5, i32 0, i32 15, i32 0, i32 5, i32 1, i32 5, i32 0, i32 7, i32 0, i32 1, i32 0, i32 15, i32 0, i32 5, i32 1, i32 5, i32 0, i32 15, i32 0, i32 1, i32 5, i32 0, i32 1, i32 0, i32 5, i32 1, i32 5, i32 1, i32 0, i32 15, i32 1, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 1, i32 5, i32 0, i32 15, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 1, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 1, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 1, i32 5, i32 1, i32 0, i32 1, i32 0, i32 15, i32 0, i32 1, i32 5, i32 0, i32 5, i32 0, i32 1, i32 5, i32 0, i32 1, i32 0, i32 15, i32 0, i32 1, i32 5, i32 0, i32 15, i32 0, i32 1, i32 15, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 15, i32 0, i32 1, i32 0, i32 5, i32 0, i32 1, i32 5, i32 0, i32 1, i32 0, i32 15, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 5, i32 0, i32 5, i32 1, i32 0, i32 9, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 5, i32 0, i32 7, i32 0, i32 5, i32 0, i32 5, i32 7, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 15, i32 0, i32 1, i32 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 16, i32 0, i32 7, i32 0, i32 7, i32 0, i32 5, i32 0], align 16
@PL_WB_invlist = external dso_local global %struct.sv*, align 8
@.str.5 = private unnamed_addr constant [74 x i8] c"panic: find_byclass() node %d='%s' has an unexpected character class '%d'\00", align 1
@PL_reg_name = external dso_local global [0 x i8*], align 8
@PL_tmps_floor = external dso_local global i64, align 8
@PL_tmps_ix = external dso_local global i64, align 8
@.str.6 = private unnamed_addr constant [29 x i8] c"panic: unknown regstclass %d\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"Malformed UTF-8 character (fatal)\00", align 1
@.str.8 = private unnamed_addr constant [85 x i8] c"Matched non-Unicode code point 0x%04lX against Unicode property; may not be portable\00", align 1
@.str.9 = private unnamed_addr constant [57 x i8] c"panic: isFOO_lc() has an unexpected character class '%d'\00", align 1
@PL_replgv = external dso_local global %struct.gv*, align 8
@.str.10 = private unnamed_addr constant [28 x i8] c"Infinite recursion in regex\00", align 1
@.str.11 = private unnamed_addr constant [70 x i8] c"Pattern subroutine nesting without pos change exceeded limit in regex\00", align 1
@.str.12 = private unnamed_addr constant [48 x i8] c"EVAL without pos change exceeded limit in regex\00", align 1
@PL_stack_sp = external dso_local global %struct.sv**, align 8
@PL_op = external dso_local global %struct.op*, align 8
@PL_comppad = external dso_local global %struct.av*, align 8
@PL_curstackinfo = external dso_local global %struct.stackinfo*, align 8
@PL_curpad = external dso_local global %struct.sv**, align 8
@PL_top_env = external dso_local global %struct.jmpenv*, align 8
@PL_stack_base = external dso_local global %struct.sv**, align 8
@PL_curstack = external dso_local global %struct.av*, align 8
@PL_stack_max = external dso_local global %struct.sv**, align 8
@PL_markstack_ptr = external dso_local global i32*, align 8
@PL_markstack = external dso_local global i32*, align 8
@PL_scopestack_ix = external dso_local global i32, align 4
@.str.13 = private unnamed_addr constant [8 x i8] c"REGMARK\00", align 1
@PL_runops = external dso_local global i32 ()*, align 8
@PL_reg_curpm = external dso_local global %struct.pmop*, align 8
@.str.14 = private unnamed_addr constant [60 x i8] c"Complex regular subexpression recursion limit (%d) exceeded\00", align 1
@PL_stderrgv = external dso_local global %struct.gv*, align 8
@.str.15 = private unnamed_addr constant [8 x i8] c"%lx %d\0A\00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c"regexp memory corruption\00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c"corrupted regexp pointers\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"REGERROR\00", align 1
@PL_sv_no = external dso_local global %struct.sv, align 8
@PL_sv_yes = external dso_local global %struct.sv, align 8
@.str.19 = private unnamed_addr constant [90 x i8] c"panic: paren_elems_to_push, %i < 0, maxopenparen: %i parenfloor: %i REGCP_PAREN_ELEMS: %u\00", align 1
@.str.20 = private unnamed_addr constant [61 x i8] c"panic: paren_elems_to_push offset %lu out of range (%lu-%ld)\00", align 1
@PL_savestack_max = external dso_local global i32, align 4
@PL_savestack = external dso_local global %union.any*, align 8
@PL_utf8_foldclosures = external dso_local global %struct.hv*, align 8
@.str.21 = private unnamed_addr constant [46 x i8] c"panic: invalid PL_utf8_foldclosures structure\00", align 1
@.str.22 = private unnamed_addr constant [24 x i8] c"panic: Unexpected op %u\00", align 1
@.str.23 = private unnamed_addr constant [71 x i8] c"panic: regrepeat() node %d='%s' has an unexpected character class '%d'\00", align 1
@.str.24 = private unnamed_addr constant [62 x i8] c"panic: regrepeat() called with unrecognized node type %d='%s'\00", align 1
@PL_defgv = external dso_local global %struct.gv*, align 8

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @my_re_intuit_start(%struct.p5rx* %rx, %struct.sv* %sv, i8* %strbeg, i8* %strpos, i8* %strend, i32 %flags, %struct.re_scream_pos_data_s* %data) #0 {
entry:
  %retval = alloca i8*, align 8
  %rx.addr = alloca %struct.p5rx*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %strbeg.addr = alloca i8*, align 8
  %strpos.addr = alloca i8*, align 8
  %strend.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %data.addr = alloca %struct.re_scream_pos_data_s*, align 8
  %prog = alloca %struct.regexp*, align 8
  %start_shift = alloca i64, align 8
  %end_shift = alloca i64, align 8
  %rx_origin = alloca i8*, align 8
  %check = alloca %struct.sv*, align 8
  %utf8_target = alloca i8, align 1
  %other_ix = alloca i8, align 1
  %ml_anch = alloca i8, align 1
  %other_last = alloca i8*, align 8
  %check_at = alloca i8*, align 8
  %multiline = alloca i32, align 4
  %progi = alloca %struct.regexp_internal*, align 8
  %reginfo_buf = alloca %struct.regmatch_info, align 8
  %reginfo = alloca %struct.regmatch_info*, align 8
  %slen = alloca i64, align 8
  %s = alloca i8*, align 8
  %start_point = alloca i8*, align 8
  %end_point = alloca i8*, align 8
  %len = alloca i64, align 8
  %anchor = alloca i8*, align 8
  %last = alloca i8*, align 8
  %last1 = alloca i8*, align 8
  %s350 = alloca i8*, align 8
  %must = alloca %struct.sv*, align 8
  %other = alloca %struct.reg_substr_datum*, align 8
  %from = alloca i8*, align 8
  %to = alloca i8*, align 8
  %s545 = alloca i8*, align 8
  %str = alloca i8*, align 8
  %cl_l = alloca i32, align 4
  %endpos = alloca i8*, align 8
  %s653 = alloca i8*, align 8
  %rx_max_float = alloca i8*, align 8
  store %struct.p5rx* %rx, %struct.p5rx** %rx.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store i8* %strbeg, i8** %strbeg.addr, align 8
  store i8* %strpos, i8** %strpos.addr, align 8
  store i8* %strend, i8** %strend.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  store %struct.re_scream_pos_data_s* %data, %struct.re_scream_pos_data_s** %data.addr, align 8
  %0 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call = call %struct.regexp* @S_ReANY(%struct.p5rx* %0)
  store %struct.regexp* %call, %struct.regexp** %prog, align 8
  %1 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs = getelementptr inbounds %struct.regexp, %struct.regexp* %1, i32 0, i32 11
  %2 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs, align 8
  %data1 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data1, i64 0, i64 2
  %min_offset = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx, i32 0, i32 0
  %3 = load i64, i64* %min_offset, align 8
  store i64 %3, i64* %start_shift, align 8
  store i64 0, i64* %end_shift, align 8
  %4 = load i8*, i8** %strpos.addr, align 8
  store i8* %4, i8** %rx_origin, align 8
  %5 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %tobool = icmp ne %struct.sv* %5, null
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %6 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %6, i32 0, i32 2
  %7 = load i32, i32* %sv_flags, align 4
  %and = and i32 %7, 536870912
  %tobool2 = icmp ne i32 %and, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ]
  %9 = zext i1 %8 to i64
  %cond = select i1 %8, i32 1, i32 0
  %tobool3 = icmp ne i32 %cond, 0
  %frombool = zext i1 %tobool3 to i8
  store i8 %frombool, i8* %utf8_target, align 1
  %10 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs4 = getelementptr inbounds %struct.regexp, %struct.regexp* %10, i32 0, i32 11
  %11 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs4, align 8
  %check_ix = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %11, i32 0, i32 0
  %12 = load i8, i8* %check_ix, align 8
  %conv = zext i8 %12 to i32
  %sub = sub nsw i32 1, %conv
  %conv5 = trunc i32 %sub to i8
  store i8 %conv5, i8* %other_ix, align 1
  store i8 0, i8* %ml_anch, align 1
  %13 = load i8*, i8** %strpos.addr, align 8
  store i8* %13, i8** %other_last, align 8
  store i8* null, i8** %check_at, align 8
  %14 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags = getelementptr inbounds %struct.regexp, %struct.regexp* %14, i32 0, i32 7
  %15 = load i32, i32* %extflags, align 8
  %and6 = and i32 %15, 1
  store i32 %and6, i32* %multiline, align 4
  %16 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %pprivate = getelementptr inbounds %struct.regexp, %struct.regexp* %16, i32 0, i32 14
  %17 = load i8*, i8** %pprivate, align 8
  %18 = bitcast i8* %17 to %struct.regexp_internal*
  store %struct.regexp_internal* %18, %struct.regexp_internal** %progi, align 8
  store %struct.regmatch_info* %reginfo_buf, %struct.regmatch_info** %reginfo, align 8
  %19 = load i32, i32* %flags.addr, align 4
  %20 = load %struct.re_scream_pos_data_s*, %struct.re_scream_pos_data_s** %data.addr, align 8
  %21 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %minlen = getelementptr inbounds %struct.regexp, %struct.regexp* %21, i32 0, i32 8
  %22 = load i64, i64* %minlen, align 8
  %23 = load i8*, i8** %strend.addr, align 8
  %24 = load i8*, i8** %strpos.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %23 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %24 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp = icmp sgt i64 %22, %sub.ptr.sub
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.end
  br label %fail

if.end:                                           ; preds = %land.end
  %25 = load i8, i8* %utf8_target, align 1
  %tobool8 = trunc i8 %25 to i1
  br i1 %tobool8, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %26 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call10 = call %struct.regexp* @S_ReANY(%struct.p5rx* %26)
  %extflags11 = getelementptr inbounds %struct.regexp, %struct.regexp* %call10, i32 0, i32 7
  %27 = load i32, i32* %extflags11, align 8
  %or = or i32 %27, 1048576
  store i32 %or, i32* %extflags11, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %28 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call12 = call %struct.regexp* @S_ReANY(%struct.p5rx* %28)
  %extflags13 = getelementptr inbounds %struct.regexp, %struct.regexp* %call12, i32 0, i32 7
  %29 = load i32, i32* %extflags13, align 8
  %and14 = and i32 %29, -1048577
  store i32 %and14, i32* %extflags13, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i32 [ %or, %cond.true ], [ %and14, %cond.false ]
  %30 = load i8, i8* %utf8_target, align 1
  %tobool16 = trunc i8 %30 to i1
  %31 = zext i1 %tobool16 to i64
  %cond18 = select i1 %tobool16, i32 1, i32 0
  %tobool19 = icmp ne i32 %cond18, 0
  %32 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %32, i32 0, i32 14
  %frombool20 = zext i1 %tobool19 to i8
  store i8 %frombool20, i8* %is_utf8_target, align 2
  %33 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %info_aux = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %33, i32 0, i32 7
  store %struct.regmatch_info_aux* null, %struct.regmatch_info_aux** %info_aux, align 8
  %34 = load i8*, i8** %strbeg.addr, align 8
  %35 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strbeg21 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %35, i32 0, i32 1
  store i8* %34, i8** %strbeg21, align 8
  %36 = load i8*, i8** %strend.addr, align 8
  %37 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strend22 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %37, i32 0, i32 2
  store i8* %36, i8** %strend22, align 8
  %38 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %sv_flags23 = getelementptr inbounds %struct.p5rx, %struct.p5rx* %38, i32 0, i32 2
  %39 = load i32, i32* %sv_flags23, align 4
  %and24 = and i32 %39, 536870912
  %tobool25 = icmp ne i32 %and24, 0
  %40 = zext i1 %tobool25 to i64
  %cond26 = select i1 %tobool25, i32 1, i32 0
  %tobool27 = icmp ne i32 %cond26, 0
  %41 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_pat = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %41, i32 0, i32 13
  %frombool28 = zext i1 %tobool27 to i8
  store i8 %frombool28, i8* %is_utf8_pat, align 1
  %42 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %intuit = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %42, i32 0, i32 12
  store i8 1, i8* %intuit, align 8
  %43 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %poscache_maxiter = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %43, i32 0, i32 9
  store i32 0, i32* %poscache_maxiter, align 8
  %44 = load i8, i8* %utf8_target, align 1
  %tobool29 = trunc i8 %44 to i1
  br i1 %tobool29, label %if.then30, label %if.else

if.then30:                                        ; preds = %cond.end
  %45 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs31 = getelementptr inbounds %struct.regexp, %struct.regexp* %45, i32 0, i32 11
  %46 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs31, align 8
  %data32 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %46, i32 0, i32 1
  %arrayidx33 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data32, i64 0, i64 2
  %utf8_substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx33, i32 0, i32 3
  %47 = load %struct.sv*, %struct.sv** %utf8_substr, align 8
  %tobool34 = icmp ne %struct.sv* %47, null
  br i1 %tobool34, label %if.end40, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then30
  %48 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs35 = getelementptr inbounds %struct.regexp, %struct.regexp* %48, i32 0, i32 11
  %49 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs35, align 8
  %data36 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %49, i32 0, i32 1
  %arrayidx37 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data36, i64 0, i64 2
  %substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx37, i32 0, i32 2
  %50 = load %struct.sv*, %struct.sv** %substr, align 8
  %tobool38 = icmp ne %struct.sv* %50, null
  br i1 %tobool38, label %if.then39, label %if.end40

if.then39:                                        ; preds = %land.lhs.true
  %51 = load %struct.regexp*, %struct.regexp** %prog, align 8
  call void @S_to_utf8_substr(%struct.regexp* %51)
  br label %if.end40

if.end40:                                         ; preds = %if.then39, %land.lhs.true, %if.then30
  %52 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs41 = getelementptr inbounds %struct.regexp, %struct.regexp* %52, i32 0, i32 11
  %53 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs41, align 8
  %data42 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %53, i32 0, i32 1
  %arrayidx43 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data42, i64 0, i64 2
  %utf8_substr44 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx43, i32 0, i32 3
  %54 = load %struct.sv*, %struct.sv** %utf8_substr44, align 8
  store %struct.sv* %54, %struct.sv** %check, align 8
  br label %if.end65

if.else:                                          ; preds = %cond.end
  %55 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs45 = getelementptr inbounds %struct.regexp, %struct.regexp* %55, i32 0, i32 11
  %56 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs45, align 8
  %data46 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %56, i32 0, i32 1
  %arrayidx47 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data46, i64 0, i64 2
  %substr48 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx47, i32 0, i32 2
  %57 = load %struct.sv*, %struct.sv** %substr48, align 8
  %tobool49 = icmp ne %struct.sv* %57, null
  br i1 %tobool49, label %if.end60, label %land.lhs.true50

land.lhs.true50:                                  ; preds = %if.else
  %58 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs51 = getelementptr inbounds %struct.regexp, %struct.regexp* %58, i32 0, i32 11
  %59 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs51, align 8
  %data52 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %59, i32 0, i32 1
  %arrayidx53 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data52, i64 0, i64 2
  %utf8_substr54 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx53, i32 0, i32 3
  %60 = load %struct.sv*, %struct.sv** %utf8_substr54, align 8
  %tobool55 = icmp ne %struct.sv* %60, null
  br i1 %tobool55, label %if.then56, label %if.end60

if.then56:                                        ; preds = %land.lhs.true50
  %61 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %call57 = call zeroext i1 @S_to_byte_substr(%struct.regexp* %61)
  br i1 %call57, label %if.end59, label %if.then58

if.then58:                                        ; preds = %if.then56
  br label %do.body

do.body:                                          ; preds = %if.then58
  br label %fail

do.end:                                           ; No predecessors!
  br label %if.end59

if.end59:                                         ; preds = %do.end, %if.then56
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %land.lhs.true50, %if.else
  %62 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs61 = getelementptr inbounds %struct.regexp, %struct.regexp* %62, i32 0, i32 11
  %63 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs61, align 8
  %data62 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %63, i32 0, i32 1
  %arrayidx63 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data62, i64 0, i64 2
  %substr64 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx63, i32 0, i32 2
  %64 = load %struct.sv*, %struct.sv** %substr64, align 8
  store %struct.sv* %64, %struct.sv** %check, align 8
  br label %if.end65

if.end65:                                         ; preds = %if.end60, %if.end40
  %65 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags = getelementptr inbounds %struct.regexp, %struct.regexp* %65, i32 0, i32 13
  %66 = load i32, i32* %intflags, align 4
  %and66 = and i32 %66, 7168
  %tobool67 = icmp ne i32 %and66, 0
  br i1 %tobool67, label %if.then68, label %if.end174

if.then68:                                        ; preds = %if.end65
  %67 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags69 = getelementptr inbounds %struct.regexp, %struct.regexp* %67, i32 0, i32 13
  %68 = load i32, i32* %intflags69, align 4
  %and70 = and i32 %68, 1024
  %tobool71 = icmp ne i32 %and70, 0
  br i1 %tobool71, label %land.rhs72, label %land.end76

land.rhs72:                                       ; preds = %if.then68
  %69 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags73 = getelementptr inbounds %struct.regexp, %struct.regexp* %69, i32 0, i32 13
  %70 = load i32, i32* %intflags73, align 4
  %and74 = and i32 %70, 2
  %tobool75 = icmp ne i32 %and74, 0
  %lnot = xor i1 %tobool75, true
  br label %land.end76

land.end76:                                       ; preds = %land.rhs72, %if.then68
  %71 = phi i1 [ false, %if.then68 ], [ %lnot, %land.rhs72 ]
  %frombool77 = zext i1 %71 to i8
  store i8 %frombool77, i8* %ml_anch, align 1
  %72 = load i8, i8* %ml_anch, align 1
  %tobool78 = trunc i8 %72 to i1
  br i1 %tobool78, label %if.end173, label %land.lhs.true79

land.lhs.true79:                                  ; preds = %land.end76
  %73 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags80 = getelementptr inbounds %struct.regexp, %struct.regexp* %73, i32 0, i32 13
  %74 = load i32, i32* %intflags80, align 4
  %and81 = and i32 %74, 2
  %tobool82 = icmp ne i32 %and81, 0
  br i1 %tobool82, label %if.end173, label %if.then83

if.then83:                                        ; preds = %land.lhs.true79
  %75 = load i8*, i8** %strpos.addr, align 8
  %76 = load i8*, i8** %strbeg.addr, align 8
  %cmp84 = icmp ne i8* %75, %76
  br i1 %cmp84, label %land.lhs.true86, label %if.end91

land.lhs.true86:                                  ; preds = %if.then83
  %77 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags87 = getelementptr inbounds %struct.regexp, %struct.regexp* %77, i32 0, i32 13
  %78 = load i32, i32* %intflags87, align 4
  %and88 = and i32 %78, 2048
  %tobool89 = icmp ne i32 %and88, 0
  br i1 %tobool89, label %if.then90, label %if.end91

if.then90:                                        ; preds = %land.lhs.true86
  br label %fail

if.end91:                                         ; preds = %land.lhs.true86, %if.then83
  %79 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs92 = getelementptr inbounds %struct.regexp, %struct.regexp* %79, i32 0, i32 11
  %80 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs92, align 8
  %data93 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %80, i32 0, i32 1
  %arrayidx94 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data93, i64 0, i64 2
  %min_offset95 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx94, i32 0, i32 0
  %81 = load i64, i64* %min_offset95, align 8
  %82 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs96 = getelementptr inbounds %struct.regexp, %struct.regexp* %82, i32 0, i32 11
  %83 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs96, align 8
  %data97 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %83, i32 0, i32 1
  %arrayidx98 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data97, i64 0, i64 2
  %max_offset = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx98, i32 0, i32 1
  %84 = load i64, i64* %max_offset, align 8
  %cmp99 = icmp eq i64 %81, %84
  br i1 %cmp99, label %land.lhs.true101, label %if.end172

land.lhs.true101:                                 ; preds = %if.end91
  %85 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags102 = getelementptr inbounds %struct.regexp, %struct.regexp* %85, i32 0, i32 13
  %86 = load i32, i32* %intflags102, align 4
  %and103 = and i32 %86, 128
  %tobool104 = icmp ne i32 %and103, 0
  br i1 %tobool104, label %if.end172, label %if.then105

if.then105:                                       ; preds = %land.lhs.true101
  %87 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %87, i32 0, i32 0
  %88 = load i8*, i8** %sv_any, align 8
  %89 = bitcast i8* %88 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %89, i32 0, i32 2
  %90 = load i64, i64* %xpv_cur, align 8
  store i64 %90, i64* %slen, align 8
  %91 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target106 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %91, i32 0, i32 14
  %92 = load i8, i8* %is_utf8_target106, align 2
  %tobool107 = trunc i8 %92 to i1
  br i1 %tobool107, label %cond.true109, label %cond.false115

cond.true109:                                     ; preds = %if.then105
  %93 = load i8*, i8** %strpos.addr, align 8
  %94 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs110 = getelementptr inbounds %struct.regexp, %struct.regexp* %94, i32 0, i32 11
  %95 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs110, align 8
  %data111 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %95, i32 0, i32 1
  %arrayidx112 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data111, i64 0, i64 2
  %min_offset113 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx112, i32 0, i32 0
  %96 = load i64, i64* %min_offset113, align 8
  %97 = load i8*, i8** %strend.addr, align 8
  %call114 = call i8* @S_reghop3(i8* %93, i64 %96, i8* %97)
  br label %cond.end120

cond.false115:                                    ; preds = %if.then105
  %98 = load i8*, i8** %strpos.addr, align 8
  %99 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs116 = getelementptr inbounds %struct.regexp, %struct.regexp* %99, i32 0, i32 11
  %100 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs116, align 8
  %data117 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %100, i32 0, i32 1
  %arrayidx118 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data117, i64 0, i64 2
  %min_offset119 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx118, i32 0, i32 0
  %101 = load i64, i64* %min_offset119, align 8
  %add.ptr = getelementptr inbounds i8, i8* %98, i64 %101
  br label %cond.end120

cond.end120:                                      ; preds = %cond.false115, %cond.true109
  %cond121 = phi i8* [ %call114, %cond.true109 ], [ %add.ptr, %cond.false115 ]
  store i8* %cond121, i8** %s, align 8
  %102 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_flags122 = getelementptr inbounds %struct.sv, %struct.sv* %102, i32 0, i32 2
  %103 = load i32, i32* %sv_flags122, align 4
  %and123 = and i32 %103, -1073741824
  %cmp124 = icmp eq i32 %and123, -1073741824
  br i1 %cmp124, label %if.then126, label %if.end153

if.then126:                                       ; preds = %cond.end120
  %104 = load i32, i32* %multiline, align 4
  %tobool127 = icmp ne i32 %104, 0
  br i1 %tobool127, label %if.end152, label %land.lhs.true128

land.lhs.true128:                                 ; preds = %if.then126
  %105 = load i8*, i8** %strend.addr, align 8
  %106 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast129 = ptrtoint i8* %105 to i64
  %sub.ptr.rhs.cast130 = ptrtoint i8* %106 to i64
  %sub.ptr.sub131 = sub i64 %sub.ptr.lhs.cast129, %sub.ptr.rhs.cast130
  %107 = load i64, i64* %slen, align 8
  %cmp132 = icmp sgt i64 %sub.ptr.sub131, %107
  br i1 %cmp132, label %if.then151, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true128
  %108 = load i8*, i8** %strend.addr, align 8
  %109 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast134 = ptrtoint i8* %108 to i64
  %sub.ptr.rhs.cast135 = ptrtoint i8* %109 to i64
  %sub.ptr.sub136 = sub i64 %sub.ptr.lhs.cast134, %sub.ptr.rhs.cast135
  %110 = load i64, i64* %slen, align 8
  %sub137 = sub nsw i64 %110, 1
  %cmp138 = icmp slt i64 %sub.ptr.sub136, %sub137
  br i1 %cmp138, label %if.then151, label %lor.lhs.false140

lor.lhs.false140:                                 ; preds = %lor.lhs.false
  %111 = load i8*, i8** %strend.addr, align 8
  %112 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast141 = ptrtoint i8* %111 to i64
  %sub.ptr.rhs.cast142 = ptrtoint i8* %112 to i64
  %sub.ptr.sub143 = sub i64 %sub.ptr.lhs.cast141, %sub.ptr.rhs.cast142
  %113 = load i64, i64* %slen, align 8
  %cmp144 = icmp eq i64 %sub.ptr.sub143, %113
  br i1 %cmp144, label %land.lhs.true146, label %if.end152

land.lhs.true146:                                 ; preds = %lor.lhs.false140
  %114 = load i8*, i8** %strend.addr, align 8
  %arrayidx147 = getelementptr inbounds i8, i8* %114, i64 -1
  %115 = load i8, i8* %arrayidx147, align 1
  %conv148 = sext i8 %115 to i32
  %cmp149 = icmp ne i32 %conv148, 10
  br i1 %cmp149, label %if.then151, label %if.end152

if.then151:                                       ; preds = %land.lhs.true146, %lor.lhs.false, %land.lhs.true128
  br label %fail_finish

if.end152:                                        ; preds = %land.lhs.true146, %lor.lhs.false140, %if.then126
  %116 = load i64, i64* %slen, align 8
  %dec = add nsw i64 %116, -1
  store i64 %dec, i64* %slen, align 8
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %cond.end120
  %117 = load i64, i64* %slen, align 8
  %tobool154 = icmp ne i64 %117, 0
  br i1 %tobool154, label %land.lhs.true155, label %if.end171

land.lhs.true155:                                 ; preds = %if.end153
  %118 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %118, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %119 = load i8*, i8** %svu_pv, align 8
  %add.ptr156 = getelementptr inbounds i8, i8* %119, i64 0
  %120 = load i8, i8* %add.ptr156, align 1
  %conv157 = sext i8 %120 to i32
  %121 = load i8*, i8** %s, align 8
  %122 = load i8, i8* %121, align 1
  %conv158 = sext i8 %122 to i32
  %cmp159 = icmp ne i32 %conv157, %conv158
  br i1 %cmp159, label %if.then170, label %lor.lhs.false161

lor.lhs.false161:                                 ; preds = %land.lhs.true155
  %123 = load i64, i64* %slen, align 8
  %cmp162 = icmp sgt i64 %123, 1
  br i1 %cmp162, label %land.lhs.true164, label %if.end171

land.lhs.true164:                                 ; preds = %lor.lhs.false161
  %124 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_u165 = getelementptr inbounds %struct.sv, %struct.sv* %124, i32 0, i32 3
  %svu_pv166 = bitcast %union.anon* %sv_u165 to i8**
  %125 = load i8*, i8** %svu_pv166, align 8
  %add.ptr167 = getelementptr inbounds i8, i8* %125, i64 0
  %126 = load i8*, i8** %s, align 8
  %127 = load i64, i64* %slen, align 8
  %call168 = call i32 @memcmp(i8* %add.ptr167, i8* %126, i64 %127) #5
  %tobool169 = icmp ne i32 %call168, 0
  br i1 %tobool169, label %if.then170, label %if.end171

if.then170:                                       ; preds = %land.lhs.true164, %land.lhs.true155
  br label %fail_finish

if.end171:                                        ; preds = %land.lhs.true164, %lor.lhs.false161, %if.end153
  %128 = load i8*, i8** %s, align 8
  store i8* %128, i8** %check_at, align 8
  br label %success_at_start

if.end172:                                        ; preds = %land.lhs.true101, %if.end91
  br label %if.end173

if.end173:                                        ; preds = %if.end172, %land.lhs.true79, %land.end76
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.end65
  %129 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs175 = getelementptr inbounds %struct.regexp, %struct.regexp* %129, i32 0, i32 11
  %130 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs175, align 8
  %data176 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %130, i32 0, i32 1
  %arrayidx177 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data176, i64 0, i64 2
  %end_shift178 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx177, i32 0, i32 4
  %131 = load i64, i64* %end_shift178, align 8
  store i64 %131, i64* %end_shift, align 8
  br label %restart

restart:                                          ; preds = %if.end809, %if.then596, %cond.end502, %if.end174
  %132 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags179 = getelementptr inbounds %struct.regexp, %struct.regexp* %132, i32 0, i32 13
  %133 = load i32, i32* %intflags179, align 4
  %and180 = and i32 %133, 128
  %tobool181 = icmp ne i32 %and180, 0
  br i1 %tobool181, label %if.then182, label %if.else189

if.then182:                                       ; preds = %restart
  %134 = load i8*, i8** %rx_origin, align 8
  %135 = load i64, i64* %start_shift, align 8
  %add.ptr183 = getelementptr inbounds i8, i8* %134, i64 %135
  store i8* %add.ptr183, i8** %start_point, align 8
  %136 = load i8*, i8** %strend.addr, align 8
  %137 = load i64, i64* %end_shift, align 8
  %idx.neg = sub i64 0, %137
  %add.ptr184 = getelementptr inbounds i8, i8* %136, i64 %idx.neg
  store i8* %add.ptr184, i8** %end_point, align 8
  %138 = load i8*, i8** %start_point, align 8
  %139 = load i8*, i8** %end_point, align 8
  %cmp185 = icmp ugt i8* %138, %139
  br i1 %cmp185, label %if.then187, label %if.end188

if.then187:                                       ; preds = %if.then182
  br label %fail_finish

if.end188:                                        ; preds = %if.then182
  br label %if.end220

if.else189:                                       ; preds = %restart
  %140 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target190 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %140, i32 0, i32 14
  %141 = load i8, i8* %is_utf8_target190, align 2
  %tobool191 = trunc i8 %141 to i1
  br i1 %tobool191, label %cond.true193, label %cond.false196

cond.true193:                                     ; preds = %if.else189
  %142 = load i8*, i8** %strend.addr, align 8
  %143 = load i64, i64* %end_shift, align 8
  %sub194 = sub nsw i64 0, %143
  %144 = load i8*, i8** %strbeg.addr, align 8
  %call195 = call i8* @S_reghop3(i8* %142, i64 %sub194, i8* %144)
  br label %cond.end199

cond.false196:                                    ; preds = %if.else189
  %145 = load i8*, i8** %strend.addr, align 8
  %146 = load i64, i64* %end_shift, align 8
  %sub197 = sub nsw i64 0, %146
  %add.ptr198 = getelementptr inbounds i8, i8* %145, i64 %sub197
  br label %cond.end199

cond.end199:                                      ; preds = %cond.false196, %cond.true193
  %cond200 = phi i8* [ %call195, %cond.true193 ], [ %add.ptr198, %cond.false196 ]
  store i8* %cond200, i8** %end_point, align 8
  %147 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target201 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %147, i32 0, i32 14
  %148 = load i8, i8* %is_utf8_target201, align 2
  %tobool202 = trunc i8 %148 to i1
  br i1 %tobool202, label %cond.true204, label %cond.false206

cond.true204:                                     ; preds = %cond.end199
  %149 = load i8*, i8** %rx_origin, align 8
  %150 = load i64, i64* %start_shift, align 8
  %151 = load i8*, i8** %end_point, align 8
  %call205 = call i8* @S_reghopmaybe3(i8* %149, i64 %150, i8* %151)
  br label %cond.end215

cond.false206:                                    ; preds = %cond.end199
  %152 = load i8*, i8** %rx_origin, align 8
  %153 = load i64, i64* %start_shift, align 8
  %add.ptr207 = getelementptr inbounds i8, i8* %152, i64 %153
  %154 = load i8*, i8** %end_point, align 8
  %cmp208 = icmp ule i8* %add.ptr207, %154
  br i1 %cmp208, label %cond.true210, label %cond.false212

cond.true210:                                     ; preds = %cond.false206
  %155 = load i8*, i8** %rx_origin, align 8
  %156 = load i64, i64* %start_shift, align 8
  %add.ptr211 = getelementptr inbounds i8, i8* %155, i64 %156
  br label %cond.end213

cond.false212:                                    ; preds = %cond.false206
  br label %cond.end213

cond.end213:                                      ; preds = %cond.false212, %cond.true210
  %cond214 = phi i8* [ %add.ptr211, %cond.true210 ], [ null, %cond.false212 ]
  br label %cond.end215

cond.end215:                                      ; preds = %cond.end213, %cond.true204
  %cond216 = phi i8* [ %call205, %cond.true204 ], [ %cond214, %cond.end213 ]
  store i8* %cond216, i8** %start_point, align 8
  %157 = load i8*, i8** %start_point, align 8
  %tobool217 = icmp ne i8* %157, null
  br i1 %tobool217, label %if.end219, label %if.then218

if.then218:                                       ; preds = %cond.end215
  br label %fail_finish

if.end219:                                        ; preds = %cond.end215
  br label %if.end220

if.end220:                                        ; preds = %if.end219, %if.end188
  %158 = load i8, i8* %ml_anch, align 1
  %tobool221 = trunc i8 %158 to i1
  br i1 %tobool221, label %if.end297, label %land.lhs.true222

land.lhs.true222:                                 ; preds = %if.end220
  %159 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags223 = getelementptr inbounds %struct.regexp, %struct.regexp* %159, i32 0, i32 13
  %160 = load i32, i32* %intflags223, align 4
  %and224 = and i32 %160, 7168
  %tobool225 = icmp ne i32 %and224, 0
  br i1 %tobool225, label %land.lhs.true226, label %if.end297

land.lhs.true226:                                 ; preds = %land.lhs.true222
  %161 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs227 = getelementptr inbounds %struct.regexp, %struct.regexp* %161, i32 0, i32 11
  %162 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs227, align 8
  %data228 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %162, i32 0, i32 1
  %arrayidx229 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data228, i64 0, i64 2
  %max_offset230 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx229, i32 0, i32 1
  %163 = load i64, i64* %max_offset230, align 8
  %cmp231 = icmp ne i64 %163, 9223372036854775807
  br i1 %cmp231, label %if.then233, label %if.end297

if.then233:                                       ; preds = %land.lhs.true226
  %164 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_any234 = getelementptr inbounds %struct.sv, %struct.sv* %164, i32 0, i32 0
  %165 = load i8*, i8** %sv_any234, align 8
  %166 = bitcast i8* %165 to %struct.xpv*
  %xpv_cur235 = getelementptr inbounds %struct.xpv, %struct.xpv* %166, i32 0, i32 2
  %167 = load i64, i64* %xpv_cur235, align 8
  %168 = load %struct.sv*, %struct.sv** %check, align 8
  %sv_flags236 = getelementptr inbounds %struct.sv, %struct.sv* %168, i32 0, i32 2
  %169 = load i32, i32* %sv_flags236, align 4
  %and237 = and i32 %169, -1073741824
  %cmp238 = icmp eq i32 %and237, -1073741824
  %lnot240 = xor i1 %cmp238, true
  %lnot241 = xor i1 %lnot240, true
  %lnot.ext = zext i1 %lnot241 to i32
  %conv242 = sext i32 %lnot.ext to i64
  %sub243 = sub i64 %167, %conv242
  store i64 %sub243, i64* %len, align 8
  %170 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags244 = getelementptr inbounds %struct.regexp, %struct.regexp* %170, i32 0, i32 13
  %171 = load i32, i32* %intflags244, align 4
  %and245 = and i32 %171, 4096
  %tobool246 = icmp ne i32 %and245, 0
  br i1 %tobool246, label %cond.true247, label %cond.false248

cond.true247:                                     ; preds = %if.then233
  %172 = load i8*, i8** %strpos.addr, align 8
  br label %cond.end249

cond.false248:                                    ; preds = %if.then233
  %173 = load i8*, i8** %strbeg.addr, align 8
  br label %cond.end249

cond.end249:                                      ; preds = %cond.false248, %cond.true247
  %cond250 = phi i8* [ %172, %cond.true247 ], [ %173, %cond.false248 ]
  store i8* %cond250, i8** %anchor, align 8
  %174 = load i8*, i8** %end_point, align 8
  %175 = load i8*, i8** %anchor, align 8
  %sub.ptr.lhs.cast251 = ptrtoint i8* %174 to i64
  %sub.ptr.rhs.cast252 = ptrtoint i8* %175 to i64
  %sub.ptr.sub253 = sub i64 %sub.ptr.lhs.cast251, %sub.ptr.rhs.cast252
  %176 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs254 = getelementptr inbounds %struct.regexp, %struct.regexp* %176, i32 0, i32 11
  %177 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs254, align 8
  %data255 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %177, i32 0, i32 1
  %arrayidx256 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data255, i64 0, i64 2
  %max_offset257 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx256, i32 0, i32 1
  %178 = load i64, i64* %max_offset257, align 8
  %cmp258 = icmp sgt i64 %sub.ptr.sub253, %178
  br i1 %cmp258, label %if.then260, label %if.end296

if.then260:                                       ; preds = %cond.end249
  %179 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target261 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %179, i32 0, i32 14
  %180 = load i8, i8* %is_utf8_target261, align 2
  %tobool262 = trunc i8 %180 to i1
  br i1 %tobool262, label %cond.true264, label %cond.false272

cond.true264:                                     ; preds = %if.then260
  %181 = load i8*, i8** %anchor, align 8
  %182 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs265 = getelementptr inbounds %struct.regexp, %struct.regexp* %182, i32 0, i32 11
  %183 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs265, align 8
  %data266 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %183, i32 0, i32 1
  %arrayidx267 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data266, i64 0, i64 2
  %max_offset268 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx267, i32 0, i32 1
  %184 = load i64, i64* %max_offset268, align 8
  %185 = load i8*, i8** %end_point, align 8
  %186 = load i64, i64* %len, align 8
  %idx.neg269 = sub i64 0, %186
  %add.ptr270 = getelementptr inbounds i8, i8* %185, i64 %idx.neg269
  %call271 = call i8* @S_reghop3(i8* %181, i64 %184, i8* %add.ptr270)
  br label %cond.end293

cond.false272:                                    ; preds = %if.then260
  %187 = load i8*, i8** %anchor, align 8
  %188 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs273 = getelementptr inbounds %struct.regexp, %struct.regexp* %188, i32 0, i32 11
  %189 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs273, align 8
  %data274 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %189, i32 0, i32 1
  %arrayidx275 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data274, i64 0, i64 2
  %max_offset276 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx275, i32 0, i32 1
  %190 = load i64, i64* %max_offset276, align 8
  %add.ptr277 = getelementptr inbounds i8, i8* %187, i64 %190
  %191 = load i8*, i8** %end_point, align 8
  %192 = load i64, i64* %len, align 8
  %idx.neg278 = sub i64 0, %192
  %add.ptr279 = getelementptr inbounds i8, i8* %191, i64 %idx.neg278
  %cmp280 = icmp ugt i8* %add.ptr277, %add.ptr279
  br i1 %cmp280, label %cond.true282, label %cond.false285

cond.true282:                                     ; preds = %cond.false272
  %193 = load i8*, i8** %end_point, align 8
  %194 = load i64, i64* %len, align 8
  %idx.neg283 = sub i64 0, %194
  %add.ptr284 = getelementptr inbounds i8, i8* %193, i64 %idx.neg283
  br label %cond.end291

cond.false285:                                    ; preds = %cond.false272
  %195 = load i8*, i8** %anchor, align 8
  %196 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs286 = getelementptr inbounds %struct.regexp, %struct.regexp* %196, i32 0, i32 11
  %197 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs286, align 8
  %data287 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %197, i32 0, i32 1
  %arrayidx288 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data287, i64 0, i64 2
  %max_offset289 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx288, i32 0, i32 1
  %198 = load i64, i64* %max_offset289, align 8
  %add.ptr290 = getelementptr inbounds i8, i8* %195, i64 %198
  br label %cond.end291

cond.end291:                                      ; preds = %cond.false285, %cond.true282
  %cond292 = phi i8* [ %add.ptr284, %cond.true282 ], [ %add.ptr290, %cond.false285 ]
  br label %cond.end293

cond.end293:                                      ; preds = %cond.end291, %cond.true264
  %cond294 = phi i8* [ %call271, %cond.true264 ], [ %cond292, %cond.end291 ]
  %199 = load i64, i64* %len, align 8
  %add.ptr295 = getelementptr inbounds i8, i8* %cond294, i64 %199
  store i8* %add.ptr295, i8** %end_point, align 8
  br label %if.end296

if.end296:                                        ; preds = %cond.end293, %cond.end249
  br label %if.end297

if.end297:                                        ; preds = %if.end296, %land.lhs.true226, %land.lhs.true222, %if.end220
  %200 = load i8*, i8** %start_point, align 8
  %201 = load i8*, i8** %end_point, align 8
  %202 = load %struct.sv*, %struct.sv** %check, align 8
  %203 = load i32, i32* %multiline, align 4
  %tobool298 = icmp ne i32 %203, 0
  %204 = zext i1 %tobool298 to i64
  %cond299 = select i1 %tobool298, i32 1, i32 0
  %call300 = call i8* @Perl_fbm_instr(i8* %200, i8* %201, %struct.sv* %202, i32 %cond299)
  store i8* %call300, i8** %check_at, align 8
  %205 = load i8*, i8** %check_at, align 8
  %tobool301 = icmp ne i8* %205, null
  br i1 %tobool301, label %if.end303, label %if.then302

if.then302:                                       ; preds = %if.end297
  br label %fail_finish

if.end303:                                        ; preds = %if.end297
  %206 = load i8*, i8** %check_at, align 8
  %207 = load i8*, i8** %rx_origin, align 8
  %sub.ptr.lhs.cast304 = ptrtoint i8* %206 to i64
  %sub.ptr.rhs.cast305 = ptrtoint i8* %207 to i64
  %sub.ptr.sub306 = sub i64 %sub.ptr.lhs.cast304, %sub.ptr.rhs.cast305
  %208 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs307 = getelementptr inbounds %struct.regexp, %struct.regexp* %208, i32 0, i32 11
  %209 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs307, align 8
  %data308 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %209, i32 0, i32 1
  %arrayidx309 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data308, i64 0, i64 2
  %max_offset310 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx309, i32 0, i32 1
  %210 = load i64, i64* %max_offset310, align 8
  %cmp311 = icmp sgt i64 %sub.ptr.sub306, %210
  br i1 %cmp311, label %if.then313, label %if.end333

if.then313:                                       ; preds = %if.end303
  %211 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target314 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %211, i32 0, i32 14
  %212 = load i8, i8* %is_utf8_target314, align 2
  %tobool315 = trunc i8 %212 to i1
  br i1 %tobool315, label %cond.true317, label %cond.false324

cond.true317:                                     ; preds = %if.then313
  %213 = load i8*, i8** %check_at, align 8
  %214 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs318 = getelementptr inbounds %struct.regexp, %struct.regexp* %214, i32 0, i32 11
  %215 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs318, align 8
  %data319 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %215, i32 0, i32 1
  %arrayidx320 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data319, i64 0, i64 2
  %max_offset321 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx320, i32 0, i32 1
  %216 = load i64, i64* %max_offset321, align 8
  %sub322 = sub nsw i64 0, %216
  %217 = load i8*, i8** %rx_origin, align 8
  %call323 = call i8* @S_reghop3(i8* %213, i64 %sub322, i8* %217)
  br label %cond.end331

cond.false324:                                    ; preds = %if.then313
  %218 = load i8*, i8** %check_at, align 8
  %219 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs325 = getelementptr inbounds %struct.regexp, %struct.regexp* %219, i32 0, i32 11
  %220 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs325, align 8
  %data326 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %220, i32 0, i32 1
  %arrayidx327 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data326, i64 0, i64 2
  %max_offset328 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx327, i32 0, i32 1
  %221 = load i64, i64* %max_offset328, align 8
  %sub329 = sub nsw i64 0, %221
  %add.ptr330 = getelementptr inbounds i8, i8* %218, i64 %sub329
  br label %cond.end331

cond.end331:                                      ; preds = %cond.false324, %cond.true317
  %cond332 = phi i8* [ %call323, %cond.true317 ], [ %add.ptr330, %cond.false324 ]
  store i8* %cond332, i8** %rx_origin, align 8
  br label %if.end333

if.end333:                                        ; preds = %cond.end331, %if.end303
  %222 = load i8, i8* %utf8_target, align 1
  %tobool334 = trunc i8 %222 to i1
  br i1 %tobool334, label %cond.true336, label %cond.false342

cond.true336:                                     ; preds = %if.end333
  %223 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs337 = getelementptr inbounds %struct.regexp, %struct.regexp* %223, i32 0, i32 11
  %224 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs337, align 8
  %data338 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %224, i32 0, i32 1
  %225 = load i8, i8* %other_ix, align 1
  %idxprom = zext i8 %225 to i64
  %arrayidx339 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data338, i64 0, i64 %idxprom
  %utf8_substr340 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx339, i32 0, i32 3
  %226 = load %struct.sv*, %struct.sv** %utf8_substr340, align 8
  %tobool341 = icmp ne %struct.sv* %226, null
  br i1 %tobool341, label %if.then349, label %if.else532

cond.false342:                                    ; preds = %if.end333
  %227 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs343 = getelementptr inbounds %struct.regexp, %struct.regexp* %227, i32 0, i32 11
  %228 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs343, align 8
  %data344 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %228, i32 0, i32 1
  %229 = load i8, i8* %other_ix, align 1
  %idxprom345 = zext i8 %229 to i64
  %arrayidx346 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data344, i64 0, i64 %idxprom345
  %substr347 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx346, i32 0, i32 2
  %230 = load %struct.sv*, %struct.sv** %substr347, align 8
  %tobool348 = icmp ne %struct.sv* %230, null
  br i1 %tobool348, label %if.then349, label %if.else532

if.then349:                                       ; preds = %cond.false342, %cond.true336
  br label %do_other_substr

do_other_substr:                                  ; preds = %if.then770, %if.then612, %if.then349
  %231 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs351 = getelementptr inbounds %struct.regexp, %struct.regexp* %231, i32 0, i32 11
  %232 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs351, align 8
  %data352 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %232, i32 0, i32 1
  %233 = load i8, i8* %other_ix, align 1
  %idxprom353 = zext i8 %233 to i64
  %arrayidx354 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data352, i64 0, i64 %idxprom353
  store %struct.reg_substr_datum* %arrayidx354, %struct.reg_substr_datum** %other, align 8
  %234 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target355 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %234, i32 0, i32 14
  %235 = load i8, i8* %is_utf8_target355, align 2
  %tobool356 = trunc i8 %235 to i1
  br i1 %tobool356, label %cond.true358, label %cond.false363

cond.true358:                                     ; preds = %do_other_substr
  %236 = load i8*, i8** %strend.addr, align 8
  %237 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %min_offset359 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %237, i32 0, i32 0
  %238 = load i64, i64* %min_offset359, align 8
  %239 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %minlen360 = getelementptr inbounds %struct.regexp, %struct.regexp* %239, i32 0, i32 8
  %240 = load i64, i64* %minlen360, align 8
  %sub361 = sub nsw i64 %238, %240
  %241 = load i8*, i8** %strbeg.addr, align 8
  %call362 = call i8* @S_reghop3(i8* %236, i64 %sub361, i8* %241)
  br label %cond.end369

cond.false363:                                    ; preds = %do_other_substr
  %242 = load i8*, i8** %strend.addr, align 8
  %243 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %min_offset364 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %243, i32 0, i32 0
  %244 = load i64, i64* %min_offset364, align 8
  %add.ptr365 = getelementptr inbounds i8, i8* %242, i64 %244
  %245 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %minlen366 = getelementptr inbounds %struct.regexp, %struct.regexp* %245, i32 0, i32 8
  %246 = load i64, i64* %minlen366, align 8
  %idx.neg367 = sub i64 0, %246
  %add.ptr368 = getelementptr inbounds i8, i8* %add.ptr365, i64 %idx.neg367
  br label %cond.end369

cond.end369:                                      ; preds = %cond.false363, %cond.true358
  %cond370 = phi i8* [ %call362, %cond.true358 ], [ %add.ptr368, %cond.false363 ]
  store i8* %cond370, i8** %last1, align 8
  %247 = load i8, i8* %other_ix, align 1
  %tobool371 = icmp ne i8 %247, 0
  br i1 %tobool371, label %if.then372, label %if.else402

if.then372:                                       ; preds = %cond.end369
  %248 = load i8*, i8** %last1, align 8
  %249 = load i8*, i8** %rx_origin, align 8
  %sub.ptr.lhs.cast373 = ptrtoint i8* %248 to i64
  %sub.ptr.rhs.cast374 = ptrtoint i8* %249 to i64
  %sub.ptr.sub375 = sub i64 %sub.ptr.lhs.cast373, %sub.ptr.rhs.cast374
  %250 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %max_offset376 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %250, i32 0, i32 1
  %251 = load i64, i64* %max_offset376, align 8
  %cmp377 = icmp slt i64 %sub.ptr.sub375, %251
  br i1 %cmp377, label %cond.true379, label %cond.false380

cond.true379:                                     ; preds = %if.then372
  %252 = load i8*, i8** %last1, align 8
  br label %cond.end400

cond.false380:                                    ; preds = %if.then372
  %253 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target381 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %253, i32 0, i32 14
  %254 = load i8, i8* %is_utf8_target381, align 2
  %tobool382 = trunc i8 %254 to i1
  br i1 %tobool382, label %cond.true384, label %cond.false387

cond.true384:                                     ; preds = %cond.false380
  %255 = load i8*, i8** %rx_origin, align 8
  %256 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %max_offset385 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %256, i32 0, i32 1
  %257 = load i64, i64* %max_offset385, align 8
  %258 = load i8*, i8** %last1, align 8
  %call386 = call i8* @S_reghop3(i8* %255, i64 %257, i8* %258)
  br label %cond.end398

cond.false387:                                    ; preds = %cond.false380
  %259 = load i8*, i8** %rx_origin, align 8
  %260 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %max_offset388 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %260, i32 0, i32 1
  %261 = load i64, i64* %max_offset388, align 8
  %add.ptr389 = getelementptr inbounds i8, i8* %259, i64 %261
  %262 = load i8*, i8** %last1, align 8
  %cmp390 = icmp ugt i8* %add.ptr389, %262
  br i1 %cmp390, label %cond.true392, label %cond.false393

cond.true392:                                     ; preds = %cond.false387
  %263 = load i8*, i8** %last1, align 8
  br label %cond.end396

cond.false393:                                    ; preds = %cond.false387
  %264 = load i8*, i8** %rx_origin, align 8
  %265 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %max_offset394 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %265, i32 0, i32 1
  %266 = load i64, i64* %max_offset394, align 8
  %add.ptr395 = getelementptr inbounds i8, i8* %264, i64 %266
  br label %cond.end396

cond.end396:                                      ; preds = %cond.false393, %cond.true392
  %cond397 = phi i8* [ %263, %cond.true392 ], [ %add.ptr395, %cond.false393 ]
  br label %cond.end398

cond.end398:                                      ; preds = %cond.end396, %cond.true384
  %cond399 = phi i8* [ %call386, %cond.true384 ], [ %cond397, %cond.end396 ]
  br label %cond.end400

cond.end400:                                      ; preds = %cond.end398, %cond.true379
  %cond401 = phi i8* [ %252, %cond.true379 ], [ %cond399, %cond.end398 ]
  store i8* %cond401, i8** %last, align 8
  br label %if.end417

if.else402:                                       ; preds = %cond.end369
  %267 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target403 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %267, i32 0, i32 14
  %268 = load i8, i8* %is_utf8_target403, align 2
  %tobool404 = trunc i8 %268 to i1
  br i1 %tobool404, label %cond.true406, label %cond.false410

cond.true406:                                     ; preds = %if.else402
  %269 = load i8*, i8** %check_at, align 8
  %270 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %min_offset407 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %270, i32 0, i32 0
  %271 = load i64, i64* %min_offset407, align 8
  %272 = load i64, i64* %start_shift, align 8
  %sub408 = sub nsw i64 %271, %272
  %273 = load i8*, i8** %strbeg.addr, align 8
  %274 = load i8*, i8** %strend.addr, align 8
  %call409 = call i8* @S_reghop4(i8* %269, i64 %sub408, i8* %273, i8* %274)
  br label %cond.end415

cond.false410:                                    ; preds = %if.else402
  %275 = load i8*, i8** %check_at, align 8
  %276 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %min_offset411 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %276, i32 0, i32 0
  %277 = load i64, i64* %min_offset411, align 8
  %add.ptr412 = getelementptr inbounds i8, i8* %275, i64 %277
  %278 = load i64, i64* %start_shift, align 8
  %idx.neg413 = sub i64 0, %278
  %add.ptr414 = getelementptr inbounds i8, i8* %add.ptr412, i64 %idx.neg413
  br label %cond.end415

cond.end415:                                      ; preds = %cond.false410, %cond.true406
  %cond416 = phi i8* [ %call409, %cond.true406 ], [ %add.ptr414, %cond.false410 ]
  store i8* %cond416, i8** %last, align 8
  br label %if.end417

if.end417:                                        ; preds = %cond.end415, %cond.end400
  %279 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target418 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %279, i32 0, i32 14
  %280 = load i8, i8* %is_utf8_target418, align 2
  %tobool419 = trunc i8 %280 to i1
  br i1 %tobool419, label %cond.true421, label %cond.false424

cond.true421:                                     ; preds = %if.end417
  %281 = load i8*, i8** %rx_origin, align 8
  %282 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %min_offset422 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %282, i32 0, i32 0
  %283 = load i64, i64* %min_offset422, align 8
  %284 = load i8*, i8** %strend.addr, align 8
  %call423 = call i8* @S_reghop3(i8* %281, i64 %283, i8* %284)
  br label %cond.end427

cond.false424:                                    ; preds = %if.end417
  %285 = load i8*, i8** %rx_origin, align 8
  %286 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %min_offset425 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %286, i32 0, i32 0
  %287 = load i64, i64* %min_offset425, align 8
  %add.ptr426 = getelementptr inbounds i8, i8* %285, i64 %287
  br label %cond.end427

cond.end427:                                      ; preds = %cond.false424, %cond.true421
  %cond428 = phi i8* [ %call423, %cond.true421 ], [ %add.ptr426, %cond.false424 ]
  store i8* %cond428, i8** %s350, align 8
  %288 = load i8*, i8** %s350, align 8
  %289 = load i8*, i8** %other_last, align 8
  %cmp429 = icmp ult i8* %288, %289
  br i1 %cmp429, label %if.then431, label %if.end432

if.then431:                                       ; preds = %cond.end427
  %290 = load i8*, i8** %other_last, align 8
  store i8* %290, i8** %s350, align 8
  br label %if.end432

if.end432:                                        ; preds = %if.then431, %cond.end427
  %291 = load i8, i8* %utf8_target, align 1
  %tobool433 = trunc i8 %291 to i1
  br i1 %tobool433, label %cond.true435, label %cond.false437

cond.true435:                                     ; preds = %if.end432
  %292 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %utf8_substr436 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %292, i32 0, i32 3
  %293 = load %struct.sv*, %struct.sv** %utf8_substr436, align 8
  br label %cond.end439

cond.false437:                                    ; preds = %if.end432
  %294 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %substr438 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %294, i32 0, i32 2
  %295 = load %struct.sv*, %struct.sv** %substr438, align 8
  br label %cond.end439

cond.end439:                                      ; preds = %cond.false437, %cond.true435
  %cond440 = phi %struct.sv* [ %293, %cond.true435 ], [ %295, %cond.false437 ]
  store %struct.sv* %cond440, %struct.sv** %must, align 8
  %296 = load i8*, i8** %s350, align 8
  store i8* %296, i8** %from, align 8
  %297 = load i8*, i8** %last, align 8
  %298 = load %struct.sv*, %struct.sv** %must, align 8
  %sv_any441 = getelementptr inbounds %struct.sv, %struct.sv* %298, i32 0, i32 0
  %299 = load i8*, i8** %sv_any441, align 8
  %300 = bitcast i8* %299 to %struct.xpv*
  %xpv_cur442 = getelementptr inbounds %struct.xpv, %struct.xpv* %300, i32 0, i32 2
  %301 = load i64, i64* %xpv_cur442, align 8
  %add.ptr443 = getelementptr inbounds i8, i8* %297, i64 %301
  %302 = load %struct.sv*, %struct.sv** %must, align 8
  %sv_flags444 = getelementptr inbounds %struct.sv, %struct.sv* %302, i32 0, i32 2
  %303 = load i32, i32* %sv_flags444, align 4
  %and445 = and i32 %303, -1073741824
  %cmp446 = icmp eq i32 %and445, -1073741824
  %conv447 = zext i1 %cmp446 to i32
  %cmp448 = icmp ne i32 %conv447, 0
  %conv449 = zext i1 %cmp448 to i32
  %idx.ext = sext i32 %conv449 to i64
  %idx.neg450 = sub i64 0, %idx.ext
  %add.ptr451 = getelementptr inbounds i8, i8* %add.ptr443, i64 %idx.neg450
  store i8* %add.ptr451, i8** %to, align 8
  %304 = load i8*, i8** %from, align 8
  %305 = load i8*, i8** %to, align 8
  %cmp452 = icmp ugt i8* %304, %305
  br i1 %cmp452, label %if.then454, label %if.else455

if.then454:                                       ; preds = %cond.end439
  store i8* null, i8** %s350, align 8
  br label %if.end459

if.else455:                                       ; preds = %cond.end439
  %306 = load i8*, i8** %from, align 8
  %307 = load i8*, i8** %to, align 8
  %308 = load %struct.sv*, %struct.sv** %must, align 8
  %309 = load i32, i32* %multiline, align 4
  %tobool456 = icmp ne i32 %309, 0
  %310 = zext i1 %tobool456 to i64
  %cond457 = select i1 %tobool456, i32 1, i32 0
  %call458 = call i8* @Perl_fbm_instr(i8* %306, i8* %307, %struct.sv* %308, i32 %cond457)
  store i8* %call458, i8** %s350, align 8
  br label %if.end459

if.end459:                                        ; preds = %if.else455, %if.then454
  %311 = load i8*, i8** %s350, align 8
  %tobool460 = icmp ne i8* %311, null
  br i1 %tobool460, label %if.else504, label %if.then461

if.then461:                                       ; preds = %if.end459
  %312 = load i8*, i8** %last, align 8
  %313 = load i8*, i8** %last1, align 8
  %cmp462 = icmp uge i8* %312, %313
  br i1 %cmp462, label %if.then464, label %if.end465

if.then464:                                       ; preds = %if.then461
  br label %fail_finish

if.end465:                                        ; preds = %if.then461
  %314 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target466 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %314, i32 0, i32 14
  %315 = load i8, i8* %is_utf8_target466, align 2
  %tobool467 = trunc i8 %315 to i1
  br i1 %tobool467, label %cond.true469, label %cond.false471

cond.true469:                                     ; preds = %if.end465
  %316 = load i8*, i8** %last, align 8
  %317 = load i8*, i8** %strend.addr, align 8
  %call470 = call i8* @S_reghop3(i8* %316, i64 1, i8* %317)
  br label %cond.end473

cond.false471:                                    ; preds = %if.end465
  %318 = load i8*, i8** %last, align 8
  %add.ptr472 = getelementptr inbounds i8, i8* %318, i64 1
  br label %cond.end473

cond.end473:                                      ; preds = %cond.false471, %cond.true469
  %cond474 = phi i8* [ %call470, %cond.true469 ], [ %add.ptr472, %cond.false471 ]
  store i8* %cond474, i8** %other_last, align 8
  %319 = load i8, i8* %other_ix, align 1
  %conv475 = zext i8 %319 to i32
  %tobool476 = icmp ne i32 %conv475, 0
  br i1 %tobool476, label %cond.true477, label %cond.false487

cond.true477:                                     ; preds = %cond.end473
  %320 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target478 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %320, i32 0, i32 14
  %321 = load i8, i8* %is_utf8_target478, align 2
  %tobool479 = trunc i8 %321 to i1
  br i1 %tobool479, label %cond.true481, label %cond.false483

cond.true481:                                     ; preds = %cond.true477
  %322 = load i8*, i8** %rx_origin, align 8
  %323 = load i8*, i8** %strend.addr, align 8
  %call482 = call i8* @S_reghop3(i8* %322, i64 1, i8* %323)
  br label %cond.end485

cond.false483:                                    ; preds = %cond.true477
  %324 = load i8*, i8** %rx_origin, align 8
  %add.ptr484 = getelementptr inbounds i8, i8* %324, i64 1
  br label %cond.end485

cond.end485:                                      ; preds = %cond.false483, %cond.true481
  %cond486 = phi i8* [ %call482, %cond.true481 ], [ %add.ptr484, %cond.false483 ]
  br label %cond.end502

cond.false487:                                    ; preds = %cond.end473
  %325 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target488 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %325, i32 0, i32 14
  %326 = load i8, i8* %is_utf8_target488, align 2
  %tobool489 = trunc i8 %326 to i1
  br i1 %tobool489, label %cond.true491, label %cond.false495

cond.true491:                                     ; preds = %cond.false487
  %327 = load i8*, i8** %last, align 8
  %328 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %min_offset492 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %328, i32 0, i32 0
  %329 = load i64, i64* %min_offset492, align 8
  %sub493 = sub nsw i64 1, %329
  %330 = load i8*, i8** %strbeg.addr, align 8
  %331 = load i8*, i8** %strend.addr, align 8
  %call494 = call i8* @S_reghop4(i8* %327, i64 %sub493, i8* %330, i8* %331)
  br label %cond.end500

cond.false495:                                    ; preds = %cond.false487
  %332 = load i8*, i8** %last, align 8
  %add.ptr496 = getelementptr inbounds i8, i8* %332, i64 1
  %333 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %min_offset497 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %333, i32 0, i32 0
  %334 = load i64, i64* %min_offset497, align 8
  %idx.neg498 = sub i64 0, %334
  %add.ptr499 = getelementptr inbounds i8, i8* %add.ptr496, i64 %idx.neg498
  br label %cond.end500

cond.end500:                                      ; preds = %cond.false495, %cond.true491
  %cond501 = phi i8* [ %call494, %cond.true491 ], [ %add.ptr499, %cond.false495 ]
  br label %cond.end502

cond.end502:                                      ; preds = %cond.end500, %cond.end485
  %cond503 = phi i8* [ %cond486, %cond.end485 ], [ %cond501, %cond.end500 ]
  store i8* %cond503, i8** %rx_origin, align 8
  br label %restart

if.else504:                                       ; preds = %if.end459
  %335 = load i8, i8* %other_ix, align 1
  %tobool505 = icmp ne i8 %335, 0
  br i1 %tobool505, label %if.then506, label %if.else507

if.then506:                                       ; preds = %if.else504
  %336 = load i8*, i8** %s350, align 8
  store i8* %336, i8** %other_last, align 8
  br label %if.end530

if.else507:                                       ; preds = %if.else504
  %337 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target508 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %337, i32 0, i32 14
  %338 = load i8, i8* %is_utf8_target508, align 2
  %tobool509 = trunc i8 %338 to i1
  br i1 %tobool509, label %cond.true511, label %cond.false515

cond.true511:                                     ; preds = %if.else507
  %339 = load i8*, i8** %s350, align 8
  %340 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %min_offset512 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %340, i32 0, i32 0
  %341 = load i64, i64* %min_offset512, align 8
  %sub513 = sub nsw i64 0, %341
  %342 = load i8*, i8** %strbeg.addr, align 8
  %call514 = call i8* @S_reghop3(i8* %339, i64 %sub513, i8* %342)
  br label %cond.end519

cond.false515:                                    ; preds = %if.else507
  %343 = load i8*, i8** %s350, align 8
  %344 = load %struct.reg_substr_datum*, %struct.reg_substr_datum** %other, align 8
  %min_offset516 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %344, i32 0, i32 0
  %345 = load i64, i64* %min_offset516, align 8
  %sub517 = sub nsw i64 0, %345
  %add.ptr518 = getelementptr inbounds i8, i8* %343, i64 %sub517
  br label %cond.end519

cond.end519:                                      ; preds = %cond.false515, %cond.true511
  %cond520 = phi i8* [ %call514, %cond.true511 ], [ %add.ptr518, %cond.false515 ]
  store i8* %cond520, i8** %rx_origin, align 8
  %346 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target521 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %346, i32 0, i32 14
  %347 = load i8, i8* %is_utf8_target521, align 2
  %tobool522 = trunc i8 %347 to i1
  br i1 %tobool522, label %cond.true524, label %cond.false526

cond.true524:                                     ; preds = %cond.end519
  %348 = load i8*, i8** %s350, align 8
  %349 = load i8*, i8** %strend.addr, align 8
  %call525 = call i8* @S_reghop3(i8* %348, i64 1, i8* %349)
  br label %cond.end528

cond.false526:                                    ; preds = %cond.end519
  %350 = load i8*, i8** %s350, align 8
  %add.ptr527 = getelementptr inbounds i8, i8* %350, i64 1
  br label %cond.end528

cond.end528:                                      ; preds = %cond.false526, %cond.true524
  %cond529 = phi i8* [ %call525, %cond.true524 ], [ %add.ptr527, %cond.false526 ]
  store i8* %cond529, i8** %other_last, align 8
  br label %if.end530

if.end530:                                        ; preds = %cond.end528, %if.then506
  br label %if.end531

if.end531:                                        ; preds = %if.end530
  br label %if.end533

if.else532:                                       ; preds = %cond.false342, %cond.true336
  br label %if.end533

if.end533:                                        ; preds = %if.else532, %if.end531
  br label %postprocess_substr_matches

postprocess_substr_matches:                       ; preds = %if.then775, %if.end533
  %351 = load i8, i8* %ml_anch, align 1
  %tobool534 = trunc i8 %351 to i1
  br i1 %tobool534, label %land.lhs.true536, label %if.else614

land.lhs.true536:                                 ; preds = %postprocess_substr_matches
  %352 = load i8*, i8** %rx_origin, align 8
  %353 = load i8*, i8** %strbeg.addr, align 8
  %cmp537 = icmp ne i8* %352, %353
  br i1 %cmp537, label %land.lhs.true539, label %if.else614

land.lhs.true539:                                 ; preds = %land.lhs.true536
  %354 = load i8*, i8** %rx_origin, align 8
  %arrayidx540 = getelementptr inbounds i8, i8* %354, i64 -1
  %355 = load i8, i8* %arrayidx540, align 1
  %conv541 = sext i8 %355 to i32
  %cmp542 = icmp ne i32 %conv541, 10
  br i1 %cmp542, label %if.then544, label %if.else614

if.then544:                                       ; preds = %land.lhs.true539
  %356 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target546 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %356, i32 0, i32 14
  %357 = load i8, i8* %is_utf8_target546, align 2
  %tobool547 = trunc i8 %357 to i1
  br i1 %tobool547, label %cond.true549, label %cond.false553

cond.true549:                                     ; preds = %if.then544
  %358 = load i8*, i8** %strend.addr, align 8
  %359 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %minlen550 = getelementptr inbounds %struct.regexp, %struct.regexp* %359, i32 0, i32 8
  %360 = load i64, i64* %minlen550, align 8
  %sub551 = sub nsw i64 0, %360
  %361 = load i8*, i8** %strpos.addr, align 8
  %call552 = call i8* @S_reghop3(i8* %358, i64 %sub551, i8* %361)
  br label %cond.end557

cond.false553:                                    ; preds = %if.then544
  %362 = load i8*, i8** %strend.addr, align 8
  %363 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %minlen554 = getelementptr inbounds %struct.regexp, %struct.regexp* %363, i32 0, i32 8
  %364 = load i64, i64* %minlen554, align 8
  %sub555 = sub nsw i64 0, %364
  %add.ptr556 = getelementptr inbounds i8, i8* %362, i64 %sub555
  br label %cond.end557

cond.end557:                                      ; preds = %cond.false553, %cond.true549
  %cond558 = phi i8* [ %call552, %cond.true549 ], [ %add.ptr556, %cond.false553 ]
  store i8* %cond558, i8** %s545, align 8
  %365 = load i8*, i8** %s545, align 8
  %366 = load i8*, i8** %rx_origin, align 8
  %cmp559 = icmp ule i8* %365, %366
  br i1 %cmp559, label %if.then567, label %lor.lhs.false561

lor.lhs.false561:                                 ; preds = %cond.end557
  %367 = load i8*, i8** %rx_origin, align 8
  %368 = load i8*, i8** %s545, align 8
  %369 = load i8*, i8** %rx_origin, align 8
  %sub.ptr.lhs.cast562 = ptrtoint i8* %368 to i64
  %sub.ptr.rhs.cast563 = ptrtoint i8* %369 to i64
  %sub.ptr.sub564 = sub i64 %sub.ptr.lhs.cast562, %sub.ptr.rhs.cast563
  %call565 = call i8* @memchr(i8* %367, i32 10, i64 %sub.ptr.sub564) #5
  store i8* %call565, i8** %rx_origin, align 8
  %tobool566 = icmp ne i8* %call565, null
  br i1 %tobool566, label %if.end568, label %if.then567

if.then567:                                       ; preds = %lor.lhs.false561, %cond.end557
  br label %fail_finish

if.end568:                                        ; preds = %lor.lhs.false561
  %370 = load i8*, i8** %rx_origin, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %370, i32 1
  store i8* %incdec.ptr, i8** %rx_origin, align 8
  %371 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs569 = getelementptr inbounds %struct.regexp, %struct.regexp* %371, i32 0, i32 11
  %372 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs569, align 8
  %check_ix570 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %372, i32 0, i32 0
  %373 = load i8, i8* %check_ix570, align 8
  %conv571 = zext i8 %373 to i32
  %cmp572 = icmp eq i32 %conv571, 0
  br i1 %cmp572, label %if.then596, label %lor.lhs.false574

lor.lhs.false574:                                 ; preds = %if.end568
  %374 = load i8*, i8** %rx_origin, align 8
  %375 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target575 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %375, i32 0, i32 14
  %376 = load i8, i8* %is_utf8_target575, align 2
  %tobool576 = trunc i8 %376 to i1
  br i1 %tobool576, label %cond.true578, label %cond.false585

cond.true578:                                     ; preds = %lor.lhs.false574
  %377 = load i8*, i8** %check_at, align 8
  %378 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs579 = getelementptr inbounds %struct.regexp, %struct.regexp* %378, i32 0, i32 11
  %379 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs579, align 8
  %data580 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %379, i32 0, i32 1
  %arrayidx581 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data580, i64 0, i64 2
  %min_offset582 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx581, i32 0, i32 0
  %380 = load i64, i64* %min_offset582, align 8
  %sub583 = sub nsw i64 0, %380
  %381 = load i8*, i8** %strpos.addr, align 8
  %call584 = call i8* @S_reghop3(i8* %377, i64 %sub583, i8* %381)
  br label %cond.end592

cond.false585:                                    ; preds = %lor.lhs.false574
  %382 = load i8*, i8** %check_at, align 8
  %383 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs586 = getelementptr inbounds %struct.regexp, %struct.regexp* %383, i32 0, i32 11
  %384 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs586, align 8
  %data587 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %384, i32 0, i32 1
  %arrayidx588 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data587, i64 0, i64 2
  %min_offset589 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx588, i32 0, i32 0
  %385 = load i64, i64* %min_offset589, align 8
  %sub590 = sub nsw i64 0, %385
  %add.ptr591 = getelementptr inbounds i8, i8* %382, i64 %sub590
  br label %cond.end592

cond.end592:                                      ; preds = %cond.false585, %cond.true578
  %cond593 = phi i8* [ %call584, %cond.true578 ], [ %add.ptr591, %cond.false585 ]
  %cmp594 = icmp uge i8* %374, %cond593
  br i1 %cmp594, label %if.then596, label %if.end597

if.then596:                                       ; preds = %cond.end592, %if.end568
  br label %restart

if.end597:                                        ; preds = %cond.end592
  %386 = load i8, i8* %utf8_target, align 1
  %tobool598 = trunc i8 %386 to i1
  br i1 %tobool598, label %cond.true600, label %cond.false606

cond.true600:                                     ; preds = %if.end597
  %387 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs601 = getelementptr inbounds %struct.regexp, %struct.regexp* %387, i32 0, i32 11
  %388 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs601, align 8
  %data602 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %388, i32 0, i32 1
  %arrayidx603 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data602, i64 0, i64 0
  %utf8_substr604 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx603, i32 0, i32 3
  %389 = load %struct.sv*, %struct.sv** %utf8_substr604, align 8
  %tobool605 = icmp ne %struct.sv* %389, null
  br i1 %tobool605, label %if.then612, label %if.end613

cond.false606:                                    ; preds = %if.end597
  %390 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs607 = getelementptr inbounds %struct.regexp, %struct.regexp* %390, i32 0, i32 11
  %391 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs607, align 8
  %data608 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %391, i32 0, i32 1
  %arrayidx609 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data608, i64 0, i64 0
  %substr610 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx609, i32 0, i32 2
  %392 = load %struct.sv*, %struct.sv** %substr610, align 8
  %tobool611 = icmp ne %struct.sv* %392, null
  br i1 %tobool611, label %if.then612, label %if.end613

if.then612:                                       ; preds = %cond.false606, %cond.true600
  br label %do_other_substr

if.end613:                                        ; preds = %cond.false606, %cond.true600
  br label %if.end615

if.else614:                                       ; preds = %land.lhs.true539, %land.lhs.true536, %postprocess_substr_matches
  br label %if.end615

if.end615:                                        ; preds = %if.else614, %if.end613
  br label %success_at_start

success_at_start:                                 ; preds = %if.end615, %if.end171
  %393 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %regstclass = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %393, i32 0, i32 2
  %394 = load %struct.regnode*, %struct.regnode** %regstclass, align 8
  %tobool616 = icmp ne %struct.regnode* %394, null
  br i1 %tobool616, label %land.lhs.true617, label %if.end816

land.lhs.true617:                                 ; preds = %success_at_start
  %395 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %regstclass618 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %395, i32 0, i32 2
  %396 = load %struct.regnode*, %struct.regnode** %regstclass618, align 8
  %type = getelementptr inbounds %struct.regnode, %struct.regnode* %396, i32 0, i32 1
  %397 = load i8, i8* %type, align 1
  %idxprom619 = zext i8 %397 to i64
  %arrayidx620 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom619
  %398 = load i8, i8* %arrayidx620, align 1
  %conv621 = zext i8 %398 to i32
  %cmp622 = icmp ne i32 %conv621, 72
  br i1 %cmp622, label %if.then624, label %if.end816

if.then624:                                       ; preds = %land.lhs.true617
  %399 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %regstclass625 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %399, i32 0, i32 2
  %400 = load %struct.regnode*, %struct.regnode** %regstclass625, align 8
  %401 = bitcast %struct.regnode* %400 to %struct.regnode_string*
  %string = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %401, i32 0, i32 3
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %string, i64 0, i64 0
  store i8* %arraydecay, i8** %str, align 8
  %402 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %regstclass626 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %402, i32 0, i32 2
  %403 = load %struct.regnode*, %struct.regnode** %regstclass626, align 8
  %type627 = getelementptr inbounds %struct.regnode, %struct.regnode* %403, i32 0, i32 1
  %404 = load i8, i8* %type627, align 1
  %idxprom628 = zext i8 %404 to i64
  %arrayidx629 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom628
  %405 = load i8, i8* %arrayidx629, align 1
  %conv630 = zext i8 %405 to i32
  %cmp631 = icmp eq i32 %conv630, 31
  br i1 %cmp631, label %cond.true633, label %cond.false649

cond.true633:                                     ; preds = %if.then624
  %406 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_pat634 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %406, i32 0, i32 13
  %407 = load i8, i8* %is_utf8_pat634, align 1
  %tobool635 = trunc i8 %407 to i1
  br i1 %tobool635, label %cond.true637, label %cond.false643

cond.true637:                                     ; preds = %cond.true633
  %408 = load i8*, i8** %str, align 8
  %409 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %regstclass638 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %409, i32 0, i32 2
  %410 = load %struct.regnode*, %struct.regnode** %regstclass638, align 8
  %411 = bitcast %struct.regnode* %410 to %struct.regnode_string*
  %str_len = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %411, i32 0, i32 0
  %412 = load i8, i8* %str_len, align 2
  %conv639 = zext i8 %412 to i32
  %idx.ext640 = sext i32 %conv639 to i64
  %add.ptr641 = getelementptr inbounds i8, i8* %408, i64 %idx.ext640
  %413 = load i8*, i8** %str, align 8
  %call642 = call i64 @Perl_utf8_distance(i8* %add.ptr641, i8* %413)
  br label %cond.end647

cond.false643:                                    ; preds = %cond.true633
  %414 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %regstclass644 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %414, i32 0, i32 2
  %415 = load %struct.regnode*, %struct.regnode** %regstclass644, align 8
  %416 = bitcast %struct.regnode* %415 to %struct.regnode_string*
  %str_len645 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %416, i32 0, i32 0
  %417 = load i8, i8* %str_len645, align 2
  %conv646 = zext i8 %417 to i64
  br label %cond.end647

cond.end647:                                      ; preds = %cond.false643, %cond.true637
  %cond648 = phi i64 [ %call642, %cond.true637 ], [ %conv646, %cond.false643 ]
  br label %cond.end650

cond.false649:                                    ; preds = %if.then624
  br label %cond.end650

cond.end650:                                      ; preds = %cond.false649, %cond.end647
  %cond651 = phi i64 [ %cond648, %cond.end647 ], [ 1, %cond.false649 ]
  %conv652 = trunc i64 %cond651 to i32
  store i32 %conv652, i32* %cl_l, align 4
  store i8* null, i8** %rx_max_float, align 8
  %418 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs654 = getelementptr inbounds %struct.regexp, %struct.regexp* %418, i32 0, i32 11
  %419 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs654, align 8
  %data655 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %419, i32 0, i32 1
  %arrayidx656 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data655, i64 0, i64 0
  %substr657 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx656, i32 0, i32 2
  %420 = load %struct.sv*, %struct.sv** %substr657, align 8
  %tobool658 = icmp ne %struct.sv* %420, null
  br i1 %tobool658, label %if.then668, label %lor.lhs.false659

lor.lhs.false659:                                 ; preds = %cond.end650
  %421 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs660 = getelementptr inbounds %struct.regexp, %struct.regexp* %421, i32 0, i32 11
  %422 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs660, align 8
  %data661 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %422, i32 0, i32 1
  %arrayidx662 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data661, i64 0, i64 0
  %utf8_substr663 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx662, i32 0, i32 3
  %423 = load %struct.sv*, %struct.sv** %utf8_substr663, align 8
  %tobool664 = icmp ne %struct.sv* %423, null
  br i1 %tobool664, label %if.then668, label %lor.lhs.false665

lor.lhs.false665:                                 ; preds = %lor.lhs.false659
  %424 = load i8, i8* %ml_anch, align 1
  %tobool666 = trunc i8 %424 to i1
  br i1 %tobool666, label %if.then668, label %if.else692

if.then668:                                       ; preds = %lor.lhs.false665, %lor.lhs.false659, %cond.end650
  %425 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target669 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %425, i32 0, i32 14
  %426 = load i8, i8* %is_utf8_target669, align 2
  %tobool670 = trunc i8 %426 to i1
  br i1 %tobool670, label %cond.true672, label %cond.false681

cond.true672:                                     ; preds = %if.then668
  %427 = load i8*, i8** %rx_origin, align 8
  %428 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %minlen673 = getelementptr inbounds %struct.regexp, %struct.regexp* %428, i32 0, i32 8
  %429 = load i64, i64* %minlen673, align 8
  %tobool674 = icmp ne i64 %429, 0
  br i1 %tobool674, label %cond.true675, label %cond.false676

cond.true675:                                     ; preds = %cond.true672
  %430 = load i32, i32* %cl_l, align 4
  br label %cond.end677

cond.false676:                                    ; preds = %cond.true672
  br label %cond.end677

cond.end677:                                      ; preds = %cond.false676, %cond.true675
  %cond678 = phi i32 [ %430, %cond.true675 ], [ 0, %cond.false676 ]
  %conv679 = sext i32 %cond678 to i64
  %431 = load i8*, i8** %strend.addr, align 8
  %call680 = call i8* @S_reghop3(i8* %427, i64 %conv679, i8* %431)
  br label %cond.end690

cond.false681:                                    ; preds = %if.then668
  %432 = load i8*, i8** %rx_origin, align 8
  %433 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %minlen682 = getelementptr inbounds %struct.regexp, %struct.regexp* %433, i32 0, i32 8
  %434 = load i64, i64* %minlen682, align 8
  %tobool683 = icmp ne i64 %434, 0
  br i1 %tobool683, label %cond.true684, label %cond.false685

cond.true684:                                     ; preds = %cond.false681
  %435 = load i32, i32* %cl_l, align 4
  br label %cond.end686

cond.false685:                                    ; preds = %cond.false681
  br label %cond.end686

cond.end686:                                      ; preds = %cond.false685, %cond.true684
  %cond687 = phi i32 [ %435, %cond.true684 ], [ 0, %cond.false685 ]
  %idx.ext688 = sext i32 %cond687 to i64
  %add.ptr689 = getelementptr inbounds i8, i8* %432, i64 %idx.ext688
  br label %cond.end690

cond.end690:                                      ; preds = %cond.end686, %cond.end677
  %cond691 = phi i8* [ %call680, %cond.end677 ], [ %add.ptr689, %cond.end686 ]
  store i8* %cond691, i8** %endpos, align 8
  br label %if.end729

if.else692:                                       ; preds = %lor.lhs.false665
  %436 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs693 = getelementptr inbounds %struct.regexp, %struct.regexp* %436, i32 0, i32 11
  %437 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs693, align 8
  %data694 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %437, i32 0, i32 1
  %arrayidx695 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data694, i64 0, i64 1
  %substr696 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx695, i32 0, i32 2
  %438 = load %struct.sv*, %struct.sv** %substr696, align 8
  %tobool697 = icmp ne %struct.sv* %438, null
  br i1 %tobool697, label %if.then704, label %lor.lhs.false698

lor.lhs.false698:                                 ; preds = %if.else692
  %439 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs699 = getelementptr inbounds %struct.regexp, %struct.regexp* %439, i32 0, i32 11
  %440 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs699, align 8
  %data700 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %440, i32 0, i32 1
  %arrayidx701 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data700, i64 0, i64 1
  %utf8_substr702 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx701, i32 0, i32 3
  %441 = load %struct.sv*, %struct.sv** %utf8_substr702, align 8
  %tobool703 = icmp ne %struct.sv* %441, null
  br i1 %tobool703, label %if.then704, label %if.else727

if.then704:                                       ; preds = %lor.lhs.false698, %if.else692
  %442 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target705 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %442, i32 0, i32 14
  %443 = load i8, i8* %is_utf8_target705, align 2
  %tobool706 = trunc i8 %443 to i1
  br i1 %tobool706, label %cond.true708, label %cond.false711

cond.true708:                                     ; preds = %if.then704
  %444 = load i8*, i8** %check_at, align 8
  %445 = load i64, i64* %start_shift, align 8
  %sub709 = sub nsw i64 0, %445
  %446 = load i8*, i8** %strbeg.addr, align 8
  %call710 = call i8* @S_reghop3(i8* %444, i64 %sub709, i8* %446)
  br label %cond.end714

cond.false711:                                    ; preds = %if.then704
  %447 = load i8*, i8** %check_at, align 8
  %448 = load i64, i64* %start_shift, align 8
  %sub712 = sub nsw i64 0, %448
  %add.ptr713 = getelementptr inbounds i8, i8* %447, i64 %sub712
  br label %cond.end714

cond.end714:                                      ; preds = %cond.false711, %cond.true708
  %cond715 = phi i8* [ %call710, %cond.true708 ], [ %add.ptr713, %cond.false711 ]
  store i8* %cond715, i8** %rx_max_float, align 8
  %449 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target716 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %449, i32 0, i32 14
  %450 = load i8, i8* %is_utf8_target716, align 2
  %tobool717 = trunc i8 %450 to i1
  br i1 %tobool717, label %cond.true719, label %cond.false722

cond.true719:                                     ; preds = %cond.end714
  %451 = load i8*, i8** %rx_max_float, align 8
  %452 = load i32, i32* %cl_l, align 4
  %conv720 = sext i32 %452 to i64
  %453 = load i8*, i8** %strend.addr, align 8
  %call721 = call i8* @S_reghop3(i8* %451, i64 %conv720, i8* %453)
  br label %cond.end725

cond.false722:                                    ; preds = %cond.end714
  %454 = load i8*, i8** %rx_max_float, align 8
  %455 = load i32, i32* %cl_l, align 4
  %idx.ext723 = sext i32 %455 to i64
  %add.ptr724 = getelementptr inbounds i8, i8* %454, i64 %idx.ext723
  br label %cond.end725

cond.end725:                                      ; preds = %cond.false722, %cond.true719
  %cond726 = phi i8* [ %call721, %cond.true719 ], [ %add.ptr724, %cond.false722 ]
  store i8* %cond726, i8** %endpos, align 8
  br label %if.end728

if.else727:                                       ; preds = %lor.lhs.false698
  %456 = load i8*, i8** %strend.addr, align 8
  store i8* %456, i8** %endpos, align 8
  br label %if.end728

if.end728:                                        ; preds = %if.else727, %cond.end725
  br label %if.end729

if.end729:                                        ; preds = %if.end728, %cond.end690
  %457 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %458 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %regstclass730 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %458, i32 0, i32 2
  %459 = load %struct.regnode*, %struct.regnode** %regstclass730, align 8
  %460 = load i8*, i8** %rx_origin, align 8
  %461 = load i8*, i8** %endpos, align 8
  %462 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %call731 = call i8* @S_find_byclass(%struct.regexp* %457, %struct.regnode* %459, i8* %460, i8* %461, %struct.regmatch_info* %462)
  store i8* %call731, i8** %s653, align 8
  %463 = load i8*, i8** %s653, align 8
  %tobool732 = icmp ne i8* %463, null
  br i1 %tobool732, label %if.end810, label %if.then733

if.then733:                                       ; preds = %if.end729
  %464 = load i8*, i8** %endpos, align 8
  %465 = load i8*, i8** %strend.addr, align 8
  %cmp734 = icmp eq i8* %464, %465
  br i1 %cmp734, label %if.then736, label %if.end737

if.then736:                                       ; preds = %if.then733
  br label %fail

if.end737:                                        ; preds = %if.then733
  %466 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags738 = getelementptr inbounds %struct.regexp, %struct.regexp* %466, i32 0, i32 13
  %467 = load i32, i32* %intflags738, align 4
  %and739 = and i32 %467, 7168
  %tobool740 = icmp ne i32 %and739, 0
  br i1 %tobool740, label %land.lhs.true741, label %if.end748

land.lhs.true741:                                 ; preds = %if.end737
  %468 = load i8, i8* %ml_anch, align 1
  %tobool742 = trunc i8 %468 to i1
  br i1 %tobool742, label %if.end748, label %land.lhs.true743

land.lhs.true743:                                 ; preds = %land.lhs.true741
  %469 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags744 = getelementptr inbounds %struct.regexp, %struct.regexp* %469, i32 0, i32 13
  %470 = load i32, i32* %intflags744, align 4
  %and745 = and i32 %470, 2
  %tobool746 = icmp ne i32 %and745, 0
  br i1 %tobool746, label %if.end748, label %if.then747

if.then747:                                       ; preds = %land.lhs.true743
  br label %fail

if.end748:                                        ; preds = %land.lhs.true743, %land.lhs.true741, %if.end737
  %471 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs749 = getelementptr inbounds %struct.regexp, %struct.regexp* %471, i32 0, i32 11
  %472 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs749, align 8
  %data750 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %472, i32 0, i32 1
  %arrayidx751 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data750, i64 0, i64 0
  %substr752 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx751, i32 0, i32 2
  %473 = load %struct.sv*, %struct.sv** %substr752, align 8
  %tobool753 = icmp ne %struct.sv* %473, null
  br i1 %tobool753, label %if.then760, label %lor.lhs.false754

lor.lhs.false754:                                 ; preds = %if.end748
  %474 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs755 = getelementptr inbounds %struct.regexp, %struct.regexp* %474, i32 0, i32 11
  %475 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs755, align 8
  %data756 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %475, i32 0, i32 1
  %arrayidx757 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data756, i64 0, i64 0
  %utf8_substr758 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx757, i32 0, i32 3
  %476 = load %struct.sv*, %struct.sv** %utf8_substr758, align 8
  %tobool759 = icmp ne %struct.sv* %476, null
  br i1 %tobool759, label %if.then760, label %if.else773

if.then760:                                       ; preds = %lor.lhs.false754, %if.end748
  %477 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs761 = getelementptr inbounds %struct.regexp, %struct.regexp* %477, i32 0, i32 11
  %478 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs761, align 8
  %check_ix762 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %478, i32 0, i32 0
  %479 = load i8, i8* %check_ix762, align 8
  %conv763 = zext i8 %479 to i32
  %cmp764 = icmp eq i32 %conv763, 1
  br i1 %cmp764, label %if.then766, label %if.end772

if.then766:                                       ; preds = %if.then760
  %480 = load i8*, i8** %rx_origin, align 8
  %481 = load i64, i64* %start_shift, align 8
  %add.ptr767 = getelementptr inbounds i8, i8* %480, i64 %481
  %482 = load i8*, i8** %check_at, align 8
  %cmp768 = icmp ne i8* %add.ptr767, %482
  br i1 %cmp768, label %if.then770, label %if.end771

if.then770:                                       ; preds = %if.then766
  br label %do_other_substr

if.end771:                                        ; preds = %if.then766
  br label %if.end772

if.end772:                                        ; preds = %if.end771, %if.then760
  br label %if.end794

if.else773:                                       ; preds = %lor.lhs.false754
  %483 = load i8, i8* %ml_anch, align 1
  %tobool774 = trunc i8 %483 to i1
  br i1 %tobool774, label %if.then775, label %if.end777

if.then775:                                       ; preds = %if.else773
  %484 = load i8*, i8** %rx_origin, align 8
  %incdec.ptr776 = getelementptr inbounds i8, i8* %484, i32 1
  store i8* %incdec.ptr776, i8** %rx_origin, align 8
  br label %postprocess_substr_matches

if.end777:                                        ; preds = %if.else773
  %485 = load i8, i8* %utf8_target, align 1
  %tobool778 = trunc i8 %485 to i1
  br i1 %tobool778, label %cond.true780, label %cond.false786

cond.true780:                                     ; preds = %if.end777
  %486 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs781 = getelementptr inbounds %struct.regexp, %struct.regexp* %486, i32 0, i32 11
  %487 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs781, align 8
  %data782 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %487, i32 0, i32 1
  %arrayidx783 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data782, i64 0, i64 1
  %utf8_substr784 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx783, i32 0, i32 3
  %488 = load %struct.sv*, %struct.sv** %utf8_substr784, align 8
  %tobool785 = icmp ne %struct.sv* %488, null
  br i1 %tobool785, label %if.end793, label %if.then792

cond.false786:                                    ; preds = %if.end777
  %489 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs787 = getelementptr inbounds %struct.regexp, %struct.regexp* %489, i32 0, i32 11
  %490 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs787, align 8
  %data788 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %490, i32 0, i32 1
  %arrayidx789 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data788, i64 0, i64 1
  %substr790 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx789, i32 0, i32 2
  %491 = load %struct.sv*, %struct.sv** %substr790, align 8
  %tobool791 = icmp ne %struct.sv* %491, null
  br i1 %tobool791, label %if.end793, label %if.then792

if.then792:                                       ; preds = %cond.false786, %cond.true780
  br label %fail

if.end793:                                        ; preds = %cond.false786, %cond.true780
  %492 = load i8*, i8** %rx_max_float, align 8
  store i8* %492, i8** %rx_origin, align 8
  br label %if.end794

if.end794:                                        ; preds = %if.end793, %if.end772
  %493 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target795 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %493, i32 0, i32 14
  %494 = load i8, i8* %is_utf8_target795, align 2
  %tobool796 = trunc i8 %494 to i1
  br i1 %tobool796, label %cond.true798, label %cond.false800

cond.true798:                                     ; preds = %if.end794
  %495 = load i8*, i8** %rx_origin, align 8
  %496 = load i8*, i8** %strend.addr, align 8
  %call799 = call i8* @S_reghop3(i8* %495, i64 1, i8* %496)
  br label %cond.end802

cond.false800:                                    ; preds = %if.end794
  %497 = load i8*, i8** %rx_origin, align 8
  %add.ptr801 = getelementptr inbounds i8, i8* %497, i64 1
  br label %cond.end802

cond.end802:                                      ; preds = %cond.false800, %cond.true798
  %cond803 = phi i8* [ %call799, %cond.true798 ], [ %add.ptr801, %cond.false800 ]
  store i8* %cond803, i8** %rx_origin, align 8
  %498 = load i8*, i8** %rx_origin, align 8
  %499 = load i64, i64* %start_shift, align 8
  %add.ptr804 = getelementptr inbounds i8, i8* %498, i64 %499
  %500 = load i64, i64* %end_shift, align 8
  %add.ptr805 = getelementptr inbounds i8, i8* %add.ptr804, i64 %500
  %501 = load i8*, i8** %strend.addr, align 8
  %cmp806 = icmp ugt i8* %add.ptr805, %501
  br i1 %cmp806, label %if.then808, label %if.end809

if.then808:                                       ; preds = %cond.end802
  br label %fail

if.end809:                                        ; preds = %cond.end802
  br label %restart

if.end810:                                        ; preds = %if.end729
  %502 = load i8*, i8** %rx_origin, align 8
  %503 = load i8*, i8** %s653, align 8
  %cmp811 = icmp ne i8* %502, %503
  br i1 %cmp811, label %if.then813, label %if.else814

if.then813:                                       ; preds = %if.end810
  br label %if.end815

if.else814:                                       ; preds = %if.end810
  br label %if.end815

if.end815:                                        ; preds = %if.else814, %if.then813
  br label %if.end816

if.end816:                                        ; preds = %if.end815, %land.lhs.true617, %success_at_start
  %504 = load i8*, i8** %rx_origin, align 8
  %505 = load i8*, i8** %strpos.addr, align 8
  %cmp817 = icmp ne i8* %504, %505
  br i1 %cmp817, label %if.then819, label %if.else835

if.then819:                                       ; preds = %if.end816
  %506 = load i8, i8* %utf8_target, align 1
  %tobool820 = trunc i8 %506 to i1
  br i1 %tobool820, label %cond.true822, label %cond.false827

cond.true822:                                     ; preds = %if.then819
  %507 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs823 = getelementptr inbounds %struct.regexp, %struct.regexp* %507, i32 0, i32 11
  %508 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs823, align 8
  %data824 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %508, i32 0, i32 1
  %arrayidx825 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data824, i64 0, i64 2
  %utf8_substr826 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx825, i32 0, i32 3
  %509 = load %struct.sv*, %struct.sv** %utf8_substr826, align 8
  br label %cond.end832

cond.false827:                                    ; preds = %if.then819
  %510 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs828 = getelementptr inbounds %struct.regexp, %struct.regexp* %510, i32 0, i32 11
  %511 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs828, align 8
  %data829 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %511, i32 0, i32 1
  %arrayidx830 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data829, i64 0, i64 2
  %substr831 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx830, i32 0, i32 2
  %512 = load %struct.sv*, %struct.sv** %substr831, align 8
  br label %cond.end832

cond.end832:                                      ; preds = %cond.false827, %cond.true822
  %cond833 = phi %struct.sv* [ %509, %cond.true822 ], [ %512, %cond.false827 ]
  %sv_any834 = getelementptr inbounds %struct.sv, %struct.sv* %cond833, i32 0, i32 0
  %513 = load i8*, i8** %sv_any834, align 8
  %514 = bitcast i8* %513 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %514, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %515 = load i64, i64* %xivu_iv, align 8
  %inc = add nsw i64 %515, 1
  store i64 %inc, i64* %xivu_iv, align 8
  br label %if.end946

if.else835:                                       ; preds = %if.end816
  %516 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags836 = getelementptr inbounds %struct.regexp, %struct.regexp* %516, i32 0, i32 13
  %517 = load i32, i32* %intflags836, align 4
  %and837 = and i32 %517, 4
  %tobool838 = icmp ne i32 %and837, 0
  br i1 %tobool838, label %if.end945, label %land.lhs.true839

land.lhs.true839:                                 ; preds = %if.else835
  %518 = load i8, i8* %utf8_target, align 1
  %tobool840 = trunc i8 %518 to i1
  br i1 %tobool840, label %cond.true842, label %cond.false870

cond.true842:                                     ; preds = %land.lhs.true839
  %519 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs843 = getelementptr inbounds %struct.regexp, %struct.regexp* %519, i32 0, i32 11
  %520 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs843, align 8
  %data844 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %520, i32 0, i32 1
  %arrayidx845 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data844, i64 0, i64 2
  %utf8_substr846 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx845, i32 0, i32 3
  %521 = load %struct.sv*, %struct.sv** %utf8_substr846, align 8
  %tobool847 = icmp ne %struct.sv* %521, null
  br i1 %tobool847, label %land.lhs.true848, label %if.end945

land.lhs.true848:                                 ; preds = %cond.true842
  %522 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs849 = getelementptr inbounds %struct.regexp, %struct.regexp* %522, i32 0, i32 11
  %523 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs849, align 8
  %data850 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %523, i32 0, i32 1
  %arrayidx851 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data850, i64 0, i64 2
  %utf8_substr852 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx851, i32 0, i32 3
  %524 = load %struct.sv*, %struct.sv** %utf8_substr852, align 8
  %sv_any853 = getelementptr inbounds %struct.sv, %struct.sv* %524, i32 0, i32 0
  %525 = load i8*, i8** %sv_any853, align 8
  %526 = bitcast i8* %525 to %struct.xpviv*
  %xiv_u854 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %526, i32 0, i32 4
  %xivu_iv855 = bitcast %union._xivu* %xiv_u854 to i64*
  %527 = load i64, i64* %xivu_iv855, align 8
  %dec856 = add nsw i64 %527, -1
  store i64 %dec856, i64* %xivu_iv855, align 8
  %cmp857 = icmp slt i64 %dec856, 0
  br i1 %cmp857, label %land.lhs.true859, label %if.end945

land.lhs.true859:                                 ; preds = %land.lhs.true848
  %528 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs860 = getelementptr inbounds %struct.regexp, %struct.regexp* %528, i32 0, i32 11
  %529 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs860, align 8
  %data861 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %529, i32 0, i32 1
  %arrayidx862 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data861, i64 0, i64 2
  %utf8_substr863 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx862, i32 0, i32 3
  %530 = load %struct.sv*, %struct.sv** %utf8_substr863, align 8
  %531 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs864 = getelementptr inbounds %struct.regexp, %struct.regexp* %531, i32 0, i32 11
  %532 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs864, align 8
  %data865 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %532, i32 0, i32 1
  %arrayidx866 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data865, i64 0, i64 1
  %utf8_substr867 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx866, i32 0, i32 3
  %533 = load %struct.sv*, %struct.sv** %utf8_substr867, align 8
  %cmp868 = icmp eq %struct.sv* %530, %533
  br i1 %cmp868, label %if.then898, label %if.end945

cond.false870:                                    ; preds = %land.lhs.true839
  %534 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs871 = getelementptr inbounds %struct.regexp, %struct.regexp* %534, i32 0, i32 11
  %535 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs871, align 8
  %data872 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %535, i32 0, i32 1
  %arrayidx873 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data872, i64 0, i64 2
  %substr874 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx873, i32 0, i32 2
  %536 = load %struct.sv*, %struct.sv** %substr874, align 8
  %tobool875 = icmp ne %struct.sv* %536, null
  br i1 %tobool875, label %land.lhs.true876, label %if.end945

land.lhs.true876:                                 ; preds = %cond.false870
  %537 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs877 = getelementptr inbounds %struct.regexp, %struct.regexp* %537, i32 0, i32 11
  %538 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs877, align 8
  %data878 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %538, i32 0, i32 1
  %arrayidx879 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data878, i64 0, i64 2
  %substr880 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx879, i32 0, i32 2
  %539 = load %struct.sv*, %struct.sv** %substr880, align 8
  %sv_any881 = getelementptr inbounds %struct.sv, %struct.sv* %539, i32 0, i32 0
  %540 = load i8*, i8** %sv_any881, align 8
  %541 = bitcast i8* %540 to %struct.xpviv*
  %xiv_u882 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %541, i32 0, i32 4
  %xivu_iv883 = bitcast %union._xivu* %xiv_u882 to i64*
  %542 = load i64, i64* %xivu_iv883, align 8
  %dec884 = add nsw i64 %542, -1
  store i64 %dec884, i64* %xivu_iv883, align 8
  %cmp885 = icmp slt i64 %dec884, 0
  br i1 %cmp885, label %land.lhs.true887, label %if.end945

land.lhs.true887:                                 ; preds = %land.lhs.true876
  %543 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs888 = getelementptr inbounds %struct.regexp, %struct.regexp* %543, i32 0, i32 11
  %544 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs888, align 8
  %data889 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %544, i32 0, i32 1
  %arrayidx890 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data889, i64 0, i64 2
  %substr891 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx890, i32 0, i32 2
  %545 = load %struct.sv*, %struct.sv** %substr891, align 8
  %546 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs892 = getelementptr inbounds %struct.regexp, %struct.regexp* %546, i32 0, i32 11
  %547 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs892, align 8
  %data893 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %547, i32 0, i32 1
  %arrayidx894 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data893, i64 0, i64 1
  %substr895 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx894, i32 0, i32 2
  %548 = load %struct.sv*, %struct.sv** %substr895, align 8
  %cmp896 = icmp eq %struct.sv* %545, %548
  br i1 %cmp896, label %if.then898, label %if.end945

if.then898:                                       ; preds = %land.lhs.true887, %land.lhs.true859
  %549 = load i8, i8* %utf8_target, align 1
  %tobool899 = trunc i8 %549 to i1
  br i1 %tobool899, label %cond.true901, label %cond.false906

cond.true901:                                     ; preds = %if.then898
  %550 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs902 = getelementptr inbounds %struct.regexp, %struct.regexp* %550, i32 0, i32 11
  %551 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs902, align 8
  %data903 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %551, i32 0, i32 1
  %arrayidx904 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data903, i64 0, i64 2
  %utf8_substr905 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx904, i32 0, i32 3
  %552 = load %struct.sv*, %struct.sv** %utf8_substr905, align 8
  br label %cond.end911

cond.false906:                                    ; preds = %if.then898
  %553 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs907 = getelementptr inbounds %struct.regexp, %struct.regexp* %553, i32 0, i32 11
  %554 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs907, align 8
  %data908 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %554, i32 0, i32 1
  %arrayidx909 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data908, i64 0, i64 2
  %substr910 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx909, i32 0, i32 2
  %555 = load %struct.sv*, %struct.sv** %substr910, align 8
  br label %cond.end911

cond.end911:                                      ; preds = %cond.false906, %cond.true901
  %cond912 = phi %struct.sv* [ %552, %cond.true901 ], [ %555, %cond.false906 ]
  %556 = bitcast %struct.sv* %cond912 to i8*
  %557 = bitcast i8* %556 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %557)
  %558 = load i8, i8* %utf8_target, align 1
  %tobool913 = trunc i8 %558 to i1
  br i1 %tobool913, label %cond.true915, label %cond.false920

cond.true915:                                     ; preds = %cond.end911
  %559 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs916 = getelementptr inbounds %struct.regexp, %struct.regexp* %559, i32 0, i32 11
  %560 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs916, align 8
  %data917 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %560, i32 0, i32 1
  %arrayidx918 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data917, i64 0, i64 2
  %substr919 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx918, i32 0, i32 2
  %561 = load %struct.sv*, %struct.sv** %substr919, align 8
  br label %cond.end925

cond.false920:                                    ; preds = %cond.end911
  %562 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs921 = getelementptr inbounds %struct.regexp, %struct.regexp* %562, i32 0, i32 11
  %563 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs921, align 8
  %data922 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %563, i32 0, i32 1
  %arrayidx923 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data922, i64 0, i64 2
  %utf8_substr924 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx923, i32 0, i32 3
  %564 = load %struct.sv*, %struct.sv** %utf8_substr924, align 8
  br label %cond.end925

cond.end925:                                      ; preds = %cond.false920, %cond.true915
  %cond926 = phi %struct.sv* [ %561, %cond.true915 ], [ %564, %cond.false920 ]
  %565 = bitcast %struct.sv* %cond926 to i8*
  %566 = bitcast i8* %565 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %566)
  %567 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs927 = getelementptr inbounds %struct.regexp, %struct.regexp* %567, i32 0, i32 11
  %568 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs927, align 8
  %data928 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %568, i32 0, i32 1
  %arrayidx929 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data928, i64 0, i64 2
  %utf8_substr930 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx929, i32 0, i32 3
  store %struct.sv* null, %struct.sv** %utf8_substr930, align 8
  %569 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs931 = getelementptr inbounds %struct.regexp, %struct.regexp* %569, i32 0, i32 11
  %570 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs931, align 8
  %data932 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %570, i32 0, i32 1
  %arrayidx933 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data932, i64 0, i64 2
  %substr934 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx933, i32 0, i32 2
  store %struct.sv* null, %struct.sv** %substr934, align 8
  %571 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs935 = getelementptr inbounds %struct.regexp, %struct.regexp* %571, i32 0, i32 11
  %572 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs935, align 8
  %data936 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %572, i32 0, i32 1
  %arrayidx937 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data936, i64 0, i64 1
  %utf8_substr938 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx937, i32 0, i32 3
  store %struct.sv* null, %struct.sv** %utf8_substr938, align 8
  %573 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs939 = getelementptr inbounds %struct.regexp, %struct.regexp* %573, i32 0, i32 11
  %574 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs939, align 8
  %data940 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %574, i32 0, i32 1
  %arrayidx941 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data940, i64 0, i64 1
  %substr942 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx941, i32 0, i32 2
  store %struct.sv* null, %struct.sv** %substr942, align 8
  store %struct.sv* null, %struct.sv** %check, align 8
  %575 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags943 = getelementptr inbounds %struct.regexp, %struct.regexp* %575, i32 0, i32 7
  %576 = load i32, i32* %extflags943, align 8
  %and944 = and i32 %576, -6291457
  store i32 %and944, i32* %extflags943, align 8
  br label %if.end945

if.end945:                                        ; preds = %cond.end925, %land.lhs.true887, %land.lhs.true876, %cond.false870, %land.lhs.true859, %land.lhs.true848, %cond.true842, %if.else835
  br label %if.end946

if.end946:                                        ; preds = %if.end945, %cond.end832
  %577 = load i8*, i8** %rx_origin, align 8
  store i8* %577, i8** %retval, align 8
  br label %return

fail_finish:                                      ; preds = %if.then567, %if.then464, %if.then302, %if.then218, %if.then187, %if.then170, %if.then151
  %578 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs947 = getelementptr inbounds %struct.regexp, %struct.regexp* %578, i32 0, i32 11
  %579 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs947, align 8
  %data948 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %579, i32 0, i32 1
  %arrayidx949 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data948, i64 0, i64 2
  %substr950 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx949, i32 0, i32 2
  %580 = load %struct.sv*, %struct.sv** %substr950, align 8
  %tobool951 = icmp ne %struct.sv* %580, null
  br i1 %tobool951, label %if.then958, label %lor.lhs.false952

lor.lhs.false952:                                 ; preds = %fail_finish
  %581 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs953 = getelementptr inbounds %struct.regexp, %struct.regexp* %581, i32 0, i32 11
  %582 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs953, align 8
  %data954 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %582, i32 0, i32 1
  %arrayidx955 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data954, i64 0, i64 2
  %utf8_substr956 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx955, i32 0, i32 3
  %583 = load %struct.sv*, %struct.sv** %utf8_substr956, align 8
  %tobool957 = icmp ne %struct.sv* %583, null
  br i1 %tobool957, label %if.then958, label %if.end976

if.then958:                                       ; preds = %lor.lhs.false952, %fail_finish
  %584 = load i8, i8* %utf8_target, align 1
  %tobool959 = trunc i8 %584 to i1
  br i1 %tobool959, label %cond.true961, label %cond.false966

cond.true961:                                     ; preds = %if.then958
  %585 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs962 = getelementptr inbounds %struct.regexp, %struct.regexp* %585, i32 0, i32 11
  %586 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs962, align 8
  %data963 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %586, i32 0, i32 1
  %arrayidx964 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data963, i64 0, i64 2
  %utf8_substr965 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx964, i32 0, i32 3
  %587 = load %struct.sv*, %struct.sv** %utf8_substr965, align 8
  br label %cond.end971

cond.false966:                                    ; preds = %if.then958
  %588 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs967 = getelementptr inbounds %struct.regexp, %struct.regexp* %588, i32 0, i32 11
  %589 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs967, align 8
  %data968 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %589, i32 0, i32 1
  %arrayidx969 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data968, i64 0, i64 2
  %substr970 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx969, i32 0, i32 2
  %590 = load %struct.sv*, %struct.sv** %substr970, align 8
  br label %cond.end971

cond.end971:                                      ; preds = %cond.false966, %cond.true961
  %cond972 = phi %struct.sv* [ %587, %cond.true961 ], [ %590, %cond.false966 ]
  %sv_any973 = getelementptr inbounds %struct.sv, %struct.sv* %cond972, i32 0, i32 0
  %591 = load i8*, i8** %sv_any973, align 8
  %592 = bitcast i8* %591 to %struct.xpviv*
  %xiv_u974 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %592, i32 0, i32 4
  %xivu_iv975 = bitcast %union._xivu* %xiv_u974 to i64*
  %593 = load i64, i64* %xivu_iv975, align 8
  %add = add nsw i64 %593, 5
  store i64 %add, i64* %xivu_iv975, align 8
  br label %if.end976

if.end976:                                        ; preds = %cond.end971, %lor.lhs.false952
  br label %fail

fail:                                             ; preds = %if.end976, %if.then808, %if.then792, %if.then747, %if.then736, %if.then90, %do.body, %if.then
  store i8* null, i8** %retval, align 8
  br label %return

return:                                           ; preds = %fail, %if.end946
  %594 = load i8*, i8** %retval, align 8
  ret i8* %594
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.regexp* @S_ReANY(%struct.p5rx* %re) #0 {
entry:
  %re.addr = alloca %struct.p5rx*, align 8
  store %struct.p5rx* %re, %struct.p5rx** %re.addr, align 8
  %0 = load %struct.p5rx*, %struct.p5rx** %re.addr, align 8
  %sv_u = getelementptr inbounds %struct.p5rx, %struct.p5rx* %0, i32 0, i32 3
  %svu_rx = bitcast %union.anon.7* %sv_u to %struct.regexp**
  %1 = load %struct.regexp*, %struct.regexp** %svu_rx, align 8
  ret %struct.regexp* %1
}

; Function Attrs: noinline nounwind uwtable
define internal void @S_to_utf8_substr(%struct.regexp* %prog) #0 {
entry:
  %prog.addr = alloca %struct.regexp*, align 8
  %i = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  store %struct.regexp* %prog, %struct.regexp** %prog.addr, align 8
  store i32 1, i32* %i, align 4
  br label %do.body

do.body:                                          ; preds = %do.cond, %entry
  %0 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs = getelementptr inbounds %struct.regexp, %struct.regexp* %0, i32 0, i32 11
  %1 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs, align 8
  %data = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %1, i32 0, i32 1
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data, i64 0, i64 %idxprom
  %substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx, i32 0, i32 2
  %3 = load %struct.sv*, %struct.sv** %substr, align 8
  %tobool = icmp ne %struct.sv* %3, null
  br i1 %tobool, label %land.lhs.true, label %if.end61

land.lhs.true:                                    ; preds = %do.body
  %4 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1 = getelementptr inbounds %struct.regexp, %struct.regexp* %4, i32 0, i32 11
  %5 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1, align 8
  %data2 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %5, i32 0, i32 1
  %6 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %6 to i64
  %arrayidx4 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data2, i64 0, i64 %idxprom3
  %utf8_substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx4, i32 0, i32 3
  %7 = load %struct.sv*, %struct.sv** %utf8_substr, align 8
  %tobool5 = icmp ne %struct.sv* %7, null
  br i1 %tobool5, label %if.end61, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs6 = getelementptr inbounds %struct.regexp, %struct.regexp* %8, i32 0, i32 11
  %9 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs6, align 8
  %data7 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %9, i32 0, i32 1
  %10 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %10 to i64
  %arrayidx9 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data7, i64 0, i64 %idxprom8
  %substr10 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx9, i32 0, i32 2
  %11 = load %struct.sv*, %struct.sv** %substr10, align 8
  %call = call %struct.sv* @Perl_newSVsv(%struct.sv* %11)
  store %struct.sv* %call, %struct.sv** %sv, align 8
  %12 = load %struct.sv*, %struct.sv** %sv, align 8
  %13 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs11 = getelementptr inbounds %struct.regexp, %struct.regexp* %13, i32 0, i32 11
  %14 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs11, align 8
  %data12 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %14, i32 0, i32 1
  %15 = load i32, i32* %i, align 4
  %idxprom13 = sext i32 %15 to i64
  %arrayidx14 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data12, i64 0, i64 %idxprom13
  %utf8_substr15 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx14, i32 0, i32 3
  store %struct.sv* %12, %struct.sv** %utf8_substr15, align 8
  %16 = load %struct.sv*, %struct.sv** %sv, align 8
  %call16 = call i64 @Perl_sv_utf8_upgrade_flags_grow(%struct.sv* %16, i32 2, i64 0)
  %17 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs17 = getelementptr inbounds %struct.regexp, %struct.regexp* %17, i32 0, i32 11
  %18 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs17, align 8
  %data18 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %18, i32 0, i32 1
  %19 = load i32, i32* %i, align 4
  %idxprom19 = sext i32 %19 to i64
  %arrayidx20 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data18, i64 0, i64 %idxprom19
  %substr21 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx20, i32 0, i32 2
  %20 = load %struct.sv*, %struct.sv** %substr21, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %20, i32 0, i32 2
  %21 = load i32, i32* %sv_flags, align 4
  %and = and i32 %21, 1073741824
  %tobool22 = icmp ne i32 %and, 0
  br i1 %tobool22, label %land.lhs.true23, label %if.end44

land.lhs.true23:                                  ; preds = %if.then
  %22 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs24 = getelementptr inbounds %struct.regexp, %struct.regexp* %22, i32 0, i32 11
  %23 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs24, align 8
  %data25 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %23, i32 0, i32 1
  %24 = load i32, i32* %i, align 4
  %idxprom26 = sext i32 %24 to i64
  %arrayidx27 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data25, i64 0, i64 %idxprom26
  %substr28 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx27, i32 0, i32 2
  %25 = load %struct.sv*, %struct.sv** %substr28, align 8
  %sv_flags29 = getelementptr inbounds %struct.sv, %struct.sv* %25, i32 0, i32 2
  %26 = load i32, i32* %sv_flags29, align 4
  %and30 = and i32 %26, 49152
  %cmp = icmp eq i32 %and30, 49152
  br i1 %cmp, label %if.end44, label %if.then31

if.then31:                                        ; preds = %land.lhs.true23
  %27 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs32 = getelementptr inbounds %struct.regexp, %struct.regexp* %27, i32 0, i32 11
  %28 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs32, align 8
  %data33 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %28, i32 0, i32 1
  %29 = load i32, i32* %i, align 4
  %idxprom34 = sext i32 %29 to i64
  %arrayidx35 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data33, i64 0, i64 %idxprom34
  %substr36 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx35, i32 0, i32 2
  %30 = load %struct.sv*, %struct.sv** %substr36, align 8
  %sv_flags37 = getelementptr inbounds %struct.sv, %struct.sv* %30, i32 0, i32 2
  %31 = load i32, i32* %sv_flags37, align 4
  %and38 = and i32 %31, -1073741824
  %cmp39 = icmp eq i32 %and38, -1073741824
  br i1 %cmp39, label %if.then40, label %if.else

if.then40:                                        ; preds = %if.then31
  br label %do.body41

do.body41:                                        ; preds = %if.then40
  %32 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %32, i32 0, i32 0
  %33 = load i8*, i8** %sv_any, align 8
  %34 = bitcast i8* %33 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %34, i32 0, i32 2
  %35 = load i64, i64* %xpv_cur, align 8
  %sub = sub i64 %35, 1
  %36 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any42 = getelementptr inbounds %struct.sv, %struct.sv* %36, i32 0, i32 0
  %37 = load i8*, i8** %sv_any42, align 8
  %38 = bitcast i8* %37 to %struct.xpv*
  %xpv_cur43 = getelementptr inbounds %struct.xpv, %struct.xpv* %38, i32 0, i32 2
  store i64 %sub, i64* %xpv_cur43, align 8
  br label %do.end

do.end:                                           ; preds = %do.body41
  %39 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_fbm_compile(%struct.sv* %39, i32 15)
  br label %if.end

if.else:                                          ; preds = %if.then31
  %40 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_fbm_compile(%struct.sv* %40, i32 0)
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %if.end44

if.end44:                                         ; preds = %if.end, %land.lhs.true23, %if.then
  %41 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs45 = getelementptr inbounds %struct.regexp, %struct.regexp* %41, i32 0, i32 11
  %42 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs45, align 8
  %data46 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %42, i32 0, i32 1
  %43 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %43 to i64
  %arrayidx48 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data46, i64 0, i64 %idxprom47
  %substr49 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx48, i32 0, i32 2
  %44 = load %struct.sv*, %struct.sv** %substr49, align 8
  %45 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs50 = getelementptr inbounds %struct.regexp, %struct.regexp* %45, i32 0, i32 11
  %46 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs50, align 8
  %data51 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %46, i32 0, i32 1
  %arrayidx52 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data51, i64 0, i64 2
  %substr53 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx52, i32 0, i32 2
  %47 = load %struct.sv*, %struct.sv** %substr53, align 8
  %cmp54 = icmp eq %struct.sv* %44, %47
  br i1 %cmp54, label %if.then55, label %if.end60

if.then55:                                        ; preds = %if.end44
  %48 = load %struct.sv*, %struct.sv** %sv, align 8
  %49 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs56 = getelementptr inbounds %struct.regexp, %struct.regexp* %49, i32 0, i32 11
  %50 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs56, align 8
  %data57 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %50, i32 0, i32 1
  %arrayidx58 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data57, i64 0, i64 2
  %utf8_substr59 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx58, i32 0, i32 3
  store %struct.sv* %48, %struct.sv** %utf8_substr59, align 8
  br label %if.end60

if.end60:                                         ; preds = %if.then55, %if.end44
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %land.lhs.true, %do.body
  br label %do.cond

do.cond:                                          ; preds = %if.end61
  %51 = load i32, i32* %i, align 4
  %dec = add nsw i32 %51, -1
  store i32 %dec, i32* %i, align 4
  %tobool62 = icmp ne i32 %51, 0
  br i1 %tobool62, label %do.body, label %do.end63

do.end63:                                         ; preds = %do.cond
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_to_byte_substr(%struct.regexp* %prog) #0 {
entry:
  %retval = alloca i1, align 1
  %prog.addr = alloca %struct.regexp*, align 8
  %i = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  store %struct.regexp* %prog, %struct.regexp** %prog.addr, align 8
  store i32 1, i32* %i, align 4
  br label %do.body

do.body:                                          ; preds = %do.cond, %entry
  %0 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs = getelementptr inbounds %struct.regexp, %struct.regexp* %0, i32 0, i32 11
  %1 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs, align 8
  %data = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %1, i32 0, i32 1
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data, i64 0, i64 %idxprom
  %utf8_substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx, i32 0, i32 3
  %3 = load %struct.sv*, %struct.sv** %utf8_substr, align 8
  %tobool = icmp ne %struct.sv* %3, null
  br i1 %tobool, label %land.lhs.true, label %if.end63

land.lhs.true:                                    ; preds = %do.body
  %4 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs1 = getelementptr inbounds %struct.regexp, %struct.regexp* %4, i32 0, i32 11
  %5 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs1, align 8
  %data2 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %5, i32 0, i32 1
  %6 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %6 to i64
  %arrayidx4 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data2, i64 0, i64 %idxprom3
  %substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx4, i32 0, i32 2
  %7 = load %struct.sv*, %struct.sv** %substr, align 8
  %tobool5 = icmp ne %struct.sv* %7, null
  br i1 %tobool5, label %if.end63, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs6 = getelementptr inbounds %struct.regexp, %struct.regexp* %8, i32 0, i32 11
  %9 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs6, align 8
  %data7 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %9, i32 0, i32 1
  %10 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %10 to i64
  %arrayidx9 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data7, i64 0, i64 %idxprom8
  %utf8_substr10 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx9, i32 0, i32 3
  %11 = load %struct.sv*, %struct.sv** %utf8_substr10, align 8
  %call = call %struct.sv* @Perl_newSVsv(%struct.sv* %11)
  store %struct.sv* %call, %struct.sv** %sv, align 8
  %12 = load %struct.sv*, %struct.sv** %sv, align 8
  %call11 = call zeroext i1 @Perl_sv_utf8_downgrade(%struct.sv* %12, i1 zeroext true)
  br i1 %call11, label %if.end, label %if.then12

if.then12:                                        ; preds = %if.then
  store i1 false, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %if.then
  %13 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs13 = getelementptr inbounds %struct.regexp, %struct.regexp* %13, i32 0, i32 11
  %14 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs13, align 8
  %data14 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %14, i32 0, i32 1
  %15 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %15 to i64
  %arrayidx16 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data14, i64 0, i64 %idxprom15
  %utf8_substr17 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx16, i32 0, i32 3
  %16 = load %struct.sv*, %struct.sv** %utf8_substr17, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 2
  %17 = load i32, i32* %sv_flags, align 4
  %and = and i32 %17, 1073741824
  %tobool18 = icmp ne i32 %and, 0
  br i1 %tobool18, label %land.lhs.true19, label %if.end41

land.lhs.true19:                                  ; preds = %if.end
  %18 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs20 = getelementptr inbounds %struct.regexp, %struct.regexp* %18, i32 0, i32 11
  %19 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs20, align 8
  %data21 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %19, i32 0, i32 1
  %20 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %20 to i64
  %arrayidx23 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data21, i64 0, i64 %idxprom22
  %utf8_substr24 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx23, i32 0, i32 3
  %21 = load %struct.sv*, %struct.sv** %utf8_substr24, align 8
  %sv_flags25 = getelementptr inbounds %struct.sv, %struct.sv* %21, i32 0, i32 2
  %22 = load i32, i32* %sv_flags25, align 4
  %and26 = and i32 %22, 49152
  %cmp = icmp eq i32 %and26, 49152
  br i1 %cmp, label %if.end41, label %if.then27

if.then27:                                        ; preds = %land.lhs.true19
  %23 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs28 = getelementptr inbounds %struct.regexp, %struct.regexp* %23, i32 0, i32 11
  %24 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs28, align 8
  %data29 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %24, i32 0, i32 1
  %25 = load i32, i32* %i, align 4
  %idxprom30 = sext i32 %25 to i64
  %arrayidx31 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data29, i64 0, i64 %idxprom30
  %utf8_substr32 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx31, i32 0, i32 3
  %26 = load %struct.sv*, %struct.sv** %utf8_substr32, align 8
  %sv_flags33 = getelementptr inbounds %struct.sv, %struct.sv* %26, i32 0, i32 2
  %27 = load i32, i32* %sv_flags33, align 4
  %and34 = and i32 %27, -1073741824
  %cmp35 = icmp eq i32 %and34, -1073741824
  br i1 %cmp35, label %if.then36, label %if.else

if.then36:                                        ; preds = %if.then27
  br label %do.body37

do.body37:                                        ; preds = %if.then36
  %28 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %28, i32 0, i32 0
  %29 = load i8*, i8** %sv_any, align 8
  %30 = bitcast i8* %29 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %30, i32 0, i32 2
  %31 = load i64, i64* %xpv_cur, align 8
  %sub = sub i64 %31, 1
  %32 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_any38 = getelementptr inbounds %struct.sv, %struct.sv* %32, i32 0, i32 0
  %33 = load i8*, i8** %sv_any38, align 8
  %34 = bitcast i8* %33 to %struct.xpv*
  %xpv_cur39 = getelementptr inbounds %struct.xpv, %struct.xpv* %34, i32 0, i32 2
  store i64 %sub, i64* %xpv_cur39, align 8
  br label %do.end

do.end:                                           ; preds = %do.body37
  %35 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_fbm_compile(%struct.sv* %35, i32 15)
  br label %if.end40

if.else:                                          ; preds = %if.then27
  %36 = load %struct.sv*, %struct.sv** %sv, align 8
  call void @Perl_fbm_compile(%struct.sv* %36, i32 0)
  br label %if.end40

if.end40:                                         ; preds = %if.else, %do.end
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %land.lhs.true19, %if.end
  %37 = load %struct.sv*, %struct.sv** %sv, align 8
  %38 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs42 = getelementptr inbounds %struct.regexp, %struct.regexp* %38, i32 0, i32 11
  %39 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs42, align 8
  %data43 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %39, i32 0, i32 1
  %40 = load i32, i32* %i, align 4
  %idxprom44 = sext i32 %40 to i64
  %arrayidx45 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data43, i64 0, i64 %idxprom44
  %substr46 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx45, i32 0, i32 2
  store %struct.sv* %37, %struct.sv** %substr46, align 8
  %41 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs47 = getelementptr inbounds %struct.regexp, %struct.regexp* %41, i32 0, i32 11
  %42 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs47, align 8
  %data48 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %42, i32 0, i32 1
  %43 = load i32, i32* %i, align 4
  %idxprom49 = sext i32 %43 to i64
  %arrayidx50 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data48, i64 0, i64 %idxprom49
  %utf8_substr51 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx50, i32 0, i32 3
  %44 = load %struct.sv*, %struct.sv** %utf8_substr51, align 8
  %45 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs52 = getelementptr inbounds %struct.regexp, %struct.regexp* %45, i32 0, i32 11
  %46 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs52, align 8
  %data53 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %46, i32 0, i32 1
  %arrayidx54 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data53, i64 0, i64 2
  %utf8_substr55 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx54, i32 0, i32 3
  %47 = load %struct.sv*, %struct.sv** %utf8_substr55, align 8
  %cmp56 = icmp eq %struct.sv* %44, %47
  br i1 %cmp56, label %if.then57, label %if.end62

if.then57:                                        ; preds = %if.end41
  %48 = load %struct.sv*, %struct.sv** %sv, align 8
  %49 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %substrs58 = getelementptr inbounds %struct.regexp, %struct.regexp* %49, i32 0, i32 11
  %50 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs58, align 8
  %data59 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %50, i32 0, i32 1
  %arrayidx60 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data59, i64 0, i64 2
  %substr61 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx60, i32 0, i32 2
  store %struct.sv* %48, %struct.sv** %substr61, align 8
  br label %if.end62

if.end62:                                         ; preds = %if.then57, %if.end41
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %land.lhs.true, %do.body
  br label %do.cond

do.cond:                                          ; preds = %if.end63
  %51 = load i32, i32* %i, align 4
  %dec = add nsw i32 %51, -1
  store i32 %dec, i32* %i, align 4
  %tobool64 = icmp ne i32 %51, 0
  br i1 %tobool64, label %do.body, label %do.end65

do.end65:                                         ; preds = %do.cond
  store i1 true, i1* %retval, align 1
  br label %return

return:                                           ; preds = %do.end65, %if.then12
  %52 = load i1, i1* %retval, align 1
  ret i1 %52
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @S_reghop3(i8* %s, i64 %off, i8* %lim) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %off.addr = alloca i64, align 8
  %lim.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i64 %off, i64* %off.addr, align 8
  store i8* %lim, i8** %lim.addr, align 8
  %0 = load i64, i64* %off.addr, align 8
  %cmp = icmp sge i64 %0, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then
  %1 = load i64, i64* %off.addr, align 8
  %dec = add nsw i64 %1, -1
  store i64 %dec, i64* %off.addr, align 8
  %tobool = icmp ne i64 %1, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i8*, i8** %s.addr, align 8
  %3 = load i8*, i8** %lim.addr, align 8
  %cmp1 = icmp ult i8* %2, %3
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %4, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %5 = load i8*, i8** %s.addr, align 8
  %6 = load i8, i8* %5, align 1
  %idxprom = zext i8 %6 to i64
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom
  %7 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %7 to i32
  %8 = load i8*, i8** %s.addr, align 8
  %idx.ext = sext i32 %conv to i64
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
  store i8* %add.ptr, i8** %s.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  br label %if.end25

if.else:                                          ; preds = %entry
  br label %while.cond2

while.cond2:                                      ; preds = %if.end, %if.else
  %9 = load i64, i64* %off.addr, align 8
  %inc = add nsw i64 %9, 1
  store i64 %inc, i64* %off.addr, align 8
  %tobool3 = icmp ne i64 %9, 0
  br i1 %tobool3, label %land.rhs4, label %land.end7

land.rhs4:                                        ; preds = %while.cond2
  %10 = load i8*, i8** %s.addr, align 8
  %11 = load i8*, i8** %lim.addr, align 8
  %cmp5 = icmp ugt i8* %10, %11
  br label %land.end7

land.end7:                                        ; preds = %land.rhs4, %while.cond2
  %12 = phi i1 [ false, %while.cond2 ], [ %cmp5, %land.rhs4 ]
  br i1 %12, label %while.body8, label %while.end24

while.body8:                                      ; preds = %land.end7
  %13 = load i8*, i8** %s.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %13, i32 -1
  store i8* %incdec.ptr, i8** %s.addr, align 8
  %14 = load i8*, i8** %s.addr, align 8
  %15 = load i8, i8* %14, align 1
  %conv9 = zext i8 %15 to i32
  %and = and i32 %conv9, 128
  %tobool10 = icmp ne i32 %and, 0
  br i1 %tobool10, label %if.then11, label %if.end

if.then11:                                        ; preds = %while.body8
  br label %while.cond12

while.cond12:                                     ; preds = %while.body21, %if.then11
  %16 = load i8*, i8** %s.addr, align 8
  %17 = load i8*, i8** %lim.addr, align 8
  %cmp13 = icmp ugt i8* %16, %17
  br i1 %cmp13, label %land.rhs15, label %land.end20

land.rhs15:                                       ; preds = %while.cond12
  %18 = load i8*, i8** %s.addr, align 8
  %19 = load i8, i8* %18, align 1
  %conv16 = zext i8 %19 to i32
  %and17 = and i32 %conv16, 192
  %cmp18 = icmp eq i32 %and17, 128
  br label %land.end20

land.end20:                                       ; preds = %land.rhs15, %while.cond12
  %20 = phi i1 [ false, %while.cond12 ], [ %cmp18, %land.rhs15 ]
  br i1 %20, label %while.body21, label %while.end23

while.body21:                                     ; preds = %land.end20
  %21 = load i8*, i8** %s.addr, align 8
  %incdec.ptr22 = getelementptr inbounds i8, i8* %21, i32 -1
  store i8* %incdec.ptr22, i8** %s.addr, align 8
  br label %while.cond12

while.end23:                                      ; preds = %land.end20
  br label %if.end

if.end:                                           ; preds = %while.end23, %while.body8
  br label %while.cond2

while.end24:                                      ; preds = %land.end7
  br label %if.end25

if.end25:                                         ; preds = %while.end24, %while.end
  %22 = load i8*, i8** %s.addr, align 8
  ret i8* %22
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #1

; Function Attrs: noinline nounwind uwtable
define internal i8* @S_reghopmaybe3(i8* %s, i64 %off, i8* %lim) #0 {
entry:
  %retval = alloca i8*, align 8
  %s.addr = alloca i8*, align 8
  %off.addr = alloca i64, align 8
  %lim.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i64 %off, i64* %off.addr, align 8
  store i8* %lim, i8** %lim.addr, align 8
  %0 = load i64, i64* %off.addr, align 8
  %cmp = icmp sge i64 %0, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then
  %1 = load i64, i64* %off.addr, align 8
  %dec = add nsw i64 %1, -1
  store i64 %dec, i64* %off.addr, align 8
  %tobool = icmp ne i64 %1, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i8*, i8** %s.addr, align 8
  %3 = load i8*, i8** %lim.addr, align 8
  %cmp1 = icmp ult i8* %2, %3
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %4, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %5 = load i8*, i8** %s.addr, align 8
  %6 = load i8, i8* %5, align 1
  %idxprom = zext i8 %6 to i64
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom
  %7 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %7 to i32
  %8 = load i8*, i8** %s.addr, align 8
  %idx.ext = sext i32 %conv to i64
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
  store i8* %add.ptr, i8** %s.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %9 = load i64, i64* %off.addr, align 8
  %cmp2 = icmp sge i64 %9, 0
  br i1 %cmp2, label %if.then4, label %if.end

if.then4:                                         ; preds = %while.end
  store i8* null, i8** %retval, align 8
  br label %return

if.end:                                           ; preds = %while.end
  br label %if.end33

if.else:                                          ; preds = %entry
  br label %while.cond5

while.cond5:                                      ; preds = %if.end27, %if.else
  %10 = load i64, i64* %off.addr, align 8
  %inc = add nsw i64 %10, 1
  store i64 %inc, i64* %off.addr, align 8
  %tobool6 = icmp ne i64 %10, 0
  br i1 %tobool6, label %land.rhs7, label %land.end10

land.rhs7:                                        ; preds = %while.cond5
  %11 = load i8*, i8** %s.addr, align 8
  %12 = load i8*, i8** %lim.addr, align 8
  %cmp8 = icmp ugt i8* %11, %12
  br label %land.end10

land.end10:                                       ; preds = %land.rhs7, %while.cond5
  %13 = phi i1 [ false, %while.cond5 ], [ %cmp8, %land.rhs7 ]
  br i1 %13, label %while.body11, label %while.end28

while.body11:                                     ; preds = %land.end10
  %14 = load i8*, i8** %s.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %14, i32 -1
  store i8* %incdec.ptr, i8** %s.addr, align 8
  %15 = load i8*, i8** %s.addr, align 8
  %16 = load i8, i8* %15, align 1
  %conv12 = zext i8 %16 to i32
  %and = and i32 %conv12, 128
  %tobool13 = icmp ne i32 %and, 0
  br i1 %tobool13, label %if.then14, label %if.end27

if.then14:                                        ; preds = %while.body11
  br label %while.cond15

while.cond15:                                     ; preds = %while.body24, %if.then14
  %17 = load i8*, i8** %s.addr, align 8
  %18 = load i8*, i8** %lim.addr, align 8
  %cmp16 = icmp ugt i8* %17, %18
  br i1 %cmp16, label %land.rhs18, label %land.end23

land.rhs18:                                       ; preds = %while.cond15
  %19 = load i8*, i8** %s.addr, align 8
  %20 = load i8, i8* %19, align 1
  %conv19 = zext i8 %20 to i32
  %and20 = and i32 %conv19, 192
  %cmp21 = icmp eq i32 %and20, 128
  br label %land.end23

land.end23:                                       ; preds = %land.rhs18, %while.cond15
  %21 = phi i1 [ false, %while.cond15 ], [ %cmp21, %land.rhs18 ]
  br i1 %21, label %while.body24, label %while.end26

while.body24:                                     ; preds = %land.end23
  %22 = load i8*, i8** %s.addr, align 8
  %incdec.ptr25 = getelementptr inbounds i8, i8* %22, i32 -1
  store i8* %incdec.ptr25, i8** %s.addr, align 8
  br label %while.cond15

while.end26:                                      ; preds = %land.end23
  br label %if.end27

if.end27:                                         ; preds = %while.end26, %while.body11
  br label %while.cond5

while.end28:                                      ; preds = %land.end10
  %23 = load i64, i64* %off.addr, align 8
  %cmp29 = icmp sle i64 %23, 0
  br i1 %cmp29, label %if.then31, label %if.end32

if.then31:                                        ; preds = %while.end28
  store i8* null, i8** %retval, align 8
  br label %return

if.end32:                                         ; preds = %while.end28
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end
  %24 = load i8*, i8** %s.addr, align 8
  store i8* %24, i8** %retval, align 8
  br label %return

return:                                           ; preds = %if.end33, %if.then31, %if.then4
  %25 = load i8*, i8** %retval, align 8
  ret i8* %25
}

declare dso_local i8* @Perl_fbm_instr(i8*, i8*, %struct.sv*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @S_reghop4(i8* %s, i64 %off, i8* %llim, i8* %rlim) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %off.addr = alloca i64, align 8
  %llim.addr = alloca i8*, align 8
  %rlim.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i64 %off, i64* %off.addr, align 8
  store i8* %llim, i8** %llim.addr, align 8
  store i8* %rlim, i8** %rlim.addr, align 8
  %0 = load i64, i64* %off.addr, align 8
  %cmp = icmp sge i64 %0, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then
  %1 = load i64, i64* %off.addr, align 8
  %dec = add nsw i64 %1, -1
  store i64 %dec, i64* %off.addr, align 8
  %tobool = icmp ne i64 %1, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i8*, i8** %s.addr, align 8
  %3 = load i8*, i8** %rlim.addr, align 8
  %cmp1 = icmp ult i8* %2, %3
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %4, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %5 = load i8*, i8** %s.addr, align 8
  %6 = load i8, i8* %5, align 1
  %idxprom = zext i8 %6 to i64
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom
  %7 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %7 to i32
  %8 = load i8*, i8** %s.addr, align 8
  %idx.ext = sext i32 %conv to i64
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
  store i8* %add.ptr, i8** %s.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  br label %if.end25

if.else:                                          ; preds = %entry
  br label %while.cond2

while.cond2:                                      ; preds = %if.end, %if.else
  %9 = load i64, i64* %off.addr, align 8
  %inc = add nsw i64 %9, 1
  store i64 %inc, i64* %off.addr, align 8
  %tobool3 = icmp ne i64 %9, 0
  br i1 %tobool3, label %land.rhs4, label %land.end7

land.rhs4:                                        ; preds = %while.cond2
  %10 = load i8*, i8** %s.addr, align 8
  %11 = load i8*, i8** %llim.addr, align 8
  %cmp5 = icmp ugt i8* %10, %11
  br label %land.end7

land.end7:                                        ; preds = %land.rhs4, %while.cond2
  %12 = phi i1 [ false, %while.cond2 ], [ %cmp5, %land.rhs4 ]
  br i1 %12, label %while.body8, label %while.end24

while.body8:                                      ; preds = %land.end7
  %13 = load i8*, i8** %s.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %13, i32 -1
  store i8* %incdec.ptr, i8** %s.addr, align 8
  %14 = load i8*, i8** %s.addr, align 8
  %15 = load i8, i8* %14, align 1
  %conv9 = zext i8 %15 to i32
  %and = and i32 %conv9, 128
  %tobool10 = icmp ne i32 %and, 0
  br i1 %tobool10, label %if.then11, label %if.end

if.then11:                                        ; preds = %while.body8
  br label %while.cond12

while.cond12:                                     ; preds = %while.body21, %if.then11
  %16 = load i8*, i8** %s.addr, align 8
  %17 = load i8*, i8** %llim.addr, align 8
  %cmp13 = icmp ugt i8* %16, %17
  br i1 %cmp13, label %land.rhs15, label %land.end20

land.rhs15:                                       ; preds = %while.cond12
  %18 = load i8*, i8** %s.addr, align 8
  %19 = load i8, i8* %18, align 1
  %conv16 = zext i8 %19 to i32
  %and17 = and i32 %conv16, 192
  %cmp18 = icmp eq i32 %and17, 128
  br label %land.end20

land.end20:                                       ; preds = %land.rhs15, %while.cond12
  %20 = phi i1 [ false, %while.cond12 ], [ %cmp18, %land.rhs15 ]
  br i1 %20, label %while.body21, label %while.end23

while.body21:                                     ; preds = %land.end20
  %21 = load i8*, i8** %s.addr, align 8
  %incdec.ptr22 = getelementptr inbounds i8, i8* %21, i32 -1
  store i8* %incdec.ptr22, i8** %s.addr, align 8
  br label %while.cond12

while.end23:                                      ; preds = %land.end20
  br label %if.end

if.end:                                           ; preds = %while.end23, %while.body8
  br label %while.cond2

while.end24:                                      ; preds = %land.end7
  br label %if.end25

if.end25:                                         ; preds = %while.end24, %while.end
  %22 = load i8*, i8** %s.addr, align 8
  ret i8* %22
}

; Function Attrs: nounwind readonly
declare dso_local i8* @memchr(i8*, i32, i64) #1

declare dso_local i64 @Perl_utf8_distance(i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @S_find_byclass(%struct.regexp* %prog, %struct.regnode* %c, i8* %s, i8* %strend, %struct.regmatch_info* %reginfo) #0 {
entry:
  %retval = alloca i8*, align 8
  %prog.addr = alloca %struct.regexp*, align 8
  %c.addr = alloca %struct.regnode*, align 8
  %s.addr = alloca i8*, align 8
  %strend.addr = alloca i8*, align 8
  %reginfo.addr = alloca %struct.regmatch_info*, align 8
  %doevery = alloca i32, align 4
  %pat_string = alloca i8*, align 8
  %pat_end = alloca i8*, align 8
  %folder = alloca i32 (i8*, i8*, i32)*, align 8
  %fold_array = alloca i8*, align 8
  %ln = alloca i64, align 8
  %lnc = alloca i64, align 8
  %c1 = alloca i8, align 1
  %c2 = alloca i8, align 1
  %e = alloca i8*, align 8
  %tmp = alloca i32, align 4
  %utf8_target = alloca i8, align 1
  %utf8_fold_flags = alloca i64, align 8
  %is_utf8_pat = alloca i8, align 1
  %to_complement = alloca i8, align 1
  %classnum = alloca i32, align 4
  %progi = alloca %struct.regexp_internal*, align 8
  %expansion = alloca i32, align 4
  %my_strend = alloca i8*, align 8
  %r = alloca i8*, align 8
  %flags325 = alloca i8, align 1
  %r542 = alloca i8*, align 8
  %flags583 = alloca i8, align 1
  %r794 = alloca i8*, align 8
  %flags831 = alloca i8, align 1
  %r1131 = alloca i8*, align 8
  %flags1168 = alloca i8, align 1
  %r1473 = alloca i8*, align 8
  %flags1510 = alloca i8, align 1
  %r1682 = alloca i8*, align 8
  %flags1719 = alloca i8, align 1
  %before = alloca i32, align 4
  %after = alloca i32, align 4
  %before2041 = alloca i32, align 4
  %after2060 = alloca i32, align 4
  %before2097 = alloca i32, align 4
  %after2106 = alloca i32, align 4
  %previous = alloca i32, align 4
  %before2181 = alloca i32, align 4
  %after2200 = alloca i32, align 4
  %previous2237 = alloca i32, align 4
  %before2238 = alloca i32, align 4
  %after2247 = alloca i32, align 4
  %flags3432 = alloca i8, align 1
  %trie_type = alloca i32, align 4
  %aho = alloca %struct._reg_ac_data*, align 8
  %trie = alloca %struct._reg_trie_data*, align 8
  %widecharmap = alloca %struct.hv*, align 8
  %last_start = alloca i8*, align 8
  %maxlen = alloca i64, align 8
  %sv_points = alloca %struct.sv*, align 8
  %points = alloca i8**, align 8
  %foldbuf = alloca [14 x i8], align 1
  %bitmap3586 = alloca i8*, align 8
  %uniflags = alloca i32, align 4
  %uc = alloca i8*, align 8
  %charid = alloca i16, align 2
  %base = alloca i32, align 4
  %state = alloca i32, align 4
  %uvc = alloca i64, align 8
  %len = alloca i64, align 8
  %foldlen = alloca i64, align 8
  %uscan = alloca i8*, align 8
  %leftmost = alloca i8*, align 8
  %pointpos = alloca i32, align 4
  %failed = alloca i32, align 4
  %word = alloca i32, align 4
  %lpos = alloca i8*, align 8
  %skiplen = alloca i64, align 8
  %flags3731 = alloca i8, align 1
  %svpp = alloca %struct.sv**, align 8
  %tmp3909 = alloca i32, align 4
  %offset = alloca i32, align 4
  %lpos3960 = alloca i8*, align 8
  store %struct.regexp* %prog, %struct.regexp** %prog.addr, align 8
  store %struct.regnode* %c, %struct.regnode** %c.addr, align 8
  store i8* %s, i8** %s.addr, align 8
  store i8* %strend, i8** %strend.addr, align 8
  store %struct.regmatch_info* %reginfo, %struct.regmatch_info** %reginfo.addr, align 8
  %0 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %intflags = getelementptr inbounds %struct.regexp, %struct.regexp* %0, i32 0, i32 13
  %1 = load i32, i32* %intflags, align 4
  %and = and i32 %1, 1
  %cmp = icmp eq i32 %and, 0
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* %doevery, align 4
  store i32 1, i32* %tmp, align 4
  %2 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2, i32 0, i32 14
  %3 = load i8, i8* %is_utf8_target, align 2
  %tobool = trunc i8 %3 to i1
  %frombool = zext i1 %tobool to i8
  store i8 %frombool, i8* %utf8_target, align 1
  store i64 0, i64* %utf8_fold_flags, align 8
  %4 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat1 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %4, i32 0, i32 13
  %5 = load i8, i8* %is_utf8_pat1, align 1
  %tobool2 = trunc i8 %5 to i1
  %frombool3 = zext i1 %tobool2 to i8
  store i8 %frombool3, i8* %is_utf8_pat, align 1
  store i8 0, i8* %to_complement, align 1
  %6 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %pprivate = getelementptr inbounds %struct.regexp, %struct.regexp* %6, i32 0, i32 14
  %7 = load i8*, i8** %pprivate, align 8
  %8 = bitcast i8* %7 to %struct.regexp_internal*
  store %struct.regexp_internal* %8, %struct.regexp_internal** %progi, align 8
  %9 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %type = getelementptr inbounds %struct.regnode, %struct.regnode* %9, i32 0, i32 1
  %10 = load i8, i8* %type, align 1
  %conv4 = zext i8 %10 to i32
  switch i32 %conv4, label %sw.default4011 [
    i32 20, label %sw.bb
    i32 19, label %sw.bb5
    i32 18, label %sw.bb59
    i32 39, label %sw.bb79
    i32 36, label %sw.bb80
    i32 33, label %sw.bb88
    i32 34, label %sw.bb92
    i32 37, label %sw.bb103
    i32 38, label %sw.bb107
    i32 35, label %sw.bb111
    i32 9, label %sw.bb277
    i32 13, label %sw.bb525
    i32 8, label %sw.bb786
    i32 11, label %sw.bb989
    i32 12, label %sw.bb1123
    i32 15, label %sw.bb1326
    i32 14, label %sw.bb1460
    i32 10, label %sw.bb1671
    i32 91, label %sw.bb2288
    i32 26, label %sw.bb2513
    i32 22, label %sw.bb2514
    i32 25, label %sw.bb2583
    i32 21, label %sw.bb2584
    i32 28, label %sw.bb2588
    i32 24, label %sw.bb2635
    i32 27, label %sw.bb2677
    i32 23, label %sw.bb2678
    i32 75, label %sw.bb3525
    i32 74, label %sw.bb3525
  ]

sw.bb:                                            ; preds = %entry
  br label %sw.bb5

sw.bb5:                                           ; preds = %entry, %sw.bb
  %11 = load i8, i8* %utf8_target, align 1
  %tobool6 = trunc i8 %11 to i1
  br i1 %tobool6, label %if.then, label %if.else20

if.then:                                          ; preds = %sw.bb5
  br label %do.body

do.body:                                          ; preds = %if.then
  br label %while.cond

while.cond:                                       ; preds = %if.end18, %do.body
  %12 = load i8*, i8** %s.addr, align 8
  %13 = load i8*, i8** %strend.addr, align 8
  %cmp7 = icmp ult i8* %12, %13
  br i1 %cmp7, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %14 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %15 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %16 = load i8*, i8** %s.addr, align 8
  %17 = load i8*, i8** %strend.addr, align 8
  %18 = load i8, i8* %utf8_target, align 1
  %tobool9 = trunc i8 %18 to i1
  %call = call zeroext i1 @S_reginclass(%struct.regexp* %14, %struct.regnode* %15, i8* %16, i8* %17, i1 zeroext %tobool9)
  br i1 %call, label %if.then10, label %if.else17

if.then10:                                        ; preds = %while.body
  %19 = load i32, i32* %tmp, align 4
  %tobool11 = icmp ne i32 %19, 0
  br i1 %tobool11, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then10
  %20 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %20, i32 0, i32 12
  %21 = load i8, i8* %intuit, align 8
  %tobool12 = trunc i8 %21 to i1
  br i1 %tobool12, label %if.then16, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %22 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call14 = call i32 @S_regtry(%struct.regmatch_info* %22, i8** %s.addr)
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.then16, label %if.else

if.then16:                                        ; preds = %lor.lhs.false, %land.lhs.true
  br label %got_it

if.else:                                          ; preds = %lor.lhs.false, %if.then10
  %23 = load i32, i32* %doevery, align 4
  store i32 %23, i32* %tmp, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %if.end18

if.else17:                                        ; preds = %while.body
  store i32 1, i32* %tmp, align 4
  br label %if.end18

if.end18:                                         ; preds = %if.else17, %if.end
  %24 = load i8*, i8** %s.addr, align 8
  %25 = load i8, i8* %24, align 1
  %idxprom = zext i8 %25 to i64
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom
  %26 = load i8, i8* %arrayidx, align 1
  %conv19 = zext i8 %26 to i32
  %27 = load i8*, i8** %s.addr, align 8
  %idx.ext = sext i32 %conv19 to i64
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 %idx.ext
  store i8* %add.ptr, i8** %s.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %if.end58

if.else20:                                        ; preds = %sw.bb5
  br label %do.body21

do.body21:                                        ; preds = %if.else20
  br label %while.cond22

while.cond22:                                     ; preds = %if.end55, %do.body21
  %28 = load i8*, i8** %s.addr, align 8
  %29 = load i8*, i8** %strend.addr, align 8
  %cmp23 = icmp ult i8* %28, %29
  br i1 %cmp23, label %while.body25, label %while.end56

while.body25:                                     ; preds = %while.cond22
  %30 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags = getelementptr inbounds %struct.regnode, %struct.regnode* %30, i32 0, i32 0
  %31 = load i8, i8* %flags, align 2
  %conv26 = zext i8 %31 to i32
  %tobool27 = icmp ne i32 %conv26, 0
  br i1 %tobool27, label %cond.true, label %cond.false

cond.true:                                        ; preds = %while.body25
  %32 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %33 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %34 = load i8*, i8** %s.addr, align 8
  %35 = load i8*, i8** %s.addr, align 8
  %add.ptr28 = getelementptr inbounds i8, i8* %35, i64 1
  %call29 = call zeroext i1 @S_reginclass(%struct.regexp* %32, %struct.regnode* %33, i8* %34, i8* %add.ptr28, i1 zeroext false)
  br i1 %call29, label %if.then42, label %if.else54

cond.false:                                       ; preds = %while.body25
  %36 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %37 = bitcast %struct.regnode* %36 to %struct.regnode_charclass*
  %bitmap = getelementptr inbounds %struct.regnode_charclass, %struct.regnode_charclass* %37, i32 0, i32 4
  %38 = load i8*, i8** %s.addr, align 8
  %39 = load i8, i8* %38, align 1
  %conv31 = zext i8 %39 to i32
  %shr = ashr i32 %conv31, 3
  %and32 = and i32 %shr, 31
  %idxprom33 = sext i32 %and32 to i64
  %arrayidx34 = getelementptr inbounds [32 x i8], [32 x i8]* %bitmap, i64 0, i64 %idxprom33
  %40 = load i8, i8* %arrayidx34, align 1
  %conv35 = sext i8 %40 to i32
  %41 = load i8*, i8** %s.addr, align 8
  %42 = load i8, i8* %41, align 1
  %conv36 = zext i8 %42 to i32
  %and37 = and i32 %conv36, 7
  %shl = shl i32 1, %and37
  %and38 = and i32 %conv35, %shl
  %tobool39 = icmp ne i32 %and38, 0
  br i1 %tobool39, label %cond.true40, label %cond.false41

cond.true40:                                      ; preds = %cond.false
  br i1 true, label %if.then42, label %if.else54

cond.false41:                                     ; preds = %cond.false
  br i1 false, label %if.then42, label %if.else54

if.then42:                                        ; preds = %cond.false41, %cond.true40, %cond.true
  %43 = load i32, i32* %tmp, align 4
  %tobool43 = icmp ne i32 %43, 0
  br i1 %tobool43, label %land.lhs.true44, label %if.else52

land.lhs.true44:                                  ; preds = %if.then42
  %44 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit45 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %44, i32 0, i32 12
  %45 = load i8, i8* %intuit45, align 8
  %tobool46 = trunc i8 %45 to i1
  br i1 %tobool46, label %if.then51, label %lor.lhs.false48

lor.lhs.false48:                                  ; preds = %land.lhs.true44
  %46 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call49 = call i32 @S_regtry(%struct.regmatch_info* %46, i8** %s.addr)
  %tobool50 = icmp ne i32 %call49, 0
  br i1 %tobool50, label %if.then51, label %if.else52

if.then51:                                        ; preds = %lor.lhs.false48, %land.lhs.true44
  br label %got_it

if.else52:                                        ; preds = %lor.lhs.false48, %if.then42
  %47 = load i32, i32* %doevery, align 4
  store i32 %47, i32* %tmp, align 4
  br label %if.end53

if.end53:                                         ; preds = %if.else52
  br label %if.end55

if.else54:                                        ; preds = %cond.false41, %cond.true40, %cond.true
  store i32 1, i32* %tmp, align 4
  br label %if.end55

if.end55:                                         ; preds = %if.else54, %if.end53
  %48 = load i8*, i8** %s.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %48, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 8
  br label %while.cond22

while.end56:                                      ; preds = %while.cond22
  br label %do.end57

do.end57:                                         ; preds = %while.end56
  br label %if.end58

if.end58:                                         ; preds = %do.end57, %do.end
  br label %sw.epilog4014

sw.bb59:                                          ; preds = %entry
  br label %do.body60

do.body60:                                        ; preds = %sw.bb59
  br label %while.cond61

while.cond61:                                     ; preds = %if.end75, %do.body60
  %49 = load i8*, i8** %s.addr, align 8
  %50 = load i8*, i8** %strend.addr, align 8
  %cmp62 = icmp ult i8* %49, %50
  br i1 %cmp62, label %while.body64, label %while.end77

while.body64:                                     ; preds = %while.cond61
  %51 = load i32, i32* %tmp, align 4
  %tobool65 = icmp ne i32 %51, 0
  br i1 %tobool65, label %land.lhs.true66, label %if.else74

land.lhs.true66:                                  ; preds = %while.body64
  %52 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit67 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %52, i32 0, i32 12
  %53 = load i8, i8* %intuit67, align 8
  %tobool68 = trunc i8 %53 to i1
  br i1 %tobool68, label %if.then73, label %lor.lhs.false70

lor.lhs.false70:                                  ; preds = %land.lhs.true66
  %54 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call71 = call i32 @S_regtry(%struct.regmatch_info* %54, i8** %s.addr)
  %tobool72 = icmp ne i32 %call71, 0
  br i1 %tobool72, label %if.then73, label %if.else74

if.then73:                                        ; preds = %lor.lhs.false70, %land.lhs.true66
  br label %got_it

if.else74:                                        ; preds = %lor.lhs.false70, %while.body64
  %55 = load i32, i32* %doevery, align 4
  store i32 %55, i32* %tmp, align 4
  br label %if.end75

if.end75:                                         ; preds = %if.else74
  %56 = load i8*, i8** %s.addr, align 8
  %incdec.ptr76 = getelementptr inbounds i8, i8* %56, i32 1
  store i8* %incdec.ptr76, i8** %s.addr, align 8
  br label %while.cond61

while.end77:                                      ; preds = %while.cond61
  br label %do.end78

do.end78:                                         ; preds = %while.end77
  br label %sw.epilog4014

sw.bb79:                                          ; preds = %entry
  br label %sw.bb80

sw.bb80:                                          ; preds = %entry, %sw.bb79
  %57 = load i8, i8* %is_utf8_pat, align 1
  %tobool81 = trunc i8 %57 to i1
  br i1 %tobool81, label %if.then86, label %lor.lhs.false83

lor.lhs.false83:                                  ; preds = %sw.bb80
  %58 = load i8, i8* %utf8_target, align 1
  %tobool84 = trunc i8 %58 to i1
  br i1 %tobool84, label %if.then86, label %if.end87

if.then86:                                        ; preds = %lor.lhs.false83, %sw.bb80
  store i64 1, i64* %utf8_fold_flags, align 8
  br label %do_exactf_utf8

if.end87:                                         ; preds = %lor.lhs.false83
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_latin1, i64 0, i64 0), i8** %fold_array, align 8
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_latin1, i32 (i8*, i8*, i32)** %folder, align 8
  br label %do_exactf_non_utf8

sw.bb88:                                          ; preds = %entry
  %59 = load i8, i8* %utf8_target, align 1
  %tobool89 = trunc i8 %59 to i1
  br i1 %tobool89, label %if.then90, label %if.end91

if.then90:                                        ; preds = %sw.bb88
  store i64 0, i64* %utf8_fold_flags, align 8
  br label %do_exactf_utf8

if.end91:                                         ; preds = %sw.bb88
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold, i64 0, i64 0), i8** %fold_array, align 8
  store i32 (i8*, i8*, i32)* @Perl_foldEQ, i32 (i8*, i8*, i32)** %folder, align 8
  br label %do_exactf_non_utf8

sw.bb92:                                          ; preds = %entry
  %60 = load i8, i8* %is_utf8_pat, align 1
  %tobool93 = trunc i8 %60 to i1
  br i1 %tobool93, label %if.then101, label %lor.lhs.false95

lor.lhs.false95:                                  ; preds = %sw.bb92
  %61 = load i8, i8* %utf8_target, align 1
  %tobool96 = trunc i8 %61 to i1
  br i1 %tobool96, label %if.then101, label %lor.lhs.false98

lor.lhs.false98:                                  ; preds = %lor.lhs.false95
  %62 = load i8, i8* @PL_in_utf8_CTYPE_locale, align 1
  %tobool99 = trunc i8 %62 to i1
  br i1 %tobool99, label %if.then101, label %if.end102

if.then101:                                       ; preds = %lor.lhs.false98, %lor.lhs.false95, %sw.bb92
  store i64 2, i64* %utf8_fold_flags, align 8
  br label %do_exactf_utf8

if.end102:                                        ; preds = %lor.lhs.false98
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_locale, i64 0, i64 0), i8** %fold_array, align 8
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_locale, i32 (i8*, i8*, i32)** %folder, align 8
  br label %do_exactf_non_utf8

sw.bb103:                                         ; preds = %entry
  %63 = load i8, i8* %is_utf8_pat, align 1
  %tobool104 = trunc i8 %63 to i1
  br i1 %tobool104, label %if.then105, label %if.end106

if.then105:                                       ; preds = %sw.bb103
  store i64 8, i64* %utf8_fold_flags, align 8
  br label %if.end106

if.end106:                                        ; preds = %if.then105, %sw.bb103
  br label %do_exactf_utf8

sw.bb107:                                         ; preds = %entry
  %64 = load i8, i8* %utf8_target, align 1
  %tobool108 = trunc i8 %64 to i1
  br i1 %tobool108, label %if.end110, label %if.then109

if.then109:                                       ; preds = %sw.bb107
  br label %sw.epilog4014

if.end110:                                        ; preds = %sw.bb107
  store i64 42, i64* %utf8_fold_flags, align 8
  br label %do_exactf_utf8

sw.bb111:                                         ; preds = %entry
  %65 = load i8, i8* %is_utf8_pat, align 1
  %tobool112 = trunc i8 %65 to i1
  br i1 %tobool112, label %if.then117, label %lor.lhs.false114

lor.lhs.false114:                                 ; preds = %sw.bb111
  %66 = load i8, i8* %utf8_target, align 1
  %tobool115 = trunc i8 %66 to i1
  br i1 %tobool115, label %if.then117, label %if.end121

if.then117:                                       ; preds = %lor.lhs.false114, %sw.bb111
  %67 = load i8, i8* %is_utf8_pat, align 1
  %tobool118 = trunc i8 %67 to i1
  %68 = zext i1 %tobool118 to i64
  %cond = select i1 %tobool118, i32 8, i32 0
  %conv120 = sext i32 %cond to i64
  store i64 %conv120, i64* %utf8_fold_flags, align 8
  br label %do_exactf_utf8

if.end121:                                        ; preds = %lor.lhs.false114
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_latin1, i64 0, i64 0), i8** %fold_array, align 8
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_latin1, i32 (i8*, i8*, i32)** %folder, align 8
  br label %do_exactf_non_utf8

do_exactf_non_utf8:                               ; preds = %if.end121, %if.end102, %if.end91, %if.end87
  %69 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %70 = bitcast %struct.regnode* %69 to %struct.regnode_string*
  %string = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %70, i32 0, i32 3
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %string, i64 0, i64 0
  store i8* %arraydecay, i8** %pat_string, align 8
  %71 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %72 = bitcast %struct.regnode* %71 to %struct.regnode_string*
  %str_len = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %72, i32 0, i32 0
  %73 = load i8, i8* %str_len, align 2
  %conv122 = zext i8 %73 to i64
  store i64 %conv122, i64* %ln, align 8
  %74 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target123 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %74, i32 0, i32 14
  %75 = load i8, i8* %is_utf8_target123, align 2
  %tobool124 = trunc i8 %75 to i1
  br i1 %tobool124, label %cond.true126, label %cond.false128

cond.true126:                                     ; preds = %do_exactf_non_utf8
  %76 = load i8*, i8** %strend.addr, align 8
  %77 = load i64, i64* %ln, align 8
  %sub = sub nsw i64 0, %77
  %78 = load i8*, i8** %s.addr, align 8
  %call127 = call i8* @S_reghop3(i8* %76, i64 %sub, i8* %78)
  br label %cond.end

cond.false128:                                    ; preds = %do_exactf_non_utf8
  %79 = load i8*, i8** %strend.addr, align 8
  %80 = load i64, i64* %ln, align 8
  %sub129 = sub nsw i64 0, %80
  %add.ptr130 = getelementptr inbounds i8, i8* %79, i64 %sub129
  br label %cond.end

cond.end:                                         ; preds = %cond.false128, %cond.true126
  %cond131 = phi i8* [ %call127, %cond.true126 ], [ %add.ptr130, %cond.false128 ]
  store i8* %cond131, i8** %e, align 8
  %81 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit132 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %81, i32 0, i32 12
  %82 = load i8, i8* %intuit132, align 8
  %tobool133 = trunc i8 %82 to i1
  br i1 %tobool133, label %land.lhs.true135, label %if.end139

land.lhs.true135:                                 ; preds = %cond.end
  %83 = load i8*, i8** %e, align 8
  %84 = load i8*, i8** %s.addr, align 8
  %cmp136 = icmp ult i8* %83, %84
  br i1 %cmp136, label %if.then138, label %if.end139

if.then138:                                       ; preds = %land.lhs.true135
  %85 = load i8*, i8** %s.addr, align 8
  store i8* %85, i8** %e, align 8
  br label %if.end139

if.end139:                                        ; preds = %if.then138, %land.lhs.true135, %cond.end
  %86 = load i8*, i8** %pat_string, align 8
  %87 = load i8, i8* %86, align 1
  store i8 %87, i8* %c1, align 1
  %88 = load i8*, i8** %fold_array, align 8
  %89 = load i8, i8* %c1, align 1
  %idxprom140 = zext i8 %89 to i64
  %arrayidx141 = getelementptr inbounds i8, i8* %88, i64 %idxprom140
  %90 = load i8, i8* %arrayidx141, align 1
  store i8 %90, i8* %c2, align 1
  %91 = load i8, i8* %c1, align 1
  %conv142 = zext i8 %91 to i32
  %92 = load i8, i8* %c2, align 1
  %conv143 = zext i8 %92 to i32
  %cmp144 = icmp eq i32 %conv142, %conv143
  br i1 %cmp144, label %if.then146, label %if.else175

if.then146:                                       ; preds = %if.end139
  br label %do.body147

do.body147:                                       ; preds = %if.then146
  br label %while.cond148

while.cond148:                                    ; preds = %if.end171, %do.body147
  %93 = load i8*, i8** %s.addr, align 8
  %94 = load i8*, i8** %e, align 8
  %cmp149 = icmp ule i8* %93, %94
  br i1 %cmp149, label %while.body151, label %while.end173

while.body151:                                    ; preds = %while.cond148
  %95 = load i8*, i8** %s.addr, align 8
  %96 = load i8, i8* %95, align 1
  %conv152 = zext i8 %96 to i32
  %97 = load i8, i8* %c1, align 1
  %conv153 = zext i8 %97 to i32
  %cmp154 = icmp eq i32 %conv152, %conv153
  br i1 %cmp154, label %land.lhs.true156, label %if.end171

land.lhs.true156:                                 ; preds = %while.body151
  %98 = load i64, i64* %ln, align 8
  %cmp157 = icmp eq i64 %98, 1
  br i1 %cmp157, label %land.lhs.true163, label %lor.lhs.false159

lor.lhs.false159:                                 ; preds = %land.lhs.true156
  %99 = load i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)** %folder, align 8
  %100 = load i8*, i8** %s.addr, align 8
  %101 = load i8*, i8** %pat_string, align 8
  %102 = load i64, i64* %ln, align 8
  %conv160 = trunc i64 %102 to i32
  %call161 = call i32 %99(i8* %100, i8* %101, i32 %conv160)
  %tobool162 = icmp ne i32 %call161, 0
  br i1 %tobool162, label %land.lhs.true163, label %if.end171

land.lhs.true163:                                 ; preds = %lor.lhs.false159, %land.lhs.true156
  %103 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit164 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %103, i32 0, i32 12
  %104 = load i8, i8* %intuit164, align 8
  %tobool165 = trunc i8 %104 to i1
  br i1 %tobool165, label %if.then170, label %lor.lhs.false167

lor.lhs.false167:                                 ; preds = %land.lhs.true163
  %105 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call168 = call i32 @S_regtry(%struct.regmatch_info* %105, i8** %s.addr)
  %tobool169 = icmp ne i32 %call168, 0
  br i1 %tobool169, label %if.then170, label %if.end171

if.then170:                                       ; preds = %lor.lhs.false167, %land.lhs.true163
  br label %got_it

if.end171:                                        ; preds = %lor.lhs.false167, %lor.lhs.false159, %while.body151
  %106 = load i8*, i8** %s.addr, align 8
  %incdec.ptr172 = getelementptr inbounds i8, i8* %106, i32 1
  store i8* %incdec.ptr172, i8** %s.addr, align 8
  br label %while.cond148

while.end173:                                     ; preds = %while.cond148
  br label %do.end174

do.end174:                                        ; preds = %while.end173
  br label %if.end209

if.else175:                                       ; preds = %if.end139
  br label %do.body176

do.body176:                                       ; preds = %if.else175
  br label %while.cond177

while.cond177:                                    ; preds = %if.end205, %do.body176
  %107 = load i8*, i8** %s.addr, align 8
  %108 = load i8*, i8** %e, align 8
  %cmp178 = icmp ule i8* %107, %108
  br i1 %cmp178, label %while.body180, label %while.end207

while.body180:                                    ; preds = %while.cond177
  %109 = load i8*, i8** %s.addr, align 8
  %110 = load i8, i8* %109, align 1
  %conv181 = zext i8 %110 to i32
  %111 = load i8, i8* %c1, align 1
  %conv182 = zext i8 %111 to i32
  %cmp183 = icmp eq i32 %conv181, %conv182
  br i1 %cmp183, label %land.lhs.true190, label %lor.lhs.false185

lor.lhs.false185:                                 ; preds = %while.body180
  %112 = load i8*, i8** %s.addr, align 8
  %113 = load i8, i8* %112, align 1
  %conv186 = zext i8 %113 to i32
  %114 = load i8, i8* %c2, align 1
  %conv187 = zext i8 %114 to i32
  %cmp188 = icmp eq i32 %conv186, %conv187
  br i1 %cmp188, label %land.lhs.true190, label %if.end205

land.lhs.true190:                                 ; preds = %lor.lhs.false185, %while.body180
  %115 = load i64, i64* %ln, align 8
  %cmp191 = icmp eq i64 %115, 1
  br i1 %cmp191, label %land.lhs.true197, label %lor.lhs.false193

lor.lhs.false193:                                 ; preds = %land.lhs.true190
  %116 = load i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)** %folder, align 8
  %117 = load i8*, i8** %s.addr, align 8
  %118 = load i8*, i8** %pat_string, align 8
  %119 = load i64, i64* %ln, align 8
  %conv194 = trunc i64 %119 to i32
  %call195 = call i32 %116(i8* %117, i8* %118, i32 %conv194)
  %tobool196 = icmp ne i32 %call195, 0
  br i1 %tobool196, label %land.lhs.true197, label %if.end205

land.lhs.true197:                                 ; preds = %lor.lhs.false193, %land.lhs.true190
  %120 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit198 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %120, i32 0, i32 12
  %121 = load i8, i8* %intuit198, align 8
  %tobool199 = trunc i8 %121 to i1
  br i1 %tobool199, label %if.then204, label %lor.lhs.false201

lor.lhs.false201:                                 ; preds = %land.lhs.true197
  %122 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call202 = call i32 @S_regtry(%struct.regmatch_info* %122, i8** %s.addr)
  %tobool203 = icmp ne i32 %call202, 0
  br i1 %tobool203, label %if.then204, label %if.end205

if.then204:                                       ; preds = %lor.lhs.false201, %land.lhs.true197
  br label %got_it

if.end205:                                        ; preds = %lor.lhs.false201, %lor.lhs.false193, %lor.lhs.false185
  %123 = load i8*, i8** %s.addr, align 8
  %incdec.ptr206 = getelementptr inbounds i8, i8* %123, i32 1
  store i8* %incdec.ptr206, i8** %s.addr, align 8
  br label %while.cond177

while.end207:                                     ; preds = %while.cond177
  br label %do.end208

do.end208:                                        ; preds = %while.end207
  br label %if.end209

if.end209:                                        ; preds = %do.end208, %do.end174
  br label %sw.epilog4014

do_exactf_utf8:                                   ; preds = %if.then117, %if.end110, %if.end106, %if.then101, %if.then90, %if.then86
  %124 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %125 = bitcast %struct.regnode* %124 to %struct.regnode_string*
  %string210 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %125, i32 0, i32 3
  %arraydecay211 = getelementptr inbounds [1 x i8], [1 x i8]* %string210, i64 0, i64 0
  store i8* %arraydecay211, i8** %pat_string, align 8
  %126 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %127 = bitcast %struct.regnode* %126 to %struct.regnode_string*
  %str_len212 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %127, i32 0, i32 0
  %128 = load i8, i8* %str_len212, align 2
  %conv213 = zext i8 %128 to i64
  store i64 %conv213, i64* %ln, align 8
  %129 = load i8*, i8** %pat_string, align 8
  %130 = load i64, i64* %ln, align 8
  %add.ptr214 = getelementptr inbounds i8, i8* %129, i64 %130
  store i8* %add.ptr214, i8** %pat_end, align 8
  %131 = load i8, i8* %is_utf8_pat, align 1
  %tobool215 = trunc i8 %131 to i1
  br i1 %tobool215, label %cond.true217, label %cond.false219

cond.true217:                                     ; preds = %do_exactf_utf8
  %132 = load i8*, i8** %pat_string, align 8
  %133 = load i8*, i8** %pat_end, align 8
  %call218 = call i64 @Perl_utf8_length(i8* %132, i8* %133)
  br label %cond.end220

cond.false219:                                    ; preds = %do_exactf_utf8
  %134 = load i64, i64* %ln, align 8
  br label %cond.end220

cond.end220:                                      ; preds = %cond.false219, %cond.true217
  %cond221 = phi i64 [ %call218, %cond.true217 ], [ %134, %cond.false219 ]
  store i64 %cond221, i64* %lnc, align 8
  %135 = load i8, i8* %utf8_target, align 1
  %tobool222 = trunc i8 %135 to i1
  %136 = zext i1 %tobool222 to i64
  %cond224 = select i1 %tobool222, i32 3, i32 2
  store i32 %cond224, i32* %expansion, align 4
  %137 = load i64, i64* %lnc, align 8
  %138 = load i32, i32* %expansion, align 4
  %conv225 = zext i32 %138 to i64
  %add = add i64 %137, %conv225
  %sub226 = sub i64 %add, 1
  %139 = load i32, i32* %expansion, align 4
  %conv227 = zext i32 %139 to i64
  %div = udiv i64 %sub226, %conv227
  store i64 %div, i64* %lnc, align 8
  %140 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target228 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %140, i32 0, i32 14
  %141 = load i8, i8* %is_utf8_target228, align 2
  %tobool229 = trunc i8 %141 to i1
  br i1 %tobool229, label %cond.true231, label %cond.false234

cond.true231:                                     ; preds = %cond.end220
  %142 = load i8*, i8** %strend.addr, align 8
  %143 = load i64, i64* %lnc, align 8
  %sub232 = sub nsw i64 0, %143
  %144 = load i8*, i8** %s.addr, align 8
  %call233 = call i8* @S_reghop3(i8* %142, i64 %sub232, i8* %144)
  br label %cond.end237

cond.false234:                                    ; preds = %cond.end220
  %145 = load i8*, i8** %strend.addr, align 8
  %146 = load i64, i64* %lnc, align 8
  %sub235 = sub nsw i64 0, %146
  %add.ptr236 = getelementptr inbounds i8, i8* %145, i64 %sub235
  br label %cond.end237

cond.end237:                                      ; preds = %cond.false234, %cond.true231
  %cond238 = phi i8* [ %call233, %cond.true231 ], [ %add.ptr236, %cond.false234 ]
  store i8* %cond238, i8** %e, align 8
  %147 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit239 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %147, i32 0, i32 12
  %148 = load i8, i8* %intuit239, align 8
  %tobool240 = trunc i8 %148 to i1
  br i1 %tobool240, label %land.lhs.true242, label %if.end246

land.lhs.true242:                                 ; preds = %cond.end237
  %149 = load i8*, i8** %e, align 8
  %150 = load i8*, i8** %s.addr, align 8
  %cmp243 = icmp ult i8* %149, %150
  br i1 %cmp243, label %if.then245, label %if.end246

if.then245:                                       ; preds = %land.lhs.true242
  %151 = load i8*, i8** %s.addr, align 8
  store i8* %151, i8** %e, align 8
  br label %if.end246

if.end246:                                        ; preds = %if.then245, %land.lhs.true242, %cond.end237
  br label %while.cond247

while.cond247:                                    ; preds = %cond.end272, %if.end246
  %152 = load i8*, i8** %s.addr, align 8
  %153 = load i8*, i8** %e, align 8
  %cmp248 = icmp ule i8* %152, %153
  br i1 %cmp248, label %while.body250, label %while.end276

while.body250:                                    ; preds = %while.cond247
  %154 = load i8*, i8** %strend.addr, align 8
  store i8* %154, i8** %my_strend, align 8
  %155 = load i8*, i8** %s.addr, align 8
  %156 = load i8, i8* %utf8_target, align 1
  %tobool251 = trunc i8 %156 to i1
  %157 = load i8*, i8** %pat_string, align 8
  %158 = load i64, i64* %ln, align 8
  %159 = load i8, i8* %is_utf8_pat, align 1
  %tobool252 = trunc i8 %159 to i1
  %160 = load i64, i64* %utf8_fold_flags, align 8
  %conv253 = trunc i64 %160 to i32
  %call254 = call i32 @Perl_foldEQ_utf8_flags(i8* %155, i8** %my_strend, i64 0, i1 zeroext %tobool251, i8* %157, i8** null, i64 %158, i1 zeroext %tobool252, i32 %conv253)
  %tobool255 = icmp ne i32 %call254, 0
  br i1 %tobool255, label %land.lhs.true256, label %if.end264

land.lhs.true256:                                 ; preds = %while.body250
  %161 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit257 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %161, i32 0, i32 12
  %162 = load i8, i8* %intuit257, align 8
  %tobool258 = trunc i8 %162 to i1
  br i1 %tobool258, label %if.then263, label %lor.lhs.false260

lor.lhs.false260:                                 ; preds = %land.lhs.true256
  %163 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call261 = call i32 @S_regtry(%struct.regmatch_info* %163, i8** %s.addr)
  %tobool262 = icmp ne i32 %call261, 0
  br i1 %tobool262, label %if.then263, label %if.end264

if.then263:                                       ; preds = %lor.lhs.false260, %land.lhs.true256
  br label %got_it

if.end264:                                        ; preds = %lor.lhs.false260, %while.body250
  %164 = load i8, i8* %utf8_target, align 1
  %tobool265 = trunc i8 %164 to i1
  br i1 %tobool265, label %cond.true267, label %cond.false271

cond.true267:                                     ; preds = %if.end264
  %165 = load i8*, i8** %s.addr, align 8
  %166 = load i8, i8* %165, align 1
  %idxprom268 = zext i8 %166 to i64
  %arrayidx269 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom268
  %167 = load i8, i8* %arrayidx269, align 1
  %conv270 = zext i8 %167 to i32
  br label %cond.end272

cond.false271:                                    ; preds = %if.end264
  br label %cond.end272

cond.end272:                                      ; preds = %cond.false271, %cond.true267
  %cond273 = phi i32 [ %conv270, %cond.true267 ], [ 1, %cond.false271 ]
  %168 = load i8*, i8** %s.addr, align 8
  %idx.ext274 = sext i32 %cond273 to i64
  %add.ptr275 = getelementptr inbounds i8, i8* %168, i64 %idx.ext274
  store i8* %add.ptr275, i8** %s.addr, align 8
  br label %while.cond247

while.end276:                                     ; preds = %while.cond247
  br label %sw.epilog4014

sw.bb277:                                         ; preds = %entry
  %169 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags278 = getelementptr inbounds %struct.regnode, %struct.regnode* %169, i32 0, i32 0
  %170 = load i8, i8* %flags278, align 2
  %conv279 = zext i8 %170 to i32
  %cmp280 = icmp ne i32 %conv279, 0
  br i1 %cmp280, label %if.then282, label %if.end286

if.then282:                                       ; preds = %sw.bb277
  %171 = load i8, i8* @PL_in_utf8_CTYPE_locale, align 1
  %tobool283 = trunc i8 %171 to i1
  br i1 %tobool283, label %if.end285, label %if.then284

if.then284:                                       ; preds = %if.then282
  call void (i32, i8*, ...) @Perl_ck_warner(i32 65, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0))
  br label %if.end285

if.end285:                                        ; preds = %if.then284, %if.then282
  br label %do_boundu

if.end286:                                        ; preds = %sw.bb277
  %172 = load i8, i8* %utf8_target, align 1
  %tobool287 = trunc i8 %172 to i1
  br i1 %tobool287, label %if.then288, label %if.else430

if.then288:                                       ; preds = %if.end286
  %173 = load i8*, i8** %s.addr, align 8
  %174 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %174, i32 0, i32 1
  %175 = load i8*, i8** %strbeg, align 8
  %cmp289 = icmp eq i8* %173, %175
  br i1 %cmp289, label %if.then291, label %if.else292

if.then291:                                       ; preds = %if.then288
  store i32 10, i32* %tmp, align 4
  br label %if.end301

if.else292:                                       ; preds = %if.then288
  %176 = load i8*, i8** %s.addr, align 8
  %177 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg293 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %177, i32 0, i32 1
  %178 = load i8*, i8** %strbeg293, align 8
  %call294 = call i8* @S_reghop3(i8* %176, i64 -1, i8* %178)
  store i8* %call294, i8** %r, align 8
  %179 = load i8*, i8** %r, align 8
  %180 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend295 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %180, i32 0, i32 2
  %181 = load i8*, i8** %strend295, align 8
  %182 = load i8*, i8** %r, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %181 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %182 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call296 = call zeroext i1 @Perl_ckwarn(i32 44)
  %183 = zext i1 %call296 to i64
  %cond298 = select i1 %call296, i32 0, i32 1
  %call299 = call i64 @Perl_utf8n_to_uvchr(i8* %179, i64 %sub.ptr.sub, i64* null, i32 %cond298)
  %conv300 = trunc i64 %call299 to i32
  store i32 %conv300, i32* %tmp, align 4
  br label %if.end301

if.end301:                                        ; preds = %if.else292, %if.then291
  %184 = load i32, i32* %tmp, align 4
  %cmp302 = icmp slt i32 %184, 256
  br i1 %cmp302, label %cond.true304, label %cond.false316

cond.true304:                                     ; preds = %if.end301
  %185 = load i32, i32* %tmp, align 4
  %and305 = and i32 %185, -128
  %cmp306 = icmp eq i32 %and305, 0
  br i1 %cmp306, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.true304
  %call308 = call i16** @__ctype_b_loc() #6
  %186 = load i16*, i16** %call308, align 8
  %187 = load i32, i32* %tmp, align 4
  %idxprom309 = sext i32 %187 to i64
  %arrayidx310 = getelementptr inbounds i16, i16* %186, i64 %idxprom309
  %188 = load i16, i16* %arrayidx310, align 2
  %conv311 = zext i16 %188 to i32
  %and312 = and i32 %conv311, 8
  %tobool313 = icmp ne i32 %and312, 0
  br i1 %tobool313, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %189 = load i32, i32* %tmp, align 4
  %cmp314 = icmp eq i32 %189, 95
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %190 = phi i1 [ true, %land.rhs ], [ %cmp314, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %cond.true304
  %191 = phi i1 [ false, %cond.true304 ], [ %190, %lor.end ]
  %land.ext = zext i1 %191 to i32
  br label %cond.end320

cond.false316:                                    ; preds = %if.end301
  %192 = load i32, i32* %tmp, align 4
  %conv317 = sext i32 %192 to i64
  %call318 = call zeroext i1 @Perl__is_uni_FOO(i8 zeroext 0, i64 %conv317)
  %conv319 = zext i1 %call318 to i32
  br label %cond.end320

cond.end320:                                      ; preds = %cond.false316, %land.end
  %cond321 = phi i32 [ %land.ext, %land.end ], [ %conv319, %cond.false316 ]
  store i32 %cond321, i32* %tmp, align 4
  br label %do.body322

do.body322:                                       ; preds = %cond.end320
  %193 = load %struct.sv*, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  %tobool323 = icmp ne %struct.sv* %193, null
  br i1 %tobool323, label %if.end327, label %if.then324

if.then324:                                       ; preds = %do.body322
  store i8 4, i8* %flags325, align 1
  %194 = load %struct.sv*, %struct.sv** getelementptr inbounds ([16 x %struct.sv*], [16 x %struct.sv*]* @PL_XPosix_ptrs, i64 0, i64 0), align 16
  %call326 = call %struct.sv* @Perl__core_swash_init(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %struct.sv* @PL_sv_undef, i32 1, i32 0, %struct.sv* %194, i8* %flags325)
  store %struct.sv* %call326, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  br label %if.end327

if.end327:                                        ; preds = %if.then324, %do.body322
  br label %do.end328

do.end328:                                        ; preds = %if.end327
  br label %do.body329

do.body329:                                       ; preds = %do.end328
  br label %while.cond330

while.cond330:                                    ; preds = %if.end422, %do.body329
  %195 = load i8*, i8** %s.addr, align 8
  %196 = load i8*, i8** %strend.addr, align 8
  %cmp331 = icmp ult i8* %195, %196
  br i1 %cmp331, label %while.body333, label %while.end428

while.body333:                                    ; preds = %while.cond330
  %197 = load i32, i32* %tmp, align 4
  %198 = load i8*, i8** %s.addr, align 8
  %199 = load i8, i8* %198, align 1
  %conv334 = zext i8 %199 to i64
  %cmp335 = icmp ult i64 %conv334, 128
  br i1 %cmp335, label %cond.true337, label %cond.false357

cond.true337:                                     ; preds = %while.body333
  %200 = load i8*, i8** %s.addr, align 8
  %201 = load i8, i8* %200, align 1
  %conv338 = zext i8 %201 to i32
  %and339 = and i32 %conv338, -128
  %cmp340 = icmp eq i32 %and339, 0
  br i1 %cmp340, label %land.rhs342, label %land.end355

land.rhs342:                                      ; preds = %cond.true337
  %call343 = call i16** @__ctype_b_loc() #6
  %202 = load i16*, i16** %call343, align 8
  %203 = load i8*, i8** %s.addr, align 8
  %204 = load i8, i8* %203, align 1
  %conv344 = zext i8 %204 to i32
  %idxprom345 = sext i32 %conv344 to i64
  %arrayidx346 = getelementptr inbounds i16, i16* %202, i64 %idxprom345
  %205 = load i16, i16* %arrayidx346, align 2
  %conv347 = zext i16 %205 to i32
  %and348 = and i32 %conv347, 8
  %tobool349 = icmp ne i32 %and348, 0
  br i1 %tobool349, label %lor.end354, label %lor.rhs350

lor.rhs350:                                       ; preds = %land.rhs342
  %206 = load i8*, i8** %s.addr, align 8
  %207 = load i8, i8* %206, align 1
  %conv351 = zext i8 %207 to i32
  %cmp352 = icmp eq i32 %conv351, 95
  br label %lor.end354

lor.end354:                                       ; preds = %lor.rhs350, %land.rhs342
  %208 = phi i1 [ true, %land.rhs342 ], [ %cmp352, %lor.rhs350 ]
  br label %land.end355

land.end355:                                      ; preds = %lor.end354, %cond.true337
  %209 = phi i1 [ false, %cond.true337 ], [ %208, %lor.end354 ]
  %land.ext356 = zext i1 %209 to i32
  br label %cond.end404

cond.false357:                                    ; preds = %while.body333
  %210 = load i8*, i8** %s.addr, align 8
  %211 = load i8, i8* %210, align 1
  %conv358 = zext i8 %211 to i32
  %and359 = and i32 %conv358, 254
  %cmp360 = icmp eq i32 %and359, 194
  br i1 %cmp360, label %cond.true362, label %cond.false399

cond.true362:                                     ; preds = %cond.false357
  %212 = load i8*, i8** %s.addr, align 8
  %213 = load i8, i8* %212, align 1
  %conv363 = zext i8 %213 to i32
  %and364 = and i32 %conv363, 31
  %shl365 = shl i32 %and364, 6
  %214 = load i8*, i8** %s.addr, align 8
  %add.ptr366 = getelementptr inbounds i8, i8* %214, i64 1
  %215 = load i8, i8* %add.ptr366, align 1
  %conv367 = zext i8 %215 to i32
  %and368 = and i32 %conv367, 63
  %or = or i32 %shl365, %and368
  %and369 = and i32 %or, -128
  %cmp370 = icmp eq i32 %and369, 0
  br i1 %cmp370, label %land.rhs372, label %land.end397

land.rhs372:                                      ; preds = %cond.true362
  %call373 = call i16** @__ctype_b_loc() #6
  %216 = load i16*, i16** %call373, align 8
  %217 = load i8*, i8** %s.addr, align 8
  %218 = load i8, i8* %217, align 1
  %conv374 = zext i8 %218 to i32
  %and375 = and i32 %conv374, 31
  %shl376 = shl i32 %and375, 6
  %219 = load i8*, i8** %s.addr, align 8
  %add.ptr377 = getelementptr inbounds i8, i8* %219, i64 1
  %220 = load i8, i8* %add.ptr377, align 1
  %conv378 = zext i8 %220 to i32
  %and379 = and i32 %conv378, 63
  %or380 = or i32 %shl376, %and379
  %idxprom381 = sext i32 %or380 to i64
  %arrayidx382 = getelementptr inbounds i16, i16* %216, i64 %idxprom381
  %221 = load i16, i16* %arrayidx382, align 2
  %conv383 = zext i16 %221 to i32
  %and384 = and i32 %conv383, 8
  %tobool385 = icmp ne i32 %and384, 0
  br i1 %tobool385, label %lor.end396, label %lor.rhs386

lor.rhs386:                                       ; preds = %land.rhs372
  %222 = load i8*, i8** %s.addr, align 8
  %223 = load i8, i8* %222, align 1
  %conv387 = zext i8 %223 to i32
  %and388 = and i32 %conv387, 31
  %shl389 = shl i32 %and388, 6
  %224 = load i8*, i8** %s.addr, align 8
  %add.ptr390 = getelementptr inbounds i8, i8* %224, i64 1
  %225 = load i8, i8* %add.ptr390, align 1
  %conv391 = zext i8 %225 to i32
  %and392 = and i32 %conv391, 63
  %or393 = or i32 %shl389, %and392
  %cmp394 = icmp eq i32 %or393, 95
  br label %lor.end396

lor.end396:                                       ; preds = %lor.rhs386, %land.rhs372
  %226 = phi i1 [ true, %land.rhs372 ], [ %cmp394, %lor.rhs386 ]
  br label %land.end397

land.end397:                                      ; preds = %lor.end396, %cond.true362
  %227 = phi i1 [ false, %cond.true362 ], [ %226, %lor.end396 ]
  %land.ext398 = zext i1 %227 to i32
  br label %cond.end402

cond.false399:                                    ; preds = %cond.false357
  %228 = load i8*, i8** %s.addr, align 8
  %call400 = call zeroext i1 @Perl__is_utf8_FOO(i8 zeroext 0, i8* %228)
  %conv401 = zext i1 %call400 to i32
  br label %cond.end402

cond.end402:                                      ; preds = %cond.false399, %land.end397
  %cond403 = phi i32 [ %land.ext398, %land.end397 ], [ %conv401, %cond.false399 ]
  br label %cond.end404

cond.end404:                                      ; preds = %cond.end402, %land.end355
  %cond405 = phi i32 [ %land.ext356, %land.end355 ], [ %cond403, %cond.end402 ]
  %tobool406 = icmp ne i32 %cond405, 0
  %lnot = xor i1 %tobool406, true
  %lnot.ext = zext i1 %lnot to i32
  %cmp407 = icmp eq i32 %197, %lnot.ext
  br i1 %cmp407, label %if.then409, label %if.else421

if.then409:                                       ; preds = %cond.end404
  %229 = load i32, i32* %tmp, align 4
  %tobool410 = icmp ne i32 %229, 0
  %lnot411 = xor i1 %tobool410, true
  %lnot.ext412 = zext i1 %lnot411 to i32
  store i32 %lnot.ext412, i32* %tmp, align 4
  %230 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit413 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %230, i32 0, i32 12
  %231 = load i8, i8* %intuit413, align 8
  %tobool414 = trunc i8 %231 to i1
  br i1 %tobool414, label %if.then419, label %lor.lhs.false416

lor.lhs.false416:                                 ; preds = %if.then409
  %232 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call417 = call i32 @S_regtry(%struct.regmatch_info* %232, i8** %s.addr)
  %tobool418 = icmp ne i32 %call417, 0
  br i1 %tobool418, label %if.then419, label %if.end420

if.then419:                                       ; preds = %lor.lhs.false416, %if.then409
  br label %got_it

if.end420:                                        ; preds = %lor.lhs.false416
  br label %if.end422

if.else421:                                       ; preds = %cond.end404
  br label %if.end422

if.end422:                                        ; preds = %if.else421, %if.end420
  %233 = load i8*, i8** %s.addr, align 8
  %234 = load i8, i8* %233, align 1
  %idxprom423 = zext i8 %234 to i64
  %arrayidx424 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom423
  %235 = load i8, i8* %arrayidx424, align 1
  %conv425 = zext i8 %235 to i32
  %236 = load i8*, i8** %s.addr, align 8
  %idx.ext426 = sext i32 %conv425 to i64
  %add.ptr427 = getelementptr inbounds i8, i8* %236, i64 %idx.ext426
  store i8* %add.ptr427, i8** %s.addr, align 8
  br label %while.cond330

while.end428:                                     ; preds = %while.cond330
  br label %do.end429

do.end429:                                        ; preds = %while.end428
  br label %if.end501

if.else430:                                       ; preds = %if.end286
  %237 = load i8*, i8** %s.addr, align 8
  %238 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg431 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %238, i32 0, i32 1
  %239 = load i8*, i8** %strbeg431, align 8
  %cmp432 = icmp ne i8* %237, %239
  br i1 %cmp432, label %cond.true434, label %cond.false437

cond.true434:                                     ; preds = %if.else430
  %240 = load i8*, i8** %s.addr, align 8
  %add.ptr435 = getelementptr inbounds i8, i8* %240, i64 -1
  %241 = load i8, i8* %add.ptr435, align 1
  %conv436 = zext i8 %241 to i32
  br label %cond.end438

cond.false437:                                    ; preds = %if.else430
  br label %cond.end438

cond.end438:                                      ; preds = %cond.false437, %cond.true434
  %cond439 = phi i32 [ %conv436, %cond.true434 ], [ 10, %cond.false437 ]
  store i32 %cond439, i32* %tmp, align 4
  %242 = load i32, i32* %tmp, align 4
  %and440 = and i32 %242, -128
  %cmp441 = icmp eq i32 %and440, 0
  br i1 %cmp441, label %land.rhs443, label %land.end454

land.rhs443:                                      ; preds = %cond.end438
  %call444 = call i16** @__ctype_b_loc() #6
  %243 = load i16*, i16** %call444, align 8
  %244 = load i32, i32* %tmp, align 4
  %idxprom445 = sext i32 %244 to i64
  %arrayidx446 = getelementptr inbounds i16, i16* %243, i64 %idxprom445
  %245 = load i16, i16* %arrayidx446, align 2
  %conv447 = zext i16 %245 to i32
  %and448 = and i32 %conv447, 8
  %tobool449 = icmp ne i32 %and448, 0
  br i1 %tobool449, label %lor.end453, label %lor.rhs450

lor.rhs450:                                       ; preds = %land.rhs443
  %246 = load i32, i32* %tmp, align 4
  %cmp451 = icmp eq i32 %246, 95
  br label %lor.end453

lor.end453:                                       ; preds = %lor.rhs450, %land.rhs443
  %247 = phi i1 [ true, %land.rhs443 ], [ %cmp451, %lor.rhs450 ]
  br label %land.end454

land.end454:                                      ; preds = %lor.end453, %cond.end438
  %248 = phi i1 [ false, %cond.end438 ], [ %247, %lor.end453 ]
  %land.ext455 = zext i1 %248 to i32
  store i32 %land.ext455, i32* %tmp, align 4
  br label %do.body456

do.body456:                                       ; preds = %land.end454
  br label %while.cond457

while.cond457:                                    ; preds = %if.end497, %do.body456
  %249 = load i8*, i8** %s.addr, align 8
  %250 = load i8*, i8** %strend.addr, align 8
  %cmp458 = icmp ult i8* %249, %250
  br i1 %cmp458, label %while.body460, label %while.end499

while.body460:                                    ; preds = %while.cond457
  %251 = load i32, i32* %tmp, align 4
  %252 = load i8*, i8** %s.addr, align 8
  %253 = load i8, i8* %252, align 1
  %conv461 = zext i8 %253 to i32
  %and462 = and i32 %conv461, -128
  %cmp463 = icmp eq i32 %and462, 0
  br i1 %cmp463, label %land.rhs465, label %land.end478

land.rhs465:                                      ; preds = %while.body460
  %call466 = call i16** @__ctype_b_loc() #6
  %254 = load i16*, i16** %call466, align 8
  %255 = load i8*, i8** %s.addr, align 8
  %256 = load i8, i8* %255, align 1
  %conv467 = zext i8 %256 to i32
  %idxprom468 = sext i32 %conv467 to i64
  %arrayidx469 = getelementptr inbounds i16, i16* %254, i64 %idxprom468
  %257 = load i16, i16* %arrayidx469, align 2
  %conv470 = zext i16 %257 to i32
  %and471 = and i32 %conv470, 8
  %tobool472 = icmp ne i32 %and471, 0
  br i1 %tobool472, label %lor.end477, label %lor.rhs473

lor.rhs473:                                       ; preds = %land.rhs465
  %258 = load i8*, i8** %s.addr, align 8
  %259 = load i8, i8* %258, align 1
  %conv474 = zext i8 %259 to i32
  %cmp475 = icmp eq i32 %conv474, 95
  br label %lor.end477

lor.end477:                                       ; preds = %lor.rhs473, %land.rhs465
  %260 = phi i1 [ true, %land.rhs465 ], [ %cmp475, %lor.rhs473 ]
  br label %land.end478

land.end478:                                      ; preds = %lor.end477, %while.body460
  %261 = phi i1 [ false, %while.body460 ], [ %260, %lor.end477 ]
  %lnot480 = xor i1 %261, true
  %lnot.ext481 = zext i1 %lnot480 to i32
  %cmp482 = icmp eq i32 %251, %lnot.ext481
  br i1 %cmp482, label %if.then484, label %if.else496

if.then484:                                       ; preds = %land.end478
  %262 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit485 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %262, i32 0, i32 12
  %263 = load i8, i8* %intuit485, align 8
  %tobool486 = trunc i8 %263 to i1
  br i1 %tobool486, label %if.then491, label %lor.lhs.false488

lor.lhs.false488:                                 ; preds = %if.then484
  %264 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call489 = call i32 @S_regtry(%struct.regmatch_info* %264, i8** %s.addr)
  %tobool490 = icmp ne i32 %call489, 0
  br i1 %tobool490, label %if.then491, label %if.end492

if.then491:                                       ; preds = %lor.lhs.false488, %if.then484
  br label %got_it

if.end492:                                        ; preds = %lor.lhs.false488
  %265 = load i32, i32* %tmp, align 4
  %tobool493 = icmp ne i32 %265, 0
  %lnot494 = xor i1 %tobool493, true
  %lnot.ext495 = zext i1 %lnot494 to i32
  store i32 %lnot.ext495, i32* %tmp, align 4
  br label %if.end497

if.else496:                                       ; preds = %land.end478
  br label %if.end497

if.end497:                                        ; preds = %if.else496, %if.end492
  %266 = load i8*, i8** %s.addr, align 8
  %incdec.ptr498 = getelementptr inbounds i8, i8* %266, i32 1
  store i8* %incdec.ptr498, i8** %s.addr, align 8
  br label %while.cond457

while.end499:                                     ; preds = %while.cond457
  br label %do.end500

do.end500:                                        ; preds = %while.end499
  br label %if.end501

if.end501:                                        ; preds = %do.end500, %do.end429
  %267 = load i32, i32* %tmp, align 4
  %call502 = call i16** @__ctype_b_loc() #6
  %268 = load i16*, i16** %call502, align 8
  %arrayidx503 = getelementptr inbounds i16, i16* %268, i64 10
  %269 = load i16, i16* %arrayidx503, align 2
  %conv504 = zext i16 %269 to i32
  %and505 = and i32 %conv504, 8
  %tobool506 = icmp ne i32 %and505, 0
  br i1 %tobool506, label %lor.end508, label %lor.rhs507

lor.rhs507:                                       ; preds = %if.end501
  br label %lor.end508

lor.end508:                                       ; preds = %lor.rhs507, %if.end501
  %270 = phi i1 [ true, %if.end501 ], [ false, %lor.rhs507 ]
  %lnot510 = xor i1 %270, true
  %lnot.ext511 = zext i1 %lnot510 to i32
  %cmp512 = icmp eq i32 %267, %lnot.ext511
  br i1 %cmp512, label %if.then514, label %if.else523

if.then514:                                       ; preds = %lor.end508
  %271 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit515 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %271, i32 0, i32 12
  %272 = load i8, i8* %intuit515, align 8
  %tobool516 = trunc i8 %272 to i1
  br i1 %tobool516, label %if.then521, label %lor.lhs.false518

lor.lhs.false518:                                 ; preds = %if.then514
  %273 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call519 = call i32 @S_regtry(%struct.regmatch_info* %273, i8** %s.addr)
  %tobool520 = icmp ne i32 %call519, 0
  br i1 %tobool520, label %if.then521, label %if.end522

if.then521:                                       ; preds = %lor.lhs.false518, %if.then514
  br label %got_it

if.end522:                                        ; preds = %lor.lhs.false518
  br label %if.end524

if.else523:                                       ; preds = %lor.end508
  br label %if.end524

if.end524:                                        ; preds = %if.else523, %if.end522
  br label %sw.epilog4014

sw.bb525:                                         ; preds = %entry
  %274 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags526 = getelementptr inbounds %struct.regnode, %struct.regnode* %274, i32 0, i32 0
  %275 = load i8, i8* %flags526, align 2
  %conv527 = zext i8 %275 to i32
  %cmp528 = icmp ne i32 %conv527, 0
  br i1 %cmp528, label %if.then530, label %if.end534

if.then530:                                       ; preds = %sw.bb525
  %276 = load i8, i8* @PL_in_utf8_CTYPE_locale, align 1
  %tobool531 = trunc i8 %276 to i1
  br i1 %tobool531, label %if.end533, label %if.then532

if.then532:                                       ; preds = %if.then530
  call void (i32, i8*, ...) @Perl_ck_warner(i32 65, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0))
  br label %if.end533

if.end533:                                        ; preds = %if.then532, %if.then530
  br label %do_nboundu

if.end534:                                        ; preds = %sw.bb525
  %277 = load i8, i8* %utf8_target, align 1
  %tobool535 = trunc i8 %277 to i1
  br i1 %tobool535, label %if.then536, label %if.else691

if.then536:                                       ; preds = %if.end534
  %278 = load i8*, i8** %s.addr, align 8
  %279 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg537 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %279, i32 0, i32 1
  %280 = load i8*, i8** %strbeg537, align 8
  %cmp538 = icmp eq i8* %278, %280
  br i1 %cmp538, label %if.then540, label %if.else541

if.then540:                                       ; preds = %if.then536
  store i32 10, i32* %tmp, align 4
  br label %if.end554

if.else541:                                       ; preds = %if.then536
  %281 = load i8*, i8** %s.addr, align 8
  %282 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg543 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %282, i32 0, i32 1
  %283 = load i8*, i8** %strbeg543, align 8
  %call544 = call i8* @S_reghop3(i8* %281, i64 -1, i8* %283)
  store i8* %call544, i8** %r542, align 8
  %284 = load i8*, i8** %r542, align 8
  %285 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend545 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %285, i32 0, i32 2
  %286 = load i8*, i8** %strend545, align 8
  %287 = load i8*, i8** %r542, align 8
  %sub.ptr.lhs.cast546 = ptrtoint i8* %286 to i64
  %sub.ptr.rhs.cast547 = ptrtoint i8* %287 to i64
  %sub.ptr.sub548 = sub i64 %sub.ptr.lhs.cast546, %sub.ptr.rhs.cast547
  %call549 = call zeroext i1 @Perl_ckwarn(i32 44)
  %288 = zext i1 %call549 to i64
  %cond551 = select i1 %call549, i32 0, i32 1
  %call552 = call i64 @Perl_utf8n_to_uvchr(i8* %284, i64 %sub.ptr.sub548, i64* null, i32 %cond551)
  %conv553 = trunc i64 %call552 to i32
  store i32 %conv553, i32* %tmp, align 4
  br label %if.end554

if.end554:                                        ; preds = %if.else541, %if.then540
  %289 = load i32, i32* %tmp, align 4
  %cmp555 = icmp slt i32 %289, 256
  br i1 %cmp555, label %cond.true557, label %cond.false574

cond.true557:                                     ; preds = %if.end554
  %290 = load i32, i32* %tmp, align 4
  %and558 = and i32 %290, -128
  %cmp559 = icmp eq i32 %and558, 0
  br i1 %cmp559, label %land.rhs561, label %land.end572

land.rhs561:                                      ; preds = %cond.true557
  %call562 = call i16** @__ctype_b_loc() #6
  %291 = load i16*, i16** %call562, align 8
  %292 = load i32, i32* %tmp, align 4
  %idxprom563 = sext i32 %292 to i64
  %arrayidx564 = getelementptr inbounds i16, i16* %291, i64 %idxprom563
  %293 = load i16, i16* %arrayidx564, align 2
  %conv565 = zext i16 %293 to i32
  %and566 = and i32 %conv565, 8
  %tobool567 = icmp ne i32 %and566, 0
  br i1 %tobool567, label %lor.end571, label %lor.rhs568

lor.rhs568:                                       ; preds = %land.rhs561
  %294 = load i32, i32* %tmp, align 4
  %cmp569 = icmp eq i32 %294, 95
  br label %lor.end571

lor.end571:                                       ; preds = %lor.rhs568, %land.rhs561
  %295 = phi i1 [ true, %land.rhs561 ], [ %cmp569, %lor.rhs568 ]
  br label %land.end572

land.end572:                                      ; preds = %lor.end571, %cond.true557
  %296 = phi i1 [ false, %cond.true557 ], [ %295, %lor.end571 ]
  %land.ext573 = zext i1 %296 to i32
  br label %cond.end578

cond.false574:                                    ; preds = %if.end554
  %297 = load i32, i32* %tmp, align 4
  %conv575 = sext i32 %297 to i64
  %call576 = call zeroext i1 @Perl__is_uni_FOO(i8 zeroext 0, i64 %conv575)
  %conv577 = zext i1 %call576 to i32
  br label %cond.end578

cond.end578:                                      ; preds = %cond.false574, %land.end572
  %cond579 = phi i32 [ %land.ext573, %land.end572 ], [ %conv577, %cond.false574 ]
  store i32 %cond579, i32* %tmp, align 4
  br label %do.body580

do.body580:                                       ; preds = %cond.end578
  %298 = load %struct.sv*, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  %tobool581 = icmp ne %struct.sv* %298, null
  br i1 %tobool581, label %if.end585, label %if.then582

if.then582:                                       ; preds = %do.body580
  store i8 4, i8* %flags583, align 1
  %299 = load %struct.sv*, %struct.sv** getelementptr inbounds ([16 x %struct.sv*], [16 x %struct.sv*]* @PL_XPosix_ptrs, i64 0, i64 0), align 16
  %call584 = call %struct.sv* @Perl__core_swash_init(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %struct.sv* @PL_sv_undef, i32 1, i32 0, %struct.sv* %299, i8* %flags583)
  store %struct.sv* %call584, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  br label %if.end585

if.end585:                                        ; preds = %if.then582, %do.body580
  br label %do.end586

do.end586:                                        ; preds = %if.end585
  br label %do.body587

do.body587:                                       ; preds = %do.end586
  br label %while.cond588

while.cond588:                                    ; preds = %if.end683, %do.body587
  %300 = load i8*, i8** %s.addr, align 8
  %301 = load i8*, i8** %strend.addr, align 8
  %cmp589 = icmp ult i8* %300, %301
  br i1 %cmp589, label %while.body591, label %while.end689

while.body591:                                    ; preds = %while.cond588
  %302 = load i32, i32* %tmp, align 4
  %303 = load i8*, i8** %s.addr, align 8
  %304 = load i8, i8* %303, align 1
  %conv592 = zext i8 %304 to i64
  %cmp593 = icmp ult i64 %conv592, 128
  br i1 %cmp593, label %cond.true595, label %cond.false615

cond.true595:                                     ; preds = %while.body591
  %305 = load i8*, i8** %s.addr, align 8
  %306 = load i8, i8* %305, align 1
  %conv596 = zext i8 %306 to i32
  %and597 = and i32 %conv596, -128
  %cmp598 = icmp eq i32 %and597, 0
  br i1 %cmp598, label %land.rhs600, label %land.end613

land.rhs600:                                      ; preds = %cond.true595
  %call601 = call i16** @__ctype_b_loc() #6
  %307 = load i16*, i16** %call601, align 8
  %308 = load i8*, i8** %s.addr, align 8
  %309 = load i8, i8* %308, align 1
  %conv602 = zext i8 %309 to i32
  %idxprom603 = sext i32 %conv602 to i64
  %arrayidx604 = getelementptr inbounds i16, i16* %307, i64 %idxprom603
  %310 = load i16, i16* %arrayidx604, align 2
  %conv605 = zext i16 %310 to i32
  %and606 = and i32 %conv605, 8
  %tobool607 = icmp ne i32 %and606, 0
  br i1 %tobool607, label %lor.end612, label %lor.rhs608

lor.rhs608:                                       ; preds = %land.rhs600
  %311 = load i8*, i8** %s.addr, align 8
  %312 = load i8, i8* %311, align 1
  %conv609 = zext i8 %312 to i32
  %cmp610 = icmp eq i32 %conv609, 95
  br label %lor.end612

lor.end612:                                       ; preds = %lor.rhs608, %land.rhs600
  %313 = phi i1 [ true, %land.rhs600 ], [ %cmp610, %lor.rhs608 ]
  br label %land.end613

land.end613:                                      ; preds = %lor.end612, %cond.true595
  %314 = phi i1 [ false, %cond.true595 ], [ %313, %lor.end612 ]
  %land.ext614 = zext i1 %314 to i32
  br label %cond.end663

cond.false615:                                    ; preds = %while.body591
  %315 = load i8*, i8** %s.addr, align 8
  %316 = load i8, i8* %315, align 1
  %conv616 = zext i8 %316 to i32
  %and617 = and i32 %conv616, 254
  %cmp618 = icmp eq i32 %and617, 194
  br i1 %cmp618, label %cond.true620, label %cond.false658

cond.true620:                                     ; preds = %cond.false615
  %317 = load i8*, i8** %s.addr, align 8
  %318 = load i8, i8* %317, align 1
  %conv621 = zext i8 %318 to i32
  %and622 = and i32 %conv621, 31
  %shl623 = shl i32 %and622, 6
  %319 = load i8*, i8** %s.addr, align 8
  %add.ptr624 = getelementptr inbounds i8, i8* %319, i64 1
  %320 = load i8, i8* %add.ptr624, align 1
  %conv625 = zext i8 %320 to i32
  %and626 = and i32 %conv625, 63
  %or627 = or i32 %shl623, %and626
  %and628 = and i32 %or627, -128
  %cmp629 = icmp eq i32 %and628, 0
  br i1 %cmp629, label %land.rhs631, label %land.end656

land.rhs631:                                      ; preds = %cond.true620
  %call632 = call i16** @__ctype_b_loc() #6
  %321 = load i16*, i16** %call632, align 8
  %322 = load i8*, i8** %s.addr, align 8
  %323 = load i8, i8* %322, align 1
  %conv633 = zext i8 %323 to i32
  %and634 = and i32 %conv633, 31
  %shl635 = shl i32 %and634, 6
  %324 = load i8*, i8** %s.addr, align 8
  %add.ptr636 = getelementptr inbounds i8, i8* %324, i64 1
  %325 = load i8, i8* %add.ptr636, align 1
  %conv637 = zext i8 %325 to i32
  %and638 = and i32 %conv637, 63
  %or639 = or i32 %shl635, %and638
  %idxprom640 = sext i32 %or639 to i64
  %arrayidx641 = getelementptr inbounds i16, i16* %321, i64 %idxprom640
  %326 = load i16, i16* %arrayidx641, align 2
  %conv642 = zext i16 %326 to i32
  %and643 = and i32 %conv642, 8
  %tobool644 = icmp ne i32 %and643, 0
  br i1 %tobool644, label %lor.end655, label %lor.rhs645

lor.rhs645:                                       ; preds = %land.rhs631
  %327 = load i8*, i8** %s.addr, align 8
  %328 = load i8, i8* %327, align 1
  %conv646 = zext i8 %328 to i32
  %and647 = and i32 %conv646, 31
  %shl648 = shl i32 %and647, 6
  %329 = load i8*, i8** %s.addr, align 8
  %add.ptr649 = getelementptr inbounds i8, i8* %329, i64 1
  %330 = load i8, i8* %add.ptr649, align 1
  %conv650 = zext i8 %330 to i32
  %and651 = and i32 %conv650, 63
  %or652 = or i32 %shl648, %and651
  %cmp653 = icmp eq i32 %or652, 95
  br label %lor.end655

lor.end655:                                       ; preds = %lor.rhs645, %land.rhs631
  %331 = phi i1 [ true, %land.rhs631 ], [ %cmp653, %lor.rhs645 ]
  br label %land.end656

land.end656:                                      ; preds = %lor.end655, %cond.true620
  %332 = phi i1 [ false, %cond.true620 ], [ %331, %lor.end655 ]
  %land.ext657 = zext i1 %332 to i32
  br label %cond.end661

cond.false658:                                    ; preds = %cond.false615
  %333 = load i8*, i8** %s.addr, align 8
  %call659 = call zeroext i1 @Perl__is_utf8_FOO(i8 zeroext 0, i8* %333)
  %conv660 = zext i1 %call659 to i32
  br label %cond.end661

cond.end661:                                      ; preds = %cond.false658, %land.end656
  %cond662 = phi i32 [ %land.ext657, %land.end656 ], [ %conv660, %cond.false658 ]
  br label %cond.end663

cond.end663:                                      ; preds = %cond.end661, %land.end613
  %cond664 = phi i32 [ %land.ext614, %land.end613 ], [ %cond662, %cond.end661 ]
  %tobool665 = icmp ne i32 %cond664, 0
  %lnot666 = xor i1 %tobool665, true
  %lnot.ext667 = zext i1 %lnot666 to i32
  %cmp668 = icmp eq i32 %302, %lnot.ext667
  br i1 %cmp668, label %if.then670, label %if.else674

if.then670:                                       ; preds = %cond.end663
  %334 = load i32, i32* %tmp, align 4
  %tobool671 = icmp ne i32 %334, 0
  %lnot672 = xor i1 %tobool671, true
  %lnot.ext673 = zext i1 %lnot672 to i32
  store i32 %lnot.ext673, i32* %tmp, align 4
  br label %if.end683

if.else674:                                       ; preds = %cond.end663
  %335 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit675 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %335, i32 0, i32 12
  %336 = load i8, i8* %intuit675, align 8
  %tobool676 = trunc i8 %336 to i1
  br i1 %tobool676, label %if.then681, label %lor.lhs.false678

lor.lhs.false678:                                 ; preds = %if.else674
  %337 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call679 = call i32 @S_regtry(%struct.regmatch_info* %337, i8** %s.addr)
  %tobool680 = icmp ne i32 %call679, 0
  br i1 %tobool680, label %if.then681, label %if.end682

if.then681:                                       ; preds = %lor.lhs.false678, %if.else674
  br label %got_it

if.end682:                                        ; preds = %lor.lhs.false678
  br label %if.end683

if.end683:                                        ; preds = %if.end682, %if.then670
  %338 = load i8*, i8** %s.addr, align 8
  %339 = load i8, i8* %338, align 1
  %idxprom684 = zext i8 %339 to i64
  %arrayidx685 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom684
  %340 = load i8, i8* %arrayidx685, align 1
  %conv686 = zext i8 %340 to i32
  %341 = load i8*, i8** %s.addr, align 8
  %idx.ext687 = sext i32 %conv686 to i64
  %add.ptr688 = getelementptr inbounds i8, i8* %341, i64 %idx.ext687
  store i8* %add.ptr688, i8** %s.addr, align 8
  br label %while.cond588

while.end689:                                     ; preds = %while.cond588
  br label %do.end690

do.end690:                                        ; preds = %while.end689
  br label %if.end762

if.else691:                                       ; preds = %if.end534
  %342 = load i8*, i8** %s.addr, align 8
  %343 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg692 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %343, i32 0, i32 1
  %344 = load i8*, i8** %strbeg692, align 8
  %cmp693 = icmp ne i8* %342, %344
  br i1 %cmp693, label %cond.true695, label %cond.false698

cond.true695:                                     ; preds = %if.else691
  %345 = load i8*, i8** %s.addr, align 8
  %add.ptr696 = getelementptr inbounds i8, i8* %345, i64 -1
  %346 = load i8, i8* %add.ptr696, align 1
  %conv697 = zext i8 %346 to i32
  br label %cond.end699

cond.false698:                                    ; preds = %if.else691
  br label %cond.end699

cond.end699:                                      ; preds = %cond.false698, %cond.true695
  %cond700 = phi i32 [ %conv697, %cond.true695 ], [ 10, %cond.false698 ]
  store i32 %cond700, i32* %tmp, align 4
  %347 = load i32, i32* %tmp, align 4
  %and701 = and i32 %347, -128
  %cmp702 = icmp eq i32 %and701, 0
  br i1 %cmp702, label %land.rhs704, label %land.end715

land.rhs704:                                      ; preds = %cond.end699
  %call705 = call i16** @__ctype_b_loc() #6
  %348 = load i16*, i16** %call705, align 8
  %349 = load i32, i32* %tmp, align 4
  %idxprom706 = sext i32 %349 to i64
  %arrayidx707 = getelementptr inbounds i16, i16* %348, i64 %idxprom706
  %350 = load i16, i16* %arrayidx707, align 2
  %conv708 = zext i16 %350 to i32
  %and709 = and i32 %conv708, 8
  %tobool710 = icmp ne i32 %and709, 0
  br i1 %tobool710, label %lor.end714, label %lor.rhs711

lor.rhs711:                                       ; preds = %land.rhs704
  %351 = load i32, i32* %tmp, align 4
  %cmp712 = icmp eq i32 %351, 95
  br label %lor.end714

lor.end714:                                       ; preds = %lor.rhs711, %land.rhs704
  %352 = phi i1 [ true, %land.rhs704 ], [ %cmp712, %lor.rhs711 ]
  br label %land.end715

land.end715:                                      ; preds = %lor.end714, %cond.end699
  %353 = phi i1 [ false, %cond.end699 ], [ %352, %lor.end714 ]
  %land.ext716 = zext i1 %353 to i32
  store i32 %land.ext716, i32* %tmp, align 4
  br label %do.body717

do.body717:                                       ; preds = %land.end715
  br label %while.cond718

while.cond718:                                    ; preds = %if.end758, %do.body717
  %354 = load i8*, i8** %s.addr, align 8
  %355 = load i8*, i8** %strend.addr, align 8
  %cmp719 = icmp ult i8* %354, %355
  br i1 %cmp719, label %while.body721, label %while.end760

while.body721:                                    ; preds = %while.cond718
  %356 = load i32, i32* %tmp, align 4
  %357 = load i8*, i8** %s.addr, align 8
  %358 = load i8, i8* %357, align 1
  %conv722 = zext i8 %358 to i32
  %and723 = and i32 %conv722, -128
  %cmp724 = icmp eq i32 %and723, 0
  br i1 %cmp724, label %land.rhs726, label %land.end739

land.rhs726:                                      ; preds = %while.body721
  %call727 = call i16** @__ctype_b_loc() #6
  %359 = load i16*, i16** %call727, align 8
  %360 = load i8*, i8** %s.addr, align 8
  %361 = load i8, i8* %360, align 1
  %conv728 = zext i8 %361 to i32
  %idxprom729 = sext i32 %conv728 to i64
  %arrayidx730 = getelementptr inbounds i16, i16* %359, i64 %idxprom729
  %362 = load i16, i16* %arrayidx730, align 2
  %conv731 = zext i16 %362 to i32
  %and732 = and i32 %conv731, 8
  %tobool733 = icmp ne i32 %and732, 0
  br i1 %tobool733, label %lor.end738, label %lor.rhs734

lor.rhs734:                                       ; preds = %land.rhs726
  %363 = load i8*, i8** %s.addr, align 8
  %364 = load i8, i8* %363, align 1
  %conv735 = zext i8 %364 to i32
  %cmp736 = icmp eq i32 %conv735, 95
  br label %lor.end738

lor.end738:                                       ; preds = %lor.rhs734, %land.rhs726
  %365 = phi i1 [ true, %land.rhs726 ], [ %cmp736, %lor.rhs734 ]
  br label %land.end739

land.end739:                                      ; preds = %lor.end738, %while.body721
  %366 = phi i1 [ false, %while.body721 ], [ %365, %lor.end738 ]
  %lnot741 = xor i1 %366, true
  %lnot.ext742 = zext i1 %lnot741 to i32
  %cmp743 = icmp eq i32 %356, %lnot.ext742
  br i1 %cmp743, label %if.then745, label %if.else749

if.then745:                                       ; preds = %land.end739
  %367 = load i32, i32* %tmp, align 4
  %tobool746 = icmp ne i32 %367, 0
  %lnot747 = xor i1 %tobool746, true
  %lnot.ext748 = zext i1 %lnot747 to i32
  store i32 %lnot.ext748, i32* %tmp, align 4
  br label %if.end758

if.else749:                                       ; preds = %land.end739
  %368 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit750 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %368, i32 0, i32 12
  %369 = load i8, i8* %intuit750, align 8
  %tobool751 = trunc i8 %369 to i1
  br i1 %tobool751, label %if.then756, label %lor.lhs.false753

lor.lhs.false753:                                 ; preds = %if.else749
  %370 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call754 = call i32 @S_regtry(%struct.regmatch_info* %370, i8** %s.addr)
  %tobool755 = icmp ne i32 %call754, 0
  br i1 %tobool755, label %if.then756, label %if.end757

if.then756:                                       ; preds = %lor.lhs.false753, %if.else749
  br label %got_it

if.end757:                                        ; preds = %lor.lhs.false753
  br label %if.end758

if.end758:                                        ; preds = %if.end757, %if.then745
  %371 = load i8*, i8** %s.addr, align 8
  %incdec.ptr759 = getelementptr inbounds i8, i8* %371, i32 1
  store i8* %incdec.ptr759, i8** %s.addr, align 8
  br label %while.cond718

while.end760:                                     ; preds = %while.cond718
  br label %do.end761

do.end761:                                        ; preds = %while.end760
  br label %if.end762

if.end762:                                        ; preds = %do.end761, %do.end690
  %372 = load i32, i32* %tmp, align 4
  %call763 = call i16** @__ctype_b_loc() #6
  %373 = load i16*, i16** %call763, align 8
  %arrayidx764 = getelementptr inbounds i16, i16* %373, i64 10
  %374 = load i16, i16* %arrayidx764, align 2
  %conv765 = zext i16 %374 to i32
  %and766 = and i32 %conv765, 8
  %tobool767 = icmp ne i32 %and766, 0
  br i1 %tobool767, label %lor.end769, label %lor.rhs768

lor.rhs768:                                       ; preds = %if.end762
  br label %lor.end769

lor.end769:                                       ; preds = %lor.rhs768, %if.end762
  %375 = phi i1 [ true, %if.end762 ], [ false, %lor.rhs768 ]
  %lnot771 = xor i1 %375, true
  %lnot.ext772 = zext i1 %lnot771 to i32
  %cmp773 = icmp eq i32 %372, %lnot.ext772
  br i1 %cmp773, label %if.then775, label %if.else776

if.then775:                                       ; preds = %lor.end769
  br label %if.end785

if.else776:                                       ; preds = %lor.end769
  %376 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit777 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %376, i32 0, i32 12
  %377 = load i8, i8* %intuit777, align 8
  %tobool778 = trunc i8 %377 to i1
  br i1 %tobool778, label %if.then783, label %lor.lhs.false780

lor.lhs.false780:                                 ; preds = %if.else776
  %378 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call781 = call i32 @S_regtry(%struct.regmatch_info* %378, i8** %s.addr)
  %tobool782 = icmp ne i32 %call781, 0
  br i1 %tobool782, label %if.then783, label %if.end784

if.then783:                                       ; preds = %lor.lhs.false780, %if.else776
  br label %got_it

if.end784:                                        ; preds = %lor.lhs.false780
  br label %if.end785

if.end785:                                        ; preds = %if.end784, %if.then775
  br label %sw.epilog4014

sw.bb786:                                         ; preds = %entry
  %379 = load i8, i8* %utf8_target, align 1
  %tobool787 = trunc i8 %379 to i1
  br i1 %tobool787, label %if.then788, label %if.else915

if.then788:                                       ; preds = %sw.bb786
  %380 = load i8*, i8** %s.addr, align 8
  %381 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg789 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %381, i32 0, i32 1
  %382 = load i8*, i8** %strbeg789, align 8
  %cmp790 = icmp eq i8* %380, %382
  br i1 %cmp790, label %if.then792, label %if.else793

if.then792:                                       ; preds = %if.then788
  store i32 10, i32* %tmp, align 4
  br label %if.end806

if.else793:                                       ; preds = %if.then788
  %383 = load i8*, i8** %s.addr, align 8
  %384 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg795 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %384, i32 0, i32 1
  %385 = load i8*, i8** %strbeg795, align 8
  %call796 = call i8* @S_reghop3(i8* %383, i64 -1, i8* %385)
  store i8* %call796, i8** %r794, align 8
  %386 = load i8*, i8** %r794, align 8
  %387 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend797 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %387, i32 0, i32 2
  %388 = load i8*, i8** %strend797, align 8
  %389 = load i8*, i8** %r794, align 8
  %sub.ptr.lhs.cast798 = ptrtoint i8* %388 to i64
  %sub.ptr.rhs.cast799 = ptrtoint i8* %389 to i64
  %sub.ptr.sub800 = sub i64 %sub.ptr.lhs.cast798, %sub.ptr.rhs.cast799
  %call801 = call zeroext i1 @Perl_ckwarn(i32 44)
  %390 = zext i1 %call801 to i64
  %cond803 = select i1 %call801, i32 0, i32 1
  %call804 = call i64 @Perl_utf8n_to_uvchr(i8* %386, i64 %sub.ptr.sub800, i64* null, i32 %cond803)
  %conv805 = trunc i64 %call804 to i32
  store i32 %conv805, i32* %tmp, align 4
  br label %if.end806

if.end806:                                        ; preds = %if.else793, %if.then792
  %391 = load i32, i32* %tmp, align 4
  %cmp807 = icmp slt i32 %391, 256
  br i1 %cmp807, label %cond.true809, label %cond.false822

cond.true809:                                     ; preds = %if.end806
  %392 = load i32, i32* %tmp, align 4
  %conv810 = sext i32 %392 to i64
  %and811 = and i64 %conv810, -256
  %tobool812 = icmp ne i64 %and811, 0
  br i1 %tobool812, label %land.end819, label %land.rhs813

land.rhs813:                                      ; preds = %cond.true809
  %393 = load i32, i32* %tmp, align 4
  %conv814 = trunc i32 %393 to i8
  %idxprom815 = zext i8 %conv814 to i64
  %arrayidx816 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom815
  %394 = load i32, i32* %arrayidx816, align 4
  %and817 = and i32 %394, 1
  %tobool818 = icmp ne i32 %and817, 0
  br label %land.end819

land.end819:                                      ; preds = %land.rhs813, %cond.true809
  %395 = phi i1 [ false, %cond.true809 ], [ %tobool818, %land.rhs813 ]
  %396 = zext i1 %395 to i64
  %cond821 = select i1 %395, i32 1, i32 0
  br label %cond.end826

cond.false822:                                    ; preds = %if.end806
  %397 = load i32, i32* %tmp, align 4
  %conv823 = sext i32 %397 to i64
  %call824 = call zeroext i1 @Perl__is_uni_FOO(i8 zeroext 0, i64 %conv823)
  %conv825 = zext i1 %call824 to i32
  br label %cond.end826

cond.end826:                                      ; preds = %cond.false822, %land.end819
  %cond827 = phi i32 [ %cond821, %land.end819 ], [ %conv825, %cond.false822 ]
  store i32 %cond827, i32* %tmp, align 4
  br label %do.body828

do.body828:                                       ; preds = %cond.end826
  %398 = load %struct.sv*, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  %tobool829 = icmp ne %struct.sv* %398, null
  br i1 %tobool829, label %if.end833, label %if.then830

if.then830:                                       ; preds = %do.body828
  store i8 4, i8* %flags831, align 1
  %399 = load %struct.sv*, %struct.sv** getelementptr inbounds ([16 x %struct.sv*], [16 x %struct.sv*]* @PL_XPosix_ptrs, i64 0, i64 0), align 16
  %call832 = call %struct.sv* @Perl__core_swash_init(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %struct.sv* @PL_sv_undef, i32 1, i32 0, %struct.sv* %399, i8* %flags831)
  store %struct.sv* %call832, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  br label %if.end833

if.end833:                                        ; preds = %if.then830, %do.body828
  br label %do.end834

do.end834:                                        ; preds = %if.end833
  br label %do.body835

do.body835:                                       ; preds = %do.end834
  br label %while.cond836

while.cond836:                                    ; preds = %if.end907, %do.body835
  %400 = load i8*, i8** %s.addr, align 8
  %401 = load i8*, i8** %strend.addr, align 8
  %cmp837 = icmp ult i8* %400, %401
  br i1 %cmp837, label %while.body839, label %while.end913

while.body839:                                    ; preds = %while.cond836
  %402 = load i32, i32* %tmp, align 4
  %403 = load i8*, i8** %s.addr, align 8
  %404 = load i8, i8* %403, align 1
  %conv840 = zext i8 %404 to i64
  %cmp841 = icmp ult i64 %conv840, 128
  br i1 %cmp841, label %cond.true843, label %cond.false850

cond.true843:                                     ; preds = %while.body839
  %405 = load i8*, i8** %s.addr, align 8
  %406 = load i8, i8* %405, align 1
  %idxprom844 = zext i8 %406 to i64
  %arrayidx845 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom844
  %407 = load i32, i32* %arrayidx845, align 4
  %and846 = and i32 %407, 1
  %tobool847 = icmp ne i32 %and846, 0
  %408 = zext i1 %tobool847 to i64
  %cond849 = select i1 %tobool847, i32 1, i32 0
  br label %cond.end887

cond.false850:                                    ; preds = %while.body839
  %409 = load i8*, i8** %s.addr, align 8
  %410 = load i8, i8* %409, align 1
  %conv851 = zext i8 %410 to i32
  %and852 = and i32 %conv851, 254
  %cmp853 = icmp eq i32 %and852, 194
  br i1 %cmp853, label %cond.true855, label %cond.false882

cond.true855:                                     ; preds = %cond.false850
  %411 = load i8*, i8** %s.addr, align 8
  %412 = load i8, i8* %411, align 1
  %conv856 = zext i8 %412 to i32
  %and857 = and i32 %conv856, 31
  %shl858 = shl i32 %and857, 6
  %413 = load i8*, i8** %s.addr, align 8
  %add.ptr859 = getelementptr inbounds i8, i8* %413, i64 1
  %414 = load i8, i8* %add.ptr859, align 1
  %conv860 = zext i8 %414 to i32
  %and861 = and i32 %conv860, 63
  %or862 = or i32 %shl858, %and861
  %conv863 = sext i32 %or862 to i64
  %and864 = and i64 %conv863, -256
  %tobool865 = icmp ne i64 %and864, 0
  br i1 %tobool865, label %land.end879, label %land.rhs866

land.rhs866:                                      ; preds = %cond.true855
  %415 = load i8*, i8** %s.addr, align 8
  %416 = load i8, i8* %415, align 1
  %conv867 = zext i8 %416 to i32
  %and868 = and i32 %conv867, 31
  %shl869 = shl i32 %and868, 6
  %417 = load i8*, i8** %s.addr, align 8
  %add.ptr870 = getelementptr inbounds i8, i8* %417, i64 1
  %418 = load i8, i8* %add.ptr870, align 1
  %conv871 = zext i8 %418 to i32
  %and872 = and i32 %conv871, 63
  %or873 = or i32 %shl869, %and872
  %conv874 = trunc i32 %or873 to i8
  %idxprom875 = zext i8 %conv874 to i64
  %arrayidx876 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom875
  %419 = load i32, i32* %arrayidx876, align 4
  %and877 = and i32 %419, 1
  %tobool878 = icmp ne i32 %and877, 0
  br label %land.end879

land.end879:                                      ; preds = %land.rhs866, %cond.true855
  %420 = phi i1 [ false, %cond.true855 ], [ %tobool878, %land.rhs866 ]
  %421 = zext i1 %420 to i64
  %cond881 = select i1 %420, i32 1, i32 0
  br label %cond.end885

cond.false882:                                    ; preds = %cond.false850
  %422 = load i8*, i8** %s.addr, align 8
  %call883 = call zeroext i1 @Perl__is_utf8_FOO(i8 zeroext 0, i8* %422)
  %conv884 = zext i1 %call883 to i32
  br label %cond.end885

cond.end885:                                      ; preds = %cond.false882, %land.end879
  %cond886 = phi i32 [ %cond881, %land.end879 ], [ %conv884, %cond.false882 ]
  br label %cond.end887

cond.end887:                                      ; preds = %cond.end885, %cond.true843
  %cond888 = phi i32 [ %cond849, %cond.true843 ], [ %cond886, %cond.end885 ]
  %tobool889 = icmp ne i32 %cond888, 0
  %lnot890 = xor i1 %tobool889, true
  %lnot.ext891 = zext i1 %lnot890 to i32
  %cmp892 = icmp eq i32 %402, %lnot.ext891
  br i1 %cmp892, label %if.then894, label %if.else906

if.then894:                                       ; preds = %cond.end887
  %423 = load i32, i32* %tmp, align 4
  %tobool895 = icmp ne i32 %423, 0
  %lnot896 = xor i1 %tobool895, true
  %lnot.ext897 = zext i1 %lnot896 to i32
  store i32 %lnot.ext897, i32* %tmp, align 4
  %424 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit898 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %424, i32 0, i32 12
  %425 = load i8, i8* %intuit898, align 8
  %tobool899 = trunc i8 %425 to i1
  br i1 %tobool899, label %if.then904, label %lor.lhs.false901

lor.lhs.false901:                                 ; preds = %if.then894
  %426 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call902 = call i32 @S_regtry(%struct.regmatch_info* %426, i8** %s.addr)
  %tobool903 = icmp ne i32 %call902, 0
  br i1 %tobool903, label %if.then904, label %if.end905

if.then904:                                       ; preds = %lor.lhs.false901, %if.then894
  br label %got_it

if.end905:                                        ; preds = %lor.lhs.false901
  br label %if.end907

if.else906:                                       ; preds = %cond.end887
  br label %if.end907

if.end907:                                        ; preds = %if.else906, %if.end905
  %427 = load i8*, i8** %s.addr, align 8
  %428 = load i8, i8* %427, align 1
  %idxprom908 = zext i8 %428 to i64
  %arrayidx909 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom908
  %429 = load i8, i8* %arrayidx909, align 1
  %conv910 = zext i8 %429 to i32
  %430 = load i8*, i8** %s.addr, align 8
  %idx.ext911 = sext i32 %conv910 to i64
  %add.ptr912 = getelementptr inbounds i8, i8* %430, i64 %idx.ext911
  store i8* %add.ptr912, i8** %s.addr, align 8
  br label %while.cond836

while.end913:                                     ; preds = %while.cond836
  br label %do.end914

do.end914:                                        ; preds = %while.end913
  br label %if.end969

if.else915:                                       ; preds = %sw.bb786
  %431 = load i8*, i8** %s.addr, align 8
  %432 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg916 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %432, i32 0, i32 1
  %433 = load i8*, i8** %strbeg916, align 8
  %cmp917 = icmp ne i8* %431, %433
  br i1 %cmp917, label %cond.true919, label %cond.false922

cond.true919:                                     ; preds = %if.else915
  %434 = load i8*, i8** %s.addr, align 8
  %add.ptr920 = getelementptr inbounds i8, i8* %434, i64 -1
  %435 = load i8, i8* %add.ptr920, align 1
  %conv921 = zext i8 %435 to i32
  br label %cond.end923

cond.false922:                                    ; preds = %if.else915
  br label %cond.end923

cond.end923:                                      ; preds = %cond.false922, %cond.true919
  %cond924 = phi i32 [ %conv921, %cond.true919 ], [ 10, %cond.false922 ]
  store i32 %cond924, i32* %tmp, align 4
  %436 = load i32, i32* %tmp, align 4
  %conv925 = sext i32 %436 to i64
  %and926 = and i64 %conv925, -256
  %tobool927 = icmp ne i64 %and926, 0
  br i1 %tobool927, label %land.end935, label %land.rhs928

land.rhs928:                                      ; preds = %cond.end923
  %437 = load i32, i32* %tmp, align 4
  %conv929 = trunc i32 %437 to i8
  %idxprom930 = zext i8 %conv929 to i64
  %arrayidx931 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom930
  %438 = load i32, i32* %arrayidx931, align 4
  %and932 = and i32 %438, 16385
  %cmp933 = icmp eq i32 %and932, 16385
  br label %land.end935

land.end935:                                      ; preds = %land.rhs928, %cond.end923
  %439 = phi i1 [ false, %cond.end923 ], [ %cmp933, %land.rhs928 ]
  %land.ext936 = zext i1 %439 to i32
  store i32 %land.ext936, i32* %tmp, align 4
  br label %do.body937

do.body937:                                       ; preds = %land.end935
  br label %while.cond938

while.cond938:                                    ; preds = %if.end965, %do.body937
  %440 = load i8*, i8** %s.addr, align 8
  %441 = load i8*, i8** %strend.addr, align 8
  %cmp939 = icmp ult i8* %440, %441
  br i1 %cmp939, label %while.body941, label %while.end967

while.body941:                                    ; preds = %while.cond938
  %442 = load i32, i32* %tmp, align 4
  %443 = load i8*, i8** %s.addr, align 8
  %444 = load i8, i8* %443, align 1
  %idxprom942 = zext i8 %444 to i64
  %arrayidx943 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom942
  %445 = load i32, i32* %arrayidx943, align 4
  %and944 = and i32 %445, 16385
  %cmp945 = icmp eq i32 %and944, 16385
  %lnot948 = xor i1 %cmp945, true
  %lnot.ext949 = zext i1 %lnot948 to i32
  %cmp950 = icmp eq i32 %442, %lnot.ext949
  br i1 %cmp950, label %if.then952, label %if.else964

if.then952:                                       ; preds = %while.body941
  %446 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit953 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %446, i32 0, i32 12
  %447 = load i8, i8* %intuit953, align 8
  %tobool954 = trunc i8 %447 to i1
  br i1 %tobool954, label %if.then959, label %lor.lhs.false956

lor.lhs.false956:                                 ; preds = %if.then952
  %448 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call957 = call i32 @S_regtry(%struct.regmatch_info* %448, i8** %s.addr)
  %tobool958 = icmp ne i32 %call957, 0
  br i1 %tobool958, label %if.then959, label %if.end960

if.then959:                                       ; preds = %lor.lhs.false956, %if.then952
  br label %got_it

if.end960:                                        ; preds = %lor.lhs.false956
  %449 = load i32, i32* %tmp, align 4
  %tobool961 = icmp ne i32 %449, 0
  %lnot962 = xor i1 %tobool961, true
  %lnot.ext963 = zext i1 %lnot962 to i32
  store i32 %lnot.ext963, i32* %tmp, align 4
  br label %if.end965

if.else964:                                       ; preds = %while.body941
  br label %if.end965

if.end965:                                        ; preds = %if.else964, %if.end960
  %450 = load i8*, i8** %s.addr, align 8
  %incdec.ptr966 = getelementptr inbounds i8, i8* %450, i32 1
  store i8* %incdec.ptr966, i8** %s.addr, align 8
  br label %while.cond938

while.end967:                                     ; preds = %while.cond938
  br label %do.end968

do.end968:                                        ; preds = %while.end967
  br label %if.end969

if.end969:                                        ; preds = %do.end968, %do.end914
  %451 = load i32, i32* %tmp, align 4
  %452 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 10), align 4
  %and970 = and i32 %452, 16385
  %cmp971 = icmp eq i32 %and970, 16385
  %lnot974 = xor i1 %cmp971, true
  %lnot.ext975 = zext i1 %lnot974 to i32
  %cmp976 = icmp eq i32 %451, %lnot.ext975
  br i1 %cmp976, label %if.then978, label %if.else987

if.then978:                                       ; preds = %if.end969
  %453 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit979 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %453, i32 0, i32 12
  %454 = load i8, i8* %intuit979, align 8
  %tobool980 = trunc i8 %454 to i1
  br i1 %tobool980, label %if.then985, label %lor.lhs.false982

lor.lhs.false982:                                 ; preds = %if.then978
  %455 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call983 = call i32 @S_regtry(%struct.regmatch_info* %455, i8** %s.addr)
  %tobool984 = icmp ne i32 %call983, 0
  br i1 %tobool984, label %if.then985, label %if.end986

if.then985:                                       ; preds = %lor.lhs.false982, %if.then978
  br label %got_it

if.end986:                                        ; preds = %lor.lhs.false982
  br label %if.end988

if.else987:                                       ; preds = %if.end969
  br label %if.end988

if.end988:                                        ; preds = %if.else987, %if.end986
  br label %sw.epilog4014

sw.bb989:                                         ; preds = %entry
  %456 = load i8, i8* %utf8_target, align 1
  %tobool990 = trunc i8 %456 to i1
  br i1 %tobool990, label %if.then991, label %if.else1049

if.then991:                                       ; preds = %sw.bb989
  %457 = load i8*, i8** %s.addr, align 8
  %458 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg992 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %458, i32 0, i32 1
  %459 = load i8*, i8** %strbeg992, align 8
  %cmp993 = icmp ne i8* %457, %459
  br i1 %cmp993, label %cond.true995, label %cond.false998

cond.true995:                                     ; preds = %if.then991
  %460 = load i8*, i8** %s.addr, align 8
  %add.ptr996 = getelementptr inbounds i8, i8* %460, i64 -1
  %461 = load i8, i8* %add.ptr996, align 1
  %conv997 = zext i8 %461 to i32
  br label %cond.end999

cond.false998:                                    ; preds = %if.then991
  br label %cond.end999

cond.end999:                                      ; preds = %cond.false998, %cond.true995
  %cond1000 = phi i32 [ %conv997, %cond.true995 ], [ 10, %cond.false998 ]
  store i32 %cond1000, i32* %tmp, align 4
  %462 = load i32, i32* %tmp, align 4
  %conv1001 = sext i32 %462 to i64
  %and1002 = and i64 %conv1001, -256
  %tobool1003 = icmp ne i64 %and1002, 0
  br i1 %tobool1003, label %land.end1011, label %land.rhs1004

land.rhs1004:                                     ; preds = %cond.end999
  %463 = load i32, i32* %tmp, align 4
  %conv1005 = trunc i32 %463 to i8
  %idxprom1006 = zext i8 %conv1005 to i64
  %arrayidx1007 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1006
  %464 = load i32, i32* %arrayidx1007, align 4
  %and1008 = and i32 %464, 16385
  %cmp1009 = icmp eq i32 %and1008, 16385
  br label %land.end1011

land.end1011:                                     ; preds = %land.rhs1004, %cond.end999
  %465 = phi i1 [ false, %cond.end999 ], [ %cmp1009, %land.rhs1004 ]
  %land.ext1012 = zext i1 %465 to i32
  store i32 %land.ext1012, i32* %tmp, align 4
  br label %do.body1013

do.body1013:                                      ; preds = %land.end1011
  br label %while.cond1014

while.cond1014:                                   ; preds = %if.end1041, %do.body1013
  %466 = load i8*, i8** %s.addr, align 8
  %467 = load i8*, i8** %strend.addr, align 8
  %cmp1015 = icmp ult i8* %466, %467
  br i1 %cmp1015, label %while.body1017, label %while.end1047

while.body1017:                                   ; preds = %while.cond1014
  %468 = load i32, i32* %tmp, align 4
  %469 = load i8*, i8** %s.addr, align 8
  %470 = load i8, i8* %469, align 1
  %idxprom1018 = zext i8 %470 to i64
  %arrayidx1019 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1018
  %471 = load i32, i32* %arrayidx1019, align 4
  %and1020 = and i32 %471, 16385
  %cmp1021 = icmp eq i32 %and1020, 16385
  %lnot1024 = xor i1 %cmp1021, true
  %lnot.ext1025 = zext i1 %lnot1024 to i32
  %cmp1026 = icmp eq i32 %468, %lnot.ext1025
  br i1 %cmp1026, label %if.then1028, label %if.else1040

if.then1028:                                      ; preds = %while.body1017
  %472 = load i32, i32* %tmp, align 4
  %tobool1029 = icmp ne i32 %472, 0
  %lnot1030 = xor i1 %tobool1029, true
  %lnot.ext1031 = zext i1 %lnot1030 to i32
  store i32 %lnot.ext1031, i32* %tmp, align 4
  %473 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1032 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %473, i32 0, i32 12
  %474 = load i8, i8* %intuit1032, align 8
  %tobool1033 = trunc i8 %474 to i1
  br i1 %tobool1033, label %if.then1038, label %lor.lhs.false1035

lor.lhs.false1035:                                ; preds = %if.then1028
  %475 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1036 = call i32 @S_regtry(%struct.regmatch_info* %475, i8** %s.addr)
  %tobool1037 = icmp ne i32 %call1036, 0
  br i1 %tobool1037, label %if.then1038, label %if.end1039

if.then1038:                                      ; preds = %lor.lhs.false1035, %if.then1028
  br label %got_it

if.end1039:                                       ; preds = %lor.lhs.false1035
  br label %if.end1041

if.else1040:                                      ; preds = %while.body1017
  br label %if.end1041

if.end1041:                                       ; preds = %if.else1040, %if.end1039
  %476 = load i8*, i8** %s.addr, align 8
  %477 = load i8, i8* %476, align 1
  %idxprom1042 = zext i8 %477 to i64
  %arrayidx1043 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1042
  %478 = load i8, i8* %arrayidx1043, align 1
  %conv1044 = zext i8 %478 to i32
  %479 = load i8*, i8** %s.addr, align 8
  %idx.ext1045 = sext i32 %conv1044 to i64
  %add.ptr1046 = getelementptr inbounds i8, i8* %479, i64 %idx.ext1045
  store i8* %add.ptr1046, i8** %s.addr, align 8
  br label %while.cond1014

while.end1047:                                    ; preds = %while.cond1014
  br label %do.end1048

do.end1048:                                       ; preds = %while.end1047
  br label %if.end1103

if.else1049:                                      ; preds = %sw.bb989
  %480 = load i8*, i8** %s.addr, align 8
  %481 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1050 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %481, i32 0, i32 1
  %482 = load i8*, i8** %strbeg1050, align 8
  %cmp1051 = icmp ne i8* %480, %482
  br i1 %cmp1051, label %cond.true1053, label %cond.false1056

cond.true1053:                                    ; preds = %if.else1049
  %483 = load i8*, i8** %s.addr, align 8
  %add.ptr1054 = getelementptr inbounds i8, i8* %483, i64 -1
  %484 = load i8, i8* %add.ptr1054, align 1
  %conv1055 = zext i8 %484 to i32
  br label %cond.end1057

cond.false1056:                                   ; preds = %if.else1049
  br label %cond.end1057

cond.end1057:                                     ; preds = %cond.false1056, %cond.true1053
  %cond1058 = phi i32 [ %conv1055, %cond.true1053 ], [ 10, %cond.false1056 ]
  store i32 %cond1058, i32* %tmp, align 4
  %485 = load i32, i32* %tmp, align 4
  %conv1059 = sext i32 %485 to i64
  %and1060 = and i64 %conv1059, -256
  %tobool1061 = icmp ne i64 %and1060, 0
  br i1 %tobool1061, label %land.end1069, label %land.rhs1062

land.rhs1062:                                     ; preds = %cond.end1057
  %486 = load i32, i32* %tmp, align 4
  %conv1063 = trunc i32 %486 to i8
  %idxprom1064 = zext i8 %conv1063 to i64
  %arrayidx1065 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1064
  %487 = load i32, i32* %arrayidx1065, align 4
  %and1066 = and i32 %487, 16385
  %cmp1067 = icmp eq i32 %and1066, 16385
  br label %land.end1069

land.end1069:                                     ; preds = %land.rhs1062, %cond.end1057
  %488 = phi i1 [ false, %cond.end1057 ], [ %cmp1067, %land.rhs1062 ]
  %land.ext1070 = zext i1 %488 to i32
  store i32 %land.ext1070, i32* %tmp, align 4
  br label %do.body1071

do.body1071:                                      ; preds = %land.end1069
  br label %while.cond1072

while.cond1072:                                   ; preds = %if.end1099, %do.body1071
  %489 = load i8*, i8** %s.addr, align 8
  %490 = load i8*, i8** %strend.addr, align 8
  %cmp1073 = icmp ult i8* %489, %490
  br i1 %cmp1073, label %while.body1075, label %while.end1101

while.body1075:                                   ; preds = %while.cond1072
  %491 = load i32, i32* %tmp, align 4
  %492 = load i8*, i8** %s.addr, align 8
  %493 = load i8, i8* %492, align 1
  %idxprom1076 = zext i8 %493 to i64
  %arrayidx1077 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1076
  %494 = load i32, i32* %arrayidx1077, align 4
  %and1078 = and i32 %494, 16385
  %cmp1079 = icmp eq i32 %and1078, 16385
  %lnot1082 = xor i1 %cmp1079, true
  %lnot.ext1083 = zext i1 %lnot1082 to i32
  %cmp1084 = icmp eq i32 %491, %lnot.ext1083
  br i1 %cmp1084, label %if.then1086, label %if.else1098

if.then1086:                                      ; preds = %while.body1075
  %495 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1087 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %495, i32 0, i32 12
  %496 = load i8, i8* %intuit1087, align 8
  %tobool1088 = trunc i8 %496 to i1
  br i1 %tobool1088, label %if.then1093, label %lor.lhs.false1090

lor.lhs.false1090:                                ; preds = %if.then1086
  %497 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1091 = call i32 @S_regtry(%struct.regmatch_info* %497, i8** %s.addr)
  %tobool1092 = icmp ne i32 %call1091, 0
  br i1 %tobool1092, label %if.then1093, label %if.end1094

if.then1093:                                      ; preds = %lor.lhs.false1090, %if.then1086
  br label %got_it

if.end1094:                                       ; preds = %lor.lhs.false1090
  %498 = load i32, i32* %tmp, align 4
  %tobool1095 = icmp ne i32 %498, 0
  %lnot1096 = xor i1 %tobool1095, true
  %lnot.ext1097 = zext i1 %lnot1096 to i32
  store i32 %lnot.ext1097, i32* %tmp, align 4
  br label %if.end1099

if.else1098:                                      ; preds = %while.body1075
  br label %if.end1099

if.end1099:                                       ; preds = %if.else1098, %if.end1094
  %499 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1100 = getelementptr inbounds i8, i8* %499, i32 1
  store i8* %incdec.ptr1100, i8** %s.addr, align 8
  br label %while.cond1072

while.end1101:                                    ; preds = %while.cond1072
  br label %do.end1102

do.end1102:                                       ; preds = %while.end1101
  br label %if.end1103

if.end1103:                                       ; preds = %do.end1102, %do.end1048
  %500 = load i32, i32* %tmp, align 4
  %501 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 10), align 4
  %and1104 = and i32 %501, 16385
  %cmp1105 = icmp eq i32 %and1104, 16385
  %lnot1108 = xor i1 %cmp1105, true
  %lnot.ext1109 = zext i1 %lnot1108 to i32
  %cmp1110 = icmp eq i32 %500, %lnot.ext1109
  br i1 %cmp1110, label %if.then1112, label %if.else1121

if.then1112:                                      ; preds = %if.end1103
  %502 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1113 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %502, i32 0, i32 12
  %503 = load i8, i8* %intuit1113, align 8
  %tobool1114 = trunc i8 %503 to i1
  br i1 %tobool1114, label %if.then1119, label %lor.lhs.false1116

lor.lhs.false1116:                                ; preds = %if.then1112
  %504 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1117 = call i32 @S_regtry(%struct.regmatch_info* %504, i8** %s.addr)
  %tobool1118 = icmp ne i32 %call1117, 0
  br i1 %tobool1118, label %if.then1119, label %if.end1120

if.then1119:                                      ; preds = %lor.lhs.false1116, %if.then1112
  br label %got_it

if.end1120:                                       ; preds = %lor.lhs.false1116
  br label %if.end1122

if.else1121:                                      ; preds = %if.end1103
  br label %if.end1122

if.end1122:                                       ; preds = %if.else1121, %if.end1120
  br label %sw.epilog4014

sw.bb1123:                                        ; preds = %entry
  %505 = load i8, i8* %utf8_target, align 1
  %tobool1124 = trunc i8 %505 to i1
  br i1 %tobool1124, label %if.then1125, label %if.else1252

if.then1125:                                      ; preds = %sw.bb1123
  %506 = load i8*, i8** %s.addr, align 8
  %507 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1126 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %507, i32 0, i32 1
  %508 = load i8*, i8** %strbeg1126, align 8
  %cmp1127 = icmp eq i8* %506, %508
  br i1 %cmp1127, label %if.then1129, label %if.else1130

if.then1129:                                      ; preds = %if.then1125
  store i32 10, i32* %tmp, align 4
  br label %if.end1143

if.else1130:                                      ; preds = %if.then1125
  %509 = load i8*, i8** %s.addr, align 8
  %510 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1132 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %510, i32 0, i32 1
  %511 = load i8*, i8** %strbeg1132, align 8
  %call1133 = call i8* @S_reghop3(i8* %509, i64 -1, i8* %511)
  store i8* %call1133, i8** %r1131, align 8
  %512 = load i8*, i8** %r1131, align 8
  %513 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1134 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %513, i32 0, i32 2
  %514 = load i8*, i8** %strend1134, align 8
  %515 = load i8*, i8** %r1131, align 8
  %sub.ptr.lhs.cast1135 = ptrtoint i8* %514 to i64
  %sub.ptr.rhs.cast1136 = ptrtoint i8* %515 to i64
  %sub.ptr.sub1137 = sub i64 %sub.ptr.lhs.cast1135, %sub.ptr.rhs.cast1136
  %call1138 = call zeroext i1 @Perl_ckwarn(i32 44)
  %516 = zext i1 %call1138 to i64
  %cond1140 = select i1 %call1138, i32 0, i32 1
  %call1141 = call i64 @Perl_utf8n_to_uvchr(i8* %512, i64 %sub.ptr.sub1137, i64* null, i32 %cond1140)
  %conv1142 = trunc i64 %call1141 to i32
  store i32 %conv1142, i32* %tmp, align 4
  br label %if.end1143

if.end1143:                                       ; preds = %if.else1130, %if.then1129
  %517 = load i32, i32* %tmp, align 4
  %cmp1144 = icmp slt i32 %517, 256
  br i1 %cmp1144, label %cond.true1146, label %cond.false1159

cond.true1146:                                    ; preds = %if.end1143
  %518 = load i32, i32* %tmp, align 4
  %conv1147 = sext i32 %518 to i64
  %and1148 = and i64 %conv1147, -256
  %tobool1149 = icmp ne i64 %and1148, 0
  br i1 %tobool1149, label %land.end1156, label %land.rhs1150

land.rhs1150:                                     ; preds = %cond.true1146
  %519 = load i32, i32* %tmp, align 4
  %conv1151 = trunc i32 %519 to i8
  %idxprom1152 = zext i8 %conv1151 to i64
  %arrayidx1153 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1152
  %520 = load i32, i32* %arrayidx1153, align 4
  %and1154 = and i32 %520, 1
  %tobool1155 = icmp ne i32 %and1154, 0
  br label %land.end1156

land.end1156:                                     ; preds = %land.rhs1150, %cond.true1146
  %521 = phi i1 [ false, %cond.true1146 ], [ %tobool1155, %land.rhs1150 ]
  %522 = zext i1 %521 to i64
  %cond1158 = select i1 %521, i32 1, i32 0
  br label %cond.end1163

cond.false1159:                                   ; preds = %if.end1143
  %523 = load i32, i32* %tmp, align 4
  %conv1160 = sext i32 %523 to i64
  %call1161 = call zeroext i1 @Perl__is_uni_FOO(i8 zeroext 0, i64 %conv1160)
  %conv1162 = zext i1 %call1161 to i32
  br label %cond.end1163

cond.end1163:                                     ; preds = %cond.false1159, %land.end1156
  %cond1164 = phi i32 [ %cond1158, %land.end1156 ], [ %conv1162, %cond.false1159 ]
  store i32 %cond1164, i32* %tmp, align 4
  br label %do.body1165

do.body1165:                                      ; preds = %cond.end1163
  %524 = load %struct.sv*, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  %tobool1166 = icmp ne %struct.sv* %524, null
  br i1 %tobool1166, label %if.end1170, label %if.then1167

if.then1167:                                      ; preds = %do.body1165
  store i8 4, i8* %flags1168, align 1
  %525 = load %struct.sv*, %struct.sv** getelementptr inbounds ([16 x %struct.sv*], [16 x %struct.sv*]* @PL_XPosix_ptrs, i64 0, i64 0), align 16
  %call1169 = call %struct.sv* @Perl__core_swash_init(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %struct.sv* @PL_sv_undef, i32 1, i32 0, %struct.sv* %525, i8* %flags1168)
  store %struct.sv* %call1169, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  br label %if.end1170

if.end1170:                                       ; preds = %if.then1167, %do.body1165
  br label %do.end1171

do.end1171:                                       ; preds = %if.end1170
  br label %do.body1172

do.body1172:                                      ; preds = %do.end1171
  br label %while.cond1173

while.cond1173:                                   ; preds = %if.end1244, %do.body1172
  %526 = load i8*, i8** %s.addr, align 8
  %527 = load i8*, i8** %strend.addr, align 8
  %cmp1174 = icmp ult i8* %526, %527
  br i1 %cmp1174, label %while.body1176, label %while.end1250

while.body1176:                                   ; preds = %while.cond1173
  %528 = load i32, i32* %tmp, align 4
  %529 = load i8*, i8** %s.addr, align 8
  %530 = load i8, i8* %529, align 1
  %conv1177 = zext i8 %530 to i64
  %cmp1178 = icmp ult i64 %conv1177, 128
  br i1 %cmp1178, label %cond.true1180, label %cond.false1187

cond.true1180:                                    ; preds = %while.body1176
  %531 = load i8*, i8** %s.addr, align 8
  %532 = load i8, i8* %531, align 1
  %idxprom1181 = zext i8 %532 to i64
  %arrayidx1182 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1181
  %533 = load i32, i32* %arrayidx1182, align 4
  %and1183 = and i32 %533, 1
  %tobool1184 = icmp ne i32 %and1183, 0
  %534 = zext i1 %tobool1184 to i64
  %cond1186 = select i1 %tobool1184, i32 1, i32 0
  br label %cond.end1224

cond.false1187:                                   ; preds = %while.body1176
  %535 = load i8*, i8** %s.addr, align 8
  %536 = load i8, i8* %535, align 1
  %conv1188 = zext i8 %536 to i32
  %and1189 = and i32 %conv1188, 254
  %cmp1190 = icmp eq i32 %and1189, 194
  br i1 %cmp1190, label %cond.true1192, label %cond.false1219

cond.true1192:                                    ; preds = %cond.false1187
  %537 = load i8*, i8** %s.addr, align 8
  %538 = load i8, i8* %537, align 1
  %conv1193 = zext i8 %538 to i32
  %and1194 = and i32 %conv1193, 31
  %shl1195 = shl i32 %and1194, 6
  %539 = load i8*, i8** %s.addr, align 8
  %add.ptr1196 = getelementptr inbounds i8, i8* %539, i64 1
  %540 = load i8, i8* %add.ptr1196, align 1
  %conv1197 = zext i8 %540 to i32
  %and1198 = and i32 %conv1197, 63
  %or1199 = or i32 %shl1195, %and1198
  %conv1200 = sext i32 %or1199 to i64
  %and1201 = and i64 %conv1200, -256
  %tobool1202 = icmp ne i64 %and1201, 0
  br i1 %tobool1202, label %land.end1216, label %land.rhs1203

land.rhs1203:                                     ; preds = %cond.true1192
  %541 = load i8*, i8** %s.addr, align 8
  %542 = load i8, i8* %541, align 1
  %conv1204 = zext i8 %542 to i32
  %and1205 = and i32 %conv1204, 31
  %shl1206 = shl i32 %and1205, 6
  %543 = load i8*, i8** %s.addr, align 8
  %add.ptr1207 = getelementptr inbounds i8, i8* %543, i64 1
  %544 = load i8, i8* %add.ptr1207, align 1
  %conv1208 = zext i8 %544 to i32
  %and1209 = and i32 %conv1208, 63
  %or1210 = or i32 %shl1206, %and1209
  %conv1211 = trunc i32 %or1210 to i8
  %idxprom1212 = zext i8 %conv1211 to i64
  %arrayidx1213 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1212
  %545 = load i32, i32* %arrayidx1213, align 4
  %and1214 = and i32 %545, 1
  %tobool1215 = icmp ne i32 %and1214, 0
  br label %land.end1216

land.end1216:                                     ; preds = %land.rhs1203, %cond.true1192
  %546 = phi i1 [ false, %cond.true1192 ], [ %tobool1215, %land.rhs1203 ]
  %547 = zext i1 %546 to i64
  %cond1218 = select i1 %546, i32 1, i32 0
  br label %cond.end1222

cond.false1219:                                   ; preds = %cond.false1187
  %548 = load i8*, i8** %s.addr, align 8
  %call1220 = call zeroext i1 @Perl__is_utf8_FOO(i8 zeroext 0, i8* %548)
  %conv1221 = zext i1 %call1220 to i32
  br label %cond.end1222

cond.end1222:                                     ; preds = %cond.false1219, %land.end1216
  %cond1223 = phi i32 [ %cond1218, %land.end1216 ], [ %conv1221, %cond.false1219 ]
  br label %cond.end1224

cond.end1224:                                     ; preds = %cond.end1222, %cond.true1180
  %cond1225 = phi i32 [ %cond1186, %cond.true1180 ], [ %cond1223, %cond.end1222 ]
  %tobool1226 = icmp ne i32 %cond1225, 0
  %lnot1227 = xor i1 %tobool1226, true
  %lnot.ext1228 = zext i1 %lnot1227 to i32
  %cmp1229 = icmp eq i32 %528, %lnot.ext1228
  br i1 %cmp1229, label %if.then1231, label %if.else1235

if.then1231:                                      ; preds = %cond.end1224
  %549 = load i32, i32* %tmp, align 4
  %tobool1232 = icmp ne i32 %549, 0
  %lnot1233 = xor i1 %tobool1232, true
  %lnot.ext1234 = zext i1 %lnot1233 to i32
  store i32 %lnot.ext1234, i32* %tmp, align 4
  br label %if.end1244

if.else1235:                                      ; preds = %cond.end1224
  %550 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1236 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %550, i32 0, i32 12
  %551 = load i8, i8* %intuit1236, align 8
  %tobool1237 = trunc i8 %551 to i1
  br i1 %tobool1237, label %if.then1242, label %lor.lhs.false1239

lor.lhs.false1239:                                ; preds = %if.else1235
  %552 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1240 = call i32 @S_regtry(%struct.regmatch_info* %552, i8** %s.addr)
  %tobool1241 = icmp ne i32 %call1240, 0
  br i1 %tobool1241, label %if.then1242, label %if.end1243

if.then1242:                                      ; preds = %lor.lhs.false1239, %if.else1235
  br label %got_it

if.end1243:                                       ; preds = %lor.lhs.false1239
  br label %if.end1244

if.end1244:                                       ; preds = %if.end1243, %if.then1231
  %553 = load i8*, i8** %s.addr, align 8
  %554 = load i8, i8* %553, align 1
  %idxprom1245 = zext i8 %554 to i64
  %arrayidx1246 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1245
  %555 = load i8, i8* %arrayidx1246, align 1
  %conv1247 = zext i8 %555 to i32
  %556 = load i8*, i8** %s.addr, align 8
  %idx.ext1248 = sext i32 %conv1247 to i64
  %add.ptr1249 = getelementptr inbounds i8, i8* %556, i64 %idx.ext1248
  store i8* %add.ptr1249, i8** %s.addr, align 8
  br label %while.cond1173

while.end1250:                                    ; preds = %while.cond1173
  br label %do.end1251

do.end1251:                                       ; preds = %while.end1250
  br label %if.end1306

if.else1252:                                      ; preds = %sw.bb1123
  %557 = load i8*, i8** %s.addr, align 8
  %558 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1253 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %558, i32 0, i32 1
  %559 = load i8*, i8** %strbeg1253, align 8
  %cmp1254 = icmp ne i8* %557, %559
  br i1 %cmp1254, label %cond.true1256, label %cond.false1259

cond.true1256:                                    ; preds = %if.else1252
  %560 = load i8*, i8** %s.addr, align 8
  %add.ptr1257 = getelementptr inbounds i8, i8* %560, i64 -1
  %561 = load i8, i8* %add.ptr1257, align 1
  %conv1258 = zext i8 %561 to i32
  br label %cond.end1260

cond.false1259:                                   ; preds = %if.else1252
  br label %cond.end1260

cond.end1260:                                     ; preds = %cond.false1259, %cond.true1256
  %cond1261 = phi i32 [ %conv1258, %cond.true1256 ], [ 10, %cond.false1259 ]
  store i32 %cond1261, i32* %tmp, align 4
  %562 = load i32, i32* %tmp, align 4
  %conv1262 = sext i32 %562 to i64
  %and1263 = and i64 %conv1262, -256
  %tobool1264 = icmp ne i64 %and1263, 0
  br i1 %tobool1264, label %land.end1272, label %land.rhs1265

land.rhs1265:                                     ; preds = %cond.end1260
  %563 = load i32, i32* %tmp, align 4
  %conv1266 = trunc i32 %563 to i8
  %idxprom1267 = zext i8 %conv1266 to i64
  %arrayidx1268 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1267
  %564 = load i32, i32* %arrayidx1268, align 4
  %and1269 = and i32 %564, 16385
  %cmp1270 = icmp eq i32 %and1269, 16385
  br label %land.end1272

land.end1272:                                     ; preds = %land.rhs1265, %cond.end1260
  %565 = phi i1 [ false, %cond.end1260 ], [ %cmp1270, %land.rhs1265 ]
  %land.ext1273 = zext i1 %565 to i32
  store i32 %land.ext1273, i32* %tmp, align 4
  br label %do.body1274

do.body1274:                                      ; preds = %land.end1272
  br label %while.cond1275

while.cond1275:                                   ; preds = %if.end1302, %do.body1274
  %566 = load i8*, i8** %s.addr, align 8
  %567 = load i8*, i8** %strend.addr, align 8
  %cmp1276 = icmp ult i8* %566, %567
  br i1 %cmp1276, label %while.body1278, label %while.end1304

while.body1278:                                   ; preds = %while.cond1275
  %568 = load i32, i32* %tmp, align 4
  %569 = load i8*, i8** %s.addr, align 8
  %570 = load i8, i8* %569, align 1
  %idxprom1279 = zext i8 %570 to i64
  %arrayidx1280 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1279
  %571 = load i32, i32* %arrayidx1280, align 4
  %and1281 = and i32 %571, 16385
  %cmp1282 = icmp eq i32 %and1281, 16385
  %lnot1285 = xor i1 %cmp1282, true
  %lnot.ext1286 = zext i1 %lnot1285 to i32
  %cmp1287 = icmp eq i32 %568, %lnot.ext1286
  br i1 %cmp1287, label %if.then1289, label %if.else1293

if.then1289:                                      ; preds = %while.body1278
  %572 = load i32, i32* %tmp, align 4
  %tobool1290 = icmp ne i32 %572, 0
  %lnot1291 = xor i1 %tobool1290, true
  %lnot.ext1292 = zext i1 %lnot1291 to i32
  store i32 %lnot.ext1292, i32* %tmp, align 4
  br label %if.end1302

if.else1293:                                      ; preds = %while.body1278
  %573 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1294 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %573, i32 0, i32 12
  %574 = load i8, i8* %intuit1294, align 8
  %tobool1295 = trunc i8 %574 to i1
  br i1 %tobool1295, label %if.then1300, label %lor.lhs.false1297

lor.lhs.false1297:                                ; preds = %if.else1293
  %575 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1298 = call i32 @S_regtry(%struct.regmatch_info* %575, i8** %s.addr)
  %tobool1299 = icmp ne i32 %call1298, 0
  br i1 %tobool1299, label %if.then1300, label %if.end1301

if.then1300:                                      ; preds = %lor.lhs.false1297, %if.else1293
  br label %got_it

if.end1301:                                       ; preds = %lor.lhs.false1297
  br label %if.end1302

if.end1302:                                       ; preds = %if.end1301, %if.then1289
  %576 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1303 = getelementptr inbounds i8, i8* %576, i32 1
  store i8* %incdec.ptr1303, i8** %s.addr, align 8
  br label %while.cond1275

while.end1304:                                    ; preds = %while.cond1275
  br label %do.end1305

do.end1305:                                       ; preds = %while.end1304
  br label %if.end1306

if.end1306:                                       ; preds = %do.end1305, %do.end1251
  %577 = load i32, i32* %tmp, align 4
  %578 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 10), align 4
  %and1307 = and i32 %578, 16385
  %cmp1308 = icmp eq i32 %and1307, 16385
  %lnot1311 = xor i1 %cmp1308, true
  %lnot.ext1312 = zext i1 %lnot1311 to i32
  %cmp1313 = icmp eq i32 %577, %lnot.ext1312
  br i1 %cmp1313, label %if.then1315, label %if.else1316

if.then1315:                                      ; preds = %if.end1306
  br label %if.end1325

if.else1316:                                      ; preds = %if.end1306
  %579 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1317 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %579, i32 0, i32 12
  %580 = load i8, i8* %intuit1317, align 8
  %tobool1318 = trunc i8 %580 to i1
  br i1 %tobool1318, label %if.then1323, label %lor.lhs.false1320

lor.lhs.false1320:                                ; preds = %if.else1316
  %581 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1321 = call i32 @S_regtry(%struct.regmatch_info* %581, i8** %s.addr)
  %tobool1322 = icmp ne i32 %call1321, 0
  br i1 %tobool1322, label %if.then1323, label %if.end1324

if.then1323:                                      ; preds = %lor.lhs.false1320, %if.else1316
  br label %got_it

if.end1324:                                       ; preds = %lor.lhs.false1320
  br label %if.end1325

if.end1325:                                       ; preds = %if.end1324, %if.then1315
  br label %sw.epilog4014

sw.bb1326:                                        ; preds = %entry
  %582 = load i8, i8* %utf8_target, align 1
  %tobool1327 = trunc i8 %582 to i1
  br i1 %tobool1327, label %if.then1328, label %if.else1386

if.then1328:                                      ; preds = %sw.bb1326
  %583 = load i8*, i8** %s.addr, align 8
  %584 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1329 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %584, i32 0, i32 1
  %585 = load i8*, i8** %strbeg1329, align 8
  %cmp1330 = icmp ne i8* %583, %585
  br i1 %cmp1330, label %cond.true1332, label %cond.false1335

cond.true1332:                                    ; preds = %if.then1328
  %586 = load i8*, i8** %s.addr, align 8
  %add.ptr1333 = getelementptr inbounds i8, i8* %586, i64 -1
  %587 = load i8, i8* %add.ptr1333, align 1
  %conv1334 = zext i8 %587 to i32
  br label %cond.end1336

cond.false1335:                                   ; preds = %if.then1328
  br label %cond.end1336

cond.end1336:                                     ; preds = %cond.false1335, %cond.true1332
  %cond1337 = phi i32 [ %conv1334, %cond.true1332 ], [ 10, %cond.false1335 ]
  store i32 %cond1337, i32* %tmp, align 4
  %588 = load i32, i32* %tmp, align 4
  %conv1338 = sext i32 %588 to i64
  %and1339 = and i64 %conv1338, -256
  %tobool1340 = icmp ne i64 %and1339, 0
  br i1 %tobool1340, label %land.end1348, label %land.rhs1341

land.rhs1341:                                     ; preds = %cond.end1336
  %589 = load i32, i32* %tmp, align 4
  %conv1342 = trunc i32 %589 to i8
  %idxprom1343 = zext i8 %conv1342 to i64
  %arrayidx1344 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1343
  %590 = load i32, i32* %arrayidx1344, align 4
  %and1345 = and i32 %590, 16385
  %cmp1346 = icmp eq i32 %and1345, 16385
  br label %land.end1348

land.end1348:                                     ; preds = %land.rhs1341, %cond.end1336
  %591 = phi i1 [ false, %cond.end1336 ], [ %cmp1346, %land.rhs1341 ]
  %land.ext1349 = zext i1 %591 to i32
  store i32 %land.ext1349, i32* %tmp, align 4
  br label %do.body1350

do.body1350:                                      ; preds = %land.end1348
  br label %while.cond1351

while.cond1351:                                   ; preds = %if.end1378, %do.body1350
  %592 = load i8*, i8** %s.addr, align 8
  %593 = load i8*, i8** %strend.addr, align 8
  %cmp1352 = icmp ult i8* %592, %593
  br i1 %cmp1352, label %while.body1354, label %while.end1384

while.body1354:                                   ; preds = %while.cond1351
  %594 = load i32, i32* %tmp, align 4
  %595 = load i8*, i8** %s.addr, align 8
  %596 = load i8, i8* %595, align 1
  %idxprom1355 = zext i8 %596 to i64
  %arrayidx1356 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1355
  %597 = load i32, i32* %arrayidx1356, align 4
  %and1357 = and i32 %597, 16385
  %cmp1358 = icmp eq i32 %and1357, 16385
  %lnot1361 = xor i1 %cmp1358, true
  %lnot.ext1362 = zext i1 %lnot1361 to i32
  %cmp1363 = icmp eq i32 %594, %lnot.ext1362
  br i1 %cmp1363, label %if.then1365, label %if.else1369

if.then1365:                                      ; preds = %while.body1354
  %598 = load i32, i32* %tmp, align 4
  %tobool1366 = icmp ne i32 %598, 0
  %lnot1367 = xor i1 %tobool1366, true
  %lnot.ext1368 = zext i1 %lnot1367 to i32
  store i32 %lnot.ext1368, i32* %tmp, align 4
  br label %if.end1378

if.else1369:                                      ; preds = %while.body1354
  %599 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1370 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %599, i32 0, i32 12
  %600 = load i8, i8* %intuit1370, align 8
  %tobool1371 = trunc i8 %600 to i1
  br i1 %tobool1371, label %if.then1376, label %lor.lhs.false1373

lor.lhs.false1373:                                ; preds = %if.else1369
  %601 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1374 = call i32 @S_regtry(%struct.regmatch_info* %601, i8** %s.addr)
  %tobool1375 = icmp ne i32 %call1374, 0
  br i1 %tobool1375, label %if.then1376, label %if.end1377

if.then1376:                                      ; preds = %lor.lhs.false1373, %if.else1369
  br label %got_it

if.end1377:                                       ; preds = %lor.lhs.false1373
  br label %if.end1378

if.end1378:                                       ; preds = %if.end1377, %if.then1365
  %602 = load i8*, i8** %s.addr, align 8
  %603 = load i8, i8* %602, align 1
  %idxprom1379 = zext i8 %603 to i64
  %arrayidx1380 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1379
  %604 = load i8, i8* %arrayidx1380, align 1
  %conv1381 = zext i8 %604 to i32
  %605 = load i8*, i8** %s.addr, align 8
  %idx.ext1382 = sext i32 %conv1381 to i64
  %add.ptr1383 = getelementptr inbounds i8, i8* %605, i64 %idx.ext1382
  store i8* %add.ptr1383, i8** %s.addr, align 8
  br label %while.cond1351

while.end1384:                                    ; preds = %while.cond1351
  br label %do.end1385

do.end1385:                                       ; preds = %while.end1384
  br label %if.end1440

if.else1386:                                      ; preds = %sw.bb1326
  %606 = load i8*, i8** %s.addr, align 8
  %607 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1387 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %607, i32 0, i32 1
  %608 = load i8*, i8** %strbeg1387, align 8
  %cmp1388 = icmp ne i8* %606, %608
  br i1 %cmp1388, label %cond.true1390, label %cond.false1393

cond.true1390:                                    ; preds = %if.else1386
  %609 = load i8*, i8** %s.addr, align 8
  %add.ptr1391 = getelementptr inbounds i8, i8* %609, i64 -1
  %610 = load i8, i8* %add.ptr1391, align 1
  %conv1392 = zext i8 %610 to i32
  br label %cond.end1394

cond.false1393:                                   ; preds = %if.else1386
  br label %cond.end1394

cond.end1394:                                     ; preds = %cond.false1393, %cond.true1390
  %cond1395 = phi i32 [ %conv1392, %cond.true1390 ], [ 10, %cond.false1393 ]
  store i32 %cond1395, i32* %tmp, align 4
  %611 = load i32, i32* %tmp, align 4
  %conv1396 = sext i32 %611 to i64
  %and1397 = and i64 %conv1396, -256
  %tobool1398 = icmp ne i64 %and1397, 0
  br i1 %tobool1398, label %land.end1406, label %land.rhs1399

land.rhs1399:                                     ; preds = %cond.end1394
  %612 = load i32, i32* %tmp, align 4
  %conv1400 = trunc i32 %612 to i8
  %idxprom1401 = zext i8 %conv1400 to i64
  %arrayidx1402 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1401
  %613 = load i32, i32* %arrayidx1402, align 4
  %and1403 = and i32 %613, 16385
  %cmp1404 = icmp eq i32 %and1403, 16385
  br label %land.end1406

land.end1406:                                     ; preds = %land.rhs1399, %cond.end1394
  %614 = phi i1 [ false, %cond.end1394 ], [ %cmp1404, %land.rhs1399 ]
  %land.ext1407 = zext i1 %614 to i32
  store i32 %land.ext1407, i32* %tmp, align 4
  br label %do.body1408

do.body1408:                                      ; preds = %land.end1406
  br label %while.cond1409

while.cond1409:                                   ; preds = %if.end1436, %do.body1408
  %615 = load i8*, i8** %s.addr, align 8
  %616 = load i8*, i8** %strend.addr, align 8
  %cmp1410 = icmp ult i8* %615, %616
  br i1 %cmp1410, label %while.body1412, label %while.end1438

while.body1412:                                   ; preds = %while.cond1409
  %617 = load i32, i32* %tmp, align 4
  %618 = load i8*, i8** %s.addr, align 8
  %619 = load i8, i8* %618, align 1
  %idxprom1413 = zext i8 %619 to i64
  %arrayidx1414 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1413
  %620 = load i32, i32* %arrayidx1414, align 4
  %and1415 = and i32 %620, 16385
  %cmp1416 = icmp eq i32 %and1415, 16385
  %lnot1419 = xor i1 %cmp1416, true
  %lnot.ext1420 = zext i1 %lnot1419 to i32
  %cmp1421 = icmp eq i32 %617, %lnot.ext1420
  br i1 %cmp1421, label %if.then1423, label %if.else1427

if.then1423:                                      ; preds = %while.body1412
  %621 = load i32, i32* %tmp, align 4
  %tobool1424 = icmp ne i32 %621, 0
  %lnot1425 = xor i1 %tobool1424, true
  %lnot.ext1426 = zext i1 %lnot1425 to i32
  store i32 %lnot.ext1426, i32* %tmp, align 4
  br label %if.end1436

if.else1427:                                      ; preds = %while.body1412
  %622 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1428 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %622, i32 0, i32 12
  %623 = load i8, i8* %intuit1428, align 8
  %tobool1429 = trunc i8 %623 to i1
  br i1 %tobool1429, label %if.then1434, label %lor.lhs.false1431

lor.lhs.false1431:                                ; preds = %if.else1427
  %624 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1432 = call i32 @S_regtry(%struct.regmatch_info* %624, i8** %s.addr)
  %tobool1433 = icmp ne i32 %call1432, 0
  br i1 %tobool1433, label %if.then1434, label %if.end1435

if.then1434:                                      ; preds = %lor.lhs.false1431, %if.else1427
  br label %got_it

if.end1435:                                       ; preds = %lor.lhs.false1431
  br label %if.end1436

if.end1436:                                       ; preds = %if.end1435, %if.then1423
  %625 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1437 = getelementptr inbounds i8, i8* %625, i32 1
  store i8* %incdec.ptr1437, i8** %s.addr, align 8
  br label %while.cond1409

while.end1438:                                    ; preds = %while.cond1409
  br label %do.end1439

do.end1439:                                       ; preds = %while.end1438
  br label %if.end1440

if.end1440:                                       ; preds = %do.end1439, %do.end1385
  %626 = load i32, i32* %tmp, align 4
  %627 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 10), align 4
  %and1441 = and i32 %627, 16385
  %cmp1442 = icmp eq i32 %and1441, 16385
  %lnot1445 = xor i1 %cmp1442, true
  %lnot.ext1446 = zext i1 %lnot1445 to i32
  %cmp1447 = icmp eq i32 %626, %lnot.ext1446
  br i1 %cmp1447, label %if.then1449, label %if.else1450

if.then1449:                                      ; preds = %if.end1440
  br label %if.end1459

if.else1450:                                      ; preds = %if.end1440
  %628 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1451 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %628, i32 0, i32 12
  %629 = load i8, i8* %intuit1451, align 8
  %tobool1452 = trunc i8 %629 to i1
  br i1 %tobool1452, label %if.then1457, label %lor.lhs.false1454

lor.lhs.false1454:                                ; preds = %if.else1450
  %630 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1455 = call i32 @S_regtry(%struct.regmatch_info* %630, i8** %s.addr)
  %tobool1456 = icmp ne i32 %call1455, 0
  br i1 %tobool1456, label %if.then1457, label %if.end1458

if.then1457:                                      ; preds = %lor.lhs.false1454, %if.else1450
  br label %got_it

if.end1458:                                       ; preds = %lor.lhs.false1454
  br label %if.end1459

if.end1459:                                       ; preds = %if.end1458, %if.then1449
  br label %sw.epilog4014

sw.bb1460:                                        ; preds = %entry
  %631 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags1461 = getelementptr inbounds %struct.regnode, %struct.regnode* %631, i32 0, i32 0
  %632 = load i8, i8* %flags1461, align 2
  %conv1462 = zext i8 %632 to i32
  %cmp1463 = icmp eq i32 %conv1462, 0
  br i1 %cmp1463, label %if.then1465, label %if.end1670

if.then1465:                                      ; preds = %sw.bb1460
  %633 = load i8, i8* %utf8_target, align 1
  %tobool1466 = trunc i8 %633 to i1
  br i1 %tobool1466, label %if.then1467, label %if.else1594

if.then1467:                                      ; preds = %if.then1465
  %634 = load i8*, i8** %s.addr, align 8
  %635 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1468 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %635, i32 0, i32 1
  %636 = load i8*, i8** %strbeg1468, align 8
  %cmp1469 = icmp eq i8* %634, %636
  br i1 %cmp1469, label %if.then1471, label %if.else1472

if.then1471:                                      ; preds = %if.then1467
  store i32 10, i32* %tmp, align 4
  br label %if.end1485

if.else1472:                                      ; preds = %if.then1467
  %637 = load i8*, i8** %s.addr, align 8
  %638 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1474 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %638, i32 0, i32 1
  %639 = load i8*, i8** %strbeg1474, align 8
  %call1475 = call i8* @S_reghop3(i8* %637, i64 -1, i8* %639)
  store i8* %call1475, i8** %r1473, align 8
  %640 = load i8*, i8** %r1473, align 8
  %641 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1476 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %641, i32 0, i32 2
  %642 = load i8*, i8** %strend1476, align 8
  %643 = load i8*, i8** %r1473, align 8
  %sub.ptr.lhs.cast1477 = ptrtoint i8* %642 to i64
  %sub.ptr.rhs.cast1478 = ptrtoint i8* %643 to i64
  %sub.ptr.sub1479 = sub i64 %sub.ptr.lhs.cast1477, %sub.ptr.rhs.cast1478
  %call1480 = call zeroext i1 @Perl_ckwarn(i32 44)
  %644 = zext i1 %call1480 to i64
  %cond1482 = select i1 %call1480, i32 0, i32 1
  %call1483 = call i64 @Perl_utf8n_to_uvchr(i8* %640, i64 %sub.ptr.sub1479, i64* null, i32 %cond1482)
  %conv1484 = trunc i64 %call1483 to i32
  store i32 %conv1484, i32* %tmp, align 4
  br label %if.end1485

if.end1485:                                       ; preds = %if.else1472, %if.then1471
  %645 = load i32, i32* %tmp, align 4
  %cmp1486 = icmp slt i32 %645, 256
  br i1 %cmp1486, label %cond.true1488, label %cond.false1501

cond.true1488:                                    ; preds = %if.end1485
  %646 = load i32, i32* %tmp, align 4
  %conv1489 = sext i32 %646 to i64
  %and1490 = and i64 %conv1489, -256
  %tobool1491 = icmp ne i64 %and1490, 0
  br i1 %tobool1491, label %land.end1498, label %land.rhs1492

land.rhs1492:                                     ; preds = %cond.true1488
  %647 = load i32, i32* %tmp, align 4
  %conv1493 = trunc i32 %647 to i8
  %idxprom1494 = zext i8 %conv1493 to i64
  %arrayidx1495 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1494
  %648 = load i32, i32* %arrayidx1495, align 4
  %and1496 = and i32 %648, 1
  %tobool1497 = icmp ne i32 %and1496, 0
  br label %land.end1498

land.end1498:                                     ; preds = %land.rhs1492, %cond.true1488
  %649 = phi i1 [ false, %cond.true1488 ], [ %tobool1497, %land.rhs1492 ]
  %650 = zext i1 %649 to i64
  %cond1500 = select i1 %649, i32 1, i32 0
  br label %cond.end1505

cond.false1501:                                   ; preds = %if.end1485
  %651 = load i32, i32* %tmp, align 4
  %conv1502 = sext i32 %651 to i64
  %call1503 = call zeroext i1 @Perl__is_uni_FOO(i8 zeroext 0, i64 %conv1502)
  %conv1504 = zext i1 %call1503 to i32
  br label %cond.end1505

cond.end1505:                                     ; preds = %cond.false1501, %land.end1498
  %cond1506 = phi i32 [ %cond1500, %land.end1498 ], [ %conv1504, %cond.false1501 ]
  store i32 %cond1506, i32* %tmp, align 4
  br label %do.body1507

do.body1507:                                      ; preds = %cond.end1505
  %652 = load %struct.sv*, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  %tobool1508 = icmp ne %struct.sv* %652, null
  br i1 %tobool1508, label %if.end1512, label %if.then1509

if.then1509:                                      ; preds = %do.body1507
  store i8 4, i8* %flags1510, align 1
  %653 = load %struct.sv*, %struct.sv** getelementptr inbounds ([16 x %struct.sv*], [16 x %struct.sv*]* @PL_XPosix_ptrs, i64 0, i64 0), align 16
  %call1511 = call %struct.sv* @Perl__core_swash_init(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %struct.sv* @PL_sv_undef, i32 1, i32 0, %struct.sv* %653, i8* %flags1510)
  store %struct.sv* %call1511, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  br label %if.end1512

if.end1512:                                       ; preds = %if.then1509, %do.body1507
  br label %do.end1513

do.end1513:                                       ; preds = %if.end1512
  br label %do.body1514

do.body1514:                                      ; preds = %do.end1513
  br label %while.cond1515

while.cond1515:                                   ; preds = %if.end1586, %do.body1514
  %654 = load i8*, i8** %s.addr, align 8
  %655 = load i8*, i8** %strend.addr, align 8
  %cmp1516 = icmp ult i8* %654, %655
  br i1 %cmp1516, label %while.body1518, label %while.end1592

while.body1518:                                   ; preds = %while.cond1515
  %656 = load i32, i32* %tmp, align 4
  %657 = load i8*, i8** %s.addr, align 8
  %658 = load i8, i8* %657, align 1
  %conv1519 = zext i8 %658 to i64
  %cmp1520 = icmp ult i64 %conv1519, 128
  br i1 %cmp1520, label %cond.true1522, label %cond.false1529

cond.true1522:                                    ; preds = %while.body1518
  %659 = load i8*, i8** %s.addr, align 8
  %660 = load i8, i8* %659, align 1
  %idxprom1523 = zext i8 %660 to i64
  %arrayidx1524 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1523
  %661 = load i32, i32* %arrayidx1524, align 4
  %and1525 = and i32 %661, 1
  %tobool1526 = icmp ne i32 %and1525, 0
  %662 = zext i1 %tobool1526 to i64
  %cond1528 = select i1 %tobool1526, i32 1, i32 0
  br label %cond.end1566

cond.false1529:                                   ; preds = %while.body1518
  %663 = load i8*, i8** %s.addr, align 8
  %664 = load i8, i8* %663, align 1
  %conv1530 = zext i8 %664 to i32
  %and1531 = and i32 %conv1530, 254
  %cmp1532 = icmp eq i32 %and1531, 194
  br i1 %cmp1532, label %cond.true1534, label %cond.false1561

cond.true1534:                                    ; preds = %cond.false1529
  %665 = load i8*, i8** %s.addr, align 8
  %666 = load i8, i8* %665, align 1
  %conv1535 = zext i8 %666 to i32
  %and1536 = and i32 %conv1535, 31
  %shl1537 = shl i32 %and1536, 6
  %667 = load i8*, i8** %s.addr, align 8
  %add.ptr1538 = getelementptr inbounds i8, i8* %667, i64 1
  %668 = load i8, i8* %add.ptr1538, align 1
  %conv1539 = zext i8 %668 to i32
  %and1540 = and i32 %conv1539, 63
  %or1541 = or i32 %shl1537, %and1540
  %conv1542 = sext i32 %or1541 to i64
  %and1543 = and i64 %conv1542, -256
  %tobool1544 = icmp ne i64 %and1543, 0
  br i1 %tobool1544, label %land.end1558, label %land.rhs1545

land.rhs1545:                                     ; preds = %cond.true1534
  %669 = load i8*, i8** %s.addr, align 8
  %670 = load i8, i8* %669, align 1
  %conv1546 = zext i8 %670 to i32
  %and1547 = and i32 %conv1546, 31
  %shl1548 = shl i32 %and1547, 6
  %671 = load i8*, i8** %s.addr, align 8
  %add.ptr1549 = getelementptr inbounds i8, i8* %671, i64 1
  %672 = load i8, i8* %add.ptr1549, align 1
  %conv1550 = zext i8 %672 to i32
  %and1551 = and i32 %conv1550, 63
  %or1552 = or i32 %shl1548, %and1551
  %conv1553 = trunc i32 %or1552 to i8
  %idxprom1554 = zext i8 %conv1553 to i64
  %arrayidx1555 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1554
  %673 = load i32, i32* %arrayidx1555, align 4
  %and1556 = and i32 %673, 1
  %tobool1557 = icmp ne i32 %and1556, 0
  br label %land.end1558

land.end1558:                                     ; preds = %land.rhs1545, %cond.true1534
  %674 = phi i1 [ false, %cond.true1534 ], [ %tobool1557, %land.rhs1545 ]
  %675 = zext i1 %674 to i64
  %cond1560 = select i1 %674, i32 1, i32 0
  br label %cond.end1564

cond.false1561:                                   ; preds = %cond.false1529
  %676 = load i8*, i8** %s.addr, align 8
  %call1562 = call zeroext i1 @Perl__is_utf8_FOO(i8 zeroext 0, i8* %676)
  %conv1563 = zext i1 %call1562 to i32
  br label %cond.end1564

cond.end1564:                                     ; preds = %cond.false1561, %land.end1558
  %cond1565 = phi i32 [ %cond1560, %land.end1558 ], [ %conv1563, %cond.false1561 ]
  br label %cond.end1566

cond.end1566:                                     ; preds = %cond.end1564, %cond.true1522
  %cond1567 = phi i32 [ %cond1528, %cond.true1522 ], [ %cond1565, %cond.end1564 ]
  %tobool1568 = icmp ne i32 %cond1567, 0
  %lnot1569 = xor i1 %tobool1568, true
  %lnot.ext1570 = zext i1 %lnot1569 to i32
  %cmp1571 = icmp eq i32 %656, %lnot.ext1570
  br i1 %cmp1571, label %if.then1573, label %if.else1577

if.then1573:                                      ; preds = %cond.end1566
  %677 = load i32, i32* %tmp, align 4
  %tobool1574 = icmp ne i32 %677, 0
  %lnot1575 = xor i1 %tobool1574, true
  %lnot.ext1576 = zext i1 %lnot1575 to i32
  store i32 %lnot.ext1576, i32* %tmp, align 4
  br label %if.end1586

if.else1577:                                      ; preds = %cond.end1566
  %678 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1578 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %678, i32 0, i32 12
  %679 = load i8, i8* %intuit1578, align 8
  %tobool1579 = trunc i8 %679 to i1
  br i1 %tobool1579, label %if.then1584, label %lor.lhs.false1581

lor.lhs.false1581:                                ; preds = %if.else1577
  %680 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1582 = call i32 @S_regtry(%struct.regmatch_info* %680, i8** %s.addr)
  %tobool1583 = icmp ne i32 %call1582, 0
  br i1 %tobool1583, label %if.then1584, label %if.end1585

if.then1584:                                      ; preds = %lor.lhs.false1581, %if.else1577
  br label %got_it

if.end1585:                                       ; preds = %lor.lhs.false1581
  br label %if.end1586

if.end1586:                                       ; preds = %if.end1585, %if.then1573
  %681 = load i8*, i8** %s.addr, align 8
  %682 = load i8, i8* %681, align 1
  %idxprom1587 = zext i8 %682 to i64
  %arrayidx1588 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1587
  %683 = load i8, i8* %arrayidx1588, align 1
  %conv1589 = zext i8 %683 to i32
  %684 = load i8*, i8** %s.addr, align 8
  %idx.ext1590 = sext i32 %conv1589 to i64
  %add.ptr1591 = getelementptr inbounds i8, i8* %684, i64 %idx.ext1590
  store i8* %add.ptr1591, i8** %s.addr, align 8
  br label %while.cond1515

while.end1592:                                    ; preds = %while.cond1515
  br label %do.end1593

do.end1593:                                       ; preds = %while.end1592
  br label %if.end1649

if.else1594:                                      ; preds = %if.then1465
  %685 = load i8*, i8** %s.addr, align 8
  %686 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1595 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %686, i32 0, i32 1
  %687 = load i8*, i8** %strbeg1595, align 8
  %cmp1596 = icmp ne i8* %685, %687
  br i1 %cmp1596, label %cond.true1598, label %cond.false1601

cond.true1598:                                    ; preds = %if.else1594
  %688 = load i8*, i8** %s.addr, align 8
  %add.ptr1599 = getelementptr inbounds i8, i8* %688, i64 -1
  %689 = load i8, i8* %add.ptr1599, align 1
  %conv1600 = zext i8 %689 to i32
  br label %cond.end1602

cond.false1601:                                   ; preds = %if.else1594
  br label %cond.end1602

cond.end1602:                                     ; preds = %cond.false1601, %cond.true1598
  %cond1603 = phi i32 [ %conv1600, %cond.true1598 ], [ 10, %cond.false1601 ]
  store i32 %cond1603, i32* %tmp, align 4
  %690 = load i32, i32* %tmp, align 4
  %conv1604 = sext i32 %690 to i64
  %and1605 = and i64 %conv1604, -256
  %tobool1606 = icmp ne i64 %and1605, 0
  br i1 %tobool1606, label %land.end1613, label %land.rhs1607

land.rhs1607:                                     ; preds = %cond.end1602
  %691 = load i32, i32* %tmp, align 4
  %conv1608 = trunc i32 %691 to i8
  %idxprom1609 = zext i8 %conv1608 to i64
  %arrayidx1610 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1609
  %692 = load i32, i32* %arrayidx1610, align 4
  %and1611 = and i32 %692, 1
  %tobool1612 = icmp ne i32 %and1611, 0
  br label %land.end1613

land.end1613:                                     ; preds = %land.rhs1607, %cond.end1602
  %693 = phi i1 [ false, %cond.end1602 ], [ %tobool1612, %land.rhs1607 ]
  %694 = zext i1 %693 to i64
  %cond1615 = select i1 %693, i32 1, i32 0
  store i32 %cond1615, i32* %tmp, align 4
  br label %do.body1616

do.body1616:                                      ; preds = %land.end1613
  br label %while.cond1617

while.cond1617:                                   ; preds = %if.end1645, %do.body1616
  %695 = load i8*, i8** %s.addr, align 8
  %696 = load i8*, i8** %strend.addr, align 8
  %cmp1618 = icmp ult i8* %695, %696
  br i1 %cmp1618, label %while.body1620, label %while.end1647

while.body1620:                                   ; preds = %while.cond1617
  %697 = load i32, i32* %tmp, align 4
  %698 = load i8*, i8** %s.addr, align 8
  %699 = load i8, i8* %698, align 1
  %idxprom1621 = zext i8 %699 to i64
  %arrayidx1622 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1621
  %700 = load i32, i32* %arrayidx1622, align 4
  %and1623 = and i32 %700, 1
  %tobool1624 = icmp ne i32 %and1623, 0
  %701 = zext i1 %tobool1624 to i64
  %cond1626 = select i1 %tobool1624, i32 1, i32 0
  %tobool1627 = icmp ne i32 %cond1626, 0
  %lnot1628 = xor i1 %tobool1627, true
  %lnot.ext1629 = zext i1 %lnot1628 to i32
  %cmp1630 = icmp eq i32 %697, %lnot.ext1629
  br i1 %cmp1630, label %if.then1632, label %if.else1636

if.then1632:                                      ; preds = %while.body1620
  %702 = load i32, i32* %tmp, align 4
  %tobool1633 = icmp ne i32 %702, 0
  %lnot1634 = xor i1 %tobool1633, true
  %lnot.ext1635 = zext i1 %lnot1634 to i32
  store i32 %lnot.ext1635, i32* %tmp, align 4
  br label %if.end1645

if.else1636:                                      ; preds = %while.body1620
  %703 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1637 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %703, i32 0, i32 12
  %704 = load i8, i8* %intuit1637, align 8
  %tobool1638 = trunc i8 %704 to i1
  br i1 %tobool1638, label %if.then1643, label %lor.lhs.false1640

lor.lhs.false1640:                                ; preds = %if.else1636
  %705 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1641 = call i32 @S_regtry(%struct.regmatch_info* %705, i8** %s.addr)
  %tobool1642 = icmp ne i32 %call1641, 0
  br i1 %tobool1642, label %if.then1643, label %if.end1644

if.then1643:                                      ; preds = %lor.lhs.false1640, %if.else1636
  br label %got_it

if.end1644:                                       ; preds = %lor.lhs.false1640
  br label %if.end1645

if.end1645:                                       ; preds = %if.end1644, %if.then1632
  %706 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1646 = getelementptr inbounds i8, i8* %706, i32 1
  store i8* %incdec.ptr1646, i8** %s.addr, align 8
  br label %while.cond1617

while.end1647:                                    ; preds = %while.cond1617
  br label %do.end1648

do.end1648:                                       ; preds = %while.end1647
  br label %if.end1649

if.end1649:                                       ; preds = %do.end1648, %do.end1593
  %707 = load i32, i32* %tmp, align 4
  %708 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 10), align 4
  %and1650 = and i32 %708, 1
  %tobool1651 = icmp ne i32 %and1650, 0
  %709 = zext i1 %tobool1651 to i64
  %cond1653 = select i1 %tobool1651, i32 1, i32 0
  %tobool1654 = icmp ne i32 %cond1653, 0
  %lnot1655 = xor i1 %tobool1654, true
  %lnot.ext1656 = zext i1 %lnot1655 to i32
  %cmp1657 = icmp eq i32 %707, %lnot.ext1656
  br i1 %cmp1657, label %if.then1659, label %if.else1660

if.then1659:                                      ; preds = %if.end1649
  br label %if.end1669

if.else1660:                                      ; preds = %if.end1649
  %710 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1661 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %710, i32 0, i32 12
  %711 = load i8, i8* %intuit1661, align 8
  %tobool1662 = trunc i8 %711 to i1
  br i1 %tobool1662, label %if.then1667, label %lor.lhs.false1664

lor.lhs.false1664:                                ; preds = %if.else1660
  %712 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1665 = call i32 @S_regtry(%struct.regmatch_info* %712, i8** %s.addr)
  %tobool1666 = icmp ne i32 %call1665, 0
  br i1 %tobool1666, label %if.then1667, label %if.end1668

if.then1667:                                      ; preds = %lor.lhs.false1664, %if.else1660
  br label %got_it

if.end1668:                                       ; preds = %lor.lhs.false1664
  br label %if.end1669

if.end1669:                                       ; preds = %if.end1668, %if.then1659
  br label %sw.epilog4014

if.end1670:                                       ; preds = %sw.bb1460
  br label %do_nboundu

do_nboundu:                                       ; preds = %if.end1670, %if.end533
  store i8 1, i8* %to_complement, align 1
  br label %sw.bb1671

sw.bb1671:                                        ; preds = %entry, %do_nboundu
  br label %do_boundu

do_boundu:                                        ; preds = %sw.bb1671, %if.end285
  %713 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags1672 = getelementptr inbounds %struct.regnode, %struct.regnode* %713, i32 0, i32 0
  %714 = load i8, i8* %flags1672, align 2
  %conv1673 = zext i8 %714 to i32
  switch i32 %conv1673, label %sw.epilog [
    i32 0, label %sw.bb1674
    i32 1, label %sw.bb1879
    i32 2, label %sw.bb2007
    i32 3, label %sw.bb2147
  ]

sw.bb1674:                                        ; preds = %do_boundu
  %715 = load i8, i8* %utf8_target, align 1
  %tobool1675 = trunc i8 %715 to i1
  br i1 %tobool1675, label %if.then1676, label %if.else1803

if.then1676:                                      ; preds = %sw.bb1674
  %716 = load i8*, i8** %s.addr, align 8
  %717 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1677 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %717, i32 0, i32 1
  %718 = load i8*, i8** %strbeg1677, align 8
  %cmp1678 = icmp eq i8* %716, %718
  br i1 %cmp1678, label %if.then1680, label %if.else1681

if.then1680:                                      ; preds = %if.then1676
  store i32 10, i32* %tmp, align 4
  br label %if.end1694

if.else1681:                                      ; preds = %if.then1676
  %719 = load i8*, i8** %s.addr, align 8
  %720 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1683 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %720, i32 0, i32 1
  %721 = load i8*, i8** %strbeg1683, align 8
  %call1684 = call i8* @S_reghop3(i8* %719, i64 -1, i8* %721)
  store i8* %call1684, i8** %r1682, align 8
  %722 = load i8*, i8** %r1682, align 8
  %723 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1685 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %723, i32 0, i32 2
  %724 = load i8*, i8** %strend1685, align 8
  %725 = load i8*, i8** %r1682, align 8
  %sub.ptr.lhs.cast1686 = ptrtoint i8* %724 to i64
  %sub.ptr.rhs.cast1687 = ptrtoint i8* %725 to i64
  %sub.ptr.sub1688 = sub i64 %sub.ptr.lhs.cast1686, %sub.ptr.rhs.cast1687
  %call1689 = call zeroext i1 @Perl_ckwarn(i32 44)
  %726 = zext i1 %call1689 to i64
  %cond1691 = select i1 %call1689, i32 0, i32 1
  %call1692 = call i64 @Perl_utf8n_to_uvchr(i8* %722, i64 %sub.ptr.sub1688, i64* null, i32 %cond1691)
  %conv1693 = trunc i64 %call1692 to i32
  store i32 %conv1693, i32* %tmp, align 4
  br label %if.end1694

if.end1694:                                       ; preds = %if.else1681, %if.then1680
  %727 = load i32, i32* %tmp, align 4
  %cmp1695 = icmp slt i32 %727, 256
  br i1 %cmp1695, label %cond.true1697, label %cond.false1710

cond.true1697:                                    ; preds = %if.end1694
  %728 = load i32, i32* %tmp, align 4
  %conv1698 = sext i32 %728 to i64
  %and1699 = and i64 %conv1698, -256
  %tobool1700 = icmp ne i64 %and1699, 0
  br i1 %tobool1700, label %land.end1707, label %land.rhs1701

land.rhs1701:                                     ; preds = %cond.true1697
  %729 = load i32, i32* %tmp, align 4
  %conv1702 = trunc i32 %729 to i8
  %idxprom1703 = zext i8 %conv1702 to i64
  %arrayidx1704 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1703
  %730 = load i32, i32* %arrayidx1704, align 4
  %and1705 = and i32 %730, 1
  %tobool1706 = icmp ne i32 %and1705, 0
  br label %land.end1707

land.end1707:                                     ; preds = %land.rhs1701, %cond.true1697
  %731 = phi i1 [ false, %cond.true1697 ], [ %tobool1706, %land.rhs1701 ]
  %732 = zext i1 %731 to i64
  %cond1709 = select i1 %731, i32 1, i32 0
  br label %cond.end1714

cond.false1710:                                   ; preds = %if.end1694
  %733 = load i32, i32* %tmp, align 4
  %conv1711 = sext i32 %733 to i64
  %call1712 = call zeroext i1 @Perl__is_uni_FOO(i8 zeroext 0, i64 %conv1711)
  %conv1713 = zext i1 %call1712 to i32
  br label %cond.end1714

cond.end1714:                                     ; preds = %cond.false1710, %land.end1707
  %cond1715 = phi i32 [ %cond1709, %land.end1707 ], [ %conv1713, %cond.false1710 ]
  store i32 %cond1715, i32* %tmp, align 4
  br label %do.body1716

do.body1716:                                      ; preds = %cond.end1714
  %734 = load %struct.sv*, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  %tobool1717 = icmp ne %struct.sv* %734, null
  br i1 %tobool1717, label %if.end1721, label %if.then1718

if.then1718:                                      ; preds = %do.body1716
  store i8 4, i8* %flags1719, align 1
  %735 = load %struct.sv*, %struct.sv** getelementptr inbounds ([16 x %struct.sv*], [16 x %struct.sv*]* @PL_XPosix_ptrs, i64 0, i64 0), align 16
  %call1720 = call %struct.sv* @Perl__core_swash_init(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %struct.sv* @PL_sv_undef, i32 1, i32 0, %struct.sv* %735, i8* %flags1719)
  store %struct.sv* %call1720, %struct.sv** getelementptr inbounds ([10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 0), align 16
  br label %if.end1721

if.end1721:                                       ; preds = %if.then1718, %do.body1716
  br label %do.end1722

do.end1722:                                       ; preds = %if.end1721
  br label %do.body1723

do.body1723:                                      ; preds = %do.end1722
  br label %while.cond1724

while.cond1724:                                   ; preds = %if.end1795, %do.body1723
  %736 = load i8*, i8** %s.addr, align 8
  %737 = load i8*, i8** %strend.addr, align 8
  %cmp1725 = icmp ult i8* %736, %737
  br i1 %cmp1725, label %while.body1727, label %while.end1801

while.body1727:                                   ; preds = %while.cond1724
  %738 = load i32, i32* %tmp, align 4
  %739 = load i8*, i8** %s.addr, align 8
  %740 = load i8, i8* %739, align 1
  %conv1728 = zext i8 %740 to i64
  %cmp1729 = icmp ult i64 %conv1728, 128
  br i1 %cmp1729, label %cond.true1731, label %cond.false1738

cond.true1731:                                    ; preds = %while.body1727
  %741 = load i8*, i8** %s.addr, align 8
  %742 = load i8, i8* %741, align 1
  %idxprom1732 = zext i8 %742 to i64
  %arrayidx1733 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1732
  %743 = load i32, i32* %arrayidx1733, align 4
  %and1734 = and i32 %743, 1
  %tobool1735 = icmp ne i32 %and1734, 0
  %744 = zext i1 %tobool1735 to i64
  %cond1737 = select i1 %tobool1735, i32 1, i32 0
  br label %cond.end1775

cond.false1738:                                   ; preds = %while.body1727
  %745 = load i8*, i8** %s.addr, align 8
  %746 = load i8, i8* %745, align 1
  %conv1739 = zext i8 %746 to i32
  %and1740 = and i32 %conv1739, 254
  %cmp1741 = icmp eq i32 %and1740, 194
  br i1 %cmp1741, label %cond.true1743, label %cond.false1770

cond.true1743:                                    ; preds = %cond.false1738
  %747 = load i8*, i8** %s.addr, align 8
  %748 = load i8, i8* %747, align 1
  %conv1744 = zext i8 %748 to i32
  %and1745 = and i32 %conv1744, 31
  %shl1746 = shl i32 %and1745, 6
  %749 = load i8*, i8** %s.addr, align 8
  %add.ptr1747 = getelementptr inbounds i8, i8* %749, i64 1
  %750 = load i8, i8* %add.ptr1747, align 1
  %conv1748 = zext i8 %750 to i32
  %and1749 = and i32 %conv1748, 63
  %or1750 = or i32 %shl1746, %and1749
  %conv1751 = sext i32 %or1750 to i64
  %and1752 = and i64 %conv1751, -256
  %tobool1753 = icmp ne i64 %and1752, 0
  br i1 %tobool1753, label %land.end1767, label %land.rhs1754

land.rhs1754:                                     ; preds = %cond.true1743
  %751 = load i8*, i8** %s.addr, align 8
  %752 = load i8, i8* %751, align 1
  %conv1755 = zext i8 %752 to i32
  %and1756 = and i32 %conv1755, 31
  %shl1757 = shl i32 %and1756, 6
  %753 = load i8*, i8** %s.addr, align 8
  %add.ptr1758 = getelementptr inbounds i8, i8* %753, i64 1
  %754 = load i8, i8* %add.ptr1758, align 1
  %conv1759 = zext i8 %754 to i32
  %and1760 = and i32 %conv1759, 63
  %or1761 = or i32 %shl1757, %and1760
  %conv1762 = trunc i32 %or1761 to i8
  %idxprom1763 = zext i8 %conv1762 to i64
  %arrayidx1764 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1763
  %755 = load i32, i32* %arrayidx1764, align 4
  %and1765 = and i32 %755, 1
  %tobool1766 = icmp ne i32 %and1765, 0
  br label %land.end1767

land.end1767:                                     ; preds = %land.rhs1754, %cond.true1743
  %756 = phi i1 [ false, %cond.true1743 ], [ %tobool1766, %land.rhs1754 ]
  %757 = zext i1 %756 to i64
  %cond1769 = select i1 %756, i32 1, i32 0
  br label %cond.end1773

cond.false1770:                                   ; preds = %cond.false1738
  %758 = load i8*, i8** %s.addr, align 8
  %call1771 = call zeroext i1 @Perl__is_utf8_FOO(i8 zeroext 0, i8* %758)
  %conv1772 = zext i1 %call1771 to i32
  br label %cond.end1773

cond.end1773:                                     ; preds = %cond.false1770, %land.end1767
  %cond1774 = phi i32 [ %cond1769, %land.end1767 ], [ %conv1772, %cond.false1770 ]
  br label %cond.end1775

cond.end1775:                                     ; preds = %cond.end1773, %cond.true1731
  %cond1776 = phi i32 [ %cond1737, %cond.true1731 ], [ %cond1774, %cond.end1773 ]
  %tobool1777 = icmp ne i32 %cond1776, 0
  %lnot1778 = xor i1 %tobool1777, true
  %lnot.ext1779 = zext i1 %lnot1778 to i32
  %cmp1780 = icmp eq i32 %738, %lnot.ext1779
  br i1 %cmp1780, label %if.then1782, label %if.else1794

if.then1782:                                      ; preds = %cond.end1775
  %759 = load i32, i32* %tmp, align 4
  %tobool1783 = icmp ne i32 %759, 0
  %lnot1784 = xor i1 %tobool1783, true
  %lnot.ext1785 = zext i1 %lnot1784 to i32
  store i32 %lnot.ext1785, i32* %tmp, align 4
  %760 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1786 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %760, i32 0, i32 12
  %761 = load i8, i8* %intuit1786, align 8
  %tobool1787 = trunc i8 %761 to i1
  br i1 %tobool1787, label %if.then1792, label %lor.lhs.false1789

lor.lhs.false1789:                                ; preds = %if.then1782
  %762 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1790 = call i32 @S_regtry(%struct.regmatch_info* %762, i8** %s.addr)
  %tobool1791 = icmp ne i32 %call1790, 0
  br i1 %tobool1791, label %if.then1792, label %if.end1793

if.then1792:                                      ; preds = %lor.lhs.false1789, %if.then1782
  br label %got_it

if.end1793:                                       ; preds = %lor.lhs.false1789
  br label %if.end1795

if.else1794:                                      ; preds = %cond.end1775
  br label %if.end1795

if.end1795:                                       ; preds = %if.else1794, %if.end1793
  %763 = load i8*, i8** %s.addr, align 8
  %764 = load i8, i8* %763, align 1
  %idxprom1796 = zext i8 %764 to i64
  %arrayidx1797 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1796
  %765 = load i8, i8* %arrayidx1797, align 1
  %conv1798 = zext i8 %765 to i32
  %766 = load i8*, i8** %s.addr, align 8
  %idx.ext1799 = sext i32 %conv1798 to i64
  %add.ptr1800 = getelementptr inbounds i8, i8* %766, i64 %idx.ext1799
  store i8* %add.ptr1800, i8** %s.addr, align 8
  br label %while.cond1724

while.end1801:                                    ; preds = %while.cond1724
  br label %do.end1802

do.end1802:                                       ; preds = %while.end1801
  br label %if.end1858

if.else1803:                                      ; preds = %sw.bb1674
  %767 = load i8*, i8** %s.addr, align 8
  %768 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1804 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %768, i32 0, i32 1
  %769 = load i8*, i8** %strbeg1804, align 8
  %cmp1805 = icmp ne i8* %767, %769
  br i1 %cmp1805, label %cond.true1807, label %cond.false1810

cond.true1807:                                    ; preds = %if.else1803
  %770 = load i8*, i8** %s.addr, align 8
  %add.ptr1808 = getelementptr inbounds i8, i8* %770, i64 -1
  %771 = load i8, i8* %add.ptr1808, align 1
  %conv1809 = zext i8 %771 to i32
  br label %cond.end1811

cond.false1810:                                   ; preds = %if.else1803
  br label %cond.end1811

cond.end1811:                                     ; preds = %cond.false1810, %cond.true1807
  %cond1812 = phi i32 [ %conv1809, %cond.true1807 ], [ 10, %cond.false1810 ]
  store i32 %cond1812, i32* %tmp, align 4
  %772 = load i32, i32* %tmp, align 4
  %conv1813 = sext i32 %772 to i64
  %and1814 = and i64 %conv1813, -256
  %tobool1815 = icmp ne i64 %and1814, 0
  br i1 %tobool1815, label %land.end1822, label %land.rhs1816

land.rhs1816:                                     ; preds = %cond.end1811
  %773 = load i32, i32* %tmp, align 4
  %conv1817 = trunc i32 %773 to i8
  %idxprom1818 = zext i8 %conv1817 to i64
  %arrayidx1819 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1818
  %774 = load i32, i32* %arrayidx1819, align 4
  %and1820 = and i32 %774, 1
  %tobool1821 = icmp ne i32 %and1820, 0
  br label %land.end1822

land.end1822:                                     ; preds = %land.rhs1816, %cond.end1811
  %775 = phi i1 [ false, %cond.end1811 ], [ %tobool1821, %land.rhs1816 ]
  %776 = zext i1 %775 to i64
  %cond1824 = select i1 %775, i32 1, i32 0
  store i32 %cond1824, i32* %tmp, align 4
  br label %do.body1825

do.body1825:                                      ; preds = %land.end1822
  br label %while.cond1826

while.cond1826:                                   ; preds = %if.end1854, %do.body1825
  %777 = load i8*, i8** %s.addr, align 8
  %778 = load i8*, i8** %strend.addr, align 8
  %cmp1827 = icmp ult i8* %777, %778
  br i1 %cmp1827, label %while.body1829, label %while.end1856

while.body1829:                                   ; preds = %while.cond1826
  %779 = load i32, i32* %tmp, align 4
  %780 = load i8*, i8** %s.addr, align 8
  %781 = load i8, i8* %780, align 1
  %idxprom1830 = zext i8 %781 to i64
  %arrayidx1831 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1830
  %782 = load i32, i32* %arrayidx1831, align 4
  %and1832 = and i32 %782, 1
  %tobool1833 = icmp ne i32 %and1832, 0
  %783 = zext i1 %tobool1833 to i64
  %cond1835 = select i1 %tobool1833, i32 1, i32 0
  %tobool1836 = icmp ne i32 %cond1835, 0
  %lnot1837 = xor i1 %tobool1836, true
  %lnot.ext1838 = zext i1 %lnot1837 to i32
  %cmp1839 = icmp eq i32 %779, %lnot.ext1838
  br i1 %cmp1839, label %if.then1841, label %if.else1853

if.then1841:                                      ; preds = %while.body1829
  %784 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1842 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %784, i32 0, i32 12
  %785 = load i8, i8* %intuit1842, align 8
  %tobool1843 = trunc i8 %785 to i1
  br i1 %tobool1843, label %if.then1848, label %lor.lhs.false1845

lor.lhs.false1845:                                ; preds = %if.then1841
  %786 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1846 = call i32 @S_regtry(%struct.regmatch_info* %786, i8** %s.addr)
  %tobool1847 = icmp ne i32 %call1846, 0
  br i1 %tobool1847, label %if.then1848, label %if.end1849

if.then1848:                                      ; preds = %lor.lhs.false1845, %if.then1841
  br label %got_it

if.end1849:                                       ; preds = %lor.lhs.false1845
  %787 = load i32, i32* %tmp, align 4
  %tobool1850 = icmp ne i32 %787, 0
  %lnot1851 = xor i1 %tobool1850, true
  %lnot.ext1852 = zext i1 %lnot1851 to i32
  store i32 %lnot.ext1852, i32* %tmp, align 4
  br label %if.end1854

if.else1853:                                      ; preds = %while.body1829
  br label %if.end1854

if.end1854:                                       ; preds = %if.else1853, %if.end1849
  %788 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1855 = getelementptr inbounds i8, i8* %788, i32 1
  store i8* %incdec.ptr1855, i8** %s.addr, align 8
  br label %while.cond1826

while.end1856:                                    ; preds = %while.cond1826
  br label %do.end1857

do.end1857:                                       ; preds = %while.end1856
  br label %if.end1858

if.end1858:                                       ; preds = %do.end1857, %do.end1802
  %789 = load i32, i32* %tmp, align 4
  %790 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 10), align 4
  %and1859 = and i32 %790, 1
  %tobool1860 = icmp ne i32 %and1859, 0
  %791 = zext i1 %tobool1860 to i64
  %cond1862 = select i1 %tobool1860, i32 1, i32 0
  %tobool1863 = icmp ne i32 %cond1862, 0
  %lnot1864 = xor i1 %tobool1863, true
  %lnot.ext1865 = zext i1 %lnot1864 to i32
  %cmp1866 = icmp eq i32 %789, %lnot.ext1865
  br i1 %cmp1866, label %if.then1868, label %if.else1877

if.then1868:                                      ; preds = %if.end1858
  %792 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1869 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %792, i32 0, i32 12
  %793 = load i8, i8* %intuit1869, align 8
  %tobool1870 = trunc i8 %793 to i1
  br i1 %tobool1870, label %if.then1875, label %lor.lhs.false1872

lor.lhs.false1872:                                ; preds = %if.then1868
  %794 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1873 = call i32 @S_regtry(%struct.regmatch_info* %794, i8** %s.addr)
  %tobool1874 = icmp ne i32 %call1873, 0
  br i1 %tobool1874, label %if.then1875, label %if.end1876

if.then1875:                                      ; preds = %lor.lhs.false1872, %if.then1868
  br label %got_it

if.end1876:                                       ; preds = %lor.lhs.false1872
  br label %if.end1878

if.else1877:                                      ; preds = %if.end1858
  br label %if.end1878

if.end1878:                                       ; preds = %if.else1877, %if.end1876
  br label %sw.epilog

sw.bb1879:                                        ; preds = %do_boundu
  %795 = load i8*, i8** %s.addr, align 8
  %796 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1880 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %796, i32 0, i32 1
  %797 = load i8*, i8** %strbeg1880, align 8
  %cmp1881 = icmp eq i8* %795, %797
  br i1 %cmp1881, label %if.then1883, label %if.end1908

if.then1883:                                      ; preds = %sw.bb1879
  %798 = load i8, i8* %to_complement, align 1
  %tobool1884 = trunc i8 %798 to i1
  %conv1885 = zext i1 %tobool1884 to i32
  %799 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1886 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %799, i32 0, i32 12
  %800 = load i8, i8* %intuit1886, align 8
  %tobool1887 = trunc i8 %800 to i1
  br i1 %tobool1887, label %lor.end1892, label %lor.rhs1889

lor.rhs1889:                                      ; preds = %if.then1883
  %801 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1890 = call i32 @S_regtry(%struct.regmatch_info* %801, i8** %s.addr)
  %tobool1891 = icmp ne i32 %call1890, 0
  br label %lor.end1892

lor.end1892:                                      ; preds = %lor.rhs1889, %if.then1883
  %802 = phi i1 [ true, %if.then1883 ], [ %tobool1891, %lor.rhs1889 ]
  %803 = zext i1 %802 to i64
  %cond1893 = select i1 %802, i32 1, i32 0
  %xor = xor i32 %conv1885, %cond1893
  %tobool1894 = icmp ne i32 %xor, 0
  br i1 %tobool1894, label %if.then1895, label %if.end1896

if.then1895:                                      ; preds = %lor.end1892
  br label %got_it

if.end1896:                                       ; preds = %lor.end1892
  %804 = load i8, i8* %utf8_target, align 1
  %tobool1897 = trunc i8 %804 to i1
  br i1 %tobool1897, label %cond.true1899, label %cond.false1903

cond.true1899:                                    ; preds = %if.end1896
  %805 = load i8*, i8** %s.addr, align 8
  %806 = load i8, i8* %805, align 1
  %idxprom1900 = zext i8 %806 to i64
  %arrayidx1901 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1900
  %807 = load i8, i8* %arrayidx1901, align 1
  %conv1902 = zext i8 %807 to i32
  br label %cond.end1904

cond.false1903:                                   ; preds = %if.end1896
  br label %cond.end1904

cond.end1904:                                     ; preds = %cond.false1903, %cond.true1899
  %cond1905 = phi i32 [ %conv1902, %cond.true1899 ], [ 1, %cond.false1903 ]
  %808 = load i8*, i8** %s.addr, align 8
  %idx.ext1906 = sext i32 %cond1905 to i64
  %add.ptr1907 = getelementptr inbounds i8, i8* %808, i64 %idx.ext1906
  store i8* %add.ptr1907, i8** %s.addr, align 8
  br label %if.end1908

if.end1908:                                       ; preds = %cond.end1904, %sw.bb1879
  %809 = load i8, i8* %utf8_target, align 1
  %tobool1909 = trunc i8 %809 to i1
  br i1 %tobool1909, label %if.then1910, label %if.else1961

if.then1910:                                      ; preds = %if.end1908
  %810 = load %struct.sv*, %struct.sv** @PL_GCB_invlist, align 8
  %811 = load i8*, i8** %s.addr, align 8
  %812 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1911 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %812, i32 0, i32 1
  %813 = load i8*, i8** %strbeg1911, align 8
  %call1912 = call i8* @S_reghop3(i8* %811, i64 -1, i8* %813)
  %814 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1913 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %814, i32 0, i32 2
  %815 = load i8*, i8** %strend1913, align 8
  %816 = load i8*, i8** %s.addr, align 8
  %817 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1914 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %817, i32 0, i32 1
  %818 = load i8*, i8** %strbeg1914, align 8
  %call1915 = call i8* @S_reghop3(i8* %816, i64 -1, i8* %818)
  %sub.ptr.lhs.cast1916 = ptrtoint i8* %815 to i64
  %sub.ptr.rhs.cast1917 = ptrtoint i8* %call1915 to i64
  %sub.ptr.sub1918 = sub i64 %sub.ptr.lhs.cast1916, %sub.ptr.rhs.cast1917
  %call1919 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %819 = zext i1 %call1919 to i64
  %cond1921 = select i1 %call1919, i32 0, i32 -8161
  %call1922 = call i64 @Perl_utf8n_to_uvchr(i8* %call1912, i64 %sub.ptr.sub1918, i64* null, i32 %cond1921)
  %call1923 = call i64 @Perl__invlist_search(%struct.sv* %810, i64 %call1922)
  %arrayidx1924 = getelementptr inbounds [1484 x i32], [1484 x i32]* @Grapheme_Cluster_Break_invmap, i64 0, i64 %call1923
  %820 = load i32, i32* %arrayidx1924, align 4
  store i32 %820, i32* %before, align 4
  br label %while.cond1925

while.cond1925:                                   ; preds = %if.end1954, %if.then1910
  %821 = load i8*, i8** %s.addr, align 8
  %822 = load i8*, i8** %strend.addr, align 8
  %cmp1926 = icmp ult i8* %821, %822
  br i1 %cmp1926, label %while.body1928, label %while.end1960

while.body1928:                                   ; preds = %while.cond1925
  %823 = load %struct.sv*, %struct.sv** @PL_GCB_invlist, align 8
  %824 = load i8*, i8** %s.addr, align 8
  %825 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1929 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %825, i32 0, i32 2
  %826 = load i8*, i8** %strend1929, align 8
  %827 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast1930 = ptrtoint i8* %826 to i64
  %sub.ptr.rhs.cast1931 = ptrtoint i8* %827 to i64
  %sub.ptr.sub1932 = sub i64 %sub.ptr.lhs.cast1930, %sub.ptr.rhs.cast1931
  %call1933 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %828 = zext i1 %call1933 to i64
  %cond1935 = select i1 %call1933, i32 0, i32 -8161
  %call1936 = call i64 @Perl_utf8n_to_uvchr(i8* %824, i64 %sub.ptr.sub1932, i64* null, i32 %cond1935)
  %call1937 = call i64 @Perl__invlist_search(%struct.sv* %823, i64 %call1936)
  %arrayidx1938 = getelementptr inbounds [1484 x i32], [1484 x i32]* @Grapheme_Cluster_Break_invmap, i64 0, i64 %call1937
  %829 = load i32, i32* %arrayidx1938, align 4
  store i32 %829, i32* %after, align 4
  %830 = load i8, i8* %to_complement, align 1
  %tobool1939 = trunc i8 %830 to i1
  %conv1940 = zext i1 %tobool1939 to i32
  %831 = load i32, i32* %before, align 4
  %832 = load i32, i32* %after, align 4
  %call1941 = call zeroext i1 @S_isGCB(i32 %831, i32 %832)
  %conv1942 = zext i1 %call1941 to i32
  %xor1943 = xor i32 %conv1940, %conv1942
  %tobool1944 = icmp ne i32 %xor1943, 0
  br i1 %tobool1944, label %if.then1945, label %if.end1954

if.then1945:                                      ; preds = %while.body1928
  %833 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1946 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %833, i32 0, i32 12
  %834 = load i8, i8* %intuit1946, align 8
  %tobool1947 = trunc i8 %834 to i1
  br i1 %tobool1947, label %if.then1952, label %lor.lhs.false1949

lor.lhs.false1949:                                ; preds = %if.then1945
  %835 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1950 = call i32 @S_regtry(%struct.regmatch_info* %835, i8** %s.addr)
  %tobool1951 = icmp ne i32 %call1950, 0
  br i1 %tobool1951, label %if.then1952, label %if.end1953

if.then1952:                                      ; preds = %lor.lhs.false1949, %if.then1945
  br label %got_it

if.end1953:                                       ; preds = %lor.lhs.false1949
  %836 = load i32, i32* %after, align 4
  store i32 %836, i32* %before, align 4
  br label %if.end1954

if.end1954:                                       ; preds = %if.end1953, %while.body1928
  %837 = load i8*, i8** %s.addr, align 8
  %838 = load i8, i8* %837, align 1
  %idxprom1955 = zext i8 %838 to i64
  %arrayidx1956 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1955
  %839 = load i8, i8* %arrayidx1956, align 1
  %conv1957 = zext i8 %839 to i32
  %840 = load i8*, i8** %s.addr, align 8
  %idx.ext1958 = sext i32 %conv1957 to i64
  %add.ptr1959 = getelementptr inbounds i8, i8* %840, i64 %idx.ext1958
  store i8* %add.ptr1959, i8** %s.addr, align 8
  br label %while.cond1925

while.end1960:                                    ; preds = %while.cond1925
  br label %if.end1991

if.else1961:                                      ; preds = %if.end1908
  br label %while.cond1962

while.cond1962:                                   ; preds = %if.end1989, %if.else1961
  %841 = load i8*, i8** %s.addr, align 8
  %842 = load i8*, i8** %strend.addr, align 8
  %cmp1963 = icmp ult i8* %841, %842
  br i1 %cmp1963, label %while.body1965, label %while.end1990

while.body1965:                                   ; preds = %while.cond1962
  %843 = load i8, i8* %to_complement, align 1
  %tobool1966 = trunc i8 %843 to i1
  %conv1967 = zext i1 %tobool1966 to i32
  %844 = load i8*, i8** %s.addr, align 8
  %add.ptr1968 = getelementptr inbounds i8, i8* %844, i64 -1
  %845 = load i8, i8* %add.ptr1968, align 1
  %conv1969 = zext i8 %845 to i32
  %cmp1970 = icmp ne i32 %conv1969, 13
  br i1 %cmp1970, label %lor.end1976, label %lor.rhs1972

lor.rhs1972:                                      ; preds = %while.body1965
  %846 = load i8*, i8** %s.addr, align 8
  %847 = load i8, i8* %846, align 1
  %conv1973 = zext i8 %847 to i32
  %cmp1974 = icmp ne i32 %conv1973, 10
  br label %lor.end1976

lor.end1976:                                      ; preds = %lor.rhs1972, %while.body1965
  %848 = phi i1 [ true, %while.body1965 ], [ %cmp1974, %lor.rhs1972 ]
  %lor.ext = zext i1 %848 to i32
  %xor1977 = xor i32 %conv1967, %lor.ext
  %tobool1978 = icmp ne i32 %xor1977, 0
  br i1 %tobool1978, label %if.then1979, label %if.end1989

if.then1979:                                      ; preds = %lor.end1976
  %849 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1980 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %849, i32 0, i32 12
  %850 = load i8, i8* %intuit1980, align 8
  %tobool1981 = trunc i8 %850 to i1
  br i1 %tobool1981, label %if.then1986, label %lor.lhs.false1983

lor.lhs.false1983:                                ; preds = %if.then1979
  %851 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1984 = call i32 @S_regtry(%struct.regmatch_info* %851, i8** %s.addr)
  %tobool1985 = icmp ne i32 %call1984, 0
  br i1 %tobool1985, label %if.then1986, label %if.end1987

if.then1986:                                      ; preds = %lor.lhs.false1983, %if.then1979
  br label %got_it

if.end1987:                                       ; preds = %lor.lhs.false1983
  %852 = load i8*, i8** %s.addr, align 8
  %incdec.ptr1988 = getelementptr inbounds i8, i8* %852, i32 1
  store i8* %incdec.ptr1988, i8** %s.addr, align 8
  br label %if.end1989

if.end1989:                                       ; preds = %if.end1987, %lor.end1976
  br label %while.cond1962

while.end1990:                                    ; preds = %while.cond1962
  br label %if.end1991

if.end1991:                                       ; preds = %while.end1990, %while.end1960
  %853 = load i8, i8* %to_complement, align 1
  %tobool1992 = trunc i8 %853 to i1
  %conv1993 = zext i1 %tobool1992 to i32
  %854 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit1994 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %854, i32 0, i32 12
  %855 = load i8, i8* %intuit1994, align 8
  %tobool1995 = trunc i8 %855 to i1
  br i1 %tobool1995, label %lor.end2000, label %lor.rhs1997

lor.rhs1997:                                      ; preds = %if.end1991
  %856 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call1998 = call i32 @S_regtry(%struct.regmatch_info* %856, i8** %s.addr)
  %tobool1999 = icmp ne i32 %call1998, 0
  br label %lor.end2000

lor.end2000:                                      ; preds = %lor.rhs1997, %if.end1991
  %857 = phi i1 [ true, %if.end1991 ], [ %tobool1999, %lor.rhs1997 ]
  %858 = zext i1 %857 to i64
  %cond2002 = select i1 %857, i32 1, i32 0
  %xor2003 = xor i32 %conv1993, %cond2002
  %tobool2004 = icmp ne i32 %xor2003, 0
  br i1 %tobool2004, label %if.then2005, label %if.end2006

if.then2005:                                      ; preds = %lor.end2000
  br label %got_it

if.end2006:                                       ; preds = %lor.end2000
  br label %sw.epilog

sw.bb2007:                                        ; preds = %do_boundu
  %859 = load i8*, i8** %s.addr, align 8
  %860 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2008 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %860, i32 0, i32 1
  %861 = load i8*, i8** %strbeg2008, align 8
  %cmp2009 = icmp eq i8* %859, %861
  br i1 %cmp2009, label %if.then2011, label %if.end2038

if.then2011:                                      ; preds = %sw.bb2007
  %862 = load i8, i8* %to_complement, align 1
  %tobool2012 = trunc i8 %862 to i1
  %conv2013 = zext i1 %tobool2012 to i32
  %863 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2014 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %863, i32 0, i32 12
  %864 = load i8, i8* %intuit2014, align 8
  %tobool2015 = trunc i8 %864 to i1
  br i1 %tobool2015, label %lor.end2020, label %lor.rhs2017

lor.rhs2017:                                      ; preds = %if.then2011
  %865 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2018 = call i32 @S_regtry(%struct.regmatch_info* %865, i8** %s.addr)
  %tobool2019 = icmp ne i32 %call2018, 0
  br label %lor.end2020

lor.end2020:                                      ; preds = %lor.rhs2017, %if.then2011
  %866 = phi i1 [ true, %if.then2011 ], [ %tobool2019, %lor.rhs2017 ]
  %867 = zext i1 %866 to i64
  %cond2022 = select i1 %866, i32 1, i32 0
  %xor2023 = xor i32 %conv2013, %cond2022
  %tobool2024 = icmp ne i32 %xor2023, 0
  br i1 %tobool2024, label %if.then2025, label %if.end2026

if.then2025:                                      ; preds = %lor.end2020
  br label %got_it

if.end2026:                                       ; preds = %lor.end2020
  %868 = load i8, i8* %utf8_target, align 1
  %tobool2027 = trunc i8 %868 to i1
  br i1 %tobool2027, label %cond.true2029, label %cond.false2033

cond.true2029:                                    ; preds = %if.end2026
  %869 = load i8*, i8** %s.addr, align 8
  %870 = load i8, i8* %869, align 1
  %idxprom2030 = zext i8 %870 to i64
  %arrayidx2031 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2030
  %871 = load i8, i8* %arrayidx2031, align 1
  %conv2032 = zext i8 %871 to i32
  br label %cond.end2034

cond.false2033:                                   ; preds = %if.end2026
  br label %cond.end2034

cond.end2034:                                     ; preds = %cond.false2033, %cond.true2029
  %cond2035 = phi i32 [ %conv2032, %cond.true2029 ], [ 1, %cond.false2033 ]
  %872 = load i8*, i8** %s.addr, align 8
  %idx.ext2036 = sext i32 %cond2035 to i64
  %add.ptr2037 = getelementptr inbounds i8, i8* %872, i64 %idx.ext2036
  store i8* %add.ptr2037, i8** %s.addr, align 8
  br label %if.end2038

if.end2038:                                       ; preds = %cond.end2034, %sw.bb2007
  %873 = load i8, i8* %utf8_target, align 1
  %tobool2039 = trunc i8 %873 to i1
  br i1 %tobool2039, label %if.then2040, label %if.else2096

if.then2040:                                      ; preds = %if.end2038
  %874 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %875 = load i8*, i8** %s.addr, align 8
  %876 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2042 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %876, i32 0, i32 1
  %877 = load i8*, i8** %strbeg2042, align 8
  %call2043 = call i8* @S_reghop3(i8* %875, i64 -1, i8* %877)
  %878 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2044 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %878, i32 0, i32 2
  %879 = load i8*, i8** %strend2044, align 8
  %880 = load i8*, i8** %s.addr, align 8
  %881 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2045 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %881, i32 0, i32 1
  %882 = load i8*, i8** %strbeg2045, align 8
  %call2046 = call i8* @S_reghop3(i8* %880, i64 -1, i8* %882)
  %sub.ptr.lhs.cast2047 = ptrtoint i8* %879 to i64
  %sub.ptr.rhs.cast2048 = ptrtoint i8* %call2046 to i64
  %sub.ptr.sub2049 = sub i64 %sub.ptr.lhs.cast2047, %sub.ptr.rhs.cast2048
  %call2050 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %883 = zext i1 %call2050 to i64
  %cond2052 = select i1 %call2050, i32 0, i32 -8161
  %call2053 = call i64 @Perl_utf8n_to_uvchr(i8* %call2043, i64 %sub.ptr.sub2049, i64* null, i32 %cond2052)
  %call2054 = call i64 @Perl__invlist_search(%struct.sv* %874, i64 %call2053)
  %arrayidx2055 = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call2054
  %884 = load i32, i32* %arrayidx2055, align 4
  store i32 %884, i32* %before2041, align 4
  br label %while.cond2056

while.cond2056:                                   ; preds = %if.end2089, %if.then2040
  %885 = load i8*, i8** %s.addr, align 8
  %886 = load i8*, i8** %strend.addr, align 8
  %cmp2057 = icmp ult i8* %885, %886
  br i1 %cmp2057, label %while.body2059, label %while.end2095

while.body2059:                                   ; preds = %while.cond2056
  %887 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %888 = load i8*, i8** %s.addr, align 8
  %889 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2061 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %889, i32 0, i32 2
  %890 = load i8*, i8** %strend2061, align 8
  %891 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast2062 = ptrtoint i8* %890 to i64
  %sub.ptr.rhs.cast2063 = ptrtoint i8* %891 to i64
  %sub.ptr.sub2064 = sub i64 %sub.ptr.lhs.cast2062, %sub.ptr.rhs.cast2063
  %call2065 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %892 = zext i1 %call2065 to i64
  %cond2067 = select i1 %call2065, i32 0, i32 -8161
  %call2068 = call i64 @Perl_utf8n_to_uvchr(i8* %888, i64 %sub.ptr.sub2064, i64* null, i32 %cond2067)
  %call2069 = call i64 @Perl__invlist_search(%struct.sv* %887, i64 %call2068)
  %arrayidx2070 = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call2069
  %893 = load i32, i32* %arrayidx2070, align 4
  store i32 %893, i32* %after2060, align 4
  %894 = load i8, i8* %to_complement, align 1
  %tobool2071 = trunc i8 %894 to i1
  %conv2072 = zext i1 %tobool2071 to i32
  %895 = load i32, i32* %before2041, align 4
  %896 = load i32, i32* %after2060, align 4
  %897 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2073 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %897, i32 0, i32 1
  %898 = load i8*, i8** %strbeg2073, align 8
  %899 = load i8*, i8** %s.addr, align 8
  %900 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2074 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %900, i32 0, i32 2
  %901 = load i8*, i8** %strend2074, align 8
  %902 = load i8, i8* %utf8_target, align 1
  %tobool2075 = trunc i8 %902 to i1
  %call2076 = call zeroext i1 @S_isSB(i32 %895, i32 %896, i8* %898, i8* %899, i8* %901, i1 zeroext %tobool2075)
  %conv2077 = zext i1 %call2076 to i32
  %xor2078 = xor i32 %conv2072, %conv2077
  %tobool2079 = icmp ne i32 %xor2078, 0
  br i1 %tobool2079, label %if.then2080, label %if.end2089

if.then2080:                                      ; preds = %while.body2059
  %903 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2081 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %903, i32 0, i32 12
  %904 = load i8, i8* %intuit2081, align 8
  %tobool2082 = trunc i8 %904 to i1
  br i1 %tobool2082, label %if.then2087, label %lor.lhs.false2084

lor.lhs.false2084:                                ; preds = %if.then2080
  %905 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2085 = call i32 @S_regtry(%struct.regmatch_info* %905, i8** %s.addr)
  %tobool2086 = icmp ne i32 %call2085, 0
  br i1 %tobool2086, label %if.then2087, label %if.end2088

if.then2087:                                      ; preds = %lor.lhs.false2084, %if.then2080
  br label %got_it

if.end2088:                                       ; preds = %lor.lhs.false2084
  %906 = load i32, i32* %after2060, align 4
  store i32 %906, i32* %before2041, align 4
  br label %if.end2089

if.end2089:                                       ; preds = %if.end2088, %while.body2059
  %907 = load i8*, i8** %s.addr, align 8
  %908 = load i8, i8* %907, align 1
  %idxprom2090 = zext i8 %908 to i64
  %arrayidx2091 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2090
  %909 = load i8, i8* %arrayidx2091, align 1
  %conv2092 = zext i8 %909 to i32
  %910 = load i8*, i8** %s.addr, align 8
  %idx.ext2093 = sext i32 %conv2092 to i64
  %add.ptr2094 = getelementptr inbounds i8, i8* %910, i64 %idx.ext2093
  store i8* %add.ptr2094, i8** %s.addr, align 8
  br label %while.cond2056

while.end2095:                                    ; preds = %while.cond2056
  br label %if.end2131

if.else2096:                                      ; preds = %if.end2038
  %911 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %912 = load i8*, i8** %s.addr, align 8
  %add.ptr2098 = getelementptr inbounds i8, i8* %912, i64 -1
  %913 = load i8, i8* %add.ptr2098, align 1
  %conv2099 = zext i8 %913 to i64
  %call2100 = call i64 @Perl__invlist_search(%struct.sv* %911, i64 %conv2099)
  %arrayidx2101 = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call2100
  %914 = load i32, i32* %arrayidx2101, align 4
  store i32 %914, i32* %before2097, align 4
  br label %while.cond2102

while.cond2102:                                   ; preds = %if.end2128, %if.else2096
  %915 = load i8*, i8** %s.addr, align 8
  %916 = load i8*, i8** %strend.addr, align 8
  %cmp2103 = icmp ult i8* %915, %916
  br i1 %cmp2103, label %while.body2105, label %while.end2130

while.body2105:                                   ; preds = %while.cond2102
  %917 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %918 = load i8*, i8** %s.addr, align 8
  %919 = load i8, i8* %918, align 1
  %conv2107 = zext i8 %919 to i64
  %call2108 = call i64 @Perl__invlist_search(%struct.sv* %917, i64 %conv2107)
  %arrayidx2109 = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call2108
  %920 = load i32, i32* %arrayidx2109, align 4
  store i32 %920, i32* %after2106, align 4
  %921 = load i8, i8* %to_complement, align 1
  %tobool2110 = trunc i8 %921 to i1
  %conv2111 = zext i1 %tobool2110 to i32
  %922 = load i32, i32* %before2097, align 4
  %923 = load i32, i32* %after2106, align 4
  %924 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2112 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %924, i32 0, i32 1
  %925 = load i8*, i8** %strbeg2112, align 8
  %926 = load i8*, i8** %s.addr, align 8
  %927 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2113 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %927, i32 0, i32 2
  %928 = load i8*, i8** %strend2113, align 8
  %929 = load i8, i8* %utf8_target, align 1
  %tobool2114 = trunc i8 %929 to i1
  %call2115 = call zeroext i1 @S_isSB(i32 %922, i32 %923, i8* %925, i8* %926, i8* %928, i1 zeroext %tobool2114)
  %conv2116 = zext i1 %call2115 to i32
  %xor2117 = xor i32 %conv2111, %conv2116
  %tobool2118 = icmp ne i32 %xor2117, 0
  br i1 %tobool2118, label %if.then2119, label %if.end2128

if.then2119:                                      ; preds = %while.body2105
  %930 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2120 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %930, i32 0, i32 12
  %931 = load i8, i8* %intuit2120, align 8
  %tobool2121 = trunc i8 %931 to i1
  br i1 %tobool2121, label %if.then2126, label %lor.lhs.false2123

lor.lhs.false2123:                                ; preds = %if.then2119
  %932 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2124 = call i32 @S_regtry(%struct.regmatch_info* %932, i8** %s.addr)
  %tobool2125 = icmp ne i32 %call2124, 0
  br i1 %tobool2125, label %if.then2126, label %if.end2127

if.then2126:                                      ; preds = %lor.lhs.false2123, %if.then2119
  br label %got_it

if.end2127:                                       ; preds = %lor.lhs.false2123
  %933 = load i32, i32* %after2106, align 4
  store i32 %933, i32* %before2097, align 4
  br label %if.end2128

if.end2128:                                       ; preds = %if.end2127, %while.body2105
  %934 = load i8*, i8** %s.addr, align 8
  %incdec.ptr2129 = getelementptr inbounds i8, i8* %934, i32 1
  store i8* %incdec.ptr2129, i8** %s.addr, align 8
  br label %while.cond2102

while.end2130:                                    ; preds = %while.cond2102
  br label %if.end2131

if.end2131:                                       ; preds = %while.end2130, %while.end2095
  %935 = load i8, i8* %to_complement, align 1
  %tobool2132 = trunc i8 %935 to i1
  %conv2133 = zext i1 %tobool2132 to i32
  %936 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2134 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %936, i32 0, i32 12
  %937 = load i8, i8* %intuit2134, align 8
  %tobool2135 = trunc i8 %937 to i1
  br i1 %tobool2135, label %lor.end2140, label %lor.rhs2137

lor.rhs2137:                                      ; preds = %if.end2131
  %938 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2138 = call i32 @S_regtry(%struct.regmatch_info* %938, i8** %s.addr)
  %tobool2139 = icmp ne i32 %call2138, 0
  br label %lor.end2140

lor.end2140:                                      ; preds = %lor.rhs2137, %if.end2131
  %939 = phi i1 [ true, %if.end2131 ], [ %tobool2139, %lor.rhs2137 ]
  %940 = zext i1 %939 to i64
  %cond2142 = select i1 %939, i32 1, i32 0
  %xor2143 = xor i32 %conv2133, %cond2142
  %tobool2144 = icmp ne i32 %xor2143, 0
  br i1 %tobool2144, label %if.then2145, label %if.end2146

if.then2145:                                      ; preds = %lor.end2140
  br label %got_it

if.end2146:                                       ; preds = %lor.end2140
  br label %sw.epilog

sw.bb2147:                                        ; preds = %do_boundu
  %941 = load i8*, i8** %s.addr, align 8
  %942 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2148 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %942, i32 0, i32 1
  %943 = load i8*, i8** %strbeg2148, align 8
  %cmp2149 = icmp eq i8* %941, %943
  br i1 %cmp2149, label %if.then2151, label %if.end2178

if.then2151:                                      ; preds = %sw.bb2147
  %944 = load i8, i8* %to_complement, align 1
  %tobool2152 = trunc i8 %944 to i1
  %conv2153 = zext i1 %tobool2152 to i32
  %945 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2154 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %945, i32 0, i32 12
  %946 = load i8, i8* %intuit2154, align 8
  %tobool2155 = trunc i8 %946 to i1
  br i1 %tobool2155, label %lor.end2160, label %lor.rhs2157

lor.rhs2157:                                      ; preds = %if.then2151
  %947 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2158 = call i32 @S_regtry(%struct.regmatch_info* %947, i8** %s.addr)
  %tobool2159 = icmp ne i32 %call2158, 0
  br label %lor.end2160

lor.end2160:                                      ; preds = %lor.rhs2157, %if.then2151
  %948 = phi i1 [ true, %if.then2151 ], [ %tobool2159, %lor.rhs2157 ]
  %949 = zext i1 %948 to i64
  %cond2162 = select i1 %948, i32 1, i32 0
  %xor2163 = xor i32 %conv2153, %cond2162
  %tobool2164 = icmp ne i32 %xor2163, 0
  br i1 %tobool2164, label %if.then2165, label %if.end2166

if.then2165:                                      ; preds = %lor.end2160
  br label %got_it

if.end2166:                                       ; preds = %lor.end2160
  %950 = load i8, i8* %utf8_target, align 1
  %tobool2167 = trunc i8 %950 to i1
  br i1 %tobool2167, label %cond.true2169, label %cond.false2173

cond.true2169:                                    ; preds = %if.end2166
  %951 = load i8*, i8** %s.addr, align 8
  %952 = load i8, i8* %951, align 1
  %idxprom2170 = zext i8 %952 to i64
  %arrayidx2171 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2170
  %953 = load i8, i8* %arrayidx2171, align 1
  %conv2172 = zext i8 %953 to i32
  br label %cond.end2174

cond.false2173:                                   ; preds = %if.end2166
  br label %cond.end2174

cond.end2174:                                     ; preds = %cond.false2173, %cond.true2169
  %cond2175 = phi i32 [ %conv2172, %cond.true2169 ], [ 1, %cond.false2173 ]
  %954 = load i8*, i8** %s.addr, align 8
  %idx.ext2176 = sext i32 %cond2175 to i64
  %add.ptr2177 = getelementptr inbounds i8, i8* %954, i64 %idx.ext2176
  store i8* %add.ptr2177, i8** %s.addr, align 8
  br label %if.end2178

if.end2178:                                       ; preds = %cond.end2174, %sw.bb2147
  %955 = load i8, i8* %utf8_target, align 1
  %tobool2179 = trunc i8 %955 to i1
  br i1 %tobool2179, label %if.then2180, label %if.else2236

if.then2180:                                      ; preds = %if.end2178
  store i32 18, i32* %previous, align 4
  %956 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %957 = load i8*, i8** %s.addr, align 8
  %958 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2182 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %958, i32 0, i32 1
  %959 = load i8*, i8** %strbeg2182, align 8
  %call2183 = call i8* @S_reghop3(i8* %957, i64 -1, i8* %959)
  %960 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2184 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %960, i32 0, i32 2
  %961 = load i8*, i8** %strend2184, align 8
  %962 = load i8*, i8** %s.addr, align 8
  %963 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2185 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %963, i32 0, i32 1
  %964 = load i8*, i8** %strbeg2185, align 8
  %call2186 = call i8* @S_reghop3(i8* %962, i64 -1, i8* %964)
  %sub.ptr.lhs.cast2187 = ptrtoint i8* %961 to i64
  %sub.ptr.rhs.cast2188 = ptrtoint i8* %call2186 to i64
  %sub.ptr.sub2189 = sub i64 %sub.ptr.lhs.cast2187, %sub.ptr.rhs.cast2188
  %call2190 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %965 = zext i1 %call2190 to i64
  %cond2192 = select i1 %call2190, i32 0, i32 -8161
  %call2193 = call i64 @Perl_utf8n_to_uvchr(i8* %call2183, i64 %sub.ptr.sub2189, i64* null, i32 %cond2192)
  %call2194 = call i64 @Perl__invlist_search(%struct.sv* %956, i64 %call2193)
  %arrayidx2195 = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call2194
  %966 = load i32, i32* %arrayidx2195, align 4
  store i32 %966, i32* %before2181, align 4
  br label %while.cond2196

while.cond2196:                                   ; preds = %if.end2229, %if.then2180
  %967 = load i8*, i8** %s.addr, align 8
  %968 = load i8*, i8** %strend.addr, align 8
  %cmp2197 = icmp ult i8* %967, %968
  br i1 %cmp2197, label %while.body2199, label %while.end2235

while.body2199:                                   ; preds = %while.cond2196
  %969 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %970 = load i8*, i8** %s.addr, align 8
  %971 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2201 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %971, i32 0, i32 2
  %972 = load i8*, i8** %strend2201, align 8
  %973 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast2202 = ptrtoint i8* %972 to i64
  %sub.ptr.rhs.cast2203 = ptrtoint i8* %973 to i64
  %sub.ptr.sub2204 = sub i64 %sub.ptr.lhs.cast2202, %sub.ptr.rhs.cast2203
  %call2205 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %974 = zext i1 %call2205 to i64
  %cond2207 = select i1 %call2205, i32 0, i32 -8161
  %call2208 = call i64 @Perl_utf8n_to_uvchr(i8* %970, i64 %sub.ptr.sub2204, i64* null, i32 %cond2207)
  %call2209 = call i64 @Perl__invlist_search(%struct.sv* %969, i64 %call2208)
  %arrayidx2210 = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call2209
  %975 = load i32, i32* %arrayidx2210, align 4
  store i32 %975, i32* %after2200, align 4
  %976 = load i8, i8* %to_complement, align 1
  %tobool2211 = trunc i8 %976 to i1
  %conv2212 = zext i1 %tobool2211 to i32
  %977 = load i32, i32* %previous, align 4
  %978 = load i32, i32* %before2181, align 4
  %979 = load i32, i32* %after2200, align 4
  %980 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2213 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %980, i32 0, i32 1
  %981 = load i8*, i8** %strbeg2213, align 8
  %982 = load i8*, i8** %s.addr, align 8
  %983 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2214 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %983, i32 0, i32 2
  %984 = load i8*, i8** %strend2214, align 8
  %985 = load i8, i8* %utf8_target, align 1
  %tobool2215 = trunc i8 %985 to i1
  %call2216 = call zeroext i1 @S_isWB(i32 %977, i32 %978, i32 %979, i8* %981, i8* %982, i8* %984, i1 zeroext %tobool2215)
  %conv2217 = zext i1 %call2216 to i32
  %xor2218 = xor i32 %conv2212, %conv2217
  %tobool2219 = icmp ne i32 %xor2218, 0
  br i1 %tobool2219, label %if.then2220, label %if.end2229

if.then2220:                                      ; preds = %while.body2199
  %986 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2221 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %986, i32 0, i32 12
  %987 = load i8, i8* %intuit2221, align 8
  %tobool2222 = trunc i8 %987 to i1
  br i1 %tobool2222, label %if.then2227, label %lor.lhs.false2224

lor.lhs.false2224:                                ; preds = %if.then2220
  %988 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2225 = call i32 @S_regtry(%struct.regmatch_info* %988, i8** %s.addr)
  %tobool2226 = icmp ne i32 %call2225, 0
  br i1 %tobool2226, label %if.then2227, label %if.end2228

if.then2227:                                      ; preds = %lor.lhs.false2224, %if.then2220
  br label %got_it

if.end2228:                                       ; preds = %lor.lhs.false2224
  %989 = load i32, i32* %before2181, align 4
  store i32 %989, i32* %previous, align 4
  %990 = load i32, i32* %after2200, align 4
  store i32 %990, i32* %before2181, align 4
  br label %if.end2229

if.end2229:                                       ; preds = %if.end2228, %while.body2199
  %991 = load i8*, i8** %s.addr, align 8
  %992 = load i8, i8* %991, align 1
  %idxprom2230 = zext i8 %992 to i64
  %arrayidx2231 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2230
  %993 = load i8, i8* %arrayidx2231, align 1
  %conv2232 = zext i8 %993 to i32
  %994 = load i8*, i8** %s.addr, align 8
  %idx.ext2233 = sext i32 %conv2232 to i64
  %add.ptr2234 = getelementptr inbounds i8, i8* %994, i64 %idx.ext2233
  store i8* %add.ptr2234, i8** %s.addr, align 8
  br label %while.cond2196

while.end2235:                                    ; preds = %while.cond2196
  br label %if.end2272

if.else2236:                                      ; preds = %if.end2178
  store i32 18, i32* %previous2237, align 4
  %995 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %996 = load i8*, i8** %s.addr, align 8
  %add.ptr2239 = getelementptr inbounds i8, i8* %996, i64 -1
  %997 = load i8, i8* %add.ptr2239, align 1
  %conv2240 = zext i8 %997 to i64
  %call2241 = call i64 @Perl__invlist_search(%struct.sv* %995, i64 %conv2240)
  %arrayidx2242 = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call2241
  %998 = load i32, i32* %arrayidx2242, align 4
  store i32 %998, i32* %before2238, align 4
  br label %while.cond2243

while.cond2243:                                   ; preds = %if.end2269, %if.else2236
  %999 = load i8*, i8** %s.addr, align 8
  %1000 = load i8*, i8** %strend.addr, align 8
  %cmp2244 = icmp ult i8* %999, %1000
  br i1 %cmp2244, label %while.body2246, label %while.end2271

while.body2246:                                   ; preds = %while.cond2243
  %1001 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %1002 = load i8*, i8** %s.addr, align 8
  %1003 = load i8, i8* %1002, align 1
  %conv2248 = zext i8 %1003 to i64
  %call2249 = call i64 @Perl__invlist_search(%struct.sv* %1001, i64 %conv2248)
  %arrayidx2250 = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call2249
  %1004 = load i32, i32* %arrayidx2250, align 4
  store i32 %1004, i32* %after2247, align 4
  %1005 = load i8, i8* %to_complement, align 1
  %tobool2251 = trunc i8 %1005 to i1
  %conv2252 = zext i1 %tobool2251 to i32
  %1006 = load i32, i32* %previous2237, align 4
  %1007 = load i32, i32* %before2238, align 4
  %1008 = load i32, i32* %after2247, align 4
  %1009 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2253 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1009, i32 0, i32 1
  %1010 = load i8*, i8** %strbeg2253, align 8
  %1011 = load i8*, i8** %s.addr, align 8
  %1012 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2254 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1012, i32 0, i32 2
  %1013 = load i8*, i8** %strend2254, align 8
  %1014 = load i8, i8* %utf8_target, align 1
  %tobool2255 = trunc i8 %1014 to i1
  %call2256 = call zeroext i1 @S_isWB(i32 %1006, i32 %1007, i32 %1008, i8* %1010, i8* %1011, i8* %1013, i1 zeroext %tobool2255)
  %conv2257 = zext i1 %call2256 to i32
  %xor2258 = xor i32 %conv2252, %conv2257
  %tobool2259 = icmp ne i32 %xor2258, 0
  br i1 %tobool2259, label %if.then2260, label %if.end2269

if.then2260:                                      ; preds = %while.body2246
  %1015 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2261 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1015, i32 0, i32 12
  %1016 = load i8, i8* %intuit2261, align 8
  %tobool2262 = trunc i8 %1016 to i1
  br i1 %tobool2262, label %if.then2267, label %lor.lhs.false2264

lor.lhs.false2264:                                ; preds = %if.then2260
  %1017 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2265 = call i32 @S_regtry(%struct.regmatch_info* %1017, i8** %s.addr)
  %tobool2266 = icmp ne i32 %call2265, 0
  br i1 %tobool2266, label %if.then2267, label %if.end2268

if.then2267:                                      ; preds = %lor.lhs.false2264, %if.then2260
  br label %got_it

if.end2268:                                       ; preds = %lor.lhs.false2264
  %1018 = load i32, i32* %before2238, align 4
  store i32 %1018, i32* %previous2237, align 4
  %1019 = load i32, i32* %after2247, align 4
  store i32 %1019, i32* %before2238, align 4
  br label %if.end2269

if.end2269:                                       ; preds = %if.end2268, %while.body2246
  %1020 = load i8*, i8** %s.addr, align 8
  %incdec.ptr2270 = getelementptr inbounds i8, i8* %1020, i32 1
  store i8* %incdec.ptr2270, i8** %s.addr, align 8
  br label %while.cond2243

while.end2271:                                    ; preds = %while.cond2243
  br label %if.end2272

if.end2272:                                       ; preds = %while.end2271, %while.end2235
  %1021 = load i8, i8* %to_complement, align 1
  %tobool2273 = trunc i8 %1021 to i1
  %conv2274 = zext i1 %tobool2273 to i32
  %1022 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2275 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1022, i32 0, i32 12
  %1023 = load i8, i8* %intuit2275, align 8
  %tobool2276 = trunc i8 %1023 to i1
  br i1 %tobool2276, label %lor.end2281, label %lor.rhs2278

lor.rhs2278:                                      ; preds = %if.end2272
  %1024 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2279 = call i32 @S_regtry(%struct.regmatch_info* %1024, i8** %s.addr)
  %tobool2280 = icmp ne i32 %call2279, 0
  br label %lor.end2281

lor.end2281:                                      ; preds = %lor.rhs2278, %if.end2272
  %1025 = phi i1 [ true, %if.end2272 ], [ %tobool2280, %lor.rhs2278 ]
  %1026 = zext i1 %1025 to i64
  %cond2283 = select i1 %1025, i32 1, i32 0
  %xor2284 = xor i32 %conv2274, %cond2283
  %tobool2285 = icmp ne i32 %xor2284, 0
  br i1 %tobool2285, label %if.then2286, label %if.end2287

if.then2286:                                      ; preds = %lor.end2281
  br label %got_it

if.end2287:                                       ; preds = %lor.end2281
  br label %sw.epilog

sw.epilog:                                        ; preds = %do_boundu, %if.end2287, %if.end2146, %if.end2006, %if.end1878
  br label %sw.epilog4014

sw.bb2288:                                        ; preds = %entry
  %1027 = load i8, i8* %utf8_target, align 1
  %tobool2289 = trunc i8 %1027 to i1
  br i1 %tobool2289, label %if.then2290, label %if.else2433

if.then2290:                                      ; preds = %sw.bb2288
  br label %do.body2291

do.body2291:                                      ; preds = %if.then2290
  br label %while.cond2292

while.cond2292:                                   ; preds = %if.end2425, %do.body2291
  %1028 = load i8*, i8** %s.addr, align 8
  %1029 = load i8*, i8** %strend.addr, align 8
  %cmp2293 = icmp ult i8* %1028, %1029
  br i1 %cmp2293, label %while.body2295, label %while.end2431

while.body2295:                                   ; preds = %while.cond2292
  %1030 = load i8*, i8** %strend.addr, align 8
  %1031 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast2296 = ptrtoint i8* %1030 to i64
  %sub.ptr.rhs.cast2297 = ptrtoint i8* %1031 to i64
  %sub.ptr.sub2298 = sub i64 %sub.ptr.lhs.cast2296, %sub.ptr.rhs.cast2297
  %cmp2299 = icmp sgt i64 %sub.ptr.sub2298, 2
  br i1 %cmp2299, label %cond.true2301, label %cond.false2354

cond.true2301:                                    ; preds = %while.body2295
  %1032 = load i8*, i8** %s.addr, align 8
  %arrayidx2302 = getelementptr inbounds i8, i8* %1032, i64 0
  %1033 = load i8, i8* %arrayidx2302, align 1
  %conv2303 = zext i8 %1033 to i32
  %cmp2304 = icmp sle i32 10, %conv2303
  br i1 %cmp2304, label %land.lhs.true2306, label %cond.false2312

land.lhs.true2306:                                ; preds = %cond.true2301
  %1034 = load i8*, i8** %s.addr, align 8
  %arrayidx2307 = getelementptr inbounds i8, i8* %1034, i64 0
  %1035 = load i8, i8* %arrayidx2307, align 1
  %conv2308 = zext i8 %1035 to i32
  %cmp2309 = icmp sle i32 %conv2308, 12
  br i1 %cmp2309, label %cond.true2311, label %cond.false2312

cond.true2311:                                    ; preds = %land.lhs.true2306
  br i1 true, label %if.then2412, label %if.else2424

cond.false2312:                                   ; preds = %land.lhs.true2306, %cond.true2301
  %1036 = load i8*, i8** %s.addr, align 8
  %arrayidx2313 = getelementptr inbounds i8, i8* %1036, i64 0
  %1037 = load i8, i8* %arrayidx2313, align 1
  %conv2314 = zext i8 %1037 to i32
  %cmp2315 = icmp eq i32 13, %conv2314
  br i1 %cmp2315, label %cond.true2317, label %cond.false2324

cond.true2317:                                    ; preds = %cond.false2312
  %1038 = load i8*, i8** %s.addr, align 8
  %arrayidx2318 = getelementptr inbounds i8, i8* %1038, i64 1
  %1039 = load i8, i8* %arrayidx2318, align 1
  %conv2319 = zext i8 %1039 to i32
  %cmp2320 = icmp eq i32 10, %conv2319
  br i1 %cmp2320, label %cond.true2322, label %cond.false2323

cond.true2322:                                    ; preds = %cond.true2317
  br i1 true, label %if.then2412, label %if.else2424

cond.false2323:                                   ; preds = %cond.true2317
  br i1 true, label %if.then2412, label %if.else2424

cond.false2324:                                   ; preds = %cond.false2312
  %1040 = load i8*, i8** %s.addr, align 8
  %arrayidx2325 = getelementptr inbounds i8, i8* %1040, i64 0
  %1041 = load i8, i8* %arrayidx2325, align 1
  %conv2326 = zext i8 %1041 to i32
  %cmp2327 = icmp eq i32 194, %conv2326
  br i1 %cmp2327, label %cond.true2329, label %cond.false2336

cond.true2329:                                    ; preds = %cond.false2324
  %1042 = load i8*, i8** %s.addr, align 8
  %arrayidx2330 = getelementptr inbounds i8, i8* %1042, i64 1
  %1043 = load i8, i8* %arrayidx2330, align 1
  %conv2331 = zext i8 %1043 to i32
  %cmp2332 = icmp eq i32 133, %conv2331
  br i1 %cmp2332, label %cond.true2334, label %cond.false2335

cond.true2334:                                    ; preds = %cond.true2329
  br i1 true, label %if.then2412, label %if.else2424

cond.false2335:                                   ; preds = %cond.true2329
  br i1 false, label %if.then2412, label %if.else2424

cond.false2336:                                   ; preds = %cond.false2324
  %1044 = load i8*, i8** %s.addr, align 8
  %arrayidx2337 = getelementptr inbounds i8, i8* %1044, i64 0
  %1045 = load i8, i8* %arrayidx2337, align 1
  %conv2338 = zext i8 %1045 to i32
  %cmp2339 = icmp eq i32 226, %conv2338
  br i1 %cmp2339, label %land.lhs.true2341, label %cond.false2353

land.lhs.true2341:                                ; preds = %cond.false2336
  %1046 = load i8*, i8** %s.addr, align 8
  %arrayidx2342 = getelementptr inbounds i8, i8* %1046, i64 1
  %1047 = load i8, i8* %arrayidx2342, align 1
  %conv2343 = zext i8 %1047 to i32
  %cmp2344 = icmp eq i32 128, %conv2343
  br i1 %cmp2344, label %land.lhs.true2346, label %cond.false2353

land.lhs.true2346:                                ; preds = %land.lhs.true2341
  %1048 = load i8*, i8** %s.addr, align 8
  %arrayidx2347 = getelementptr inbounds i8, i8* %1048, i64 2
  %1049 = load i8, i8* %arrayidx2347, align 1
  %conv2348 = zext i8 %1049 to i32
  %and2349 = and i32 %conv2348, 254
  %cmp2350 = icmp eq i32 %and2349, 168
  br i1 %cmp2350, label %cond.true2352, label %cond.false2353

cond.true2352:                                    ; preds = %land.lhs.true2346
  br i1 true, label %if.then2412, label %if.else2424

cond.false2353:                                   ; preds = %land.lhs.true2346, %land.lhs.true2341, %cond.false2336
  br i1 false, label %if.then2412, label %if.else2424

cond.false2354:                                   ; preds = %while.body2295
  %1050 = load i8*, i8** %strend.addr, align 8
  %1051 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast2355 = ptrtoint i8* %1050 to i64
  %sub.ptr.rhs.cast2356 = ptrtoint i8* %1051 to i64
  %sub.ptr.sub2357 = sub i64 %sub.ptr.lhs.cast2355, %sub.ptr.rhs.cast2356
  %cmp2358 = icmp sgt i64 %sub.ptr.sub2357, 1
  br i1 %cmp2358, label %cond.true2360, label %cond.false2395

cond.true2360:                                    ; preds = %cond.false2354
  %1052 = load i8*, i8** %s.addr, align 8
  %arrayidx2361 = getelementptr inbounds i8, i8* %1052, i64 0
  %1053 = load i8, i8* %arrayidx2361, align 1
  %conv2362 = zext i8 %1053 to i32
  %cmp2363 = icmp sle i32 10, %conv2362
  br i1 %cmp2363, label %land.lhs.true2365, label %cond.false2371

land.lhs.true2365:                                ; preds = %cond.true2360
  %1054 = load i8*, i8** %s.addr, align 8
  %arrayidx2366 = getelementptr inbounds i8, i8* %1054, i64 0
  %1055 = load i8, i8* %arrayidx2366, align 1
  %conv2367 = zext i8 %1055 to i32
  %cmp2368 = icmp sle i32 %conv2367, 12
  br i1 %cmp2368, label %cond.true2370, label %cond.false2371

cond.true2370:                                    ; preds = %land.lhs.true2365
  br i1 true, label %if.then2412, label %if.else2424

cond.false2371:                                   ; preds = %land.lhs.true2365, %cond.true2360
  %1056 = load i8*, i8** %s.addr, align 8
  %arrayidx2372 = getelementptr inbounds i8, i8* %1056, i64 0
  %1057 = load i8, i8* %arrayidx2372, align 1
  %conv2373 = zext i8 %1057 to i32
  %cmp2374 = icmp eq i32 13, %conv2373
  br i1 %cmp2374, label %cond.true2376, label %cond.false2383

cond.true2376:                                    ; preds = %cond.false2371
  %1058 = load i8*, i8** %s.addr, align 8
  %arrayidx2377 = getelementptr inbounds i8, i8* %1058, i64 1
  %1059 = load i8, i8* %arrayidx2377, align 1
  %conv2378 = zext i8 %1059 to i32
  %cmp2379 = icmp eq i32 10, %conv2378
  br i1 %cmp2379, label %cond.true2381, label %cond.false2382

cond.true2381:                                    ; preds = %cond.true2376
  br i1 true, label %if.then2412, label %if.else2424

cond.false2382:                                   ; preds = %cond.true2376
  br i1 true, label %if.then2412, label %if.else2424

cond.false2383:                                   ; preds = %cond.false2371
  %1060 = load i8*, i8** %s.addr, align 8
  %arrayidx2384 = getelementptr inbounds i8, i8* %1060, i64 0
  %1061 = load i8, i8* %arrayidx2384, align 1
  %conv2385 = zext i8 %1061 to i32
  %cmp2386 = icmp eq i32 194, %conv2385
  br i1 %cmp2386, label %land.lhs.true2388, label %cond.false2394

land.lhs.true2388:                                ; preds = %cond.false2383
  %1062 = load i8*, i8** %s.addr, align 8
  %arrayidx2389 = getelementptr inbounds i8, i8* %1062, i64 1
  %1063 = load i8, i8* %arrayidx2389, align 1
  %conv2390 = zext i8 %1063 to i32
  %cmp2391 = icmp eq i32 133, %conv2390
  br i1 %cmp2391, label %cond.true2393, label %cond.false2394

cond.true2393:                                    ; preds = %land.lhs.true2388
  br i1 true, label %if.then2412, label %if.else2424

cond.false2394:                                   ; preds = %land.lhs.true2388, %cond.false2383
  br i1 false, label %if.then2412, label %if.else2424

cond.false2395:                                   ; preds = %cond.false2354
  %1064 = load i8*, i8** %strend.addr, align 8
  %1065 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast2396 = ptrtoint i8* %1064 to i64
  %sub.ptr.rhs.cast2397 = ptrtoint i8* %1065 to i64
  %sub.ptr.sub2398 = sub i64 %sub.ptr.lhs.cast2396, %sub.ptr.rhs.cast2397
  %cmp2399 = icmp sgt i64 %sub.ptr.sub2398, 0
  br i1 %cmp2399, label %cond.true2401, label %cond.false2411

cond.true2401:                                    ; preds = %cond.false2395
  %1066 = load i8*, i8** %s.addr, align 8
  %arrayidx2402 = getelementptr inbounds i8, i8* %1066, i64 0
  %1067 = load i8, i8* %arrayidx2402, align 1
  %conv2403 = zext i8 %1067 to i32
  %cmp2404 = icmp sle i32 10, %conv2403
  br i1 %cmp2404, label %land.lhs.true2406, label %if.else2424

land.lhs.true2406:                                ; preds = %cond.true2401
  %1068 = load i8*, i8** %s.addr, align 8
  %arrayidx2407 = getelementptr inbounds i8, i8* %1068, i64 0
  %1069 = load i8, i8* %arrayidx2407, align 1
  %conv2408 = zext i8 %1069 to i32
  %cmp2409 = icmp sle i32 %conv2408, 13
  br i1 %cmp2409, label %if.then2412, label %if.else2424

cond.false2411:                                   ; preds = %cond.false2395
  br i1 false, label %if.then2412, label %if.else2424

if.then2412:                                      ; preds = %cond.false2411, %land.lhs.true2406, %cond.false2394, %cond.true2393, %cond.false2382, %cond.true2381, %cond.true2370, %cond.false2353, %cond.true2352, %cond.false2335, %cond.true2334, %cond.false2323, %cond.true2322, %cond.true2311
  %1070 = load i32, i32* %tmp, align 4
  %tobool2413 = icmp ne i32 %1070, 0
  br i1 %tobool2413, label %land.lhs.true2414, label %if.else2422

land.lhs.true2414:                                ; preds = %if.then2412
  %1071 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2415 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1071, i32 0, i32 12
  %1072 = load i8, i8* %intuit2415, align 8
  %tobool2416 = trunc i8 %1072 to i1
  br i1 %tobool2416, label %if.then2421, label %lor.lhs.false2418

lor.lhs.false2418:                                ; preds = %land.lhs.true2414
  %1073 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2419 = call i32 @S_regtry(%struct.regmatch_info* %1073, i8** %s.addr)
  %tobool2420 = icmp ne i32 %call2419, 0
  br i1 %tobool2420, label %if.then2421, label %if.else2422

if.then2421:                                      ; preds = %lor.lhs.false2418, %land.lhs.true2414
  br label %got_it

if.else2422:                                      ; preds = %lor.lhs.false2418, %if.then2412
  %1074 = load i32, i32* %doevery, align 4
  store i32 %1074, i32* %tmp, align 4
  br label %if.end2423

if.end2423:                                       ; preds = %if.else2422
  br label %if.end2425

if.else2424:                                      ; preds = %cond.false2411, %land.lhs.true2406, %cond.true2401, %cond.false2394, %cond.true2393, %cond.false2382, %cond.true2381, %cond.true2370, %cond.false2353, %cond.true2352, %cond.false2335, %cond.true2334, %cond.false2323, %cond.true2322, %cond.true2311
  store i32 1, i32* %tmp, align 4
  br label %if.end2425

if.end2425:                                       ; preds = %if.else2424, %if.end2423
  %1075 = load i8*, i8** %s.addr, align 8
  %1076 = load i8, i8* %1075, align 1
  %idxprom2426 = zext i8 %1076 to i64
  %arrayidx2427 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2426
  %1077 = load i8, i8* %arrayidx2427, align 1
  %conv2428 = zext i8 %1077 to i32
  %1078 = load i8*, i8** %s.addr, align 8
  %idx.ext2429 = sext i32 %conv2428 to i64
  %add.ptr2430 = getelementptr inbounds i8, i8* %1078, i64 %idx.ext2429
  store i8* %add.ptr2430, i8** %s.addr, align 8
  br label %while.cond2292

while.end2431:                                    ; preds = %while.cond2292
  br label %do.end2432

do.end2432:                                       ; preds = %while.end2431
  br label %if.end2512

if.else2433:                                      ; preds = %sw.bb2288
  br label %do.body2434

do.body2434:                                      ; preds = %if.else2433
  br label %while.cond2435

while.cond2435:                                   ; preds = %if.end2508, %do.body2434
  %1079 = load i8*, i8** %s.addr, align 8
  %1080 = load i8*, i8** %strend.addr, align 8
  %cmp2436 = icmp ult i8* %1079, %1080
  br i1 %cmp2436, label %while.body2438, label %while.end2510

while.body2438:                                   ; preds = %while.cond2435
  %1081 = load i8*, i8** %strend.addr, align 8
  %1082 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast2439 = ptrtoint i8* %1081 to i64
  %sub.ptr.rhs.cast2440 = ptrtoint i8* %1082 to i64
  %sub.ptr.sub2441 = sub i64 %sub.ptr.lhs.cast2439, %sub.ptr.rhs.cast2440
  %cmp2442 = icmp sgt i64 %sub.ptr.sub2441, 1
  br i1 %cmp2442, label %cond.true2444, label %cond.false2473

cond.true2444:                                    ; preds = %while.body2438
  %1083 = load i8*, i8** %s.addr, align 8
  %arrayidx2445 = getelementptr inbounds i8, i8* %1083, i64 0
  %1084 = load i8, i8* %arrayidx2445, align 1
  %conv2446 = zext i8 %1084 to i32
  %cmp2447 = icmp sle i32 10, %conv2446
  br i1 %cmp2447, label %land.lhs.true2449, label %lor.lhs.false2454

land.lhs.true2449:                                ; preds = %cond.true2444
  %1085 = load i8*, i8** %s.addr, align 8
  %arrayidx2450 = getelementptr inbounds i8, i8* %1085, i64 0
  %1086 = load i8, i8* %arrayidx2450, align 1
  %conv2451 = zext i8 %1086 to i32
  %cmp2452 = icmp sle i32 %conv2451, 12
  br i1 %cmp2452, label %cond.true2459, label %lor.lhs.false2454

lor.lhs.false2454:                                ; preds = %land.lhs.true2449, %cond.true2444
  %1087 = load i8*, i8** %s.addr, align 8
  %arrayidx2455 = getelementptr inbounds i8, i8* %1087, i64 0
  %1088 = load i8, i8* %arrayidx2455, align 1
  %conv2456 = zext i8 %1088 to i32
  %cmp2457 = icmp eq i32 133, %conv2456
  br i1 %cmp2457, label %cond.true2459, label %cond.false2460

cond.true2459:                                    ; preds = %lor.lhs.false2454, %land.lhs.true2449
  br i1 true, label %if.then2495, label %if.else2507

cond.false2460:                                   ; preds = %lor.lhs.false2454
  %1089 = load i8*, i8** %s.addr, align 8
  %arrayidx2461 = getelementptr inbounds i8, i8* %1089, i64 0
  %1090 = load i8, i8* %arrayidx2461, align 1
  %conv2462 = zext i8 %1090 to i32
  %cmp2463 = icmp eq i32 13, %conv2462
  br i1 %cmp2463, label %cond.true2465, label %cond.false2472

cond.true2465:                                    ; preds = %cond.false2460
  %1091 = load i8*, i8** %s.addr, align 8
  %arrayidx2466 = getelementptr inbounds i8, i8* %1091, i64 1
  %1092 = load i8, i8* %arrayidx2466, align 1
  %conv2467 = zext i8 %1092 to i32
  %cmp2468 = icmp eq i32 10, %conv2467
  br i1 %cmp2468, label %cond.true2470, label %cond.false2471

cond.true2470:                                    ; preds = %cond.true2465
  br i1 true, label %if.then2495, label %if.else2507

cond.false2471:                                   ; preds = %cond.true2465
  br i1 true, label %if.then2495, label %if.else2507

cond.false2472:                                   ; preds = %cond.false2460
  br i1 false, label %if.then2495, label %if.else2507

cond.false2473:                                   ; preds = %while.body2438
  %1093 = load i8*, i8** %strend.addr, align 8
  %1094 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast2474 = ptrtoint i8* %1093 to i64
  %sub.ptr.rhs.cast2475 = ptrtoint i8* %1094 to i64
  %sub.ptr.sub2476 = sub i64 %sub.ptr.lhs.cast2474, %sub.ptr.rhs.cast2475
  %cmp2477 = icmp sgt i64 %sub.ptr.sub2476, 0
  br i1 %cmp2477, label %cond.true2479, label %cond.false2494

cond.true2479:                                    ; preds = %cond.false2473
  %1095 = load i8*, i8** %s.addr, align 8
  %arrayidx2480 = getelementptr inbounds i8, i8* %1095, i64 0
  %1096 = load i8, i8* %arrayidx2480, align 1
  %conv2481 = zext i8 %1096 to i32
  %cmp2482 = icmp sle i32 10, %conv2481
  br i1 %cmp2482, label %land.lhs.true2484, label %lor.lhs.false2489

land.lhs.true2484:                                ; preds = %cond.true2479
  %1097 = load i8*, i8** %s.addr, align 8
  %arrayidx2485 = getelementptr inbounds i8, i8* %1097, i64 0
  %1098 = load i8, i8* %arrayidx2485, align 1
  %conv2486 = zext i8 %1098 to i32
  %cmp2487 = icmp sle i32 %conv2486, 13
  br i1 %cmp2487, label %if.then2495, label %lor.lhs.false2489

lor.lhs.false2489:                                ; preds = %land.lhs.true2484, %cond.true2479
  %1099 = load i8*, i8** %s.addr, align 8
  %arrayidx2490 = getelementptr inbounds i8, i8* %1099, i64 0
  %1100 = load i8, i8* %arrayidx2490, align 1
  %conv2491 = zext i8 %1100 to i32
  %cmp2492 = icmp eq i32 133, %conv2491
  br i1 %cmp2492, label %if.then2495, label %if.else2507

cond.false2494:                                   ; preds = %cond.false2473
  br i1 false, label %if.then2495, label %if.else2507

if.then2495:                                      ; preds = %cond.false2494, %lor.lhs.false2489, %land.lhs.true2484, %cond.false2472, %cond.false2471, %cond.true2470, %cond.true2459
  %1101 = load i32, i32* %tmp, align 4
  %tobool2496 = icmp ne i32 %1101, 0
  br i1 %tobool2496, label %land.lhs.true2497, label %if.else2505

land.lhs.true2497:                                ; preds = %if.then2495
  %1102 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2498 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1102, i32 0, i32 12
  %1103 = load i8, i8* %intuit2498, align 8
  %tobool2499 = trunc i8 %1103 to i1
  br i1 %tobool2499, label %if.then2504, label %lor.lhs.false2501

lor.lhs.false2501:                                ; preds = %land.lhs.true2497
  %1104 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2502 = call i32 @S_regtry(%struct.regmatch_info* %1104, i8** %s.addr)
  %tobool2503 = icmp ne i32 %call2502, 0
  br i1 %tobool2503, label %if.then2504, label %if.else2505

if.then2504:                                      ; preds = %lor.lhs.false2501, %land.lhs.true2497
  br label %got_it

if.else2505:                                      ; preds = %lor.lhs.false2501, %if.then2495
  %1105 = load i32, i32* %doevery, align 4
  store i32 %1105, i32* %tmp, align 4
  br label %if.end2506

if.end2506:                                       ; preds = %if.else2505
  br label %if.end2508

if.else2507:                                      ; preds = %cond.false2494, %lor.lhs.false2489, %cond.false2472, %cond.false2471, %cond.true2470, %cond.true2459
  store i32 1, i32* %tmp, align 4
  br label %if.end2508

if.end2508:                                       ; preds = %if.else2507, %if.end2506
  %1106 = load i8*, i8** %s.addr, align 8
  %incdec.ptr2509 = getelementptr inbounds i8, i8* %1106, i32 1
  store i8* %incdec.ptr2509, i8** %s.addr, align 8
  br label %while.cond2435

while.end2510:                                    ; preds = %while.cond2435
  br label %do.end2511

do.end2511:                                       ; preds = %while.end2510
  br label %if.end2512

if.end2512:                                       ; preds = %do.end2511, %do.end2432
  br label %sw.epilog4014

sw.bb2513:                                        ; preds = %entry
  store i8 1, i8* %to_complement, align 1
  br label %sw.bb2514

sw.bb2514:                                        ; preds = %entry, %sw.bb2513
  %1107 = load i8, i8* %utf8_target, align 1
  %tobool2515 = trunc i8 %1107 to i1
  br i1 %tobool2515, label %if.then2516, label %if.else2551

if.then2516:                                      ; preds = %sw.bb2514
  br label %do.body2517

do.body2517:                                      ; preds = %if.then2516
  br label %while.cond2518

while.cond2518:                                   ; preds = %if.end2543, %do.body2517
  %1108 = load i8*, i8** %s.addr, align 8
  %1109 = load i8*, i8** %strend.addr, align 8
  %cmp2519 = icmp ult i8* %1108, %1109
  br i1 %cmp2519, label %while.body2521, label %while.end2549

while.body2521:                                   ; preds = %while.cond2518
  %1110 = load i8, i8* %to_complement, align 1
  %tobool2522 = trunc i8 %1110 to i1
  %conv2523 = zext i1 %tobool2522 to i32
  %1111 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags2524 = getelementptr inbounds %struct.regnode, %struct.regnode* %1111, i32 0, i32 0
  %1112 = load i8, i8* %flags2524, align 2
  %1113 = load i8*, i8** %s.addr, align 8
  %call2525 = call zeroext i1 @S_isFOO_utf8_lc(i8 zeroext %1112, i8* %1113)
  %1114 = zext i1 %call2525 to i64
  %cond2527 = select i1 %call2525, i32 1, i32 0
  %xor2528 = xor i32 %conv2523, %cond2527
  %tobool2529 = icmp ne i32 %xor2528, 0
  br i1 %tobool2529, label %if.then2530, label %if.else2542

if.then2530:                                      ; preds = %while.body2521
  %1115 = load i32, i32* %tmp, align 4
  %tobool2531 = icmp ne i32 %1115, 0
  br i1 %tobool2531, label %land.lhs.true2532, label %if.else2540

land.lhs.true2532:                                ; preds = %if.then2530
  %1116 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2533 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1116, i32 0, i32 12
  %1117 = load i8, i8* %intuit2533, align 8
  %tobool2534 = trunc i8 %1117 to i1
  br i1 %tobool2534, label %if.then2539, label %lor.lhs.false2536

lor.lhs.false2536:                                ; preds = %land.lhs.true2532
  %1118 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2537 = call i32 @S_regtry(%struct.regmatch_info* %1118, i8** %s.addr)
  %tobool2538 = icmp ne i32 %call2537, 0
  br i1 %tobool2538, label %if.then2539, label %if.else2540

if.then2539:                                      ; preds = %lor.lhs.false2536, %land.lhs.true2532
  br label %got_it

if.else2540:                                      ; preds = %lor.lhs.false2536, %if.then2530
  %1119 = load i32, i32* %doevery, align 4
  store i32 %1119, i32* %tmp, align 4
  br label %if.end2541

if.end2541:                                       ; preds = %if.else2540
  br label %if.end2543

if.else2542:                                      ; preds = %while.body2521
  store i32 1, i32* %tmp, align 4
  br label %if.end2543

if.end2543:                                       ; preds = %if.else2542, %if.end2541
  %1120 = load i8*, i8** %s.addr, align 8
  %1121 = load i8, i8* %1120, align 1
  %idxprom2544 = zext i8 %1121 to i64
  %arrayidx2545 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2544
  %1122 = load i8, i8* %arrayidx2545, align 1
  %conv2546 = zext i8 %1122 to i32
  %1123 = load i8*, i8** %s.addr, align 8
  %idx.ext2547 = sext i32 %conv2546 to i64
  %add.ptr2548 = getelementptr inbounds i8, i8* %1123, i64 %idx.ext2547
  store i8* %add.ptr2548, i8** %s.addr, align 8
  br label %while.cond2518

while.end2549:                                    ; preds = %while.cond2518
  br label %do.end2550

do.end2550:                                       ; preds = %while.end2549
  br label %if.end2582

if.else2551:                                      ; preds = %sw.bb2514
  br label %do.body2552

do.body2552:                                      ; preds = %if.else2551
  br label %while.cond2553

while.cond2553:                                   ; preds = %if.end2578, %do.body2552
  %1124 = load i8*, i8** %s.addr, align 8
  %1125 = load i8*, i8** %strend.addr, align 8
  %cmp2554 = icmp ult i8* %1124, %1125
  br i1 %cmp2554, label %while.body2556, label %while.end2580

while.body2556:                                   ; preds = %while.cond2553
  %1126 = load i8, i8* %to_complement, align 1
  %tobool2557 = trunc i8 %1126 to i1
  %conv2558 = zext i1 %tobool2557 to i32
  %1127 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags2559 = getelementptr inbounds %struct.regnode, %struct.regnode* %1127, i32 0, i32 0
  %1128 = load i8, i8* %flags2559, align 2
  %1129 = load i8*, i8** %s.addr, align 8
  %1130 = load i8, i8* %1129, align 1
  %call2560 = call zeroext i1 @S_isFOO_lc(i8 zeroext %1128, i8 zeroext %1130)
  %1131 = zext i1 %call2560 to i64
  %cond2562 = select i1 %call2560, i32 1, i32 0
  %xor2563 = xor i32 %conv2558, %cond2562
  %tobool2564 = icmp ne i32 %xor2563, 0
  br i1 %tobool2564, label %if.then2565, label %if.else2577

if.then2565:                                      ; preds = %while.body2556
  %1132 = load i32, i32* %tmp, align 4
  %tobool2566 = icmp ne i32 %1132, 0
  br i1 %tobool2566, label %land.lhs.true2567, label %if.else2575

land.lhs.true2567:                                ; preds = %if.then2565
  %1133 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2568 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1133, i32 0, i32 12
  %1134 = load i8, i8* %intuit2568, align 8
  %tobool2569 = trunc i8 %1134 to i1
  br i1 %tobool2569, label %if.then2574, label %lor.lhs.false2571

lor.lhs.false2571:                                ; preds = %land.lhs.true2567
  %1135 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2572 = call i32 @S_regtry(%struct.regmatch_info* %1135, i8** %s.addr)
  %tobool2573 = icmp ne i32 %call2572, 0
  br i1 %tobool2573, label %if.then2574, label %if.else2575

if.then2574:                                      ; preds = %lor.lhs.false2571, %land.lhs.true2567
  br label %got_it

if.else2575:                                      ; preds = %lor.lhs.false2571, %if.then2565
  %1136 = load i32, i32* %doevery, align 4
  store i32 %1136, i32* %tmp, align 4
  br label %if.end2576

if.end2576:                                       ; preds = %if.else2575
  br label %if.end2578

if.else2577:                                      ; preds = %while.body2556
  store i32 1, i32* %tmp, align 4
  br label %if.end2578

if.end2578:                                       ; preds = %if.else2577, %if.end2576
  %1137 = load i8*, i8** %s.addr, align 8
  %incdec.ptr2579 = getelementptr inbounds i8, i8* %1137, i32 1
  store i8* %incdec.ptr2579, i8** %s.addr, align 8
  br label %while.cond2553

while.end2580:                                    ; preds = %while.cond2553
  br label %do.end2581

do.end2581:                                       ; preds = %while.end2580
  br label %if.end2582

if.end2582:                                       ; preds = %do.end2581, %do.end2550
  br label %sw.epilog4014

sw.bb2583:                                        ; preds = %entry
  store i8 1, i8* %to_complement, align 1
  br label %sw.bb2584

sw.bb2584:                                        ; preds = %entry, %sw.bb2583
  %1138 = load i8, i8* %utf8_target, align 1
  %tobool2585 = trunc i8 %1138 to i1
  br i1 %tobool2585, label %if.then2586, label %if.end2587

if.then2586:                                      ; preds = %sw.bb2584
  br label %posix_utf8

if.end2587:                                       ; preds = %sw.bb2584
  br label %posixa

sw.bb2588:                                        ; preds = %entry
  %1139 = load i8, i8* %utf8_target, align 1
  %tobool2589 = trunc i8 %1139 to i1
  br i1 %tobool2589, label %if.then2590, label %if.end2634

if.then2590:                                      ; preds = %sw.bb2588
  br label %do.body2591

do.body2591:                                      ; preds = %if.then2590
  br label %while.cond2592

while.cond2592:                                   ; preds = %if.end2626, %do.body2591
  %1140 = load i8*, i8** %s.addr, align 8
  %1141 = load i8*, i8** %strend.addr, align 8
  %cmp2593 = icmp ult i8* %1140, %1141
  br i1 %cmp2593, label %while.body2595, label %while.end2632

while.body2595:                                   ; preds = %while.cond2592
  %1142 = load i8*, i8** %s.addr, align 8
  %1143 = load i8, i8* %1142, align 1
  %conv2596 = sext i8 %1143 to i64
  %cmp2597 = icmp ult i64 %conv2596, 128
  br i1 %cmp2597, label %lor.lhs.false2599, label %if.then2613

lor.lhs.false2599:                                ; preds = %while.body2595
  %1144 = load i8*, i8** %s.addr, align 8
  %1145 = load i8, i8* %1144, align 1
  %idxprom2600 = zext i8 %1145 to i64
  %arrayidx2601 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom2600
  %1146 = load i32, i32* %arrayidx2601, align 4
  %1147 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags2602 = getelementptr inbounds %struct.regnode, %struct.regnode* %1147, i32 0, i32 0
  %1148 = load i8, i8* %flags2602, align 2
  %conv2603 = zext i8 %1148 to i32
  %shl2604 = shl i32 1, %conv2603
  %or2605 = or i32 %shl2604, 16384
  %and2606 = and i32 %1146, %or2605
  %1149 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags2607 = getelementptr inbounds %struct.regnode, %struct.regnode* %1149, i32 0, i32 0
  %1150 = load i8, i8* %flags2607, align 2
  %conv2608 = zext i8 %1150 to i32
  %shl2609 = shl i32 1, %conv2608
  %or2610 = or i32 %shl2609, 16384
  %cmp2611 = icmp eq i32 %and2606, %or2610
  br i1 %cmp2611, label %if.else2625, label %if.then2613

if.then2613:                                      ; preds = %lor.lhs.false2599, %while.body2595
  %1151 = load i32, i32* %tmp, align 4
  %tobool2614 = icmp ne i32 %1151, 0
  br i1 %tobool2614, label %land.lhs.true2615, label %if.else2623

land.lhs.true2615:                                ; preds = %if.then2613
  %1152 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2616 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1152, i32 0, i32 12
  %1153 = load i8, i8* %intuit2616, align 8
  %tobool2617 = trunc i8 %1153 to i1
  br i1 %tobool2617, label %if.then2622, label %lor.lhs.false2619

lor.lhs.false2619:                                ; preds = %land.lhs.true2615
  %1154 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2620 = call i32 @S_regtry(%struct.regmatch_info* %1154, i8** %s.addr)
  %tobool2621 = icmp ne i32 %call2620, 0
  br i1 %tobool2621, label %if.then2622, label %if.else2623

if.then2622:                                      ; preds = %lor.lhs.false2619, %land.lhs.true2615
  br label %got_it

if.else2623:                                      ; preds = %lor.lhs.false2619, %if.then2613
  %1155 = load i32, i32* %doevery, align 4
  store i32 %1155, i32* %tmp, align 4
  br label %if.end2624

if.end2624:                                       ; preds = %if.else2623
  br label %if.end2626

if.else2625:                                      ; preds = %lor.lhs.false2599
  store i32 1, i32* %tmp, align 4
  br label %if.end2626

if.end2626:                                       ; preds = %if.else2625, %if.end2624
  %1156 = load i8*, i8** %s.addr, align 8
  %1157 = load i8, i8* %1156, align 1
  %idxprom2627 = zext i8 %1157 to i64
  %arrayidx2628 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2627
  %1158 = load i8, i8* %arrayidx2628, align 1
  %conv2629 = zext i8 %1158 to i32
  %1159 = load i8*, i8** %s.addr, align 8
  %idx.ext2630 = sext i32 %conv2629 to i64
  %add.ptr2631 = getelementptr inbounds i8, i8* %1159, i64 %idx.ext2630
  store i8* %add.ptr2631, i8** %s.addr, align 8
  br label %while.cond2592

while.end2632:                                    ; preds = %while.cond2592
  br label %do.end2633

do.end2633:                                       ; preds = %while.end2632
  br label %sw.epilog4014

if.end2634:                                       ; preds = %sw.bb2588
  store i8 1, i8* %to_complement, align 1
  br label %sw.bb2635

sw.bb2635:                                        ; preds = %entry, %if.end2634
  br label %posixa

posixa:                                           ; preds = %sw.bb2635, %if.end2587
  br label %do.body2636

do.body2636:                                      ; preds = %posixa
  br label %while.cond2637

while.cond2637:                                   ; preds = %if.end2673, %do.body2636
  %1160 = load i8*, i8** %s.addr, align 8
  %1161 = load i8*, i8** %strend.addr, align 8
  %cmp2638 = icmp ult i8* %1160, %1161
  br i1 %cmp2638, label %while.body2640, label %while.end2675

while.body2640:                                   ; preds = %while.cond2637
  %1162 = load i8, i8* %to_complement, align 1
  %tobool2641 = trunc i8 %1162 to i1
  %conv2642 = zext i1 %tobool2641 to i32
  %1163 = load i8*, i8** %s.addr, align 8
  %1164 = load i8, i8* %1163, align 1
  %idxprom2643 = zext i8 %1164 to i64
  %arrayidx2644 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom2643
  %1165 = load i32, i32* %arrayidx2644, align 4
  %1166 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags2645 = getelementptr inbounds %struct.regnode, %struct.regnode* %1166, i32 0, i32 0
  %1167 = load i8, i8* %flags2645, align 2
  %conv2646 = zext i8 %1167 to i32
  %shl2647 = shl i32 1, %conv2646
  %or2648 = or i32 %shl2647, 16384
  %and2649 = and i32 %1165, %or2648
  %1168 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags2650 = getelementptr inbounds %struct.regnode, %struct.regnode* %1168, i32 0, i32 0
  %1169 = load i8, i8* %flags2650, align 2
  %conv2651 = zext i8 %1169 to i32
  %shl2652 = shl i32 1, %conv2651
  %or2653 = or i32 %shl2652, 16384
  %cmp2654 = icmp eq i32 %and2649, %or2653
  %1170 = zext i1 %cmp2654 to i64
  %cond2657 = select i1 %cmp2654, i32 1, i32 0
  %xor2658 = xor i32 %conv2642, %cond2657
  %tobool2659 = icmp ne i32 %xor2658, 0
  br i1 %tobool2659, label %if.then2660, label %if.else2672

if.then2660:                                      ; preds = %while.body2640
  %1171 = load i32, i32* %tmp, align 4
  %tobool2661 = icmp ne i32 %1171, 0
  br i1 %tobool2661, label %land.lhs.true2662, label %if.else2670

land.lhs.true2662:                                ; preds = %if.then2660
  %1172 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2663 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1172, i32 0, i32 12
  %1173 = load i8, i8* %intuit2663, align 8
  %tobool2664 = trunc i8 %1173 to i1
  br i1 %tobool2664, label %if.then2669, label %lor.lhs.false2666

lor.lhs.false2666:                                ; preds = %land.lhs.true2662
  %1174 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2667 = call i32 @S_regtry(%struct.regmatch_info* %1174, i8** %s.addr)
  %tobool2668 = icmp ne i32 %call2667, 0
  br i1 %tobool2668, label %if.then2669, label %if.else2670

if.then2669:                                      ; preds = %lor.lhs.false2666, %land.lhs.true2662
  br label %got_it

if.else2670:                                      ; preds = %lor.lhs.false2666, %if.then2660
  %1175 = load i32, i32* %doevery, align 4
  store i32 %1175, i32* %tmp, align 4
  br label %if.end2671

if.end2671:                                       ; preds = %if.else2670
  br label %if.end2673

if.else2672:                                      ; preds = %while.body2640
  store i32 1, i32* %tmp, align 4
  br label %if.end2673

if.end2673:                                       ; preds = %if.else2672, %if.end2671
  %1176 = load i8*, i8** %s.addr, align 8
  %incdec.ptr2674 = getelementptr inbounds i8, i8* %1176, i32 1
  store i8* %incdec.ptr2674, i8** %s.addr, align 8
  br label %while.cond2637

while.end2675:                                    ; preds = %while.cond2637
  br label %do.end2676

do.end2676:                                       ; preds = %while.end2675
  br label %sw.epilog4014

sw.bb2677:                                        ; preds = %entry
  store i8 1, i8* %to_complement, align 1
  br label %sw.bb2678

sw.bb2678:                                        ; preds = %entry, %sw.bb2677
  %1177 = load i8, i8* %utf8_target, align 1
  %tobool2679 = trunc i8 %1177 to i1
  br i1 %tobool2679, label %if.else2718, label %if.then2680

if.then2680:                                      ; preds = %sw.bb2678
  br label %do.body2681

do.body2681:                                      ; preds = %if.then2680
  br label %while.cond2682

while.cond2682:                                   ; preds = %if.end2714, %do.body2681
  %1178 = load i8*, i8** %s.addr, align 8
  %1179 = load i8*, i8** %strend.addr, align 8
  %cmp2683 = icmp ult i8* %1178, %1179
  br i1 %cmp2683, label %while.body2685, label %while.end2716

while.body2685:                                   ; preds = %while.cond2682
  %1180 = load i8, i8* %to_complement, align 1
  %tobool2686 = trunc i8 %1180 to i1
  %conv2687 = zext i1 %tobool2686 to i32
  %1181 = load i8*, i8** %s.addr, align 8
  %1182 = load i8, i8* %1181, align 1
  %idxprom2688 = zext i8 %1182 to i64
  %arrayidx2689 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom2688
  %1183 = load i32, i32* %arrayidx2689, align 4
  %1184 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags2690 = getelementptr inbounds %struct.regnode, %struct.regnode* %1184, i32 0, i32 0
  %1185 = load i8, i8* %flags2690, align 2
  %conv2691 = zext i8 %1185 to i32
  %shl2692 = shl i32 1, %conv2691
  %and2693 = and i32 %1183, %shl2692
  %tobool2694 = icmp ne i32 %and2693, 0
  %1186 = zext i1 %tobool2694 to i64
  %cond2696 = select i1 %tobool2694, i32 1, i32 0
  %tobool2697 = icmp ne i32 %cond2696, 0
  %1187 = zext i1 %tobool2697 to i64
  %cond2698 = select i1 %tobool2697, i32 1, i32 0
  %xor2699 = xor i32 %conv2687, %cond2698
  %tobool2700 = icmp ne i32 %xor2699, 0
  br i1 %tobool2700, label %if.then2701, label %if.else2713

if.then2701:                                      ; preds = %while.body2685
  %1188 = load i32, i32* %tmp, align 4
  %tobool2702 = icmp ne i32 %1188, 0
  br i1 %tobool2702, label %land.lhs.true2703, label %if.else2711

land.lhs.true2703:                                ; preds = %if.then2701
  %1189 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2704 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1189, i32 0, i32 12
  %1190 = load i8, i8* %intuit2704, align 8
  %tobool2705 = trunc i8 %1190 to i1
  br i1 %tobool2705, label %if.then2710, label %lor.lhs.false2707

lor.lhs.false2707:                                ; preds = %land.lhs.true2703
  %1191 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2708 = call i32 @S_regtry(%struct.regmatch_info* %1191, i8** %s.addr)
  %tobool2709 = icmp ne i32 %call2708, 0
  br i1 %tobool2709, label %if.then2710, label %if.else2711

if.then2710:                                      ; preds = %lor.lhs.false2707, %land.lhs.true2703
  br label %got_it

if.else2711:                                      ; preds = %lor.lhs.false2707, %if.then2701
  %1192 = load i32, i32* %doevery, align 4
  store i32 %1192, i32* %tmp, align 4
  br label %if.end2712

if.end2712:                                       ; preds = %if.else2711
  br label %if.end2714

if.else2713:                                      ; preds = %while.body2685
  store i32 1, i32* %tmp, align 4
  br label %if.end2714

if.end2714:                                       ; preds = %if.else2713, %if.end2712
  %1193 = load i8*, i8** %s.addr, align 8
  %incdec.ptr2715 = getelementptr inbounds i8, i8* %1193, i32 1
  store i8* %incdec.ptr2715, i8** %s.addr, align 8
  br label %while.cond2682

while.end2716:                                    ; preds = %while.cond2682
  br label %do.end2717

do.end2717:                                       ; preds = %while.end2716
  br label %if.end3427

if.else2718:                                      ; preds = %sw.bb2678
  br label %posix_utf8

posix_utf8:                                       ; preds = %if.else2718, %if.then2586
  %1194 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags2719 = getelementptr inbounds %struct.regnode, %struct.regnode* %1194, i32 0, i32 0
  %1195 = load i8, i8* %flags2719, align 2
  %conv2720 = zext i8 %1195 to i32
  store i32 %conv2720, i32* %classnum, align 4
  %1196 = load i32, i32* %classnum, align 4
  %cmp2721 = icmp ult i32 %1196, 10
  br i1 %cmp2721, label %if.then2723, label %if.else2809

if.then2723:                                      ; preds = %posix_utf8
  br label %while.cond2724

while.cond2724:                                   ; preds = %if.end2802, %if.then2723
  %1197 = load i8*, i8** %s.addr, align 8
  %1198 = load i8*, i8** %strend.addr, align 8
  %cmp2725 = icmp ult i8* %1197, %1198
  br i1 %cmp2725, label %while.body2727, label %while.end2808

while.body2727:                                   ; preds = %while.cond2724
  %1199 = load i8*, i8** %s.addr, align 8
  %1200 = load i8, i8* %1199, align 1
  %conv2728 = zext i8 %1200 to i32
  %cmp2729 = icmp sge i32 %conv2728, 196
  br i1 %cmp2729, label %if.then2731, label %if.end2732

if.then2731:                                      ; preds = %while.body2727
  br label %found_above_latin1

if.end2732:                                       ; preds = %while.body2727
  %1201 = load i8*, i8** %s.addr, align 8
  %1202 = load i8, i8* %1201, align 1
  %conv2733 = sext i8 %1202 to i64
  %cmp2734 = icmp ult i64 %conv2733, 128
  br i1 %cmp2734, label %land.lhs.true2736, label %lor.lhs.false2750

land.lhs.true2736:                                ; preds = %if.end2732
  %1203 = load i8, i8* %to_complement, align 1
  %tobool2737 = trunc i8 %1203 to i1
  %conv2738 = zext i1 %tobool2737 to i32
  %1204 = load i8*, i8** %s.addr, align 8
  %1205 = load i8, i8* %1204, align 1
  %idxprom2739 = zext i8 %1205 to i64
  %arrayidx2740 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom2739
  %1206 = load i32, i32* %arrayidx2740, align 4
  %1207 = load i32, i32* %classnum, align 4
  %shl2741 = shl i32 1, %1207
  %and2742 = and i32 %1206, %shl2741
  %tobool2743 = icmp ne i32 %and2742, 0
  %1208 = zext i1 %tobool2743 to i64
  %cond2745 = select i1 %tobool2743, i32 1, i32 0
  %tobool2746 = icmp ne i32 %cond2745, 0
  %1209 = zext i1 %tobool2746 to i64
  %cond2747 = select i1 %tobool2746, i32 1, i32 0
  %xor2748 = xor i32 %conv2738, %cond2747
  %tobool2749 = icmp ne i32 %xor2748, 0
  br i1 %tobool2749, label %if.then2789, label %lor.lhs.false2750

lor.lhs.false2750:                                ; preds = %land.lhs.true2736, %if.end2732
  %1210 = load i8*, i8** %s.addr, align 8
  %1211 = load i8, i8* %1210, align 1
  %conv2751 = zext i8 %1211 to i32
  %and2752 = and i32 %conv2751, 254
  %cmp2753 = icmp eq i32 %and2752, 194
  br i1 %cmp2753, label %land.lhs.true2755, label %if.else2801

land.lhs.true2755:                                ; preds = %lor.lhs.false2750
  %1212 = load i8, i8* %to_complement, align 1
  %tobool2756 = trunc i8 %1212 to i1
  %conv2757 = zext i1 %tobool2756 to i32
  %1213 = load i8*, i8** %s.addr, align 8
  %1214 = load i8, i8* %1213, align 1
  %conv2758 = sext i8 %1214 to i32
  %and2759 = and i32 %conv2758, 31
  %shl2760 = shl i32 %and2759, 6
  %1215 = load i8*, i8** %s.addr, align 8
  %add.ptr2761 = getelementptr inbounds i8, i8* %1215, i64 1
  %1216 = load i8, i8* %add.ptr2761, align 1
  %conv2762 = zext i8 %1216 to i32
  %and2763 = and i32 %conv2762, 63
  %or2764 = or i32 %shl2760, %and2763
  %conv2765 = sext i32 %or2764 to i64
  %and2766 = and i64 %conv2765, -256
  %tobool2767 = icmp ne i64 %and2766, 0
  br i1 %tobool2767, label %land.end2782, label %land.rhs2768

land.rhs2768:                                     ; preds = %land.lhs.true2755
  %1217 = load i8*, i8** %s.addr, align 8
  %1218 = load i8, i8* %1217, align 1
  %conv2769 = sext i8 %1218 to i32
  %and2770 = and i32 %conv2769, 31
  %shl2771 = shl i32 %and2770, 6
  %1219 = load i8*, i8** %s.addr, align 8
  %add.ptr2772 = getelementptr inbounds i8, i8* %1219, i64 1
  %1220 = load i8, i8* %add.ptr2772, align 1
  %conv2773 = zext i8 %1220 to i32
  %and2774 = and i32 %conv2773, 63
  %or2775 = or i32 %shl2771, %and2774
  %conv2776 = trunc i32 %or2775 to i8
  %idxprom2777 = zext i8 %conv2776 to i64
  %arrayidx2778 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom2777
  %1221 = load i32, i32* %arrayidx2778, align 4
  %1222 = load i32, i32* %classnum, align 4
  %shl2779 = shl i32 1, %1222
  %and2780 = and i32 %1221, %shl2779
  %tobool2781 = icmp ne i32 %and2780, 0
  br label %land.end2782

land.end2782:                                     ; preds = %land.rhs2768, %land.lhs.true2755
  %1223 = phi i1 [ false, %land.lhs.true2755 ], [ %tobool2781, %land.rhs2768 ]
  %1224 = zext i1 %1223 to i64
  %cond2784 = select i1 %1223, i32 1, i32 0
  %tobool2785 = icmp ne i32 %cond2784, 0
  %1225 = zext i1 %tobool2785 to i64
  %cond2786 = select i1 %tobool2785, i32 1, i32 0
  %xor2787 = xor i32 %conv2757, %cond2786
  %tobool2788 = icmp ne i32 %xor2787, 0
  br i1 %tobool2788, label %if.then2789, label %if.else2801

if.then2789:                                      ; preds = %land.end2782, %land.lhs.true2736
  %1226 = load i32, i32* %tmp, align 4
  %tobool2790 = icmp ne i32 %1226, 0
  br i1 %tobool2790, label %land.lhs.true2791, label %if.else2799

land.lhs.true2791:                                ; preds = %if.then2789
  %1227 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2792 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1227, i32 0, i32 12
  %1228 = load i8, i8* %intuit2792, align 8
  %tobool2793 = trunc i8 %1228 to i1
  br i1 %tobool2793, label %if.then2798, label %lor.lhs.false2795

lor.lhs.false2795:                                ; preds = %land.lhs.true2791
  %1229 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2796 = call i32 @S_regtry(%struct.regmatch_info* %1229, i8** %s.addr)
  %tobool2797 = icmp ne i32 %call2796, 0
  br i1 %tobool2797, label %if.then2798, label %if.else2799

if.then2798:                                      ; preds = %lor.lhs.false2795, %land.lhs.true2791
  br label %got_it

if.else2799:                                      ; preds = %lor.lhs.false2795, %if.then2789
  %1230 = load i32, i32* %doevery, align 4
  store i32 %1230, i32* %tmp, align 4
  br label %if.end2800

if.end2800:                                       ; preds = %if.else2799
  br label %if.end2802

if.else2801:                                      ; preds = %land.end2782, %lor.lhs.false2750
  store i32 1, i32* %tmp, align 4
  br label %if.end2802

if.end2802:                                       ; preds = %if.else2801, %if.end2800
  %1231 = load i8*, i8** %s.addr, align 8
  %1232 = load i8, i8* %1231, align 1
  %idxprom2803 = zext i8 %1232 to i64
  %arrayidx2804 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2803
  %1233 = load i8, i8* %arrayidx2804, align 1
  %conv2805 = zext i8 %1233 to i32
  %1234 = load i8*, i8** %s.addr, align 8
  %idx.ext2806 = sext i32 %conv2805 to i64
  %add.ptr2807 = getelementptr inbounds i8, i8* %1234, i64 %idx.ext2806
  store i8* %add.ptr2807, i8** %s.addr, align 8
  br label %while.cond2724

while.end2808:                                    ; preds = %while.cond2724
  br label %if.end3426

if.else2809:                                      ; preds = %posix_utf8
  %1235 = load i32, i32* %classnum, align 4
  switch i32 %1235, label %sw.default [
    i32 10, label %sw.bb2810
    i32 11, label %sw.bb2973
    i32 12, label %sw.bb3130
    i32 15, label %sw.bb3242
    i32 13, label %sw.bb3340
  ]

sw.bb2810:                                        ; preds = %if.else2809
  br label %do.body2811

do.body2811:                                      ; preds = %sw.bb2810
  br label %while.cond2812

while.cond2812:                                   ; preds = %if.end2965, %do.body2811
  %1236 = load i8*, i8** %s.addr, align 8
  %1237 = load i8*, i8** %strend.addr, align 8
  %cmp2813 = icmp ult i8* %1236, %1237
  br i1 %cmp2813, label %while.body2815, label %while.end2971

while.body2815:                                   ; preds = %while.cond2812
  %1238 = load i8, i8* %to_complement, align 1
  %tobool2816 = trunc i8 %1238 to i1
  %conv2817 = zext i1 %tobool2816 to i32
  %1239 = load i8*, i8** %s.addr, align 8
  %1240 = load i8, i8* %1239, align 1
  %conv2818 = sext i8 %1240 to i64
  %cmp2819 = icmp ult i64 %conv2818, 128
  br i1 %cmp2819, label %cond.true2821, label %cond.false2828

cond.true2821:                                    ; preds = %while.body2815
  %1241 = load i8*, i8** %s.addr, align 8
  %1242 = load i8, i8* %1241, align 1
  %idxprom2822 = zext i8 %1242 to i64
  %arrayidx2823 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom2822
  %1243 = load i32, i32* %arrayidx2823, align 4
  %and2824 = and i32 %1243, 1024
  %tobool2825 = icmp ne i32 %and2824, 0
  %1244 = zext i1 %tobool2825 to i64
  %cond2827 = select i1 %tobool2825, i32 1, i32 0
  br label %cond.end2946

cond.false2828:                                   ; preds = %while.body2815
  %1245 = load i8*, i8** %s.addr, align 8
  %1246 = load i8, i8* %1245, align 1
  %conv2829 = zext i8 %1246 to i32
  %and2830 = and i32 %conv2829, 254
  %cmp2831 = icmp eq i32 %and2830, 194
  br i1 %cmp2831, label %cond.true2833, label %cond.false2860

cond.true2833:                                    ; preds = %cond.false2828
  %1247 = load i8*, i8** %s.addr, align 8
  %1248 = load i8, i8* %1247, align 1
  %conv2834 = sext i8 %1248 to i32
  %and2835 = and i32 %conv2834, 31
  %shl2836 = shl i32 %and2835, 6
  %1249 = load i8*, i8** %s.addr, align 8
  %add.ptr2837 = getelementptr inbounds i8, i8* %1249, i64 1
  %1250 = load i8, i8* %add.ptr2837, align 1
  %conv2838 = zext i8 %1250 to i32
  %and2839 = and i32 %conv2838, 63
  %or2840 = or i32 %shl2836, %and2839
  %conv2841 = sext i32 %or2840 to i64
  %and2842 = and i64 %conv2841, -256
  %tobool2843 = icmp ne i64 %and2842, 0
  br i1 %tobool2843, label %land.end2857, label %land.rhs2844

land.rhs2844:                                     ; preds = %cond.true2833
  %1251 = load i8*, i8** %s.addr, align 8
  %1252 = load i8, i8* %1251, align 1
  %conv2845 = sext i8 %1252 to i32
  %and2846 = and i32 %conv2845, 31
  %shl2847 = shl i32 %and2846, 6
  %1253 = load i8*, i8** %s.addr, align 8
  %add.ptr2848 = getelementptr inbounds i8, i8* %1253, i64 1
  %1254 = load i8, i8* %add.ptr2848, align 1
  %conv2849 = zext i8 %1254 to i32
  %and2850 = and i32 %conv2849, 63
  %or2851 = or i32 %shl2847, %and2850
  %conv2852 = trunc i32 %or2851 to i8
  %idxprom2853 = zext i8 %conv2852 to i64
  %arrayidx2854 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom2853
  %1255 = load i32, i32* %arrayidx2854, align 4
  %and2855 = and i32 %1255, 1024
  %tobool2856 = icmp ne i32 %and2855, 0
  br label %land.end2857

land.end2857:                                     ; preds = %land.rhs2844, %cond.true2833
  %1256 = phi i1 [ false, %cond.true2833 ], [ %tobool2856, %land.rhs2844 ]
  %1257 = zext i1 %1256 to i64
  %cond2859 = select i1 %1256, i32 1, i32 0
  br label %cond.end2944

cond.false2860:                                   ; preds = %cond.false2828
  %1258 = load i8*, i8** %s.addr, align 8
  %arrayidx2861 = getelementptr inbounds i8, i8* %1258, i64 0
  %1259 = load i8, i8* %arrayidx2861, align 1
  %conv2862 = zext i8 %1259 to i32
  %cmp2863 = icmp eq i32 225, %conv2862
  br i1 %cmp2863, label %cond.true2865, label %cond.false2878

cond.true2865:                                    ; preds = %cond.false2860
  %1260 = load i8*, i8** %s.addr, align 8
  %arrayidx2866 = getelementptr inbounds i8, i8* %1260, i64 1
  %1261 = load i8, i8* %arrayidx2866, align 1
  %conv2867 = zext i8 %1261 to i32
  %cmp2868 = icmp eq i32 154, %conv2867
  br i1 %cmp2868, label %land.rhs2870, label %land.end2875

land.rhs2870:                                     ; preds = %cond.true2865
  %1262 = load i8*, i8** %s.addr, align 8
  %arrayidx2871 = getelementptr inbounds i8, i8* %1262, i64 2
  %1263 = load i8, i8* %arrayidx2871, align 1
  %conv2872 = zext i8 %1263 to i32
  %cmp2873 = icmp eq i32 128, %conv2872
  br label %land.end2875

land.end2875:                                     ; preds = %land.rhs2870, %cond.true2865
  %1264 = phi i1 [ false, %cond.true2865 ], [ %cmp2873, %land.rhs2870 ]
  %1265 = zext i1 %1264 to i64
  %cond2877 = select i1 %1264, i32 3, i32 0
  br label %cond.end2942

cond.false2878:                                   ; preds = %cond.false2860
  %1266 = load i8*, i8** %s.addr, align 8
  %arrayidx2879 = getelementptr inbounds i8, i8* %1266, i64 0
  %1267 = load i8, i8* %arrayidx2879, align 1
  %conv2880 = zext i8 %1267 to i32
  %cmp2881 = icmp eq i32 226, %conv2880
  br i1 %cmp2881, label %cond.true2883, label %cond.false2922

cond.true2883:                                    ; preds = %cond.false2878
  %1268 = load i8*, i8** %s.addr, align 8
  %arrayidx2884 = getelementptr inbounds i8, i8* %1268, i64 1
  %1269 = load i8, i8* %arrayidx2884, align 1
  %conv2885 = zext i8 %1269 to i32
  %cmp2886 = icmp eq i32 128, %conv2885
  br i1 %cmp2886, label %cond.true2888, label %cond.false2907

cond.true2888:                                    ; preds = %cond.true2883
  %1270 = load i8*, i8** %s.addr, align 8
  %arrayidx2889 = getelementptr inbounds i8, i8* %1270, i64 2
  %1271 = load i8, i8* %arrayidx2889, align 1
  %conv2890 = zext i8 %1271 to i32
  %cmp2891 = icmp sle i32 %conv2890, 138
  br i1 %cmp2891, label %lor.end2904, label %lor.lhs.false2893

lor.lhs.false2893:                                ; preds = %cond.true2888
  %1272 = load i8*, i8** %s.addr, align 8
  %arrayidx2894 = getelementptr inbounds i8, i8* %1272, i64 2
  %1273 = load i8, i8* %arrayidx2894, align 1
  %conv2895 = zext i8 %1273 to i32
  %and2896 = and i32 %conv2895, 254
  %cmp2897 = icmp eq i32 %and2896, 168
  br i1 %cmp2897, label %lor.end2904, label %lor.rhs2899

lor.rhs2899:                                      ; preds = %lor.lhs.false2893
  %1274 = load i8*, i8** %s.addr, align 8
  %arrayidx2900 = getelementptr inbounds i8, i8* %1274, i64 2
  %1275 = load i8, i8* %arrayidx2900, align 1
  %conv2901 = zext i8 %1275 to i32
  %cmp2902 = icmp eq i32 175, %conv2901
  br label %lor.end2904

lor.end2904:                                      ; preds = %lor.rhs2899, %lor.lhs.false2893, %cond.true2888
  %1276 = phi i1 [ true, %lor.lhs.false2893 ], [ true, %cond.true2888 ], [ %cmp2902, %lor.rhs2899 ]
  %1277 = zext i1 %1276 to i64
  %cond2906 = select i1 %1276, i32 3, i32 0
  br label %cond.end2920

cond.false2907:                                   ; preds = %cond.true2883
  %1278 = load i8*, i8** %s.addr, align 8
  %arrayidx2908 = getelementptr inbounds i8, i8* %1278, i64 1
  %1279 = load i8, i8* %arrayidx2908, align 1
  %conv2909 = zext i8 %1279 to i32
  %cmp2910 = icmp eq i32 129, %conv2909
  br i1 %cmp2910, label %land.rhs2912, label %land.end2917

land.rhs2912:                                     ; preds = %cond.false2907
  %1280 = load i8*, i8** %s.addr, align 8
  %arrayidx2913 = getelementptr inbounds i8, i8* %1280, i64 2
  %1281 = load i8, i8* %arrayidx2913, align 1
  %conv2914 = zext i8 %1281 to i32
  %cmp2915 = icmp eq i32 159, %conv2914
  br label %land.end2917

land.end2917:                                     ; preds = %land.rhs2912, %cond.false2907
  %1282 = phi i1 [ false, %cond.false2907 ], [ %cmp2915, %land.rhs2912 ]
  %1283 = zext i1 %1282 to i64
  %cond2919 = select i1 %1282, i32 3, i32 0
  br label %cond.end2920

cond.end2920:                                     ; preds = %land.end2917, %lor.end2904
  %cond2921 = phi i32 [ %cond2906, %lor.end2904 ], [ %cond2919, %land.end2917 ]
  br label %cond.end2940

cond.false2922:                                   ; preds = %cond.false2878
  %1284 = load i8*, i8** %s.addr, align 8
  %arrayidx2923 = getelementptr inbounds i8, i8* %1284, i64 0
  %1285 = load i8, i8* %arrayidx2923, align 1
  %conv2924 = zext i8 %1285 to i32
  %cmp2925 = icmp eq i32 227, %conv2924
  br i1 %cmp2925, label %land.lhs.true2927, label %land.end2937

land.lhs.true2927:                                ; preds = %cond.false2922
  %1286 = load i8*, i8** %s.addr, align 8
  %arrayidx2928 = getelementptr inbounds i8, i8* %1286, i64 1
  %1287 = load i8, i8* %arrayidx2928, align 1
  %conv2929 = zext i8 %1287 to i32
  %cmp2930 = icmp eq i32 128, %conv2929
  br i1 %cmp2930, label %land.rhs2932, label %land.end2937

land.rhs2932:                                     ; preds = %land.lhs.true2927
  %1288 = load i8*, i8** %s.addr, align 8
  %arrayidx2933 = getelementptr inbounds i8, i8* %1288, i64 2
  %1289 = load i8, i8* %arrayidx2933, align 1
  %conv2934 = zext i8 %1289 to i32
  %cmp2935 = icmp eq i32 128, %conv2934
  br label %land.end2937

land.end2937:                                     ; preds = %land.rhs2932, %land.lhs.true2927, %cond.false2922
  %1290 = phi i1 [ false, %land.lhs.true2927 ], [ false, %cond.false2922 ], [ %cmp2935, %land.rhs2932 ]
  %1291 = zext i1 %1290 to i64
  %cond2939 = select i1 %1290, i32 3, i32 0
  br label %cond.end2940

cond.end2940:                                     ; preds = %land.end2937, %cond.end2920
  %cond2941 = phi i32 [ %cond2921, %cond.end2920 ], [ %cond2939, %land.end2937 ]
  br label %cond.end2942

cond.end2942:                                     ; preds = %cond.end2940, %land.end2875
  %cond2943 = phi i32 [ %cond2877, %land.end2875 ], [ %cond2941, %cond.end2940 ]
  br label %cond.end2944

cond.end2944:                                     ; preds = %cond.end2942, %land.end2857
  %cond2945 = phi i32 [ %cond2859, %land.end2857 ], [ %cond2943, %cond.end2942 ]
  br label %cond.end2946

cond.end2946:                                     ; preds = %cond.end2944, %cond.true2821
  %cond2947 = phi i32 [ %cond2827, %cond.true2821 ], [ %cond2945, %cond.end2944 ]
  %tobool2948 = icmp ne i32 %cond2947, 0
  %1292 = zext i1 %tobool2948 to i64
  %cond2949 = select i1 %tobool2948, i32 1, i32 0
  %xor2950 = xor i32 %conv2817, %cond2949
  %tobool2951 = icmp ne i32 %xor2950, 0
  br i1 %tobool2951, label %if.then2952, label %if.else2964

if.then2952:                                      ; preds = %cond.end2946
  %1293 = load i32, i32* %tmp, align 4
  %tobool2953 = icmp ne i32 %1293, 0
  br i1 %tobool2953, label %land.lhs.true2954, label %if.else2962

land.lhs.true2954:                                ; preds = %if.then2952
  %1294 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit2955 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1294, i32 0, i32 12
  %1295 = load i8, i8* %intuit2955, align 8
  %tobool2956 = trunc i8 %1295 to i1
  br i1 %tobool2956, label %if.then2961, label %lor.lhs.false2958

lor.lhs.false2958:                                ; preds = %land.lhs.true2954
  %1296 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call2959 = call i32 @S_regtry(%struct.regmatch_info* %1296, i8** %s.addr)
  %tobool2960 = icmp ne i32 %call2959, 0
  br i1 %tobool2960, label %if.then2961, label %if.else2962

if.then2961:                                      ; preds = %lor.lhs.false2958, %land.lhs.true2954
  br label %got_it

if.else2962:                                      ; preds = %lor.lhs.false2958, %if.then2952
  %1297 = load i32, i32* %doevery, align 4
  store i32 %1297, i32* %tmp, align 4
  br label %if.end2963

if.end2963:                                       ; preds = %if.else2962
  br label %if.end2965

if.else2964:                                      ; preds = %cond.end2946
  store i32 1, i32* %tmp, align 4
  br label %if.end2965

if.end2965:                                       ; preds = %if.else2964, %if.end2963
  %1298 = load i8*, i8** %s.addr, align 8
  %1299 = load i8, i8* %1298, align 1
  %idxprom2966 = zext i8 %1299 to i64
  %arrayidx2967 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2966
  %1300 = load i8, i8* %arrayidx2967, align 1
  %conv2968 = zext i8 %1300 to i32
  %1301 = load i8*, i8** %s.addr, align 8
  %idx.ext2969 = sext i32 %conv2968 to i64
  %add.ptr2970 = getelementptr inbounds i8, i8* %1301, i64 %idx.ext2969
  store i8* %add.ptr2970, i8** %s.addr, align 8
  br label %while.cond2812

while.end2971:                                    ; preds = %while.cond2812
  br label %do.end2972

do.end2972:                                       ; preds = %while.end2971
  br label %sw.epilog3425

sw.bb2973:                                        ; preds = %if.else2809
  br label %do.body2974

do.body2974:                                      ; preds = %sw.bb2973
  br label %while.cond2975

while.cond2975:                                   ; preds = %if.end3122, %do.body2974
  %1302 = load i8*, i8** %s.addr, align 8
  %1303 = load i8*, i8** %strend.addr, align 8
  %cmp2976 = icmp ult i8* %1302, %1303
  br i1 %cmp2976, label %while.body2978, label %while.end3128

while.body2978:                                   ; preds = %while.cond2975
  %1304 = load i8, i8* %to_complement, align 1
  %tobool2979 = trunc i8 %1304 to i1
  %conv2980 = zext i1 %tobool2979 to i32
  %1305 = load i8*, i8** %s.addr, align 8
  %1306 = load i8, i8* %1305, align 1
  %conv2981 = sext i8 %1306 to i64
  %cmp2982 = icmp ult i64 %conv2981, 128
  br i1 %cmp2982, label %cond.true2984, label %cond.false2991

cond.true2984:                                    ; preds = %while.body2978
  %1307 = load i8*, i8** %s.addr, align 8
  %1308 = load i8, i8* %1307, align 1
  %idxprom2985 = zext i8 %1308 to i64
  %arrayidx2986 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom2985
  %1309 = load i32, i32* %arrayidx2986, align 4
  %and2987 = and i32 %1309, 2048
  %tobool2988 = icmp ne i32 %and2987, 0
  %1310 = zext i1 %tobool2988 to i64
  %cond2990 = select i1 %tobool2988, i32 1, i32 0
  br label %cond.end3103

cond.false2991:                                   ; preds = %while.body2978
  %1311 = load i8*, i8** %s.addr, align 8
  %1312 = load i8, i8* %1311, align 1
  %conv2992 = zext i8 %1312 to i32
  %and2993 = and i32 %conv2992, 254
  %cmp2994 = icmp eq i32 %and2993, 194
  br i1 %cmp2994, label %cond.true2996, label %cond.false3023

cond.true2996:                                    ; preds = %cond.false2991
  %1313 = load i8*, i8** %s.addr, align 8
  %1314 = load i8, i8* %1313, align 1
  %conv2997 = sext i8 %1314 to i32
  %and2998 = and i32 %conv2997, 31
  %shl2999 = shl i32 %and2998, 6
  %1315 = load i8*, i8** %s.addr, align 8
  %add.ptr3000 = getelementptr inbounds i8, i8* %1315, i64 1
  %1316 = load i8, i8* %add.ptr3000, align 1
  %conv3001 = zext i8 %1316 to i32
  %and3002 = and i32 %conv3001, 63
  %or3003 = or i32 %shl2999, %and3002
  %conv3004 = sext i32 %or3003 to i64
  %and3005 = and i64 %conv3004, -256
  %tobool3006 = icmp ne i64 %and3005, 0
  br i1 %tobool3006, label %land.end3020, label %land.rhs3007

land.rhs3007:                                     ; preds = %cond.true2996
  %1317 = load i8*, i8** %s.addr, align 8
  %1318 = load i8, i8* %1317, align 1
  %conv3008 = sext i8 %1318 to i32
  %and3009 = and i32 %conv3008, 31
  %shl3010 = shl i32 %and3009, 6
  %1319 = load i8*, i8** %s.addr, align 8
  %add.ptr3011 = getelementptr inbounds i8, i8* %1319, i64 1
  %1320 = load i8, i8* %add.ptr3011, align 1
  %conv3012 = zext i8 %1320 to i32
  %and3013 = and i32 %conv3012, 63
  %or3014 = or i32 %shl3010, %and3013
  %conv3015 = trunc i32 %or3014 to i8
  %idxprom3016 = zext i8 %conv3015 to i64
  %arrayidx3017 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom3016
  %1321 = load i32, i32* %arrayidx3017, align 4
  %and3018 = and i32 %1321, 2048
  %tobool3019 = icmp ne i32 %and3018, 0
  br label %land.end3020

land.end3020:                                     ; preds = %land.rhs3007, %cond.true2996
  %1322 = phi i1 [ false, %cond.true2996 ], [ %tobool3019, %land.rhs3007 ]
  %1323 = zext i1 %1322 to i64
  %cond3022 = select i1 %1322, i32 1, i32 0
  br label %cond.end3101

cond.false3023:                                   ; preds = %cond.false2991
  %1324 = load i8*, i8** %s.addr, align 8
  %arrayidx3024 = getelementptr inbounds i8, i8* %1324, i64 0
  %1325 = load i8, i8* %arrayidx3024, align 1
  %conv3025 = zext i8 %1325 to i32
  %cmp3026 = icmp eq i32 225, %conv3025
  br i1 %cmp3026, label %cond.true3028, label %cond.false3041

cond.true3028:                                    ; preds = %cond.false3023
  %1326 = load i8*, i8** %s.addr, align 8
  %arrayidx3029 = getelementptr inbounds i8, i8* %1326, i64 1
  %1327 = load i8, i8* %arrayidx3029, align 1
  %conv3030 = zext i8 %1327 to i32
  %cmp3031 = icmp eq i32 154, %conv3030
  br i1 %cmp3031, label %land.rhs3033, label %land.end3038

land.rhs3033:                                     ; preds = %cond.true3028
  %1328 = load i8*, i8** %s.addr, align 8
  %arrayidx3034 = getelementptr inbounds i8, i8* %1328, i64 2
  %1329 = load i8, i8* %arrayidx3034, align 1
  %conv3035 = zext i8 %1329 to i32
  %cmp3036 = icmp eq i32 128, %conv3035
  br label %land.end3038

land.end3038:                                     ; preds = %land.rhs3033, %cond.true3028
  %1330 = phi i1 [ false, %cond.true3028 ], [ %cmp3036, %land.rhs3033 ]
  %1331 = zext i1 %1330 to i64
  %cond3040 = select i1 %1330, i32 3, i32 0
  br label %cond.end3099

cond.false3041:                                   ; preds = %cond.false3023
  %1332 = load i8*, i8** %s.addr, align 8
  %arrayidx3042 = getelementptr inbounds i8, i8* %1332, i64 0
  %1333 = load i8, i8* %arrayidx3042, align 1
  %conv3043 = zext i8 %1333 to i32
  %cmp3044 = icmp eq i32 226, %conv3043
  br i1 %cmp3044, label %cond.true3046, label %cond.false3079

cond.true3046:                                    ; preds = %cond.false3041
  %1334 = load i8*, i8** %s.addr, align 8
  %arrayidx3047 = getelementptr inbounds i8, i8* %1334, i64 1
  %1335 = load i8, i8* %arrayidx3047, align 1
  %conv3048 = zext i8 %1335 to i32
  %cmp3049 = icmp eq i32 128, %conv3048
  br i1 %cmp3049, label %cond.true3051, label %cond.false3064

cond.true3051:                                    ; preds = %cond.true3046
  %1336 = load i8*, i8** %s.addr, align 8
  %arrayidx3052 = getelementptr inbounds i8, i8* %1336, i64 2
  %1337 = load i8, i8* %arrayidx3052, align 1
  %conv3053 = zext i8 %1337 to i32
  %cmp3054 = icmp sle i32 %conv3053, 138
  br i1 %cmp3054, label %lor.end3061, label %lor.rhs3056

lor.rhs3056:                                      ; preds = %cond.true3051
  %1338 = load i8*, i8** %s.addr, align 8
  %arrayidx3057 = getelementptr inbounds i8, i8* %1338, i64 2
  %1339 = load i8, i8* %arrayidx3057, align 1
  %conv3058 = zext i8 %1339 to i32
  %cmp3059 = icmp eq i32 175, %conv3058
  br label %lor.end3061

lor.end3061:                                      ; preds = %lor.rhs3056, %cond.true3051
  %1340 = phi i1 [ true, %cond.true3051 ], [ %cmp3059, %lor.rhs3056 ]
  %1341 = zext i1 %1340 to i64
  %cond3063 = select i1 %1340, i32 3, i32 0
  br label %cond.end3077

cond.false3064:                                   ; preds = %cond.true3046
  %1342 = load i8*, i8** %s.addr, align 8
  %arrayidx3065 = getelementptr inbounds i8, i8* %1342, i64 1
  %1343 = load i8, i8* %arrayidx3065, align 1
  %conv3066 = zext i8 %1343 to i32
  %cmp3067 = icmp eq i32 129, %conv3066
  br i1 %cmp3067, label %land.rhs3069, label %land.end3074

land.rhs3069:                                     ; preds = %cond.false3064
  %1344 = load i8*, i8** %s.addr, align 8
  %arrayidx3070 = getelementptr inbounds i8, i8* %1344, i64 2
  %1345 = load i8, i8* %arrayidx3070, align 1
  %conv3071 = zext i8 %1345 to i32
  %cmp3072 = icmp eq i32 159, %conv3071
  br label %land.end3074

land.end3074:                                     ; preds = %land.rhs3069, %cond.false3064
  %1346 = phi i1 [ false, %cond.false3064 ], [ %cmp3072, %land.rhs3069 ]
  %1347 = zext i1 %1346 to i64
  %cond3076 = select i1 %1346, i32 3, i32 0
  br label %cond.end3077

cond.end3077:                                     ; preds = %land.end3074, %lor.end3061
  %cond3078 = phi i32 [ %cond3063, %lor.end3061 ], [ %cond3076, %land.end3074 ]
  br label %cond.end3097

cond.false3079:                                   ; preds = %cond.false3041
  %1348 = load i8*, i8** %s.addr, align 8
  %arrayidx3080 = getelementptr inbounds i8, i8* %1348, i64 0
  %1349 = load i8, i8* %arrayidx3080, align 1
  %conv3081 = zext i8 %1349 to i32
  %cmp3082 = icmp eq i32 227, %conv3081
  br i1 %cmp3082, label %land.lhs.true3084, label %land.end3094

land.lhs.true3084:                                ; preds = %cond.false3079
  %1350 = load i8*, i8** %s.addr, align 8
  %arrayidx3085 = getelementptr inbounds i8, i8* %1350, i64 1
  %1351 = load i8, i8* %arrayidx3085, align 1
  %conv3086 = zext i8 %1351 to i32
  %cmp3087 = icmp eq i32 128, %conv3086
  br i1 %cmp3087, label %land.rhs3089, label %land.end3094

land.rhs3089:                                     ; preds = %land.lhs.true3084
  %1352 = load i8*, i8** %s.addr, align 8
  %arrayidx3090 = getelementptr inbounds i8, i8* %1352, i64 2
  %1353 = load i8, i8* %arrayidx3090, align 1
  %conv3091 = zext i8 %1353 to i32
  %cmp3092 = icmp eq i32 128, %conv3091
  br label %land.end3094

land.end3094:                                     ; preds = %land.rhs3089, %land.lhs.true3084, %cond.false3079
  %1354 = phi i1 [ false, %land.lhs.true3084 ], [ false, %cond.false3079 ], [ %cmp3092, %land.rhs3089 ]
  %1355 = zext i1 %1354 to i64
  %cond3096 = select i1 %1354, i32 3, i32 0
  br label %cond.end3097

cond.end3097:                                     ; preds = %land.end3094, %cond.end3077
  %cond3098 = phi i32 [ %cond3078, %cond.end3077 ], [ %cond3096, %land.end3094 ]
  br label %cond.end3099

cond.end3099:                                     ; preds = %cond.end3097, %land.end3038
  %cond3100 = phi i32 [ %cond3040, %land.end3038 ], [ %cond3098, %cond.end3097 ]
  br label %cond.end3101

cond.end3101:                                     ; preds = %cond.end3099, %land.end3020
  %cond3102 = phi i32 [ %cond3022, %land.end3020 ], [ %cond3100, %cond.end3099 ]
  br label %cond.end3103

cond.end3103:                                     ; preds = %cond.end3101, %cond.true2984
  %cond3104 = phi i32 [ %cond2990, %cond.true2984 ], [ %cond3102, %cond.end3101 ]
  %tobool3105 = icmp ne i32 %cond3104, 0
  %1356 = zext i1 %tobool3105 to i64
  %cond3106 = select i1 %tobool3105, i32 1, i32 0
  %xor3107 = xor i32 %conv2980, %cond3106
  %tobool3108 = icmp ne i32 %xor3107, 0
  br i1 %tobool3108, label %if.then3109, label %if.else3121

if.then3109:                                      ; preds = %cond.end3103
  %1357 = load i32, i32* %tmp, align 4
  %tobool3110 = icmp ne i32 %1357, 0
  br i1 %tobool3110, label %land.lhs.true3111, label %if.else3119

land.lhs.true3111:                                ; preds = %if.then3109
  %1358 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit3112 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1358, i32 0, i32 12
  %1359 = load i8, i8* %intuit3112, align 8
  %tobool3113 = trunc i8 %1359 to i1
  br i1 %tobool3113, label %if.then3118, label %lor.lhs.false3115

lor.lhs.false3115:                                ; preds = %land.lhs.true3111
  %1360 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call3116 = call i32 @S_regtry(%struct.regmatch_info* %1360, i8** %s.addr)
  %tobool3117 = icmp ne i32 %call3116, 0
  br i1 %tobool3117, label %if.then3118, label %if.else3119

if.then3118:                                      ; preds = %lor.lhs.false3115, %land.lhs.true3111
  br label %got_it

if.else3119:                                      ; preds = %lor.lhs.false3115, %if.then3109
  %1361 = load i32, i32* %doevery, align 4
  store i32 %1361, i32* %tmp, align 4
  br label %if.end3120

if.end3120:                                       ; preds = %if.else3119
  br label %if.end3122

if.else3121:                                      ; preds = %cond.end3103
  store i32 1, i32* %tmp, align 4
  br label %if.end3122

if.end3122:                                       ; preds = %if.else3121, %if.end3120
  %1362 = load i8*, i8** %s.addr, align 8
  %1363 = load i8, i8* %1362, align 1
  %idxprom3123 = zext i8 %1363 to i64
  %arrayidx3124 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom3123
  %1364 = load i8, i8* %arrayidx3124, align 1
  %conv3125 = zext i8 %1364 to i32
  %1365 = load i8*, i8** %s.addr, align 8
  %idx.ext3126 = sext i32 %conv3125 to i64
  %add.ptr3127 = getelementptr inbounds i8, i8* %1365, i64 %idx.ext3126
  store i8* %add.ptr3127, i8** %s.addr, align 8
  br label %while.cond2975

while.end3128:                                    ; preds = %while.cond2975
  br label %do.end3129

do.end3129:                                       ; preds = %while.end3128
  br label %sw.epilog3425

sw.bb3130:                                        ; preds = %if.else2809
  br label %do.body3131

do.body3131:                                      ; preds = %sw.bb3130
  br label %while.cond3132

while.cond3132:                                   ; preds = %if.end3234, %do.body3131
  %1366 = load i8*, i8** %s.addr, align 8
  %1367 = load i8*, i8** %strend.addr, align 8
  %cmp3133 = icmp ult i8* %1366, %1367
  br i1 %cmp3133, label %while.body3135, label %while.end3240

while.body3135:                                   ; preds = %while.cond3132
  %1368 = load i8, i8* %to_complement, align 1
  %tobool3136 = trunc i8 %1368 to i1
  %conv3137 = zext i1 %tobool3136 to i32
  %1369 = load i8*, i8** %s.addr, align 8
  %1370 = load i8, i8* %1369, align 1
  %conv3138 = sext i8 %1370 to i64
  %cmp3139 = icmp ult i64 %conv3138, 128
  br i1 %cmp3139, label %cond.true3141, label %cond.false3148

cond.true3141:                                    ; preds = %while.body3135
  %1371 = load i8*, i8** %s.addr, align 8
  %1372 = load i8, i8* %1371, align 1
  %idxprom3142 = zext i8 %1372 to i64
  %arrayidx3143 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom3142
  %1373 = load i32, i32* %arrayidx3143, align 4
  %and3144 = and i32 %1373, 4096
  %tobool3145 = icmp ne i32 %and3144, 0
  %1374 = zext i1 %tobool3145 to i64
  %cond3147 = select i1 %tobool3145, i32 1, i32 0
  br label %cond.end3215

cond.false3148:                                   ; preds = %while.body3135
  %1375 = load i8*, i8** %s.addr, align 8
  %1376 = load i8, i8* %1375, align 1
  %conv3149 = zext i8 %1376 to i32
  %cmp3150 = icmp sge i32 %conv3149, 196
  br i1 %cmp3150, label %cond.true3152, label %cond.false3212

cond.true3152:                                    ; preds = %cond.false3148
  %1377 = load i8*, i8** %s.addr, align 8
  %arrayidx3153 = getelementptr inbounds i8, i8* %1377, i64 0
  %1378 = load i8, i8* %arrayidx3153, align 1
  %conv3154 = zext i8 %1378 to i32
  %cmp3155 = icmp eq i32 239, %conv3154
  br i1 %cmp3155, label %cond.true3157, label %cond.false3209

cond.true3157:                                    ; preds = %cond.true3152
  %1379 = load i8*, i8** %s.addr, align 8
  %arrayidx3158 = getelementptr inbounds i8, i8* %1379, i64 1
  %1380 = load i8, i8* %arrayidx3158, align 1
  %conv3159 = zext i8 %1380 to i32
  %cmp3160 = icmp eq i32 188, %conv3159
  br i1 %cmp3160, label %cond.true3162, label %cond.false3187

cond.true3162:                                    ; preds = %cond.true3157
  %1381 = load i8*, i8** %s.addr, align 8
  %arrayidx3163 = getelementptr inbounds i8, i8* %1381, i64 2
  %1382 = load i8, i8* %arrayidx3163, align 1
  %conv3164 = zext i8 %1382 to i32
  %cmp3165 = icmp sle i32 144, %conv3164
  br i1 %cmp3165, label %land.lhs.true3167, label %lor.rhs3172

land.lhs.true3167:                                ; preds = %cond.true3162
  %1383 = load i8*, i8** %s.addr, align 8
  %arrayidx3168 = getelementptr inbounds i8, i8* %1383, i64 2
  %1384 = load i8, i8* %arrayidx3168, align 1
  %conv3169 = zext i8 %1384 to i32
  %cmp3170 = icmp sle i32 %conv3169, 153
  br i1 %cmp3170, label %lor.end3184, label %lor.rhs3172

lor.rhs3172:                                      ; preds = %land.lhs.true3167, %cond.true3162
  %1385 = load i8*, i8** %s.addr, align 8
  %arrayidx3173 = getelementptr inbounds i8, i8* %1385, i64 2
  %1386 = load i8, i8* %arrayidx3173, align 1
  %conv3174 = zext i8 %1386 to i32
  %cmp3175 = icmp sle i32 161, %conv3174
  br i1 %cmp3175, label %land.rhs3177, label %land.end3182

land.rhs3177:                                     ; preds = %lor.rhs3172
  %1387 = load i8*, i8** %s.addr, align 8
  %arrayidx3178 = getelementptr inbounds i8, i8* %1387, i64 2
  %1388 = load i8, i8* %arrayidx3178, align 1
  %conv3179 = zext i8 %1388 to i32
  %cmp3180 = icmp sle i32 %conv3179, 166
  br label %land.end3182

land.end3182:                                     ; preds = %land.rhs3177, %lor.rhs3172
  %1389 = phi i1 [ false, %lor.rhs3172 ], [ %cmp3180, %land.rhs3177 ]
  br label %lor.end3184

lor.end3184:                                      ; preds = %land.end3182, %land.lhs.true3167
  %1390 = phi i1 [ true, %land.lhs.true3167 ], [ %1389, %land.end3182 ]
  %1391 = zext i1 %1390 to i64
  %cond3186 = select i1 %1390, i32 3, i32 0
  br label %cond.end3207

cond.false3187:                                   ; preds = %cond.true3157
  %1392 = load i8*, i8** %s.addr, align 8
  %arrayidx3188 = getelementptr inbounds i8, i8* %1392, i64 1
  %1393 = load i8, i8* %arrayidx3188, align 1
  %conv3189 = zext i8 %1393 to i32
  %cmp3190 = icmp eq i32 189, %conv3189
  br i1 %cmp3190, label %land.rhs3192, label %land.end3204

land.rhs3192:                                     ; preds = %cond.false3187
  %1394 = load i8*, i8** %s.addr, align 8
  %arrayidx3193 = getelementptr inbounds i8, i8* %1394, i64 2
  %1395 = load i8, i8* %arrayidx3193, align 1
  %conv3194 = zext i8 %1395 to i32
  %cmp3195 = icmp sle i32 129, %conv3194
  br i1 %cmp3195, label %land.rhs3197, label %land.end3202

land.rhs3197:                                     ; preds = %land.rhs3192
  %1396 = load i8*, i8** %s.addr, align 8
  %arrayidx3198 = getelementptr inbounds i8, i8* %1396, i64 2
  %1397 = load i8, i8* %arrayidx3198, align 1
  %conv3199 = zext i8 %1397 to i32
  %cmp3200 = icmp sle i32 %conv3199, 134
  br label %land.end3202

land.end3202:                                     ; preds = %land.rhs3197, %land.rhs3192
  %1398 = phi i1 [ false, %land.rhs3192 ], [ %cmp3200, %land.rhs3197 ]
  br label %land.end3204

land.end3204:                                     ; preds = %land.end3202, %cond.false3187
  %1399 = phi i1 [ false, %cond.false3187 ], [ %1398, %land.end3202 ]
  %1400 = zext i1 %1399 to i64
  %cond3206 = select i1 %1399, i32 3, i32 0
  br label %cond.end3207

cond.end3207:                                     ; preds = %land.end3204, %lor.end3184
  %cond3208 = phi i32 [ %cond3186, %lor.end3184 ], [ %cond3206, %land.end3204 ]
  br label %cond.end3210

cond.false3209:                                   ; preds = %cond.true3152
  br label %cond.end3210

cond.end3210:                                     ; preds = %cond.false3209, %cond.end3207
  %cond3211 = phi i32 [ %cond3208, %cond.end3207 ], [ 0, %cond.false3209 ]
  br label %cond.end3213

cond.false3212:                                   ; preds = %cond.false3148
  br label %cond.end3213

cond.end3213:                                     ; preds = %cond.false3212, %cond.end3210
  %cond3214 = phi i32 [ %cond3211, %cond.end3210 ], [ 0, %cond.false3212 ]
  br label %cond.end3215

cond.end3215:                                     ; preds = %cond.end3213, %cond.true3141
  %cond3216 = phi i32 [ %cond3147, %cond.true3141 ], [ %cond3214, %cond.end3213 ]
  %tobool3217 = icmp ne i32 %cond3216, 0
  %1401 = zext i1 %tobool3217 to i64
  %cond3218 = select i1 %tobool3217, i32 1, i32 0
  %xor3219 = xor i32 %conv3137, %cond3218
  %tobool3220 = icmp ne i32 %xor3219, 0
  br i1 %tobool3220, label %if.then3221, label %if.else3233

if.then3221:                                      ; preds = %cond.end3215
  %1402 = load i32, i32* %tmp, align 4
  %tobool3222 = icmp ne i32 %1402, 0
  br i1 %tobool3222, label %land.lhs.true3223, label %if.else3231

land.lhs.true3223:                                ; preds = %if.then3221
  %1403 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit3224 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1403, i32 0, i32 12
  %1404 = load i8, i8* %intuit3224, align 8
  %tobool3225 = trunc i8 %1404 to i1
  br i1 %tobool3225, label %if.then3230, label %lor.lhs.false3227

lor.lhs.false3227:                                ; preds = %land.lhs.true3223
  %1405 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call3228 = call i32 @S_regtry(%struct.regmatch_info* %1405, i8** %s.addr)
  %tobool3229 = icmp ne i32 %call3228, 0
  br i1 %tobool3229, label %if.then3230, label %if.else3231

if.then3230:                                      ; preds = %lor.lhs.false3227, %land.lhs.true3223
  br label %got_it

if.else3231:                                      ; preds = %lor.lhs.false3227, %if.then3221
  %1406 = load i32, i32* %doevery, align 4
  store i32 %1406, i32* %tmp, align 4
  br label %if.end3232

if.end3232:                                       ; preds = %if.else3231
  br label %if.end3234

if.else3233:                                      ; preds = %cond.end3215
  store i32 1, i32* %tmp, align 4
  br label %if.end3234

if.end3234:                                       ; preds = %if.else3233, %if.end3232
  %1407 = load i8*, i8** %s.addr, align 8
  %1408 = load i8, i8* %1407, align 1
  %idxprom3235 = zext i8 %1408 to i64
  %arrayidx3236 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom3235
  %1409 = load i8, i8* %arrayidx3236, align 1
  %conv3237 = zext i8 %1409 to i32
  %1410 = load i8*, i8** %s.addr, align 8
  %idx.ext3238 = sext i32 %conv3237 to i64
  %add.ptr3239 = getelementptr inbounds i8, i8* %1410, i64 %idx.ext3238
  store i8* %add.ptr3239, i8** %s.addr, align 8
  br label %while.cond3132

while.end3240:                                    ; preds = %while.cond3132
  br label %do.end3241

do.end3241:                                       ; preds = %while.end3240
  br label %sw.epilog3425

sw.bb3242:                                        ; preds = %if.else2809
  br label %do.body3243

do.body3243:                                      ; preds = %sw.bb3242
  br label %while.cond3244

while.cond3244:                                   ; preds = %if.end3332, %do.body3243
  %1411 = load i8*, i8** %s.addr, align 8
  %1412 = load i8*, i8** %strend.addr, align 8
  %cmp3245 = icmp ult i8* %1411, %1412
  br i1 %cmp3245, label %while.body3247, label %while.end3338

while.body3247:                                   ; preds = %while.cond3244
  %1413 = load i8, i8* %to_complement, align 1
  %tobool3248 = trunc i8 %1413 to i1
  %conv3249 = zext i1 %tobool3248 to i32
  %1414 = load i8*, i8** %s.addr, align 8
  %1415 = load i8, i8* %1414, align 1
  %conv3250 = sext i8 %1415 to i64
  %cmp3251 = icmp ult i64 %conv3250, 128
  br i1 %cmp3251, label %cond.true3253, label %cond.false3260

cond.true3253:                                    ; preds = %while.body3247
  %1416 = load i8*, i8** %s.addr, align 8
  %1417 = load i8, i8* %1416, align 1
  %idxprom3254 = zext i8 %1417 to i64
  %arrayidx3255 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom3254
  %1418 = load i32, i32* %arrayidx3255, align 4
  %and3256 = and i32 %1418, 32768
  %tobool3257 = icmp ne i32 %and3256, 0
  %1419 = zext i1 %tobool3257 to i64
  %cond3259 = select i1 %tobool3257, i32 1, i32 0
  br label %cond.end3313

cond.false3260:                                   ; preds = %while.body3247
  %1420 = load i8*, i8** %s.addr, align 8
  %1421 = load i8, i8* %1420, align 1
  %conv3261 = zext i8 %1421 to i32
  %and3262 = and i32 %conv3261, 254
  %cmp3263 = icmp eq i32 %and3262, 194
  br i1 %cmp3263, label %cond.true3265, label %cond.false3292

cond.true3265:                                    ; preds = %cond.false3260
  %1422 = load i8*, i8** %s.addr, align 8
  %1423 = load i8, i8* %1422, align 1
  %conv3266 = sext i8 %1423 to i32
  %and3267 = and i32 %conv3266, 31
  %shl3268 = shl i32 %and3267, 6
  %1424 = load i8*, i8** %s.addr, align 8
  %add.ptr3269 = getelementptr inbounds i8, i8* %1424, i64 1
  %1425 = load i8, i8* %add.ptr3269, align 1
  %conv3270 = zext i8 %1425 to i32
  %and3271 = and i32 %conv3270, 63
  %or3272 = or i32 %shl3268, %and3271
  %conv3273 = sext i32 %or3272 to i64
  %and3274 = and i64 %conv3273, -256
  %tobool3275 = icmp ne i64 %and3274, 0
  br i1 %tobool3275, label %land.end3289, label %land.rhs3276

land.rhs3276:                                     ; preds = %cond.true3265
  %1426 = load i8*, i8** %s.addr, align 8
  %1427 = load i8, i8* %1426, align 1
  %conv3277 = sext i8 %1427 to i32
  %and3278 = and i32 %conv3277, 31
  %shl3279 = shl i32 %and3278, 6
  %1428 = load i8*, i8** %s.addr, align 8
  %add.ptr3280 = getelementptr inbounds i8, i8* %1428, i64 1
  %1429 = load i8, i8* %add.ptr3280, align 1
  %conv3281 = zext i8 %1429 to i32
  %and3282 = and i32 %conv3281, 63
  %or3283 = or i32 %shl3279, %and3282
  %conv3284 = trunc i32 %or3283 to i8
  %idxprom3285 = zext i8 %conv3284 to i64
  %arrayidx3286 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom3285
  %1430 = load i32, i32* %arrayidx3286, align 4
  %and3287 = and i32 %1430, 32768
  %tobool3288 = icmp ne i32 %and3287, 0
  br label %land.end3289

land.end3289:                                     ; preds = %land.rhs3276, %cond.true3265
  %1431 = phi i1 [ false, %cond.true3265 ], [ %tobool3288, %land.rhs3276 ]
  %1432 = zext i1 %1431 to i64
  %cond3291 = select i1 %1431, i32 1, i32 0
  br label %cond.end3311

cond.false3292:                                   ; preds = %cond.false3260
  %1433 = load i8*, i8** %s.addr, align 8
  %arrayidx3293 = getelementptr inbounds i8, i8* %1433, i64 0
  %1434 = load i8, i8* %arrayidx3293, align 1
  %conv3294 = zext i8 %1434 to i32
  %cmp3295 = icmp eq i32 226, %conv3294
  br i1 %cmp3295, label %land.lhs.true3297, label %land.end3308

land.lhs.true3297:                                ; preds = %cond.false3292
  %1435 = load i8*, i8** %s.addr, align 8
  %arrayidx3298 = getelementptr inbounds i8, i8* %1435, i64 1
  %1436 = load i8, i8* %arrayidx3298, align 1
  %conv3299 = zext i8 %1436 to i32
  %cmp3300 = icmp eq i32 128, %conv3299
  br i1 %cmp3300, label %land.rhs3302, label %land.end3308

land.rhs3302:                                     ; preds = %land.lhs.true3297
  %1437 = load i8*, i8** %s.addr, align 8
  %arrayidx3303 = getelementptr inbounds i8, i8* %1437, i64 2
  %1438 = load i8, i8* %arrayidx3303, align 1
  %conv3304 = zext i8 %1438 to i32
  %and3305 = and i32 %conv3304, 254
  %cmp3306 = icmp eq i32 %and3305, 168
  br label %land.end3308

land.end3308:                                     ; preds = %land.rhs3302, %land.lhs.true3297, %cond.false3292
  %1439 = phi i1 [ false, %land.lhs.true3297 ], [ false, %cond.false3292 ], [ %cmp3306, %land.rhs3302 ]
  %1440 = zext i1 %1439 to i64
  %cond3310 = select i1 %1439, i32 3, i32 0
  br label %cond.end3311

cond.end3311:                                     ; preds = %land.end3308, %land.end3289
  %cond3312 = phi i32 [ %cond3291, %land.end3289 ], [ %cond3310, %land.end3308 ]
  br label %cond.end3313

cond.end3313:                                     ; preds = %cond.end3311, %cond.true3253
  %cond3314 = phi i32 [ %cond3259, %cond.true3253 ], [ %cond3312, %cond.end3311 ]
  %tobool3315 = icmp ne i32 %cond3314, 0
  %1441 = zext i1 %tobool3315 to i64
  %cond3316 = select i1 %tobool3315, i32 1, i32 0
  %xor3317 = xor i32 %conv3249, %cond3316
  %tobool3318 = icmp ne i32 %xor3317, 0
  br i1 %tobool3318, label %if.then3319, label %if.else3331

if.then3319:                                      ; preds = %cond.end3313
  %1442 = load i32, i32* %tmp, align 4
  %tobool3320 = icmp ne i32 %1442, 0
  br i1 %tobool3320, label %land.lhs.true3321, label %if.else3329

land.lhs.true3321:                                ; preds = %if.then3319
  %1443 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit3322 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1443, i32 0, i32 12
  %1444 = load i8, i8* %intuit3322, align 8
  %tobool3323 = trunc i8 %1444 to i1
  br i1 %tobool3323, label %if.then3328, label %lor.lhs.false3325

lor.lhs.false3325:                                ; preds = %land.lhs.true3321
  %1445 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call3326 = call i32 @S_regtry(%struct.regmatch_info* %1445, i8** %s.addr)
  %tobool3327 = icmp ne i32 %call3326, 0
  br i1 %tobool3327, label %if.then3328, label %if.else3329

if.then3328:                                      ; preds = %lor.lhs.false3325, %land.lhs.true3321
  br label %got_it

if.else3329:                                      ; preds = %lor.lhs.false3325, %if.then3319
  %1446 = load i32, i32* %doevery, align 4
  store i32 %1446, i32* %tmp, align 4
  br label %if.end3330

if.end3330:                                       ; preds = %if.else3329
  br label %if.end3332

if.else3331:                                      ; preds = %cond.end3313
  store i32 1, i32* %tmp, align 4
  br label %if.end3332

if.end3332:                                       ; preds = %if.else3331, %if.end3330
  %1447 = load i8*, i8** %s.addr, align 8
  %1448 = load i8, i8* %1447, align 1
  %idxprom3333 = zext i8 %1448 to i64
  %arrayidx3334 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom3333
  %1449 = load i8, i8* %arrayidx3334, align 1
  %conv3335 = zext i8 %1449 to i32
  %1450 = load i8*, i8** %s.addr, align 8
  %idx.ext3336 = sext i32 %conv3335 to i64
  %add.ptr3337 = getelementptr inbounds i8, i8* %1450, i64 %idx.ext3336
  store i8* %add.ptr3337, i8** %s.addr, align 8
  br label %while.cond3244

while.end3338:                                    ; preds = %while.cond3244
  br label %do.end3339

do.end3339:                                       ; preds = %while.end3338
  br label %sw.epilog3425

sw.bb3340:                                        ; preds = %if.else2809
  br label %do.body3341

do.body3341:                                      ; preds = %sw.bb3340
  br label %while.cond3342

while.cond3342:                                   ; preds = %if.end3412, %do.body3341
  %1451 = load i8*, i8** %s.addr, align 8
  %1452 = load i8*, i8** %strend.addr, align 8
  %cmp3343 = icmp ult i8* %1451, %1452
  br i1 %cmp3343, label %while.body3345, label %while.end3418

while.body3345:                                   ; preds = %while.cond3342
  %1453 = load i8, i8* %to_complement, align 1
  %tobool3346 = trunc i8 %1453 to i1
  %conv3347 = zext i1 %tobool3346 to i32
  %1454 = load i8*, i8** %s.addr, align 8
  %1455 = load i8, i8* %1454, align 1
  %conv3348 = sext i8 %1455 to i64
  %cmp3349 = icmp ult i64 %conv3348, 128
  br i1 %cmp3349, label %cond.true3351, label %cond.false3358

cond.true3351:                                    ; preds = %while.body3345
  %1456 = load i8*, i8** %s.addr, align 8
  %1457 = load i8, i8* %1456, align 1
  %idxprom3352 = zext i8 %1457 to i64
  %arrayidx3353 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom3352
  %1458 = load i32, i32* %arrayidx3353, align 4
  %and3354 = and i32 %1458, 8192
  %tobool3355 = icmp ne i32 %and3354, 0
  %1459 = zext i1 %tobool3355 to i64
  %cond3357 = select i1 %tobool3355, i32 1, i32 0
  br label %cond.end3393

cond.false3358:                                   ; preds = %while.body3345
  %1460 = load i8*, i8** %s.addr, align 8
  %1461 = load i8, i8* %1460, align 1
  %conv3359 = zext i8 %1461 to i32
  %and3360 = and i32 %conv3359, 254
  %cmp3361 = icmp eq i32 %and3360, 194
  br i1 %cmp3361, label %cond.true3363, label %cond.false3390

cond.true3363:                                    ; preds = %cond.false3358
  %1462 = load i8*, i8** %s.addr, align 8
  %1463 = load i8, i8* %1462, align 1
  %conv3364 = sext i8 %1463 to i32
  %and3365 = and i32 %conv3364, 31
  %shl3366 = shl i32 %and3365, 6
  %1464 = load i8*, i8** %s.addr, align 8
  %add.ptr3367 = getelementptr inbounds i8, i8* %1464, i64 1
  %1465 = load i8, i8* %add.ptr3367, align 1
  %conv3368 = zext i8 %1465 to i32
  %and3369 = and i32 %conv3368, 63
  %or3370 = or i32 %shl3366, %and3369
  %conv3371 = sext i32 %or3370 to i64
  %and3372 = and i64 %conv3371, -256
  %tobool3373 = icmp ne i64 %and3372, 0
  br i1 %tobool3373, label %land.end3387, label %land.rhs3374

land.rhs3374:                                     ; preds = %cond.true3363
  %1466 = load i8*, i8** %s.addr, align 8
  %1467 = load i8, i8* %1466, align 1
  %conv3375 = sext i8 %1467 to i32
  %and3376 = and i32 %conv3375, 31
  %shl3377 = shl i32 %and3376, 6
  %1468 = load i8*, i8** %s.addr, align 8
  %add.ptr3378 = getelementptr inbounds i8, i8* %1468, i64 1
  %1469 = load i8, i8* %add.ptr3378, align 1
  %conv3379 = zext i8 %1469 to i32
  %and3380 = and i32 %conv3379, 63
  %or3381 = or i32 %shl3377, %and3380
  %conv3382 = trunc i32 %or3381 to i8
  %idxprom3383 = zext i8 %conv3382 to i64
  %arrayidx3384 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom3383
  %1470 = load i32, i32* %arrayidx3384, align 4
  %and3385 = and i32 %1470, 8192
  %tobool3386 = icmp ne i32 %and3385, 0
  br label %land.end3387

land.end3387:                                     ; preds = %land.rhs3374, %cond.true3363
  %1471 = phi i1 [ false, %cond.true3363 ], [ %tobool3386, %land.rhs3374 ]
  %1472 = zext i1 %1471 to i64
  %cond3389 = select i1 %1471, i32 1, i32 0
  br label %cond.end3391

cond.false3390:                                   ; preds = %cond.false3358
  br label %cond.end3391

cond.end3391:                                     ; preds = %cond.false3390, %land.end3387
  %cond3392 = phi i32 [ %cond3389, %land.end3387 ], [ 0, %cond.false3390 ]
  br label %cond.end3393

cond.end3393:                                     ; preds = %cond.end3391, %cond.true3351
  %cond3394 = phi i32 [ %cond3357, %cond.true3351 ], [ %cond3392, %cond.end3391 ]
  %tobool3395 = icmp ne i32 %cond3394, 0
  %1473 = zext i1 %tobool3395 to i64
  %cond3396 = select i1 %tobool3395, i32 1, i32 0
  %xor3397 = xor i32 %conv3347, %cond3396
  %tobool3398 = icmp ne i32 %xor3397, 0
  br i1 %tobool3398, label %if.then3399, label %if.else3411

if.then3399:                                      ; preds = %cond.end3393
  %1474 = load i32, i32* %tmp, align 4
  %tobool3400 = icmp ne i32 %1474, 0
  br i1 %tobool3400, label %land.lhs.true3401, label %if.else3409

land.lhs.true3401:                                ; preds = %if.then3399
  %1475 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit3402 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1475, i32 0, i32 12
  %1476 = load i8, i8* %intuit3402, align 8
  %tobool3403 = trunc i8 %1476 to i1
  br i1 %tobool3403, label %if.then3408, label %lor.lhs.false3405

lor.lhs.false3405:                                ; preds = %land.lhs.true3401
  %1477 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call3406 = call i32 @S_regtry(%struct.regmatch_info* %1477, i8** %s.addr)
  %tobool3407 = icmp ne i32 %call3406, 0
  br i1 %tobool3407, label %if.then3408, label %if.else3409

if.then3408:                                      ; preds = %lor.lhs.false3405, %land.lhs.true3401
  br label %got_it

if.else3409:                                      ; preds = %lor.lhs.false3405, %if.then3399
  %1478 = load i32, i32* %doevery, align 4
  store i32 %1478, i32* %tmp, align 4
  br label %if.end3410

if.end3410:                                       ; preds = %if.else3409
  br label %if.end3412

if.else3411:                                      ; preds = %cond.end3393
  store i32 1, i32* %tmp, align 4
  br label %if.end3412

if.end3412:                                       ; preds = %if.else3411, %if.end3410
  %1479 = load i8*, i8** %s.addr, align 8
  %1480 = load i8, i8* %1479, align 1
  %idxprom3413 = zext i8 %1480 to i64
  %arrayidx3414 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom3413
  %1481 = load i8, i8* %arrayidx3414, align 1
  %conv3415 = zext i8 %1481 to i32
  %1482 = load i8*, i8** %s.addr, align 8
  %idx.ext3416 = sext i32 %conv3415 to i64
  %add.ptr3417 = getelementptr inbounds i8, i8* %1482, i64 %idx.ext3416
  store i8* %add.ptr3417, i8** %s.addr, align 8
  br label %while.cond3342

while.end3418:                                    ; preds = %while.cond3342
  br label %do.end3419

do.end3419:                                       ; preds = %while.end3418
  br label %sw.epilog3425

sw.default:                                       ; preds = %if.else2809
  %1483 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %type3420 = getelementptr inbounds %struct.regnode, %struct.regnode* %1483, i32 0, i32 1
  %1484 = load i8, i8* %type3420, align 1
  %conv3421 = zext i8 %1484 to i32
  %1485 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %type3422 = getelementptr inbounds %struct.regnode, %struct.regnode* %1485, i32 0, i32 1
  %1486 = load i8, i8* %type3422, align 1
  %idxprom3423 = zext i8 %1486 to i64
  %arrayidx3424 = getelementptr inbounds [0 x i8*], [0 x i8*]* @PL_reg_name, i64 0, i64 %idxprom3423
  %1487 = load i8*, i8** %arrayidx3424, align 8
  %1488 = load i32, i32* %classnum, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.5, i64 0, i64 0), i32 %conv3421, i8* %1487, i32 %1488)
  br label %sw.epilog3425

sw.epilog3425:                                    ; preds = %sw.default, %do.end3419, %do.end3339, %do.end3241, %do.end3129, %do.end2972
  br label %if.end3426

if.end3426:                                       ; preds = %sw.epilog3425, %while.end2808
  br label %if.end3427

if.end3427:                                       ; preds = %if.end3426, %do.end2717
  br label %sw.epilog4014

found_above_latin1:                               ; preds = %if.then2731
  %1489 = load i32, i32* %classnum, align 4
  %idxprom3428 = zext i32 %1489 to i64
  %arrayidx3429 = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom3428
  %1490 = load %struct.sv*, %struct.sv** %arrayidx3429, align 8
  %tobool3430 = icmp ne %struct.sv* %1490, null
  br i1 %tobool3430, label %if.end3438, label %if.then3431

if.then3431:                                      ; preds = %found_above_latin1
  store i8 4, i8* %flags3432, align 1
  %1491 = load i32, i32* %classnum, align 4
  %idxprom3433 = zext i32 %1491 to i64
  %arrayidx3434 = getelementptr inbounds [16 x %struct.sv*], [16 x %struct.sv*]* @PL_XPosix_ptrs, i64 0, i64 %idxprom3433
  %1492 = load %struct.sv*, %struct.sv** %arrayidx3434, align 8
  %call3435 = call %struct.sv* @Perl__core_swash_init(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %struct.sv* @PL_sv_undef, i32 1, i32 0, %struct.sv* %1492, i8* %flags3432)
  %1493 = load i32, i32* %classnum, align 4
  %idxprom3436 = zext i32 %1493 to i64
  %arrayidx3437 = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom3436
  store %struct.sv* %call3435, %struct.sv** %arrayidx3437, align 8
  br label %if.end3438

if.end3438:                                       ; preds = %if.then3431, %found_above_latin1
  br label %do.body3439

do.body3439:                                      ; preds = %if.end3438
  br label %while.cond3440

while.cond3440:                                   ; preds = %if.end3517, %do.body3439
  %1494 = load i8*, i8** %s.addr, align 8
  %1495 = load i8*, i8** %strend.addr, align 8
  %cmp3441 = icmp ult i8* %1494, %1495
  br i1 %cmp3441, label %while.body3443, label %while.end3523

while.body3443:                                   ; preds = %while.cond3440
  %1496 = load i8, i8* %to_complement, align 1
  %tobool3444 = trunc i8 %1496 to i1
  %conv3445 = zext i1 %tobool3444 to i32
  %1497 = load i8*, i8** %s.addr, align 8
  %1498 = load i8, i8* %1497, align 1
  %conv3446 = sext i8 %1498 to i64
  %cmp3447 = icmp ult i64 %conv3446, 128
  br i1 %cmp3447, label %cond.true3449, label %cond.false3458

cond.true3449:                                    ; preds = %while.body3443
  %1499 = load i8*, i8** %s.addr, align 8
  %1500 = load i8, i8* %1499, align 1
  %idxprom3450 = zext i8 %1500 to i64
  %arrayidx3451 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom3450
  %1501 = load i32, i32* %arrayidx3451, align 4
  %1502 = load i32, i32* %classnum, align 4
  %shl3452 = shl i32 1, %1502
  %and3453 = and i32 %1501, %shl3452
  %tobool3454 = icmp ne i32 %and3453, 0
  %1503 = zext i1 %tobool3454 to i64
  %cond3456 = select i1 %tobool3454, i32 1, i32 0
  %conv3457 = sext i32 %cond3456 to i64
  br label %cond.end3498

cond.false3458:                                   ; preds = %while.body3443
  %1504 = load i8*, i8** %s.addr, align 8
  %1505 = load i8, i8* %1504, align 1
  %conv3459 = zext i8 %1505 to i32
  %and3460 = and i32 %conv3459, 254
  %cmp3461 = icmp eq i32 %and3460, 194
  br i1 %cmp3461, label %cond.true3463, label %cond.false3492

cond.true3463:                                    ; preds = %cond.false3458
  %1506 = load i8*, i8** %s.addr, align 8
  %1507 = load i8, i8* %1506, align 1
  %conv3464 = sext i8 %1507 to i32
  %and3465 = and i32 %conv3464, 31
  %shl3466 = shl i32 %and3465, 6
  %1508 = load i8*, i8** %s.addr, align 8
  %add.ptr3467 = getelementptr inbounds i8, i8* %1508, i64 1
  %1509 = load i8, i8* %add.ptr3467, align 1
  %conv3468 = zext i8 %1509 to i32
  %and3469 = and i32 %conv3468, 63
  %or3470 = or i32 %shl3466, %and3469
  %conv3471 = sext i32 %or3470 to i64
  %and3472 = and i64 %conv3471, -256
  %tobool3473 = icmp ne i64 %and3472, 0
  br i1 %tobool3473, label %land.end3488, label %land.rhs3474

land.rhs3474:                                     ; preds = %cond.true3463
  %1510 = load i8*, i8** %s.addr, align 8
  %1511 = load i8, i8* %1510, align 1
  %conv3475 = sext i8 %1511 to i32
  %and3476 = and i32 %conv3475, 31
  %shl3477 = shl i32 %and3476, 6
  %1512 = load i8*, i8** %s.addr, align 8
  %add.ptr3478 = getelementptr inbounds i8, i8* %1512, i64 1
  %1513 = load i8, i8* %add.ptr3478, align 1
  %conv3479 = zext i8 %1513 to i32
  %and3480 = and i32 %conv3479, 63
  %or3481 = or i32 %shl3477, %and3480
  %conv3482 = trunc i32 %or3481 to i8
  %idxprom3483 = zext i8 %conv3482 to i64
  %arrayidx3484 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom3483
  %1514 = load i32, i32* %arrayidx3484, align 4
  %1515 = load i32, i32* %classnum, align 4
  %shl3485 = shl i32 1, %1515
  %and3486 = and i32 %1514, %shl3485
  %tobool3487 = icmp ne i32 %and3486, 0
  br label %land.end3488

land.end3488:                                     ; preds = %land.rhs3474, %cond.true3463
  %1516 = phi i1 [ false, %cond.true3463 ], [ %tobool3487, %land.rhs3474 ]
  %1517 = zext i1 %1516 to i64
  %cond3490 = select i1 %1516, i32 1, i32 0
  %conv3491 = sext i32 %cond3490 to i64
  br label %cond.end3496

cond.false3492:                                   ; preds = %cond.false3458
  %1518 = load i32, i32* %classnum, align 4
  %idxprom3493 = zext i32 %1518 to i64
  %arrayidx3494 = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom3493
  %1519 = load %struct.sv*, %struct.sv** %arrayidx3494, align 8
  %1520 = load i8*, i8** %s.addr, align 8
  %call3495 = call i64 @Perl_swash_fetch(%struct.sv* %1519, i8* %1520, i1 zeroext true)
  br label %cond.end3496

cond.end3496:                                     ; preds = %cond.false3492, %land.end3488
  %cond3497 = phi i64 [ %conv3491, %land.end3488 ], [ %call3495, %cond.false3492 ]
  br label %cond.end3498

cond.end3498:                                     ; preds = %cond.end3496, %cond.true3449
  %cond3499 = phi i64 [ %conv3457, %cond.true3449 ], [ %cond3497, %cond.end3496 ]
  %tobool3500 = icmp ne i64 %cond3499, 0
  %1521 = zext i1 %tobool3500 to i64
  %cond3501 = select i1 %tobool3500, i32 1, i32 0
  %xor3502 = xor i32 %conv3445, %cond3501
  %tobool3503 = icmp ne i32 %xor3502, 0
  br i1 %tobool3503, label %if.then3504, label %if.else3516

if.then3504:                                      ; preds = %cond.end3498
  %1522 = load i32, i32* %tmp, align 4
  %tobool3505 = icmp ne i32 %1522, 0
  br i1 %tobool3505, label %land.lhs.true3506, label %if.else3514

land.lhs.true3506:                                ; preds = %if.then3504
  %1523 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit3507 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1523, i32 0, i32 12
  %1524 = load i8, i8* %intuit3507, align 8
  %tobool3508 = trunc i8 %1524 to i1
  br i1 %tobool3508, label %if.then3513, label %lor.lhs.false3510

lor.lhs.false3510:                                ; preds = %land.lhs.true3506
  %1525 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call3511 = call i32 @S_regtry(%struct.regmatch_info* %1525, i8** %s.addr)
  %tobool3512 = icmp ne i32 %call3511, 0
  br i1 %tobool3512, label %if.then3513, label %if.else3514

if.then3513:                                      ; preds = %lor.lhs.false3510, %land.lhs.true3506
  br label %got_it

if.else3514:                                      ; preds = %lor.lhs.false3510, %if.then3504
  %1526 = load i32, i32* %doevery, align 4
  store i32 %1526, i32* %tmp, align 4
  br label %if.end3515

if.end3515:                                       ; preds = %if.else3514
  br label %if.end3517

if.else3516:                                      ; preds = %cond.end3498
  store i32 1, i32* %tmp, align 4
  br label %if.end3517

if.end3517:                                       ; preds = %if.else3516, %if.end3515
  %1527 = load i8*, i8** %s.addr, align 8
  %1528 = load i8, i8* %1527, align 1
  %idxprom3518 = zext i8 %1528 to i64
  %arrayidx3519 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom3518
  %1529 = load i8, i8* %arrayidx3519, align 1
  %conv3520 = zext i8 %1529 to i32
  %1530 = load i8*, i8** %s.addr, align 8
  %idx.ext3521 = sext i32 %conv3520 to i64
  %add.ptr3522 = getelementptr inbounds i8, i8* %1530, i64 %idx.ext3521
  store i8* %add.ptr3522, i8** %s.addr, align 8
  br label %while.cond3440

while.end3523:                                    ; preds = %while.cond3440
  br label %do.end3524

do.end3524:                                       ; preds = %while.end3523
  br label %sw.epilog4014

sw.bb3525:                                        ; preds = %entry, %entry
  %1531 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags3526 = getelementptr inbounds %struct.regnode, %struct.regnode* %1531, i32 0, i32 0
  %1532 = load i8, i8* %flags3526, align 2
  %conv3527 = zext i8 %1532 to i32
  %cmp3528 = icmp eq i32 %conv3527, 31
  br i1 %cmp3528, label %cond.true3530, label %cond.false3534

cond.true3530:                                    ; preds = %sw.bb3525
  %1533 = load i8, i8* %utf8_target, align 1
  %tobool3531 = trunc i8 %1533 to i1
  %1534 = zext i1 %tobool3531 to i64
  %cond3533 = select i1 %tobool3531, i32 1, i32 0
  br label %cond.end3568

cond.false3534:                                   ; preds = %sw.bb3525
  %1535 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags3535 = getelementptr inbounds %struct.regnode, %struct.regnode* %1535, i32 0, i32 0
  %1536 = load i8, i8* %flags3535, align 2
  %conv3536 = zext i8 %1536 to i32
  %cmp3537 = icmp eq i32 %conv3536, 32
  br i1 %cmp3537, label %cond.true3539, label %cond.false3543

cond.true3539:                                    ; preds = %cond.false3534
  %1537 = load i8, i8* %utf8_target, align 1
  %tobool3540 = trunc i8 %1537 to i1
  %1538 = zext i1 %tobool3540 to i64
  %cond3542 = select i1 %tobool3540, i32 6, i32 0
  br label %cond.end3566

cond.false3543:                                   ; preds = %cond.false3534
  %1539 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags3544 = getelementptr inbounds %struct.regnode, %struct.regnode* %1539, i32 0, i32 0
  %1540 = load i8, i8* %flags3544, align 2
  %conv3545 = zext i8 %1540 to i32
  %cmp3546 = icmp eq i32 %conv3545, 36
  br i1 %cmp3546, label %cond.true3548, label %cond.false3552

cond.true3548:                                    ; preds = %cond.false3543
  %1541 = load i8, i8* %utf8_target, align 1
  %tobool3549 = trunc i8 %1541 to i1
  %1542 = zext i1 %tobool3549 to i64
  %cond3551 = select i1 %tobool3549, i32 4, i32 5
  br label %cond.end3564

cond.false3552:                                   ; preds = %cond.false3543
  %1543 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %flags3553 = getelementptr inbounds %struct.regnode, %struct.regnode* %1543, i32 0, i32 0
  %1544 = load i8, i8* %flags3553, align 2
  %conv3554 = zext i8 %1544 to i32
  %cmp3555 = icmp eq i32 %conv3554, 38
  br i1 %cmp3555, label %cond.true3557, label %cond.false3558

cond.true3557:                                    ; preds = %cond.false3552
  br label %cond.end3562

cond.false3558:                                   ; preds = %cond.false3552
  %1545 = load i8, i8* %utf8_target, align 1
  %tobool3559 = trunc i8 %1545 to i1
  %1546 = zext i1 %tobool3559 to i64
  %cond3561 = select i1 %tobool3559, i32 2, i32 3
  br label %cond.end3562

cond.end3562:                                     ; preds = %cond.false3558, %cond.true3557
  %cond3563 = phi i32 [ 7, %cond.true3557 ], [ %cond3561, %cond.false3558 ]
  br label %cond.end3564

cond.end3564:                                     ; preds = %cond.end3562, %cond.true3548
  %cond3565 = phi i32 [ %cond3551, %cond.true3548 ], [ %cond3563, %cond.end3562 ]
  br label %cond.end3566

cond.end3566:                                     ; preds = %cond.end3564, %cond.true3539
  %cond3567 = phi i32 [ %cond3542, %cond.true3539 ], [ %cond3565, %cond.end3564 ]
  br label %cond.end3568

cond.end3568:                                     ; preds = %cond.end3566, %cond.true3530
  %cond3569 = phi i32 [ %cond3533, %cond.true3530 ], [ %cond3567, %cond.end3566 ]
  store i32 %cond3569, i32* %trie_type, align 4
  %1547 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %data = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %1547, i32 0, i32 3
  %1548 = load %struct.reg_data*, %struct.reg_data** %data, align 8
  %data3570 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %1548, i32 0, i32 2
  %1549 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %1550 = bitcast %struct.regnode* %1549 to %struct.regnode_1*
  %arg1 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1550, i32 0, i32 3
  %1551 = load i32, i32* %arg1, align 4
  %idxprom3571 = zext i32 %1551 to i64
  %arrayidx3572 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data3570, i64 0, i64 %idxprom3571
  %1552 = load i8*, i8** %arrayidx3572, align 8
  %1553 = bitcast i8* %1552 to %struct._reg_ac_data*
  store %struct._reg_ac_data* %1553, %struct._reg_ac_data** %aho, align 8
  %1554 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %data3573 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %1554, i32 0, i32 3
  %1555 = load %struct.reg_data*, %struct.reg_data** %data3573, align 8
  %data3574 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %1555, i32 0, i32 2
  %1556 = load %struct._reg_ac_data*, %struct._reg_ac_data** %aho, align 8
  %trie3575 = getelementptr inbounds %struct._reg_ac_data, %struct._reg_ac_data* %1556, i32 0, i32 1
  %1557 = load i32, i32* %trie3575, align 4
  %idxprom3576 = zext i32 %1557 to i64
  %arrayidx3577 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data3574, i64 0, i64 %idxprom3576
  %1558 = load i8*, i8** %arrayidx3577, align 8
  %1559 = bitcast i8* %1558 to %struct._reg_trie_data*
  store %struct._reg_trie_data* %1559, %struct._reg_trie_data** %trie, align 8
  %1560 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %data3578 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %1560, i32 0, i32 3
  %1561 = load %struct.reg_data*, %struct.reg_data** %data3578, align 8
  %data3579 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %1561, i32 0, i32 2
  %1562 = load %struct._reg_ac_data*, %struct._reg_ac_data** %aho, align 8
  %trie3580 = getelementptr inbounds %struct._reg_ac_data, %struct._reg_ac_data* %1562, i32 0, i32 1
  %1563 = load i32, i32* %trie3580, align 4
  %add3581 = add i32 %1563, 1
  %idxprom3582 = zext i32 %add3581 to i64
  %arrayidx3583 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data3579, i64 0, i64 %idxprom3582
  %1564 = load i8*, i8** %arrayidx3583, align 8
  %1565 = bitcast i8* %1564 to %struct.hv*
  store %struct.hv* %1565, %struct.hv** %widecharmap, align 8
  %1566 = load i8*, i8** %strend.addr, align 8
  %1567 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %minlen = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1567, i32 0, i32 10
  %1568 = load i64, i64* %minlen, align 8
  %idx.neg = sub i64 0, %1568
  %add.ptr3584 = getelementptr inbounds i8, i8* %1566, i64 %idx.neg
  store i8* %add.ptr3584, i8** %last_start, align 8
  %1569 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %maxlen3585 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1569, i32 0, i32 11
  %1570 = load i64, i64* %maxlen3585, align 8
  store i64 %1570, i64* %maxlen, align 8
  store i8* null, i8** %bitmap3586, align 8
  call void @Perl_push_scope()
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %1571 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %1571, i64* @PL_tmps_floor, align 8
  %1572 = load i64, i64* %maxlen, align 8
  %mul = mul i64 %1572, 8
  %call3587 = call %struct.sv* @Perl_newSV(i64 %mul)
  store %struct.sv* %call3587, %struct.sv** %sv_points, align 8
  br label %do.body3588

do.body3588:                                      ; preds = %cond.end3568
  %1573 = load i64, i64* %maxlen, align 8
  %mul3589 = mul i64 %1573, 8
  %1574 = load %struct.sv*, %struct.sv** %sv_points, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %1574, i32 0, i32 0
  %1575 = load i8*, i8** %sv_any, align 8
  %1576 = bitcast i8* %1575 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %1576, i32 0, i32 2
  store i64 %mul3589, i64* %xpv_cur, align 8
  br label %do.end3590

do.end3590:                                       ; preds = %do.body3588
  %1577 = load %struct.sv*, %struct.sv** %sv_points, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %1577, i32 0, i32 2
  %1578 = load i32, i32* %sv_flags, align 4
  %or3591 = or i32 %1578, 17408
  store i32 %or3591, i32* %sv_flags, align 4
  %1579 = load %struct.sv*, %struct.sv** %sv_points, align 8
  %call3592 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %1579)
  %1580 = load %struct.sv*, %struct.sv** %sv_points, align 8
  %sv_flags3593 = getelementptr inbounds %struct.sv, %struct.sv* %1580, i32 0, i32 2
  %1581 = load i32, i32* %sv_flags3593, align 4
  %and3594 = and i32 %1581, 2098176
  %cmp3595 = icmp eq i32 %and3594, 1024
  br i1 %cmp3595, label %cond.true3597, label %cond.false3598

cond.true3597:                                    ; preds = %do.end3590
  %1582 = load %struct.sv*, %struct.sv** %sv_points, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %1582, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %1583 = load i8*, i8** %svu_pv, align 8
  br label %cond.end3600

cond.false3598:                                   ; preds = %do.end3590
  %1584 = load %struct.sv*, %struct.sv** %sv_points, align 8
  %call3599 = call i8* @Perl_sv_2pv_flags(%struct.sv* %1584, i64* null, i32 2)
  br label %cond.end3600

cond.end3600:                                     ; preds = %cond.false3598, %cond.true3597
  %cond3601 = phi i8* [ %1583, %cond.true3597 ], [ %call3599, %cond.false3598 ]
  %1585 = bitcast i8* %cond3601 to i8**
  store i8** %1585, i8*** %points, align 8
  %1586 = load i32, i32* %trie_type, align 4
  %cmp3602 = icmp ne i32 %1586, 2
  br i1 %cmp3602, label %land.lhs.true3604, label %if.end3621

land.lhs.true3604:                                ; preds = %cond.end3600
  %1587 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %bitmap3605 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1587, i32 0, i32 5
  %1588 = load i8*, i8** %bitmap3605, align 8
  %tobool3606 = icmp ne i8* %1588, null
  br i1 %tobool3606, label %if.then3612, label %lor.lhs.false3607

lor.lhs.false3607:                                ; preds = %land.lhs.true3604
  %1589 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %type3608 = getelementptr inbounds %struct.regnode, %struct.regnode* %1589, i32 0, i32 1
  %1590 = load i8, i8* %type3608, align 1
  %conv3609 = zext i8 %1590 to i32
  %cmp3610 = icmp eq i32 %conv3609, 75
  br i1 %cmp3610, label %if.then3612, label %if.end3621

if.then3612:                                      ; preds = %lor.lhs.false3607, %land.lhs.true3604
  %1591 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %bitmap3613 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1591, i32 0, i32 5
  %1592 = load i8*, i8** %bitmap3613, align 8
  %tobool3614 = icmp ne i8* %1592, null
  br i1 %tobool3614, label %if.then3615, label %if.else3617

if.then3615:                                      ; preds = %if.then3612
  %1593 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %bitmap3616 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1593, i32 0, i32 5
  %1594 = load i8*, i8** %bitmap3616, align 8
  store i8* %1594, i8** %bitmap3586, align 8
  br label %if.end3620

if.else3617:                                      ; preds = %if.then3612
  %1595 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %1596 = bitcast %struct.regnode* %1595 to %struct.regnode_charclass*
  %bitmap3618 = getelementptr inbounds %struct.regnode_charclass, %struct.regnode_charclass* %1596, i32 0, i32 4
  %arraydecay3619 = getelementptr inbounds [32 x i8], [32 x i8]* %bitmap3618, i64 0, i64 0
  store i8* %arraydecay3619, i8** %bitmap3586, align 8
  br label %if.end3620

if.end3620:                                       ; preds = %if.else3617, %if.then3615
  br label %if.end3621

if.end3621:                                       ; preds = %if.end3620, %lor.lhs.false3607, %cond.end3600
  br label %while.cond3622

while.cond3622:                                   ; preds = %if.end4005, %if.end3621
  %1597 = load i8*, i8** %s.addr, align 8
  %1598 = load i8*, i8** %last_start, align 8
  %cmp3623 = icmp ule i8* %1597, %1598
  br i1 %cmp3623, label %while.body3625, label %while.end4006

while.body3625:                                   ; preds = %while.cond3622
  %call3626 = call zeroext i1 @Perl_ckwarn(i32 44)
  %1599 = zext i1 %call3626 to i64
  %cond3628 = select i1 %call3626, i32 0, i32 1
  store i32 %cond3628, i32* %uniflags, align 4
  %1600 = load i8*, i8** %s.addr, align 8
  store i8* %1600, i8** %uc, align 8
  store i16 0, i16* %charid, align 2
  store i32 1, i32* %base, align 4
  store i32 1, i32* %state, align 4
  store i64 0, i64* %uvc, align 8
  store i64 0, i64* %len, align 8
  store i64 0, i64* %foldlen, align 8
  store i8* null, i8** %uscan, align 8
  store i8* null, i8** %leftmost, align 8
  store i32 0, i32* %pointpos, align 4
  br label %while.cond3629

while.cond3629:                                   ; preds = %if.end3952, %while.body3625
  %1601 = load i32, i32* %state, align 4
  %tobool3630 = icmp ne i32 %1601, 0
  br i1 %tobool3630, label %land.rhs3631, label %land.end3634

land.rhs3631:                                     ; preds = %while.cond3629
  %1602 = load i8*, i8** %uc, align 8
  %1603 = load i8*, i8** %strend.addr, align 8
  %cmp3632 = icmp ule i8* %1602, %1603
  br label %land.end3634

land.end3634:                                     ; preds = %land.rhs3631, %while.cond3629
  %1604 = phi i1 [ false, %while.cond3629 ], [ %cmp3632, %land.rhs3631 ]
  br i1 %1604, label %while.body3636, label %while.end3953

while.body3636:                                   ; preds = %land.end3634
  store i32 0, i32* %failed, align 4
  %1605 = load %struct._reg_ac_data*, %struct._reg_ac_data** %aho, align 8
  %states = getelementptr inbounds %struct._reg_ac_data, %struct._reg_ac_data* %1605, i32 0, i32 3
  %1606 = load %struct._reg_trie_state*, %struct._reg_trie_state** %states, align 8
  %1607 = load i32, i32* %state, align 4
  %idxprom3637 = zext i32 %1607 to i64
  %arrayidx3638 = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %1606, i64 %idxprom3637
  %wordnum = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %arrayidx3638, i32 0, i32 0
  %1608 = load i16, i16* %wordnum, align 8
  %conv3639 = zext i16 %1608 to i32
  store i32 %conv3639, i32* %word, align 4
  %1609 = load i32, i32* %state, align 4
  %cmp3640 = icmp eq i32 %1609, 1
  br i1 %cmp3640, label %if.then3642, label %if.end3702

if.then3642:                                      ; preds = %while.body3636
  %1610 = load i8*, i8** %bitmap3586, align 8
  %tobool3643 = icmp ne i8* %1610, null
  br i1 %tobool3643, label %if.then3644, label %if.end3697

if.then3644:                                      ; preds = %if.then3642
  %1611 = load i8, i8* %utf8_target, align 1
  %tobool3645 = trunc i8 %1611 to i1
  br i1 %tobool3645, label %if.then3646, label %if.else3673

if.then3646:                                      ; preds = %if.then3644
  br label %while.cond3647

while.cond3647:                                   ; preds = %while.body3666, %if.then3646
  %1612 = load i8*, i8** %uc, align 8
  %1613 = load i8*, i8** %last_start, align 8
  %cmp3648 = icmp ule i8* %1612, %1613
  br i1 %cmp3648, label %land.rhs3650, label %land.end3664

land.rhs3650:                                     ; preds = %while.cond3647
  %1614 = load i8*, i8** %bitmap3586, align 8
  %1615 = load i8*, i8** %uc, align 8
  %1616 = load i8, i8* %1615, align 1
  %conv3651 = zext i8 %1616 to i32
  %shr3652 = ashr i32 %conv3651, 3
  %and3653 = and i32 %shr3652, 31
  %idxprom3654 = sext i32 %and3653 to i64
  %arrayidx3655 = getelementptr inbounds i8, i8* %1614, i64 %idxprom3654
  %1617 = load i8, i8* %arrayidx3655, align 1
  %conv3656 = zext i8 %1617 to i32
  %1618 = load i8*, i8** %uc, align 8
  %1619 = load i8, i8* %1618, align 1
  %conv3657 = zext i8 %1619 to i32
  %and3658 = and i32 %conv3657, 7
  %shl3659 = shl i32 1, %and3658
  %and3660 = and i32 %conv3656, %shl3659
  %tobool3661 = icmp ne i32 %and3660, 0
  %lnot3662 = xor i1 %tobool3661, true
  br label %land.end3664

land.end3664:                                     ; preds = %land.rhs3650, %while.cond3647
  %1620 = phi i1 [ false, %while.cond3647 ], [ %lnot3662, %land.rhs3650 ]
  br i1 %1620, label %while.body3666, label %while.end3672

while.body3666:                                   ; preds = %land.end3664
  %1621 = load i8*, i8** %uc, align 8
  %1622 = load i8, i8* %1621, align 1
  %idxprom3667 = zext i8 %1622 to i64
  %arrayidx3668 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom3667
  %1623 = load i8, i8* %arrayidx3668, align 1
  %conv3669 = zext i8 %1623 to i32
  %1624 = load i8*, i8** %uc, align 8
  %idx.ext3670 = sext i32 %conv3669 to i64
  %add.ptr3671 = getelementptr inbounds i8, i8* %1624, i64 %idx.ext3670
  store i8* %add.ptr3671, i8** %uc, align 8
  br label %while.cond3647

while.end3672:                                    ; preds = %land.end3664
  br label %if.end3696

if.else3673:                                      ; preds = %if.then3644
  br label %while.cond3674

while.cond3674:                                   ; preds = %while.body3693, %if.else3673
  %1625 = load i8*, i8** %uc, align 8
  %1626 = load i8*, i8** %last_start, align 8
  %cmp3675 = icmp ule i8* %1625, %1626
  br i1 %cmp3675, label %land.rhs3677, label %land.end3691

land.rhs3677:                                     ; preds = %while.cond3674
  %1627 = load i8*, i8** %bitmap3586, align 8
  %1628 = load i8*, i8** %uc, align 8
  %1629 = load i8, i8* %1628, align 1
  %conv3678 = zext i8 %1629 to i32
  %shr3679 = ashr i32 %conv3678, 3
  %and3680 = and i32 %shr3679, 31
  %idxprom3681 = sext i32 %and3680 to i64
  %arrayidx3682 = getelementptr inbounds i8, i8* %1627, i64 %idxprom3681
  %1630 = load i8, i8* %arrayidx3682, align 1
  %conv3683 = zext i8 %1630 to i32
  %1631 = load i8*, i8** %uc, align 8
  %1632 = load i8, i8* %1631, align 1
  %conv3684 = zext i8 %1632 to i32
  %and3685 = and i32 %conv3684, 7
  %shl3686 = shl i32 1, %and3685
  %and3687 = and i32 %conv3683, %shl3686
  %tobool3688 = icmp ne i32 %and3687, 0
  %lnot3689 = xor i1 %tobool3688, true
  br label %land.end3691

land.end3691:                                     ; preds = %land.rhs3677, %while.cond3674
  %1633 = phi i1 [ false, %while.cond3674 ], [ %lnot3689, %land.rhs3677 ]
  br i1 %1633, label %while.body3693, label %while.end3695

while.body3693:                                   ; preds = %land.end3691
  %1634 = load i8*, i8** %uc, align 8
  %incdec.ptr3694 = getelementptr inbounds i8, i8* %1634, i32 1
  store i8* %incdec.ptr3694, i8** %uc, align 8
  br label %while.cond3674

while.end3695:                                    ; preds = %land.end3691
  br label %if.end3696

if.end3696:                                       ; preds = %while.end3695, %while.end3672
  %1635 = load i8*, i8** %uc, align 8
  store i8* %1635, i8** %s.addr, align 8
  br label %if.end3697

if.end3697:                                       ; preds = %if.end3696, %if.then3642
  %1636 = load i8*, i8** %uc, align 8
  %1637 = load i8*, i8** %last_start, align 8
  %cmp3698 = icmp ugt i8* %1636, %1637
  br i1 %cmp3698, label %if.then3700, label %if.end3701

if.then3700:                                      ; preds = %if.end3697
  br label %while.end3953

if.end3701:                                       ; preds = %if.end3697
  br label %if.end3702

if.end3702:                                       ; preds = %if.end3701, %while.body3636
  %1638 = load i32, i32* %word, align 4
  %tobool3703 = icmp ne i32 %1638, 0
  br i1 %tobool3703, label %if.then3704, label %if.end3721

if.then3704:                                      ; preds = %if.end3702
  %1639 = load i8**, i8*** %points, align 8
  %1640 = load i32, i32* %pointpos, align 4
  %1641 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %wordinfo = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1641, i32 0, i32 7
  %1642 = load %struct.reg_trie_wordinfo*, %struct.reg_trie_wordinfo** %wordinfo, align 8
  %1643 = load i32, i32* %word, align 4
  %idxprom3705 = zext i32 %1643 to i64
  %arrayidx3706 = getelementptr inbounds %struct.reg_trie_wordinfo, %struct.reg_trie_wordinfo* %1642, i64 %idxprom3705
  %len3707 = getelementptr inbounds %struct.reg_trie_wordinfo, %struct.reg_trie_wordinfo* %arrayidx3706, i32 0, i32 1
  %1644 = load i32, i32* %len3707, align 4
  %sub3708 = sub i32 %1640, %1644
  %conv3709 = zext i32 %sub3708 to i64
  %1645 = load i64, i64* %maxlen, align 8
  %rem = urem i64 %conv3709, %1645
  %arrayidx3710 = getelementptr inbounds i8*, i8** %1639, i64 %rem
  %1646 = load i8*, i8** %arrayidx3710, align 8
  store i8* %1646, i8** %lpos, align 8
  %1647 = load i8*, i8** %leftmost, align 8
  %tobool3711 = icmp ne i8* %1647, null
  br i1 %tobool3711, label %lor.lhs.false3712, label %if.then3715

lor.lhs.false3712:                                ; preds = %if.then3704
  %1648 = load i8*, i8** %lpos, align 8
  %1649 = load i8*, i8** %leftmost, align 8
  %cmp3713 = icmp ult i8* %1648, %1649
  br i1 %cmp3713, label %if.then3715, label %if.end3716

if.then3715:                                      ; preds = %lor.lhs.false3712, %if.then3704
  %1650 = load i8*, i8** %lpos, align 8
  store i8* %1650, i8** %leftmost, align 8
  br label %if.end3716

if.end3716:                                       ; preds = %if.then3715, %lor.lhs.false3712
  %1651 = load i32, i32* %base, align 4
  %cmp3717 = icmp eq i32 %1651, 0
  br i1 %cmp3717, label %if.then3719, label %if.end3720

if.then3719:                                      ; preds = %if.end3716
  br label %while.end3953

if.end3720:                                       ; preds = %if.end3716
  br label %if.end3721

if.end3721:                                       ; preds = %if.end3720, %if.end3702
  %1652 = load i8*, i8** %uc, align 8
  %1653 = load i8**, i8*** %points, align 8
  %1654 = load i32, i32* %pointpos, align 4
  %inc = add i32 %1654, 1
  store i32 %inc, i32* %pointpos, align 4
  %conv3722 = zext i32 %1654 to i64
  %1655 = load i64, i64* %maxlen, align 8
  %rem3723 = urem i64 %conv3722, %1655
  %arrayidx3724 = getelementptr inbounds i8*, i8** %1653, i64 %rem3723
  store i8* %1652, i8** %arrayidx3724, align 8
  %1656 = load i64, i64* %foldlen, align 8
  %tobool3725 = icmp ne i64 %1656, 0
  br i1 %tobool3725, label %if.then3729, label %lor.lhs.false3726

lor.lhs.false3726:                                ; preds = %if.end3721
  %1657 = load i8*, i8** %uc, align 8
  %1658 = load i8*, i8** %strend.addr, align 8
  %cmp3727 = icmp ult i8* %1657, %1658
  br i1 %cmp3727, label %if.then3729, label %if.else3900

if.then3729:                                      ; preds = %lor.lhs.false3726, %if.end3721
  br label %do.body3730

do.body3730:                                      ; preds = %if.then3729
  store i8 2, i8* %flags3731, align 1
  %1659 = load i32, i32* %trie_type, align 4
  switch i32 %1659, label %sw.epilog3874 [
    i32 7, label %sw.bb3732
    i32 4, label %sw.bb3741
    i32 2, label %sw.bb3745
    i32 5, label %sw.bb3802
    i32 3, label %sw.bb3806
    i32 6, label %sw.bb3861
    i32 1, label %sw.bb3870
    i32 0, label %sw.bb3872
  ]

sw.bb3732:                                        ; preds = %do.body3730
  %1660 = load i8, i8* %utf8_target, align 1
  %tobool3733 = trunc i8 %1660 to i1
  br i1 %tobool3733, label %land.lhs.true3735, label %if.end3740

land.lhs.true3735:                                ; preds = %sw.bb3732
  %1661 = load i8*, i8** %uc, align 8
  %1662 = load i8, i8* %1661, align 1
  %conv3736 = zext i8 %1662 to i32
  %cmp3737 = icmp sge i32 %conv3736, 196
  br i1 %cmp3737, label %if.then3739, label %if.end3740

if.then3739:                                      ; preds = %land.lhs.true3735
  br label %if.end3740

if.end3740:                                       ; preds = %if.then3739, %land.lhs.true3735, %sw.bb3732
  br label %do_trie_utf8_fold

sw.bb3741:                                        ; preds = %do.body3730
  %1663 = load i8, i8* %flags3731, align 1
  %conv3742 = zext i8 %1663 to i32
  %or3743 = or i32 %conv3742, 4
  %conv3744 = trunc i32 %or3743 to i8
  store i8 %conv3744, i8* %flags3731, align 1
  br label %sw.bb3745

sw.bb3745:                                        ; preds = %do.body3730, %sw.bb3741
  br label %do_trie_utf8_fold

do_trie_utf8_fold:                                ; preds = %sw.bb3745, %if.end3740
  %1664 = load i64, i64* %foldlen, align 8
  %cmp3746 = icmp ugt i64 %1664, 0
  br i1 %cmp3746, label %if.then3748, label %if.else3752

if.then3748:                                      ; preds = %do_trie_utf8_fold
  %1665 = load i8*, i8** %uscan, align 8
  %1666 = load i32, i32* %uniflags, align 4
  %call3749 = call i64 @Perl_utf8n_to_uvchr(i8* %1665, i64 13, i64* %len, i32 %1666)
  store i64 %call3749, i64* %uvc, align 8
  %1667 = load i64, i64* %len, align 8
  %1668 = load i64, i64* %foldlen, align 8
  %sub3750 = sub i64 %1668, %1667
  store i64 %sub3750, i64* %foldlen, align 8
  %1669 = load i64, i64* %len, align 8
  %1670 = load i8*, i8** %uscan, align 8
  %add.ptr3751 = getelementptr inbounds i8, i8* %1670, i64 %1669
  store i8* %add.ptr3751, i8** %uscan, align 8
  store i64 0, i64* %len, align 8
  br label %if.end3801

if.else3752:                                      ; preds = %do_trie_utf8_fold
  %1671 = load i8*, i8** %uc, align 8
  %arraydecay3753 = getelementptr inbounds [14 x i8], [14 x i8]* %foldbuf, i64 0, i64 0
  %1672 = load i8, i8* %flags3731, align 1
  %call3754 = call i64 @Perl__to_utf8_fold_flags(i8* %1671, i8* %arraydecay3753, i64* %foldlen, i8 zeroext %1672)
  store i64 %call3754, i64* %uvc, align 8
  %1673 = load i8*, i8** %uc, align 8
  %1674 = load i8, i8* %1673, align 1
  %idxprom3755 = zext i8 %1674 to i64
  %arrayidx3756 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom3755
  %1675 = load i8, i8* %arrayidx3756, align 1
  %conv3757 = zext i8 %1675 to i64
  store i64 %conv3757, i64* %len, align 8
  %1676 = load i64, i64* %uvc, align 8
  %cmp3758 = icmp ult i64 %1676, 128
  br i1 %cmp3758, label %cond.true3760, label %cond.false3761

cond.true3760:                                    ; preds = %if.else3752
  br label %cond.end3795

cond.false3761:                                   ; preds = %if.else3752
  %1677 = load i64, i64* %uvc, align 8
  %cmp3762 = icmp ult i64 %1677, 2048
  br i1 %cmp3762, label %cond.true3764, label %cond.false3765

cond.true3764:                                    ; preds = %cond.false3761
  br label %cond.end3793

cond.false3765:                                   ; preds = %cond.false3761
  %1678 = load i64, i64* %uvc, align 8
  %cmp3766 = icmp ult i64 %1678, 65536
  br i1 %cmp3766, label %cond.true3768, label %cond.false3769

cond.true3768:                                    ; preds = %cond.false3765
  br label %cond.end3791

cond.false3769:                                   ; preds = %cond.false3765
  %1679 = load i64, i64* %uvc, align 8
  %cmp3770 = icmp ult i64 %1679, 2097152
  br i1 %cmp3770, label %cond.true3772, label %cond.false3773

cond.true3772:                                    ; preds = %cond.false3769
  br label %cond.end3789

cond.false3773:                                   ; preds = %cond.false3769
  %1680 = load i64, i64* %uvc, align 8
  %cmp3774 = icmp ult i64 %1680, 67108864
  br i1 %cmp3774, label %cond.true3776, label %cond.false3777

cond.true3776:                                    ; preds = %cond.false3773
  br label %cond.end3787

cond.false3777:                                   ; preds = %cond.false3773
  %1681 = load i64, i64* %uvc, align 8
  %cmp3778 = icmp ult i64 %1681, 2147483648
  br i1 %cmp3778, label %cond.true3780, label %cond.false3781

cond.true3780:                                    ; preds = %cond.false3777
  br label %cond.end3785

cond.false3781:                                   ; preds = %cond.false3777
  %1682 = load i64, i64* %uvc, align 8
  %cmp3782 = icmp ult i64 %1682, 68719476736
  %1683 = zext i1 %cmp3782 to i64
  %cond3784 = select i1 %cmp3782, i32 7, i32 13
  br label %cond.end3785

cond.end3785:                                     ; preds = %cond.false3781, %cond.true3780
  %cond3786 = phi i32 [ 6, %cond.true3780 ], [ %cond3784, %cond.false3781 ]
  br label %cond.end3787

cond.end3787:                                     ; preds = %cond.end3785, %cond.true3776
  %cond3788 = phi i32 [ 5, %cond.true3776 ], [ %cond3786, %cond.end3785 ]
  br label %cond.end3789

cond.end3789:                                     ; preds = %cond.end3787, %cond.true3772
  %cond3790 = phi i32 [ 4, %cond.true3772 ], [ %cond3788, %cond.end3787 ]
  br label %cond.end3791

cond.end3791:                                     ; preds = %cond.end3789, %cond.true3768
  %cond3792 = phi i32 [ 3, %cond.true3768 ], [ %cond3790, %cond.end3789 ]
  br label %cond.end3793

cond.end3793:                                     ; preds = %cond.end3791, %cond.true3764
  %cond3794 = phi i32 [ 2, %cond.true3764 ], [ %cond3792, %cond.end3791 ]
  br label %cond.end3795

cond.end3795:                                     ; preds = %cond.end3793, %cond.true3760
  %cond3796 = phi i32 [ 1, %cond.true3760 ], [ %cond3794, %cond.end3793 ]
  %conv3797 = sext i32 %cond3796 to i64
  store i64 %conv3797, i64* %skiplen, align 8
  %1684 = load i64, i64* %skiplen, align 8
  %1685 = load i64, i64* %foldlen, align 8
  %sub3798 = sub i64 %1685, %1684
  store i64 %sub3798, i64* %foldlen, align 8
  %arraydecay3799 = getelementptr inbounds [14 x i8], [14 x i8]* %foldbuf, i64 0, i64 0
  %1686 = load i64, i64* %skiplen, align 8
  %add.ptr3800 = getelementptr inbounds i8, i8* %arraydecay3799, i64 %1686
  store i8* %add.ptr3800, i8** %uscan, align 8
  br label %if.end3801

if.end3801:                                       ; preds = %cond.end3795, %if.then3748
  br label %sw.epilog3874

sw.bb3802:                                        ; preds = %do.body3730
  %1687 = load i8, i8* %flags3731, align 1
  %conv3803 = zext i8 %1687 to i32
  %or3804 = or i32 %conv3803, 4
  %conv3805 = trunc i32 %or3804 to i8
  store i8 %conv3805, i8* %flags3731, align 1
  br label %sw.bb3806

sw.bb3806:                                        ; preds = %do.body3730, %sw.bb3802
  %1688 = load i64, i64* %foldlen, align 8
  %cmp3807 = icmp ugt i64 %1688, 0
  br i1 %cmp3807, label %if.then3809, label %if.else3813

if.then3809:                                      ; preds = %sw.bb3806
  %1689 = load i8*, i8** %uscan, align 8
  %1690 = load i32, i32* %uniflags, align 4
  %call3810 = call i64 @Perl_utf8n_to_uvchr(i8* %1689, i64 13, i64* %len, i32 %1690)
  store i64 %call3810, i64* %uvc, align 8
  %1691 = load i64, i64* %len, align 8
  %1692 = load i64, i64* %foldlen, align 8
  %sub3811 = sub i64 %1692, %1691
  store i64 %sub3811, i64* %foldlen, align 8
  %1693 = load i64, i64* %len, align 8
  %1694 = load i8*, i8** %uscan, align 8
  %add.ptr3812 = getelementptr inbounds i8, i8* %1694, i64 %1693
  store i8* %add.ptr3812, i8** %uscan, align 8
  store i64 0, i64* %len, align 8
  br label %if.end3860

if.else3813:                                      ; preds = %sw.bb3806
  store i64 1, i64* %len, align 8
  %1695 = load i8*, i8** %uc, align 8
  %1696 = load i8, i8* %1695, align 1
  %arraydecay3814 = getelementptr inbounds [14 x i8], [14 x i8]* %foldbuf, i64 0, i64 0
  %1697 = load i8, i8* %flags3731, align 1
  %conv3815 = zext i8 %1697 to i32
  %call3816 = call i64 @Perl__to_fold_latin1(i8 zeroext %1696, i8* %arraydecay3814, i64* %foldlen, i32 %conv3815)
  store i64 %call3816, i64* %uvc, align 8
  %1698 = load i64, i64* %uvc, align 8
  %cmp3817 = icmp ult i64 %1698, 128
  br i1 %cmp3817, label %cond.true3819, label %cond.false3820

cond.true3819:                                    ; preds = %if.else3813
  br label %cond.end3854

cond.false3820:                                   ; preds = %if.else3813
  %1699 = load i64, i64* %uvc, align 8
  %cmp3821 = icmp ult i64 %1699, 2048
  br i1 %cmp3821, label %cond.true3823, label %cond.false3824

cond.true3823:                                    ; preds = %cond.false3820
  br label %cond.end3852

cond.false3824:                                   ; preds = %cond.false3820
  %1700 = load i64, i64* %uvc, align 8
  %cmp3825 = icmp ult i64 %1700, 65536
  br i1 %cmp3825, label %cond.true3827, label %cond.false3828

cond.true3827:                                    ; preds = %cond.false3824
  br label %cond.end3850

cond.false3828:                                   ; preds = %cond.false3824
  %1701 = load i64, i64* %uvc, align 8
  %cmp3829 = icmp ult i64 %1701, 2097152
  br i1 %cmp3829, label %cond.true3831, label %cond.false3832

cond.true3831:                                    ; preds = %cond.false3828
  br label %cond.end3848

cond.false3832:                                   ; preds = %cond.false3828
  %1702 = load i64, i64* %uvc, align 8
  %cmp3833 = icmp ult i64 %1702, 67108864
  br i1 %cmp3833, label %cond.true3835, label %cond.false3836

cond.true3835:                                    ; preds = %cond.false3832
  br label %cond.end3846

cond.false3836:                                   ; preds = %cond.false3832
  %1703 = load i64, i64* %uvc, align 8
  %cmp3837 = icmp ult i64 %1703, 2147483648
  br i1 %cmp3837, label %cond.true3839, label %cond.false3840

cond.true3839:                                    ; preds = %cond.false3836
  br label %cond.end3844

cond.false3840:                                   ; preds = %cond.false3836
  %1704 = load i64, i64* %uvc, align 8
  %cmp3841 = icmp ult i64 %1704, 68719476736
  %1705 = zext i1 %cmp3841 to i64
  %cond3843 = select i1 %cmp3841, i32 7, i32 13
  br label %cond.end3844

cond.end3844:                                     ; preds = %cond.false3840, %cond.true3839
  %cond3845 = phi i32 [ 6, %cond.true3839 ], [ %cond3843, %cond.false3840 ]
  br label %cond.end3846

cond.end3846:                                     ; preds = %cond.end3844, %cond.true3835
  %cond3847 = phi i32 [ 5, %cond.true3835 ], [ %cond3845, %cond.end3844 ]
  br label %cond.end3848

cond.end3848:                                     ; preds = %cond.end3846, %cond.true3831
  %cond3849 = phi i32 [ 4, %cond.true3831 ], [ %cond3847, %cond.end3846 ]
  br label %cond.end3850

cond.end3850:                                     ; preds = %cond.end3848, %cond.true3827
  %cond3851 = phi i32 [ 3, %cond.true3827 ], [ %cond3849, %cond.end3848 ]
  br label %cond.end3852

cond.end3852:                                     ; preds = %cond.end3850, %cond.true3823
  %cond3853 = phi i32 [ 2, %cond.true3823 ], [ %cond3851, %cond.end3850 ]
  br label %cond.end3854

cond.end3854:                                     ; preds = %cond.end3852, %cond.true3819
  %cond3855 = phi i32 [ 1, %cond.true3819 ], [ %cond3853, %cond.end3852 ]
  %conv3856 = sext i32 %cond3855 to i64
  store i64 %conv3856, i64* %skiplen, align 8
  %1706 = load i64, i64* %skiplen, align 8
  %1707 = load i64, i64* %foldlen, align 8
  %sub3857 = sub i64 %1707, %1706
  store i64 %sub3857, i64* %foldlen, align 8
  %arraydecay3858 = getelementptr inbounds [14 x i8], [14 x i8]* %foldbuf, i64 0, i64 0
  %1708 = load i64, i64* %skiplen, align 8
  %add.ptr3859 = getelementptr inbounds i8, i8* %arraydecay3858, i64 %1708
  store i8* %add.ptr3859, i8** %uscan, align 8
  br label %if.end3860

if.end3860:                                       ; preds = %cond.end3854, %if.then3809
  br label %sw.epilog3874

sw.bb3861:                                        ; preds = %do.body3730
  %1709 = load i8, i8* %utf8_target, align 1
  %tobool3862 = trunc i8 %1709 to i1
  br i1 %tobool3862, label %land.lhs.true3864, label %if.end3869

land.lhs.true3864:                                ; preds = %sw.bb3861
  %1710 = load i8*, i8** %uc, align 8
  %1711 = load i8, i8* %1710, align 1
  %conv3865 = zext i8 %1711 to i32
  %cmp3866 = icmp sge i32 %conv3865, 196
  br i1 %cmp3866, label %if.then3868, label %if.end3869

if.then3868:                                      ; preds = %land.lhs.true3864
  br label %if.end3869

if.end3869:                                       ; preds = %if.then3868, %land.lhs.true3864, %sw.bb3861
  br label %sw.bb3870

sw.bb3870:                                        ; preds = %do.body3730, %if.end3869
  %1712 = load i8*, i8** %uc, align 8
  %1713 = load i32, i32* %uniflags, align 4
  %call3871 = call i64 @Perl_utf8n_to_uvchr(i8* %1712, i64 13, i64* %len, i32 %1713)
  store i64 %call3871, i64* %uvc, align 8
  br label %sw.epilog3874

sw.bb3872:                                        ; preds = %do.body3730
  %1714 = load i8*, i8** %uc, align 8
  %1715 = load i8, i8* %1714, align 1
  %conv3873 = zext i8 %1715 to i64
  store i64 %conv3873, i64* %uvc, align 8
  store i64 1, i64* %len, align 8
  br label %sw.epilog3874

sw.epilog3874:                                    ; preds = %sw.bb3872, %do.body3730, %sw.bb3870, %if.end3860, %if.end3801
  %1716 = load i64, i64* %uvc, align 8
  %cmp3875 = icmp ult i64 %1716, 256
  br i1 %cmp3875, label %if.then3877, label %if.else3879

if.then3877:                                      ; preds = %sw.epilog3874
  %1717 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %charmap = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1717, i32 0, i32 2
  %1718 = load i16*, i16** %charmap, align 8
  %1719 = load i64, i64* %uvc, align 8
  %arrayidx3878 = getelementptr inbounds i16, i16* %1718, i64 %1719
  %1720 = load i16, i16* %arrayidx3878, align 2
  store i16 %1720, i16* %charid, align 2
  br label %if.end3898

if.else3879:                                      ; preds = %sw.epilog3874
  store i16 0, i16* %charid, align 2
  %1721 = load %struct.hv*, %struct.hv** %widecharmap, align 8
  %tobool3880 = icmp ne %struct.hv* %1721, null
  br i1 %tobool3880, label %if.then3881, label %if.end3897

if.then3881:                                      ; preds = %if.else3879
  %1722 = load %struct.hv*, %struct.hv** %widecharmap, align 8
  %1723 = bitcast i64* %uvc to i8*
  %call3882 = call i8* @Perl_hv_common_key_len(%struct.hv* %1722, i8* %1723, i32 8, i32 32, %struct.sv* null, i32 0)
  %1724 = bitcast i8* %call3882 to %struct.sv**
  store %struct.sv** %1724, %struct.sv*** %svpp, align 8
  %1725 = load %struct.sv**, %struct.sv*** %svpp, align 8
  %tobool3883 = icmp ne %struct.sv** %1725, null
  br i1 %tobool3883, label %if.then3884, label %if.end3896

if.then3884:                                      ; preds = %if.then3881
  %1726 = load %struct.sv**, %struct.sv*** %svpp, align 8
  %1727 = load %struct.sv*, %struct.sv** %1726, align 8
  %sv_flags3885 = getelementptr inbounds %struct.sv, %struct.sv* %1727, i32 0, i32 2
  %1728 = load i32, i32* %sv_flags3885, align 4
  %and3886 = and i32 %1728, 2097408
  %cmp3887 = icmp eq i32 %and3886, 256
  br i1 %cmp3887, label %cond.true3889, label %cond.false3891

cond.true3889:                                    ; preds = %if.then3884
  %1729 = load %struct.sv**, %struct.sv*** %svpp, align 8
  %1730 = load %struct.sv*, %struct.sv** %1729, align 8
  %sv_any3890 = getelementptr inbounds %struct.sv, %struct.sv* %1730, i32 0, i32 0
  %1731 = load i8*, i8** %sv_any3890, align 8
  %1732 = bitcast i8* %1731 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %1732, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %1733 = load i64, i64* %xivu_iv, align 8
  br label %cond.end3893

cond.false3891:                                   ; preds = %if.then3884
  %1734 = load %struct.sv**, %struct.sv*** %svpp, align 8
  %1735 = load %struct.sv*, %struct.sv** %1734, align 8
  %call3892 = call i64 @Perl_sv_2iv_flags(%struct.sv* %1735, i32 2)
  br label %cond.end3893

cond.end3893:                                     ; preds = %cond.false3891, %cond.true3889
  %cond3894 = phi i64 [ %1733, %cond.true3889 ], [ %call3892, %cond.false3891 ]
  %conv3895 = trunc i64 %cond3894 to i16
  store i16 %conv3895, i16* %charid, align 2
  br label %if.end3896

if.end3896:                                       ; preds = %cond.end3893, %if.then3881
  br label %if.end3897

if.end3897:                                       ; preds = %if.end3896, %if.else3879
  br label %if.end3898

if.end3898:                                       ; preds = %if.end3897, %if.then3877
  br label %do.end3899

do.end3899:                                       ; preds = %if.end3898
  br label %if.end3901

if.else3900:                                      ; preds = %lor.lhs.false3726
  store i64 0, i64* %len, align 8
  store i16 0, i16* %charid, align 2
  br label %if.end3901

if.end3901:                                       ; preds = %if.else3900, %do.end3899
  br label %do.body3902

do.body3902:                                      ; preds = %do.cond, %if.end3901
  %1736 = load %struct._reg_ac_data*, %struct._reg_ac_data** %aho, align 8
  %states3903 = getelementptr inbounds %struct._reg_ac_data, %struct._reg_ac_data* %1736, i32 0, i32 3
  %1737 = load %struct._reg_trie_state*, %struct._reg_trie_state** %states3903, align 8
  %1738 = load i32, i32* %state, align 4
  %idxprom3904 = zext i32 %1738 to i64
  %arrayidx3905 = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %1737, i64 %idxprom3904
  %trans = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %arrayidx3905, i32 0, i32 1
  %base3906 = bitcast %union.anon.35* %trans to i32*
  %1739 = load i32, i32* %base3906, align 8
  store i32 %1739, i32* %base, align 4
  %1740 = load i32, i32* %base, align 4
  %tobool3907 = icmp ne i32 %1740, 0
  br i1 %tobool3907, label %if.then3908, label %if.else3939

if.then3908:                                      ; preds = %do.body3902
  %1741 = load i16, i16* %charid, align 2
  %conv3910 = zext i16 %1741 to i32
  %tobool3911 = icmp ne i32 %conv3910, 0
  br i1 %tobool3911, label %land.lhs.true3912, label %if.else3935

land.lhs.true3912:                                ; preds = %if.then3908
  %1742 = load i32, i32* %base, align 4
  %1743 = load i16, i16* %charid, align 2
  %conv3913 = zext i16 %1743 to i32
  %add3914 = add i32 %1742, %conv3913
  %sub3915 = sub i32 %add3914, 1
  %1744 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %uniquecharcount = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1744, i32 0, i32 8
  %1745 = load i16, i16* %uniquecharcount, align 8
  %conv3916 = zext i16 %1745 to i32
  %sub3917 = sub i32 %sub3915, %conv3916
  store i32 %sub3917, i32* %offset, align 4
  %cmp3918 = icmp sge i32 %sub3917, 0
  br i1 %cmp3918, label %land.lhs.true3920, label %if.else3935

land.lhs.true3920:                                ; preds = %land.lhs.true3912
  %1746 = load i32, i32* %offset, align 4
  %1747 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %lasttrans = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1747, i32 0, i32 1
  %1748 = load i32, i32* %lasttrans, align 4
  %cmp3921 = icmp ult i32 %1746, %1748
  br i1 %cmp3921, label %land.lhs.true3923, label %if.else3935

land.lhs.true3923:                                ; preds = %land.lhs.true3920
  %1749 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %trans3924 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1749, i32 0, i32 4
  %1750 = load %struct._reg_trie_trans*, %struct._reg_trie_trans** %trans3924, align 8
  %1751 = load i32, i32* %offset, align 4
  %idxprom3925 = sext i32 %1751 to i64
  %arrayidx3926 = getelementptr inbounds %struct._reg_trie_trans, %struct._reg_trie_trans* %1750, i64 %idxprom3925
  %check = getelementptr inbounds %struct._reg_trie_trans, %struct._reg_trie_trans* %arrayidx3926, i32 0, i32 1
  %1752 = load i32, i32* %check, align 4
  %1753 = load i32, i32* %state, align 4
  %cmp3927 = icmp eq i32 %1752, %1753
  br i1 %cmp3927, label %land.lhs.true3929, label %if.else3935

land.lhs.true3929:                                ; preds = %land.lhs.true3923
  %1754 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %trans3930 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1754, i32 0, i32 4
  %1755 = load %struct._reg_trie_trans*, %struct._reg_trie_trans** %trans3930, align 8
  %1756 = load i32, i32* %offset, align 4
  %idxprom3931 = sext i32 %1756 to i64
  %arrayidx3932 = getelementptr inbounds %struct._reg_trie_trans, %struct._reg_trie_trans* %1755, i64 %idxprom3931
  %next = getelementptr inbounds %struct._reg_trie_trans, %struct._reg_trie_trans* %arrayidx3932, i32 0, i32 0
  %1757 = load i32, i32* %next, align 4
  store i32 %1757, i32* %tmp3909, align 4
  %tobool3933 = icmp ne i32 %1757, 0
  br i1 %tobool3933, label %if.then3934, label %if.else3935

if.then3934:                                      ; preds = %land.lhs.true3929
  %1758 = load i32, i32* %tmp3909, align 4
  store i32 %1758, i32* %state, align 4
  br label %do.end3942

if.else3935:                                      ; preds = %land.lhs.true3929, %land.lhs.true3923, %land.lhs.true3920, %land.lhs.true3912, %if.then3908
  store i32 1, i32* %failed, align 4
  %1759 = load %struct._reg_ac_data*, %struct._reg_ac_data** %aho, align 8
  %fail = getelementptr inbounds %struct._reg_ac_data, %struct._reg_ac_data* %1759, i32 0, i32 2
  %1760 = load i32*, i32** %fail, align 8
  %1761 = load i32, i32* %state, align 4
  %idxprom3936 = zext i32 %1761 to i64
  %arrayidx3937 = getelementptr inbounds i32, i32* %1760, i64 %idxprom3936
  %1762 = load i32, i32* %arrayidx3937, align 4
  store i32 %1762, i32* %state, align 4
  br label %if.end3938

if.end3938:                                       ; preds = %if.else3935
  br label %if.end3940

if.else3939:                                      ; preds = %do.body3902
  store i32 1, i32* %failed, align 4
  br label %do.end3942

if.end3940:                                       ; preds = %if.end3938
  br label %do.cond

do.cond:                                          ; preds = %if.end3940
  %1763 = load i32, i32* %state, align 4
  %tobool3941 = icmp ne i32 %1763, 0
  br i1 %tobool3941, label %do.body3902, label %do.end3942

do.end3942:                                       ; preds = %do.cond, %if.else3939, %if.then3934
  %1764 = load i64, i64* %len, align 8
  %1765 = load i8*, i8** %uc, align 8
  %add.ptr3943 = getelementptr inbounds i8, i8* %1765, i64 %1764
  store i8* %add.ptr3943, i8** %uc, align 8
  %1766 = load i32, i32* %failed, align 4
  %tobool3944 = icmp ne i32 %1766, 0
  br i1 %tobool3944, label %if.then3945, label %if.end3952

if.then3945:                                      ; preds = %do.end3942
  %1767 = load i8*, i8** %leftmost, align 8
  %tobool3946 = icmp ne i8* %1767, null
  br i1 %tobool3946, label %if.then3947, label %if.end3948

if.then3947:                                      ; preds = %if.then3945
  br label %while.end3953

if.end3948:                                       ; preds = %if.then3945
  %1768 = load i32, i32* %state, align 4
  %tobool3949 = icmp ne i32 %1768, 0
  br i1 %tobool3949, label %if.end3951, label %if.then3950

if.then3950:                                      ; preds = %if.end3948
  store i32 1, i32* %state, align 4
  br label %if.end3951

if.end3951:                                       ; preds = %if.then3950, %if.end3948
  br label %if.end3952

if.end3952:                                       ; preds = %if.end3951, %do.end3942
  br label %while.cond3629

while.end3953:                                    ; preds = %if.then3947, %if.then3719, %if.then3700, %land.end3634
  %1769 = load %struct._reg_ac_data*, %struct._reg_ac_data** %aho, align 8
  %states3954 = getelementptr inbounds %struct._reg_ac_data, %struct._reg_ac_data* %1769, i32 0, i32 3
  %1770 = load %struct._reg_trie_state*, %struct._reg_trie_state** %states3954, align 8
  %1771 = load i32, i32* %state, align 4
  %idxprom3955 = zext i32 %1771 to i64
  %arrayidx3956 = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %1770, i64 %idxprom3955
  %wordnum3957 = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %arrayidx3956, i32 0, i32 0
  %1772 = load i16, i16* %wordnum3957, align 8
  %tobool3958 = icmp ne i16 %1772, 0
  br i1 %tobool3958, label %if.then3959, label %if.end3979

if.then3959:                                      ; preds = %while.end3953
  %1773 = load i8**, i8*** %points, align 8
  %1774 = load i32, i32* %pointpos, align 4
  %1775 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %wordinfo3961 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %1775, i32 0, i32 7
  %1776 = load %struct.reg_trie_wordinfo*, %struct.reg_trie_wordinfo** %wordinfo3961, align 8
  %1777 = load %struct._reg_ac_data*, %struct._reg_ac_data** %aho, align 8
  %states3962 = getelementptr inbounds %struct._reg_ac_data, %struct._reg_ac_data* %1777, i32 0, i32 3
  %1778 = load %struct._reg_trie_state*, %struct._reg_trie_state** %states3962, align 8
  %1779 = load i32, i32* %state, align 4
  %idxprom3963 = zext i32 %1779 to i64
  %arrayidx3964 = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %1778, i64 %idxprom3963
  %wordnum3965 = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %arrayidx3964, i32 0, i32 0
  %1780 = load i16, i16* %wordnum3965, align 8
  %idxprom3966 = zext i16 %1780 to i64
  %arrayidx3967 = getelementptr inbounds %struct.reg_trie_wordinfo, %struct.reg_trie_wordinfo* %1776, i64 %idxprom3966
  %len3968 = getelementptr inbounds %struct.reg_trie_wordinfo, %struct.reg_trie_wordinfo* %arrayidx3967, i32 0, i32 1
  %1781 = load i32, i32* %len3968, align 4
  %sub3969 = sub i32 %1774, %1781
  %conv3970 = zext i32 %sub3969 to i64
  %1782 = load i64, i64* %maxlen, align 8
  %rem3971 = urem i64 %conv3970, %1782
  %arrayidx3972 = getelementptr inbounds i8*, i8** %1773, i64 %rem3971
  %1783 = load i8*, i8** %arrayidx3972, align 8
  store i8* %1783, i8** %lpos3960, align 8
  %1784 = load i8*, i8** %leftmost, align 8
  %tobool3973 = icmp ne i8* %1784, null
  br i1 %tobool3973, label %lor.lhs.false3974, label %if.then3977

lor.lhs.false3974:                                ; preds = %if.then3959
  %1785 = load i8*, i8** %lpos3960, align 8
  %1786 = load i8*, i8** %leftmost, align 8
  %cmp3975 = icmp ult i8* %1785, %1786
  br i1 %cmp3975, label %if.then3977, label %if.end3978

if.then3977:                                      ; preds = %lor.lhs.false3974, %if.then3959
  %1787 = load i8*, i8** %lpos3960, align 8
  store i8* %1787, i8** %leftmost, align 8
  br label %if.end3978

if.end3978:                                       ; preds = %if.then3977, %lor.lhs.false3974
  br label %if.end3979

if.end3979:                                       ; preds = %if.end3978, %while.end3953
  %1788 = load i8*, i8** %leftmost, align 8
  %tobool3980 = icmp ne i8* %1788, null
  br i1 %tobool3980, label %if.then3981, label %if.else4004

if.then3981:                                      ; preds = %if.end3979
  %1789 = load i8*, i8** %leftmost, align 8
  store i8* %1789, i8** %s.addr, align 8
  %1790 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %intuit3982 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1790, i32 0, i32 12
  %1791 = load i8, i8* %intuit3982, align 8
  %tobool3983 = trunc i8 %1791 to i1
  br i1 %tobool3983, label %if.then3988, label %lor.lhs.false3985

lor.lhs.false3985:                                ; preds = %if.then3981
  %1792 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call3986 = call i32 @S_regtry(%struct.regmatch_info* %1792, i8** %s.addr)
  %tobool3987 = icmp ne i32 %call3986, 0
  br i1 %tobool3987, label %if.then3988, label %if.end3993

if.then3988:                                      ; preds = %lor.lhs.false3985, %if.then3981
  %1793 = load i64, i64* @PL_tmps_ix, align 8
  %1794 = load i64, i64* @PL_tmps_floor, align 8
  %cmp3989 = icmp sgt i64 %1793, %1794
  br i1 %cmp3989, label %if.then3991, label %if.end3992

if.then3991:                                      ; preds = %if.then3988
  call void @Perl_free_tmps()
  br label %if.end3992

if.end3992:                                       ; preds = %if.then3991, %if.then3988
  call void @Perl_pop_scope()
  br label %got_it

if.end3993:                                       ; preds = %lor.lhs.false3985
  %1795 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target3994 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1795, i32 0, i32 14
  %1796 = load i8, i8* %is_utf8_target3994, align 2
  %tobool3995 = trunc i8 %1796 to i1
  br i1 %tobool3995, label %cond.true3997, label %cond.false4000

cond.true3997:                                    ; preds = %if.end3993
  %1797 = load i8*, i8** %s.addr, align 8
  %1798 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend3998 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1798, i32 0, i32 2
  %1799 = load i8*, i8** %strend3998, align 8
  %call3999 = call i8* @S_reghop3(i8* %1797, i64 1, i8* %1799)
  br label %cond.end4002

cond.false4000:                                   ; preds = %if.end3993
  %1800 = load i8*, i8** %s.addr, align 8
  %add.ptr4001 = getelementptr inbounds i8, i8* %1800, i64 1
  br label %cond.end4002

cond.end4002:                                     ; preds = %cond.false4000, %cond.true3997
  %cond4003 = phi i8* [ %call3999, %cond.true3997 ], [ %add.ptr4001, %cond.false4000 ]
  store i8* %cond4003, i8** %s.addr, align 8
  br label %if.end4005

if.else4004:                                      ; preds = %if.end3979
  br label %while.end4006

if.end4005:                                       ; preds = %cond.end4002
  br label %while.cond3622

while.end4006:                                    ; preds = %if.else4004, %while.cond3622
  %1801 = load i64, i64* @PL_tmps_ix, align 8
  %1802 = load i64, i64* @PL_tmps_floor, align 8
  %cmp4007 = icmp sgt i64 %1801, %1802
  br i1 %cmp4007, label %if.then4009, label %if.end4010

if.then4009:                                      ; preds = %while.end4006
  call void @Perl_free_tmps()
  br label %if.end4010

if.end4010:                                       ; preds = %if.then4009, %while.end4006
  call void @Perl_pop_scope()
  br label %sw.epilog4014

sw.default4011:                                   ; preds = %entry
  %1803 = load %struct.regnode*, %struct.regnode** %c.addr, align 8
  %type4012 = getelementptr inbounds %struct.regnode, %struct.regnode* %1803, i32 0, i32 1
  %1804 = load i8, i8* %type4012, align 1
  %conv4013 = zext i8 %1804 to i32
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 %conv4013)
  br label %sw.epilog4014

sw.epilog4014:                                    ; preds = %sw.default4011, %if.end4010, %do.end3524, %if.end3427, %do.end2676, %do.end2633, %if.end2582, %if.end2512, %sw.epilog, %if.end1669, %if.end1459, %if.end1325, %if.end1122, %if.end988, %if.end785, %if.end524, %while.end276, %if.end209, %if.then109, %do.end78, %if.end58
  store i8* null, i8** %retval, align 8
  br label %return

got_it:                                           ; preds = %if.end3992, %if.then3513, %if.then3408, %if.then3328, %if.then3230, %if.then3118, %if.then2961, %if.then2798, %if.then2710, %if.then2669, %if.then2622, %if.then2574, %if.then2539, %if.then2504, %if.then2421, %if.then2286, %if.then2267, %if.then2227, %if.then2165, %if.then2145, %if.then2126, %if.then2087, %if.then2025, %if.then2005, %if.then1986, %if.then1952, %if.then1895, %if.then1875, %if.then1848, %if.then1792, %if.then1667, %if.then1643, %if.then1584, %if.then1457, %if.then1434, %if.then1376, %if.then1323, %if.then1300, %if.then1242, %if.then1119, %if.then1093, %if.then1038, %if.then985, %if.then959, %if.then904, %if.then783, %if.then756, %if.then681, %if.then521, %if.then491, %if.then419, %if.then263, %if.then204, %if.then170, %if.then73, %if.then51, %if.then16
  %1805 = load i8*, i8** %s.addr, align 8
  store i8* %1805, i8** %retval, align 8
  br label %return

return:                                           ; preds = %got_it, %sw.epilog4014
  %1806 = load i8*, i8** %retval, align 8
  ret i8* %1806
}

; Function Attrs: noinline nounwind uwtable
define internal void @S_SvREFCNT_dec(%struct.sv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  %rc = alloca i32, align 4
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %cmp = icmp ne %struct.sv* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br i1 true, label %if.then, label %if.end6

cond.false:                                       ; preds = %entry
  br i1 false, label %if.then, label %if.end6

if.then:                                          ; preds = %cond.false, %cond.true
  %1 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %1, i32 0, i32 1
  %2 = load i32, i32* %sv_refcnt, align 8
  store i32 %2, i32* %rc, align 4
  %3 = load i32, i32* %rc, align 4
  %cmp1 = icmp ugt i32 %3, 1
  br i1 %cmp1, label %cond.true2, label %cond.false3

cond.true2:                                       ; preds = %if.then
  br i1 true, label %if.then4, label %if.else

cond.false3:                                      ; preds = %if.then
  br i1 false, label %if.then4, label %if.else

if.then4:                                         ; preds = %cond.false3, %cond.true2
  %4 = load i32, i32* %rc, align 4
  %sub = sub i32 %4, 1
  %5 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_refcnt5 = getelementptr inbounds %struct.sv, %struct.sv* %5, i32 0, i32 1
  store i32 %sub, i32* %sv_refcnt5, align 8
  br label %if.end

if.else:                                          ; preds = %cond.false3, %cond.true2
  %6 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %7 = load i32, i32* %rc, align 4
  call void @Perl_sv_free2(%struct.sv* %6, i32 %7)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end6

if.end6:                                          ; preds = %if.end, %cond.false, %cond.true
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @my_regexec(%struct.p5rx* %rx, i8* %stringarg, i8* %strend, i8* %strbeg, i64 %minend, %struct.sv* %sv, i8* %data, i32 %flags) #0 {
entry:
  %retval = alloca i32, align 4
  %rx.addr = alloca %struct.p5rx*, align 8
  %stringarg.addr = alloca i8*, align 8
  %strend.addr = alloca i8*, align 8
  %strbeg.addr = alloca i8*, align 8
  %minend.addr = alloca i64, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %data.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %prog = alloca %struct.regexp*, align 8
  %s = alloca i8*, align 8
  %c = alloca %struct.regnode*, align 8
  %startpos = alloca i8*, align 8
  %minlen = alloca i64, align 8
  %dontbother = alloca i64, align 8
  %utf8_target = alloca i8, align 1
  %multiline = alloca i32, align 4
  %progi = alloca %struct.regexp_internal*, align 8
  %reginfo_buf = alloca %struct.regmatch_info, align 8
  %reginfo = alloca %struct.regmatch_info*, align 8
  %swap = alloca %struct.regexp_paren_pair*, align 8
  %oldsave = alloca i32, align 4
  %mg = alloca %struct.magic*, align 8
  %old_regmatch_state = alloca %struct.regmatch_state*, align 8
  %old_regmatch_slab = alloca %struct.regmatch_slab*, align 8
  %i = alloca i32, align 4
  %max = alloca i32, align 4
  %end257 = alloca i8*, align 8
  %ch = alloca i8, align 1
  %must = alloca %struct.sv*, align 8
  %back_max = alloca i64, align 8
  %back_min = alloca i64, align 8
  %last = alloca i8*, align 8
  %last1 = alloca i8*, align 8
  %t = alloca i8*, align 8
  %op = alloca i16, align 2
  %last879 = alloca i8*, align 8
  %float_real = alloca %struct.sv*, align 8
  %len = alloca i64, align 8
  %little = alloca i8*, align 8
  %checkpos = alloca i8*, align 8
  store %struct.p5rx* %rx, %struct.p5rx** %rx.addr, align 8
  store i8* %stringarg, i8** %stringarg.addr, align 8
  store i8* %strend, i8** %strend.addr, align 8
  store i8* %strbeg, i8** %strbeg.addr, align 8
  store i64 %minend, i64* %minend.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store i8* %data, i8** %data.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call = call %struct.regexp* @S_ReANY(%struct.p5rx* %0)
  store %struct.regexp* %call, %struct.regexp** %prog, align 8
  store i64 0, i64* %dontbother, align 8
  %1 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %1, i32 0, i32 2
  %2 = load i32, i32* %sv_flags, align 4
  %and = and i32 %2, 536870912
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %3 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints = getelementptr inbounds %struct.cop, %struct.cop* %3, i32 0, i32 10
  %4 = load i32, i32* %cop_hints, align 8
  %add = add i32 %4, 0
  %and1 = and i32 %add, 8
  %tobool2 = icmp ne i32 %and1, 0
  %lnot = xor i1 %tobool2, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ]
  %6 = zext i1 %5 to i64
  %cond = select i1 %5, i32 1, i32 0
  %tobool3 = icmp ne i32 %cond, 0
  %frombool = zext i1 %tobool3 to i8
  store i8 %frombool, i8* %utf8_target, align 1
  %7 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %pprivate = getelementptr inbounds %struct.regexp, %struct.regexp* %7, i32 0, i32 14
  %8 = load i8*, i8** %pprivate, align 8
  %9 = bitcast i8* %8 to %struct.regexp_internal*
  store %struct.regexp_internal* %9, %struct.regexp_internal** %progi, align 8
  store %struct.regmatch_info* %reginfo_buf, %struct.regmatch_info** %reginfo, align 8
  store %struct.regexp_paren_pair* null, %struct.regexp_paren_pair** %swap, align 8
  %10 = load i8*, i8** %data.addr, align 8
  %11 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %cmp = icmp eq %struct.regexp* %11, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.end
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %land.end
  %12 = load i8*, i8** %stringarg.addr, align 8
  store i8* %12, i8** %startpos, align 8
  %13 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags = getelementptr inbounds %struct.regexp, %struct.regexp* %13, i32 0, i32 13
  %14 = load i32, i32* %intflags, align 4
  %and4 = and i32 %14, 256
  %tobool5 = icmp ne i32 %and4, 0
  br i1 %tobool5, label %if.then6, label %if.end54

if.then6:                                         ; preds = %if.end
  %15 = load i32, i32* %flags.addr, align 4
  %and7 = and i32 %15, 8
  %tobool8 = icmp ne i32 %and7, 0
  br i1 %tobool8, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then6
  %16 = load i8*, i8** %stringarg.addr, align 8
  br label %cond.end16

cond.false:                                       ; preds = %if.then6
  %17 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call9 = call %struct.magic* @Perl_mg_find_mglob(%struct.sv* %17)
  store %struct.magic* %call9, %struct.magic** %mg, align 8
  %tobool10 = icmp ne %struct.magic* %call9, null
  br i1 %tobool10, label %land.lhs.true, label %cond.false14

land.lhs.true:                                    ; preds = %cond.false
  %18 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_len = getelementptr inbounds %struct.magic, %struct.magic* %18, i32 0, i32 5
  %19 = load i64, i64* %mg_len, align 8
  %cmp11 = icmp sge i64 %19, 0
  br i1 %cmp11, label %cond.true12, label %cond.false14

cond.true12:                                      ; preds = %land.lhs.true
  %20 = load i8*, i8** %strbeg.addr, align 8
  %21 = load %struct.magic*, %struct.magic** %mg, align 8
  %22 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %23 = load i8*, i8** %strbeg.addr, align 8
  %24 = load i8*, i8** %strend.addr, align 8
  %25 = load i8*, i8** %strbeg.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %24 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %25 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call13 = call i64 @S_MgBYTEPOS(%struct.magic* %21, %struct.sv* %22, i8* %23, i64 %sub.ptr.sub)
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 %call13
  br label %cond.end

cond.false14:                                     ; preds = %land.lhs.true, %cond.false
  %26 = load i8*, i8** %strbeg.addr, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false14, %cond.true12
  %cond15 = phi i8* [ %add.ptr, %cond.true12 ], [ %26, %cond.false14 ]
  br label %cond.end16

cond.end16:                                       ; preds = %cond.end, %cond.true
  %cond17 = phi i8* [ %16, %cond.true ], [ %cond15, %cond.end ]
  %27 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %ganch = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %27, i32 0, i32 5
  store i8* %cond17, i8** %ganch, align 8
  %28 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags18 = getelementptr inbounds %struct.regexp, %struct.regexp* %28, i32 0, i32 13
  %29 = load i32, i32* %intflags18, align 4
  %and19 = and i32 %29, 4096
  %tobool20 = icmp ne i32 %and19, 0
  br i1 %tobool20, label %if.then21, label %if.else

if.then21:                                        ; preds = %cond.end16
  %30 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %ganch22 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %30, i32 0, i32 5
  %31 = load i8*, i8** %ganch22, align 8
  %32 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %gofs = getelementptr inbounds %struct.regexp, %struct.regexp* %32, i32 0, i32 10
  %33 = load i64, i64* %gofs, align 8
  %idx.neg = sub i64 0, %33
  %add.ptr23 = getelementptr inbounds i8, i8* %31, i64 %idx.neg
  store i8* %add.ptr23, i8** %startpos, align 8
  %34 = load i8*, i8** %startpos, align 8
  %35 = load i32, i32* %flags.addr, align 4
  %and24 = and i32 %35, 128
  %tobool25 = icmp ne i32 %and24, 0
  br i1 %tobool25, label %cond.true26, label %cond.false27

cond.true26:                                      ; preds = %if.then21
  %36 = load i8*, i8** %stringarg.addr, align 8
  br label %cond.end28

cond.false27:                                     ; preds = %if.then21
  %37 = load i8*, i8** %strbeg.addr, align 8
  br label %cond.end28

cond.end28:                                       ; preds = %cond.false27, %cond.true26
  %cond29 = phi i8* [ %36, %cond.true26 ], [ %37, %cond.false27 ]
  %cmp30 = icmp ult i8* %34, %cond29
  br i1 %cmp30, label %if.then31, label %if.end32

if.then31:                                        ; preds = %cond.end28
  store i32 0, i32* %retval, align 4
  br label %return

if.end32:                                         ; preds = %cond.end28
  br label %if.end53

if.else:                                          ; preds = %cond.end16
  %38 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %gofs33 = getelementptr inbounds %struct.regexp, %struct.regexp* %38, i32 0, i32 10
  %39 = load i64, i64* %gofs33, align 8
  %tobool34 = icmp ne i64 %39, 0
  br i1 %tobool34, label %if.then35, label %if.else46

if.then35:                                        ; preds = %if.else
  %40 = load i8*, i8** %startpos, align 8
  %41 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %gofs36 = getelementptr inbounds %struct.regexp, %struct.regexp* %41, i32 0, i32 10
  %42 = load i64, i64* %gofs36, align 8
  %idx.neg37 = sub i64 0, %42
  %add.ptr38 = getelementptr inbounds i8, i8* %40, i64 %idx.neg37
  %43 = load i8*, i8** %strbeg.addr, align 8
  %cmp39 = icmp ult i8* %add.ptr38, %43
  br i1 %cmp39, label %if.then40, label %if.else41

if.then40:                                        ; preds = %if.then35
  %44 = load i8*, i8** %strbeg.addr, align 8
  store i8* %44, i8** %startpos, align 8
  br label %if.end45

if.else41:                                        ; preds = %if.then35
  %45 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %gofs42 = getelementptr inbounds %struct.regexp, %struct.regexp* %45, i32 0, i32 10
  %46 = load i64, i64* %gofs42, align 8
  %47 = load i8*, i8** %startpos, align 8
  %idx.neg43 = sub i64 0, %46
  %add.ptr44 = getelementptr inbounds i8, i8* %47, i64 %idx.neg43
  store i8* %add.ptr44, i8** %startpos, align 8
  br label %if.end45

if.end45:                                         ; preds = %if.else41, %if.then40
  br label %if.end52

if.else46:                                        ; preds = %if.else
  %48 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags47 = getelementptr inbounds %struct.regexp, %struct.regexp* %48, i32 0, i32 13
  %49 = load i32, i32* %intflags47, align 4
  %and48 = and i32 %49, 512
  %tobool49 = icmp ne i32 %and48, 0
  br i1 %tobool49, label %if.then50, label %if.end51

if.then50:                                        ; preds = %if.else46
  %50 = load i8*, i8** %strbeg.addr, align 8
  store i8* %50, i8** %startpos, align 8
  br label %if.end51

if.end51:                                         ; preds = %if.then50, %if.else46
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.end45
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.end32
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.end
  %51 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %minlen55 = getelementptr inbounds %struct.regexp, %struct.regexp* %51, i32 0, i32 8
  %52 = load i64, i64* %minlen55, align 8
  store i64 %52, i64* %minlen, align 8
  %53 = load i8*, i8** %startpos, align 8
  %54 = load i64, i64* %minlen, align 8
  %add.ptr56 = getelementptr inbounds i8, i8* %53, i64 %54
  %55 = load i8*, i8** %strend.addr, align 8
  %cmp57 = icmp ugt i8* %add.ptr56, %55
  br i1 %cmp57, label %if.then59, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end54
  %56 = load i8*, i8** %startpos, align 8
  %57 = load i8*, i8** %strbeg.addr, align 8
  %cmp58 = icmp ult i8* %56, %57
  br i1 %cmp58, label %if.then59, label %if.end60

if.then59:                                        ; preds = %lor.lhs.false, %if.end54
  store i32 0, i32* %retval, align 4
  br label %return

if.end60:                                         ; preds = %lor.lhs.false
  %58 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %58, i32* %oldsave, align 4
  %59 = load i8*, i8** %startpos, align 8
  store i8* %59, i8** %s, align 8
  %60 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags = getelementptr inbounds %struct.regexp, %struct.regexp* %60, i32 0, i32 7
  %61 = load i32, i32* %extflags, align 8
  %and61 = and i32 %61, 6291456
  %tobool62 = icmp ne i32 %and61, 0
  br i1 %tobool62, label %land.lhs.true63, label %if.end116

land.lhs.true63:                                  ; preds = %if.end60
  %62 = load i32, i32* %flags.addr, align 4
  %and64 = and i32 %62, 2
  %tobool65 = icmp ne i32 %and64, 0
  br i1 %tobool65, label %if.end116, label %if.then66

if.then66:                                        ; preds = %land.lhs.true63
  %63 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %64 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %65 = load i8*, i8** %strbeg.addr, align 8
  %66 = load i8*, i8** %startpos, align 8
  %67 = load i8*, i8** %strend.addr, align 8
  %68 = load i32, i32* %flags.addr, align 4
  %call67 = call i8* @my_re_intuit_start(%struct.p5rx* %63, %struct.sv* %64, i8* %65, i8* %66, i8* %67, i32 %68, %struct.re_scream_pos_data_s* null)
  store i8* %call67, i8** %s, align 8
  %69 = load i8*, i8** %s, align 8
  %tobool68 = icmp ne i8* %69, null
  br i1 %tobool68, label %if.end70, label %if.then69

if.then69:                                        ; preds = %if.then66
  store i32 0, i32* %retval, align 4
  br label %return

if.end70:                                         ; preds = %if.then66
  %70 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags71 = getelementptr inbounds %struct.regexp, %struct.regexp* %70, i32 0, i32 7
  %71 = load i32, i32* %extflags71, align 8
  %and72 = and i32 %71, 524288
  %tobool73 = icmp ne i32 %and72, 0
  br i1 %tobool73, label %if.then74, label %if.end115

if.then74:                                        ; preds = %if.end70
  %72 = load i32, i32* %flags.addr, align 4
  %and75 = and i32 %72, 128
  %tobool76 = icmp ne i32 %and75, 0
  br i1 %tobool76, label %land.lhs.true77, label %if.end80

land.lhs.true77:                                  ; preds = %if.then74
  %73 = load i8*, i8** %s, align 8
  %74 = load i8*, i8** %stringarg.addr, align 8
  %cmp78 = icmp ult i8* %73, %74
  br i1 %cmp78, label %if.then79, label %if.end80

if.then79:                                        ; preds = %land.lhs.true77
  br label %phooey

if.end80:                                         ; preds = %land.lhs.true77, %if.then74
  %75 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %lastcloseparen = getelementptr inbounds %struct.regexp, %struct.regexp* %75, i32 0, i32 16
  store i32 0, i32* %lastcloseparen, align 4
  %76 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %lastparen = getelementptr inbounds %struct.regexp, %struct.regexp* %76, i32 0, i32 15
  store i32 0, i32* %lastparen, align 8
  %77 = load i8, i8* %utf8_target, align 1
  %tobool81 = trunc i8 %77 to i1
  br i1 %tobool81, label %cond.true82, label %cond.false85

cond.true82:                                      ; preds = %if.end80
  %78 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call83 = call %struct.regexp* @S_ReANY(%struct.p5rx* %78)
  %extflags84 = getelementptr inbounds %struct.regexp, %struct.regexp* %call83, i32 0, i32 7
  %79 = load i32, i32* %extflags84, align 8
  %or = or i32 %79, 1048576
  store i32 %or, i32* %extflags84, align 8
  br label %cond.end89

cond.false85:                                     ; preds = %if.end80
  %80 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call86 = call %struct.regexp* @S_ReANY(%struct.p5rx* %80)
  %extflags87 = getelementptr inbounds %struct.regexp, %struct.regexp* %call86, i32 0, i32 7
  %81 = load i32, i32* %extflags87, align 8
  %and88 = and i32 %81, -1048577
  store i32 %and88, i32* %extflags87, align 8
  br label %cond.end89

cond.end89:                                       ; preds = %cond.false85, %cond.true82
  %cond90 = phi i32 [ %or, %cond.true82 ], [ %and88, %cond.false85 ]
  %82 = load i8*, i8** %s, align 8
  %83 = load i8*, i8** %strbeg.addr, align 8
  %sub.ptr.lhs.cast91 = ptrtoint i8* %82 to i64
  %sub.ptr.rhs.cast92 = ptrtoint i8* %83 to i64
  %sub.ptr.sub93 = sub i64 %sub.ptr.lhs.cast91, %sub.ptr.rhs.cast92
  %84 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs = getelementptr inbounds %struct.regexp, %struct.regexp* %84, i32 0, i32 17
  %85 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs, align 8
  %arrayidx = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %85, i64 0
  %start = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx, i32 0, i32 0
  store i64 %sub.ptr.sub93, i64* %start, align 8
  %86 = load i8, i8* %utf8_target, align 1
  %tobool94 = trunc i8 %86 to i1
  br i1 %tobool94, label %cond.true95, label %cond.false100

cond.true95:                                      ; preds = %cond.end89
  %87 = load i8*, i8** %s, align 8
  %88 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %minlenret = getelementptr inbounds %struct.regexp, %struct.regexp* %88, i32 0, i32 9
  %89 = load i64, i64* %minlenret, align 8
  %conv = trunc i64 %89 to i32
  %call96 = call i8* @Perl_utf8_hop(i8* %87, i32 %conv)
  %90 = load i8*, i8** %strbeg.addr, align 8
  %sub.ptr.lhs.cast97 = ptrtoint i8* %call96 to i64
  %sub.ptr.rhs.cast98 = ptrtoint i8* %90 to i64
  %sub.ptr.sub99 = sub i64 %sub.ptr.lhs.cast97, %sub.ptr.rhs.cast98
  br label %cond.end106

cond.false100:                                    ; preds = %cond.end89
  %91 = load i8*, i8** %s, align 8
  %92 = load i8*, i8** %strbeg.addr, align 8
  %sub.ptr.lhs.cast101 = ptrtoint i8* %91 to i64
  %sub.ptr.rhs.cast102 = ptrtoint i8* %92 to i64
  %sub.ptr.sub103 = sub i64 %sub.ptr.lhs.cast101, %sub.ptr.rhs.cast102
  %93 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %minlenret104 = getelementptr inbounds %struct.regexp, %struct.regexp* %93, i32 0, i32 9
  %94 = load i64, i64* %minlenret104, align 8
  %add105 = add nsw i64 %sub.ptr.sub103, %94
  br label %cond.end106

cond.end106:                                      ; preds = %cond.false100, %cond.true95
  %cond107 = phi i64 [ %sub.ptr.sub99, %cond.true95 ], [ %add105, %cond.false100 ]
  %95 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs108 = getelementptr inbounds %struct.regexp, %struct.regexp* %95, i32 0, i32 17
  %96 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs108, align 8
  %arrayidx109 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %96, i64 0
  %end = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx109, i32 0, i32 1
  store i64 %cond107, i64* %end, align 8
  %97 = load i32, i32* %flags.addr, align 4
  %and110 = and i32 %97, 16
  %tobool111 = icmp ne i32 %and110, 0
  br i1 %tobool111, label %if.end114, label %if.then112

if.then112:                                       ; preds = %cond.end106
  %98 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %99 = load i8*, i8** %strbeg.addr, align 8
  %100 = load i8*, i8** %strend.addr, align 8
  %101 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %102 = load i32, i32* %flags.addr, align 4
  %103 = load i8, i8* %utf8_target, align 1
  %tobool113 = trunc i8 %103 to i1
  call void @S_reg_set_capture_string(%struct.p5rx* %98, i8* %99, i8* %100, %struct.sv* %101, i32 %102, i1 zeroext %tobool113)
  br label %if.end114

if.end114:                                        ; preds = %if.then112, %cond.end106
  store i32 1, i32* %retval, align 4
  br label %return

if.end115:                                        ; preds = %if.end70
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %land.lhs.true63, %if.end60
  %104 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags117 = getelementptr inbounds %struct.regexp, %struct.regexp* %104, i32 0, i32 7
  %105 = load i32, i32* %extflags117, align 8
  %and118 = and i32 %105, 1
  store i32 %and118, i32* %multiline, align 4
  %106 = load i8*, i8** %strend.addr, align 8
  %107 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast119 = ptrtoint i8* %106 to i64
  %sub.ptr.rhs.cast120 = ptrtoint i8* %107 to i64
  %sub.ptr.sub121 = sub i64 %sub.ptr.lhs.cast119, %sub.ptr.rhs.cast120
  %108 = load i64, i64* %minlen, align 8
  %109 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs = getelementptr inbounds %struct.regexp, %struct.regexp* %109, i32 0, i32 11
  %110 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs, align 8
  %data122 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %110, i32 0, i32 1
  %arrayidx123 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data122, i64 0, i64 2
  %min_offset = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx123, i32 0, i32 0
  %111 = load i64, i64* %min_offset, align 8
  %cmp124 = icmp slt i64 %111, 0
  br i1 %cmp124, label %cond.true126, label %cond.false131

cond.true126:                                     ; preds = %if.end116
  %112 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs127 = getelementptr inbounds %struct.regexp, %struct.regexp* %112, i32 0, i32 11
  %113 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs127, align 8
  %data128 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %113, i32 0, i32 1
  %arrayidx129 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data128, i64 0, i64 2
  %min_offset130 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx129, i32 0, i32 0
  %114 = load i64, i64* %min_offset130, align 8
  br label %cond.end132

cond.false131:                                    ; preds = %if.end116
  br label %cond.end132

cond.end132:                                      ; preds = %cond.false131, %cond.true126
  %cond133 = phi i64 [ %114, %cond.true126 ], [ 0, %cond.false131 ]
  %add134 = add nsw i64 %108, %cond133
  %cmp135 = icmp slt i64 %sub.ptr.sub121, %add134
  br i1 %cmp135, label %if.then137, label %if.end138

if.then137:                                       ; preds = %cond.end132
  br label %phooey

if.end138:                                        ; preds = %cond.end132
  %115 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %program = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %115, i32 0, i32 6
  %arraydecay = getelementptr inbounds [1 x %struct.regnode], [1 x %struct.regnode]* %program, i64 0, i64 0
  %116 = bitcast %struct.regnode* %arraydecay to i8*
  %117 = load i8, i8* %116, align 4
  %conv139 = zext i8 %117 to i32
  %cmp140 = icmp ne i32 %conv139, 156
  br i1 %cmp140, label %if.then142, label %if.end143

if.then142:                                       ; preds = %if.end138
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0))
  br label %if.end143

if.end143:                                        ; preds = %if.then142, %if.end138
  %118 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call144 = call %struct.regexp* @S_ReANY(%struct.p5rx* %118)
  %extflags145 = getelementptr inbounds %struct.regexp, %struct.regexp* %call144, i32 0, i32 7
  %119 = load i32, i32* %extflags145, align 8
  %and146 = and i32 %119, -67108865
  store i32 %and146, i32* %extflags145, align 8
  %120 = load i8, i8* %utf8_target, align 1
  %tobool147 = trunc i8 %120 to i1
  br i1 %tobool147, label %cond.true149, label %cond.false153

cond.true149:                                     ; preds = %if.end143
  %121 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call150 = call %struct.regexp* @S_ReANY(%struct.p5rx* %121)
  %extflags151 = getelementptr inbounds %struct.regexp, %struct.regexp* %call150, i32 0, i32 7
  %122 = load i32, i32* %extflags151, align 8
  %or152 = or i32 %122, 1048576
  store i32 %or152, i32* %extflags151, align 8
  br label %cond.end157

cond.false153:                                    ; preds = %if.end143
  %123 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call154 = call %struct.regexp* @S_ReANY(%struct.p5rx* %123)
  %extflags155 = getelementptr inbounds %struct.regexp, %struct.regexp* %call154, i32 0, i32 7
  %124 = load i32, i32* %extflags155, align 8
  %and156 = and i32 %124, -1048577
  store i32 %and156, i32* %extflags155, align 8
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false153, %cond.true149
  %cond158 = phi i32 [ %or152, %cond.true149 ], [ %and156, %cond.false153 ]
  %125 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %126 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %prog159 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %126, i32 0, i32 0
  store %struct.p5rx* %125, %struct.p5rx** %prog159, align 8
  %127 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %intuit = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %127, i32 0, i32 12
  store i8 0, i8* %intuit, align 8
  %128 = load i8, i8* %utf8_target, align 1
  %tobool160 = trunc i8 %128 to i1
  %129 = zext i1 %tobool160 to i64
  %cond162 = select i1 %tobool160, i32 1, i32 0
  %tobool163 = icmp ne i32 %cond162, 0
  %130 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %130, i32 0, i32 14
  %frombool164 = zext i1 %tobool163 to i8
  store i8 %frombool164, i8* %is_utf8_target, align 2
  %131 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %sv_flags165 = getelementptr inbounds %struct.p5rx, %struct.p5rx* %131, i32 0, i32 2
  %132 = load i32, i32* %sv_flags165, align 4
  %and166 = and i32 %132, 536870912
  %tobool167 = icmp ne i32 %and166, 0
  %133 = zext i1 %tobool167 to i64
  %cond168 = select i1 %tobool167, i32 1, i32 0
  %tobool169 = icmp ne i32 %cond168, 0
  %134 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_pat = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %134, i32 0, i32 13
  %frombool170 = zext i1 %tobool169 to i8
  store i8 %frombool170, i8* %is_utf8_pat, align 1
  %135 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %warned = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %135, i32 0, i32 15
  store i8 0, i8* %warned, align 1
  %136 = load i8*, i8** %strbeg.addr, align 8
  %137 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strbeg171 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %137, i32 0, i32 1
  store i8* %136, i8** %strbeg171, align 8
  %138 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %139 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %sv172 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %139, i32 0, i32 4
  store %struct.sv* %138, %struct.sv** %sv172, align 8
  %140 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %poscache_maxiter = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %140, i32 0, i32 9
  store i32 0, i32* %poscache_maxiter, align 8
  %141 = load i8*, i8** %strend.addr, align 8
  %142 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strend173 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %142, i32 0, i32 2
  store i8* %141, i8** %strend173, align 8
  %143 = load i8*, i8** %stringarg.addr, align 8
  %144 = load i64, i64* %minend.addr, align 8
  %add.ptr174 = getelementptr inbounds i8, i8* %143, i64 %144
  %145 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %till = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %145, i32 0, i32 3
  store i8* %add.ptr174, i8** %till, align 8
  %146 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags175 = getelementptr inbounds %struct.regexp, %struct.regexp* %146, i32 0, i32 7
  %147 = load i32, i32* %extflags175, align 8
  %and176 = and i32 %147, 131072
  %tobool177 = icmp ne i32 %and176, 0
  br i1 %tobool177, label %land.lhs.true178, label %if.end194

land.lhs.true178:                                 ; preds = %cond.end157
  %148 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags179 = getelementptr inbounds %struct.sv, %struct.sv* %148, i32 0, i32 2
  %149 = load i32, i32* %sv_flags179, align 4
  %and180 = and i32 %149, 131072
  %tobool181 = icmp ne i32 %and180, 0
  br i1 %tobool181, label %if.then182, label %if.end194

if.then182:                                       ; preds = %land.lhs.true178
  %call183 = call %struct.sv* @Perl_newSV(i64 0)
  %150 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %sv184 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %150, i32 0, i32 4
  store %struct.sv* %call183, %struct.sv** %sv184, align 8
  br label %do.body

do.body:                                          ; preds = %if.then182
  %151 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %sv185 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %151, i32 0, i32 4
  %152 = load %struct.sv*, %struct.sv** %sv185, align 8
  %153 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %cmp186 = icmp ne %struct.sv* %152, %153
  br i1 %cmp186, label %cond.true188, label %cond.false189

cond.true188:                                     ; preds = %do.body
  br i1 true, label %if.then190, label %if.end192

cond.false189:                                    ; preds = %do.body
  br i1 false, label %if.then190, label %if.end192

if.then190:                                       ; preds = %cond.false189, %cond.true188
  %154 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %sv191 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %154, i32 0, i32 4
  %155 = load %struct.sv*, %struct.sv** %sv191, align 8
  %156 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %155, %struct.sv* %156, i32 1554)
  br label %if.end192

if.end192:                                        ; preds = %if.then190, %cond.false189, %cond.true188
  br label %do.end

do.end:                                           ; preds = %if.end192
  %157 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %sv193 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %157, i32 0, i32 4
  %158 = load %struct.sv*, %struct.sv** %sv193, align 8
  %159 = bitcast %struct.sv* %158 to i8*
  %160 = bitcast i8* %159 to %struct.sv*
  %161 = bitcast %struct.sv* %160 to i8*
  call void @Perl_save_pushptr(i8* %161, i32 11)
  br label %if.end194

if.end194:                                        ; preds = %do.end, %land.lhs.true178, %cond.end157
  %162 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags195 = getelementptr inbounds %struct.regexp, %struct.regexp* %162, i32 0, i32 7
  %163 = load i32, i32* %extflags195, align 8
  %and196 = and i32 %163, 131072
  %tobool197 = icmp ne i32 %and196, 0
  %164 = zext i1 %tobool197 to i64
  %cond198 = select i1 %tobool197, i32 2, i32 1
  store i32 %cond198, i32* %max, align 4
  %165 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %tobool199 = icmp ne %struct.regmatch_slab* %165, null
  br i1 %tobool199, label %if.end203, label %if.then200

if.then200:                                       ; preds = %if.end194
  %call201 = call i8* @Perl_safesysmalloc(i64 3976)
  %166 = bitcast i8* %call201 to %struct.regmatch_slab*
  store %struct.regmatch_slab* %166, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %167 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %prev = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %167, i32 0, i32 1
  store %struct.regmatch_slab* null, %struct.regmatch_slab** %prev, align 8
  %168 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %next = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %168, i32 0, i32 2
  store %struct.regmatch_slab* null, %struct.regmatch_slab** %next, align 8
  %169 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %states = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %169, i32 0, i32 0
  %arrayidx202 = getelementptr inbounds [33 x %struct.regmatch_state], [33 x %struct.regmatch_state]* %states, i64 0, i64 0
  store %struct.regmatch_state* %arrayidx202, %struct.regmatch_state** @PL_regmatch_state, align 8
  br label %if.end203

if.end203:                                        ; preds = %if.then200, %if.end194
  %170 = load %struct.regmatch_state*, %struct.regmatch_state** @PL_regmatch_state, align 8
  store %struct.regmatch_state* %170, %struct.regmatch_state** %old_regmatch_state, align 8
  %171 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  store %struct.regmatch_slab* %171, %struct.regmatch_slab** %old_regmatch_slab, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end203
  %172 = load i32, i32* %i, align 4
  %173 = load i32, i32* %max, align 4
  %cmp204 = icmp sle i32 %172, %173
  br i1 %cmp204, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %174 = load i32, i32* %i, align 4
  %cmp206 = icmp eq i32 %174, 1
  br i1 %cmp206, label %if.then208, label %if.else210

if.then208:                                       ; preds = %for.body
  %175 = load %struct.regmatch_state*, %struct.regmatch_state** @PL_regmatch_state, align 8
  %u = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %175, i32 0, i32 2
  %info_aux = bitcast %union.anon.19* %u to %struct.regmatch_info_aux*
  %176 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %info_aux209 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %176, i32 0, i32 7
  store %struct.regmatch_info_aux* %info_aux, %struct.regmatch_info_aux** %info_aux209, align 8
  br label %if.end219

if.else210:                                       ; preds = %for.body
  %177 = load i32, i32* %i, align 4
  %cmp211 = icmp eq i32 %177, 2
  br i1 %cmp211, label %if.then213, label %if.end218

if.then213:                                       ; preds = %if.else210
  %178 = load %struct.regmatch_state*, %struct.regmatch_state** @PL_regmatch_state, align 8
  %u214 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %178, i32 0, i32 2
  %info_aux_eval = bitcast %union.anon.19* %u214 to %struct.regmatch_info_aux_eval*
  %179 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %info_aux215 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %179, i32 0, i32 7
  %180 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %info_aux215, align 8
  %info_aux_eval216 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %180, i32 0, i32 0
  store %struct.regmatch_info_aux_eval* %info_aux_eval, %struct.regmatch_info_aux_eval** %info_aux_eval216, align 8
  %181 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %info_aux_eval217 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %181, i32 0, i32 8
  store %struct.regmatch_info_aux_eval* %info_aux_eval, %struct.regmatch_info_aux_eval** %info_aux_eval217, align 8
  br label %if.end218

if.end218:                                        ; preds = %if.then213, %if.else210
  br label %if.end219

if.end219:                                        ; preds = %if.end218, %if.then208
  %182 = load %struct.regmatch_state*, %struct.regmatch_state** @PL_regmatch_state, align 8
  %incdec.ptr = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %182, i32 1
  store %struct.regmatch_state* %incdec.ptr, %struct.regmatch_state** @PL_regmatch_state, align 8
  %183 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %states220 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %183, i32 0, i32 0
  %arrayidx221 = getelementptr inbounds [33 x %struct.regmatch_state], [33 x %struct.regmatch_state]* %states220, i64 0, i64 32
  %cmp222 = icmp ugt %struct.regmatch_state* %incdec.ptr, %arrayidx221
  br i1 %cmp222, label %if.then224, label %if.end226

if.then224:                                       ; preds = %if.end219
  %call225 = call %struct.regmatch_state* @S_push_slab()
  store %struct.regmatch_state* %call225, %struct.regmatch_state** @PL_regmatch_state, align 8
  br label %if.end226

if.end226:                                        ; preds = %if.then224, %if.end219
  br label %for.inc

for.inc:                                          ; preds = %if.end226
  %184 = load i32, i32* %i, align 4
  %inc = add nsw i32 %184, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %185 = load %struct.regmatch_state*, %struct.regmatch_state** %old_regmatch_state, align 8
  %186 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %info_aux227 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %186, i32 0, i32 7
  %187 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %info_aux227, align 8
  %old_regmatch_state228 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %187, i32 0, i32 1
  store %struct.regmatch_state* %185, %struct.regmatch_state** %old_regmatch_state228, align 8
  %188 = load %struct.regmatch_slab*, %struct.regmatch_slab** %old_regmatch_slab, align 8
  %189 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %info_aux229 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %189, i32 0, i32 7
  %190 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %info_aux229, align 8
  %old_regmatch_slab230 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %190, i32 0, i32 2
  store %struct.regmatch_slab* %188, %struct.regmatch_slab** %old_regmatch_slab230, align 8
  %191 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %info_aux231 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %191, i32 0, i32 7
  %192 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %info_aux231, align 8
  %poscache = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %192, i32 0, i32 3
  store i8* null, i8** %poscache, align 8
  %193 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %info_aux232 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %193, i32 0, i32 7
  %194 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %info_aux232, align 8
  %195 = bitcast %struct.regmatch_info_aux* %194 to i8*
  call void @Perl_save_destructor_x(void (i8*)* @S_cleanup_regmatch_info_aux, i8* %195)
  %196 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags233 = getelementptr inbounds %struct.regexp, %struct.regexp* %196, i32 0, i32 7
  %197 = load i32, i32* %extflags233, align 8
  %and234 = and i32 %197, 131072
  %tobool235 = icmp ne i32 %and234, 0
  br i1 %tobool235, label %if.then236, label %if.else237

if.then236:                                       ; preds = %for.end
  %198 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  call void @S_setup_eval_state(%struct.regmatch_info* %198)
  br label %if.end241

if.else237:                                       ; preds = %for.end
  %199 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %info_aux238 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %199, i32 0, i32 7
  %200 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %info_aux238, align 8
  %info_aux_eval239 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %200, i32 0, i32 0
  store %struct.regmatch_info_aux_eval* null, %struct.regmatch_info_aux_eval** %info_aux_eval239, align 8
  %201 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %info_aux_eval240 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %201, i32 0, i32 8
  store %struct.regmatch_info_aux_eval* null, %struct.regmatch_info_aux_eval** %info_aux_eval240, align 8
  br label %if.end241

if.end241:                                        ; preds = %if.else237, %if.then236
  %202 = load %struct.pmop*, %struct.pmop** @PL_curpm, align 8
  %tobool242 = icmp ne %struct.pmop* %202, null
  br i1 %tobool242, label %land.lhs.true243, label %if.end252

land.lhs.true243:                                 ; preds = %if.end241
  %203 = load %struct.pmop*, %struct.pmop** @PL_curpm, align 8
  %op_pmregexp = getelementptr inbounds %struct.pmop, %struct.pmop* %203, i32 0, i32 9
  %204 = load %struct.p5rx*, %struct.p5rx** %op_pmregexp, align 8
  %205 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %cmp244 = icmp eq %struct.p5rx* %204, %205
  br i1 %cmp244, label %if.then246, label %if.end252

if.then246:                                       ; preds = %land.lhs.true243
  %206 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs247 = getelementptr inbounds %struct.regexp, %struct.regexp* %206, i32 0, i32 17
  %207 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs247, align 8
  store %struct.regexp_paren_pair* %207, %struct.regexp_paren_pair** %swap, align 8
  %208 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %nparens = getelementptr inbounds %struct.regexp, %struct.regexp* %208, i32 0, i32 12
  %209 = load i32, i32* %nparens, align 8
  %add248 = add i32 %209, 1
  %conv249 = zext i32 %add248 to i64
  %call250 = call i8* @Perl_safesyscalloc(i64 %conv249, i64 24)
  %210 = bitcast i8* %call250 to %struct.regexp_paren_pair*
  %211 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs251 = getelementptr inbounds %struct.regexp, %struct.regexp* %211, i32 0, i32 17
  store %struct.regexp_paren_pair* %210, %struct.regexp_paren_pair** %offs251, align 8
  br label %if.end252

if.end252:                                        ; preds = %if.then246, %land.lhs.true243, %if.end241
  %212 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags253 = getelementptr inbounds %struct.regexp, %struct.regexp* %212, i32 0, i32 13
  %213 = load i32, i32* %intflags253, align 4
  %and254 = and i32 %213, 3072
  %tobool255 = icmp ne i32 %and254, 0
  br i1 %tobool255, label %if.then256, label %if.end309

if.then256:                                       ; preds = %if.end252
  %214 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %call258 = call i32 @S_regtry(%struct.regmatch_info* %214, i8** %s)
  %tobool259 = icmp ne i32 %call258, 0
  br i1 %tobool259, label %if.then260, label %if.end261

if.then260:                                       ; preds = %if.then256
  br label %got_it

if.end261:                                        ; preds = %if.then256
  %215 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags262 = getelementptr inbounds %struct.regexp, %struct.regexp* %215, i32 0, i32 13
  %216 = load i32, i32* %intflags262, align 4
  %and263 = and i32 %216, 1024
  %tobool264 = icmp ne i32 %and263, 0
  br i1 %tobool264, label %if.end266, label %if.then265

if.then265:                                       ; preds = %if.end261
  br label %phooey

if.end266:                                        ; preds = %if.end261
  %217 = load i64, i64* %minlen, align 8
  %tobool267 = icmp ne i64 %217, 0
  br i1 %tobool267, label %if.then268, label %if.end269

if.then268:                                       ; preds = %if.end266
  %218 = load i64, i64* %minlen, align 8
  %sub = sub nsw i64 %218, 1
  store i64 %sub, i64* %dontbother, align 8
  br label %if.end269

if.end269:                                        ; preds = %if.then268, %if.end266
  %219 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target270 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %219, i32 0, i32 14
  %220 = load i8, i8* %is_utf8_target270, align 2
  %tobool271 = trunc i8 %220 to i1
  br i1 %tobool271, label %cond.true273, label %cond.false276

cond.true273:                                     ; preds = %if.end269
  %221 = load i8*, i8** %strend.addr, align 8
  %222 = load i64, i64* %dontbother, align 8
  %sub274 = sub nsw i64 0, %222
  %223 = load i8*, i8** %strbeg.addr, align 8
  %call275 = call i8* @S_reghop3(i8* %221, i64 %sub274, i8* %223)
  br label %cond.end279

cond.false276:                                    ; preds = %if.end269
  %224 = load i8*, i8** %strend.addr, align 8
  %225 = load i64, i64* %dontbother, align 8
  %sub277 = sub nsw i64 0, %225
  %add.ptr278 = getelementptr inbounds i8, i8* %224, i64 %sub277
  br label %cond.end279

cond.end279:                                      ; preds = %cond.false276, %cond.true273
  %cond280 = phi i8* [ %call275, %cond.true273 ], [ %add.ptr278, %cond.false276 ]
  %add.ptr281 = getelementptr inbounds i8, i8* %cond280, i64 -1
  store i8* %add.ptr281, i8** %end257, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end308, %if.then288, %cond.end279
  %226 = load i8*, i8** %s, align 8
  %227 = load i8*, i8** %end257, align 8
  %cmp282 = icmp ule i8* %226, %227
  br i1 %cmp282, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %228 = load i8*, i8** %s, align 8
  %incdec.ptr284 = getelementptr inbounds i8, i8* %228, i32 1
  store i8* %incdec.ptr284, i8** %s, align 8
  %229 = load i8, i8* %228, align 1
  %conv285 = sext i8 %229 to i32
  %cmp286 = icmp ne i32 %conv285, 10
  br i1 %cmp286, label %if.then288, label %if.end289

if.then288:                                       ; preds = %while.body
  br label %while.cond

if.end289:                                        ; preds = %while.body
  %230 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs290 = getelementptr inbounds %struct.regexp, %struct.regexp* %230, i32 0, i32 11
  %231 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs290, align 8
  %data291 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %231, i32 0, i32 1
  %arrayidx292 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data291, i64 0, i64 2
  %substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx292, i32 0, i32 2
  %232 = load %struct.sv*, %struct.sv** %substr, align 8
  %tobool293 = icmp ne %struct.sv* %232, null
  br i1 %tobool293, label %if.then299, label %lor.lhs.false294

lor.lhs.false294:                                 ; preds = %if.end289
  %233 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs295 = getelementptr inbounds %struct.regexp, %struct.regexp* %233, i32 0, i32 11
  %234 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs295, align 8
  %data296 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %234, i32 0, i32 1
  %arrayidx297 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data296, i64 0, i64 2
  %utf8_substr = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx297, i32 0, i32 3
  %235 = load %struct.sv*, %struct.sv** %utf8_substr, align 8
  %tobool298 = icmp ne %struct.sv* %235, null
  br i1 %tobool298, label %if.then299, label %if.end304

if.then299:                                       ; preds = %lor.lhs.false294, %if.end289
  %236 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %237 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %238 = load i8*, i8** %strbeg.addr, align 8
  %239 = load i8*, i8** %s, align 8
  %240 = load i8*, i8** %strend.addr, align 8
  %241 = load i32, i32* %flags.addr, align 4
  %call300 = call i8* @my_re_intuit_start(%struct.p5rx* %236, %struct.sv* %237, i8* %238, i8* %239, i8* %240, i32 %241, %struct.re_scream_pos_data_s* null)
  store i8* %call300, i8** %s, align 8
  %242 = load i8*, i8** %s, align 8
  %tobool301 = icmp ne i8* %242, null
  br i1 %tobool301, label %if.end303, label %if.then302

if.then302:                                       ; preds = %if.then299
  br label %phooey

if.end303:                                        ; preds = %if.then299
  br label %if.end304

if.end304:                                        ; preds = %if.end303, %lor.lhs.false294
  %243 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %call305 = call i32 @S_regtry(%struct.regmatch_info* %243, i8** %s)
  %tobool306 = icmp ne i32 %call305, 0
  br i1 %tobool306, label %if.then307, label %if.end308

if.then307:                                       ; preds = %if.end304
  br label %got_it

if.end308:                                        ; preds = %if.end304
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %phooey

if.end309:                                        ; preds = %if.end252
  %244 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags310 = getelementptr inbounds %struct.regexp, %struct.regexp* %244, i32 0, i32 13
  %245 = load i32, i32* %intflags310, align 4
  %and311 = and i32 %245, 4096
  %tobool312 = icmp ne i32 %and311, 0
  br i1 %tobool312, label %if.then313, label %if.end321

if.then313:                                       ; preds = %if.end309
  %246 = load i8*, i8** %s, align 8
  %247 = load i8*, i8** %startpos, align 8
  %cmp314 = icmp eq i8* %246, %247
  br i1 %cmp314, label %land.lhs.true316, label %if.end320

land.lhs.true316:                                 ; preds = %if.then313
  %248 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %call317 = call i32 @S_regtry(%struct.regmatch_info* %248, i8** %s)
  %tobool318 = icmp ne i32 %call317, 0
  br i1 %tobool318, label %if.then319, label %if.end320

if.then319:                                       ; preds = %land.lhs.true316
  br label %got_it

if.end320:                                        ; preds = %land.lhs.true316, %if.then313
  br label %phooey

if.end321:                                        ; preds = %if.end309
  %249 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs322 = getelementptr inbounds %struct.regexp, %struct.regexp* %249, i32 0, i32 11
  %250 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs322, align 8
  %data323 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %250, i32 0, i32 1
  %arrayidx324 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data323, i64 0, i64 0
  %substr325 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx324, i32 0, i32 2
  %251 = load %struct.sv*, %struct.sv** %substr325, align 8
  %tobool326 = icmp ne %struct.sv* %251, null
  br i1 %tobool326, label %land.lhs.true333, label %lor.lhs.false327

lor.lhs.false327:                                 ; preds = %if.end321
  %252 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs328 = getelementptr inbounds %struct.regexp, %struct.regexp* %252, i32 0, i32 11
  %253 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs328, align 8
  %data329 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %253, i32 0, i32 1
  %arrayidx330 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data329, i64 0, i64 0
  %utf8_substr331 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx330, i32 0, i32 3
  %254 = load %struct.sv*, %struct.sv** %utf8_substr331, align 8
  %tobool332 = icmp ne %struct.sv* %254, null
  br i1 %tobool332, label %land.lhs.true333, label %if.else443

land.lhs.true333:                                 ; preds = %lor.lhs.false327, %if.end321
  %255 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %intflags334 = getelementptr inbounds %struct.regexp, %struct.regexp* %255, i32 0, i32 13
  %256 = load i32, i32* %intflags334, align 4
  %and335 = and i32 %256, 1
  %tobool336 = icmp ne i32 %and335, 0
  br i1 %tobool336, label %if.then337, label %if.else443

if.then337:                                       ; preds = %land.lhs.true333
  %257 = load i8, i8* %utf8_target, align 1
  %tobool338 = trunc i8 %257 to i1
  br i1 %tobool338, label %if.then339, label %if.else390

if.then339:                                       ; preds = %if.then337
  %258 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs340 = getelementptr inbounds %struct.regexp, %struct.regexp* %258, i32 0, i32 11
  %259 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs340, align 8
  %data341 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %259, i32 0, i32 1
  %arrayidx342 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data341, i64 0, i64 0
  %utf8_substr343 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx342, i32 0, i32 3
  %260 = load %struct.sv*, %struct.sv** %utf8_substr343, align 8
  %tobool344 = icmp ne %struct.sv* %260, null
  br i1 %tobool344, label %if.end346, label %if.then345

if.then345:                                       ; preds = %if.then339
  %261 = load %struct.regexp*, %struct.regexp** %prog, align 8
  call void @S_to_utf8_substr(%struct.regexp* %261)
  br label %if.end346

if.end346:                                        ; preds = %if.then345, %if.then339
  %262 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs347 = getelementptr inbounds %struct.regexp, %struct.regexp* %262, i32 0, i32 11
  %263 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs347, align 8
  %data348 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %263, i32 0, i32 1
  %arrayidx349 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data348, i64 0, i64 0
  %utf8_substr350 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx349, i32 0, i32 3
  %264 = load %struct.sv*, %struct.sv** %utf8_substr350, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %264, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %265 = load i8*, i8** %svu_pv, align 8
  %add.ptr351 = getelementptr inbounds i8, i8* %265, i64 0
  %arrayidx352 = getelementptr inbounds i8, i8* %add.ptr351, i64 0
  %266 = load i8, i8* %arrayidx352, align 1
  store i8 %266, i8* %ch, align 1
  br label %do.body353

do.body353:                                       ; preds = %if.end346
  br label %while.cond354

while.cond354:                                    ; preds = %if.end386, %do.body353
  %267 = load i8*, i8** %s, align 8
  %268 = load i8*, i8** %strend.addr, align 8
  %cmp355 = icmp ult i8* %267, %268
  br i1 %cmp355, label %while.body357, label %while.end388

while.body357:                                    ; preds = %while.cond354
  %269 = load i8*, i8** %s, align 8
  %270 = load i8, i8* %269, align 1
  %conv358 = sext i8 %270 to i32
  %271 = load i8, i8* %ch, align 1
  %conv359 = sext i8 %271 to i32
  %cmp360 = icmp eq i32 %conv358, %conv359
  br i1 %cmp360, label %if.then362, label %if.end386

if.then362:                                       ; preds = %while.body357
  %272 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %call363 = call i32 @S_regtry(%struct.regmatch_info* %272, i8** %s)
  %tobool364 = icmp ne i32 %call363, 0
  br i1 %tobool364, label %if.then365, label %if.end366

if.then365:                                       ; preds = %if.then362
  br label %got_it

if.end366:                                        ; preds = %if.then362
  %273 = load i8*, i8** %s, align 8
  %274 = load i8, i8* %273, align 1
  %idxprom = zext i8 %274 to i64
  %arrayidx367 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom
  %275 = load i8, i8* %arrayidx367, align 1
  %conv368 = zext i8 %275 to i32
  %276 = load i8*, i8** %s, align 8
  %idx.ext = sext i32 %conv368 to i64
  %add.ptr369 = getelementptr inbounds i8, i8* %276, i64 %idx.ext
  store i8* %add.ptr369, i8** %s, align 8
  br label %while.cond370

while.cond370:                                    ; preds = %while.body379, %if.end366
  %277 = load i8*, i8** %s, align 8
  %278 = load i8*, i8** %strend.addr, align 8
  %cmp371 = icmp ult i8* %277, %278
  br i1 %cmp371, label %land.rhs373, label %land.end378

land.rhs373:                                      ; preds = %while.cond370
  %279 = load i8*, i8** %s, align 8
  %280 = load i8, i8* %279, align 1
  %conv374 = sext i8 %280 to i32
  %281 = load i8, i8* %ch, align 1
  %conv375 = sext i8 %281 to i32
  %cmp376 = icmp eq i32 %conv374, %conv375
  br label %land.end378

land.end378:                                      ; preds = %land.rhs373, %while.cond370
  %282 = phi i1 [ false, %while.cond370 ], [ %cmp376, %land.rhs373 ]
  br i1 %282, label %while.body379, label %while.end385

while.body379:                                    ; preds = %land.end378
  %283 = load i8*, i8** %s, align 8
  %284 = load i8, i8* %283, align 1
  %idxprom380 = zext i8 %284 to i64
  %arrayidx381 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom380
  %285 = load i8, i8* %arrayidx381, align 1
  %conv382 = zext i8 %285 to i32
  %286 = load i8*, i8** %s, align 8
  %idx.ext383 = sext i32 %conv382 to i64
  %add.ptr384 = getelementptr inbounds i8, i8* %286, i64 %idx.ext383
  store i8* %add.ptr384, i8** %s, align 8
  br label %while.cond370

while.end385:                                     ; preds = %land.end378
  br label %if.end386

if.end386:                                        ; preds = %while.end385, %while.body357
  %287 = load i8*, i8** %s, align 8
  %incdec.ptr387 = getelementptr inbounds i8, i8* %287, i32 1
  store i8* %incdec.ptr387, i8** %s, align 8
  br label %while.cond354

while.end388:                                     ; preds = %while.cond354
  br label %do.end389

do.end389:                                        ; preds = %while.end388
  br label %if.end442

if.else390:                                       ; preds = %if.then337
  %288 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs391 = getelementptr inbounds %struct.regexp, %struct.regexp* %288, i32 0, i32 11
  %289 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs391, align 8
  %data392 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %289, i32 0, i32 1
  %arrayidx393 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data392, i64 0, i64 0
  %substr394 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx393, i32 0, i32 2
  %290 = load %struct.sv*, %struct.sv** %substr394, align 8
  %tobool395 = icmp ne %struct.sv* %290, null
  br i1 %tobool395, label %if.end402, label %if.then396

if.then396:                                       ; preds = %if.else390
  %291 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %call397 = call zeroext i1 @S_to_byte_substr(%struct.regexp* %291)
  br i1 %call397, label %if.end401, label %if.then398

if.then398:                                       ; preds = %if.then396
  br label %do.body399

do.body399:                                       ; preds = %if.then398
  br label %phooey

do.end400:                                        ; No predecessors!
  br label %if.end401

if.end401:                                        ; preds = %do.end400, %if.then396
  br label %if.end402

if.end402:                                        ; preds = %if.end401, %if.else390
  %292 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs403 = getelementptr inbounds %struct.regexp, %struct.regexp* %292, i32 0, i32 11
  %293 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs403, align 8
  %data404 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %293, i32 0, i32 1
  %arrayidx405 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data404, i64 0, i64 0
  %substr406 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx405, i32 0, i32 2
  %294 = load %struct.sv*, %struct.sv** %substr406, align 8
  %sv_u407 = getelementptr inbounds %struct.sv, %struct.sv* %294, i32 0, i32 3
  %svu_pv408 = bitcast %union.anon* %sv_u407 to i8**
  %295 = load i8*, i8** %svu_pv408, align 8
  %add.ptr409 = getelementptr inbounds i8, i8* %295, i64 0
  %arrayidx410 = getelementptr inbounds i8, i8* %add.ptr409, i64 0
  %296 = load i8, i8* %arrayidx410, align 1
  store i8 %296, i8* %ch, align 1
  br label %do.body411

do.body411:                                       ; preds = %if.end402
  br label %while.cond412

while.cond412:                                    ; preds = %if.end438, %do.body411
  %297 = load i8*, i8** %s, align 8
  %298 = load i8*, i8** %strend.addr, align 8
  %cmp413 = icmp ult i8* %297, %298
  br i1 %cmp413, label %while.body415, label %while.end440

while.body415:                                    ; preds = %while.cond412
  %299 = load i8*, i8** %s, align 8
  %300 = load i8, i8* %299, align 1
  %conv416 = sext i8 %300 to i32
  %301 = load i8, i8* %ch, align 1
  %conv417 = sext i8 %301 to i32
  %cmp418 = icmp eq i32 %conv416, %conv417
  br i1 %cmp418, label %if.then420, label %if.end438

if.then420:                                       ; preds = %while.body415
  %302 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %call421 = call i32 @S_regtry(%struct.regmatch_info* %302, i8** %s)
  %tobool422 = icmp ne i32 %call421, 0
  br i1 %tobool422, label %if.then423, label %if.end424

if.then423:                                       ; preds = %if.then420
  br label %got_it

if.end424:                                        ; preds = %if.then420
  %303 = load i8*, i8** %s, align 8
  %incdec.ptr425 = getelementptr inbounds i8, i8* %303, i32 1
  store i8* %incdec.ptr425, i8** %s, align 8
  br label %while.cond426

while.cond426:                                    ; preds = %while.body435, %if.end424
  %304 = load i8*, i8** %s, align 8
  %305 = load i8*, i8** %strend.addr, align 8
  %cmp427 = icmp ult i8* %304, %305
  br i1 %cmp427, label %land.rhs429, label %land.end434

land.rhs429:                                      ; preds = %while.cond426
  %306 = load i8*, i8** %s, align 8
  %307 = load i8, i8* %306, align 1
  %conv430 = sext i8 %307 to i32
  %308 = load i8, i8* %ch, align 1
  %conv431 = sext i8 %308 to i32
  %cmp432 = icmp eq i32 %conv430, %conv431
  br label %land.end434

land.end434:                                      ; preds = %land.rhs429, %while.cond426
  %309 = phi i1 [ false, %while.cond426 ], [ %cmp432, %land.rhs429 ]
  br i1 %309, label %while.body435, label %while.end437

while.body435:                                    ; preds = %land.end434
  %310 = load i8*, i8** %s, align 8
  %incdec.ptr436 = getelementptr inbounds i8, i8* %310, i32 1
  store i8* %incdec.ptr436, i8** %s, align 8
  br label %while.cond426

while.end437:                                     ; preds = %land.end434
  br label %if.end438

if.end438:                                        ; preds = %while.end437, %while.body415
  %311 = load i8*, i8** %s, align 8
  %incdec.ptr439 = getelementptr inbounds i8, i8* %311, i32 1
  store i8* %incdec.ptr439, i8** %s, align 8
  br label %while.cond412

while.end440:                                     ; preds = %while.cond412
  br label %do.end441

do.end441:                                        ; preds = %while.end440
  br label %if.end442

if.end442:                                        ; preds = %do.end441, %do.end389
  br label %if.end1019

if.else443:                                       ; preds = %land.lhs.true333, %lor.lhs.false327
  %312 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs444 = getelementptr inbounds %struct.regexp, %struct.regexp* %312, i32 0, i32 11
  %313 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs444, align 8
  %data445 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %313, i32 0, i32 1
  %arrayidx446 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data445, i64 0, i64 0
  %substr447 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx446, i32 0, i32 2
  %314 = load %struct.sv*, %struct.sv** %substr447, align 8
  %cmp448 = icmp ne %struct.sv* %314, null
  br i1 %cmp448, label %if.then480, label %lor.lhs.false450

lor.lhs.false450:                                 ; preds = %if.else443
  %315 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs451 = getelementptr inbounds %struct.regexp, %struct.regexp* %315, i32 0, i32 11
  %316 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs451, align 8
  %data452 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %316, i32 0, i32 1
  %arrayidx453 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data452, i64 0, i64 0
  %utf8_substr454 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx453, i32 0, i32 3
  %317 = load %struct.sv*, %struct.sv** %utf8_substr454, align 8
  %cmp455 = icmp ne %struct.sv* %317, null
  br i1 %cmp455, label %if.then480, label %lor.lhs.false457

lor.lhs.false457:                                 ; preds = %lor.lhs.false450
  %318 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs458 = getelementptr inbounds %struct.regexp, %struct.regexp* %318, i32 0, i32 11
  %319 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs458, align 8
  %data459 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %319, i32 0, i32 1
  %arrayidx460 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data459, i64 0, i64 1
  %substr461 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx460, i32 0, i32 2
  %320 = load %struct.sv*, %struct.sv** %substr461, align 8
  %cmp462 = icmp ne %struct.sv* %320, null
  br i1 %cmp462, label %land.lhs.true471, label %lor.lhs.false464

lor.lhs.false464:                                 ; preds = %lor.lhs.false457
  %321 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs465 = getelementptr inbounds %struct.regexp, %struct.regexp* %321, i32 0, i32 11
  %322 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs465, align 8
  %data466 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %322, i32 0, i32 1
  %arrayidx467 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data466, i64 0, i64 1
  %utf8_substr468 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx467, i32 0, i32 3
  %323 = load %struct.sv*, %struct.sv** %utf8_substr468, align 8
  %cmp469 = icmp ne %struct.sv* %323, null
  br i1 %cmp469, label %land.lhs.true471, label %if.else812

land.lhs.true471:                                 ; preds = %lor.lhs.false464, %lor.lhs.false457
  %324 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs472 = getelementptr inbounds %struct.regexp, %struct.regexp* %324, i32 0, i32 11
  %325 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs472, align 8
  %data473 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %325, i32 0, i32 1
  %arrayidx474 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data473, i64 0, i64 1
  %max_offset = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx474, i32 0, i32 1
  %326 = load i64, i64* %max_offset, align 8
  %327 = load i8*, i8** %strend.addr, align 8
  %328 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast475 = ptrtoint i8* %327 to i64
  %sub.ptr.rhs.cast476 = ptrtoint i8* %328 to i64
  %sub.ptr.sub477 = sub i64 %sub.ptr.lhs.cast475, %sub.ptr.rhs.cast476
  %cmp478 = icmp slt i64 %326, %sub.ptr.sub477
  br i1 %cmp478, label %if.then480, label %if.else812

if.then480:                                       ; preds = %land.lhs.true471, %lor.lhs.false450, %if.else443
  %329 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs481 = getelementptr inbounds %struct.regexp, %struct.regexp* %329, i32 0, i32 11
  %330 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs481, align 8
  %data482 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %330, i32 0, i32 1
  %arrayidx483 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data482, i64 0, i64 0
  %substr484 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx483, i32 0, i32 2
  %331 = load %struct.sv*, %struct.sv** %substr484, align 8
  %tobool485 = icmp ne %struct.sv* %331, null
  br i1 %tobool485, label %if.then492, label %lor.lhs.false486

lor.lhs.false486:                                 ; preds = %if.then480
  %332 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs487 = getelementptr inbounds %struct.regexp, %struct.regexp* %332, i32 0, i32 11
  %333 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs487, align 8
  %data488 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %333, i32 0, i32 1
  %arrayidx489 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data488, i64 0, i64 0
  %utf8_substr490 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx489, i32 0, i32 3
  %334 = load %struct.sv*, %struct.sv** %utf8_substr490, align 8
  %tobool491 = icmp ne %struct.sv* %334, null
  br i1 %tobool491, label %if.then492, label %if.else528

if.then492:                                       ; preds = %lor.lhs.false486, %if.then480
  %335 = load i8, i8* %utf8_target, align 1
  %tobool493 = trunc i8 %335 to i1
  br i1 %tobool493, label %if.then494, label %if.else506

if.then494:                                       ; preds = %if.then492
  %336 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs495 = getelementptr inbounds %struct.regexp, %struct.regexp* %336, i32 0, i32 11
  %337 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs495, align 8
  %data496 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %337, i32 0, i32 1
  %arrayidx497 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data496, i64 0, i64 0
  %utf8_substr498 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx497, i32 0, i32 3
  %338 = load %struct.sv*, %struct.sv** %utf8_substr498, align 8
  %tobool499 = icmp ne %struct.sv* %338, null
  br i1 %tobool499, label %if.end501, label %if.then500

if.then500:                                       ; preds = %if.then494
  %339 = load %struct.regexp*, %struct.regexp** %prog, align 8
  call void @S_to_utf8_substr(%struct.regexp* %339)
  br label %if.end501

if.end501:                                        ; preds = %if.then500, %if.then494
  %340 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs502 = getelementptr inbounds %struct.regexp, %struct.regexp* %340, i32 0, i32 11
  %341 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs502, align 8
  %data503 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %341, i32 0, i32 1
  %arrayidx504 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data503, i64 0, i64 0
  %utf8_substr505 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx504, i32 0, i32 3
  %342 = load %struct.sv*, %struct.sv** %utf8_substr505, align 8
  store %struct.sv* %342, %struct.sv** %must, align 8
  br label %if.end523

if.else506:                                       ; preds = %if.then492
  %343 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs507 = getelementptr inbounds %struct.regexp, %struct.regexp* %343, i32 0, i32 11
  %344 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs507, align 8
  %data508 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %344, i32 0, i32 1
  %arrayidx509 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data508, i64 0, i64 0
  %substr510 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx509, i32 0, i32 2
  %345 = load %struct.sv*, %struct.sv** %substr510, align 8
  %tobool511 = icmp ne %struct.sv* %345, null
  br i1 %tobool511, label %if.end518, label %if.then512

if.then512:                                       ; preds = %if.else506
  %346 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %call513 = call zeroext i1 @S_to_byte_substr(%struct.regexp* %346)
  br i1 %call513, label %if.end517, label %if.then514

if.then514:                                       ; preds = %if.then512
  br label %do.body515

do.body515:                                       ; preds = %if.then514
  br label %phooey

do.end516:                                        ; No predecessors!
  br label %if.end517

if.end517:                                        ; preds = %do.end516, %if.then512
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %if.else506
  %347 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs519 = getelementptr inbounds %struct.regexp, %struct.regexp* %347, i32 0, i32 11
  %348 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs519, align 8
  %data520 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %348, i32 0, i32 1
  %arrayidx521 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data520, i64 0, i64 0
  %substr522 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx521, i32 0, i32 2
  %349 = load %struct.sv*, %struct.sv** %substr522, align 8
  store %struct.sv* %349, %struct.sv** %must, align 8
  br label %if.end523

if.end523:                                        ; preds = %if.end518, %if.end501
  %350 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs524 = getelementptr inbounds %struct.regexp, %struct.regexp* %350, i32 0, i32 11
  %351 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs524, align 8
  %data525 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %351, i32 0, i32 1
  %arrayidx526 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data525, i64 0, i64 0
  %min_offset527 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx526, i32 0, i32 0
  %352 = load i64, i64* %min_offset527, align 8
  store i64 %352, i64* %back_min, align 8
  store i64 %352, i64* %back_max, align 8
  br label %if.end568

if.else528:                                       ; preds = %lor.lhs.false486
  %353 = load i8, i8* %utf8_target, align 1
  %tobool529 = trunc i8 %353 to i1
  br i1 %tobool529, label %if.then530, label %if.else542

if.then530:                                       ; preds = %if.else528
  %354 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs531 = getelementptr inbounds %struct.regexp, %struct.regexp* %354, i32 0, i32 11
  %355 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs531, align 8
  %data532 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %355, i32 0, i32 1
  %arrayidx533 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data532, i64 0, i64 1
  %utf8_substr534 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx533, i32 0, i32 3
  %356 = load %struct.sv*, %struct.sv** %utf8_substr534, align 8
  %tobool535 = icmp ne %struct.sv* %356, null
  br i1 %tobool535, label %if.end537, label %if.then536

if.then536:                                       ; preds = %if.then530
  %357 = load %struct.regexp*, %struct.regexp** %prog, align 8
  call void @S_to_utf8_substr(%struct.regexp* %357)
  br label %if.end537

if.end537:                                        ; preds = %if.then536, %if.then530
  %358 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs538 = getelementptr inbounds %struct.regexp, %struct.regexp* %358, i32 0, i32 11
  %359 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs538, align 8
  %data539 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %359, i32 0, i32 1
  %arrayidx540 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data539, i64 0, i64 1
  %utf8_substr541 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx540, i32 0, i32 3
  %360 = load %struct.sv*, %struct.sv** %utf8_substr541, align 8
  store %struct.sv* %360, %struct.sv** %must, align 8
  br label %if.end559

if.else542:                                       ; preds = %if.else528
  %361 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs543 = getelementptr inbounds %struct.regexp, %struct.regexp* %361, i32 0, i32 11
  %362 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs543, align 8
  %data544 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %362, i32 0, i32 1
  %arrayidx545 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data544, i64 0, i64 1
  %substr546 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx545, i32 0, i32 2
  %363 = load %struct.sv*, %struct.sv** %substr546, align 8
  %tobool547 = icmp ne %struct.sv* %363, null
  br i1 %tobool547, label %if.end554, label %if.then548

if.then548:                                       ; preds = %if.else542
  %364 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %call549 = call zeroext i1 @S_to_byte_substr(%struct.regexp* %364)
  br i1 %call549, label %if.end553, label %if.then550

if.then550:                                       ; preds = %if.then548
  br label %do.body551

do.body551:                                       ; preds = %if.then550
  br label %phooey

do.end552:                                        ; No predecessors!
  br label %if.end553

if.end553:                                        ; preds = %do.end552, %if.then548
  br label %if.end554

if.end554:                                        ; preds = %if.end553, %if.else542
  %365 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs555 = getelementptr inbounds %struct.regexp, %struct.regexp* %365, i32 0, i32 11
  %366 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs555, align 8
  %data556 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %366, i32 0, i32 1
  %arrayidx557 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data556, i64 0, i64 1
  %substr558 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx557, i32 0, i32 2
  %367 = load %struct.sv*, %struct.sv** %substr558, align 8
  store %struct.sv* %367, %struct.sv** %must, align 8
  br label %if.end559

if.end559:                                        ; preds = %if.end554, %if.end537
  %368 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs560 = getelementptr inbounds %struct.regexp, %struct.regexp* %368, i32 0, i32 11
  %369 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs560, align 8
  %data561 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %369, i32 0, i32 1
  %arrayidx562 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data561, i64 0, i64 1
  %max_offset563 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx562, i32 0, i32 1
  %370 = load i64, i64* %max_offset563, align 8
  store i64 %370, i64* %back_max, align 8
  %371 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs564 = getelementptr inbounds %struct.regexp, %struct.regexp* %371, i32 0, i32 11
  %372 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs564, align 8
  %data565 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %372, i32 0, i32 1
  %arrayidx566 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data565, i64 0, i64 1
  %min_offset567 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx566, i32 0, i32 0
  %373 = load i64, i64* %min_offset567, align 8
  store i64 %373, i64* %back_min, align 8
  br label %if.end568

if.end568:                                        ; preds = %if.end559, %if.end523
  %374 = load i64, i64* %back_min, align 8
  %cmp569 = icmp slt i64 %374, 0
  br i1 %cmp569, label %if.then571, label %if.else572

if.then571:                                       ; preds = %if.end568
  %375 = load i8*, i8** %strend.addr, align 8
  store i8* %375, i8** %last, align 8
  br label %if.end618

if.else572:                                       ; preds = %if.end568
  %376 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target573 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %376, i32 0, i32 14
  %377 = load i8, i8* %is_utf8_target573, align 2
  %tobool574 = trunc i8 %377 to i1
  br i1 %tobool574, label %cond.true576, label %cond.false595

cond.true576:                                     ; preds = %if.else572
  %378 = load i8*, i8** %strend.addr, align 8
  %379 = load i8, i8* %utf8_target, align 1
  %tobool577 = trunc i8 %379 to i1
  br i1 %tobool577, label %cond.true579, label %cond.false581

cond.true579:                                     ; preds = %cond.true576
  %380 = load %struct.sv*, %struct.sv** %must, align 8
  %call580 = call i64 @Perl_sv_len_utf8(%struct.sv* %380)
  br label %cond.end582

cond.false581:                                    ; preds = %cond.true576
  %381 = load %struct.sv*, %struct.sv** %must, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %381, i32 0, i32 0
  %382 = load i8*, i8** %sv_any, align 8
  %383 = bitcast i8* %382 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %383, i32 0, i32 2
  %384 = load i64, i64* %xpv_cur, align 8
  br label %cond.end582

cond.end582:                                      ; preds = %cond.false581, %cond.true579
  %cond583 = phi i64 [ %call580, %cond.true579 ], [ %384, %cond.false581 ]
  %385 = load %struct.sv*, %struct.sv** %must, align 8
  %sv_flags584 = getelementptr inbounds %struct.sv, %struct.sv* %385, i32 0, i32 2
  %386 = load i32, i32* %sv_flags584, align 4
  %and585 = and i32 %386, -1073741824
  %cmp586 = icmp eq i32 %and585, -1073741824
  %conv587 = zext i1 %cmp586 to i32
  %cmp588 = icmp ne i32 %conv587, 0
  %conv589 = zext i1 %cmp588 to i32
  %conv590 = sext i32 %conv589 to i64
  %sub591 = sub i64 %cond583, %conv590
  %387 = load i64, i64* %back_min, align 8
  %add592 = add i64 %sub591, %387
  %sub593 = sub nsw i64 0, %add592
  %388 = load i8*, i8** %strbeg.addr, align 8
  %call594 = call i8* @S_reghop3(i8* %378, i64 %sub593, i8* %388)
  br label %cond.end616

cond.false595:                                    ; preds = %if.else572
  %389 = load i8*, i8** %strend.addr, align 8
  %390 = load i8, i8* %utf8_target, align 1
  %tobool596 = trunc i8 %390 to i1
  br i1 %tobool596, label %cond.true598, label %cond.false600

cond.true598:                                     ; preds = %cond.false595
  %391 = load %struct.sv*, %struct.sv** %must, align 8
  %call599 = call i64 @Perl_sv_len_utf8(%struct.sv* %391)
  br label %cond.end603

cond.false600:                                    ; preds = %cond.false595
  %392 = load %struct.sv*, %struct.sv** %must, align 8
  %sv_any601 = getelementptr inbounds %struct.sv, %struct.sv* %392, i32 0, i32 0
  %393 = load i8*, i8** %sv_any601, align 8
  %394 = bitcast i8* %393 to %struct.xpv*
  %xpv_cur602 = getelementptr inbounds %struct.xpv, %struct.xpv* %394, i32 0, i32 2
  %395 = load i64, i64* %xpv_cur602, align 8
  br label %cond.end603

cond.end603:                                      ; preds = %cond.false600, %cond.true598
  %cond604 = phi i64 [ %call599, %cond.true598 ], [ %395, %cond.false600 ]
  %396 = load %struct.sv*, %struct.sv** %must, align 8
  %sv_flags605 = getelementptr inbounds %struct.sv, %struct.sv* %396, i32 0, i32 2
  %397 = load i32, i32* %sv_flags605, align 4
  %and606 = and i32 %397, -1073741824
  %cmp607 = icmp eq i32 %and606, -1073741824
  %conv608 = zext i1 %cmp607 to i32
  %cmp609 = icmp ne i32 %conv608, 0
  %conv610 = zext i1 %cmp609 to i32
  %conv611 = sext i32 %conv610 to i64
  %sub612 = sub i64 %cond604, %conv611
  %398 = load i64, i64* %back_min, align 8
  %add613 = add i64 %sub612, %398
  %sub614 = sub nsw i64 0, %add613
  %add.ptr615 = getelementptr inbounds i8, i8* %389, i64 %sub614
  br label %cond.end616

cond.end616:                                      ; preds = %cond.end603, %cond.end582
  %cond617 = phi i8* [ %call594, %cond.end582 ], [ %add.ptr615, %cond.end603 ]
  store i8* %cond617, i8** %last, align 8
  br label %if.end618

if.end618:                                        ; preds = %cond.end616, %if.then571
  %399 = load i8*, i8** %s, align 8
  %400 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strbeg619 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %400, i32 0, i32 1
  %401 = load i8*, i8** %strbeg619, align 8
  %cmp620 = icmp ugt i8* %399, %401
  br i1 %cmp620, label %if.then622, label %if.else633

if.then622:                                       ; preds = %if.end618
  %402 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target623 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %402, i32 0, i32 14
  %403 = load i8, i8* %is_utf8_target623, align 2
  %tobool624 = trunc i8 %403 to i1
  br i1 %tobool624, label %cond.true626, label %cond.false629

cond.true626:                                     ; preds = %if.then622
  %404 = load i8*, i8** %s, align 8
  %405 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strbeg627 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %405, i32 0, i32 1
  %406 = load i8*, i8** %strbeg627, align 8
  %call628 = call i8* @S_reghop3(i8* %404, i64 -1, i8* %406)
  br label %cond.end631

cond.false629:                                    ; preds = %if.then622
  %407 = load i8*, i8** %s, align 8
  %add.ptr630 = getelementptr inbounds i8, i8* %407, i64 -1
  br label %cond.end631

cond.end631:                                      ; preds = %cond.false629, %cond.true626
  %cond632 = phi i8* [ %call628, %cond.true626 ], [ %add.ptr630, %cond.false629 ]
  store i8* %cond632, i8** %last1, align 8
  br label %if.end635

if.else633:                                       ; preds = %if.end618
  %408 = load i8*, i8** %s, align 8
  %add.ptr634 = getelementptr inbounds i8, i8* %408, i64 -1
  store i8* %add.ptr634, i8** %last1, align 8
  br label %if.end635

if.end635:                                        ; preds = %if.else633, %cond.end631
  store i64 0, i64* %dontbother, align 8
  %409 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target636 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %409, i32 0, i32 14
  %410 = load i8, i8* %is_utf8_target636, align 2
  %tobool637 = trunc i8 %410 to i1
  br i1 %tobool637, label %cond.true639, label %cond.false651

cond.true639:                                     ; preds = %if.end635
  %411 = load i8*, i8** %strend.addr, align 8
  %412 = load i64, i64* %dontbother, align 8
  %sub640 = sub nsw i64 0, %412
  %413 = load i64, i64* %dontbother, align 8
  %sub641 = sub nsw i64 0, %413
  %cmp642 = icmp sge i64 %sub641, 0
  br i1 %cmp642, label %cond.true644, label %cond.false646

cond.true644:                                     ; preds = %cond.true639
  %414 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strend645 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %414, i32 0, i32 2
  %415 = load i8*, i8** %strend645, align 8
  br label %cond.end648

cond.false646:                                    ; preds = %cond.true639
  %416 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strbeg647 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %416, i32 0, i32 1
  %417 = load i8*, i8** %strbeg647, align 8
  br label %cond.end648

cond.end648:                                      ; preds = %cond.false646, %cond.true644
  %cond649 = phi i8* [ %415, %cond.true644 ], [ %417, %cond.false646 ]
  %call650 = call i8* @S_reghop3(i8* %411, i64 %sub640, i8* %cond649)
  br label %cond.end654

cond.false651:                                    ; preds = %if.end635
  %418 = load i8*, i8** %strend.addr, align 8
  %419 = load i64, i64* %dontbother, align 8
  %sub652 = sub nsw i64 0, %419
  %add.ptr653 = getelementptr inbounds i8, i8* %418, i64 %sub652
  br label %cond.end654

cond.end654:                                      ; preds = %cond.false651, %cond.end648
  %cond655 = phi i8* [ %call650, %cond.end648 ], [ %add.ptr653, %cond.false651 ]
  store i8* %cond655, i8** %strend.addr, align 8
  br label %while.cond656

while.cond656:                                    ; preds = %if.end810, %cond.end654
  %420 = load i8*, i8** %s, align 8
  %421 = load i8*, i8** %last, align 8
  %cmp657 = icmp ule i8* %420, %421
  br i1 %cmp657, label %land.rhs659, label %land.end673

land.rhs659:                                      ; preds = %while.cond656
  %422 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target660 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %422, i32 0, i32 14
  %423 = load i8, i8* %is_utf8_target660, align 2
  %tobool661 = trunc i8 %423 to i1
  br i1 %tobool661, label %cond.true663, label %cond.false665

cond.true663:                                     ; preds = %land.rhs659
  %424 = load i8*, i8** %s, align 8
  %425 = load i64, i64* %back_min, align 8
  %426 = load i8*, i8** %strbeg.addr, align 8
  %427 = load i8*, i8** %strend.addr, align 8
  %call664 = call i8* @S_reghop4(i8* %424, i64 %425, i8* %426, i8* %427)
  br label %cond.end667

cond.false665:                                    ; preds = %land.rhs659
  %428 = load i8*, i8** %s, align 8
  %429 = load i64, i64* %back_min, align 8
  %add.ptr666 = getelementptr inbounds i8, i8* %428, i64 %429
  br label %cond.end667

cond.end667:                                      ; preds = %cond.false665, %cond.true663
  %cond668 = phi i8* [ %call664, %cond.true663 ], [ %add.ptr666, %cond.false665 ]
  %430 = load i8*, i8** %strend.addr, align 8
  %431 = load %struct.sv*, %struct.sv** %must, align 8
  %432 = load i32, i32* %multiline, align 4
  %tobool669 = icmp ne i32 %432, 0
  %433 = zext i1 %tobool669 to i64
  %cond670 = select i1 %tobool669, i32 1, i32 0
  %call671 = call i8* @Perl_fbm_instr(i8* %cond668, i8* %430, %struct.sv* %431, i32 %cond670)
  store i8* %call671, i8** %s, align 8
  %tobool672 = icmp ne i8* %call671, null
  br label %land.end673

land.end673:                                      ; preds = %cond.end667, %while.cond656
  %434 = phi i1 [ false, %while.cond656 ], [ %tobool672, %cond.end667 ]
  br i1 %434, label %while.body674, label %while.end811

while.body674:                                    ; preds = %land.end673
  %435 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target675 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %435, i32 0, i32 14
  %436 = load i8, i8* %is_utf8_target675, align 2
  %tobool676 = trunc i8 %436 to i1
  br i1 %tobool676, label %cond.true678, label %cond.false690

cond.true678:                                     ; preds = %while.body674
  %437 = load i8*, i8** %s, align 8
  %438 = load i64, i64* %back_max, align 8
  %sub679 = sub nsw i64 0, %438
  %439 = load i64, i64* %back_max, align 8
  %sub680 = sub nsw i64 0, %439
  %cmp681 = icmp sge i64 %sub680, 0
  br i1 %cmp681, label %cond.true683, label %cond.false685

cond.true683:                                     ; preds = %cond.true678
  %440 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strend684 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %440, i32 0, i32 2
  %441 = load i8*, i8** %strend684, align 8
  br label %cond.end687

cond.false685:                                    ; preds = %cond.true678
  %442 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strbeg686 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %442, i32 0, i32 1
  %443 = load i8*, i8** %strbeg686, align 8
  br label %cond.end687

cond.end687:                                      ; preds = %cond.false685, %cond.true683
  %cond688 = phi i8* [ %441, %cond.true683 ], [ %443, %cond.false685 ]
  %call689 = call i8* @S_reghop3(i8* %437, i64 %sub679, i8* %cond688)
  br label %cond.end693

cond.false690:                                    ; preds = %while.body674
  %444 = load i8*, i8** %s, align 8
  %445 = load i64, i64* %back_max, align 8
  %sub691 = sub nsw i64 0, %445
  %add.ptr692 = getelementptr inbounds i8, i8* %444, i64 %sub691
  br label %cond.end693

cond.end693:                                      ; preds = %cond.false690, %cond.end687
  %cond694 = phi i8* [ %call689, %cond.end687 ], [ %add.ptr692, %cond.false690 ]
  %446 = load i8*, i8** %last1, align 8
  %cmp695 = icmp ugt i8* %cond694, %446
  br i1 %cmp695, label %if.then697, label %if.else738

if.then697:                                       ; preds = %cond.end693
  %447 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target698 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %447, i32 0, i32 14
  %448 = load i8, i8* %is_utf8_target698, align 2
  %tobool699 = trunc i8 %448 to i1
  br i1 %tobool699, label %cond.true701, label %cond.false713

cond.true701:                                     ; preds = %if.then697
  %449 = load i8*, i8** %s, align 8
  %450 = load i64, i64* %back_min, align 8
  %sub702 = sub nsw i64 0, %450
  %451 = load i64, i64* %back_min, align 8
  %sub703 = sub nsw i64 0, %451
  %cmp704 = icmp sge i64 %sub703, 0
  br i1 %cmp704, label %cond.true706, label %cond.false708

cond.true706:                                     ; preds = %cond.true701
  %452 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strend707 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %452, i32 0, i32 2
  %453 = load i8*, i8** %strend707, align 8
  br label %cond.end710

cond.false708:                                    ; preds = %cond.true701
  %454 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strbeg709 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %454, i32 0, i32 1
  %455 = load i8*, i8** %strbeg709, align 8
  br label %cond.end710

cond.end710:                                      ; preds = %cond.false708, %cond.true706
  %cond711 = phi i8* [ %453, %cond.true706 ], [ %455, %cond.false708 ]
  %call712 = call i8* @S_reghop3(i8* %449, i64 %sub702, i8* %cond711)
  br label %cond.end716

cond.false713:                                    ; preds = %if.then697
  %456 = load i8*, i8** %s, align 8
  %457 = load i64, i64* %back_min, align 8
  %sub714 = sub nsw i64 0, %457
  %add.ptr715 = getelementptr inbounds i8, i8* %456, i64 %sub714
  br label %cond.end716

cond.end716:                                      ; preds = %cond.false713, %cond.end710
  %cond717 = phi i8* [ %call712, %cond.end710 ], [ %add.ptr715, %cond.false713 ]
  store i8* %cond717, i8** %last1, align 8
  %458 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target718 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %458, i32 0, i32 14
  %459 = load i8, i8* %is_utf8_target718, align 2
  %tobool719 = trunc i8 %459 to i1
  br i1 %tobool719, label %cond.true721, label %cond.false733

cond.true721:                                     ; preds = %cond.end716
  %460 = load i8*, i8** %s, align 8
  %461 = load i64, i64* %back_max, align 8
  %sub722 = sub nsw i64 0, %461
  %462 = load i64, i64* %back_max, align 8
  %sub723 = sub nsw i64 0, %462
  %cmp724 = icmp sge i64 %sub723, 0
  br i1 %cmp724, label %cond.true726, label %cond.false728

cond.true726:                                     ; preds = %cond.true721
  %463 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strend727 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %463, i32 0, i32 2
  %464 = load i8*, i8** %strend727, align 8
  br label %cond.end730

cond.false728:                                    ; preds = %cond.true721
  %465 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strbeg729 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %465, i32 0, i32 1
  %466 = load i8*, i8** %strbeg729, align 8
  br label %cond.end730

cond.end730:                                      ; preds = %cond.false728, %cond.true726
  %cond731 = phi i8* [ %464, %cond.true726 ], [ %466, %cond.false728 ]
  %call732 = call i8* @S_reghop3(i8* %460, i64 %sub722, i8* %cond731)
  br label %cond.end736

cond.false733:                                    ; preds = %cond.end716
  %467 = load i8*, i8** %s, align 8
  %468 = load i64, i64* %back_max, align 8
  %sub734 = sub nsw i64 0, %468
  %add.ptr735 = getelementptr inbounds i8, i8* %467, i64 %sub734
  br label %cond.end736

cond.end736:                                      ; preds = %cond.false733, %cond.end730
  %cond737 = phi i8* [ %call732, %cond.end730 ], [ %add.ptr735, %cond.false733 ]
  store i8* %cond737, i8** %s, align 8
  br label %if.end777

if.else738:                                       ; preds = %cond.end693
  %469 = load i8*, i8** %last1, align 8
  %470 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strbeg739 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %470, i32 0, i32 1
  %471 = load i8*, i8** %strbeg739, align 8
  %cmp740 = icmp uge i8* %469, %471
  br i1 %cmp740, label %cond.true742, label %cond.false753

cond.true742:                                     ; preds = %if.else738
  %472 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target743 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %472, i32 0, i32 14
  %473 = load i8, i8* %is_utf8_target743, align 2
  %tobool744 = trunc i8 %473 to i1
  br i1 %tobool744, label %cond.true746, label %cond.false749

cond.true746:                                     ; preds = %cond.true742
  %474 = load i8*, i8** %last1, align 8
  %475 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strend747 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %475, i32 0, i32 2
  %476 = load i8*, i8** %strend747, align 8
  %call748 = call i8* @S_reghop3(i8* %474, i64 1, i8* %476)
  br label %cond.end751

cond.false749:                                    ; preds = %cond.true742
  %477 = load i8*, i8** %last1, align 8
  %add.ptr750 = getelementptr inbounds i8, i8* %477, i64 1
  br label %cond.end751

cond.end751:                                      ; preds = %cond.false749, %cond.true746
  %cond752 = phi i8* [ %call748, %cond.true746 ], [ %add.ptr750, %cond.false749 ]
  br label %cond.end755

cond.false753:                                    ; preds = %if.else738
  %478 = load i8*, i8** %last1, align 8
  %add.ptr754 = getelementptr inbounds i8, i8* %478, i64 1
  br label %cond.end755

cond.end755:                                      ; preds = %cond.false753, %cond.end751
  %cond756 = phi i8* [ %cond752, %cond.end751 ], [ %add.ptr754, %cond.false753 ]
  store i8* %cond756, i8** %t, align 8
  %479 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target757 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %479, i32 0, i32 14
  %480 = load i8, i8* %is_utf8_target757, align 2
  %tobool758 = trunc i8 %480 to i1
  br i1 %tobool758, label %cond.true760, label %cond.false772

cond.true760:                                     ; preds = %cond.end755
  %481 = load i8*, i8** %s, align 8
  %482 = load i64, i64* %back_min, align 8
  %sub761 = sub nsw i64 0, %482
  %483 = load i64, i64* %back_min, align 8
  %sub762 = sub nsw i64 0, %483
  %cmp763 = icmp sge i64 %sub762, 0
  br i1 %cmp763, label %cond.true765, label %cond.false767

cond.true765:                                     ; preds = %cond.true760
  %484 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strend766 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %484, i32 0, i32 2
  %485 = load i8*, i8** %strend766, align 8
  br label %cond.end769

cond.false767:                                    ; preds = %cond.true760
  %486 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strbeg768 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %486, i32 0, i32 1
  %487 = load i8*, i8** %strbeg768, align 8
  br label %cond.end769

cond.end769:                                      ; preds = %cond.false767, %cond.true765
  %cond770 = phi i8* [ %485, %cond.true765 ], [ %487, %cond.false767 ]
  %call771 = call i8* @S_reghop3(i8* %481, i64 %sub761, i8* %cond770)
  br label %cond.end775

cond.false772:                                    ; preds = %cond.end755
  %488 = load i8*, i8** %s, align 8
  %489 = load i64, i64* %back_min, align 8
  %sub773 = sub nsw i64 0, %489
  %add.ptr774 = getelementptr inbounds i8, i8* %488, i64 %sub773
  br label %cond.end775

cond.end775:                                      ; preds = %cond.false772, %cond.end769
  %cond776 = phi i8* [ %call771, %cond.end769 ], [ %add.ptr774, %cond.false772 ]
  store i8* %cond776, i8** %last1, align 8
  %490 = load i8*, i8** %t, align 8
  store i8* %490, i8** %s, align 8
  br label %if.end777

if.end777:                                        ; preds = %cond.end775, %cond.end736
  %491 = load i8, i8* %utf8_target, align 1
  %tobool778 = trunc i8 %491 to i1
  br i1 %tobool778, label %if.then779, label %if.else799

if.then779:                                       ; preds = %if.end777
  br label %while.cond780

while.cond780:                                    ; preds = %if.end792, %if.then779
  %492 = load i8*, i8** %s, align 8
  %493 = load i8*, i8** %last1, align 8
  %cmp781 = icmp ule i8* %492, %493
  br i1 %cmp781, label %while.body783, label %while.end798

while.body783:                                    ; preds = %while.cond780
  %494 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %call784 = call i32 @S_regtry(%struct.regmatch_info* %494, i8** %s)
  %tobool785 = icmp ne i32 %call784, 0
  br i1 %tobool785, label %if.then786, label %if.end787

if.then786:                                       ; preds = %while.body783
  br label %got_it

if.end787:                                        ; preds = %while.body783
  %495 = load i8*, i8** %s, align 8
  %496 = load i8*, i8** %last1, align 8
  %cmp788 = icmp uge i8* %495, %496
  br i1 %cmp788, label %if.then790, label %if.end792

if.then790:                                       ; preds = %if.end787
  %497 = load i8*, i8** %s, align 8
  %incdec.ptr791 = getelementptr inbounds i8, i8* %497, i32 1
  store i8* %incdec.ptr791, i8** %s, align 8
  br label %while.end798

if.end792:                                        ; preds = %if.end787
  %498 = load i8*, i8** %s, align 8
  %499 = load i8, i8* %498, align 1
  %idxprom793 = zext i8 %499 to i64
  %arrayidx794 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom793
  %500 = load i8, i8* %arrayidx794, align 1
  %conv795 = zext i8 %500 to i32
  %501 = load i8*, i8** %s, align 8
  %idx.ext796 = sext i32 %conv795 to i64
  %add.ptr797 = getelementptr inbounds i8, i8* %501, i64 %idx.ext796
  store i8* %add.ptr797, i8** %s, align 8
  br label %while.cond780

while.end798:                                     ; preds = %if.then790, %while.cond780
  br label %if.end810

if.else799:                                       ; preds = %if.end777
  br label %while.cond800

while.cond800:                                    ; preds = %if.end807, %if.else799
  %502 = load i8*, i8** %s, align 8
  %503 = load i8*, i8** %last1, align 8
  %cmp801 = icmp ule i8* %502, %503
  br i1 %cmp801, label %while.body803, label %while.end809

while.body803:                                    ; preds = %while.cond800
  %504 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %call804 = call i32 @S_regtry(%struct.regmatch_info* %504, i8** %s)
  %tobool805 = icmp ne i32 %call804, 0
  br i1 %tobool805, label %if.then806, label %if.end807

if.then806:                                       ; preds = %while.body803
  br label %got_it

if.end807:                                        ; preds = %while.body803
  %505 = load i8*, i8** %s, align 8
  %incdec.ptr808 = getelementptr inbounds i8, i8* %505, i32 1
  store i8* %incdec.ptr808, i8** %s, align 8
  br label %while.cond800

while.end809:                                     ; preds = %while.cond800
  br label %if.end810

if.end810:                                        ; preds = %while.end809, %while.end798
  br label %while.cond656

while.end811:                                     ; preds = %land.end673
  br label %phooey

if.else812:                                       ; preds = %land.lhs.true471, %lor.lhs.false464
  %506 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %regstclass = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %506, i32 0, i32 2
  %507 = load %struct.regnode*, %struct.regnode** %regstclass, align 8
  store %struct.regnode* %507, %struct.regnode** %c, align 8
  %tobool813 = icmp ne %struct.regnode* %507, null
  br i1 %tobool813, label %if.then814, label %if.else864

if.then814:                                       ; preds = %if.else812
  %508 = load i64, i64* %minlen, align 8
  %tobool815 = icmp ne i64 %508, 0
  br i1 %tobool815, label %if.then816, label %if.end859

if.then816:                                       ; preds = %if.then814
  %509 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %regstclass817 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %509, i32 0, i32 2
  %510 = load %struct.regnode*, %struct.regnode** %regstclass817, align 8
  %type = getelementptr inbounds %struct.regnode, %struct.regnode* %510, i32 0, i32 1
  %511 = load i8, i8* %type, align 1
  %conv818 = zext i8 %511 to i16
  store i16 %conv818, i16* %op, align 2
  %512 = load i16, i16* %op, align 2
  %idxprom819 = zext i16 %512 to i64
  %arrayidx820 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom819
  %513 = load i8, i8* %arrayidx820, align 1
  %conv821 = zext i8 %513 to i32
  %cmp822 = icmp ne i32 %conv821, 31
  br i1 %cmp822, label %land.lhs.true824, label %if.end858

land.lhs.true824:                                 ; preds = %if.then816
  %514 = load i16, i16* %op, align 2
  %conv825 = zext i16 %514 to i32
  %cmp826 = icmp ne i32 %conv825, 18
  br i1 %cmp826, label %land.lhs.true828, label %if.end858

land.lhs.true828:                                 ; preds = %land.lhs.true824
  %515 = load i16, i16* %op, align 2
  %idxprom829 = zext i16 %515 to i64
  %arrayidx830 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom829
  %516 = load i8, i8* %arrayidx830, align 1
  %conv831 = zext i8 %516 to i32
  %cmp832 = icmp ne i32 %conv831, 72
  br i1 %cmp832, label %if.then834, label %if.end858

if.then834:                                       ; preds = %land.lhs.true828
  %517 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %is_utf8_target835 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %517, i32 0, i32 14
  %518 = load i8, i8* %is_utf8_target835, align 2
  %tobool836 = trunc i8 %518 to i1
  br i1 %tobool836, label %cond.true838, label %cond.false852

cond.true838:                                     ; preds = %if.then834
  %519 = load i8*, i8** %strend.addr, align 8
  %520 = load i64, i64* %minlen, align 8
  %sub839 = sub nsw i64 %520, 1
  %sub840 = sub nsw i64 0, %sub839
  %521 = load i64, i64* %minlen, align 8
  %sub841 = sub nsw i64 %521, 1
  %sub842 = sub nsw i64 0, %sub841
  %cmp843 = icmp sge i64 %sub842, 0
  br i1 %cmp843, label %cond.true845, label %cond.false847

cond.true845:                                     ; preds = %cond.true838
  %522 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strend846 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %522, i32 0, i32 2
  %523 = load i8*, i8** %strend846, align 8
  br label %cond.end849

cond.false847:                                    ; preds = %cond.true838
  %524 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strbeg848 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %524, i32 0, i32 1
  %525 = load i8*, i8** %strbeg848, align 8
  br label %cond.end849

cond.end849:                                      ; preds = %cond.false847, %cond.true845
  %cond850 = phi i8* [ %523, %cond.true845 ], [ %525, %cond.false847 ]
  %call851 = call i8* @S_reghop3(i8* %519, i64 %sub840, i8* %cond850)
  br label %cond.end856

cond.false852:                                    ; preds = %if.then834
  %526 = load i8*, i8** %strend.addr, align 8
  %527 = load i64, i64* %minlen, align 8
  %sub853 = sub nsw i64 %527, 1
  %sub854 = sub nsw i64 0, %sub853
  %add.ptr855 = getelementptr inbounds i8, i8* %526, i64 %sub854
  br label %cond.end856

cond.end856:                                      ; preds = %cond.false852, %cond.end849
  %cond857 = phi i8* [ %call851, %cond.end849 ], [ %add.ptr855, %cond.false852 ]
  store i8* %cond857, i8** %strend.addr, align 8
  br label %if.end858

if.end858:                                        ; preds = %cond.end856, %land.lhs.true828, %land.lhs.true824, %if.then816
  br label %if.end859

if.end859:                                        ; preds = %if.end858, %if.then814
  %528 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %529 = load %struct.regnode*, %struct.regnode** %c, align 8
  %530 = load i8*, i8** %s, align 8
  %531 = load i8*, i8** %strend.addr, align 8
  %532 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %call860 = call i8* @S_find_byclass(%struct.regexp* %528, %struct.regnode* %529, i8* %530, i8* %531, %struct.regmatch_info* %532)
  %tobool861 = icmp ne i8* %call860, null
  br i1 %tobool861, label %if.then862, label %if.end863

if.then862:                                       ; preds = %if.end859
  br label %got_it

if.end863:                                        ; preds = %if.end859
  br label %if.end1017

if.else864:                                       ; preds = %if.else812
  store i64 0, i64* %dontbother, align 8
  %533 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs865 = getelementptr inbounds %struct.regexp, %struct.regexp* %533, i32 0, i32 11
  %534 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs865, align 8
  %data866 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %534, i32 0, i32 1
  %arrayidx867 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data866, i64 0, i64 1
  %substr868 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx867, i32 0, i32 2
  %535 = load %struct.sv*, %struct.sv** %substr868, align 8
  %cmp869 = icmp ne %struct.sv* %535, null
  br i1 %cmp869, label %if.then878, label %lor.lhs.false871

lor.lhs.false871:                                 ; preds = %if.else864
  %536 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs872 = getelementptr inbounds %struct.regexp, %struct.regexp* %536, i32 0, i32 11
  %537 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs872, align 8
  %data873 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %537, i32 0, i32 1
  %arrayidx874 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data873, i64 0, i64 1
  %utf8_substr875 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx874, i32 0, i32 3
  %538 = load %struct.sv*, %struct.sv** %utf8_substr875, align 8
  %cmp876 = icmp ne %struct.sv* %538, null
  br i1 %cmp876, label %if.then878, label %if.end979

if.then878:                                       ; preds = %lor.lhs.false871, %if.else864
  store i8* null, i8** %last879, align 8
  %539 = load i8, i8* %utf8_target, align 1
  %tobool880 = trunc i8 %539 to i1
  br i1 %tobool880, label %if.then881, label %if.else893

if.then881:                                       ; preds = %if.then878
  %540 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs882 = getelementptr inbounds %struct.regexp, %struct.regexp* %540, i32 0, i32 11
  %541 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs882, align 8
  %data883 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %541, i32 0, i32 1
  %arrayidx884 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data883, i64 0, i64 1
  %utf8_substr885 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx884, i32 0, i32 3
  %542 = load %struct.sv*, %struct.sv** %utf8_substr885, align 8
  %tobool886 = icmp ne %struct.sv* %542, null
  br i1 %tobool886, label %if.end888, label %if.then887

if.then887:                                       ; preds = %if.then881
  %543 = load %struct.regexp*, %struct.regexp** %prog, align 8
  call void @S_to_utf8_substr(%struct.regexp* %543)
  br label %if.end888

if.end888:                                        ; preds = %if.then887, %if.then881
  %544 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs889 = getelementptr inbounds %struct.regexp, %struct.regexp* %544, i32 0, i32 11
  %545 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs889, align 8
  %data890 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %545, i32 0, i32 1
  %arrayidx891 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data890, i64 0, i64 1
  %utf8_substr892 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx891, i32 0, i32 3
  %546 = load %struct.sv*, %struct.sv** %utf8_substr892, align 8
  store %struct.sv* %546, %struct.sv** %float_real, align 8
  br label %if.end910

if.else893:                                       ; preds = %if.then878
  %547 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs894 = getelementptr inbounds %struct.regexp, %struct.regexp* %547, i32 0, i32 11
  %548 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs894, align 8
  %data895 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %548, i32 0, i32 1
  %arrayidx896 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data895, i64 0, i64 1
  %substr897 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx896, i32 0, i32 2
  %549 = load %struct.sv*, %struct.sv** %substr897, align 8
  %tobool898 = icmp ne %struct.sv* %549, null
  br i1 %tobool898, label %if.end905, label %if.then899

if.then899:                                       ; preds = %if.else893
  %550 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %call900 = call zeroext i1 @S_to_byte_substr(%struct.regexp* %550)
  br i1 %call900, label %if.end904, label %if.then901

if.then901:                                       ; preds = %if.then899
  br label %do.body902

do.body902:                                       ; preds = %if.then901
  br label %phooey

do.end903:                                        ; No predecessors!
  br label %if.end904

if.end904:                                        ; preds = %do.end903, %if.then899
  br label %if.end905

if.end905:                                        ; preds = %if.end904, %if.else893
  %551 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs906 = getelementptr inbounds %struct.regexp, %struct.regexp* %551, i32 0, i32 11
  %552 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs906, align 8
  %data907 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %552, i32 0, i32 1
  %arrayidx908 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data907, i64 0, i64 1
  %substr909 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx908, i32 0, i32 2
  %553 = load %struct.sv*, %struct.sv** %substr909, align 8
  store %struct.sv* %553, %struct.sv** %float_real, align 8
  br label %if.end910

if.end910:                                        ; preds = %if.end905, %if.end888
  %554 = load %struct.sv*, %struct.sv** %float_real, align 8
  %sv_flags911 = getelementptr inbounds %struct.sv, %struct.sv* %554, i32 0, i32 2
  %555 = load i32, i32* %sv_flags911, align 4
  %and912 = and i32 %555, 2098176
  %cmp913 = icmp eq i32 %and912, 1024
  br i1 %cmp913, label %cond.true915, label %cond.false921

cond.true915:                                     ; preds = %if.end910
  %556 = load %struct.sv*, %struct.sv** %float_real, align 8
  %sv_any916 = getelementptr inbounds %struct.sv, %struct.sv* %556, i32 0, i32 0
  %557 = load i8*, i8** %sv_any916, align 8
  %558 = bitcast i8* %557 to %struct.xpv*
  %xpv_cur917 = getelementptr inbounds %struct.xpv, %struct.xpv* %558, i32 0, i32 2
  %559 = load i64, i64* %xpv_cur917, align 8
  store i64 %559, i64* %len, align 8
  %560 = load %struct.sv*, %struct.sv** %float_real, align 8
  %sv_u918 = getelementptr inbounds %struct.sv, %struct.sv* %560, i32 0, i32 3
  %svu_pv919 = bitcast %union.anon* %sv_u918 to i8**
  %561 = load i8*, i8** %svu_pv919, align 8
  %add.ptr920 = getelementptr inbounds i8, i8* %561, i64 0
  br label %cond.end923

cond.false921:                                    ; preds = %if.end910
  %562 = load %struct.sv*, %struct.sv** %float_real, align 8
  %call922 = call i8* @Perl_sv_2pv_flags(%struct.sv* %562, i64* %len, i32 34)
  br label %cond.end923

cond.end923:                                      ; preds = %cond.false921, %cond.true915
  %cond924 = phi i8* [ %add.ptr920, %cond.true915 ], [ %call922, %cond.false921 ]
  store i8* %cond924, i8** %little, align 8
  %563 = load %struct.sv*, %struct.sv** %float_real, align 8
  %sv_flags925 = getelementptr inbounds %struct.sv, %struct.sv* %563, i32 0, i32 2
  %564 = load i32, i32* %sv_flags925, align 4
  %and926 = and i32 %564, -1073741824
  %cmp927 = icmp eq i32 %and926, -1073741824
  br i1 %cmp927, label %if.then929, label %if.else960

if.then929:                                       ; preds = %cond.end923
  %565 = load i8*, i8** %strend.addr, align 8
  %566 = load i64, i64* %len, align 8
  %idx.neg930 = sub i64 0, %566
  %add.ptr931 = getelementptr inbounds i8, i8* %565, i64 %idx.neg930
  store i8* %add.ptr931, i8** %checkpos, align 8
  %567 = load i8*, i8** %checkpos, align 8
  %add.ptr932 = getelementptr inbounds i8, i8* %567, i64 1
  %568 = load i8*, i8** %strbeg.addr, align 8
  %cmp933 = icmp ult i8* %add.ptr932, %568
  br i1 %cmp933, label %if.then935, label %if.else936

if.then935:                                       ; preds = %if.then929
  br label %phooey

if.else936:                                       ; preds = %if.then929
  %569 = load i8*, i8** %checkpos, align 8
  %add.ptr937 = getelementptr inbounds i8, i8* %569, i64 1
  %570 = load i8*, i8** %little, align 8
  %571 = load i64, i64* %len, align 8
  %sub938 = sub i64 %571, 1
  %call939 = call i32 @memcmp(i8* %add.ptr937, i8* %570, i64 %sub938) #5
  %tobool940 = icmp ne i32 %call939, 0
  br i1 %tobool940, label %if.else943, label %if.then941

if.then941:                                       ; preds = %if.else936
  %572 = load i8*, i8** %checkpos, align 8
  %add.ptr942 = getelementptr inbounds i8, i8* %572, i64 1
  store i8* %add.ptr942, i8** %last879, align 8
  br label %if.end958

if.else943:                                       ; preds = %if.else936
  %573 = load i8*, i8** %checkpos, align 8
  %574 = load i8*, i8** %strbeg.addr, align 8
  %cmp944 = icmp ult i8* %573, %574
  br i1 %cmp944, label %if.then946, label %if.else947

if.then946:                                       ; preds = %if.else943
  br label %phooey

if.else947:                                       ; preds = %if.else943
  %575 = load i32, i32* %multiline, align 4
  %tobool948 = icmp ne i32 %575, 0
  br i1 %tobool948, label %if.else955, label %if.then949

if.then949:                                       ; preds = %if.else947
  %576 = load i8*, i8** %checkpos, align 8
  %577 = load i8*, i8** %little, align 8
  %578 = load i64, i64* %len, align 8
  %call950 = call i32 @memcmp(i8* %576, i8* %577, i64 %578) #5
  %tobool951 = icmp ne i32 %call950, 0
  br i1 %tobool951, label %if.else953, label %if.then952

if.then952:                                       ; preds = %if.then949
  %579 = load i8*, i8** %checkpos, align 8
  store i8* %579, i8** %last879, align 8
  br label %if.end954

if.else953:                                       ; preds = %if.then949
  br label %phooey

if.end954:                                        ; preds = %if.then952
  br label %if.end956

if.else955:                                       ; preds = %if.else947
  br label %find_last

if.end956:                                        ; preds = %if.end954
  br label %if.end957

if.end957:                                        ; preds = %if.end956
  br label %if.end958

if.end958:                                        ; preds = %if.end957, %if.then941
  br label %if.end959

if.end959:                                        ; preds = %if.end958
  br label %if.end967

if.else960:                                       ; preds = %cond.end923
  br label %find_last

find_last:                                        ; preds = %if.else960, %if.else955
  %580 = load i64, i64* %len, align 8
  %tobool961 = icmp ne i64 %580, 0
  br i1 %tobool961, label %if.then962, label %if.else965

if.then962:                                       ; preds = %find_last
  %581 = load i8*, i8** %s, align 8
  %582 = load i8*, i8** %strend.addr, align 8
  %583 = load i8*, i8** %little, align 8
  %584 = load i8*, i8** %little, align 8
  %585 = load i64, i64* %len, align 8
  %add.ptr963 = getelementptr inbounds i8, i8* %584, i64 %585
  %call964 = call i8* @Perl_rninstr(i8* %581, i8* %582, i8* %583, i8* %add.ptr963)
  store i8* %call964, i8** %last879, align 8
  br label %if.end966

if.else965:                                       ; preds = %find_last
  %586 = load i8*, i8** %strend.addr, align 8
  store i8* %586, i8** %last879, align 8
  br label %if.end966

if.end966:                                        ; preds = %if.else965, %if.then962
  br label %if.end967

if.end967:                                        ; preds = %if.end966, %if.end959
  %587 = load i8*, i8** %last879, align 8
  %tobool968 = icmp ne i8* %587, null
  br i1 %tobool968, label %if.end970, label %if.then969

if.then969:                                       ; preds = %if.end967
  br label %phooey

if.end970:                                        ; preds = %if.end967
  %588 = load i8*, i8** %strend.addr, align 8
  %589 = load i8*, i8** %last879, align 8
  %sub.ptr.lhs.cast971 = ptrtoint i8* %588 to i64
  %sub.ptr.rhs.cast972 = ptrtoint i8* %589 to i64
  %sub.ptr.sub973 = sub i64 %sub.ptr.lhs.cast971, %sub.ptr.rhs.cast972
  %590 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %substrs974 = getelementptr inbounds %struct.regexp, %struct.regexp* %590, i32 0, i32 11
  %591 = load %struct.reg_substr_data*, %struct.reg_substr_data** %substrs974, align 8
  %data975 = getelementptr inbounds %struct.reg_substr_data, %struct.reg_substr_data* %591, i32 0, i32 1
  %arrayidx976 = getelementptr inbounds [3 x %struct.reg_substr_datum], [3 x %struct.reg_substr_datum]* %data975, i64 0, i64 1
  %min_offset977 = getelementptr inbounds %struct.reg_substr_datum, %struct.reg_substr_datum* %arrayidx976, i32 0, i32 0
  %592 = load i64, i64* %min_offset977, align 8
  %add978 = add nsw i64 %sub.ptr.sub973, %592
  store i64 %add978, i64* %dontbother, align 8
  br label %if.end979

if.end979:                                        ; preds = %if.end970, %lor.lhs.false871
  %593 = load i64, i64* %minlen, align 8
  %tobool980 = icmp ne i64 %593, 0
  br i1 %tobool980, label %land.lhs.true981, label %if.end986

land.lhs.true981:                                 ; preds = %if.end979
  %594 = load i64, i64* %dontbother, align 8
  %595 = load i64, i64* %minlen, align 8
  %cmp982 = icmp slt i64 %594, %595
  br i1 %cmp982, label %if.then984, label %if.end986

if.then984:                                       ; preds = %land.lhs.true981
  %596 = load i64, i64* %minlen, align 8
  %sub985 = sub nsw i64 %596, 1
  store i64 %sub985, i64* %dontbother, align 8
  br label %if.end986

if.end986:                                        ; preds = %if.then984, %land.lhs.true981, %if.end979
  %597 = load i64, i64* %dontbother, align 8
  %598 = load i8*, i8** %strend.addr, align 8
  %idx.neg987 = sub i64 0, %597
  %add.ptr988 = getelementptr inbounds i8, i8* %598, i64 %idx.neg987
  store i8* %add.ptr988, i8** %strend.addr, align 8
  %599 = load i8, i8* %utf8_target, align 1
  %tobool989 = trunc i8 %599 to i1
  br i1 %tobool989, label %if.then990, label %if.else1006

if.then990:                                       ; preds = %if.end986
  br label %for.cond991

for.cond991:                                      ; preds = %if.end999, %if.then990
  %600 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %call992 = call i32 @S_regtry(%struct.regmatch_info* %600, i8** %s)
  %tobool993 = icmp ne i32 %call992, 0
  br i1 %tobool993, label %if.then994, label %if.end995

if.then994:                                       ; preds = %for.cond991
  br label %got_it

if.end995:                                        ; preds = %for.cond991
  %601 = load i8*, i8** %s, align 8
  %602 = load i8*, i8** %strend.addr, align 8
  %cmp996 = icmp uge i8* %601, %602
  br i1 %cmp996, label %if.then998, label %if.end999

if.then998:                                       ; preds = %if.end995
  br label %for.end1005

if.end999:                                        ; preds = %if.end995
  %603 = load i8*, i8** %s, align 8
  %604 = load i8, i8* %603, align 1
  %idxprom1000 = zext i8 %604 to i64
  %arrayidx1001 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1000
  %605 = load i8, i8* %arrayidx1001, align 1
  %conv1002 = zext i8 %605 to i32
  %606 = load i8*, i8** %s, align 8
  %idx.ext1003 = sext i32 %conv1002 to i64
  %add.ptr1004 = getelementptr inbounds i8, i8* %606, i64 %idx.ext1003
  store i8* %add.ptr1004, i8** %s, align 8
  br label %for.cond991

for.end1005:                                      ; preds = %if.then998
  br label %if.end1016

if.else1006:                                      ; preds = %if.end986
  br label %do.body1007

do.body1007:                                      ; preds = %do.cond, %if.else1006
  %607 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %call1008 = call i32 @S_regtry(%struct.regmatch_info* %607, i8** %s)
  %tobool1009 = icmp ne i32 %call1008, 0
  br i1 %tobool1009, label %if.then1010, label %if.end1011

if.then1010:                                      ; preds = %do.body1007
  br label %got_it

if.end1011:                                       ; preds = %do.body1007
  br label %do.cond

do.cond:                                          ; preds = %if.end1011
  %608 = load i8*, i8** %s, align 8
  %incdec.ptr1012 = getelementptr inbounds i8, i8* %608, i32 1
  store i8* %incdec.ptr1012, i8** %s, align 8
  %609 = load i8*, i8** %strend.addr, align 8
  %cmp1013 = icmp ult i8* %608, %609
  br i1 %cmp1013, label %do.body1007, label %do.end1015

do.end1015:                                       ; preds = %do.cond
  br label %if.end1016

if.end1016:                                       ; preds = %do.end1015, %for.end1005
  br label %if.end1017

if.end1017:                                       ; preds = %if.end1016, %if.end863
  br label %if.end1018

if.end1018:                                       ; preds = %if.end1017
  br label %if.end1019

if.end1019:                                       ; preds = %if.end1018, %if.end442
  br label %phooey

got_it:                                           ; preds = %if.then1010, %if.then994, %if.then862, %if.then806, %if.then786, %if.then423, %if.then365, %if.then319, %if.then307, %if.then260
  %610 = load i32, i32* %flags.addr, align 4
  %and1020 = and i32 %610, 128
  %tobool1021 = icmp ne i32 %and1020, 0
  br i1 %tobool1021, label %land.lhs.true1022, label %if.end1032

land.lhs.true1022:                                ; preds = %got_it
  %611 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs1023 = getelementptr inbounds %struct.regexp, %struct.regexp* %611, i32 0, i32 17
  %612 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs1023, align 8
  %arrayidx1024 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %612, i64 0
  %start1025 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx1024, i32 0, i32 0
  %613 = load i64, i64* %start1025, align 8
  %614 = load i8*, i8** %stringarg.addr, align 8
  %615 = load i8*, i8** %strbeg.addr, align 8
  %sub.ptr.lhs.cast1026 = ptrtoint i8* %614 to i64
  %sub.ptr.rhs.cast1027 = ptrtoint i8* %615 to i64
  %sub.ptr.sub1028 = sub i64 %sub.ptr.lhs.cast1026, %sub.ptr.rhs.cast1027
  %cmp1029 = icmp slt i64 %613, %sub.ptr.sub1028
  br i1 %cmp1029, label %if.then1031, label %if.end1032

if.then1031:                                      ; preds = %land.lhs.true1022
  br label %phooey

if.end1032:                                       ; preds = %land.lhs.true1022, %got_it
  %616 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %swap, align 8
  %617 = bitcast %struct.regexp_paren_pair* %616 to i8*
  call void @Perl_safesysfree(i8* %617)
  br label %do.body1033

do.body1033:                                      ; preds = %if.end1032
  %618 = load i32, i32* @PL_savestack_ix, align 4
  %619 = load i32, i32* %oldsave, align 4
  %cmp1034 = icmp sgt i32 %618, %619
  br i1 %cmp1034, label %if.then1036, label %if.end1037

if.then1036:                                      ; preds = %do.body1033
  %620 = load i32, i32* %oldsave, align 4
  call void @Perl_leave_scope(i32 %620)
  br label %if.end1037

if.end1037:                                       ; preds = %if.then1036, %do.body1033
  br label %do.end1039

do.end1039:                                       ; preds = %if.end1037
  %621 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %paren_names = getelementptr inbounds %struct.regexp, %struct.regexp* %621, i32 0, i32 6
  %622 = load %struct.hv*, %struct.hv** %paren_names, align 8
  %tobool1040 = icmp ne %struct.hv* %622, null
  br i1 %tobool1040, label %if.then1041, label %if.end1044

if.then1041:                                      ; preds = %do.end1039
  %623 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %paren_names1042 = getelementptr inbounds %struct.regexp, %struct.regexp* %623, i32 0, i32 6
  %624 = load %struct.hv*, %struct.hv** %paren_names1042, align 8
  %call1043 = call i32 @Perl_hv_iterinit(%struct.hv* %624)
  br label %if.end1044

if.end1044:                                       ; preds = %if.then1041, %do.end1039
  %625 = load i32, i32* %flags.addr, align 4
  %and1045 = and i32 %625, 16
  %tobool1046 = icmp ne i32 %and1045, 0
  br i1 %tobool1046, label %if.end1050, label %if.then1047

if.then1047:                                      ; preds = %if.end1044
  %626 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %627 = load i8*, i8** %strbeg.addr, align 8
  %628 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo, align 8
  %strend1048 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %628, i32 0, i32 2
  %629 = load i8*, i8** %strend1048, align 8
  %630 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %631 = load i32, i32* %flags.addr, align 4
  %632 = load i8, i8* %utf8_target, align 1
  %tobool1049 = trunc i8 %632 to i1
  call void @S_reg_set_capture_string(%struct.p5rx* %626, i8* %627, i8* %629, %struct.sv* %630, i32 %631, i1 zeroext %tobool1049)
  br label %if.end1050

if.end1050:                                       ; preds = %if.then1047, %if.end1044
  store i32 1, i32* %retval, align 4
  br label %return

phooey:                                           ; preds = %if.then1031, %if.end1019, %if.then969, %if.else953, %if.then946, %if.then935, %do.body902, %while.end811, %do.body551, %do.body515, %do.body399, %if.end320, %while.end, %if.then302, %if.then265, %if.then137, %if.then79
  br label %do.body1051

do.body1051:                                      ; preds = %phooey
  %633 = load i32, i32* @PL_savestack_ix, align 4
  %634 = load i32, i32* %oldsave, align 4
  %cmp1052 = icmp sgt i32 %633, %634
  br i1 %cmp1052, label %if.then1054, label %if.end1055

if.then1054:                                      ; preds = %do.body1051
  %635 = load i32, i32* %oldsave, align 4
  call void @Perl_leave_scope(i32 %635)
  br label %if.end1055

if.end1055:                                       ; preds = %if.then1054, %do.body1051
  br label %do.end1057

do.end1057:                                       ; preds = %if.end1055
  %636 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %swap, align 8
  %tobool1058 = icmp ne %struct.regexp_paren_pair* %636, null
  br i1 %tobool1058, label %if.then1059, label %if.end1062

if.then1059:                                      ; preds = %do.end1057
  %637 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs1060 = getelementptr inbounds %struct.regexp, %struct.regexp* %637, i32 0, i32 17
  %638 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs1060, align 8
  %639 = bitcast %struct.regexp_paren_pair* %638 to i8*
  call void @Perl_safesysfree(i8* %639)
  %640 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %swap, align 8
  %641 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs1061 = getelementptr inbounds %struct.regexp, %struct.regexp* %641, i32 0, i32 17
  store %struct.regexp_paren_pair* %640, %struct.regexp_paren_pair** %offs1061, align 8
  br label %if.end1062

if.end1062:                                       ; preds = %if.then1059, %do.end1057
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end1062, %if.end1050, %if.end114, %if.then69, %if.then59, %if.then31
  %642 = load i32, i32* %retval, align 4
  ret i32 %642
}

declare dso_local void @Perl_croak(i8*, ...) #2

declare dso_local %struct.magic* @Perl_mg_find_mglob(%struct.sv*) #2

; Function Attrs: noinline nounwind uwtable
define internal i64 @S_MgBYTEPOS(%struct.magic* %mg, %struct.sv* %sv, i8* %s, i64 %len) #0 {
entry:
  %retval = alloca i64, align 8
  %mg.addr = alloca %struct.magic*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %s.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %pos = alloca i64, align 8
  store %struct.magic* %mg, %struct.magic** %mg.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store i8* %s, i8** %s.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  %0 = load %struct.magic*, %struct.magic** %mg.addr, align 8
  %mg_flags = getelementptr inbounds %struct.magic, %struct.magic* %0, i32 0, i32 4
  %1 = load i8, i8* %mg_flags, align 1
  %conv = zext i8 %1 to i32
  %and = and i32 %conv, 64
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 2
  %3 = load i32, i32* %sv_flags, align 4
  %and1 = and i32 %3, 536870912
  %tobool2 = icmp ne i32 %and1, 0
  br i1 %tobool2, label %land.lhs.true, label %if.then

land.lhs.true:                                    ; preds = %lor.lhs.false
  %4 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints = getelementptr inbounds %struct.cop, %struct.cop* %4, i32 0, i32 10
  %5 = load i32, i32* %cop_hints, align 8
  %add = add i32 %5, 0
  %and3 = and i32 %add, 8
  %tobool4 = icmp ne i32 %and3, 0
  br i1 %tobool4, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false, %entry
  %6 = load %struct.magic*, %struct.magic** %mg.addr, align 8
  %mg_len = getelementptr inbounds %struct.magic, %struct.magic* %6, i32 0, i32 5
  %7 = load i64, i64* %mg_len, align 8
  store i64 %7, i64* %retval, align 8
  br label %return

if.else:                                          ; preds = %land.lhs.true
  %8 = load %struct.magic*, %struct.magic** %mg.addr, align 8
  %mg_len5 = getelementptr inbounds %struct.magic, %struct.magic* %8, i32 0, i32 5
  %9 = load i64, i64* %mg_len5, align 8
  store i64 %9, i64* %pos, align 8
  %10 = load i64, i64* %pos, align 8
  %11 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags6 = getelementptr inbounds %struct.sv, %struct.sv* %11, i32 0, i32 2
  %12 = load i32, i32* %sv_flags6, align 4
  %and7 = and i32 %12, 2097152
  %tobool8 = icmp ne i32 %and7, 0
  br i1 %tobool8, label %cond.true, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %if.else
  %13 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags10 = getelementptr inbounds %struct.sv, %struct.sv* %13, i32 0, i32 2
  %14 = load i32, i32* %sv_flags10, align 4
  %and11 = and i32 %14, 2048
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %land.lhs.true13, label %cond.false

land.lhs.true13:                                  ; preds = %lor.lhs.false9
  %15 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %15, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u to %struct.sv**
  %16 = load %struct.sv*, %struct.sv** %svu_rv, align 8
  %sv_flags14 = getelementptr inbounds %struct.sv, %struct.sv* %16, i32 0, i32 2
  %17 = load i32, i32* %sv_flags14, align 4
  %and15 = and i32 %17, 1048576
  %tobool16 = icmp ne i32 %and15, 0
  br i1 %tobool16, label %land.lhs.true17, label %cond.false

land.lhs.true17:                                  ; preds = %land.lhs.true13
  %18 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u18 = getelementptr inbounds %struct.sv, %struct.sv* %18, i32 0, i32 3
  %svu_rv19 = bitcast %union.anon* %sv_u18 to %struct.sv**
  %19 = load %struct.sv*, %struct.sv** %svu_rv19, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %19, i32 0, i32 0
  %20 = load i8*, i8** %sv_any, align 8
  %21 = bitcast i8* %20 to %struct.xpvmg*
  %xmg_stash = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %21, i32 0, i32 0
  %22 = load %struct.hv*, %struct.hv** %xmg_stash, align 8
  %sv_flags20 = getelementptr inbounds %struct.hv, %struct.hv* %22, i32 0, i32 2
  %23 = load i32, i32* %sv_flags20, align 4
  %and21 = and i32 %23, 268435456
  %tobool22 = icmp ne i32 %and21, 0
  br i1 %tobool22, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true17, %if.else
  %24 = load i8*, i8** %s.addr, align 8
  %25 = load i8*, i8** %s.addr, align 8
  %26 = load i64, i64* %len.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 %26
  %call = call i64 @Perl_utf8_length(i8* %24, i8* %add.ptr)
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true17, %land.lhs.true13, %lor.lhs.false9
  %27 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call23 = call i64 @Perl_sv_len_utf8(%struct.sv* %27)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call, %cond.true ], [ %call23, %cond.false ]
  %cmp = icmp ugt i64 %10, %cond
  br i1 %cmp, label %if.then25, label %if.end

if.then25:                                        ; preds = %cond.end
  %28 = load i64, i64* %len.addr, align 8
  %add26 = add i64 %28, 1
  store i64 %add26, i64* %retval, align 8
  br label %return

if.end:                                           ; preds = %cond.end
  %29 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %30 = load i8*, i8** %s.addr, align 8
  %31 = load i64, i64* %pos, align 8
  %call27 = call i64 @S_sv_or_pv_pos_u2b(%struct.sv* %29, i8* %30, i64 %31, i64* null)
  store i64 %call27, i64* %retval, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then25, %if.then
  %32 = load i64, i64* %retval, align 8
  ret i64 %32
}

declare dso_local i8* @Perl_utf8_hop(i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @S_reg_set_capture_string(%struct.p5rx* %rx, i8* %strbeg, i8* %strend, %struct.sv* %sv, i32 %flags, i1 zeroext %utf8_target) #0 {
entry:
  %rx.addr = alloca %struct.p5rx*, align 8
  %strbeg.addr = alloca i8*, align 8
  %strend.addr = alloca i8*, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %flags.addr = alloca i32, align 4
  %utf8_target.addr = alloca i8, align 1
  %prog = alloca %struct.regexp*, align 8
  %min = alloca i64, align 8
  %max = alloca i64, align 8
  %sublen93 = alloca i64, align 8
  %n = alloca i32, align 4
  %n127 = alloca i32, align 4
  store %struct.p5rx* %rx, %struct.p5rx** %rx.addr, align 8
  store i8* %strbeg, i8** %strbeg.addr, align 8
  store i8* %strend, i8** %strend.addr, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  %frombool = zext i1 %utf8_target to i8
  store i8 %frombool, i8* %utf8_target.addr, align 1
  %0 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call = call %struct.regexp* @S_ReANY(%struct.p5rx* %0)
  store %struct.regexp* %call, %struct.regexp** %prog, align 8
  %1 = load i32, i32* %flags.addr, align 4
  %and = and i32 %1, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.else221

if.then:                                          ; preds = %entry
  %2 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 2
  %3 = load i32, i32* %sv_flags, align 4
  %and1 = and i32 %3, 268435456
  %tobool2 = icmp ne i32 %and1, 0
  br i1 %tobool2, label %cond.true, label %cond.false10

cond.true:                                        ; preds = %if.then
  %4 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %4, i32 0, i32 0
  %5 = load i8*, i8** %sv_any, align 8
  %6 = bitcast i8* %5 to %struct.xpv*
  %xpv_len_u = getelementptr inbounds %struct.xpv, %struct.xpv* %6, i32 0, i32 3
  %xpvlenu_len = bitcast %union.anon.32* %xpv_len_u to i64*
  %7 = load i64, i64* %xpvlenu_len, align 8
  %tobool3 = icmp ne i64 %7, 0
  br i1 %tobool3, label %cond.true4, label %cond.false

cond.true4:                                       ; preds = %cond.true
  %8 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %8, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %9 = load i8*, i8** %svu_pv, align 8
  %10 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any5 = getelementptr inbounds %struct.sv, %struct.sv* %10, i32 0, i32 0
  %11 = load i8*, i8** %sv_any5, align 8
  %12 = bitcast i8* %11 to %struct.xpv*
  %xpv_len_u6 = getelementptr inbounds %struct.xpv, %struct.xpv* %12, i32 0, i32 3
  %xpvlenu_len7 = bitcast %union.anon.32* %xpv_len_u6 to i64*
  %13 = load i64, i64* %xpvlenu_len7, align 8
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 %13
  %add.ptr8 = getelementptr inbounds i8, i8* %add.ptr, i64 -1
  %14 = load i8, i8* %add.ptr8, align 1
  %conv = zext i8 %14 to i32
  %cmp = icmp ne i32 %conv, 255
  br i1 %cmp, label %if.then21, label %if.else89

cond.false:                                       ; preds = %cond.true
  br i1 true, label %if.then21, label %if.else89

cond.false10:                                     ; preds = %if.then
  %15 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags11 = getelementptr inbounds %struct.sv, %struct.sv* %15, i32 0, i32 2
  %16 = load i32, i32* %sv_flags11, align 4
  %and12 = and i32 %16, 251743232
  %cmp13 = icmp eq i32 %and12, 17408
  br i1 %cmp13, label %land.lhs.true, label %if.else89

land.lhs.true:                                    ; preds = %cond.false10
  %17 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any15 = getelementptr inbounds %struct.sv, %struct.sv* %17, i32 0, i32 0
  %18 = load i8*, i8** %sv_any15, align 8
  %19 = bitcast i8* %18 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %19, i32 0, i32 2
  %20 = load i64, i64* %xpv_cur, align 8
  %add = add i64 %20, 1
  %21 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any16 = getelementptr inbounds %struct.sv, %struct.sv* %21, i32 0, i32 0
  %22 = load i8*, i8** %sv_any16, align 8
  %23 = bitcast i8* %22 to %struct.xpv*
  %xpv_len_u17 = getelementptr inbounds %struct.xpv, %struct.xpv* %23, i32 0, i32 3
  %xpvlenu_len18 = bitcast %union.anon.32* %xpv_len_u17 to i64*
  %24 = load i64, i64* %xpvlenu_len18, align 8
  %cmp19 = icmp ult i64 %add, %24
  br i1 %cmp19, label %if.then21, label %if.else89

if.then21:                                        ; preds = %land.lhs.true, %cond.false, %cond.true4
  %25 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %saved_copy = getelementptr inbounds %struct.regexp, %struct.regexp* %25, i32 0, i32 19
  %26 = load %struct.sv*, %struct.sv** %saved_copy, align 8
  %tobool22 = icmp ne %struct.sv* %26, null
  br i1 %tobool22, label %land.lhs.true23, label %if.else

land.lhs.true23:                                  ; preds = %if.then21
  %27 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %saved_copy24 = getelementptr inbounds %struct.regexp, %struct.regexp* %27, i32 0, i32 19
  %28 = load %struct.sv*, %struct.sv** %saved_copy24, align 8
  %sv_flags25 = getelementptr inbounds %struct.sv, %struct.sv* %28, i32 0, i32 2
  %29 = load i32, i32* %sv_flags25, align 4
  %and26 = and i32 %29, 268435456
  %tobool27 = icmp ne i32 %and26, 0
  br i1 %tobool27, label %land.lhs.true28, label %if.else

land.lhs.true28:                                  ; preds = %land.lhs.true23
  %30 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %saved_copy29 = getelementptr inbounds %struct.regexp, %struct.regexp* %30, i32 0, i32 19
  %31 = load %struct.sv*, %struct.sv** %saved_copy29, align 8
  %sv_flags30 = getelementptr inbounds %struct.sv, %struct.sv* %31, i32 0, i32 2
  %32 = load i32, i32* %sv_flags30, align 4
  %and31 = and i32 %32, 16384
  %tobool32 = icmp ne i32 %and31, 0
  br i1 %tobool32, label %land.lhs.true33, label %if.else

land.lhs.true33:                                  ; preds = %land.lhs.true28
  %33 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags34 = getelementptr inbounds %struct.sv, %struct.sv* %33, i32 0, i32 2
  %34 = load i32, i32* %sv_flags34, align 4
  %and35 = and i32 %34, 268435456
  %tobool36 = icmp ne i32 %and35, 0
  br i1 %tobool36, label %land.lhs.true37, label %if.else

land.lhs.true37:                                  ; preds = %land.lhs.true33
  %35 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags38 = getelementptr inbounds %struct.sv, %struct.sv* %35, i32 0, i32 2
  %36 = load i32, i32* %sv_flags38, align 4
  %and39 = and i32 %36, 16384
  %tobool40 = icmp ne i32 %and39, 0
  br i1 %tobool40, label %land.lhs.true41, label %if.else

land.lhs.true41:                                  ; preds = %land.lhs.true37
  %37 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u42 = getelementptr inbounds %struct.sv, %struct.sv* %37, i32 0, i32 3
  %svu_pv43 = bitcast %union.anon* %sv_u42 to i8**
  %38 = load i8*, i8** %svu_pv43, align 8
  %39 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %saved_copy44 = getelementptr inbounds %struct.regexp, %struct.regexp* %39, i32 0, i32 19
  %40 = load %struct.sv*, %struct.sv** %saved_copy44, align 8
  %sv_u45 = getelementptr inbounds %struct.sv, %struct.sv* %40, i32 0, i32 3
  %svu_pv46 = bitcast %union.anon* %sv_u45 to i8**
  %41 = load i8*, i8** %svu_pv46, align 8
  %cmp47 = icmp eq i8* %38, %41
  br i1 %cmp47, label %if.then49, label %if.else

if.then49:                                        ; preds = %land.lhs.true41
  %42 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags = getelementptr inbounds %struct.regexp, %struct.regexp* %42, i32 0, i32 7
  %43 = load i32, i32* %extflags, align 8
  %and50 = and i32 %43, 33554432
  %tobool51 = icmp ne i32 %and50, 0
  br i1 %tobool51, label %if.then52, label %if.end

if.then52:                                        ; preds = %if.then49
  %44 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subbeg = getelementptr inbounds %struct.regexp, %struct.regexp* %44, i32 0, i32 18
  %45 = load i8*, i8** %subbeg, align 8
  call void @Perl_safesysfree(i8* %45)
  %46 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags53 = getelementptr inbounds %struct.regexp, %struct.regexp* %46, i32 0, i32 7
  %47 = load i32, i32* %extflags53, align 8
  %and54 = and i32 %47, -33554433
  store i32 %and54, i32* %extflags53, align 8
  br label %if.end

if.end:                                           ; preds = %if.then52, %if.then49
  br label %if.end83

if.else:                                          ; preds = %land.lhs.true41, %land.lhs.true37, %land.lhs.true33, %land.lhs.true28, %land.lhs.true23, %if.then21
  br label %do.body

do.body:                                          ; preds = %if.else
  %48 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call55 = call %struct.regexp* @S_ReANY(%struct.p5rx* %48)
  %saved_copy56 = getelementptr inbounds %struct.regexp, %struct.regexp* %call55, i32 0, i32 19
  %49 = load %struct.sv*, %struct.sv** %saved_copy56, align 8
  %tobool57 = icmp ne %struct.sv* %49, null
  br i1 %tobool57, label %if.then58, label %if.end68

if.then58:                                        ; preds = %do.body
  %50 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call59 = call %struct.regexp* @S_ReANY(%struct.p5rx* %50)
  %saved_copy60 = getelementptr inbounds %struct.regexp, %struct.regexp* %call59, i32 0, i32 19
  %51 = load %struct.sv*, %struct.sv** %saved_copy60, align 8
  %sv_flags61 = getelementptr inbounds %struct.sv, %struct.sv* %51, i32 0, i32 2
  %52 = load i32, i32* %sv_flags61, align 4
  %and62 = and i32 %52, 427886592
  %tobool63 = icmp ne i32 %and62, 0
  br i1 %tobool63, label %if.then64, label %if.end67

if.then64:                                        ; preds = %if.then58
  %53 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call65 = call %struct.regexp* @S_ReANY(%struct.p5rx* %53)
  %saved_copy66 = getelementptr inbounds %struct.regexp, %struct.regexp* %call65, i32 0, i32 19
  %54 = load %struct.sv*, %struct.sv** %saved_copy66, align 8
  call void @Perl_sv_force_normal_flags(%struct.sv* %54, i32 4)
  br label %if.end67

if.end67:                                         ; preds = %if.then64, %if.then58
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %do.body
  %55 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call69 = call %struct.regexp* @S_ReANY(%struct.p5rx* %55)
  %extflags70 = getelementptr inbounds %struct.regexp, %struct.regexp* %call69, i32 0, i32 7
  %56 = load i32, i32* %extflags70, align 8
  %and71 = and i32 %56, 33554432
  %tobool72 = icmp ne i32 %and71, 0
  br i1 %tobool72, label %if.then73, label %if.end79

if.then73:                                        ; preds = %if.end68
  %57 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call74 = call %struct.regexp* @S_ReANY(%struct.p5rx* %57)
  %subbeg75 = getelementptr inbounds %struct.regexp, %struct.regexp* %call74, i32 0, i32 18
  %58 = load i8*, i8** %subbeg75, align 8
  call void @Perl_safesysfree(i8* %58)
  %59 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call76 = call %struct.regexp* @S_ReANY(%struct.p5rx* %59)
  %extflags77 = getelementptr inbounds %struct.regexp, %struct.regexp* %call76, i32 0, i32 7
  %60 = load i32, i32* %extflags77, align 8
  %and78 = and i32 %60, -33554433
  store i32 %and78, i32* %extflags77, align 8
  br label %if.end79

if.end79:                                         ; preds = %if.then73, %if.end68
  br label %do.end

do.end:                                           ; preds = %if.end79
  %61 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %saved_copy80 = getelementptr inbounds %struct.regexp, %struct.regexp* %61, i32 0, i32 19
  %62 = load %struct.sv*, %struct.sv** %saved_copy80, align 8
  %63 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %call81 = call %struct.sv* @Perl_sv_setsv_cow(%struct.sv* %62, %struct.sv* %63)
  %64 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %saved_copy82 = getelementptr inbounds %struct.regexp, %struct.regexp* %64, i32 0, i32 19
  store %struct.sv* %call81, %struct.sv** %saved_copy82, align 8
  br label %if.end83

if.end83:                                         ; preds = %do.end, %if.end
  %65 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %saved_copy84 = getelementptr inbounds %struct.regexp, %struct.regexp* %65, i32 0, i32 19
  %66 = load %struct.sv*, %struct.sv** %saved_copy84, align 8
  %sv_u85 = getelementptr inbounds %struct.sv, %struct.sv* %66, i32 0, i32 3
  %svu_pv86 = bitcast %union.anon* %sv_u85 to i8**
  %67 = load i8*, i8** %svu_pv86, align 8
  %add.ptr87 = getelementptr inbounds i8, i8* %67, i64 0
  %68 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subbeg88 = getelementptr inbounds %struct.regexp, %struct.regexp* %68, i32 0, i32 18
  store i8* %add.ptr87, i8** %subbeg88, align 8
  %69 = load i8*, i8** %strend.addr, align 8
  %70 = load i8*, i8** %strbeg.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %69 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %70 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %71 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %sublen = getelementptr inbounds %struct.regexp, %struct.regexp* %71, i32 0, i32 20
  store i64 %sub.ptr.sub, i64* %sublen, align 8
  %72 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %suboffset = getelementptr inbounds %struct.regexp, %struct.regexp* %72, i32 0, i32 21
  store i64 0, i64* %suboffset, align 8
  %73 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subcoffset = getelementptr inbounds %struct.regexp, %struct.regexp* %73, i32 0, i32 22
  store i64 0, i64* %subcoffset, align 8
  br label %if.end193

if.else89:                                        ; preds = %land.lhs.true, %cond.false10, %cond.false, %cond.true4
  store i64 0, i64* %min, align 8
  %74 = load i8*, i8** %strend.addr, align 8
  %75 = load i8*, i8** %strbeg.addr, align 8
  %sub.ptr.lhs.cast90 = ptrtoint i8* %74 to i64
  %sub.ptr.rhs.cast91 = ptrtoint i8* %75 to i64
  %sub.ptr.sub92 = sub i64 %sub.ptr.lhs.cast90, %sub.ptr.rhs.cast91
  store i64 %sub.ptr.sub92, i64* %max, align 8
  %76 = load i32, i32* %flags.addr, align 4
  %and94 = and i32 %76, 64
  %tobool95 = icmp ne i32 %and94, 0
  br i1 %tobool95, label %land.lhs.true96, label %if.end118

land.lhs.true96:                                  ; preds = %if.else89
  %77 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags97 = getelementptr inbounds %struct.regexp, %struct.regexp* %77, i32 0, i32 7
  %78 = load i32, i32* %extflags97, align 8
  %and98 = and i32 %78, 64
  %tobool99 = icmp ne i32 %and98, 0
  br i1 %tobool99, label %if.end118, label %land.lhs.true100

land.lhs.true100:                                 ; preds = %land.lhs.true96
  br i1 true, label %if.end118, label %if.then101

if.then101:                                       ; preds = %land.lhs.true100
  store i32 0, i32* %n, align 4
  store i64 -1, i64* %max, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end111, %if.then101
  %79 = load i32, i32* %n, align 4
  %80 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %lastparen = getelementptr inbounds %struct.regexp, %struct.regexp* %80, i32 0, i32 15
  %81 = load i32, i32* %lastparen, align 8
  %cmp102 = icmp ule i32 %79, %81
  br i1 %cmp102, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %82 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs = getelementptr inbounds %struct.regexp, %struct.regexp* %82, i32 0, i32 17
  %83 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs, align 8
  %84 = load i32, i32* %n, align 4
  %idxprom = zext i32 %84 to i64
  %arrayidx = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %83, i64 %idxprom
  %end = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx, i32 0, i32 1
  %85 = load i64, i64* %end, align 8
  %86 = load i64, i64* %max, align 8
  %cmp104 = icmp sgt i64 %85, %86
  br i1 %cmp104, label %if.then106, label %if.end111

if.then106:                                       ; preds = %while.body
  %87 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs107 = getelementptr inbounds %struct.regexp, %struct.regexp* %87, i32 0, i32 17
  %88 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs107, align 8
  %89 = load i32, i32* %n, align 4
  %idxprom108 = zext i32 %89 to i64
  %arrayidx109 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %88, i64 %idxprom108
  %end110 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx109, i32 0, i32 1
  %90 = load i64, i64* %end110, align 8
  store i64 %90, i64* %max, align 8
  br label %if.end111

if.end111:                                        ; preds = %if.then106, %while.body
  %91 = load i32, i32* %n, align 4
  %inc = add i32 %91, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %92 = load i64, i64* %max, align 8
  %cmp112 = icmp eq i64 %92, -1
  br i1 %cmp112, label %if.then114, label %if.end117

if.then114:                                       ; preds = %while.end
  %93 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs115 = getelementptr inbounds %struct.regexp, %struct.regexp* %93, i32 0, i32 17
  %94 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs115, align 8
  %arrayidx116 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %94, i64 0
  %start = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx116, i32 0, i32 0
  %95 = load i64, i64* %start, align 8
  store i64 %95, i64* %max, align 8
  br label %if.end117

if.end117:                                        ; preds = %if.then114, %while.end
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %land.lhs.true100, %land.lhs.true96, %if.else89
  %96 = load i32, i32* %flags.addr, align 4
  %and119 = and i32 %96, 32
  %tobool120 = icmp ne i32 %and119, 0
  br i1 %tobool120, label %land.lhs.true121, label %if.end165

land.lhs.true121:                                 ; preds = %if.end118
  %97 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %extflags122 = getelementptr inbounds %struct.regexp, %struct.regexp* %97, i32 0, i32 7
  %98 = load i32, i32* %extflags122, align 8
  %and123 = and i32 %98, 64
  %tobool124 = icmp ne i32 %and123, 0
  br i1 %tobool124, label %if.end165, label %land.lhs.true125

land.lhs.true125:                                 ; preds = %land.lhs.true121
  br i1 true, label %if.end165, label %if.then126

if.then126:                                       ; preds = %land.lhs.true125
  store i32 0, i32* %n127, align 4
  %99 = load i64, i64* %max, align 8
  store i64 %99, i64* %min, align 8
  br label %while.cond128

while.cond128:                                    ; preds = %if.end152, %if.then126
  %100 = load i64, i64* %min, align 8
  %tobool129 = icmp ne i64 %100, 0
  br i1 %tobool129, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond128
  %101 = load i32, i32* %n127, align 4
  %102 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %lastparen130 = getelementptr inbounds %struct.regexp, %struct.regexp* %102, i32 0, i32 15
  %103 = load i32, i32* %lastparen130, align 8
  %cmp131 = icmp ule i32 %101, %103
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond128
  %104 = phi i1 [ false, %while.cond128 ], [ %cmp131, %land.rhs ]
  br i1 %104, label %while.body133, label %while.end154

while.body133:                                    ; preds = %land.end
  %105 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs134 = getelementptr inbounds %struct.regexp, %struct.regexp* %105, i32 0, i32 17
  %106 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs134, align 8
  %107 = load i32, i32* %n127, align 4
  %idxprom135 = zext i32 %107 to i64
  %arrayidx136 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %106, i64 %idxprom135
  %start137 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx136, i32 0, i32 0
  %108 = load i64, i64* %start137, align 8
  %cmp138 = icmp ne i64 %108, -1
  br i1 %cmp138, label %land.lhs.true140, label %if.end152

land.lhs.true140:                                 ; preds = %while.body133
  %109 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs141 = getelementptr inbounds %struct.regexp, %struct.regexp* %109, i32 0, i32 17
  %110 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs141, align 8
  %111 = load i32, i32* %n127, align 4
  %idxprom142 = zext i32 %111 to i64
  %arrayidx143 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %110, i64 %idxprom142
  %start144 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx143, i32 0, i32 0
  %112 = load i64, i64* %start144, align 8
  %113 = load i64, i64* %min, align 8
  %cmp145 = icmp slt i64 %112, %113
  br i1 %cmp145, label %if.then147, label %if.end152

if.then147:                                       ; preds = %land.lhs.true140
  %114 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs148 = getelementptr inbounds %struct.regexp, %struct.regexp* %114, i32 0, i32 17
  %115 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs148, align 8
  %116 = load i32, i32* %n127, align 4
  %idxprom149 = zext i32 %116 to i64
  %arrayidx150 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %115, i64 %idxprom149
  %start151 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx150, i32 0, i32 0
  %117 = load i64, i64* %start151, align 8
  store i64 %117, i64* %min, align 8
  br label %if.end152

if.end152:                                        ; preds = %if.then147, %land.lhs.true140, %while.body133
  %118 = load i32, i32* %n127, align 4
  %inc153 = add i32 %118, 1
  store i32 %inc153, i32* %n127, align 4
  br label %while.cond128

while.end154:                                     ; preds = %land.end
  %119 = load i64, i64* %min, align 8
  %120 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs155 = getelementptr inbounds %struct.regexp, %struct.regexp* %120, i32 0, i32 17
  %121 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs155, align 8
  %arrayidx156 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %121, i64 0
  %end157 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx156, i32 0, i32 1
  %122 = load i64, i64* %end157, align 8
  %cmp158 = icmp sgt i64 %119, %122
  br i1 %cmp158, label %if.then160, label %if.end164

if.then160:                                       ; preds = %while.end154
  %123 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %offs161 = getelementptr inbounds %struct.regexp, %struct.regexp* %123, i32 0, i32 17
  %124 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs161, align 8
  %arrayidx162 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %124, i64 0
  %end163 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx162, i32 0, i32 1
  %125 = load i64, i64* %end163, align 8
  store i64 %125, i64* %min, align 8
  br label %if.end164

if.end164:                                        ; preds = %if.then160, %while.end154
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %land.lhs.true125, %land.lhs.true121, %if.end118
  %126 = load i64, i64* %max, align 8
  %127 = load i64, i64* %min, align 8
  %sub = sub nsw i64 %126, %127
  store i64 %sub, i64* %sublen93, align 8
  %128 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call166 = call %struct.regexp* @S_ReANY(%struct.p5rx* %128)
  %extflags167 = getelementptr inbounds %struct.regexp, %struct.regexp* %call166, i32 0, i32 7
  %129 = load i32, i32* %extflags167, align 8
  %and168 = and i32 %129, 33554432
  %tobool169 = icmp ne i32 %and168, 0
  br i1 %tobool169, label %if.then170, label %if.else180

if.then170:                                       ; preds = %if.end165
  %130 = load i64, i64* %sublen93, align 8
  %131 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %sublen171 = getelementptr inbounds %struct.regexp, %struct.regexp* %131, i32 0, i32 20
  %132 = load i64, i64* %sublen171, align 8
  %cmp172 = icmp sgt i64 %130, %132
  br i1 %cmp172, label %if.then174, label %if.end179

if.then174:                                       ; preds = %if.then170
  %133 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subbeg175 = getelementptr inbounds %struct.regexp, %struct.regexp* %133, i32 0, i32 18
  %134 = load i8*, i8** %subbeg175, align 8
  %135 = load i64, i64* %sublen93, align 8
  %add176 = add nsw i64 %135, 1
  %call177 = call i8* @Perl_safesysrealloc(i8* %134, i64 %add176)
  %136 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subbeg178 = getelementptr inbounds %struct.regexp, %struct.regexp* %136, i32 0, i32 18
  store i8* %call177, i8** %subbeg178, align 8
  br label %if.end179

if.end179:                                        ; preds = %if.then174, %if.then170
  br label %if.end184

if.else180:                                       ; preds = %if.end165
  %137 = load i64, i64* %sublen93, align 8
  %add181 = add nsw i64 %137, 1
  %call182 = call i8* @Perl_safesysmalloc(i64 %add181)
  %138 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subbeg183 = getelementptr inbounds %struct.regexp, %struct.regexp* %138, i32 0, i32 18
  store i8* %call182, i8** %subbeg183, align 8
  br label %if.end184

if.end184:                                        ; preds = %if.else180, %if.end179
  %139 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subbeg185 = getelementptr inbounds %struct.regexp, %struct.regexp* %139, i32 0, i32 18
  %140 = load i8*, i8** %subbeg185, align 8
  %141 = load i8*, i8** %strbeg.addr, align 8
  %142 = load i64, i64* %min, align 8
  %add.ptr186 = getelementptr inbounds i8, i8* %141, i64 %142
  %143 = load i64, i64* %sublen93, align 8
  %mul = mul i64 %143, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %140, i8* align 1 %add.ptr186, i64 %mul, i1 false)
  %144 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subbeg187 = getelementptr inbounds %struct.regexp, %struct.regexp* %144, i32 0, i32 18
  %145 = load i8*, i8** %subbeg187, align 8
  %146 = load i64, i64* %sublen93, align 8
  %arrayidx188 = getelementptr inbounds i8, i8* %145, i64 %146
  store i8 0, i8* %arrayidx188, align 1
  %147 = load i64, i64* %min, align 8
  %148 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %suboffset189 = getelementptr inbounds %struct.regexp, %struct.regexp* %148, i32 0, i32 21
  store i64 %147, i64* %suboffset189, align 8
  %149 = load i64, i64* %sublen93, align 8
  %150 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %sublen190 = getelementptr inbounds %struct.regexp, %struct.regexp* %150, i32 0, i32 20
  store i64 %149, i64* %sublen190, align 8
  %151 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call191 = call %struct.regexp* @S_ReANY(%struct.p5rx* %151)
  %extflags192 = getelementptr inbounds %struct.regexp, %struct.regexp* %call191, i32 0, i32 7
  %152 = load i32, i32* %extflags192, align 8
  %or = or i32 %152, 33554432
  store i32 %or, i32* %extflags192, align 8
  br label %if.end193

if.end193:                                        ; preds = %if.end184, %if.end83
  %153 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %suboffset194 = getelementptr inbounds %struct.regexp, %struct.regexp* %153, i32 0, i32 21
  %154 = load i64, i64* %suboffset194, align 8
  %155 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subcoffset195 = getelementptr inbounds %struct.regexp, %struct.regexp* %155, i32 0, i32 22
  store i64 %154, i64* %subcoffset195, align 8
  %156 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %suboffset196 = getelementptr inbounds %struct.regexp, %struct.regexp* %156, i32 0, i32 21
  %157 = load i64, i64* %suboffset196, align 8
  %tobool197 = icmp ne i64 %157, 0
  br i1 %tobool197, label %land.lhs.true198, label %if.end220

land.lhs.true198:                                 ; preds = %if.end193
  %158 = load i8, i8* %utf8_target.addr, align 1
  %tobool199 = trunc i8 %158 to i1
  br i1 %tobool199, label %if.then201, label %if.end220

if.then201:                                       ; preds = %land.lhs.true198
  %159 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags202 = getelementptr inbounds %struct.sv, %struct.sv* %159, i32 0, i32 2
  %160 = load i32, i32* %sv_flags202, align 4
  %and203 = and i32 %160, 16384
  %tobool204 = icmp ne i32 %and203, 0
  br i1 %tobool204, label %land.lhs.true205, label %if.else214

land.lhs.true205:                                 ; preds = %if.then201
  %161 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u206 = getelementptr inbounds %struct.sv, %struct.sv* %161, i32 0, i32 3
  %svu_pv207 = bitcast %union.anon* %sv_u206 to i8**
  %162 = load i8*, i8** %svu_pv207, align 8
  %163 = load i8*, i8** %strbeg.addr, align 8
  %cmp208 = icmp eq i8* %162, %163
  br i1 %cmp208, label %if.then210, label %if.else214

if.then210:                                       ; preds = %land.lhs.true205
  %164 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %165 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subcoffset211 = getelementptr inbounds %struct.regexp, %struct.regexp* %165, i32 0, i32 22
  %166 = load i64, i64* %subcoffset211, align 8
  %call212 = call i64 @Perl_sv_pos_b2u_flags(%struct.sv* %164, i64 %166, i32 34)
  %167 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subcoffset213 = getelementptr inbounds %struct.regexp, %struct.regexp* %167, i32 0, i32 22
  store i64 %call212, i64* %subcoffset213, align 8
  br label %if.end219

if.else214:                                       ; preds = %land.lhs.true205, %if.then201
  %168 = load i8*, i8** %strbeg.addr, align 8
  %169 = load i8*, i8** %strbeg.addr, align 8
  %170 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %suboffset215 = getelementptr inbounds %struct.regexp, %struct.regexp* %170, i32 0, i32 21
  %171 = load i64, i64* %suboffset215, align 8
  %add.ptr216 = getelementptr inbounds i8, i8* %169, i64 %171
  %call217 = call i64 @Perl_utf8_length(i8* %168, i8* %add.ptr216)
  %172 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subcoffset218 = getelementptr inbounds %struct.regexp, %struct.regexp* %172, i32 0, i32 22
  store i64 %call217, i64* %subcoffset218, align 8
  br label %if.end219

if.end219:                                        ; preds = %if.else214, %if.then210
  br label %if.end220

if.end220:                                        ; preds = %if.end219, %land.lhs.true198, %if.end193
  br label %if.end256

if.else221:                                       ; preds = %entry
  br label %do.body222

do.body222:                                       ; preds = %if.else221
  %173 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call223 = call %struct.regexp* @S_ReANY(%struct.p5rx* %173)
  %saved_copy224 = getelementptr inbounds %struct.regexp, %struct.regexp* %call223, i32 0, i32 19
  %174 = load %struct.sv*, %struct.sv** %saved_copy224, align 8
  %tobool225 = icmp ne %struct.sv* %174, null
  br i1 %tobool225, label %if.then226, label %if.end236

if.then226:                                       ; preds = %do.body222
  %175 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call227 = call %struct.regexp* @S_ReANY(%struct.p5rx* %175)
  %saved_copy228 = getelementptr inbounds %struct.regexp, %struct.regexp* %call227, i32 0, i32 19
  %176 = load %struct.sv*, %struct.sv** %saved_copy228, align 8
  %sv_flags229 = getelementptr inbounds %struct.sv, %struct.sv* %176, i32 0, i32 2
  %177 = load i32, i32* %sv_flags229, align 4
  %and230 = and i32 %177, 427886592
  %tobool231 = icmp ne i32 %and230, 0
  br i1 %tobool231, label %if.then232, label %if.end235

if.then232:                                       ; preds = %if.then226
  %178 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call233 = call %struct.regexp* @S_ReANY(%struct.p5rx* %178)
  %saved_copy234 = getelementptr inbounds %struct.regexp, %struct.regexp* %call233, i32 0, i32 19
  %179 = load %struct.sv*, %struct.sv** %saved_copy234, align 8
  call void @Perl_sv_force_normal_flags(%struct.sv* %179, i32 4)
  br label %if.end235

if.end235:                                        ; preds = %if.then232, %if.then226
  br label %if.end236

if.end236:                                        ; preds = %if.end235, %do.body222
  %180 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call237 = call %struct.regexp* @S_ReANY(%struct.p5rx* %180)
  %extflags238 = getelementptr inbounds %struct.regexp, %struct.regexp* %call237, i32 0, i32 7
  %181 = load i32, i32* %extflags238, align 8
  %and239 = and i32 %181, 33554432
  %tobool240 = icmp ne i32 %and239, 0
  br i1 %tobool240, label %if.then241, label %if.end247

if.then241:                                       ; preds = %if.end236
  %182 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call242 = call %struct.regexp* @S_ReANY(%struct.p5rx* %182)
  %subbeg243 = getelementptr inbounds %struct.regexp, %struct.regexp* %call242, i32 0, i32 18
  %183 = load i8*, i8** %subbeg243, align 8
  call void @Perl_safesysfree(i8* %183)
  %184 = load %struct.p5rx*, %struct.p5rx** %rx.addr, align 8
  %call244 = call %struct.regexp* @S_ReANY(%struct.p5rx* %184)
  %extflags245 = getelementptr inbounds %struct.regexp, %struct.regexp* %call244, i32 0, i32 7
  %185 = load i32, i32* %extflags245, align 8
  %and246 = and i32 %185, -33554433
  store i32 %and246, i32* %extflags245, align 8
  br label %if.end247

if.end247:                                        ; preds = %if.then241, %if.end236
  br label %do.end248

do.end248:                                        ; preds = %if.end247
  %186 = load i8*, i8** %strbeg.addr, align 8
  %187 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subbeg249 = getelementptr inbounds %struct.regexp, %struct.regexp* %187, i32 0, i32 18
  store i8* %186, i8** %subbeg249, align 8
  %188 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %suboffset250 = getelementptr inbounds %struct.regexp, %struct.regexp* %188, i32 0, i32 21
  store i64 0, i64* %suboffset250, align 8
  %189 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %subcoffset251 = getelementptr inbounds %struct.regexp, %struct.regexp* %189, i32 0, i32 22
  store i64 0, i64* %subcoffset251, align 8
  %190 = load i8*, i8** %strend.addr, align 8
  %191 = load i8*, i8** %strbeg.addr, align 8
  %sub.ptr.lhs.cast252 = ptrtoint i8* %190 to i64
  %sub.ptr.rhs.cast253 = ptrtoint i8* %191 to i64
  %sub.ptr.sub254 = sub i64 %sub.ptr.lhs.cast252, %sub.ptr.rhs.cast253
  %192 = load %struct.regexp*, %struct.regexp** %prog, align 8
  %sublen255 = getelementptr inbounds %struct.regexp, %struct.regexp* %192, i32 0, i32 20
  store i64 %sub.ptr.sub254, i64* %sublen255, align 8
  br label %if.end256

if.end256:                                        ; preds = %do.end248, %if.end220
  ret void
}

declare dso_local %struct.sv* @Perl_newSV(i64) #2

declare dso_local void @Perl_sv_setsv_flags(%struct.sv*, %struct.sv*, i32) #2

declare dso_local void @Perl_save_pushptr(i8*, i32) #2

declare dso_local i8* @Perl_safesysmalloc(i64) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.regmatch_state* @S_push_slab() #0 {
entry:
  %s = alloca %struct.regmatch_slab*, align 8
  %0 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %next = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %0, i32 0, i32 2
  %1 = load %struct.regmatch_slab*, %struct.regmatch_slab** %next, align 8
  store %struct.regmatch_slab* %1, %struct.regmatch_slab** %s, align 8
  %2 = load %struct.regmatch_slab*, %struct.regmatch_slab** %s, align 8
  %tobool = icmp ne %struct.regmatch_slab* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = call i8* @Perl_safesysmalloc(i64 3976)
  %3 = bitcast i8* %call to %struct.regmatch_slab*
  store %struct.regmatch_slab* %3, %struct.regmatch_slab** %s, align 8
  %4 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %5 = load %struct.regmatch_slab*, %struct.regmatch_slab** %s, align 8
  %prev = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %5, i32 0, i32 1
  store %struct.regmatch_slab* %4, %struct.regmatch_slab** %prev, align 8
  %6 = load %struct.regmatch_slab*, %struct.regmatch_slab** %s, align 8
  %next1 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %6, i32 0, i32 2
  store %struct.regmatch_slab* null, %struct.regmatch_slab** %next1, align 8
  %7 = load %struct.regmatch_slab*, %struct.regmatch_slab** %s, align 8
  %8 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %next2 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %8, i32 0, i32 2
  store %struct.regmatch_slab* %7, %struct.regmatch_slab** %next2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.regmatch_slab*, %struct.regmatch_slab** %s, align 8
  store %struct.regmatch_slab* %9, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %10 = load %struct.regmatch_slab*, %struct.regmatch_slab** %s, align 8
  %states = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %10, i32 0, i32 0
  %arrayidx = getelementptr inbounds [33 x %struct.regmatch_state], [33 x %struct.regmatch_state]* %states, i64 0, i64 0
  ret %struct.regmatch_state* %arrayidx
}

declare dso_local void @Perl_save_destructor_x(void (i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @S_cleanup_regmatch_info_aux(i8* %arg) #0 {
entry:
  %arg.addr = alloca i8*, align 8
  %aux = alloca %struct.regmatch_info_aux*, align 8
  %eval_state = alloca %struct.regmatch_info_aux_eval*, align 8
  %s = alloca %struct.regmatch_slab*, align 8
  %rex = alloca %struct.regexp*, align 8
  %osl = alloca %struct.regmatch_slab*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  %0 = load i8*, i8** %arg.addr, align 8
  %1 = bitcast i8* %0 to %struct.regmatch_info_aux*
  store %struct.regmatch_info_aux* %1, %struct.regmatch_info_aux** %aux, align 8
  %2 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %aux, align 8
  %info_aux_eval = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %2, i32 0, i32 0
  %3 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval, align 8
  store %struct.regmatch_info_aux_eval* %3, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %4 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %aux, align 8
  %poscache = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %4, i32 0, i32 3
  %5 = load i8*, i8** %poscache, align 8
  call void @Perl_safesysfree(i8* %5)
  %6 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %tobool = icmp ne %struct.regmatch_info_aux_eval* %6, null
  br i1 %tobool, label %if.then, label %if.end21

if.then:                                          ; preds = %entry
  %7 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %subbeg = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %7, i32 0, i32 3
  %8 = load i8*, i8** %subbeg, align 8
  %tobool1 = icmp ne i8* %8, null
  br i1 %tobool1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %9 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %rex3 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %9, i32 0, i32 0
  %10 = load %struct.regexp*, %struct.regexp** %rex3, align 8
  store %struct.regexp* %10, %struct.regexp** %rex, align 8
  %11 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %subbeg4 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %11, i32 0, i32 3
  %12 = load i8*, i8** %subbeg4, align 8
  %13 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %subbeg5 = getelementptr inbounds %struct.regexp, %struct.regexp* %13, i32 0, i32 18
  store i8* %12, i8** %subbeg5, align 8
  %14 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %sublen = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %14, i32 0, i32 4
  %15 = load i64, i64* %sublen, align 8
  %16 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %sublen6 = getelementptr inbounds %struct.regexp, %struct.regexp* %16, i32 0, i32 20
  store i64 %15, i64* %sublen6, align 8
  %17 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %suboffset = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %17, i32 0, i32 5
  %18 = load i64, i64* %suboffset, align 8
  %19 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %suboffset7 = getelementptr inbounds %struct.regexp, %struct.regexp* %19, i32 0, i32 21
  store i64 %18, i64* %suboffset7, align 8
  %20 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %subcoffset = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %20, i32 0, i32 6
  %21 = load i64, i64* %subcoffset, align 8
  %22 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %subcoffset8 = getelementptr inbounds %struct.regexp, %struct.regexp* %22, i32 0, i32 22
  store i64 %21, i64* %subcoffset8, align 8
  %23 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %saved_copy = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %23, i32 0, i32 2
  %24 = load %struct.sv*, %struct.sv** %saved_copy, align 8
  %25 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %saved_copy9 = getelementptr inbounds %struct.regexp, %struct.regexp* %25, i32 0, i32 19
  store %struct.sv* %24, %struct.sv** %saved_copy9, align 8
  %26 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %extflags = getelementptr inbounds %struct.regexp, %struct.regexp* %26, i32 0, i32 7
  %27 = load i32, i32* %extflags, align 8
  %or = or i32 %27, 33554432
  store i32 %or, i32* %extflags, align 8
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %28 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %pos_magic = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %28, i32 0, i32 7
  %29 = load %struct.magic*, %struct.magic** %pos_magic, align 8
  %tobool10 = icmp ne %struct.magic* %29, null
  br i1 %tobool10, label %if.then11, label %if.end20

if.then11:                                        ; preds = %if.end
  %30 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %pos = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %30, i32 0, i32 8
  %31 = load i64, i64* %pos, align 8
  %32 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %pos_magic12 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %32, i32 0, i32 7
  %33 = load %struct.magic*, %struct.magic** %pos_magic12, align 8
  %mg_len = getelementptr inbounds %struct.magic, %struct.magic* %33, i32 0, i32 5
  store i64 %31, i64* %mg_len, align 8
  %34 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %pos_magic13 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %34, i32 0, i32 7
  %35 = load %struct.magic*, %struct.magic** %pos_magic13, align 8
  %mg_flags = getelementptr inbounds %struct.magic, %struct.magic* %35, i32 0, i32 4
  %36 = load i8, i8* %mg_flags, align 1
  %conv = zext i8 %36 to i32
  %and = and i32 %conv, -65
  %37 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %pos_flags = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %37, i32 0, i32 9
  %38 = load i8, i8* %pos_flags, align 8
  %conv14 = zext i8 %38 to i32
  %and15 = and i32 %conv14, 64
  %or16 = or i32 %and, %and15
  %conv17 = trunc i32 %or16 to i8
  %39 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %pos_magic18 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %39, i32 0, i32 7
  %40 = load %struct.magic*, %struct.magic** %pos_magic18, align 8
  %mg_flags19 = getelementptr inbounds %struct.magic, %struct.magic* %40, i32 0, i32 4
  store i8 %conv17, i8* %mg_flags19, align 1
  br label %if.end20

if.end20:                                         ; preds = %if.then11, %if.end
  %41 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %curpm = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %41, i32 0, i32 1
  %42 = load %struct.pmop*, %struct.pmop** %curpm, align 8
  store %struct.pmop* %42, %struct.pmop** @PL_curpm, align 8
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %entry
  %43 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %aux, align 8
  %old_regmatch_state = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %43, i32 0, i32 1
  %44 = load %struct.regmatch_state*, %struct.regmatch_state** %old_regmatch_state, align 8
  store %struct.regmatch_state* %44, %struct.regmatch_state** @PL_regmatch_state, align 8
  %45 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %aux, align 8
  %old_regmatch_slab = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %45, i32 0, i32 2
  %46 = load %struct.regmatch_slab*, %struct.regmatch_slab** %old_regmatch_slab, align 8
  store %struct.regmatch_slab* %46, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %47 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %next = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %47, i32 0, i32 2
  %48 = load %struct.regmatch_slab*, %struct.regmatch_slab** %next, align 8
  store %struct.regmatch_slab* %48, %struct.regmatch_slab** %s, align 8
  %49 = load %struct.regmatch_slab*, %struct.regmatch_slab** %s, align 8
  %tobool22 = icmp ne %struct.regmatch_slab* %49, null
  br i1 %tobool22, label %if.then23, label %if.end27

if.then23:                                        ; preds = %if.end21
  %50 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %next24 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %50, i32 0, i32 2
  store %struct.regmatch_slab* null, %struct.regmatch_slab** %next24, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then23
  %51 = load %struct.regmatch_slab*, %struct.regmatch_slab** %s, align 8
  %tobool25 = icmp ne %struct.regmatch_slab* %51, null
  br i1 %tobool25, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %52 = load %struct.regmatch_slab*, %struct.regmatch_slab** %s, align 8
  store %struct.regmatch_slab* %52, %struct.regmatch_slab** %osl, align 8
  %53 = load %struct.regmatch_slab*, %struct.regmatch_slab** %s, align 8
  %next26 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %53, i32 0, i32 2
  %54 = load %struct.regmatch_slab*, %struct.regmatch_slab** %next26, align 8
  store %struct.regmatch_slab* %54, %struct.regmatch_slab** %s, align 8
  %55 = load %struct.regmatch_slab*, %struct.regmatch_slab** %osl, align 8
  %56 = bitcast %struct.regmatch_slab* %55 to i8*
  call void @Perl_safesysfree(i8* %56)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end27

if.end27:                                         ; preds = %while.end, %if.end21
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @S_setup_eval_state(%struct.regmatch_info* %reginfo) #0 {
entry:
  %reginfo.addr = alloca %struct.regmatch_info*, align 8
  %mg = alloca %struct.magic*, align 8
  %rex = alloca %struct.regexp*, align 8
  %eval_state = alloca %struct.regmatch_info_aux_eval*, align 8
  store %struct.regmatch_info* %reginfo, %struct.regmatch_info** %reginfo.addr, align 8
  %0 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %prog = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %0, i32 0, i32 0
  %1 = load %struct.p5rx*, %struct.p5rx** %prog, align 8
  %call = call %struct.regexp* @S_ReANY(%struct.p5rx* %1)
  store %struct.regexp* %call, %struct.regexp** %rex, align 8
  %2 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2, i32 0, i32 8
  %3 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval, align 8
  store %struct.regmatch_info_aux_eval* %3, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %4 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %5 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %rex1 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %5, i32 0, i32 0
  store %struct.regexp* %4, %struct.regexp** %rex1, align 8
  %6 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %sv = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %6, i32 0, i32 4
  %7 = load %struct.sv*, %struct.sv** %sv, align 8
  %tobool = icmp ne %struct.sv* %7, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %8 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %sv2 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %8, i32 0, i32 4
  %9 = load %struct.sv*, %struct.sv** %sv2, align 8
  %10 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %10, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u to %struct.gp**
  %11 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %11, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 0
  %12 = load %struct.sv*, %struct.sv** %gp_sv, align 8
  %tobool3 = icmp ne %struct.sv* %12, null
  br i1 %tobool3, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %13 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u4 = getelementptr inbounds %struct.gv, %struct.gv* %13, i32 0, i32 3
  %svu_gp5 = bitcast %union.anon.4* %sv_u4 to %struct.gp**
  %14 = load %struct.gp*, %struct.gp** %svu_gp5, align 8
  %add.ptr6 = getelementptr inbounds %struct.gp, %struct.gp* %14, i64 0
  %gp_sv7 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr6, i32 0, i32 0
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %15 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %call8 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %15, i32 0)
  %sv_u9 = getelementptr inbounds %struct.gv, %struct.gv* %call8, i32 0, i32 3
  %svu_gp10 = bitcast %union.anon.4* %sv_u9 to %struct.gp**
  %16 = load %struct.gp*, %struct.gp** %svu_gp10, align 8
  %add.ptr11 = getelementptr inbounds %struct.gp, %struct.gp* %16, i64 0
  %gp_sv12 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr11, i32 0, i32 0
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.sv** [ %gp_sv7, %cond.true ], [ %gp_sv12, %cond.false ]
  %17 = load %struct.sv*, %struct.sv** %cond, align 8
  %add.ptr13 = getelementptr inbounds %struct.sv, %struct.sv* %17, i64 0
  %cmp = icmp ne %struct.sv* %9, %add.ptr13
  br i1 %cmp, label %if.then14, label %if.end

if.then14:                                        ; preds = %cond.end
  %18 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  call void @Perl_save_gp(%struct.gv* %18, i32 0)
  %19 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_any = getelementptr inbounds %struct.gv, %struct.gv* %19, i32 0, i32 0
  %20 = load %struct.xpvgv*, %struct.xpvgv** %sv_any, align 8
  %xpv_cur = getelementptr inbounds %struct.xpvgv, %struct.xpvgv* %20, i32 0, i32 2
  %21 = load i64, i64* %xpv_cur, align 8
  %and = and i64 %21, -2
  store i64 %and, i64* %xpv_cur, align 8
  %22 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u15 = getelementptr inbounds %struct.gv, %struct.gv* %22, i32 0, i32 3
  %svu_gp16 = bitcast %union.anon.4* %sv_u15 to %struct.gp**
  %23 = load %struct.gp*, %struct.gp** %svu_gp16, align 8
  %add.ptr17 = getelementptr inbounds %struct.gp, %struct.gp* %23, i64 0
  %gp_sv18 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr17, i32 0, i32 0
  call void @Perl_save_generic_svref(%struct.sv** %gp_sv18)
  %24 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u19 = getelementptr inbounds %struct.gv, %struct.gv* %24, i32 0, i32 3
  %svu_gp20 = bitcast %union.anon.4* %sv_u19 to %struct.gp**
  %25 = load %struct.gp*, %struct.gp** %svu_gp20, align 8
  %add.ptr21 = getelementptr inbounds %struct.gp, %struct.gp* %25, i64 0
  %gp_sv22 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr21, i32 0, i32 0
  store %struct.sv* null, %struct.sv** %gp_sv22, align 8
  %26 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u23 = getelementptr inbounds %struct.gv, %struct.gv* %26, i32 0, i32 3
  %svu_gp24 = bitcast %union.anon.4* %sv_u23 to %struct.gp**
  %27 = load %struct.gp*, %struct.gp** %svu_gp24, align 8
  %add.ptr25 = getelementptr inbounds %struct.gp, %struct.gp* %27, i64 0
  %gp_sv26 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr25, i32 0, i32 0
  %28 = load %struct.sv*, %struct.sv** %gp_sv26, align 8
  %29 = bitcast %struct.sv* %28 to i8*
  %30 = bitcast i8* %29 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %30)
  %31 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %sv27 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %31, i32 0, i32 4
  %32 = load %struct.sv*, %struct.sv** %sv27, align 8
  %33 = bitcast %struct.sv* %32 to i8*
  %34 = bitcast i8* %33 to %struct.sv*
  %call28 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %34)
  %35 = load %struct.gv*, %struct.gv** @PL_defgv, align 8
  %sv_u29 = getelementptr inbounds %struct.gv, %struct.gv* %35, i32 0, i32 3
  %svu_gp30 = bitcast %union.anon.4* %sv_u29 to %struct.gp**
  %36 = load %struct.gp*, %struct.gp** %svu_gp30, align 8
  %add.ptr31 = getelementptr inbounds %struct.gp, %struct.gp* %36, i64 0
  %gp_sv32 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr31, i32 0, i32 0
  store %struct.sv* %call28, %struct.sv** %gp_sv32, align 8
  br label %if.end

if.end:                                           ; preds = %if.then14, %cond.end
  %37 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %sv33 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %37, i32 0, i32 4
  %38 = load %struct.sv*, %struct.sv** %sv33, align 8
  %call34 = call %struct.magic* @Perl_mg_find_mglob(%struct.sv* %38)
  store %struct.magic* %call34, %struct.magic** %mg, align 8
  %tobool35 = icmp ne %struct.magic* %call34, null
  br i1 %tobool35, label %if.end39, label %if.then36

if.then36:                                        ; preds = %if.end
  %39 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %sv37 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %39, i32 0, i32 4
  %40 = load %struct.sv*, %struct.sv** %sv37, align 8
  %call38 = call %struct.magic* @Perl_sv_magicext_mglob(%struct.sv* %40)
  store %struct.magic* %call38, %struct.magic** %mg, align 8
  %41 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_len = getelementptr inbounds %struct.magic, %struct.magic* %41, i32 0, i32 5
  store i64 -1, i64* %mg_len, align 8
  br label %if.end39

if.end39:                                         ; preds = %if.then36, %if.end
  %42 = load %struct.magic*, %struct.magic** %mg, align 8
  %43 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %pos_magic = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %43, i32 0, i32 7
  store %struct.magic* %42, %struct.magic** %pos_magic, align 8
  %44 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_len40 = getelementptr inbounds %struct.magic, %struct.magic* %44, i32 0, i32 5
  %45 = load i64, i64* %mg_len40, align 8
  %46 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %pos = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %46, i32 0, i32 8
  store i64 %45, i64* %pos, align 8
  %47 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_flags = getelementptr inbounds %struct.magic, %struct.magic* %47, i32 0, i32 4
  %48 = load i8, i8* %mg_flags, align 1
  %49 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %pos_flags = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %49, i32 0, i32 9
  store i8 %48, i8* %pos_flags, align 8
  br label %if.end42

if.else:                                          ; preds = %entry
  %50 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %pos_magic41 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %50, i32 0, i32 7
  store %struct.magic* null, %struct.magic** %pos_magic41, align 8
  br label %if.end42

if.end42:                                         ; preds = %if.else, %if.end39
  %51 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %tobool43 = icmp ne %struct.pmop* %51, null
  br i1 %tobool43, label %if.end46, label %if.then44

if.then44:                                        ; preds = %if.end42
  %call45 = call i8* @Perl_safesyscalloc(i64 1, i64 96)
  %52 = bitcast i8* %call45 to %struct.pmop*
  store %struct.pmop* %52, %struct.pmop** @PL_reg_curpm, align 8
  br label %if.end46

if.end46:                                         ; preds = %if.then44, %if.end42
  %53 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval47 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %53, i32 0, i32 8
  %54 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval47, align 8
  %tobool48 = icmp ne %struct.regmatch_info_aux_eval* %54, null
  br i1 %tobool48, label %if.then49, label %if.end54

if.then49:                                        ; preds = %if.end46
  %55 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %prog50 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %55, i32 0, i32 0
  %56 = load %struct.p5rx*, %struct.p5rx** %prog50, align 8
  %57 = bitcast %struct.p5rx* %56 to i8*
  %58 = bitcast i8* %57 to %struct.sv*
  %call51 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %58)
  %59 = bitcast %struct.sv* %call51 to %struct.p5rx*
  %60 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %op_pmregexp = getelementptr inbounds %struct.pmop, %struct.pmop* %60, i32 0, i32 9
  %61 = load %struct.p5rx*, %struct.p5rx** %op_pmregexp, align 8
  %62 = bitcast %struct.p5rx* %61 to i8*
  %63 = bitcast i8* %62 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %63)
  %64 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %prog52 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %64, i32 0, i32 0
  %65 = load %struct.p5rx*, %struct.p5rx** %prog52, align 8
  %66 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %op_pmregexp53 = getelementptr inbounds %struct.pmop, %struct.pmop* %66, i32 0, i32 9
  store %struct.p5rx* %65, %struct.p5rx** %op_pmregexp53, align 8
  br label %if.end54

if.end54:                                         ; preds = %if.then49, %if.end46
  %67 = load %struct.pmop*, %struct.pmop** @PL_curpm, align 8
  %68 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %curpm = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %68, i32 0, i32 1
  store %struct.pmop* %67, %struct.pmop** %curpm, align 8
  %69 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  store %struct.pmop* %69, %struct.pmop** @PL_curpm, align 8
  %70 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %extflags = getelementptr inbounds %struct.regexp, %struct.regexp* %70, i32 0, i32 7
  %71 = load i32, i32* %extflags, align 8
  %and55 = and i32 %71, 33554432
  %tobool56 = icmp ne i32 %and55, 0
  br i1 %tobool56, label %if.then57, label %if.else65

if.then57:                                        ; preds = %if.end54
  %72 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %subbeg = getelementptr inbounds %struct.regexp, %struct.regexp* %72, i32 0, i32 18
  %73 = load i8*, i8** %subbeg, align 8
  %74 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %subbeg58 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %74, i32 0, i32 3
  store i8* %73, i8** %subbeg58, align 8
  %75 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %sublen = getelementptr inbounds %struct.regexp, %struct.regexp* %75, i32 0, i32 20
  %76 = load i64, i64* %sublen, align 8
  %77 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %sublen59 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %77, i32 0, i32 4
  store i64 %76, i64* %sublen59, align 8
  %78 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %suboffset = getelementptr inbounds %struct.regexp, %struct.regexp* %78, i32 0, i32 21
  %79 = load i64, i64* %suboffset, align 8
  %80 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %suboffset60 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %80, i32 0, i32 5
  store i64 %79, i64* %suboffset60, align 8
  %81 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %subcoffset = getelementptr inbounds %struct.regexp, %struct.regexp* %81, i32 0, i32 22
  %82 = load i64, i64* %subcoffset, align 8
  %83 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %subcoffset61 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %83, i32 0, i32 6
  store i64 %82, i64* %subcoffset61, align 8
  %84 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %saved_copy = getelementptr inbounds %struct.regexp, %struct.regexp* %84, i32 0, i32 19
  %85 = load %struct.sv*, %struct.sv** %saved_copy, align 8
  %86 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %saved_copy62 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %86, i32 0, i32 2
  store %struct.sv* %85, %struct.sv** %saved_copy62, align 8
  %87 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %extflags63 = getelementptr inbounds %struct.regexp, %struct.regexp* %87, i32 0, i32 7
  %88 = load i32, i32* %extflags63, align 8
  %and64 = and i32 %88, -33554433
  store i32 %and64, i32* %extflags63, align 8
  br label %if.end67

if.else65:                                        ; preds = %if.end54
  %89 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %eval_state, align 8
  %subbeg66 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %89, i32 0, i32 3
  store i8* null, i8** %subbeg66, align 8
  br label %if.end67

if.end67:                                         ; preds = %if.else65, %if.then57
  %90 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %90, i32 0, i32 1
  %91 = load i8*, i8** %strbeg, align 8
  %92 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %subbeg68 = getelementptr inbounds %struct.regexp, %struct.regexp* %92, i32 0, i32 18
  store i8* %91, i8** %subbeg68, align 8
  %93 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %suboffset69 = getelementptr inbounds %struct.regexp, %struct.regexp* %93, i32 0, i32 21
  store i64 0, i64* %suboffset69, align 8
  %94 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %subcoffset70 = getelementptr inbounds %struct.regexp, %struct.regexp* %94, i32 0, i32 22
  store i64 0, i64* %subcoffset70, align 8
  %95 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %95, i32 0, i32 2
  %96 = load i8*, i8** %strend, align 8
  %97 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg71 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %97, i32 0, i32 1
  %98 = load i8*, i8** %strbeg71, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %96 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %98 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %99 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %sublen72 = getelementptr inbounds %struct.regexp, %struct.regexp* %99, i32 0, i32 20
  store i64 %sub.ptr.sub, i64* %sublen72, align 8
  ret void
}

declare dso_local i8* @Perl_safesyscalloc(i64, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_regtry(%struct.regmatch_info* %reginfo, i8** %startposp) #0 {
entry:
  %retval = alloca i32, align 4
  %reginfo.addr = alloca %struct.regmatch_info*, align 8
  %startposp.addr = alloca i8**, align 8
  %lastcp = alloca i32, align 4
  %rx = alloca %struct.p5rx*, align 8
  %prog1 = alloca %struct.regexp*, align 8
  %result = alloca i64, align 8
  %progi = alloca %struct.regexp_internal*, align 8
  %pp = alloca %struct.regexp_paren_pair*, align 8
  %i = alloca i32, align 4
  store %struct.regmatch_info* %reginfo, %struct.regmatch_info** %reginfo.addr, align 8
  store i8** %startposp, i8*** %startposp.addr, align 8
  %0 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %prog = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %0, i32 0, i32 0
  %1 = load %struct.p5rx*, %struct.p5rx** %prog, align 8
  store %struct.p5rx* %1, %struct.p5rx** %rx, align 8
  %2 = load %struct.p5rx*, %struct.p5rx** %rx, align 8
  %call = call %struct.regexp* @S_ReANY(%struct.p5rx* %2)
  store %struct.regexp* %call, %struct.regexp** %prog1, align 8
  %3 = load %struct.regexp*, %struct.regexp** %prog1, align 8
  %pprivate = getelementptr inbounds %struct.regexp, %struct.regexp* %3, i32 0, i32 14
  %4 = load i8*, i8** %pprivate, align 8
  %5 = bitcast i8* %4 to %struct.regexp_internal*
  store %struct.regexp_internal* %5, %struct.regexp_internal** %progi, align 8
  %6 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %cutpoint = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %6, i32 0, i32 6
  store i8* null, i8** %cutpoint, align 8
  %7 = load i8**, i8*** %startposp.addr, align 8
  %8 = load i8*, i8** %7, align 8
  %9 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %9, i32 0, i32 1
  %10 = load i8*, i8** %strbeg, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %10 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %11 = load %struct.regexp*, %struct.regexp** %prog1, align 8
  %offs = getelementptr inbounds %struct.regexp, %struct.regexp* %11, i32 0, i32 17
  %12 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs, align 8
  %arrayidx = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %12, i64 0
  %start = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx, i32 0, i32 0
  store i64 %sub.ptr.sub, i64* %start, align 8
  %13 = load %struct.regexp*, %struct.regexp** %prog1, align 8
  %lastparen = getelementptr inbounds %struct.regexp, %struct.regexp* %13, i32 0, i32 15
  store i32 0, i32* %lastparen, align 8
  %14 = load %struct.regexp*, %struct.regexp** %prog1, align 8
  %lastcloseparen = getelementptr inbounds %struct.regexp, %struct.regexp* %14, i32 0, i32 16
  store i32 0, i32* %lastcloseparen, align 4
  %15 = load %struct.regexp*, %struct.regexp** %prog1, align 8
  %nparens = getelementptr inbounds %struct.regexp, %struct.regexp* %15, i32 0, i32 12
  %16 = load i32, i32* %nparens, align 8
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %17 = load %struct.regexp*, %struct.regexp** %prog1, align 8
  %offs2 = getelementptr inbounds %struct.regexp, %struct.regexp* %17, i32 0, i32 17
  %18 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs2, align 8
  store %struct.regexp_paren_pair* %18, %struct.regexp_paren_pair** %pp, align 8
  %19 = load %struct.regexp*, %struct.regexp** %prog1, align 8
  %nparens3 = getelementptr inbounds %struct.regexp, %struct.regexp* %19, i32 0, i32 12
  %20 = load i32, i32* %nparens3, align 8
  store i32 %20, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %21 = load i32, i32* %i, align 4
  %22 = load %struct.regexp*, %struct.regexp** %prog1, align 8
  %lastparen4 = getelementptr inbounds %struct.regexp, %struct.regexp* %22, i32 0, i32 15
  %23 = load i32, i32* %lastparen4, align 8
  %cmp = icmp sgt i32 %21, %23
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %24 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %pp, align 8
  %incdec.ptr = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %24, i32 1
  store %struct.regexp_paren_pair* %incdec.ptr, %struct.regexp_paren_pair** %pp, align 8
  %25 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %pp, align 8
  %start5 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %25, i32 0, i32 0
  store i64 -1, i64* %start5, align 8
  %26 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %pp, align 8
  %end = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %26, i32 0, i32 1
  store i64 -1, i64* %end, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %i, align 4
  %dec = add nsw i32 %27, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %entry
  %28 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %28, i32* %lastcp, align 4
  %29 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %30 = load i8**, i8*** %startposp.addr, align 8
  %31 = load i8*, i8** %30, align 8
  %32 = load %struct.regexp_internal*, %struct.regexp_internal** %progi, align 8
  %program = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %32, i32 0, i32 6
  %arraydecay = getelementptr inbounds [1 x %struct.regnode], [1 x %struct.regnode]* %program, i64 0, i64 0
  %add.ptr = getelementptr inbounds %struct.regnode, %struct.regnode* %arraydecay, i64 1
  %call6 = call i64 @S_regmatch(%struct.regmatch_info* %29, i8* %31, %struct.regnode* %add.ptr)
  store i64 %call6, i64* %result, align 8
  %33 = load i64, i64* %result, align 8
  %cmp7 = icmp ne i64 %33, -1
  br i1 %cmp7, label %if.then8, label %if.end12

if.then8:                                         ; preds = %if.end
  %34 = load i64, i64* %result, align 8
  %35 = load %struct.regexp*, %struct.regexp** %prog1, align 8
  %offs9 = getelementptr inbounds %struct.regexp, %struct.regexp* %35, i32 0, i32 17
  %36 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs9, align 8
  %arrayidx10 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %36, i64 0
  %end11 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx10, i32 0, i32 1
  store i64 %34, i64* %end11, align 8
  store i32 1, i32* %retval, align 4
  br label %return

if.end12:                                         ; preds = %if.end
  %37 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %cutpoint13 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %37, i32 0, i32 6
  %38 = load i8*, i8** %cutpoint13, align 8
  %tobool14 = icmp ne i8* %38, null
  br i1 %tobool14, label %if.then15, label %if.end17

if.then15:                                        ; preds = %if.end12
  %39 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %cutpoint16 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %39, i32 0, i32 6
  %40 = load i8*, i8** %cutpoint16, align 8
  %41 = load i8**, i8*** %startposp.addr, align 8
  store i8* %40, i8** %41, align 8
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end12
  br label %do.body

do.body:                                          ; preds = %if.end17
  %42 = load i32, i32* @PL_savestack_ix, align 4
  %43 = load i32, i32* %lastcp, align 4
  %cmp18 = icmp sgt i32 %42, %43
  br i1 %cmp18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %do.body
  %44 = load i32, i32* %lastcp, align 4
  call void @Perl_leave_scope(i32 %44)
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end20
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %do.end, %if.then8
  %45 = load i32, i32* %retval, align 4
  ret i32 %45
}

declare dso_local i64 @Perl_sv_len_utf8(%struct.sv*) #2

declare dso_local i8* @Perl_sv_2pv_flags(%struct.sv*, i64*, i32) #2

declare dso_local i8* @Perl_rninstr(i8*, i8*, i8*, i8*) #2

declare dso_local void @Perl_safesysfree(i8*) #2

declare dso_local void @Perl_leave_scope(i32) #2

declare dso_local i32 @Perl_hv_iterinit(%struct.hv*) #2

declare dso_local void @Perl_sv_free2(%struct.sv*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_reginclass(%struct.regexp* %prog, %struct.regnode* %n, i8* %p, i8* %p_end, i1 zeroext %utf8_target) #0 {
entry:
  %prog.addr = alloca %struct.regexp*, align 8
  %n.addr = alloca %struct.regnode*, align 8
  %p.addr = alloca i8*, align 8
  %p_end.addr = alloca i8*, align 8
  %utf8_target.addr = alloca i8, align 1
  %flags = alloca i8, align 1
  %match = alloca i8, align 1
  %c = alloca i64, align 8
  %c_len = alloca i64, align 8
  %count = alloca i32, align 4
  %to_complement = alloca i32, align 4
  %only_utf8_locale = alloca %struct.sv*, align 8
  %sw = alloca %struct.sv*, align 8
  %utf8_buffer = alloca [2 x i8], align 1
  %utf8_p = alloca i8*, align 8
  store %struct.regexp* %prog, %struct.regexp** %prog.addr, align 8
  store %struct.regnode* %n, %struct.regnode** %n.addr, align 8
  store i8* %p, i8** %p.addr, align 8
  store i8* %p_end, i8** %p_end.addr, align 8
  %frombool = zext i1 %utf8_target to i8
  store i8 %frombool, i8* %utf8_target.addr, align 1
  %0 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %flags1 = getelementptr inbounds %struct.regnode, %struct.regnode* %0, i32 0, i32 0
  %1 = load i8, i8* %flags1, align 2
  store i8 %1, i8* %flags, align 1
  store i8 0, i8* %match, align 1
  %2 = load i8*, i8** %p.addr, align 8
  %3 = load i8, i8* %2, align 1
  %conv = zext i8 %3 to i64
  store i64 %conv, i64* %c, align 8
  %4 = load i64, i64* %c, align 8
  %cmp = icmp ult i64 %4, 128
  br i1 %cmp, label %if.end26, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %5 = load i8, i8* %utf8_target.addr, align 1
  %tobool = trunc i8 %5 to i1
  br i1 %tobool, label %if.then, label %if.end26

if.then:                                          ; preds = %land.lhs.true
  store i64 0, i64* %c_len, align 8
  %6 = load i8*, i8** %p.addr, align 8
  %7 = load i8*, i8** %p_end.addr, align 8
  %8 = load i8*, i8** %p.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %7 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %8 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call = call zeroext i1 @Perl_ckwarn(i32 44)
  %9 = zext i1 %call to i64
  %cond = select i1 %call, i32 0, i32 1
  %and = and i32 %cond, 1
  %or = or i32 %and, 8192
  %call5 = call i64 @Perl_utf8n_to_uvchr(i8* %6, i64 %sub.ptr.sub, i64* %c_len, i32 %or)
  store i64 %call5, i64* %c, align 8
  %10 = load i64, i64* %c_len, align 8
  %cmp6 = icmp eq i64 %10, -1
  br i1 %cmp6, label %if.then8, label %if.end

if.then8:                                         ; preds = %if.then
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then8, %if.then
  %11 = load i64, i64* %c, align 8
  %cmp9 = icmp ugt i64 %11, 255
  br i1 %cmp9, label %land.lhs.true11, label %if.end25

land.lhs.true11:                                  ; preds = %if.end
  %12 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %type = getelementptr inbounds %struct.regnode, %struct.regnode* %12, i32 0, i32 1
  %13 = load i8, i8* %type, align 1
  %conv12 = zext i8 %13 to i32
  %cmp13 = icmp eq i32 %conv12, 20
  br i1 %cmp13, label %land.lhs.true15, label %if.end25

land.lhs.true15:                                  ; preds = %land.lhs.true11
  %14 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %type16 = getelementptr inbounds %struct.regnode, %struct.regnode* %14, i32 0, i32 1
  %15 = load i8, i8* %type16, align 1
  %conv17 = zext i8 %15 to i32
  %cmp18 = icmp eq i32 %conv17, 19
  br i1 %cmp18, label %land.lhs.true20, label %if.then24

land.lhs.true20:                                  ; preds = %land.lhs.true15
  %16 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %next_off = getelementptr inbounds %struct.regnode, %struct.regnode* %16, i32 0, i32 2
  %17 = load i16, i16* %next_off, align 2
  %conv21 = zext i16 %17 to i32
  %cmp22 = icmp eq i32 %conv21, 1
  br i1 %cmp22, label %if.end25, label %if.then24

if.then24:                                        ; preds = %land.lhs.true20, %land.lhs.true15
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %land.lhs.true20, %land.lhs.true11, %if.end
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %land.lhs.true, %entry
  %18 = load i64, i64* %c, align 8
  %cmp27 = icmp ult i64 %18, 256
  br i1 %cmp27, label %if.then29, label %if.end108

if.then29:                                        ; preds = %if.end26
  %19 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %20 = bitcast %struct.regnode* %19 to %struct.regnode_charclass*
  %bitmap = getelementptr inbounds %struct.regnode_charclass, %struct.regnode_charclass* %20, i32 0, i32 4
  %21 = load i64, i64* %c, align 8
  %conv30 = trunc i64 %21 to i8
  %conv31 = zext i8 %conv30 to i32
  %shr = ashr i32 %conv31, 3
  %and32 = and i32 %shr, 31
  %idxprom = sext i32 %and32 to i64
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %bitmap, i64 0, i64 %idxprom
  %22 = load i8, i8* %arrayidx, align 1
  %conv33 = sext i8 %22 to i32
  %23 = load i64, i64* %c, align 8
  %and34 = and i64 %23, 7
  %sh_prom = trunc i64 %and34 to i32
  %shl = shl i32 1, %sh_prom
  %and35 = and i32 %conv33, %shl
  %tobool36 = icmp ne i32 %and35, 0
  br i1 %tobool36, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then29
  br i1 true, label %if.then37, label %if.else

cond.false:                                       ; preds = %if.then29
  br i1 false, label %if.then37, label %if.else

if.then37:                                        ; preds = %cond.false, %cond.true
  store i8 1, i8* %match, align 1
  br label %if.end107

if.else:                                          ; preds = %cond.false, %cond.true
  %24 = load i8, i8* %flags, align 1
  %conv38 = sext i8 %24 to i32
  %and39 = and i32 %conv38, 128
  %tobool40 = icmp ne i32 %and39, 0
  br i1 %tobool40, label %land.lhs.true41, label %if.else47

land.lhs.true41:                                  ; preds = %if.else
  %25 = load i8, i8* %utf8_target.addr, align 1
  %tobool42 = trunc i8 %25 to i1
  br i1 %tobool42, label %if.else47, label %land.lhs.true43

land.lhs.true43:                                  ; preds = %land.lhs.true41
  %26 = load i64, i64* %c, align 8
  %cmp44 = icmp ult i64 %26, 128
  br i1 %cmp44, label %if.else47, label %if.then46

if.then46:                                        ; preds = %land.lhs.true43
  store i8 1, i8* %match, align 1
  br label %if.end106

if.else47:                                        ; preds = %land.lhs.true43, %land.lhs.true41, %if.else
  %27 = load i8, i8* %flags, align 1
  %conv48 = sext i8 %27 to i32
  %and49 = and i32 %conv48, 12
  %tobool50 = icmp ne i32 %and49, 0
  br i1 %tobool50, label %if.then51, label %if.end105

if.then51:                                        ; preds = %if.else47
  %28 = load i8, i8* %flags, align 1
  %conv52 = sext i8 %28 to i32
  %and53 = and i32 %conv52, 4
  %tobool54 = icmp ne i32 %and53, 0
  br i1 %tobool54, label %land.lhs.true55, label %if.else76

land.lhs.true55:                                  ; preds = %if.then51
  %29 = load i64, i64* %c, align 8
  %cmp56 = icmp ult i64 %29, 256
  br i1 %cmp56, label %land.lhs.true58, label %if.else76

land.lhs.true58:                                  ; preds = %land.lhs.true55
  %30 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %31 = bitcast %struct.regnode* %30 to %struct.regnode_charclass*
  %bitmap59 = getelementptr inbounds %struct.regnode_charclass, %struct.regnode_charclass* %31, i32 0, i32 4
  %32 = load i64, i64* %c, align 8
  %arrayidx60 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_fold_locale, i64 0, i64 %32
  %33 = load i8, i8* %arrayidx60, align 1
  %conv61 = zext i8 %33 to i32
  %shr62 = ashr i32 %conv61, 3
  %and63 = and i32 %shr62, 31
  %idxprom64 = sext i32 %and63 to i64
  %arrayidx65 = getelementptr inbounds [32 x i8], [32 x i8]* %bitmap59, i64 0, i64 %idxprom64
  %34 = load i8, i8* %arrayidx65, align 1
  %conv66 = sext i8 %34 to i32
  %35 = load i64, i64* %c, align 8
  %arrayidx67 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_fold_locale, i64 0, i64 %35
  %36 = load i8, i8* %arrayidx67, align 1
  %conv68 = zext i8 %36 to i32
  %and69 = and i32 %conv68, 7
  %shl70 = shl i32 1, %and69
  %and71 = and i32 %conv66, %shl70
  %tobool72 = icmp ne i32 %and71, 0
  br i1 %tobool72, label %cond.true73, label %cond.false74

cond.true73:                                      ; preds = %land.lhs.true58
  br i1 true, label %if.then75, label %if.else76

cond.false74:                                     ; preds = %land.lhs.true58
  br i1 false, label %if.then75, label %if.else76

if.then75:                                        ; preds = %cond.false74, %cond.true73
  store i8 1, i8* %match, align 1
  br label %if.end104

if.else76:                                        ; preds = %cond.false74, %cond.true73, %land.lhs.true55, %if.then51
  %37 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %flags77 = getelementptr inbounds %struct.regnode, %struct.regnode* %37, i32 0, i32 0
  %38 = load i8, i8* %flags77, align 2
  %conv78 = zext i8 %38 to i32
  %and79 = and i32 %conv78, 8
  %tobool80 = icmp ne i32 %and79, 0
  br i1 %tobool80, label %land.lhs.true81, label %if.end103

land.lhs.true81:                                  ; preds = %if.else76
  %39 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %40 = bitcast %struct.regnode* %39 to %struct.regnode_charclass_class*
  %classflags = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %40, i32 0, i32 5
  %41 = load i32, i32* %classflags, align 4
  %tobool82 = icmp ne i32 %41, 0
  br i1 %tobool82, label %land.lhs.true83, label %if.end103

land.lhs.true83:                                  ; preds = %land.lhs.true81
  %42 = load i64, i64* %c, align 8
  %cmp84 = icmp ult i64 %42, 256
  br i1 %cmp84, label %if.then86, label %if.end103

if.then86:                                        ; preds = %land.lhs.true83
  store i32 0, i32* %count, align 4
  store i32 0, i32* %to_complement, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end101, %if.then86
  %43 = load i32, i32* %count, align 4
  %cmp87 = icmp slt i32 %43, 30
  br i1 %cmp87, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %44 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %45 = bitcast %struct.regnode* %44 to %struct.regnode_charclass_class*
  %classflags89 = getelementptr inbounds %struct.regnode_charclass_class, %struct.regnode_charclass_class* %45, i32 0, i32 5
  %46 = load i32, i32* %classflags89, align 4
  %47 = load i32, i32* %count, align 4
  %shl90 = shl i32 1, %47
  %and91 = and i32 %46, %shl90
  %tobool92 = icmp ne i32 %and91, 0
  br i1 %tobool92, label %land.lhs.true93, label %if.end101

land.lhs.true93:                                  ; preds = %while.body
  %48 = load i32, i32* %to_complement, align 4
  %49 = load i32, i32* %count, align 4
  %div = sdiv i32 %49, 2
  %conv94 = trunc i32 %div to i8
  %50 = load i64, i64* %c, align 8
  %conv95 = trunc i64 %50 to i8
  %call96 = call zeroext i1 @S_isFOO_lc(i8 zeroext %conv94, i8 zeroext %conv95)
  %51 = zext i1 %call96 to i64
  %cond98 = select i1 %call96, i32 1, i32 0
  %xor = xor i32 %48, %cond98
  %tobool99 = icmp ne i32 %xor, 0
  br i1 %tobool99, label %if.then100, label %if.end101

if.then100:                                       ; preds = %land.lhs.true93
  store i8 1, i8* %match, align 1
  br label %while.end

if.end101:                                        ; preds = %land.lhs.true93, %while.body
  %52 = load i32, i32* %count, align 4
  %inc = add nsw i32 %52, 1
  store i32 %inc, i32* %count, align 4
  %53 = load i32, i32* %to_complement, align 4
  %xor102 = xor i32 %53, 1
  store i32 %xor102, i32* %to_complement, align 4
  br label %while.cond

while.end:                                        ; preds = %if.then100, %while.cond
  br label %if.end103

if.end103:                                        ; preds = %while.end, %land.lhs.true83, %land.lhs.true81, %if.else76
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then75
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.else47
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.then46
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.then37
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.end26
  %54 = load i8, i8* %match, align 1
  %tobool109 = trunc i8 %54 to i1
  br i1 %tobool109, label %if.end175, label %if.then110

if.then110:                                       ; preds = %if.end108
  %55 = load i64, i64* %c, align 8
  %cmp111 = icmp uge i64 %55, 256
  br i1 %cmp111, label %land.lhs.true113, label %if.else118

land.lhs.true113:                                 ; preds = %if.then110
  %56 = load i8, i8* %flags, align 1
  %conv114 = sext i8 %56 to i32
  %and115 = and i32 %conv114, 64
  %tobool116 = icmp ne i32 %and115, 0
  br i1 %tobool116, label %if.then117, label %if.else118

if.then117:                                       ; preds = %land.lhs.true113
  store i8 1, i8* %match, align 1
  br label %if.end163

if.else118:                                       ; preds = %land.lhs.true113, %if.then110
  %57 = load i8, i8* %flags, align 1
  %conv119 = sext i8 %57 to i32
  %and120 = and i32 %conv119, 32
  %tobool121 = icmp ne i32 %and120, 0
  br i1 %tobool121, label %if.then138, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else118
  %58 = load i8, i8* %utf8_target.addr, align 1
  %tobool122 = trunc i8 %58 to i1
  br i1 %tobool122, label %land.lhs.true124, label %lor.lhs.false128

land.lhs.true124:                                 ; preds = %lor.lhs.false
  %59 = load i8, i8* %flags, align 1
  %conv125 = sext i8 %59 to i32
  %and126 = and i32 %conv125, 2
  %tobool127 = icmp ne i32 %and126, 0
  br i1 %tobool127, label %if.then138, label %lor.lhs.false128

lor.lhs.false128:                                 ; preds = %land.lhs.true124, %lor.lhs.false
  %60 = load i8, i8* %flags, align 1
  %conv129 = sext i8 %60 to i32
  %and130 = and i32 %conv129, 4
  %tobool131 = icmp ne i32 %and130, 0
  br i1 %tobool131, label %land.lhs.true132, label %if.end162

land.lhs.true132:                                 ; preds = %lor.lhs.false128
  %61 = load i8, i8* @PL_in_utf8_CTYPE_locale, align 1
  %tobool133 = trunc i8 %61 to i1
  br i1 %tobool133, label %land.lhs.true135, label %if.end162

land.lhs.true135:                                 ; preds = %land.lhs.true132
  %62 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %63 = bitcast %struct.regnode* %62 to %struct.regnode_1*
  %arg1 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %63, i32 0, i32 3
  %64 = load i32, i32* %arg1, align 4
  %cmp136 = icmp ne i32 %64, -1
  br i1 %cmp136, label %if.then138, label %if.end162

if.then138:                                       ; preds = %land.lhs.true135, %land.lhs.true124, %if.else118
  store %struct.sv* null, %struct.sv** %only_utf8_locale, align 8
  %65 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %66 = load %struct.regnode*, %struct.regnode** %n.addr, align 8
  %call139 = call %struct.sv* @Perl__get_regclass_nonbitmap_data(%struct.regexp* %65, %struct.regnode* %66, i1 zeroext true, %struct.sv** null, %struct.sv** %only_utf8_locale, %struct.sv* null)
  store %struct.sv* %call139, %struct.sv** %sw, align 8
  %67 = load %struct.sv*, %struct.sv** %sw, align 8
  %tobool140 = icmp ne %struct.sv* %67, null
  br i1 %tobool140, label %if.then141, label %if.end151

if.then141:                                       ; preds = %if.then138
  %68 = load i8, i8* %utf8_target.addr, align 1
  %tobool142 = trunc i8 %68 to i1
  br i1 %tobool142, label %if.then143, label %if.else144

if.then143:                                       ; preds = %if.then141
  %69 = load i8*, i8** %p.addr, align 8
  store i8* %69, i8** %utf8_p, align 8
  br label %if.end146

if.else144:                                       ; preds = %if.then141
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %utf8_buffer, i64 0, i64 0
  store i8* %arraydecay, i8** %utf8_p, align 8
  %70 = load i8*, i8** %p.addr, align 8
  %71 = load i8, i8* %70, align 1
  call void @S_append_utf8_from_native_byte(i8 zeroext %71, i8** %utf8_p)
  %arraydecay145 = getelementptr inbounds [2 x i8], [2 x i8]* %utf8_buffer, i64 0, i64 0
  store i8* %arraydecay145, i8** %utf8_p, align 8
  br label %if.end146

if.end146:                                        ; preds = %if.else144, %if.then143
  %72 = load %struct.sv*, %struct.sv** %sw, align 8
  %73 = load i8*, i8** %utf8_p, align 8
  %call147 = call i64 @Perl_swash_fetch(%struct.sv* %72, i8* %73, i1 zeroext true)
  %tobool148 = icmp ne i64 %call147, 0
  br i1 %tobool148, label %if.then149, label %if.end150

if.then149:                                       ; preds = %if.end146
  store i8 1, i8* %match, align 1
  br label %if.end150

if.end150:                                        ; preds = %if.then149, %if.end146
  br label %if.end151

if.end151:                                        ; preds = %if.end150, %if.then138
  %74 = load i8, i8* %match, align 1
  %tobool152 = trunc i8 %74 to i1
  br i1 %tobool152, label %if.end161, label %land.lhs.true153

land.lhs.true153:                                 ; preds = %if.end151
  %75 = load %struct.sv*, %struct.sv** %only_utf8_locale, align 8
  %tobool154 = icmp ne %struct.sv* %75, null
  br i1 %tobool154, label %land.lhs.true155, label %if.end161

land.lhs.true155:                                 ; preds = %land.lhs.true153
  %76 = load i8, i8* @PL_in_utf8_CTYPE_locale, align 1
  %tobool156 = trunc i8 %76 to i1
  br i1 %tobool156, label %if.then158, label %if.end161

if.then158:                                       ; preds = %land.lhs.true155
  %77 = load %struct.sv*, %struct.sv** %only_utf8_locale, align 8
  %78 = load i64, i64* %c, align 8
  %call159 = call zeroext i1 @S__invlist_contains_cp(%struct.sv* %77, i64 %78)
  %frombool160 = zext i1 %call159 to i8
  store i8 %frombool160, i8* %match, align 1
  br label %if.end161

if.end161:                                        ; preds = %if.then158, %land.lhs.true155, %land.lhs.true153, %if.end151
  br label %if.end162

if.end162:                                        ; preds = %if.end161, %land.lhs.true135, %land.lhs.true132, %lor.lhs.false128
  br label %if.end163

if.end163:                                        ; preds = %if.end162, %if.then117
  %79 = load i64, i64* %c, align 8
  %cmp164 = icmp ugt i64 %79, 1114111
  br i1 %cmp164, label %land.lhs.true166, label %if.end174

land.lhs.true166:                                 ; preds = %if.end163
  %80 = load i8, i8* %flags, align 1
  %conv167 = sext i8 %80 to i32
  %and168 = and i32 %conv167, 16
  %tobool169 = icmp ne i32 %and168, 0
  br i1 %tobool169, label %land.lhs.true170, label %if.end174

land.lhs.true170:                                 ; preds = %land.lhs.true166
  %call171 = call zeroext i1 @Perl_ckwarn_d(i32 48)
  br i1 %call171, label %if.then173, label %if.end174

if.then173:                                       ; preds = %land.lhs.true170
  %81 = load i64, i64* %c, align 8
  call void (i32, i8*, ...) @Perl_warner(i32 48, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.8, i64 0, i64 0), i64 %81)
  br label %if.end174

if.end174:                                        ; preds = %if.then173, %land.lhs.true170, %land.lhs.true166, %if.end163
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.end108
  %82 = load i8, i8* %flags, align 1
  %conv176 = sext i8 %82 to i32
  %and177 = and i32 %conv176, 1
  %83 = load i8, i8* %match, align 1
  %tobool178 = trunc i8 %83 to i1
  %conv179 = zext i1 %tobool178 to i32
  %xor180 = xor i32 %and177, %conv179
  %tobool181 = icmp ne i32 %xor180, 0
  ret i1 %tobool181
}

declare dso_local i32 @Perl_foldEQ_latin1(i8*, i8*, i32) #2

declare dso_local i32 @Perl_foldEQ(i8*, i8*, i32) #2

declare dso_local i32 @Perl_foldEQ_locale(i8*, i8*, i32) #2

declare dso_local i64 @Perl_utf8_length(i8*, i8*) #2

declare dso_local i32 @Perl_foldEQ_utf8_flags(i8*, i8**, i64, i1 zeroext, i8*, i8**, i64, i1 zeroext, i32) #2

declare dso_local void @Perl_ck_warner(i32, i8*, ...) #2

declare dso_local i64 @Perl_utf8n_to_uvchr(i8*, i64, i64*, i32) #2

declare dso_local zeroext i1 @Perl_ckwarn(i32) #2

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #3

declare dso_local zeroext i1 @Perl__is_uni_FOO(i8 zeroext, i64) #2

declare dso_local %struct.sv* @Perl__core_swash_init(i8*, i8*, %struct.sv*, i32, i32, %struct.sv*, i8*) #2

declare dso_local zeroext i1 @Perl__is_utf8_FOO(i8 zeroext, i8*) #2

declare dso_local i64 @Perl__invlist_search(%struct.sv*, i64) #2

declare dso_local zeroext i1 @Perl_ckwarn_d(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_isGCB(i32 %before, i32 %after) #0 {
entry:
  %retval = alloca i1, align 1
  %before.addr = alloca i32, align 4
  %after.addr = alloca i32, align 4
  store i32 %before, i32* %before.addr, align 4
  store i32 %after, i32* %after.addr, align 4
  %0 = load i32, i32* %before.addr, align 4
  %mul = mul i32 14, %0
  %1 = load i32, i32* %after.addr, align 4
  %add = add i32 %mul, %1
  switch i32 %add, label %sw.default [
    i32 20, label %sw.bb
    i32 75, label %sw.bb1
    i32 83, label %sw.bb1
    i32 77, label %sw.bb1
    i32 78, label %sw.bb1
    i32 111, label %sw.bb2
    i32 110, label %sw.bb2
    i32 195, label %sw.bb2
    i32 194, label %sw.bb2
    i32 124, label %sw.bb3
    i32 180, label %sw.bb3
    i32 150, label %sw.bb4
    i32 4, label %sw.bb5
    i32 60, label %sw.bb5
    i32 74, label %sw.bb5
    i32 102, label %sw.bb5
    i32 116, label %sw.bb5
    i32 130, label %sw.bb5
    i32 144, label %sw.bb5
    i32 158, label %sw.bb5
    i32 172, label %sw.bb5
    i32 186, label %sw.bb5
    i32 11, label %sw.bb6
    i32 67, label %sw.bb6
    i32 81, label %sw.bb6
    i32 109, label %sw.bb6
    i32 123, label %sw.bb6
    i32 137, label %sw.bb6
    i32 151, label %sw.bb6
    i32 165, label %sw.bb6
    i32 179, label %sw.bb6
    i32 193, label %sw.bb6
    i32 126, label %sw.bb7
    i32 131, label %sw.bb7
    i32 133, label %sw.bb7
    i32 134, label %sw.bb7
    i32 135, label %sw.bb7
    i32 136, label %sw.bb7
    i32 138, label %sw.bb7
    i32 139, label %sw.bb7
  ]

sw.default:                                       ; preds = %entry
  store i1 true, i1* %retval, align 1
  br label %return

sw.bb:                                            ; preds = %entry
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb1:                                           ; preds = %entry, %entry, %entry, %entry
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb2:                                           ; preds = %entry, %entry, %entry, %entry
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb3:                                           ; preds = %entry, %entry
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb4:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb5:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb6:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb7:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 false, i1* %retval, align 1
  br label %return

return:                                           ; preds = %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb, %sw.default
  %2 = load i1, i1* %retval, align 1
  ret i1 %2
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_isSB(i32 %before, i32 %after, i8* %strbeg, i8* %curpos, i8* %strend, i1 zeroext %utf8_target) #0 {
entry:
  %retval = alloca i1, align 1
  %before.addr = alloca i32, align 4
  %after.addr = alloca i32, align 4
  %strbeg.addr = alloca i8*, align 8
  %curpos.addr = alloca i8*, align 8
  %strend.addr = alloca i8*, align 8
  %utf8_target.addr = alloca i8, align 1
  %lpos = alloca i8*, align 8
  %temp_pos = alloca i8*, align 8
  %backup = alloca i32, align 4
  %rpos = alloca i8*, align 8
  %later = alloca i32, align 4
  store i32 %before, i32* %before.addr, align 4
  store i32 %after, i32* %after.addr, align 4
  store i8* %strbeg, i8** %strbeg.addr, align 8
  store i8* %curpos, i8** %curpos.addr, align 8
  store i8* %strend, i8** %strend.addr, align 8
  %frombool = zext i1 %utf8_target to i8
  store i8 %frombool, i8* %utf8_target.addr, align 1
  %0 = load i8*, i8** %curpos.addr, align 8
  store i8* %0, i8** %lpos, align 8
  %1 = load i32, i32* %before.addr, align 4
  %cmp = icmp eq i32 %1, 4
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %after.addr, align 4
  %cmp1 = icmp eq i32 %2, 4
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 true, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i32, i32* %before.addr, align 4
  %cmp2 = icmp eq i32 %3, 2
  br i1 %cmp2, label %land.lhs.true, label %if.end5

land.lhs.true:                                    ; preds = %if.end
  %4 = load i32, i32* %after.addr, align 4
  %cmp3 = icmp eq i32 %4, 7
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %land.lhs.true
  store i1 false, i1* %retval, align 1
  br label %return

if.end5:                                          ; preds = %land.lhs.true, %if.end
  %5 = load i32, i32* %before.addr, align 4
  %cmp6 = icmp eq i32 %5, 13
  br i1 %cmp6, label %if.then11, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %if.end5
  %6 = load i32, i32* %before.addr, align 4
  %cmp8 = icmp eq i32 %6, 2
  br i1 %cmp8, label %if.then11, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false7
  %7 = load i32, i32* %before.addr, align 4
  %cmp10 = icmp eq i32 %7, 7
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %lor.lhs.false9, %lor.lhs.false7, %if.end5
  store i1 true, i1* %retval, align 1
  br label %return

if.end12:                                         ; preds = %lor.lhs.false9
  %8 = load i32, i32* %after.addr, align 4
  %cmp13 = icmp eq i32 %8, 5
  br i1 %cmp13, label %if.then16, label %lor.lhs.false14

lor.lhs.false14:                                  ; preds = %if.end12
  %9 = load i32, i32* %after.addr, align 4
  %cmp15 = icmp eq i32 %9, 6
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %lor.lhs.false14, %if.end12
  store i1 false, i1* %retval, align 1
  br label %return

if.end17:                                         ; preds = %lor.lhs.false14
  %10 = load i32, i32* %before.addr, align 4
  %cmp18 = icmp eq i32 %10, 5
  br i1 %cmp18, label %if.then21, label %lor.lhs.false19

lor.lhs.false19:                                  ; preds = %if.end17
  %11 = load i32, i32* %before.addr, align 4
  %cmp20 = icmp eq i32 %11, 6
  br i1 %cmp20, label %if.then21, label %if.end22

if.then21:                                        ; preds = %lor.lhs.false19, %if.end17
  %12 = load i8*, i8** %strbeg.addr, align 8
  %13 = load i8, i8* %utf8_target.addr, align 1
  %tobool = trunc i8 %13 to i1
  %call = call i32 @S_backup_one_SB(i8* %12, i8** %lpos, i1 zeroext %tobool)
  store i32 %call, i32* %before.addr, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.then21, %lor.lhs.false19
  %14 = load i32, i32* %before.addr, align 4
  %cmp23 = icmp eq i32 %14, 1
  br i1 %cmp23, label %land.lhs.true24, label %if.end27

land.lhs.true24:                                  ; preds = %if.end22
  %15 = load i32, i32* %after.addr, align 4
  %cmp25 = icmp eq i32 %15, 9
  br i1 %cmp25, label %if.then26, label %if.end27

if.then26:                                        ; preds = %land.lhs.true24
  store i1 false, i1* %retval, align 1
  br label %return

if.end27:                                         ; preds = %land.lhs.true24, %if.end22
  %16 = load i32, i32* %before.addr, align 4
  %cmp28 = icmp eq i32 %16, 1
  br i1 %cmp28, label %land.lhs.true29, label %if.end37

land.lhs.true29:                                  ; preds = %if.end27
  %17 = load i32, i32* %after.addr, align 4
  %cmp30 = icmp eq i32 %17, 15
  br i1 %cmp30, label %if.then31, label %if.end37

if.then31:                                        ; preds = %land.lhs.true29
  %18 = load i8*, i8** %lpos, align 8
  store i8* %18, i8** %temp_pos, align 8
  %19 = load i8*, i8** %strbeg.addr, align 8
  %20 = load i8, i8* %utf8_target.addr, align 1
  %tobool32 = trunc i8 %20 to i1
  %call33 = call i32 @S_backup_one_SB(i8* %19, i8** %temp_pos, i1 zeroext %tobool32)
  %cmp34 = icmp eq i32 15, %call33
  br i1 %cmp34, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.then31
  store i1 false, i1* %retval, align 1
  br label %return

if.end36:                                         ; preds = %if.then31
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %land.lhs.true29, %if.end27
  %21 = load i32, i32* %before.addr, align 4
  store i32 %21, i32* %backup, align 4
  %22 = load i8*, i8** %lpos, align 8
  store i8* %22, i8** %temp_pos, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end37
  %23 = load i32, i32* %backup, align 4
  %cmp38 = icmp eq i32 %23, 14
  br i1 %cmp38, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %24 = load i8*, i8** %strbeg.addr, align 8
  %25 = load i8, i8* %utf8_target.addr, align 1
  %tobool39 = trunc i8 %25 to i1
  %call40 = call i32 @S_backup_one_SB(i8* %24, i8** %temp_pos, i1 zeroext %tobool39)
  store i32 %call40, i32* %backup, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond41

while.cond41:                                     ; preds = %while.body43, %while.end
  %26 = load i32, i32* %backup, align 4
  %cmp42 = icmp eq i32 %26, 3
  br i1 %cmp42, label %while.body43, label %while.end46

while.body43:                                     ; preds = %while.cond41
  %27 = load i8*, i8** %strbeg.addr, align 8
  %28 = load i8, i8* %utf8_target.addr, align 1
  %tobool44 = trunc i8 %28 to i1
  %call45 = call i32 @S_backup_one_SB(i8* %27, i8** %temp_pos, i1 zeroext %tobool44)
  store i32 %call45, i32* %backup, align 4
  br label %while.cond41

while.end46:                                      ; preds = %while.cond41
  %29 = load i32, i32* %backup, align 4
  %cmp47 = icmp eq i32 %29, 12
  br i1 %cmp47, label %land.lhs.true50, label %lor.lhs.false48

lor.lhs.false48:                                  ; preds = %while.end46
  %30 = load i32, i32* %backup, align 4
  %cmp49 = icmp eq i32 %30, 1
  br i1 %cmp49, label %land.lhs.true50, label %if.end65

land.lhs.true50:                                  ; preds = %lor.lhs.false48, %while.end46
  %31 = load i32, i32* %after.addr, align 4
  %cmp51 = icmp eq i32 %31, 11
  br i1 %cmp51, label %if.then64, label %lor.lhs.false52

lor.lhs.false52:                                  ; preds = %land.lhs.true50
  %32 = load i32, i32* %after.addr, align 4
  %cmp53 = icmp eq i32 %32, 12
  br i1 %cmp53, label %if.then64, label %lor.lhs.false54

lor.lhs.false54:                                  ; preds = %lor.lhs.false52
  %33 = load i32, i32* %after.addr, align 4
  %cmp55 = icmp eq i32 %33, 1
  br i1 %cmp55, label %if.then64, label %lor.lhs.false56

lor.lhs.false56:                                  ; preds = %lor.lhs.false54
  %34 = load i32, i32* %after.addr, align 4
  %cmp57 = icmp eq i32 %34, 14
  br i1 %cmp57, label %if.then64, label %lor.lhs.false58

lor.lhs.false58:                                  ; preds = %lor.lhs.false56
  %35 = load i32, i32* %after.addr, align 4
  %cmp59 = icmp eq i32 %35, 13
  br i1 %cmp59, label %if.then64, label %lor.lhs.false60

lor.lhs.false60:                                  ; preds = %lor.lhs.false58
  %36 = load i32, i32* %after.addr, align 4
  %cmp61 = icmp eq i32 %36, 2
  br i1 %cmp61, label %if.then64, label %lor.lhs.false62

lor.lhs.false62:                                  ; preds = %lor.lhs.false60
  %37 = load i32, i32* %after.addr, align 4
  %cmp63 = icmp eq i32 %37, 7
  br i1 %cmp63, label %if.then64, label %if.end65

if.then64:                                        ; preds = %lor.lhs.false62, %lor.lhs.false60, %lor.lhs.false58, %lor.lhs.false56, %lor.lhs.false54, %lor.lhs.false52, %land.lhs.true50
  store i1 false, i1* %retval, align 1
  br label %return

if.end65:                                         ; preds = %lor.lhs.false62, %lor.lhs.false48
  %38 = load i32, i32* %backup, align 4
  %cmp66 = icmp eq i32 %38, 1
  br i1 %cmp66, label %if.then67, label %if.end92

if.then67:                                        ; preds = %if.end65
  %39 = load i8*, i8** %curpos.addr, align 8
  store i8* %39, i8** %rpos, align 8
  %40 = load i32, i32* %after.addr, align 4
  store i32 %40, i32* %later, align 4
  br label %while.cond68

while.cond68:                                     ; preds = %while.body85, %if.then67
  %41 = load i32, i32* %later, align 4
  %cmp69 = icmp ne i32 %41, 10
  br i1 %cmp69, label %land.lhs.true70, label %land.end

land.lhs.true70:                                  ; preds = %while.cond68
  %42 = load i32, i32* %later, align 4
  %cmp71 = icmp ne i32 %42, 15
  br i1 %cmp71, label %land.lhs.true72, label %land.end

land.lhs.true72:                                  ; preds = %land.lhs.true70
  %43 = load i32, i32* %later, align 4
  %cmp73 = icmp ne i32 %43, 8
  br i1 %cmp73, label %land.lhs.true74, label %land.end

land.lhs.true74:                                  ; preds = %land.lhs.true72
  %44 = load i32, i32* %later, align 4
  %cmp75 = icmp ne i32 %44, 13
  br i1 %cmp75, label %land.lhs.true76, label %land.end

land.lhs.true76:                                  ; preds = %land.lhs.true74
  %45 = load i32, i32* %later, align 4
  %cmp77 = icmp ne i32 %45, 2
  br i1 %cmp77, label %land.lhs.true78, label %land.end

land.lhs.true78:                                  ; preds = %land.lhs.true76
  %46 = load i32, i32* %later, align 4
  %cmp79 = icmp ne i32 %46, 7
  br i1 %cmp79, label %land.lhs.true80, label %land.end

land.lhs.true80:                                  ; preds = %land.lhs.true78
  %47 = load i32, i32* %later, align 4
  %cmp81 = icmp ne i32 %47, 12
  br i1 %cmp81, label %land.lhs.true82, label %land.end

land.lhs.true82:                                  ; preds = %land.lhs.true80
  %48 = load i32, i32* %later, align 4
  %cmp83 = icmp ne i32 %48, 1
  br i1 %cmp83, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true82
  %49 = load i32, i32* %later, align 4
  %cmp84 = icmp ne i32 %49, 4
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true82, %land.lhs.true80, %land.lhs.true78, %land.lhs.true76, %land.lhs.true74, %land.lhs.true72, %land.lhs.true70, %while.cond68
  %50 = phi i1 [ false, %land.lhs.true82 ], [ false, %land.lhs.true80 ], [ false, %land.lhs.true78 ], [ false, %land.lhs.true76 ], [ false, %land.lhs.true74 ], [ false, %land.lhs.true72 ], [ false, %land.lhs.true70 ], [ false, %while.cond68 ], [ %cmp84, %land.rhs ]
  br i1 %50, label %while.body85, label %while.end88

while.body85:                                     ; preds = %land.end
  %51 = load i8*, i8** %strend.addr, align 8
  %52 = load i8, i8* %utf8_target.addr, align 1
  %tobool86 = trunc i8 %52 to i1
  %call87 = call i32 @S_advance_one_SB(i8** %rpos, i8* %51, i1 zeroext %tobool86)
  store i32 %call87, i32* %later, align 4
  br label %while.cond68

while.end88:                                      ; preds = %land.end
  %53 = load i32, i32* %later, align 4
  %cmp89 = icmp eq i32 %53, 8
  br i1 %cmp89, label %if.then90, label %if.end91

if.then90:                                        ; preds = %while.end88
  store i1 false, i1* %retval, align 1
  br label %return

if.end91:                                         ; preds = %while.end88
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %if.end65
  %54 = load i32, i32* %before.addr, align 4
  store i32 %54, i32* %backup, align 4
  %55 = load i8*, i8** %lpos, align 8
  store i8* %55, i8** %temp_pos, align 8
  br label %while.cond93

while.cond93:                                     ; preds = %while.body95, %if.end92
  %56 = load i32, i32* %backup, align 4
  %cmp94 = icmp eq i32 %56, 3
  br i1 %cmp94, label %while.body95, label %while.end98

while.body95:                                     ; preds = %while.cond93
  %57 = load i8*, i8** %strbeg.addr, align 8
  %58 = load i8, i8* %utf8_target.addr, align 1
  %tobool96 = trunc i8 %58 to i1
  %call97 = call i32 @S_backup_one_SB(i8* %57, i8** %temp_pos, i1 zeroext %tobool96)
  store i32 %call97, i32* %backup, align 4
  br label %while.cond93

while.end98:                                      ; preds = %while.cond93
  %59 = load i32, i32* %backup, align 4
  %cmp99 = icmp eq i32 %59, 12
  br i1 %cmp99, label %land.lhs.true102, label %lor.lhs.false100

lor.lhs.false100:                                 ; preds = %while.end98
  %60 = load i32, i32* %backup, align 4
  %cmp101 = icmp eq i32 %60, 1
  br i1 %cmp101, label %land.lhs.true102, label %if.end113

land.lhs.true102:                                 ; preds = %lor.lhs.false100, %while.end98
  %61 = load i32, i32* %after.addr, align 4
  %cmp103 = icmp eq i32 %61, 3
  br i1 %cmp103, label %if.then112, label %lor.lhs.false104

lor.lhs.false104:                                 ; preds = %land.lhs.true102
  %62 = load i32, i32* %after.addr, align 4
  %cmp105 = icmp eq i32 %62, 14
  br i1 %cmp105, label %if.then112, label %lor.lhs.false106

lor.lhs.false106:                                 ; preds = %lor.lhs.false104
  %63 = load i32, i32* %after.addr, align 4
  %cmp107 = icmp eq i32 %63, 13
  br i1 %cmp107, label %if.then112, label %lor.lhs.false108

lor.lhs.false108:                                 ; preds = %lor.lhs.false106
  %64 = load i32, i32* %after.addr, align 4
  %cmp109 = icmp eq i32 %64, 2
  br i1 %cmp109, label %if.then112, label %lor.lhs.false110

lor.lhs.false110:                                 ; preds = %lor.lhs.false108
  %65 = load i32, i32* %after.addr, align 4
  %cmp111 = icmp eq i32 %65, 7
  br i1 %cmp111, label %if.then112, label %if.end113

if.then112:                                       ; preds = %lor.lhs.false110, %lor.lhs.false108, %lor.lhs.false106, %lor.lhs.false104, %land.lhs.true102
  store i1 false, i1* %retval, align 1
  br label %return

if.end113:                                        ; preds = %lor.lhs.false110, %lor.lhs.false100
  %66 = load i8*, i8** %lpos, align 8
  store i8* %66, i8** %temp_pos, align 8
  %67 = load i8*, i8** %strbeg.addr, align 8
  %68 = load i8, i8* %utf8_target.addr, align 1
  %tobool114 = trunc i8 %68 to i1
  %call115 = call i32 @S_backup_one_SB(i8* %67, i8** %temp_pos, i1 zeroext %tobool114)
  store i32 %call115, i32* %backup, align 4
  %69 = load i32, i32* %backup, align 4
  %cmp116 = icmp eq i32 %69, 13
  br i1 %cmp116, label %if.then121, label %lor.lhs.false117

lor.lhs.false117:                                 ; preds = %if.end113
  %70 = load i32, i32* %backup, align 4
  %cmp118 = icmp eq i32 %70, 2
  br i1 %cmp118, label %if.then121, label %lor.lhs.false119

lor.lhs.false119:                                 ; preds = %lor.lhs.false117
  %71 = load i32, i32* %backup, align 4
  %cmp120 = icmp eq i32 %71, 7
  br i1 %cmp120, label %if.then121, label %if.else

if.then121:                                       ; preds = %lor.lhs.false119, %lor.lhs.false117, %if.end113
  %72 = load i8*, i8** %temp_pos, align 8
  store i8* %72, i8** %lpos, align 8
  br label %if.end122

if.else:                                          ; preds = %lor.lhs.false119
  %73 = load i32, i32* %before.addr, align 4
  store i32 %73, i32* %backup, align 4
  br label %if.end122

if.end122:                                        ; preds = %if.else, %if.then121
  br label %while.cond123

while.cond123:                                    ; preds = %while.body125, %if.end122
  %74 = load i32, i32* %backup, align 4
  %cmp124 = icmp eq i32 %74, 14
  br i1 %cmp124, label %while.body125, label %while.end128

while.body125:                                    ; preds = %while.cond123
  %75 = load i8*, i8** %strbeg.addr, align 8
  %76 = load i8, i8* %utf8_target.addr, align 1
  %tobool126 = trunc i8 %76 to i1
  %call127 = call i32 @S_backup_one_SB(i8* %75, i8** %lpos, i1 zeroext %tobool126)
  store i32 %call127, i32* %backup, align 4
  br label %while.cond123

while.end128:                                     ; preds = %while.cond123
  br label %while.cond129

while.cond129:                                    ; preds = %while.body131, %while.end128
  %77 = load i32, i32* %backup, align 4
  %cmp130 = icmp eq i32 %77, 3
  br i1 %cmp130, label %while.body131, label %while.end134

while.body131:                                    ; preds = %while.cond129
  %78 = load i8*, i8** %strbeg.addr, align 8
  %79 = load i8, i8* %utf8_target.addr, align 1
  %tobool132 = trunc i8 %79 to i1
  %call133 = call i32 @S_backup_one_SB(i8* %78, i8** %lpos, i1 zeroext %tobool132)
  store i32 %call133, i32* %backup, align 4
  br label %while.cond129

while.end134:                                     ; preds = %while.cond129
  %80 = load i32, i32* %backup, align 4
  %cmp135 = icmp eq i32 %80, 12
  br i1 %cmp135, label %if.then138, label %lor.lhs.false136

lor.lhs.false136:                                 ; preds = %while.end134
  %81 = load i32, i32* %backup, align 4
  %cmp137 = icmp eq i32 %81, 1
  br i1 %cmp137, label %if.then138, label %if.end139

if.then138:                                       ; preds = %lor.lhs.false136, %while.end134
  store i1 true, i1* %retval, align 1
  br label %return

if.end139:                                        ; preds = %lor.lhs.false136
  store i1 false, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.end139, %if.then138, %if.then112, %if.then90, %if.then64, %if.then35, %if.then26, %if.then16, %if.then11, %if.then4, %if.then
  %82 = load i1, i1* %retval, align 1
  ret i1 %82
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_isWB(i32 %previous, i32 %before, i32 %after, i8* %strbeg, i8* %curpos, i8* %strend, i1 zeroext %utf8_target) #0 {
entry:
  %retval = alloca i1, align 1
  %previous.addr = alloca i32, align 4
  %before.addr = alloca i32, align 4
  %after.addr = alloca i32, align 4
  %strbeg.addr = alloca i8*, align 8
  %curpos.addr = alloca i8*, align 8
  %strend.addr = alloca i8*, align 8
  %utf8_target.addr = alloca i8, align 1
  %before_pos = alloca i8*, align 8
  %after_pos = alloca i8*, align 8
  store i32 %previous, i32* %previous.addr, align 4
  store i32 %before, i32* %before.addr, align 4
  store i32 %after, i32* %after.addr, align 4
  store i8* %strbeg, i8** %strbeg.addr, align 8
  store i8* %curpos, i8** %curpos.addr, align 8
  store i8* %strend, i8** %strend.addr, align 8
  %frombool = zext i1 %utf8_target to i8
  store i8 %frombool, i8* %utf8_target.addr, align 1
  %0 = load i8*, i8** %curpos.addr, align 8
  store i8* %0, i8** %before_pos, align 8
  %1 = load i8*, i8** %curpos.addr, align 8
  store i8* %1, i8** %after_pos, align 8
  %2 = load i32, i32* %before.addr, align 4
  %cmp = icmp eq i32 %2, 4
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %after.addr, align 4
  %cmp1 = icmp eq i32 %3, 4
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 true, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i32, i32* %before.addr, align 4
  %cmp2 = icmp eq i32 %4, 2
  br i1 %cmp2, label %land.lhs.true, label %if.end5

land.lhs.true:                                    ; preds = %if.end
  %5 = load i32, i32* %after.addr, align 4
  %cmp3 = icmp eq i32 %5, 10
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %land.lhs.true
  store i1 false, i1* %retval, align 1
  br label %return

if.end5:                                          ; preds = %land.lhs.true, %if.end
  %6 = load i32, i32* %before.addr, align 4
  %cmp6 = icmp eq i32 %6, 2
  br i1 %cmp6, label %if.then17, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %if.end5
  %7 = load i32, i32* %before.addr, align 4
  %cmp8 = icmp eq i32 %7, 10
  br i1 %cmp8, label %if.then17, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false7
  %8 = load i32, i32* %before.addr, align 4
  %cmp10 = icmp eq i32 %8, 14
  br i1 %cmp10, label %if.then17, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %lor.lhs.false9
  %9 = load i32, i32* %after.addr, align 4
  %cmp12 = icmp eq i32 %9, 2
  br i1 %cmp12, label %if.then17, label %lor.lhs.false13

lor.lhs.false13:                                  ; preds = %lor.lhs.false11
  %10 = load i32, i32* %after.addr, align 4
  %cmp14 = icmp eq i32 %10, 10
  br i1 %cmp14, label %if.then17, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %lor.lhs.false13
  %11 = load i32, i32* %after.addr, align 4
  %cmp16 = icmp eq i32 %11, 14
  br i1 %cmp16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %lor.lhs.false15, %lor.lhs.false13, %lor.lhs.false11, %lor.lhs.false9, %lor.lhs.false7, %if.end5
  store i1 true, i1* %retval, align 1
  br label %return

if.end18:                                         ; preds = %lor.lhs.false15
  %12 = load i32, i32* %after.addr, align 4
  %cmp19 = icmp eq i32 %12, 5
  br i1 %cmp19, label %if.then22, label %lor.lhs.false20

lor.lhs.false20:                                  ; preds = %if.end18
  %13 = load i32, i32* %after.addr, align 4
  %cmp21 = icmp eq i32 %13, 7
  br i1 %cmp21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %lor.lhs.false20, %if.end18
  store i1 false, i1* %retval, align 1
  br label %return

if.end23:                                         ; preds = %lor.lhs.false20
  %14 = load i32, i32* %before.addr, align 4
  %cmp24 = icmp eq i32 %14, 5
  br i1 %cmp24, label %if.then27, label %lor.lhs.false25

lor.lhs.false25:                                  ; preds = %if.end23
  %15 = load i32, i32* %before.addr, align 4
  %cmp26 = icmp eq i32 %15, 7
  br i1 %cmp26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %lor.lhs.false25, %if.end23
  %16 = load i8*, i8** %strbeg.addr, align 8
  %17 = load i8, i8* %utf8_target.addr, align 1
  %tobool = trunc i8 %17 to i1
  %call = call i32 @S_backup_one_WB(i32* %previous.addr, i8* %16, i8** %before_pos, i1 zeroext %tobool)
  store i32 %call, i32* %before.addr, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.then27, %lor.lhs.false25
  %18 = load i32, i32* %before.addr, align 4
  %mul = mul i32 19, %18
  %19 = load i32, i32* %after.addr, align 4
  %add = add i32 %mul, %19
  switch i32 %add, label %sw.default [
    i32 20, label %sw.bb
    i32 27, label %sw.bb
    i32 153, label %sw.bb
    i32 160, label %sw.bb
    i32 30, label %sw.bb29
    i32 32, label %sw.bb29
    i32 36, label %sw.bb29
    i32 163, label %sw.bb29
    i32 165, label %sw.bb29
    i32 210, label %sw.bb34
    i32 217, label %sw.bb34
    i32 248, label %sw.bb34
    i32 255, label %sw.bb34
    i32 324, label %sw.bb34
    i32 331, label %sw.bb34
    i32 169, label %sw.bb41
    i32 155, label %sw.bb42
    i32 65, label %sw.bb46
    i32 300, label %sw.bb50
    i32 34, label %sw.bb51
    i32 167, label %sw.bb51
    i32 286, label %sw.bb52
    i32 293, label %sw.bb52
    i32 243, label %sw.bb53
    i32 262, label %sw.bb53
    i32 338, label %sw.bb53
    i32 297, label %sw.bb57
    i32 298, label %sw.bb57
    i32 302, label %sw.bb57
    i32 180, label %sw.bb61
    i32 25, label %sw.bb62
    i32 158, label %sw.bb62
    i32 291, label %sw.bb62
    i32 177, label %sw.bb62
    i32 120, label %sw.bb62
    i32 115, label %sw.bb63
    i32 122, label %sw.bb63
    i32 129, label %sw.bb63
    i32 123, label %sw.bb63
    i32 320, label %sw.bb64
  ]

sw.default:                                       ; preds = %if.end28
  store i1 true, i1* %retval, align 1
  br label %return

sw.bb:                                            ; preds = %if.end28, %if.end28, %if.end28, %if.end28
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb29:                                          ; preds = %if.end28, %if.end28, %if.end28, %if.end28, %if.end28
  %20 = load i8*, i8** %strend.addr, align 8
  %21 = load i8, i8* %utf8_target.addr, align 1
  %tobool30 = trunc i8 %21 to i1
  %call31 = call i32 @S_advance_one_WB(i8** %after_pos, i8* %20, i1 zeroext %tobool30)
  store i32 %call31, i32* %after.addr, align 4
  %22 = load i32, i32* %after.addr, align 4
  %cmp32 = icmp ne i32 %22, 1
  br i1 %cmp32, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %sw.bb29
  %23 = load i32, i32* %after.addr, align 4
  %cmp33 = icmp ne i32 %23, 8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb29
  %24 = phi i1 [ false, %sw.bb29 ], [ %cmp33, %land.rhs ]
  store i1 %24, i1* %retval, align 1
  br label %return

sw.bb34:                                          ; preds = %if.end28, %if.end28, %if.end28, %if.end28, %if.end28, %if.end28
  %25 = load i8*, i8** %strbeg.addr, align 8
  %26 = load i8, i8* %utf8_target.addr, align 1
  %tobool35 = trunc i8 %26 to i1
  %call36 = call i32 @S_backup_one_WB(i32* %previous.addr, i8* %25, i8** %before_pos, i1 zeroext %tobool35)
  store i32 %call36, i32* %before.addr, align 4
  %27 = load i32, i32* %before.addr, align 4
  %cmp37 = icmp ne i32 %27, 1
  br i1 %cmp37, label %land.rhs38, label %land.end40

land.rhs38:                                       ; preds = %sw.bb34
  %28 = load i32, i32* %before.addr, align 4
  %cmp39 = icmp ne i32 %28, 8
  br label %land.end40

land.end40:                                       ; preds = %land.rhs38, %sw.bb34
  %29 = phi i1 [ false, %sw.bb34 ], [ %cmp39, %land.rhs38 ]
  store i1 %29, i1* %retval, align 1
  br label %return

sw.bb41:                                          ; preds = %if.end28
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb42:                                          ; preds = %if.end28
  %30 = load i8*, i8** %strend.addr, align 8
  %31 = load i8, i8* %utf8_target.addr, align 1
  %tobool43 = trunc i8 %31 to i1
  %call44 = call i32 @S_advance_one_WB(i8** %after_pos, i8* %30, i1 zeroext %tobool43)
  %cmp45 = icmp ne i32 %call44, 8
  store i1 %cmp45, i1* %retval, align 1
  br label %return

sw.bb46:                                          ; preds = %if.end28
  %32 = load i8*, i8** %strbeg.addr, align 8
  %33 = load i8, i8* %utf8_target.addr, align 1
  %tobool47 = trunc i8 %33 to i1
  %call48 = call i32 @S_backup_one_WB(i32* %previous.addr, i8* %32, i8** %before_pos, i1 zeroext %tobool47)
  %cmp49 = icmp ne i32 %call48, 8
  store i1 %cmp49, i1* %retval, align 1
  br label %return

sw.bb50:                                          ; preds = %if.end28
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb51:                                          ; preds = %if.end28, %if.end28
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb52:                                          ; preds = %if.end28, %if.end28
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb53:                                          ; preds = %if.end28, %if.end28, %if.end28
  %34 = load i8*, i8** %strbeg.addr, align 8
  %35 = load i8, i8* %utf8_target.addr, align 1
  %tobool54 = trunc i8 %35 to i1
  %call55 = call i32 @S_backup_one_WB(i32* %previous.addr, i8* %34, i8** %before_pos, i1 zeroext %tobool54)
  %cmp56 = icmp ne i32 %call55, 15
  store i1 %cmp56, i1* %retval, align 1
  br label %return

sw.bb57:                                          ; preds = %if.end28, %if.end28, %if.end28
  %36 = load i8*, i8** %strend.addr, align 8
  %37 = load i8, i8* %utf8_target.addr, align 1
  %tobool58 = trunc i8 %37 to i1
  %call59 = call i32 @S_advance_one_WB(i8** %after_pos, i8* %36, i1 zeroext %tobool58)
  %cmp60 = icmp ne i32 %call59, 15
  store i1 %cmp60, i1* %retval, align 1
  br label %return

sw.bb61:                                          ; preds = %if.end28
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb62:                                          ; preds = %if.end28, %if.end28, %if.end28, %if.end28, %if.end28
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb63:                                          ; preds = %if.end28, %if.end28, %if.end28, %if.end28
  store i1 false, i1* %retval, align 1
  br label %return

sw.bb64:                                          ; preds = %if.end28
  store i1 false, i1* %retval, align 1
  br label %return

return:                                           ; preds = %sw.bb64, %sw.bb63, %sw.bb62, %sw.bb61, %sw.bb57, %sw.bb53, %sw.bb52, %sw.bb51, %sw.bb50, %sw.bb46, %sw.bb42, %sw.bb41, %land.end40, %land.end, %sw.bb, %sw.default, %if.then22, %if.then17, %if.then4, %if.then
  %38 = load i1, i1* %retval, align 1
  ret i1 %38
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_isFOO_utf8_lc(i8 zeroext %classnum, i8* %character) #0 {
entry:
  %retval = alloca i1, align 1
  %classnum.addr = alloca i8, align 1
  %character.addr = alloca i8*, align 8
  %flags = alloca i8, align 1
  store i8 %classnum, i8* %classnum.addr, align 1
  store i8* %character, i8** %character.addr, align 8
  %0 = load i8*, i8** %character.addr, align 8
  %1 = load i8, i8* %0, align 1
  %conv = zext i8 %1 to i64
  %cmp = icmp ult i64 %conv, 128
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load i8, i8* %classnum.addr, align 1
  %3 = load i8*, i8** %character.addr, align 8
  %4 = load i8, i8* %3, align 1
  %call = call zeroext i1 @S_isFOO_lc(i8 zeroext %2, i8 zeroext %4)
  store i1 %call, i1* %retval, align 1
  br label %return

if.else:                                          ; preds = %entry
  %5 = load i8*, i8** %character.addr, align 8
  %6 = load i8, i8* %5, align 1
  %conv2 = zext i8 %6 to i32
  %and = and i32 %conv2, 254
  %cmp3 = icmp eq i32 %and, 194
  br i1 %cmp3, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.else
  %7 = load i8, i8* %classnum.addr, align 1
  %8 = load i8*, i8** %character.addr, align 8
  %9 = load i8, i8* %8, align 1
  %conv6 = zext i8 %9 to i32
  %and7 = and i32 %conv6, 31
  %shl = shl i32 %and7, 6
  %10 = load i8*, i8** %character.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 1
  %11 = load i8, i8* %add.ptr, align 1
  %conv8 = zext i8 %11 to i32
  %and9 = and i32 %conv8, 63
  %or = or i32 %shl, %and9
  %conv10 = trunc i32 %or to i8
  %call11 = call zeroext i1 @S_isFOO_lc(i8 zeroext %7, i8 zeroext %conv10)
  store i1 %call11, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end
  %12 = load i8, i8* %classnum.addr, align 1
  %conv13 = zext i8 %12 to i32
  %cmp14 = icmp slt i32 %conv13, 10
  br i1 %cmp14, label %if.then16, label %if.end29

if.then16:                                        ; preds = %if.end12
  %13 = load i8, i8* %classnum.addr, align 1
  %idxprom = zext i8 %13 to i64
  %arrayidx = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom
  %14 = load %struct.sv*, %struct.sv** %arrayidx, align 8
  %tobool = icmp ne %struct.sv* %14, null
  br i1 %tobool, label %if.end23, label %if.then17

if.then17:                                        ; preds = %if.then16
  store i8 4, i8* %flags, align 1
  %15 = load i8, i8* %classnum.addr, align 1
  %idxprom18 = zext i8 %15 to i64
  %arrayidx19 = getelementptr inbounds [16 x %struct.sv*], [16 x %struct.sv*]* @PL_XPosix_ptrs, i64 0, i64 %idxprom18
  %16 = load %struct.sv*, %struct.sv** %arrayidx19, align 8
  %call20 = call %struct.sv* @Perl__core_swash_init(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %struct.sv* @PL_sv_undef, i32 1, i32 0, %struct.sv* %16, i8* %flags)
  %17 = load i8, i8* %classnum.addr, align 1
  %idxprom21 = zext i8 %17 to i64
  %arrayidx22 = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom21
  store %struct.sv* %call20, %struct.sv** %arrayidx22, align 8
  br label %if.end23

if.end23:                                         ; preds = %if.then17, %if.then16
  %18 = load i8, i8* %classnum.addr, align 1
  %idxprom24 = zext i8 %18 to i64
  %arrayidx25 = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom24
  %19 = load %struct.sv*, %struct.sv** %arrayidx25, align 8
  %20 = load i8*, i8** %character.addr, align 8
  %call26 = call i64 @Perl_swash_fetch(%struct.sv* %19, i8* %20, i1 zeroext true)
  %tobool27 = icmp ne i64 %call26, 0
  %21 = zext i1 %tobool27 to i64
  %cond = select i1 %tobool27, i32 1, i32 0
  %tobool28 = icmp ne i32 %cond, 0
  store i1 %tobool28, i1* %retval, align 1
  br label %return

if.end29:                                         ; preds = %if.end12
  %22 = load i8, i8* %classnum.addr, align 1
  %conv30 = zext i8 %22 to i32
  switch i32 %conv30, label %sw.default [
    i32 10, label %sw.bb
    i32 11, label %sw.bb102
    i32 12, label %sw.bb177
    i32 15, label %sw.bb234
  ]

sw.bb:                                            ; preds = %if.end29
  %23 = load i8*, i8** %character.addr, align 8
  %arrayidx31 = getelementptr inbounds i8, i8* %23, i64 0
  %24 = load i8, i8* %arrayidx31, align 1
  %conv32 = zext i8 %24 to i32
  %cmp33 = icmp eq i32 225, %conv32
  br i1 %cmp33, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.bb
  %25 = load i8*, i8** %character.addr, align 8
  %arrayidx35 = getelementptr inbounds i8, i8* %25, i64 1
  %26 = load i8, i8* %arrayidx35, align 1
  %conv36 = zext i8 %26 to i32
  %cmp37 = icmp eq i32 154, %conv36
  br i1 %cmp37, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.true
  %27 = load i8*, i8** %character.addr, align 8
  %arrayidx39 = getelementptr inbounds i8, i8* %27, i64 2
  %28 = load i8, i8* %arrayidx39, align 1
  %conv40 = zext i8 %28 to i32
  %cmp41 = icmp eq i32 128, %conv40
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.true
  %29 = phi i1 [ false, %cond.true ], [ %cmp41, %land.rhs ]
  %30 = zext i1 %29 to i64
  %cond43 = select i1 %29, i32 3, i32 0
  br label %cond.end99

cond.false:                                       ; preds = %sw.bb
  %31 = load i8*, i8** %character.addr, align 8
  %arrayidx44 = getelementptr inbounds i8, i8* %31, i64 0
  %32 = load i8, i8* %arrayidx44, align 1
  %conv45 = zext i8 %32 to i32
  %cmp46 = icmp eq i32 226, %conv45
  br i1 %cmp46, label %cond.true48, label %cond.false81

cond.true48:                                      ; preds = %cond.false
  %33 = load i8*, i8** %character.addr, align 8
  %arrayidx49 = getelementptr inbounds i8, i8* %33, i64 1
  %34 = load i8, i8* %arrayidx49, align 1
  %conv50 = zext i8 %34 to i32
  %cmp51 = icmp eq i32 128, %conv50
  br i1 %cmp51, label %cond.true53, label %cond.false68

cond.true53:                                      ; preds = %cond.true48
  %35 = load i8*, i8** %character.addr, align 8
  %arrayidx54 = getelementptr inbounds i8, i8* %35, i64 2
  %36 = load i8, i8* %arrayidx54, align 1
  %conv55 = zext i8 %36 to i32
  %cmp56 = icmp sle i32 %conv55, 138
  br i1 %cmp56, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.true53
  %37 = load i8*, i8** %character.addr, align 8
  %arrayidx58 = getelementptr inbounds i8, i8* %37, i64 2
  %38 = load i8, i8* %arrayidx58, align 1
  %conv59 = zext i8 %38 to i32
  %and60 = and i32 %conv59, 254
  %cmp61 = icmp eq i32 %and60, 168
  br i1 %cmp61, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false
  %39 = load i8*, i8** %character.addr, align 8
  %arrayidx63 = getelementptr inbounds i8, i8* %39, i64 2
  %40 = load i8, i8* %arrayidx63, align 1
  %conv64 = zext i8 %40 to i32
  %cmp65 = icmp eq i32 175, %conv64
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %cond.true53
  %41 = phi i1 [ true, %lor.lhs.false ], [ true, %cond.true53 ], [ %cmp65, %lor.rhs ]
  %42 = zext i1 %41 to i64
  %cond67 = select i1 %41, i32 3, i32 0
  br label %cond.end

cond.false68:                                     ; preds = %cond.true48
  %43 = load i8*, i8** %character.addr, align 8
  %arrayidx69 = getelementptr inbounds i8, i8* %43, i64 1
  %44 = load i8, i8* %arrayidx69, align 1
  %conv70 = zext i8 %44 to i32
  %cmp71 = icmp eq i32 129, %conv70
  br i1 %cmp71, label %land.rhs73, label %land.end78

land.rhs73:                                       ; preds = %cond.false68
  %45 = load i8*, i8** %character.addr, align 8
  %arrayidx74 = getelementptr inbounds i8, i8* %45, i64 2
  %46 = load i8, i8* %arrayidx74, align 1
  %conv75 = zext i8 %46 to i32
  %cmp76 = icmp eq i32 159, %conv75
  br label %land.end78

land.end78:                                       ; preds = %land.rhs73, %cond.false68
  %47 = phi i1 [ false, %cond.false68 ], [ %cmp76, %land.rhs73 ]
  %48 = zext i1 %47 to i64
  %cond79 = select i1 %47, i32 3, i32 0
  br label %cond.end

cond.end:                                         ; preds = %land.end78, %lor.end
  %cond80 = phi i32 [ %cond67, %lor.end ], [ %cond79, %land.end78 ]
  br label %cond.end97

cond.false81:                                     ; preds = %cond.false
  %49 = load i8*, i8** %character.addr, align 8
  %arrayidx82 = getelementptr inbounds i8, i8* %49, i64 0
  %50 = load i8, i8* %arrayidx82, align 1
  %conv83 = zext i8 %50 to i32
  %cmp84 = icmp eq i32 227, %conv83
  br i1 %cmp84, label %land.lhs.true, label %land.end95

land.lhs.true:                                    ; preds = %cond.false81
  %51 = load i8*, i8** %character.addr, align 8
  %arrayidx86 = getelementptr inbounds i8, i8* %51, i64 1
  %52 = load i8, i8* %arrayidx86, align 1
  %conv87 = zext i8 %52 to i32
  %cmp88 = icmp eq i32 128, %conv87
  br i1 %cmp88, label %land.rhs90, label %land.end95

land.rhs90:                                       ; preds = %land.lhs.true
  %53 = load i8*, i8** %character.addr, align 8
  %arrayidx91 = getelementptr inbounds i8, i8* %53, i64 2
  %54 = load i8, i8* %arrayidx91, align 1
  %conv92 = zext i8 %54 to i32
  %cmp93 = icmp eq i32 128, %conv92
  br label %land.end95

land.end95:                                       ; preds = %land.rhs90, %land.lhs.true, %cond.false81
  %55 = phi i1 [ false, %land.lhs.true ], [ false, %cond.false81 ], [ %cmp93, %land.rhs90 ]
  %56 = zext i1 %55 to i64
  %cond96 = select i1 %55, i32 3, i32 0
  br label %cond.end97

cond.end97:                                       ; preds = %land.end95, %cond.end
  %cond98 = phi i32 [ %cond80, %cond.end ], [ %cond96, %land.end95 ]
  br label %cond.end99

cond.end99:                                       ; preds = %cond.end97, %land.end
  %cond100 = phi i32 [ %cond43, %land.end ], [ %cond98, %cond.end97 ]
  %tobool101 = icmp ne i32 %cond100, 0
  store i1 %tobool101, i1* %retval, align 1
  br label %return

sw.bb102:                                         ; preds = %if.end29
  %57 = load i8*, i8** %character.addr, align 8
  %arrayidx103 = getelementptr inbounds i8, i8* %57, i64 0
  %58 = load i8, i8* %arrayidx103, align 1
  %conv104 = zext i8 %58 to i32
  %cmp105 = icmp eq i32 225, %conv104
  br i1 %cmp105, label %cond.true107, label %cond.false119

cond.true107:                                     ; preds = %sw.bb102
  %59 = load i8*, i8** %character.addr, align 8
  %arrayidx108 = getelementptr inbounds i8, i8* %59, i64 1
  %60 = load i8, i8* %arrayidx108, align 1
  %conv109 = zext i8 %60 to i32
  %cmp110 = icmp eq i32 154, %conv109
  br i1 %cmp110, label %land.rhs112, label %land.end117

land.rhs112:                                      ; preds = %cond.true107
  %61 = load i8*, i8** %character.addr, align 8
  %arrayidx113 = getelementptr inbounds i8, i8* %61, i64 2
  %62 = load i8, i8* %arrayidx113, align 1
  %conv114 = zext i8 %62 to i32
  %cmp115 = icmp eq i32 128, %conv114
  br label %land.end117

land.end117:                                      ; preds = %land.rhs112, %cond.true107
  %63 = phi i1 [ false, %cond.true107 ], [ %cmp115, %land.rhs112 ]
  %64 = zext i1 %63 to i64
  %cond118 = select i1 %63, i32 3, i32 0
  br label %cond.end174

cond.false119:                                    ; preds = %sw.bb102
  %65 = load i8*, i8** %character.addr, align 8
  %arrayidx120 = getelementptr inbounds i8, i8* %65, i64 0
  %66 = load i8, i8* %arrayidx120, align 1
  %conv121 = zext i8 %66 to i32
  %cmp122 = icmp eq i32 226, %conv121
  br i1 %cmp122, label %cond.true124, label %cond.false155

cond.true124:                                     ; preds = %cond.false119
  %67 = load i8*, i8** %character.addr, align 8
  %arrayidx125 = getelementptr inbounds i8, i8* %67, i64 1
  %68 = load i8, i8* %arrayidx125, align 1
  %conv126 = zext i8 %68 to i32
  %cmp127 = icmp eq i32 128, %conv126
  br i1 %cmp127, label %cond.true129, label %cond.false141

cond.true129:                                     ; preds = %cond.true124
  %69 = load i8*, i8** %character.addr, align 8
  %arrayidx130 = getelementptr inbounds i8, i8* %69, i64 2
  %70 = load i8, i8* %arrayidx130, align 1
  %conv131 = zext i8 %70 to i32
  %cmp132 = icmp sle i32 %conv131, 138
  br i1 %cmp132, label %lor.end139, label %lor.rhs134

lor.rhs134:                                       ; preds = %cond.true129
  %71 = load i8*, i8** %character.addr, align 8
  %arrayidx135 = getelementptr inbounds i8, i8* %71, i64 2
  %72 = load i8, i8* %arrayidx135, align 1
  %conv136 = zext i8 %72 to i32
  %cmp137 = icmp eq i32 175, %conv136
  br label %lor.end139

lor.end139:                                       ; preds = %lor.rhs134, %cond.true129
  %73 = phi i1 [ true, %cond.true129 ], [ %cmp137, %lor.rhs134 ]
  %74 = zext i1 %73 to i64
  %cond140 = select i1 %73, i32 3, i32 0
  br label %cond.end153

cond.false141:                                    ; preds = %cond.true124
  %75 = load i8*, i8** %character.addr, align 8
  %arrayidx142 = getelementptr inbounds i8, i8* %75, i64 1
  %76 = load i8, i8* %arrayidx142, align 1
  %conv143 = zext i8 %76 to i32
  %cmp144 = icmp eq i32 129, %conv143
  br i1 %cmp144, label %land.rhs146, label %land.end151

land.rhs146:                                      ; preds = %cond.false141
  %77 = load i8*, i8** %character.addr, align 8
  %arrayidx147 = getelementptr inbounds i8, i8* %77, i64 2
  %78 = load i8, i8* %arrayidx147, align 1
  %conv148 = zext i8 %78 to i32
  %cmp149 = icmp eq i32 159, %conv148
  br label %land.end151

land.end151:                                      ; preds = %land.rhs146, %cond.false141
  %79 = phi i1 [ false, %cond.false141 ], [ %cmp149, %land.rhs146 ]
  %80 = zext i1 %79 to i64
  %cond152 = select i1 %79, i32 3, i32 0
  br label %cond.end153

cond.end153:                                      ; preds = %land.end151, %lor.end139
  %cond154 = phi i32 [ %cond140, %lor.end139 ], [ %cond152, %land.end151 ]
  br label %cond.end172

cond.false155:                                    ; preds = %cond.false119
  %81 = load i8*, i8** %character.addr, align 8
  %arrayidx156 = getelementptr inbounds i8, i8* %81, i64 0
  %82 = load i8, i8* %arrayidx156, align 1
  %conv157 = zext i8 %82 to i32
  %cmp158 = icmp eq i32 227, %conv157
  br i1 %cmp158, label %land.lhs.true160, label %land.end170

land.lhs.true160:                                 ; preds = %cond.false155
  %83 = load i8*, i8** %character.addr, align 8
  %arrayidx161 = getelementptr inbounds i8, i8* %83, i64 1
  %84 = load i8, i8* %arrayidx161, align 1
  %conv162 = zext i8 %84 to i32
  %cmp163 = icmp eq i32 128, %conv162
  br i1 %cmp163, label %land.rhs165, label %land.end170

land.rhs165:                                      ; preds = %land.lhs.true160
  %85 = load i8*, i8** %character.addr, align 8
  %arrayidx166 = getelementptr inbounds i8, i8* %85, i64 2
  %86 = load i8, i8* %arrayidx166, align 1
  %conv167 = zext i8 %86 to i32
  %cmp168 = icmp eq i32 128, %conv167
  br label %land.end170

land.end170:                                      ; preds = %land.rhs165, %land.lhs.true160, %cond.false155
  %87 = phi i1 [ false, %land.lhs.true160 ], [ false, %cond.false155 ], [ %cmp168, %land.rhs165 ]
  %88 = zext i1 %87 to i64
  %cond171 = select i1 %87, i32 3, i32 0
  br label %cond.end172

cond.end172:                                      ; preds = %land.end170, %cond.end153
  %cond173 = phi i32 [ %cond154, %cond.end153 ], [ %cond171, %land.end170 ]
  br label %cond.end174

cond.end174:                                      ; preds = %cond.end172, %land.end117
  %cond175 = phi i32 [ %cond118, %land.end117 ], [ %cond173, %cond.end172 ]
  %tobool176 = icmp ne i32 %cond175, 0
  store i1 %tobool176, i1* %retval, align 1
  br label %return

sw.bb177:                                         ; preds = %if.end29
  %89 = load i8*, i8** %character.addr, align 8
  %arrayidx178 = getelementptr inbounds i8, i8* %89, i64 0
  %90 = load i8, i8* %arrayidx178, align 1
  %conv179 = zext i8 %90 to i32
  %cmp180 = icmp eq i32 239, %conv179
  br i1 %cmp180, label %cond.true182, label %cond.false230

cond.true182:                                     ; preds = %sw.bb177
  %91 = load i8*, i8** %character.addr, align 8
  %arrayidx183 = getelementptr inbounds i8, i8* %91, i64 1
  %92 = load i8, i8* %arrayidx183, align 1
  %conv184 = zext i8 %92 to i32
  %cmp185 = icmp eq i32 188, %conv184
  br i1 %cmp185, label %cond.true187, label %cond.false210

cond.true187:                                     ; preds = %cond.true182
  %93 = load i8*, i8** %character.addr, align 8
  %arrayidx188 = getelementptr inbounds i8, i8* %93, i64 2
  %94 = load i8, i8* %arrayidx188, align 1
  %conv189 = zext i8 %94 to i32
  %cmp190 = icmp sle i32 144, %conv189
  br i1 %cmp190, label %land.lhs.true192, label %lor.rhs197

land.lhs.true192:                                 ; preds = %cond.true187
  %95 = load i8*, i8** %character.addr, align 8
  %arrayidx193 = getelementptr inbounds i8, i8* %95, i64 2
  %96 = load i8, i8* %arrayidx193, align 1
  %conv194 = zext i8 %96 to i32
  %cmp195 = icmp sle i32 %conv194, 153
  br i1 %cmp195, label %lor.end208, label %lor.rhs197

lor.rhs197:                                       ; preds = %land.lhs.true192, %cond.true187
  %97 = load i8*, i8** %character.addr, align 8
  %arrayidx198 = getelementptr inbounds i8, i8* %97, i64 2
  %98 = load i8, i8* %arrayidx198, align 1
  %conv199 = zext i8 %98 to i32
  %cmp200 = icmp sle i32 161, %conv199
  br i1 %cmp200, label %land.rhs202, label %land.end207

land.rhs202:                                      ; preds = %lor.rhs197
  %99 = load i8*, i8** %character.addr, align 8
  %arrayidx203 = getelementptr inbounds i8, i8* %99, i64 2
  %100 = load i8, i8* %arrayidx203, align 1
  %conv204 = zext i8 %100 to i32
  %cmp205 = icmp sle i32 %conv204, 166
  br label %land.end207

land.end207:                                      ; preds = %land.rhs202, %lor.rhs197
  %101 = phi i1 [ false, %lor.rhs197 ], [ %cmp205, %land.rhs202 ]
  br label %lor.end208

lor.end208:                                       ; preds = %land.end207, %land.lhs.true192
  %102 = phi i1 [ true, %land.lhs.true192 ], [ %101, %land.end207 ]
  %103 = zext i1 %102 to i64
  %cond209 = select i1 %102, i32 3, i32 0
  br label %cond.end228

cond.false210:                                    ; preds = %cond.true182
  %104 = load i8*, i8** %character.addr, align 8
  %arrayidx211 = getelementptr inbounds i8, i8* %104, i64 1
  %105 = load i8, i8* %arrayidx211, align 1
  %conv212 = zext i8 %105 to i32
  %cmp213 = icmp eq i32 189, %conv212
  br i1 %cmp213, label %land.rhs215, label %land.end226

land.rhs215:                                      ; preds = %cond.false210
  %106 = load i8*, i8** %character.addr, align 8
  %arrayidx216 = getelementptr inbounds i8, i8* %106, i64 2
  %107 = load i8, i8* %arrayidx216, align 1
  %conv217 = zext i8 %107 to i32
  %cmp218 = icmp sle i32 129, %conv217
  br i1 %cmp218, label %land.rhs220, label %land.end225

land.rhs220:                                      ; preds = %land.rhs215
  %108 = load i8*, i8** %character.addr, align 8
  %arrayidx221 = getelementptr inbounds i8, i8* %108, i64 2
  %109 = load i8, i8* %arrayidx221, align 1
  %conv222 = zext i8 %109 to i32
  %cmp223 = icmp sle i32 %conv222, 134
  br label %land.end225

land.end225:                                      ; preds = %land.rhs220, %land.rhs215
  %110 = phi i1 [ false, %land.rhs215 ], [ %cmp223, %land.rhs220 ]
  br label %land.end226

land.end226:                                      ; preds = %land.end225, %cond.false210
  %111 = phi i1 [ false, %cond.false210 ], [ %110, %land.end225 ]
  %112 = zext i1 %111 to i64
  %cond227 = select i1 %111, i32 3, i32 0
  br label %cond.end228

cond.end228:                                      ; preds = %land.end226, %lor.end208
  %cond229 = phi i32 [ %cond209, %lor.end208 ], [ %cond227, %land.end226 ]
  br label %cond.end231

cond.false230:                                    ; preds = %sw.bb177
  br label %cond.end231

cond.end231:                                      ; preds = %cond.false230, %cond.end228
  %cond232 = phi i32 [ %cond229, %cond.end228 ], [ 0, %cond.false230 ]
  %tobool233 = icmp ne i32 %cond232, 0
  store i1 %tobool233, i1* %retval, align 1
  br label %return

sw.bb234:                                         ; preds = %if.end29
  %113 = load i8*, i8** %character.addr, align 8
  %arrayidx235 = getelementptr inbounds i8, i8* %113, i64 0
  %114 = load i8, i8* %arrayidx235, align 1
  %conv236 = zext i8 %114 to i32
  %cmp237 = icmp eq i32 226, %conv236
  br i1 %cmp237, label %land.lhs.true239, label %land.end250

land.lhs.true239:                                 ; preds = %sw.bb234
  %115 = load i8*, i8** %character.addr, align 8
  %arrayidx240 = getelementptr inbounds i8, i8* %115, i64 1
  %116 = load i8, i8* %arrayidx240, align 1
  %conv241 = zext i8 %116 to i32
  %cmp242 = icmp eq i32 128, %conv241
  br i1 %cmp242, label %land.rhs244, label %land.end250

land.rhs244:                                      ; preds = %land.lhs.true239
  %117 = load i8*, i8** %character.addr, align 8
  %arrayidx245 = getelementptr inbounds i8, i8* %117, i64 2
  %118 = load i8, i8* %arrayidx245, align 1
  %conv246 = zext i8 %118 to i32
  %and247 = and i32 %conv246, 254
  %cmp248 = icmp eq i32 %and247, 168
  br label %land.end250

land.end250:                                      ; preds = %land.rhs244, %land.lhs.true239, %sw.bb234
  %119 = phi i1 [ false, %land.lhs.true239 ], [ false, %sw.bb234 ], [ %cmp248, %land.rhs244 ]
  %120 = zext i1 %119 to i64
  %cond251 = select i1 %119, i32 3, i32 0
  %tobool252 = icmp ne i32 %cond251, 0
  store i1 %tobool252, i1* %retval, align 1
  br label %return

sw.default:                                       ; preds = %if.end29
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  store i1 false, i1* %retval, align 1
  br label %return

return:                                           ; preds = %sw.epilog, %land.end250, %cond.end231, %cond.end174, %cond.end99, %if.end23, %if.then5, %if.then
  %121 = load i1, i1* %retval, align 1
  ret i1 %121
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_isFOO_lc(i8 zeroext %classnum, i8 zeroext %character) #0 {
entry:
  %retval = alloca i1, align 1
  %classnum.addr = alloca i8, align 1
  %character.addr = alloca i8, align 1
  store i8 %classnum, i8* %classnum.addr, align 1
  store i8 %character, i8* %character.addr, align 1
  %0 = load i8, i8* %classnum.addr, align 1
  %conv = zext i8 %0 to i32
  switch i32 %conv, label %sw.default [
    i32 7, label %sw.bb
    i32 2, label %sw.bb6
    i32 14, label %sw.bb20
    i32 11, label %sw.bb24
    i32 9, label %sw.bb38
    i32 13, label %sw.bb64
    i32 1, label %sw.bb79
    i32 8, label %sw.bb94
    i32 3, label %sw.bb109
    i32 6, label %sw.bb124
    i32 5, label %sw.bb139
    i32 10, label %sw.bb154
    i32 4, label %sw.bb169
    i32 0, label %sw.bb184
    i32 12, label %sw.bb204
  ]

sw.bb:                                            ; preds = %entry
  %1 = load i8, i8* %character.addr, align 1
  %conv1 = zext i8 %1 to i32
  %and = and i32 %conv1, -128
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %sw.bb
  %call = call i16** @__ctype_b_loc() #6
  %2 = load i16*, i16** %call, align 8
  %3 = load i8, i8* %character.addr, align 1
  %conv3 = zext i8 %3 to i32
  %idxprom = sext i32 %conv3 to i64
  %arrayidx = getelementptr inbounds i16, i16* %2, i64 %idxprom
  %4 = load i16, i16* %arrayidx, align 2
  %conv4 = zext i16 %4 to i32
  %and5 = and i32 %conv4, 8
  %tobool = icmp ne i32 %and5, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb
  %5 = phi i1 [ false, %sw.bb ], [ %tobool, %land.rhs ]
  store i1 %5, i1* %retval, align 1
  br label %return

sw.bb6:                                           ; preds = %entry
  %6 = load i8, i8* %character.addr, align 1
  %conv7 = zext i8 %6 to i32
  %and8 = and i32 %conv7, -128
  %cmp9 = icmp eq i32 %and8, 0
  br i1 %cmp9, label %land.rhs11, label %land.end19

land.rhs11:                                       ; preds = %sw.bb6
  %call12 = call i16** @__ctype_b_loc() #6
  %7 = load i16*, i16** %call12, align 8
  %8 = load i8, i8* %character.addr, align 1
  %conv13 = zext i8 %8 to i32
  %idxprom14 = sext i32 %conv13 to i64
  %arrayidx15 = getelementptr inbounds i16, i16* %7, i64 %idxprom14
  %9 = load i16, i16* %arrayidx15, align 2
  %conv16 = zext i16 %9 to i32
  %and17 = and i32 %conv16, 1024
  %tobool18 = icmp ne i32 %and17, 0
  br label %land.end19

land.end19:                                       ; preds = %land.rhs11, %sw.bb6
  %10 = phi i1 [ false, %sw.bb6 ], [ %tobool18, %land.rhs11 ]
  store i1 %10, i1* %retval, align 1
  br label %return

sw.bb20:                                          ; preds = %entry
  %11 = load i8, i8* %character.addr, align 1
  %conv21 = zext i8 %11 to i64
  %cmp22 = icmp ult i64 %conv21, 128
  store i1 %cmp22, i1* %retval, align 1
  br label %return

sw.bb24:                                          ; preds = %entry
  %12 = load i8, i8* @PL_in_utf8_CTYPE_locale, align 1
  %tobool25 = trunc i8 %12 to i1
  br i1 %tobool25, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.bb24
  %13 = load i8, i8* %character.addr, align 1
  %idxprom27 = zext i8 %13 to i64
  %arrayidx28 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom27
  %14 = load i32, i32* %arrayidx28, align 4
  %and29 = and i32 %14, 2048
  %tobool30 = icmp ne i32 %and29, 0
  %15 = zext i1 %tobool30 to i64
  %cond = select i1 %tobool30, i32 1, i32 0
  br label %cond.end

cond.false:                                       ; preds = %sw.bb24
  %16 = load i8, i8* %character.addr, align 1
  %idxprom31 = zext i8 %16 to i64
  %arrayidx32 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom31
  %17 = load i32, i32* %arrayidx32, align 4
  %and33 = and i32 %17, 18432
  %cmp34 = icmp eq i32 %and33, 18432
  %land.ext = zext i1 %cmp34 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond36 = phi i32 [ %cond, %cond.true ], [ %land.ext, %cond.false ]
  %tobool37 = icmp ne i32 %cond36, 0
  store i1 %tobool37, i1* %retval, align 1
  br label %return

sw.bb38:                                          ; preds = %entry
  %18 = load i8, i8* %character.addr, align 1
  %conv39 = zext i8 %18 to i32
  %and40 = and i32 %conv39, -128
  %cmp41 = icmp eq i32 %and40, 0
  br i1 %cmp41, label %land.lhs.true, label %lor.rhs

land.lhs.true:                                    ; preds = %sw.bb38
  %call43 = call i16** @__ctype_b_loc() #6
  %19 = load i16*, i16** %call43, align 8
  %20 = load i8, i8* %character.addr, align 1
  %conv44 = zext i8 %20 to i32
  %idxprom45 = sext i32 %conv44 to i64
  %arrayidx46 = getelementptr inbounds i16, i16* %19, i64 %idxprom45
  %21 = load i16, i16* %arrayidx46, align 2
  %conv47 = zext i16 %21 to i32
  %and48 = and i32 %conv47, 512
  %tobool49 = icmp ne i32 %and48, 0
  br i1 %tobool49, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.lhs.true, %sw.bb38
  %22 = load i8, i8* %character.addr, align 1
  %conv50 = zext i8 %22 to i32
  %and51 = and i32 %conv50, -128
  %cmp52 = icmp eq i32 %and51, 0
  br i1 %cmp52, label %land.rhs54, label %land.end62

land.rhs54:                                       ; preds = %lor.rhs
  %call55 = call i16** @__ctype_b_loc() #6
  %23 = load i16*, i16** %call55, align 8
  %24 = load i8, i8* %character.addr, align 1
  %conv56 = zext i8 %24 to i32
  %idxprom57 = sext i32 %conv56 to i64
  %arrayidx58 = getelementptr inbounds i16, i16* %23, i64 %idxprom57
  %25 = load i16, i16* %arrayidx58, align 2
  %conv59 = zext i16 %25 to i32
  %and60 = and i32 %conv59, 256
  %tobool61 = icmp ne i32 %and60, 0
  br label %land.end62

land.end62:                                       ; preds = %land.rhs54, %lor.rhs
  %26 = phi i1 [ false, %lor.rhs ], [ %tobool61, %land.rhs54 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end62, %land.lhs.true
  %27 = phi i1 [ true, %land.lhs.true ], [ %26, %land.end62 ]
  store i1 %27, i1* %retval, align 1
  br label %return

sw.bb64:                                          ; preds = %entry
  %28 = load i8, i8* %character.addr, align 1
  %conv65 = zext i8 %28 to i32
  %and66 = and i32 %conv65, -128
  %cmp67 = icmp eq i32 %and66, 0
  br i1 %cmp67, label %land.rhs69, label %land.end77

land.rhs69:                                       ; preds = %sw.bb64
  %call70 = call i16** @__ctype_b_loc() #6
  %29 = load i16*, i16** %call70, align 8
  %30 = load i8, i8* %character.addr, align 1
  %conv71 = zext i8 %30 to i32
  %idxprom72 = sext i32 %conv71 to i64
  %arrayidx73 = getelementptr inbounds i16, i16* %29, i64 %idxprom72
  %31 = load i16, i16* %arrayidx73, align 2
  %conv74 = zext i16 %31 to i32
  %and75 = and i32 %conv74, 2
  %tobool76 = icmp ne i32 %and75, 0
  br label %land.end77

land.end77:                                       ; preds = %land.rhs69, %sw.bb64
  %32 = phi i1 [ false, %sw.bb64 ], [ %tobool76, %land.rhs69 ]
  store i1 %32, i1* %retval, align 1
  br label %return

sw.bb79:                                          ; preds = %entry
  %33 = load i8, i8* %character.addr, align 1
  %conv80 = zext i8 %33 to i32
  %and81 = and i32 %conv80, -128
  %cmp82 = icmp eq i32 %and81, 0
  br i1 %cmp82, label %land.rhs84, label %land.end92

land.rhs84:                                       ; preds = %sw.bb79
  %call85 = call i16** @__ctype_b_loc() #6
  %34 = load i16*, i16** %call85, align 8
  %35 = load i8, i8* %character.addr, align 1
  %conv86 = zext i8 %35 to i32
  %idxprom87 = sext i32 %conv86 to i64
  %arrayidx88 = getelementptr inbounds i16, i16* %34, i64 %idxprom87
  %36 = load i16, i16* %arrayidx88, align 2
  %conv89 = zext i16 %36 to i32
  %and90 = and i32 %conv89, 2048
  %tobool91 = icmp ne i32 %and90, 0
  br label %land.end92

land.end92:                                       ; preds = %land.rhs84, %sw.bb79
  %37 = phi i1 [ false, %sw.bb79 ], [ %tobool91, %land.rhs84 ]
  store i1 %37, i1* %retval, align 1
  br label %return

sw.bb94:                                          ; preds = %entry
  %38 = load i8, i8* %character.addr, align 1
  %conv95 = zext i8 %38 to i32
  %and96 = and i32 %conv95, -128
  %cmp97 = icmp eq i32 %and96, 0
  br i1 %cmp97, label %land.rhs99, label %land.end107

land.rhs99:                                       ; preds = %sw.bb94
  %call100 = call i16** @__ctype_b_loc() #6
  %39 = load i16*, i16** %call100, align 8
  %40 = load i8, i8* %character.addr, align 1
  %conv101 = zext i8 %40 to i32
  %idxprom102 = sext i32 %conv101 to i64
  %arrayidx103 = getelementptr inbounds i16, i16* %39, i64 %idxprom102
  %41 = load i16, i16* %arrayidx103, align 2
  %conv104 = zext i16 %41 to i32
  %and105 = and i32 %conv104, 32768
  %tobool106 = icmp ne i32 %and105, 0
  br label %land.end107

land.end107:                                      ; preds = %land.rhs99, %sw.bb94
  %42 = phi i1 [ false, %sw.bb94 ], [ %tobool106, %land.rhs99 ]
  store i1 %42, i1* %retval, align 1
  br label %return

sw.bb109:                                         ; preds = %entry
  %43 = load i8, i8* %character.addr, align 1
  %conv110 = zext i8 %43 to i32
  %and111 = and i32 %conv110, -128
  %cmp112 = icmp eq i32 %and111, 0
  br i1 %cmp112, label %land.rhs114, label %land.end122

land.rhs114:                                      ; preds = %sw.bb109
  %call115 = call i16** @__ctype_b_loc() #6
  %44 = load i16*, i16** %call115, align 8
  %45 = load i8, i8* %character.addr, align 1
  %conv116 = zext i8 %45 to i32
  %idxprom117 = sext i32 %conv116 to i64
  %arrayidx118 = getelementptr inbounds i16, i16* %44, i64 %idxprom117
  %46 = load i16, i16* %arrayidx118, align 2
  %conv119 = zext i16 %46 to i32
  %and120 = and i32 %conv119, 512
  %tobool121 = icmp ne i32 %and120, 0
  br label %land.end122

land.end122:                                      ; preds = %land.rhs114, %sw.bb109
  %47 = phi i1 [ false, %sw.bb109 ], [ %tobool121, %land.rhs114 ]
  store i1 %47, i1* %retval, align 1
  br label %return

sw.bb124:                                         ; preds = %entry
  %48 = load i8, i8* %character.addr, align 1
  %conv125 = zext i8 %48 to i32
  %and126 = and i32 %conv125, -128
  %cmp127 = icmp eq i32 %and126, 0
  br i1 %cmp127, label %land.rhs129, label %land.end137

land.rhs129:                                      ; preds = %sw.bb124
  %call130 = call i16** @__ctype_b_loc() #6
  %49 = load i16*, i16** %call130, align 8
  %50 = load i8, i8* %character.addr, align 1
  %conv131 = zext i8 %50 to i32
  %idxprom132 = sext i32 %conv131 to i64
  %arrayidx133 = getelementptr inbounds i16, i16* %49, i64 %idxprom132
  %51 = load i16, i16* %arrayidx133, align 2
  %conv134 = zext i16 %51 to i32
  %and135 = and i32 %conv134, 16384
  %tobool136 = icmp ne i32 %and135, 0
  br label %land.end137

land.end137:                                      ; preds = %land.rhs129, %sw.bb124
  %52 = phi i1 [ false, %sw.bb124 ], [ %tobool136, %land.rhs129 ]
  store i1 %52, i1* %retval, align 1
  br label %return

sw.bb139:                                         ; preds = %entry
  %53 = load i8, i8* %character.addr, align 1
  %conv140 = zext i8 %53 to i32
  %and141 = and i32 %conv140, -128
  %cmp142 = icmp eq i32 %and141, 0
  br i1 %cmp142, label %land.rhs144, label %land.end152

land.rhs144:                                      ; preds = %sw.bb139
  %call145 = call i16** @__ctype_b_loc() #6
  %54 = load i16*, i16** %call145, align 8
  %55 = load i8, i8* %character.addr, align 1
  %conv146 = zext i8 %55 to i32
  %idxprom147 = sext i32 %conv146 to i64
  %arrayidx148 = getelementptr inbounds i16, i16* %54, i64 %idxprom147
  %56 = load i16, i16* %arrayidx148, align 2
  %conv149 = zext i16 %56 to i32
  %and150 = and i32 %conv149, 4
  %tobool151 = icmp ne i32 %and150, 0
  br label %land.end152

land.end152:                                      ; preds = %land.rhs144, %sw.bb139
  %57 = phi i1 [ false, %sw.bb139 ], [ %tobool151, %land.rhs144 ]
  store i1 %57, i1* %retval, align 1
  br label %return

sw.bb154:                                         ; preds = %entry
  %58 = load i8, i8* %character.addr, align 1
  %conv155 = zext i8 %58 to i32
  %and156 = and i32 %conv155, -128
  %cmp157 = icmp eq i32 %and156, 0
  br i1 %cmp157, label %land.rhs159, label %land.end167

land.rhs159:                                      ; preds = %sw.bb154
  %call160 = call i16** @__ctype_b_loc() #6
  %59 = load i16*, i16** %call160, align 8
  %60 = load i8, i8* %character.addr, align 1
  %conv161 = zext i8 %60 to i32
  %idxprom162 = sext i32 %conv161 to i64
  %arrayidx163 = getelementptr inbounds i16, i16* %59, i64 %idxprom162
  %61 = load i16, i16* %arrayidx163, align 2
  %conv164 = zext i16 %61 to i32
  %and165 = and i32 %conv164, 8192
  %tobool166 = icmp ne i32 %and165, 0
  br label %land.end167

land.end167:                                      ; preds = %land.rhs159, %sw.bb154
  %62 = phi i1 [ false, %sw.bb154 ], [ %tobool166, %land.rhs159 ]
  store i1 %62, i1* %retval, align 1
  br label %return

sw.bb169:                                         ; preds = %entry
  %63 = load i8, i8* %character.addr, align 1
  %conv170 = zext i8 %63 to i32
  %and171 = and i32 %conv170, -128
  %cmp172 = icmp eq i32 %and171, 0
  br i1 %cmp172, label %land.rhs174, label %land.end182

land.rhs174:                                      ; preds = %sw.bb169
  %call175 = call i16** @__ctype_b_loc() #6
  %64 = load i16*, i16** %call175, align 8
  %65 = load i8, i8* %character.addr, align 1
  %conv176 = zext i8 %65 to i32
  %idxprom177 = sext i32 %conv176 to i64
  %arrayidx178 = getelementptr inbounds i16, i16* %64, i64 %idxprom177
  %66 = load i16, i16* %arrayidx178, align 2
  %conv179 = zext i16 %66 to i32
  %and180 = and i32 %conv179, 256
  %tobool181 = icmp ne i32 %and180, 0
  br label %land.end182

land.end182:                                      ; preds = %land.rhs174, %sw.bb169
  %67 = phi i1 [ false, %sw.bb169 ], [ %tobool181, %land.rhs174 ]
  store i1 %67, i1* %retval, align 1
  br label %return

sw.bb184:                                         ; preds = %entry
  %68 = load i8, i8* %character.addr, align 1
  %conv185 = zext i8 %68 to i32
  %and186 = and i32 %conv185, -128
  %cmp187 = icmp eq i32 %and186, 0
  br i1 %cmp187, label %land.rhs189, label %land.end202

land.rhs189:                                      ; preds = %sw.bb184
  %call190 = call i16** @__ctype_b_loc() #6
  %69 = load i16*, i16** %call190, align 8
  %70 = load i8, i8* %character.addr, align 1
  %conv191 = zext i8 %70 to i32
  %idxprom192 = sext i32 %conv191 to i64
  %arrayidx193 = getelementptr inbounds i16, i16* %69, i64 %idxprom192
  %71 = load i16, i16* %arrayidx193, align 2
  %conv194 = zext i16 %71 to i32
  %and195 = and i32 %conv194, 8
  %tobool196 = icmp ne i32 %and195, 0
  br i1 %tobool196, label %lor.end201, label %lor.rhs197

lor.rhs197:                                       ; preds = %land.rhs189
  %72 = load i8, i8* %character.addr, align 1
  %conv198 = zext i8 %72 to i32
  %cmp199 = icmp eq i32 %conv198, 95
  br label %lor.end201

lor.end201:                                       ; preds = %lor.rhs197, %land.rhs189
  %73 = phi i1 [ true, %land.rhs189 ], [ %cmp199, %lor.rhs197 ]
  br label %land.end202

land.end202:                                      ; preds = %lor.end201, %sw.bb184
  %74 = phi i1 [ false, %sw.bb184 ], [ %73, %lor.end201 ]
  store i1 %74, i1* %retval, align 1
  br label %return

sw.bb204:                                         ; preds = %entry
  %75 = load i8, i8* %character.addr, align 1
  %conv205 = zext i8 %75 to i32
  %and206 = and i32 %conv205, -128
  %cmp207 = icmp eq i32 %and206, 0
  br i1 %cmp207, label %land.rhs209, label %land.end217

land.rhs209:                                      ; preds = %sw.bb204
  %call210 = call i16** @__ctype_b_loc() #6
  %76 = load i16*, i16** %call210, align 8
  %77 = load i8, i8* %character.addr, align 1
  %conv211 = zext i8 %77 to i32
  %idxprom212 = sext i32 %conv211 to i64
  %arrayidx213 = getelementptr inbounds i16, i16* %76, i64 %idxprom212
  %78 = load i16, i16* %arrayidx213, align 2
  %conv214 = zext i16 %78 to i32
  %and215 = and i32 %conv214, 4096
  %tobool216 = icmp ne i32 %and215, 0
  br label %land.end217

land.end217:                                      ; preds = %land.rhs209, %sw.bb204
  %79 = phi i1 [ false, %sw.bb204 ], [ %tobool216, %land.rhs209 ]
  store i1 %79, i1* %retval, align 1
  br label %return

sw.default:                                       ; preds = %entry
  %80 = load i8, i8* %classnum.addr, align 1
  %conv219 = zext i8 %80 to i32
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.9, i64 0, i64 0), i32 %conv219)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  store i1 false, i1* %retval, align 1
  br label %return

return:                                           ; preds = %sw.epilog, %land.end217, %land.end202, %land.end182, %land.end167, %land.end152, %land.end137, %land.end122, %land.end107, %land.end92, %land.end77, %lor.end, %cond.end, %sw.bb20, %land.end19, %land.end
  %81 = load i1, i1* %retval, align 1
  ret i1 %81
}

declare dso_local i64 @Perl_swash_fetch(%struct.sv*, i8*, i1 zeroext) #2

declare dso_local void @Perl_push_scope() #2

declare dso_local void @Perl_save_strlen(i64*) #2

declare dso_local %struct.sv* @Perl_sv_2mortal(%struct.sv*) #2

declare dso_local i64 @Perl__to_utf8_fold_flags(i8*, i8*, i64*, i8 zeroext) #2

declare dso_local i64 @Perl__to_fold_latin1(i8 zeroext, i8*, i64*, i32) #2

declare dso_local i8* @Perl_hv_common_key_len(%struct.hv*, i8*, i32, i32, %struct.sv*, i32) #2

declare dso_local i64 @Perl_sv_2iv_flags(%struct.sv*, i32) #2

declare dso_local void @Perl_free_tmps() #2

declare dso_local void @Perl_pop_scope() #2

declare dso_local %struct.sv* @Perl__get_regclass_nonbitmap_data(%struct.regexp*, %struct.regnode*, i1 zeroext, %struct.sv**, %struct.sv**, %struct.sv*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @S_append_utf8_from_native_byte(i8 zeroext %byte, i8** %dest) #0 {
entry:
  %byte.addr = alloca i8, align 1
  %dest.addr = alloca i8**, align 8
  store i8 %byte, i8* %byte.addr, align 1
  store i8** %dest, i8*** %dest.addr, align 8
  %0 = load i8, i8* %byte.addr, align 1
  %conv = zext i8 %0 to i64
  %cmp = icmp ult i64 %conv, 128
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i8, i8* %byte.addr, align 1
  %2 = load i8**, i8*** %dest.addr, align 8
  %3 = load i8*, i8** %2, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1
  store i8* %incdec.ptr, i8** %2, align 8
  store i8 %1, i8* %3, align 1
  br label %if.end

if.else:                                          ; preds = %entry
  %4 = load i8, i8* %byte.addr, align 1
  %conv2 = zext i8 %4 to i32
  %shr = ashr i32 %conv2, 6
  %or = or i32 %shr, 192
  %conv3 = trunc i32 %or to i8
  %5 = load i8**, i8*** %dest.addr, align 8
  %6 = load i8*, i8** %5, align 8
  %incdec.ptr4 = getelementptr inbounds i8, i8* %6, i32 1
  store i8* %incdec.ptr4, i8** %5, align 8
  store i8 %conv3, i8* %6, align 1
  %7 = load i8, i8* %byte.addr, align 1
  %conv5 = zext i8 %7 to i32
  %and = and i32 %conv5, 63
  %or6 = or i32 %and, 128
  %conv7 = trunc i32 %or6 to i8
  %8 = load i8**, i8*** %dest.addr, align 8
  %9 = load i8*, i8** %8, align 8
  %incdec.ptr8 = getelementptr inbounds i8, i8* %9, i32 1
  store i8* %incdec.ptr8, i8** %8, align 8
  store i8 %conv7, i8* %9, align 1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S__invlist_contains_cp(%struct.sv* %invlist, i64 %cp) #0 {
entry:
  %invlist.addr = alloca %struct.sv*, align 8
  %cp.addr = alloca i64, align 8
  %index = alloca i64, align 8
  store %struct.sv* %invlist, %struct.sv** %invlist.addr, align 8
  store i64 %cp, i64* %cp.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %invlist.addr, align 8
  %1 = load i64, i64* %cp.addr, align 8
  %call = call i64 @Perl__invlist_search(%struct.sv* %0, i64 %1)
  store i64 %call, i64* %index, align 8
  %2 = load i64, i64* %index, align 8
  %cmp = icmp sge i64 %2, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %3 = load i64, i64* %index, align 8
  %and = and i64 %3, 1
  %tobool = icmp ne i64 %and, 0
  %lnot = xor i1 %tobool, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ]
  ret i1 %4
}

declare dso_local void @Perl_warner(i32, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_backup_one_SB(i8* %strbeg, i8** %curpos, i1 zeroext %utf8_target) #0 {
entry:
  %retval = alloca i32, align 4
  %strbeg.addr = alloca i8*, align 8
  %curpos.addr = alloca i8**, align 8
  %utf8_target.addr = alloca i8, align 1
  %sb = alloca i32, align 4
  %prev_char_pos = alloca i8*, align 8
  %prev_prev_char_pos = alloca i8*, align 8
  store i8* %strbeg, i8** %strbeg.addr, align 8
  store i8** %curpos, i8*** %curpos.addr, align 8
  %frombool = zext i1 %utf8_target to i8
  store i8 %frombool, i8* %utf8_target.addr, align 1
  %0 = load i8**, i8*** %curpos.addr, align 8
  %1 = load i8*, i8** %0, align 8
  %2 = load i8*, i8** %strbeg.addr, align 8
  %cmp = icmp ult i8* %1, %2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 4, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %3 = load i8, i8* %utf8_target.addr, align 1
  %tobool = trunc i8 %3 to i1
  br i1 %tobool, label %if.then1, label %if.else14

if.then1:                                         ; preds = %if.end
  %4 = load i8**, i8*** %curpos.addr, align 8
  %5 = load i8*, i8** %4, align 8
  %6 = load i8*, i8** %strbeg.addr, align 8
  %call = call i8* @S_reghopmaybe3(i8* %5, i64 -1, i8* %6)
  store i8* %call, i8** %prev_char_pos, align 8
  %7 = load i8*, i8** %prev_char_pos, align 8
  %tobool2 = icmp ne i8* %7, null
  br i1 %tobool2, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.then1
  store i32 4, i32* %retval, align 4
  br label %return

if.end4:                                          ; preds = %if.then1
  br label %do.body

do.body:                                          ; preds = %lor.end, %if.end4
  %8 = load i8*, i8** %prev_char_pos, align 8
  %9 = load i8*, i8** %strbeg.addr, align 8
  %call5 = call i8* @S_reghopmaybe3(i8* %8, i64 -1, i8* %9)
  store i8* %call5, i8** %prev_prev_char_pos, align 8
  %tobool6 = icmp ne i8* %call5, null
  br i1 %tobool6, label %if.then7, label %if.else

if.then7:                                         ; preds = %do.body
  %10 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %11 = load i8*, i8** %prev_prev_char_pos, align 8
  %12 = load i8*, i8** %prev_char_pos, align 8
  %13 = load i8*, i8** %prev_prev_char_pos, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %12 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %13 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call8 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %14 = zext i1 %call8 to i64
  %cond = select i1 %call8, i32 0, i32 -8161
  %call9 = call i64 @Perl_utf8n_to_uvchr(i8* %11, i64 %sub.ptr.sub, i64* null, i32 %cond)
  %call10 = call i64 @Perl__invlist_search(%struct.sv* %10, i64 %call9)
  %arrayidx = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call10
  %15 = load i32, i32* %arrayidx, align 4
  store i32 %15, i32* %sb, align 4
  %16 = load i8*, i8** %prev_char_pos, align 8
  %17 = load i8**, i8*** %curpos.addr, align 8
  store i8* %16, i8** %17, align 8
  %18 = load i8*, i8** %prev_prev_char_pos, align 8
  store i8* %18, i8** %prev_char_pos, align 8
  br label %if.end11

if.else:                                          ; preds = %do.body
  %19 = load i8*, i8** %strbeg.addr, align 8
  %20 = load i8**, i8*** %curpos.addr, align 8
  store i8* %19, i8** %20, align 8
  store i32 4, i32* %retval, align 4
  br label %return

if.end11:                                         ; preds = %if.then7
  br label %do.cond

do.cond:                                          ; preds = %if.end11
  %21 = load i32, i32* %sb, align 4
  %cmp12 = icmp eq i32 %21, 5
  br i1 %cmp12, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %do.cond
  %22 = load i32, i32* %sb, align 4
  %cmp13 = icmp eq i32 %22, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %do.cond
  %23 = phi i1 [ true, %do.cond ], [ %cmp13, %lor.rhs ]
  br i1 %23, label %do.body, label %do.end

do.end:                                           ; preds = %lor.end
  br label %if.end30

if.else14:                                        ; preds = %if.end
  br label %do.body15

do.body15:                                        ; preds = %lor.end28, %if.else14
  %24 = load i8**, i8*** %curpos.addr, align 8
  %25 = load i8*, i8** %24, align 8
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 -2
  %26 = load i8*, i8** %strbeg.addr, align 8
  %cmp16 = icmp ult i8* %add.ptr, %26
  br i1 %cmp16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %do.body15
  %27 = load i8*, i8** %strbeg.addr, align 8
  %28 = load i8**, i8*** %curpos.addr, align 8
  store i8* %27, i8** %28, align 8
  store i32 4, i32* %retval, align 4
  br label %return

if.end18:                                         ; preds = %do.body15
  %29 = load i8**, i8*** %curpos.addr, align 8
  %30 = load i8*, i8** %29, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %30, i32 -1
  store i8* %incdec.ptr, i8** %29, align 8
  %31 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %32 = load i8**, i8*** %curpos.addr, align 8
  %33 = load i8*, i8** %32, align 8
  %add.ptr19 = getelementptr inbounds i8, i8* %33, i64 -1
  %34 = load i8, i8* %add.ptr19, align 1
  %conv = zext i8 %34 to i64
  %call20 = call i64 @Perl__invlist_search(%struct.sv* %31, i64 %conv)
  %arrayidx21 = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call20
  %35 = load i32, i32* %arrayidx21, align 4
  store i32 %35, i32* %sb, align 4
  br label %do.cond22

do.cond22:                                        ; preds = %if.end18
  %36 = load i32, i32* %sb, align 4
  %cmp23 = icmp eq i32 %36, 5
  br i1 %cmp23, label %lor.end28, label %lor.rhs25

lor.rhs25:                                        ; preds = %do.cond22
  %37 = load i32, i32* %sb, align 4
  %cmp26 = icmp eq i32 %37, 6
  br label %lor.end28

lor.end28:                                        ; preds = %lor.rhs25, %do.cond22
  %38 = phi i1 [ true, %do.cond22 ], [ %cmp26, %lor.rhs25 ]
  br i1 %38, label %do.body15, label %do.end29

do.end29:                                         ; preds = %lor.end28
  br label %if.end30

if.end30:                                         ; preds = %do.end29, %do.end
  %39 = load i32, i32* %sb, align 4
  store i32 %39, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end30, %if.then17, %if.else, %if.then3, %if.then
  %40 = load i32, i32* %retval, align 4
  ret i32 %40
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_advance_one_SB(i8** %curpos, i8* %strend, i1 zeroext %utf8_target) #0 {
entry:
  %retval = alloca i32, align 4
  %curpos.addr = alloca i8**, align 8
  %strend.addr = alloca i8*, align 8
  %utf8_target.addr = alloca i8, align 1
  %sb = alloca i32, align 4
  store i8** %curpos, i8*** %curpos.addr, align 8
  store i8* %strend, i8** %strend.addr, align 8
  %frombool = zext i1 %utf8_target to i8
  store i8 %frombool, i8* %utf8_target.addr, align 1
  %0 = load i8**, i8*** %curpos.addr, align 8
  %1 = load i8*, i8** %0, align 8
  %2 = load i8*, i8** %strend.addr, align 8
  %cmp = icmp uge i8* %1, %2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 4, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %3 = load i8, i8* %utf8_target.addr, align 1
  %tobool = trunc i8 %3 to i1
  br i1 %tobool, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %lor.end, %if.then1
  %4 = load i8**, i8*** %curpos.addr, align 8
  %5 = load i8*, i8** %4, align 8
  %6 = load i8, i8* %5, align 1
  %idxprom = zext i8 %6 to i64
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom
  %7 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %7 to i32
  %8 = load i8**, i8*** %curpos.addr, align 8
  %9 = load i8*, i8** %8, align 8
  %idx.ext = sext i32 %conv to i64
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 %idx.ext
  store i8* %add.ptr, i8** %8, align 8
  %10 = load i8**, i8*** %curpos.addr, align 8
  %11 = load i8*, i8** %10, align 8
  %12 = load i8*, i8** %strend.addr, align 8
  %cmp2 = icmp uge i8* %11, %12
  br i1 %cmp2, label %if.then4, label %if.end5

if.then4:                                         ; preds = %do.body
  store i32 4, i32* %retval, align 4
  br label %return

if.end5:                                          ; preds = %do.body
  %13 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %14 = load i8**, i8*** %curpos.addr, align 8
  %15 = load i8*, i8** %14, align 8
  %16 = load i8*, i8** %strend.addr, align 8
  %17 = load i8**, i8*** %curpos.addr, align 8
  %18 = load i8*, i8** %17, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %16 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %18 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %19 = zext i1 %call to i64
  %cond = select i1 %call, i32 0, i32 -8161
  %call7 = call i64 @Perl_utf8n_to_uvchr(i8* %15, i64 %sub.ptr.sub, i64* null, i32 %cond)
  %call8 = call i64 @Perl__invlist_search(%struct.sv* %13, i64 %call7)
  %arrayidx9 = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call8
  %20 = load i32, i32* %arrayidx9, align 4
  store i32 %20, i32* %sb, align 4
  br label %do.cond

do.cond:                                          ; preds = %if.end5
  %21 = load i32, i32* %sb, align 4
  %cmp10 = icmp eq i32 %21, 5
  br i1 %cmp10, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %do.cond
  %22 = load i32, i32* %sb, align 4
  %cmp12 = icmp eq i32 %22, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %do.cond
  %23 = phi i1 [ true, %do.cond ], [ %cmp12, %lor.rhs ]
  br i1 %23, label %do.body, label %do.end

do.end:                                           ; preds = %lor.end
  br label %if.end30

if.else:                                          ; preds = %if.end
  br label %do.body14

do.body14:                                        ; preds = %lor.end28, %if.else
  %24 = load i8**, i8*** %curpos.addr, align 8
  %25 = load i8*, i8** %24, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr, i8** %24, align 8
  %26 = load i8**, i8*** %curpos.addr, align 8
  %27 = load i8*, i8** %26, align 8
  %28 = load i8*, i8** %strend.addr, align 8
  %cmp15 = icmp uge i8* %27, %28
  br i1 %cmp15, label %if.then17, label %if.end18

if.then17:                                        ; preds = %do.body14
  store i32 4, i32* %retval, align 4
  br label %return

if.end18:                                         ; preds = %do.body14
  %29 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %30 = load i8**, i8*** %curpos.addr, align 8
  %31 = load i8*, i8** %30, align 8
  %32 = load i8, i8* %31, align 1
  %conv19 = zext i8 %32 to i64
  %call20 = call i64 @Perl__invlist_search(%struct.sv* %29, i64 %conv19)
  %arrayidx21 = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call20
  %33 = load i32, i32* %arrayidx21, align 4
  store i32 %33, i32* %sb, align 4
  br label %do.cond22

do.cond22:                                        ; preds = %if.end18
  %34 = load i32, i32* %sb, align 4
  %cmp23 = icmp eq i32 %34, 5
  br i1 %cmp23, label %lor.end28, label %lor.rhs25

lor.rhs25:                                        ; preds = %do.cond22
  %35 = load i32, i32* %sb, align 4
  %cmp26 = icmp eq i32 %35, 6
  br label %lor.end28

lor.end28:                                        ; preds = %lor.rhs25, %do.cond22
  %36 = phi i1 [ true, %do.cond22 ], [ %cmp26, %lor.rhs25 ]
  br i1 %36, label %do.body14, label %do.end29

do.end29:                                         ; preds = %lor.end28
  br label %if.end30

if.end30:                                         ; preds = %do.end29, %do.end
  %37 = load i32, i32* %sb, align 4
  store i32 %37, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end30, %if.then17, %if.then4, %if.then
  %38 = load i32, i32* %retval, align 4
  ret i32 %38
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_backup_one_WB(i32* %previous, i8* %strbeg, i8** %curpos, i1 zeroext %utf8_target) #0 {
entry:
  %retval = alloca i32, align 4
  %previous.addr = alloca i32*, align 8
  %strbeg.addr = alloca i8*, align 8
  %curpos.addr = alloca i8**, align 8
  %utf8_target.addr = alloca i8, align 1
  %wb = alloca i32, align 4
  %prev_char_pos = alloca i8*, align 8
  %prev_prev_char_pos = alloca i8*, align 8
  store i32* %previous, i32** %previous.addr, align 8
  store i8* %strbeg, i8** %strbeg.addr, align 8
  store i8** %curpos, i8*** %curpos.addr, align 8
  %frombool = zext i1 %utf8_target to i8
  store i8 %frombool, i8* %utf8_target.addr, align 1
  %0 = load i32*, i32** %previous.addr, align 8
  %1 = load i32, i32* %0, align 4
  %cmp = icmp ne i32 %1, 18
  br i1 %cmp, label %if.then, label %if.end4

if.then:                                          ; preds = %entry
  %2 = load i32*, i32** %previous.addr, align 8
  %3 = load i32, i32* %2, align 4
  store i32 %3, i32* %wb, align 4
  %4 = load i32*, i32** %previous.addr, align 8
  store i32 18, i32* %4, align 4
  %5 = load i32, i32* %wb, align 4
  %cmp1 = icmp ne i32 %5, 5
  br i1 %cmp1, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %6 = load i32, i32* %wb, align 4
  %cmp2 = icmp ne i32 %6, 7
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %land.lhs.true
  %7 = load i32, i32* %wb, align 4
  store i32 %7, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true, %if.then
  br label %if.end4

if.end4:                                          ; preds = %if.end, %entry
  %8 = load i8**, i8*** %curpos.addr, align 8
  %9 = load i8*, i8** %8, align 8
  %10 = load i8*, i8** %strbeg.addr, align 8
  %cmp5 = icmp ult i8* %9, %10
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end4
  store i32 4, i32* %retval, align 4
  br label %return

if.end7:                                          ; preds = %if.end4
  %11 = load i8, i8* %utf8_target.addr, align 1
  %tobool = trunc i8 %11 to i1
  br i1 %tobool, label %if.then8, label %if.else21

if.then8:                                         ; preds = %if.end7
  %12 = load i8**, i8*** %curpos.addr, align 8
  %13 = load i8*, i8** %12, align 8
  %14 = load i8*, i8** %strbeg.addr, align 8
  %call = call i8* @S_reghopmaybe3(i8* %13, i64 -1, i8* %14)
  store i8* %call, i8** %prev_char_pos, align 8
  %15 = load i8*, i8** %prev_char_pos, align 8
  %tobool9 = icmp ne i8* %15, null
  br i1 %tobool9, label %if.end11, label %if.then10

if.then10:                                        ; preds = %if.then8
  store i32 4, i32* %retval, align 4
  br label %return

if.end11:                                         ; preds = %if.then8
  br label %do.body

do.body:                                          ; preds = %lor.end, %if.end11
  %16 = load i8*, i8** %prev_char_pos, align 8
  %17 = load i8*, i8** %strbeg.addr, align 8
  %call12 = call i8* @S_reghopmaybe3(i8* %16, i64 -1, i8* %17)
  store i8* %call12, i8** %prev_prev_char_pos, align 8
  %tobool13 = icmp ne i8* %call12, null
  br i1 %tobool13, label %if.then14, label %if.else

if.then14:                                        ; preds = %do.body
  %18 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %19 = load i8*, i8** %prev_prev_char_pos, align 8
  %20 = load i8*, i8** %prev_char_pos, align 8
  %21 = load i8*, i8** %prev_prev_char_pos, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %20 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %21 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call15 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %22 = zext i1 %call15 to i64
  %cond = select i1 %call15, i32 0, i32 -8161
  %call16 = call i64 @Perl_utf8n_to_uvchr(i8* %19, i64 %sub.ptr.sub, i64* null, i32 %cond)
  %call17 = call i64 @Perl__invlist_search(%struct.sv* %18, i64 %call16)
  %arrayidx = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call17
  %23 = load i32, i32* %arrayidx, align 4
  store i32 %23, i32* %wb, align 4
  %24 = load i8*, i8** %prev_char_pos, align 8
  %25 = load i8**, i8*** %curpos.addr, align 8
  store i8* %24, i8** %25, align 8
  %26 = load i8*, i8** %prev_prev_char_pos, align 8
  store i8* %26, i8** %prev_char_pos, align 8
  br label %if.end18

if.else:                                          ; preds = %do.body
  %27 = load i8*, i8** %strbeg.addr, align 8
  %28 = load i8**, i8*** %curpos.addr, align 8
  store i8* %27, i8** %28, align 8
  store i32 4, i32* %retval, align 4
  br label %return

if.end18:                                         ; preds = %if.then14
  br label %do.cond

do.cond:                                          ; preds = %if.end18
  %29 = load i32, i32* %wb, align 4
  %cmp19 = icmp eq i32 %29, 5
  br i1 %cmp19, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %do.cond
  %30 = load i32, i32* %wb, align 4
  %cmp20 = icmp eq i32 %30, 7
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %do.cond
  %31 = phi i1 [ true, %do.cond ], [ %cmp20, %lor.rhs ]
  br i1 %31, label %do.body, label %do.end

do.end:                                           ; preds = %lor.end
  br label %if.end37

if.else21:                                        ; preds = %if.end7
  br label %do.body22

do.body22:                                        ; preds = %lor.end35, %if.else21
  %32 = load i8**, i8*** %curpos.addr, align 8
  %33 = load i8*, i8** %32, align 8
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 -2
  %34 = load i8*, i8** %strbeg.addr, align 8
  %cmp23 = icmp ult i8* %add.ptr, %34
  br i1 %cmp23, label %if.then24, label %if.end25

if.then24:                                        ; preds = %do.body22
  %35 = load i8*, i8** %strbeg.addr, align 8
  %36 = load i8**, i8*** %curpos.addr, align 8
  store i8* %35, i8** %36, align 8
  store i32 4, i32* %retval, align 4
  br label %return

if.end25:                                         ; preds = %do.body22
  %37 = load i8**, i8*** %curpos.addr, align 8
  %38 = load i8*, i8** %37, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %38, i32 -1
  store i8* %incdec.ptr, i8** %37, align 8
  %39 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %40 = load i8**, i8*** %curpos.addr, align 8
  %41 = load i8*, i8** %40, align 8
  %add.ptr26 = getelementptr inbounds i8, i8* %41, i64 -1
  %42 = load i8, i8* %add.ptr26, align 1
  %conv = zext i8 %42 to i64
  %call27 = call i64 @Perl__invlist_search(%struct.sv* %39, i64 %conv)
  %arrayidx28 = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call27
  %43 = load i32, i32* %arrayidx28, align 4
  store i32 %43, i32* %wb, align 4
  br label %do.cond29

do.cond29:                                        ; preds = %if.end25
  %44 = load i32, i32* %wb, align 4
  %cmp30 = icmp eq i32 %44, 5
  br i1 %cmp30, label %lor.end35, label %lor.rhs32

lor.rhs32:                                        ; preds = %do.cond29
  %45 = load i32, i32* %wb, align 4
  %cmp33 = icmp eq i32 %45, 7
  br label %lor.end35

lor.end35:                                        ; preds = %lor.rhs32, %do.cond29
  %46 = phi i1 [ true, %do.cond29 ], [ %cmp33, %lor.rhs32 ]
  br i1 %46, label %do.body22, label %do.end36

do.end36:                                         ; preds = %lor.end35
  br label %if.end37

if.end37:                                         ; preds = %do.end36, %do.end
  %47 = load i32, i32* %wb, align 4
  store i32 %47, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end37, %if.then24, %if.else, %if.then10, %if.then6, %if.then3
  %48 = load i32, i32* %retval, align 4
  ret i32 %48
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_advance_one_WB(i8** %curpos, i8* %strend, i1 zeroext %utf8_target) #0 {
entry:
  %retval = alloca i32, align 4
  %curpos.addr = alloca i8**, align 8
  %strend.addr = alloca i8*, align 8
  %utf8_target.addr = alloca i8, align 1
  %wb = alloca i32, align 4
  store i8** %curpos, i8*** %curpos.addr, align 8
  store i8* %strend, i8** %strend.addr, align 8
  %frombool = zext i1 %utf8_target to i8
  store i8 %frombool, i8* %utf8_target.addr, align 1
  %0 = load i8**, i8*** %curpos.addr, align 8
  %1 = load i8*, i8** %0, align 8
  %2 = load i8*, i8** %strend.addr, align 8
  %cmp = icmp uge i8* %1, %2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 4, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %3 = load i8, i8* %utf8_target.addr, align 1
  %tobool = trunc i8 %3 to i1
  br i1 %tobool, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %lor.end, %if.then1
  %4 = load i8**, i8*** %curpos.addr, align 8
  %5 = load i8*, i8** %4, align 8
  %6 = load i8, i8* %5, align 1
  %idxprom = zext i8 %6 to i64
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom
  %7 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %7 to i32
  %8 = load i8**, i8*** %curpos.addr, align 8
  %9 = load i8*, i8** %8, align 8
  %idx.ext = sext i32 %conv to i64
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 %idx.ext
  store i8* %add.ptr, i8** %8, align 8
  %10 = load i8**, i8*** %curpos.addr, align 8
  %11 = load i8*, i8** %10, align 8
  %12 = load i8*, i8** %strend.addr, align 8
  %cmp2 = icmp uge i8* %11, %12
  br i1 %cmp2, label %if.then4, label %if.end5

if.then4:                                         ; preds = %do.body
  store i32 4, i32* %retval, align 4
  br label %return

if.end5:                                          ; preds = %do.body
  %13 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %14 = load i8**, i8*** %curpos.addr, align 8
  %15 = load i8*, i8** %14, align 8
  %16 = load i8*, i8** %strend.addr, align 8
  %17 = load i8**, i8*** %curpos.addr, align 8
  %18 = load i8*, i8** %17, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %16 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %18 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %19 = zext i1 %call to i64
  %cond = select i1 %call, i32 0, i32 -8161
  %call7 = call i64 @Perl_utf8n_to_uvchr(i8* %15, i64 %sub.ptr.sub, i64* null, i32 %cond)
  %call8 = call i64 @Perl__invlist_search(%struct.sv* %13, i64 %call7)
  %arrayidx9 = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call8
  %20 = load i32, i32* %arrayidx9, align 4
  store i32 %20, i32* %wb, align 4
  br label %do.cond

do.cond:                                          ; preds = %if.end5
  %21 = load i32, i32* %wb, align 4
  %cmp10 = icmp eq i32 %21, 5
  br i1 %cmp10, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %do.cond
  %22 = load i32, i32* %wb, align 4
  %cmp12 = icmp eq i32 %22, 7
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %do.cond
  %23 = phi i1 [ true, %do.cond ], [ %cmp12, %lor.rhs ]
  br i1 %23, label %do.body, label %do.end

do.end:                                           ; preds = %lor.end
  br label %if.end30

if.else:                                          ; preds = %if.end
  br label %do.body14

do.body14:                                        ; preds = %lor.end28, %if.else
  %24 = load i8**, i8*** %curpos.addr, align 8
  %25 = load i8*, i8** %24, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr, i8** %24, align 8
  %26 = load i8**, i8*** %curpos.addr, align 8
  %27 = load i8*, i8** %26, align 8
  %28 = load i8*, i8** %strend.addr, align 8
  %cmp15 = icmp uge i8* %27, %28
  br i1 %cmp15, label %if.then17, label %if.end18

if.then17:                                        ; preds = %do.body14
  store i32 4, i32* %retval, align 4
  br label %return

if.end18:                                         ; preds = %do.body14
  %29 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %30 = load i8**, i8*** %curpos.addr, align 8
  %31 = load i8*, i8** %30, align 8
  %32 = load i8, i8* %31, align 1
  %conv19 = zext i8 %32 to i64
  %call20 = call i64 @Perl__invlist_search(%struct.sv* %29, i64 %conv19)
  %arrayidx21 = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call20
  %33 = load i32, i32* %arrayidx21, align 4
  store i32 %33, i32* %wb, align 4
  br label %do.cond22

do.cond22:                                        ; preds = %if.end18
  %34 = load i32, i32* %wb, align 4
  %cmp23 = icmp eq i32 %34, 5
  br i1 %cmp23, label %lor.end28, label %lor.rhs25

lor.rhs25:                                        ; preds = %do.cond22
  %35 = load i32, i32* %wb, align 4
  %cmp26 = icmp eq i32 %35, 7
  br label %lor.end28

lor.end28:                                        ; preds = %lor.rhs25, %do.cond22
  %36 = phi i1 [ true, %do.cond22 ], [ %cmp26, %lor.rhs25 ]
  br i1 %36, label %do.body14, label %do.end29

do.end29:                                         ; preds = %lor.end28
  br label %if.end30

if.end30:                                         ; preds = %do.end29, %do.end
  %37 = load i32, i32* %wb, align 4
  store i32 %37, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end30, %if.then17, %if.then4, %if.then
  %38 = load i32, i32* %retval, align 4
  ret i32 %38
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @S_sv_or_pv_pos_u2b(%struct.sv* %sv, i8* %pv, i64 %pos, i64* %lenp) #0 {
entry:
  %retval = alloca i64, align 8
  %sv.addr = alloca %struct.sv*, align 8
  %pv.addr = alloca i8*, align 8
  %pos.addr = alloca i64, align 8
  %lenp.addr = alloca i64*, align 8
  %hopped = alloca i8*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  store i8* %pv, i8** %pv.addr, align 8
  store i64 %pos, i64* %pos.addr, align 8
  store i64* %lenp, i64** %lenp.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 2
  %1 = load i32, i32* %sv_flags, align 4
  %and = and i32 %1, 2097152
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_flags1 = getelementptr inbounds %struct.sv, %struct.sv* %2, i32 0, i32 2
  %3 = load i32, i32* %sv_flags1, align 4
  %and2 = and i32 %3, 2048
  %tobool3 = icmp ne i32 %and2, 0
  br i1 %tobool3, label %land.lhs.true, label %if.end20

land.lhs.true:                                    ; preds = %lor.lhs.false
  %4 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %4, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u to %struct.sv**
  %5 = load %struct.sv*, %struct.sv** %svu_rv, align 8
  %sv_flags4 = getelementptr inbounds %struct.sv, %struct.sv* %5, i32 0, i32 2
  %6 = load i32, i32* %sv_flags4, align 4
  %and5 = and i32 %6, 1048576
  %tobool6 = icmp ne i32 %and5, 0
  br i1 %tobool6, label %land.lhs.true7, label %if.end20

land.lhs.true7:                                   ; preds = %land.lhs.true
  %7 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_u8 = getelementptr inbounds %struct.sv, %struct.sv* %7, i32 0, i32 3
  %svu_rv9 = bitcast %union.anon* %sv_u8 to %struct.sv**
  %8 = load %struct.sv*, %struct.sv** %svu_rv9, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %8, i32 0, i32 0
  %9 = load i8*, i8** %sv_any, align 8
  %10 = bitcast i8* %9 to %struct.xpvmg*
  %xmg_stash = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %10, i32 0, i32 0
  %11 = load %struct.hv*, %struct.hv** %xmg_stash, align 8
  %sv_flags10 = getelementptr inbounds %struct.hv, %struct.hv* %11, i32 0, i32 2
  %12 = load i32, i32* %sv_flags10, align 4
  %and11 = and i32 %12, 268435456
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %if.then, label %if.end20

if.then:                                          ; preds = %land.lhs.true7, %entry
  %13 = load i8*, i8** %pv.addr, align 8
  %14 = load i64, i64* %pos.addr, align 8
  %conv = trunc i64 %14 to i32
  %call = call i8* @Perl_utf8_hop(i8* %13, i32 %conv)
  store i8* %call, i8** %hopped, align 8
  %15 = load i64*, i64** %lenp.addr, align 8
  %tobool13 = icmp ne i64* %15, null
  br i1 %tobool13, label %if.then14, label %if.end

if.then14:                                        ; preds = %if.then
  %16 = load i8*, i8** %hopped, align 8
  %17 = load i64*, i64** %lenp.addr, align 8
  %18 = load i64, i64* %17, align 8
  %conv15 = trunc i64 %18 to i32
  %call16 = call i8* @Perl_utf8_hop(i8* %16, i32 %conv15)
  %19 = load i8*, i8** %hopped, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %call16 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %19 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %20 = load i64*, i64** %lenp.addr, align 8
  store i64 %sub.ptr.sub, i64* %20, align 8
  br label %if.end

if.end:                                           ; preds = %if.then14, %if.then
  %21 = load i8*, i8** %hopped, align 8
  %22 = load i8*, i8** %pv.addr, align 8
  %sub.ptr.lhs.cast17 = ptrtoint i8* %21 to i64
  %sub.ptr.rhs.cast18 = ptrtoint i8* %22 to i64
  %sub.ptr.sub19 = sub i64 %sub.ptr.lhs.cast17, %sub.ptr.rhs.cast18
  store i64 %sub.ptr.sub19, i64* %retval, align 8
  br label %return

if.end20:                                         ; preds = %land.lhs.true7, %land.lhs.true, %lor.lhs.false
  %23 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %24 = load i64, i64* %pos.addr, align 8
  %25 = load i64*, i64** %lenp.addr, align 8
  %call21 = call i64 @Perl_sv_pos_u2b_flags(%struct.sv* %23, i64 %24, i64* %25, i32 32)
  store i64 %call21, i64* %retval, align 8
  br label %return

return:                                           ; preds = %if.end20, %if.end
  %26 = load i64, i64* %retval, align 8
  ret i64 %26
}

declare dso_local i64 @Perl_sv_pos_u2b_flags(%struct.sv*, i64, i64*, i32) #2

declare dso_local void @Perl_sv_force_normal_flags(%struct.sv*, i32) #2

declare dso_local %struct.sv* @Perl_sv_setsv_cow(%struct.sv*, %struct.sv*) #2

declare dso_local i8* @Perl_safesysrealloc(i8*, i64) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local i64 @Perl_sv_pos_b2u_flags(%struct.sv*, i64, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i64 @S_regmatch(%struct.regmatch_info* %reginfo, i8* %startpos, %struct.regnode* %prog) #0 {
entry:
  %reginfo.addr = alloca %struct.regmatch_info*, align 8
  %startpos.addr = alloca i8*, align 8
  %prog.addr = alloca %struct.regnode*, align 8
  %utf8_target = alloca i8, align 1
  %uniflags = alloca i32, align 4
  %rex_sv = alloca %struct.p5rx*, align 8
  %rex = alloca %struct.regexp*, align 8
  %rexi = alloca %struct.regexp_internal*, align 8
  %st = alloca %struct.regmatch_state*, align 8
  %scan = alloca %struct.regnode*, align 8
  %next = alloca %struct.regnode*, align 8
  %n = alloca i32, align 4
  %ln = alloca i64, align 8
  %locinput = alloca i8*, align 8
  %pushinput = alloca i8*, align 8
  %nextchr = alloca i32, align 4
  %result = alloca i8, align 1
  %depth = alloca i32, align 4
  %nochange_depth = alloca i32, align 4
  %max_nochange_depth = alloca i32, align 4
  %yes_state = alloca %struct.regmatch_state*, align 8
  %mark_state = alloca %struct.regmatch_state*, align 8
  %cur_eval = alloca %struct.regmatch_state*, align 8
  %cur_curlyx = alloca %struct.regmatch_state*, align 8
  %state_num = alloca i32, align 4
  %no_final = alloca i8, align 1
  %do_cutgroup = alloca i8, align 1
  %startpoint = alloca i8*, align 8
  %popmark = alloca %struct.sv*, align 8
  %sv_commit = alloca %struct.sv*, align 8
  %sv_yes_mark = alloca %struct.sv*, align 8
  %lastopen = alloca i32, align 4
  %has_cutgroup = alloca i8, align 1
  %oreplsv = alloca %struct.sv*, align 8
  %sw = alloca i8, align 1
  %minmod = alloca i8, align 1
  %logical = alloca i32, align 4
  %last_pad = alloca %struct.av*, align 8
  %newsp = alloca %struct.sv**, align 8
  %cx = alloca %struct.context*, align 8
  %multicall_cv = alloca %struct.cv*, align 8
  %multicall_cop = alloca %struct.op*, align 8
  %multicall_oldcatch = alloca i8, align 1
  %hasargs = alloca i8, align 1
  %gimme = alloca i32, align 4
  %caller_cv = alloca %struct.cv*, align 8
  %last_pushed_cv = alloca %struct.cv*, align 8
  %runops_cp = alloca i32, align 4
  %maxopenparen = alloca i32, align 4
  %to_complement = alloca i32, align 4
  %classnum = alloca i32, align 4
  %is_utf8_pat = alloca i8, align 1
  %match = alloca i8, align 1
  %trie_type = alloca i32, align 4
  %trie = alloca %struct._reg_trie_data*, align 8
  %widecharmap = alloca %struct.hv*, align 8
  %state = alloca i32, align 4
  %uc = alloca i8*, align 8
  %len = alloca i64, align 8
  %foldlen = alloca i64, align 8
  %uscan = alloca i8*, align 8
  %foldbuf = alloca [14 x i8], align 1
  %charcount = alloca i32, align 4
  %accepted = alloca i32, align 4
  %base = alloca i32, align 4
  %uvc = alloca i64, align 8
  %charid = alloca i16, align 2
  %wordnum274 = alloca i16, align 2
  %offset = alloca i32, align 4
  %skiplen = alloca i64, align 8
  %flags330 = alloca i8, align 1
  %svpp = alloca %struct.sv**, align 8
  %w = alloca i16, align 2
  %uc546 = alloca i8*, align 8
  %min = alloca i16, align 2
  %word = alloca i16, align 2
  %nextword583 = alloca i16, align 2
  %wordinfo587 = alloca %struct.reg_trie_wordinfo*, align 8
  %chars = alloca i32, align 4
  %trie644 = alloca %struct._reg_trie_data*, align 8
  %foldbuf673 = alloca [14 x i8], align 1
  %foldlen674 = alloca i64, align 8
  %len675 = alloca i64, align 8
  %uvc676 = alloca i64, align 8
  %uscan677 = alloca i8*, align 8
  %s = alloca i8*, align 8
  %l = alloca i8*, align 8
  %e = alloca i8*, align 8
  %folder = alloca i32 (i8*, i8*, i32)*, align 8
  %fold_array = alloca i8*, align 8
  %s899 = alloca i8*, align 8
  %fold_utf8_flags = alloca i32, align 4
  %l930 = alloca i8*, align 8
  %e931 = alloca i8*, align 8
  %flags1931 = alloca i8, align 1
  %prev_gcb = alloca i32, align 4
  %cur_gcb = alloca i32, align 4
  %s2285 = alloca i8*, align 8
  %type2286 = alloca i8, align 1
  %folder2287 = alloca i32 (i8*, i8*, i32)*, align 8
  %fold_array2288 = alloca i8*, align 8
  %utf8_fold_flags = alloca i64, align 8
  %limit = alloca i8*, align 8
  %ret = alloca %struct.sv*, align 8
  %re_sv = alloca %struct.p5rx*, align 8
  %re = alloca %struct.regexp*, align 8
  %rei = alloca %struct.regexp_internal*, align 8
  %startpoint2403 = alloca %struct.regnode*, align 8
  %sp = alloca %struct.sv**, align 8
  %before = alloca i64, align 8
  %oop = alloca %struct.op*, align 8
  %ocurcop = alloca %struct.cop*, align 8
  %nop = alloca %struct.op*, align 8
  %newcv = alloca %struct.cv*, align 8
  %flags2512 = alloca i8, align 1
  %_nOnclAshIngNamE_ = alloca %struct.cv*, align 8
  %cv = alloca %struct.cv*, align 8
  %padlist = alloca %struct.padlist*, align 8
  %phlags = alloca i8, align 1
  %_nOnclAshIngNamE_2613 = alloca %struct.cv*, align 8
  %cv2614 = alloca %struct.cv*, align 8
  %padlist2615 = alloca %struct.padlist*, align 8
  %next2625 = alloca %struct.stackinfo*, align 8
  %phlags2696 = alloca i8, align 1
  %o = alloca %struct.op*, align 8
  %sv_mrk = alloca %struct.sv*, align 8
  %sv3019 = alloca %struct.sv*, align 8
  %mg = alloca %struct.magic*, align 8
  %pm_flags = alloca i32, align 4
  %len3086 = alloca i64, align 8
  %p = alloca i8*, align 8
  %save_sv = alloca %struct.sv*, align 8
  %cursor = alloca %struct.regnode*, align 8
  %parenfloor = alloca i32, align 4
  %n3509 = alloca i32, align 4
  %min3510 = alloca i32, align 4
  %max = alloca i32, align 4
  %A = alloca %struct.regnode*, align 8
  %size = alloca i64, align 8
  %aux = alloca %struct.regmatch_info_aux*, align 8
  %offset3622 = alloca i64, align 8
  %mask = alloca i64, align 8
  %paren = alloca i32, align 4
  %s4114 = alloca i8*, align 8
  %max4189 = alloca i32, align 4
  %text_node = alloca %struct.regnode*, align 8
  %type4477 = alloca i16, align 2
  %paren4611 = alloca i32, align 4
  %max4750 = alloca i32, align 4
  %text_node5001 = alloca %struct.regnode*, align 8
  %type5083 = alloca i16, align 2
  %li = alloca i8*, align 8
  %m = alloca i32, align 4
  %li5338 = alloca i8*, align 8
  %n5478 = alloca i32, align 4
  %li5632 = alloca i8*, align 8
  %li5785 = alloca i8*, align 8
  %could_match = alloca i8, align 1
  %newstart = alloca i8*, align 8
  %s6222 = alloca i8*, align 8
  %cur = alloca %struct.regmatch_state*, align 8
  %find = alloca %struct.sv*, align 8
  %newst = alloca %struct.regmatch_state*, align 8
  %sv_err = alloca %struct.sv*, align 8
  %sv_mrk6872 = alloca %struct.sv*, align 8
  %sp6887 = alloca %struct.sv**, align 8
  %sp6933 = alloca %struct.sv**, align 8
  %prev6934 = alloca %struct.stackinfo*, align 8
  store %struct.regmatch_info* %reginfo, %struct.regmatch_info** %reginfo.addr, align 8
  store i8* %startpos, i8** %startpos.addr, align 8
  store %struct.regnode* %prog, %struct.regnode** %prog.addr, align 8
  %0 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %0, i32 0, i32 14
  %1 = load i8, i8* %is_utf8_target, align 2
  %tobool = trunc i8 %1 to i1
  %frombool = zext i1 %tobool to i8
  store i8 %frombool, i8* %utf8_target, align 1
  %call = call zeroext i1 @Perl_ckwarn(i32 44)
  %2 = zext i1 %call to i64
  %cond = select i1 %call, i32 0, i32 1
  store i32 %cond, i32* %uniflags, align 4
  %3 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %prog1 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3, i32 0, i32 0
  %4 = load %struct.p5rx*, %struct.p5rx** %prog1, align 8
  store %struct.p5rx* %4, %struct.p5rx** %rex_sv, align 8
  %5 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %call2 = call %struct.regexp* @S_ReANY(%struct.p5rx* %5)
  store %struct.regexp* %call2, %struct.regexp** %rex, align 8
  %6 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %pprivate = getelementptr inbounds %struct.regexp, %struct.regexp* %6, i32 0, i32 14
  %7 = load i8*, i8** %pprivate, align 8
  %8 = bitcast i8* %7 to %struct.regexp_internal*
  store %struct.regexp_internal* %8, %struct.regexp_internal** %rexi, align 8
  store i32 0, i32* %n, align 4
  store i64 0, i64* %ln, align 8
  %9 = load i8*, i8** %startpos.addr, align 8
  store i8* %9, i8** %locinput, align 8
  store i8 0, i8* %result, align 1
  store i32 0, i32* %depth, align 4
  store i32 0, i32* %nochange_depth, align 4
  %10 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %nparens = getelementptr inbounds %struct.regexp, %struct.regexp* %10, i32 0, i32 12
  %11 = load i32, i32* %nparens, align 8
  %mul = mul i32 3, %11
  %cmp = icmp ugt i32 %mul, 1000
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %12 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %nparens3 = getelementptr inbounds %struct.regexp, %struct.regexp* %12, i32 0, i32 12
  %13 = load i32, i32* %nparens3, align 8
  %mul4 = mul i32 3, %13
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond5 = phi i32 [ %mul4, %cond.true ], [ 1000, %cond.false ]
  store i32 %cond5, i32* %max_nochange_depth, align 4
  store %struct.regmatch_state* null, %struct.regmatch_state** %yes_state, align 8
  store %struct.regmatch_state* null, %struct.regmatch_state** %mark_state, align 8
  store %struct.regmatch_state* null, %struct.regmatch_state** %cur_eval, align 8
  store %struct.regmatch_state* null, %struct.regmatch_state** %cur_curlyx, align 8
  store i8 0, i8* %no_final, align 1
  store i8 0, i8* %do_cutgroup, align 1
  %14 = load i8*, i8** %locinput, align 8
  store i8* %14, i8** %startpoint, align 8
  store %struct.sv* null, %struct.sv** %popmark, align 8
  store %struct.sv* null, %struct.sv** %sv_commit, align 8
  store %struct.sv* null, %struct.sv** %sv_yes_mark, align 8
  store i32 0, i32* %lastopen, align 4
  %15 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %intflags = getelementptr inbounds %struct.regexp, %struct.regexp* %15, i32 0, i32 13
  %16 = load i32, i32* %intflags, align 4
  %and = and i32 %16, 16
  %tobool6 = icmp ne i32 %and, 0
  %17 = zext i1 %tobool6 to i64
  %cond7 = select i1 %tobool6, i32 1, i32 0
  %tobool8 = icmp ne i32 %cond7, 0
  %frombool9 = zext i1 %tobool8 to i8
  store i8 %frombool9, i8* %has_cutgroup, align 1
  %18 = load %struct.gv*, %struct.gv** @PL_replgv, align 8
  %sv_u = getelementptr inbounds %struct.gv, %struct.gv* %18, i32 0, i32 3
  %svu_gp = bitcast %union.anon.4* %sv_u to %struct.gp**
  %19 = load %struct.gp*, %struct.gp** %svu_gp, align 8
  %add.ptr = getelementptr inbounds %struct.gp, %struct.gp* %19, i64 0
  %gp_sv = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr, i32 0, i32 0
  %20 = load %struct.sv*, %struct.sv** %gp_sv, align 8
  %tobool10 = icmp ne %struct.sv* %20, null
  br i1 %tobool10, label %cond.true11, label %cond.false16

cond.true11:                                      ; preds = %cond.end
  %21 = load %struct.gv*, %struct.gv** @PL_replgv, align 8
  %sv_u12 = getelementptr inbounds %struct.gv, %struct.gv* %21, i32 0, i32 3
  %svu_gp13 = bitcast %union.anon.4* %sv_u12 to %struct.gp**
  %22 = load %struct.gp*, %struct.gp** %svu_gp13, align 8
  %add.ptr14 = getelementptr inbounds %struct.gp, %struct.gp* %22, i64 0
  %gp_sv15 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr14, i32 0, i32 0
  br label %cond.end22

cond.false16:                                     ; preds = %cond.end
  %23 = load %struct.gv*, %struct.gv** @PL_replgv, align 8
  %call17 = call %struct.gv* @Perl_gv_add_by_type(%struct.gv* %23, i32 0)
  %sv_u18 = getelementptr inbounds %struct.gv, %struct.gv* %call17, i32 0, i32 3
  %svu_gp19 = bitcast %union.anon.4* %sv_u18 to %struct.gp**
  %24 = load %struct.gp*, %struct.gp** %svu_gp19, align 8
  %add.ptr20 = getelementptr inbounds %struct.gp, %struct.gp* %24, i64 0
  %gp_sv21 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr20, i32 0, i32 0
  br label %cond.end22

cond.end22:                                       ; preds = %cond.false16, %cond.true11
  %cond23 = phi %struct.sv** [ %gp_sv15, %cond.true11 ], [ %gp_sv21, %cond.false16 ]
  %25 = load %struct.sv*, %struct.sv** %cond23, align 8
  store %struct.sv* %25, %struct.sv** %oreplsv, align 8
  store i8 0, i8* %sw, align 1
  store i8 0, i8* %minmod, align 1
  store i32 0, i32* %logical, align 4
  store %struct.av* null, %struct.av** %last_pad, align 8
  store i8 0, i8* %hasargs, align 1
  store i32 2, i32* %gimme, align 4
  store %struct.cv* null, %struct.cv** %caller_cv, align 8
  store %struct.cv* null, %struct.cv** %last_pushed_cv, align 8
  store i32 0, i32* %maxopenparen, align 4
  %26 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat24 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %26, i32 0, i32 13
  %27 = load i8, i8* %is_utf8_pat24, align 1
  %tobool25 = trunc i8 %27 to i1
  %frombool26 = zext i1 %tobool25 to i8
  store i8 %frombool26, i8* %is_utf8_pat, align 1
  store i8 0, i8* %match, align 1
  %28 = load %struct.sv*, %struct.sv** %oreplsv, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %28, i32 0, i32 1
  %29 = load i32, i32* %sv_refcnt, align 8
  %inc = add i32 %29, 1
  store i32 %inc, i32* %sv_refcnt, align 8
  %30 = load %struct.sv*, %struct.sv** %oreplsv, align 8
  %31 = bitcast %struct.sv* %30 to i8*
  %32 = bitcast i8* %31 to %struct.sv*
  %33 = bitcast %struct.sv* %32 to i8*
  %34 = bitcast i8* %33 to %struct.sv*
  %35 = bitcast %struct.sv* %34 to i8*
  call void @Perl_save_pushptr(i8* %35, i32 11)
  store i8 0, i8* %multicall_oldcatch, align 1
  store %struct.cv* null, %struct.cv** %multicall_cv, align 8
  store %struct.context* null, %struct.context** %cx, align 8
  %36 = load %struct.op*, %struct.op** %multicall_cop, align 8
  %37 = load %struct.sv**, %struct.sv*** %newsp, align 8
  %38 = load %struct.regmatch_state*, %struct.regmatch_state** @PL_regmatch_state, align 8
  store %struct.regmatch_state* %38, %struct.regmatch_state** %st, align 8
  %39 = load i8*, i8** %locinput, align 8
  %40 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %40, i32 0, i32 2
  %41 = load i8*, i8** %strend, align 8
  %cmp27 = icmp ult i8* %39, %41
  br i1 %cmp27, label %cond.true28, label %cond.false29

cond.true28:                                      ; preds = %cond.end22
  %42 = load i8*, i8** %locinput, align 8
  %43 = load i8, i8* %42, align 1
  %conv = zext i8 %43 to i32
  br label %cond.end30

cond.false29:                                     ; preds = %cond.end22
  br label %cond.end30

cond.end30:                                       ; preds = %cond.false29, %cond.true28
  %cond31 = phi i32 [ %conv, %cond.true28 ], [ -10, %cond.false29 ]
  store i32 %cond31, i32* %nextchr, align 4
  %44 = load %struct.regnode*, %struct.regnode** %prog.addr, align 8
  store %struct.regnode* %44, %struct.regnode** %scan, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end6770, %sw.epilog6759, %if.end6348, %if.end4019, %if.end770, %cond.end30
  %45 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %cmp32 = icmp ne %struct.regnode* %45, null
  br i1 %cmp32, label %while.body, label %while.end6771

while.body:                                       ; preds = %while.cond
  %46 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %47 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %next_off = getelementptr inbounds %struct.regnode, %struct.regnode* %47, i32 0, i32 2
  %48 = load i16, i16* %next_off, align 2
  %conv34 = zext i16 %48 to i32
  %idx.ext = sext i32 %conv34 to i64
  %add.ptr35 = getelementptr inbounds %struct.regnode, %struct.regnode* %46, i64 %idx.ext
  store %struct.regnode* %add.ptr35, %struct.regnode** %next, align 8
  %49 = load %struct.regnode*, %struct.regnode** %next, align 8
  %50 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %cmp36 = icmp eq %struct.regnode* %49, %50
  br i1 %cmp36, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  store %struct.regnode* null, %struct.regnode** %next, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body
  %51 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type = getelementptr inbounds %struct.regnode, %struct.regnode* %51, i32 0, i32 1
  %52 = load i8, i8* %type, align 1
  %conv38 = zext i8 %52 to i32
  store i32 %conv38, i32* %state_num, align 4
  br label %reenter_switch

reenter_switch:                                   ; preds = %if.end6863, %if.end6815, %if.then4601, %if.then4587, %if.end
  store i32 0, i32* %to_complement, align 4
  %53 = load i8*, i8** %locinput, align 8
  %54 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend39 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %54, i32 0, i32 2
  %55 = load i8*, i8** %strend39, align 8
  %cmp40 = icmp ult i8* %53, %55
  br i1 %cmp40, label %cond.true42, label %cond.false44

cond.true42:                                      ; preds = %reenter_switch
  %56 = load i8*, i8** %locinput, align 8
  %57 = load i8, i8* %56, align 1
  %conv43 = zext i8 %57 to i32
  br label %cond.end45

cond.false44:                                     ; preds = %reenter_switch
  br label %cond.end45

cond.end45:                                       ; preds = %cond.false44, %cond.true42
  %cond46 = phi i32 [ %conv43, %cond.true42 ], [ -10, %cond.false44 ]
  store i32 %cond46, i32* %nextchr, align 4
  %58 = load i32, i32* %state_num, align 4
  switch i32 %58, label %sw.default6711 [
    i32 2, label %sw.bb
    i32 3, label %sw.bb51
    i32 7, label %sw.bb62
    i32 90, label %sw.bb67
    i32 133, label %sw.bb74
    i32 5, label %sw.bb82
    i32 4, label %sw.bb90
    i32 6, label %sw.bb106
    i32 17, label %sw.bb111
    i32 18, label %sw.bb116
    i32 16, label %sw.bb121
    i32 73, label %sw.bb129
    i32 72, label %sw.bb145
    i32 95, label %sw.bb545
    i32 32, label %sw.bb771
    i32 31, label %sw.bb780
    i32 34, label %sw.bb898
    i32 38, label %sw.bb900
    i32 37, label %sw.bb904
    i32 35, label %sw.bb904
    i32 39, label %sw.bb908
    i32 36, label %sw.bb909
    i32 33, label %sw.bb910
    i32 13, label %sw.bb972
    i32 9, label %sw.bb973
    i32 12, label %sw.bb1258
    i32 8, label %sw.bb1259
    i32 15, label %sw.bb1263
    i32 11, label %sw.bb1264
    i32 14, label %sw.bb1322
    i32 10, label %sw.bb1323
    i32 20, label %sw.bb1705
    i32 19, label %sw.bb1706
    i32 26, label %sw.bb1750
    i32 22, label %sw.bb1751
    i32 25, label %sw.bb1801
    i32 21, label %sw.bb1802
    i32 28, label %sw.bb1806
    i32 24, label %sw.bb1816
    i32 27, label %sw.bb1846
    i32 23, label %sw.bb1847
    i32 29, label %sw.bb2222
    i32 58, label %sw.bb2284
    i32 60, label %sw.bb2289
    i32 59, label %sw.bb2290
    i32 57, label %sw.bb2291
    i32 56, label %sw.bb2292
    i32 53, label %sw.bb2297
    i32 55, label %sw.bb2298
    i32 54, label %sw.bb2299
    i32 52, label %sw.bb2300
    i32 51, label %sw.bb2301
    i32 40, label %sw.bb2401
    i32 41, label %sw.bb2402
    i32 77, label %sw.bb2404
    i32 76, label %sw.bb2404
    i32 68, label %sw.bb2448
    i32 96, label %sw.bb3171
    i32 97, label %sw.bb3224
    i32 49, label %sw.bb3268
    i32 50, label %sw.bb3281
    i32 83, label %sw.bb3315
    i32 67, label %sw.bb3380
    i32 78, label %sw.bb3397
    i32 79, label %sw.bb3404
    i32 80, label %sw.bb3420
    i32 66, label %sw.bb3421
    i32 70, label %sw.bb3441
    i32 47, label %sw.bb3444
    i32 98, label %sw.bb3488
    i32 99, label %sw.bb3492
    i32 48, label %sw.bb3508
    i32 106, label %sw.bb3709
    i32 108, label %sw.bb3709
    i32 109, label %sw.bb3713
    i32 103, label %sw.bb3746
    i32 101, label %sw.bb3746
    i32 105, label %sw.bb3788
    i32 107, label %sw.bb3827
    i32 62, label %sw.bb3914
    i32 30, label %sw.bb3923
    i32 89, label %sw.bb3942
    i32 131, label %sw.bb3957
    i32 110, label %sw.bb3967
    i32 111, label %sw.bb3968
    i32 69, label %sw.bb4020
    i32 46, label %sw.bb4021
    i32 112, label %sw.bb4100
    i32 113, label %sw.bb4219
    i32 115, label %sw.bb4712
    i32 42, label %sw.bb4822
    i32 43, label %sw.bb4832
    i32 45, label %sw.bb4843
    i32 44, label %sw.bb4903
    i32 119, label %sw.bb5422
    i32 121, label %sw.bb5746
    i32 123, label %sw.bb6087
    i32 0, label %sw.bb6147
    i32 1, label %sw.bb6208
    i32 65, label %sw.bb6209
    i32 64, label %sw.bb6211
    i32 63, label %sw.bb6215
    i32 117, label %sw.bb6292
    i32 116, label %sw.bb6302
    i32 61, label %sw.bb6349
    i32 88, label %sw.bb6357
    i32 85, label %sw.bb6359
    i32 125, label %sw.bb6370
    i32 82, label %sw.bb6371
    i32 86, label %sw.bb6372
    i32 126, label %sw.bb6386
    i32 127, label %sw.bb6390
    i32 87, label %sw.bb6449
    i32 129, label %sw.bb6485
    i32 91, label %sw.bb6537
  ]

sw.bb:                                            ; preds = %cond.end45
  %59 = load i8*, i8** %locinput, align 8
  %60 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %60, i32 0, i32 1
  %61 = load i8*, i8** %strbeg, align 8
  %cmp47 = icmp eq i8* %59, %61
  br i1 %cmp47, label %if.then49, label %if.end50

if.then49:                                        ; preds = %sw.bb
  br label %sw.epilog6759

if.end50:                                         ; preds = %sw.bb
  br label %no

sw.bb51:                                          ; preds = %cond.end45
  %62 = load i8*, i8** %locinput, align 8
  %63 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg52 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %63, i32 0, i32 1
  %64 = load i8*, i8** %strbeg52, align 8
  %cmp53 = icmp eq i8* %62, %64
  br i1 %cmp53, label %if.then60, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb51
  %65 = load i32, i32* %nextchr, align 4
  %cmp55 = icmp slt i32 %65, 0
  br i1 %cmp55, label %if.end61, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false
  %66 = load i8*, i8** %locinput, align 8
  %arrayidx = getelementptr inbounds i8, i8* %66, i64 -1
  %67 = load i8, i8* %arrayidx, align 1
  %conv57 = sext i8 %67 to i32
  %cmp58 = icmp eq i32 %conv57, 10
  br i1 %cmp58, label %if.then60, label %if.end61

if.then60:                                        ; preds = %land.lhs.true, %sw.bb51
  br label %sw.epilog6759

if.end61:                                         ; preds = %land.lhs.true, %lor.lhs.false
  br label %no

sw.bb62:                                          ; preds = %cond.end45
  %68 = load i8*, i8** %locinput, align 8
  %69 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %ganch = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %69, i32 0, i32 5
  %70 = load i8*, i8** %ganch, align 8
  %cmp63 = icmp eq i8* %68, %70
  br i1 %cmp63, label %if.then65, label %if.end66

if.then65:                                        ; preds = %sw.bb62
  br label %sw.epilog6759

if.end66:                                         ; preds = %sw.bb62
  br label %no

sw.bb67:                                          ; preds = %cond.end45
  %71 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs = getelementptr inbounds %struct.regexp, %struct.regexp* %71, i32 0, i32 17
  %72 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs, align 8
  %arrayidx68 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %72, i64 0
  %start = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx68, i32 0, i32 0
  %73 = load i64, i64* %start, align 8
  %conv69 = trunc i64 %73 to i32
  %74 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %74, i32 0, i32 2
  %keeper = bitcast %union.anon.19* %u to %struct.anon.27*
  %val = getelementptr inbounds %struct.anon.27, %struct.anon.27* %keeper, i32 0, i32 0
  store i32 %conv69, i32* %val, align 8
  %75 = load i8*, i8** %locinput, align 8
  %76 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg70 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %76, i32 0, i32 1
  %77 = load i8*, i8** %strbeg70, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %75 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %77 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %78 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs71 = getelementptr inbounds %struct.regexp, %struct.regexp* %78, i32 0, i32 17
  %79 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs71, align 8
  %arrayidx72 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %79, i64 0
  %start73 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx72, i32 0, i32 0
  store i64 %sub.ptr.sub, i64* %start73, align 8
  %80 = load i8*, i8** %locinput, align 8
  store i8* %80, i8** %pushinput, align 8
  %81 = load %struct.regnode*, %struct.regnode** %next, align 8
  store %struct.regnode* %81, %struct.regnode** %scan, align 8
  %82 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %82, i32 0, i32 0
  store i32 132, i32* %resume_state, align 8
  br label %push_state

sw.bb74:                                          ; preds = %cond.end45
  %83 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u75 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %83, i32 0, i32 2
  %keeper76 = bitcast %union.anon.19* %u75 to %struct.anon.27*
  %val77 = getelementptr inbounds %struct.anon.27, %struct.anon.27* %keeper76, i32 0, i32 0
  %84 = load i32, i32* %val77, align 8
  %conv78 = sext i32 %84 to i64
  %85 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs79 = getelementptr inbounds %struct.regexp, %struct.regexp* %85, i32 0, i32 17
  %86 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs79, align 8
  %arrayidx80 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %86, i64 0
  %start81 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx80, i32 0, i32 0
  store i64 %conv78, i64* %start81, align 8
  br label %no_silent

sw.bb82:                                          ; preds = %cond.end45
  %87 = load i32, i32* %nextchr, align 4
  %cmp83 = icmp slt i32 %87, 0
  br i1 %cmp83, label %if.end89, label %land.lhs.true85

land.lhs.true85:                                  ; preds = %sw.bb82
  %88 = load i32, i32* %nextchr, align 4
  %cmp86 = icmp ne i32 %88, 10
  br i1 %cmp86, label %if.then88, label %if.end89

if.then88:                                        ; preds = %land.lhs.true85
  br label %no

if.end89:                                         ; preds = %land.lhs.true85, %sw.bb82
  br label %sw.epilog6759

sw.bb90:                                          ; preds = %cond.end45
  %89 = load i32, i32* %nextchr, align 4
  %cmp91 = icmp slt i32 %89, 0
  br i1 %cmp91, label %if.end97, label %land.lhs.true93

land.lhs.true93:                                  ; preds = %sw.bb90
  %90 = load i32, i32* %nextchr, align 4
  %cmp94 = icmp ne i32 %90, 10
  br i1 %cmp94, label %if.then96, label %if.end97

if.then96:                                        ; preds = %land.lhs.true93
  br label %no

if.end97:                                         ; preds = %land.lhs.true93, %sw.bb90
  %91 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend98 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %91, i32 0, i32 2
  %92 = load i8*, i8** %strend98, align 8
  %93 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast99 = ptrtoint i8* %92 to i64
  %sub.ptr.rhs.cast100 = ptrtoint i8* %93 to i64
  %sub.ptr.sub101 = sub i64 %sub.ptr.lhs.cast99, %sub.ptr.rhs.cast100
  %cmp102 = icmp sgt i64 %sub.ptr.sub101, 1
  br i1 %cmp102, label %if.then104, label %if.end105

if.then104:                                       ; preds = %if.end97
  br label %no

if.end105:                                        ; preds = %if.end97
  br label %sw.epilog6759

sw.bb106:                                         ; preds = %cond.end45
  %94 = load i32, i32* %nextchr, align 4
  %cmp107 = icmp slt i32 %94, 0
  br i1 %cmp107, label %if.end110, label %if.then109

if.then109:                                       ; preds = %sw.bb106
  br label %no

if.end110:                                        ; preds = %sw.bb106
  br label %sw.epilog6759

sw.bb111:                                         ; preds = %cond.end45
  %95 = load i32, i32* %nextchr, align 4
  %cmp112 = icmp slt i32 %95, 0
  br i1 %cmp112, label %if.then114, label %if.end115

if.then114:                                       ; preds = %sw.bb111
  br label %no

if.end115:                                        ; preds = %sw.bb111
  br label %increment_locinput

sw.bb116:                                         ; preds = %cond.end45
  %96 = load i32, i32* %nextchr, align 4
  %cmp117 = icmp slt i32 %96, 0
  br i1 %cmp117, label %if.then119, label %if.end120

if.then119:                                       ; preds = %sw.bb116
  br label %no

if.end120:                                        ; preds = %sw.bb116
  %97 = load i8*, i8** %locinput, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %97, i32 1
  store i8* %incdec.ptr, i8** %locinput, align 8
  br label %sw.epilog6759

sw.bb121:                                         ; preds = %cond.end45
  %98 = load i32, i32* %nextchr, align 4
  %cmp122 = icmp slt i32 %98, 0
  br i1 %cmp122, label %if.then127, label %lor.lhs.false124

lor.lhs.false124:                                 ; preds = %sw.bb121
  %99 = load i32, i32* %nextchr, align 4
  %cmp125 = icmp eq i32 %99, 10
  br i1 %cmp125, label %if.then127, label %if.end128

if.then127:                                       ; preds = %lor.lhs.false124, %sw.bb121
  br label %no

if.end128:                                        ; preds = %lor.lhs.false124
  br label %increment_locinput

sw.bb129:                                         ; preds = %cond.end45
  %100 = load i32, i32* %nextchr, align 4
  %cmp130 = icmp slt i32 %100, 0
  br i1 %cmp130, label %if.end144, label %land.lhs.true132

land.lhs.true132:                                 ; preds = %sw.bb129
  %101 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %102 = bitcast %struct.regnode* %101 to %struct.regnode_charclass*
  %bitmap = getelementptr inbounds %struct.regnode_charclass, %struct.regnode_charclass* %102, i32 0, i32 4
  %103 = load i32, i32* %nextchr, align 4
  %conv133 = trunc i32 %103 to i8
  %conv134 = zext i8 %conv133 to i32
  %shr = ashr i32 %conv134, 3
  %and135 = and i32 %shr, 31
  %idxprom = sext i32 %and135 to i64
  %arrayidx136 = getelementptr inbounds [32 x i8], [32 x i8]* %bitmap, i64 0, i64 %idxprom
  %104 = load i8, i8* %arrayidx136, align 1
  %conv137 = sext i8 %104 to i32
  %105 = load i32, i32* %nextchr, align 4
  %and138 = and i32 %105, 7
  %shl = shl i32 1, %and138
  %and139 = and i32 %conv137, %shl
  %tobool140 = icmp ne i32 %and139, 0
  br i1 %tobool140, label %cond.true141, label %cond.false142

cond.true141:                                     ; preds = %land.lhs.true132
  br i1 true, label %if.end144, label %if.then143

cond.false142:                                    ; preds = %land.lhs.true132
  br i1 false, label %if.end144, label %if.then143

if.then143:                                       ; preds = %cond.false142, %cond.true141
  br label %no_silent

if.end144:                                        ; preds = %cond.false142, %cond.true141, %sw.bb129
  br label %sw.bb145

sw.bb145:                                         ; preds = %cond.end45, %if.end144
  %106 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags = getelementptr inbounds %struct.regnode, %struct.regnode* %106, i32 0, i32 0
  %107 = load i8, i8* %flags, align 2
  %conv146 = zext i8 %107 to i32
  %cmp147 = icmp eq i32 %conv146, 31
  br i1 %cmp147, label %cond.true149, label %cond.false153

cond.true149:                                     ; preds = %sw.bb145
  %108 = load i8, i8* %utf8_target, align 1
  %tobool150 = trunc i8 %108 to i1
  %109 = zext i1 %tobool150 to i64
  %cond152 = select i1 %tobool150, i32 1, i32 0
  br label %cond.end187

cond.false153:                                    ; preds = %sw.bb145
  %110 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags154 = getelementptr inbounds %struct.regnode, %struct.regnode* %110, i32 0, i32 0
  %111 = load i8, i8* %flags154, align 2
  %conv155 = zext i8 %111 to i32
  %cmp156 = icmp eq i32 %conv155, 32
  br i1 %cmp156, label %cond.true158, label %cond.false162

cond.true158:                                     ; preds = %cond.false153
  %112 = load i8, i8* %utf8_target, align 1
  %tobool159 = trunc i8 %112 to i1
  %113 = zext i1 %tobool159 to i64
  %cond161 = select i1 %tobool159, i32 6, i32 0
  br label %cond.end185

cond.false162:                                    ; preds = %cond.false153
  %114 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags163 = getelementptr inbounds %struct.regnode, %struct.regnode* %114, i32 0, i32 0
  %115 = load i8, i8* %flags163, align 2
  %conv164 = zext i8 %115 to i32
  %cmp165 = icmp eq i32 %conv164, 36
  br i1 %cmp165, label %cond.true167, label %cond.false171

cond.true167:                                     ; preds = %cond.false162
  %116 = load i8, i8* %utf8_target, align 1
  %tobool168 = trunc i8 %116 to i1
  %117 = zext i1 %tobool168 to i64
  %cond170 = select i1 %tobool168, i32 4, i32 5
  br label %cond.end183

cond.false171:                                    ; preds = %cond.false162
  %118 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags172 = getelementptr inbounds %struct.regnode, %struct.regnode* %118, i32 0, i32 0
  %119 = load i8, i8* %flags172, align 2
  %conv173 = zext i8 %119 to i32
  %cmp174 = icmp eq i32 %conv173, 38
  br i1 %cmp174, label %cond.true176, label %cond.false177

cond.true176:                                     ; preds = %cond.false171
  br label %cond.end181

cond.false177:                                    ; preds = %cond.false171
  %120 = load i8, i8* %utf8_target, align 1
  %tobool178 = trunc i8 %120 to i1
  %121 = zext i1 %tobool178 to i64
  %cond180 = select i1 %tobool178, i32 2, i32 3
  br label %cond.end181

cond.end181:                                      ; preds = %cond.false177, %cond.true176
  %cond182 = phi i32 [ 7, %cond.true176 ], [ %cond180, %cond.false177 ]
  br label %cond.end183

cond.end183:                                      ; preds = %cond.end181, %cond.true167
  %cond184 = phi i32 [ %cond170, %cond.true167 ], [ %cond182, %cond.end181 ]
  br label %cond.end185

cond.end185:                                      ; preds = %cond.end183, %cond.true158
  %cond186 = phi i32 [ %cond161, %cond.true158 ], [ %cond184, %cond.end183 ]
  br label %cond.end187

cond.end187:                                      ; preds = %cond.end185, %cond.true149
  %cond188 = phi i32 [ %cond152, %cond.true149 ], [ %cond186, %cond.end185 ]
  store i32 %cond188, i32* %trie_type, align 4
  %122 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %122, i32 0, i32 3
  %123 = load %struct.reg_data*, %struct.reg_data** %data, align 8
  %data189 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %123, i32 0, i32 2
  %124 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %125 = bitcast %struct.regnode* %124 to %struct.regnode_1*
  %arg1 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %125, i32 0, i32 3
  %126 = load i32, i32* %arg1, align 4
  %idxprom190 = zext i32 %126 to i64
  %arrayidx191 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data189, i64 0, i64 %idxprom190
  %127 = load i8*, i8** %arrayidx191, align 8
  %128 = bitcast i8* %127 to %struct._reg_trie_data*
  store %struct._reg_trie_data* %128, %struct._reg_trie_data** %trie, align 8
  %129 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data192 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %129, i32 0, i32 3
  %130 = load %struct.reg_data*, %struct.reg_data** %data192, align 8
  %data193 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %130, i32 0, i32 2
  %131 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %132 = bitcast %struct.regnode* %131 to %struct.regnode_1*
  %arg1194 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %132, i32 0, i32 3
  %133 = load i32, i32* %arg1194, align 4
  %add = add i32 %133, 1
  %idxprom195 = zext i32 %add to i64
  %arrayidx196 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data193, i64 0, i64 %idxprom195
  %134 = load i8*, i8** %arrayidx196, align 8
  %135 = bitcast i8* %134 to %struct.hv*
  store %struct.hv* %135, %struct.hv** %widecharmap, align 8
  %136 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %startstate = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %136, i32 0, i32 9
  %137 = load i32, i32* %startstate, align 4
  store i32 %137, i32* %state, align 4
  %138 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags197 = getelementptr inbounds %struct.regnode, %struct.regnode* %138, i32 0, i32 0
  %139 = load i8, i8* %flags197, align 2
  %conv198 = zext i8 %139 to i32
  %cmp199 = icmp eq i32 %conv198, 32
  br i1 %cmp199, label %if.then206, label %lor.lhs.false201

lor.lhs.false201:                                 ; preds = %cond.end187
  %140 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags202 = getelementptr inbounds %struct.regnode, %struct.regnode* %140, i32 0, i32 0
  %141 = load i8, i8* %flags202, align 2
  %conv203 = zext i8 %141 to i32
  %cmp204 = icmp eq i32 %conv203, 38
  br i1 %cmp204, label %if.then206, label %if.end221

if.then206:                                       ; preds = %lor.lhs.false201, %cond.end187
  %142 = load i8, i8* %utf8_target, align 1
  %tobool207 = trunc i8 %142 to i1
  br i1 %tobool207, label %land.lhs.true209, label %if.end220

land.lhs.true209:                                 ; preds = %if.then206
  %143 = load i32, i32* %nextchr, align 4
  %conv210 = trunc i32 %143 to i8
  %conv211 = zext i8 %conv210 to i32
  %cmp212 = icmp sge i32 %conv211, 196
  br i1 %cmp212, label %land.lhs.true214, label %if.end220

land.lhs.true214:                                 ; preds = %land.lhs.true209
  %144 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags215 = getelementptr inbounds %struct.regnode, %struct.regnode* %144, i32 0, i32 0
  %145 = load i8, i8* %flags215, align 2
  %conv216 = zext i8 %145 to i32
  %cmp217 = icmp eq i32 %conv216, 32
  br i1 %cmp217, label %if.then219, label %if.end220

if.then219:                                       ; preds = %land.lhs.true214
  br label %if.end220

if.end220:                                        ; preds = %if.then219, %land.lhs.true214, %land.lhs.true209, %if.then206
  br label %if.end221

if.end221:                                        ; preds = %if.end220, %lor.lhs.false201
  %146 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %bitmap222 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %146, i32 0, i32 5
  %147 = load i8*, i8** %bitmap222, align 8
  %tobool223 = icmp ne i8* %147, null
  br i1 %tobool223, label %land.lhs.true224, label %if.end251

land.lhs.true224:                                 ; preds = %if.end221
  %148 = load i32, i32* %nextchr, align 4
  %cmp225 = icmp slt i32 %148, 0
  br i1 %cmp225, label %if.then242, label %lor.lhs.false227

lor.lhs.false227:                                 ; preds = %land.lhs.true224
  %149 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %bitmap228 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %149, i32 0, i32 5
  %150 = load i8*, i8** %bitmap228, align 8
  %151 = load i32, i32* %nextchr, align 4
  %conv229 = trunc i32 %151 to i8
  %conv230 = zext i8 %conv229 to i32
  %shr231 = ashr i32 %conv230, 3
  %and232 = and i32 %shr231, 31
  %idxprom233 = sext i32 %and232 to i64
  %arrayidx234 = getelementptr inbounds i8, i8* %150, i64 %idxprom233
  %152 = load i8, i8* %arrayidx234, align 1
  %conv235 = sext i8 %152 to i32
  %153 = load i32, i32* %nextchr, align 4
  %conv236 = trunc i32 %153 to i8
  %conv237 = zext i8 %conv236 to i32
  %and238 = and i32 %conv237, 7
  %shl239 = shl i32 1, %and238
  %and240 = and i32 %conv235, %shl239
  %tobool241 = icmp ne i32 %and240, 0
  br i1 %tobool241, label %if.end251, label %if.then242

if.then242:                                       ; preds = %lor.lhs.false227, %land.lhs.true224
  %154 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %states = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %154, i32 0, i32 3
  %155 = load %struct._reg_trie_state*, %struct._reg_trie_state** %states, align 8
  %156 = load i32, i32* %state, align 4
  %idxprom243 = zext i32 %156 to i64
  %arrayidx244 = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %155, i64 %idxprom243
  %wordnum = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %arrayidx244, i32 0, i32 0
  %157 = load i16, i16* %wordnum, align 8
  %tobool245 = icmp ne i16 %157, 0
  br i1 %tobool245, label %if.then246, label %if.else

if.then246:                                       ; preds = %if.then242
  %158 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %jump = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %158, i32 0, i32 6
  %159 = load i16*, i16** %jump, align 8
  %tobool247 = icmp ne i16* %159, null
  br i1 %tobool247, label %if.end249, label %if.then248

if.then248:                                       ; preds = %if.then246
  br label %sw.epilog6759

if.end249:                                        ; preds = %if.then246
  br label %if.end250

if.else:                                          ; preds = %if.then242
  br label %no_silent

if.end250:                                        ; preds = %if.end249
  br label %if.end251

if.end251:                                        ; preds = %if.end250, %lor.lhs.false227, %if.end221
  %160 = load i8*, i8** %locinput, align 8
  store i8* %160, i8** %uc, align 8
  store i64 0, i64* %len, align 8
  store i64 0, i64* %foldlen, align 8
  store i8* null, i8** %uscan, align 8
  store i32 0, i32* %charcount, align 4
  store i32 0, i32* %accepted, align 4
  %161 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %jump252 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %161, i32 0, i32 6
  %162 = load i16*, i16** %jump252, align 8
  %163 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u253 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %163, i32 0, i32 2
  %trie254 = bitcast %union.anon.19* %u253 to %struct.anon.23*
  %jump255 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie254, i32 0, i32 6
  store i16* %162, i16** %jump255, align 8
  %164 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %165 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u256 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %165, i32 0, i32 2
  %trie257 = bitcast %union.anon.19* %u256 to %struct.anon.23*
  %me = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie257, i32 0, i32 7
  store %struct.regnode* %164, %struct.regnode** %me, align 8
  %166 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u258 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %166, i32 0, i32 2
  %trie259 = bitcast %union.anon.19* %u258 to %struct.anon.23*
  %firstpos = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie259, i32 0, i32 8
  store i8* null, i8** %firstpos, align 8
  %167 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u260 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %167, i32 0, i32 2
  %trie261 = bitcast %union.anon.19* %u260 to %struct.anon.23*
  %longfold = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie261, i32 0, i32 5
  store i8 0, i8* %longfold, align 8
  %168 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u262 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %168, i32 0, i32 2
  %trie263 = bitcast %union.anon.19* %u262 to %struct.anon.23*
  %nextword = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie263, i32 0, i32 10
  store i16 0, i16* %nextword, align 4
  br label %while.cond264

while.cond264:                                    ; preds = %if.end528, %if.end251
  %169 = load i32, i32* %state, align 4
  %tobool265 = icmp ne i32 %169, 0
  br i1 %tobool265, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond264
  %170 = load i8*, i8** %uc, align 8
  %171 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend266 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %171, i32 0, i32 2
  %172 = load i8*, i8** %strend266, align 8
  %cmp267 = icmp ule i8* %170, %172
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond264
  %173 = phi i1 [ false, %while.cond264 ], [ %cmp267, %land.rhs ]
  br i1 %173, label %while.body269, label %while.end

while.body269:                                    ; preds = %land.end
  %174 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %states270 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %174, i32 0, i32 3
  %175 = load %struct._reg_trie_state*, %struct._reg_trie_state** %states270, align 8
  %176 = load i32, i32* %state, align 4
  %idxprom271 = zext i32 %176 to i64
  %arrayidx272 = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %175, i64 %idxprom271
  %trans = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %arrayidx272, i32 0, i32 1
  %base273 = bitcast %union.anon.35* %trans to i32*
  %177 = load i32, i32* %base273, align 8
  store i32 %177, i32* %base, align 4
  store i64 0, i64* %uvc, align 8
  store i16 0, i16* %charid, align 2
  %178 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %states275 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %178, i32 0, i32 3
  %179 = load %struct._reg_trie_state*, %struct._reg_trie_state** %states275, align 8
  %180 = load i32, i32* %state, align 4
  %idxprom276 = zext i32 %180 to i64
  %arrayidx277 = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %179, i64 %idxprom276
  %wordnum278 = getelementptr inbounds %struct._reg_trie_state, %struct._reg_trie_state* %arrayidx277, i32 0, i32 0
  %181 = load i16, i16* %wordnum278, align 8
  store i16 %181, i16* %wordnum274, align 2
  %182 = load i16, i16* %wordnum274, align 2
  %tobool279 = icmp ne i16 %182, 0
  br i1 %tobool279, label %if.then280, label %if.end321

if.then280:                                       ; preds = %while.body269
  %183 = load i32, i32* %accepted, align 4
  %tobool281 = icmp ne i32 %183, 0
  br i1 %tobool281, label %if.end301, label %if.then282

if.then282:                                       ; preds = %if.then280
  store i32 1, i32* %accepted, align 4
  %184 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u283 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %184, i32 0, i32 2
  %trie284 = bitcast %union.anon.19* %u283 to %struct.anon.23*
  %longfold285 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie284, i32 0, i32 5
  %185 = load i8, i8* %longfold285, align 8
  %tobool286 = trunc i8 %185 to i1
  br i1 %tobool286, label %if.then287, label %if.else293

if.then287:                                       ; preds = %if.then282
  %186 = load i8*, i8** %locinput, align 8
  %187 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u288 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %187, i32 0, i32 2
  %trie289 = bitcast %union.anon.19* %u288 to %struct.anon.23*
  %firstpos290 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie289, i32 0, i32 8
  store i8* %186, i8** %firstpos290, align 8
  %188 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u291 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %188, i32 0, i32 2
  %trie292 = bitcast %union.anon.19* %u291 to %struct.anon.23*
  %firstchars = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie292, i32 0, i32 9
  store i32 0, i32* %firstchars, align 8
  br label %if.end300

if.else293:                                       ; preds = %if.then282
  %189 = load i8*, i8** %uc, align 8
  %190 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u294 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %190, i32 0, i32 2
  %trie295 = bitcast %union.anon.19* %u294 to %struct.anon.23*
  %firstpos296 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie295, i32 0, i32 8
  store i8* %189, i8** %firstpos296, align 8
  %191 = load i32, i32* %charcount, align 4
  %192 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u297 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %192, i32 0, i32 2
  %trie298 = bitcast %union.anon.19* %u297 to %struct.anon.23*
  %firstchars299 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie298, i32 0, i32 9
  store i32 %191, i32* %firstchars299, align 8
  br label %if.end300

if.end300:                                        ; preds = %if.else293, %if.then287
  br label %if.end301

if.end301:                                        ; preds = %if.end300, %if.then280
  %193 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u302 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %193, i32 0, i32 2
  %trie303 = bitcast %union.anon.19* %u302 to %struct.anon.23*
  %nextword304 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie303, i32 0, i32 10
  %194 = load i16, i16* %nextword304, align 4
  %tobool305 = icmp ne i16 %194, 0
  br i1 %tobool305, label %lor.lhs.false306, label %if.then314

lor.lhs.false306:                                 ; preds = %if.end301
  %195 = load i16, i16* %wordnum274, align 2
  %conv307 = zext i16 %195 to i32
  %196 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u308 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %196, i32 0, i32 2
  %trie309 = bitcast %union.anon.19* %u308 to %struct.anon.23*
  %nextword310 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie309, i32 0, i32 10
  %197 = load i16, i16* %nextword310, align 4
  %conv311 = zext i16 %197 to i32
  %cmp312 = icmp slt i32 %conv307, %conv311
  br i1 %cmp312, label %if.then314, label %if.end318

if.then314:                                       ; preds = %lor.lhs.false306, %if.end301
  %198 = load i16, i16* %wordnum274, align 2
  %199 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u315 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %199, i32 0, i32 2
  %trie316 = bitcast %union.anon.19* %u315 to %struct.anon.23*
  %nextword317 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie316, i32 0, i32 10
  store i16 %198, i16* %nextword317, align 4
  br label %if.end318

if.end318:                                        ; preds = %if.then314, %lor.lhs.false306
  %200 = load i16, i16* %wordnum274, align 2
  %201 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u319 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %201, i32 0, i32 2
  %trie320 = bitcast %union.anon.19* %u319 to %struct.anon.23*
  %topword = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie320, i32 0, i32 11
  store i16 %200, i16* %topword, align 2
  br label %if.end321

if.end321:                                        ; preds = %if.end318, %while.body269
  %202 = load i32, i32* %base, align 4
  %tobool322 = icmp ne i32 %202, 0
  br i1 %tobool322, label %land.lhs.true323, label %if.else527

land.lhs.true323:                                 ; preds = %if.end321
  %203 = load i64, i64* %foldlen, align 8
  %tobool324 = icmp ne i64 %203, 0
  br i1 %tobool324, label %if.then329, label %lor.lhs.false325

lor.lhs.false325:                                 ; preds = %land.lhs.true323
  %204 = load i8*, i8** %uc, align 8
  %205 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend326 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %205, i32 0, i32 2
  %206 = load i8*, i8** %strend326, align 8
  %cmp327 = icmp ult i8* %204, %206
  br i1 %cmp327, label %if.then329, label %if.else527

if.then329:                                       ; preds = %lor.lhs.false325, %land.lhs.true323
  br label %do.body

do.body:                                          ; preds = %if.then329
  store i8 2, i8* %flags330, align 1
  %207 = load i32, i32* %trie_type, align 4
  switch i32 %207, label %sw.epilog [
    i32 7, label %sw.bb331
    i32 4, label %sw.bb340
    i32 2, label %sw.bb343
    i32 5, label %sw.bb398
    i32 3, label %sw.bb402
    i32 6, label %sw.bb457
    i32 1, label %sw.bb466
    i32 0, label %sw.bb468
  ]

sw.bb331:                                         ; preds = %do.body
  %208 = load i8, i8* %utf8_target, align 1
  %tobool332 = trunc i8 %208 to i1
  br i1 %tobool332, label %land.lhs.true334, label %if.end339

land.lhs.true334:                                 ; preds = %sw.bb331
  %209 = load i8*, i8** %uc, align 8
  %210 = load i8, i8* %209, align 1
  %conv335 = zext i8 %210 to i32
  %cmp336 = icmp sge i32 %conv335, 196
  br i1 %cmp336, label %if.then338, label %if.end339

if.then338:                                       ; preds = %land.lhs.true334
  br label %if.end339

if.end339:                                        ; preds = %if.then338, %land.lhs.true334, %sw.bb331
  br label %do_trie_utf8_fold

sw.bb340:                                         ; preds = %do.body
  %211 = load i8, i8* %flags330, align 1
  %conv341 = zext i8 %211 to i32
  %or = or i32 %conv341, 4
  %conv342 = trunc i32 %or to i8
  store i8 %conv342, i8* %flags330, align 1
  br label %sw.bb343

sw.bb343:                                         ; preds = %do.body, %sw.bb340
  br label %do_trie_utf8_fold

do_trie_utf8_fold:                                ; preds = %sw.bb343, %if.end339
  %212 = load i64, i64* %foldlen, align 8
  %cmp344 = icmp ugt i64 %212, 0
  br i1 %cmp344, label %if.then346, label %if.else349

if.then346:                                       ; preds = %do_trie_utf8_fold
  %213 = load i8*, i8** %uscan, align 8
  %214 = load i32, i32* %uniflags, align 4
  %call347 = call i64 @Perl_utf8n_to_uvchr(i8* %213, i64 13, i64* %len, i32 %214)
  store i64 %call347, i64* %uvc, align 8
  %215 = load i64, i64* %len, align 8
  %216 = load i64, i64* %foldlen, align 8
  %sub = sub i64 %216, %215
  store i64 %sub, i64* %foldlen, align 8
  %217 = load i64, i64* %len, align 8
  %218 = load i8*, i8** %uscan, align 8
  %add.ptr348 = getelementptr inbounds i8, i8* %218, i64 %217
  store i8* %add.ptr348, i8** %uscan, align 8
  store i64 0, i64* %len, align 8
  br label %if.end397

if.else349:                                       ; preds = %do_trie_utf8_fold
  %219 = load i8*, i8** %uc, align 8
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %foldbuf, i64 0, i64 0
  %220 = load i8, i8* %flags330, align 1
  %call350 = call i64 @Perl__to_utf8_fold_flags(i8* %219, i8* %arraydecay, i64* %foldlen, i8 zeroext %220)
  store i64 %call350, i64* %uvc, align 8
  %221 = load i8*, i8** %uc, align 8
  %222 = load i8, i8* %221, align 1
  %idxprom351 = zext i8 %222 to i64
  %arrayidx352 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom351
  %223 = load i8, i8* %arrayidx352, align 1
  %conv353 = zext i8 %223 to i64
  store i64 %conv353, i64* %len, align 8
  %224 = load i64, i64* %uvc, align 8
  %cmp354 = icmp ult i64 %224, 128
  br i1 %cmp354, label %cond.true356, label %cond.false357

cond.true356:                                     ; preds = %if.else349
  br label %cond.end391

cond.false357:                                    ; preds = %if.else349
  %225 = load i64, i64* %uvc, align 8
  %cmp358 = icmp ult i64 %225, 2048
  br i1 %cmp358, label %cond.true360, label %cond.false361

cond.true360:                                     ; preds = %cond.false357
  br label %cond.end389

cond.false361:                                    ; preds = %cond.false357
  %226 = load i64, i64* %uvc, align 8
  %cmp362 = icmp ult i64 %226, 65536
  br i1 %cmp362, label %cond.true364, label %cond.false365

cond.true364:                                     ; preds = %cond.false361
  br label %cond.end387

cond.false365:                                    ; preds = %cond.false361
  %227 = load i64, i64* %uvc, align 8
  %cmp366 = icmp ult i64 %227, 2097152
  br i1 %cmp366, label %cond.true368, label %cond.false369

cond.true368:                                     ; preds = %cond.false365
  br label %cond.end385

cond.false369:                                    ; preds = %cond.false365
  %228 = load i64, i64* %uvc, align 8
  %cmp370 = icmp ult i64 %228, 67108864
  br i1 %cmp370, label %cond.true372, label %cond.false373

cond.true372:                                     ; preds = %cond.false369
  br label %cond.end383

cond.false373:                                    ; preds = %cond.false369
  %229 = load i64, i64* %uvc, align 8
  %cmp374 = icmp ult i64 %229, 2147483648
  br i1 %cmp374, label %cond.true376, label %cond.false377

cond.true376:                                     ; preds = %cond.false373
  br label %cond.end381

cond.false377:                                    ; preds = %cond.false373
  %230 = load i64, i64* %uvc, align 8
  %cmp378 = icmp ult i64 %230, 68719476736
  %231 = zext i1 %cmp378 to i64
  %cond380 = select i1 %cmp378, i32 7, i32 13
  br label %cond.end381

cond.end381:                                      ; preds = %cond.false377, %cond.true376
  %cond382 = phi i32 [ 6, %cond.true376 ], [ %cond380, %cond.false377 ]
  br label %cond.end383

cond.end383:                                      ; preds = %cond.end381, %cond.true372
  %cond384 = phi i32 [ 5, %cond.true372 ], [ %cond382, %cond.end381 ]
  br label %cond.end385

cond.end385:                                      ; preds = %cond.end383, %cond.true368
  %cond386 = phi i32 [ 4, %cond.true368 ], [ %cond384, %cond.end383 ]
  br label %cond.end387

cond.end387:                                      ; preds = %cond.end385, %cond.true364
  %cond388 = phi i32 [ 3, %cond.true364 ], [ %cond386, %cond.end385 ]
  br label %cond.end389

cond.end389:                                      ; preds = %cond.end387, %cond.true360
  %cond390 = phi i32 [ 2, %cond.true360 ], [ %cond388, %cond.end387 ]
  br label %cond.end391

cond.end391:                                      ; preds = %cond.end389, %cond.true356
  %cond392 = phi i32 [ 1, %cond.true356 ], [ %cond390, %cond.end389 ]
  %conv393 = sext i32 %cond392 to i64
  store i64 %conv393, i64* %skiplen, align 8
  %232 = load i64, i64* %skiplen, align 8
  %233 = load i64, i64* %foldlen, align 8
  %sub394 = sub i64 %233, %232
  store i64 %sub394, i64* %foldlen, align 8
  %arraydecay395 = getelementptr inbounds [14 x i8], [14 x i8]* %foldbuf, i64 0, i64 0
  %234 = load i64, i64* %skiplen, align 8
  %add.ptr396 = getelementptr inbounds i8, i8* %arraydecay395, i64 %234
  store i8* %add.ptr396, i8** %uscan, align 8
  br label %if.end397

if.end397:                                        ; preds = %cond.end391, %if.then346
  br label %sw.epilog

sw.bb398:                                         ; preds = %do.body
  %235 = load i8, i8* %flags330, align 1
  %conv399 = zext i8 %235 to i32
  %or400 = or i32 %conv399, 4
  %conv401 = trunc i32 %or400 to i8
  store i8 %conv401, i8* %flags330, align 1
  br label %sw.bb402

sw.bb402:                                         ; preds = %do.body, %sw.bb398
  %236 = load i64, i64* %foldlen, align 8
  %cmp403 = icmp ugt i64 %236, 0
  br i1 %cmp403, label %if.then405, label %if.else409

if.then405:                                       ; preds = %sw.bb402
  %237 = load i8*, i8** %uscan, align 8
  %238 = load i32, i32* %uniflags, align 4
  %call406 = call i64 @Perl_utf8n_to_uvchr(i8* %237, i64 13, i64* %len, i32 %238)
  store i64 %call406, i64* %uvc, align 8
  %239 = load i64, i64* %len, align 8
  %240 = load i64, i64* %foldlen, align 8
  %sub407 = sub i64 %240, %239
  store i64 %sub407, i64* %foldlen, align 8
  %241 = load i64, i64* %len, align 8
  %242 = load i8*, i8** %uscan, align 8
  %add.ptr408 = getelementptr inbounds i8, i8* %242, i64 %241
  store i8* %add.ptr408, i8** %uscan, align 8
  store i64 0, i64* %len, align 8
  br label %if.end456

if.else409:                                       ; preds = %sw.bb402
  store i64 1, i64* %len, align 8
  %243 = load i8*, i8** %uc, align 8
  %244 = load i8, i8* %243, align 1
  %arraydecay410 = getelementptr inbounds [14 x i8], [14 x i8]* %foldbuf, i64 0, i64 0
  %245 = load i8, i8* %flags330, align 1
  %conv411 = zext i8 %245 to i32
  %call412 = call i64 @Perl__to_fold_latin1(i8 zeroext %244, i8* %arraydecay410, i64* %foldlen, i32 %conv411)
  store i64 %call412, i64* %uvc, align 8
  %246 = load i64, i64* %uvc, align 8
  %cmp413 = icmp ult i64 %246, 128
  br i1 %cmp413, label %cond.true415, label %cond.false416

cond.true415:                                     ; preds = %if.else409
  br label %cond.end450

cond.false416:                                    ; preds = %if.else409
  %247 = load i64, i64* %uvc, align 8
  %cmp417 = icmp ult i64 %247, 2048
  br i1 %cmp417, label %cond.true419, label %cond.false420

cond.true419:                                     ; preds = %cond.false416
  br label %cond.end448

cond.false420:                                    ; preds = %cond.false416
  %248 = load i64, i64* %uvc, align 8
  %cmp421 = icmp ult i64 %248, 65536
  br i1 %cmp421, label %cond.true423, label %cond.false424

cond.true423:                                     ; preds = %cond.false420
  br label %cond.end446

cond.false424:                                    ; preds = %cond.false420
  %249 = load i64, i64* %uvc, align 8
  %cmp425 = icmp ult i64 %249, 2097152
  br i1 %cmp425, label %cond.true427, label %cond.false428

cond.true427:                                     ; preds = %cond.false424
  br label %cond.end444

cond.false428:                                    ; preds = %cond.false424
  %250 = load i64, i64* %uvc, align 8
  %cmp429 = icmp ult i64 %250, 67108864
  br i1 %cmp429, label %cond.true431, label %cond.false432

cond.true431:                                     ; preds = %cond.false428
  br label %cond.end442

cond.false432:                                    ; preds = %cond.false428
  %251 = load i64, i64* %uvc, align 8
  %cmp433 = icmp ult i64 %251, 2147483648
  br i1 %cmp433, label %cond.true435, label %cond.false436

cond.true435:                                     ; preds = %cond.false432
  br label %cond.end440

cond.false436:                                    ; preds = %cond.false432
  %252 = load i64, i64* %uvc, align 8
  %cmp437 = icmp ult i64 %252, 68719476736
  %253 = zext i1 %cmp437 to i64
  %cond439 = select i1 %cmp437, i32 7, i32 13
  br label %cond.end440

cond.end440:                                      ; preds = %cond.false436, %cond.true435
  %cond441 = phi i32 [ 6, %cond.true435 ], [ %cond439, %cond.false436 ]
  br label %cond.end442

cond.end442:                                      ; preds = %cond.end440, %cond.true431
  %cond443 = phi i32 [ 5, %cond.true431 ], [ %cond441, %cond.end440 ]
  br label %cond.end444

cond.end444:                                      ; preds = %cond.end442, %cond.true427
  %cond445 = phi i32 [ 4, %cond.true427 ], [ %cond443, %cond.end442 ]
  br label %cond.end446

cond.end446:                                      ; preds = %cond.end444, %cond.true423
  %cond447 = phi i32 [ 3, %cond.true423 ], [ %cond445, %cond.end444 ]
  br label %cond.end448

cond.end448:                                      ; preds = %cond.end446, %cond.true419
  %cond449 = phi i32 [ 2, %cond.true419 ], [ %cond447, %cond.end446 ]
  br label %cond.end450

cond.end450:                                      ; preds = %cond.end448, %cond.true415
  %cond451 = phi i32 [ 1, %cond.true415 ], [ %cond449, %cond.end448 ]
  %conv452 = sext i32 %cond451 to i64
  store i64 %conv452, i64* %skiplen, align 8
  %254 = load i64, i64* %skiplen, align 8
  %255 = load i64, i64* %foldlen, align 8
  %sub453 = sub i64 %255, %254
  store i64 %sub453, i64* %foldlen, align 8
  %arraydecay454 = getelementptr inbounds [14 x i8], [14 x i8]* %foldbuf, i64 0, i64 0
  %256 = load i64, i64* %skiplen, align 8
  %add.ptr455 = getelementptr inbounds i8, i8* %arraydecay454, i64 %256
  store i8* %add.ptr455, i8** %uscan, align 8
  br label %if.end456

if.end456:                                        ; preds = %cond.end450, %if.then405
  br label %sw.epilog

sw.bb457:                                         ; preds = %do.body
  %257 = load i8, i8* %utf8_target, align 1
  %tobool458 = trunc i8 %257 to i1
  br i1 %tobool458, label %land.lhs.true460, label %if.end465

land.lhs.true460:                                 ; preds = %sw.bb457
  %258 = load i8*, i8** %uc, align 8
  %259 = load i8, i8* %258, align 1
  %conv461 = zext i8 %259 to i32
  %cmp462 = icmp sge i32 %conv461, 196
  br i1 %cmp462, label %if.then464, label %if.end465

if.then464:                                       ; preds = %land.lhs.true460
  br label %if.end465

if.end465:                                        ; preds = %if.then464, %land.lhs.true460, %sw.bb457
  br label %sw.bb466

sw.bb466:                                         ; preds = %do.body, %if.end465
  %260 = load i8*, i8** %uc, align 8
  %261 = load i32, i32* %uniflags, align 4
  %call467 = call i64 @Perl_utf8n_to_uvchr(i8* %260, i64 13, i64* %len, i32 %261)
  store i64 %call467, i64* %uvc, align 8
  br label %sw.epilog

sw.bb468:                                         ; preds = %do.body
  %262 = load i8*, i8** %uc, align 8
  %263 = load i8, i8* %262, align 1
  %conv469 = zext i8 %263 to i64
  store i64 %conv469, i64* %uvc, align 8
  store i64 1, i64* %len, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb468, %do.body, %sw.bb466, %if.end456, %if.end397
  %264 = load i64, i64* %uvc, align 8
  %cmp470 = icmp ult i64 %264, 256
  br i1 %cmp470, label %if.then472, label %if.else474

if.then472:                                       ; preds = %sw.epilog
  %265 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %charmap = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %265, i32 0, i32 2
  %266 = load i16*, i16** %charmap, align 8
  %267 = load i64, i64* %uvc, align 8
  %arrayidx473 = getelementptr inbounds i16, i16* %266, i64 %267
  %268 = load i16, i16* %arrayidx473, align 2
  store i16 %268, i16* %charid, align 2
  br label %if.end491

if.else474:                                       ; preds = %sw.epilog
  store i16 0, i16* %charid, align 2
  %269 = load %struct.hv*, %struct.hv** %widecharmap, align 8
  %tobool475 = icmp ne %struct.hv* %269, null
  br i1 %tobool475, label %if.then476, label %if.end490

if.then476:                                       ; preds = %if.else474
  %270 = load %struct.hv*, %struct.hv** %widecharmap, align 8
  %271 = bitcast i64* %uvc to i8*
  %call477 = call i8* @Perl_hv_common_key_len(%struct.hv* %270, i8* %271, i32 8, i32 32, %struct.sv* null, i32 0)
  %272 = bitcast i8* %call477 to %struct.sv**
  store %struct.sv** %272, %struct.sv*** %svpp, align 8
  %273 = load %struct.sv**, %struct.sv*** %svpp, align 8
  %tobool478 = icmp ne %struct.sv** %273, null
  br i1 %tobool478, label %if.then479, label %if.end489

if.then479:                                       ; preds = %if.then476
  %274 = load %struct.sv**, %struct.sv*** %svpp, align 8
  %275 = load %struct.sv*, %struct.sv** %274, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %275, i32 0, i32 2
  %276 = load i32, i32* %sv_flags, align 4
  %and480 = and i32 %276, 2097408
  %cmp481 = icmp eq i32 %and480, 256
  br i1 %cmp481, label %cond.true483, label %cond.false484

cond.true483:                                     ; preds = %if.then479
  %277 = load %struct.sv**, %struct.sv*** %svpp, align 8
  %278 = load %struct.sv*, %struct.sv** %277, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %278, i32 0, i32 0
  %279 = load i8*, i8** %sv_any, align 8
  %280 = bitcast i8* %279 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %280, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %281 = load i64, i64* %xivu_iv, align 8
  br label %cond.end486

cond.false484:                                    ; preds = %if.then479
  %282 = load %struct.sv**, %struct.sv*** %svpp, align 8
  %283 = load %struct.sv*, %struct.sv** %282, align 8
  %call485 = call i64 @Perl_sv_2iv_flags(%struct.sv* %283, i32 2)
  br label %cond.end486

cond.end486:                                      ; preds = %cond.false484, %cond.true483
  %cond487 = phi i64 [ %281, %cond.true483 ], [ %call485, %cond.false484 ]
  %conv488 = trunc i64 %cond487 to i16
  store i16 %conv488, i16* %charid, align 2
  br label %if.end489

if.end489:                                        ; preds = %cond.end486, %if.then476
  br label %if.end490

if.end490:                                        ; preds = %if.end489, %if.else474
  br label %if.end491

if.end491:                                        ; preds = %if.end490, %if.then472
  br label %do.end

do.end:                                           ; preds = %if.end491
  %284 = load i32, i32* %charcount, align 4
  %inc492 = add i32 %284, 1
  store i32 %inc492, i32* %charcount, align 4
  %285 = load i64, i64* %foldlen, align 8
  %cmp493 = icmp ugt i64 %285, 0
  br i1 %cmp493, label %if.then495, label %if.end499

if.then495:                                       ; preds = %do.end
  %286 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u496 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %286, i32 0, i32 2
  %trie497 = bitcast %union.anon.19* %u496 to %struct.anon.23*
  %longfold498 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie497, i32 0, i32 5
  store i8 1, i8* %longfold498, align 8
  br label %if.end499

if.end499:                                        ; preds = %if.then495, %do.end
  %287 = load i16, i16* %charid, align 2
  %conv500 = zext i16 %287 to i32
  %tobool501 = icmp ne i32 %conv500, 0
  br i1 %tobool501, label %land.lhs.true502, label %if.else524

land.lhs.true502:                                 ; preds = %if.end499
  %288 = load i32, i32* %base, align 4
  %289 = load i16, i16* %charid, align 2
  %conv503 = zext i16 %289 to i32
  %add504 = add i32 %288, %conv503
  %sub505 = sub i32 %add504, 1
  %290 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %uniquecharcount = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %290, i32 0, i32 8
  %291 = load i16, i16* %uniquecharcount, align 8
  %conv506 = zext i16 %291 to i32
  %sub507 = sub i32 %sub505, %conv506
  store i32 %sub507, i32* %offset, align 4
  %cmp508 = icmp sge i32 %sub507, 0
  br i1 %cmp508, label %land.lhs.true510, label %if.else524

land.lhs.true510:                                 ; preds = %land.lhs.true502
  %292 = load i32, i32* %offset, align 4
  %293 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %lasttrans = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %293, i32 0, i32 1
  %294 = load i32, i32* %lasttrans, align 4
  %cmp511 = icmp ult i32 %292, %294
  br i1 %cmp511, label %land.lhs.true513, label %if.else524

land.lhs.true513:                                 ; preds = %land.lhs.true510
  %295 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %trans514 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %295, i32 0, i32 4
  %296 = load %struct._reg_trie_trans*, %struct._reg_trie_trans** %trans514, align 8
  %297 = load i32, i32* %offset, align 4
  %idxprom515 = sext i32 %297 to i64
  %arrayidx516 = getelementptr inbounds %struct._reg_trie_trans, %struct._reg_trie_trans* %296, i64 %idxprom515
  %check = getelementptr inbounds %struct._reg_trie_trans, %struct._reg_trie_trans* %arrayidx516, i32 0, i32 1
  %298 = load i32, i32* %check, align 4
  %299 = load i32, i32* %state, align 4
  %cmp517 = icmp eq i32 %298, %299
  br i1 %cmp517, label %if.then519, label %if.else524

if.then519:                                       ; preds = %land.lhs.true513
  %300 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %trans520 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %300, i32 0, i32 4
  %301 = load %struct._reg_trie_trans*, %struct._reg_trie_trans** %trans520, align 8
  %302 = load i32, i32* %offset, align 4
  %idxprom521 = sext i32 %302 to i64
  %arrayidx522 = getelementptr inbounds %struct._reg_trie_trans, %struct._reg_trie_trans* %301, i64 %idxprom521
  %next523 = getelementptr inbounds %struct._reg_trie_trans, %struct._reg_trie_trans* %arrayidx522, i32 0, i32 0
  %303 = load i32, i32* %next523, align 4
  store i32 %303, i32* %state, align 4
  br label %if.end525

if.else524:                                       ; preds = %land.lhs.true513, %land.lhs.true510, %land.lhs.true502, %if.end499
  store i32 0, i32* %state, align 4
  br label %if.end525

if.end525:                                        ; preds = %if.else524, %if.then519
  %304 = load i64, i64* %len, align 8
  %305 = load i8*, i8** %uc, align 8
  %add.ptr526 = getelementptr inbounds i8, i8* %305, i64 %304
  store i8* %add.ptr526, i8** %uc, align 8
  br label %if.end528

if.else527:                                       ; preds = %lor.lhs.false325, %if.end321
  store i32 0, i32* %state, align 4
  br label %if.end528

if.end528:                                        ; preds = %if.else527, %if.end525
  br label %while.cond264

while.end:                                        ; preds = %land.end
  %306 = load i32, i32* %accepted, align 4
  %tobool529 = icmp ne i32 %306, 0
  br i1 %tobool529, label %if.end531, label %if.then530

if.then530:                                       ; preds = %while.end
  br label %no

if.end531:                                        ; preds = %while.end
  %307 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u532 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %307, i32 0, i32 2
  %trie533 = bitcast %union.anon.19* %u532 to %struct.anon.23*
  %topword534 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie533, i32 0, i32 11
  %308 = load i16, i16* %topword534, align 2
  store i16 %308, i16* %w, align 2
  store i32 0, i32* %accepted, align 4
  br label %while.cond535

while.cond535:                                    ; preds = %while.body537, %if.end531
  %309 = load i16, i16* %w, align 2
  %tobool536 = icmp ne i16 %309, 0
  br i1 %tobool536, label %while.body537, label %while.end541

while.body537:                                    ; preds = %while.cond535
  %310 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie, align 8
  %wordinfo = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %310, i32 0, i32 7
  %311 = load %struct.reg_trie_wordinfo*, %struct.reg_trie_wordinfo** %wordinfo, align 8
  %312 = load i16, i16* %w, align 2
  %idxprom538 = zext i16 %312 to i64
  %arrayidx539 = getelementptr inbounds %struct.reg_trie_wordinfo, %struct.reg_trie_wordinfo* %311, i64 %idxprom538
  %prev = getelementptr inbounds %struct.reg_trie_wordinfo, %struct.reg_trie_wordinfo* %arrayidx539, i32 0, i32 0
  %313 = load i16, i16* %prev, align 4
  store i16 %313, i16* %w, align 2
  %314 = load i32, i32* %accepted, align 4
  %inc540 = add i32 %314, 1
  store i32 %inc540, i32* %accepted, align 4
  br label %while.cond535

while.end541:                                     ; preds = %while.cond535
  %315 = load i32, i32* %accepted, align 4
  %316 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u542 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %316, i32 0, i32 2
  %trie543 = bitcast %union.anon.19* %u542 to %struct.anon.23*
  %accepted544 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie543, i32 0, i32 4
  store i32 %315, i32* %accepted544, align 4
  br label %trie_first_try

sw.bb545:                                         ; preds = %cond.end45
  %317 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u547 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %317, i32 0, i32 2
  %trie548 = bitcast %union.anon.19* %u547 to %struct.anon.23*
  %jump549 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie548, i32 0, i32 6
  %318 = load i16*, i16** %jump549, align 8
  %tobool550 = icmp ne i16* %318, null
  br i1 %tobool550, label %if.then551, label %if.end575

if.then551:                                       ; preds = %sw.bb545
  br label %do.body552

do.body552:                                       ; preds = %if.then551
  %319 = load i32, i32* @PL_savestack_ix, align 4
  %320 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u553 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %320, i32 0, i32 2
  %trie554 = bitcast %union.anon.19* %u553 to %struct.anon.23*
  %cp = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie554, i32 0, i32 3
  %321 = load i32, i32* %cp, align 8
  %cmp555 = icmp sgt i32 %319, %321
  br i1 %cmp555, label %if.then557, label %if.end561

if.then557:                                       ; preds = %do.body552
  %322 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u558 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %322, i32 0, i32 2
  %trie559 = bitcast %union.anon.19* %u558 to %struct.anon.23*
  %cp560 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie559, i32 0, i32 3
  %323 = load i32, i32* %cp560, align 8
  call void @Perl_leave_scope(i32 %323)
  br label %if.end561

if.end561:                                        ; preds = %if.then557, %do.body552
  br label %do.end562

do.end562:                                        ; preds = %if.end561
  %324 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen = getelementptr inbounds %struct.regexp, %struct.regexp* %324, i32 0, i32 15
  %325 = load i32, i32* %lastparen, align 8
  store i32 %325, i32* %n, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.end562
  %326 = load i32, i32* %n, align 4
  %327 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u563 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %327, i32 0, i32 2
  %trie564 = bitcast %union.anon.19* %u563 to %struct.anon.23*
  %lastparen565 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie564, i32 0, i32 1
  %328 = load i32, i32* %lastparen565, align 8
  %cmp566 = icmp ugt i32 %326, %328
  br i1 %cmp566, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %329 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs568 = getelementptr inbounds %struct.regexp, %struct.regexp* %329, i32 0, i32 17
  %330 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs568, align 8
  %331 = load i32, i32* %n, align 4
  %idxprom569 = zext i32 %331 to i64
  %arrayidx570 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %330, i64 %idxprom569
  %end = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx570, i32 0, i32 1
  store i64 -1, i64* %end, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %332 = load i32, i32* %n, align 4
  %dec = add i32 %332, -1
  store i32 %dec, i32* %n, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %333 = load i32, i32* %n, align 4
  %334 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen571 = getelementptr inbounds %struct.regexp, %struct.regexp* %334, i32 0, i32 15
  store i32 %333, i32* %lastparen571, align 8
  %335 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u572 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %335, i32 0, i32 2
  %trie573 = bitcast %union.anon.19* %u572 to %struct.anon.23*
  %lastcloseparen = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie573, i32 0, i32 2
  %336 = load i32, i32* %lastcloseparen, align 4
  %337 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen574 = getelementptr inbounds %struct.regexp, %struct.regexp* %337, i32 0, i32 16
  store i32 %336, i32* %lastcloseparen574, align 4
  br label %if.end575

if.end575:                                        ; preds = %for.end, %sw.bb545
  %338 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u576 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %338, i32 0, i32 2
  %trie577 = bitcast %union.anon.19* %u576 to %struct.anon.23*
  %accepted578 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie577, i32 0, i32 4
  %339 = load i32, i32* %accepted578, align 4
  %dec579 = add i32 %339, -1
  store i32 %dec579, i32* %accepted578, align 4
  %tobool580 = icmp ne i32 %dec579, 0
  br i1 %tobool580, label %if.end582, label %if.then581

if.then581:                                       ; preds = %if.end575
  br label %no_silent

if.end582:                                        ; preds = %if.end575
  store i16 0, i16* %min, align 2
  %340 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u584 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %340, i32 0, i32 2
  %trie585 = bitcast %union.anon.19* %u584 to %struct.anon.23*
  %nextword586 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie585, i32 0, i32 10
  %341 = load i16, i16* %nextword586, align 4
  store i16 %341, i16* %nextword583, align 2
  %342 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data588 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %342, i32 0, i32 3
  %343 = load %struct.reg_data*, %struct.reg_data** %data588, align 8
  %data589 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %343, i32 0, i32 2
  %344 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u590 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %344, i32 0, i32 2
  %trie591 = bitcast %union.anon.19* %u590 to %struct.anon.23*
  %me592 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie591, i32 0, i32 7
  %345 = load %struct.regnode*, %struct.regnode** %me592, align 8
  %346 = bitcast %struct.regnode* %345 to %struct.regnode_1*
  %arg1593 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %346, i32 0, i32 3
  %347 = load i32, i32* %arg1593, align 4
  %idxprom594 = zext i32 %347 to i64
  %arrayidx595 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data589, i64 0, i64 %idxprom594
  %348 = load i8*, i8** %arrayidx595, align 8
  %349 = bitcast i8* %348 to %struct._reg_trie_data*
  %wordinfo596 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %349, i32 0, i32 7
  %350 = load %struct.reg_trie_wordinfo*, %struct.reg_trie_wordinfo** %wordinfo596, align 8
  store %struct.reg_trie_wordinfo* %350, %struct.reg_trie_wordinfo** %wordinfo587, align 8
  %351 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u597 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %351, i32 0, i32 2
  %trie598 = bitcast %union.anon.19* %u597 to %struct.anon.23*
  %topword599 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie598, i32 0, i32 11
  %352 = load i16, i16* %topword599, align 2
  store i16 %352, i16* %word, align 2
  br label %for.cond600

for.cond600:                                      ; preds = %for.inc616, %if.end582
  %353 = load i16, i16* %word, align 2
  %tobool601 = icmp ne i16 %353, 0
  br i1 %tobool601, label %for.body602, label %for.end620

for.body602:                                      ; preds = %for.cond600
  %354 = load i16, i16* %word, align 2
  %conv603 = zext i16 %354 to i32
  %355 = load i16, i16* %nextword583, align 2
  %conv604 = zext i16 %355 to i32
  %cmp605 = icmp sgt i32 %conv603, %conv604
  br i1 %cmp605, label %land.lhs.true607, label %if.end615

land.lhs.true607:                                 ; preds = %for.body602
  %356 = load i16, i16* %min, align 2
  %tobool608 = icmp ne i16 %356, 0
  br i1 %tobool608, label %lor.lhs.false609, label %if.then614

lor.lhs.false609:                                 ; preds = %land.lhs.true607
  %357 = load i16, i16* %word, align 2
  %conv610 = zext i16 %357 to i32
  %358 = load i16, i16* %min, align 2
  %conv611 = zext i16 %358 to i32
  %cmp612 = icmp slt i32 %conv610, %conv611
  br i1 %cmp612, label %if.then614, label %if.end615

if.then614:                                       ; preds = %lor.lhs.false609, %land.lhs.true607
  %359 = load i16, i16* %word, align 2
  store i16 %359, i16* %min, align 2
  br label %if.end615

if.end615:                                        ; preds = %if.then614, %lor.lhs.false609, %for.body602
  br label %for.inc616

for.inc616:                                       ; preds = %if.end615
  %360 = load %struct.reg_trie_wordinfo*, %struct.reg_trie_wordinfo** %wordinfo587, align 8
  %361 = load i16, i16* %word, align 2
  %idxprom617 = zext i16 %361 to i64
  %arrayidx618 = getelementptr inbounds %struct.reg_trie_wordinfo, %struct.reg_trie_wordinfo* %360, i64 %idxprom617
  %prev619 = getelementptr inbounds %struct.reg_trie_wordinfo, %struct.reg_trie_wordinfo* %arrayidx618, i32 0, i32 0
  %362 = load i16, i16* %prev619, align 4
  store i16 %362, i16* %word, align 2
  br label %for.cond600

for.end620:                                       ; preds = %for.cond600
  %363 = load i16, i16* %min, align 2
  %364 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u621 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %364, i32 0, i32 2
  %trie622 = bitcast %union.anon.19* %u621 to %struct.anon.23*
  %nextword623 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie622, i32 0, i32 10
  store i16 %363, i16* %nextword623, align 4
  br label %trie_first_try

trie_first_try:                                   ; preds = %for.end620, %while.end541
  %365 = load i8, i8* %do_cutgroup, align 1
  %tobool624 = trunc i8 %365 to i1
  br i1 %tobool624, label %if.then625, label %if.end626

if.then625:                                       ; preds = %trie_first_try
  store i8 0, i8* %do_cutgroup, align 1
  store i8 0, i8* %no_final, align 1
  br label %if.end626

if.end626:                                        ; preds = %if.then625, %trie_first_try
  %366 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u627 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %366, i32 0, i32 2
  %trie628 = bitcast %union.anon.19* %u627 to %struct.anon.23*
  %jump629 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie628, i32 0, i32 6
  %367 = load i16*, i16** %jump629, align 8
  %tobool630 = icmp ne i16* %367, null
  br i1 %tobool630, label %if.then631, label %if.end643

if.then631:                                       ; preds = %if.end626
  %368 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen632 = getelementptr inbounds %struct.regexp, %struct.regexp* %368, i32 0, i32 15
  %369 = load i32, i32* %lastparen632, align 8
  %370 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u633 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %370, i32 0, i32 2
  %trie634 = bitcast %union.anon.19* %u633 to %struct.anon.23*
  %lastparen635 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie634, i32 0, i32 1
  store i32 %369, i32* %lastparen635, align 8
  %371 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen636 = getelementptr inbounds %struct.regexp, %struct.regexp* %371, i32 0, i32 16
  %372 = load i32, i32* %lastcloseparen636, align 4
  %373 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u637 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %373, i32 0, i32 2
  %trie638 = bitcast %union.anon.19* %u637 to %struct.anon.23*
  %lastcloseparen639 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie638, i32 0, i32 2
  store i32 %372, i32* %lastcloseparen639, align 4
  %374 = load i32, i32* @PL_savestack_ix, align 4
  %375 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u640 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %375, i32 0, i32 2
  %trie641 = bitcast %union.anon.19* %u640 to %struct.anon.23*
  %cp642 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie641, i32 0, i32 3
  store i32 %374, i32* %cp642, align 8
  br label %if.end643

if.end643:                                        ; preds = %if.then631, %if.end626
  %376 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data645 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %376, i32 0, i32 3
  %377 = load %struct.reg_data*, %struct.reg_data** %data645, align 8
  %data646 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %377, i32 0, i32 2
  %378 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u647 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %378, i32 0, i32 2
  %trie648 = bitcast %union.anon.19* %u647 to %struct.anon.23*
  %me649 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie648, i32 0, i32 7
  %379 = load %struct.regnode*, %struct.regnode** %me649, align 8
  %380 = bitcast %struct.regnode* %379 to %struct.regnode_1*
  %arg1650 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %380, i32 0, i32 3
  %381 = load i32, i32* %arg1650, align 4
  %idxprom651 = zext i32 %381 to i64
  %arrayidx652 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data646, i64 0, i64 %idxprom651
  %382 = load i8*, i8** %arrayidx652, align 8
  %383 = bitcast i8* %382 to %struct._reg_trie_data*
  store %struct._reg_trie_data* %383, %struct._reg_trie_data** %trie644, align 8
  %384 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie644, align 8
  %wordinfo653 = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %384, i32 0, i32 7
  %385 = load %struct.reg_trie_wordinfo*, %struct.reg_trie_wordinfo** %wordinfo653, align 8
  %386 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u654 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %386, i32 0, i32 2
  %trie655 = bitcast %union.anon.19* %u654 to %struct.anon.23*
  %nextword656 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie655, i32 0, i32 10
  %387 = load i16, i16* %nextword656, align 4
  %idxprom657 = zext i16 %387 to i64
  %arrayidx658 = getelementptr inbounds %struct.reg_trie_wordinfo, %struct.reg_trie_wordinfo* %385, i64 %idxprom657
  %len659 = getelementptr inbounds %struct.reg_trie_wordinfo, %struct.reg_trie_wordinfo* %arrayidx658, i32 0, i32 1
  %388 = load i32, i32* %len659, align 4
  %389 = load %struct._reg_trie_data*, %struct._reg_trie_data** %trie644, align 8
  %prefixlen = getelementptr inbounds %struct._reg_trie_data, %struct._reg_trie_data* %389, i32 0, i32 12
  %390 = load i32, i32* %prefixlen, align 8
  %sub660 = sub i32 %388, %390
  %391 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u661 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %391, i32 0, i32 2
  %trie662 = bitcast %union.anon.19* %u661 to %struct.anon.23*
  %firstchars663 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie662, i32 0, i32 9
  %392 = load i32, i32* %firstchars663, align 8
  %sub664 = sub i32 %sub660, %392
  store i32 %sub664, i32* %chars, align 4
  %393 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u665 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %393, i32 0, i32 2
  %trie666 = bitcast %union.anon.19* %u665 to %struct.anon.23*
  %firstpos667 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie666, i32 0, i32 8
  %394 = load i8*, i8** %firstpos667, align 8
  store i8* %394, i8** %uc546, align 8
  %395 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u668 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %395, i32 0, i32 2
  %trie669 = bitcast %union.anon.19* %u668 to %struct.anon.23*
  %longfold670 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie669, i32 0, i32 5
  %396 = load i8, i8* %longfold670, align 8
  %tobool671 = trunc i8 %396 to i1
  br i1 %tobool671, label %if.then672, label %if.else704

if.then672:                                       ; preds = %if.end643
  br label %while.cond678

while.cond678:                                    ; preds = %while.end702, %if.then672
  %397 = load i32, i32* %chars, align 4
  %tobool679 = icmp ne i32 %397, 0
  br i1 %tobool679, label %while.body680, label %while.end703

while.body680:                                    ; preds = %while.cond678
  %398 = load i8, i8* %utf8_target, align 1
  %tobool681 = trunc i8 %398 to i1
  br i1 %tobool681, label %if.then682, label %if.else685

if.then682:                                       ; preds = %while.body680
  %399 = load i8*, i8** %uc546, align 8
  %400 = load i32, i32* %uniflags, align 4
  %call683 = call i64 @Perl_utf8n_to_uvchr(i8* %399, i64 13, i64* %len675, i32 %400)
  store i64 %call683, i64* %uvc676, align 8
  %401 = load i64, i64* %len675, align 8
  %402 = load i8*, i8** %uc546, align 8
  %add.ptr684 = getelementptr inbounds i8, i8* %402, i64 %401
  store i8* %add.ptr684, i8** %uc546, align 8
  br label %if.end688

if.else685:                                       ; preds = %while.body680
  %403 = load i8*, i8** %uc546, align 8
  %404 = load i8, i8* %403, align 1
  %conv686 = zext i8 %404 to i64
  store i64 %conv686, i64* %uvc676, align 8
  %405 = load i8*, i8** %uc546, align 8
  %incdec.ptr687 = getelementptr inbounds i8, i8* %405, i32 1
  store i8* %incdec.ptr687, i8** %uc546, align 8
  br label %if.end688

if.end688:                                        ; preds = %if.else685, %if.then682
  %406 = load i64, i64* %uvc676, align 8
  %arraydecay689 = getelementptr inbounds [14 x i8], [14 x i8]* %foldbuf673, i64 0, i64 0
  %call690 = call i64 @Perl__to_uni_fold_flags(i64 %406, i8* %arraydecay689, i64* %foldlen674, i8 zeroext 2)
  store i64 %call690, i64* %uvc676, align 8
  %arraydecay691 = getelementptr inbounds [14 x i8], [14 x i8]* %foldbuf673, i64 0, i64 0
  store i8* %arraydecay691, i8** %uscan677, align 8
  br label %while.cond692

while.cond692:                                    ; preds = %if.end698, %if.end688
  %407 = load i64, i64* %foldlen674, align 8
  %tobool693 = icmp ne i64 %407, 0
  br i1 %tobool693, label %while.body694, label %while.end702

while.body694:                                    ; preds = %while.cond692
  %408 = load i32, i32* %chars, align 4
  %dec695 = add i32 %408, -1
  store i32 %dec695, i32* %chars, align 4
  %tobool696 = icmp ne i32 %dec695, 0
  br i1 %tobool696, label %if.end698, label %if.then697

if.then697:                                       ; preds = %while.body694
  br label %while.end702

if.end698:                                        ; preds = %while.body694
  %409 = load i8*, i8** %uscan677, align 8
  %410 = load i32, i32* %uniflags, align 4
  %call699 = call i64 @Perl_utf8n_to_uvchr(i8* %409, i64 13, i64* %len675, i32 %410)
  store i64 %call699, i64* %uvc676, align 8
  %411 = load i64, i64* %len675, align 8
  %412 = load i8*, i8** %uscan677, align 8
  %add.ptr700 = getelementptr inbounds i8, i8* %412, i64 %411
  store i8* %add.ptr700, i8** %uscan677, align 8
  %413 = load i64, i64* %len675, align 8
  %414 = load i64, i64* %foldlen674, align 8
  %sub701 = sub i64 %414, %413
  store i64 %sub701, i64* %foldlen674, align 8
  br label %while.cond692

while.end702:                                     ; preds = %if.then697, %while.cond692
  br label %while.cond678

while.end703:                                     ; preds = %while.cond678
  br label %if.end721

if.else704:                                       ; preds = %if.end643
  %415 = load i8, i8* %utf8_target, align 1
  %tobool705 = trunc i8 %415 to i1
  br i1 %tobool705, label %if.then706, label %if.else717

if.then706:                                       ; preds = %if.else704
  br label %while.cond707

while.cond707:                                    ; preds = %while.body710, %if.then706
  %416 = load i32, i32* %chars, align 4
  %dec708 = add i32 %416, -1
  store i32 %dec708, i32* %chars, align 4
  %tobool709 = icmp ne i32 %416, 0
  br i1 %tobool709, label %while.body710, label %while.end716

while.body710:                                    ; preds = %while.cond707
  %417 = load i8*, i8** %uc546, align 8
  %418 = load i8, i8* %417, align 1
  %idxprom711 = zext i8 %418 to i64
  %arrayidx712 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom711
  %419 = load i8, i8* %arrayidx712, align 1
  %conv713 = zext i8 %419 to i32
  %420 = load i8*, i8** %uc546, align 8
  %idx.ext714 = sext i32 %conv713 to i64
  %add.ptr715 = getelementptr inbounds i8, i8* %420, i64 %idx.ext714
  store i8* %add.ptr715, i8** %uc546, align 8
  br label %while.cond707

while.end716:                                     ; preds = %while.cond707
  br label %if.end720

if.else717:                                       ; preds = %if.else704
  %421 = load i32, i32* %chars, align 4
  %422 = load i8*, i8** %uc546, align 8
  %idx.ext718 = zext i32 %421 to i64
  %add.ptr719 = getelementptr inbounds i8, i8* %422, i64 %idx.ext718
  store i8* %add.ptr719, i8** %uc546, align 8
  br label %if.end720

if.end720:                                        ; preds = %if.else717, %while.end716
  br label %if.end721

if.end721:                                        ; preds = %if.end720, %while.end703
  %423 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u722 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %423, i32 0, i32 2
  %trie723 = bitcast %union.anon.19* %u722 to %struct.anon.23*
  %me724 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie723, i32 0, i32 7
  %424 = load %struct.regnode*, %struct.regnode** %me724, align 8
  %425 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u725 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %425, i32 0, i32 2
  %trie726 = bitcast %union.anon.19* %u725 to %struct.anon.23*
  %jump727 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie726, i32 0, i32 6
  %426 = load i16*, i16** %jump727, align 8
  %tobool728 = icmp ne i16* %426, null
  br i1 %tobool728, label %land.lhs.true729, label %cond.false750

land.lhs.true729:                                 ; preds = %if.end721
  %427 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u730 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %427, i32 0, i32 2
  %trie731 = bitcast %union.anon.19* %u730 to %struct.anon.23*
  %jump732 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie731, i32 0, i32 6
  %428 = load i16*, i16** %jump732, align 8
  %429 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u733 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %429, i32 0, i32 2
  %trie734 = bitcast %union.anon.19* %u733 to %struct.anon.23*
  %nextword735 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie734, i32 0, i32 10
  %430 = load i16, i16* %nextword735, align 4
  %idxprom736 = zext i16 %430 to i64
  %arrayidx737 = getelementptr inbounds i16, i16* %428, i64 %idxprom736
  %431 = load i16, i16* %arrayidx737, align 2
  %conv738 = zext i16 %431 to i32
  %tobool739 = icmp ne i32 %conv738, 0
  br i1 %tobool739, label %cond.true740, label %cond.false750

cond.true740:                                     ; preds = %land.lhs.true729
  %432 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u741 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %432, i32 0, i32 2
  %trie742 = bitcast %union.anon.19* %u741 to %struct.anon.23*
  %jump743 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie742, i32 0, i32 6
  %433 = load i16*, i16** %jump743, align 8
  %434 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u744 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %434, i32 0, i32 2
  %trie745 = bitcast %union.anon.19* %u744 to %struct.anon.23*
  %nextword746 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie745, i32 0, i32 10
  %435 = load i16, i16* %nextword746, align 4
  %idxprom747 = zext i16 %435 to i64
  %arrayidx748 = getelementptr inbounds i16, i16* %433, i64 %idxprom747
  %436 = load i16, i16* %arrayidx748, align 2
  %conv749 = zext i16 %436 to i32
  br label %cond.end756

cond.false750:                                    ; preds = %land.lhs.true729, %if.end721
  %437 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u751 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %437, i32 0, i32 2
  %trie752 = bitcast %union.anon.19* %u751 to %struct.anon.23*
  %me753 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie752, i32 0, i32 7
  %438 = load %struct.regnode*, %struct.regnode** %me753, align 8
  %next_off754 = getelementptr inbounds %struct.regnode, %struct.regnode* %438, i32 0, i32 2
  %439 = load i16, i16* %next_off754, align 2
  %conv755 = zext i16 %439 to i32
  br label %cond.end756

cond.end756:                                      ; preds = %cond.false750, %cond.true740
  %cond757 = phi i32 [ %conv749, %cond.true740 ], [ %conv755, %cond.false750 ]
  %idx.ext758 = sext i32 %cond757 to i64
  %add.ptr759 = getelementptr inbounds %struct.regnode, %struct.regnode* %424, i64 %idx.ext758
  store %struct.regnode* %add.ptr759, %struct.regnode** %scan, align 8
  %440 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u760 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %440, i32 0, i32 2
  %trie761 = bitcast %union.anon.19* %u760 to %struct.anon.23*
  %accepted762 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %trie761, i32 0, i32 4
  %441 = load i32, i32* %accepted762, align 4
  %cmp763 = icmp ugt i32 %441, 1
  br i1 %cmp763, label %if.then768, label %lor.lhs.false765

lor.lhs.false765:                                 ; preds = %cond.end756
  %442 = load i8, i8* %has_cutgroup, align 1
  %tobool766 = trunc i8 %442 to i1
  br i1 %tobool766, label %if.then768, label %if.end770

if.then768:                                       ; preds = %lor.lhs.false765, %cond.end756
  %443 = load i8*, i8** %uc546, align 8
  store i8* %443, i8** %pushinput, align 8
  %444 = load %struct.regnode*, %struct.regnode** %scan, align 8
  store %struct.regnode* %444, %struct.regnode** %scan, align 8
  %445 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state769 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %445, i32 0, i32 0
  store i32 94, i32* %resume_state769, align 8
  br label %push_state

if.end770:                                        ; preds = %lor.lhs.false765
  %446 = load i8*, i8** %uc546, align 8
  store i8* %446, i8** %locinput, align 8
  br label %while.cond

sw.bb771:                                         ; preds = %cond.end45
  %447 = load i8, i8* %utf8_target, align 1
  %tobool772 = trunc i8 %447 to i1
  br i1 %tobool772, label %land.lhs.true774, label %if.end779

land.lhs.true774:                                 ; preds = %sw.bb771
  %448 = load i8*, i8** %locinput, align 8
  %449 = load i8, i8* %448, align 1
  %conv775 = zext i8 %449 to i32
  %cmp776 = icmp sge i32 %conv775, 196
  br i1 %cmp776, label %if.then778, label %if.end779

if.then778:                                       ; preds = %land.lhs.true774
  br label %if.end779

if.end779:                                        ; preds = %if.then778, %land.lhs.true774, %sw.bb771
  br label %sw.bb780

sw.bb780:                                         ; preds = %cond.end45, %if.end779
  %450 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %451 = bitcast %struct.regnode* %450 to %struct.regnode_string*
  %string = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %451, i32 0, i32 3
  %arraydecay781 = getelementptr inbounds [1 x i8], [1 x i8]* %string, i64 0, i64 0
  store i8* %arraydecay781, i8** %s, align 8
  %452 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %453 = bitcast %struct.regnode* %452 to %struct.regnode_string*
  %str_len = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %453, i32 0, i32 0
  %454 = load i8, i8* %str_len, align 2
  %conv782 = zext i8 %454 to i64
  store i64 %conv782, i64* %ln, align 8
  %455 = load i8, i8* %utf8_target, align 1
  %tobool783 = trunc i8 %455 to i1
  %conv784 = zext i1 %tobool783 to i32
  %456 = load i8, i8* %is_utf8_pat, align 1
  %tobool785 = trunc i8 %456 to i1
  %conv786 = zext i1 %tobool785 to i32
  %cmp787 = icmp ne i32 %conv784, %conv786
  br i1 %cmp787, label %if.then789, label %if.else877

if.then789:                                       ; preds = %sw.bb780
  %457 = load i8*, i8** %locinput, align 8
  store i8* %457, i8** %l, align 8
  %458 = load i8*, i8** %s, align 8
  %459 = load i64, i64* %ln, align 8
  %add.ptr790 = getelementptr inbounds i8, i8* %458, i64 %459
  store i8* %add.ptr790, i8** %e, align 8
  %460 = load i8, i8* %utf8_target, align 1
  %tobool791 = trunc i8 %460 to i1
  br i1 %tobool791, label %if.then792, label %if.else834

if.then792:                                       ; preds = %if.then789
  br label %while.cond793

while.cond793:                                    ; preds = %if.end831, %if.then792
  %461 = load i8*, i8** %s, align 8
  %462 = load i8*, i8** %e, align 8
  %cmp794 = icmp ult i8* %461, %462
  br i1 %cmp794, label %while.body796, label %while.end833

while.body796:                                    ; preds = %while.cond793
  %463 = load i8*, i8** %l, align 8
  %464 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend797 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %464, i32 0, i32 2
  %465 = load i8*, i8** %strend797, align 8
  %cmp798 = icmp uge i8* %463, %465
  br i1 %cmp798, label %if.then804, label %lor.lhs.false800

lor.lhs.false800:                                 ; preds = %while.body796
  %466 = load i8*, i8** %l, align 8
  %467 = load i8, i8* %466, align 1
  %conv801 = zext i8 %467 to i32
  %cmp802 = icmp sge i32 %conv801, 196
  br i1 %cmp802, label %if.then804, label %if.end805

if.then804:                                       ; preds = %lor.lhs.false800, %while.body796
  br label %no

if.end805:                                        ; preds = %lor.lhs.false800
  %468 = load i8*, i8** %l, align 8
  %469 = load i8, i8* %468, align 1
  %conv806 = zext i8 %469 to i64
  %cmp807 = icmp ult i64 %conv806, 128
  br i1 %cmp807, label %if.then809, label %if.else817

if.then809:                                       ; preds = %if.end805
  %470 = load i8*, i8** %l, align 8
  %471 = load i8, i8* %470, align 1
  %conv810 = sext i8 %471 to i32
  %472 = load i8*, i8** %s, align 8
  %473 = load i8, i8* %472, align 1
  %conv811 = sext i8 %473 to i32
  %cmp812 = icmp ne i32 %conv810, %conv811
  br i1 %cmp812, label %if.then814, label %if.end815

if.then814:                                       ; preds = %if.then809
  br label %no

if.end815:                                        ; preds = %if.then809
  %474 = load i8*, i8** %l, align 8
  %incdec.ptr816 = getelementptr inbounds i8, i8* %474, i32 1
  store i8* %incdec.ptr816, i8** %l, align 8
  br label %if.end831

if.else817:                                       ; preds = %if.end805
  %475 = load i8*, i8** %l, align 8
  %476 = load i8, i8* %475, align 1
  %conv818 = sext i8 %476 to i32
  %and819 = and i32 %conv818, 31
  %shl820 = shl i32 %and819, 6
  %477 = load i8*, i8** %l, align 8
  %add.ptr821 = getelementptr inbounds i8, i8* %477, i64 1
  %478 = load i8, i8* %add.ptr821, align 1
  %conv822 = zext i8 %478 to i32
  %and823 = and i32 %conv822, 63
  %or824 = or i32 %shl820, %and823
  %479 = load i8*, i8** %s, align 8
  %480 = load i8, i8* %479, align 1
  %conv825 = zext i8 %480 to i32
  %cmp826 = icmp ne i32 %or824, %conv825
  br i1 %cmp826, label %if.then828, label %if.end829

if.then828:                                       ; preds = %if.else817
  br label %no

if.end829:                                        ; preds = %if.else817
  %481 = load i8*, i8** %l, align 8
  %add.ptr830 = getelementptr inbounds i8, i8* %481, i64 2
  store i8* %add.ptr830, i8** %l, align 8
  br label %if.end831

if.end831:                                        ; preds = %if.end829, %if.end815
  %482 = load i8*, i8** %s, align 8
  %incdec.ptr832 = getelementptr inbounds i8, i8* %482, i32 1
  store i8* %incdec.ptr832, i8** %s, align 8
  br label %while.cond793

while.end833:                                     ; preds = %while.cond793
  br label %if.end876

if.else834:                                       ; preds = %if.then789
  br label %while.cond835

while.cond835:                                    ; preds = %if.end873, %if.else834
  %483 = load i8*, i8** %s, align 8
  %484 = load i8*, i8** %e, align 8
  %cmp836 = icmp ult i8* %483, %484
  br i1 %cmp836, label %while.body838, label %while.end875

while.body838:                                    ; preds = %while.cond835
  %485 = load i8*, i8** %l, align 8
  %486 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend839 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %486, i32 0, i32 2
  %487 = load i8*, i8** %strend839, align 8
  %cmp840 = icmp uge i8* %485, %487
  br i1 %cmp840, label %if.then846, label %lor.lhs.false842

lor.lhs.false842:                                 ; preds = %while.body838
  %488 = load i8*, i8** %s, align 8
  %489 = load i8, i8* %488, align 1
  %conv843 = zext i8 %489 to i32
  %cmp844 = icmp sge i32 %conv843, 196
  br i1 %cmp844, label %if.then846, label %if.end847

if.then846:                                       ; preds = %lor.lhs.false842, %while.body838
  br label %no

if.end847:                                        ; preds = %lor.lhs.false842
  %490 = load i8*, i8** %s, align 8
  %491 = load i8, i8* %490, align 1
  %conv848 = zext i8 %491 to i64
  %cmp849 = icmp ult i64 %conv848, 128
  br i1 %cmp849, label %if.then851, label %if.else859

if.then851:                                       ; preds = %if.end847
  %492 = load i8*, i8** %s, align 8
  %493 = load i8, i8* %492, align 1
  %conv852 = sext i8 %493 to i32
  %494 = load i8*, i8** %l, align 8
  %495 = load i8, i8* %494, align 1
  %conv853 = sext i8 %495 to i32
  %cmp854 = icmp ne i32 %conv852, %conv853
  br i1 %cmp854, label %if.then856, label %if.end857

if.then856:                                       ; preds = %if.then851
  br label %no

if.end857:                                        ; preds = %if.then851
  %496 = load i8*, i8** %s, align 8
  %incdec.ptr858 = getelementptr inbounds i8, i8* %496, i32 1
  store i8* %incdec.ptr858, i8** %s, align 8
  br label %if.end873

if.else859:                                       ; preds = %if.end847
  %497 = load i8*, i8** %s, align 8
  %498 = load i8, i8* %497, align 1
  %conv860 = sext i8 %498 to i32
  %and861 = and i32 %conv860, 31
  %shl862 = shl i32 %and861, 6
  %499 = load i8*, i8** %s, align 8
  %add.ptr863 = getelementptr inbounds i8, i8* %499, i64 1
  %500 = load i8, i8* %add.ptr863, align 1
  %conv864 = zext i8 %500 to i32
  %and865 = and i32 %conv864, 63
  %or866 = or i32 %shl862, %and865
  %501 = load i8*, i8** %l, align 8
  %502 = load i8, i8* %501, align 1
  %conv867 = zext i8 %502 to i32
  %cmp868 = icmp ne i32 %or866, %conv867
  br i1 %cmp868, label %if.then870, label %if.end871

if.then870:                                       ; preds = %if.else859
  br label %no

if.end871:                                        ; preds = %if.else859
  %503 = load i8*, i8** %s, align 8
  %add.ptr872 = getelementptr inbounds i8, i8* %503, i64 2
  store i8* %add.ptr872, i8** %s, align 8
  br label %if.end873

if.end873:                                        ; preds = %if.end871, %if.end857
  %504 = load i8*, i8** %l, align 8
  %incdec.ptr874 = getelementptr inbounds i8, i8* %504, i32 1
  store i8* %incdec.ptr874, i8** %l, align 8
  br label %while.cond835

while.end875:                                     ; preds = %while.cond835
  br label %if.end876

if.end876:                                        ; preds = %while.end875, %while.end833
  %505 = load i8*, i8** %l, align 8
  store i8* %505, i8** %locinput, align 8
  br label %if.end897

if.else877:                                       ; preds = %sw.bb780
  %506 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend878 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %506, i32 0, i32 2
  %507 = load i8*, i8** %strend878, align 8
  %508 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast879 = ptrtoint i8* %507 to i64
  %sub.ptr.rhs.cast880 = ptrtoint i8* %508 to i64
  %sub.ptr.sub881 = sub i64 %sub.ptr.lhs.cast879, %sub.ptr.rhs.cast880
  %509 = load i64, i64* %ln, align 8
  %cmp882 = icmp slt i64 %sub.ptr.sub881, %509
  br i1 %cmp882, label %if.then894, label %lor.lhs.false884

lor.lhs.false884:                                 ; preds = %if.else877
  %510 = load i8*, i8** %s, align 8
  %511 = load i8, i8* %510, align 1
  %conv885 = zext i8 %511 to i32
  %512 = load i32, i32* %nextchr, align 4
  %cmp886 = icmp ne i32 %conv885, %512
  br i1 %cmp886, label %if.then894, label %lor.lhs.false888

lor.lhs.false888:                                 ; preds = %lor.lhs.false884
  %513 = load i64, i64* %ln, align 8
  %cmp889 = icmp sgt i64 %513, 1
  br i1 %cmp889, label %land.lhs.true891, label %if.end895

land.lhs.true891:                                 ; preds = %lor.lhs.false888
  %514 = load i8*, i8** %s, align 8
  %515 = load i8*, i8** %locinput, align 8
  %516 = load i64, i64* %ln, align 8
  %call892 = call i32 @memcmp(i8* %514, i8* %515, i64 %516) #5
  %tobool893 = icmp ne i32 %call892, 0
  br i1 %tobool893, label %if.then894, label %if.end895

if.then894:                                       ; preds = %land.lhs.true891, %lor.lhs.false884, %if.else877
  br label %no

if.end895:                                        ; preds = %land.lhs.true891, %lor.lhs.false888
  %517 = load i64, i64* %ln, align 8
  %518 = load i8*, i8** %locinput, align 8
  %add.ptr896 = getelementptr inbounds i8, i8* %518, i64 %517
  store i8* %add.ptr896, i8** %locinput, align 8
  br label %if.end897

if.end897:                                        ; preds = %if.end895, %if.end876
  br label %sw.epilog6759

sw.bb898:                                         ; preds = %cond.end45
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_locale, i32 (i8*, i8*, i32)** %folder, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_locale, i64 0, i64 0), i8** %fold_array, align 8
  store i32 2, i32* %fold_utf8_flags, align 4
  br label %do_exactf

sw.bb900:                                         ; preds = %cond.end45
  %519 = load i8, i8* %utf8_target, align 1
  %tobool901 = trunc i8 %519 to i1
  br i1 %tobool901, label %if.end903, label %if.then902

if.then902:                                       ; preds = %sw.bb900
  br label %no

if.end903:                                        ; preds = %sw.bb900
  store i32 22, i32* %fold_utf8_flags, align 4
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_latin1, i32 (i8*, i8*, i32)** %folder, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_latin1, i64 0, i64 0), i8** %fold_array, align 8
  br label %do_exactf

sw.bb904:                                         ; preds = %cond.end45, %cond.end45
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_latin1, i32 (i8*, i8*, i32)** %folder, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_latin1, i64 0, i64 0), i8** %fold_array, align 8
  %520 = load i8, i8* %is_utf8_pat, align 1
  %tobool905 = trunc i8 %520 to i1
  %521 = zext i1 %tobool905 to i64
  %cond907 = select i1 %tobool905, i32 4, i32 0
  store i32 %cond907, i32* %fold_utf8_flags, align 4
  br label %do_exactf

sw.bb908:                                         ; preds = %cond.end45
  br label %sw.bb909

sw.bb909:                                         ; preds = %cond.end45, %sw.bb908
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_latin1, i32 (i8*, i8*, i32)** %folder, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_latin1, i64 0, i64 0), i8** %fold_array, align 8
  store i32 1, i32* %fold_utf8_flags, align 4
  br label %do_exactf

sw.bb910:                                         ; preds = %cond.end45
  store i32 (i8*, i8*, i32)* @Perl_foldEQ, i32 (i8*, i8*, i32)** %folder, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold, i64 0, i64 0), i8** %fold_array, align 8
  store i32 0, i32* %fold_utf8_flags, align 4
  br label %do_exactf

do_exactf:                                        ; preds = %sw.bb910, %sw.bb909, %sw.bb904, %if.end903, %sw.bb898
  %522 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %523 = bitcast %struct.regnode* %522 to %struct.regnode_string*
  %string911 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %523, i32 0, i32 3
  %arraydecay912 = getelementptr inbounds [1 x i8], [1 x i8]* %string911, i64 0, i64 0
  store i8* %arraydecay912, i8** %s899, align 8
  %524 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %525 = bitcast %struct.regnode* %524 to %struct.regnode_string*
  %str_len913 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %525, i32 0, i32 0
  %526 = load i8, i8* %str_len913, align 2
  %conv914 = zext i8 %526 to i64
  store i64 %conv914, i64* %ln, align 8
  %527 = load i8, i8* %utf8_target, align 1
  %tobool915 = trunc i8 %527 to i1
  br i1 %tobool915, label %if.then929, label %lor.lhs.false917

lor.lhs.false917:                                 ; preds = %do_exactf
  %528 = load i8, i8* %is_utf8_pat, align 1
  %tobool918 = trunc i8 %528 to i1
  br i1 %tobool918, label %if.then929, label %lor.lhs.false920

lor.lhs.false920:                                 ; preds = %lor.lhs.false917
  %529 = load i32, i32* %state_num, align 4
  %cmp921 = icmp eq i32 %529, 37
  br i1 %cmp921, label %if.then929, label %lor.lhs.false923

lor.lhs.false923:                                 ; preds = %lor.lhs.false920
  %530 = load i32, i32* %state_num, align 4
  %cmp924 = icmp eq i32 %530, 34
  br i1 %cmp924, label %land.lhs.true926, label %if.end939

land.lhs.true926:                                 ; preds = %lor.lhs.false923
  %531 = load i8, i8* @PL_in_utf8_CTYPE_locale, align 1
  %tobool927 = trunc i8 %531 to i1
  br i1 %tobool927, label %if.then929, label %if.end939

if.then929:                                       ; preds = %land.lhs.true926, %lor.lhs.false920, %lor.lhs.false917, %do_exactf
  %532 = load i8*, i8** %locinput, align 8
  store i8* %532, i8** %l930, align 8
  %533 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend932 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %533, i32 0, i32 2
  %534 = load i8*, i8** %strend932, align 8
  store i8* %534, i8** %e931, align 8
  %535 = load i8*, i8** %s899, align 8
  %536 = load i64, i64* %ln, align 8
  %537 = load i8, i8* %is_utf8_pat, align 1
  %tobool933 = trunc i8 %537 to i1
  %538 = load i8*, i8** %l930, align 8
  %539 = load i8, i8* %utf8_target, align 1
  %tobool934 = trunc i8 %539 to i1
  %540 = load i32, i32* %fold_utf8_flags, align 4
  %call935 = call i32 @Perl_foldEQ_utf8_flags(i8* %535, i8** null, i64 %536, i1 zeroext %tobool933, i8* %538, i8** %e931, i64 0, i1 zeroext %tobool934, i32 %540)
  %tobool936 = icmp ne i32 %call935, 0
  br i1 %tobool936, label %if.end938, label %if.then937

if.then937:                                       ; preds = %if.then929
  br label %no

if.end938:                                        ; preds = %if.then929
  %541 = load i8*, i8** %e931, align 8
  store i8* %541, i8** %locinput, align 8
  br label %sw.epilog6759

if.end939:                                        ; preds = %land.lhs.true926, %lor.lhs.false923
  %542 = load i8*, i8** %s899, align 8
  %543 = load i8, i8* %542, align 1
  %conv940 = zext i8 %543 to i32
  %544 = load i32, i32* %nextchr, align 4
  %cmp941 = icmp ne i32 %conv940, %544
  br i1 %cmp941, label %land.lhs.true943, label %if.end954

land.lhs.true943:                                 ; preds = %if.end939
  %545 = load i32, i32* %nextchr, align 4
  %cmp944 = icmp slt i32 %545, 0
  br i1 %cmp944, label %if.end954, label %land.lhs.true946

land.lhs.true946:                                 ; preds = %land.lhs.true943
  %546 = load i8*, i8** %s899, align 8
  %547 = load i8, i8* %546, align 1
  %conv947 = zext i8 %547 to i32
  %548 = load i8*, i8** %fold_array, align 8
  %549 = load i32, i32* %nextchr, align 4
  %idxprom948 = sext i32 %549 to i64
  %arrayidx949 = getelementptr inbounds i8, i8* %548, i64 %idxprom948
  %550 = load i8, i8* %arrayidx949, align 1
  %conv950 = zext i8 %550 to i32
  %cmp951 = icmp ne i32 %conv947, %conv950
  br i1 %cmp951, label %if.then953, label %if.end954

if.then953:                                       ; preds = %land.lhs.true946
  br label %no

if.end954:                                        ; preds = %land.lhs.true946, %land.lhs.true943, %if.end939
  %551 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend955 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %551, i32 0, i32 2
  %552 = load i8*, i8** %strend955, align 8
  %553 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast956 = ptrtoint i8* %552 to i64
  %sub.ptr.rhs.cast957 = ptrtoint i8* %553 to i64
  %sub.ptr.sub958 = sub i64 %sub.ptr.lhs.cast956, %sub.ptr.rhs.cast957
  %554 = load i64, i64* %ln, align 8
  %cmp959 = icmp slt i64 %sub.ptr.sub958, %554
  br i1 %cmp959, label %if.then961, label %if.end962

if.then961:                                       ; preds = %if.end954
  br label %no

if.end962:                                        ; preds = %if.end954
  %555 = load i64, i64* %ln, align 8
  %cmp963 = icmp sgt i64 %555, 1
  br i1 %cmp963, label %land.lhs.true965, label %if.end970

land.lhs.true965:                                 ; preds = %if.end962
  %556 = load i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)** %folder, align 8
  %557 = load i8*, i8** %s899, align 8
  %558 = load i8*, i8** %locinput, align 8
  %559 = load i64, i64* %ln, align 8
  %conv966 = trunc i64 %559 to i32
  %call967 = call i32 %556(i8* %557, i8* %558, i32 %conv966)
  %tobool968 = icmp ne i32 %call967, 0
  br i1 %tobool968, label %if.end970, label %if.then969

if.then969:                                       ; preds = %land.lhs.true965
  br label %no

if.end970:                                        ; preds = %land.lhs.true965, %if.end962
  %560 = load i64, i64* %ln, align 8
  %561 = load i8*, i8** %locinput, align 8
  %add.ptr971 = getelementptr inbounds i8, i8* %561, i64 %560
  store i8* %add.ptr971, i8** %locinput, align 8
  br label %sw.epilog6759

sw.bb972:                                         ; preds = %cond.end45
  store i32 1, i32* %to_complement, align 4
  br label %sw.bb973

sw.bb973:                                         ; preds = %cond.end45, %sw.bb972
  %562 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags974 = getelementptr inbounds %struct.regnode, %struct.regnode* %562, i32 0, i32 0
  %563 = load i8, i8* %flags974, align 2
  %conv975 = zext i8 %563 to i32
  %cmp976 = icmp ne i32 %conv975, 0
  br i1 %cmp976, label %if.then978, label %if.end982

if.then978:                                       ; preds = %sw.bb973
  %564 = load i8, i8* @PL_in_utf8_CTYPE_locale, align 1
  %tobool979 = trunc i8 %564 to i1
  br i1 %tobool979, label %if.end981, label %if.then980

if.then980:                                       ; preds = %if.then978
  call void (i32, i8*, ...) @Perl_ck_warner(i32 65, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0))
  br label %if.end981

if.end981:                                        ; preds = %if.then980, %if.then978
  br label %boundu

if.end982:                                        ; preds = %sw.bb973
  %565 = load i8, i8* %utf8_target, align 1
  %tobool983 = trunc i8 %565 to i1
  br i1 %tobool983, label %if.then984, label %if.else1182

if.then984:                                       ; preds = %if.end982
  %566 = load i8*, i8** %locinput, align 8
  %567 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg985 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %567, i32 0, i32 1
  %568 = load i8*, i8** %strbeg985, align 8
  %cmp986 = icmp eq i8* %566, %568
  br i1 %cmp986, label %if.then988, label %if.else995

if.then988:                                       ; preds = %if.then984
  %call989 = call i16** @__ctype_b_loc() #6
  %569 = load i16*, i16** %call989, align 8
  %arrayidx990 = getelementptr inbounds i16, i16* %569, i64 10
  %570 = load i16, i16* %arrayidx990, align 2
  %conv991 = zext i16 %570 to i32
  %and992 = and i32 %conv991, 8
  %tobool993 = icmp ne i32 %and992, 0
  br i1 %tobool993, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then988
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.then988
  %571 = phi i1 [ true, %if.then988 ], [ false, %lor.rhs ]
  %land.ext = zext i1 %571 to i32
  %conv994 = sext i32 %land.ext to i64
  store i64 %conv994, i64* %ln, align 8
  br label %if.end1094

if.else995:                                       ; preds = %if.then984
  %572 = load i8*, i8** %locinput, align 8
  %573 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg996 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %573, i32 0, i32 1
  %574 = load i8*, i8** %strbeg996, align 8
  %call997 = call i8* @S_reghop3(i8* %572, i64 -1, i8* %574)
  %575 = load i8, i8* %call997, align 1
  %conv998 = zext i8 %575 to i64
  %cmp999 = icmp ult i64 %conv998, 128
  br i1 %cmp999, label %cond.true1001, label %cond.false1027

cond.true1001:                                    ; preds = %if.else995
  %576 = load i8*, i8** %locinput, align 8
  %577 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1002 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %577, i32 0, i32 1
  %578 = load i8*, i8** %strbeg1002, align 8
  %call1003 = call i8* @S_reghop3(i8* %576, i64 -1, i8* %578)
  %579 = load i8, i8* %call1003, align 1
  %conv1004 = zext i8 %579 to i32
  %and1005 = and i32 %conv1004, -128
  %cmp1006 = icmp eq i32 %and1005, 0
  br i1 %cmp1006, label %land.rhs1008, label %land.end1025

land.rhs1008:                                     ; preds = %cond.true1001
  %call1009 = call i16** @__ctype_b_loc() #6
  %580 = load i16*, i16** %call1009, align 8
  %581 = load i8*, i8** %locinput, align 8
  %582 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1010 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %582, i32 0, i32 1
  %583 = load i8*, i8** %strbeg1010, align 8
  %call1011 = call i8* @S_reghop3(i8* %581, i64 -1, i8* %583)
  %584 = load i8, i8* %call1011, align 1
  %conv1012 = zext i8 %584 to i32
  %idxprom1013 = sext i32 %conv1012 to i64
  %arrayidx1014 = getelementptr inbounds i16, i16* %580, i64 %idxprom1013
  %585 = load i16, i16* %arrayidx1014, align 2
  %conv1015 = zext i16 %585 to i32
  %and1016 = and i32 %conv1015, 8
  %tobool1017 = icmp ne i32 %and1016, 0
  br i1 %tobool1017, label %lor.end1024, label %lor.rhs1018

lor.rhs1018:                                      ; preds = %land.rhs1008
  %586 = load i8*, i8** %locinput, align 8
  %587 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1019 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %587, i32 0, i32 1
  %588 = load i8*, i8** %strbeg1019, align 8
  %call1020 = call i8* @S_reghop3(i8* %586, i64 -1, i8* %588)
  %589 = load i8, i8* %call1020, align 1
  %conv1021 = zext i8 %589 to i32
  %cmp1022 = icmp eq i32 %conv1021, 95
  br label %lor.end1024

lor.end1024:                                      ; preds = %lor.rhs1018, %land.rhs1008
  %590 = phi i1 [ true, %land.rhs1008 ], [ %cmp1022, %lor.rhs1018 ]
  br label %land.end1025

land.end1025:                                     ; preds = %lor.end1024, %cond.true1001
  %591 = phi i1 [ false, %cond.true1001 ], [ %590, %lor.end1024 ]
  %land.ext1026 = zext i1 %591 to i32
  br label %cond.end1091

cond.false1027:                                   ; preds = %if.else995
  %592 = load i8*, i8** %locinput, align 8
  %593 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1028 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %593, i32 0, i32 1
  %594 = load i8*, i8** %strbeg1028, align 8
  %call1029 = call i8* @S_reghop3(i8* %592, i64 -1, i8* %594)
  %595 = load i8, i8* %call1029, align 1
  %conv1030 = zext i8 %595 to i32
  %and1031 = and i32 %conv1030, 254
  %cmp1032 = icmp eq i32 %and1031, 194
  br i1 %cmp1032, label %cond.true1034, label %cond.false1084

cond.true1034:                                    ; preds = %cond.false1027
  %596 = load i8*, i8** %locinput, align 8
  %597 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1035 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %597, i32 0, i32 1
  %598 = load i8*, i8** %strbeg1035, align 8
  %call1036 = call i8* @S_reghop3(i8* %596, i64 -1, i8* %598)
  %599 = load i8, i8* %call1036, align 1
  %conv1037 = zext i8 %599 to i32
  %and1038 = and i32 %conv1037, 31
  %shl1039 = shl i32 %and1038, 6
  %600 = load i8*, i8** %locinput, align 8
  %601 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1040 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %601, i32 0, i32 1
  %602 = load i8*, i8** %strbeg1040, align 8
  %call1041 = call i8* @S_reghop3(i8* %600, i64 -1, i8* %602)
  %add.ptr1042 = getelementptr inbounds i8, i8* %call1041, i64 1
  %603 = load i8, i8* %add.ptr1042, align 1
  %conv1043 = zext i8 %603 to i32
  %and1044 = and i32 %conv1043, 63
  %or1045 = or i32 %shl1039, %and1044
  %and1046 = and i32 %or1045, -128
  %cmp1047 = icmp eq i32 %and1046, 0
  br i1 %cmp1047, label %land.rhs1049, label %land.end1082

land.rhs1049:                                     ; preds = %cond.true1034
  %call1050 = call i16** @__ctype_b_loc() #6
  %604 = load i16*, i16** %call1050, align 8
  %605 = load i8*, i8** %locinput, align 8
  %606 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1051 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %606, i32 0, i32 1
  %607 = load i8*, i8** %strbeg1051, align 8
  %call1052 = call i8* @S_reghop3(i8* %605, i64 -1, i8* %607)
  %608 = load i8, i8* %call1052, align 1
  %conv1053 = zext i8 %608 to i32
  %and1054 = and i32 %conv1053, 31
  %shl1055 = shl i32 %and1054, 6
  %609 = load i8*, i8** %locinput, align 8
  %610 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1056 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %610, i32 0, i32 1
  %611 = load i8*, i8** %strbeg1056, align 8
  %call1057 = call i8* @S_reghop3(i8* %609, i64 -1, i8* %611)
  %add.ptr1058 = getelementptr inbounds i8, i8* %call1057, i64 1
  %612 = load i8, i8* %add.ptr1058, align 1
  %conv1059 = zext i8 %612 to i32
  %and1060 = and i32 %conv1059, 63
  %or1061 = or i32 %shl1055, %and1060
  %idxprom1062 = sext i32 %or1061 to i64
  %arrayidx1063 = getelementptr inbounds i16, i16* %604, i64 %idxprom1062
  %613 = load i16, i16* %arrayidx1063, align 2
  %conv1064 = zext i16 %613 to i32
  %and1065 = and i32 %conv1064, 8
  %tobool1066 = icmp ne i32 %and1065, 0
  br i1 %tobool1066, label %lor.end1081, label %lor.rhs1067

lor.rhs1067:                                      ; preds = %land.rhs1049
  %614 = load i8*, i8** %locinput, align 8
  %615 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1068 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %615, i32 0, i32 1
  %616 = load i8*, i8** %strbeg1068, align 8
  %call1069 = call i8* @S_reghop3(i8* %614, i64 -1, i8* %616)
  %617 = load i8, i8* %call1069, align 1
  %conv1070 = zext i8 %617 to i32
  %and1071 = and i32 %conv1070, 31
  %shl1072 = shl i32 %and1071, 6
  %618 = load i8*, i8** %locinput, align 8
  %619 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1073 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %619, i32 0, i32 1
  %620 = load i8*, i8** %strbeg1073, align 8
  %call1074 = call i8* @S_reghop3(i8* %618, i64 -1, i8* %620)
  %add.ptr1075 = getelementptr inbounds i8, i8* %call1074, i64 1
  %621 = load i8, i8* %add.ptr1075, align 1
  %conv1076 = zext i8 %621 to i32
  %and1077 = and i32 %conv1076, 63
  %or1078 = or i32 %shl1072, %and1077
  %cmp1079 = icmp eq i32 %or1078, 95
  br label %lor.end1081

lor.end1081:                                      ; preds = %lor.rhs1067, %land.rhs1049
  %622 = phi i1 [ true, %land.rhs1049 ], [ %cmp1079, %lor.rhs1067 ]
  br label %land.end1082

land.end1082:                                     ; preds = %lor.end1081, %cond.true1034
  %623 = phi i1 [ false, %cond.true1034 ], [ %622, %lor.end1081 ]
  %land.ext1083 = zext i1 %623 to i32
  br label %cond.end1089

cond.false1084:                                   ; preds = %cond.false1027
  %624 = load i8*, i8** %locinput, align 8
  %625 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1085 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %625, i32 0, i32 1
  %626 = load i8*, i8** %strbeg1085, align 8
  %call1086 = call i8* @S_reghop3(i8* %624, i64 -1, i8* %626)
  %call1087 = call zeroext i1 @Perl__is_utf8_FOO(i8 zeroext 0, i8* %call1086)
  %conv1088 = zext i1 %call1087 to i32
  br label %cond.end1089

cond.end1089:                                     ; preds = %cond.false1084, %land.end1082
  %cond1090 = phi i32 [ %land.ext1083, %land.end1082 ], [ %conv1088, %cond.false1084 ]
  br label %cond.end1091

cond.end1091:                                     ; preds = %cond.end1089, %land.end1025
  %cond1092 = phi i32 [ %land.ext1026, %land.end1025 ], [ %cond1090, %cond.end1089 ]
  %conv1093 = sext i32 %cond1092 to i64
  store i64 %conv1093, i64* %ln, align 8
  br label %if.end1094

if.end1094:                                       ; preds = %cond.end1091, %lor.end
  %627 = load i32, i32* %nextchr, align 4
  %cmp1095 = icmp slt i32 %627, 0
  br i1 %cmp1095, label %cond.true1097, label %cond.false1106

cond.true1097:                                    ; preds = %if.end1094
  %call1098 = call i16** @__ctype_b_loc() #6
  %628 = load i16*, i16** %call1098, align 8
  %arrayidx1099 = getelementptr inbounds i16, i16* %628, i64 10
  %629 = load i16, i16* %arrayidx1099, align 2
  %conv1100 = zext i16 %629 to i32
  %and1101 = and i32 %conv1100, 8
  %tobool1102 = icmp ne i32 %and1101, 0
  br i1 %tobool1102, label %lor.end1104, label %lor.rhs1103

lor.rhs1103:                                      ; preds = %cond.true1097
  br label %lor.end1104

lor.end1104:                                      ; preds = %lor.rhs1103, %cond.true1097
  %630 = phi i1 [ true, %cond.true1097 ], [ false, %lor.rhs1103 ]
  %land.ext1105 = zext i1 %630 to i32
  br label %cond.end1180

cond.false1106:                                   ; preds = %if.end1094
  %631 = load i8*, i8** %locinput, align 8
  %632 = load i8, i8* %631, align 1
  %conv1107 = zext i8 %632 to i64
  %cmp1108 = icmp ult i64 %conv1107, 128
  br i1 %cmp1108, label %cond.true1110, label %cond.false1130

cond.true1110:                                    ; preds = %cond.false1106
  %633 = load i8*, i8** %locinput, align 8
  %634 = load i8, i8* %633, align 1
  %conv1111 = zext i8 %634 to i32
  %and1112 = and i32 %conv1111, -128
  %cmp1113 = icmp eq i32 %and1112, 0
  br i1 %cmp1113, label %land.rhs1115, label %land.end1128

land.rhs1115:                                     ; preds = %cond.true1110
  %call1116 = call i16** @__ctype_b_loc() #6
  %635 = load i16*, i16** %call1116, align 8
  %636 = load i8*, i8** %locinput, align 8
  %637 = load i8, i8* %636, align 1
  %conv1117 = zext i8 %637 to i32
  %idxprom1118 = sext i32 %conv1117 to i64
  %arrayidx1119 = getelementptr inbounds i16, i16* %635, i64 %idxprom1118
  %638 = load i16, i16* %arrayidx1119, align 2
  %conv1120 = zext i16 %638 to i32
  %and1121 = and i32 %conv1120, 8
  %tobool1122 = icmp ne i32 %and1121, 0
  br i1 %tobool1122, label %lor.end1127, label %lor.rhs1123

lor.rhs1123:                                      ; preds = %land.rhs1115
  %639 = load i8*, i8** %locinput, align 8
  %640 = load i8, i8* %639, align 1
  %conv1124 = zext i8 %640 to i32
  %cmp1125 = icmp eq i32 %conv1124, 95
  br label %lor.end1127

lor.end1127:                                      ; preds = %lor.rhs1123, %land.rhs1115
  %641 = phi i1 [ true, %land.rhs1115 ], [ %cmp1125, %lor.rhs1123 ]
  br label %land.end1128

land.end1128:                                     ; preds = %lor.end1127, %cond.true1110
  %642 = phi i1 [ false, %cond.true1110 ], [ %641, %lor.end1127 ]
  %land.ext1129 = zext i1 %642 to i32
  br label %cond.end1178

cond.false1130:                                   ; preds = %cond.false1106
  %643 = load i8*, i8** %locinput, align 8
  %644 = load i8, i8* %643, align 1
  %conv1131 = zext i8 %644 to i32
  %and1132 = and i32 %conv1131, 254
  %cmp1133 = icmp eq i32 %and1132, 194
  br i1 %cmp1133, label %cond.true1135, label %cond.false1173

cond.true1135:                                    ; preds = %cond.false1130
  %645 = load i8*, i8** %locinput, align 8
  %646 = load i8, i8* %645, align 1
  %conv1136 = zext i8 %646 to i32
  %and1137 = and i32 %conv1136, 31
  %shl1138 = shl i32 %and1137, 6
  %647 = load i8*, i8** %locinput, align 8
  %add.ptr1139 = getelementptr inbounds i8, i8* %647, i64 1
  %648 = load i8, i8* %add.ptr1139, align 1
  %conv1140 = zext i8 %648 to i32
  %and1141 = and i32 %conv1140, 63
  %or1142 = or i32 %shl1138, %and1141
  %and1143 = and i32 %or1142, -128
  %cmp1144 = icmp eq i32 %and1143, 0
  br i1 %cmp1144, label %land.rhs1146, label %land.end1171

land.rhs1146:                                     ; preds = %cond.true1135
  %call1147 = call i16** @__ctype_b_loc() #6
  %649 = load i16*, i16** %call1147, align 8
  %650 = load i8*, i8** %locinput, align 8
  %651 = load i8, i8* %650, align 1
  %conv1148 = zext i8 %651 to i32
  %and1149 = and i32 %conv1148, 31
  %shl1150 = shl i32 %and1149, 6
  %652 = load i8*, i8** %locinput, align 8
  %add.ptr1151 = getelementptr inbounds i8, i8* %652, i64 1
  %653 = load i8, i8* %add.ptr1151, align 1
  %conv1152 = zext i8 %653 to i32
  %and1153 = and i32 %conv1152, 63
  %or1154 = or i32 %shl1150, %and1153
  %idxprom1155 = sext i32 %or1154 to i64
  %arrayidx1156 = getelementptr inbounds i16, i16* %649, i64 %idxprom1155
  %654 = load i16, i16* %arrayidx1156, align 2
  %conv1157 = zext i16 %654 to i32
  %and1158 = and i32 %conv1157, 8
  %tobool1159 = icmp ne i32 %and1158, 0
  br i1 %tobool1159, label %lor.end1170, label %lor.rhs1160

lor.rhs1160:                                      ; preds = %land.rhs1146
  %655 = load i8*, i8** %locinput, align 8
  %656 = load i8, i8* %655, align 1
  %conv1161 = zext i8 %656 to i32
  %and1162 = and i32 %conv1161, 31
  %shl1163 = shl i32 %and1162, 6
  %657 = load i8*, i8** %locinput, align 8
  %add.ptr1164 = getelementptr inbounds i8, i8* %657, i64 1
  %658 = load i8, i8* %add.ptr1164, align 1
  %conv1165 = zext i8 %658 to i32
  %and1166 = and i32 %conv1165, 63
  %or1167 = or i32 %shl1163, %and1166
  %cmp1168 = icmp eq i32 %or1167, 95
  br label %lor.end1170

lor.end1170:                                      ; preds = %lor.rhs1160, %land.rhs1146
  %659 = phi i1 [ true, %land.rhs1146 ], [ %cmp1168, %lor.rhs1160 ]
  br label %land.end1171

land.end1171:                                     ; preds = %lor.end1170, %cond.true1135
  %660 = phi i1 [ false, %cond.true1135 ], [ %659, %lor.end1170 ]
  %land.ext1172 = zext i1 %660 to i32
  br label %cond.end1176

cond.false1173:                                   ; preds = %cond.false1130
  %661 = load i8*, i8** %locinput, align 8
  %call1174 = call zeroext i1 @Perl__is_utf8_FOO(i8 zeroext 0, i8* %661)
  %conv1175 = zext i1 %call1174 to i32
  br label %cond.end1176

cond.end1176:                                     ; preds = %cond.false1173, %land.end1171
  %cond1177 = phi i32 [ %land.ext1172, %land.end1171 ], [ %conv1175, %cond.false1173 ]
  br label %cond.end1178

cond.end1178:                                     ; preds = %cond.end1176, %land.end1128
  %cond1179 = phi i32 [ %land.ext1129, %land.end1128 ], [ %cond1177, %cond.end1176 ]
  br label %cond.end1180

cond.end1180:                                     ; preds = %cond.end1178, %lor.end1104
  %cond1181 = phi i32 [ %land.ext1105, %lor.end1104 ], [ %cond1179, %cond.end1178 ]
  store i32 %cond1181, i32* %n, align 4
  br label %if.end1251

if.else1182:                                      ; preds = %if.end982
  %662 = load i8*, i8** %locinput, align 8
  %663 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1183 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %663, i32 0, i32 1
  %664 = load i8*, i8** %strbeg1183, align 8
  %cmp1184 = icmp eq i8* %662, %664
  br i1 %cmp1184, label %cond.true1186, label %cond.false1195

cond.true1186:                                    ; preds = %if.else1182
  %call1187 = call i16** @__ctype_b_loc() #6
  %665 = load i16*, i16** %call1187, align 8
  %arrayidx1188 = getelementptr inbounds i16, i16* %665, i64 10
  %666 = load i16, i16* %arrayidx1188, align 2
  %conv1189 = zext i16 %666 to i32
  %and1190 = and i32 %conv1189, 8
  %tobool1191 = icmp ne i32 %and1190, 0
  br i1 %tobool1191, label %lor.end1193, label %lor.rhs1192

lor.rhs1192:                                      ; preds = %cond.true1186
  br label %lor.end1193

lor.end1193:                                      ; preds = %lor.rhs1192, %cond.true1186
  %667 = phi i1 [ true, %cond.true1186 ], [ false, %lor.rhs1192 ]
  %land.ext1194 = zext i1 %667 to i32
  br label %cond.end1218

cond.false1195:                                   ; preds = %if.else1182
  %668 = load i8*, i8** %locinput, align 8
  %add.ptr1196 = getelementptr inbounds i8, i8* %668, i64 -1
  %669 = load i8, i8* %add.ptr1196, align 1
  %conv1197 = zext i8 %669 to i32
  %and1198 = and i32 %conv1197, -128
  %cmp1199 = icmp eq i32 %and1198, 0
  br i1 %cmp1199, label %land.rhs1201, label %land.end1216

land.rhs1201:                                     ; preds = %cond.false1195
  %call1202 = call i16** @__ctype_b_loc() #6
  %670 = load i16*, i16** %call1202, align 8
  %671 = load i8*, i8** %locinput, align 8
  %add.ptr1203 = getelementptr inbounds i8, i8* %671, i64 -1
  %672 = load i8, i8* %add.ptr1203, align 1
  %conv1204 = zext i8 %672 to i32
  %idxprom1205 = sext i32 %conv1204 to i64
  %arrayidx1206 = getelementptr inbounds i16, i16* %670, i64 %idxprom1205
  %673 = load i16, i16* %arrayidx1206, align 2
  %conv1207 = zext i16 %673 to i32
  %and1208 = and i32 %conv1207, 8
  %tobool1209 = icmp ne i32 %and1208, 0
  br i1 %tobool1209, label %lor.end1215, label %lor.rhs1210

lor.rhs1210:                                      ; preds = %land.rhs1201
  %674 = load i8*, i8** %locinput, align 8
  %add.ptr1211 = getelementptr inbounds i8, i8* %674, i64 -1
  %675 = load i8, i8* %add.ptr1211, align 1
  %conv1212 = zext i8 %675 to i32
  %cmp1213 = icmp eq i32 %conv1212, 95
  br label %lor.end1215

lor.end1215:                                      ; preds = %lor.rhs1210, %land.rhs1201
  %676 = phi i1 [ true, %land.rhs1201 ], [ %cmp1213, %lor.rhs1210 ]
  br label %land.end1216

land.end1216:                                     ; preds = %lor.end1215, %cond.false1195
  %677 = phi i1 [ false, %cond.false1195 ], [ %676, %lor.end1215 ]
  %land.ext1217 = zext i1 %677 to i32
  br label %cond.end1218

cond.end1218:                                     ; preds = %land.end1216, %lor.end1193
  %cond1219 = phi i32 [ %land.ext1194, %lor.end1193 ], [ %land.ext1217, %land.end1216 ]
  %conv1220 = sext i32 %cond1219 to i64
  store i64 %conv1220, i64* %ln, align 8
  %678 = load i32, i32* %nextchr, align 4
  %cmp1221 = icmp slt i32 %678, 0
  br i1 %cmp1221, label %cond.true1223, label %cond.false1232

cond.true1223:                                    ; preds = %cond.end1218
  %call1224 = call i16** @__ctype_b_loc() #6
  %679 = load i16*, i16** %call1224, align 8
  %arrayidx1225 = getelementptr inbounds i16, i16* %679, i64 10
  %680 = load i16, i16* %arrayidx1225, align 2
  %conv1226 = zext i16 %680 to i32
  %and1227 = and i32 %conv1226, 8
  %tobool1228 = icmp ne i32 %and1227, 0
  br i1 %tobool1228, label %lor.end1230, label %lor.rhs1229

lor.rhs1229:                                      ; preds = %cond.true1223
  br label %lor.end1230

lor.end1230:                                      ; preds = %lor.rhs1229, %cond.true1223
  %681 = phi i1 [ true, %cond.true1223 ], [ false, %lor.rhs1229 ]
  %land.ext1231 = zext i1 %681 to i32
  br label %cond.end1249

cond.false1232:                                   ; preds = %cond.end1218
  %682 = load i32, i32* %nextchr, align 4
  %and1233 = and i32 %682, -128
  %cmp1234 = icmp eq i32 %and1233, 0
  br i1 %cmp1234, label %land.rhs1236, label %land.end1247

land.rhs1236:                                     ; preds = %cond.false1232
  %call1237 = call i16** @__ctype_b_loc() #6
  %683 = load i16*, i16** %call1237, align 8
  %684 = load i32, i32* %nextchr, align 4
  %idxprom1238 = sext i32 %684 to i64
  %arrayidx1239 = getelementptr inbounds i16, i16* %683, i64 %idxprom1238
  %685 = load i16, i16* %arrayidx1239, align 2
  %conv1240 = zext i16 %685 to i32
  %and1241 = and i32 %conv1240, 8
  %tobool1242 = icmp ne i32 %and1241, 0
  br i1 %tobool1242, label %lor.end1246, label %lor.rhs1243

lor.rhs1243:                                      ; preds = %land.rhs1236
  %686 = load i32, i32* %nextchr, align 4
  %cmp1244 = icmp eq i32 %686, 95
  br label %lor.end1246

lor.end1246:                                      ; preds = %lor.rhs1243, %land.rhs1236
  %687 = phi i1 [ true, %land.rhs1236 ], [ %cmp1244, %lor.rhs1243 ]
  br label %land.end1247

land.end1247:                                     ; preds = %lor.end1246, %cond.false1232
  %688 = phi i1 [ false, %cond.false1232 ], [ %687, %lor.end1246 ]
  %land.ext1248 = zext i1 %688 to i32
  br label %cond.end1249

cond.end1249:                                     ; preds = %land.end1247, %lor.end1230
  %cond1250 = phi i32 [ %land.ext1231, %lor.end1230 ], [ %land.ext1248, %land.end1247 ]
  store i32 %cond1250, i32* %n, align 4
  br label %if.end1251

if.end1251:                                       ; preds = %cond.end1249, %cond.end1180
  %689 = load i32, i32* %to_complement, align 4
  %690 = load i64, i64* %ln, align 8
  %691 = load i32, i32* %n, align 4
  %conv1252 = zext i32 %691 to i64
  %cmp1253 = icmp eq i64 %690, %conv1252
  %conv1254 = zext i1 %cmp1253 to i32
  %xor = xor i32 %689, %conv1254
  %tobool1255 = icmp ne i32 %xor, 0
  br i1 %tobool1255, label %if.then1256, label %if.end1257

if.then1256:                                      ; preds = %if.end1251
  br label %no

if.end1257:                                       ; preds = %if.end1251
  br label %sw.epilog6759

sw.bb1258:                                        ; preds = %cond.end45
  store i32 1, i32* %to_complement, align 4
  br label %sw.bb1259

sw.bb1259:                                        ; preds = %cond.end45, %sw.bb1258
  %692 = load i8, i8* %utf8_target, align 1
  %tobool1260 = trunc i8 %692 to i1
  br i1 %tobool1260, label %if.then1261, label %if.end1262

if.then1261:                                      ; preds = %sw.bb1259
  br label %bound_utf8

if.end1262:                                       ; preds = %sw.bb1259
  br label %bound_ascii_match_only

sw.bb1263:                                        ; preds = %cond.end45
  store i32 1, i32* %to_complement, align 4
  br label %sw.bb1264

sw.bb1264:                                        ; preds = %cond.end45, %sw.bb1263
  br label %bound_ascii_match_only

bound_ascii_match_only:                           ; preds = %sw.bb1264, %if.end1262
  %693 = load i8*, i8** %locinput, align 8
  %694 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1265 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %694, i32 0, i32 1
  %695 = load i8*, i8** %strbeg1265, align 8
  %cmp1266 = icmp eq i8* %693, %695
  br i1 %cmp1266, label %cond.true1268, label %cond.false1273

cond.true1268:                                    ; preds = %bound_ascii_match_only
  %696 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 10), align 4
  %and1269 = and i32 %696, 16385
  %cmp1270 = icmp eq i32 %and1269, 16385
  %land.ext1272 = zext i1 %cmp1270 to i32
  br label %cond.end1290

cond.false1273:                                   ; preds = %bound_ascii_match_only
  %697 = load i8*, i8** %locinput, align 8
  %add.ptr1274 = getelementptr inbounds i8, i8* %697, i64 -1
  %698 = load i8, i8* %add.ptr1274, align 1
  %conv1275 = zext i8 %698 to i32
  %conv1276 = sext i32 %conv1275 to i64
  %and1277 = and i64 %conv1276, -256
  %tobool1278 = icmp ne i64 %and1277, 0
  br i1 %tobool1278, label %land.end1288, label %land.rhs1279

land.rhs1279:                                     ; preds = %cond.false1273
  %699 = load i8*, i8** %locinput, align 8
  %add.ptr1280 = getelementptr inbounds i8, i8* %699, i64 -1
  %700 = load i8, i8* %add.ptr1280, align 1
  %conv1281 = zext i8 %700 to i32
  %conv1282 = trunc i32 %conv1281 to i8
  %idxprom1283 = zext i8 %conv1282 to i64
  %arrayidx1284 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1283
  %701 = load i32, i32* %arrayidx1284, align 4
  %and1285 = and i32 %701, 16385
  %cmp1286 = icmp eq i32 %and1285, 16385
  br label %land.end1288

land.end1288:                                     ; preds = %land.rhs1279, %cond.false1273
  %702 = phi i1 [ false, %cond.false1273 ], [ %cmp1286, %land.rhs1279 ]
  %land.ext1289 = zext i1 %702 to i32
  br label %cond.end1290

cond.end1290:                                     ; preds = %land.end1288, %cond.true1268
  %cond1291 = phi i32 [ %land.ext1272, %cond.true1268 ], [ %land.ext1289, %land.end1288 ]
  %conv1292 = sext i32 %cond1291 to i64
  store i64 %conv1292, i64* %ln, align 8
  %703 = load i32, i32* %nextchr, align 4
  %cmp1293 = icmp slt i32 %703, 0
  br i1 %cmp1293, label %cond.true1295, label %cond.false1300

cond.true1295:                                    ; preds = %cond.end1290
  %704 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 10), align 4
  %and1296 = and i32 %704, 16385
  %cmp1297 = icmp eq i32 %and1296, 16385
  %land.ext1299 = zext i1 %cmp1297 to i32
  br label %cond.end1313

cond.false1300:                                   ; preds = %cond.end1290
  %705 = load i32, i32* %nextchr, align 4
  %conv1301 = sext i32 %705 to i64
  %and1302 = and i64 %conv1301, -256
  %tobool1303 = icmp ne i64 %and1302, 0
  br i1 %tobool1303, label %land.end1311, label %land.rhs1304

land.rhs1304:                                     ; preds = %cond.false1300
  %706 = load i32, i32* %nextchr, align 4
  %conv1305 = trunc i32 %706 to i8
  %idxprom1306 = zext i8 %conv1305 to i64
  %arrayidx1307 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1306
  %707 = load i32, i32* %arrayidx1307, align 4
  %and1308 = and i32 %707, 16385
  %cmp1309 = icmp eq i32 %and1308, 16385
  br label %land.end1311

land.end1311:                                     ; preds = %land.rhs1304, %cond.false1300
  %708 = phi i1 [ false, %cond.false1300 ], [ %cmp1309, %land.rhs1304 ]
  %land.ext1312 = zext i1 %708 to i32
  br label %cond.end1313

cond.end1313:                                     ; preds = %land.end1311, %cond.true1295
  %cond1314 = phi i32 [ %land.ext1299, %cond.true1295 ], [ %land.ext1312, %land.end1311 ]
  store i32 %cond1314, i32* %n, align 4
  %709 = load i32, i32* %to_complement, align 4
  %710 = load i64, i64* %ln, align 8
  %711 = load i32, i32* %n, align 4
  %conv1315 = zext i32 %711 to i64
  %cmp1316 = icmp eq i64 %710, %conv1315
  %conv1317 = zext i1 %cmp1316 to i32
  %xor1318 = xor i32 %709, %conv1317
  %tobool1319 = icmp ne i32 %xor1318, 0
  br i1 %tobool1319, label %if.then1320, label %if.end1321

if.then1320:                                      ; preds = %cond.end1313
  br label %no

if.end1321:                                       ; preds = %cond.end1313
  br label %sw.epilog6759

sw.bb1322:                                        ; preds = %cond.end45
  store i32 1, i32* %to_complement, align 4
  br label %sw.bb1323

sw.bb1323:                                        ; preds = %cond.end45, %sw.bb1322
  br label %boundu

boundu:                                           ; preds = %sw.bb1323, %if.end981
  %712 = load i8, i8* %utf8_target, align 1
  %tobool1324 = trunc i8 %712 to i1
  br i1 %tobool1324, label %if.then1325, label %if.else1578

if.then1325:                                      ; preds = %boundu
  br label %bound_utf8

bound_utf8:                                       ; preds = %if.then1325, %if.then1261
  %713 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1326 = getelementptr inbounds %struct.regnode, %struct.regnode* %713, i32 0, i32 0
  %714 = load i8, i8* %flags1326, align 2
  %conv1327 = zext i8 %714 to i32
  switch i32 %conv1327, label %sw.epilog1577 [
    i32 0, label %sw.bb1328
    i32 1, label %sw.bb1463
    i32 2, label %sw.bb1499
    i32 3, label %sw.bb1538
  ]

sw.bb1328:                                        ; preds = %bound_utf8
  %715 = load i8*, i8** %locinput, align 8
  %716 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1329 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %716, i32 0, i32 1
  %717 = load i8*, i8** %strbeg1329, align 8
  %cmp1330 = icmp eq i8* %715, %717
  br i1 %cmp1330, label %cond.true1332, label %cond.false1333

cond.true1332:                                    ; preds = %sw.bb1328
  br label %cond.end1399

cond.false1333:                                   ; preds = %sw.bb1328
  %718 = load i8*, i8** %locinput, align 8
  %719 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1334 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %719, i32 0, i32 1
  %720 = load i8*, i8** %strbeg1334, align 8
  %call1335 = call i8* @S_reghop3(i8* %718, i64 -1, i8* %720)
  %721 = load i8, i8* %call1335, align 1
  %conv1336 = zext i8 %721 to i64
  %cmp1337 = icmp ult i64 %conv1336, 128
  br i1 %cmp1337, label %cond.true1339, label %cond.false1348

cond.true1339:                                    ; preds = %cond.false1333
  %722 = load i8*, i8** %locinput, align 8
  %723 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1340 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %723, i32 0, i32 1
  %724 = load i8*, i8** %strbeg1340, align 8
  %call1341 = call i8* @S_reghop3(i8* %722, i64 -1, i8* %724)
  %725 = load i8, i8* %call1341, align 1
  %idxprom1342 = zext i8 %725 to i64
  %arrayidx1343 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1342
  %726 = load i32, i32* %arrayidx1343, align 4
  %and1344 = and i32 %726, 1
  %tobool1345 = icmp ne i32 %and1344, 0
  %727 = zext i1 %tobool1345 to i64
  %cond1347 = select i1 %tobool1345, i32 1, i32 0
  br label %cond.end1397

cond.false1348:                                   ; preds = %cond.false1333
  %728 = load i8*, i8** %locinput, align 8
  %729 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1349 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %729, i32 0, i32 1
  %730 = load i8*, i8** %strbeg1349, align 8
  %call1350 = call i8* @S_reghop3(i8* %728, i64 -1, i8* %730)
  %731 = load i8, i8* %call1350, align 1
  %conv1351 = zext i8 %731 to i32
  %and1352 = and i32 %conv1351, 254
  %cmp1353 = icmp eq i32 %and1352, 194
  br i1 %cmp1353, label %cond.true1355, label %cond.false1390

cond.true1355:                                    ; preds = %cond.false1348
  %732 = load i8*, i8** %locinput, align 8
  %733 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1356 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %733, i32 0, i32 1
  %734 = load i8*, i8** %strbeg1356, align 8
  %call1357 = call i8* @S_reghop3(i8* %732, i64 -1, i8* %734)
  %735 = load i8, i8* %call1357, align 1
  %conv1358 = zext i8 %735 to i32
  %and1359 = and i32 %conv1358, 31
  %shl1360 = shl i32 %and1359, 6
  %736 = load i8*, i8** %locinput, align 8
  %737 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1361 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %737, i32 0, i32 1
  %738 = load i8*, i8** %strbeg1361, align 8
  %call1362 = call i8* @S_reghop3(i8* %736, i64 -1, i8* %738)
  %add.ptr1363 = getelementptr inbounds i8, i8* %call1362, i64 1
  %739 = load i8, i8* %add.ptr1363, align 1
  %conv1364 = zext i8 %739 to i32
  %and1365 = and i32 %conv1364, 63
  %or1366 = or i32 %shl1360, %and1365
  %conv1367 = sext i32 %or1366 to i64
  %and1368 = and i64 %conv1367, -256
  %tobool1369 = icmp ne i64 %and1368, 0
  br i1 %tobool1369, label %land.end1387, label %land.rhs1370

land.rhs1370:                                     ; preds = %cond.true1355
  %740 = load i8*, i8** %locinput, align 8
  %741 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1371 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %741, i32 0, i32 1
  %742 = load i8*, i8** %strbeg1371, align 8
  %call1372 = call i8* @S_reghop3(i8* %740, i64 -1, i8* %742)
  %743 = load i8, i8* %call1372, align 1
  %conv1373 = zext i8 %743 to i32
  %and1374 = and i32 %conv1373, 31
  %shl1375 = shl i32 %and1374, 6
  %744 = load i8*, i8** %locinput, align 8
  %745 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1376 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %745, i32 0, i32 1
  %746 = load i8*, i8** %strbeg1376, align 8
  %call1377 = call i8* @S_reghop3(i8* %744, i64 -1, i8* %746)
  %add.ptr1378 = getelementptr inbounds i8, i8* %call1377, i64 1
  %747 = load i8, i8* %add.ptr1378, align 1
  %conv1379 = zext i8 %747 to i32
  %and1380 = and i32 %conv1379, 63
  %or1381 = or i32 %shl1375, %and1380
  %conv1382 = trunc i32 %or1381 to i8
  %idxprom1383 = zext i8 %conv1382 to i64
  %arrayidx1384 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1383
  %748 = load i32, i32* %arrayidx1384, align 4
  %and1385 = and i32 %748, 1
  %tobool1386 = icmp ne i32 %and1385, 0
  br label %land.end1387

land.end1387:                                     ; preds = %land.rhs1370, %cond.true1355
  %749 = phi i1 [ false, %cond.true1355 ], [ %tobool1386, %land.rhs1370 ]
  %750 = zext i1 %749 to i64
  %cond1389 = select i1 %749, i32 1, i32 0
  br label %cond.end1395

cond.false1390:                                   ; preds = %cond.false1348
  %751 = load i8*, i8** %locinput, align 8
  %752 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1391 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %752, i32 0, i32 1
  %753 = load i8*, i8** %strbeg1391, align 8
  %call1392 = call i8* @S_reghop3(i8* %751, i64 -1, i8* %753)
  %call1393 = call zeroext i1 @Perl__is_utf8_FOO(i8 zeroext 0, i8* %call1392)
  %conv1394 = zext i1 %call1393 to i32
  br label %cond.end1395

cond.end1395:                                     ; preds = %cond.false1390, %land.end1387
  %cond1396 = phi i32 [ %cond1389, %land.end1387 ], [ %conv1394, %cond.false1390 ]
  br label %cond.end1397

cond.end1397:                                     ; preds = %cond.end1395, %cond.true1339
  %cond1398 = phi i32 [ %cond1347, %cond.true1339 ], [ %cond1396, %cond.end1395 ]
  br label %cond.end1399

cond.end1399:                                     ; preds = %cond.end1397, %cond.true1332
  %cond1400 = phi i32 [ 0, %cond.true1332 ], [ %cond1398, %cond.end1397 ]
  %conv1401 = sext i32 %cond1400 to i64
  store i64 %conv1401, i64* %ln, align 8
  %754 = load i32, i32* %nextchr, align 4
  %cmp1402 = icmp slt i32 %754, 0
  br i1 %cmp1402, label %cond.true1404, label %cond.false1405

cond.true1404:                                    ; preds = %cond.end1399
  br label %cond.end1455

cond.false1405:                                   ; preds = %cond.end1399
  %755 = load i8*, i8** %locinput, align 8
  %756 = load i8, i8* %755, align 1
  %conv1406 = zext i8 %756 to i64
  %cmp1407 = icmp ult i64 %conv1406, 128
  br i1 %cmp1407, label %cond.true1409, label %cond.false1416

cond.true1409:                                    ; preds = %cond.false1405
  %757 = load i8*, i8** %locinput, align 8
  %758 = load i8, i8* %757, align 1
  %idxprom1410 = zext i8 %758 to i64
  %arrayidx1411 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1410
  %759 = load i32, i32* %arrayidx1411, align 4
  %and1412 = and i32 %759, 1
  %tobool1413 = icmp ne i32 %and1412, 0
  %760 = zext i1 %tobool1413 to i64
  %cond1415 = select i1 %tobool1413, i32 1, i32 0
  br label %cond.end1453

cond.false1416:                                   ; preds = %cond.false1405
  %761 = load i8*, i8** %locinput, align 8
  %762 = load i8, i8* %761, align 1
  %conv1417 = zext i8 %762 to i32
  %and1418 = and i32 %conv1417, 254
  %cmp1419 = icmp eq i32 %and1418, 194
  br i1 %cmp1419, label %cond.true1421, label %cond.false1448

cond.true1421:                                    ; preds = %cond.false1416
  %763 = load i8*, i8** %locinput, align 8
  %764 = load i8, i8* %763, align 1
  %conv1422 = zext i8 %764 to i32
  %and1423 = and i32 %conv1422, 31
  %shl1424 = shl i32 %and1423, 6
  %765 = load i8*, i8** %locinput, align 8
  %add.ptr1425 = getelementptr inbounds i8, i8* %765, i64 1
  %766 = load i8, i8* %add.ptr1425, align 1
  %conv1426 = zext i8 %766 to i32
  %and1427 = and i32 %conv1426, 63
  %or1428 = or i32 %shl1424, %and1427
  %conv1429 = sext i32 %or1428 to i64
  %and1430 = and i64 %conv1429, -256
  %tobool1431 = icmp ne i64 %and1430, 0
  br i1 %tobool1431, label %land.end1445, label %land.rhs1432

land.rhs1432:                                     ; preds = %cond.true1421
  %767 = load i8*, i8** %locinput, align 8
  %768 = load i8, i8* %767, align 1
  %conv1433 = zext i8 %768 to i32
  %and1434 = and i32 %conv1433, 31
  %shl1435 = shl i32 %and1434, 6
  %769 = load i8*, i8** %locinput, align 8
  %add.ptr1436 = getelementptr inbounds i8, i8* %769, i64 1
  %770 = load i8, i8* %add.ptr1436, align 1
  %conv1437 = zext i8 %770 to i32
  %and1438 = and i32 %conv1437, 63
  %or1439 = or i32 %shl1435, %and1438
  %conv1440 = trunc i32 %or1439 to i8
  %idxprom1441 = zext i8 %conv1440 to i64
  %arrayidx1442 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1441
  %771 = load i32, i32* %arrayidx1442, align 4
  %and1443 = and i32 %771, 1
  %tobool1444 = icmp ne i32 %and1443, 0
  br label %land.end1445

land.end1445:                                     ; preds = %land.rhs1432, %cond.true1421
  %772 = phi i1 [ false, %cond.true1421 ], [ %tobool1444, %land.rhs1432 ]
  %773 = zext i1 %772 to i64
  %cond1447 = select i1 %772, i32 1, i32 0
  br label %cond.end1451

cond.false1448:                                   ; preds = %cond.false1416
  %774 = load i8*, i8** %locinput, align 8
  %call1449 = call zeroext i1 @Perl__is_utf8_FOO(i8 zeroext 0, i8* %774)
  %conv1450 = zext i1 %call1449 to i32
  br label %cond.end1451

cond.end1451:                                     ; preds = %cond.false1448, %land.end1445
  %cond1452 = phi i32 [ %cond1447, %land.end1445 ], [ %conv1450, %cond.false1448 ]
  br label %cond.end1453

cond.end1453:                                     ; preds = %cond.end1451, %cond.true1409
  %cond1454 = phi i32 [ %cond1415, %cond.true1409 ], [ %cond1452, %cond.end1451 ]
  br label %cond.end1455

cond.end1455:                                     ; preds = %cond.end1453, %cond.true1404
  %cond1456 = phi i32 [ 0, %cond.true1404 ], [ %cond1454, %cond.end1453 ]
  store i32 %cond1456, i32* %n, align 4
  %775 = load i64, i64* %ln, align 8
  %776 = load i32, i32* %n, align 4
  %conv1457 = zext i32 %776 to i64
  %cmp1458 = icmp ne i64 %775, %conv1457
  %777 = zext i1 %cmp1458 to i64
  %cond1460 = select i1 %cmp1458, i32 1, i32 0
  %tobool1461 = icmp ne i32 %cond1460, 0
  %frombool1462 = zext i1 %tobool1461 to i8
  store i8 %frombool1462, i8* %match, align 1
  br label %sw.epilog1577

sw.bb1463:                                        ; preds = %bound_utf8
  %778 = load i8*, i8** %locinput, align 8
  %779 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1464 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %779, i32 0, i32 1
  %780 = load i8*, i8** %strbeg1464, align 8
  %cmp1465 = icmp eq i8* %778, %780
  br i1 %cmp1465, label %if.then1470, label %lor.lhs.false1467

lor.lhs.false1467:                                ; preds = %sw.bb1463
  %781 = load i32, i32* %nextchr, align 4
  %cmp1468 = icmp slt i32 %781, 0
  br i1 %cmp1468, label %if.then1470, label %if.else1471

if.then1470:                                      ; preds = %lor.lhs.false1467, %sw.bb1463
  store i8 1, i8* %match, align 1
  br label %if.end1498

if.else1471:                                      ; preds = %lor.lhs.false1467
  %782 = load %struct.sv*, %struct.sv** @PL_GCB_invlist, align 8
  %783 = load i8*, i8** %locinput, align 8
  %784 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1472 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %784, i32 0, i32 1
  %785 = load i8*, i8** %strbeg1472, align 8
  %call1473 = call i8* @S_reghop3(i8* %783, i64 -1, i8* %785)
  %786 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1474 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %786, i32 0, i32 2
  %787 = load i8*, i8** %strend1474, align 8
  %788 = load i8*, i8** %locinput, align 8
  %789 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1475 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %789, i32 0, i32 1
  %790 = load i8*, i8** %strbeg1475, align 8
  %call1476 = call i8* @S_reghop3(i8* %788, i64 -1, i8* %790)
  %sub.ptr.lhs.cast1477 = ptrtoint i8* %787 to i64
  %sub.ptr.rhs.cast1478 = ptrtoint i8* %call1476 to i64
  %sub.ptr.sub1479 = sub i64 %sub.ptr.lhs.cast1477, %sub.ptr.rhs.cast1478
  %call1480 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %791 = zext i1 %call1480 to i64
  %cond1482 = select i1 %call1480, i32 0, i32 -8161
  %call1483 = call i64 @Perl_utf8n_to_uvchr(i8* %call1473, i64 %sub.ptr.sub1479, i64* null, i32 %cond1482)
  %call1484 = call i64 @Perl__invlist_search(%struct.sv* %782, i64 %call1483)
  %arrayidx1485 = getelementptr inbounds [1484 x i32], [1484 x i32]* @Grapheme_Cluster_Break_invmap, i64 0, i64 %call1484
  %792 = load i32, i32* %arrayidx1485, align 4
  %793 = load %struct.sv*, %struct.sv** @PL_GCB_invlist, align 8
  %794 = load i8*, i8** %locinput, align 8
  %795 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1486 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %795, i32 0, i32 2
  %796 = load i8*, i8** %strend1486, align 8
  %797 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast1487 = ptrtoint i8* %796 to i64
  %sub.ptr.rhs.cast1488 = ptrtoint i8* %797 to i64
  %sub.ptr.sub1489 = sub i64 %sub.ptr.lhs.cast1487, %sub.ptr.rhs.cast1488
  %call1490 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %798 = zext i1 %call1490 to i64
  %cond1492 = select i1 %call1490, i32 0, i32 -8161
  %call1493 = call i64 @Perl_utf8n_to_uvchr(i8* %794, i64 %sub.ptr.sub1489, i64* null, i32 %cond1492)
  %call1494 = call i64 @Perl__invlist_search(%struct.sv* %793, i64 %call1493)
  %arrayidx1495 = getelementptr inbounds [1484 x i32], [1484 x i32]* @Grapheme_Cluster_Break_invmap, i64 0, i64 %call1494
  %799 = load i32, i32* %arrayidx1495, align 4
  %call1496 = call zeroext i1 @S_isGCB(i32 %792, i32 %799)
  %frombool1497 = zext i1 %call1496 to i8
  store i8 %frombool1497, i8* %match, align 1
  br label %if.end1498

if.end1498:                                       ; preds = %if.else1471, %if.then1470
  br label %sw.epilog1577

sw.bb1499:                                        ; preds = %bound_utf8
  %800 = load i8*, i8** %locinput, align 8
  %801 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1500 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %801, i32 0, i32 1
  %802 = load i8*, i8** %strbeg1500, align 8
  %cmp1501 = icmp eq i8* %800, %802
  br i1 %cmp1501, label %if.then1506, label %lor.lhs.false1503

lor.lhs.false1503:                                ; preds = %sw.bb1499
  %803 = load i32, i32* %nextchr, align 4
  %cmp1504 = icmp slt i32 %803, 0
  br i1 %cmp1504, label %if.then1506, label %if.else1507

if.then1506:                                      ; preds = %lor.lhs.false1503, %sw.bb1499
  store i8 1, i8* %match, align 1
  br label %if.end1537

if.else1507:                                      ; preds = %lor.lhs.false1503
  %804 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %805 = load i8*, i8** %locinput, align 8
  %806 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1508 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %806, i32 0, i32 1
  %807 = load i8*, i8** %strbeg1508, align 8
  %call1509 = call i8* @S_reghop3(i8* %805, i64 -1, i8* %807)
  %808 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1510 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %808, i32 0, i32 2
  %809 = load i8*, i8** %strend1510, align 8
  %810 = load i8*, i8** %locinput, align 8
  %811 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1511 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %811, i32 0, i32 1
  %812 = load i8*, i8** %strbeg1511, align 8
  %call1512 = call i8* @S_reghop3(i8* %810, i64 -1, i8* %812)
  %sub.ptr.lhs.cast1513 = ptrtoint i8* %809 to i64
  %sub.ptr.rhs.cast1514 = ptrtoint i8* %call1512 to i64
  %sub.ptr.sub1515 = sub i64 %sub.ptr.lhs.cast1513, %sub.ptr.rhs.cast1514
  %call1516 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %813 = zext i1 %call1516 to i64
  %cond1518 = select i1 %call1516, i32 0, i32 -8161
  %call1519 = call i64 @Perl_utf8n_to_uvchr(i8* %call1509, i64 %sub.ptr.sub1515, i64* null, i32 %cond1518)
  %call1520 = call i64 @Perl__invlist_search(%struct.sv* %804, i64 %call1519)
  %arrayidx1521 = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call1520
  %814 = load i32, i32* %arrayidx1521, align 4
  %815 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %816 = load i8*, i8** %locinput, align 8
  %817 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1522 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %817, i32 0, i32 2
  %818 = load i8*, i8** %strend1522, align 8
  %819 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast1523 = ptrtoint i8* %818 to i64
  %sub.ptr.rhs.cast1524 = ptrtoint i8* %819 to i64
  %sub.ptr.sub1525 = sub i64 %sub.ptr.lhs.cast1523, %sub.ptr.rhs.cast1524
  %call1526 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %820 = zext i1 %call1526 to i64
  %cond1528 = select i1 %call1526, i32 0, i32 -8161
  %call1529 = call i64 @Perl_utf8n_to_uvchr(i8* %816, i64 %sub.ptr.sub1525, i64* null, i32 %cond1528)
  %call1530 = call i64 @Perl__invlist_search(%struct.sv* %815, i64 %call1529)
  %arrayidx1531 = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call1530
  %821 = load i32, i32* %arrayidx1531, align 4
  %822 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1532 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %822, i32 0, i32 1
  %823 = load i8*, i8** %strbeg1532, align 8
  %824 = load i8*, i8** %locinput, align 8
  %825 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1533 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %825, i32 0, i32 2
  %826 = load i8*, i8** %strend1533, align 8
  %827 = load i8, i8* %utf8_target, align 1
  %tobool1534 = trunc i8 %827 to i1
  %call1535 = call zeroext i1 @S_isSB(i32 %814, i32 %821, i8* %823, i8* %824, i8* %826, i1 zeroext %tobool1534)
  %frombool1536 = zext i1 %call1535 to i8
  store i8 %frombool1536, i8* %match, align 1
  br label %if.end1537

if.end1537:                                       ; preds = %if.else1507, %if.then1506
  br label %sw.epilog1577

sw.bb1538:                                        ; preds = %bound_utf8
  %828 = load i8*, i8** %locinput, align 8
  %829 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1539 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %829, i32 0, i32 1
  %830 = load i8*, i8** %strbeg1539, align 8
  %cmp1540 = icmp eq i8* %828, %830
  br i1 %cmp1540, label %if.then1545, label %lor.lhs.false1542

lor.lhs.false1542:                                ; preds = %sw.bb1538
  %831 = load i32, i32* %nextchr, align 4
  %cmp1543 = icmp slt i32 %831, 0
  br i1 %cmp1543, label %if.then1545, label %if.else1546

if.then1545:                                      ; preds = %lor.lhs.false1542, %sw.bb1538
  store i8 1, i8* %match, align 1
  br label %if.end1576

if.else1546:                                      ; preds = %lor.lhs.false1542
  %832 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %833 = load i8*, i8** %locinput, align 8
  %834 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1547 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %834, i32 0, i32 1
  %835 = load i8*, i8** %strbeg1547, align 8
  %call1548 = call i8* @S_reghop3(i8* %833, i64 -1, i8* %835)
  %836 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1549 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %836, i32 0, i32 2
  %837 = load i8*, i8** %strend1549, align 8
  %838 = load i8*, i8** %locinput, align 8
  %839 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1550 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %839, i32 0, i32 1
  %840 = load i8*, i8** %strbeg1550, align 8
  %call1551 = call i8* @S_reghop3(i8* %838, i64 -1, i8* %840)
  %sub.ptr.lhs.cast1552 = ptrtoint i8* %837 to i64
  %sub.ptr.rhs.cast1553 = ptrtoint i8* %call1551 to i64
  %sub.ptr.sub1554 = sub i64 %sub.ptr.lhs.cast1552, %sub.ptr.rhs.cast1553
  %call1555 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %841 = zext i1 %call1555 to i64
  %cond1557 = select i1 %call1555, i32 0, i32 -8161
  %call1558 = call i64 @Perl_utf8n_to_uvchr(i8* %call1548, i64 %sub.ptr.sub1554, i64* null, i32 %cond1557)
  %call1559 = call i64 @Perl__invlist_search(%struct.sv* %832, i64 %call1558)
  %arrayidx1560 = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call1559
  %842 = load i32, i32* %arrayidx1560, align 4
  %843 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %844 = load i8*, i8** %locinput, align 8
  %845 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1561 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %845, i32 0, i32 2
  %846 = load i8*, i8** %strend1561, align 8
  %847 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast1562 = ptrtoint i8* %846 to i64
  %sub.ptr.rhs.cast1563 = ptrtoint i8* %847 to i64
  %sub.ptr.sub1564 = sub i64 %sub.ptr.lhs.cast1562, %sub.ptr.rhs.cast1563
  %call1565 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %848 = zext i1 %call1565 to i64
  %cond1567 = select i1 %call1565, i32 0, i32 -8161
  %call1568 = call i64 @Perl_utf8n_to_uvchr(i8* %844, i64 %sub.ptr.sub1564, i64* null, i32 %cond1567)
  %call1569 = call i64 @Perl__invlist_search(%struct.sv* %843, i64 %call1568)
  %arrayidx1570 = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call1569
  %849 = load i32, i32* %arrayidx1570, align 4
  %850 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1571 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %850, i32 0, i32 1
  %851 = load i8*, i8** %strbeg1571, align 8
  %852 = load i8*, i8** %locinput, align 8
  %853 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1572 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %853, i32 0, i32 2
  %854 = load i8*, i8** %strend1572, align 8
  %855 = load i8, i8* %utf8_target, align 1
  %tobool1573 = trunc i8 %855 to i1
  %call1574 = call zeroext i1 @S_isWB(i32 18, i32 %842, i32 %849, i8* %851, i8* %852, i8* %854, i1 zeroext %tobool1573)
  %frombool1575 = zext i1 %call1574 to i8
  store i8 %frombool1575, i8* %match, align 1
  br label %if.end1576

if.end1576:                                       ; preds = %if.else1546, %if.then1545
  br label %sw.epilog1577

sw.epilog1577:                                    ; preds = %bound_utf8, %if.end1576, %if.end1537, %if.end1498, %cond.end1455
  br label %if.end1699

if.else1578:                                      ; preds = %boundu
  %856 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1579 = getelementptr inbounds %struct.regnode, %struct.regnode* %856, i32 0, i32 0
  %857 = load i8, i8* %flags1579, align 2
  %conv1580 = zext i8 %857 to i32
  switch i32 %conv1580, label %sw.epilog1698 [
    i32 0, label %sw.bb1581
    i32 1, label %sw.bb1630
    i32 2, label %sw.bb1650
    i32 3, label %sw.bb1674
  ]

sw.bb1581:                                        ; preds = %if.else1578
  %858 = load i8*, i8** %locinput, align 8
  %859 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1582 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %859, i32 0, i32 1
  %860 = load i8*, i8** %strbeg1582, align 8
  %cmp1583 = icmp eq i8* %858, %860
  br i1 %cmp1583, label %cond.true1585, label %cond.false1586

cond.true1585:                                    ; preds = %sw.bb1581
  br label %cond.end1603

cond.false1586:                                   ; preds = %sw.bb1581
  %861 = load i8*, i8** %locinput, align 8
  %add.ptr1587 = getelementptr inbounds i8, i8* %861, i64 -1
  %862 = load i8, i8* %add.ptr1587, align 1
  %conv1588 = zext i8 %862 to i32
  %conv1589 = sext i32 %conv1588 to i64
  %and1590 = and i64 %conv1589, -256
  %tobool1591 = icmp ne i64 %and1590, 0
  br i1 %tobool1591, label %land.end1600, label %land.rhs1592

land.rhs1592:                                     ; preds = %cond.false1586
  %863 = load i8*, i8** %locinput, align 8
  %add.ptr1593 = getelementptr inbounds i8, i8* %863, i64 -1
  %864 = load i8, i8* %add.ptr1593, align 1
  %conv1594 = zext i8 %864 to i32
  %conv1595 = trunc i32 %conv1594 to i8
  %idxprom1596 = zext i8 %conv1595 to i64
  %arrayidx1597 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1596
  %865 = load i32, i32* %arrayidx1597, align 4
  %and1598 = and i32 %865, 1
  %tobool1599 = icmp ne i32 %and1598, 0
  br label %land.end1600

land.end1600:                                     ; preds = %land.rhs1592, %cond.false1586
  %866 = phi i1 [ false, %cond.false1586 ], [ %tobool1599, %land.rhs1592 ]
  %867 = zext i1 %866 to i64
  %cond1602 = select i1 %866, i32 1, i32 0
  br label %cond.end1603

cond.end1603:                                     ; preds = %land.end1600, %cond.true1585
  %cond1604 = phi i32 [ 0, %cond.true1585 ], [ %cond1602, %land.end1600 ]
  %conv1605 = sext i32 %cond1604 to i64
  store i64 %conv1605, i64* %ln, align 8
  %868 = load i32, i32* %nextchr, align 4
  %cmp1606 = icmp slt i32 %868, 0
  br i1 %cmp1606, label %cond.true1608, label %cond.false1609

cond.true1608:                                    ; preds = %cond.end1603
  br label %cond.end1622

cond.false1609:                                   ; preds = %cond.end1603
  %869 = load i32, i32* %nextchr, align 4
  %conv1610 = sext i32 %869 to i64
  %and1611 = and i64 %conv1610, -256
  %tobool1612 = icmp ne i64 %and1611, 0
  br i1 %tobool1612, label %land.end1619, label %land.rhs1613

land.rhs1613:                                     ; preds = %cond.false1609
  %870 = load i32, i32* %nextchr, align 4
  %conv1614 = trunc i32 %870 to i8
  %idxprom1615 = zext i8 %conv1614 to i64
  %arrayidx1616 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1615
  %871 = load i32, i32* %arrayidx1616, align 4
  %and1617 = and i32 %871, 1
  %tobool1618 = icmp ne i32 %and1617, 0
  br label %land.end1619

land.end1619:                                     ; preds = %land.rhs1613, %cond.false1609
  %872 = phi i1 [ false, %cond.false1609 ], [ %tobool1618, %land.rhs1613 ]
  %873 = zext i1 %872 to i64
  %cond1621 = select i1 %872, i32 1, i32 0
  br label %cond.end1622

cond.end1622:                                     ; preds = %land.end1619, %cond.true1608
  %cond1623 = phi i32 [ 0, %cond.true1608 ], [ %cond1621, %land.end1619 ]
  store i32 %cond1623, i32* %n, align 4
  %874 = load i64, i64* %ln, align 8
  %875 = load i32, i32* %n, align 4
  %conv1624 = zext i32 %875 to i64
  %cmp1625 = icmp ne i64 %874, %conv1624
  %876 = zext i1 %cmp1625 to i64
  %cond1627 = select i1 %cmp1625, i32 1, i32 0
  %tobool1628 = icmp ne i32 %cond1627, 0
  %frombool1629 = zext i1 %tobool1628 to i8
  store i8 %frombool1629, i8* %match, align 1
  br label %sw.epilog1698

sw.bb1630:                                        ; preds = %if.else1578
  %877 = load i8*, i8** %locinput, align 8
  %878 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1631 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %878, i32 0, i32 1
  %879 = load i8*, i8** %strbeg1631, align 8
  %cmp1632 = icmp eq i8* %877, %879
  br i1 %cmp1632, label %if.then1637, label %lor.lhs.false1634

lor.lhs.false1634:                                ; preds = %sw.bb1630
  %880 = load i32, i32* %nextchr, align 4
  %cmp1635 = icmp slt i32 %880, 0
  br i1 %cmp1635, label %if.then1637, label %if.else1638

if.then1637:                                      ; preds = %lor.lhs.false1634, %sw.bb1630
  store i8 1, i8* %match, align 1
  br label %if.end1649

if.else1638:                                      ; preds = %lor.lhs.false1634
  %881 = load i8*, i8** %locinput, align 8
  %add.ptr1639 = getelementptr inbounds i8, i8* %881, i64 -1
  %882 = load i8, i8* %add.ptr1639, align 1
  %conv1640 = zext i8 %882 to i32
  %cmp1641 = icmp ne i32 %conv1640, 13
  br i1 %cmp1641, label %lor.end1647, label %lor.rhs1643

lor.rhs1643:                                      ; preds = %if.else1638
  %883 = load i8*, i8** %locinput, align 8
  %884 = load i8, i8* %883, align 1
  %conv1644 = zext i8 %884 to i32
  %cmp1645 = icmp ne i32 %conv1644, 10
  br label %lor.end1647

lor.end1647:                                      ; preds = %lor.rhs1643, %if.else1638
  %885 = phi i1 [ true, %if.else1638 ], [ %cmp1645, %lor.rhs1643 ]
  %frombool1648 = zext i1 %885 to i8
  store i8 %frombool1648, i8* %match, align 1
  br label %if.end1649

if.end1649:                                       ; preds = %lor.end1647, %if.then1637
  br label %sw.epilog1698

sw.bb1650:                                        ; preds = %if.else1578
  %886 = load i8*, i8** %locinput, align 8
  %887 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1651 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %887, i32 0, i32 1
  %888 = load i8*, i8** %strbeg1651, align 8
  %cmp1652 = icmp eq i8* %886, %888
  br i1 %cmp1652, label %if.then1657, label %lor.lhs.false1654

lor.lhs.false1654:                                ; preds = %sw.bb1650
  %889 = load i32, i32* %nextchr, align 4
  %cmp1655 = icmp slt i32 %889, 0
  br i1 %cmp1655, label %if.then1657, label %if.else1658

if.then1657:                                      ; preds = %lor.lhs.false1654, %sw.bb1650
  store i8 1, i8* %match, align 1
  br label %if.end1673

if.else1658:                                      ; preds = %lor.lhs.false1654
  %890 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %891 = load i8*, i8** %locinput, align 8
  %add.ptr1659 = getelementptr inbounds i8, i8* %891, i64 -1
  %892 = load i8, i8* %add.ptr1659, align 1
  %conv1660 = zext i8 %892 to i32
  %conv1661 = sext i32 %conv1660 to i64
  %call1662 = call i64 @Perl__invlist_search(%struct.sv* %890, i64 %conv1661)
  %arrayidx1663 = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call1662
  %893 = load i32, i32* %arrayidx1663, align 4
  %894 = load %struct.sv*, %struct.sv** @PL_SB_invlist, align 8
  %895 = load i8*, i8** %locinput, align 8
  %896 = load i8, i8* %895, align 1
  %conv1664 = zext i8 %896 to i32
  %conv1665 = sext i32 %conv1664 to i64
  %call1666 = call i64 @Perl__invlist_search(%struct.sv* %894, i64 %conv1665)
  %arrayidx1667 = getelementptr inbounds [2835 x i32], [2835 x i32]* @Sentence_Break_invmap, i64 0, i64 %call1666
  %897 = load i32, i32* %arrayidx1667, align 4
  %898 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1668 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %898, i32 0, i32 1
  %899 = load i8*, i8** %strbeg1668, align 8
  %900 = load i8*, i8** %locinput, align 8
  %901 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1669 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %901, i32 0, i32 2
  %902 = load i8*, i8** %strend1669, align 8
  %903 = load i8, i8* %utf8_target, align 1
  %tobool1670 = trunc i8 %903 to i1
  %call1671 = call zeroext i1 @S_isSB(i32 %893, i32 %897, i8* %899, i8* %900, i8* %902, i1 zeroext %tobool1670)
  %frombool1672 = zext i1 %call1671 to i8
  store i8 %frombool1672, i8* %match, align 1
  br label %if.end1673

if.end1673:                                       ; preds = %if.else1658, %if.then1657
  br label %sw.epilog1698

sw.bb1674:                                        ; preds = %if.else1578
  %904 = load i8*, i8** %locinput, align 8
  %905 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1675 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %905, i32 0, i32 1
  %906 = load i8*, i8** %strbeg1675, align 8
  %cmp1676 = icmp eq i8* %904, %906
  br i1 %cmp1676, label %if.then1681, label %lor.lhs.false1678

lor.lhs.false1678:                                ; preds = %sw.bb1674
  %907 = load i32, i32* %nextchr, align 4
  %cmp1679 = icmp slt i32 %907, 0
  br i1 %cmp1679, label %if.then1681, label %if.else1682

if.then1681:                                      ; preds = %lor.lhs.false1678, %sw.bb1674
  store i8 1, i8* %match, align 1
  br label %if.end1697

if.else1682:                                      ; preds = %lor.lhs.false1678
  %908 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %909 = load i8*, i8** %locinput, align 8
  %add.ptr1683 = getelementptr inbounds i8, i8* %909, i64 -1
  %910 = load i8, i8* %add.ptr1683, align 1
  %conv1684 = zext i8 %910 to i32
  %conv1685 = sext i32 %conv1684 to i64
  %call1686 = call i64 @Perl__invlist_search(%struct.sv* %908, i64 %conv1685)
  %arrayidx1687 = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call1686
  %911 = load i32, i32* %arrayidx1687, align 4
  %912 = load %struct.sv*, %struct.sv** @PL_WB_invlist, align 8
  %913 = load i8*, i8** %locinput, align 8
  %914 = load i8, i8* %913, align 1
  %conv1688 = zext i8 %914 to i32
  %conv1689 = sext i32 %conv1688 to i64
  %call1690 = call i64 @Perl__invlist_search(%struct.sv* %912, i64 %conv1689)
  %arrayidx1691 = getelementptr inbounds [1480 x i32], [1480 x i32]* @Word_Break_invmap, i64 0, i64 %call1690
  %915 = load i32, i32* %arrayidx1691, align 4
  %916 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg1692 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %916, i32 0, i32 1
  %917 = load i8*, i8** %strbeg1692, align 8
  %918 = load i8*, i8** %locinput, align 8
  %919 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1693 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %919, i32 0, i32 2
  %920 = load i8*, i8** %strend1693, align 8
  %921 = load i8, i8* %utf8_target, align 1
  %tobool1694 = trunc i8 %921 to i1
  %call1695 = call zeroext i1 @S_isWB(i32 18, i32 %911, i32 %915, i8* %917, i8* %918, i8* %920, i1 zeroext %tobool1694)
  %frombool1696 = zext i1 %call1695 to i8
  store i8 %frombool1696, i8* %match, align 1
  br label %if.end1697

if.end1697:                                       ; preds = %if.else1682, %if.then1681
  br label %sw.epilog1698

sw.epilog1698:                                    ; preds = %if.else1578, %if.end1697, %if.end1673, %if.end1649, %cond.end1622
  br label %if.end1699

if.end1699:                                       ; preds = %sw.epilog1698, %sw.epilog1577
  %922 = load i32, i32* %to_complement, align 4
  %923 = load i8, i8* %match, align 1
  %tobool1700 = trunc i8 %923 to i1
  %lnot = xor i1 %tobool1700, true
  %lnot.ext = zext i1 %lnot to i32
  %xor1701 = xor i32 %922, %lnot.ext
  %tobool1702 = icmp ne i32 %xor1701, 0
  br i1 %tobool1702, label %if.then1703, label %if.end1704

if.then1703:                                      ; preds = %if.end1699
  br label %no

if.end1704:                                       ; preds = %if.end1699
  br label %sw.epilog6759

sw.bb1705:                                        ; preds = %cond.end45
  br label %sw.bb1706

sw.bb1706:                                        ; preds = %cond.end45, %sw.bb1705
  %924 = load i32, i32* %nextchr, align 4
  %cmp1707 = icmp slt i32 %924, 0
  br i1 %cmp1707, label %if.then1709, label %if.end1710

if.then1709:                                      ; preds = %sw.bb1706
  br label %no

if.end1710:                                       ; preds = %sw.bb1706
  %925 = load i8, i8* %utf8_target, align 1
  %tobool1711 = trunc i8 %925 to i1
  br i1 %tobool1711, label %if.then1712, label %if.else1723

if.then1712:                                      ; preds = %if.end1710
  %926 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %927 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %928 = load i8*, i8** %locinput, align 8
  %929 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1713 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %929, i32 0, i32 2
  %930 = load i8*, i8** %strend1713, align 8
  %931 = load i8, i8* %utf8_target, align 1
  %tobool1714 = trunc i8 %931 to i1
  %call1715 = call zeroext i1 @S_reginclass(%struct.regexp* %926, %struct.regnode* %927, i8* %928, i8* %930, i1 zeroext %tobool1714)
  br i1 %call1715, label %if.end1717, label %if.then1716

if.then1716:                                      ; preds = %if.then1712
  br label %no

if.end1717:                                       ; preds = %if.then1712
  %932 = load i8*, i8** %locinput, align 8
  %933 = load i8, i8* %932, align 1
  %idxprom1718 = zext i8 %933 to i64
  %arrayidx1719 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1718
  %934 = load i8, i8* %arrayidx1719, align 1
  %conv1720 = zext i8 %934 to i32
  %935 = load i8*, i8** %locinput, align 8
  %idx.ext1721 = sext i32 %conv1720 to i64
  %add.ptr1722 = getelementptr inbounds i8, i8* %935, i64 %idx.ext1721
  store i8* %add.ptr1722, i8** %locinput, align 8
  br label %if.end1749

if.else1723:                                      ; preds = %if.end1710
  %936 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1724 = getelementptr inbounds %struct.regnode, %struct.regnode* %936, i32 0, i32 0
  %937 = load i8, i8* %flags1724, align 2
  %conv1725 = zext i8 %937 to i32
  %tobool1726 = icmp ne i32 %conv1725, 0
  br i1 %tobool1726, label %cond.true1727, label %cond.false1731

cond.true1727:                                    ; preds = %if.else1723
  %938 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %939 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %940 = load i8*, i8** %locinput, align 8
  %941 = load i8*, i8** %locinput, align 8
  %add.ptr1728 = getelementptr inbounds i8, i8* %941, i64 1
  %call1729 = call zeroext i1 @S_reginclass(%struct.regexp* %938, %struct.regnode* %939, i8* %940, i8* %add.ptr1728, i1 zeroext false)
  br i1 %call1729, label %if.end1747, label %if.then1746

cond.false1731:                                   ; preds = %if.else1723
  %942 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %943 = bitcast %struct.regnode* %942 to %struct.regnode_charclass*
  %bitmap1732 = getelementptr inbounds %struct.regnode_charclass, %struct.regnode_charclass* %943, i32 0, i32 4
  %944 = load i8*, i8** %locinput, align 8
  %945 = load i8, i8* %944, align 1
  %conv1733 = zext i8 %945 to i32
  %shr1734 = ashr i32 %conv1733, 3
  %and1735 = and i32 %shr1734, 31
  %idxprom1736 = sext i32 %and1735 to i64
  %arrayidx1737 = getelementptr inbounds [32 x i8], [32 x i8]* %bitmap1732, i64 0, i64 %idxprom1736
  %946 = load i8, i8* %arrayidx1737, align 1
  %conv1738 = sext i8 %946 to i32
  %947 = load i8*, i8** %locinput, align 8
  %948 = load i8, i8* %947, align 1
  %conv1739 = zext i8 %948 to i32
  %and1740 = and i32 %conv1739, 7
  %shl1741 = shl i32 1, %and1740
  %and1742 = and i32 %conv1738, %shl1741
  %tobool1743 = icmp ne i32 %and1742, 0
  br i1 %tobool1743, label %cond.true1744, label %cond.false1745

cond.true1744:                                    ; preds = %cond.false1731
  br i1 true, label %if.end1747, label %if.then1746

cond.false1745:                                   ; preds = %cond.false1731
  br i1 false, label %if.end1747, label %if.then1746

if.then1746:                                      ; preds = %cond.false1745, %cond.true1744, %cond.true1727
  br label %no

if.end1747:                                       ; preds = %cond.false1745, %cond.true1744, %cond.true1727
  %949 = load i8*, i8** %locinput, align 8
  %incdec.ptr1748 = getelementptr inbounds i8, i8* %949, i32 1
  store i8* %incdec.ptr1748, i8** %locinput, align 8
  br label %if.end1749

if.end1749:                                       ; preds = %if.end1747, %if.end1717
  br label %sw.epilog6759

sw.bb1750:                                        ; preds = %cond.end45
  store i32 1, i32* %to_complement, align 4
  br label %sw.bb1751

sw.bb1751:                                        ; preds = %cond.end45, %sw.bb1750
  %950 = load i32, i32* %nextchr, align 4
  %cmp1752 = icmp slt i32 %950, 0
  br i1 %cmp1752, label %if.then1754, label %if.end1755

if.then1754:                                      ; preds = %sw.bb1751
  br label %no

if.end1755:                                       ; preds = %sw.bb1751
  %951 = load i32, i32* %nextchr, align 4
  %conv1756 = sext i32 %951 to i64
  %cmp1757 = icmp ult i64 %conv1756, 128
  br i1 %cmp1757, label %if.then1761, label %lor.lhs.false1759

lor.lhs.false1759:                                ; preds = %if.end1755
  %952 = load i8, i8* %utf8_target, align 1
  %tobool1760 = trunc i8 %952 to i1
  br i1 %tobool1760, label %if.else1771, label %if.then1761

if.then1761:                                      ; preds = %lor.lhs.false1759, %if.end1755
  %953 = load i32, i32* %to_complement, align 4
  %954 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1762 = getelementptr inbounds %struct.regnode, %struct.regnode* %954, i32 0, i32 0
  %955 = load i8, i8* %flags1762, align 2
  %956 = load i32, i32* %nextchr, align 4
  %conv1763 = trunc i32 %956 to i8
  %call1764 = call zeroext i1 @S_isFOO_lc(i8 zeroext %955, i8 zeroext %conv1763)
  %957 = zext i1 %call1764 to i64
  %cond1766 = select i1 %call1764, i32 1, i32 0
  %xor1767 = xor i32 %953, %cond1766
  %tobool1768 = icmp ne i32 %xor1767, 0
  br i1 %tobool1768, label %if.end1770, label %if.then1769

if.then1769:                                      ; preds = %if.then1761
  br label %no

if.end1770:                                       ; preds = %if.then1761
  br label %if.end1795

if.else1771:                                      ; preds = %lor.lhs.false1759
  %958 = load i32, i32* %nextchr, align 4
  %conv1772 = trunc i32 %958 to i8
  %conv1773 = zext i8 %conv1772 to i32
  %and1774 = and i32 %conv1773, 254
  %cmp1775 = icmp eq i32 %and1774, 194
  br i1 %cmp1775, label %if.then1777, label %if.else1793

if.then1777:                                      ; preds = %if.else1771
  %959 = load i32, i32* %to_complement, align 4
  %960 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1778 = getelementptr inbounds %struct.regnode, %struct.regnode* %960, i32 0, i32 0
  %961 = load i8, i8* %flags1778, align 2
  %962 = load i32, i32* %nextchr, align 4
  %and1779 = and i32 %962, 31
  %shl1780 = shl i32 %and1779, 6
  %963 = load i8*, i8** %locinput, align 8
  %add.ptr1781 = getelementptr inbounds i8, i8* %963, i64 1
  %964 = load i8, i8* %add.ptr1781, align 1
  %conv1782 = zext i8 %964 to i32
  %and1783 = and i32 %conv1782, 63
  %or1784 = or i32 %shl1780, %and1783
  %conv1785 = trunc i32 %or1784 to i8
  %call1786 = call zeroext i1 @S_isFOO_lc(i8 zeroext %961, i8 zeroext %conv1785)
  %965 = zext i1 %call1786 to i64
  %cond1788 = select i1 %call1786, i32 1, i32 0
  %xor1789 = xor i32 %959, %cond1788
  %tobool1790 = icmp ne i32 %xor1789, 0
  br i1 %tobool1790, label %if.end1792, label %if.then1791

if.then1791:                                      ; preds = %if.then1777
  br label %no

if.end1792:                                       ; preds = %if.then1777
  br label %if.end1794

if.else1793:                                      ; preds = %if.else1771
  br label %utf8_posix_above_latin1

if.end1794:                                       ; preds = %if.end1792
  br label %if.end1795

if.end1795:                                       ; preds = %if.end1794, %if.end1770
  %966 = load i8*, i8** %locinput, align 8
  %967 = load i8, i8* %966, align 1
  %idxprom1796 = zext i8 %967 to i64
  %arrayidx1797 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1796
  %968 = load i8, i8* %arrayidx1797, align 1
  %conv1798 = zext i8 %968 to i32
  %969 = load i8*, i8** %locinput, align 8
  %idx.ext1799 = sext i32 %conv1798 to i64
  %add.ptr1800 = getelementptr inbounds i8, i8* %969, i64 %idx.ext1799
  store i8* %add.ptr1800, i8** %locinput, align 8
  br label %sw.epilog6759

sw.bb1801:                                        ; preds = %cond.end45
  store i32 1, i32* %to_complement, align 4
  br label %sw.bb1802

sw.bb1802:                                        ; preds = %cond.end45, %sw.bb1801
  %970 = load i8, i8* %utf8_target, align 1
  %tobool1803 = trunc i8 %970 to i1
  br i1 %tobool1803, label %if.then1804, label %if.end1805

if.then1804:                                      ; preds = %sw.bb1802
  br label %utf8_posix

if.end1805:                                       ; preds = %sw.bb1802
  br label %posixa

sw.bb1806:                                        ; preds = %cond.end45
  %971 = load i32, i32* %nextchr, align 4
  %cmp1807 = icmp slt i32 %971, 0
  br i1 %cmp1807, label %if.then1809, label %if.end1810

if.then1809:                                      ; preds = %sw.bb1806
  br label %no

if.end1810:                                       ; preds = %sw.bb1806
  %972 = load i32, i32* %nextchr, align 4
  %conv1811 = sext i32 %972 to i64
  %cmp1812 = icmp ult i64 %conv1811, 128
  br i1 %cmp1812, label %if.end1815, label %if.then1814

if.then1814:                                      ; preds = %if.end1810
  br label %increment_locinput

if.end1815:                                       ; preds = %if.end1810
  store i32 1, i32* %to_complement, align 4
  br label %sw.bb1816

sw.bb1816:                                        ; preds = %cond.end45, %if.end1815
  br label %posixa

posixa:                                           ; preds = %sw.bb1816, %if.end1805
  %973 = load i32, i32* %nextchr, align 4
  %cmp1817 = icmp slt i32 %973, 0
  br i1 %cmp1817, label %if.then1843, label %lor.lhs.false1819

lor.lhs.false1819:                                ; preds = %posixa
  %974 = load i32, i32* %to_complement, align 4
  %975 = load i32, i32* %nextchr, align 4
  %conv1820 = sext i32 %975 to i64
  %and1821 = and i64 %conv1820, -256
  %tobool1822 = icmp ne i64 %and1821, 0
  br i1 %tobool1822, label %land.end1838, label %land.rhs1823

land.rhs1823:                                     ; preds = %lor.lhs.false1819
  %976 = load i32, i32* %nextchr, align 4
  %conv1824 = trunc i32 %976 to i8
  %idxprom1825 = zext i8 %conv1824 to i64
  %arrayidx1826 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1825
  %977 = load i32, i32* %arrayidx1826, align 4
  %978 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1827 = getelementptr inbounds %struct.regnode, %struct.regnode* %978, i32 0, i32 0
  %979 = load i8, i8* %flags1827, align 2
  %conv1828 = zext i8 %979 to i32
  %shl1829 = shl i32 1, %conv1828
  %or1830 = or i32 %shl1829, 16384
  %and1831 = and i32 %977, %or1830
  %980 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1832 = getelementptr inbounds %struct.regnode, %struct.regnode* %980, i32 0, i32 0
  %981 = load i8, i8* %flags1832, align 2
  %conv1833 = zext i8 %981 to i32
  %shl1834 = shl i32 1, %conv1833
  %or1835 = or i32 %shl1834, 16384
  %cmp1836 = icmp eq i32 %and1831, %or1835
  br label %land.end1838

land.end1838:                                     ; preds = %land.rhs1823, %lor.lhs.false1819
  %982 = phi i1 [ false, %lor.lhs.false1819 ], [ %cmp1836, %land.rhs1823 ]
  %983 = zext i1 %982 to i64
  %cond1840 = select i1 %982, i32 1, i32 0
  %xor1841 = xor i32 %974, %cond1840
  %tobool1842 = icmp ne i32 %xor1841, 0
  br i1 %tobool1842, label %if.end1844, label %if.then1843

if.then1843:                                      ; preds = %land.end1838, %posixa
  br label %no

if.end1844:                                       ; preds = %land.end1838
  %984 = load i8*, i8** %locinput, align 8
  %incdec.ptr1845 = getelementptr inbounds i8, i8* %984, i32 1
  store i8* %incdec.ptr1845, i8** %locinput, align 8
  br label %sw.epilog6759

sw.bb1846:                                        ; preds = %cond.end45
  store i32 1, i32* %to_complement, align 4
  br label %sw.bb1847

sw.bb1847:                                        ; preds = %cond.end45, %sw.bb1846
  br label %utf8_posix

utf8_posix:                                       ; preds = %sw.bb1847, %if.then1804
  %985 = load i32, i32* %nextchr, align 4
  %cmp1848 = icmp slt i32 %985, 0
  br i1 %cmp1848, label %if.then1850, label %if.end1851

if.then1850:                                      ; preds = %utf8_posix
  br label %no

if.end1851:                                       ; preds = %utf8_posix
  %986 = load i32, i32* %nextchr, align 4
  %conv1852 = sext i32 %986 to i64
  %cmp1853 = icmp ult i64 %conv1852, 128
  br i1 %cmp1853, label %if.then1857, label %lor.lhs.false1855

lor.lhs.false1855:                                ; preds = %if.end1851
  %987 = load i8, i8* %utf8_target, align 1
  %tobool1856 = trunc i8 %987 to i1
  br i1 %tobool1856, label %if.else1880, label %if.then1857

if.then1857:                                      ; preds = %lor.lhs.false1855, %if.end1851
  %988 = load i32, i32* %to_complement, align 4
  %989 = load i32, i32* %nextchr, align 4
  %conv1858 = sext i32 %989 to i64
  %and1859 = and i64 %conv1858, -256
  %tobool1860 = icmp ne i64 %and1859, 0
  br i1 %tobool1860, label %land.end1870, label %land.rhs1861

land.rhs1861:                                     ; preds = %if.then1857
  %990 = load i32, i32* %nextchr, align 4
  %conv1862 = trunc i32 %990 to i8
  %idxprom1863 = zext i8 %conv1862 to i64
  %arrayidx1864 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1863
  %991 = load i32, i32* %arrayidx1864, align 4
  %992 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1865 = getelementptr inbounds %struct.regnode, %struct.regnode* %992, i32 0, i32 0
  %993 = load i8, i8* %flags1865, align 2
  %conv1866 = zext i8 %993 to i32
  %shl1867 = shl i32 1, %conv1866
  %and1868 = and i32 %991, %shl1867
  %tobool1869 = icmp ne i32 %and1868, 0
  br label %land.end1870

land.end1870:                                     ; preds = %land.rhs1861, %if.then1857
  %994 = phi i1 [ false, %if.then1857 ], [ %tobool1869, %land.rhs1861 ]
  %995 = zext i1 %994 to i64
  %cond1872 = select i1 %994, i32 1, i32 0
  %tobool1873 = icmp ne i32 %cond1872, 0
  %996 = zext i1 %tobool1873 to i64
  %cond1874 = select i1 %tobool1873, i32 1, i32 0
  %xor1875 = xor i32 %988, %cond1874
  %tobool1876 = icmp ne i32 %xor1875, 0
  br i1 %tobool1876, label %if.end1878, label %if.then1877

if.then1877:                                      ; preds = %land.end1870
  br label %no

if.end1878:                                       ; preds = %land.end1870
  %997 = load i8*, i8** %locinput, align 8
  %incdec.ptr1879 = getelementptr inbounds i8, i8* %997, i32 1
  store i8* %incdec.ptr1879, i8** %locinput, align 8
  br label %if.end2221

if.else1880:                                      ; preds = %lor.lhs.false1855
  %998 = load i32, i32* %nextchr, align 4
  %conv1881 = trunc i32 %998 to i8
  %conv1882 = zext i8 %conv1881 to i32
  %and1883 = and i32 %conv1882, 254
  %cmp1884 = icmp eq i32 %and1883, 194
  br i1 %cmp1884, label %if.then1886, label %if.else1921

if.then1886:                                      ; preds = %if.else1880
  %999 = load i32, i32* %to_complement, align 4
  %1000 = load i32, i32* %nextchr, align 4
  %and1887 = and i32 %1000, 31
  %shl1888 = shl i32 %and1887, 6
  %1001 = load i8*, i8** %locinput, align 8
  %add.ptr1889 = getelementptr inbounds i8, i8* %1001, i64 1
  %1002 = load i8, i8* %add.ptr1889, align 1
  %conv1890 = zext i8 %1002 to i32
  %and1891 = and i32 %conv1890, 63
  %or1892 = or i32 %shl1888, %and1891
  %conv1893 = sext i32 %or1892 to i64
  %and1894 = and i64 %conv1893, -256
  %tobool1895 = icmp ne i64 %and1894, 0
  br i1 %tobool1895, label %land.end1911, label %land.rhs1896

land.rhs1896:                                     ; preds = %if.then1886
  %1003 = load i32, i32* %nextchr, align 4
  %and1897 = and i32 %1003, 31
  %shl1898 = shl i32 %and1897, 6
  %1004 = load i8*, i8** %locinput, align 8
  %add.ptr1899 = getelementptr inbounds i8, i8* %1004, i64 1
  %1005 = load i8, i8* %add.ptr1899, align 1
  %conv1900 = zext i8 %1005 to i32
  %and1901 = and i32 %conv1900, 63
  %or1902 = or i32 %shl1898, %and1901
  %conv1903 = trunc i32 %or1902 to i8
  %idxprom1904 = zext i8 %conv1903 to i64
  %arrayidx1905 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1904
  %1006 = load i32, i32* %arrayidx1905, align 4
  %1007 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1906 = getelementptr inbounds %struct.regnode, %struct.regnode* %1007, i32 0, i32 0
  %1008 = load i8, i8* %flags1906, align 2
  %conv1907 = zext i8 %1008 to i32
  %shl1908 = shl i32 1, %conv1907
  %and1909 = and i32 %1006, %shl1908
  %tobool1910 = icmp ne i32 %and1909, 0
  br label %land.end1911

land.end1911:                                     ; preds = %land.rhs1896, %if.then1886
  %1009 = phi i1 [ false, %if.then1886 ], [ %tobool1910, %land.rhs1896 ]
  %1010 = zext i1 %1009 to i64
  %cond1913 = select i1 %1009, i32 1, i32 0
  %tobool1914 = icmp ne i32 %cond1913, 0
  %1011 = zext i1 %tobool1914 to i64
  %cond1915 = select i1 %tobool1914, i32 1, i32 0
  %xor1916 = xor i32 %999, %cond1915
  %tobool1917 = icmp ne i32 %xor1916, 0
  br i1 %tobool1917, label %if.end1919, label %if.then1918

if.then1918:                                      ; preds = %land.end1911
  br label %no

if.end1919:                                       ; preds = %land.end1911
  %1012 = load i8*, i8** %locinput, align 8
  %add.ptr1920 = getelementptr inbounds i8, i8* %1012, i64 2
  store i8* %add.ptr1920, i8** %locinput, align 8
  br label %if.end2220

if.else1921:                                      ; preds = %if.else1880
  br label %utf8_posix_above_latin1

utf8_posix_above_latin1:                          ; preds = %if.else1921, %if.else1793
  %1013 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags1922 = getelementptr inbounds %struct.regnode, %struct.regnode* %1013, i32 0, i32 0
  %1014 = load i8, i8* %flags1922, align 2
  %conv1923 = zext i8 %1014 to i32
  store i32 %conv1923, i32* %classnum, align 4
  %1015 = load i32, i32* %classnum, align 4
  %cmp1924 = icmp ult i32 %1015, 10
  br i1 %cmp1924, label %if.then1926, label %if.else1947

if.then1926:                                      ; preds = %utf8_posix_above_latin1
  %1016 = load i32, i32* %classnum, align 4
  %idxprom1927 = zext i32 %1016 to i64
  %arrayidx1928 = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom1927
  %1017 = load %struct.sv*, %struct.sv** %arrayidx1928, align 8
  %tobool1929 = icmp ne %struct.sv* %1017, null
  br i1 %tobool1929, label %if.end1937, label %if.then1930

if.then1930:                                      ; preds = %if.then1926
  store i8 4, i8* %flags1931, align 1
  %1018 = load i32, i32* %classnum, align 4
  %idxprom1932 = zext i32 %1018 to i64
  %arrayidx1933 = getelementptr inbounds [16 x %struct.sv*], [16 x %struct.sv*]* @PL_XPosix_ptrs, i64 0, i64 %idxprom1932
  %1019 = load %struct.sv*, %struct.sv** %arrayidx1933, align 8
  %call1934 = call %struct.sv* @Perl__core_swash_init(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %struct.sv* @PL_sv_undef, i32 1, i32 0, %struct.sv* %1019, i8* %flags1931)
  %1020 = load i32, i32* %classnum, align 4
  %idxprom1935 = zext i32 %1020 to i64
  %arrayidx1936 = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom1935
  store %struct.sv* %call1934, %struct.sv** %arrayidx1936, align 8
  br label %if.end1937

if.end1937:                                       ; preds = %if.then1930, %if.then1926
  %1021 = load i32, i32* %to_complement, align 4
  %1022 = load i32, i32* %classnum, align 4
  %idxprom1938 = zext i32 %1022 to i64
  %arrayidx1939 = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom1938
  %1023 = load %struct.sv*, %struct.sv** %arrayidx1939, align 8
  %1024 = load i8*, i8** %locinput, align 8
  %call1940 = call i64 @Perl_swash_fetch(%struct.sv* %1023, i8* %1024, i1 zeroext true)
  %tobool1941 = icmp ne i64 %call1940, 0
  %1025 = zext i1 %tobool1941 to i64
  %cond1942 = select i1 %tobool1941, i32 1, i32 0
  %xor1943 = xor i32 %1021, %cond1942
  %tobool1944 = icmp ne i32 %xor1943, 0
  br i1 %tobool1944, label %if.end1946, label %if.then1945

if.then1945:                                      ; preds = %if.end1937
  br label %no

if.end1946:                                       ; preds = %if.end1937
  br label %if.end2214

if.else1947:                                      ; preds = %utf8_posix_above_latin1
  %1026 = load i32, i32* %classnum, align 4
  switch i32 %1026, label %sw.default [
    i32 10, label %sw.bb1948
    i32 11, label %sw.bb2037
    i32 12, label %sw.bb2120
    i32 15, label %sw.bb2185
  ]

sw.bb1948:                                        ; preds = %if.else1947
  %1027 = load i32, i32* %to_complement, align 4
  %1028 = load i8*, i8** %locinput, align 8
  %arrayidx1949 = getelementptr inbounds i8, i8* %1028, i64 0
  %1029 = load i8, i8* %arrayidx1949, align 1
  %conv1950 = zext i8 %1029 to i32
  %cmp1951 = icmp eq i32 225, %conv1950
  br i1 %cmp1951, label %cond.true1953, label %cond.false1966

cond.true1953:                                    ; preds = %sw.bb1948
  %1030 = load i8*, i8** %locinput, align 8
  %arrayidx1954 = getelementptr inbounds i8, i8* %1030, i64 1
  %1031 = load i8, i8* %arrayidx1954, align 1
  %conv1955 = zext i8 %1031 to i32
  %cmp1956 = icmp eq i32 154, %conv1955
  br i1 %cmp1956, label %land.rhs1958, label %land.end1963

land.rhs1958:                                     ; preds = %cond.true1953
  %1032 = load i8*, i8** %locinput, align 8
  %arrayidx1959 = getelementptr inbounds i8, i8* %1032, i64 2
  %1033 = load i8, i8* %arrayidx1959, align 1
  %conv1960 = zext i8 %1033 to i32
  %cmp1961 = icmp eq i32 128, %conv1960
  br label %land.end1963

land.end1963:                                     ; preds = %land.rhs1958, %cond.true1953
  %1034 = phi i1 [ false, %cond.true1953 ], [ %cmp1961, %land.rhs1958 ]
  %1035 = zext i1 %1034 to i64
  %cond1965 = select i1 %1034, i32 3, i32 0
  br label %cond.end2029

cond.false1966:                                   ; preds = %sw.bb1948
  %1036 = load i8*, i8** %locinput, align 8
  %arrayidx1967 = getelementptr inbounds i8, i8* %1036, i64 0
  %1037 = load i8, i8* %arrayidx1967, align 1
  %conv1968 = zext i8 %1037 to i32
  %cmp1969 = icmp eq i32 226, %conv1968
  br i1 %cmp1969, label %cond.true1971, label %cond.false2009

cond.true1971:                                    ; preds = %cond.false1966
  %1038 = load i8*, i8** %locinput, align 8
  %arrayidx1972 = getelementptr inbounds i8, i8* %1038, i64 1
  %1039 = load i8, i8* %arrayidx1972, align 1
  %conv1973 = zext i8 %1039 to i32
  %cmp1974 = icmp eq i32 128, %conv1973
  br i1 %cmp1974, label %cond.true1976, label %cond.false1994

cond.true1976:                                    ; preds = %cond.true1971
  %1040 = load i8*, i8** %locinput, align 8
  %arrayidx1977 = getelementptr inbounds i8, i8* %1040, i64 2
  %1041 = load i8, i8* %arrayidx1977, align 1
  %conv1978 = zext i8 %1041 to i32
  %cmp1979 = icmp sle i32 %conv1978, 138
  br i1 %cmp1979, label %lor.end1992, label %lor.lhs.false1981

lor.lhs.false1981:                                ; preds = %cond.true1976
  %1042 = load i8*, i8** %locinput, align 8
  %arrayidx1982 = getelementptr inbounds i8, i8* %1042, i64 2
  %1043 = load i8, i8* %arrayidx1982, align 1
  %conv1983 = zext i8 %1043 to i32
  %and1984 = and i32 %conv1983, 254
  %cmp1985 = icmp eq i32 %and1984, 168
  br i1 %cmp1985, label %lor.end1992, label %lor.rhs1987

lor.rhs1987:                                      ; preds = %lor.lhs.false1981
  %1044 = load i8*, i8** %locinput, align 8
  %arrayidx1988 = getelementptr inbounds i8, i8* %1044, i64 2
  %1045 = load i8, i8* %arrayidx1988, align 1
  %conv1989 = zext i8 %1045 to i32
  %cmp1990 = icmp eq i32 175, %conv1989
  br label %lor.end1992

lor.end1992:                                      ; preds = %lor.rhs1987, %lor.lhs.false1981, %cond.true1976
  %1046 = phi i1 [ true, %lor.lhs.false1981 ], [ true, %cond.true1976 ], [ %cmp1990, %lor.rhs1987 ]
  %1047 = zext i1 %1046 to i64
  %cond1993 = select i1 %1046, i32 3, i32 0
  br label %cond.end2007

cond.false1994:                                   ; preds = %cond.true1971
  %1048 = load i8*, i8** %locinput, align 8
  %arrayidx1995 = getelementptr inbounds i8, i8* %1048, i64 1
  %1049 = load i8, i8* %arrayidx1995, align 1
  %conv1996 = zext i8 %1049 to i32
  %cmp1997 = icmp eq i32 129, %conv1996
  br i1 %cmp1997, label %land.rhs1999, label %land.end2004

land.rhs1999:                                     ; preds = %cond.false1994
  %1050 = load i8*, i8** %locinput, align 8
  %arrayidx2000 = getelementptr inbounds i8, i8* %1050, i64 2
  %1051 = load i8, i8* %arrayidx2000, align 1
  %conv2001 = zext i8 %1051 to i32
  %cmp2002 = icmp eq i32 159, %conv2001
  br label %land.end2004

land.end2004:                                     ; preds = %land.rhs1999, %cond.false1994
  %1052 = phi i1 [ false, %cond.false1994 ], [ %cmp2002, %land.rhs1999 ]
  %1053 = zext i1 %1052 to i64
  %cond2006 = select i1 %1052, i32 3, i32 0
  br label %cond.end2007

cond.end2007:                                     ; preds = %land.end2004, %lor.end1992
  %cond2008 = phi i32 [ %cond1993, %lor.end1992 ], [ %cond2006, %land.end2004 ]
  br label %cond.end2027

cond.false2009:                                   ; preds = %cond.false1966
  %1054 = load i8*, i8** %locinput, align 8
  %arrayidx2010 = getelementptr inbounds i8, i8* %1054, i64 0
  %1055 = load i8, i8* %arrayidx2010, align 1
  %conv2011 = zext i8 %1055 to i32
  %cmp2012 = icmp eq i32 227, %conv2011
  br i1 %cmp2012, label %land.lhs.true2014, label %land.end2024

land.lhs.true2014:                                ; preds = %cond.false2009
  %1056 = load i8*, i8** %locinput, align 8
  %arrayidx2015 = getelementptr inbounds i8, i8* %1056, i64 1
  %1057 = load i8, i8* %arrayidx2015, align 1
  %conv2016 = zext i8 %1057 to i32
  %cmp2017 = icmp eq i32 128, %conv2016
  br i1 %cmp2017, label %land.rhs2019, label %land.end2024

land.rhs2019:                                     ; preds = %land.lhs.true2014
  %1058 = load i8*, i8** %locinput, align 8
  %arrayidx2020 = getelementptr inbounds i8, i8* %1058, i64 2
  %1059 = load i8, i8* %arrayidx2020, align 1
  %conv2021 = zext i8 %1059 to i32
  %cmp2022 = icmp eq i32 128, %conv2021
  br label %land.end2024

land.end2024:                                     ; preds = %land.rhs2019, %land.lhs.true2014, %cond.false2009
  %1060 = phi i1 [ false, %land.lhs.true2014 ], [ false, %cond.false2009 ], [ %cmp2022, %land.rhs2019 ]
  %1061 = zext i1 %1060 to i64
  %cond2026 = select i1 %1060, i32 3, i32 0
  br label %cond.end2027

cond.end2027:                                     ; preds = %land.end2024, %cond.end2007
  %cond2028 = phi i32 [ %cond2008, %cond.end2007 ], [ %cond2026, %land.end2024 ]
  br label %cond.end2029

cond.end2029:                                     ; preds = %cond.end2027, %land.end1963
  %cond2030 = phi i32 [ %cond1965, %land.end1963 ], [ %cond2028, %cond.end2027 ]
  %tobool2031 = icmp ne i32 %cond2030, 0
  %1062 = zext i1 %tobool2031 to i64
  %cond2032 = select i1 %tobool2031, i32 1, i32 0
  %xor2033 = xor i32 %1027, %cond2032
  %tobool2034 = icmp ne i32 %xor2033, 0
  br i1 %tobool2034, label %if.end2036, label %if.then2035

if.then2035:                                      ; preds = %cond.end2029
  br label %no

if.end2036:                                       ; preds = %cond.end2029
  br label %sw.epilog2213

sw.bb2037:                                        ; preds = %if.else1947
  %1063 = load i32, i32* %to_complement, align 4
  %1064 = load i8*, i8** %locinput, align 8
  %arrayidx2038 = getelementptr inbounds i8, i8* %1064, i64 0
  %1065 = load i8, i8* %arrayidx2038, align 1
  %conv2039 = zext i8 %1065 to i32
  %cmp2040 = icmp eq i32 225, %conv2039
  br i1 %cmp2040, label %cond.true2042, label %cond.false2055

cond.true2042:                                    ; preds = %sw.bb2037
  %1066 = load i8*, i8** %locinput, align 8
  %arrayidx2043 = getelementptr inbounds i8, i8* %1066, i64 1
  %1067 = load i8, i8* %arrayidx2043, align 1
  %conv2044 = zext i8 %1067 to i32
  %cmp2045 = icmp eq i32 154, %conv2044
  br i1 %cmp2045, label %land.rhs2047, label %land.end2052

land.rhs2047:                                     ; preds = %cond.true2042
  %1068 = load i8*, i8** %locinput, align 8
  %arrayidx2048 = getelementptr inbounds i8, i8* %1068, i64 2
  %1069 = load i8, i8* %arrayidx2048, align 1
  %conv2049 = zext i8 %1069 to i32
  %cmp2050 = icmp eq i32 128, %conv2049
  br label %land.end2052

land.end2052:                                     ; preds = %land.rhs2047, %cond.true2042
  %1070 = phi i1 [ false, %cond.true2042 ], [ %cmp2050, %land.rhs2047 ]
  %1071 = zext i1 %1070 to i64
  %cond2054 = select i1 %1070, i32 3, i32 0
  br label %cond.end2112

cond.false2055:                                   ; preds = %sw.bb2037
  %1072 = load i8*, i8** %locinput, align 8
  %arrayidx2056 = getelementptr inbounds i8, i8* %1072, i64 0
  %1073 = load i8, i8* %arrayidx2056, align 1
  %conv2057 = zext i8 %1073 to i32
  %cmp2058 = icmp eq i32 226, %conv2057
  br i1 %cmp2058, label %cond.true2060, label %cond.false2092

cond.true2060:                                    ; preds = %cond.false2055
  %1074 = load i8*, i8** %locinput, align 8
  %arrayidx2061 = getelementptr inbounds i8, i8* %1074, i64 1
  %1075 = load i8, i8* %arrayidx2061, align 1
  %conv2062 = zext i8 %1075 to i32
  %cmp2063 = icmp eq i32 128, %conv2062
  br i1 %cmp2063, label %cond.true2065, label %cond.false2077

cond.true2065:                                    ; preds = %cond.true2060
  %1076 = load i8*, i8** %locinput, align 8
  %arrayidx2066 = getelementptr inbounds i8, i8* %1076, i64 2
  %1077 = load i8, i8* %arrayidx2066, align 1
  %conv2067 = zext i8 %1077 to i32
  %cmp2068 = icmp sle i32 %conv2067, 138
  br i1 %cmp2068, label %lor.end2075, label %lor.rhs2070

lor.rhs2070:                                      ; preds = %cond.true2065
  %1078 = load i8*, i8** %locinput, align 8
  %arrayidx2071 = getelementptr inbounds i8, i8* %1078, i64 2
  %1079 = load i8, i8* %arrayidx2071, align 1
  %conv2072 = zext i8 %1079 to i32
  %cmp2073 = icmp eq i32 175, %conv2072
  br label %lor.end2075

lor.end2075:                                      ; preds = %lor.rhs2070, %cond.true2065
  %1080 = phi i1 [ true, %cond.true2065 ], [ %cmp2073, %lor.rhs2070 ]
  %1081 = zext i1 %1080 to i64
  %cond2076 = select i1 %1080, i32 3, i32 0
  br label %cond.end2090

cond.false2077:                                   ; preds = %cond.true2060
  %1082 = load i8*, i8** %locinput, align 8
  %arrayidx2078 = getelementptr inbounds i8, i8* %1082, i64 1
  %1083 = load i8, i8* %arrayidx2078, align 1
  %conv2079 = zext i8 %1083 to i32
  %cmp2080 = icmp eq i32 129, %conv2079
  br i1 %cmp2080, label %land.rhs2082, label %land.end2087

land.rhs2082:                                     ; preds = %cond.false2077
  %1084 = load i8*, i8** %locinput, align 8
  %arrayidx2083 = getelementptr inbounds i8, i8* %1084, i64 2
  %1085 = load i8, i8* %arrayidx2083, align 1
  %conv2084 = zext i8 %1085 to i32
  %cmp2085 = icmp eq i32 159, %conv2084
  br label %land.end2087

land.end2087:                                     ; preds = %land.rhs2082, %cond.false2077
  %1086 = phi i1 [ false, %cond.false2077 ], [ %cmp2085, %land.rhs2082 ]
  %1087 = zext i1 %1086 to i64
  %cond2089 = select i1 %1086, i32 3, i32 0
  br label %cond.end2090

cond.end2090:                                     ; preds = %land.end2087, %lor.end2075
  %cond2091 = phi i32 [ %cond2076, %lor.end2075 ], [ %cond2089, %land.end2087 ]
  br label %cond.end2110

cond.false2092:                                   ; preds = %cond.false2055
  %1088 = load i8*, i8** %locinput, align 8
  %arrayidx2093 = getelementptr inbounds i8, i8* %1088, i64 0
  %1089 = load i8, i8* %arrayidx2093, align 1
  %conv2094 = zext i8 %1089 to i32
  %cmp2095 = icmp eq i32 227, %conv2094
  br i1 %cmp2095, label %land.lhs.true2097, label %land.end2107

land.lhs.true2097:                                ; preds = %cond.false2092
  %1090 = load i8*, i8** %locinput, align 8
  %arrayidx2098 = getelementptr inbounds i8, i8* %1090, i64 1
  %1091 = load i8, i8* %arrayidx2098, align 1
  %conv2099 = zext i8 %1091 to i32
  %cmp2100 = icmp eq i32 128, %conv2099
  br i1 %cmp2100, label %land.rhs2102, label %land.end2107

land.rhs2102:                                     ; preds = %land.lhs.true2097
  %1092 = load i8*, i8** %locinput, align 8
  %arrayidx2103 = getelementptr inbounds i8, i8* %1092, i64 2
  %1093 = load i8, i8* %arrayidx2103, align 1
  %conv2104 = zext i8 %1093 to i32
  %cmp2105 = icmp eq i32 128, %conv2104
  br label %land.end2107

land.end2107:                                     ; preds = %land.rhs2102, %land.lhs.true2097, %cond.false2092
  %1094 = phi i1 [ false, %land.lhs.true2097 ], [ false, %cond.false2092 ], [ %cmp2105, %land.rhs2102 ]
  %1095 = zext i1 %1094 to i64
  %cond2109 = select i1 %1094, i32 3, i32 0
  br label %cond.end2110

cond.end2110:                                     ; preds = %land.end2107, %cond.end2090
  %cond2111 = phi i32 [ %cond2091, %cond.end2090 ], [ %cond2109, %land.end2107 ]
  br label %cond.end2112

cond.end2112:                                     ; preds = %cond.end2110, %land.end2052
  %cond2113 = phi i32 [ %cond2054, %land.end2052 ], [ %cond2111, %cond.end2110 ]
  %tobool2114 = icmp ne i32 %cond2113, 0
  %1096 = zext i1 %tobool2114 to i64
  %cond2115 = select i1 %tobool2114, i32 1, i32 0
  %xor2116 = xor i32 %1063, %cond2115
  %tobool2117 = icmp ne i32 %xor2116, 0
  br i1 %tobool2117, label %if.end2119, label %if.then2118

if.then2118:                                      ; preds = %cond.end2112
  br label %no

if.end2119:                                       ; preds = %cond.end2112
  br label %sw.epilog2213

sw.bb2120:                                        ; preds = %if.else1947
  %1097 = load i32, i32* %to_complement, align 4
  %1098 = load i8*, i8** %locinput, align 8
  %arrayidx2121 = getelementptr inbounds i8, i8* %1098, i64 0
  %1099 = load i8, i8* %arrayidx2121, align 1
  %conv2122 = zext i8 %1099 to i32
  %cmp2123 = icmp eq i32 239, %conv2122
  br i1 %cmp2123, label %cond.true2125, label %cond.false2176

cond.true2125:                                    ; preds = %sw.bb2120
  %1100 = load i8*, i8** %locinput, align 8
  %arrayidx2126 = getelementptr inbounds i8, i8* %1100, i64 1
  %1101 = load i8, i8* %arrayidx2126, align 1
  %conv2127 = zext i8 %1101 to i32
  %cmp2128 = icmp eq i32 188, %conv2127
  br i1 %cmp2128, label %cond.true2130, label %cond.false2154

cond.true2130:                                    ; preds = %cond.true2125
  %1102 = load i8*, i8** %locinput, align 8
  %arrayidx2131 = getelementptr inbounds i8, i8* %1102, i64 2
  %1103 = load i8, i8* %arrayidx2131, align 1
  %conv2132 = zext i8 %1103 to i32
  %cmp2133 = icmp sle i32 144, %conv2132
  br i1 %cmp2133, label %land.lhs.true2135, label %lor.rhs2140

land.lhs.true2135:                                ; preds = %cond.true2130
  %1104 = load i8*, i8** %locinput, align 8
  %arrayidx2136 = getelementptr inbounds i8, i8* %1104, i64 2
  %1105 = load i8, i8* %arrayidx2136, align 1
  %conv2137 = zext i8 %1105 to i32
  %cmp2138 = icmp sle i32 %conv2137, 153
  br i1 %cmp2138, label %lor.end2152, label %lor.rhs2140

lor.rhs2140:                                      ; preds = %land.lhs.true2135, %cond.true2130
  %1106 = load i8*, i8** %locinput, align 8
  %arrayidx2141 = getelementptr inbounds i8, i8* %1106, i64 2
  %1107 = load i8, i8* %arrayidx2141, align 1
  %conv2142 = zext i8 %1107 to i32
  %cmp2143 = icmp sle i32 161, %conv2142
  br i1 %cmp2143, label %land.rhs2145, label %land.end2150

land.rhs2145:                                     ; preds = %lor.rhs2140
  %1108 = load i8*, i8** %locinput, align 8
  %arrayidx2146 = getelementptr inbounds i8, i8* %1108, i64 2
  %1109 = load i8, i8* %arrayidx2146, align 1
  %conv2147 = zext i8 %1109 to i32
  %cmp2148 = icmp sle i32 %conv2147, 166
  br label %land.end2150

land.end2150:                                     ; preds = %land.rhs2145, %lor.rhs2140
  %1110 = phi i1 [ false, %lor.rhs2140 ], [ %cmp2148, %land.rhs2145 ]
  br label %lor.end2152

lor.end2152:                                      ; preds = %land.end2150, %land.lhs.true2135
  %1111 = phi i1 [ true, %land.lhs.true2135 ], [ %1110, %land.end2150 ]
  %1112 = zext i1 %1111 to i64
  %cond2153 = select i1 %1111, i32 3, i32 0
  br label %cond.end2174

cond.false2154:                                   ; preds = %cond.true2125
  %1113 = load i8*, i8** %locinput, align 8
  %arrayidx2155 = getelementptr inbounds i8, i8* %1113, i64 1
  %1114 = load i8, i8* %arrayidx2155, align 1
  %conv2156 = zext i8 %1114 to i32
  %cmp2157 = icmp eq i32 189, %conv2156
  br i1 %cmp2157, label %land.rhs2159, label %land.end2171

land.rhs2159:                                     ; preds = %cond.false2154
  %1115 = load i8*, i8** %locinput, align 8
  %arrayidx2160 = getelementptr inbounds i8, i8* %1115, i64 2
  %1116 = load i8, i8* %arrayidx2160, align 1
  %conv2161 = zext i8 %1116 to i32
  %cmp2162 = icmp sle i32 129, %conv2161
  br i1 %cmp2162, label %land.rhs2164, label %land.end2169

land.rhs2164:                                     ; preds = %land.rhs2159
  %1117 = load i8*, i8** %locinput, align 8
  %arrayidx2165 = getelementptr inbounds i8, i8* %1117, i64 2
  %1118 = load i8, i8* %arrayidx2165, align 1
  %conv2166 = zext i8 %1118 to i32
  %cmp2167 = icmp sle i32 %conv2166, 134
  br label %land.end2169

land.end2169:                                     ; preds = %land.rhs2164, %land.rhs2159
  %1119 = phi i1 [ false, %land.rhs2159 ], [ %cmp2167, %land.rhs2164 ]
  br label %land.end2171

land.end2171:                                     ; preds = %land.end2169, %cond.false2154
  %1120 = phi i1 [ false, %cond.false2154 ], [ %1119, %land.end2169 ]
  %1121 = zext i1 %1120 to i64
  %cond2173 = select i1 %1120, i32 3, i32 0
  br label %cond.end2174

cond.end2174:                                     ; preds = %land.end2171, %lor.end2152
  %cond2175 = phi i32 [ %cond2153, %lor.end2152 ], [ %cond2173, %land.end2171 ]
  br label %cond.end2177

cond.false2176:                                   ; preds = %sw.bb2120
  br label %cond.end2177

cond.end2177:                                     ; preds = %cond.false2176, %cond.end2174
  %cond2178 = phi i32 [ %cond2175, %cond.end2174 ], [ 0, %cond.false2176 ]
  %tobool2179 = icmp ne i32 %cond2178, 0
  %1122 = zext i1 %tobool2179 to i64
  %cond2180 = select i1 %tobool2179, i32 1, i32 0
  %xor2181 = xor i32 %1097, %cond2180
  %tobool2182 = icmp ne i32 %xor2181, 0
  br i1 %tobool2182, label %if.end2184, label %if.then2183

if.then2183:                                      ; preds = %cond.end2177
  br label %no

if.end2184:                                       ; preds = %cond.end2177
  br label %sw.epilog2213

sw.bb2185:                                        ; preds = %if.else1947
  %1123 = load i32, i32* %to_complement, align 4
  %1124 = load i8*, i8** %locinput, align 8
  %arrayidx2186 = getelementptr inbounds i8, i8* %1124, i64 0
  %1125 = load i8, i8* %arrayidx2186, align 1
  %conv2187 = zext i8 %1125 to i32
  %cmp2188 = icmp eq i32 226, %conv2187
  br i1 %cmp2188, label %land.lhs.true2190, label %land.end2201

land.lhs.true2190:                                ; preds = %sw.bb2185
  %1126 = load i8*, i8** %locinput, align 8
  %arrayidx2191 = getelementptr inbounds i8, i8* %1126, i64 1
  %1127 = load i8, i8* %arrayidx2191, align 1
  %conv2192 = zext i8 %1127 to i32
  %cmp2193 = icmp eq i32 128, %conv2192
  br i1 %cmp2193, label %land.rhs2195, label %land.end2201

land.rhs2195:                                     ; preds = %land.lhs.true2190
  %1128 = load i8*, i8** %locinput, align 8
  %arrayidx2196 = getelementptr inbounds i8, i8* %1128, i64 2
  %1129 = load i8, i8* %arrayidx2196, align 1
  %conv2197 = zext i8 %1129 to i32
  %and2198 = and i32 %conv2197, 254
  %cmp2199 = icmp eq i32 %and2198, 168
  br label %land.end2201

land.end2201:                                     ; preds = %land.rhs2195, %land.lhs.true2190, %sw.bb2185
  %1130 = phi i1 [ false, %land.lhs.true2190 ], [ false, %sw.bb2185 ], [ %cmp2199, %land.rhs2195 ]
  %1131 = zext i1 %1130 to i64
  %cond2203 = select i1 %1130, i32 3, i32 0
  %tobool2204 = icmp ne i32 %cond2203, 0
  %1132 = zext i1 %tobool2204 to i64
  %cond2205 = select i1 %tobool2204, i32 1, i32 0
  %xor2206 = xor i32 %1123, %cond2205
  %tobool2207 = icmp ne i32 %xor2206, 0
  br i1 %tobool2207, label %if.end2209, label %if.then2208

if.then2208:                                      ; preds = %land.end2201
  br label %no

if.end2209:                                       ; preds = %land.end2201
  br label %sw.epilog2213

sw.default:                                       ; preds = %if.else1947
  %1133 = load i32, i32* %to_complement, align 4
  %tobool2210 = icmp ne i32 %1133, 0
  br i1 %tobool2210, label %if.end2212, label %if.then2211

if.then2211:                                      ; preds = %sw.default
  br label %no

if.end2212:                                       ; preds = %sw.default
  br label %sw.epilog2213

sw.epilog2213:                                    ; preds = %if.end2212, %if.end2209, %if.end2184, %if.end2119, %if.end2036
  br label %if.end2214

if.end2214:                                       ; preds = %sw.epilog2213, %if.end1946
  %1134 = load i8*, i8** %locinput, align 8
  %1135 = load i8, i8* %1134, align 1
  %idxprom2215 = zext i8 %1135 to i64
  %arrayidx2216 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2215
  %1136 = load i8, i8* %arrayidx2216, align 1
  %conv2217 = zext i8 %1136 to i32
  %1137 = load i8*, i8** %locinput, align 8
  %idx.ext2218 = sext i32 %conv2217 to i64
  %add.ptr2219 = getelementptr inbounds i8, i8* %1137, i64 %idx.ext2218
  store i8* %add.ptr2219, i8** %locinput, align 8
  br label %if.end2220

if.end2220:                                       ; preds = %if.end2214, %if.end1919
  br label %if.end2221

if.end2221:                                       ; preds = %if.end2220, %if.end1878
  br label %sw.epilog6759

sw.bb2222:                                        ; preds = %cond.end45
  %1138 = load i32, i32* %nextchr, align 4
  %cmp2223 = icmp slt i32 %1138, 0
  br i1 %cmp2223, label %if.then2225, label %if.end2226

if.then2225:                                      ; preds = %sw.bb2222
  br label %no

if.end2226:                                       ; preds = %sw.bb2222
  %1139 = load i8, i8* %utf8_target, align 1
  %tobool2227 = trunc i8 %1139 to i1
  br i1 %tobool2227, label %if.else2243, label %if.then2228

if.then2228:                                      ; preds = %if.end2226
  %1140 = load i8*, i8** %locinput, align 8
  %incdec.ptr2229 = getelementptr inbounds i8, i8* %1140, i32 1
  store i8* %incdec.ptr2229, i8** %locinput, align 8
  %1141 = load i32, i32* %nextchr, align 4
  %cmp2230 = icmp eq i32 %1141, 13
  br i1 %cmp2230, label %land.lhs.true2232, label %if.end2242

land.lhs.true2232:                                ; preds = %if.then2228
  %1142 = load i8*, i8** %locinput, align 8
  %1143 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2233 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1143, i32 0, i32 2
  %1144 = load i8*, i8** %strend2233, align 8
  %cmp2234 = icmp ult i8* %1142, %1144
  br i1 %cmp2234, label %land.lhs.true2236, label %if.end2242

land.lhs.true2236:                                ; preds = %land.lhs.true2232
  %1145 = load i8*, i8** %locinput, align 8
  %1146 = load i8, i8* %1145, align 1
  %conv2237 = zext i8 %1146 to i32
  %cmp2238 = icmp eq i32 %conv2237, 10
  br i1 %cmp2238, label %if.then2240, label %if.end2242

if.then2240:                                      ; preds = %land.lhs.true2236
  %1147 = load i8*, i8** %locinput, align 8
  %incdec.ptr2241 = getelementptr inbounds i8, i8* %1147, i32 1
  store i8* %incdec.ptr2241, i8** %locinput, align 8
  br label %if.end2242

if.end2242:                                       ; preds = %if.then2240, %land.lhs.true2236, %land.lhs.true2232, %if.then2228
  br label %if.end2283

if.else2243:                                      ; preds = %if.end2226
  %1148 = load %struct.sv*, %struct.sv** @PL_GCB_invlist, align 8
  %1149 = load i8*, i8** %locinput, align 8
  %1150 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2244 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1150, i32 0, i32 2
  %1151 = load i8*, i8** %strend2244, align 8
  %1152 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast2245 = ptrtoint i8* %1151 to i64
  %sub.ptr.rhs.cast2246 = ptrtoint i8* %1152 to i64
  %sub.ptr.sub2247 = sub i64 %sub.ptr.lhs.cast2245, %sub.ptr.rhs.cast2246
  %call2248 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %1153 = zext i1 %call2248 to i64
  %cond2250 = select i1 %call2248, i32 0, i32 -8161
  %call2251 = call i64 @Perl_utf8n_to_uvchr(i8* %1149, i64 %sub.ptr.sub2247, i64* null, i32 %cond2250)
  %call2252 = call i64 @Perl__invlist_search(%struct.sv* %1148, i64 %call2251)
  %arrayidx2253 = getelementptr inbounds [1484 x i32], [1484 x i32]* @Grapheme_Cluster_Break_invmap, i64 0, i64 %call2252
  %1154 = load i32, i32* %arrayidx2253, align 4
  store i32 %1154, i32* %prev_gcb, align 4
  %1155 = load i8*, i8** %locinput, align 8
  %1156 = load i8, i8* %1155, align 1
  %idxprom2254 = zext i8 %1156 to i64
  %arrayidx2255 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2254
  %1157 = load i8, i8* %arrayidx2255, align 1
  %conv2256 = zext i8 %1157 to i32
  %1158 = load i8*, i8** %locinput, align 8
  %idx.ext2257 = sext i32 %conv2256 to i64
  %add.ptr2258 = getelementptr inbounds i8, i8* %1158, i64 %idx.ext2257
  store i8* %add.ptr2258, i8** %locinput, align 8
  br label %while.cond2259

while.cond2259:                                   ; preds = %if.end2276, %if.else2243
  %1159 = load i8*, i8** %locinput, align 8
  %1160 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2260 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1160, i32 0, i32 2
  %1161 = load i8*, i8** %strend2260, align 8
  %cmp2261 = icmp ult i8* %1159, %1161
  br i1 %cmp2261, label %while.body2263, label %while.end2282

while.body2263:                                   ; preds = %while.cond2259
  %1162 = load %struct.sv*, %struct.sv** @PL_GCB_invlist, align 8
  %1163 = load i8*, i8** %locinput, align 8
  %1164 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2264 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1164, i32 0, i32 2
  %1165 = load i8*, i8** %strend2264, align 8
  %1166 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast2265 = ptrtoint i8* %1165 to i64
  %sub.ptr.rhs.cast2266 = ptrtoint i8* %1166 to i64
  %sub.ptr.sub2267 = sub i64 %sub.ptr.lhs.cast2265, %sub.ptr.rhs.cast2266
  %call2268 = call zeroext i1 @Perl_ckwarn_d(i32 44)
  %1167 = zext i1 %call2268 to i64
  %cond2270 = select i1 %call2268, i32 0, i32 -8161
  %call2271 = call i64 @Perl_utf8n_to_uvchr(i8* %1163, i64 %sub.ptr.sub2267, i64* null, i32 %cond2270)
  %call2272 = call i64 @Perl__invlist_search(%struct.sv* %1162, i64 %call2271)
  %arrayidx2273 = getelementptr inbounds [1484 x i32], [1484 x i32]* @Grapheme_Cluster_Break_invmap, i64 0, i64 %call2272
  %1168 = load i32, i32* %arrayidx2273, align 4
  store i32 %1168, i32* %cur_gcb, align 4
  %1169 = load i32, i32* %prev_gcb, align 4
  %1170 = load i32, i32* %cur_gcb, align 4
  %call2274 = call zeroext i1 @S_isGCB(i32 %1169, i32 %1170)
  br i1 %call2274, label %if.then2275, label %if.end2276

if.then2275:                                      ; preds = %while.body2263
  br label %while.end2282

if.end2276:                                       ; preds = %while.body2263
  %1171 = load i32, i32* %cur_gcb, align 4
  store i32 %1171, i32* %prev_gcb, align 4
  %1172 = load i8*, i8** %locinput, align 8
  %1173 = load i8, i8* %1172, align 1
  %idxprom2277 = zext i8 %1173 to i64
  %arrayidx2278 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2277
  %1174 = load i8, i8* %arrayidx2278, align 1
  %conv2279 = zext i8 %1174 to i32
  %1175 = load i8*, i8** %locinput, align 8
  %idx.ext2280 = sext i32 %conv2279 to i64
  %add.ptr2281 = getelementptr inbounds i8, i8* %1175, i64 %idx.ext2280
  store i8* %add.ptr2281, i8** %locinput, align 8
  br label %while.cond2259

while.end2282:                                    ; preds = %if.then2275, %while.cond2259
  br label %if.end2283

if.end2283:                                       ; preds = %while.end2282, %if.end2242
  br label %sw.epilog6759

sw.bb2284:                                        ; preds = %cond.end45
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_locale, i32 (i8*, i8*, i32)** %folder2287, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_locale, i64 0, i64 0), i8** %fold_array2288, align 8
  store i8 53, i8* %type2286, align 1
  store i64 2, i64* %utf8_fold_flags, align 8
  br label %do_nref

sw.bb2289:                                        ; preds = %cond.end45
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_latin1, i32 (i8*, i8*, i32)** %folder2287, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_latin1, i64 0, i64 0), i8** %fold_array2288, align 8
  store i8 55, i8* %type2286, align 1
  store i64 1, i64* %utf8_fold_flags, align 8
  br label %do_nref

sw.bb2290:                                        ; preds = %cond.end45
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_latin1, i32 (i8*, i8*, i32)** %folder2287, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_latin1, i64 0, i64 0), i8** %fold_array2288, align 8
  store i8 54, i8* %type2286, align 1
  store i64 0, i64* %utf8_fold_flags, align 8
  br label %do_nref

sw.bb2291:                                        ; preds = %cond.end45
  store i32 (i8*, i8*, i32)* @Perl_foldEQ, i32 (i8*, i8*, i32)** %folder2287, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold, i64 0, i64 0), i8** %fold_array2288, align 8
  store i8 52, i8* %type2286, align 1
  store i64 0, i64* %utf8_fold_flags, align 8
  br label %do_nref

sw.bb2292:                                        ; preds = %cond.end45
  store i8 51, i8* %type2286, align 1
  store i32 (i8*, i8*, i32)* null, i32 (i8*, i8*, i32)** %folder2287, align 8
  store i8* null, i8** %fold_array2288, align 8
  store i64 0, i64* %utf8_fold_flags, align 8
  br label %do_nref

do_nref:                                          ; preds = %sw.bb2292, %sw.bb2291, %sw.bb2290, %sw.bb2289, %sw.bb2284
  %1176 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %1177 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %call2293 = call i32 @S_reg_check_named_buff_matched(%struct.regexp* %1176, %struct.regnode* %1177)
  store i32 %call2293, i32* %n, align 4
  %1178 = load i32, i32* %n, align 4
  %tobool2294 = icmp ne i32 %1178, 0
  br i1 %tobool2294, label %if.end2296, label %if.then2295

if.then2295:                                      ; preds = %do_nref
  br label %no

if.end2296:                                       ; preds = %do_nref
  br label %do_nref_ref_common

sw.bb2297:                                        ; preds = %cond.end45
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_locale, i32 (i8*, i8*, i32)** %folder2287, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_locale, i64 0, i64 0), i8** %fold_array2288, align 8
  store i64 2, i64* %utf8_fold_flags, align 8
  br label %do_ref

sw.bb2298:                                        ; preds = %cond.end45
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_latin1, i32 (i8*, i8*, i32)** %folder2287, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_latin1, i64 0, i64 0), i8** %fold_array2288, align 8
  store i64 1, i64* %utf8_fold_flags, align 8
  br label %do_ref

sw.bb2299:                                        ; preds = %cond.end45
  store i32 (i8*, i8*, i32)* @Perl_foldEQ_latin1, i32 (i8*, i8*, i32)** %folder2287, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold_latin1, i64 0, i64 0), i8** %fold_array2288, align 8
  store i64 0, i64* %utf8_fold_flags, align 8
  br label %do_ref

sw.bb2300:                                        ; preds = %cond.end45
  store i32 (i8*, i8*, i32)* @Perl_foldEQ, i32 (i8*, i8*, i32)** %folder2287, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @PL_fold, i64 0, i64 0), i8** %fold_array2288, align 8
  store i64 0, i64* %utf8_fold_flags, align 8
  br label %do_ref

sw.bb2301:                                        ; preds = %cond.end45
  store i32 (i8*, i8*, i32)* null, i32 (i8*, i8*, i32)** %folder2287, align 8
  store i8* null, i8** %fold_array2288, align 8
  store i64 0, i64* %utf8_fold_flags, align 8
  br label %do_ref

do_ref:                                           ; preds = %sw.bb2301, %sw.bb2300, %sw.bb2299, %sw.bb2298, %sw.bb2297
  %1179 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type2302 = getelementptr inbounds %struct.regnode, %struct.regnode* %1179, i32 0, i32 1
  %1180 = load i8, i8* %type2302, align 1
  store i8 %1180, i8* %type2286, align 1
  %1181 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1182 = bitcast %struct.regnode* %1181 to %struct.regnode_1*
  %arg12303 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1182, i32 0, i32 3
  %1183 = load i32, i32* %arg12303, align 4
  store i32 %1183, i32* %n, align 4
  br label %do_nref_ref_common

do_nref_ref_common:                               ; preds = %do_ref, %if.end2296
  %1184 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs2304 = getelementptr inbounds %struct.regexp, %struct.regexp* %1184, i32 0, i32 17
  %1185 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs2304, align 8
  %1186 = load i32, i32* %n, align 4
  %idxprom2305 = zext i32 %1186 to i64
  %arrayidx2306 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1185, i64 %idxprom2305
  %start2307 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx2306, i32 0, i32 0
  %1187 = load i64, i64* %start2307, align 8
  store i64 %1187, i64* %ln, align 8
  %1188 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_maxiter = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1188, i32 0, i32 9
  %1189 = load i32, i32* %poscache_maxiter, align 8
  %1190 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_iter = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1190, i32 0, i32 10
  store i32 %1189, i32* %poscache_iter, align 4
  %1191 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen2308 = getelementptr inbounds %struct.regexp, %struct.regexp* %1191, i32 0, i32 15
  %1192 = load i32, i32* %lastparen2308, align 8
  %1193 = load i32, i32* %n, align 4
  %cmp2309 = icmp ult i32 %1192, %1193
  br i1 %cmp2309, label %if.then2314, label %lor.lhs.false2311

lor.lhs.false2311:                                ; preds = %do_nref_ref_common
  %1194 = load i64, i64* %ln, align 8
  %cmp2312 = icmp eq i64 %1194, -1
  br i1 %cmp2312, label %if.then2314, label %if.end2315

if.then2314:                                      ; preds = %lor.lhs.false2311, %do_nref_ref_common
  br label %no

if.end2315:                                       ; preds = %lor.lhs.false2311
  %1195 = load i64, i64* %ln, align 8
  %1196 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs2316 = getelementptr inbounds %struct.regexp, %struct.regexp* %1196, i32 0, i32 17
  %1197 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs2316, align 8
  %1198 = load i32, i32* %n, align 4
  %idxprom2317 = zext i32 %1198 to i64
  %arrayidx2318 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1197, i64 %idxprom2317
  %end2319 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx2318, i32 0, i32 1
  %1199 = load i64, i64* %end2319, align 8
  %cmp2320 = icmp eq i64 %1195, %1199
  br i1 %cmp2320, label %if.then2322, label %if.end2323

if.then2322:                                      ; preds = %if.end2315
  br label %sw.epilog6759

if.end2323:                                       ; preds = %if.end2315
  %1200 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2324 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1200, i32 0, i32 1
  %1201 = load i8*, i8** %strbeg2324, align 8
  %1202 = load i64, i64* %ln, align 8
  %add.ptr2325 = getelementptr inbounds i8, i8* %1201, i64 %1202
  store i8* %add.ptr2325, i8** %s2285, align 8
  %1203 = load i8, i8* %type2286, align 1
  %conv2326 = sext i8 %1203 to i32
  %cmp2327 = icmp ne i32 %conv2326, 51
  br i1 %cmp2327, label %land.lhs.true2329, label %if.end2354

land.lhs.true2329:                                ; preds = %if.end2323
  %1204 = load i8, i8* %utf8_target, align 1
  %tobool2330 = trunc i8 %1204 to i1
  br i1 %tobool2330, label %if.then2340, label %lor.lhs.false2332

lor.lhs.false2332:                                ; preds = %land.lhs.true2329
  %1205 = load i8, i8* %type2286, align 1
  %conv2333 = sext i8 %1205 to i32
  %cmp2334 = icmp eq i32 %conv2333, 54
  br i1 %cmp2334, label %if.then2340, label %lor.lhs.false2336

lor.lhs.false2336:                                ; preds = %lor.lhs.false2332
  %1206 = load i8, i8* %type2286, align 1
  %conv2337 = sext i8 %1206 to i32
  %cmp2338 = icmp eq i32 %conv2337, 53
  br i1 %cmp2338, label %if.then2340, label %if.end2354

if.then2340:                                      ; preds = %lor.lhs.false2336, %lor.lhs.false2332, %land.lhs.true2329
  %1207 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2341 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1207, i32 0, i32 2
  %1208 = load i8*, i8** %strend2341, align 8
  store i8* %1208, i8** %limit, align 8
  %1209 = load i8*, i8** %s2285, align 8
  %1210 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs2342 = getelementptr inbounds %struct.regexp, %struct.regexp* %1210, i32 0, i32 17
  %1211 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs2342, align 8
  %1212 = load i32, i32* %n, align 4
  %idxprom2343 = zext i32 %1212 to i64
  %arrayidx2344 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1211, i64 %idxprom2343
  %end2345 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx2344, i32 0, i32 1
  %1213 = load i64, i64* %end2345, align 8
  %1214 = load i64, i64* %ln, align 8
  %sub2346 = sub nsw i64 %1213, %1214
  %1215 = load i8, i8* %utf8_target, align 1
  %tobool2347 = trunc i8 %1215 to i1
  %1216 = load i8*, i8** %locinput, align 8
  %1217 = load i8, i8* %utf8_target, align 1
  %tobool2348 = trunc i8 %1217 to i1
  %1218 = load i64, i64* %utf8_fold_flags, align 8
  %conv2349 = trunc i64 %1218 to i32
  %call2350 = call i32 @Perl_foldEQ_utf8_flags(i8* %1209, i8** null, i64 %sub2346, i1 zeroext %tobool2347, i8* %1216, i8** %limit, i64 0, i1 zeroext %tobool2348, i32 %conv2349)
  %tobool2351 = icmp ne i32 %call2350, 0
  br i1 %tobool2351, label %if.end2353, label %if.then2352

if.then2352:                                      ; preds = %if.then2340
  br label %no

if.end2353:                                       ; preds = %if.then2340
  %1219 = load i8*, i8** %limit, align 8
  store i8* %1219, i8** %locinput, align 8
  br label %sw.epilog6759

if.end2354:                                       ; preds = %lor.lhs.false2336, %if.end2323
  %1220 = load i32, i32* %nextchr, align 4
  %cmp2355 = icmp slt i32 %1220, 0
  br i1 %cmp2355, label %if.end2373, label %land.lhs.true2357

land.lhs.true2357:                                ; preds = %if.end2354
  %1221 = load i8*, i8** %s2285, align 8
  %1222 = load i8, i8* %1221, align 1
  %conv2358 = zext i8 %1222 to i32
  %1223 = load i32, i32* %nextchr, align 4
  %cmp2359 = icmp ne i32 %conv2358, %1223
  br i1 %cmp2359, label %land.lhs.true2361, label %if.end2373

land.lhs.true2361:                                ; preds = %land.lhs.true2357
  %1224 = load i8, i8* %type2286, align 1
  %conv2362 = sext i8 %1224 to i32
  %cmp2363 = icmp eq i32 %conv2362, 51
  br i1 %cmp2363, label %if.then2372, label %lor.lhs.false2365

lor.lhs.false2365:                                ; preds = %land.lhs.true2361
  %1225 = load i8*, i8** %s2285, align 8
  %1226 = load i8, i8* %1225, align 1
  %conv2366 = zext i8 %1226 to i32
  %1227 = load i8*, i8** %fold_array2288, align 8
  %1228 = load i32, i32* %nextchr, align 4
  %idxprom2367 = sext i32 %1228 to i64
  %arrayidx2368 = getelementptr inbounds i8, i8* %1227, i64 %idxprom2367
  %1229 = load i8, i8* %arrayidx2368, align 1
  %conv2369 = zext i8 %1229 to i32
  %cmp2370 = icmp ne i32 %conv2366, %conv2369
  br i1 %cmp2370, label %if.then2372, label %if.end2373

if.then2372:                                      ; preds = %lor.lhs.false2365, %land.lhs.true2361
  br label %no

if.end2373:                                       ; preds = %lor.lhs.false2365, %land.lhs.true2357, %if.end2354
  %1230 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs2374 = getelementptr inbounds %struct.regexp, %struct.regexp* %1230, i32 0, i32 17
  %1231 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs2374, align 8
  %1232 = load i32, i32* %n, align 4
  %idxprom2375 = zext i32 %1232 to i64
  %arrayidx2376 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1231, i64 %idxprom2375
  %end2377 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx2376, i32 0, i32 1
  %1233 = load i64, i64* %end2377, align 8
  %1234 = load i64, i64* %ln, align 8
  %sub2378 = sub nsw i64 %1233, %1234
  store i64 %sub2378, i64* %ln, align 8
  %1235 = load i8*, i8** %locinput, align 8
  %1236 = load i64, i64* %ln, align 8
  %add.ptr2379 = getelementptr inbounds i8, i8* %1235, i64 %1236
  %1237 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend2380 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1237, i32 0, i32 2
  %1238 = load i8*, i8** %strend2380, align 8
  %cmp2381 = icmp ugt i8* %add.ptr2379, %1238
  br i1 %cmp2381, label %if.then2383, label %if.end2384

if.then2383:                                      ; preds = %if.end2373
  br label %no

if.end2384:                                       ; preds = %if.end2373
  %1239 = load i64, i64* %ln, align 8
  %cmp2385 = icmp sgt i64 %1239, 1
  br i1 %cmp2385, label %land.lhs.true2387, label %if.end2399

land.lhs.true2387:                                ; preds = %if.end2384
  %1240 = load i8, i8* %type2286, align 1
  %conv2388 = sext i8 %1240 to i32
  %cmp2389 = icmp eq i32 %conv2388, 51
  br i1 %cmp2389, label %cond.true2391, label %cond.false2394

cond.true2391:                                    ; preds = %land.lhs.true2387
  %1241 = load i8*, i8** %s2285, align 8
  %1242 = load i8*, i8** %locinput, align 8
  %1243 = load i64, i64* %ln, align 8
  %call2392 = call i32 @memcmp(i8* %1241, i8* %1242, i64 %1243) #5
  %tobool2393 = icmp ne i32 %call2392, 0
  br i1 %tobool2393, label %if.then2398, label %if.end2399

cond.false2394:                                   ; preds = %land.lhs.true2387
  %1244 = load i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)** %folder2287, align 8
  %1245 = load i8*, i8** %s2285, align 8
  %1246 = load i8*, i8** %locinput, align 8
  %1247 = load i64, i64* %ln, align 8
  %conv2395 = trunc i64 %1247 to i32
  %call2396 = call i32 %1244(i8* %1245, i8* %1246, i32 %conv2395)
  %tobool2397 = icmp ne i32 %call2396, 0
  br i1 %tobool2397, label %if.end2399, label %if.then2398

if.then2398:                                      ; preds = %cond.false2394, %cond.true2391
  br label %no

if.end2399:                                       ; preds = %cond.false2394, %cond.true2391, %if.end2384
  %1248 = load i64, i64* %ln, align 8
  %1249 = load i8*, i8** %locinput, align 8
  %add.ptr2400 = getelementptr inbounds i8, i8* %1249, i64 %1248
  store i8* %add.ptr2400, i8** %locinput, align 8
  br label %sw.epilog6759

sw.bb2401:                                        ; preds = %cond.end45
  br label %sw.epilog6759

sw.bb2402:                                        ; preds = %cond.end45
  br label %sw.epilog6759

sw.bb2404:                                        ; preds = %cond.end45, %cond.end45
  %1250 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool2405 = icmp ne %struct.regmatch_state* %1250, null
  br i1 %tobool2405, label %land.lhs.true2406, label %if.else2422

land.lhs.true2406:                                ; preds = %sw.bb2404
  %1251 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %locinput2407 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1251, i32 0, i32 1
  %1252 = load i8*, i8** %locinput2407, align 8
  %1253 = load i8*, i8** %locinput, align 8
  %cmp2408 = icmp eq i8* %1252, %1253
  br i1 %cmp2408, label %if.then2410, label %if.else2422

if.then2410:                                      ; preds = %land.lhs.true2406
  %1254 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u2411 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1254, i32 0, i32 2
  %eval = bitcast %union.anon.19* %u2411 to %struct.anon.24*
  %close_paren = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval, i32 0, i32 6
  %1255 = load i32, i32* %close_paren, align 8
  %1256 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1257 = bitcast %struct.regnode* %1256 to %struct.regnode_1*
  %arg12412 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1257, i32 0, i32 3
  %1258 = load i32, i32* %arg12412, align 4
  %cmp2413 = icmp eq i32 %1255, %1258
  br i1 %cmp2413, label %if.then2415, label %if.end2416

if.then2415:                                      ; preds = %if.then2410
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i64 0, i64 0))
  br label %if.end2416

if.end2416:                                       ; preds = %if.then2415, %if.then2410
  %1259 = load i32, i32* %nochange_depth, align 4
  %inc2417 = add i32 %1259, 1
  store i32 %inc2417, i32* %nochange_depth, align 4
  %1260 = load i32, i32* %max_nochange_depth, align 4
  %cmp2418 = icmp ugt i32 %inc2417, %1260
  br i1 %cmp2418, label %if.then2420, label %if.end2421

if.then2420:                                      ; preds = %if.end2416
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.11, i64 0, i64 0))
  br label %if.end2421

if.end2421:                                       ; preds = %if.then2420, %if.end2416
  br label %if.end2423

if.else2422:                                      ; preds = %land.lhs.true2406, %sw.bb2404
  store i32 0, i32* %nochange_depth, align 4
  br label %if.end2423

if.end2423:                                       ; preds = %if.else2422, %if.end2421
  %1261 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  store %struct.p5rx* %1261, %struct.p5rx** %re_sv, align 8
  %1262 = load %struct.regexp*, %struct.regexp** %rex, align 8
  store %struct.regexp* %1262, %struct.regexp** %re, align 8
  %1263 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  store %struct.regexp_internal* %1263, %struct.regexp_internal** %rei, align 8
  %1264 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type2424 = getelementptr inbounds %struct.regnode, %struct.regnode* %1264, i32 0, i32 1
  %1265 = load i8, i8* %type2424, align 1
  %conv2425 = zext i8 %1265 to i32
  %cmp2426 = icmp eq i32 %conv2425, 76
  br i1 %cmp2426, label %if.then2428, label %if.else2435

if.then2428:                                      ; preds = %if.end2423
  %1266 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1267 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1268 = bitcast %struct.regnode* %1267 to %struct.regnode_2L*
  %arg2 = getelementptr inbounds %struct.regnode_2L, %struct.regnode_2L* %1268, i32 0, i32 4
  %1269 = load i32, i32* %arg2, align 4
  %idx.ext2429 = sext i32 %1269 to i64
  %add.ptr2430 = getelementptr inbounds %struct.regnode, %struct.regnode* %1266, i64 %idx.ext2429
  store %struct.regnode* %add.ptr2430, %struct.regnode** %startpoint2403, align 8
  %1270 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1271 = bitcast %struct.regnode* %1270 to %struct.regnode_1*
  %arg12431 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1271, i32 0, i32 3
  %1272 = load i32, i32* %arg12431, align 4
  %1273 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u2432 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1273, i32 0, i32 2
  %eval2433 = bitcast %union.anon.19* %u2432 to %struct.anon.24*
  %close_paren2434 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval2433, i32 0, i32 6
  store i32 %1272, i32* %close_paren2434, align 8
  br label %if.end2441

if.else2435:                                      ; preds = %if.end2423
  %1274 = load %struct.regexp_internal*, %struct.regexp_internal** %rei, align 8
  %program = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %1274, i32 0, i32 6
  %arraydecay2436 = getelementptr inbounds [1 x %struct.regnode], [1 x %struct.regnode]* %program, i64 0, i64 0
  %add.ptr2437 = getelementptr inbounds %struct.regnode, %struct.regnode* %arraydecay2436, i64 1
  store %struct.regnode* %add.ptr2437, %struct.regnode** %startpoint2403, align 8
  %1275 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u2438 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1275, i32 0, i32 2
  %eval2439 = bitcast %union.anon.19* %u2438 to %struct.anon.24*
  %close_paren2440 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval2439, i32 0, i32 6
  store i32 0, i32* %close_paren2440, align 8
  br label %if.end2441

if.end2441:                                       ; preds = %if.else2435, %if.then2428
  %1276 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %1277 = load i32, i32* %maxopenparen, align 4
  %call2442 = call i32 @S_regcppush(%struct.regexp* %1276, i32 0, i32 %1277)
  %1278 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u2443 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1278, i32 0, i32 2
  %eval2444 = bitcast %union.anon.19* %u2443 to %struct.anon.24*
  %cp2445 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval2444, i32 0, i32 4
  store i32 %call2442, i32* %cp2445, align 8
  %1279 = load i32, i32* @PL_savestack_ix, align 4
  %1280 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u2446 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1280, i32 0, i32 2
  %eval2447 = bitcast %union.anon.19* %u2446 to %struct.anon.24*
  %lastcp = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval2447, i32 0, i32 5
  store i32 %1279, i32* %lastcp, align 4
  br label %eval_recurse_doit

sw.bb2448:                                        ; preds = %cond.end45
  %1281 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool2449 = icmp ne %struct.regmatch_state* %1281, null
  br i1 %tobool2449, label %land.lhs.true2450, label %if.else2460

land.lhs.true2450:                                ; preds = %sw.bb2448
  %1282 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %locinput2451 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1282, i32 0, i32 1
  %1283 = load i8*, i8** %locinput2451, align 8
  %1284 = load i8*, i8** %locinput, align 8
  %cmp2452 = icmp eq i8* %1283, %1284
  br i1 %cmp2452, label %if.then2454, label %if.else2460

if.then2454:                                      ; preds = %land.lhs.true2450
  %1285 = load i32, i32* %nochange_depth, align 4
  %inc2455 = add i32 %1285, 1
  store i32 %inc2455, i32* %nochange_depth, align 4
  %1286 = load i32, i32* %max_nochange_depth, align 4
  %cmp2456 = icmp ugt i32 %inc2455, %1286
  br i1 %cmp2456, label %if.then2458, label %if.end2459

if.then2458:                                      ; preds = %if.then2454
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12, i64 0, i64 0))
  br label %if.end2459

if.end2459:                                       ; preds = %if.then2458, %if.then2454
  br label %if.end2461

if.else2460:                                      ; preds = %land.lhs.true2450, %sw.bb2448
  store i32 0, i32* %nochange_depth, align 4
  br label %if.end2461

if.end2461:                                       ; preds = %if.else2460, %if.end2459
  %1287 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %1287, %struct.sv*** %sp, align 8
  %1288 = load %struct.op*, %struct.op** @PL_op, align 8
  store %struct.op* %1288, %struct.op** %oop, align 8
  %1289 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  store %struct.cop* %1289, %struct.cop** %ocurcop, align 8
  %1290 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %1291 = load i32, i32* %maxopenparen, align 4
  %call2462 = call i32 @S_regcppush(%struct.regexp* %1290, i32 0, i32 %1291)
  %1292 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %1292, i32* %runops_cp, align 4
  %1293 = load %struct.cv*, %struct.cv** %caller_cv, align 8
  %tobool2463 = icmp ne %struct.cv* %1293, null
  br i1 %tobool2463, label %if.end2466, label %if.then2464

if.then2464:                                      ; preds = %if.end2461
  %call2465 = call %struct.cv* @Perl_find_runcv(i32* null)
  store %struct.cv* %call2465, %struct.cv** %caller_cv, align 8
  br label %if.end2466

if.end2466:                                       ; preds = %if.then2464, %if.end2461
  %1294 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1295 = bitcast %struct.regnode* %1294 to %struct.regnode_1*
  %arg12467 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1295, i32 0, i32 3
  %1296 = load i32, i32* %arg12467, align 4
  store i32 %1296, i32* %n, align 4
  %1297 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data2468 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %1297, i32 0, i32 3
  %1298 = load %struct.reg_data*, %struct.reg_data** %data2468, align 8
  %what = getelementptr inbounds %struct.reg_data, %struct.reg_data* %1298, i32 0, i32 1
  %1299 = load i8*, i8** %what, align 8
  %1300 = load i32, i32* %n, align 4
  %idxprom2469 = zext i32 %1300 to i64
  %arrayidx2470 = getelementptr inbounds i8, i8* %1299, i64 %idxprom2469
  %1301 = load i8, i8* %arrayidx2470, align 1
  %conv2471 = zext i8 %1301 to i32
  %cmp2472 = icmp eq i32 %conv2471, 114
  br i1 %cmp2472, label %if.then2474, label %if.else2485

if.then2474:                                      ; preds = %if.end2466
  %1302 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data2475 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %1302, i32 0, i32 3
  %1303 = load %struct.reg_data*, %struct.reg_data** %data2475, align 8
  %data2476 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %1303, i32 0, i32 2
  %1304 = load i32, i32* %n, align 4
  %idxprom2477 = zext i32 %1304 to i64
  %arrayidx2478 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data2476, i64 0, i64 %idxprom2477
  %1305 = load i8*, i8** %arrayidx2478, align 8
  %1306 = bitcast i8* %1305 to %struct.p5rx*
  %call2479 = call %struct.regexp* @S_ReANY(%struct.p5rx* %1306)
  %qr_anoncv = getelementptr inbounds %struct.regexp, %struct.regexp* %call2479, i32 0, i32 25
  %1307 = load %struct.cv*, %struct.cv** %qr_anoncv, align 8
  store %struct.cv* %1307, %struct.cv** %newcv, align 8
  %1308 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data2480 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %1308, i32 0, i32 3
  %1309 = load %struct.reg_data*, %struct.reg_data** %data2480, align 8
  %data2481 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %1309, i32 0, i32 2
  %1310 = load i32, i32* %n, align 4
  %add2482 = add i32 %1310, 1
  %idxprom2483 = zext i32 %add2482 to i64
  %arrayidx2484 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data2481, i64 0, i64 %idxprom2483
  %1311 = load i8*, i8** %arrayidx2484, align 8
  %1312 = bitcast i8* %1311 to %struct.op*
  store %struct.op* %1312, %struct.op** %nop, align 8
  br label %if.end2505

if.else2485:                                      ; preds = %if.end2466
  %1313 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data2486 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %1313, i32 0, i32 3
  %1314 = load %struct.reg_data*, %struct.reg_data** %data2486, align 8
  %what2487 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %1314, i32 0, i32 1
  %1315 = load i8*, i8** %what2487, align 8
  %1316 = load i32, i32* %n, align 4
  %idxprom2488 = zext i32 %1316 to i64
  %arrayidx2489 = getelementptr inbounds i8, i8* %1315, i64 %idxprom2488
  %1317 = load i8, i8* %arrayidx2489, align 1
  %conv2490 = zext i8 %1317 to i32
  %cmp2491 = icmp eq i32 %conv2490, 108
  br i1 %cmp2491, label %if.then2493, label %if.else2498

if.then2493:                                      ; preds = %if.else2485
  %1318 = load %struct.cv*, %struct.cv** %caller_cv, align 8
  store %struct.cv* %1318, %struct.cv** %newcv, align 8
  %1319 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data2494 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %1319, i32 0, i32 3
  %1320 = load %struct.reg_data*, %struct.reg_data** %data2494, align 8
  %data2495 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %1320, i32 0, i32 2
  %1321 = load i32, i32* %n, align 4
  %idxprom2496 = zext i32 %1321 to i64
  %arrayidx2497 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data2495, i64 0, i64 %idxprom2496
  %1322 = load i8*, i8** %arrayidx2497, align 8
  %1323 = bitcast i8* %1322 to %struct.op*
  store %struct.op* %1323, %struct.op** %nop, align 8
  br label %if.end2504

if.else2498:                                      ; preds = %if.else2485
  %1324 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %qr_anoncv2499 = getelementptr inbounds %struct.regexp, %struct.regexp* %1324, i32 0, i32 25
  %1325 = load %struct.cv*, %struct.cv** %qr_anoncv2499, align 8
  store %struct.cv* %1325, %struct.cv** %newcv, align 8
  %1326 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data2500 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %1326, i32 0, i32 3
  %1327 = load %struct.reg_data*, %struct.reg_data** %data2500, align 8
  %data2501 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %1327, i32 0, i32 2
  %1328 = load i32, i32* %n, align 4
  %idxprom2502 = zext i32 %1328 to i64
  %arrayidx2503 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data2501, i64 0, i64 %idxprom2502
  %1329 = load i8*, i8** %arrayidx2503, align 8
  %1330 = bitcast i8* %1329 to %struct.op*
  store %struct.op* %1330, %struct.op** %nop, align 8
  br label %if.end2504

if.end2504:                                       ; preds = %if.else2498, %if.then2493
  br label %if.end2505

if.end2505:                                       ; preds = %if.end2504, %if.then2474
  %1331 = load %struct.cv*, %struct.cv** %newcv, align 8
  %1332 = load %struct.cv*, %struct.cv** %last_pushed_cv, align 8
  %cmp2506 = icmp ne %struct.cv* %1331, %1332
  br i1 %cmp2506, label %if.then2511, label %lor.lhs.false2508

lor.lhs.false2508:                                ; preds = %if.end2505
  %1333 = load %struct.av*, %struct.av** @PL_comppad, align 8
  %1334 = load %struct.av*, %struct.av** %last_pad, align 8
  %cmp2509 = icmp ne %struct.av* %1333, %1334
  br i1 %cmp2509, label %if.then2511, label %if.else2783

if.then2511:                                      ; preds = %lor.lhs.false2508, %if.end2505
  %1335 = load %struct.cv*, %struct.cv** %newcv, align 8
  %1336 = load %struct.cv*, %struct.cv** %caller_cv, align 8
  %cmp2513 = icmp eq %struct.cv* %1335, %1336
  %1337 = zext i1 %cmp2513 to i64
  %cond2515 = select i1 %cmp2513, i32 128, i32 0
  %or2516 = or i32 64, %cond2515
  %conv2517 = trunc i32 %or2516 to i8
  store i8 %conv2517, i8* %flags2512, align 1
  %1338 = load %struct.cv*, %struct.cv** %last_pushed_cv, align 8
  %tobool2518 = icmp ne %struct.cv* %1338, null
  br i1 %tobool2518, label %if.then2519, label %if.else2611

if.then2519:                                      ; preds = %if.then2511
  br label %do.body2520

do.body2520:                                      ; preds = %if.then2519
  %1339 = load %struct.cv*, %struct.cv** %newcv, align 8
  store %struct.cv* %1339, %struct.cv** %_nOnclAshIngNamE_, align 8
  %1340 = load %struct.cv*, %struct.cv** %_nOnclAshIngNamE_, align 8
  store %struct.cv* %1340, %struct.cv** %cv, align 8
  %1341 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any2521 = getelementptr inbounds %struct.cv, %struct.cv* %1341, i32 0, i32 0
  %1342 = load %struct.xpvcv*, %struct.xpvcv** %sv_any2521, align 8
  %1343 = bitcast %struct.xpvcv* %1342 to i8*
  %1344 = bitcast i8* %1343 to %struct.xpvcv*
  %xcv_padlist_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %1344, i32 0, i32 9
  %xcv_padlist = bitcast %union.anon.13* %xcv_padlist_u to %struct.padlist**
  %1345 = load %struct.padlist*, %struct.padlist** %xcv_padlist, align 8
  store %struct.padlist* %1345, %struct.padlist** %padlist, align 8
  %1346 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1346, i32 0, i32 1
  %1347 = load %struct.context*, %struct.context** %si_cxstack, align 8
  %1348 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1348, i32 0, i32 4
  %1349 = load i32, i32* %si_cxix, align 8
  %idxprom2522 = sext i32 %1349 to i64
  %arrayidx2523 = getelementptr inbounds %struct.context, %struct.context* %1347, i64 %idxprom2522
  store %struct.context* %arrayidx2523, %struct.context** %cx, align 8
  %1350 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u = getelementptr inbounds %struct.context, %struct.context* %1350, i32 0, i32 0
  %cx_blk = bitcast %union.anon.37* %cx_u to %struct.block*
  %blk_u = getelementptr inbounds %struct.block, %struct.block* %cx_blk, i32 0, i32 8
  %blku_sub = bitcast %union.anon.38* %blk_u to %struct.block_sub*
  %olddepth = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub, i32 0, i32 4
  %1351 = load i32, i32* %olddepth, align 8
  %1352 = load %struct.cv*, %struct.cv** %multicall_cv, align 8
  %call2524 = call i32* @S_CvDEPTHp(%struct.cv* %1352)
  store i32 %1351, i32* %call2524, align 4
  %tobool2525 = icmp ne i32 %1351, 0
  br i1 %tobool2525, label %if.end2529, label %if.then2526

if.then2526:                                      ; preds = %do.body2520
  br label %do.body2527

do.body2527:                                      ; preds = %if.then2526
  %1353 = load %struct.cv*, %struct.cv** %multicall_cv, align 8
  %1354 = bitcast %struct.cv* %1353 to i8*
  %1355 = bitcast i8* %1354 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %1355)
  br label %do.end2528

do.end2528:                                       ; preds = %do.body2527
  br label %if.end2529

if.end2529:                                       ; preds = %do.end2528, %do.body2520
  %1356 = load i8, i8* %flags2512, align 1
  %conv2530 = zext i8 %1356 to i32
  %or2531 = or i32 24, %conv2530
  %conv2532 = trunc i32 %or2531 to i8
  %1357 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2533 = getelementptr inbounds %struct.context, %struct.context* %1357, i32 0, i32 0
  %cx_subst = bitcast %union.anon.37* %cx_u2533 to %struct.subst*
  %sbu_type = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst, i32 0, i32 0
  store i8 %conv2532, i8* %sbu_type, align 8
  %1358 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags = getelementptr inbounds %struct.op, %struct.op* %1358, i32 0, i32 5
  %1359 = load i8, i8* %op_flags, align 2
  %conv2534 = zext i8 %1359 to i32
  %and2535 = and i32 %conv2534, 3
  %tobool2536 = icmp ne i32 %and2535, 0
  br i1 %tobool2536, label %cond.true2537, label %cond.false2538

cond.true2537:                                    ; preds = %if.end2529
  br label %cond.end2549

cond.false2538:                                   ; preds = %if.end2529
  %1360 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private = getelementptr inbounds %struct.op, %struct.op* %1360, i32 0, i32 6
  %1361 = load i8, i8* %op_private, align 1
  %conv2539 = zext i8 %1361 to i32
  %and2540 = and i32 %conv2539, 129
  %tobool2541 = icmp ne i32 %and2540, 0
  br i1 %tobool2541, label %cond.false2543, label %cond.true2542

cond.true2542:                                    ; preds = %cond.false2538
  br label %cond.end2547

cond.false2543:                                   ; preds = %cond.false2538
  %call2544 = call i32 @Perl_was_lvalue_sub()
  %conv2545 = trunc i32 %call2544 to i8
  %conv2546 = zext i8 %conv2545 to i32
  br label %cond.end2547

cond.end2547:                                     ; preds = %cond.false2543, %cond.true2542
  %cond2548 = phi i32 [ 0, %cond.true2542 ], [ %conv2546, %cond.false2543 ]
  br label %cond.end2549

cond.end2549:                                     ; preds = %cond.end2547, %cond.true2537
  %cond2550 = phi i32 [ 129, %cond.true2537 ], [ %cond2548, %cond.end2547 ]
  %conv2551 = trunc i32 %cond2550 to i8
  store i8 %conv2551, i8* %phlags, align 1
  %1362 = load %struct.cv*, %struct.cv** %cv, align 8
  %1363 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2552 = getelementptr inbounds %struct.context, %struct.context* %1363, i32 0, i32 0
  %cx_blk2553 = bitcast %union.anon.37* %cx_u2552 to %struct.block*
  %blk_u2554 = getelementptr inbounds %struct.block, %struct.block* %cx_blk2553, i32 0, i32 8
  %blku_sub2555 = bitcast %union.anon.38* %blk_u2554 to %struct.block_sub*
  %cv2556 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub2555, i32 0, i32 1
  store %struct.cv* %1362, %struct.cv** %cv2556, align 8
  %1364 = load %struct.cv*, %struct.cv** %cv, align 8
  %call2557 = call i32* @S_CvDEPTHp(%struct.cv* %1364)
  %1365 = load i32, i32* %call2557, align 4
  %1366 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2558 = getelementptr inbounds %struct.context, %struct.context* %1366, i32 0, i32 0
  %cx_blk2559 = bitcast %union.anon.37* %cx_u2558 to %struct.block*
  %blk_u2560 = getelementptr inbounds %struct.block, %struct.block* %cx_blk2559, i32 0, i32 8
  %blku_sub2561 = bitcast %union.anon.38* %blk_u2560 to %struct.block_sub*
  %olddepth2562 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub2561, i32 0, i32 4
  store i32 %1365, i32* %olddepth2562, align 8
  %1367 = load i8, i8* %hasargs, align 1
  %conv2563 = zext i8 %1367 to i32
  %tobool2564 = icmp ne i32 %conv2563, 0
  %1368 = zext i1 %tobool2564 to i64
  %cond2565 = select i1 %tobool2564, i32 32, i32 0
  %1369 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2566 = getelementptr inbounds %struct.context, %struct.context* %1369, i32 0, i32 0
  %cx_subst2567 = bitcast %union.anon.37* %cx_u2566 to %struct.subst*
  %sbu_type2568 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst2567, i32 0, i32 0
  %1370 = load i8, i8* %sbu_type2568, align 8
  %conv2569 = zext i8 %1370 to i32
  %or2570 = or i32 %conv2569, %cond2565
  %conv2571 = trunc i32 %or2570 to i8
  store i8 %conv2571, i8* %sbu_type2568, align 8
  %1371 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2572 = getelementptr inbounds %struct.context, %struct.context* %1371, i32 0, i32 0
  %cx_blk2573 = bitcast %union.anon.37* %cx_u2572 to %struct.block*
  %blk_u2574 = getelementptr inbounds %struct.block, %struct.block* %cx_blk2573, i32 0, i32 8
  %blku_sub2575 = bitcast %union.anon.38* %blk_u2574 to %struct.block_sub*
  %retop = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub2575, i32 0, i32 0
  store %struct.op* null, %struct.op** %retop, align 8
  %1372 = load %struct.cv*, %struct.cv** %cv, align 8
  %call2576 = call i32* @S_CvDEPTHp(%struct.cv* %1372)
  %1373 = load i32, i32* %call2576, align 4
  %tobool2577 = icmp ne i32 %1373, 0
  br i1 %tobool2577, label %if.end2583, label %if.then2578

if.then2578:                                      ; preds = %cond.end2549
  %1374 = load %struct.cv*, %struct.cv** %cv, align 8
  %1375 = bitcast %struct.cv* %1374 to i8*
  %1376 = bitcast i8* %1375 to %struct.sv*
  %sv_refcnt2579 = getelementptr inbounds %struct.sv, %struct.sv* %1376, i32 0, i32 1
  %1377 = load i32, i32* %sv_refcnt2579, align 8
  %inc2580 = add i32 %1377, 1
  store i32 %inc2580, i32* %sv_refcnt2579, align 8
  %1378 = load %struct.cv*, %struct.cv** %cv, align 8
  %1379 = bitcast %struct.cv* %1378 to i8*
  %1380 = bitcast i8* %1379 to %struct.sv*
  %sv_refcnt2581 = getelementptr inbounds %struct.sv, %struct.sv* %1380, i32 0, i32 1
  %1381 = load i32, i32* %sv_refcnt2581, align 8
  %inc2582 = add i32 %1381, 1
  store i32 %inc2582, i32* %sv_refcnt2581, align 8
  %1382 = load %struct.cv*, %struct.cv** %cv, align 8
  %1383 = bitcast %struct.cv* %1382 to i8*
  %1384 = bitcast i8* %1383 to %struct.sv*
  %1385 = bitcast %struct.sv* %1384 to i8*
  call void @Perl_save_pushptr(i8* %1385, i32 11)
  br label %if.end2583

if.end2583:                                       ; preds = %if.then2578, %cond.end2549
  %1386 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private2584 = getelementptr inbounds %struct.op, %struct.op* %1386, i32 0, i32 6
  %1387 = load i8, i8* %op_private2584, align 1
  %conv2585 = zext i8 %1387 to i32
  %1388 = load i8, i8* %phlags, align 1
  %conv2586 = zext i8 %1388 to i32
  %or2587 = or i32 %conv2586, 48
  %and2588 = and i32 %conv2585, %or2587
  %conv2589 = trunc i32 %and2588 to i16
  %1389 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2590 = getelementptr inbounds %struct.context, %struct.context* %1389, i32 0, i32 0
  %cx_blk2591 = bitcast %union.anon.37* %cx_u2590 to %struct.block*
  %blku_u16 = getelementptr inbounds %struct.block, %struct.block* %cx_blk2591, i32 0, i32 2
  store i16 %conv2589, i16* %blku_u16, align 2
  %1390 = load i8, i8* %flags2512, align 1
  %conv2592 = zext i8 %1390 to i32
  %and2593 = and i32 %conv2592, 128
  %tobool2594 = icmp ne i32 %and2593, 0
  br i1 %tobool2594, label %if.end2598, label %if.then2595

if.then2595:                                      ; preds = %if.end2583
  %1391 = load %struct.cv*, %struct.cv** %cv, align 8
  %call2596 = call i32* @S_CvDEPTHp(%struct.cv* %1391)
  %1392 = load i32, i32* %call2596, align 4
  %inc2597 = add nsw i32 %1392, 1
  store i32 %inc2597, i32* %call2596, align 4
  br label %if.end2598

if.end2598:                                       ; preds = %if.then2595, %if.end2583
  %1393 = load %struct.cv*, %struct.cv** %cv, align 8
  %call2599 = call i32* @S_CvDEPTHp(%struct.cv* %1393)
  %1394 = load i32, i32* %call2599, align 4
  %cmp2600 = icmp sge i32 %1394, 2
  br i1 %cmp2600, label %if.then2602, label %if.end2604

if.then2602:                                      ; preds = %if.end2598
  %1395 = load %struct.padlist*, %struct.padlist** %padlist, align 8
  %1396 = load %struct.cv*, %struct.cv** %cv, align 8
  %call2603 = call i32* @S_CvDEPTHp(%struct.cv* %1396)
  %1397 = load i32, i32* %call2603, align 4
  call void @Perl_pad_push(%struct.padlist* %1395, i32 %1397)
  br label %if.end2604

if.end2604:                                       ; preds = %if.then2602, %if.end2598
  %1398 = load %struct.av*, %struct.av** @PL_comppad, align 8
  %1399 = bitcast %struct.av* %1398 to i8*
  %1400 = bitcast i8* %1399 to %struct.sv*
  %1401 = bitcast %struct.sv* %1400 to i8*
  call void @Perl_save_pushptr(i8* %1401, i32 7)
  %1402 = load %struct.padlist*, %struct.padlist** %padlist, align 8
  %xpadl_alloc = getelementptr inbounds %struct.padlist, %struct.padlist* %1402, i32 0, i32 1
  %1403 = load %struct.av**, %struct.av*** %xpadl_alloc, align 8
  %1404 = load %struct.cv*, %struct.cv** %cv, align 8
  %call2605 = call i32* @S_CvDEPTHp(%struct.cv* %1404)
  %1405 = load i32, i32* %call2605, align 4
  %idxprom2606 = sext i32 %1405 to i64
  %arrayidx2607 = getelementptr inbounds %struct.av*, %struct.av** %1403, i64 %idxprom2606
  %1406 = load %struct.av*, %struct.av** %arrayidx2607, align 8
  store %struct.av* %1406, %struct.av** @PL_comppad, align 8
  %1407 = load %struct.av*, %struct.av** @PL_comppad, align 8
  %sv_u2608 = getelementptr inbounds %struct.av, %struct.av* %1407, i32 0, i32 3
  %svu_array = bitcast %union.anon.3* %sv_u2608 to %struct.sv***
  %1408 = load %struct.sv**, %struct.sv*** %svu_array, align 8
  store %struct.sv** %1408, %struct.sv*** @PL_curpad, align 8
  %1409 = load %struct.cv*, %struct.cv** %cv, align 8
  store %struct.cv* %1409, %struct.cv** %multicall_cv, align 8
  %1410 = load %struct.cv*, %struct.cv** %cv, align 8
  %sv_any2609 = getelementptr inbounds %struct.cv, %struct.cv* %1410, i32 0, i32 0
  %1411 = load %struct.xpvcv*, %struct.xpvcv** %sv_any2609, align 8
  %1412 = bitcast %struct.xpvcv* %1411 to i8*
  %1413 = bitcast i8* %1412 to %struct.xpvcv*
  %xcv_start_u = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %1413, i32 0, i32 5
  %xcv_start = bitcast %union.anon.10* %xcv_start_u to %struct.op**
  %1414 = load %struct.op*, %struct.op** %xcv_start, align 8
  store %struct.op* %1414, %struct.op** %multicall_cop, align 8
  br label %do.end2610

do.end2610:                                       ; preds = %if.end2604
  br label %if.end2782

if.else2611:                                      ; preds = %if.then2511
  br label %do.body2612

do.body2612:                                      ; preds = %if.else2611
  %1415 = load %struct.cv*, %struct.cv** %newcv, align 8
  store %struct.cv* %1415, %struct.cv** %_nOnclAshIngNamE_2613, align 8
  %1416 = load %struct.cv*, %struct.cv** %_nOnclAshIngNamE_2613, align 8
  store %struct.cv* %1416, %struct.cv** %cv2614, align 8
  %1417 = load %struct.cv*, %struct.cv** %cv2614, align 8
  %sv_any2616 = getelementptr inbounds %struct.cv, %struct.cv* %1417, i32 0, i32 0
  %1418 = load %struct.xpvcv*, %struct.xpvcv** %sv_any2616, align 8
  %1419 = bitcast %struct.xpvcv* %1418 to i8*
  %1420 = bitcast i8* %1419 to %struct.xpvcv*
  %xcv_padlist_u2617 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %1420, i32 0, i32 9
  %xcv_padlist2618 = bitcast %union.anon.13* %xcv_padlist_u2617 to %struct.padlist**
  %1421 = load %struct.padlist*, %struct.padlist** %xcv_padlist2618, align 8
  store %struct.padlist* %1421, %struct.padlist** %padlist2615, align 8
  call void @Perl_push_scope()
  %1422 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %je_mustcatch = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %1422, i32 0, i32 3
  %1423 = load i8, i8* %je_mustcatch, align 4
  %tobool2619 = trunc i8 %1423 to i1
  %frombool2620 = zext i1 %tobool2619 to i8
  store i8 %frombool2620, i8* %multicall_oldcatch, align 1
  call void @Perl_save_strlen(i64* @PL_tmps_floor)
  %1424 = load i64, i64* @PL_tmps_ix, align 8
  store i64 %1424, i64* @PL_tmps_floor, align 8
  call void @Perl_save_vptr(i8* bitcast (%struct.op** @PL_op to i8*))
  br label %do.body2621

do.body2621:                                      ; preds = %do.body2612
  %1425 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %je_mustcatch2622 = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %1425, i32 0, i32 3
  store i8 1, i8* %je_mustcatch2622, align 4
  br label %do.end2623

do.end2623:                                       ; preds = %do.body2621
  br label %do.body2624

do.body2624:                                      ; preds = %do.end2623
  %1426 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_next = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1426, i32 0, i32 3
  %1427 = load %struct.stackinfo*, %struct.stackinfo** %si_next, align 8
  store %struct.stackinfo* %1427, %struct.stackinfo** %next2625, align 8
  %1428 = load %struct.stackinfo*, %struct.stackinfo** %next2625, align 8
  %tobool2626 = icmp ne %struct.stackinfo* %1428, null
  br i1 %tobool2626, label %if.end2630, label %if.then2627

if.then2627:                                      ; preds = %do.body2624
  %call2628 = call %struct.stackinfo* @Perl_new_stackinfo(i32 32, i32 22)
  store %struct.stackinfo* %call2628, %struct.stackinfo** %next2625, align 8
  %1429 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %1430 = load %struct.stackinfo*, %struct.stackinfo** %next2625, align 8
  %si_prev = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1430, i32 0, i32 2
  store %struct.stackinfo* %1429, %struct.stackinfo** %si_prev, align 8
  %1431 = load %struct.stackinfo*, %struct.stackinfo** %next2625, align 8
  %1432 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_next2629 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1432, i32 0, i32 3
  store %struct.stackinfo* %1431, %struct.stackinfo** %si_next2629, align 8
  br label %if.end2630

if.end2630:                                       ; preds = %if.then2627, %do.body2624
  %1433 = load %struct.stackinfo*, %struct.stackinfo** %next2625, align 8
  %si_type = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1433, i32 0, i32 6
  store i32 3, i32* %si_type, align 8
  %1434 = load %struct.stackinfo*, %struct.stackinfo** %next2625, align 8
  %si_cxix2631 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1434, i32 0, i32 4
  store i32 -1, i32* %si_cxix2631, align 8
  %1435 = load %struct.stackinfo*, %struct.stackinfo** %next2625, align 8
  %si_stack = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1435, i32 0, i32 0
  %1436 = load %struct.av*, %struct.av** %si_stack, align 8
  %sv_any2632 = getelementptr inbounds %struct.av, %struct.av* %1436, i32 0, i32 0
  %1437 = load %struct.xpvav*, %struct.xpvav** %sv_any2632, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %1437, i32 0, i32 2
  store i64 0, i64* %xav_fill, align 8
  br label %do.body2633

do.body2633:                                      ; preds = %if.end2630
  %1438 = load %struct.sv**, %struct.sv*** %sp, align 8
  %1439 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast2634 = ptrtoint %struct.sv** %1438 to i64
  %sub.ptr.rhs.cast2635 = ptrtoint %struct.sv** %1439 to i64
  %sub.ptr.sub2636 = sub i64 %sub.ptr.lhs.cast2634, %sub.ptr.rhs.cast2635
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub2636, 8
  %1440 = load %struct.av*, %struct.av** @PL_curstack, align 8
  %sv_any2637 = getelementptr inbounds %struct.av, %struct.av* %1440, i32 0, i32 0
  %1441 = load %struct.xpvav*, %struct.xpvav** %sv_any2637, align 8
  %xav_fill2638 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %1441, i32 0, i32 2
  store i64 %sub.ptr.div, i64* %xav_fill2638, align 8
  %1442 = load %struct.stackinfo*, %struct.stackinfo** %next2625, align 8
  %si_stack2639 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1442, i32 0, i32 0
  %1443 = load %struct.av*, %struct.av** %si_stack2639, align 8
  %sv_u2640 = getelementptr inbounds %struct.av, %struct.av* %1443, i32 0, i32 3
  %svu_array2641 = bitcast %union.anon.3* %sv_u2640 to %struct.sv***
  %1444 = load %struct.sv**, %struct.sv*** %svu_array2641, align 8
  store %struct.sv** %1444, %struct.sv*** @PL_stack_base, align 8
  %1445 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %1446 = load %struct.stackinfo*, %struct.stackinfo** %next2625, align 8
  %si_stack2642 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1446, i32 0, i32 0
  %1447 = load %struct.av*, %struct.av** %si_stack2642, align 8
  %sv_any2643 = getelementptr inbounds %struct.av, %struct.av* %1447, i32 0, i32 0
  %1448 = load %struct.xpvav*, %struct.xpvav** %sv_any2643, align 8
  %xav_max = getelementptr inbounds %struct.xpvav, %struct.xpvav* %1448, i32 0, i32 3
  %1449 = load i64, i64* %xav_max, align 8
  %add.ptr2644 = getelementptr inbounds %struct.sv*, %struct.sv** %1445, i64 %1449
  store %struct.sv** %add.ptr2644, %struct.sv*** @PL_stack_max, align 8
  %1450 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %1451 = load %struct.stackinfo*, %struct.stackinfo** %next2625, align 8
  %si_stack2645 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1451, i32 0, i32 0
  %1452 = load %struct.av*, %struct.av** %si_stack2645, align 8
  %sv_any2646 = getelementptr inbounds %struct.av, %struct.av* %1452, i32 0, i32 0
  %1453 = load %struct.xpvav*, %struct.xpvav** %sv_any2646, align 8
  %xav_fill2647 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %1453, i32 0, i32 2
  %1454 = load i64, i64* %xav_fill2647, align 8
  %add.ptr2648 = getelementptr inbounds %struct.sv*, %struct.sv** %1450, i64 %1454
  store %struct.sv** %add.ptr2648, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %add.ptr2648, %struct.sv*** %sp, align 8
  %1455 = load %struct.stackinfo*, %struct.stackinfo** %next2625, align 8
  %si_stack2649 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1455, i32 0, i32 0
  %1456 = load %struct.av*, %struct.av** %si_stack2649, align 8
  store %struct.av* %1456, %struct.av** @PL_curstack, align 8
  br label %do.end2650

do.end2650:                                       ; preds = %do.body2633
  %1457 = load %struct.stackinfo*, %struct.stackinfo** %next2625, align 8
  store %struct.stackinfo* %1457, %struct.stackinfo** @PL_curstackinfo, align 8
  br label %do.end2651

do.end2651:                                       ; preds = %do.end2650
  %1458 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix2652 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1458, i32 0, i32 4
  %1459 = load i32, i32* %si_cxix2652, align 8
  %1460 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxmax = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1460, i32 0, i32 5
  %1461 = load i32, i32* %si_cxmax, align 4
  %cmp2653 = icmp slt i32 %1459, %1461
  br i1 %cmp2653, label %cond.true2655, label %cond.false2658

cond.true2655:                                    ; preds = %do.end2651
  %1462 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix2656 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1462, i32 0, i32 4
  %1463 = load i32, i32* %si_cxix2656, align 8
  %inc2657 = add nsw i32 %1463, 1
  store i32 %inc2657, i32* %si_cxix2656, align 8
  br label %cond.end2661

cond.false2658:                                   ; preds = %do.end2651
  %call2659 = call i32 @Perl_cxinc()
  %1464 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix2660 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1464, i32 0, i32 4
  store i32 %call2659, i32* %si_cxix2660, align 8
  br label %cond.end2661

cond.end2661:                                     ; preds = %cond.false2658, %cond.true2655
  %cond2662 = phi i32 [ %inc2657, %cond.true2655 ], [ %call2659, %cond.false2658 ]
  %1465 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack2663 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1465, i32 0, i32 1
  %1466 = load %struct.context*, %struct.context** %si_cxstack2663, align 8
  %1467 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix2664 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %1467, i32 0, i32 4
  %1468 = load i32, i32* %si_cxix2664, align 8
  %idxprom2665 = sext i32 %1468 to i64
  %arrayidx2666 = getelementptr inbounds %struct.context, %struct.context* %1466, i64 %idxprom2665
  store %struct.context* %arrayidx2666, %struct.context** %cx, align 8
  %1469 = load i8, i8* %flags2512, align 1
  %conv2667 = zext i8 %1469 to i32
  %or2668 = or i32 24, %conv2667
  %conv2669 = trunc i32 %or2668 to i8
  %1470 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2670 = getelementptr inbounds %struct.context, %struct.context* %1470, i32 0, i32 0
  %cx_subst2671 = bitcast %union.anon.37* %cx_u2670 to %struct.subst*
  %sbu_type2672 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst2671, i32 0, i32 0
  store i8 %conv2669, i8* %sbu_type2672, align 8
  %1471 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  %1472 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast2673 = ptrtoint %struct.sv** %1471 to i64
  %sub.ptr.rhs.cast2674 = ptrtoint %struct.sv** %1472 to i64
  %sub.ptr.sub2675 = sub i64 %sub.ptr.lhs.cast2673, %sub.ptr.rhs.cast2674
  %sub.ptr.div2676 = sdiv exact i64 %sub.ptr.sub2675, 8
  %conv2677 = trunc i64 %sub.ptr.div2676 to i32
  %1473 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2678 = getelementptr inbounds %struct.context, %struct.context* %1473, i32 0, i32 0
  %cx_blk2679 = bitcast %union.anon.37* %cx_u2678 to %struct.block*
  %blku_oldsp = getelementptr inbounds %struct.block, %struct.block* %cx_blk2679, i32 0, i32 3
  store i32 %conv2677, i32* %blku_oldsp, align 4
  %1474 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %1475 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2680 = getelementptr inbounds %struct.context, %struct.context* %1475, i32 0, i32 0
  %cx_blk2681 = bitcast %union.anon.37* %cx_u2680 to %struct.block*
  %blku_oldcop = getelementptr inbounds %struct.block, %struct.block* %cx_blk2681, i32 0, i32 4
  store %struct.cop* %1474, %struct.cop** %blku_oldcop, align 8
  %1476 = load i32*, i32** @PL_markstack_ptr, align 8
  %1477 = load i32*, i32** @PL_markstack, align 8
  %sub.ptr.lhs.cast2682 = ptrtoint i32* %1476 to i64
  %sub.ptr.rhs.cast2683 = ptrtoint i32* %1477 to i64
  %sub.ptr.sub2684 = sub i64 %sub.ptr.lhs.cast2682, %sub.ptr.rhs.cast2683
  %sub.ptr.div2685 = sdiv exact i64 %sub.ptr.sub2684, 4
  %conv2686 = trunc i64 %sub.ptr.div2685 to i32
  %1478 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2687 = getelementptr inbounds %struct.context, %struct.context* %1478, i32 0, i32 0
  %cx_blk2688 = bitcast %union.anon.37* %cx_u2687 to %struct.block*
  %blku_oldmarksp = getelementptr inbounds %struct.block, %struct.block* %cx_blk2688, i32 0, i32 5
  store i32 %conv2686, i32* %blku_oldmarksp, align 8
  %1479 = load i32, i32* @PL_scopestack_ix, align 4
  %1480 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2689 = getelementptr inbounds %struct.context, %struct.context* %1480, i32 0, i32 0
  %cx_blk2690 = bitcast %union.anon.37* %cx_u2689 to %struct.block*
  %blku_oldscopesp = getelementptr inbounds %struct.block, %struct.block* %cx_blk2690, i32 0, i32 6
  store i32 %1479, i32* %blku_oldscopesp, align 4
  %1481 = load %struct.pmop*, %struct.pmop** @PL_curpm, align 8
  %1482 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2691 = getelementptr inbounds %struct.context, %struct.context* %1482, i32 0, i32 0
  %cx_blk2692 = bitcast %union.anon.37* %cx_u2691 to %struct.block*
  %blku_oldpm = getelementptr inbounds %struct.block, %struct.block* %cx_blk2692, i32 0, i32 7
  store %struct.pmop* %1481, %struct.pmop** %blku_oldpm, align 8
  %1483 = load i32, i32* %gimme, align 4
  %conv2693 = trunc i32 %1483 to i8
  %1484 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2694 = getelementptr inbounds %struct.context, %struct.context* %1484, i32 0, i32 0
  %cx_blk2695 = bitcast %union.anon.37* %cx_u2694 to %struct.block*
  %blku_gimme = getelementptr inbounds %struct.block, %struct.block* %cx_blk2695, i32 0, i32 1
  store i8 %conv2693, i8* %blku_gimme, align 1
  %1485 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_flags2697 = getelementptr inbounds %struct.op, %struct.op* %1485, i32 0, i32 5
  %1486 = load i8, i8* %op_flags2697, align 2
  %conv2698 = zext i8 %1486 to i32
  %and2699 = and i32 %conv2698, 3
  %tobool2700 = icmp ne i32 %and2699, 0
  br i1 %tobool2700, label %cond.true2701, label %cond.false2702

cond.true2701:                                    ; preds = %cond.end2661
  br label %cond.end2714

cond.false2702:                                   ; preds = %cond.end2661
  %1487 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private2703 = getelementptr inbounds %struct.op, %struct.op* %1487, i32 0, i32 6
  %1488 = load i8, i8* %op_private2703, align 1
  %conv2704 = zext i8 %1488 to i32
  %and2705 = and i32 %conv2704, 129
  %tobool2706 = icmp ne i32 %and2705, 0
  br i1 %tobool2706, label %cond.false2708, label %cond.true2707

cond.true2707:                                    ; preds = %cond.false2702
  br label %cond.end2712

cond.false2708:                                   ; preds = %cond.false2702
  %call2709 = call i32 @Perl_was_lvalue_sub()
  %conv2710 = trunc i32 %call2709 to i8
  %conv2711 = zext i8 %conv2710 to i32
  br label %cond.end2712

cond.end2712:                                     ; preds = %cond.false2708, %cond.true2707
  %cond2713 = phi i32 [ 0, %cond.true2707 ], [ %conv2711, %cond.false2708 ]
  br label %cond.end2714

cond.end2714:                                     ; preds = %cond.end2712, %cond.true2701
  %cond2715 = phi i32 [ 129, %cond.true2701 ], [ %cond2713, %cond.end2712 ]
  %conv2716 = trunc i32 %cond2715 to i8
  store i8 %conv2716, i8* %phlags2696, align 1
  %1489 = load %struct.cv*, %struct.cv** %cv2614, align 8
  %1490 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2717 = getelementptr inbounds %struct.context, %struct.context* %1490, i32 0, i32 0
  %cx_blk2718 = bitcast %union.anon.37* %cx_u2717 to %struct.block*
  %blk_u2719 = getelementptr inbounds %struct.block, %struct.block* %cx_blk2718, i32 0, i32 8
  %blku_sub2720 = bitcast %union.anon.38* %blk_u2719 to %struct.block_sub*
  %cv2721 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub2720, i32 0, i32 1
  store %struct.cv* %1489, %struct.cv** %cv2721, align 8
  %1491 = load %struct.cv*, %struct.cv** %cv2614, align 8
  %call2722 = call i32* @S_CvDEPTHp(%struct.cv* %1491)
  %1492 = load i32, i32* %call2722, align 4
  %1493 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2723 = getelementptr inbounds %struct.context, %struct.context* %1493, i32 0, i32 0
  %cx_blk2724 = bitcast %union.anon.37* %cx_u2723 to %struct.block*
  %blk_u2725 = getelementptr inbounds %struct.block, %struct.block* %cx_blk2724, i32 0, i32 8
  %blku_sub2726 = bitcast %union.anon.38* %blk_u2725 to %struct.block_sub*
  %olddepth2727 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub2726, i32 0, i32 4
  store i32 %1492, i32* %olddepth2727, align 8
  %1494 = load i8, i8* %hasargs, align 1
  %conv2728 = zext i8 %1494 to i32
  %tobool2729 = icmp ne i32 %conv2728, 0
  %1495 = zext i1 %tobool2729 to i64
  %cond2730 = select i1 %tobool2729, i32 32, i32 0
  %1496 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2731 = getelementptr inbounds %struct.context, %struct.context* %1496, i32 0, i32 0
  %cx_subst2732 = bitcast %union.anon.37* %cx_u2731 to %struct.subst*
  %sbu_type2733 = getelementptr inbounds %struct.subst, %struct.subst* %cx_subst2732, i32 0, i32 0
  %1497 = load i8, i8* %sbu_type2733, align 8
  %conv2734 = zext i8 %1497 to i32
  %or2735 = or i32 %conv2734, %cond2730
  %conv2736 = trunc i32 %or2735 to i8
  store i8 %conv2736, i8* %sbu_type2733, align 8
  %1498 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2737 = getelementptr inbounds %struct.context, %struct.context* %1498, i32 0, i32 0
  %cx_blk2738 = bitcast %union.anon.37* %cx_u2737 to %struct.block*
  %blk_u2739 = getelementptr inbounds %struct.block, %struct.block* %cx_blk2738, i32 0, i32 8
  %blku_sub2740 = bitcast %union.anon.38* %blk_u2739 to %struct.block_sub*
  %retop2741 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub2740, i32 0, i32 0
  store %struct.op* null, %struct.op** %retop2741, align 8
  %1499 = load %struct.cv*, %struct.cv** %cv2614, align 8
  %call2742 = call i32* @S_CvDEPTHp(%struct.cv* %1499)
  %1500 = load i32, i32* %call2742, align 4
  %tobool2743 = icmp ne i32 %1500, 0
  br i1 %tobool2743, label %if.end2749, label %if.then2744

if.then2744:                                      ; preds = %cond.end2714
  %1501 = load %struct.cv*, %struct.cv** %cv2614, align 8
  %1502 = bitcast %struct.cv* %1501 to i8*
  %1503 = bitcast i8* %1502 to %struct.sv*
  %sv_refcnt2745 = getelementptr inbounds %struct.sv, %struct.sv* %1503, i32 0, i32 1
  %1504 = load i32, i32* %sv_refcnt2745, align 8
  %inc2746 = add i32 %1504, 1
  store i32 %inc2746, i32* %sv_refcnt2745, align 8
  %1505 = load %struct.cv*, %struct.cv** %cv2614, align 8
  %1506 = bitcast %struct.cv* %1505 to i8*
  %1507 = bitcast i8* %1506 to %struct.sv*
  %sv_refcnt2747 = getelementptr inbounds %struct.sv, %struct.sv* %1507, i32 0, i32 1
  %1508 = load i32, i32* %sv_refcnt2747, align 8
  %inc2748 = add i32 %1508, 1
  store i32 %inc2748, i32* %sv_refcnt2747, align 8
  %1509 = load %struct.cv*, %struct.cv** %cv2614, align 8
  %1510 = bitcast %struct.cv* %1509 to i8*
  %1511 = bitcast i8* %1510 to %struct.sv*
  %1512 = bitcast %struct.sv* %1511 to i8*
  call void @Perl_save_pushptr(i8* %1512, i32 11)
  br label %if.end2749

if.end2749:                                       ; preds = %if.then2744, %cond.end2714
  %1513 = load %struct.op*, %struct.op** @PL_op, align 8
  %op_private2750 = getelementptr inbounds %struct.op, %struct.op* %1513, i32 0, i32 6
  %1514 = load i8, i8* %op_private2750, align 1
  %conv2751 = zext i8 %1514 to i32
  %1515 = load i8, i8* %phlags2696, align 1
  %conv2752 = zext i8 %1515 to i32
  %or2753 = or i32 %conv2752, 48
  %and2754 = and i32 %conv2751, %or2753
  %conv2755 = trunc i32 %and2754 to i16
  %1516 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u2756 = getelementptr inbounds %struct.context, %struct.context* %1516, i32 0, i32 0
  %cx_blk2757 = bitcast %union.anon.37* %cx_u2756 to %struct.block*
  %blku_u162758 = getelementptr inbounds %struct.block, %struct.block* %cx_blk2757, i32 0, i32 2
  store i16 %conv2755, i16* %blku_u162758, align 2
  %1517 = load i8, i8* %flags2512, align 1
  %conv2759 = zext i8 %1517 to i32
  %and2760 = and i32 %conv2759, 128
  %tobool2761 = icmp ne i32 %and2760, 0
  br i1 %tobool2761, label %if.end2765, label %if.then2762

if.then2762:                                      ; preds = %if.end2749
  %1518 = load %struct.cv*, %struct.cv** %cv2614, align 8
  %call2763 = call i32* @S_CvDEPTHp(%struct.cv* %1518)
  %1519 = load i32, i32* %call2763, align 4
  %inc2764 = add nsw i32 %1519, 1
  store i32 %inc2764, i32* %call2763, align 4
  br label %if.end2765

if.end2765:                                       ; preds = %if.then2762, %if.end2749
  %1520 = load %struct.cv*, %struct.cv** %cv2614, align 8
  %call2766 = call i32* @S_CvDEPTHp(%struct.cv* %1520)
  %1521 = load i32, i32* %call2766, align 4
  %cmp2767 = icmp sge i32 %1521, 2
  br i1 %cmp2767, label %if.then2769, label %if.end2771

if.then2769:                                      ; preds = %if.end2765
  %1522 = load %struct.padlist*, %struct.padlist** %padlist2615, align 8
  %1523 = load %struct.cv*, %struct.cv** %cv2614, align 8
  %call2770 = call i32* @S_CvDEPTHp(%struct.cv* %1523)
  %1524 = load i32, i32* %call2770, align 4
  call void @Perl_pad_push(%struct.padlist* %1522, i32 %1524)
  br label %if.end2771

if.end2771:                                       ; preds = %if.then2769, %if.end2765
  %1525 = load %struct.av*, %struct.av** @PL_comppad, align 8
  %1526 = bitcast %struct.av* %1525 to i8*
  %1527 = bitcast i8* %1526 to %struct.sv*
  %1528 = bitcast %struct.sv* %1527 to i8*
  call void @Perl_save_pushptr(i8* %1528, i32 7)
  %1529 = load %struct.padlist*, %struct.padlist** %padlist2615, align 8
  %xpadl_alloc2772 = getelementptr inbounds %struct.padlist, %struct.padlist* %1529, i32 0, i32 1
  %1530 = load %struct.av**, %struct.av*** %xpadl_alloc2772, align 8
  %1531 = load %struct.cv*, %struct.cv** %cv2614, align 8
  %call2773 = call i32* @S_CvDEPTHp(%struct.cv* %1531)
  %1532 = load i32, i32* %call2773, align 4
  %idxprom2774 = sext i32 %1532 to i64
  %arrayidx2775 = getelementptr inbounds %struct.av*, %struct.av** %1530, i64 %idxprom2774
  %1533 = load %struct.av*, %struct.av** %arrayidx2775, align 8
  store %struct.av* %1533, %struct.av** @PL_comppad, align 8
  %1534 = load %struct.av*, %struct.av** @PL_comppad, align 8
  %sv_u2776 = getelementptr inbounds %struct.av, %struct.av* %1534, i32 0, i32 3
  %svu_array2777 = bitcast %union.anon.3* %sv_u2776 to %struct.sv***
  %1535 = load %struct.sv**, %struct.sv*** %svu_array2777, align 8
  store %struct.sv** %1535, %struct.sv*** @PL_curpad, align 8
  %1536 = load %struct.cv*, %struct.cv** %cv2614, align 8
  store %struct.cv* %1536, %struct.cv** %multicall_cv, align 8
  %1537 = load %struct.cv*, %struct.cv** %cv2614, align 8
  %sv_any2778 = getelementptr inbounds %struct.cv, %struct.cv* %1537, i32 0, i32 0
  %1538 = load %struct.xpvcv*, %struct.xpvcv** %sv_any2778, align 8
  %1539 = bitcast %struct.xpvcv* %1538 to i8*
  %1540 = bitcast i8* %1539 to %struct.xpvcv*
  %xcv_start_u2779 = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %1540, i32 0, i32 5
  %xcv_start2780 = bitcast %union.anon.10* %xcv_start_u2779 to %struct.op**
  %1541 = load %struct.op*, %struct.op** %xcv_start2780, align 8
  store %struct.op* %1541, %struct.op** %multicall_cop, align 8
  br label %do.end2781

do.end2781:                                       ; preds = %if.end2771
  br label %if.end2782

if.end2782:                                       ; preds = %do.end2781, %do.end2610
  %1542 = load %struct.cv*, %struct.cv** %newcv, align 8
  store %struct.cv* %1542, %struct.cv** %last_pushed_cv, align 8
  br label %if.end2784

if.else2783:                                      ; preds = %lor.lhs.false2508
  store %struct.op* null, %struct.op** %multicall_cop, align 8
  store %struct.sv** null, %struct.sv*** %newsp, align 8
  br label %if.end2784

if.end2784:                                       ; preds = %if.else2783, %if.end2782
  %1543 = load %struct.av*, %struct.av** @PL_comppad, align 8
  store %struct.av* %1543, %struct.av** %last_pad, align 8
  %1544 = load %struct.op*, %struct.op** %nop, align 8
  %1545 = bitcast %struct.op* %1544 to %struct.unop*
  %op_first = getelementptr inbounds %struct.unop, %struct.unop* %1545, i32 0, i32 7
  %1546 = load %struct.op*, %struct.op** %op_first, align 8
  store %struct.op* %1546, %struct.op** %o, align 8
  %1547 = load %struct.op*, %struct.op** %o, align 8
  %op_targ = getelementptr inbounds %struct.op, %struct.op* %1547, i32 0, i32 3
  %1548 = load i64, i64* %op_targ, align 8
  %cmp2785 = icmp eq i64 %1548, 198
  br i1 %cmp2785, label %if.then2787, label %if.else2789

if.then2787:                                      ; preds = %if.end2784
  %1549 = load %struct.op*, %struct.op** %o, align 8
  %1550 = bitcast %struct.op* %1549 to %struct.unop*
  %op_first2788 = getelementptr inbounds %struct.unop, %struct.unop* %1550, i32 0, i32 7
  %1551 = load %struct.op*, %struct.op** %op_first2788, align 8
  store %struct.op* %1551, %struct.op** %o, align 8
  br label %if.end2792

if.else2789:                                      ; preds = %if.end2784
  %1552 = load %struct.op*, %struct.op** %o, align 8
  %1553 = bitcast %struct.op* %1552 to %struct.unop*
  %op_first2790 = getelementptr inbounds %struct.unop, %struct.unop* %1553, i32 0, i32 7
  %1554 = load %struct.op*, %struct.op** %op_first2790, align 8
  store %struct.op* %1554, %struct.op** %o, align 8
  %1555 = load %struct.op*, %struct.op** %o, align 8
  %op_sibling = getelementptr inbounds %struct.op, %struct.op* %1555, i32 0, i32 1
  %1556 = load %struct.op*, %struct.op** %op_sibling, align 8
  %add.ptr2791 = getelementptr inbounds %struct.op, %struct.op* %1556, i64 0
  store %struct.op* %add.ptr2791, %struct.op** %o, align 8
  br label %if.end2792

if.end2792:                                       ; preds = %if.else2789, %if.then2787
  %1557 = load %struct.op*, %struct.op** %o, align 8
  %op_type = getelementptr inbounds %struct.op, %struct.op* %1557, i32 0, i32 4
  %bf.load = load i16, i16* %op_type, align 8
  %bf.clear = and i16 %bf.load, 511
  %bf.cast = zext i16 %bf.clear to i32
  %cmp2793 = icmp ne i32 %bf.cast, 1
  br i1 %cmp2793, label %if.then2795, label %if.end2796

if.then2795:                                      ; preds = %if.end2792
  %1558 = load %struct.op*, %struct.op** %o, align 8
  %1559 = bitcast %struct.op* %1558 to %struct.cop*
  store %struct.cop* %1559, %struct.cop** @PL_curcop, align 8
  br label %if.end2796

if.end2796:                                       ; preds = %if.then2795, %if.end2792
  %1560 = load %struct.op*, %struct.op** %nop, align 8
  %op_next = getelementptr inbounds %struct.op, %struct.op* %1560, i32 0, i32 0
  %1561 = load %struct.op*, %struct.op** %op_next, align 8
  store %struct.op* %1561, %struct.op** %nop, align 8
  %1562 = load i8*, i8** %locinput, align 8
  %1563 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2797 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1563, i32 0, i32 1
  %1564 = load i8*, i8** %strbeg2797, align 8
  %sub.ptr.lhs.cast2798 = ptrtoint i8* %1562 to i64
  %sub.ptr.rhs.cast2799 = ptrtoint i8* %1564 to i64
  %sub.ptr.sub2800 = sub i64 %sub.ptr.lhs.cast2798, %sub.ptr.rhs.cast2799
  %1565 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs2801 = getelementptr inbounds %struct.regexp, %struct.regexp* %1565, i32 0, i32 17
  %1566 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs2801, align 8
  %arrayidx2802 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1566, i64 0
  %end2803 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx2802, i32 0, i32 1
  store i64 %sub.ptr.sub2800, i64* %end2803, align 8
  %1567 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1567, i32 0, i32 8
  %1568 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval, align 8
  %pos_magic = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %1568, i32 0, i32 7
  %1569 = load %struct.magic*, %struct.magic** %pos_magic, align 8
  %tobool2804 = icmp ne %struct.magic* %1569, null
  br i1 %tobool2804, label %if.then2805, label %if.end2868

if.then2805:                                      ; preds = %if.end2796
  %1570 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %sv = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1570, i32 0, i32 4
  %1571 = load %struct.sv*, %struct.sv** %sv, align 8
  %sv_flags2806 = getelementptr inbounds %struct.sv, %struct.sv* %1571, i32 0, i32 2
  %1572 = load i32, i32* %sv_flags2806, align 4
  %and2807 = and i32 %1572, 1024
  %tobool2808 = icmp ne i32 %and2807, 0
  br i1 %tobool2808, label %land.lhs.true2809, label %cond.false2831

land.lhs.true2809:                                ; preds = %if.then2805
  %1573 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %sv2810 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1573, i32 0, i32 4
  %1574 = load %struct.sv*, %struct.sv** %sv2810, align 8
  %sv_flags2811 = getelementptr inbounds %struct.sv, %struct.sv* %1574, i32 0, i32 2
  %1575 = load i32, i32* %sv_flags2811, align 4
  %and2812 = and i32 %1575, 2097152
  %tobool2813 = icmp ne i32 %and2812, 0
  br i1 %tobool2813, label %lor.lhs.false2814, label %cond.true2818

lor.lhs.false2814:                                ; preds = %land.lhs.true2809
  %1576 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %sv2815 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1576, i32 0, i32 4
  %1577 = load %struct.sv*, %struct.sv** %sv2815, align 8
  %call2816 = call zeroext i1 @S_sv_only_taint_gmagic(%struct.sv* %1577)
  br i1 %call2816, label %cond.true2818, label %cond.false2831

cond.true2818:                                    ; preds = %lor.lhs.false2814, %land.lhs.true2809
  %1578 = load i8*, i8** %locinput, align 8
  %1579 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2819 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1579, i32 0, i32 1
  %1580 = load i8*, i8** %strbeg2819, align 8
  %sub.ptr.lhs.cast2820 = ptrtoint i8* %1578 to i64
  %sub.ptr.rhs.cast2821 = ptrtoint i8* %1580 to i64
  %sub.ptr.sub2822 = sub i64 %sub.ptr.lhs.cast2820, %sub.ptr.rhs.cast2821
  %1581 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval2823 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1581, i32 0, i32 8
  %1582 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval2823, align 8
  %pos_magic2824 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %1582, i32 0, i32 7
  %1583 = load %struct.magic*, %struct.magic** %pos_magic2824, align 8
  %mg_len = getelementptr inbounds %struct.magic, %struct.magic* %1583, i32 0, i32 5
  store i64 %sub.ptr.sub2822, i64* %mg_len, align 8
  %1584 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval2825 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1584, i32 0, i32 8
  %1585 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval2825, align 8
  %pos_magic2826 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %1585, i32 0, i32 7
  %1586 = load %struct.magic*, %struct.magic** %pos_magic2826, align 8
  %mg_flags = getelementptr inbounds %struct.magic, %struct.magic* %1586, i32 0, i32 4
  %1587 = load i8, i8* %mg_flags, align 1
  %conv2827 = zext i8 %1587 to i32
  %or2828 = or i32 %conv2827, 64
  %conv2829 = trunc i32 %or2828 to i8
  store i8 %conv2829, i8* %mg_flags, align 1
  %conv2830 = zext i8 %conv2829 to i32
  br label %cond.end2866

cond.false2831:                                   ; preds = %lor.lhs.false2814, %if.then2805
  %1588 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %sv2832 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1588, i32 0, i32 4
  %1589 = load %struct.sv*, %struct.sv** %sv2832, align 8
  %sv_flags2833 = getelementptr inbounds %struct.sv, %struct.sv* %1589, i32 0, i32 2
  %1590 = load i32, i32* %sv_flags2833, align 4
  %and2834 = and i32 %1590, 536870912
  %tobool2835 = icmp ne i32 %and2834, 0
  br i1 %tobool2835, label %land.lhs.true2836, label %cond.false2849

land.lhs.true2836:                                ; preds = %cond.false2831
  %1591 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints = getelementptr inbounds %struct.cop, %struct.cop* %1591, i32 0, i32 10
  %1592 = load i32, i32* %cop_hints, align 8
  %add2837 = add i32 %1592, 0
  %and2838 = and i32 %add2837, 8
  %tobool2839 = icmp ne i32 %and2838, 0
  br i1 %tobool2839, label %cond.false2849, label %cond.true2840

cond.true2840:                                    ; preds = %land.lhs.true2836
  %1593 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2841 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1593, i32 0, i32 1
  %1594 = load i8*, i8** %strbeg2841, align 8
  %1595 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2842 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1595, i32 0, i32 1
  %1596 = load i8*, i8** %strbeg2842, align 8
  %1597 = load i8*, i8** %locinput, align 8
  %1598 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2843 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1598, i32 0, i32 1
  %1599 = load i8*, i8** %strbeg2843, align 8
  %sub.ptr.lhs.cast2844 = ptrtoint i8* %1597 to i64
  %sub.ptr.rhs.cast2845 = ptrtoint i8* %1599 to i64
  %sub.ptr.sub2846 = sub i64 %sub.ptr.lhs.cast2844, %sub.ptr.rhs.cast2845
  %add.ptr2847 = getelementptr inbounds i8, i8* %1596, i64 %sub.ptr.sub2846
  %call2848 = call i64 @Perl_utf8_length(i8* %1594, i8* %add.ptr2847)
  br label %cond.end2854

cond.false2849:                                   ; preds = %land.lhs.true2836, %cond.false2831
  %1600 = load i8*, i8** %locinput, align 8
  %1601 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg2850 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1601, i32 0, i32 1
  %1602 = load i8*, i8** %strbeg2850, align 8
  %sub.ptr.lhs.cast2851 = ptrtoint i8* %1600 to i64
  %sub.ptr.rhs.cast2852 = ptrtoint i8* %1602 to i64
  %sub.ptr.sub2853 = sub i64 %sub.ptr.lhs.cast2851, %sub.ptr.rhs.cast2852
  br label %cond.end2854

cond.end2854:                                     ; preds = %cond.false2849, %cond.true2840
  %cond2855 = phi i64 [ %call2848, %cond.true2840 ], [ %sub.ptr.sub2853, %cond.false2849 ]
  %1603 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval2856 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1603, i32 0, i32 8
  %1604 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval2856, align 8
  %pos_magic2857 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %1604, i32 0, i32 7
  %1605 = load %struct.magic*, %struct.magic** %pos_magic2857, align 8
  %mg_len2858 = getelementptr inbounds %struct.magic, %struct.magic* %1605, i32 0, i32 5
  store i64 %cond2855, i64* %mg_len2858, align 8
  %1606 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval2859 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1606, i32 0, i32 8
  %1607 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval2859, align 8
  %pos_magic2860 = getelementptr inbounds %struct.regmatch_info_aux_eval, %struct.regmatch_info_aux_eval* %1607, i32 0, i32 7
  %1608 = load %struct.magic*, %struct.magic** %pos_magic2860, align 8
  %mg_flags2861 = getelementptr inbounds %struct.magic, %struct.magic* %1608, i32 0, i32 4
  %1609 = load i8, i8* %mg_flags2861, align 1
  %conv2862 = zext i8 %1609 to i32
  %and2863 = and i32 %conv2862, -65
  %conv2864 = trunc i32 %and2863 to i8
  store i8 %conv2864, i8* %mg_flags2861, align 1
  %conv2865 = zext i8 %conv2864 to i32
  br label %cond.end2866

cond.end2866:                                     ; preds = %cond.end2854, %cond.true2818
  %cond2867 = phi i32 [ %conv2830, %cond.true2818 ], [ %conv2865, %cond.end2854 ]
  br label %if.end2868

if.end2868:                                       ; preds = %cond.end2866, %if.end2796
  %1610 = load %struct.sv*, %struct.sv** %sv_yes_mark, align 8
  %tobool2869 = icmp ne %struct.sv* %1610, null
  br i1 %tobool2869, label %if.then2870, label %if.end2872

if.then2870:                                      ; preds = %if.end2868
  %call2871 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i32 1)
  store %struct.sv* %call2871, %struct.sv** %sv_mrk, align 8
  %1611 = load %struct.sv*, %struct.sv** %sv_mrk, align 8
  %1612 = load %struct.sv*, %struct.sv** %sv_yes_mark, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %1611, %struct.sv* %1612, i32 1538)
  br label %if.end2872

if.end2872:                                       ; preds = %if.then2870, %if.end2868
  %1613 = load %struct.sv**, %struct.sv*** %sp, align 8
  %1614 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast2873 = ptrtoint %struct.sv** %1613 to i64
  %sub.ptr.rhs.cast2874 = ptrtoint %struct.sv** %1614 to i64
  %sub.ptr.sub2875 = sub i64 %sub.ptr.lhs.cast2873, %sub.ptr.rhs.cast2874
  %sub.ptr.div2876 = sdiv exact i64 %sub.ptr.sub2875, 8
  store i64 %sub.ptr.div2876, i64* %before, align 8
  %1615 = load %struct.op*, %struct.op** %nop, align 8
  store %struct.op* %1615, %struct.op** @PL_op, align 8
  %1616 = load i32 ()*, i32 ()** @PL_runops, align 8
  %call2877 = call i32 %1616()
  %1617 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %1617, %struct.sv*** %sp, align 8
  %1618 = load %struct.sv**, %struct.sv*** %sp, align 8
  %1619 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast2878 = ptrtoint %struct.sv** %1618 to i64
  %sub.ptr.rhs.cast2879 = ptrtoint %struct.sv** %1619 to i64
  %sub.ptr.sub2880 = sub i64 %sub.ptr.lhs.cast2878, %sub.ptr.rhs.cast2879
  %sub.ptr.div2881 = sdiv exact i64 %sub.ptr.sub2880, 8
  %1620 = load i64, i64* %before, align 8
  %cmp2882 = icmp eq i64 %sub.ptr.div2881, %1620
  br i1 %cmp2882, label %if.then2884, label %if.else2885

if.then2884:                                      ; preds = %if.end2872
  store %struct.sv* @PL_sv_undef, %struct.sv** %ret, align 8
  br label %if.end2887

if.else2885:                                      ; preds = %if.end2872
  %1621 = load %struct.sv**, %struct.sv*** %sp, align 8
  %incdec.ptr2886 = getelementptr inbounds %struct.sv*, %struct.sv** %1621, i32 -1
  store %struct.sv** %incdec.ptr2886, %struct.sv*** %sp, align 8
  %1622 = load %struct.sv*, %struct.sv** %1621, align 8
  store %struct.sv* %1622, %struct.sv** %ret, align 8
  %1623 = load %struct.sv**, %struct.sv*** %sp, align 8
  store %struct.sv** %1623, %struct.sv*** @PL_stack_sp, align 8
  br label %if.end2887

if.end2887:                                       ; preds = %if.else2885, %if.then2884
  store %struct.op* null, %struct.op** @PL_op, align 8
  store %struct.p5rx* null, %struct.p5rx** %re_sv, align 8
  %1624 = load i32, i32* %logical, align 4
  %cmp2888 = icmp eq i32 %1624, 0
  br i1 %cmp2888, label %if.then2890, label %if.else2892

if.then2890:                                      ; preds = %if.end2887
  %1625 = load %struct.gv*, %struct.gv** @PL_replgv, align 8
  %call2891 = call %struct.sv* @Perl_save_scalar(%struct.gv* %1625)
  %1626 = load %struct.sv*, %struct.sv** %ret, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %call2891, %struct.sv* %1626, i32 1538)
  br label %if.end3068

if.else2892:                                      ; preds = %if.end2887
  %1627 = load i32, i32* %logical, align 4
  %cmp2893 = icmp eq i32 %1627, 1
  br i1 %cmp2893, label %if.then2895, label %if.else2996

if.then2895:                                      ; preds = %if.else2892
  %1628 = load %struct.sv*, %struct.sv** %ret, align 8
  %tobool2896 = icmp ne %struct.sv* %1628, null
  br i1 %tobool2896, label %cond.true2897, label %cond.false2898

cond.true2897:                                    ; preds = %if.then2895
  br i1 true, label %land.rhs2899, label %land.end2991

cond.false2898:                                   ; preds = %if.then2895
  br i1 false, label %land.rhs2899, label %land.end2991

land.rhs2899:                                     ; preds = %cond.false2898, %cond.true2897
  %1629 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags2900 = getelementptr inbounds %struct.sv, %struct.sv* %1629, i32 0, i32 2
  %1630 = load i32, i32* %sv_flags2900, align 4
  %and2901 = and i32 %1630, 2097152
  %tobool2902 = icmp ne i32 %and2901, 0
  br i1 %tobool2902, label %cond.true2903, label %cond.false2904

cond.true2903:                                    ; preds = %land.rhs2899
  br i1 true, label %cond.true2905, label %cond.false2908

cond.false2904:                                   ; preds = %land.rhs2899
  br i1 false, label %cond.true2905, label %cond.false2908

cond.true2905:                                    ; preds = %cond.false2904, %cond.true2903
  %1631 = load %struct.sv*, %struct.sv** %ret, align 8
  %call2906 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %1631, i32 2)
  %conv2907 = zext i1 %call2906 to i32
  br label %cond.end2988

cond.false2908:                                   ; preds = %cond.false2904, %cond.true2903
  %1632 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags2909 = getelementptr inbounds %struct.sv, %struct.sv* %1632, i32 0, i32 2
  %1633 = load i32, i32* %sv_flags2909, align 4
  %and2910 = and i32 %1633, 65280
  %tobool2911 = icmp ne i32 %and2910, 0
  br i1 %tobool2911, label %cond.false2923, label %lor.lhs.false2912

lor.lhs.false2912:                                ; preds = %cond.false2908
  %1634 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags2913 = getelementptr inbounds %struct.sv, %struct.sv* %1634, i32 0, i32 2
  %1635 = load i32, i32* %sv_flags2913, align 4
  %and2914 = and i32 %1635, 255
  %cmp2915 = icmp eq i32 %and2914, 8
  br i1 %cmp2915, label %cond.false2923, label %lor.lhs.false2917

lor.lhs.false2917:                                ; preds = %lor.lhs.false2912
  %1636 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags2918 = getelementptr inbounds %struct.sv, %struct.sv* %1636, i32 0, i32 2
  %1637 = load i32, i32* %sv_flags2918, align 4
  %and2919 = and i32 %1637, 16826623
  %cmp2920 = icmp eq i32 %and2919, 16777226
  br i1 %cmp2920, label %cond.false2923, label %cond.true2922

cond.true2922:                                    ; preds = %lor.lhs.false2917
  br label %cond.end2986

cond.false2923:                                   ; preds = %lor.lhs.false2917, %lor.lhs.false2912, %cond.false2908
  %1638 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags2924 = getelementptr inbounds %struct.sv, %struct.sv* %1638, i32 0, i32 2
  %1639 = load i32, i32* %sv_flags2924, align 4
  %and2925 = and i32 %1639, 1024
  %tobool2926 = icmp ne i32 %and2925, 0
  br i1 %tobool2926, label %cond.true2927, label %cond.false2948

cond.true2927:                                    ; preds = %cond.false2923
  %1640 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_any2928 = getelementptr inbounds %struct.sv, %struct.sv* %1640, i32 0, i32 0
  %1641 = load i8*, i8** %sv_any2928, align 8
  %1642 = bitcast i8* %1641 to %struct.xpv*
  %tobool2929 = icmp ne %struct.xpv* %1642, null
  br i1 %tobool2929, label %land.rhs2930, label %land.end2946

land.rhs2930:                                     ; preds = %cond.true2927
  %1643 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_any2931 = getelementptr inbounds %struct.sv, %struct.sv* %1643, i32 0, i32 0
  %1644 = load i8*, i8** %sv_any2931, align 8
  %1645 = bitcast i8* %1644 to %struct.xpv*
  %xpv_cur = getelementptr inbounds %struct.xpv, %struct.xpv* %1645, i32 0, i32 2
  %1646 = load i64, i64* %xpv_cur, align 8
  %cmp2932 = icmp ugt i64 %1646, 1
  br i1 %cmp2932, label %lor.end2945, label %lor.rhs2934

lor.rhs2934:                                      ; preds = %land.rhs2930
  %1647 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_any2935 = getelementptr inbounds %struct.sv, %struct.sv* %1647, i32 0, i32 0
  %1648 = load i8*, i8** %sv_any2935, align 8
  %1649 = bitcast i8* %1648 to %struct.xpv*
  %xpv_cur2936 = getelementptr inbounds %struct.xpv, %struct.xpv* %1649, i32 0, i32 2
  %1650 = load i64, i64* %xpv_cur2936, align 8
  %tobool2937 = icmp ne i64 %1650, 0
  br i1 %tobool2937, label %land.rhs2938, label %land.end2943

land.rhs2938:                                     ; preds = %lor.rhs2934
  %1651 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_u2939 = getelementptr inbounds %struct.sv, %struct.sv* %1651, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u2939 to i8**
  %1652 = load i8*, i8** %svu_pv, align 8
  %1653 = load i8, i8* %1652, align 1
  %conv2940 = sext i8 %1653 to i32
  %cmp2941 = icmp ne i32 %conv2940, 48
  br label %land.end2943

land.end2943:                                     ; preds = %land.rhs2938, %lor.rhs2934
  %1654 = phi i1 [ false, %lor.rhs2934 ], [ %cmp2941, %land.rhs2938 ]
  br label %lor.end2945

lor.end2945:                                      ; preds = %land.end2943, %land.rhs2930
  %1655 = phi i1 [ true, %land.rhs2930 ], [ %1654, %land.end2943 ]
  br label %land.end2946

land.end2946:                                     ; preds = %lor.end2945, %cond.true2927
  %1656 = phi i1 [ false, %cond.true2927 ], [ %1655, %lor.end2945 ]
  %land.ext2947 = zext i1 %1656 to i32
  br label %cond.end2984

cond.false2948:                                   ; preds = %cond.false2923
  %1657 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags2949 = getelementptr inbounds %struct.sv, %struct.sv* %1657, i32 0, i32 2
  %1658 = load i32, i32* %sv_flags2949, align 4
  %and2950 = and i32 %1658, 768
  %tobool2951 = icmp ne i32 %and2950, 0
  br i1 %tobool2951, label %cond.true2952, label %cond.false2979

cond.true2952:                                    ; preds = %cond.false2948
  %1659 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags2953 = getelementptr inbounds %struct.sv, %struct.sv* %1659, i32 0, i32 2
  %1660 = load i32, i32* %sv_flags2953, align 4
  %and2954 = and i32 %1660, 256
  %tobool2955 = icmp ne i32 %and2954, 0
  br i1 %tobool2955, label %land.lhs.true2956, label %lor.rhs2962

land.lhs.true2956:                                ; preds = %cond.true2952
  %1661 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_any2957 = getelementptr inbounds %struct.sv, %struct.sv* %1661, i32 0, i32 0
  %1662 = load i8*, i8** %sv_any2957, align 8
  %1663 = bitcast i8* %1662 to %struct.xpviv*
  %xiv_u2958 = getelementptr inbounds %struct.xpviv, %struct.xpviv* %1663, i32 0, i32 4
  %xivu_iv2959 = bitcast %union._xivu* %xiv_u2958 to i64*
  %1664 = load i64, i64* %xivu_iv2959, align 8
  %cmp2960 = icmp ne i64 %1664, 0
  br i1 %cmp2960, label %lor.end2978, label %lor.rhs2962

lor.rhs2962:                                      ; preds = %land.lhs.true2956, %cond.true2952
  %1665 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags2963 = getelementptr inbounds %struct.sv, %struct.sv* %1665, i32 0, i32 2
  %1666 = load i32, i32* %sv_flags2963, align 4
  %and2964 = and i32 %1666, 512
  %tobool2965 = icmp ne i32 %and2964, 0
  br i1 %tobool2965, label %land.rhs2966, label %land.end2976

land.rhs2966:                                     ; preds = %lor.rhs2962
  %1667 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_any2967 = getelementptr inbounds %struct.sv, %struct.sv* %1667, i32 0, i32 0
  %1668 = load i8*, i8** %sv_any2967, align 8
  %1669 = bitcast i8* %1668 to %struct.xpvnv*
  %xnv_u = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %1669, i32 0, i32 5
  %xnv_nv = bitcast %union._xnvu* %xnv_u to double*
  %1670 = load double, double* %xnv_nv, align 8
  %cmp2968 = fcmp uno double %1670, %1670
  br i1 %cmp2968, label %lor.end2975, label %lor.rhs2969

lor.rhs2969:                                      ; preds = %land.rhs2966
  %1671 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_any2970 = getelementptr inbounds %struct.sv, %struct.sv* %1671, i32 0, i32 0
  %1672 = load i8*, i8** %sv_any2970, align 8
  %1673 = bitcast i8* %1672 to %struct.xpvnv*
  %xnv_u2971 = getelementptr inbounds %struct.xpvnv, %struct.xpvnv* %1673, i32 0, i32 5
  %xnv_nv2972 = bitcast %union._xnvu* %xnv_u2971 to double*
  %1674 = load double, double* %xnv_nv2972, align 8
  %cmp2973 = fcmp une double %1674, 0.000000e+00
  br label %lor.end2975

lor.end2975:                                      ; preds = %lor.rhs2969, %land.rhs2966
  %1675 = phi i1 [ true, %land.rhs2966 ], [ %cmp2973, %lor.rhs2969 ]
  br label %land.end2976

land.end2976:                                     ; preds = %lor.end2975, %lor.rhs2962
  %1676 = phi i1 [ false, %lor.rhs2962 ], [ %1675, %lor.end2975 ]
  br label %lor.end2978

lor.end2978:                                      ; preds = %land.end2976, %land.lhs.true2956
  %1677 = phi i1 [ true, %land.lhs.true2956 ], [ %1676, %land.end2976 ]
  %lor.ext = zext i1 %1677 to i32
  br label %cond.end2982

cond.false2979:                                   ; preds = %cond.false2948
  %1678 = load %struct.sv*, %struct.sv** %ret, align 8
  %call2980 = call zeroext i1 @Perl_sv_2bool_flags(%struct.sv* %1678, i32 0)
  %conv2981 = zext i1 %call2980 to i32
  br label %cond.end2982

cond.end2982:                                     ; preds = %cond.false2979, %lor.end2978
  %cond2983 = phi i32 [ %lor.ext, %lor.end2978 ], [ %conv2981, %cond.false2979 ]
  br label %cond.end2984

cond.end2984:                                     ; preds = %cond.end2982, %land.end2946
  %cond2985 = phi i32 [ %land.ext2947, %land.end2946 ], [ %cond2983, %cond.end2982 ]
  br label %cond.end2986

cond.end2986:                                     ; preds = %cond.end2984, %cond.true2922
  %cond2987 = phi i32 [ 0, %cond.true2922 ], [ %cond2985, %cond.end2984 ]
  br label %cond.end2988

cond.end2988:                                     ; preds = %cond.end2986, %cond.true2905
  %cond2989 = phi i32 [ %conv2907, %cond.true2905 ], [ %cond2987, %cond.end2986 ]
  %tobool2990 = icmp ne i32 %cond2989, 0
  br label %land.end2991

land.end2991:                                     ; preds = %cond.end2988, %cond.false2898, %cond.true2897
  %1679 = phi i1 [ false, %cond.false2898 ], [ false, %cond.true2897 ], [ %tobool2990, %cond.end2988 ]
  %1680 = zext i1 %1679 to i64
  %cond2993 = select i1 %1679, i32 1, i32 0
  %tobool2994 = icmp ne i32 %cond2993, 0
  %frombool2995 = zext i1 %tobool2994 to i8
  store i8 %frombool2995, i8* %sw, align 1
  store i32 0, i32* %logical, align 4
  br label %if.end3067

if.else2996:                                      ; preds = %if.else2892
  %1681 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags2997 = getelementptr inbounds %struct.sv, %struct.sv* %1681, i32 0, i32 2
  %1682 = load i32, i32* %sv_flags2997, align 4
  %and2998 = and i32 %1682, 2097152
  %tobool2999 = icmp ne i32 %and2998, 0
  br i1 %tobool2999, label %if.then3000, label %if.end3002

if.then3000:                                      ; preds = %if.else2996
  %1683 = load %struct.sv*, %struct.sv** %ret, align 8
  %call3001 = call %struct.sv* @Perl_sv_mortalcopy_flags(%struct.sv* %1683, i32 1538)
  store %struct.sv* %call3001, %struct.sv** %ret, align 8
  br label %if.end3002

if.end3002:                                       ; preds = %if.then3000, %if.else2996
  %1684 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags3003 = getelementptr inbounds %struct.sv, %struct.sv* %1684, i32 0, i32 2
  %1685 = load i32, i32* %sv_flags3003, align 4
  %and3004 = and i32 %1685, 2048
  %tobool3005 = icmp ne i32 %and3004, 0
  br i1 %tobool3005, label %land.lhs.true3006, label %if.then3018

land.lhs.true3006:                                ; preds = %if.end3002
  %1686 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_u3007 = getelementptr inbounds %struct.sv, %struct.sv* %1686, i32 0, i32 3
  %svu_rv = bitcast %union.anon* %sv_u3007 to %struct.sv**
  %1687 = load %struct.sv*, %struct.sv** %svu_rv, align 8
  %sv_flags3008 = getelementptr inbounds %struct.sv, %struct.sv* %1687, i32 0, i32 2
  %1688 = load i32, i32* %sv_flags3008, align 4
  %and3009 = and i32 %1688, 1048576
  %tobool3010 = icmp ne i32 %and3009, 0
  br i1 %tobool3010, label %land.lhs.true3011, label %if.then3018

land.lhs.true3011:                                ; preds = %land.lhs.true3006
  %1689 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_u3012 = getelementptr inbounds %struct.sv, %struct.sv* %1689, i32 0, i32 3
  %svu_rv3013 = bitcast %union.anon* %sv_u3012 to %struct.sv**
  %1690 = load %struct.sv*, %struct.sv** %svu_rv3013, align 8
  %sv_any3014 = getelementptr inbounds %struct.sv, %struct.sv* %1690, i32 0, i32 0
  %1691 = load i8*, i8** %sv_any3014, align 8
  %1692 = bitcast i8* %1691 to %struct.xpvmg*
  %xmg_stash = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %1692, i32 0, i32 0
  %1693 = load %struct.hv*, %struct.hv** %xmg_stash, align 8
  %sv_flags3015 = getelementptr inbounds %struct.hv, %struct.hv* %1693, i32 0, i32 2
  %1694 = load i32, i32* %sv_flags3015, align 4
  %and3016 = and i32 %1694, 268435456
  %tobool3017 = icmp ne i32 %and3016, 0
  br i1 %tobool3017, label %if.end3066, label %if.then3018

if.then3018:                                      ; preds = %land.lhs.true3011, %land.lhs.true3006, %if.end3002
  %1695 = load %struct.sv*, %struct.sv** %ret, align 8
  store %struct.sv* %1695, %struct.sv** %sv3019, align 8
  %1696 = load %struct.sv*, %struct.sv** %sv3019, align 8
  %sv_flags3020 = getelementptr inbounds %struct.sv, %struct.sv* %1696, i32 0, i32 2
  %1697 = load i32, i32* %sv_flags3020, align 4
  %and3021 = and i32 %1697, 2048
  %tobool3022 = icmp ne i32 %and3021, 0
  br i1 %tobool3022, label %if.then3023, label %if.end3026

if.then3023:                                      ; preds = %if.then3018
  %1698 = load %struct.sv*, %struct.sv** %sv3019, align 8
  %sv_u3024 = getelementptr inbounds %struct.sv, %struct.sv* %1698, i32 0, i32 3
  %svu_rv3025 = bitcast %union.anon* %sv_u3024 to %struct.sv**
  %1699 = load %struct.sv*, %struct.sv** %svu_rv3025, align 8
  store %struct.sv* %1699, %struct.sv** %sv3019, align 8
  br label %if.end3026

if.end3026:                                       ; preds = %if.then3023, %if.then3018
  %1700 = load %struct.sv*, %struct.sv** %sv3019, align 8
  %sv_flags3027 = getelementptr inbounds %struct.sv, %struct.sv* %1700, i32 0, i32 2
  %1701 = load i32, i32* %sv_flags3027, align 4
  %and3028 = and i32 %1701, 255
  %cmp3029 = icmp eq i32 %and3028, 8
  br i1 %cmp3029, label %if.then3031, label %if.else3032

if.then3031:                                      ; preds = %if.end3026
  %1702 = load %struct.sv*, %struct.sv** %sv3019, align 8
  %1703 = bitcast %struct.sv* %1702 to %struct.p5rx*
  store %struct.p5rx* %1703, %struct.p5rx** %re_sv, align 8
  br label %if.end3042

if.else3032:                                      ; preds = %if.end3026
  %1704 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags3033 = getelementptr inbounds %struct.sv, %struct.sv* %1704, i32 0, i32 2
  %1705 = load i32, i32* %sv_flags3033, align 4
  %and3034 = and i32 %1705, 4194304
  %tobool3035 = icmp ne i32 %and3034, 0
  br i1 %tobool3035, label %if.then3036, label %if.end3041

if.then3036:                                      ; preds = %if.else3032
  %1706 = load %struct.sv*, %struct.sv** %ret, align 8
  %call3037 = call %struct.magic* @Perl_mg_find(%struct.sv* %1706, i32 114)
  store %struct.magic* %call3037, %struct.magic** %mg, align 8
  %1707 = load %struct.magic*, %struct.magic** %mg, align 8
  %tobool3038 = icmp ne %struct.magic* %1707, null
  br i1 %tobool3038, label %if.then3039, label %if.end3040

if.then3039:                                      ; preds = %if.then3036
  %1708 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_obj = getelementptr inbounds %struct.magic, %struct.magic* %1708, i32 0, i32 6
  %1709 = load %struct.sv*, %struct.sv** %mg_obj, align 8
  %1710 = bitcast %struct.sv* %1709 to %struct.p5rx*
  store %struct.p5rx* %1710, %struct.p5rx** %re_sv, align 8
  br label %if.end3040

if.end3040:                                       ; preds = %if.then3039, %if.then3036
  br label %if.end3041

if.end3041:                                       ; preds = %if.end3040, %if.else3032
  br label %if.end3042

if.end3042:                                       ; preds = %if.end3041, %if.then3031
  %1711 = load %struct.p5rx*, %struct.p5rx** %re_sv, align 8
  %tobool3043 = icmp ne %struct.p5rx* %1711, null
  br i1 %tobool3043, label %if.end3065, label %land.lhs.true3044

land.lhs.true3044:                                ; preds = %if.end3042
  %1712 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags3045 = getelementptr inbounds %struct.sv, %struct.sv* %1712, i32 0, i32 2
  %1713 = load i32, i32* %sv_flags3045, align 4
  %and3046 = and i32 %1713, 1024
  %tobool3047 = icmp ne i32 %and3046, 0
  br i1 %tobool3047, label %if.end3065, label %land.lhs.true3048

land.lhs.true3048:                                ; preds = %land.lhs.true3044
  %1714 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags3049 = getelementptr inbounds %struct.sv, %struct.sv* %1714, i32 0, i32 2
  %1715 = load i32, i32* %sv_flags3049, align 4
  %and3050 = and i32 %1715, 768
  %tobool3051 = icmp ne i32 %and3050, 0
  br i1 %tobool3051, label %if.end3065, label %if.then3052

if.then3052:                                      ; preds = %land.lhs.true3048
  %1716 = load %struct.sv*, %struct.sv** %ret, align 8
  %call3053 = call %struct.sv* @Perl_sv_mortalcopy_flags(%struct.sv* %1716, i32 1538)
  store %struct.sv* %call3053, %struct.sv** %ret, align 8
  %1717 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags3054 = getelementptr inbounds %struct.sv, %struct.sv* %1717, i32 0, i32 2
  %1718 = load i32, i32* %sv_flags3054, align 4
  %and3055 = and i32 %1718, 430018304
  %cmp3056 = icmp eq i32 %and3055, 1024
  br i1 %cmp3056, label %cond.true3058, label %cond.false3061

cond.true3058:                                    ; preds = %if.then3052
  %1719 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_u3059 = getelementptr inbounds %struct.sv, %struct.sv* %1719, i32 0, i32 3
  %svu_pv3060 = bitcast %union.anon* %sv_u3059 to i8**
  %1720 = load i8*, i8** %svu_pv3060, align 8
  br label %cond.end3063

cond.false3061:                                   ; preds = %if.then3052
  %1721 = load %struct.sv*, %struct.sv** %ret, align 8
  %call3062 = call i8* @Perl_sv_pvn_force_flags(%struct.sv* %1721, i64* null, i32 2)
  br label %cond.end3063

cond.end3063:                                     ; preds = %cond.false3061, %cond.true3058
  %cond3064 = phi i8* [ %1720, %cond.true3058 ], [ %call3062, %cond.false3061 ]
  br label %if.end3065

if.end3065:                                       ; preds = %cond.end3063, %land.lhs.true3048, %land.lhs.true3044, %if.end3042
  br label %if.end3066

if.end3066:                                       ; preds = %if.end3065, %land.lhs.true3011
  br label %if.end3067

if.end3067:                                       ; preds = %if.end3066, %land.end2991
  br label %if.end3068

if.end3068:                                       ; preds = %if.end3067, %if.then2890
  %1722 = load %struct.op*, %struct.op** %oop, align 8
  store %struct.op* %1722, %struct.op** @PL_op, align 8
  %1723 = load %struct.cop*, %struct.cop** %ocurcop, align 8
  store %struct.cop* %1723, %struct.cop** @PL_curcop, align 8
  %1724 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %1725 = load i32, i32* %runops_cp, align 4
  call void @S_regcp_restore(%struct.regexp* %1724, i32 %1725, i32* %maxopenparen)
  %1726 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  store %struct.pmop* %1726, %struct.pmop** @PL_curpm, align 8
  %1727 = load i32, i32* %logical, align 4
  %cmp3069 = icmp ne i32 %1727, 2
  br i1 %cmp3069, label %if.then3071, label %if.end3072

if.then3071:                                      ; preds = %if.end3068
  br label %sw.epilog6759

if.end3072:                                       ; preds = %if.end3068
  store i32 0, i32* %logical, align 4
  %1728 = load %struct.p5rx*, %struct.p5rx** %re_sv, align 8
  %tobool3073 = icmp ne %struct.p5rx* %1728, null
  br i1 %tobool3073, label %if.then3074, label %if.else3076

if.then3074:                                      ; preds = %if.end3072
  %1729 = load %struct.p5rx*, %struct.p5rx** %re_sv, align 8
  %call3075 = call %struct.p5rx* @Perl_reg_temp_copy(%struct.p5rx* null, %struct.p5rx* %1729)
  store %struct.p5rx* %call3075, %struct.p5rx** %re_sv, align 8
  br label %if.end3124

if.else3076:                                      ; preds = %if.end3072
  store i32 0, i32* %pm_flags, align 4
  %1730 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags3077 = getelementptr inbounds %struct.sv, %struct.sv* %1730, i32 0, i32 2
  %1731 = load i32, i32* %sv_flags3077, align 4
  %and3078 = and i32 %1731, 536870912
  %tobool3079 = icmp ne i32 %and3078, 0
  br i1 %tobool3079, label %land.lhs.true3080, label %if.end3101

land.lhs.true3080:                                ; preds = %if.else3076
  %1732 = load %struct.cop*, %struct.cop** @PL_curcop, align 8
  %cop_hints3081 = getelementptr inbounds %struct.cop, %struct.cop* %1732, i32 0, i32 10
  %1733 = load i32, i32* %cop_hints3081, align 8
  %add3082 = add i32 %1733, 0
  %and3083 = and i32 %add3082, 8
  %tobool3084 = icmp ne i32 %and3083, 0
  br i1 %tobool3084, label %if.then3085, label %if.end3101

if.then3085:                                      ; preds = %land.lhs.true3080
  %1734 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags3087 = getelementptr inbounds %struct.sv, %struct.sv* %1734, i32 0, i32 2
  %1735 = load i32, i32* %sv_flags3087, align 4
  %and3088 = and i32 %1735, 2098176
  %cmp3089 = icmp eq i32 %and3088, 1024
  br i1 %cmp3089, label %cond.true3091, label %cond.false3096

cond.true3091:                                    ; preds = %if.then3085
  %1736 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_any3092 = getelementptr inbounds %struct.sv, %struct.sv* %1736, i32 0, i32 0
  %1737 = load i8*, i8** %sv_any3092, align 8
  %1738 = bitcast i8* %1737 to %struct.xpv*
  %xpv_cur3093 = getelementptr inbounds %struct.xpv, %struct.xpv* %1738, i32 0, i32 2
  %1739 = load i64, i64* %xpv_cur3093, align 8
  store i64 %1739, i64* %len3086, align 8
  %1740 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_u3094 = getelementptr inbounds %struct.sv, %struct.sv* %1740, i32 0, i32 3
  %svu_pv3095 = bitcast %union.anon* %sv_u3094 to i8**
  %1741 = load i8*, i8** %svu_pv3095, align 8
  br label %cond.end3098

cond.false3096:                                   ; preds = %if.then3085
  %1742 = load %struct.sv*, %struct.sv** %ret, align 8
  %call3097 = call i8* @Perl_sv_2pv_flags(%struct.sv* %1742, i64* %len3086, i32 2)
  br label %cond.end3098

cond.end3098:                                     ; preds = %cond.false3096, %cond.true3091
  %cond3099 = phi i8* [ %1741, %cond.true3091 ], [ %call3097, %cond.false3096 ]
  store i8* %cond3099, i8** %p, align 8
  %1743 = load i8*, i8** %p, align 8
  %1744 = load i64, i64* %len3086, align 8
  %call3100 = call %struct.sv* @Perl_newSVpvn_flags(i8* %1743, i64 %1744, i32 524288)
  store %struct.sv* %call3100, %struct.sv** %ret, align 8
  br label %if.end3101

if.end3101:                                       ; preds = %cond.end3098, %land.lhs.true3080, %if.else3076
  %1745 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %intflags3102 = getelementptr inbounds %struct.regexp, %struct.regexp* %1745, i32 0, i32 13
  %1746 = load i32, i32* %intflags3102, align 4
  %and3103 = and i32 %1746, 32
  %tobool3104 = icmp ne i32 %and3103, 0
  br i1 %tobool3104, label %if.then3105, label %if.end3107

if.then3105:                                      ; preds = %if.end3101
  %1747 = load i32, i32* %pm_flags, align 4
  %or3106 = or i32 %1747, -2147483648
  store i32 %or3106, i32* %pm_flags, align 4
  br label %if.end3107

if.end3107:                                       ; preds = %if.then3105, %if.end3101
  %1748 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %engine = getelementptr inbounds %struct.regexp, %struct.regexp* %1748, i32 0, i32 4
  %1749 = load %struct.regexp_engine*, %struct.regexp_engine** %engine, align 8
  %op_comp = getelementptr inbounds %struct.regexp_engine, %struct.regexp_engine* %1749, i32 0, i32 11
  %1750 = load %struct.p5rx* (%struct.sv**, i32, %struct.op*, %struct.regexp_engine*, %struct.p5rx*, i8*, i32, i32)*, %struct.p5rx* (%struct.sv**, i32, %struct.op*, %struct.regexp_engine*, %struct.p5rx*, i8*, i32, i32)** %op_comp, align 8
  %1751 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %engine3108 = getelementptr inbounds %struct.regexp, %struct.regexp* %1751, i32 0, i32 4
  %1752 = load %struct.regexp_engine*, %struct.regexp_engine** %engine3108, align 8
  %1753 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1754 = bitcast %struct.regnode* %1753 to %struct.regnode_2L*
  %arg23109 = getelementptr inbounds %struct.regnode_2L, %struct.regnode_2L* %1754, i32 0, i32 4
  %1755 = load i32, i32* %arg23109, align 4
  %1756 = load i32, i32* %pm_flags, align 4
  %call3110 = call %struct.p5rx* %1750(%struct.sv** %ret, i32 1, %struct.op* null, %struct.regexp_engine* %1752, %struct.p5rx* null, i8* null, i32 %1755, i32 %1756)
  store %struct.p5rx* %call3110, %struct.p5rx** %re_sv, align 8
  %1757 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags3111 = getelementptr inbounds %struct.sv, %struct.sv* %1757, i32 0, i32 2
  %1758 = load i32, i32* %sv_flags3111, align 4
  %and3112 = and i32 %1758, 2623488
  %tobool3113 = icmp ne i32 %and3112, 0
  br i1 %tobool3113, label %if.end3123, label %land.lhs.true3114

land.lhs.true3114:                                ; preds = %if.end3107
  %1759 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags3115 = getelementptr inbounds %struct.sv, %struct.sv* %1759, i32 0, i32 2
  %1760 = load i32, i32* %sv_flags3115, align 4
  %and3116 = and i32 %1760, 131072
  %tobool3117 = icmp ne i32 %and3116, 0
  br i1 %tobool3117, label %lor.lhs.false3118, label %if.then3122

lor.lhs.false3118:                                ; preds = %land.lhs.true3114
  %1761 = load %struct.sv*, %struct.sv** %ret, align 8
  %sv_flags3119 = getelementptr inbounds %struct.sv, %struct.sv* %1761, i32 0, i32 2
  %1762 = load i32, i32* %sv_flags3119, align 4
  %and3120 = and i32 %1762, 134283264
  %tobool3121 = icmp ne i32 %and3120, 0
  br i1 %tobool3121, label %if.then3122, label %if.end3123

if.then3122:                                      ; preds = %lor.lhs.false3118, %land.lhs.true3114
  %1763 = load %struct.sv*, %struct.sv** %ret, align 8
  %1764 = load %struct.p5rx*, %struct.p5rx** %re_sv, align 8
  %1765 = bitcast %struct.p5rx* %1764 to i8*
  %1766 = bitcast i8* %1765 to %struct.sv*
  call void @Perl_sv_magic(%struct.sv* %1763, %struct.sv* %1766, i32 114, i8* null, i32 0)
  br label %if.end3123

if.end3123:                                       ; preds = %if.then3122, %lor.lhs.false3118, %if.end3107
  br label %if.end3124

if.end3124:                                       ; preds = %if.end3123, %if.then3074
  %1767 = load %struct.p5rx*, %struct.p5rx** %re_sv, align 8
  %1768 = bitcast %struct.p5rx* %1767 to i8*
  %1769 = bitcast i8* %1768 to %struct.sv*
  %1770 = bitcast %struct.sv* %1769 to i8*
  call void @Perl_save_pushptr(i8* %1770, i32 11)
  %1771 = load %struct.p5rx*, %struct.p5rx** %re_sv, align 8
  %call3125 = call %struct.regexp* @S_ReANY(%struct.p5rx* %1771)
  store %struct.regexp* %call3125, %struct.regexp** %re, align 8
  %1772 = load %struct.regexp*, %struct.regexp** %re, align 8
  %extflags = getelementptr inbounds %struct.regexp, %struct.regexp* %1772, i32 0, i32 7
  %1773 = load i32, i32* %extflags, align 8
  %and3126 = and i32 %1773, -33554433
  store i32 %and3126, i32* %extflags, align 8
  %1774 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %subbeg = getelementptr inbounds %struct.regexp, %struct.regexp* %1774, i32 0, i32 18
  %1775 = load i8*, i8** %subbeg, align 8
  %1776 = load %struct.regexp*, %struct.regexp** %re, align 8
  %subbeg3127 = getelementptr inbounds %struct.regexp, %struct.regexp* %1776, i32 0, i32 18
  store i8* %1775, i8** %subbeg3127, align 8
  %1777 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %sublen = getelementptr inbounds %struct.regexp, %struct.regexp* %1777, i32 0, i32 20
  %1778 = load i64, i64* %sublen, align 8
  %1779 = load %struct.regexp*, %struct.regexp** %re, align 8
  %sublen3128 = getelementptr inbounds %struct.regexp, %struct.regexp* %1779, i32 0, i32 20
  store i64 %1778, i64* %sublen3128, align 8
  %1780 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %suboffset = getelementptr inbounds %struct.regexp, %struct.regexp* %1780, i32 0, i32 21
  %1781 = load i64, i64* %suboffset, align 8
  %1782 = load %struct.regexp*, %struct.regexp** %re, align 8
  %suboffset3129 = getelementptr inbounds %struct.regexp, %struct.regexp* %1782, i32 0, i32 21
  store i64 %1781, i64* %suboffset3129, align 8
  %1783 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %subcoffset = getelementptr inbounds %struct.regexp, %struct.regexp* %1783, i32 0, i32 22
  %1784 = load i64, i64* %subcoffset, align 8
  %1785 = load %struct.regexp*, %struct.regexp** %re, align 8
  %subcoffset3130 = getelementptr inbounds %struct.regexp, %struct.regexp* %1785, i32 0, i32 22
  store i64 %1784, i64* %subcoffset3130, align 8
  %1786 = load %struct.regexp*, %struct.regexp** %re, align 8
  %lastparen3131 = getelementptr inbounds %struct.regexp, %struct.regexp* %1786, i32 0, i32 15
  store i32 0, i32* %lastparen3131, align 8
  %1787 = load %struct.regexp*, %struct.regexp** %re, align 8
  %lastcloseparen3132 = getelementptr inbounds %struct.regexp, %struct.regexp* %1787, i32 0, i32 16
  store i32 0, i32* %lastcloseparen3132, align 4
  %1788 = load %struct.regexp*, %struct.regexp** %re, align 8
  %pprivate3133 = getelementptr inbounds %struct.regexp, %struct.regexp* %1788, i32 0, i32 14
  %1789 = load i8*, i8** %pprivate3133, align 8
  %1790 = bitcast i8* %1789 to %struct.regexp_internal*
  store %struct.regexp_internal* %1790, %struct.regexp_internal** %rei, align 8
  %1791 = load %struct.regexp_internal*, %struct.regexp_internal** %rei, align 8
  %program3134 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %1791, i32 0, i32 6
  %arraydecay3135 = getelementptr inbounds [1 x %struct.regnode], [1 x %struct.regnode]* %program3134, i64 0, i64 0
  %add.ptr3136 = getelementptr inbounds %struct.regnode, %struct.regnode* %arraydecay3135, i64 1
  store %struct.regnode* %add.ptr3136, %struct.regnode** %startpoint2403, align 8
  %1792 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3137 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1792, i32 0, i32 2
  %eval3138 = bitcast %union.anon.19* %u3137 to %struct.anon.24*
  %close_paren3139 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3138, i32 0, i32 6
  store i32 0, i32* %close_paren3139, align 8
  %1793 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %1794 = load i32, i32* %maxopenparen, align 4
  %call3140 = call i32 @S_regcppush(%struct.regexp* %1793, i32 0, i32 %1794)
  %1795 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3141 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1795, i32 0, i32 2
  %eval3142 = bitcast %union.anon.19* %u3141 to %struct.anon.24*
  %cp3143 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3142, i32 0, i32 4
  store i32 %call3140, i32* %cp3143, align 8
  %1796 = load i32, i32* @PL_savestack_ix, align 4
  %1797 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3144 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1797, i32 0, i32 2
  %eval3145 = bitcast %union.anon.19* %u3144 to %struct.anon.24*
  %lastcp3146 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3145, i32 0, i32 5
  store i32 %1796, i32* %lastcp3146, align 4
  store i32 0, i32* %maxopenparen, align 4
  br label %eval_recurse_doit

eval_recurse_doit:                                ; preds = %if.end3124, %if.end2441
  %1798 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_maxiter3147 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1798, i32 0, i32 9
  store i32 0, i32* %poscache_maxiter3147, align 8
  %1799 = load %struct.p5rx*, %struct.p5rx** %re_sv, align 8
  %sv_flags3148 = getelementptr inbounds %struct.p5rx, %struct.p5rx* %1799, i32 0, i32 2
  %1800 = load i32, i32* %sv_flags3148, align 4
  %and3149 = and i32 %1800, 536870912
  %tobool3150 = icmp ne i32 %and3149, 0
  %1801 = zext i1 %tobool3150 to i64
  %cond3151 = select i1 %tobool3150, i32 1, i32 0
  %tobool3152 = icmp ne i32 %cond3151, 0
  %1802 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat3153 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1802, i32 0, i32 13
  %frombool3154 = zext i1 %tobool3152 to i8
  store i8 %frombool3154, i8* %is_utf8_pat3153, align 1
  %frombool3155 = zext i1 %tobool3152 to i8
  store i8 %frombool3155, i8* %is_utf8_pat, align 1
  %1803 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %1804 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3156 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1804, i32 0, i32 2
  %eval3157 = bitcast %union.anon.19* %u3156 to %struct.anon.24*
  %prev_rex = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3157, i32 0, i32 3
  store %struct.p5rx* %1803, %struct.p5rx** %prev_rex, align 8
  %1805 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %1806 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3158 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1806, i32 0, i32 2
  %eval3159 = bitcast %union.anon.19* %u3158 to %struct.anon.24*
  %prev_curlyx = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3159, i32 0, i32 2
  store %struct.regmatch_state* %1805, %struct.regmatch_state** %prev_curlyx, align 8
  %1807 = load %struct.p5rx*, %struct.p5rx** %re_sv, align 8
  store %struct.p5rx* %1807, %struct.p5rx** %rex_sv, align 8
  %1808 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval3160 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1808, i32 0, i32 8
  %1809 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval3160, align 8
  %tobool3161 = icmp ne %struct.regmatch_info_aux_eval* %1809, null
  br i1 %tobool3161, label %if.then3162, label %if.end3165

if.then3162:                                      ; preds = %eval_recurse_doit
  %1810 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %1811 = bitcast %struct.p5rx* %1810 to i8*
  %1812 = bitcast i8* %1811 to %struct.sv*
  %call3163 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %1812)
  %1813 = bitcast %struct.sv* %call3163 to %struct.p5rx*
  %1814 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %op_pmregexp = getelementptr inbounds %struct.pmop, %struct.pmop* %1814, i32 0, i32 9
  %1815 = load %struct.p5rx*, %struct.p5rx** %op_pmregexp, align 8
  %1816 = bitcast %struct.p5rx* %1815 to i8*
  %1817 = bitcast i8* %1816 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %1817)
  %1818 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %1819 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %op_pmregexp3164 = getelementptr inbounds %struct.pmop, %struct.pmop* %1819, i32 0, i32 9
  store %struct.p5rx* %1818, %struct.p5rx** %op_pmregexp3164, align 8
  br label %if.end3165

if.end3165:                                       ; preds = %if.then3162, %eval_recurse_doit
  %1820 = load %struct.regexp*, %struct.regexp** %re, align 8
  store %struct.regexp* %1820, %struct.regexp** %rex, align 8
  %1821 = load %struct.regexp_internal*, %struct.regexp_internal** %rei, align 8
  store %struct.regexp_internal* %1821, %struct.regexp_internal** %rexi, align 8
  store %struct.regmatch_state* null, %struct.regmatch_state** %cur_curlyx, align 8
  %1822 = load %struct.regnode*, %struct.regnode** %next, align 8
  %1823 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3166 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1823, i32 0, i32 2
  %eval3167 = bitcast %union.anon.19* %u3166 to %struct.anon.24*
  %B = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3167, i32 0, i32 7
  store %struct.regnode* %1822, %struct.regnode** %B, align 8
  %1824 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %1825 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3168 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1825, i32 0, i32 2
  %eval3169 = bitcast %union.anon.19* %u3168 to %struct.anon.24*
  %prev_eval = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3169, i32 0, i32 1
  store %struct.regmatch_state* %1824, %struct.regmatch_state** %prev_eval, align 8
  %1826 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  store %struct.regmatch_state* %1826, %struct.regmatch_state** %cur_eval, align 8
  %1827 = load i8*, i8** %locinput, align 8
  store i8* %1827, i8** %pushinput, align 8
  %1828 = load %struct.regnode*, %struct.regnode** %startpoint2403, align 8
  store %struct.regnode* %1828, %struct.regnode** %scan, align 8
  %1829 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state3170 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1829, i32 0, i32 0
  store i32 96, i32* %resume_state3170, align 8
  br label %push_yes_state

sw.bb3171:                                        ; preds = %cond.end45
  %1830 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3172 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1830, i32 0, i32 2
  %eval3173 = bitcast %union.anon.19* %u3172 to %struct.anon.24*
  %prev_rex3174 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3173, i32 0, i32 3
  %1831 = load %struct.p5rx*, %struct.p5rx** %prev_rex3174, align 8
  store %struct.p5rx* %1831, %struct.p5rx** %rex_sv, align 8
  %1832 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %sv_flags3175 = getelementptr inbounds %struct.p5rx, %struct.p5rx* %1832, i32 0, i32 2
  %1833 = load i32, i32* %sv_flags3175, align 4
  %and3176 = and i32 %1833, 536870912
  %tobool3177 = icmp ne i32 %and3176, 0
  %1834 = zext i1 %tobool3177 to i64
  %cond3178 = select i1 %tobool3177, i32 1, i32 0
  %tobool3179 = icmp ne i32 %cond3178, 0
  %1835 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat3180 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1835, i32 0, i32 13
  %frombool3181 = zext i1 %tobool3179 to i8
  store i8 %frombool3181, i8* %is_utf8_pat3180, align 1
  %frombool3182 = zext i1 %tobool3179 to i8
  store i8 %frombool3182, i8* %is_utf8_pat, align 1
  %1836 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval3183 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1836, i32 0, i32 8
  %1837 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval3183, align 8
  %tobool3184 = icmp ne %struct.regmatch_info_aux_eval* %1837, null
  br i1 %tobool3184, label %if.then3185, label %if.end3189

if.then3185:                                      ; preds = %sw.bb3171
  %1838 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %1839 = bitcast %struct.p5rx* %1838 to i8*
  %1840 = bitcast i8* %1839 to %struct.sv*
  %call3186 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %1840)
  %1841 = bitcast %struct.sv* %call3186 to %struct.p5rx*
  %1842 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %op_pmregexp3187 = getelementptr inbounds %struct.pmop, %struct.pmop* %1842, i32 0, i32 9
  %1843 = load %struct.p5rx*, %struct.p5rx** %op_pmregexp3187, align 8
  %1844 = bitcast %struct.p5rx* %1843 to i8*
  %1845 = bitcast i8* %1844 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %1845)
  %1846 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %1847 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %op_pmregexp3188 = getelementptr inbounds %struct.pmop, %struct.pmop* %1847, i32 0, i32 9
  store %struct.p5rx* %1846, %struct.p5rx** %op_pmregexp3188, align 8
  br label %if.end3189

if.end3189:                                       ; preds = %if.then3185, %sw.bb3171
  %1848 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %call3190 = call %struct.regexp* @S_ReANY(%struct.p5rx* %1848)
  store %struct.regexp* %call3190, %struct.regexp** %rex, align 8
  %1849 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %pprivate3191 = getelementptr inbounds %struct.regexp, %struct.regexp* %1849, i32 0, i32 14
  %1850 = load i8*, i8** %pprivate3191, align 8
  %1851 = bitcast i8* %1850 to %struct.regexp_internal*
  store %struct.regexp_internal* %1851, %struct.regexp_internal** %rexi, align 8
  %1852 = load %struct.gv*, %struct.gv** @PL_replgv, align 8
  %sv_u3192 = getelementptr inbounds %struct.gv, %struct.gv* %1852, i32 0, i32 3
  %svu_gp3193 = bitcast %union.anon.4* %sv_u3192 to %struct.gp**
  %1853 = load %struct.gp*, %struct.gp** %svu_gp3193, align 8
  %add.ptr3194 = getelementptr inbounds %struct.gp, %struct.gp* %1853, i64 0
  %gp_sv3195 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr3194, i32 0, i32 0
  %1854 = load %struct.sv*, %struct.sv** %gp_sv3195, align 8
  store %struct.sv* %1854, %struct.sv** %save_sv, align 8
  %1855 = load %struct.sv*, %struct.sv** %save_sv, align 8
  %1856 = bitcast %struct.sv* %1855 to i8*
  %1857 = bitcast i8* %1856 to %struct.sv*
  %call3196 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %1857)
  br label %do.body3197

do.body3197:                                      ; preds = %if.end3189
  %1858 = load i32, i32* @PL_savestack_ix, align 4
  %1859 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3198 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1859, i32 0, i32 2
  %eval3199 = bitcast %union.anon.19* %u3198 to %struct.anon.24*
  %cp3200 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3199, i32 0, i32 4
  %1860 = load i32, i32* %cp3200, align 8
  %cmp3201 = icmp sgt i32 %1858, %1860
  br i1 %cmp3201, label %if.then3203, label %if.end3207

if.then3203:                                      ; preds = %do.body3197
  %1861 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3204 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1861, i32 0, i32 2
  %eval3205 = bitcast %union.anon.19* %u3204 to %struct.anon.24*
  %cp3206 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3205, i32 0, i32 4
  %1862 = load i32, i32* %cp3206, align 8
  call void @Perl_leave_scope(i32 %1862)
  br label %if.end3207

if.end3207:                                       ; preds = %if.then3203, %do.body3197
  br label %do.end3208

do.end3208:                                       ; preds = %if.end3207
  %1863 = load %struct.gv*, %struct.gv** @PL_replgv, align 8
  %sv_u3209 = getelementptr inbounds %struct.gv, %struct.gv* %1863, i32 0, i32 3
  %svu_gp3210 = bitcast %union.anon.4* %sv_u3209 to %struct.gp**
  %1864 = load %struct.gp*, %struct.gp** %svu_gp3210, align 8
  %add.ptr3211 = getelementptr inbounds %struct.gp, %struct.gp* %1864, i64 0
  %gp_sv3212 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr3211, i32 0, i32 0
  %1865 = load %struct.sv*, %struct.sv** %gp_sv3212, align 8
  %1866 = load %struct.sv*, %struct.sv** %save_sv, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %1865, %struct.sv* %1866, i32 1538)
  %1867 = load %struct.sv*, %struct.sv** %save_sv, align 8
  %1868 = bitcast %struct.sv* %1867 to i8*
  %1869 = bitcast i8* %1868 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %1869)
  %1870 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3213 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1870, i32 0, i32 2
  %eval3214 = bitcast %union.anon.19* %u3213 to %struct.anon.24*
  %prev_eval3215 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3214, i32 0, i32 1
  %1871 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_eval3215, align 8
  store %struct.regmatch_state* %1871, %struct.regmatch_state** %cur_eval, align 8
  %1872 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3216 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1872, i32 0, i32 2
  %eval3217 = bitcast %union.anon.19* %u3216 to %struct.anon.24*
  %prev_curlyx3218 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3217, i32 0, i32 2
  %1873 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_curlyx3218, align 8
  store %struct.regmatch_state* %1873, %struct.regmatch_state** %cur_curlyx, align 8
  %1874 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_maxiter3219 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1874, i32 0, i32 9
  store i32 0, i32* %poscache_maxiter3219, align 8
  %1875 = load i32, i32* %nochange_depth, align 4
  %tobool3220 = icmp ne i32 %1875, 0
  br i1 %tobool3220, label %if.then3221, label %if.end3223

if.then3221:                                      ; preds = %do.end3208
  %1876 = load i32, i32* %nochange_depth, align 4
  %dec3222 = add i32 %1876, -1
  store i32 %dec3222, i32* %nochange_depth, align 4
  br label %if.end3223

if.end3223:                                       ; preds = %if.then3221, %do.end3208
  br label %yes6772

sw.bb3224:                                        ; preds = %cond.end45
  %1877 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3225 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1877, i32 0, i32 2
  %eval3226 = bitcast %union.anon.19* %u3225 to %struct.anon.24*
  %prev_rex3227 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3226, i32 0, i32 3
  %1878 = load %struct.p5rx*, %struct.p5rx** %prev_rex3227, align 8
  store %struct.p5rx* %1878, %struct.p5rx** %rex_sv, align 8
  %1879 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %sv_flags3228 = getelementptr inbounds %struct.p5rx, %struct.p5rx* %1879, i32 0, i32 2
  %1880 = load i32, i32* %sv_flags3228, align 4
  %and3229 = and i32 %1880, 536870912
  %tobool3230 = icmp ne i32 %and3229, 0
  %1881 = zext i1 %tobool3230 to i64
  %cond3231 = select i1 %tobool3230, i32 1, i32 0
  %tobool3232 = icmp ne i32 %cond3231, 0
  %1882 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat3233 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1882, i32 0, i32 13
  %frombool3234 = zext i1 %tobool3232 to i8
  store i8 %frombool3234, i8* %is_utf8_pat3233, align 1
  %frombool3235 = zext i1 %tobool3232 to i8
  store i8 %frombool3235, i8* %is_utf8_pat, align 1
  %1883 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval3236 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1883, i32 0, i32 8
  %1884 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval3236, align 8
  %tobool3237 = icmp ne %struct.regmatch_info_aux_eval* %1884, null
  br i1 %tobool3237, label %if.then3238, label %if.end3242

if.then3238:                                      ; preds = %sw.bb3224
  %1885 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %1886 = bitcast %struct.p5rx* %1885 to i8*
  %1887 = bitcast i8* %1886 to %struct.sv*
  %call3239 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %1887)
  %1888 = bitcast %struct.sv* %call3239 to %struct.p5rx*
  %1889 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %op_pmregexp3240 = getelementptr inbounds %struct.pmop, %struct.pmop* %1889, i32 0, i32 9
  %1890 = load %struct.p5rx*, %struct.p5rx** %op_pmregexp3240, align 8
  %1891 = bitcast %struct.p5rx* %1890 to i8*
  %1892 = bitcast i8* %1891 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %1892)
  %1893 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %1894 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %op_pmregexp3241 = getelementptr inbounds %struct.pmop, %struct.pmop* %1894, i32 0, i32 9
  store %struct.p5rx* %1893, %struct.p5rx** %op_pmregexp3241, align 8
  br label %if.end3242

if.end3242:                                       ; preds = %if.then3238, %sw.bb3224
  %1895 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %call3243 = call %struct.regexp* @S_ReANY(%struct.p5rx* %1895)
  store %struct.regexp* %call3243, %struct.regexp** %rex, align 8
  %1896 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %pprivate3244 = getelementptr inbounds %struct.regexp, %struct.regexp* %1896, i32 0, i32 14
  %1897 = load i8*, i8** %pprivate3244, align 8
  %1898 = bitcast i8* %1897 to %struct.regexp_internal*
  store %struct.regexp_internal* %1898, %struct.regexp_internal** %rexi, align 8
  br label %do.body3245

do.body3245:                                      ; preds = %if.end3242
  %1899 = load i32, i32* @PL_savestack_ix, align 4
  %1900 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3246 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1900, i32 0, i32 2
  %eval3247 = bitcast %union.anon.19* %u3246 to %struct.anon.24*
  %lastcp3248 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3247, i32 0, i32 5
  %1901 = load i32, i32* %lastcp3248, align 4
  %cmp3249 = icmp sgt i32 %1899, %1901
  br i1 %cmp3249, label %if.then3251, label %if.end3255

if.then3251:                                      ; preds = %do.body3245
  %1902 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3252 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1902, i32 0, i32 2
  %eval3253 = bitcast %union.anon.19* %u3252 to %struct.anon.24*
  %lastcp3254 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3253, i32 0, i32 5
  %1903 = load i32, i32* %lastcp3254, align 4
  call void @Perl_leave_scope(i32 %1903)
  br label %if.end3255

if.end3255:                                       ; preds = %if.then3251, %do.body3245
  br label %do.end3256

do.end3256:                                       ; preds = %if.end3255
  %1904 = load %struct.regexp*, %struct.regexp** %rex, align 8
  call void @S_regcppop(%struct.regexp* %1904, i32* %maxopenparen)
  %1905 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3257 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1905, i32 0, i32 2
  %eval3258 = bitcast %union.anon.19* %u3257 to %struct.anon.24*
  %prev_eval3259 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3258, i32 0, i32 1
  %1906 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_eval3259, align 8
  store %struct.regmatch_state* %1906, %struct.regmatch_state** %cur_eval, align 8
  %1907 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3260 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1907, i32 0, i32 2
  %eval3261 = bitcast %union.anon.19* %u3260 to %struct.anon.24*
  %prev_curlyx3262 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3261, i32 0, i32 2
  %1908 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_curlyx3262, align 8
  store %struct.regmatch_state* %1908, %struct.regmatch_state** %cur_curlyx, align 8
  %1909 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_maxiter3263 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1909, i32 0, i32 9
  store i32 0, i32* %poscache_maxiter3263, align 8
  %1910 = load i32, i32* %nochange_depth, align 4
  %tobool3264 = icmp ne i32 %1910, 0
  br i1 %tobool3264, label %if.then3265, label %if.end3267

if.then3265:                                      ; preds = %do.end3256
  %1911 = load i32, i32* %nochange_depth, align 4
  %dec3266 = add i32 %1911, -1
  store i32 %dec3266, i32* %nochange_depth, align 4
  br label %if.end3267

if.end3267:                                       ; preds = %if.then3265, %do.end3256
  br label %no_silent

sw.bb3268:                                        ; preds = %cond.end45
  %1912 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1913 = bitcast %struct.regnode* %1912 to %struct.regnode_1*
  %arg13269 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1913, i32 0, i32 3
  %1914 = load i32, i32* %arg13269, align 4
  store i32 %1914, i32* %n, align 4
  %1915 = load i8*, i8** %locinput, align 8
  %1916 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg3270 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1916, i32 0, i32 1
  %1917 = load i8*, i8** %strbeg3270, align 8
  %sub.ptr.lhs.cast3271 = ptrtoint i8* %1915 to i64
  %sub.ptr.rhs.cast3272 = ptrtoint i8* %1917 to i64
  %sub.ptr.sub3273 = sub i64 %sub.ptr.lhs.cast3271, %sub.ptr.rhs.cast3272
  %1918 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs3274 = getelementptr inbounds %struct.regexp, %struct.regexp* %1918, i32 0, i32 17
  %1919 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs3274, align 8
  %1920 = load i32, i32* %n, align 4
  %idxprom3275 = zext i32 %1920 to i64
  %arrayidx3276 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1919, i64 %idxprom3275
  %start_tmp = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx3276, i32 0, i32 2
  store i64 %sub.ptr.sub3273, i64* %start_tmp, align 8
  %1921 = load i32, i32* %n, align 4
  %1922 = load i32, i32* %maxopenparen, align 4
  %cmp3277 = icmp ugt i32 %1921, %1922
  br i1 %cmp3277, label %if.then3279, label %if.end3280

if.then3279:                                      ; preds = %sw.bb3268
  %1923 = load i32, i32* %n, align 4
  store i32 %1923, i32* %maxopenparen, align 4
  br label %if.end3280

if.end3280:                                       ; preds = %if.then3279, %sw.bb3268
  %1924 = load i32, i32* %n, align 4
  store i32 %1924, i32* %lastopen, align 4
  br label %sw.epilog6759

sw.bb3281:                                        ; preds = %cond.end45
  %1925 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1926 = bitcast %struct.regnode* %1925 to %struct.regnode_1*
  %arg13282 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1926, i32 0, i32 3
  %1927 = load i32, i32* %arg13282, align 4
  store i32 %1927, i32* %n, align 4
  %1928 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs3283 = getelementptr inbounds %struct.regexp, %struct.regexp* %1928, i32 0, i32 17
  %1929 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs3283, align 8
  %1930 = load i32, i32* %n, align 4
  %idxprom3284 = zext i32 %1930 to i64
  %arrayidx3285 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1929, i64 %idxprom3284
  %start_tmp3286 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx3285, i32 0, i32 2
  %1931 = load i64, i64* %start_tmp3286, align 8
  %1932 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs3287 = getelementptr inbounds %struct.regexp, %struct.regexp* %1932, i32 0, i32 17
  %1933 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs3287, align 8
  %1934 = load i32, i32* %n, align 4
  %idxprom3288 = zext i32 %1934 to i64
  %arrayidx3289 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1933, i64 %idxprom3288
  %start3290 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx3289, i32 0, i32 0
  store i64 %1931, i64* %start3290, align 8
  %1935 = load i8*, i8** %locinput, align 8
  %1936 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg3291 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1936, i32 0, i32 1
  %1937 = load i8*, i8** %strbeg3291, align 8
  %sub.ptr.lhs.cast3292 = ptrtoint i8* %1935 to i64
  %sub.ptr.rhs.cast3293 = ptrtoint i8* %1937 to i64
  %sub.ptr.sub3294 = sub i64 %sub.ptr.lhs.cast3292, %sub.ptr.rhs.cast3293
  %1938 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs3295 = getelementptr inbounds %struct.regexp, %struct.regexp* %1938, i32 0, i32 17
  %1939 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs3295, align 8
  %1940 = load i32, i32* %n, align 4
  %idxprom3296 = zext i32 %1940 to i64
  %arrayidx3297 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1939, i64 %idxprom3296
  %end3298 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx3297, i32 0, i32 1
  store i64 %sub.ptr.sub3294, i64* %end3298, align 8
  %1941 = load i32, i32* %n, align 4
  %1942 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen3299 = getelementptr inbounds %struct.regexp, %struct.regexp* %1942, i32 0, i32 15
  %1943 = load i32, i32* %lastparen3299, align 8
  %cmp3300 = icmp ugt i32 %1941, %1943
  br i1 %cmp3300, label %if.then3302, label %if.end3304

if.then3302:                                      ; preds = %sw.bb3281
  %1944 = load i32, i32* %n, align 4
  %1945 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen3303 = getelementptr inbounds %struct.regexp, %struct.regexp* %1945, i32 0, i32 15
  store i32 %1944, i32* %lastparen3303, align 8
  br label %if.end3304

if.end3304:                                       ; preds = %if.then3302, %sw.bb3281
  %1946 = load i32, i32* %n, align 4
  %1947 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen3305 = getelementptr inbounds %struct.regexp, %struct.regexp* %1947, i32 0, i32 16
  store i32 %1946, i32* %lastcloseparen3305, align 4
  %1948 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool3306 = icmp ne %struct.regmatch_state* %1948, null
  br i1 %tobool3306, label %land.lhs.true3307, label %if.end3314

land.lhs.true3307:                                ; preds = %if.end3304
  %1949 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u3308 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1949, i32 0, i32 2
  %eval3309 = bitcast %union.anon.19* %u3308 to %struct.anon.24*
  %close_paren3310 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3309, i32 0, i32 6
  %1950 = load i32, i32* %close_paren3310, align 8
  %1951 = load i32, i32* %n, align 4
  %cmp3311 = icmp eq i32 %1950, %1951
  br i1 %cmp3311, label %if.then3313, label %if.end3314

if.then3313:                                      ; preds = %land.lhs.true3307
  br label %fake_end

if.end3314:                                       ; preds = %land.lhs.true3307, %if.end3304
  br label %sw.epilog6759

sw.bb3315:                                        ; preds = %cond.end45
  %1952 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1953 = bitcast %struct.regnode* %1952 to %struct.regnode_1*
  %arg13316 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1953, i32 0, i32 3
  %1954 = load i32, i32* %arg13316, align 4
  %tobool3317 = icmp ne i32 %1954, 0
  br i1 %tobool3317, label %if.then3318, label %if.end3379

if.then3318:                                      ; preds = %sw.bb3315
  %1955 = load %struct.regnode*, %struct.regnode** %scan, align 8
  store %struct.regnode* %1955, %struct.regnode** %cursor, align 8
  br label %for.cond3319

for.cond3319:                                     ; preds = %for.inc3376, %if.then3318
  %1956 = load %struct.regnode*, %struct.regnode** %cursor, align 8
  %tobool3320 = icmp ne %struct.regnode* %1956, null
  br i1 %tobool3320, label %land.rhs3321, label %land.end3326

land.rhs3321:                                     ; preds = %for.cond3319
  %1957 = load %struct.regnode*, %struct.regnode** %cursor, align 8
  %type3322 = getelementptr inbounds %struct.regnode, %struct.regnode* %1957, i32 0, i32 1
  %1958 = load i8, i8* %type3322, align 1
  %conv3323 = zext i8 %1958 to i32
  %cmp3324 = icmp ne i32 %conv3323, 0
  br label %land.end3326

land.end3326:                                     ; preds = %land.rhs3321, %for.cond3319
  %1959 = phi i1 [ false, %for.cond3319 ], [ %cmp3324, %land.rhs3321 ]
  br i1 %1959, label %for.body3328, label %for.end3378

for.body3328:                                     ; preds = %land.end3326
  %1960 = load %struct.regnode*, %struct.regnode** %cursor, align 8
  %type3329 = getelementptr inbounds %struct.regnode, %struct.regnode* %1960, i32 0, i32 1
  %1961 = load i8, i8* %type3329, align 1
  %conv3330 = zext i8 %1961 to i32
  %cmp3331 = icmp eq i32 %conv3330, 50
  br i1 %cmp3331, label %if.then3333, label %if.end3375

if.then3333:                                      ; preds = %for.body3328
  %1962 = load %struct.regnode*, %struct.regnode** %cursor, align 8
  %1963 = bitcast %struct.regnode* %1962 to %struct.regnode_1*
  %arg13334 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1963, i32 0, i32 3
  %1964 = load i32, i32* %arg13334, align 4
  store i32 %1964, i32* %n, align 4
  %1965 = load i32, i32* %n, align 4
  %1966 = load i32, i32* %lastopen, align 4
  %cmp3335 = icmp ule i32 %1965, %1966
  br i1 %cmp3335, label %if.then3337, label %if.end3374

if.then3337:                                      ; preds = %if.then3333
  %1967 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs3338 = getelementptr inbounds %struct.regexp, %struct.regexp* %1967, i32 0, i32 17
  %1968 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs3338, align 8
  %1969 = load i32, i32* %n, align 4
  %idxprom3339 = zext i32 %1969 to i64
  %arrayidx3340 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1968, i64 %idxprom3339
  %start_tmp3341 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx3340, i32 0, i32 2
  %1970 = load i64, i64* %start_tmp3341, align 8
  %1971 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs3342 = getelementptr inbounds %struct.regexp, %struct.regexp* %1971, i32 0, i32 17
  %1972 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs3342, align 8
  %1973 = load i32, i32* %n, align 4
  %idxprom3343 = zext i32 %1973 to i64
  %arrayidx3344 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1972, i64 %idxprom3343
  %start3345 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx3344, i32 0, i32 0
  store i64 %1970, i64* %start3345, align 8
  %1974 = load i8*, i8** %locinput, align 8
  %1975 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg3346 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %1975, i32 0, i32 1
  %1976 = load i8*, i8** %strbeg3346, align 8
  %sub.ptr.lhs.cast3347 = ptrtoint i8* %1974 to i64
  %sub.ptr.rhs.cast3348 = ptrtoint i8* %1976 to i64
  %sub.ptr.sub3349 = sub i64 %sub.ptr.lhs.cast3347, %sub.ptr.rhs.cast3348
  %1977 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs3350 = getelementptr inbounds %struct.regexp, %struct.regexp* %1977, i32 0, i32 17
  %1978 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs3350, align 8
  %1979 = load i32, i32* %n, align 4
  %idxprom3351 = zext i32 %1979 to i64
  %arrayidx3352 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %1978, i64 %idxprom3351
  %end3353 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx3352, i32 0, i32 1
  store i64 %sub.ptr.sub3349, i64* %end3353, align 8
  %1980 = load i32, i32* %n, align 4
  %1981 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen3354 = getelementptr inbounds %struct.regexp, %struct.regexp* %1981, i32 0, i32 15
  %1982 = load i32, i32* %lastparen3354, align 8
  %cmp3355 = icmp ugt i32 %1980, %1982
  br i1 %cmp3355, label %if.then3357, label %if.end3359

if.then3357:                                      ; preds = %if.then3337
  %1983 = load i32, i32* %n, align 4
  %1984 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen3358 = getelementptr inbounds %struct.regexp, %struct.regexp* %1984, i32 0, i32 15
  store i32 %1983, i32* %lastparen3358, align 8
  br label %if.end3359

if.end3359:                                       ; preds = %if.then3357, %if.then3337
  %1985 = load i32, i32* %n, align 4
  %1986 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen3360 = getelementptr inbounds %struct.regexp, %struct.regexp* %1986, i32 0, i32 16
  store i32 %1985, i32* %lastcloseparen3360, align 4
  %1987 = load i32, i32* %n, align 4
  %1988 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1989 = bitcast %struct.regnode* %1988 to %struct.regnode_1*
  %arg13361 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1989, i32 0, i32 3
  %1990 = load i32, i32* %arg13361, align 4
  %cmp3362 = icmp eq i32 %1987, %1990
  br i1 %cmp3362, label %if.then3372, label %lor.lhs.false3364

lor.lhs.false3364:                                ; preds = %if.end3359
  %1991 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool3365 = icmp ne %struct.regmatch_state* %1991, null
  br i1 %tobool3365, label %land.lhs.true3366, label %if.end3373

land.lhs.true3366:                                ; preds = %lor.lhs.false3364
  %1992 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u3367 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %1992, i32 0, i32 2
  %eval3368 = bitcast %union.anon.19* %u3367 to %struct.anon.24*
  %close_paren3369 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3368, i32 0, i32 6
  %1993 = load i32, i32* %close_paren3369, align 8
  %1994 = load i32, i32* %n, align 4
  %cmp3370 = icmp eq i32 %1993, %1994
  br i1 %cmp3370, label %if.then3372, label %if.end3373

if.then3372:                                      ; preds = %land.lhs.true3366, %if.end3359
  br label %for.end3378

if.end3373:                                       ; preds = %land.lhs.true3366, %lor.lhs.false3364
  br label %if.end3374

if.end3374:                                       ; preds = %if.end3373, %if.then3333
  br label %if.end3375

if.end3375:                                       ; preds = %if.end3374, %for.body3328
  br label %for.inc3376

for.inc3376:                                      ; preds = %if.end3375
  %1995 = load %struct.regnode*, %struct.regnode** %cursor, align 8
  %call3377 = call %struct.regnode* @Perl_regnext(%struct.regnode* %1995)
  store %struct.regnode* %call3377, %struct.regnode** %cursor, align 8
  br label %for.cond3319

for.end3378:                                      ; preds = %if.then3372, %land.end3326
  br label %if.end3379

if.end3379:                                       ; preds = %for.end3378, %sw.bb3315
  br label %fake_end

sw.bb3380:                                        ; preds = %cond.end45
  %1996 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %1997 = bitcast %struct.regnode* %1996 to %struct.regnode_1*
  %arg13381 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %1997, i32 0, i32 3
  %1998 = load i32, i32* %arg13381, align 4
  store i32 %1998, i32* %n, align 4
  %1999 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen3382 = getelementptr inbounds %struct.regexp, %struct.regexp* %1999, i32 0, i32 15
  %2000 = load i32, i32* %lastparen3382, align 8
  %2001 = load i32, i32* %n, align 4
  %cmp3383 = icmp uge i32 %2000, %2001
  br i1 %cmp3383, label %land.rhs3385, label %land.end3392

land.rhs3385:                                     ; preds = %sw.bb3380
  %2002 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs3386 = getelementptr inbounds %struct.regexp, %struct.regexp* %2002, i32 0, i32 17
  %2003 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs3386, align 8
  %2004 = load i32, i32* %n, align 4
  %idxprom3387 = zext i32 %2004 to i64
  %arrayidx3388 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %2003, i64 %idxprom3387
  %end3389 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx3388, i32 0, i32 1
  %2005 = load i64, i64* %end3389, align 8
  %cmp3390 = icmp ne i64 %2005, -1
  br label %land.end3392

land.end3392:                                     ; preds = %land.rhs3385, %sw.bb3380
  %2006 = phi i1 [ false, %sw.bb3380 ], [ %cmp3390, %land.rhs3385 ]
  %2007 = zext i1 %2006 to i64
  %cond3394 = select i1 %2006, i32 1, i32 0
  %tobool3395 = icmp ne i32 %cond3394, 0
  %frombool3396 = zext i1 %tobool3395 to i8
  store i8 %frombool3396, i8* %sw, align 1
  br label %sw.epilog6759

sw.bb3397:                                        ; preds = %cond.end45
  %2008 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %2009 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %call3398 = call i32 @S_reg_check_named_buff_matched(%struct.regexp* %2008, %struct.regnode* %2009)
  %cmp3399 = icmp slt i32 0, %call3398
  %2010 = zext i1 %cmp3399 to i64
  %cond3401 = select i1 %cmp3399, i32 1, i32 0
  %tobool3402 = icmp ne i32 %cond3401, 0
  %frombool3403 = zext i1 %tobool3402 to i8
  store i8 %frombool3403, i8* %sw, align 1
  br label %sw.epilog6759

sw.bb3404:                                        ; preds = %cond.end45
  %2011 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2012 = bitcast %struct.regnode* %2011 to %struct.regnode_1*
  %arg13405 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2012, i32 0, i32 3
  %2013 = load i32, i32* %arg13405, align 4
  store i32 %2013, i32* %n, align 4
  %2014 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool3406 = icmp ne %struct.regmatch_state* %2014, null
  br i1 %tobool3406, label %land.rhs3407, label %land.end3417

land.rhs3407:                                     ; preds = %sw.bb3404
  %2015 = load i32, i32* %n, align 4
  %tobool3408 = icmp ne i32 %2015, 0
  br i1 %tobool3408, label %lor.rhs3409, label %lor.end3415

lor.rhs3409:                                      ; preds = %land.rhs3407
  %2016 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u3410 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2016, i32 0, i32 2
  %eval3411 = bitcast %union.anon.19* %u3410 to %struct.anon.24*
  %close_paren3412 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval3411, i32 0, i32 6
  %2017 = load i32, i32* %close_paren3412, align 8
  %2018 = load i32, i32* %n, align 4
  %cmp3413 = icmp eq i32 %2017, %2018
  br label %lor.end3415

lor.end3415:                                      ; preds = %lor.rhs3409, %land.rhs3407
  %2019 = phi i1 [ true, %land.rhs3407 ], [ %cmp3413, %lor.rhs3409 ]
  br label %land.end3417

land.end3417:                                     ; preds = %lor.end3415, %sw.bb3404
  %2020 = phi i1 [ false, %sw.bb3404 ], [ %2019, %lor.end3415 ]
  %frombool3419 = zext i1 %2020 to i8
  store i8 %frombool3419, i8* %sw, align 1
  br label %sw.epilog6759

sw.bb3420:                                        ; preds = %cond.end45
  store i8 0, i8* %sw, align 1
  br label %sw.epilog6759

sw.bb3421:                                        ; preds = %cond.end45
  %2021 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_maxiter3422 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2021, i32 0, i32 9
  %2022 = load i32, i32* %poscache_maxiter3422, align 8
  %2023 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_iter3423 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2023, i32 0, i32 10
  store i32 %2022, i32* %poscache_iter3423, align 4
  %2024 = load i8, i8* %sw, align 1
  %tobool3424 = trunc i8 %2024 to i1
  br i1 %tobool3424, label %if.then3425, label %if.else3428

if.then3425:                                      ; preds = %sw.bb3421
  %2025 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr3426 = getelementptr inbounds %struct.regnode, %struct.regnode* %2025, i64 1
  %add.ptr3427 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr3426, i64 1
  store %struct.regnode* %add.ptr3427, %struct.regnode** %next, align 8
  br label %if.end3440

if.else3428:                                      ; preds = %sw.bb3421
  %2026 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2027 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2028 = bitcast %struct.regnode* %2027 to %struct.regnode_1*
  %arg13429 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2028, i32 0, i32 3
  %2029 = load i32, i32* %arg13429, align 4
  %idx.ext3430 = zext i32 %2029 to i64
  %add.ptr3431 = getelementptr inbounds %struct.regnode, %struct.regnode* %2026, i64 %idx.ext3430
  store %struct.regnode* %add.ptr3431, %struct.regnode** %next, align 8
  %2030 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type3432 = getelementptr inbounds %struct.regnode, %struct.regnode* %2030, i32 0, i32 1
  %2031 = load i8, i8* %type3432, align 1
  %conv3433 = zext i8 %2031 to i32
  %cmp3434 = icmp eq i32 %conv3433, 66
  br i1 %cmp3434, label %if.then3436, label %if.end3439

if.then3436:                                      ; preds = %if.else3428
  %2032 = load %struct.regnode*, %struct.regnode** %next, align 8
  %add.ptr3437 = getelementptr inbounds %struct.regnode, %struct.regnode* %2032, i64 1
  %add.ptr3438 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr3437, i64 1
  store %struct.regnode* %add.ptr3438, %struct.regnode** %next, align 8
  br label %if.end3439

if.end3439:                                       ; preds = %if.then3436, %if.else3428
  br label %if.end3440

if.end3440:                                       ; preds = %if.end3439, %if.then3425
  br label %sw.epilog6759

sw.bb3441:                                        ; preds = %cond.end45
  %2033 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags3442 = getelementptr inbounds %struct.regnode, %struct.regnode* %2033, i32 0, i32 0
  %2034 = load i8, i8* %flags3442, align 2
  %conv3443 = zext i8 %2034 to i32
  store i32 %conv3443, i32* %logical, align 4
  br label %sw.epilog6759

sw.bb3444:                                        ; preds = %cond.end45
  %2035 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags3445 = getelementptr inbounds %struct.regnode, %struct.regnode* %2035, i32 0, i32 0
  %2036 = load i8, i8* %flags3445, align 2
  %conv3446 = zext i8 %2036 to i32
  store i32 %conv3446, i32* %parenfloor, align 4
  %2037 = load %struct.regnode*, %struct.regnode** %next, align 8
  %add.ptr3447 = getelementptr inbounds %struct.regnode, %struct.regnode* %2037, i64 -1
  %type3448 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr3447, i32 0, i32 1
  %2038 = load i8, i8* %type3448, align 1
  %conv3449 = zext i8 %2038 to i32
  %cmp3450 = icmp eq i32 %conv3449, 40
  br i1 %cmp3450, label %if.then3452, label %if.end3456

if.then3452:                                      ; preds = %sw.bb3444
  %2039 = load %struct.regnode*, %struct.regnode** %next, align 8
  %2040 = bitcast %struct.regnode* %2039 to %struct.regnode_1*
  %arg13453 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2040, i32 0, i32 3
  %2041 = load i32, i32* %arg13453, align 4
  %2042 = load %struct.regnode*, %struct.regnode** %next, align 8
  %idx.ext3454 = zext i32 %2041 to i64
  %add.ptr3455 = getelementptr inbounds %struct.regnode, %struct.regnode* %2042, i64 %idx.ext3454
  store %struct.regnode* %add.ptr3455, %struct.regnode** %next, align 8
  br label %if.end3456

if.end3456:                                       ; preds = %if.then3452, %sw.bb3444
  %2043 = load i32, i32* %parenfloor, align 4
  %2044 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen3457 = getelementptr inbounds %struct.regexp, %struct.regexp* %2044, i32 0, i32 15
  %2045 = load i32, i32* %lastparen3457, align 8
  %cmp3458 = icmp sgt i32 %2043, %2045
  br i1 %cmp3458, label %if.then3460, label %if.end3462

if.then3460:                                      ; preds = %if.end3456
  %2046 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen3461 = getelementptr inbounds %struct.regexp, %struct.regexp* %2046, i32 0, i32 15
  %2047 = load i32, i32* %lastparen3461, align 8
  store i32 %2047, i32* %parenfloor, align 4
  br label %if.end3462

if.end3462:                                       ; preds = %if.then3460, %if.end3456
  %2048 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %2049 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3463 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2049, i32 0, i32 2
  %curlyx = bitcast %union.anon.19* %u3463 to %struct.anon.28*
  %prev_curlyx3464 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx, i32 0, i32 1
  store %struct.regmatch_state* %2048, %struct.regmatch_state** %prev_curlyx3464, align 8
  %2050 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  store %struct.regmatch_state* %2050, %struct.regmatch_state** %cur_curlyx, align 8
  %2051 = load i32, i32* @PL_savestack_ix, align 4
  %2052 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3465 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2052, i32 0, i32 2
  %curlyx3466 = bitcast %union.anon.19* %u3465 to %struct.anon.28*
  %cp3467 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3466, i32 0, i32 4
  store i32 %2051, i32* %cp3467, align 8
  %2053 = load i32, i32* %parenfloor, align 4
  %2054 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3468 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2054, i32 0, i32 2
  %curlyx3469 = bitcast %union.anon.19* %u3468 to %struct.anon.28*
  %parenfloor3470 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3469, i32 0, i32 6
  store i32 %2053, i32* %parenfloor3470, align 8
  %2055 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2056 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3471 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2056, i32 0, i32 2
  %curlyx3472 = bitcast %union.anon.19* %u3471 to %struct.anon.28*
  %me3473 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3472, i32 0, i32 2
  store %struct.regnode* %2055, %struct.regnode** %me3473, align 8
  %2057 = load %struct.regnode*, %struct.regnode** %next, align 8
  %2058 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3474 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2058, i32 0, i32 2
  %curlyx3475 = bitcast %union.anon.19* %u3474 to %struct.anon.28*
  %B3476 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3475, i32 0, i32 3
  store %struct.regnode* %2057, %struct.regnode** %B3476, align 8
  %2059 = load i8, i8* %minmod, align 1
  %tobool3477 = trunc i8 %2059 to i1
  %2060 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3478 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2060, i32 0, i32 2
  %curlyx3479 = bitcast %union.anon.19* %u3478 to %struct.anon.28*
  %minmod3480 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3479, i32 0, i32 5
  %frombool3481 = zext i1 %tobool3477 to i8
  store i8 %frombool3481, i8* %minmod3480, align 4
  store i8 0, i8* %minmod, align 1
  %2061 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3482 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2061, i32 0, i32 2
  %curlyx3483 = bitcast %union.anon.19* %u3482 to %struct.anon.28*
  %count = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3483, i32 0, i32 7
  store i32 -1, i32* %count, align 4
  %2062 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3484 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2062, i32 0, i32 2
  %curlyx3485 = bitcast %union.anon.19* %u3484 to %struct.anon.28*
  %lastloc = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3485, i32 0, i32 8
  store i8* null, i8** %lastloc, align 8
  %2063 = load i8*, i8** %locinput, align 8
  store i8* %2063, i8** %pushinput, align 8
  %2064 = load %struct.regnode*, %struct.regnode** %next, align 8
  %add.ptr3486 = getelementptr inbounds %struct.regnode, %struct.regnode* %2064, i64 -1
  store %struct.regnode* %add.ptr3486, %struct.regnode** %scan, align 8
  %2065 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state3487 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2065, i32 0, i32 0
  store i32 98, i32* %resume_state3487, align 8
  br label %push_yes_state

sw.bb3488:                                        ; preds = %cond.end45
  %2066 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3489 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2066, i32 0, i32 2
  %curlyx3490 = bitcast %union.anon.19* %u3489 to %struct.anon.28*
  %prev_curlyx3491 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3490, i32 0, i32 1
  %2067 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_curlyx3491, align 8
  store %struct.regmatch_state* %2067, %struct.regmatch_state** %cur_curlyx, align 8
  br label %yes6772

sw.bb3492:                                        ; preds = %cond.end45
  br label %do.body3493

do.body3493:                                      ; preds = %sw.bb3492
  %2068 = load i32, i32* @PL_savestack_ix, align 4
  %2069 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3494 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2069, i32 0, i32 2
  %curlyx3495 = bitcast %union.anon.19* %u3494 to %struct.anon.28*
  %cp3496 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3495, i32 0, i32 4
  %2070 = load i32, i32* %cp3496, align 8
  %cmp3497 = icmp sgt i32 %2068, %2070
  br i1 %cmp3497, label %if.then3499, label %if.end3503

if.then3499:                                      ; preds = %do.body3493
  %2071 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3500 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2071, i32 0, i32 2
  %curlyx3501 = bitcast %union.anon.19* %u3500 to %struct.anon.28*
  %cp3502 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3501, i32 0, i32 4
  %2072 = load i32, i32* %cp3502, align 8
  call void @Perl_leave_scope(i32 %2072)
  br label %if.end3503

if.end3503:                                       ; preds = %if.then3499, %do.body3493
  br label %do.end3504

do.end3504:                                       ; preds = %if.end3503
  %2073 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3505 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2073, i32 0, i32 2
  %curlyx3506 = bitcast %union.anon.19* %u3505 to %struct.anon.28*
  %prev_curlyx3507 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3506, i32 0, i32 1
  %2074 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_curlyx3507, align 8
  store %struct.regmatch_state* %2074, %struct.regmatch_state** %cur_curlyx, align 8
  br label %no

sw.bb3508:                                        ; preds = %cond.end45
  %2075 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3511 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2075, i32 0, i32 2
  %curlyx3512 = bitcast %union.anon.19* %u3511 to %struct.anon.28*
  %me3513 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3512, i32 0, i32 2
  %2076 = load %struct.regnode*, %struct.regnode** %me3513, align 8
  %2077 = bitcast %struct.regnode* %2076 to %struct.regnode_2*
  %arg13514 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2077, i32 0, i32 3
  %2078 = load i16, i16* %arg13514, align 2
  %conv3515 = zext i16 %2078 to i32
  store i32 %conv3515, i32* %min3510, align 4
  %2079 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3516 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2079, i32 0, i32 2
  %curlyx3517 = bitcast %union.anon.19* %u3516 to %struct.anon.28*
  %me3518 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3517, i32 0, i32 2
  %2080 = load %struct.regnode*, %struct.regnode** %me3518, align 8
  %2081 = bitcast %struct.regnode* %2080 to %struct.regnode_2*
  %arg23519 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2081, i32 0, i32 4
  %2082 = load i16, i16* %arg23519, align 2
  %conv3520 = zext i16 %2082 to i32
  store i32 %conv3520, i32* %max, align 4
  %2083 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3521 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2083, i32 0, i32 2
  %curlyx3522 = bitcast %union.anon.19* %u3521 to %struct.anon.28*
  %me3523 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3522, i32 0, i32 2
  %2084 = load %struct.regnode*, %struct.regnode** %me3523, align 8
  %add.ptr3524 = getelementptr inbounds %struct.regnode, %struct.regnode* %2084, i64 1
  %add.ptr3525 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr3524, i64 1
  store %struct.regnode* %add.ptr3525, %struct.regnode** %A, align 8
  %2085 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3526 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2085, i32 0, i32 2
  %curlyx3527 = bitcast %union.anon.19* %u3526 to %struct.anon.28*
  %count3528 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3527, i32 0, i32 7
  %2086 = load i32, i32* %count3528, align 4
  %inc3529 = add nsw i32 %2086, 1
  store i32 %inc3529, i32* %count3528, align 4
  store i32 %inc3529, i32* %n3509, align 4
  %2087 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3530 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2087, i32 0, i32 2
  %curlyx3531 = bitcast %union.anon.19* %u3530 to %struct.anon.28*
  %lastloc3532 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3531, i32 0, i32 8
  %2088 = load i8*, i8** %lastloc3532, align 8
  %2089 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3533 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2089, i32 0, i32 2
  %whilem = bitcast %union.anon.19* %u3533 to %struct.anon.29*
  %save_lastloc = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem, i32 0, i32 4
  store i8* %2088, i8** %save_lastloc, align 8
  %2090 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3534 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2090, i32 0, i32 2
  %whilem3535 = bitcast %union.anon.19* %u3534 to %struct.anon.29*
  %cache_offset = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3535, i32 0, i32 5
  store i32 0, i32* %cache_offset, align 8
  %2091 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3536 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2091, i32 0, i32 2
  %whilem3537 = bitcast %union.anon.19* %u3536 to %struct.anon.29*
  %cache_mask = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3537, i32 0, i32 6
  store i32 0, i32* %cache_mask, align 4
  %2092 = load i32, i32* %n3509, align 4
  %2093 = load i32, i32* %min3510, align 4
  %cmp3538 = icmp slt i32 %2092, %2093
  br i1 %cmp3538, label %if.then3540, label %if.end3555

if.then3540:                                      ; preds = %sw.bb3508
  %2094 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %2095 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3541 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2095, i32 0, i32 2
  %curlyx3542 = bitcast %union.anon.19* %u3541 to %struct.anon.28*
  %parenfloor3543 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3542, i32 0, i32 6
  %2096 = load i32, i32* %parenfloor3543, align 8
  %2097 = load i32, i32* %maxopenparen, align 4
  %call3544 = call i32 @S_regcppush(%struct.regexp* %2094, i32 %2096, i32 %2097)
  %2098 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3545 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2098, i32 0, i32 2
  %whilem3546 = bitcast %union.anon.19* %u3545 to %struct.anon.29*
  %cp3547 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3546, i32 0, i32 2
  store i32 %call3544, i32* %cp3547, align 8
  %2099 = load i8*, i8** %locinput, align 8
  %2100 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3548 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2100, i32 0, i32 2
  %curlyx3549 = bitcast %union.anon.19* %u3548 to %struct.anon.28*
  %lastloc3550 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3549, i32 0, i32 8
  store i8* %2099, i8** %lastloc3550, align 8
  %2101 = load i32, i32* @PL_savestack_ix, align 4
  %2102 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3551 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2102, i32 0, i32 2
  %whilem3552 = bitcast %union.anon.19* %u3551 to %struct.anon.29*
  %lastcp3553 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3552, i32 0, i32 3
  store i32 %2101, i32* %lastcp3553, align 4
  %2103 = load i8*, i8** %locinput, align 8
  store i8* %2103, i8** %pushinput, align 8
  %2104 = load %struct.regnode*, %struct.regnode** %A, align 8
  store %struct.regnode* %2104, %struct.regnode** %scan, align 8
  %2105 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state3554 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2105, i32 0, i32 0
  store i32 100, i32* %resume_state3554, align 8
  br label %push_state

if.end3555:                                       ; preds = %sw.bb3508
  %2106 = load i8*, i8** %locinput, align 8
  %2107 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3556 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2107, i32 0, i32 2
  %curlyx3557 = bitcast %union.anon.19* %u3556 to %struct.anon.28*
  %lastloc3558 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3557, i32 0, i32 8
  %2108 = load i8*, i8** %lastloc3558, align 8
  %cmp3559 = icmp eq i8* %2106, %2108
  br i1 %cmp3559, label %if.then3561, label %if.end3562

if.then3561:                                      ; preds = %if.end3555
  br label %do_whilem_B_max

if.end3562:                                       ; preds = %if.end3555
  %2109 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags3563 = getelementptr inbounds %struct.regnode, %struct.regnode* %2109, i32 0, i32 0
  %2110 = load i8, i8* %flags3563, align 2
  %tobool3564 = icmp ne i8 %2110, 0
  br i1 %tobool3564, label %if.then3565, label %if.end3659

if.then3565:                                      ; preds = %if.end3562
  %2111 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_maxiter3566 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2111, i32 0, i32 9
  %2112 = load i32, i32* %poscache_maxiter3566, align 8
  %tobool3567 = icmp ne i32 %2112, 0
  br i1 %tobool3567, label %if.end3590, label %if.then3568

if.then3568:                                      ; preds = %if.then3565
  %2113 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend3569 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2113, i32 0, i32 2
  %2114 = load i8*, i8** %strend3569, align 8
  %2115 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg3570 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2115, i32 0, i32 1
  %2116 = load i8*, i8** %strbeg3570, align 8
  %sub.ptr.lhs.cast3571 = ptrtoint i8* %2114 to i64
  %sub.ptr.rhs.cast3572 = ptrtoint i8* %2116 to i64
  %sub.ptr.sub3573 = sub i64 %sub.ptr.lhs.cast3571, %sub.ptr.rhs.cast3572
  %add3574 = add nsw i64 %sub.ptr.sub3573, 1
  %2117 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags3575 = getelementptr inbounds %struct.regnode, %struct.regnode* %2117, i32 0, i32 0
  %2118 = load i8, i8* %flags3575, align 2
  %conv3576 = zext i8 %2118 to i32
  %shr3577 = ashr i32 %conv3576, 4
  %conv3578 = sext i32 %shr3577 to i64
  %mul3579 = mul nsw i64 %add3574, %conv3578
  %conv3580 = trunc i64 %mul3579 to i32
  %2119 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_maxiter3581 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2119, i32 0, i32 9
  store i32 %conv3580, i32* %poscache_maxiter3581, align 8
  %2120 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_maxiter3582 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2120, i32 0, i32 9
  %2121 = load i32, i32* %poscache_maxiter3582, align 8
  %cmp3583 = icmp slt i32 %2121, 0
  br i1 %cmp3583, label %if.then3585, label %if.end3587

if.then3585:                                      ; preds = %if.then3568
  %2122 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_maxiter3586 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2122, i32 0, i32 9
  store i32 2147483647, i32* %poscache_maxiter3586, align 8
  br label %if.end3587

if.end3587:                                       ; preds = %if.then3585, %if.then3568
  %2123 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_maxiter3588 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2123, i32 0, i32 9
  %2124 = load i32, i32* %poscache_maxiter3588, align 8
  %2125 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_iter3589 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2125, i32 0, i32 10
  store i32 %2124, i32* %poscache_iter3589, align 4
  br label %if.end3590

if.end3590:                                       ; preds = %if.end3587, %if.then3565
  %2126 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_iter3591 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2126, i32 0, i32 10
  %2127 = load i32, i32* %poscache_iter3591, align 4
  %dec3592 = add nsw i32 %2127, -1
  store i32 %dec3592, i32* %poscache_iter3591, align 4
  %cmp3593 = icmp eq i32 %2127, 0
  br i1 %cmp3593, label %if.then3595, label %if.end3617

if.then3595:                                      ; preds = %if.end3590
  %2128 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_maxiter3596 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2128, i32 0, i32 9
  %2129 = load i32, i32* %poscache_maxiter3596, align 8
  %add3597 = add nsw i32 %2129, 7
  %div = sdiv i32 %add3597, 8
  %conv3598 = sext i32 %div to i64
  store i64 %conv3598, i64* %size, align 8
  %2130 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2130, i32 0, i32 7
  %2131 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %info_aux, align 8
  store %struct.regmatch_info_aux* %2131, %struct.regmatch_info_aux** %aux, align 8
  %2132 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %aux, align 8
  %poscache = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %2132, i32 0, i32 3
  %2133 = load i8*, i8** %poscache, align 8
  %tobool3599 = icmp ne i8* %2133, null
  br i1 %tobool3599, label %if.then3600, label %if.else3612

if.then3600:                                      ; preds = %if.then3595
  %2134 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_size = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2134, i32 0, i32 11
  %2135 = load i64, i64* %poscache_size, align 8
  %2136 = load i64, i64* %size, align 8
  %cmp3601 = icmp slt i64 %2135, %2136
  br i1 %cmp3601, label %if.then3603, label %if.end3609

if.then3603:                                      ; preds = %if.then3600
  %2137 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %aux, align 8
  %poscache3604 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %2137, i32 0, i32 3
  %2138 = load i8*, i8** %poscache3604, align 8
  %2139 = load i64, i64* %size, align 8
  %mul3605 = mul i64 %2139, 1
  %call3606 = call i8* @Perl_safesysrealloc(i8* %2138, i64 %mul3605)
  %2140 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %aux, align 8
  %poscache3607 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %2140, i32 0, i32 3
  store i8* %call3606, i8** %poscache3607, align 8
  %2141 = load i64, i64* %size, align 8
  %2142 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_size3608 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2142, i32 0, i32 11
  store i64 %2141, i64* %poscache_size3608, align 8
  br label %if.end3609

if.end3609:                                       ; preds = %if.then3603, %if.then3600
  %2143 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %aux, align 8
  %poscache3610 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %2143, i32 0, i32 3
  %2144 = load i8*, i8** %poscache3610, align 8
  %2145 = load i64, i64* %size, align 8
  %mul3611 = mul i64 %2145, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %2144, i8 0, i64 %mul3611, i1 false)
  br label %if.end3616

if.else3612:                                      ; preds = %if.then3595
  %2146 = load i64, i64* %size, align 8
  %2147 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_size3613 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2147, i32 0, i32 11
  store i64 %2146, i64* %poscache_size3613, align 8
  %2148 = load i64, i64* %size, align 8
  %call3614 = call i8* @Perl_safesyscalloc(i64 %2148, i64 1)
  %2149 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %aux, align 8
  %poscache3615 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %2149, i32 0, i32 3
  store i8* %call3614, i8** %poscache3615, align 8
  br label %if.end3616

if.end3616:                                       ; preds = %if.else3612, %if.end3609
  br label %if.end3617

if.end3617:                                       ; preds = %if.end3616, %if.end3590
  %2150 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_iter3618 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2150, i32 0, i32 10
  %2151 = load i32, i32* %poscache_iter3618, align 4
  %cmp3619 = icmp slt i32 %2151, 0
  br i1 %cmp3619, label %if.then3621, label %if.end3658

if.then3621:                                      ; preds = %if.end3617
  %2152 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %poscache_iter3623 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2152, i32 0, i32 10
  store i32 -1, i32* %poscache_iter3623, align 4
  %2153 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags3624 = getelementptr inbounds %struct.regnode, %struct.regnode* %2153, i32 0, i32 0
  %2154 = load i8, i8* %flags3624, align 2
  %conv3625 = zext i8 %2154 to i32
  %and3626 = and i32 %conv3625, 15
  %sub3627 = sub nsw i32 %and3626, 1
  %conv3628 = sext i32 %sub3627 to i64
  %2155 = load i8*, i8** %locinput, align 8
  %2156 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg3629 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2156, i32 0, i32 1
  %2157 = load i8*, i8** %strbeg3629, align 8
  %sub.ptr.lhs.cast3630 = ptrtoint i8* %2155 to i64
  %sub.ptr.rhs.cast3631 = ptrtoint i8* %2157 to i64
  %sub.ptr.sub3632 = sub i64 %sub.ptr.lhs.cast3630, %sub.ptr.rhs.cast3631
  %2158 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags3633 = getelementptr inbounds %struct.regnode, %struct.regnode* %2158, i32 0, i32 0
  %2159 = load i8, i8* %flags3633, align 2
  %conv3634 = zext i8 %2159 to i32
  %shr3635 = ashr i32 %conv3634, 4
  %conv3636 = sext i32 %shr3635 to i64
  %mul3637 = mul nsw i64 %sub.ptr.sub3632, %conv3636
  %add3638 = add nsw i64 %conv3628, %mul3637
  store i64 %add3638, i64* %offset3622, align 8
  %2160 = load i64, i64* %offset3622, align 8
  %rem = srem i64 %2160, 8
  %sh_prom = trunc i64 %rem to i32
  %shl3639 = shl i32 1, %sh_prom
  %conv3640 = sext i32 %shl3639 to i64
  store i64 %conv3640, i64* %mask, align 8
  %2161 = load i64, i64* %offset3622, align 8
  %div3641 = sdiv i64 %2161, 8
  store i64 %div3641, i64* %offset3622, align 8
  %2162 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux3642 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2162, i32 0, i32 7
  %2163 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %info_aux3642, align 8
  %poscache3643 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %2163, i32 0, i32 3
  %2164 = load i8*, i8** %poscache3643, align 8
  %2165 = load i64, i64* %offset3622, align 8
  %arrayidx3644 = getelementptr inbounds i8, i8* %2164, i64 %2165
  %2166 = load i8, i8* %arrayidx3644, align 1
  %conv3645 = sext i8 %2166 to i64
  %2167 = load i64, i64* %mask, align 8
  %and3646 = and i64 %conv3645, %2167
  %tobool3647 = icmp ne i64 %and3646, 0
  br i1 %tobool3647, label %if.then3648, label %if.end3649

if.then3648:                                      ; preds = %if.then3621
  br label %no

if.end3649:                                       ; preds = %if.then3621
  %2168 = load i64, i64* %offset3622, align 8
  %conv3650 = trunc i64 %2168 to i32
  %2169 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3651 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2169, i32 0, i32 2
  %whilem3652 = bitcast %union.anon.19* %u3651 to %struct.anon.29*
  %cache_offset3653 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3652, i32 0, i32 5
  store i32 %conv3650, i32* %cache_offset3653, align 8
  %2170 = load i64, i64* %mask, align 8
  %conv3654 = trunc i64 %2170 to i32
  %2171 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3655 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2171, i32 0, i32 2
  %whilem3656 = bitcast %union.anon.19* %u3655 to %struct.anon.29*
  %cache_mask3657 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3656, i32 0, i32 6
  store i32 %conv3654, i32* %cache_mask3657, align 4
  br label %if.end3658

if.end3658:                                       ; preds = %if.end3649, %if.end3617
  br label %if.end3659

if.end3659:                                       ; preds = %if.end3658, %if.end3562
  %2172 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3660 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2172, i32 0, i32 2
  %curlyx3661 = bitcast %union.anon.19* %u3660 to %struct.anon.28*
  %minmod3662 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3661, i32 0, i32 5
  %2173 = load i8, i8* %minmod3662, align 4
  %tobool3663 = trunc i8 %2173 to i1
  br i1 %tobool3663, label %if.then3664, label %if.end3690

if.then3664:                                      ; preds = %if.end3659
  %2174 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %2175 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3665 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2175, i32 0, i32 2
  %whilem3666 = bitcast %union.anon.19* %u3665 to %struct.anon.29*
  %save_curlyx = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3666, i32 0, i32 1
  store %struct.regmatch_state* %2174, %struct.regmatch_state** %save_curlyx, align 8
  %2176 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3667 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2176, i32 0, i32 2
  %curlyx3668 = bitcast %union.anon.19* %u3667 to %struct.anon.28*
  %prev_curlyx3669 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3668, i32 0, i32 1
  %2177 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_curlyx3669, align 8
  store %struct.regmatch_state* %2177, %struct.regmatch_state** %cur_curlyx, align 8
  %2178 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %2179 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3670 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2179, i32 0, i32 2
  %whilem3671 = bitcast %union.anon.19* %u3670 to %struct.anon.29*
  %save_curlyx3672 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3671, i32 0, i32 1
  %2180 = load %struct.regmatch_state*, %struct.regmatch_state** %save_curlyx3672, align 8
  %u3673 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2180, i32 0, i32 2
  %curlyx3674 = bitcast %union.anon.19* %u3673 to %struct.anon.28*
  %parenfloor3675 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3674, i32 0, i32 6
  %2181 = load i32, i32* %parenfloor3675, align 8
  %2182 = load i32, i32* %maxopenparen, align 4
  %call3676 = call i32 @S_regcppush(%struct.regexp* %2178, i32 %2181, i32 %2182)
  %2183 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3677 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2183, i32 0, i32 2
  %whilem3678 = bitcast %union.anon.19* %u3677 to %struct.anon.29*
  %cp3679 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3678, i32 0, i32 2
  store i32 %call3676, i32* %cp3679, align 8
  %2184 = load i32, i32* @PL_savestack_ix, align 4
  %2185 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3680 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2185, i32 0, i32 2
  %whilem3681 = bitcast %union.anon.19* %u3680 to %struct.anon.29*
  %lastcp3682 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3681, i32 0, i32 3
  store i32 %2184, i32* %lastcp3682, align 4
  %2186 = load i8*, i8** %locinput, align 8
  store i8* %2186, i8** %pushinput, align 8
  %2187 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3683 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2187, i32 0, i32 2
  %whilem3684 = bitcast %union.anon.19* %u3683 to %struct.anon.29*
  %save_curlyx3685 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3684, i32 0, i32 1
  %2188 = load %struct.regmatch_state*, %struct.regmatch_state** %save_curlyx3685, align 8
  %u3686 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2188, i32 0, i32 2
  %curlyx3687 = bitcast %union.anon.19* %u3686 to %struct.anon.28*
  %B3688 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3687, i32 0, i32 3
  %2189 = load %struct.regnode*, %struct.regnode** %B3688, align 8
  store %struct.regnode* %2189, %struct.regnode** %scan, align 8
  %2190 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state3689 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2190, i32 0, i32 0
  store i32 106, i32* %resume_state3689, align 8
  br label %push_yes_state

if.end3690:                                       ; preds = %if.end3659
  %2191 = load i32, i32* %n3509, align 4
  %2192 = load i32, i32* %max, align 4
  %cmp3691 = icmp slt i32 %2191, %2192
  br i1 %cmp3691, label %if.then3693, label %if.end3708

if.then3693:                                      ; preds = %if.end3690
  %2193 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %2194 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3694 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2194, i32 0, i32 2
  %curlyx3695 = bitcast %union.anon.19* %u3694 to %struct.anon.28*
  %parenfloor3696 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3695, i32 0, i32 6
  %2195 = load i32, i32* %parenfloor3696, align 8
  %2196 = load i32, i32* %maxopenparen, align 4
  %call3697 = call i32 @S_regcppush(%struct.regexp* %2193, i32 %2195, i32 %2196)
  %2197 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3698 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2197, i32 0, i32 2
  %whilem3699 = bitcast %union.anon.19* %u3698 to %struct.anon.29*
  %cp3700 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3699, i32 0, i32 2
  store i32 %call3697, i32* %cp3700, align 8
  %2198 = load i8*, i8** %locinput, align 8
  %2199 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3701 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2199, i32 0, i32 2
  %curlyx3702 = bitcast %union.anon.19* %u3701 to %struct.anon.28*
  %lastloc3703 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3702, i32 0, i32 8
  store i8* %2198, i8** %lastloc3703, align 8
  %2200 = load i32, i32* @PL_savestack_ix, align 4
  %2201 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3704 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2201, i32 0, i32 2
  %whilem3705 = bitcast %union.anon.19* %u3704 to %struct.anon.29*
  %lastcp3706 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3705, i32 0, i32 3
  store i32 %2200, i32* %lastcp3706, align 4
  %2202 = load i8*, i8** %locinput, align 8
  store i8* %2202, i8** %pushinput, align 8
  %2203 = load %struct.regnode*, %struct.regnode** %A, align 8
  store %struct.regnode* %2203, %struct.regnode** %scan, align 8
  %2204 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state3707 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2204, i32 0, i32 0
  store i32 104, i32* %resume_state3707, align 8
  br label %push_state

if.end3708:                                       ; preds = %if.end3690
  br label %do_whilem_B_max

sw.bb3709:                                        ; preds = %cond.end45, %cond.end45
  %2205 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3710 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2205, i32 0, i32 2
  %whilem3711 = bitcast %union.anon.19* %u3710 to %struct.anon.29*
  %save_curlyx3712 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3711, i32 0, i32 1
  %2206 = load %struct.regmatch_state*, %struct.regmatch_state** %save_curlyx3712, align 8
  store %struct.regmatch_state* %2206, %struct.regmatch_state** %cur_curlyx, align 8
  br label %yes6772

sw.bb3713:                                        ; preds = %cond.end45
  %2207 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3714 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2207, i32 0, i32 2
  %whilem3715 = bitcast %union.anon.19* %u3714 to %struct.anon.29*
  %save_curlyx3716 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3715, i32 0, i32 1
  %2208 = load %struct.regmatch_state*, %struct.regmatch_state** %save_curlyx3716, align 8
  store %struct.regmatch_state* %2208, %struct.regmatch_state** %cur_curlyx, align 8
  %2209 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3717 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2209, i32 0, i32 2
  %whilem3718 = bitcast %union.anon.19* %u3717 to %struct.anon.29*
  %save_lastloc3719 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3718, i32 0, i32 4
  %2210 = load i8*, i8** %save_lastloc3719, align 8
  %2211 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3720 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2211, i32 0, i32 2
  %curlyx3721 = bitcast %union.anon.19* %u3720 to %struct.anon.28*
  %lastloc3722 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3721, i32 0, i32 8
  store i8* %2210, i8** %lastloc3722, align 8
  %2212 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3723 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2212, i32 0, i32 2
  %curlyx3724 = bitcast %union.anon.19* %u3723 to %struct.anon.28*
  %count3725 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3724, i32 0, i32 7
  %2213 = load i32, i32* %count3725, align 4
  %dec3726 = add nsw i32 %2213, -1
  store i32 %dec3726, i32* %count3725, align 4
  %2214 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3727 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2214, i32 0, i32 2
  %whilem3728 = bitcast %union.anon.19* %u3727 to %struct.anon.29*
  %cache_mask3729 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3728, i32 0, i32 6
  %2215 = load i32, i32* %cache_mask3729, align 4
  %tobool3730 = icmp ne i32 %2215, 0
  br i1 %tobool3730, label %if.then3731, label %if.end3745

if.then3731:                                      ; preds = %sw.bb3713
  %2216 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3732 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2216, i32 0, i32 2
  %whilem3733 = bitcast %union.anon.19* %u3732 to %struct.anon.29*
  %cache_mask3734 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3733, i32 0, i32 6
  %2217 = load i32, i32* %cache_mask3734, align 4
  %2218 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux3735 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2218, i32 0, i32 7
  %2219 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %info_aux3735, align 8
  %poscache3736 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %2219, i32 0, i32 3
  %2220 = load i8*, i8** %poscache3736, align 8
  %2221 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3737 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2221, i32 0, i32 2
  %whilem3738 = bitcast %union.anon.19* %u3737 to %struct.anon.29*
  %cache_offset3739 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3738, i32 0, i32 5
  %2222 = load i32, i32* %cache_offset3739, align 8
  %idxprom3740 = sext i32 %2222 to i64
  %arrayidx3741 = getelementptr inbounds i8, i8* %2220, i64 %idxprom3740
  %2223 = load i8, i8* %arrayidx3741, align 1
  %conv3742 = sext i8 %2223 to i32
  %or3743 = or i32 %conv3742, %2217
  %conv3744 = trunc i32 %or3743 to i8
  store i8 %conv3744, i8* %arrayidx3741, align 1
  br label %if.end3745

if.end3745:                                       ; preds = %if.then3731, %sw.bb3713
  br label %no

sw.bb3746:                                        ; preds = %cond.end45, %cond.end45
  br label %do.body3747

do.body3747:                                      ; preds = %sw.bb3746
  %2224 = load i32, i32* @PL_savestack_ix, align 4
  %2225 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3748 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2225, i32 0, i32 2
  %whilem3749 = bitcast %union.anon.19* %u3748 to %struct.anon.29*
  %lastcp3750 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3749, i32 0, i32 3
  %2226 = load i32, i32* %lastcp3750, align 4
  %cmp3751 = icmp sgt i32 %2224, %2226
  br i1 %cmp3751, label %if.then3753, label %if.end3757

if.then3753:                                      ; preds = %do.body3747
  %2227 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3754 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2227, i32 0, i32 2
  %whilem3755 = bitcast %union.anon.19* %u3754 to %struct.anon.29*
  %lastcp3756 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3755, i32 0, i32 3
  %2228 = load i32, i32* %lastcp3756, align 4
  call void @Perl_leave_scope(i32 %2228)
  br label %if.end3757

if.end3757:                                       ; preds = %if.then3753, %do.body3747
  br label %do.end3758

do.end3758:                                       ; preds = %if.end3757
  %2229 = load %struct.regexp*, %struct.regexp** %rex, align 8
  call void @S_regcppop(%struct.regexp* %2229, i32* %maxopenparen)
  %2230 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3759 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2230, i32 0, i32 2
  %whilem3760 = bitcast %union.anon.19* %u3759 to %struct.anon.29*
  %save_lastloc3761 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3760, i32 0, i32 4
  %2231 = load i8*, i8** %save_lastloc3761, align 8
  %2232 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3762 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2232, i32 0, i32 2
  %curlyx3763 = bitcast %union.anon.19* %u3762 to %struct.anon.28*
  %lastloc3764 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3763, i32 0, i32 8
  store i8* %2231, i8** %lastloc3764, align 8
  %2233 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3765 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2233, i32 0, i32 2
  %curlyx3766 = bitcast %union.anon.19* %u3765 to %struct.anon.28*
  %count3767 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3766, i32 0, i32 7
  %2234 = load i32, i32* %count3767, align 4
  %dec3768 = add nsw i32 %2234, -1
  store i32 %dec3768, i32* %count3767, align 4
  %2235 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3769 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2235, i32 0, i32 2
  %whilem3770 = bitcast %union.anon.19* %u3769 to %struct.anon.29*
  %cache_mask3771 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3770, i32 0, i32 6
  %2236 = load i32, i32* %cache_mask3771, align 4
  %tobool3772 = icmp ne i32 %2236, 0
  br i1 %tobool3772, label %if.then3773, label %if.end3787

if.then3773:                                      ; preds = %do.end3758
  %2237 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3774 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2237, i32 0, i32 2
  %whilem3775 = bitcast %union.anon.19* %u3774 to %struct.anon.29*
  %cache_mask3776 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3775, i32 0, i32 6
  %2238 = load i32, i32* %cache_mask3776, align 4
  %2239 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux3777 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2239, i32 0, i32 7
  %2240 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %info_aux3777, align 8
  %poscache3778 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %2240, i32 0, i32 3
  %2241 = load i8*, i8** %poscache3778, align 8
  %2242 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3779 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2242, i32 0, i32 2
  %whilem3780 = bitcast %union.anon.19* %u3779 to %struct.anon.29*
  %cache_offset3781 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3780, i32 0, i32 5
  %2243 = load i32, i32* %cache_offset3781, align 8
  %idxprom3782 = sext i32 %2243 to i64
  %arrayidx3783 = getelementptr inbounds i8, i8* %2241, i64 %idxprom3782
  %2244 = load i8, i8* %arrayidx3783, align 1
  %conv3784 = sext i8 %2244 to i32
  %or3785 = or i32 %conv3784, %2238
  %conv3786 = trunc i32 %or3785 to i8
  store i8 %conv3786, i8* %arrayidx3783, align 1
  br label %if.end3787

if.end3787:                                       ; preds = %if.then3773, %do.end3758
  br label %no

sw.bb3788:                                        ; preds = %cond.end45
  br label %do.body3789

do.body3789:                                      ; preds = %sw.bb3788
  %2245 = load i32, i32* @PL_savestack_ix, align 4
  %2246 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3790 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2246, i32 0, i32 2
  %whilem3791 = bitcast %union.anon.19* %u3790 to %struct.anon.29*
  %lastcp3792 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3791, i32 0, i32 3
  %2247 = load i32, i32* %lastcp3792, align 4
  %cmp3793 = icmp sgt i32 %2245, %2247
  br i1 %cmp3793, label %if.then3795, label %if.end3799

if.then3795:                                      ; preds = %do.body3789
  %2248 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3796 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2248, i32 0, i32 2
  %whilem3797 = bitcast %union.anon.19* %u3796 to %struct.anon.29*
  %lastcp3798 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3797, i32 0, i32 3
  %2249 = load i32, i32* %lastcp3798, align 4
  call void @Perl_leave_scope(i32 %2249)
  br label %if.end3799

if.end3799:                                       ; preds = %if.then3795, %do.body3789
  br label %do.end3800

do.end3800:                                       ; preds = %if.end3799
  %2250 = load %struct.regexp*, %struct.regexp** %rex, align 8
  call void @S_regcppop(%struct.regexp* %2250, i32* %maxopenparen)
  br label %do_whilem_B_max

do_whilem_B_max:                                  ; preds = %do.end3800, %if.end3708, %if.then3561
  %2251 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3801 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2251, i32 0, i32 2
  %curlyx3802 = bitcast %union.anon.19* %u3801 to %struct.anon.28*
  %count3803 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3802, i32 0, i32 7
  %2252 = load i32, i32* %count3803, align 4
  %cmp3804 = icmp sge i32 %2252, 32767
  br i1 %cmp3804, label %land.lhs.true3806, label %if.end3813

land.lhs.true3806:                                ; preds = %do_whilem_B_max
  %call3807 = call zeroext i1 @Perl_ckwarn(i32 20)
  br i1 %call3807, label %land.lhs.true3809, label %if.end3813

land.lhs.true3809:                                ; preds = %land.lhs.true3806
  %2253 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %warned = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2253, i32 0, i32 15
  %2254 = load i8, i8* %warned, align 1
  %tobool3810 = trunc i8 %2254 to i1
  br i1 %tobool3810, label %if.end3813, label %if.then3811

if.then3811:                                      ; preds = %land.lhs.true3809
  %2255 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %warned3812 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2255, i32 0, i32 15
  store i8 1, i8* %warned3812, align 1
  call void (i32, i8*, ...) @Perl_warner(i32 20, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.14, i64 0, i64 0), i32 32766)
  br label %if.end3813

if.end3813:                                       ; preds = %if.then3811, %land.lhs.true3809, %land.lhs.true3806, %do_whilem_B_max
  %2256 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %2257 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3814 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2257, i32 0, i32 2
  %whilem3815 = bitcast %union.anon.19* %u3814 to %struct.anon.29*
  %save_curlyx3816 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3815, i32 0, i32 1
  store %struct.regmatch_state* %2256, %struct.regmatch_state** %save_curlyx3816, align 8
  %2258 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3817 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2258, i32 0, i32 2
  %curlyx3818 = bitcast %union.anon.19* %u3817 to %struct.anon.28*
  %prev_curlyx3819 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3818, i32 0, i32 1
  %2259 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_curlyx3819, align 8
  store %struct.regmatch_state* %2259, %struct.regmatch_state** %cur_curlyx, align 8
  %2260 = load i8*, i8** %locinput, align 8
  store i8* %2260, i8** %pushinput, align 8
  %2261 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3820 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2261, i32 0, i32 2
  %whilem3821 = bitcast %union.anon.19* %u3820 to %struct.anon.29*
  %save_curlyx3822 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3821, i32 0, i32 1
  %2262 = load %struct.regmatch_state*, %struct.regmatch_state** %save_curlyx3822, align 8
  %u3823 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2262, i32 0, i32 2
  %curlyx3824 = bitcast %union.anon.19* %u3823 to %struct.anon.28*
  %B3825 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3824, i32 0, i32 3
  %2263 = load %struct.regnode*, %struct.regnode** %B3825, align 8
  store %struct.regnode* %2263, %struct.regnode** %scan, align 8
  %2264 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state3826 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2264, i32 0, i32 0
  store i32 108, i32* %resume_state3826, align 8
  br label %push_yes_state

sw.bb3827:                                        ; preds = %cond.end45
  %2265 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3828 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2265, i32 0, i32 2
  %whilem3829 = bitcast %union.anon.19* %u3828 to %struct.anon.29*
  %save_curlyx3830 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3829, i32 0, i32 1
  %2266 = load %struct.regmatch_state*, %struct.regmatch_state** %save_curlyx3830, align 8
  store %struct.regmatch_state* %2266, %struct.regmatch_state** %cur_curlyx, align 8
  br label %do.body3831

do.body3831:                                      ; preds = %sw.bb3827
  %2267 = load i32, i32* @PL_savestack_ix, align 4
  %2268 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3832 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2268, i32 0, i32 2
  %whilem3833 = bitcast %union.anon.19* %u3832 to %struct.anon.29*
  %lastcp3834 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3833, i32 0, i32 3
  %2269 = load i32, i32* %lastcp3834, align 4
  %cmp3835 = icmp sgt i32 %2267, %2269
  br i1 %cmp3835, label %if.then3837, label %if.end3841

if.then3837:                                      ; preds = %do.body3831
  %2270 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3838 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2270, i32 0, i32 2
  %whilem3839 = bitcast %union.anon.19* %u3838 to %struct.anon.29*
  %lastcp3840 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3839, i32 0, i32 3
  %2271 = load i32, i32* %lastcp3840, align 4
  call void @Perl_leave_scope(i32 %2271)
  br label %if.end3841

if.end3841:                                       ; preds = %if.then3837, %do.body3831
  br label %do.end3842

do.end3842:                                       ; preds = %if.end3841
  %2272 = load %struct.regexp*, %struct.regexp** %rex, align 8
  call void @S_regcppop(%struct.regexp* %2272, i32* %maxopenparen)
  %2273 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3843 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2273, i32 0, i32 2
  %curlyx3844 = bitcast %union.anon.19* %u3843 to %struct.anon.28*
  %count3845 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3844, i32 0, i32 7
  %2274 = load i32, i32* %count3845, align 4
  %2275 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3846 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2275, i32 0, i32 2
  %curlyx3847 = bitcast %union.anon.19* %u3846 to %struct.anon.28*
  %me3848 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3847, i32 0, i32 2
  %2276 = load %struct.regnode*, %struct.regnode** %me3848, align 8
  %2277 = bitcast %struct.regnode* %2276 to %struct.regnode_2*
  %arg23849 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2277, i32 0, i32 4
  %2278 = load i16, i16* %arg23849, align 2
  %conv3850 = zext i16 %2278 to i32
  %cmp3851 = icmp sge i32 %2274, %conv3850
  br i1 %cmp3851, label %if.then3853, label %if.end3891

if.then3853:                                      ; preds = %do.end3842
  %2279 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3854 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2279, i32 0, i32 2
  %curlyx3855 = bitcast %union.anon.19* %u3854 to %struct.anon.28*
  %count3856 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3855, i32 0, i32 7
  %2280 = load i32, i32* %count3856, align 4
  %cmp3857 = icmp sge i32 %2280, 32767
  br i1 %cmp3857, label %land.lhs.true3859, label %if.end3867

land.lhs.true3859:                                ; preds = %if.then3853
  %call3860 = call zeroext i1 @Perl_ckwarn(i32 20)
  br i1 %call3860, label %land.lhs.true3862, label %if.end3867

land.lhs.true3862:                                ; preds = %land.lhs.true3859
  %2281 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %warned3863 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2281, i32 0, i32 15
  %2282 = load i8, i8* %warned3863, align 1
  %tobool3864 = trunc i8 %2282 to i1
  br i1 %tobool3864, label %if.end3867, label %if.then3865

if.then3865:                                      ; preds = %land.lhs.true3862
  %2283 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %warned3866 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2283, i32 0, i32 15
  store i8 1, i8* %warned3866, align 1
  call void (i32, i8*, ...) @Perl_warner(i32 20, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.14, i64 0, i64 0), i32 32766)
  br label %if.end3867

if.end3867:                                       ; preds = %if.then3865, %land.lhs.true3862, %land.lhs.true3859, %if.then3853
  %2284 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3868 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2284, i32 0, i32 2
  %curlyx3869 = bitcast %union.anon.19* %u3868 to %struct.anon.28*
  %count3870 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3869, i32 0, i32 7
  %2285 = load i32, i32* %count3870, align 4
  %dec3871 = add nsw i32 %2285, -1
  store i32 %dec3871, i32* %count3870, align 4
  %2286 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3872 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2286, i32 0, i32 2
  %whilem3873 = bitcast %union.anon.19* %u3872 to %struct.anon.29*
  %cache_mask3874 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3873, i32 0, i32 6
  %2287 = load i32, i32* %cache_mask3874, align 4
  %tobool3875 = icmp ne i32 %2287, 0
  br i1 %tobool3875, label %if.then3876, label %if.end3890

if.then3876:                                      ; preds = %if.end3867
  %2288 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3877 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2288, i32 0, i32 2
  %whilem3878 = bitcast %union.anon.19* %u3877 to %struct.anon.29*
  %cache_mask3879 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3878, i32 0, i32 6
  %2289 = load i32, i32* %cache_mask3879, align 4
  %2290 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux3880 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2290, i32 0, i32 7
  %2291 = load %struct.regmatch_info_aux*, %struct.regmatch_info_aux** %info_aux3880, align 8
  %poscache3881 = getelementptr inbounds %struct.regmatch_info_aux, %struct.regmatch_info_aux* %2291, i32 0, i32 3
  %2292 = load i8*, i8** %poscache3881, align 8
  %2293 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3882 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2293, i32 0, i32 2
  %whilem3883 = bitcast %union.anon.19* %u3882 to %struct.anon.29*
  %cache_offset3884 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3883, i32 0, i32 5
  %2294 = load i32, i32* %cache_offset3884, align 8
  %idxprom3885 = sext i32 %2294 to i64
  %arrayidx3886 = getelementptr inbounds i8, i8* %2292, i64 %idxprom3885
  %2295 = load i8, i8* %arrayidx3886, align 1
  %conv3887 = sext i8 %2295 to i32
  %or3888 = or i32 %conv3887, %2289
  %conv3889 = trunc i32 %or3888 to i8
  store i8 %conv3889, i8* %arrayidx3886, align 1
  br label %if.end3890

if.end3890:                                       ; preds = %if.then3876, %if.end3867
  br label %no

if.end3891:                                       ; preds = %do.end3842
  %2296 = load i8*, i8** %locinput, align 8
  %2297 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3892 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2297, i32 0, i32 2
  %curlyx3893 = bitcast %union.anon.19* %u3892 to %struct.anon.28*
  %lastloc3894 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3893, i32 0, i32 8
  store i8* %2296, i8** %lastloc3894, align 8
  %2298 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %2299 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_curlyx, align 8
  %u3895 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2299, i32 0, i32 2
  %curlyx3896 = bitcast %union.anon.19* %u3895 to %struct.anon.28*
  %parenfloor3897 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3896, i32 0, i32 6
  %2300 = load i32, i32* %parenfloor3897, align 8
  %2301 = load i32, i32* %maxopenparen, align 4
  %call3898 = call i32 @S_regcppush(%struct.regexp* %2298, i32 %2300, i32 %2301)
  %2302 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3899 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2302, i32 0, i32 2
  %whilem3900 = bitcast %union.anon.19* %u3899 to %struct.anon.29*
  %cp3901 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3900, i32 0, i32 2
  store i32 %call3898, i32* %cp3901, align 8
  %2303 = load i32, i32* @PL_savestack_ix, align 4
  %2304 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3902 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2304, i32 0, i32 2
  %whilem3903 = bitcast %union.anon.19* %u3902 to %struct.anon.29*
  %lastcp3904 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3903, i32 0, i32 3
  store i32 %2303, i32* %lastcp3904, align 4
  %2305 = load i8*, i8** %locinput, align 8
  store i8* %2305, i8** %pushinput, align 8
  %2306 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3905 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2306, i32 0, i32 2
  %whilem3906 = bitcast %union.anon.19* %u3905 to %struct.anon.29*
  %save_curlyx3907 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %whilem3906, i32 0, i32 1
  %2307 = load %struct.regmatch_state*, %struct.regmatch_state** %save_curlyx3907, align 8
  %u3908 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2307, i32 0, i32 2
  %curlyx3909 = bitcast %union.anon.19* %u3908 to %struct.anon.28*
  %me3910 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %curlyx3909, i32 0, i32 2
  %2308 = load %struct.regnode*, %struct.regnode** %me3910, align 8
  %add.ptr3911 = getelementptr inbounds %struct.regnode, %struct.regnode* %2308, i64 1
  %add.ptr3912 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr3911, i64 1
  store %struct.regnode* %add.ptr3912, %struct.regnode** %scan, align 8
  %2309 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state3913 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2309, i32 0, i32 0
  store i32 102, i32* %resume_state3913, align 8
  br label %push_state

sw.bb3914:                                        ; preds = %cond.end45
  %2310 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2311 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2312 = bitcast %struct.regnode* %2311 to %struct.regnode_1*
  %arg13915 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2312, i32 0, i32 3
  %2313 = load i32, i32* %arg13915, align 4
  %idx.ext3916 = zext i32 %2313 to i64
  %add.ptr3917 = getelementptr inbounds %struct.regnode, %struct.regnode* %2310, i64 %idx.ext3916
  store %struct.regnode* %add.ptr3917, %struct.regnode** %next, align 8
  %2314 = load %struct.regnode*, %struct.regnode** %next, align 8
  %2315 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %cmp3918 = icmp eq %struct.regnode* %2314, %2315
  br i1 %cmp3918, label %if.then3920, label %if.end3921

if.then3920:                                      ; preds = %sw.bb3914
  store %struct.regnode* null, %struct.regnode** %next, align 8
  br label %if.end3921

if.end3921:                                       ; preds = %if.then3920, %sw.bb3914
  %2316 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr3922 = getelementptr inbounds %struct.regnode, %struct.regnode* %2316, i64 1
  store %struct.regnode* %add.ptr3922, %struct.regnode** %scan, align 8
  br label %sw.bb3923

sw.bb3923:                                        ; preds = %cond.end45, %if.end3921
  %2317 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr3924 = getelementptr inbounds %struct.regnode, %struct.regnode* %2317, i64 1
  store %struct.regnode* %add.ptr3924, %struct.regnode** %scan, align 8
  %2318 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen3925 = getelementptr inbounds %struct.regexp, %struct.regexp* %2318, i32 0, i32 15
  %2319 = load i32, i32* %lastparen3925, align 8
  %2320 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3926 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2320, i32 0, i32 2
  %branch = bitcast %union.anon.19* %u3926 to %struct.anon.22*
  %lastparen3927 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %branch, i32 0, i32 1
  store i32 %2319, i32* %lastparen3927, align 8
  %2321 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen3928 = getelementptr inbounds %struct.regexp, %struct.regexp* %2321, i32 0, i32 16
  %2322 = load i32, i32* %lastcloseparen3928, align 4
  %2323 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3929 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2323, i32 0, i32 2
  %branch3930 = bitcast %union.anon.19* %u3929 to %struct.anon.22*
  %lastcloseparen3931 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %branch3930, i32 0, i32 2
  store i32 %2322, i32* %lastcloseparen3931, align 4
  %2324 = load %struct.regnode*, %struct.regnode** %next, align 8
  %2325 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3932 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2325, i32 0, i32 2
  %branch3933 = bitcast %union.anon.19* %u3932 to %struct.anon.22*
  %next_branch = getelementptr inbounds %struct.anon.22, %struct.anon.22* %branch3933, i32 0, i32 4
  store %struct.regnode* %2324, %struct.regnode** %next_branch, align 8
  %2326 = load i32, i32* @PL_savestack_ix, align 4
  %2327 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3934 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2327, i32 0, i32 2
  %branch3935 = bitcast %union.anon.19* %u3934 to %struct.anon.22*
  %cp3936 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %branch3935, i32 0, i32 3
  store i32 %2326, i32* %cp3936, align 8
  %2328 = load i8, i8* %has_cutgroup, align 1
  %tobool3937 = trunc i8 %2328 to i1
  br i1 %tobool3937, label %if.then3938, label %if.else3940

if.then3938:                                      ; preds = %sw.bb3923
  %2329 = load i8*, i8** %locinput, align 8
  store i8* %2329, i8** %pushinput, align 8
  %2330 = load %struct.regnode*, %struct.regnode** %scan, align 8
  store %struct.regnode* %2330, %struct.regnode** %scan, align 8
  %2331 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state3939 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2331, i32 0, i32 0
  store i32 110, i32* %resume_state3939, align 8
  br label %push_yes_state

if.else3940:                                      ; preds = %sw.bb3923
  %2332 = load i8*, i8** %locinput, align 8
  store i8* %2332, i8** %pushinput, align 8
  %2333 = load %struct.regnode*, %struct.regnode** %scan, align 8
  store %struct.regnode* %2333, %struct.regnode** %scan, align 8
  %2334 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state3941 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2334, i32 0, i32 0
  store i32 110, i32* %resume_state3941, align 8
  br label %push_state

sw.bb3942:                                        ; preds = %cond.end45
  %2335 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags3943 = getelementptr inbounds %struct.regnode, %struct.regnode* %2335, i32 0, i32 0
  %2336 = load i8, i8* %flags3943, align 2
  %conv3944 = zext i8 %2336 to i32
  %tobool3945 = icmp ne i32 %conv3944, 0
  br i1 %tobool3945, label %cond.true3946, label %cond.false3947

cond.true3946:                                    ; preds = %sw.bb3942
  br label %cond.end3953

cond.false3947:                                   ; preds = %sw.bb3942
  %2337 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data3948 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %2337, i32 0, i32 3
  %2338 = load %struct.reg_data*, %struct.reg_data** %data3948, align 8
  %data3949 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %2338, i32 0, i32 2
  %2339 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2340 = bitcast %struct.regnode* %2339 to %struct.regnode_1*
  %arg13950 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2340, i32 0, i32 3
  %2341 = load i32, i32* %arg13950, align 4
  %idxprom3951 = zext i32 %2341 to i64
  %arrayidx3952 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data3949, i64 0, i64 %idxprom3951
  %2342 = load i8*, i8** %arrayidx3952, align 8
  %2343 = bitcast i8* %2342 to %struct.sv*
  br label %cond.end3953

cond.end3953:                                     ; preds = %cond.false3947, %cond.true3946
  %cond3954 = phi %struct.sv* [ null, %cond.true3946 ], [ %2343, %cond.false3947 ]
  %2344 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3955 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2344, i32 0, i32 2
  %mark = bitcast %union.anon.19* %u3955 to %struct.anon.26*
  %mark_name = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark, i32 0, i32 2
  store %struct.sv* %cond3954, %struct.sv** %mark_name, align 8
  store %struct.sv* %cond3954, %struct.sv** %sv_yes_mark, align 8
  %2345 = load i8*, i8** %locinput, align 8
  store i8* %2345, i8** %pushinput, align 8
  %2346 = load %struct.regnode*, %struct.regnode** %next, align 8
  store %struct.regnode* %2346, %struct.regnode** %scan, align 8
  %2347 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state3956 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2347, i32 0, i32 0
  store i32 130, i32* %resume_state3956, align 8
  br label %push_state

sw.bb3957:                                        ; preds = %cond.end45
  store i8 1, i8* %do_cutgroup, align 1
  store i8 1, i8* %no_final, align 1
  %2348 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3958 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2348, i32 0, i32 2
  %mark3959 = bitcast %union.anon.19* %u3958 to %struct.anon.26*
  %mark_name3960 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark3959, i32 0, i32 2
  %2349 = load %struct.sv*, %struct.sv** %mark_name3960, align 8
  %tobool3961 = icmp ne %struct.sv* %2349, null
  br i1 %tobool3961, label %if.then3962, label %if.end3966

if.then3962:                                      ; preds = %sw.bb3957
  %2350 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3963 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2350, i32 0, i32 2
  %mark3964 = bitcast %union.anon.19* %u3963 to %struct.anon.26*
  %mark_name3965 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark3964, i32 0, i32 2
  %2351 = load %struct.sv*, %struct.sv** %mark_name3965, align 8
  store %struct.sv* %2351, %struct.sv** %sv_commit, align 8
  br label %if.end3966

if.end3966:                                       ; preds = %if.then3962, %sw.bb3957
  br label %no

sw.bb3967:                                        ; preds = %cond.end45
  br label %yes6772

sw.bb3968:                                        ; preds = %cond.end45
  %2352 = load i8, i8* %do_cutgroup, align 1
  %tobool3969 = trunc i8 %2352 to i1
  br i1 %tobool3969, label %if.then3970, label %if.end3971

if.then3970:                                      ; preds = %sw.bb3968
  store i8 0, i8* %do_cutgroup, align 1
  store i8 0, i8* %no_final, align 1
  br label %if.end3971

if.end3971:                                       ; preds = %if.then3970, %sw.bb3968
  br label %do.body3972

do.body3972:                                      ; preds = %if.end3971
  %2353 = load i32, i32* @PL_savestack_ix, align 4
  %2354 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3973 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2354, i32 0, i32 2
  %branch3974 = bitcast %union.anon.19* %u3973 to %struct.anon.22*
  %cp3975 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %branch3974, i32 0, i32 3
  %2355 = load i32, i32* %cp3975, align 8
  %cmp3976 = icmp sgt i32 %2353, %2355
  br i1 %cmp3976, label %if.then3978, label %if.end3982

if.then3978:                                      ; preds = %do.body3972
  %2356 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3979 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2356, i32 0, i32 2
  %branch3980 = bitcast %union.anon.19* %u3979 to %struct.anon.22*
  %cp3981 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %branch3980, i32 0, i32 3
  %2357 = load i32, i32* %cp3981, align 8
  call void @Perl_leave_scope(i32 %2357)
  br label %if.end3982

if.end3982:                                       ; preds = %if.then3978, %do.body3972
  br label %do.end3983

do.end3983:                                       ; preds = %if.end3982
  %2358 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen3984 = getelementptr inbounds %struct.regexp, %struct.regexp* %2358, i32 0, i32 15
  %2359 = load i32, i32* %lastparen3984, align 8
  store i32 %2359, i32* %n, align 4
  br label %for.cond3985

for.cond3985:                                     ; preds = %for.inc3996, %do.end3983
  %2360 = load i32, i32* %n, align 4
  %2361 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u3986 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2361, i32 0, i32 2
  %branch3987 = bitcast %union.anon.19* %u3986 to %struct.anon.22*
  %lastparen3988 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %branch3987, i32 0, i32 1
  %2362 = load i32, i32* %lastparen3988, align 8
  %cmp3989 = icmp ugt i32 %2360, %2362
  br i1 %cmp3989, label %for.body3991, label %for.end3998

for.body3991:                                     ; preds = %for.cond3985
  %2363 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs3992 = getelementptr inbounds %struct.regexp, %struct.regexp* %2363, i32 0, i32 17
  %2364 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs3992, align 8
  %2365 = load i32, i32* %n, align 4
  %idxprom3993 = zext i32 %2365 to i64
  %arrayidx3994 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %2364, i64 %idxprom3993
  %end3995 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx3994, i32 0, i32 1
  store i64 -1, i64* %end3995, align 8
  br label %for.inc3996

for.inc3996:                                      ; preds = %for.body3991
  %2366 = load i32, i32* %n, align 4
  %dec3997 = add i32 %2366, -1
  store i32 %dec3997, i32* %n, align 4
  br label %for.cond3985

for.end3998:                                      ; preds = %for.cond3985
  %2367 = load i32, i32* %n, align 4
  %2368 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen3999 = getelementptr inbounds %struct.regexp, %struct.regexp* %2368, i32 0, i32 15
  store i32 %2367, i32* %lastparen3999, align 8
  %2369 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4000 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2369, i32 0, i32 2
  %branch4001 = bitcast %union.anon.19* %u4000 to %struct.anon.22*
  %lastcloseparen4002 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %branch4001, i32 0, i32 2
  %2370 = load i32, i32* %lastcloseparen4002, align 4
  %2371 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen4003 = getelementptr inbounds %struct.regexp, %struct.regexp* %2371, i32 0, i32 16
  store i32 %2370, i32* %lastcloseparen4003, align 4
  %2372 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4004 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2372, i32 0, i32 2
  %branch4005 = bitcast %union.anon.19* %u4004 to %struct.anon.22*
  %next_branch4006 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %branch4005, i32 0, i32 4
  %2373 = load %struct.regnode*, %struct.regnode** %next_branch4006, align 8
  store %struct.regnode* %2373, %struct.regnode** %scan, align 8
  %2374 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %tobool4007 = icmp ne %struct.regnode* %2374, null
  br i1 %tobool4007, label %lor.lhs.false4008, label %if.then4018

lor.lhs.false4008:                                ; preds = %for.end3998
  %2375 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type4009 = getelementptr inbounds %struct.regnode, %struct.regnode* %2375, i32 0, i32 1
  %2376 = load i8, i8* %type4009, align 1
  %conv4010 = zext i8 %2376 to i32
  %cmp4011 = icmp ne i32 %conv4010, 30
  br i1 %cmp4011, label %land.lhs.true4013, label %if.end4019

land.lhs.true4013:                                ; preds = %lor.lhs.false4008
  %2377 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type4014 = getelementptr inbounds %struct.regnode, %struct.regnode* %2377, i32 0, i32 1
  %2378 = load i8, i8* %type4014, align 1
  %conv4015 = zext i8 %2378 to i32
  %cmp4016 = icmp ne i32 %conv4015, 62
  br i1 %cmp4016, label %if.then4018, label %if.end4019

if.then4018:                                      ; preds = %land.lhs.true4013, %for.end3998
  br label %no_silent

if.end4019:                                       ; preds = %land.lhs.true4013, %lor.lhs.false4008
  br label %while.cond

sw.bb4020:                                        ; preds = %cond.end45
  store i8 1, i8* %minmod, align 1
  br label %sw.epilog6759

sw.bb4021:                                        ; preds = %cond.end45
  %2379 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2380 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4022 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2380, i32 0, i32 2
  %curlym = bitcast %union.anon.19* %u4022 to %struct.anon.30*
  %me4023 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym, i32 0, i32 11
  store %struct.regnode* %2379, %struct.regnode** %me4023, align 8
  %2381 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr4024 = getelementptr inbounds %struct.regnode, %struct.regnode* %2381, i64 1
  %add.ptr4025 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr4024, i64 1
  store %struct.regnode* %add.ptr4025, %struct.regnode** %scan, align 8
  %2382 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen4026 = getelementptr inbounds %struct.regexp, %struct.regexp* %2382, i32 0, i32 15
  %2383 = load i32, i32* %lastparen4026, align 8
  %2384 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4027 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2384, i32 0, i32 2
  %curlym4028 = bitcast %union.anon.19* %u4027 to %struct.anon.30*
  %lastparen4029 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4028, i32 0, i32 4
  store i32 %2383, i32* %lastparen4029, align 4
  %2385 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen4030 = getelementptr inbounds %struct.regexp, %struct.regexp* %2385, i32 0, i32 16
  %2386 = load i32, i32* %lastcloseparen4030, align 4
  %2387 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4031 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2387, i32 0, i32 2
  %curlym4032 = bitcast %union.anon.19* %u4031 to %struct.anon.30*
  %lastcloseparen4033 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4032, i32 0, i32 5
  store i32 %2386, i32* %lastcloseparen4033, align 8
  %2388 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4034 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2388, i32 0, i32 2
  %curlym4035 = bitcast %union.anon.19* %u4034 to %struct.anon.30*
  %me4036 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4035, i32 0, i32 11
  %2389 = load %struct.regnode*, %struct.regnode** %me4036, align 8
  %flags4037 = getelementptr inbounds %struct.regnode, %struct.regnode* %2389, i32 0, i32 0
  %2390 = load i8, i8* %flags4037, align 2
  %tobool4038 = icmp ne i8 %2390, 0
  br i1 %tobool4038, label %if.then4039, label %if.end4053

if.then4039:                                      ; preds = %sw.bb4021
  %2391 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4040 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2391, i32 0, i32 2
  %curlym4041 = bitcast %union.anon.19* %u4040 to %struct.anon.30*
  %me4042 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4041, i32 0, i32 11
  %2392 = load %struct.regnode*, %struct.regnode** %me4042, align 8
  %flags4043 = getelementptr inbounds %struct.regnode, %struct.regnode* %2392, i32 0, i32 0
  %2393 = load i8, i8* %flags4043, align 2
  %conv4044 = zext i8 %2393 to i32
  store i32 %conv4044, i32* %paren, align 4
  %2394 = load i32, i32* %paren, align 4
  %2395 = load i32, i32* %maxopenparen, align 4
  %cmp4045 = icmp ugt i32 %2394, %2395
  br i1 %cmp4045, label %if.then4047, label %if.end4048

if.then4047:                                      ; preds = %if.then4039
  %2396 = load i32, i32* %paren, align 4
  store i32 %2396, i32* %maxopenparen, align 4
  br label %if.end4048

if.end4048:                                       ; preds = %if.then4047, %if.then4039
  %2397 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %next_off4049 = getelementptr inbounds %struct.regnode, %struct.regnode* %2397, i32 0, i32 2
  %2398 = load i16, i16* %next_off4049, align 2
  %conv4050 = zext i16 %2398 to i32
  %2399 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %idx.ext4051 = sext i32 %conv4050 to i64
  %add.ptr4052 = getelementptr inbounds %struct.regnode, %struct.regnode* %2399, i64 %idx.ext4051
  store %struct.regnode* %add.ptr4052, %struct.regnode** %scan, align 8
  br label %if.end4053

if.end4053:                                       ; preds = %if.end4048, %sw.bb4021
  %2400 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2401 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4054 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2401, i32 0, i32 2
  %curlym4055 = bitcast %union.anon.19* %u4054 to %struct.anon.30*
  %A4056 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4055, i32 0, i32 9
  store %struct.regnode* %2400, %struct.regnode** %A4056, align 8
  %2402 = load %struct.regnode*, %struct.regnode** %next, align 8
  %2403 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4057 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2403, i32 0, i32 2
  %curlym4058 = bitcast %union.anon.19* %u4057 to %struct.anon.30*
  %B4059 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4058, i32 0, i32 10
  store %struct.regnode* %2402, %struct.regnode** %B4059, align 8
  %2404 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4060 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2404, i32 0, i32 2
  %curlym4061 = bitcast %union.anon.19* %u4060 to %struct.anon.30*
  %alen = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4061, i32 0, i32 6
  store i32 0, i32* %alen, align 4
  %2405 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4062 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2405, i32 0, i32 2
  %curlym4063 = bitcast %union.anon.19* %u4062 to %struct.anon.30*
  %count4064 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4063, i32 0, i32 7
  store i32 0, i32* %count4064, align 8
  %2406 = load i8, i8* %minmod, align 1
  %tobool4065 = trunc i8 %2406 to i1
  %2407 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4066 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2407, i32 0, i32 2
  %curlym4067 = bitcast %union.anon.19* %u4066 to %struct.anon.30*
  %minmod4068 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4067, i32 0, i32 8
  %frombool4069 = zext i1 %tobool4065 to i8
  store i8 %frombool4069, i8* %minmod4068, align 4
  store i8 0, i8* %minmod, align 1
  %2408 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4070 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2408, i32 0, i32 2
  %curlym4071 = bitcast %union.anon.19* %u4070 to %struct.anon.30*
  %c1 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4071, i32 0, i32 1
  store i32 -1001, i32* %c1, align 8
  %2409 = load i32, i32* @PL_savestack_ix, align 4
  %2410 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4072 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2410, i32 0, i32 2
  %curlym4073 = bitcast %union.anon.19* %u4072 to %struct.anon.30*
  %cp4074 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4073, i32 0, i32 3
  store i32 %2409, i32* %cp4074, align 8
  %2411 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4075 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2411, i32 0, i32 2
  %curlym4076 = bitcast %union.anon.19* %u4075 to %struct.anon.30*
  %minmod4077 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4076, i32 0, i32 8
  %2412 = load i8, i8* %minmod4077, align 4
  %tobool4078 = trunc i8 %2412 to i1
  br i1 %tobool4078, label %cond.true4080, label %cond.false4087

cond.true4080:                                    ; preds = %if.end4053
  %2413 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4081 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2413, i32 0, i32 2
  %curlym4082 = bitcast %union.anon.19* %u4081 to %struct.anon.30*
  %me4083 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4082, i32 0, i32 11
  %2414 = load %struct.regnode*, %struct.regnode** %me4083, align 8
  %2415 = bitcast %struct.regnode* %2414 to %struct.regnode_2*
  %arg14084 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2415, i32 0, i32 3
  %2416 = load i16, i16* %arg14084, align 2
  %conv4085 = zext i16 %2416 to i32
  %tobool4086 = icmp ne i32 %conv4085, 0
  br i1 %tobool4086, label %if.end4095, label %if.then4094

cond.false4087:                                   ; preds = %if.end4053
  %2417 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4088 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2417, i32 0, i32 2
  %curlym4089 = bitcast %union.anon.19* %u4088 to %struct.anon.30*
  %me4090 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4089, i32 0, i32 11
  %2418 = load %struct.regnode*, %struct.regnode** %me4090, align 8
  %2419 = bitcast %struct.regnode* %2418 to %struct.regnode_2*
  %arg24091 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2419, i32 0, i32 4
  %2420 = load i16, i16* %arg24091, align 2
  %conv4092 = zext i16 %2420 to i32
  %tobool4093 = icmp ne i32 %conv4092, 0
  br i1 %tobool4093, label %if.end4095, label %if.then4094

if.then4094:                                      ; preds = %cond.false4087, %cond.true4080
  br label %curlym_do_B

if.end4095:                                       ; preds = %cond.false4087, %cond.true4080
  br label %curlym_do_A

curlym_do_A:                                      ; preds = %if.end4765, %if.then4217, %if.end4095
  %2421 = load i8*, i8** %locinput, align 8
  store i8* %2421, i8** %pushinput, align 8
  %2422 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4096 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2422, i32 0, i32 2
  %curlym4097 = bitcast %union.anon.19* %u4096 to %struct.anon.30*
  %A4098 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4097, i32 0, i32 9
  %2423 = load %struct.regnode*, %struct.regnode** %A4098, align 8
  store %struct.regnode* %2423, %struct.regnode** %scan, align 8
  %2424 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state4099 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2424, i32 0, i32 0
  store i32 112, i32* %resume_state4099, align 8
  br label %push_yes_state

sw.bb4100:                                        ; preds = %cond.end45
  %2425 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4101 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2425, i32 0, i32 2
  %curlym4102 = bitcast %union.anon.19* %u4101 to %struct.anon.30*
  %count4103 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4102, i32 0, i32 7
  %2426 = load i32, i32* %count4103, align 8
  %inc4104 = add nsw i32 %2426, 1
  store i32 %inc4104, i32* %count4103, align 8
  %2427 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4105 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2427, i32 0, i32 2
  %curlym4106 = bitcast %union.anon.19* %u4105 to %struct.anon.30*
  %count4107 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4106, i32 0, i32 7
  %2428 = load i32, i32* %count4107, align 8
  %cmp4108 = icmp eq i32 %2428, 1
  br i1 %cmp4108, label %if.then4110, label %if.end4169

if.then4110:                                      ; preds = %sw.bb4100
  %2429 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target4111 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2429, i32 0, i32 14
  %2430 = load i8, i8* %is_utf8_target4111, align 2
  %tobool4112 = trunc i8 %2430 to i1
  br i1 %tobool4112, label %if.then4113, label %if.else4130

if.then4113:                                      ; preds = %if.then4110
  %2431 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %locinput4115 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2431, i32 0, i32 1
  %2432 = load i8*, i8** %locinput4115, align 8
  store i8* %2432, i8** %s4114, align 8
  br label %while.cond4116

while.cond4116:                                   ; preds = %while.body4119, %if.then4113
  %2433 = load i8*, i8** %s4114, align 8
  %2434 = load i8*, i8** %locinput, align 8
  %cmp4117 = icmp ult i8* %2433, %2434
  br i1 %cmp4117, label %while.body4119, label %while.end4129

while.body4119:                                   ; preds = %while.cond4116
  %2435 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4120 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2435, i32 0, i32 2
  %curlym4121 = bitcast %union.anon.19* %u4120 to %struct.anon.30*
  %alen4122 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4121, i32 0, i32 6
  %2436 = load i32, i32* %alen4122, align 4
  %inc4123 = add nsw i32 %2436, 1
  store i32 %inc4123, i32* %alen4122, align 4
  %2437 = load i8*, i8** %s4114, align 8
  %2438 = load i8, i8* %2437, align 1
  %idxprom4124 = zext i8 %2438 to i64
  %arrayidx4125 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom4124
  %2439 = load i8, i8* %arrayidx4125, align 1
  %conv4126 = zext i8 %2439 to i32
  %2440 = load i8*, i8** %s4114, align 8
  %idx.ext4127 = sext i32 %conv4126 to i64
  %add.ptr4128 = getelementptr inbounds i8, i8* %2440, i64 %idx.ext4127
  store i8* %add.ptr4128, i8** %s4114, align 8
  br label %while.cond4116

while.end4129:                                    ; preds = %while.cond4116
  br label %if.end4139

if.else4130:                                      ; preds = %if.then4110
  %2441 = load i8*, i8** %locinput, align 8
  %2442 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %locinput4131 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2442, i32 0, i32 1
  %2443 = load i8*, i8** %locinput4131, align 8
  %sub.ptr.lhs.cast4132 = ptrtoint i8* %2441 to i64
  %sub.ptr.rhs.cast4133 = ptrtoint i8* %2443 to i64
  %sub.ptr.sub4134 = sub i64 %sub.ptr.lhs.cast4132, %sub.ptr.rhs.cast4133
  %conv4135 = trunc i64 %sub.ptr.sub4134 to i32
  %2444 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4136 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2444, i32 0, i32 2
  %curlym4137 = bitcast %union.anon.19* %u4136 to %struct.anon.30*
  %alen4138 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4137, i32 0, i32 6
  store i32 %conv4135, i32* %alen4138, align 4
  br label %if.end4139

if.end4139:                                       ; preds = %if.else4130, %while.end4129
  %2445 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4140 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2445, i32 0, i32 2
  %curlym4141 = bitcast %union.anon.19* %u4140 to %struct.anon.30*
  %alen4142 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4141, i32 0, i32 6
  %2446 = load i32, i32* %alen4142, align 4
  %cmp4143 = icmp eq i32 %2446, 0
  br i1 %cmp4143, label %if.then4145, label %if.end4168

if.then4145:                                      ; preds = %if.end4139
  %2447 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4146 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2447, i32 0, i32 2
  %curlym4147 = bitcast %union.anon.19* %u4146 to %struct.anon.30*
  %minmod4148 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4147, i32 0, i32 8
  %2448 = load i8, i8* %minmod4148, align 4
  %tobool4149 = trunc i8 %2448 to i1
  br i1 %tobool4149, label %cond.true4151, label %cond.false4157

cond.true4151:                                    ; preds = %if.then4145
  %2449 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4152 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2449, i32 0, i32 2
  %curlym4153 = bitcast %union.anon.19* %u4152 to %struct.anon.30*
  %me4154 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4153, i32 0, i32 11
  %2450 = load %struct.regnode*, %struct.regnode** %me4154, align 8
  %2451 = bitcast %struct.regnode* %2450 to %struct.regnode_2*
  %arg14155 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2451, i32 0, i32 3
  %2452 = load i16, i16* %arg14155, align 2
  %conv4156 = zext i16 %2452 to i32
  br label %cond.end4163

cond.false4157:                                   ; preds = %if.then4145
  %2453 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4158 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2453, i32 0, i32 2
  %curlym4159 = bitcast %union.anon.19* %u4158 to %struct.anon.30*
  %me4160 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4159, i32 0, i32 11
  %2454 = load %struct.regnode*, %struct.regnode** %me4160, align 8
  %2455 = bitcast %struct.regnode* %2454 to %struct.regnode_2*
  %arg24161 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2455, i32 0, i32 4
  %2456 = load i16, i16* %arg24161, align 2
  %conv4162 = zext i16 %2456 to i32
  br label %cond.end4163

cond.end4163:                                     ; preds = %cond.false4157, %cond.true4151
  %cond4164 = phi i32 [ %conv4156, %cond.true4151 ], [ %conv4162, %cond.false4157 ]
  %2457 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4165 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2457, i32 0, i32 2
  %curlym4166 = bitcast %union.anon.19* %u4165 to %struct.anon.30*
  %count4167 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4166, i32 0, i32 7
  store i32 %cond4164, i32* %count4167, align 8
  br label %if.end4168

if.end4168:                                       ; preds = %cond.end4163, %if.end4139
  br label %if.end4169

if.end4169:                                       ; preds = %if.end4168, %sw.bb4100
  %2458 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool4170 = icmp ne %struct.regmatch_state* %2458, null
  br i1 %tobool4170, label %land.lhs.true4171, label %if.end4188

land.lhs.true4171:                                ; preds = %if.end4169
  %2459 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u4172 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2459, i32 0, i32 2
  %eval4173 = bitcast %union.anon.19* %u4172 to %struct.anon.24*
  %close_paren4174 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval4173, i32 0, i32 6
  %2460 = load i32, i32* %close_paren4174, align 8
  %tobool4175 = icmp ne i32 %2460, 0
  br i1 %tobool4175, label %land.lhs.true4176, label %if.end4188

land.lhs.true4176:                                ; preds = %land.lhs.true4171
  %2461 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u4177 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2461, i32 0, i32 2
  %eval4178 = bitcast %union.anon.19* %u4177 to %struct.anon.24*
  %close_paren4179 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval4178, i32 0, i32 6
  %2462 = load i32, i32* %close_paren4179, align 8
  %2463 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4180 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2463, i32 0, i32 2
  %curlym4181 = bitcast %union.anon.19* %u4180 to %struct.anon.30*
  %me4182 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4181, i32 0, i32 11
  %2464 = load %struct.regnode*, %struct.regnode** %me4182, align 8
  %flags4183 = getelementptr inbounds %struct.regnode, %struct.regnode* %2464, i32 0, i32 0
  %2465 = load i8, i8* %flags4183, align 2
  %conv4184 = zext i8 %2465 to i32
  %cmp4185 = icmp eq i32 %2462, %conv4184
  br i1 %cmp4185, label %if.then4187, label %if.end4188

if.then4187:                                      ; preds = %land.lhs.true4176
  br label %fake_end

if.end4188:                                       ; preds = %land.lhs.true4176, %land.lhs.true4171, %if.end4169
  %2466 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4190 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2466, i32 0, i32 2
  %curlym4191 = bitcast %union.anon.19* %u4190 to %struct.anon.30*
  %minmod4192 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4191, i32 0, i32 8
  %2467 = load i8, i8* %minmod4192, align 4
  %tobool4193 = trunc i8 %2467 to i1
  br i1 %tobool4193, label %cond.true4195, label %cond.false4201

cond.true4195:                                    ; preds = %if.end4188
  %2468 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4196 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2468, i32 0, i32 2
  %curlym4197 = bitcast %union.anon.19* %u4196 to %struct.anon.30*
  %me4198 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4197, i32 0, i32 11
  %2469 = load %struct.regnode*, %struct.regnode** %me4198, align 8
  %2470 = bitcast %struct.regnode* %2469 to %struct.regnode_2*
  %arg14199 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2470, i32 0, i32 3
  %2471 = load i16, i16* %arg14199, align 2
  %conv4200 = zext i16 %2471 to i32
  br label %cond.end4207

cond.false4201:                                   ; preds = %if.end4188
  %2472 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4202 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2472, i32 0, i32 2
  %curlym4203 = bitcast %union.anon.19* %u4202 to %struct.anon.30*
  %me4204 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4203, i32 0, i32 11
  %2473 = load %struct.regnode*, %struct.regnode** %me4204, align 8
  %2474 = bitcast %struct.regnode* %2473 to %struct.regnode_2*
  %arg24205 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2474, i32 0, i32 4
  %2475 = load i16, i16* %arg24205, align 2
  %conv4206 = zext i16 %2475 to i32
  br label %cond.end4207

cond.end4207:                                     ; preds = %cond.false4201, %cond.true4195
  %cond4208 = phi i32 [ %conv4200, %cond.true4195 ], [ %conv4206, %cond.false4201 ]
  store i32 %cond4208, i32* %max4189, align 4
  %2476 = load i32, i32* %max4189, align 4
  %cmp4209 = icmp eq i32 %2476, 32767
  br i1 %cmp4209, label %if.then4217, label %lor.lhs.false4211

lor.lhs.false4211:                                ; preds = %cond.end4207
  %2477 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4212 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2477, i32 0, i32 2
  %curlym4213 = bitcast %union.anon.19* %u4212 to %struct.anon.30*
  %count4214 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4213, i32 0, i32 7
  %2478 = load i32, i32* %count4214, align 8
  %2479 = load i32, i32* %max4189, align 4
  %cmp4215 = icmp slt i32 %2478, %2479
  br i1 %cmp4215, label %if.then4217, label %if.end4218

if.then4217:                                      ; preds = %lor.lhs.false4211, %cond.end4207
  br label %curlym_do_A

if.end4218:                                       ; preds = %lor.lhs.false4211
  br label %curlym_do_B

sw.bb4219:                                        ; preds = %cond.end45
  br label %do.body4220

do.body4220:                                      ; preds = %sw.bb4219
  %2480 = load i32, i32* @PL_savestack_ix, align 4
  %2481 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4221 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2481, i32 0, i32 2
  %curlym4222 = bitcast %union.anon.19* %u4221 to %struct.anon.30*
  %cp4223 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4222, i32 0, i32 3
  %2482 = load i32, i32* %cp4223, align 8
  %cmp4224 = icmp sgt i32 %2480, %2482
  br i1 %cmp4224, label %if.then4226, label %if.end4230

if.then4226:                                      ; preds = %do.body4220
  %2483 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4227 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2483, i32 0, i32 2
  %curlym4228 = bitcast %union.anon.19* %u4227 to %struct.anon.30*
  %cp4229 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4228, i32 0, i32 3
  %2484 = load i32, i32* %cp4229, align 8
  call void @Perl_leave_scope(i32 %2484)
  br label %if.end4230

if.end4230:                                       ; preds = %if.then4226, %do.body4220
  br label %do.end4231

do.end4231:                                       ; preds = %if.end4230
  %2485 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4232 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2485, i32 0, i32 2
  %curlym4233 = bitcast %union.anon.19* %u4232 to %struct.anon.30*
  %minmod4234 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4233, i32 0, i32 8
  %2486 = load i8, i8* %minmod4234, align 4
  %tobool4235 = trunc i8 %2486 to i1
  br i1 %tobool4235, label %if.then4266, label %lor.lhs.false4237

lor.lhs.false4237:                                ; preds = %do.end4231
  %2487 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4238 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2487, i32 0, i32 2
  %curlym4239 = bitcast %union.anon.19* %u4238 to %struct.anon.30*
  %count4240 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4239, i32 0, i32 7
  %2488 = load i32, i32* %count4240, align 8
  %2489 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4241 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2489, i32 0, i32 2
  %curlym4242 = bitcast %union.anon.19* %u4241 to %struct.anon.30*
  %me4243 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4242, i32 0, i32 11
  %2490 = load %struct.regnode*, %struct.regnode** %me4243, align 8
  %2491 = bitcast %struct.regnode* %2490 to %struct.regnode_2*
  %arg14244 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2491, i32 0, i32 3
  %2492 = load i16, i16* %arg14244, align 2
  %conv4245 = zext i16 %2492 to i32
  %cmp4246 = icmp slt i32 %2488, %conv4245
  br i1 %cmp4246, label %if.then4266, label %lor.lhs.false4248

lor.lhs.false4248:                                ; preds = %lor.lhs.false4237
  %2493 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool4249 = icmp ne %struct.regmatch_state* %2493, null
  br i1 %tobool4249, label %land.lhs.true4250, label %if.end4267

land.lhs.true4250:                                ; preds = %lor.lhs.false4248
  %2494 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u4251 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2494, i32 0, i32 2
  %eval4252 = bitcast %union.anon.19* %u4251 to %struct.anon.24*
  %close_paren4253 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval4252, i32 0, i32 6
  %2495 = load i32, i32* %close_paren4253, align 8
  %tobool4254 = icmp ne i32 %2495, 0
  br i1 %tobool4254, label %land.lhs.true4255, label %if.end4267

land.lhs.true4255:                                ; preds = %land.lhs.true4250
  %2496 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u4256 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2496, i32 0, i32 2
  %eval4257 = bitcast %union.anon.19* %u4256 to %struct.anon.24*
  %close_paren4258 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval4257, i32 0, i32 6
  %2497 = load i32, i32* %close_paren4258, align 8
  %2498 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4259 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2498, i32 0, i32 2
  %curlym4260 = bitcast %union.anon.19* %u4259 to %struct.anon.30*
  %me4261 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4260, i32 0, i32 11
  %2499 = load %struct.regnode*, %struct.regnode** %me4261, align 8
  %flags4262 = getelementptr inbounds %struct.regnode, %struct.regnode* %2499, i32 0, i32 0
  %2500 = load i8, i8* %flags4262, align 2
  %conv4263 = zext i8 %2500 to i32
  %cmp4264 = icmp eq i32 %2497, %conv4263
  br i1 %cmp4264, label %if.then4266, label %if.end4267

if.then4266:                                      ; preds = %land.lhs.true4255, %lor.lhs.false4237, %do.end4231
  br label %no

if.end4267:                                       ; preds = %land.lhs.true4255, %land.lhs.true4250, %lor.lhs.false4248
  br label %curlym_do_B

curlym_do_B:                                      ; preds = %cond.end4820, %if.end4267, %if.end4218, %if.then4094
  %2501 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4268 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2501, i32 0, i32 2
  %curlym4269 = bitcast %union.anon.19* %u4268 to %struct.anon.30*
  %c14270 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4269, i32 0, i32 1
  %2502 = load i32, i32* %c14270, align 8
  %cmp4271 = icmp eq i32 %2502, -1001
  br i1 %cmp4271, label %if.then4273, label %if.end4551

if.then4273:                                      ; preds = %curlym_do_B
  %2503 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4274 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2503, i32 0, i32 2
  %curlym4275 = bitcast %union.anon.19* %u4274 to %struct.anon.30*
  %c2 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4275, i32 0, i32 2
  store i32 -1000, i32* %c2, align 4
  %2504 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4276 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2504, i32 0, i32 2
  %curlym4277 = bitcast %union.anon.19* %u4276 to %struct.anon.30*
  %c14278 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4277, i32 0, i32 1
  store i32 -1000, i32* %c14278, align 8
  %2505 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4279 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2505, i32 0, i32 2
  %curlym4280 = bitcast %union.anon.19* %u4279 to %struct.anon.30*
  %B4281 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4280, i32 0, i32 10
  %2506 = load %struct.regnode*, %struct.regnode** %B4281, align 8
  %type4282 = getelementptr inbounds %struct.regnode, %struct.regnode* %2506, i32 0, i32 1
  %2507 = load i8, i8* %type4282, align 1
  %idxprom4283 = zext i8 %2507 to i64
  %arrayidx4284 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom4283
  %2508 = load i8, i8* %arrayidx4284, align 1
  %conv4285 = zext i8 %2508 to i32
  %cmp4286 = icmp eq i32 %conv4285, 31
  br i1 %cmp4286, label %if.then4392, label %lor.lhs.false4288

lor.lhs.false4288:                                ; preds = %if.then4273
  %2509 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4289 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2509, i32 0, i32 2
  %curlym4290 = bitcast %union.anon.19* %u4289 to %struct.anon.30*
  %B4291 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4290, i32 0, i32 10
  %2510 = load %struct.regnode*, %struct.regnode** %B4291, align 8
  %type4292 = getelementptr inbounds %struct.regnode, %struct.regnode* %2510, i32 0, i32 1
  %2511 = load i8, i8* %type4292, align 1
  %idxprom4293 = zext i8 %2511 to i64
  %arrayidx4294 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom4293
  %2512 = load i8, i8* %arrayidx4294, align 1
  %conv4295 = zext i8 %2512 to i32
  %cmp4296 = icmp eq i32 %conv4295, 51
  br i1 %cmp4296, label %if.then4392, label %lor.lhs.false4298

lor.lhs.false4298:                                ; preds = %lor.lhs.false4288
  %2513 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4299 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2513, i32 0, i32 2
  %curlym4300 = bitcast %union.anon.19* %u4299 to %struct.anon.30*
  %B4301 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4300, i32 0, i32 10
  %2514 = load %struct.regnode*, %struct.regnode** %B4301, align 8
  %type4302 = getelementptr inbounds %struct.regnode, %struct.regnode* %2514, i32 0, i32 1
  %2515 = load i8, i8* %type4302, align 1
  %conv4303 = zext i8 %2515 to i32
  %cmp4304 = icmp eq i32 %conv4303, 49
  br i1 %cmp4304, label %if.then4392, label %lor.lhs.false4306

lor.lhs.false4306:                                ; preds = %lor.lhs.false4298
  %2516 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4307 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2516, i32 0, i32 2
  %curlym4308 = bitcast %union.anon.19* %u4307 to %struct.anon.30*
  %B4309 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4308, i32 0, i32 10
  %2517 = load %struct.regnode*, %struct.regnode** %B4309, align 8
  %type4310 = getelementptr inbounds %struct.regnode, %struct.regnode* %2517, i32 0, i32 1
  %2518 = load i8, i8* %type4310, align 1
  %conv4311 = zext i8 %2518 to i32
  %cmp4312 = icmp eq i32 %conv4311, 50
  br i1 %cmp4312, label %land.lhs.true4314, label %lor.lhs.false4326

land.lhs.true4314:                                ; preds = %lor.lhs.false4306
  %2519 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool4315 = icmp ne %struct.regmatch_state* %2519, null
  br i1 %tobool4315, label %lor.lhs.false4316, label %if.then4392

lor.lhs.false4316:                                ; preds = %land.lhs.true4314
  %2520 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u4317 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2520, i32 0, i32 2
  %eval4318 = bitcast %union.anon.19* %u4317 to %struct.anon.24*
  %close_paren4319 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval4318, i32 0, i32 6
  %2521 = load i32, i32* %close_paren4319, align 8
  %2522 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4320 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2522, i32 0, i32 2
  %curlym4321 = bitcast %union.anon.19* %u4320 to %struct.anon.30*
  %B4322 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4321, i32 0, i32 10
  %2523 = load %struct.regnode*, %struct.regnode** %B4322, align 8
  %2524 = bitcast %struct.regnode* %2523 to %struct.regnode_1*
  %arg14323 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2524, i32 0, i32 3
  %2525 = load i32, i32* %arg14323, align 4
  %cmp4324 = icmp ne i32 %2521, %2525
  br i1 %cmp4324, label %if.then4392, label %lor.lhs.false4326

lor.lhs.false4326:                                ; preds = %lor.lhs.false4316, %lor.lhs.false4306
  %2526 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4327 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2526, i32 0, i32 2
  %curlym4328 = bitcast %union.anon.19* %u4327 to %struct.anon.30*
  %B4329 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4328, i32 0, i32 10
  %2527 = load %struct.regnode*, %struct.regnode** %B4329, align 8
  %type4330 = getelementptr inbounds %struct.regnode, %struct.regnode* %2527, i32 0, i32 1
  %2528 = load i8, i8* %type4330, align 1
  %conv4331 = zext i8 %2528 to i32
  %cmp4332 = icmp eq i32 %conv4331, 68
  br i1 %cmp4332, label %if.then4392, label %lor.lhs.false4334

lor.lhs.false4334:                                ; preds = %lor.lhs.false4326
  %2529 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4335 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2529, i32 0, i32 2
  %curlym4336 = bitcast %union.anon.19* %u4335 to %struct.anon.30*
  %B4337 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4336, i32 0, i32 10
  %2530 = load %struct.regnode*, %struct.regnode** %B4337, align 8
  %type4338 = getelementptr inbounds %struct.regnode, %struct.regnode* %2530, i32 0, i32 1
  %2531 = load i8, i8* %type4338, align 1
  %conv4339 = zext i8 %2531 to i32
  %cmp4340 = icmp eq i32 %conv4339, 65
  br i1 %cmp4340, label %if.then4392, label %lor.lhs.false4342

lor.lhs.false4342:                                ; preds = %lor.lhs.false4334
  %2532 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4343 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2532, i32 0, i32 2
  %curlym4344 = bitcast %union.anon.19* %u4343 to %struct.anon.30*
  %B4345 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4344, i32 0, i32 10
  %2533 = load %struct.regnode*, %struct.regnode** %B4345, align 8
  %type4346 = getelementptr inbounds %struct.regnode, %struct.regnode* %2533, i32 0, i32 1
  %2534 = load i8, i8* %type4346, align 1
  %conv4347 = zext i8 %2534 to i32
  %cmp4348 = icmp eq i32 %conv4347, 63
  br i1 %cmp4348, label %if.then4392, label %lor.lhs.false4350

lor.lhs.false4350:                                ; preds = %lor.lhs.false4342
  %2535 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4351 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2535, i32 0, i32 2
  %curlym4352 = bitcast %union.anon.19* %u4351 to %struct.anon.30*
  %B4353 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4352, i32 0, i32 10
  %2536 = load %struct.regnode*, %struct.regnode** %B4353, align 8
  %type4354 = getelementptr inbounds %struct.regnode, %struct.regnode* %2536, i32 0, i32 1
  %2537 = load i8, i8* %type4354, align 1
  %conv4355 = zext i8 %2537 to i32
  %cmp4356 = icmp eq i32 %conv4355, 43
  br i1 %cmp4356, label %if.then4392, label %lor.lhs.false4358

lor.lhs.false4358:                                ; preds = %lor.lhs.false4350
  %2538 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4359 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2538, i32 0, i32 2
  %curlym4360 = bitcast %union.anon.19* %u4359 to %struct.anon.30*
  %B4361 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4360, i32 0, i32 10
  %2539 = load %struct.regnode*, %struct.regnode** %B4361, align 8
  %type4362 = getelementptr inbounds %struct.regnode, %struct.regnode* %2539, i32 0, i32 1
  %2540 = load i8, i8* %type4362, align 1
  %conv4363 = zext i8 %2540 to i32
  %cmp4364 = icmp eq i32 %conv4363, 69
  br i1 %cmp4364, label %if.then4392, label %lor.lhs.false4366

lor.lhs.false4366:                                ; preds = %lor.lhs.false4358
  %2541 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4367 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2541, i32 0, i32 2
  %curlym4368 = bitcast %union.anon.19* %u4367 to %struct.anon.30*
  %B4369 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4368, i32 0, i32 10
  %2542 = load %struct.regnode*, %struct.regnode** %B4369, align 8
  %type4370 = getelementptr inbounds %struct.regnode, %struct.regnode* %2542, i32 0, i32 1
  %2543 = load i8, i8* %type4370, align 1
  %conv4371 = zext i8 %2543 to i32
  %cmp4372 = icmp eq i32 %conv4371, 90
  br i1 %cmp4372, label %if.then4392, label %lor.lhs.false4374

lor.lhs.false4374:                                ; preds = %lor.lhs.false4366
  %2544 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4375 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2544, i32 0, i32 2
  %curlym4376 = bitcast %union.anon.19* %u4375 to %struct.anon.30*
  %B4377 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4376, i32 0, i32 10
  %2545 = load %struct.regnode*, %struct.regnode** %B4377, align 8
  %type4378 = getelementptr inbounds %struct.regnode, %struct.regnode* %2545, i32 0, i32 1
  %2546 = load i8, i8* %type4378, align 1
  %idxprom4379 = zext i8 %2546 to i64
  %arrayidx4380 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom4379
  %2547 = load i8, i8* %arrayidx4380, align 1
  %conv4381 = zext i8 %2547 to i32
  %cmp4382 = icmp eq i32 %conv4381, 44
  br i1 %cmp4382, label %land.lhs.true4384, label %if.end4550

land.lhs.true4384:                                ; preds = %lor.lhs.false4374
  %2548 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4385 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2548, i32 0, i32 2
  %curlym4386 = bitcast %union.anon.19* %u4385 to %struct.anon.30*
  %B4387 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4386, i32 0, i32 10
  %2549 = load %struct.regnode*, %struct.regnode** %B4387, align 8
  %2550 = bitcast %struct.regnode* %2549 to %struct.regnode_2*
  %arg14388 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2550, i32 0, i32 3
  %2551 = load i16, i16* %arg14388, align 2
  %conv4389 = zext i16 %2551 to i32
  %cmp4390 = icmp sgt i32 %conv4389, 0
  br i1 %cmp4390, label %if.then4392, label %if.end4550

if.then4392:                                      ; preds = %land.lhs.true4384, %lor.lhs.false4366, %lor.lhs.false4358, %lor.lhs.false4350, %lor.lhs.false4342, %lor.lhs.false4334, %lor.lhs.false4326, %lor.lhs.false4316, %land.lhs.true4314, %lor.lhs.false4298, %lor.lhs.false4288, %if.then4273
  %2552 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4393 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2552, i32 0, i32 2
  %curlym4394 = bitcast %union.anon.19* %u4393 to %struct.anon.30*
  %B4395 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4394, i32 0, i32 10
  %2553 = load %struct.regnode*, %struct.regnode** %B4395, align 8
  store %struct.regnode* %2553, %struct.regnode** %text_node, align 8
  %2554 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4396 = getelementptr inbounds %struct.regnode, %struct.regnode* %2554, i32 0, i32 1
  %2555 = load i8, i8* %type4396, align 1
  %idxprom4397 = zext i8 %2555 to i64
  %arrayidx4398 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom4397
  %2556 = load i8, i8* %arrayidx4398, align 1
  %conv4399 = zext i8 %2556 to i32
  %cmp4400 = icmp eq i32 %conv4399, 31
  br i1 %cmp4400, label %if.end4526, label %lor.lhs.false4402

lor.lhs.false4402:                                ; preds = %if.then4392
  %2557 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4403 = getelementptr inbounds %struct.regnode, %struct.regnode* %2557, i32 0, i32 1
  %2558 = load i8, i8* %type4403, align 1
  %idxprom4404 = zext i8 %2558 to i64
  %arrayidx4405 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom4404
  %2559 = load i8, i8* %arrayidx4405, align 1
  %conv4406 = zext i8 %2559 to i32
  %cmp4407 = icmp eq i32 %conv4406, 51
  br i1 %cmp4407, label %if.end4526, label %if.then4409

if.then4409:                                      ; preds = %lor.lhs.false4402
  br label %do.body4410

do.body4410:                                      ; preds = %if.then4409
  br label %while.cond4411

while.cond4411:                                   ; preds = %if.end4523, %do.body4410
  %2560 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4412 = getelementptr inbounds %struct.regnode, %struct.regnode* %2560, i32 0, i32 1
  %2561 = load i8, i8* %type4412, align 1
  %conv4413 = zext i8 %2561 to i32
  %cmp4414 = icmp eq i32 %conv4413, 49
  br i1 %cmp4414, label %lor.end4474, label %lor.lhs.false4416

lor.lhs.false4416:                                ; preds = %while.cond4411
  %2562 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4417 = getelementptr inbounds %struct.regnode, %struct.regnode* %2562, i32 0, i32 1
  %2563 = load i8, i8* %type4417, align 1
  %conv4418 = zext i8 %2563 to i32
  %cmp4419 = icmp eq i32 %conv4418, 50
  br i1 %cmp4419, label %land.lhs.true4421, label %lor.lhs.false4430

land.lhs.true4421:                                ; preds = %lor.lhs.false4416
  %2564 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool4422 = icmp ne %struct.regmatch_state* %2564, null
  br i1 %tobool4422, label %lor.lhs.false4423, label %lor.end4474

lor.lhs.false4423:                                ; preds = %land.lhs.true4421
  %2565 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u4424 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2565, i32 0, i32 2
  %eval4425 = bitcast %union.anon.19* %u4424 to %struct.anon.24*
  %close_paren4426 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval4425, i32 0, i32 6
  %2566 = load i32, i32* %close_paren4426, align 8
  %2567 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %2568 = bitcast %struct.regnode* %2567 to %struct.regnode_1*
  %arg14427 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2568, i32 0, i32 3
  %2569 = load i32, i32* %arg14427, align 4
  %cmp4428 = icmp ne i32 %2566, %2569
  br i1 %cmp4428, label %lor.end4474, label %lor.lhs.false4430

lor.lhs.false4430:                                ; preds = %lor.lhs.false4423, %lor.lhs.false4416
  %2570 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4431 = getelementptr inbounds %struct.regnode, %struct.regnode* %2570, i32 0, i32 1
  %2571 = load i8, i8* %type4431, align 1
  %conv4432 = zext i8 %2571 to i32
  %cmp4433 = icmp eq i32 %conv4432, 68
  br i1 %cmp4433, label %lor.end4474, label %lor.lhs.false4435

lor.lhs.false4435:                                ; preds = %lor.lhs.false4430
  %2572 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4436 = getelementptr inbounds %struct.regnode, %struct.regnode* %2572, i32 0, i32 1
  %2573 = load i8, i8* %type4436, align 1
  %conv4437 = zext i8 %2573 to i32
  %cmp4438 = icmp eq i32 %conv4437, 65
  br i1 %cmp4438, label %lor.end4474, label %lor.lhs.false4440

lor.lhs.false4440:                                ; preds = %lor.lhs.false4435
  %2574 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4441 = getelementptr inbounds %struct.regnode, %struct.regnode* %2574, i32 0, i32 1
  %2575 = load i8, i8* %type4441, align 1
  %conv4442 = zext i8 %2575 to i32
  %cmp4443 = icmp eq i32 %conv4442, 63
  br i1 %cmp4443, label %lor.end4474, label %lor.lhs.false4445

lor.lhs.false4445:                                ; preds = %lor.lhs.false4440
  %2576 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4446 = getelementptr inbounds %struct.regnode, %struct.regnode* %2576, i32 0, i32 1
  %2577 = load i8, i8* %type4446, align 1
  %conv4447 = zext i8 %2577 to i32
  %cmp4448 = icmp eq i32 %conv4447, 43
  br i1 %cmp4448, label %lor.end4474, label %lor.lhs.false4450

lor.lhs.false4450:                                ; preds = %lor.lhs.false4445
  %2578 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4451 = getelementptr inbounds %struct.regnode, %struct.regnode* %2578, i32 0, i32 1
  %2579 = load i8, i8* %type4451, align 1
  %conv4452 = zext i8 %2579 to i32
  %cmp4453 = icmp eq i32 %conv4452, 69
  br i1 %cmp4453, label %lor.end4474, label %lor.lhs.false4455

lor.lhs.false4455:                                ; preds = %lor.lhs.false4450
  %2580 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4456 = getelementptr inbounds %struct.regnode, %struct.regnode* %2580, i32 0, i32 1
  %2581 = load i8, i8* %type4456, align 1
  %conv4457 = zext i8 %2581 to i32
  %cmp4458 = icmp eq i32 %conv4457, 90
  br i1 %cmp4458, label %lor.end4474, label %lor.rhs4460

lor.rhs4460:                                      ; preds = %lor.lhs.false4455
  %2582 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4461 = getelementptr inbounds %struct.regnode, %struct.regnode* %2582, i32 0, i32 1
  %2583 = load i8, i8* %type4461, align 1
  %idxprom4462 = zext i8 %2583 to i64
  %arrayidx4463 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom4462
  %2584 = load i8, i8* %arrayidx4463, align 1
  %conv4464 = zext i8 %2584 to i32
  %cmp4465 = icmp eq i32 %conv4464, 44
  br i1 %cmp4465, label %land.rhs4467, label %land.end4472

land.rhs4467:                                     ; preds = %lor.rhs4460
  %2585 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %2586 = bitcast %struct.regnode* %2585 to %struct.regnode_2*
  %arg14468 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2586, i32 0, i32 3
  %2587 = load i16, i16* %arg14468, align 2
  %conv4469 = zext i16 %2587 to i32
  %cmp4470 = icmp sgt i32 %conv4469, 0
  br label %land.end4472

land.end4472:                                     ; preds = %land.rhs4467, %lor.rhs4460
  %2588 = phi i1 [ false, %lor.rhs4460 ], [ %cmp4470, %land.rhs4467 ]
  br label %lor.end4474

lor.end4474:                                      ; preds = %land.end4472, %lor.lhs.false4455, %lor.lhs.false4450, %lor.lhs.false4445, %lor.lhs.false4440, %lor.lhs.false4435, %lor.lhs.false4430, %lor.lhs.false4423, %land.lhs.true4421, %while.cond4411
  %2589 = phi i1 [ true, %lor.lhs.false4455 ], [ true, %lor.lhs.false4450 ], [ true, %lor.lhs.false4445 ], [ true, %lor.lhs.false4440 ], [ true, %lor.lhs.false4435 ], [ true, %lor.lhs.false4430 ], [ true, %lor.lhs.false4423 ], [ true, %land.lhs.true4421 ], [ true, %while.cond4411 ], [ %2588, %land.end4472 ]
  br i1 %2589, label %while.body4476, label %while.end4524

while.body4476:                                   ; preds = %lor.end4474
  %2590 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4478 = getelementptr inbounds %struct.regnode, %struct.regnode* %2590, i32 0, i32 1
  %2591 = load i8, i8* %type4478, align 1
  %conv4479 = zext i8 %2591 to i16
  store i16 %conv4479, i16* %type4477, align 2
  %2592 = load i16, i16* %type4477, align 2
  %conv4480 = zext i16 %2592 to i32
  %cmp4481 = icmp eq i32 %conv4480, 65
  br i1 %cmp4481, label %if.then4489, label %lor.lhs.false4483

lor.lhs.false4483:                                ; preds = %while.body4476
  %2593 = load i16, i16* %type4477, align 2
  %idxprom4484 = zext i16 %2593 to i64
  %arrayidx4485 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom4484
  %2594 = load i8, i8* %arrayidx4485, align 1
  %conv4486 = zext i8 %2594 to i32
  %cmp4487 = icmp eq i32 %conv4486, 44
  br i1 %cmp4487, label %if.then4489, label %if.else4492

if.then4489:                                      ; preds = %lor.lhs.false4483, %while.body4476
  %2595 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %add.ptr4490 = getelementptr inbounds %struct.regnode, %struct.regnode* %2595, i64 1
  %add.ptr4491 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr4490, i64 1
  store %struct.regnode* %add.ptr4491, %struct.regnode** %text_node, align 8
  br label %if.end4523

if.else4492:                                      ; preds = %lor.lhs.false4483
  %2596 = load i16, i16* %type4477, align 2
  %conv4493 = zext i16 %2596 to i32
  %cmp4494 = icmp eq i32 %conv4493, 43
  br i1 %cmp4494, label %if.then4496, label %if.else4498

if.then4496:                                      ; preds = %if.else4492
  %2597 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %add.ptr4497 = getelementptr inbounds %struct.regnode, %struct.regnode* %2597, i64 1
  store %struct.regnode* %add.ptr4497, %struct.regnode** %text_node, align 8
  br label %if.end4522

if.else4498:                                      ; preds = %if.else4492
  %2598 = load i16, i16* %type4477, align 2
  %conv4499 = zext i16 %2598 to i32
  %cmp4500 = icmp eq i32 %conv4499, 63
  br i1 %cmp4500, label %if.then4502, label %if.else4516

if.then4502:                                      ; preds = %if.else4498
  %2599 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %flags4503 = getelementptr inbounds %struct.regnode, %struct.regnode* %2599, i32 0, i32 0
  %2600 = load i8, i8* %flags4503, align 2
  %conv4504 = zext i8 %2600 to i32
  %cmp4505 = icmp eq i32 %conv4504, 0
  br i1 %cmp4505, label %cond.true4507, label %cond.false4510

cond.true4507:                                    ; preds = %if.then4502
  %2601 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %add.ptr4508 = getelementptr inbounds %struct.regnode, %struct.regnode* %2601, i64 1
  %add.ptr4509 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr4508, i64 1
  br label %cond.end4514

cond.false4510:                                   ; preds = %if.then4502
  %2602 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %2603 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %2604 = bitcast %struct.regnode* %2603 to %struct.regnode_1*
  %arg14511 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2604, i32 0, i32 3
  %2605 = load i32, i32* %arg14511, align 4
  %idx.ext4512 = zext i32 %2605 to i64
  %add.ptr4513 = getelementptr inbounds %struct.regnode, %struct.regnode* %2602, i64 %idx.ext4512
  br label %cond.end4514

cond.end4514:                                     ; preds = %cond.false4510, %cond.true4507
  %cond4515 = phi %struct.regnode* [ %add.ptr4509, %cond.true4507 ], [ %add.ptr4513, %cond.false4510 ]
  store %struct.regnode* %cond4515, %struct.regnode** %text_node, align 8
  br label %if.end4521

if.else4516:                                      ; preds = %if.else4498
  %2606 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %next_off4517 = getelementptr inbounds %struct.regnode, %struct.regnode* %2606, i32 0, i32 2
  %2607 = load i16, i16* %next_off4517, align 2
  %conv4518 = zext i16 %2607 to i32
  %2608 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %idx.ext4519 = sext i32 %conv4518 to i64
  %add.ptr4520 = getelementptr inbounds %struct.regnode, %struct.regnode* %2608, i64 %idx.ext4519
  store %struct.regnode* %add.ptr4520, %struct.regnode** %text_node, align 8
  br label %if.end4521

if.end4521:                                       ; preds = %if.else4516, %cond.end4514
  br label %if.end4522

if.end4522:                                       ; preds = %if.end4521, %if.then4496
  br label %if.end4523

if.end4523:                                       ; preds = %if.end4522, %if.then4489
  br label %while.cond4411

while.end4524:                                    ; preds = %lor.end4474
  br label %do.end4525

do.end4525:                                       ; preds = %while.end4524
  br label %if.end4526

if.end4526:                                       ; preds = %do.end4525, %lor.lhs.false4402, %if.then4392
  %2609 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %type4527 = getelementptr inbounds %struct.regnode, %struct.regnode* %2609, i32 0, i32 1
  %2610 = load i8, i8* %type4527, align 1
  %idxprom4528 = zext i8 %2610 to i64
  %arrayidx4529 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom4528
  %2611 = load i8, i8* %arrayidx4529, align 1
  %conv4530 = zext i8 %2611 to i32
  %cmp4531 = icmp eq i32 %conv4530, 31
  br i1 %cmp4531, label %if.then4533, label %if.end4549

if.then4533:                                      ; preds = %if.end4526
  %2612 = load %struct.regnode*, %struct.regnode** %text_node, align 8
  %2613 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4534 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2613, i32 0, i32 2
  %curlym4535 = bitcast %union.anon.19* %u4534 to %struct.anon.30*
  %c14536 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4535, i32 0, i32 1
  %2614 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4537 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2614, i32 0, i32 2
  %curlym4538 = bitcast %union.anon.19* %u4537 to %struct.anon.30*
  %c1_utf8 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4538, i32 0, i32 12
  %arraydecay4539 = getelementptr inbounds [14 x i8], [14 x i8]* %c1_utf8, i64 0, i64 0
  %2615 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4540 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2615, i32 0, i32 2
  %curlym4541 = bitcast %union.anon.19* %u4540 to %struct.anon.30*
  %c24542 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4541, i32 0, i32 2
  %2616 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4543 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2616, i32 0, i32 2
  %curlym4544 = bitcast %union.anon.19* %u4543 to %struct.anon.30*
  %c2_utf8 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4544, i32 0, i32 13
  %arraydecay4545 = getelementptr inbounds [14 x i8], [14 x i8]* %c2_utf8, i64 0, i64 0
  %2617 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call4546 = call zeroext i1 @S_setup_EXACTISH_ST_c1_c2(%struct.regnode* %2612, i32* %c14536, i8* %arraydecay4539, i32* %c24542, i8* %arraydecay4545, %struct.regmatch_info* %2617)
  br i1 %call4546, label %if.end4548, label %if.then4547

if.then4547:                                      ; preds = %if.then4533
  br label %no

if.end4548:                                       ; preds = %if.then4533
  br label %if.end4549

if.end4549:                                       ; preds = %if.end4548, %if.end4526
  br label %if.end4550

if.end4550:                                       ; preds = %if.end4549, %land.lhs.true4384, %lor.lhs.false4374
  br label %if.end4551

if.end4551:                                       ; preds = %if.end4550, %curlym_do_B
  %2618 = load i32, i32* %nextchr, align 4
  %cmp4552 = icmp slt i32 %2618, 0
  br i1 %cmp4552, label %if.end4604, label %land.lhs.true4554

land.lhs.true4554:                                ; preds = %if.end4551
  %2619 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4555 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2619, i32 0, i32 2
  %curlym4556 = bitcast %union.anon.19* %u4555 to %struct.anon.30*
  %c14557 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4556, i32 0, i32 1
  %2620 = load i32, i32* %c14557, align 8
  %cmp4558 = icmp ne i32 %2620, -1000
  br i1 %cmp4558, label %if.then4560, label %if.end4604

if.then4560:                                      ; preds = %land.lhs.true4554
  %2621 = load i32, i32* %nextchr, align 4
  %conv4561 = sext i32 %2621 to i64
  %cmp4562 = icmp ult i64 %conv4561, 128
  br i1 %cmp4562, label %if.else4589, label %land.lhs.true4564

land.lhs.true4564:                                ; preds = %if.then4560
  %2622 = load i8, i8* %utf8_target, align 1
  %tobool4565 = trunc i8 %2622 to i1
  br i1 %tobool4565, label %if.then4567, label %if.else4589

if.then4567:                                      ; preds = %land.lhs.true4564
  %2623 = load i8*, i8** %locinput, align 8
  %2624 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4568 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2624, i32 0, i32 2
  %curlym4569 = bitcast %union.anon.19* %u4568 to %struct.anon.30*
  %c1_utf84570 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4569, i32 0, i32 12
  %arraydecay4571 = getelementptr inbounds [14 x i8], [14 x i8]* %c1_utf84570, i64 0, i64 0
  %2625 = load i8*, i8** %locinput, align 8
  %2626 = load i8, i8* %2625, align 1
  %idxprom4572 = zext i8 %2626 to i64
  %arrayidx4573 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom4572
  %2627 = load i8, i8* %arrayidx4573, align 1
  %conv4574 = zext i8 %2627 to i64
  %call4575 = call i32 @memcmp(i8* %2623, i8* %arraydecay4571, i64 %conv4574) #5
  %tobool4576 = icmp ne i32 %call4575, 0
  br i1 %tobool4576, label %land.lhs.true4577, label %if.end4588

land.lhs.true4577:                                ; preds = %if.then4567
  %2628 = load i8*, i8** %locinput, align 8
  %2629 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4578 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2629, i32 0, i32 2
  %curlym4579 = bitcast %union.anon.19* %u4578 to %struct.anon.30*
  %c2_utf84580 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4579, i32 0, i32 13
  %arraydecay4581 = getelementptr inbounds [14 x i8], [14 x i8]* %c2_utf84580, i64 0, i64 0
  %2630 = load i8*, i8** %locinput, align 8
  %2631 = load i8, i8* %2630, align 1
  %idxprom4582 = zext i8 %2631 to i64
  %arrayidx4583 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom4582
  %2632 = load i8, i8* %arrayidx4583, align 1
  %conv4584 = zext i8 %2632 to i64
  %call4585 = call i32 @memcmp(i8* %2628, i8* %arraydecay4581, i64 %conv4584) #5
  %tobool4586 = icmp ne i32 %call4585, 0
  br i1 %tobool4586, label %if.then4587, label %if.end4588

if.then4587:                                      ; preds = %land.lhs.true4577
  store i32 115, i32* %state_num, align 4
  br label %reenter_switch

if.end4588:                                       ; preds = %land.lhs.true4577, %if.then4567
  br label %if.end4603

if.else4589:                                      ; preds = %land.lhs.true4564, %if.then4560
  %2633 = load i32, i32* %nextchr, align 4
  %2634 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4590 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2634, i32 0, i32 2
  %curlym4591 = bitcast %union.anon.19* %u4590 to %struct.anon.30*
  %c14592 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4591, i32 0, i32 1
  %2635 = load i32, i32* %c14592, align 8
  %cmp4593 = icmp ne i32 %2633, %2635
  br i1 %cmp4593, label %land.lhs.true4595, label %if.end4602

land.lhs.true4595:                                ; preds = %if.else4589
  %2636 = load i32, i32* %nextchr, align 4
  %2637 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4596 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2637, i32 0, i32 2
  %curlym4597 = bitcast %union.anon.19* %u4596 to %struct.anon.30*
  %c24598 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4597, i32 0, i32 2
  %2638 = load i32, i32* %c24598, align 4
  %cmp4599 = icmp ne i32 %2636, %2638
  br i1 %cmp4599, label %if.then4601, label %if.end4602

if.then4601:                                      ; preds = %land.lhs.true4595
  store i32 115, i32* %state_num, align 4
  br label %reenter_switch

if.end4602:                                       ; preds = %land.lhs.true4595, %if.else4589
  br label %if.end4603

if.end4603:                                       ; preds = %if.end4602, %if.end4588
  br label %if.end4604

if.end4604:                                       ; preds = %if.end4603, %land.lhs.true4554, %if.end4551
  %2639 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4605 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2639, i32 0, i32 2
  %curlym4606 = bitcast %union.anon.19* %u4605 to %struct.anon.30*
  %me4607 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4606, i32 0, i32 11
  %2640 = load %struct.regnode*, %struct.regnode** %me4607, align 8
  %flags4608 = getelementptr inbounds %struct.regnode, %struct.regnode* %2640, i32 0, i32 0
  %2641 = load i8, i8* %flags4608, align 2
  %tobool4609 = icmp ne i8 %2641, 0
  br i1 %tobool4609, label %if.then4610, label %if.end4707

if.then4610:                                      ; preds = %if.end4604
  %2642 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4612 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2642, i32 0, i32 2
  %curlym4613 = bitcast %union.anon.19* %u4612 to %struct.anon.30*
  %me4614 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4613, i32 0, i32 11
  %2643 = load %struct.regnode*, %struct.regnode** %me4614, align 8
  %flags4615 = getelementptr inbounds %struct.regnode, %struct.regnode* %2643, i32 0, i32 0
  %2644 = load i8, i8* %flags4615, align 2
  %conv4616 = zext i8 %2644 to i32
  store i32 %conv4616, i32* %paren4611, align 4
  %2645 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4617 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2645, i32 0, i32 2
  %curlym4618 = bitcast %union.anon.19* %u4617 to %struct.anon.30*
  %count4619 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4618, i32 0, i32 7
  %2646 = load i32, i32* %count4619, align 8
  %tobool4620 = icmp ne i32 %2646, 0
  br i1 %tobool4620, label %if.then4621, label %if.else4676

if.then4621:                                      ; preds = %if.then4610
  %2647 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target4622 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2647, i32 0, i32 14
  %2648 = load i8, i8* %is_utf8_target4622, align 2
  %tobool4623 = trunc i8 %2648 to i1
  br i1 %tobool4623, label %cond.true4625, label %cond.false4644

cond.true4625:                                    ; preds = %if.then4621
  %2649 = load i8*, i8** %locinput, align 8
  %2650 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4626 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2650, i32 0, i32 2
  %curlym4627 = bitcast %union.anon.19* %u4626 to %struct.anon.30*
  %alen4628 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4627, i32 0, i32 6
  %2651 = load i32, i32* %alen4628, align 4
  %sub4629 = sub nsw i32 0, %2651
  %conv4630 = sext i32 %sub4629 to i64
  %2652 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4631 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2652, i32 0, i32 2
  %curlym4632 = bitcast %union.anon.19* %u4631 to %struct.anon.30*
  %alen4633 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4632, i32 0, i32 6
  %2653 = load i32, i32* %alen4633, align 4
  %sub4634 = sub nsw i32 0, %2653
  %cmp4635 = icmp sge i32 %sub4634, 0
  br i1 %cmp4635, label %cond.true4637, label %cond.false4639

cond.true4637:                                    ; preds = %cond.true4625
  %2654 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend4638 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2654, i32 0, i32 2
  %2655 = load i8*, i8** %strend4638, align 8
  br label %cond.end4641

cond.false4639:                                   ; preds = %cond.true4625
  %2656 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg4640 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2656, i32 0, i32 1
  %2657 = load i8*, i8** %strbeg4640, align 8
  br label %cond.end4641

cond.end4641:                                     ; preds = %cond.false4639, %cond.true4637
  %cond4642 = phi i8* [ %2655, %cond.true4637 ], [ %2657, %cond.false4639 ]
  %call4643 = call i8* @S_reghop3(i8* %2649, i64 %conv4630, i8* %cond4642)
  br label %cond.end4651

cond.false4644:                                   ; preds = %if.then4621
  %2658 = load i8*, i8** %locinput, align 8
  %2659 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4645 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2659, i32 0, i32 2
  %curlym4646 = bitcast %union.anon.19* %u4645 to %struct.anon.30*
  %alen4647 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4646, i32 0, i32 6
  %2660 = load i32, i32* %alen4647, align 4
  %sub4648 = sub nsw i32 0, %2660
  %idx.ext4649 = sext i32 %sub4648 to i64
  %add.ptr4650 = getelementptr inbounds i8, i8* %2658, i64 %idx.ext4649
  br label %cond.end4651

cond.end4651:                                     ; preds = %cond.false4644, %cond.end4641
  %cond4652 = phi i8* [ %call4643, %cond.end4641 ], [ %add.ptr4650, %cond.false4644 ]
  %2661 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg4653 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2661, i32 0, i32 1
  %2662 = load i8*, i8** %strbeg4653, align 8
  %sub.ptr.lhs.cast4654 = ptrtoint i8* %cond4652 to i64
  %sub.ptr.rhs.cast4655 = ptrtoint i8* %2662 to i64
  %sub.ptr.sub4656 = sub i64 %sub.ptr.lhs.cast4654, %sub.ptr.rhs.cast4655
  %2663 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs4657 = getelementptr inbounds %struct.regexp, %struct.regexp* %2663, i32 0, i32 17
  %2664 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs4657, align 8
  %2665 = load i32, i32* %paren4611, align 4
  %idxprom4658 = sext i32 %2665 to i64
  %arrayidx4659 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %2664, i64 %idxprom4658
  %start4660 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx4659, i32 0, i32 0
  store i64 %sub.ptr.sub4656, i64* %start4660, align 8
  %2666 = load i8*, i8** %locinput, align 8
  %2667 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg4661 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2667, i32 0, i32 1
  %2668 = load i8*, i8** %strbeg4661, align 8
  %sub.ptr.lhs.cast4662 = ptrtoint i8* %2666 to i64
  %sub.ptr.rhs.cast4663 = ptrtoint i8* %2668 to i64
  %sub.ptr.sub4664 = sub i64 %sub.ptr.lhs.cast4662, %sub.ptr.rhs.cast4663
  %2669 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs4665 = getelementptr inbounds %struct.regexp, %struct.regexp* %2669, i32 0, i32 17
  %2670 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs4665, align 8
  %2671 = load i32, i32* %paren4611, align 4
  %idxprom4666 = sext i32 %2671 to i64
  %arrayidx4667 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %2670, i64 %idxprom4666
  %end4668 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx4667, i32 0, i32 1
  store i64 %sub.ptr.sub4664, i64* %end4668, align 8
  %2672 = load i32, i32* %paren4611, align 4
  %2673 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen4669 = getelementptr inbounds %struct.regexp, %struct.regexp* %2673, i32 0, i32 15
  %2674 = load i32, i32* %lastparen4669, align 8
  %cmp4670 = icmp ugt i32 %2672, %2674
  br i1 %cmp4670, label %if.then4672, label %if.end4674

if.then4672:                                      ; preds = %cond.end4651
  %2675 = load i32, i32* %paren4611, align 4
  %2676 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen4673 = getelementptr inbounds %struct.regexp, %struct.regexp* %2676, i32 0, i32 15
  store i32 %2675, i32* %lastparen4673, align 8
  br label %if.end4674

if.end4674:                                       ; preds = %if.then4672, %cond.end4651
  %2677 = load i32, i32* %paren4611, align 4
  %2678 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen4675 = getelementptr inbounds %struct.regexp, %struct.regexp* %2678, i32 0, i32 16
  store i32 %2677, i32* %lastcloseparen4675, align 4
  br label %if.end4681

if.else4676:                                      ; preds = %if.then4610
  %2679 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs4677 = getelementptr inbounds %struct.regexp, %struct.regexp* %2679, i32 0, i32 17
  %2680 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs4677, align 8
  %2681 = load i32, i32* %paren4611, align 4
  %idxprom4678 = sext i32 %2681 to i64
  %arrayidx4679 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %2680, i64 %idxprom4678
  %end4680 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx4679, i32 0, i32 1
  store i64 -1, i64* %end4680, align 8
  br label %if.end4681

if.end4681:                                       ; preds = %if.else4676, %if.end4674
  %2682 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool4682 = icmp ne %struct.regmatch_state* %2682, null
  br i1 %tobool4682, label %land.lhs.true4683, label %if.end4706

land.lhs.true4683:                                ; preds = %if.end4681
  %2683 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u4684 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2683, i32 0, i32 2
  %eval4685 = bitcast %union.anon.19* %u4684 to %struct.anon.24*
  %close_paren4686 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval4685, i32 0, i32 6
  %2684 = load i32, i32* %close_paren4686, align 8
  %tobool4687 = icmp ne i32 %2684, 0
  br i1 %tobool4687, label %land.lhs.true4688, label %if.end4706

land.lhs.true4688:                                ; preds = %land.lhs.true4683
  %2685 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u4689 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2685, i32 0, i32 2
  %eval4690 = bitcast %union.anon.19* %u4689 to %struct.anon.24*
  %close_paren4691 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval4690, i32 0, i32 6
  %2686 = load i32, i32* %close_paren4691, align 8
  %2687 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4692 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2687, i32 0, i32 2
  %curlym4693 = bitcast %union.anon.19* %u4692 to %struct.anon.30*
  %me4694 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4693, i32 0, i32 11
  %2688 = load %struct.regnode*, %struct.regnode** %me4694, align 8
  %flags4695 = getelementptr inbounds %struct.regnode, %struct.regnode* %2688, i32 0, i32 0
  %2689 = load i8, i8* %flags4695, align 2
  %conv4696 = zext i8 %2689 to i32
  %cmp4697 = icmp eq i32 %2686, %conv4696
  br i1 %cmp4697, label %if.then4699, label %if.end4706

if.then4699:                                      ; preds = %land.lhs.true4688
  %2690 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4700 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2690, i32 0, i32 2
  %curlym4701 = bitcast %union.anon.19* %u4700 to %struct.anon.30*
  %count4702 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4701, i32 0, i32 7
  %2691 = load i32, i32* %count4702, align 8
  %tobool4703 = icmp ne i32 %2691, 0
  br i1 %tobool4703, label %if.then4704, label %if.else4705

if.then4704:                                      ; preds = %if.then4699
  br label %fake_end

if.else4705:                                      ; preds = %if.then4699
  br label %no

if.end4706:                                       ; preds = %land.lhs.true4688, %land.lhs.true4683, %if.end4681
  br label %if.end4707

if.end4707:                                       ; preds = %if.end4706, %if.end4604
  %2692 = load i8*, i8** %locinput, align 8
  store i8* %2692, i8** %pushinput, align 8
  %2693 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4708 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2693, i32 0, i32 2
  %curlym4709 = bitcast %union.anon.19* %u4708 to %struct.anon.30*
  %B4710 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4709, i32 0, i32 10
  %2694 = load %struct.regnode*, %struct.regnode** %B4710, align 8
  store %struct.regnode* %2694, %struct.regnode** %scan, align 8
  %2695 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state4711 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2695, i32 0, i32 0
  store i32 114, i32* %resume_state4711, align 8
  br label %push_state

sw.bb4712:                                        ; preds = %cond.end45
  br label %do.body4713

do.body4713:                                      ; preds = %sw.bb4712
  %2696 = load i32, i32* @PL_savestack_ix, align 4
  %2697 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4714 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2697, i32 0, i32 2
  %curlym4715 = bitcast %union.anon.19* %u4714 to %struct.anon.30*
  %cp4716 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4715, i32 0, i32 3
  %2698 = load i32, i32* %cp4716, align 8
  %cmp4717 = icmp sgt i32 %2696, %2698
  br i1 %cmp4717, label %if.then4719, label %if.end4723

if.then4719:                                      ; preds = %do.body4713
  %2699 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4720 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2699, i32 0, i32 2
  %curlym4721 = bitcast %union.anon.19* %u4720 to %struct.anon.30*
  %cp4722 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4721, i32 0, i32 3
  %2700 = load i32, i32* %cp4722, align 8
  call void @Perl_leave_scope(i32 %2700)
  br label %if.end4723

if.end4723:                                       ; preds = %if.then4719, %do.body4713
  br label %do.end4724

do.end4724:                                       ; preds = %if.end4723
  %2701 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen4725 = getelementptr inbounds %struct.regexp, %struct.regexp* %2701, i32 0, i32 15
  %2702 = load i32, i32* %lastparen4725, align 8
  store i32 %2702, i32* %n, align 4
  br label %for.cond4726

for.cond4726:                                     ; preds = %for.inc4737, %do.end4724
  %2703 = load i32, i32* %n, align 4
  %2704 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4727 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2704, i32 0, i32 2
  %curlym4728 = bitcast %union.anon.19* %u4727 to %struct.anon.30*
  %lastparen4729 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4728, i32 0, i32 4
  %2705 = load i32, i32* %lastparen4729, align 4
  %cmp4730 = icmp ugt i32 %2703, %2705
  br i1 %cmp4730, label %for.body4732, label %for.end4739

for.body4732:                                     ; preds = %for.cond4726
  %2706 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs4733 = getelementptr inbounds %struct.regexp, %struct.regexp* %2706, i32 0, i32 17
  %2707 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs4733, align 8
  %2708 = load i32, i32* %n, align 4
  %idxprom4734 = zext i32 %2708 to i64
  %arrayidx4735 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %2707, i64 %idxprom4734
  %end4736 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx4735, i32 0, i32 1
  store i64 -1, i64* %end4736, align 8
  br label %for.inc4737

for.inc4737:                                      ; preds = %for.body4732
  %2709 = load i32, i32* %n, align 4
  %dec4738 = add i32 %2709, -1
  store i32 %dec4738, i32* %n, align 4
  br label %for.cond4726

for.end4739:                                      ; preds = %for.cond4726
  %2710 = load i32, i32* %n, align 4
  %2711 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen4740 = getelementptr inbounds %struct.regexp, %struct.regexp* %2711, i32 0, i32 15
  store i32 %2710, i32* %lastparen4740, align 8
  %2712 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4741 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2712, i32 0, i32 2
  %curlym4742 = bitcast %union.anon.19* %u4741 to %struct.anon.30*
  %lastcloseparen4743 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4742, i32 0, i32 5
  %2713 = load i32, i32* %lastcloseparen4743, align 8
  %2714 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen4744 = getelementptr inbounds %struct.regexp, %struct.regexp* %2714, i32 0, i32 16
  store i32 %2713, i32* %lastcloseparen4744, align 4
  %2715 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4745 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2715, i32 0, i32 2
  %curlym4746 = bitcast %union.anon.19* %u4745 to %struct.anon.30*
  %minmod4747 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4746, i32 0, i32 8
  %2716 = load i8, i8* %minmod4747, align 4
  %tobool4748 = trunc i8 %2716 to i1
  br i1 %tobool4748, label %if.then4749, label %if.end4766

if.then4749:                                      ; preds = %for.end4739
  %2717 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4751 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2717, i32 0, i32 2
  %curlym4752 = bitcast %union.anon.19* %u4751 to %struct.anon.30*
  %me4753 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4752, i32 0, i32 11
  %2718 = load %struct.regnode*, %struct.regnode** %me4753, align 8
  %2719 = bitcast %struct.regnode* %2718 to %struct.regnode_2*
  %arg24754 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2719, i32 0, i32 4
  %2720 = load i16, i16* %arg24754, align 2
  %conv4755 = zext i16 %2720 to i32
  store i32 %conv4755, i32* %max4750, align 4
  %2721 = load i32, i32* %max4750, align 4
  %cmp4756 = icmp ne i32 %2721, 32767
  br i1 %cmp4756, label %land.lhs.true4758, label %if.end4765

land.lhs.true4758:                                ; preds = %if.then4749
  %2722 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4759 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2722, i32 0, i32 2
  %curlym4760 = bitcast %union.anon.19* %u4759 to %struct.anon.30*
  %count4761 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4760, i32 0, i32 7
  %2723 = load i32, i32* %count4761, align 8
  %2724 = load i32, i32* %max4750, align 4
  %cmp4762 = icmp eq i32 %2723, %2724
  br i1 %cmp4762, label %if.then4764, label %if.end4765

if.then4764:                                      ; preds = %land.lhs.true4758
  br label %no

if.end4765:                                       ; preds = %land.lhs.true4758, %if.then4749
  br label %curlym_do_A

if.end4766:                                       ; preds = %for.end4739
  %2725 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4767 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2725, i32 0, i32 2
  %curlym4768 = bitcast %union.anon.19* %u4767 to %struct.anon.30*
  %count4769 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4768, i32 0, i32 7
  %2726 = load i32, i32* %count4769, align 8
  %2727 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4770 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2727, i32 0, i32 2
  %curlym4771 = bitcast %union.anon.19* %u4770 to %struct.anon.30*
  %me4772 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4771, i32 0, i32 11
  %2728 = load %struct.regnode*, %struct.regnode** %me4772, align 8
  %2729 = bitcast %struct.regnode* %2728 to %struct.regnode_2*
  %arg14773 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2729, i32 0, i32 3
  %2730 = load i16, i16* %arg14773, align 2
  %conv4774 = zext i16 %2730 to i32
  %cmp4775 = icmp eq i32 %2726, %conv4774
  br i1 %cmp4775, label %if.then4777, label %if.end4778

if.then4777:                                      ; preds = %if.end4766
  br label %no

if.end4778:                                       ; preds = %if.end4766
  %2731 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4779 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2731, i32 0, i32 2
  %curlym4780 = bitcast %union.anon.19* %u4779 to %struct.anon.30*
  %count4781 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4780, i32 0, i32 7
  %2732 = load i32, i32* %count4781, align 8
  %dec4782 = add nsw i32 %2732, -1
  store i32 %dec4782, i32* %count4781, align 8
  %2733 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target4783 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2733, i32 0, i32 14
  %2734 = load i8, i8* %is_utf8_target4783, align 2
  %tobool4784 = trunc i8 %2734 to i1
  br i1 %tobool4784, label %cond.true4786, label %cond.false4805

cond.true4786:                                    ; preds = %if.end4778
  %2735 = load i8*, i8** %locinput, align 8
  %2736 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4787 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2736, i32 0, i32 2
  %curlym4788 = bitcast %union.anon.19* %u4787 to %struct.anon.30*
  %alen4789 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4788, i32 0, i32 6
  %2737 = load i32, i32* %alen4789, align 4
  %sub4790 = sub nsw i32 0, %2737
  %conv4791 = sext i32 %sub4790 to i64
  %2738 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4792 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2738, i32 0, i32 2
  %curlym4793 = bitcast %union.anon.19* %u4792 to %struct.anon.30*
  %alen4794 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4793, i32 0, i32 6
  %2739 = load i32, i32* %alen4794, align 4
  %sub4795 = sub nsw i32 0, %2739
  %cmp4796 = icmp sge i32 %sub4795, 0
  br i1 %cmp4796, label %cond.true4798, label %cond.false4800

cond.true4798:                                    ; preds = %cond.true4786
  %2740 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend4799 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2740, i32 0, i32 2
  %2741 = load i8*, i8** %strend4799, align 8
  br label %cond.end4802

cond.false4800:                                   ; preds = %cond.true4786
  %2742 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg4801 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2742, i32 0, i32 1
  %2743 = load i8*, i8** %strbeg4801, align 8
  br label %cond.end4802

cond.end4802:                                     ; preds = %cond.false4800, %cond.true4798
  %cond4803 = phi i8* [ %2741, %cond.true4798 ], [ %2743, %cond.false4800 ]
  %call4804 = call i8* @S_reghop3(i8* %2735, i64 %conv4791, i8* %cond4803)
  br label %cond.end4812

cond.false4805:                                   ; preds = %if.end4778
  %2744 = load i8*, i8** %locinput, align 8
  %2745 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4806 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2745, i32 0, i32 2
  %curlym4807 = bitcast %union.anon.19* %u4806 to %struct.anon.30*
  %alen4808 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %curlym4807, i32 0, i32 6
  %2746 = load i32, i32* %alen4808, align 4
  %sub4809 = sub nsw i32 0, %2746
  %idx.ext4810 = sext i32 %sub4809 to i64
  %add.ptr4811 = getelementptr inbounds i8, i8* %2744, i64 %idx.ext4810
  br label %cond.end4812

cond.end4812:                                     ; preds = %cond.false4805, %cond.end4802
  %cond4813 = phi i8* [ %call4804, %cond.end4802 ], [ %add.ptr4811, %cond.false4805 ]
  store i8* %cond4813, i8** %locinput, align 8
  %2747 = load i8*, i8** %locinput, align 8
  %2748 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend4814 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2748, i32 0, i32 2
  %2749 = load i8*, i8** %strend4814, align 8
  %cmp4815 = icmp ult i8* %2747, %2749
  br i1 %cmp4815, label %cond.true4817, label %cond.false4819

cond.true4817:                                    ; preds = %cond.end4812
  %2750 = load i8*, i8** %locinput, align 8
  %2751 = load i8, i8* %2750, align 1
  %conv4818 = zext i8 %2751 to i32
  br label %cond.end4820

cond.false4819:                                   ; preds = %cond.end4812
  br label %cond.end4820

cond.end4820:                                     ; preds = %cond.false4819, %cond.true4817
  %cond4821 = phi i32 [ %conv4818, %cond.true4817 ], [ -10, %cond.false4819 ]
  store i32 %cond4821, i32* %nextchr, align 4
  br label %curlym_do_B

sw.bb4822:                                        ; preds = %cond.end45
  %2752 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4823 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2752, i32 0, i32 2
  %curly = bitcast %union.anon.19* %u4823 to %struct.anon.31*
  %paren4824 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly, i32 0, i32 0
  store i32 0, i32* %paren4824, align 8
  %2753 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4825 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2753, i32 0, i32 2
  %curly4826 = bitcast %union.anon.19* %u4825 to %struct.anon.31*
  %min4827 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4826, i32 0, i32 9
  store i32 0, i32* %min4827, align 4
  %2754 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4828 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2754, i32 0, i32 2
  %curly4829 = bitcast %union.anon.19* %u4828 to %struct.anon.31*
  %max4830 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4829, i32 0, i32 10
  store i32 32767, i32* %max4830, align 8
  %2755 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr4831 = getelementptr inbounds %struct.regnode, %struct.regnode* %2755, i64 1
  store %struct.regnode* %add.ptr4831, %struct.regnode** %scan, align 8
  br label %repeat

sw.bb4832:                                        ; preds = %cond.end45
  %2756 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4833 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2756, i32 0, i32 2
  %curly4834 = bitcast %union.anon.19* %u4833 to %struct.anon.31*
  %paren4835 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4834, i32 0, i32 0
  store i32 0, i32* %paren4835, align 8
  %2757 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4836 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2757, i32 0, i32 2
  %curly4837 = bitcast %union.anon.19* %u4836 to %struct.anon.31*
  %min4838 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4837, i32 0, i32 9
  store i32 1, i32* %min4838, align 4
  %2758 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4839 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2758, i32 0, i32 2
  %curly4840 = bitcast %union.anon.19* %u4839 to %struct.anon.31*
  %max4841 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4840, i32 0, i32 10
  store i32 32767, i32* %max4841, align 8
  %2759 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr4842 = getelementptr inbounds %struct.regnode, %struct.regnode* %2759, i64 1
  store %struct.regnode* %add.ptr4842, %struct.regnode** %scan, align 8
  br label %repeat

sw.bb4843:                                        ; preds = %cond.end45
  %2760 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags4844 = getelementptr inbounds %struct.regnode, %struct.regnode* %2760, i32 0, i32 0
  %2761 = load i8, i8* %flags4844, align 2
  %conv4845 = zext i8 %2761 to i32
  %2762 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4846 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2762, i32 0, i32 2
  %curly4847 = bitcast %union.anon.19* %u4846 to %struct.anon.31*
  %paren4848 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4847, i32 0, i32 0
  store i32 %conv4845, i32* %paren4848, align 8
  %2763 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen4849 = getelementptr inbounds %struct.regexp, %struct.regexp* %2763, i32 0, i32 15
  %2764 = load i32, i32* %lastparen4849, align 8
  %2765 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4850 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2765, i32 0, i32 2
  %curly4851 = bitcast %union.anon.19* %u4850 to %struct.anon.31*
  %lastparen4852 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4851, i32 0, i32 2
  store i32 %2764, i32* %lastparen4852, align 8
  %2766 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen4853 = getelementptr inbounds %struct.regexp, %struct.regexp* %2766, i32 0, i32 16
  %2767 = load i32, i32* %lastcloseparen4853, align 4
  %2768 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4854 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2768, i32 0, i32 2
  %curly4855 = bitcast %union.anon.19* %u4854 to %struct.anon.31*
  %lastcloseparen4856 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4855, i32 0, i32 3
  store i32 %2767, i32* %lastcloseparen4856, align 4
  %2769 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4857 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2769, i32 0, i32 2
  %curly4858 = bitcast %union.anon.19* %u4857 to %struct.anon.31*
  %paren4859 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4858, i32 0, i32 0
  %2770 = load i32, i32* %paren4859, align 8
  %2771 = load i32, i32* %maxopenparen, align 4
  %cmp4860 = icmp ugt i32 %2770, %2771
  br i1 %cmp4860, label %if.then4862, label %if.end4866

if.then4862:                                      ; preds = %sw.bb4843
  %2772 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4863 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2772, i32 0, i32 2
  %curly4864 = bitcast %union.anon.19* %u4863 to %struct.anon.31*
  %paren4865 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4864, i32 0, i32 0
  %2773 = load i32, i32* %paren4865, align 8
  store i32 %2773, i32* %maxopenparen, align 4
  br label %if.end4866

if.end4866:                                       ; preds = %if.then4862, %sw.bb4843
  %2774 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2775 = bitcast %struct.regnode* %2774 to %struct.regnode_2*
  %arg14867 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2775, i32 0, i32 3
  %2776 = load i16, i16* %arg14867, align 2
  %conv4868 = zext i16 %2776 to i32
  %2777 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4869 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2777, i32 0, i32 2
  %curly4870 = bitcast %union.anon.19* %u4869 to %struct.anon.31*
  %min4871 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4870, i32 0, i32 9
  store i32 %conv4868, i32* %min4871, align 4
  %2778 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2779 = bitcast %struct.regnode* %2778 to %struct.regnode_2*
  %arg24872 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2779, i32 0, i32 4
  %2780 = load i16, i16* %arg24872, align 2
  %conv4873 = zext i16 %2780 to i32
  %2781 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4874 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2781, i32 0, i32 2
  %curly4875 = bitcast %union.anon.19* %u4874 to %struct.anon.31*
  %max4876 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4875, i32 0, i32 10
  store i32 %conv4873, i32* %max4876, align 8
  %2782 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool4877 = icmp ne %struct.regmatch_state* %2782, null
  br i1 %tobool4877, label %land.lhs.true4878, label %if.end4899

land.lhs.true4878:                                ; preds = %if.end4866
  %2783 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u4879 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2783, i32 0, i32 2
  %eval4880 = bitcast %union.anon.19* %u4879 to %struct.anon.24*
  %close_paren4881 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval4880, i32 0, i32 6
  %2784 = load i32, i32* %close_paren4881, align 8
  %tobool4882 = icmp ne i32 %2784, 0
  br i1 %tobool4882, label %land.lhs.true4883, label %if.end4899

land.lhs.true4883:                                ; preds = %land.lhs.true4878
  %2785 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u4884 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2785, i32 0, i32 2
  %eval4885 = bitcast %union.anon.19* %u4884 to %struct.anon.24*
  %close_paren4886 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval4885, i32 0, i32 6
  %2786 = load i32, i32* %close_paren4886, align 8
  %2787 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4887 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2787, i32 0, i32 2
  %curly4888 = bitcast %union.anon.19* %u4887 to %struct.anon.31*
  %paren4889 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4888, i32 0, i32 0
  %2788 = load i32, i32* %paren4889, align 8
  %cmp4890 = icmp eq i32 %2786, %2788
  br i1 %cmp4890, label %if.then4892, label %if.end4899

if.then4892:                                      ; preds = %land.lhs.true4883
  %2789 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4893 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2789, i32 0, i32 2
  %curly4894 = bitcast %union.anon.19* %u4893 to %struct.anon.31*
  %min4895 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4894, i32 0, i32 9
  store i32 1, i32* %min4895, align 4
  %2790 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4896 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2790, i32 0, i32 2
  %curly4897 = bitcast %union.anon.19* %u4896 to %struct.anon.31*
  %max4898 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4897, i32 0, i32 10
  store i32 1, i32* %max4898, align 8
  br label %if.end4899

if.end4899:                                       ; preds = %if.then4892, %land.lhs.true4883, %land.lhs.true4878, %if.end4866
  %2791 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr4900 = getelementptr inbounds %struct.regnode, %struct.regnode* %2791, i64 1
  %add.ptr4901 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr4900, i64 1
  %call4902 = call %struct.regnode* @Perl_regnext(%struct.regnode* %add.ptr4901)
  store %struct.regnode* %call4902, %struct.regnode** %scan, align 8
  br label %repeat

sw.bb4903:                                        ; preds = %cond.end45
  %2792 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4904 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2792, i32 0, i32 2
  %curly4905 = bitcast %union.anon.19* %u4904 to %struct.anon.31*
  %paren4906 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4905, i32 0, i32 0
  store i32 0, i32* %paren4906, align 8
  %2793 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2794 = bitcast %struct.regnode* %2793 to %struct.regnode_2*
  %arg14907 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2794, i32 0, i32 3
  %2795 = load i16, i16* %arg14907, align 2
  %conv4908 = zext i16 %2795 to i32
  %2796 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4909 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2796, i32 0, i32 2
  %curly4910 = bitcast %union.anon.19* %u4909 to %struct.anon.31*
  %min4911 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4910, i32 0, i32 9
  store i32 %conv4908, i32* %min4911, align 4
  %2797 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2798 = bitcast %struct.regnode* %2797 to %struct.regnode_2*
  %arg24912 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2798, i32 0, i32 4
  %2799 = load i16, i16* %arg24912, align 2
  %conv4913 = zext i16 %2799 to i32
  %2800 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4914 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2800, i32 0, i32 2
  %curly4915 = bitcast %union.anon.19* %u4914 to %struct.anon.31*
  %max4916 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4915, i32 0, i32 10
  store i32 %conv4913, i32* %max4916, align 8
  %2801 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr4917 = getelementptr inbounds %struct.regnode, %struct.regnode* %2801, i64 1
  %add.ptr4918 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr4917, i64 1
  store %struct.regnode* %add.ptr4918, %struct.regnode** %scan, align 8
  br label %repeat

repeat:                                           ; preds = %sw.bb4903, %if.end4899, %sw.bb4832, %sw.bb4822
  %2802 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type4919 = getelementptr inbounds %struct.regnode, %struct.regnode* %2802, i32 0, i32 1
  %2803 = load i8, i8* %type4919, align 1
  %idxprom4920 = zext i8 %2803 to i64
  %arrayidx4921 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom4920
  %2804 = load i8, i8* %arrayidx4921, align 1
  %conv4922 = zext i8 %2804 to i32
  %cmp4923 = icmp eq i32 %conv4922, 31
  br i1 %cmp4923, label %if.else5000, label %lor.lhs.false4925

lor.lhs.false4925:                                ; preds = %repeat
  %2805 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type4926 = getelementptr inbounds %struct.regnode, %struct.regnode* %2805, i32 0, i32 1
  %2806 = load i8, i8* %type4926, align 1
  %idxprom4927 = zext i8 %2806 to i64
  %arrayidx4928 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom4927
  %2807 = load i8, i8* %arrayidx4928, align 1
  %conv4929 = zext i8 %2807 to i32
  %cmp4930 = icmp eq i32 %conv4929, 51
  br i1 %cmp4930, label %if.else5000, label %land.lhs.true4932

land.lhs.true4932:                                ; preds = %lor.lhs.false4925
  %2808 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type4933 = getelementptr inbounds %struct.regnode, %struct.regnode* %2808, i32 0, i32 1
  %2809 = load i8, i8* %type4933, align 1
  %conv4934 = zext i8 %2809 to i32
  %cmp4935 = icmp eq i32 %conv4934, 49
  br i1 %cmp4935, label %if.else5000, label %lor.lhs.false4937

lor.lhs.false4937:                                ; preds = %land.lhs.true4932
  %2810 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type4938 = getelementptr inbounds %struct.regnode, %struct.regnode* %2810, i32 0, i32 1
  %2811 = load i8, i8* %type4938, align 1
  %conv4939 = zext i8 %2811 to i32
  %cmp4940 = icmp eq i32 %conv4939, 50
  br i1 %cmp4940, label %land.lhs.true4942, label %lor.lhs.false4951

land.lhs.true4942:                                ; preds = %lor.lhs.false4937
  %2812 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool4943 = icmp ne %struct.regmatch_state* %2812, null
  br i1 %tobool4943, label %lor.lhs.false4944, label %if.else5000

lor.lhs.false4944:                                ; preds = %land.lhs.true4942
  %2813 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u4945 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2813, i32 0, i32 2
  %eval4946 = bitcast %union.anon.19* %u4945 to %struct.anon.24*
  %close_paren4947 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval4946, i32 0, i32 6
  %2814 = load i32, i32* %close_paren4947, align 8
  %2815 = load %struct.regnode*, %struct.regnode** %next, align 8
  %2816 = bitcast %struct.regnode* %2815 to %struct.regnode_1*
  %arg14948 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2816, i32 0, i32 3
  %2817 = load i32, i32* %arg14948, align 4
  %cmp4949 = icmp ne i32 %2814, %2817
  br i1 %cmp4949, label %if.else5000, label %lor.lhs.false4951

lor.lhs.false4951:                                ; preds = %lor.lhs.false4944, %lor.lhs.false4937
  %2818 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type4952 = getelementptr inbounds %struct.regnode, %struct.regnode* %2818, i32 0, i32 1
  %2819 = load i8, i8* %type4952, align 1
  %conv4953 = zext i8 %2819 to i32
  %cmp4954 = icmp eq i32 %conv4953, 68
  br i1 %cmp4954, label %if.else5000, label %lor.lhs.false4956

lor.lhs.false4956:                                ; preds = %lor.lhs.false4951
  %2820 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type4957 = getelementptr inbounds %struct.regnode, %struct.regnode* %2820, i32 0, i32 1
  %2821 = load i8, i8* %type4957, align 1
  %conv4958 = zext i8 %2821 to i32
  %cmp4959 = icmp eq i32 %conv4958, 65
  br i1 %cmp4959, label %if.else5000, label %lor.lhs.false4961

lor.lhs.false4961:                                ; preds = %lor.lhs.false4956
  %2822 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type4962 = getelementptr inbounds %struct.regnode, %struct.regnode* %2822, i32 0, i32 1
  %2823 = load i8, i8* %type4962, align 1
  %conv4963 = zext i8 %2823 to i32
  %cmp4964 = icmp eq i32 %conv4963, 63
  br i1 %cmp4964, label %if.else5000, label %lor.lhs.false4966

lor.lhs.false4966:                                ; preds = %lor.lhs.false4961
  %2824 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type4967 = getelementptr inbounds %struct.regnode, %struct.regnode* %2824, i32 0, i32 1
  %2825 = load i8, i8* %type4967, align 1
  %conv4968 = zext i8 %2825 to i32
  %cmp4969 = icmp eq i32 %conv4968, 43
  br i1 %cmp4969, label %if.else5000, label %lor.lhs.false4971

lor.lhs.false4971:                                ; preds = %lor.lhs.false4966
  %2826 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type4972 = getelementptr inbounds %struct.regnode, %struct.regnode* %2826, i32 0, i32 1
  %2827 = load i8, i8* %type4972, align 1
  %conv4973 = zext i8 %2827 to i32
  %cmp4974 = icmp eq i32 %conv4973, 69
  br i1 %cmp4974, label %if.else5000, label %lor.lhs.false4976

lor.lhs.false4976:                                ; preds = %lor.lhs.false4971
  %2828 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type4977 = getelementptr inbounds %struct.regnode, %struct.regnode* %2828, i32 0, i32 1
  %2829 = load i8, i8* %type4977, align 1
  %conv4978 = zext i8 %2829 to i32
  %cmp4979 = icmp eq i32 %conv4978, 90
  br i1 %cmp4979, label %if.else5000, label %lor.lhs.false4981

lor.lhs.false4981:                                ; preds = %lor.lhs.false4976
  %2830 = load %struct.regnode*, %struct.regnode** %next, align 8
  %type4982 = getelementptr inbounds %struct.regnode, %struct.regnode* %2830, i32 0, i32 1
  %2831 = load i8, i8* %type4982, align 1
  %idxprom4983 = zext i8 %2831 to i64
  %arrayidx4984 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom4983
  %2832 = load i8, i8* %arrayidx4984, align 1
  %conv4985 = zext i8 %2832 to i32
  %cmp4986 = icmp eq i32 %conv4985, 44
  br i1 %cmp4986, label %land.lhs.true4988, label %if.then4993

land.lhs.true4988:                                ; preds = %lor.lhs.false4981
  %2833 = load %struct.regnode*, %struct.regnode** %next, align 8
  %2834 = bitcast %struct.regnode* %2833 to %struct.regnode_2*
  %arg14989 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2834, i32 0, i32 3
  %2835 = load i16, i16* %arg14989, align 2
  %conv4990 = zext i16 %2835 to i32
  %cmp4991 = icmp sgt i32 %conv4990, 0
  br i1 %cmp4991, label %if.else5000, label %if.then4993

if.then4993:                                      ; preds = %land.lhs.true4988, %lor.lhs.false4981
  %2836 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4994 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2836, i32 0, i32 2
  %curly4995 = bitcast %union.anon.19* %u4994 to %struct.anon.31*
  %c24996 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4995, i32 0, i32 5
  store i32 -1000, i32* %c24996, align 4
  %2837 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u4997 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2837, i32 0, i32 2
  %curly4998 = bitcast %union.anon.19* %u4997 to %struct.anon.31*
  %c14999 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly4998, i32 0, i32 4
  store i32 -1000, i32* %c14999, align 8
  br label %if.end5187

if.else5000:                                      ; preds = %land.lhs.true4988, %lor.lhs.false4976, %lor.lhs.false4971, %lor.lhs.false4966, %lor.lhs.false4961, %lor.lhs.false4956, %lor.lhs.false4951, %lor.lhs.false4944, %land.lhs.true4942, %land.lhs.true4932, %lor.lhs.false4925, %repeat
  %2838 = load %struct.regnode*, %struct.regnode** %next, align 8
  store %struct.regnode* %2838, %struct.regnode** %text_node5001, align 8
  %2839 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %type5002 = getelementptr inbounds %struct.regnode, %struct.regnode* %2839, i32 0, i32 1
  %2840 = load i8, i8* %type5002, align 1
  %idxprom5003 = zext i8 %2840 to i64
  %arrayidx5004 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom5003
  %2841 = load i8, i8* %arrayidx5004, align 1
  %conv5005 = zext i8 %2841 to i32
  %cmp5006 = icmp eq i32 %conv5005, 31
  br i1 %cmp5006, label %if.end5132, label %lor.lhs.false5008

lor.lhs.false5008:                                ; preds = %if.else5000
  %2842 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %type5009 = getelementptr inbounds %struct.regnode, %struct.regnode* %2842, i32 0, i32 1
  %2843 = load i8, i8* %type5009, align 1
  %idxprom5010 = zext i8 %2843 to i64
  %arrayidx5011 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom5010
  %2844 = load i8, i8* %arrayidx5011, align 1
  %conv5012 = zext i8 %2844 to i32
  %cmp5013 = icmp eq i32 %conv5012, 51
  br i1 %cmp5013, label %if.end5132, label %if.then5015

if.then5015:                                      ; preds = %lor.lhs.false5008
  br label %do.body5016

do.body5016:                                      ; preds = %if.then5015
  br label %while.cond5017

while.cond5017:                                   ; preds = %if.end5129, %do.body5016
  %2845 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %type5018 = getelementptr inbounds %struct.regnode, %struct.regnode* %2845, i32 0, i32 1
  %2846 = load i8, i8* %type5018, align 1
  %conv5019 = zext i8 %2846 to i32
  %cmp5020 = icmp eq i32 %conv5019, 49
  br i1 %cmp5020, label %lor.end5080, label %lor.lhs.false5022

lor.lhs.false5022:                                ; preds = %while.cond5017
  %2847 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %type5023 = getelementptr inbounds %struct.regnode, %struct.regnode* %2847, i32 0, i32 1
  %2848 = load i8, i8* %type5023, align 1
  %conv5024 = zext i8 %2848 to i32
  %cmp5025 = icmp eq i32 %conv5024, 50
  br i1 %cmp5025, label %land.lhs.true5027, label %lor.lhs.false5036

land.lhs.true5027:                                ; preds = %lor.lhs.false5022
  %2849 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool5028 = icmp ne %struct.regmatch_state* %2849, null
  br i1 %tobool5028, label %lor.lhs.false5029, label %lor.end5080

lor.lhs.false5029:                                ; preds = %land.lhs.true5027
  %2850 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u5030 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2850, i32 0, i32 2
  %eval5031 = bitcast %union.anon.19* %u5030 to %struct.anon.24*
  %close_paren5032 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval5031, i32 0, i32 6
  %2851 = load i32, i32* %close_paren5032, align 8
  %2852 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %2853 = bitcast %struct.regnode* %2852 to %struct.regnode_1*
  %arg15033 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2853, i32 0, i32 3
  %2854 = load i32, i32* %arg15033, align 4
  %cmp5034 = icmp ne i32 %2851, %2854
  br i1 %cmp5034, label %lor.end5080, label %lor.lhs.false5036

lor.lhs.false5036:                                ; preds = %lor.lhs.false5029, %lor.lhs.false5022
  %2855 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %type5037 = getelementptr inbounds %struct.regnode, %struct.regnode* %2855, i32 0, i32 1
  %2856 = load i8, i8* %type5037, align 1
  %conv5038 = zext i8 %2856 to i32
  %cmp5039 = icmp eq i32 %conv5038, 68
  br i1 %cmp5039, label %lor.end5080, label %lor.lhs.false5041

lor.lhs.false5041:                                ; preds = %lor.lhs.false5036
  %2857 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %type5042 = getelementptr inbounds %struct.regnode, %struct.regnode* %2857, i32 0, i32 1
  %2858 = load i8, i8* %type5042, align 1
  %conv5043 = zext i8 %2858 to i32
  %cmp5044 = icmp eq i32 %conv5043, 65
  br i1 %cmp5044, label %lor.end5080, label %lor.lhs.false5046

lor.lhs.false5046:                                ; preds = %lor.lhs.false5041
  %2859 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %type5047 = getelementptr inbounds %struct.regnode, %struct.regnode* %2859, i32 0, i32 1
  %2860 = load i8, i8* %type5047, align 1
  %conv5048 = zext i8 %2860 to i32
  %cmp5049 = icmp eq i32 %conv5048, 63
  br i1 %cmp5049, label %lor.end5080, label %lor.lhs.false5051

lor.lhs.false5051:                                ; preds = %lor.lhs.false5046
  %2861 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %type5052 = getelementptr inbounds %struct.regnode, %struct.regnode* %2861, i32 0, i32 1
  %2862 = load i8, i8* %type5052, align 1
  %conv5053 = zext i8 %2862 to i32
  %cmp5054 = icmp eq i32 %conv5053, 43
  br i1 %cmp5054, label %lor.end5080, label %lor.lhs.false5056

lor.lhs.false5056:                                ; preds = %lor.lhs.false5051
  %2863 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %type5057 = getelementptr inbounds %struct.regnode, %struct.regnode* %2863, i32 0, i32 1
  %2864 = load i8, i8* %type5057, align 1
  %conv5058 = zext i8 %2864 to i32
  %cmp5059 = icmp eq i32 %conv5058, 69
  br i1 %cmp5059, label %lor.end5080, label %lor.lhs.false5061

lor.lhs.false5061:                                ; preds = %lor.lhs.false5056
  %2865 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %type5062 = getelementptr inbounds %struct.regnode, %struct.regnode* %2865, i32 0, i32 1
  %2866 = load i8, i8* %type5062, align 1
  %conv5063 = zext i8 %2866 to i32
  %cmp5064 = icmp eq i32 %conv5063, 90
  br i1 %cmp5064, label %lor.end5080, label %lor.rhs5066

lor.rhs5066:                                      ; preds = %lor.lhs.false5061
  %2867 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %type5067 = getelementptr inbounds %struct.regnode, %struct.regnode* %2867, i32 0, i32 1
  %2868 = load i8, i8* %type5067, align 1
  %idxprom5068 = zext i8 %2868 to i64
  %arrayidx5069 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom5068
  %2869 = load i8, i8* %arrayidx5069, align 1
  %conv5070 = zext i8 %2869 to i32
  %cmp5071 = icmp eq i32 %conv5070, 44
  br i1 %cmp5071, label %land.rhs5073, label %land.end5078

land.rhs5073:                                     ; preds = %lor.rhs5066
  %2870 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %2871 = bitcast %struct.regnode* %2870 to %struct.regnode_2*
  %arg15074 = getelementptr inbounds %struct.regnode_2, %struct.regnode_2* %2871, i32 0, i32 3
  %2872 = load i16, i16* %arg15074, align 2
  %conv5075 = zext i16 %2872 to i32
  %cmp5076 = icmp sgt i32 %conv5075, 0
  br label %land.end5078

land.end5078:                                     ; preds = %land.rhs5073, %lor.rhs5066
  %2873 = phi i1 [ false, %lor.rhs5066 ], [ %cmp5076, %land.rhs5073 ]
  br label %lor.end5080

lor.end5080:                                      ; preds = %land.end5078, %lor.lhs.false5061, %lor.lhs.false5056, %lor.lhs.false5051, %lor.lhs.false5046, %lor.lhs.false5041, %lor.lhs.false5036, %lor.lhs.false5029, %land.lhs.true5027, %while.cond5017
  %2874 = phi i1 [ true, %lor.lhs.false5061 ], [ true, %lor.lhs.false5056 ], [ true, %lor.lhs.false5051 ], [ true, %lor.lhs.false5046 ], [ true, %lor.lhs.false5041 ], [ true, %lor.lhs.false5036 ], [ true, %lor.lhs.false5029 ], [ true, %land.lhs.true5027 ], [ true, %while.cond5017 ], [ %2873, %land.end5078 ]
  br i1 %2874, label %while.body5082, label %while.end5130

while.body5082:                                   ; preds = %lor.end5080
  %2875 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %type5084 = getelementptr inbounds %struct.regnode, %struct.regnode* %2875, i32 0, i32 1
  %2876 = load i8, i8* %type5084, align 1
  %conv5085 = zext i8 %2876 to i16
  store i16 %conv5085, i16* %type5083, align 2
  %2877 = load i16, i16* %type5083, align 2
  %conv5086 = zext i16 %2877 to i32
  %cmp5087 = icmp eq i32 %conv5086, 65
  br i1 %cmp5087, label %if.then5095, label %lor.lhs.false5089

lor.lhs.false5089:                                ; preds = %while.body5082
  %2878 = load i16, i16* %type5083, align 2
  %idxprom5090 = zext i16 %2878 to i64
  %arrayidx5091 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom5090
  %2879 = load i8, i8* %arrayidx5091, align 1
  %conv5092 = zext i8 %2879 to i32
  %cmp5093 = icmp eq i32 %conv5092, 44
  br i1 %cmp5093, label %if.then5095, label %if.else5098

if.then5095:                                      ; preds = %lor.lhs.false5089, %while.body5082
  %2880 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %add.ptr5096 = getelementptr inbounds %struct.regnode, %struct.regnode* %2880, i64 1
  %add.ptr5097 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr5096, i64 1
  store %struct.regnode* %add.ptr5097, %struct.regnode** %text_node5001, align 8
  br label %if.end5129

if.else5098:                                      ; preds = %lor.lhs.false5089
  %2881 = load i16, i16* %type5083, align 2
  %conv5099 = zext i16 %2881 to i32
  %cmp5100 = icmp eq i32 %conv5099, 43
  br i1 %cmp5100, label %if.then5102, label %if.else5104

if.then5102:                                      ; preds = %if.else5098
  %2882 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %add.ptr5103 = getelementptr inbounds %struct.regnode, %struct.regnode* %2882, i64 1
  store %struct.regnode* %add.ptr5103, %struct.regnode** %text_node5001, align 8
  br label %if.end5128

if.else5104:                                      ; preds = %if.else5098
  %2883 = load i16, i16* %type5083, align 2
  %conv5105 = zext i16 %2883 to i32
  %cmp5106 = icmp eq i32 %conv5105, 63
  br i1 %cmp5106, label %if.then5108, label %if.else5122

if.then5108:                                      ; preds = %if.else5104
  %2884 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %flags5109 = getelementptr inbounds %struct.regnode, %struct.regnode* %2884, i32 0, i32 0
  %2885 = load i8, i8* %flags5109, align 2
  %conv5110 = zext i8 %2885 to i32
  %cmp5111 = icmp eq i32 %conv5110, 0
  br i1 %cmp5111, label %cond.true5113, label %cond.false5116

cond.true5113:                                    ; preds = %if.then5108
  %2886 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %add.ptr5114 = getelementptr inbounds %struct.regnode, %struct.regnode* %2886, i64 1
  %add.ptr5115 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr5114, i64 1
  br label %cond.end5120

cond.false5116:                                   ; preds = %if.then5108
  %2887 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %2888 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %2889 = bitcast %struct.regnode* %2888 to %struct.regnode_1*
  %arg15117 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %2889, i32 0, i32 3
  %2890 = load i32, i32* %arg15117, align 4
  %idx.ext5118 = zext i32 %2890 to i64
  %add.ptr5119 = getelementptr inbounds %struct.regnode, %struct.regnode* %2887, i64 %idx.ext5118
  br label %cond.end5120

cond.end5120:                                     ; preds = %cond.false5116, %cond.true5113
  %cond5121 = phi %struct.regnode* [ %add.ptr5115, %cond.true5113 ], [ %add.ptr5119, %cond.false5116 ]
  store %struct.regnode* %cond5121, %struct.regnode** %text_node5001, align 8
  br label %if.end5127

if.else5122:                                      ; preds = %if.else5104
  %2891 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %next_off5123 = getelementptr inbounds %struct.regnode, %struct.regnode* %2891, i32 0, i32 2
  %2892 = load i16, i16* %next_off5123, align 2
  %conv5124 = zext i16 %2892 to i32
  %2893 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %idx.ext5125 = sext i32 %conv5124 to i64
  %add.ptr5126 = getelementptr inbounds %struct.regnode, %struct.regnode* %2893, i64 %idx.ext5125
  store %struct.regnode* %add.ptr5126, %struct.regnode** %text_node5001, align 8
  br label %if.end5127

if.end5127:                                       ; preds = %if.else5122, %cond.end5120
  br label %if.end5128

if.end5128:                                       ; preds = %if.end5127, %if.then5102
  br label %if.end5129

if.end5129:                                       ; preds = %if.end5128, %if.then5095
  br label %while.cond5017

while.end5130:                                    ; preds = %lor.end5080
  br label %do.end5131

do.end5131:                                       ; preds = %while.end5130
  br label %if.end5132

if.end5132:                                       ; preds = %do.end5131, %lor.lhs.false5008, %if.else5000
  %2894 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %type5133 = getelementptr inbounds %struct.regnode, %struct.regnode* %2894, i32 0, i32 1
  %2895 = load i8, i8* %type5133, align 1
  %idxprom5134 = zext i8 %2895 to i64
  %arrayidx5135 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom5134
  %2896 = load i8, i8* %arrayidx5135, align 1
  %conv5136 = zext i8 %2896 to i32
  %cmp5137 = icmp eq i32 %conv5136, 31
  br i1 %cmp5137, label %if.else5153, label %lor.lhs.false5139

lor.lhs.false5139:                                ; preds = %if.end5132
  %2897 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %type5140 = getelementptr inbounds %struct.regnode, %struct.regnode* %2897, i32 0, i32 1
  %2898 = load i8, i8* %type5140, align 1
  %idxprom5141 = zext i8 %2898 to i64
  %arrayidx5142 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom5141
  %2899 = load i8, i8* %arrayidx5142, align 1
  %conv5143 = zext i8 %2899 to i32
  %cmp5144 = icmp eq i32 %conv5143, 51
  br i1 %cmp5144, label %if.else5153, label %if.then5146

if.then5146:                                      ; preds = %lor.lhs.false5139
  %2900 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5147 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2900, i32 0, i32 2
  %curly5148 = bitcast %union.anon.19* %u5147 to %struct.anon.31*
  %c25149 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5148, i32 0, i32 5
  store i32 -1000, i32* %c25149, align 4
  %2901 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5150 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2901, i32 0, i32 2
  %curly5151 = bitcast %union.anon.19* %u5150 to %struct.anon.31*
  %c15152 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5151, i32 0, i32 4
  store i32 -1000, i32* %c15152, align 8
  br label %if.end5186

if.else5153:                                      ; preds = %lor.lhs.false5139, %if.end5132
  %2902 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %type5154 = getelementptr inbounds %struct.regnode, %struct.regnode* %2902, i32 0, i32 1
  %2903 = load i8, i8* %type5154, align 1
  %idxprom5155 = zext i8 %2903 to i64
  %arrayidx5156 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom5155
  %2904 = load i8, i8* %arrayidx5156, align 1
  %conv5157 = zext i8 %2904 to i32
  %cmp5158 = icmp ne i32 %conv5157, 31
  br i1 %cmp5158, label %if.then5160, label %if.else5167

if.then5160:                                      ; preds = %if.else5153
  %2905 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5161 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2905, i32 0, i32 2
  %curly5162 = bitcast %union.anon.19* %u5161 to %struct.anon.31*
  %c25163 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5162, i32 0, i32 5
  store i32 -1000, i32* %c25163, align 4
  %2906 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5164 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2906, i32 0, i32 2
  %curly5165 = bitcast %union.anon.19* %u5164 to %struct.anon.31*
  %c15166 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5165, i32 0, i32 4
  store i32 -1000, i32* %c15166, align 8
  br label %if.end5185

if.else5167:                                      ; preds = %if.else5153
  %2907 = load %struct.regnode*, %struct.regnode** %text_node5001, align 8
  %2908 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5168 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2908, i32 0, i32 2
  %curly5169 = bitcast %union.anon.19* %u5168 to %struct.anon.31*
  %c15170 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5169, i32 0, i32 4
  %2909 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5171 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2909, i32 0, i32 2
  %curly5172 = bitcast %union.anon.19* %u5171 to %struct.anon.31*
  %c1_utf85173 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5172, i32 0, i32 13
  %arraydecay5174 = getelementptr inbounds [14 x i8], [14 x i8]* %c1_utf85173, i64 0, i64 0
  %2910 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5175 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2910, i32 0, i32 2
  %curly5176 = bitcast %union.anon.19* %u5175 to %struct.anon.31*
  %c25177 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5176, i32 0, i32 5
  %2911 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5178 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2911, i32 0, i32 2
  %curly5179 = bitcast %union.anon.19* %u5178 to %struct.anon.31*
  %c2_utf85180 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5179, i32 0, i32 14
  %arraydecay5181 = getelementptr inbounds [14 x i8], [14 x i8]* %c2_utf85180, i64 0, i64 0
  %2912 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call5182 = call zeroext i1 @S_setup_EXACTISH_ST_c1_c2(%struct.regnode* %2907, i32* %c15170, i8* %arraydecay5174, i32* %c25177, i8* %arraydecay5181, %struct.regmatch_info* %2912)
  br i1 %call5182, label %if.end5184, label %if.then5183

if.then5183:                                      ; preds = %if.else5167
  br label %no

if.end5184:                                       ; preds = %if.else5167
  br label %if.end5185

if.end5185:                                       ; preds = %if.end5184, %if.then5160
  br label %if.end5186

if.end5186:                                       ; preds = %if.end5185, %if.then5146
  br label %if.end5187

if.end5187:                                       ; preds = %if.end5186, %if.then4993
  %2913 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %2914 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5188 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2914, i32 0, i32 2
  %curly5189 = bitcast %union.anon.19* %u5188 to %struct.anon.31*
  %A5190 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5189, i32 0, i32 11
  store %struct.regnode* %2913, %struct.regnode** %A5190, align 8
  %2915 = load %struct.regnode*, %struct.regnode** %next, align 8
  %2916 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5191 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2916, i32 0, i32 2
  %curly5192 = bitcast %union.anon.19* %u5191 to %struct.anon.31*
  %B5193 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5192, i32 0, i32 12
  store %struct.regnode* %2915, %struct.regnode** %B5193, align 8
  %2917 = load i8, i8* %minmod, align 1
  %tobool5194 = trunc i8 %2917 to i1
  br i1 %tobool5194, label %if.then5195, label %if.else5337

if.then5195:                                      ; preds = %if.end5187
  %2918 = load i8*, i8** %locinput, align 8
  store i8* %2918, i8** %li, align 8
  store i8 0, i8* %minmod, align 1
  %2919 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5196 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2919, i32 0, i32 2
  %curly5197 = bitcast %union.anon.19* %u5196 to %struct.anon.31*
  %min5198 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5197, i32 0, i32 9
  %2920 = load i32, i32* %min5198, align 4
  %tobool5199 = icmp ne i32 %2920, 0
  br i1 %tobool5199, label %land.lhs.true5200, label %if.end5214

land.lhs.true5200:                                ; preds = %if.then5195
  %2921 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %2922 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5201 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2922, i32 0, i32 2
  %curly5202 = bitcast %union.anon.19* %u5201 to %struct.anon.31*
  %A5203 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5202, i32 0, i32 11
  %2923 = load %struct.regnode*, %struct.regnode** %A5203, align 8
  %2924 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %2925 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5204 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2925, i32 0, i32 2
  %curly5205 = bitcast %union.anon.19* %u5204 to %struct.anon.31*
  %min5206 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5205, i32 0, i32 9
  %2926 = load i32, i32* %min5206, align 4
  %2927 = load i32, i32* %depth, align 4
  %call5207 = call i32 @S_regrepeat(%struct.regexp* %2921, i8** %li, %struct.regnode* %2923, %struct.regmatch_info* %2924, i32 %2926, i32 %2927)
  %2928 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5208 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2928, i32 0, i32 2
  %curly5209 = bitcast %union.anon.19* %u5208 to %struct.anon.31*
  %min5210 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5209, i32 0, i32 9
  %2929 = load i32, i32* %min5210, align 4
  %cmp5211 = icmp slt i32 %call5207, %2929
  br i1 %cmp5211, label %if.then5213, label %if.end5214

if.then5213:                                      ; preds = %land.lhs.true5200
  br label %no

if.end5214:                                       ; preds = %land.lhs.true5200, %if.then5195
  %2930 = load i8*, i8** %li, align 8
  store i8* %2930, i8** %locinput, align 8
  %2931 = load i8*, i8** %locinput, align 8
  %2932 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend5215 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2932, i32 0, i32 2
  %2933 = load i8*, i8** %strend5215, align 8
  %cmp5216 = icmp ult i8* %2931, %2933
  br i1 %cmp5216, label %cond.true5218, label %cond.false5220

cond.true5218:                                    ; preds = %if.end5214
  %2934 = load i8*, i8** %locinput, align 8
  %2935 = load i8, i8* %2934, align 1
  %conv5219 = zext i8 %2935 to i32
  br label %cond.end5221

cond.false5220:                                   ; preds = %if.end5214
  br label %cond.end5221

cond.end5221:                                     ; preds = %cond.false5220, %cond.true5218
  %cond5222 = phi i32 [ %conv5219, %cond.true5218 ], [ -10, %cond.false5220 ]
  store i32 %cond5222, i32* %nextchr, align 4
  %2936 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5223 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2936, i32 0, i32 2
  %curly5224 = bitcast %union.anon.19* %u5223 to %struct.anon.31*
  %min5225 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5224, i32 0, i32 9
  %2937 = load i32, i32* %min5225, align 4
  %2938 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5226 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2938, i32 0, i32 2
  %curly5227 = bitcast %union.anon.19* %u5226 to %struct.anon.31*
  %count5228 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5227, i32 0, i32 8
  store i32 %2937, i32* %count5228, align 8
  %2939 = load i32, i32* @PL_savestack_ix, align 4
  %2940 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5229 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2940, i32 0, i32 2
  %curly5230 = bitcast %union.anon.19* %u5229 to %struct.anon.31*
  %cp5231 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5230, i32 0, i32 1
  store i32 %2939, i32* %cp5231, align 4
  %2941 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5232 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2941, i32 0, i32 2
  %curly5233 = bitcast %union.anon.19* %u5232 to %struct.anon.31*
  %c15234 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5233, i32 0, i32 4
  %2942 = load i32, i32* %c15234, align 8
  %cmp5235 = icmp eq i32 %2942, -1000
  br i1 %cmp5235, label %if.then5237, label %if.end5238

if.then5237:                                      ; preds = %cond.end5221
  br label %curly_try_B_min

if.end5238:                                       ; preds = %cond.end5221
  %2943 = load i8*, i8** %locinput, align 8
  %2944 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5239 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2944, i32 0, i32 2
  %curly5240 = bitcast %union.anon.19* %u5239 to %struct.anon.31*
  %oldloc = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5240, i32 0, i32 7
  store i8* %2943, i8** %oldloc, align 8
  %2945 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5241 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2945, i32 0, i32 2
  %curly5242 = bitcast %union.anon.19* %u5241 to %struct.anon.31*
  %max5243 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5242, i32 0, i32 10
  %2946 = load i32, i32* %max5243, align 8
  %cmp5244 = icmp eq i32 %2946, 32767
  br i1 %cmp5244, label %if.then5246, label %if.else5268

if.then5246:                                      ; preds = %if.end5238
  %2947 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend5247 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2947, i32 0, i32 2
  %2948 = load i8*, i8** %strend5247, align 8
  %add.ptr5248 = getelementptr inbounds i8, i8* %2948, i64 -1
  %2949 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5249 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2949, i32 0, i32 2
  %curly5250 = bitcast %union.anon.19* %u5249 to %struct.anon.31*
  %maxpos = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5250, i32 0, i32 6
  store i8* %add.ptr5248, i8** %maxpos, align 8
  %2950 = load i8, i8* %utf8_target, align 1
  %tobool5251 = trunc i8 %2950 to i1
  br i1 %tobool5251, label %if.then5252, label %if.end5267

if.then5252:                                      ; preds = %if.then5246
  br label %while.cond5253

while.cond5253:                                   ; preds = %while.body5261, %if.then5252
  %2951 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5254 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2951, i32 0, i32 2
  %curly5255 = bitcast %union.anon.19* %u5254 to %struct.anon.31*
  %maxpos5256 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5255, i32 0, i32 6
  %2952 = load i8*, i8** %maxpos5256, align 8
  %2953 = load i8, i8* %2952, align 1
  %conv5257 = zext i8 %2953 to i32
  %and5258 = and i32 %conv5257, 192
  %cmp5259 = icmp eq i32 %and5258, 128
  br i1 %cmp5259, label %while.body5261, label %while.end5266

while.body5261:                                   ; preds = %while.cond5253
  %2954 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5262 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2954, i32 0, i32 2
  %curly5263 = bitcast %union.anon.19* %u5262 to %struct.anon.31*
  %maxpos5264 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5263, i32 0, i32 6
  %2955 = load i8*, i8** %maxpos5264, align 8
  %incdec.ptr5265 = getelementptr inbounds i8, i8* %2955, i32 -1
  store i8* %incdec.ptr5265, i8** %maxpos5264, align 8
  br label %while.cond5253

while.end5266:                                    ; preds = %while.cond5253
  br label %if.end5267

if.end5267:                                       ; preds = %while.end5266, %if.then5246
  br label %if.end5336

if.else5268:                                      ; preds = %if.end5238
  %2956 = load i8, i8* %utf8_target, align 1
  %tobool5269 = trunc i8 %2956 to i1
  br i1 %tobool5269, label %if.then5270, label %if.else5308

if.then5270:                                      ; preds = %if.else5268
  %2957 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5271 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2957, i32 0, i32 2
  %curly5272 = bitcast %union.anon.19* %u5271 to %struct.anon.31*
  %max5273 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5272, i32 0, i32 10
  %2958 = load i32, i32* %max5273, align 8
  %2959 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5274 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2959, i32 0, i32 2
  %curly5275 = bitcast %union.anon.19* %u5274 to %struct.anon.31*
  %min5276 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5275, i32 0, i32 9
  %2960 = load i32, i32* %min5276, align 4
  %sub5277 = sub nsw i32 %2958, %2960
  store i32 %sub5277, i32* %m, align 4
  %2961 = load i8*, i8** %locinput, align 8
  %2962 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5278 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2962, i32 0, i32 2
  %curly5279 = bitcast %union.anon.19* %u5278 to %struct.anon.31*
  %maxpos5280 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5279, i32 0, i32 6
  store i8* %2961, i8** %maxpos5280, align 8
  br label %for.cond5281

for.cond5281:                                     ; preds = %for.inc5305, %if.then5270
  %2963 = load i32, i32* %m, align 4
  %cmp5282 = icmp sgt i32 %2963, 0
  br i1 %cmp5282, label %land.rhs5284, label %land.end5291

land.rhs5284:                                     ; preds = %for.cond5281
  %2964 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5285 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2964, i32 0, i32 2
  %curly5286 = bitcast %union.anon.19* %u5285 to %struct.anon.31*
  %maxpos5287 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5286, i32 0, i32 6
  %2965 = load i8*, i8** %maxpos5287, align 8
  %2966 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend5288 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2966, i32 0, i32 2
  %2967 = load i8*, i8** %strend5288, align 8
  %cmp5289 = icmp ult i8* %2965, %2967
  br label %land.end5291

land.end5291:                                     ; preds = %land.rhs5284, %for.cond5281
  %2968 = phi i1 [ false, %for.cond5281 ], [ %cmp5289, %land.rhs5284 ]
  br i1 %2968, label %for.body5293, label %for.end5307

for.body5293:                                     ; preds = %land.end5291
  %2969 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5294 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2969, i32 0, i32 2
  %curly5295 = bitcast %union.anon.19* %u5294 to %struct.anon.31*
  %maxpos5296 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5295, i32 0, i32 6
  %2970 = load i8*, i8** %maxpos5296, align 8
  %2971 = load i8, i8* %2970, align 1
  %idxprom5297 = zext i8 %2971 to i64
  %arrayidx5298 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom5297
  %2972 = load i8, i8* %arrayidx5298, align 1
  %conv5299 = zext i8 %2972 to i32
  %2973 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5300 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2973, i32 0, i32 2
  %curly5301 = bitcast %union.anon.19* %u5300 to %struct.anon.31*
  %maxpos5302 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5301, i32 0, i32 6
  %2974 = load i8*, i8** %maxpos5302, align 8
  %idx.ext5303 = sext i32 %conv5299 to i64
  %add.ptr5304 = getelementptr inbounds i8, i8* %2974, i64 %idx.ext5303
  store i8* %add.ptr5304, i8** %maxpos5302, align 8
  br label %for.inc5305

for.inc5305:                                      ; preds = %for.body5293
  %2975 = load i32, i32* %m, align 4
  %dec5306 = add nsw i32 %2975, -1
  store i32 %dec5306, i32* %m, align 4
  br label %for.cond5281

for.end5307:                                      ; preds = %land.end5291
  br label %if.end5335

if.else5308:                                      ; preds = %if.else5268
  %2976 = load i8*, i8** %locinput, align 8
  %2977 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5309 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2977, i32 0, i32 2
  %curly5310 = bitcast %union.anon.19* %u5309 to %struct.anon.31*
  %max5311 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5310, i32 0, i32 10
  %2978 = load i32, i32* %max5311, align 8
  %idx.ext5312 = sext i32 %2978 to i64
  %add.ptr5313 = getelementptr inbounds i8, i8* %2976, i64 %idx.ext5312
  %2979 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5314 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2979, i32 0, i32 2
  %curly5315 = bitcast %union.anon.19* %u5314 to %struct.anon.31*
  %min5316 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5315, i32 0, i32 9
  %2980 = load i32, i32* %min5316, align 4
  %idx.ext5317 = sext i32 %2980 to i64
  %idx.neg = sub i64 0, %idx.ext5317
  %add.ptr5318 = getelementptr inbounds i8, i8* %add.ptr5313, i64 %idx.neg
  %2981 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5319 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2981, i32 0, i32 2
  %curly5320 = bitcast %union.anon.19* %u5319 to %struct.anon.31*
  %maxpos5321 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5320, i32 0, i32 6
  store i8* %add.ptr5318, i8** %maxpos5321, align 8
  %2982 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5322 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2982, i32 0, i32 2
  %curly5323 = bitcast %union.anon.19* %u5322 to %struct.anon.31*
  %maxpos5324 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5323, i32 0, i32 6
  %2983 = load i8*, i8** %maxpos5324, align 8
  %2984 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend5325 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2984, i32 0, i32 2
  %2985 = load i8*, i8** %strend5325, align 8
  %cmp5326 = icmp uge i8* %2983, %2985
  br i1 %cmp5326, label %if.then5328, label %if.end5334

if.then5328:                                      ; preds = %if.else5308
  %2986 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend5329 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2986, i32 0, i32 2
  %2987 = load i8*, i8** %strend5329, align 8
  %add.ptr5330 = getelementptr inbounds i8, i8* %2987, i64 -1
  %2988 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5331 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2988, i32 0, i32 2
  %curly5332 = bitcast %union.anon.19* %u5331 to %struct.anon.31*
  %maxpos5333 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5332, i32 0, i32 6
  store i8* %add.ptr5330, i8** %maxpos5333, align 8
  br label %if.end5334

if.end5334:                                       ; preds = %if.then5328, %if.else5308
  br label %if.end5335

if.end5335:                                       ; preds = %if.end5334, %for.end5307
  br label %if.end5336

if.end5336:                                       ; preds = %if.end5335, %if.end5267
  br label %curly_try_B_min_known

if.else5337:                                      ; preds = %if.end5187
  %2989 = load i8*, i8** %locinput, align 8
  store i8* %2989, i8** %li5338, align 8
  %2990 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %2991 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5339 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2991, i32 0, i32 2
  %curly5340 = bitcast %union.anon.19* %u5339 to %struct.anon.31*
  %A5341 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5340, i32 0, i32 11
  %2992 = load %struct.regnode*, %struct.regnode** %A5341, align 8
  %2993 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %2994 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5342 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2994, i32 0, i32 2
  %curly5343 = bitcast %union.anon.19* %u5342 to %struct.anon.31*
  %max5344 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5343, i32 0, i32 10
  %2995 = load i32, i32* %max5344, align 8
  %2996 = load i32, i32* %depth, align 4
  %call5345 = call i32 @S_regrepeat(%struct.regexp* %2990, i8** %li5338, %struct.regnode* %2992, %struct.regmatch_info* %2993, i32 %2995, i32 %2996)
  %2997 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5346 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2997, i32 0, i32 2
  %curly5347 = bitcast %union.anon.19* %u5346 to %struct.anon.31*
  %count5348 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5347, i32 0, i32 8
  store i32 %call5345, i32* %count5348, align 8
  %2998 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5349 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %2998, i32 0, i32 2
  %curly5350 = bitcast %union.anon.19* %u5349 to %struct.anon.31*
  %count5351 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5350, i32 0, i32 8
  %2999 = load i32, i32* %count5351, align 8
  %3000 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5352 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3000, i32 0, i32 2
  %curly5353 = bitcast %union.anon.19* %u5352 to %struct.anon.31*
  %min5354 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5353, i32 0, i32 9
  %3001 = load i32, i32* %min5354, align 4
  %cmp5355 = icmp slt i32 %2999, %3001
  br i1 %cmp5355, label %if.then5357, label %if.end5358

if.then5357:                                      ; preds = %if.else5337
  br label %no

if.end5358:                                       ; preds = %if.else5337
  %3002 = load i8*, i8** %li5338, align 8
  store i8* %3002, i8** %locinput, align 8
  %3003 = load i8*, i8** %locinput, align 8
  %3004 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend5359 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3004, i32 0, i32 2
  %3005 = load i8*, i8** %strend5359, align 8
  %cmp5360 = icmp ult i8* %3003, %3005
  br i1 %cmp5360, label %cond.true5362, label %cond.false5364

cond.true5362:                                    ; preds = %if.end5358
  %3006 = load i8*, i8** %locinput, align 8
  %3007 = load i8, i8* %3006, align 1
  %conv5363 = zext i8 %3007 to i32
  br label %cond.end5365

cond.false5364:                                   ; preds = %if.end5358
  br label %cond.end5365

cond.end5365:                                     ; preds = %cond.false5364, %cond.true5362
  %cond5366 = phi i32 [ %conv5363, %cond.true5362 ], [ -10, %cond.false5364 ]
  store i32 %cond5366, i32* %nextchr, align 4
  %3008 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5367 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3008, i32 0, i32 2
  %curly5368 = bitcast %union.anon.19* %u5367 to %struct.anon.31*
  %count5369 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5368, i32 0, i32 8
  %3009 = load i32, i32* %count5369, align 8
  %3010 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5370 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3010, i32 0, i32 2
  %curly5371 = bitcast %union.anon.19* %u5370 to %struct.anon.31*
  %min5372 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5371, i32 0, i32 9
  %3011 = load i32, i32* %min5372, align 4
  %cmp5373 = icmp sgt i32 %3009, %3011
  br i1 %cmp5373, label %land.lhs.true5375, label %if.end5418

land.lhs.true5375:                                ; preds = %cond.end5365
  %3012 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5376 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3012, i32 0, i32 2
  %curly5377 = bitcast %union.anon.19* %u5376 to %struct.anon.31*
  %B5378 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5377, i32 0, i32 12
  %3013 = load %struct.regnode*, %struct.regnode** %B5378, align 8
  %type5379 = getelementptr inbounds %struct.regnode, %struct.regnode* %3013, i32 0, i32 1
  %3014 = load i8, i8* %type5379, align 1
  %idxprom5380 = zext i8 %3014 to i64
  %arrayidx5381 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_regkind, i64 0, i64 %idxprom5380
  %3015 = load i8, i8* %arrayidx5381, align 1
  %conv5382 = zext i8 %3015 to i32
  %cmp5383 = icmp eq i32 %conv5382, 4
  br i1 %cmp5383, label %land.lhs.true5385, label %if.end5418

land.lhs.true5385:                                ; preds = %land.lhs.true5375
  %3016 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5386 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3016, i32 0, i32 2
  %curly5387 = bitcast %union.anon.19* %u5386 to %struct.anon.31*
  %B5388 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5387, i32 0, i32 12
  %3017 = load %struct.regnode*, %struct.regnode** %B5388, align 8
  %type5389 = getelementptr inbounds %struct.regnode, %struct.regnode* %3017, i32 0, i32 1
  %3018 = load i8, i8* %type5389, align 1
  %conv5390 = zext i8 %3018 to i32
  %cmp5391 = icmp ne i32 %conv5390, 5
  br i1 %cmp5391, label %if.then5393, label %if.end5418

if.then5393:                                      ; preds = %land.lhs.true5385
  %3019 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5394 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3019, i32 0, i32 2
  %curly5395 = bitcast %union.anon.19* %u5394 to %struct.anon.31*
  %count5396 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5395, i32 0, i32 8
  %3020 = load i32, i32* %count5396, align 8
  %3021 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5397 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3021, i32 0, i32 2
  %curly5398 = bitcast %union.anon.19* %u5397 to %struct.anon.31*
  %min5399 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5398, i32 0, i32 9
  store i32 %3020, i32* %min5399, align 4
  %3022 = load i8*, i8** %locinput, align 8
  %add.ptr5400 = getelementptr inbounds i8, i8* %3022, i64 -1
  %3023 = load i8, i8* %add.ptr5400, align 1
  %conv5401 = zext i8 %3023 to i32
  %cmp5402 = icmp eq i32 %conv5401, 10
  br i1 %cmp5402, label %land.lhs.true5404, label %if.end5417

land.lhs.true5404:                                ; preds = %if.then5393
  %3024 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5405 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3024, i32 0, i32 2
  %curly5406 = bitcast %union.anon.19* %u5405 to %struct.anon.31*
  %B5407 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5406, i32 0, i32 12
  %3025 = load %struct.regnode*, %struct.regnode** %B5407, align 8
  %type5408 = getelementptr inbounds %struct.regnode, %struct.regnode* %3025, i32 0, i32 1
  %3026 = load i8, i8* %type5408, align 1
  %conv5409 = zext i8 %3026 to i32
  %cmp5410 = icmp ne i32 %conv5409, 6
  br i1 %cmp5410, label %if.then5412, label %if.end5417

if.then5412:                                      ; preds = %land.lhs.true5404
  %3027 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5413 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3027, i32 0, i32 2
  %curly5414 = bitcast %union.anon.19* %u5413 to %struct.anon.31*
  %min5415 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5414, i32 0, i32 9
  %3028 = load i32, i32* %min5415, align 4
  %dec5416 = add nsw i32 %3028, -1
  store i32 %dec5416, i32* %min5415, align 4
  br label %if.end5417

if.end5417:                                       ; preds = %if.then5412, %land.lhs.true5404, %if.then5393
  br label %if.end5418

if.end5418:                                       ; preds = %if.end5417, %land.lhs.true5385, %land.lhs.true5375, %cond.end5365
  %3029 = load i32, i32* @PL_savestack_ix, align 4
  %3030 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5419 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3030, i32 0, i32 2
  %curly5420 = bitcast %union.anon.19* %u5419 to %struct.anon.31*
  %cp5421 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5420, i32 0, i32 1
  store i32 %3029, i32* %cp5421, align 4
  br label %curly_try_B_max

sw.bb5422:                                        ; preds = %cond.end45
  br label %do.body5423

do.body5423:                                      ; preds = %sw.bb5422
  %3031 = load i32, i32* @PL_savestack_ix, align 4
  %3032 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5424 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3032, i32 0, i32 2
  %curly5425 = bitcast %union.anon.19* %u5424 to %struct.anon.31*
  %cp5426 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5425, i32 0, i32 1
  %3033 = load i32, i32* %cp5426, align 4
  %cmp5427 = icmp sgt i32 %3031, %3033
  br i1 %cmp5427, label %if.then5429, label %if.end5433

if.then5429:                                      ; preds = %do.body5423
  %3034 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5430 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3034, i32 0, i32 2
  %curly5431 = bitcast %union.anon.19* %u5430 to %struct.anon.31*
  %cp5432 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5431, i32 0, i32 1
  %3035 = load i32, i32* %cp5432, align 4
  call void @Perl_leave_scope(i32 %3035)
  br label %if.end5433

if.end5433:                                       ; preds = %if.then5429, %do.body5423
  br label %do.end5434

do.end5434:                                       ; preds = %if.end5433
  %3036 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5435 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3036, i32 0, i32 2
  %curly5436 = bitcast %union.anon.19* %u5435 to %struct.anon.31*
  %paren5437 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5436, i32 0, i32 0
  %3037 = load i32, i32* %paren5437, align 8
  %tobool5438 = icmp ne i32 %3037, 0
  br i1 %tobool5438, label %if.then5439, label %if.end5460

if.then5439:                                      ; preds = %do.end5434
  %3038 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen5440 = getelementptr inbounds %struct.regexp, %struct.regexp* %3038, i32 0, i32 15
  %3039 = load i32, i32* %lastparen5440, align 8
  store i32 %3039, i32* %n, align 4
  br label %for.cond5441

for.cond5441:                                     ; preds = %for.inc5452, %if.then5439
  %3040 = load i32, i32* %n, align 4
  %3041 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5442 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3041, i32 0, i32 2
  %curly5443 = bitcast %union.anon.19* %u5442 to %struct.anon.31*
  %lastparen5444 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5443, i32 0, i32 2
  %3042 = load i32, i32* %lastparen5444, align 8
  %cmp5445 = icmp ugt i32 %3040, %3042
  br i1 %cmp5445, label %for.body5447, label %for.end5454

for.body5447:                                     ; preds = %for.cond5441
  %3043 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs5448 = getelementptr inbounds %struct.regexp, %struct.regexp* %3043, i32 0, i32 17
  %3044 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs5448, align 8
  %3045 = load i32, i32* %n, align 4
  %idxprom5449 = zext i32 %3045 to i64
  %arrayidx5450 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3044, i64 %idxprom5449
  %end5451 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx5450, i32 0, i32 1
  store i64 -1, i64* %end5451, align 8
  br label %for.inc5452

for.inc5452:                                      ; preds = %for.body5447
  %3046 = load i32, i32* %n, align 4
  %dec5453 = add i32 %3046, -1
  store i32 %dec5453, i32* %n, align 4
  br label %for.cond5441

for.end5454:                                      ; preds = %for.cond5441
  %3047 = load i32, i32* %n, align 4
  %3048 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen5455 = getelementptr inbounds %struct.regexp, %struct.regexp* %3048, i32 0, i32 15
  store i32 %3047, i32* %lastparen5455, align 8
  %3049 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5456 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3049, i32 0, i32 2
  %curly5457 = bitcast %union.anon.19* %u5456 to %struct.anon.31*
  %lastcloseparen5458 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5457, i32 0, i32 3
  %3050 = load i32, i32* %lastcloseparen5458, align 4
  %3051 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen5459 = getelementptr inbounds %struct.regexp, %struct.regexp* %3051, i32 0, i32 16
  store i32 %3050, i32* %lastcloseparen5459, align 4
  br label %if.end5460

if.end5460:                                       ; preds = %for.end5454, %do.end5434
  %3052 = load i8*, i8** %locinput, align 8
  %3053 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5461 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3053, i32 0, i32 2
  %curly5462 = bitcast %union.anon.19* %u5461 to %struct.anon.31*
  %oldloc5463 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5462, i32 0, i32 7
  store i8* %3052, i8** %oldloc5463, align 8
  %3054 = load i8, i8* %utf8_target, align 1
  %tobool5464 = trunc i8 %3054 to i1
  br i1 %tobool5464, label %if.then5465, label %if.else5471

if.then5465:                                      ; preds = %if.end5460
  %3055 = load i8*, i8** %locinput, align 8
  %3056 = load i8, i8* %3055, align 1
  %idxprom5466 = zext i8 %3056 to i64
  %arrayidx5467 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom5466
  %3057 = load i8, i8* %arrayidx5467, align 1
  %conv5468 = zext i8 %3057 to i32
  %3058 = load i8*, i8** %locinput, align 8
  %idx.ext5469 = sext i32 %conv5468 to i64
  %add.ptr5470 = getelementptr inbounds i8, i8* %3058, i64 %idx.ext5469
  store i8* %add.ptr5470, i8** %locinput, align 8
  br label %if.end5473

if.else5471:                                      ; preds = %if.end5460
  %3059 = load i8*, i8** %locinput, align 8
  %incdec.ptr5472 = getelementptr inbounds i8, i8* %3059, i32 1
  store i8* %incdec.ptr5472, i8** %locinput, align 8
  br label %if.end5473

if.end5473:                                       ; preds = %if.else5471, %if.then5465
  %3060 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5474 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3060, i32 0, i32 2
  %curly5475 = bitcast %union.anon.19* %u5474 to %struct.anon.31*
  %count5476 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5475, i32 0, i32 8
  %3061 = load i32, i32* %count5476, align 8
  %inc5477 = add nsw i32 %3061, 1
  store i32 %inc5477, i32* %count5476, align 8
  br label %curly_try_B_min_known

curly_try_B_min_known:                            ; preds = %if.end5473, %if.end5336
  %3062 = load i8, i8* %utf8_target, align 1
  %tobool5479 = trunc i8 %3062 to i1
  br i1 %tobool5479, label %if.then5480, label %if.else5560

if.then5480:                                      ; preds = %curly_try_B_min_known
  %3063 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5481 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3063, i32 0, i32 2
  %curly5482 = bitcast %union.anon.19* %u5481 to %struct.anon.31*
  %oldloc5483 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5482, i32 0, i32 7
  %3064 = load i8*, i8** %oldloc5483, align 8
  %3065 = load i8*, i8** %locinput, align 8
  %cmp5484 = icmp eq i8* %3064, %3065
  %3066 = zext i1 %cmp5484 to i64
  %cond5486 = select i1 %cmp5484, i32 0, i32 1
  store i32 %cond5486, i32* %n5478, align 4
  %3067 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5487 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3067, i32 0, i32 2
  %curly5488 = bitcast %union.anon.19* %u5487 to %struct.anon.31*
  %c15489 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5488, i32 0, i32 4
  %3068 = load i32, i32* %c15489, align 8
  %3069 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5490 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3069, i32 0, i32 2
  %curly5491 = bitcast %union.anon.19* %u5490 to %struct.anon.31*
  %c25492 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5491, i32 0, i32 5
  %3070 = load i32, i32* %c25492, align 4
  %cmp5493 = icmp eq i32 %3068, %3070
  br i1 %cmp5493, label %if.then5495, label %if.else5522

if.then5495:                                      ; preds = %if.then5480
  br label %while.cond5496

while.cond5496:                                   ; preds = %while.body5514, %if.then5495
  %3071 = load i8*, i8** %locinput, align 8
  %3072 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5497 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3072, i32 0, i32 2
  %curly5498 = bitcast %union.anon.19* %u5497 to %struct.anon.31*
  %maxpos5499 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5498, i32 0, i32 6
  %3073 = load i8*, i8** %maxpos5499, align 8
  %cmp5500 = icmp ule i8* %3071, %3073
  br i1 %cmp5500, label %land.rhs5502, label %land.end5512

land.rhs5502:                                     ; preds = %while.cond5496
  %3074 = load i8*, i8** %locinput, align 8
  %3075 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5503 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3075, i32 0, i32 2
  %curly5504 = bitcast %union.anon.19* %u5503 to %struct.anon.31*
  %c1_utf85505 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5504, i32 0, i32 13
  %arraydecay5506 = getelementptr inbounds [14 x i8], [14 x i8]* %c1_utf85505, i64 0, i64 0
  %3076 = load i8*, i8** %locinput, align 8
  %3077 = load i8, i8* %3076, align 1
  %idxprom5507 = zext i8 %3077 to i64
  %arrayidx5508 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom5507
  %3078 = load i8, i8* %arrayidx5508, align 1
  %conv5509 = zext i8 %3078 to i64
  %call5510 = call i32 @memcmp(i8* %3074, i8* %arraydecay5506, i64 %conv5509) #5
  %tobool5511 = icmp ne i32 %call5510, 0
  br label %land.end5512

land.end5512:                                     ; preds = %land.rhs5502, %while.cond5496
  %3079 = phi i1 [ false, %while.cond5496 ], [ %tobool5511, %land.rhs5502 ]
  br i1 %3079, label %while.body5514, label %while.end5521

while.body5514:                                   ; preds = %land.end5512
  %3080 = load i8*, i8** %locinput, align 8
  %3081 = load i8, i8* %3080, align 1
  %idxprom5515 = zext i8 %3081 to i64
  %arrayidx5516 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom5515
  %3082 = load i8, i8* %arrayidx5516, align 1
  %conv5517 = zext i8 %3082 to i32
  %3083 = load i8*, i8** %locinput, align 8
  %idx.ext5518 = sext i32 %conv5517 to i64
  %add.ptr5519 = getelementptr inbounds i8, i8* %3083, i64 %idx.ext5518
  store i8* %add.ptr5519, i8** %locinput, align 8
  %3084 = load i32, i32* %n5478, align 4
  %inc5520 = add nsw i32 %3084, 1
  store i32 %inc5520, i32* %n5478, align 4
  br label %while.cond5496

while.end5521:                                    ; preds = %land.end5512
  br label %if.end5559

if.else5522:                                      ; preds = %if.then5480
  br label %while.cond5523

while.cond5523:                                   ; preds = %while.body5551, %if.else5522
  %3085 = load i8*, i8** %locinput, align 8
  %3086 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5524 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3086, i32 0, i32 2
  %curly5525 = bitcast %union.anon.19* %u5524 to %struct.anon.31*
  %maxpos5526 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5525, i32 0, i32 6
  %3087 = load i8*, i8** %maxpos5526, align 8
  %cmp5527 = icmp ule i8* %3085, %3087
  br i1 %cmp5527, label %land.lhs.true5529, label %land.end5549

land.lhs.true5529:                                ; preds = %while.cond5523
  %3088 = load i8*, i8** %locinput, align 8
  %3089 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5530 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3089, i32 0, i32 2
  %curly5531 = bitcast %union.anon.19* %u5530 to %struct.anon.31*
  %c1_utf85532 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5531, i32 0, i32 13
  %arraydecay5533 = getelementptr inbounds [14 x i8], [14 x i8]* %c1_utf85532, i64 0, i64 0
  %3090 = load i8*, i8** %locinput, align 8
  %3091 = load i8, i8* %3090, align 1
  %idxprom5534 = zext i8 %3091 to i64
  %arrayidx5535 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom5534
  %3092 = load i8, i8* %arrayidx5535, align 1
  %conv5536 = zext i8 %3092 to i64
  %call5537 = call i32 @memcmp(i8* %3088, i8* %arraydecay5533, i64 %conv5536) #5
  %tobool5538 = icmp ne i32 %call5537, 0
  br i1 %tobool5538, label %land.rhs5539, label %land.end5549

land.rhs5539:                                     ; preds = %land.lhs.true5529
  %3093 = load i8*, i8** %locinput, align 8
  %3094 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5540 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3094, i32 0, i32 2
  %curly5541 = bitcast %union.anon.19* %u5540 to %struct.anon.31*
  %c2_utf85542 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5541, i32 0, i32 14
  %arraydecay5543 = getelementptr inbounds [14 x i8], [14 x i8]* %c2_utf85542, i64 0, i64 0
  %3095 = load i8*, i8** %locinput, align 8
  %3096 = load i8, i8* %3095, align 1
  %idxprom5544 = zext i8 %3096 to i64
  %arrayidx5545 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom5544
  %3097 = load i8, i8* %arrayidx5545, align 1
  %conv5546 = zext i8 %3097 to i64
  %call5547 = call i32 @memcmp(i8* %3093, i8* %arraydecay5543, i64 %conv5546) #5
  %tobool5548 = icmp ne i32 %call5547, 0
  br label %land.end5549

land.end5549:                                     ; preds = %land.rhs5539, %land.lhs.true5529, %while.cond5523
  %3098 = phi i1 [ false, %land.lhs.true5529 ], [ false, %while.cond5523 ], [ %tobool5548, %land.rhs5539 ]
  br i1 %3098, label %while.body5551, label %while.end5558

while.body5551:                                   ; preds = %land.end5549
  %3099 = load i8*, i8** %locinput, align 8
  %3100 = load i8, i8* %3099, align 1
  %idxprom5552 = zext i8 %3100 to i64
  %arrayidx5553 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom5552
  %3101 = load i8, i8* %arrayidx5553, align 1
  %conv5554 = zext i8 %3101 to i32
  %3102 = load i8*, i8** %locinput, align 8
  %idx.ext5555 = sext i32 %conv5554 to i64
  %add.ptr5556 = getelementptr inbounds i8, i8* %3102, i64 %idx.ext5555
  store i8* %add.ptr5556, i8** %locinput, align 8
  %3103 = load i32, i32* %n5478, align 4
  %inc5557 = add nsw i32 %3103, 1
  store i32 %inc5557, i32* %n5478, align 4
  br label %while.cond5523

while.end5558:                                    ; preds = %land.end5549
  br label %if.end5559

if.end5559:                                       ; preds = %while.end5558, %while.end5521
  br label %if.end5622

if.else5560:                                      ; preds = %curly_try_B_min_known
  %3104 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5561 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3104, i32 0, i32 2
  %curly5562 = bitcast %union.anon.19* %u5561 to %struct.anon.31*
  %c15563 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5562, i32 0, i32 4
  %3105 = load i32, i32* %c15563, align 8
  %3106 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5564 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3106, i32 0, i32 2
  %curly5565 = bitcast %union.anon.19* %u5564 to %struct.anon.31*
  %c25566 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5565, i32 0, i32 5
  %3107 = load i32, i32* %c25566, align 4
  %cmp5567 = icmp eq i32 %3105, %3107
  br i1 %cmp5567, label %if.then5569, label %if.else5588

if.then5569:                                      ; preds = %if.else5560
  br label %while.cond5570

while.cond5570:                                   ; preds = %while.body5585, %if.then5569
  %3108 = load i8*, i8** %locinput, align 8
  %3109 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5571 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3109, i32 0, i32 2
  %curly5572 = bitcast %union.anon.19* %u5571 to %struct.anon.31*
  %maxpos5573 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5572, i32 0, i32 6
  %3110 = load i8*, i8** %maxpos5573, align 8
  %cmp5574 = icmp ule i8* %3108, %3110
  br i1 %cmp5574, label %land.rhs5576, label %land.end5583

land.rhs5576:                                     ; preds = %while.cond5570
  %3111 = load i8*, i8** %locinput, align 8
  %3112 = load i8, i8* %3111, align 1
  %conv5577 = zext i8 %3112 to i32
  %3113 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5578 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3113, i32 0, i32 2
  %curly5579 = bitcast %union.anon.19* %u5578 to %struct.anon.31*
  %c15580 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5579, i32 0, i32 4
  %3114 = load i32, i32* %c15580, align 8
  %cmp5581 = icmp ne i32 %conv5577, %3114
  br label %land.end5583

land.end5583:                                     ; preds = %land.rhs5576, %while.cond5570
  %3115 = phi i1 [ false, %while.cond5570 ], [ %cmp5581, %land.rhs5576 ]
  br i1 %3115, label %while.body5585, label %while.end5587

while.body5585:                                   ; preds = %land.end5583
  %3116 = load i8*, i8** %locinput, align 8
  %incdec.ptr5586 = getelementptr inbounds i8, i8* %3116, i32 1
  store i8* %incdec.ptr5586, i8** %locinput, align 8
  br label %while.cond5570

while.end5587:                                    ; preds = %land.end5583
  br label %if.end5614

if.else5588:                                      ; preds = %if.else5560
  br label %while.cond5589

while.cond5589:                                   ; preds = %while.body5611, %if.else5588
  %3117 = load i8*, i8** %locinput, align 8
  %3118 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5590 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3118, i32 0, i32 2
  %curly5591 = bitcast %union.anon.19* %u5590 to %struct.anon.31*
  %maxpos5592 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5591, i32 0, i32 6
  %3119 = load i8*, i8** %maxpos5592, align 8
  %cmp5593 = icmp ule i8* %3117, %3119
  br i1 %cmp5593, label %land.lhs.true5595, label %land.end5609

land.lhs.true5595:                                ; preds = %while.cond5589
  %3120 = load i8*, i8** %locinput, align 8
  %3121 = load i8, i8* %3120, align 1
  %conv5596 = zext i8 %3121 to i32
  %3122 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5597 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3122, i32 0, i32 2
  %curly5598 = bitcast %union.anon.19* %u5597 to %struct.anon.31*
  %c15599 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5598, i32 0, i32 4
  %3123 = load i32, i32* %c15599, align 8
  %cmp5600 = icmp ne i32 %conv5596, %3123
  br i1 %cmp5600, label %land.rhs5602, label %land.end5609

land.rhs5602:                                     ; preds = %land.lhs.true5595
  %3124 = load i8*, i8** %locinput, align 8
  %3125 = load i8, i8* %3124, align 1
  %conv5603 = zext i8 %3125 to i32
  %3126 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5604 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3126, i32 0, i32 2
  %curly5605 = bitcast %union.anon.19* %u5604 to %struct.anon.31*
  %c25606 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5605, i32 0, i32 5
  %3127 = load i32, i32* %c25606, align 4
  %cmp5607 = icmp ne i32 %conv5603, %3127
  br label %land.end5609

land.end5609:                                     ; preds = %land.rhs5602, %land.lhs.true5595, %while.cond5589
  %3128 = phi i1 [ false, %land.lhs.true5595 ], [ false, %while.cond5589 ], [ %cmp5607, %land.rhs5602 ]
  br i1 %3128, label %while.body5611, label %while.end5613

while.body5611:                                   ; preds = %land.end5609
  %3129 = load i8*, i8** %locinput, align 8
  %incdec.ptr5612 = getelementptr inbounds i8, i8* %3129, i32 1
  store i8* %incdec.ptr5612, i8** %locinput, align 8
  br label %while.cond5589

while.end5613:                                    ; preds = %land.end5609
  br label %if.end5614

if.end5614:                                       ; preds = %while.end5613, %while.end5587
  %3130 = load i8*, i8** %locinput, align 8
  %3131 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5615 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3131, i32 0, i32 2
  %curly5616 = bitcast %union.anon.19* %u5615 to %struct.anon.31*
  %oldloc5617 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5616, i32 0, i32 7
  %3132 = load i8*, i8** %oldloc5617, align 8
  %sub.ptr.lhs.cast5618 = ptrtoint i8* %3130 to i64
  %sub.ptr.rhs.cast5619 = ptrtoint i8* %3132 to i64
  %sub.ptr.sub5620 = sub i64 %sub.ptr.lhs.cast5618, %sub.ptr.rhs.cast5619
  %conv5621 = trunc i64 %sub.ptr.sub5620 to i32
  store i32 %conv5621, i32* %n5478, align 4
  br label %if.end5622

if.end5622:                                       ; preds = %if.end5614, %if.end5559
  %3133 = load i8*, i8** %locinput, align 8
  %3134 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5623 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3134, i32 0, i32 2
  %curly5624 = bitcast %union.anon.19* %u5623 to %struct.anon.31*
  %maxpos5625 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5624, i32 0, i32 6
  %3135 = load i8*, i8** %maxpos5625, align 8
  %cmp5626 = icmp ugt i8* %3133, %3135
  br i1 %cmp5626, label %if.then5628, label %if.end5629

if.then5628:                                      ; preds = %if.end5622
  br label %no

if.end5629:                                       ; preds = %if.end5622
  %3136 = load i32, i32* %n5478, align 4
  %tobool5630 = icmp ne i32 %3136, 0
  br i1 %tobool5630, label %if.then5631, label %if.end5648

if.then5631:                                      ; preds = %if.end5629
  %3137 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5633 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3137, i32 0, i32 2
  %curly5634 = bitcast %union.anon.19* %u5633 to %struct.anon.31*
  %oldloc5635 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5634, i32 0, i32 7
  %3138 = load i8*, i8** %oldloc5635, align 8
  store i8* %3138, i8** %li5632, align 8
  %3139 = load i32, i32* %n5478, align 4
  %3140 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5636 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3140, i32 0, i32 2
  %curly5637 = bitcast %union.anon.19* %u5636 to %struct.anon.31*
  %count5638 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5637, i32 0, i32 8
  %3141 = load i32, i32* %count5638, align 8
  %add5639 = add nsw i32 %3141, %3139
  store i32 %add5639, i32* %count5638, align 8
  %3142 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %3143 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5640 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3143, i32 0, i32 2
  %curly5641 = bitcast %union.anon.19* %u5640 to %struct.anon.31*
  %A5642 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5641, i32 0, i32 11
  %3144 = load %struct.regnode*, %struct.regnode** %A5642, align 8
  %3145 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %3146 = load i32, i32* %n5478, align 4
  %3147 = load i32, i32* %depth, align 4
  %call5643 = call i32 @S_regrepeat(%struct.regexp* %3142, i8** %li5632, %struct.regnode* %3144, %struct.regmatch_info* %3145, i32 %3146, i32 %3147)
  %3148 = load i32, i32* %n5478, align 4
  %cmp5644 = icmp slt i32 %call5643, %3148
  br i1 %cmp5644, label %if.then5646, label %if.end5647

if.then5646:                                      ; preds = %if.then5631
  br label %no

if.end5647:                                       ; preds = %if.then5631
  br label %if.end5648

if.end5648:                                       ; preds = %if.end5647, %if.end5629
  %3149 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5649 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3149, i32 0, i32 2
  %curly5650 = bitcast %union.anon.19* %u5649 to %struct.anon.31*
  %paren5651 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5650, i32 0, i32 0
  %3150 = load i32, i32* %paren5651, align 8
  %tobool5652 = icmp ne i32 %3150, 0
  br i1 %tobool5652, label %if.then5653, label %if.end5724

if.then5653:                                      ; preds = %if.end5648
  %3151 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5654 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3151, i32 0, i32 2
  %curly5655 = bitcast %union.anon.19* %u5654 to %struct.anon.31*
  %count5656 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5655, i32 0, i32 8
  %3152 = load i32, i32* %count5656, align 8
  %tobool5657 = icmp ne i32 %3152, 0
  br i1 %tobool5657, label %if.then5658, label %if.else5707

if.then5658:                                      ; preds = %if.then5653
  %3153 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target5659 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3153, i32 0, i32 14
  %3154 = load i8, i8* %is_utf8_target5659, align 2
  %tobool5660 = trunc i8 %3154 to i1
  br i1 %tobool5660, label %cond.true5662, label %cond.false5665

cond.true5662:                                    ; preds = %if.then5658
  %3155 = load i8*, i8** %locinput, align 8
  %3156 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg5663 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3156, i32 0, i32 1
  %3157 = load i8*, i8** %strbeg5663, align 8
  %call5664 = call i8* @S_reghop3(i8* %3155, i64 -1, i8* %3157)
  br label %cond.end5667

cond.false5665:                                   ; preds = %if.then5658
  %3158 = load i8*, i8** %locinput, align 8
  %add.ptr5666 = getelementptr inbounds i8, i8* %3158, i64 -1
  br label %cond.end5667

cond.end5667:                                     ; preds = %cond.false5665, %cond.true5662
  %cond5668 = phi i8* [ %call5664, %cond.true5662 ], [ %add.ptr5666, %cond.false5665 ]
  %3159 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg5669 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3159, i32 0, i32 1
  %3160 = load i8*, i8** %strbeg5669, align 8
  %sub.ptr.lhs.cast5670 = ptrtoint i8* %cond5668 to i64
  %sub.ptr.rhs.cast5671 = ptrtoint i8* %3160 to i64
  %sub.ptr.sub5672 = sub i64 %sub.ptr.lhs.cast5670, %sub.ptr.rhs.cast5671
  %3161 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs5673 = getelementptr inbounds %struct.regexp, %struct.regexp* %3161, i32 0, i32 17
  %3162 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs5673, align 8
  %3163 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5674 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3163, i32 0, i32 2
  %curly5675 = bitcast %union.anon.19* %u5674 to %struct.anon.31*
  %paren5676 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5675, i32 0, i32 0
  %3164 = load i32, i32* %paren5676, align 8
  %idxprom5677 = zext i32 %3164 to i64
  %arrayidx5678 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3162, i64 %idxprom5677
  %start5679 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx5678, i32 0, i32 0
  store i64 %sub.ptr.sub5672, i64* %start5679, align 8
  %3165 = load i8*, i8** %locinput, align 8
  %3166 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg5680 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3166, i32 0, i32 1
  %3167 = load i8*, i8** %strbeg5680, align 8
  %sub.ptr.lhs.cast5681 = ptrtoint i8* %3165 to i64
  %sub.ptr.rhs.cast5682 = ptrtoint i8* %3167 to i64
  %sub.ptr.sub5683 = sub i64 %sub.ptr.lhs.cast5681, %sub.ptr.rhs.cast5682
  %3168 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs5684 = getelementptr inbounds %struct.regexp, %struct.regexp* %3168, i32 0, i32 17
  %3169 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs5684, align 8
  %3170 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5685 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3170, i32 0, i32 2
  %curly5686 = bitcast %union.anon.19* %u5685 to %struct.anon.31*
  %paren5687 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5686, i32 0, i32 0
  %3171 = load i32, i32* %paren5687, align 8
  %idxprom5688 = zext i32 %3171 to i64
  %arrayidx5689 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3169, i64 %idxprom5688
  %end5690 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx5689, i32 0, i32 1
  store i64 %sub.ptr.sub5683, i64* %end5690, align 8
  %3172 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5691 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3172, i32 0, i32 2
  %curly5692 = bitcast %union.anon.19* %u5691 to %struct.anon.31*
  %paren5693 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5692, i32 0, i32 0
  %3173 = load i32, i32* %paren5693, align 8
  %3174 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen5694 = getelementptr inbounds %struct.regexp, %struct.regexp* %3174, i32 0, i32 15
  %3175 = load i32, i32* %lastparen5694, align 8
  %cmp5695 = icmp ugt i32 %3173, %3175
  br i1 %cmp5695, label %if.then5697, label %if.end5702

if.then5697:                                      ; preds = %cond.end5667
  %3176 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5698 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3176, i32 0, i32 2
  %curly5699 = bitcast %union.anon.19* %u5698 to %struct.anon.31*
  %paren5700 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5699, i32 0, i32 0
  %3177 = load i32, i32* %paren5700, align 8
  %3178 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen5701 = getelementptr inbounds %struct.regexp, %struct.regexp* %3178, i32 0, i32 15
  store i32 %3177, i32* %lastparen5701, align 8
  br label %if.end5702

if.end5702:                                       ; preds = %if.then5697, %cond.end5667
  %3179 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5703 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3179, i32 0, i32 2
  %curly5704 = bitcast %union.anon.19* %u5703 to %struct.anon.31*
  %paren5705 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5704, i32 0, i32 0
  %3180 = load i32, i32* %paren5705, align 8
  %3181 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen5706 = getelementptr inbounds %struct.regexp, %struct.regexp* %3181, i32 0, i32 16
  store i32 %3180, i32* %lastcloseparen5706, align 4
  br label %if.end5723

if.else5707:                                      ; preds = %if.then5653
  %3182 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs5708 = getelementptr inbounds %struct.regexp, %struct.regexp* %3182, i32 0, i32 17
  %3183 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs5708, align 8
  %3184 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5709 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3184, i32 0, i32 2
  %curly5710 = bitcast %union.anon.19* %u5709 to %struct.anon.31*
  %paren5711 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5710, i32 0, i32 0
  %3185 = load i32, i32* %paren5711, align 8
  %idxprom5712 = zext i32 %3185 to i64
  %arrayidx5713 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3183, i64 %idxprom5712
  %end5714 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx5713, i32 0, i32 1
  store i64 -1, i64* %end5714, align 8
  %3186 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5715 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3186, i32 0, i32 2
  %curly5716 = bitcast %union.anon.19* %u5715 to %struct.anon.31*
  %lastparen5717 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5716, i32 0, i32 2
  %3187 = load i32, i32* %lastparen5717, align 8
  %3188 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen5718 = getelementptr inbounds %struct.regexp, %struct.regexp* %3188, i32 0, i32 15
  store i32 %3187, i32* %lastparen5718, align 8
  %3189 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5719 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3189, i32 0, i32 2
  %curly5720 = bitcast %union.anon.19* %u5719 to %struct.anon.31*
  %lastcloseparen5721 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5720, i32 0, i32 3
  %3190 = load i32, i32* %lastcloseparen5721, align 4
  %3191 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen5722 = getelementptr inbounds %struct.regexp, %struct.regexp* %3191, i32 0, i32 16
  store i32 %3190, i32* %lastcloseparen5722, align 4
  br label %if.end5723

if.end5723:                                       ; preds = %if.else5707, %if.end5702
  br label %if.end5724

if.end5724:                                       ; preds = %if.end5723, %if.end5648
  %3192 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool5725 = icmp ne %struct.regmatch_state* %3192, null
  br i1 %tobool5725, label %land.lhs.true5726, label %if.end5741

land.lhs.true5726:                                ; preds = %if.end5724
  %3193 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u5727 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3193, i32 0, i32 2
  %eval5728 = bitcast %union.anon.19* %u5727 to %struct.anon.24*
  %close_paren5729 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval5728, i32 0, i32 6
  %3194 = load i32, i32* %close_paren5729, align 8
  %tobool5730 = icmp ne i32 %3194, 0
  br i1 %tobool5730, label %land.lhs.true5731, label %if.end5741

land.lhs.true5731:                                ; preds = %land.lhs.true5726
  %3195 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u5732 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3195, i32 0, i32 2
  %eval5733 = bitcast %union.anon.19* %u5732 to %struct.anon.24*
  %close_paren5734 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval5733, i32 0, i32 6
  %3196 = load i32, i32* %close_paren5734, align 8
  %3197 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5735 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3197, i32 0, i32 2
  %curly5736 = bitcast %union.anon.19* %u5735 to %struct.anon.31*
  %paren5737 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5736, i32 0, i32 0
  %3198 = load i32, i32* %paren5737, align 8
  %cmp5738 = icmp eq i32 %3196, %3198
  br i1 %cmp5738, label %if.then5740, label %if.end5741

if.then5740:                                      ; preds = %land.lhs.true5731
  br label %fake_end

if.end5741:                                       ; preds = %land.lhs.true5731, %land.lhs.true5726, %if.end5724
  %3199 = load i8*, i8** %locinput, align 8
  store i8* %3199, i8** %pushinput, align 8
  %3200 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5742 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3200, i32 0, i32 2
  %curly5743 = bitcast %union.anon.19* %u5742 to %struct.anon.31*
  %B5744 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5743, i32 0, i32 12
  %3201 = load %struct.regnode*, %struct.regnode** %B5744, align 8
  store %struct.regnode* %3201, %struct.regnode** %scan, align 8
  %3202 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state5745 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3202, i32 0, i32 0
  store i32 118, i32* %resume_state5745, align 8
  br label %push_state

sw.bb5746:                                        ; preds = %cond.end45
  br label %do.body5747

do.body5747:                                      ; preds = %sw.bb5746
  %3203 = load i32, i32* @PL_savestack_ix, align 4
  %3204 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5748 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3204, i32 0, i32 2
  %curly5749 = bitcast %union.anon.19* %u5748 to %struct.anon.31*
  %cp5750 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5749, i32 0, i32 1
  %3205 = load i32, i32* %cp5750, align 4
  %cmp5751 = icmp sgt i32 %3203, %3205
  br i1 %cmp5751, label %if.then5753, label %if.end5757

if.then5753:                                      ; preds = %do.body5747
  %3206 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5754 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3206, i32 0, i32 2
  %curly5755 = bitcast %union.anon.19* %u5754 to %struct.anon.31*
  %cp5756 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5755, i32 0, i32 1
  %3207 = load i32, i32* %cp5756, align 4
  call void @Perl_leave_scope(i32 %3207)
  br label %if.end5757

if.end5757:                                       ; preds = %if.then5753, %do.body5747
  br label %do.end5758

do.end5758:                                       ; preds = %if.end5757
  %3208 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5759 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3208, i32 0, i32 2
  %curly5760 = bitcast %union.anon.19* %u5759 to %struct.anon.31*
  %paren5761 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5760, i32 0, i32 0
  %3209 = load i32, i32* %paren5761, align 8
  %tobool5762 = icmp ne i32 %3209, 0
  br i1 %tobool5762, label %if.then5763, label %if.end5784

if.then5763:                                      ; preds = %do.end5758
  %3210 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen5764 = getelementptr inbounds %struct.regexp, %struct.regexp* %3210, i32 0, i32 15
  %3211 = load i32, i32* %lastparen5764, align 8
  store i32 %3211, i32* %n, align 4
  br label %for.cond5765

for.cond5765:                                     ; preds = %for.inc5776, %if.then5763
  %3212 = load i32, i32* %n, align 4
  %3213 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5766 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3213, i32 0, i32 2
  %curly5767 = bitcast %union.anon.19* %u5766 to %struct.anon.31*
  %lastparen5768 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5767, i32 0, i32 2
  %3214 = load i32, i32* %lastparen5768, align 8
  %cmp5769 = icmp ugt i32 %3212, %3214
  br i1 %cmp5769, label %for.body5771, label %for.end5778

for.body5771:                                     ; preds = %for.cond5765
  %3215 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs5772 = getelementptr inbounds %struct.regexp, %struct.regexp* %3215, i32 0, i32 17
  %3216 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs5772, align 8
  %3217 = load i32, i32* %n, align 4
  %idxprom5773 = zext i32 %3217 to i64
  %arrayidx5774 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3216, i64 %idxprom5773
  %end5775 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx5774, i32 0, i32 1
  store i64 -1, i64* %end5775, align 8
  br label %for.inc5776

for.inc5776:                                      ; preds = %for.body5771
  %3218 = load i32, i32* %n, align 4
  %dec5777 = add i32 %3218, -1
  store i32 %dec5777, i32* %n, align 4
  br label %for.cond5765

for.end5778:                                      ; preds = %for.cond5765
  %3219 = load i32, i32* %n, align 4
  %3220 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen5779 = getelementptr inbounds %struct.regexp, %struct.regexp* %3220, i32 0, i32 15
  store i32 %3219, i32* %lastparen5779, align 8
  %3221 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5780 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3221, i32 0, i32 2
  %curly5781 = bitcast %union.anon.19* %u5780 to %struct.anon.31*
  %lastcloseparen5782 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5781, i32 0, i32 3
  %3222 = load i32, i32* %lastcloseparen5782, align 4
  %3223 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen5783 = getelementptr inbounds %struct.regexp, %struct.regexp* %3223, i32 0, i32 16
  store i32 %3222, i32* %lastcloseparen5783, align 4
  br label %if.end5784

if.end5784:                                       ; preds = %for.end5778, %do.end5758
  %3224 = load i8*, i8** %locinput, align 8
  store i8* %3224, i8** %li5785, align 8
  %3225 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %3226 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5786 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3226, i32 0, i32 2
  %curly5787 = bitcast %union.anon.19* %u5786 to %struct.anon.31*
  %A5788 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5787, i32 0, i32 11
  %3227 = load %struct.regnode*, %struct.regnode** %A5788, align 8
  %3228 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %3229 = load i32, i32* %depth, align 4
  %call5789 = call i32 @S_regrepeat(%struct.regexp* %3225, i8** %li5785, %struct.regnode* %3227, %struct.regmatch_info* %3228, i32 1, i32 %3229)
  %tobool5790 = icmp ne i32 %call5789, 0
  br i1 %tobool5790, label %if.end5792, label %if.then5791

if.then5791:                                      ; preds = %if.end5784
  br label %no

if.end5792:                                       ; preds = %if.end5784
  %3230 = load i8*, i8** %li5785, align 8
  store i8* %3230, i8** %locinput, align 8
  %3231 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5793 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3231, i32 0, i32 2
  %curly5794 = bitcast %union.anon.19* %u5793 to %struct.anon.31*
  %count5795 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5794, i32 0, i32 8
  %3232 = load i32, i32* %count5795, align 8
  %inc5796 = add nsw i32 %3232, 1
  store i32 %inc5796, i32* %count5795, align 8
  %3233 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5797 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3233, i32 0, i32 2
  %curly5798 = bitcast %union.anon.19* %u5797 to %struct.anon.31*
  %count5799 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5798, i32 0, i32 8
  %3234 = load i32, i32* %count5799, align 8
  %3235 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5800 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3235, i32 0, i32 2
  %curly5801 = bitcast %union.anon.19* %u5800 to %struct.anon.31*
  %max5802 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5801, i32 0, i32 10
  %3236 = load i32, i32* %max5802, align 8
  %cmp5803 = icmp sle i32 %3234, %3236
  br i1 %cmp5803, label %if.then5817, label %lor.lhs.false5805

lor.lhs.false5805:                                ; preds = %if.end5792
  %3237 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5806 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3237, i32 0, i32 2
  %curly5807 = bitcast %union.anon.19* %u5806 to %struct.anon.31*
  %max5808 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5807, i32 0, i32 10
  %3238 = load i32, i32* %max5808, align 8
  %cmp5809 = icmp eq i32 %3238, 32767
  br i1 %cmp5809, label %land.lhs.true5811, label %if.end5915

land.lhs.true5811:                                ; preds = %lor.lhs.false5805
  %3239 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5812 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3239, i32 0, i32 2
  %curly5813 = bitcast %union.anon.19* %u5812 to %struct.anon.31*
  %count5814 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5813, i32 0, i32 8
  %3240 = load i32, i32* %count5814, align 8
  %cmp5815 = icmp sgt i32 %3240, 0
  br i1 %cmp5815, label %if.then5817, label %if.end5915

if.then5817:                                      ; preds = %land.lhs.true5811, %if.end5792
  br label %curly_try_B_min

curly_try_B_min:                                  ; preds = %if.then5817, %if.then5237
  %3241 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5818 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3241, i32 0, i32 2
  %curly5819 = bitcast %union.anon.19* %u5818 to %struct.anon.31*
  %paren5820 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5819, i32 0, i32 0
  %3242 = load i32, i32* %paren5820, align 8
  %tobool5821 = icmp ne i32 %3242, 0
  br i1 %tobool5821, label %if.then5822, label %if.end5893

if.then5822:                                      ; preds = %curly_try_B_min
  %3243 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5823 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3243, i32 0, i32 2
  %curly5824 = bitcast %union.anon.19* %u5823 to %struct.anon.31*
  %count5825 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5824, i32 0, i32 8
  %3244 = load i32, i32* %count5825, align 8
  %tobool5826 = icmp ne i32 %3244, 0
  br i1 %tobool5826, label %if.then5827, label %if.else5876

if.then5827:                                      ; preds = %if.then5822
  %3245 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target5828 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3245, i32 0, i32 14
  %3246 = load i8, i8* %is_utf8_target5828, align 2
  %tobool5829 = trunc i8 %3246 to i1
  br i1 %tobool5829, label %cond.true5831, label %cond.false5834

cond.true5831:                                    ; preds = %if.then5827
  %3247 = load i8*, i8** %locinput, align 8
  %3248 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg5832 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3248, i32 0, i32 1
  %3249 = load i8*, i8** %strbeg5832, align 8
  %call5833 = call i8* @S_reghop3(i8* %3247, i64 -1, i8* %3249)
  br label %cond.end5836

cond.false5834:                                   ; preds = %if.then5827
  %3250 = load i8*, i8** %locinput, align 8
  %add.ptr5835 = getelementptr inbounds i8, i8* %3250, i64 -1
  br label %cond.end5836

cond.end5836:                                     ; preds = %cond.false5834, %cond.true5831
  %cond5837 = phi i8* [ %call5833, %cond.true5831 ], [ %add.ptr5835, %cond.false5834 ]
  %3251 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg5838 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3251, i32 0, i32 1
  %3252 = load i8*, i8** %strbeg5838, align 8
  %sub.ptr.lhs.cast5839 = ptrtoint i8* %cond5837 to i64
  %sub.ptr.rhs.cast5840 = ptrtoint i8* %3252 to i64
  %sub.ptr.sub5841 = sub i64 %sub.ptr.lhs.cast5839, %sub.ptr.rhs.cast5840
  %3253 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs5842 = getelementptr inbounds %struct.regexp, %struct.regexp* %3253, i32 0, i32 17
  %3254 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs5842, align 8
  %3255 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5843 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3255, i32 0, i32 2
  %curly5844 = bitcast %union.anon.19* %u5843 to %struct.anon.31*
  %paren5845 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5844, i32 0, i32 0
  %3256 = load i32, i32* %paren5845, align 8
  %idxprom5846 = zext i32 %3256 to i64
  %arrayidx5847 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3254, i64 %idxprom5846
  %start5848 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx5847, i32 0, i32 0
  store i64 %sub.ptr.sub5841, i64* %start5848, align 8
  %3257 = load i8*, i8** %locinput, align 8
  %3258 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg5849 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3258, i32 0, i32 1
  %3259 = load i8*, i8** %strbeg5849, align 8
  %sub.ptr.lhs.cast5850 = ptrtoint i8* %3257 to i64
  %sub.ptr.rhs.cast5851 = ptrtoint i8* %3259 to i64
  %sub.ptr.sub5852 = sub i64 %sub.ptr.lhs.cast5850, %sub.ptr.rhs.cast5851
  %3260 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs5853 = getelementptr inbounds %struct.regexp, %struct.regexp* %3260, i32 0, i32 17
  %3261 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs5853, align 8
  %3262 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5854 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3262, i32 0, i32 2
  %curly5855 = bitcast %union.anon.19* %u5854 to %struct.anon.31*
  %paren5856 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5855, i32 0, i32 0
  %3263 = load i32, i32* %paren5856, align 8
  %idxprom5857 = zext i32 %3263 to i64
  %arrayidx5858 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3261, i64 %idxprom5857
  %end5859 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx5858, i32 0, i32 1
  store i64 %sub.ptr.sub5852, i64* %end5859, align 8
  %3264 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5860 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3264, i32 0, i32 2
  %curly5861 = bitcast %union.anon.19* %u5860 to %struct.anon.31*
  %paren5862 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5861, i32 0, i32 0
  %3265 = load i32, i32* %paren5862, align 8
  %3266 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen5863 = getelementptr inbounds %struct.regexp, %struct.regexp* %3266, i32 0, i32 15
  %3267 = load i32, i32* %lastparen5863, align 8
  %cmp5864 = icmp ugt i32 %3265, %3267
  br i1 %cmp5864, label %if.then5866, label %if.end5871

if.then5866:                                      ; preds = %cond.end5836
  %3268 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5867 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3268, i32 0, i32 2
  %curly5868 = bitcast %union.anon.19* %u5867 to %struct.anon.31*
  %paren5869 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5868, i32 0, i32 0
  %3269 = load i32, i32* %paren5869, align 8
  %3270 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen5870 = getelementptr inbounds %struct.regexp, %struct.regexp* %3270, i32 0, i32 15
  store i32 %3269, i32* %lastparen5870, align 8
  br label %if.end5871

if.end5871:                                       ; preds = %if.then5866, %cond.end5836
  %3271 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5872 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3271, i32 0, i32 2
  %curly5873 = bitcast %union.anon.19* %u5872 to %struct.anon.31*
  %paren5874 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5873, i32 0, i32 0
  %3272 = load i32, i32* %paren5874, align 8
  %3273 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen5875 = getelementptr inbounds %struct.regexp, %struct.regexp* %3273, i32 0, i32 16
  store i32 %3272, i32* %lastcloseparen5875, align 4
  br label %if.end5892

if.else5876:                                      ; preds = %if.then5822
  %3274 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs5877 = getelementptr inbounds %struct.regexp, %struct.regexp* %3274, i32 0, i32 17
  %3275 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs5877, align 8
  %3276 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5878 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3276, i32 0, i32 2
  %curly5879 = bitcast %union.anon.19* %u5878 to %struct.anon.31*
  %paren5880 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5879, i32 0, i32 0
  %3277 = load i32, i32* %paren5880, align 8
  %idxprom5881 = zext i32 %3277 to i64
  %arrayidx5882 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3275, i64 %idxprom5881
  %end5883 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx5882, i32 0, i32 1
  store i64 -1, i64* %end5883, align 8
  %3278 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5884 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3278, i32 0, i32 2
  %curly5885 = bitcast %union.anon.19* %u5884 to %struct.anon.31*
  %lastparen5886 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5885, i32 0, i32 2
  %3279 = load i32, i32* %lastparen5886, align 8
  %3280 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen5887 = getelementptr inbounds %struct.regexp, %struct.regexp* %3280, i32 0, i32 15
  store i32 %3279, i32* %lastparen5887, align 8
  %3281 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5888 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3281, i32 0, i32 2
  %curly5889 = bitcast %union.anon.19* %u5888 to %struct.anon.31*
  %lastcloseparen5890 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5889, i32 0, i32 3
  %3282 = load i32, i32* %lastcloseparen5890, align 4
  %3283 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen5891 = getelementptr inbounds %struct.regexp, %struct.regexp* %3283, i32 0, i32 16
  store i32 %3282, i32* %lastcloseparen5891, align 4
  br label %if.end5892

if.end5892:                                       ; preds = %if.else5876, %if.end5871
  br label %if.end5893

if.end5893:                                       ; preds = %if.end5892, %curly_try_B_min
  %3284 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool5894 = icmp ne %struct.regmatch_state* %3284, null
  br i1 %tobool5894, label %land.lhs.true5895, label %if.end5910

land.lhs.true5895:                                ; preds = %if.end5893
  %3285 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u5896 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3285, i32 0, i32 2
  %eval5897 = bitcast %union.anon.19* %u5896 to %struct.anon.24*
  %close_paren5898 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval5897, i32 0, i32 6
  %3286 = load i32, i32* %close_paren5898, align 8
  %tobool5899 = icmp ne i32 %3286, 0
  br i1 %tobool5899, label %land.lhs.true5900, label %if.end5910

land.lhs.true5900:                                ; preds = %land.lhs.true5895
  %3287 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u5901 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3287, i32 0, i32 2
  %eval5902 = bitcast %union.anon.19* %u5901 to %struct.anon.24*
  %close_paren5903 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval5902, i32 0, i32 6
  %3288 = load i32, i32* %close_paren5903, align 8
  %3289 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5904 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3289, i32 0, i32 2
  %curly5905 = bitcast %union.anon.19* %u5904 to %struct.anon.31*
  %paren5906 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5905, i32 0, i32 0
  %3290 = load i32, i32* %paren5906, align 8
  %cmp5907 = icmp eq i32 %3288, %3290
  br i1 %cmp5907, label %if.then5909, label %if.end5910

if.then5909:                                      ; preds = %land.lhs.true5900
  br label %fake_end

if.end5910:                                       ; preds = %land.lhs.true5900, %land.lhs.true5895, %if.end5893
  %3291 = load i8*, i8** %locinput, align 8
  store i8* %3291, i8** %pushinput, align 8
  %3292 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5911 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3292, i32 0, i32 2
  %curly5912 = bitcast %union.anon.19* %u5911 to %struct.anon.31*
  %B5913 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5912, i32 0, i32 12
  %3293 = load %struct.regnode*, %struct.regnode** %B5913, align 8
  store %struct.regnode* %3293, %struct.regnode** %scan, align 8
  %3294 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state5914 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3294, i32 0, i32 0
  store i32 120, i32* %resume_state5914, align 8
  br label %push_state

if.end5915:                                       ; preds = %land.lhs.true5811, %lor.lhs.false5805
  br label %no

curly_try_B_max:                                  ; preds = %cond.end6145, %if.end5418
  %3295 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool5916 = icmp ne %struct.regmatch_state* %3295, null
  br i1 %tobool5916, label %land.lhs.true5917, label %if.end5932

land.lhs.true5917:                                ; preds = %curly_try_B_max
  %3296 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u5918 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3296, i32 0, i32 2
  %eval5919 = bitcast %union.anon.19* %u5918 to %struct.anon.24*
  %close_paren5920 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval5919, i32 0, i32 6
  %3297 = load i32, i32* %close_paren5920, align 8
  %tobool5921 = icmp ne i32 %3297, 0
  br i1 %tobool5921, label %land.lhs.true5922, label %if.end5932

land.lhs.true5922:                                ; preds = %land.lhs.true5917
  %3298 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u5923 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3298, i32 0, i32 2
  %eval5924 = bitcast %union.anon.19* %u5923 to %struct.anon.24*
  %close_paren5925 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval5924, i32 0, i32 6
  %3299 = load i32, i32* %close_paren5925, align 8
  %3300 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5926 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3300, i32 0, i32 2
  %curly5927 = bitcast %union.anon.19* %u5926 to %struct.anon.31*
  %paren5928 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5927, i32 0, i32 0
  %3301 = load i32, i32* %paren5928, align 8
  %cmp5929 = icmp eq i32 %3299, %3301
  br i1 %cmp5929, label %if.then5931, label %if.end5932

if.then5931:                                      ; preds = %land.lhs.true5922
  br label %fake_end

if.end5932:                                       ; preds = %land.lhs.true5922, %land.lhs.true5917, %curly_try_B_max
  %3302 = load i8*, i8** %locinput, align 8
  %3303 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend5933 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3303, i32 0, i32 2
  %3304 = load i8*, i8** %strend5933, align 8
  %cmp5934 = icmp ult i8* %3302, %3304
  %frombool5936 = zext i1 %cmp5934 to i8
  store i8 %frombool5936, i8* %could_match, align 1
  %3305 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5937 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3305, i32 0, i32 2
  %curly5938 = bitcast %union.anon.19* %u5937 to %struct.anon.31*
  %c15939 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5938, i32 0, i32 4
  %3306 = load i32, i32* %c15939, align 8
  %cmp5940 = icmp ne i32 %3306, -1000
  br i1 %cmp5940, label %land.lhs.true5942, label %if.end5996

land.lhs.true5942:                                ; preds = %if.end5932
  %3307 = load i8, i8* %could_match, align 1
  %tobool5943 = trunc i8 %3307 to i1
  br i1 %tobool5943, label %if.then5945, label %if.end5996

if.then5945:                                      ; preds = %land.lhs.true5942
  %3308 = load i8*, i8** %locinput, align 8
  %3309 = load i8, i8* %3308, align 1
  %conv5946 = zext i8 %3309 to i32
  %conv5947 = sext i32 %conv5946 to i64
  %cmp5948 = icmp ult i64 %conv5947, 128
  br i1 %cmp5948, label %if.else5978, label %land.lhs.true5950

land.lhs.true5950:                                ; preds = %if.then5945
  %3310 = load i8, i8* %utf8_target, align 1
  %tobool5951 = trunc i8 %3310 to i1
  br i1 %tobool5951, label %if.then5953, label %if.else5978

if.then5953:                                      ; preds = %land.lhs.true5950
  %3311 = load i8*, i8** %locinput, align 8
  %3312 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5954 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3312, i32 0, i32 2
  %curly5955 = bitcast %union.anon.19* %u5954 to %struct.anon.31*
  %c1_utf85956 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5955, i32 0, i32 13
  %arraydecay5957 = getelementptr inbounds [14 x i8], [14 x i8]* %c1_utf85956, i64 0, i64 0
  %3313 = load i8*, i8** %locinput, align 8
  %3314 = load i8, i8* %3313, align 1
  %idxprom5958 = zext i8 %3314 to i64
  %arrayidx5959 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom5958
  %3315 = load i8, i8* %arrayidx5959, align 1
  %conv5960 = zext i8 %3315 to i64
  %call5961 = call i32 @memcmp(i8* %3311, i8* %arraydecay5957, i64 %conv5960) #5
  %tobool5962 = icmp ne i32 %call5961, 0
  br i1 %tobool5962, label %lor.rhs5963, label %lor.end5975

lor.rhs5963:                                      ; preds = %if.then5953
  %3316 = load i8*, i8** %locinput, align 8
  %3317 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5964 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3317, i32 0, i32 2
  %curly5965 = bitcast %union.anon.19* %u5964 to %struct.anon.31*
  %c2_utf85966 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5965, i32 0, i32 14
  %arraydecay5967 = getelementptr inbounds [14 x i8], [14 x i8]* %c2_utf85966, i64 0, i64 0
  %3318 = load i8*, i8** %locinput, align 8
  %3319 = load i8, i8* %3318, align 1
  %idxprom5968 = zext i8 %3319 to i64
  %arrayidx5969 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom5968
  %3320 = load i8, i8* %arrayidx5969, align 1
  %conv5970 = zext i8 %3320 to i64
  %call5971 = call i32 @memcmp(i8* %3316, i8* %arraydecay5967, i64 %conv5970) #5
  %tobool5972 = icmp ne i32 %call5971, 0
  %lnot5973 = xor i1 %tobool5972, true
  br label %lor.end5975

lor.end5975:                                      ; preds = %lor.rhs5963, %if.then5953
  %3321 = phi i1 [ true, %if.then5953 ], [ %lnot5973, %lor.rhs5963 ]
  %frombool5977 = zext i1 %3321 to i8
  store i8 %frombool5977, i8* %could_match, align 1
  br label %if.end5995

if.else5978:                                      ; preds = %land.lhs.true5950, %if.then5945
  %3322 = load i8*, i8** %locinput, align 8
  %3323 = load i8, i8* %3322, align 1
  %conv5979 = zext i8 %3323 to i32
  %3324 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5980 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3324, i32 0, i32 2
  %curly5981 = bitcast %union.anon.19* %u5980 to %struct.anon.31*
  %c15982 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5981, i32 0, i32 4
  %3325 = load i32, i32* %c15982, align 8
  %cmp5983 = icmp eq i32 %conv5979, %3325
  br i1 %cmp5983, label %lor.end5992, label %lor.rhs5985

lor.rhs5985:                                      ; preds = %if.else5978
  %3326 = load i8*, i8** %locinput, align 8
  %3327 = load i8, i8* %3326, align 1
  %conv5986 = zext i8 %3327 to i32
  %3328 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5987 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3328, i32 0, i32 2
  %curly5988 = bitcast %union.anon.19* %u5987 to %struct.anon.31*
  %c25989 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5988, i32 0, i32 5
  %3329 = load i32, i32* %c25989, align 4
  %cmp5990 = icmp eq i32 %conv5986, %3329
  br label %lor.end5992

lor.end5992:                                      ; preds = %lor.rhs5985, %if.else5978
  %3330 = phi i1 [ true, %if.else5978 ], [ %cmp5990, %lor.rhs5985 ]
  %frombool5994 = zext i1 %3330 to i8
  store i8 %frombool5994, i8* %could_match, align 1
  br label %if.end5995

if.end5995:                                       ; preds = %lor.end5992, %lor.end5975
  br label %if.end5996

if.end5996:                                       ; preds = %if.end5995, %land.lhs.true5942, %if.end5932
  %3331 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u5997 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3331, i32 0, i32 2
  %curly5998 = bitcast %union.anon.19* %u5997 to %struct.anon.31*
  %c15999 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly5998, i32 0, i32 4
  %3332 = load i32, i32* %c15999, align 8
  %cmp6000 = icmp eq i32 %3332, -1000
  br i1 %cmp6000, label %if.then6005, label %lor.lhs.false6002

lor.lhs.false6002:                                ; preds = %if.end5996
  %3333 = load i8, i8* %could_match, align 1
  %tobool6003 = trunc i8 %3333 to i1
  br i1 %tobool6003, label %if.then6005, label %if.end6086

if.then6005:                                      ; preds = %lor.lhs.false6002, %if.end5996
  %3334 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6006 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3334, i32 0, i32 2
  %curly6007 = bitcast %union.anon.19* %u6006 to %struct.anon.31*
  %paren6008 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6007, i32 0, i32 0
  %3335 = load i32, i32* %paren6008, align 8
  %tobool6009 = icmp ne i32 %3335, 0
  br i1 %tobool6009, label %if.then6010, label %if.end6081

if.then6010:                                      ; preds = %if.then6005
  %3336 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6011 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3336, i32 0, i32 2
  %curly6012 = bitcast %union.anon.19* %u6011 to %struct.anon.31*
  %count6013 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6012, i32 0, i32 8
  %3337 = load i32, i32* %count6013, align 8
  %tobool6014 = icmp ne i32 %3337, 0
  br i1 %tobool6014, label %if.then6015, label %if.else6064

if.then6015:                                      ; preds = %if.then6010
  %3338 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target6016 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3338, i32 0, i32 14
  %3339 = load i8, i8* %is_utf8_target6016, align 2
  %tobool6017 = trunc i8 %3339 to i1
  br i1 %tobool6017, label %cond.true6019, label %cond.false6022

cond.true6019:                                    ; preds = %if.then6015
  %3340 = load i8*, i8** %locinput, align 8
  %3341 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg6020 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3341, i32 0, i32 1
  %3342 = load i8*, i8** %strbeg6020, align 8
  %call6021 = call i8* @S_reghop3(i8* %3340, i64 -1, i8* %3342)
  br label %cond.end6024

cond.false6022:                                   ; preds = %if.then6015
  %3343 = load i8*, i8** %locinput, align 8
  %add.ptr6023 = getelementptr inbounds i8, i8* %3343, i64 -1
  br label %cond.end6024

cond.end6024:                                     ; preds = %cond.false6022, %cond.true6019
  %cond6025 = phi i8* [ %call6021, %cond.true6019 ], [ %add.ptr6023, %cond.false6022 ]
  %3344 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg6026 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3344, i32 0, i32 1
  %3345 = load i8*, i8** %strbeg6026, align 8
  %sub.ptr.lhs.cast6027 = ptrtoint i8* %cond6025 to i64
  %sub.ptr.rhs.cast6028 = ptrtoint i8* %3345 to i64
  %sub.ptr.sub6029 = sub i64 %sub.ptr.lhs.cast6027, %sub.ptr.rhs.cast6028
  %3346 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs6030 = getelementptr inbounds %struct.regexp, %struct.regexp* %3346, i32 0, i32 17
  %3347 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs6030, align 8
  %3348 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6031 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3348, i32 0, i32 2
  %curly6032 = bitcast %union.anon.19* %u6031 to %struct.anon.31*
  %paren6033 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6032, i32 0, i32 0
  %3349 = load i32, i32* %paren6033, align 8
  %idxprom6034 = zext i32 %3349 to i64
  %arrayidx6035 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3347, i64 %idxprom6034
  %start6036 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx6035, i32 0, i32 0
  store i64 %sub.ptr.sub6029, i64* %start6036, align 8
  %3350 = load i8*, i8** %locinput, align 8
  %3351 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg6037 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3351, i32 0, i32 1
  %3352 = load i8*, i8** %strbeg6037, align 8
  %sub.ptr.lhs.cast6038 = ptrtoint i8* %3350 to i64
  %sub.ptr.rhs.cast6039 = ptrtoint i8* %3352 to i64
  %sub.ptr.sub6040 = sub i64 %sub.ptr.lhs.cast6038, %sub.ptr.rhs.cast6039
  %3353 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs6041 = getelementptr inbounds %struct.regexp, %struct.regexp* %3353, i32 0, i32 17
  %3354 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs6041, align 8
  %3355 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6042 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3355, i32 0, i32 2
  %curly6043 = bitcast %union.anon.19* %u6042 to %struct.anon.31*
  %paren6044 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6043, i32 0, i32 0
  %3356 = load i32, i32* %paren6044, align 8
  %idxprom6045 = zext i32 %3356 to i64
  %arrayidx6046 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3354, i64 %idxprom6045
  %end6047 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx6046, i32 0, i32 1
  store i64 %sub.ptr.sub6040, i64* %end6047, align 8
  %3357 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6048 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3357, i32 0, i32 2
  %curly6049 = bitcast %union.anon.19* %u6048 to %struct.anon.31*
  %paren6050 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6049, i32 0, i32 0
  %3358 = load i32, i32* %paren6050, align 8
  %3359 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen6051 = getelementptr inbounds %struct.regexp, %struct.regexp* %3359, i32 0, i32 15
  %3360 = load i32, i32* %lastparen6051, align 8
  %cmp6052 = icmp ugt i32 %3358, %3360
  br i1 %cmp6052, label %if.then6054, label %if.end6059

if.then6054:                                      ; preds = %cond.end6024
  %3361 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6055 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3361, i32 0, i32 2
  %curly6056 = bitcast %union.anon.19* %u6055 to %struct.anon.31*
  %paren6057 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6056, i32 0, i32 0
  %3362 = load i32, i32* %paren6057, align 8
  %3363 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen6058 = getelementptr inbounds %struct.regexp, %struct.regexp* %3363, i32 0, i32 15
  store i32 %3362, i32* %lastparen6058, align 8
  br label %if.end6059

if.end6059:                                       ; preds = %if.then6054, %cond.end6024
  %3364 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6060 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3364, i32 0, i32 2
  %curly6061 = bitcast %union.anon.19* %u6060 to %struct.anon.31*
  %paren6062 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6061, i32 0, i32 0
  %3365 = load i32, i32* %paren6062, align 8
  %3366 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen6063 = getelementptr inbounds %struct.regexp, %struct.regexp* %3366, i32 0, i32 16
  store i32 %3365, i32* %lastcloseparen6063, align 4
  br label %if.end6080

if.else6064:                                      ; preds = %if.then6010
  %3367 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs6065 = getelementptr inbounds %struct.regexp, %struct.regexp* %3367, i32 0, i32 17
  %3368 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs6065, align 8
  %3369 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6066 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3369, i32 0, i32 2
  %curly6067 = bitcast %union.anon.19* %u6066 to %struct.anon.31*
  %paren6068 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6067, i32 0, i32 0
  %3370 = load i32, i32* %paren6068, align 8
  %idxprom6069 = zext i32 %3370 to i64
  %arrayidx6070 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3368, i64 %idxprom6069
  %end6071 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx6070, i32 0, i32 1
  store i64 -1, i64* %end6071, align 8
  %3371 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6072 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3371, i32 0, i32 2
  %curly6073 = bitcast %union.anon.19* %u6072 to %struct.anon.31*
  %lastparen6074 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6073, i32 0, i32 2
  %3372 = load i32, i32* %lastparen6074, align 8
  %3373 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen6075 = getelementptr inbounds %struct.regexp, %struct.regexp* %3373, i32 0, i32 15
  store i32 %3372, i32* %lastparen6075, align 8
  %3374 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6076 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3374, i32 0, i32 2
  %curly6077 = bitcast %union.anon.19* %u6076 to %struct.anon.31*
  %lastcloseparen6078 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6077, i32 0, i32 3
  %3375 = load i32, i32* %lastcloseparen6078, align 4
  %3376 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen6079 = getelementptr inbounds %struct.regexp, %struct.regexp* %3376, i32 0, i32 16
  store i32 %3375, i32* %lastcloseparen6079, align 4
  br label %if.end6080

if.end6080:                                       ; preds = %if.else6064, %if.end6059
  br label %if.end6081

if.end6081:                                       ; preds = %if.end6080, %if.then6005
  %3377 = load i8*, i8** %locinput, align 8
  store i8* %3377, i8** %pushinput, align 8
  %3378 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6082 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3378, i32 0, i32 2
  %curly6083 = bitcast %union.anon.19* %u6082 to %struct.anon.31*
  %B6084 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6083, i32 0, i32 12
  %3379 = load %struct.regnode*, %struct.regnode** %B6084, align 8
  store %struct.regnode* %3379, %struct.regnode** %scan, align 8
  %3380 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state6085 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3380, i32 0, i32 0
  store i32 122, i32* %resume_state6085, align 8
  br label %push_state

if.end6086:                                       ; preds = %lor.lhs.false6002
  br label %sw.bb6087

sw.bb6087:                                        ; preds = %cond.end45, %if.end6086
  br label %do.body6088

do.body6088:                                      ; preds = %sw.bb6087
  %3381 = load i32, i32* @PL_savestack_ix, align 4
  %3382 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6089 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3382, i32 0, i32 2
  %curly6090 = bitcast %union.anon.19* %u6089 to %struct.anon.31*
  %cp6091 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6090, i32 0, i32 1
  %3383 = load i32, i32* %cp6091, align 4
  %cmp6092 = icmp sgt i32 %3381, %3383
  br i1 %cmp6092, label %if.then6094, label %if.end6098

if.then6094:                                      ; preds = %do.body6088
  %3384 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6095 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3384, i32 0, i32 2
  %curly6096 = bitcast %union.anon.19* %u6095 to %struct.anon.31*
  %cp6097 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6096, i32 0, i32 1
  %3385 = load i32, i32* %cp6097, align 4
  call void @Perl_leave_scope(i32 %3385)
  br label %if.end6098

if.end6098:                                       ; preds = %if.then6094, %do.body6088
  br label %do.end6099

do.end6099:                                       ; preds = %if.end6098
  %3386 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6100 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3386, i32 0, i32 2
  %curly6101 = bitcast %union.anon.19* %u6100 to %struct.anon.31*
  %paren6102 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6101, i32 0, i32 0
  %3387 = load i32, i32* %paren6102, align 8
  %tobool6103 = icmp ne i32 %3387, 0
  br i1 %tobool6103, label %if.then6104, label %if.end6125

if.then6104:                                      ; preds = %do.end6099
  %3388 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen6105 = getelementptr inbounds %struct.regexp, %struct.regexp* %3388, i32 0, i32 15
  %3389 = load i32, i32* %lastparen6105, align 8
  store i32 %3389, i32* %n, align 4
  br label %for.cond6106

for.cond6106:                                     ; preds = %for.inc6117, %if.then6104
  %3390 = load i32, i32* %n, align 4
  %3391 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6107 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3391, i32 0, i32 2
  %curly6108 = bitcast %union.anon.19* %u6107 to %struct.anon.31*
  %lastparen6109 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6108, i32 0, i32 2
  %3392 = load i32, i32* %lastparen6109, align 8
  %cmp6110 = icmp ugt i32 %3390, %3392
  br i1 %cmp6110, label %for.body6112, label %for.end6119

for.body6112:                                     ; preds = %for.cond6106
  %3393 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %offs6113 = getelementptr inbounds %struct.regexp, %struct.regexp* %3393, i32 0, i32 17
  %3394 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs6113, align 8
  %3395 = load i32, i32* %n, align 4
  %idxprom6114 = zext i32 %3395 to i64
  %arrayidx6115 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %3394, i64 %idxprom6114
  %end6116 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx6115, i32 0, i32 1
  store i64 -1, i64* %end6116, align 8
  br label %for.inc6117

for.inc6117:                                      ; preds = %for.body6112
  %3396 = load i32, i32* %n, align 4
  %dec6118 = add i32 %3396, -1
  store i32 %dec6118, i32* %n, align 4
  br label %for.cond6106

for.end6119:                                      ; preds = %for.cond6106
  %3397 = load i32, i32* %n, align 4
  %3398 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastparen6120 = getelementptr inbounds %struct.regexp, %struct.regexp* %3398, i32 0, i32 15
  store i32 %3397, i32* %lastparen6120, align 8
  %3399 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6121 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3399, i32 0, i32 2
  %curly6122 = bitcast %union.anon.19* %u6121 to %struct.anon.31*
  %lastcloseparen6123 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6122, i32 0, i32 3
  %3400 = load i32, i32* %lastcloseparen6123, align 4
  %3401 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %lastcloseparen6124 = getelementptr inbounds %struct.regexp, %struct.regexp* %3401, i32 0, i32 16
  store i32 %3400, i32* %lastcloseparen6124, align 4
  br label %if.end6125

if.end6125:                                       ; preds = %for.end6119, %do.end6099
  %3402 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6126 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3402, i32 0, i32 2
  %curly6127 = bitcast %union.anon.19* %u6126 to %struct.anon.31*
  %count6128 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6127, i32 0, i32 8
  %3403 = load i32, i32* %count6128, align 8
  %dec6129 = add nsw i32 %3403, -1
  store i32 %dec6129, i32* %count6128, align 8
  %3404 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6130 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3404, i32 0, i32 2
  %curly6131 = bitcast %union.anon.19* %u6130 to %struct.anon.31*
  %min6132 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %curly6131, i32 0, i32 9
  %3405 = load i32, i32* %min6132, align 4
  %cmp6133 = icmp slt i32 %dec6129, %3405
  br i1 %cmp6133, label %if.then6135, label %if.end6136

if.then6135:                                      ; preds = %if.end6125
  br label %no

if.end6136:                                       ; preds = %if.end6125
  %3406 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target6137 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3406, i32 0, i32 14
  %3407 = load i8, i8* %is_utf8_target6137, align 2
  %tobool6138 = trunc i8 %3407 to i1
  br i1 %tobool6138, label %cond.true6140, label %cond.false6143

cond.true6140:                                    ; preds = %if.end6136
  %3408 = load i8*, i8** %locinput, align 8
  %3409 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg6141 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3409, i32 0, i32 1
  %3410 = load i8*, i8** %strbeg6141, align 8
  %call6142 = call i8* @S_reghop3(i8* %3408, i64 -1, i8* %3410)
  br label %cond.end6145

cond.false6143:                                   ; preds = %if.end6136
  %3411 = load i8*, i8** %locinput, align 8
  %add.ptr6144 = getelementptr inbounds i8, i8* %3411, i64 -1
  br label %cond.end6145

cond.end6145:                                     ; preds = %cond.false6143, %cond.true6140
  %cond6146 = phi i8* [ %call6142, %cond.true6140 ], [ %add.ptr6144, %cond.false6143 ]
  store i8* %cond6146, i8** %locinput, align 8
  br label %curly_try_B_max

sw.bb6147:                                        ; preds = %cond.end45
  br label %fake_end

fake_end:                                         ; preds = %sw.bb6147, %if.then5931, %if.then5909, %if.then5740, %if.then4704, %if.then4187, %if.end3379, %if.then3313
  %3412 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %tobool6148 = icmp ne %struct.regmatch_state* %3412, null
  br i1 %tobool6148, label %if.then6149, label %if.end6203

if.then6149:                                      ; preds = %fake_end
  %3413 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %3414 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6150 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3414, i32 0, i32 2
  %eval6151 = bitcast %union.anon.19* %u6150 to %struct.anon.24*
  %prev_rex6152 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval6151, i32 0, i32 3
  store %struct.p5rx* %3413, %struct.p5rx** %prev_rex6152, align 8
  %3415 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %3416 = load i32, i32* %maxopenparen, align 4
  %call6153 = call i32 @S_regcppush(%struct.regexp* %3415, i32 0, i32 %3416)
  %3417 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6154 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3417, i32 0, i32 2
  %eval6155 = bitcast %union.anon.19* %u6154 to %struct.anon.24*
  %cp6156 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval6155, i32 0, i32 4
  store i32 %call6153, i32* %cp6156, align 8
  %3418 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u6157 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3418, i32 0, i32 2
  %eval6158 = bitcast %union.anon.19* %u6157 to %struct.anon.24*
  %prev_rex6159 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval6158, i32 0, i32 3
  %3419 = load %struct.p5rx*, %struct.p5rx** %prev_rex6159, align 8
  store %struct.p5rx* %3419, %struct.p5rx** %rex_sv, align 8
  %3420 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %sv_flags6160 = getelementptr inbounds %struct.p5rx, %struct.p5rx* %3420, i32 0, i32 2
  %3421 = load i32, i32* %sv_flags6160, align 4
  %and6161 = and i32 %3421, 536870912
  %tobool6162 = icmp ne i32 %and6161, 0
  %3422 = zext i1 %tobool6162 to i64
  %cond6163 = select i1 %tobool6162, i32 1, i32 0
  %tobool6164 = icmp ne i32 %cond6163, 0
  %3423 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat6165 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3423, i32 0, i32 13
  %frombool6166 = zext i1 %tobool6164 to i8
  store i8 %frombool6166, i8* %is_utf8_pat6165, align 1
  %frombool6167 = zext i1 %tobool6164 to i8
  store i8 %frombool6167, i8* %is_utf8_pat, align 1
  %3424 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval6168 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3424, i32 0, i32 8
  %3425 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval6168, align 8
  %tobool6169 = icmp ne %struct.regmatch_info_aux_eval* %3425, null
  br i1 %tobool6169, label %if.then6170, label %if.end6174

if.then6170:                                      ; preds = %if.then6149
  %3426 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %3427 = bitcast %struct.p5rx* %3426 to i8*
  %3428 = bitcast i8* %3427 to %struct.sv*
  %call6171 = call %struct.sv* @S_SvREFCNT_inc(%struct.sv* %3428)
  %3429 = bitcast %struct.sv* %call6171 to %struct.p5rx*
  %3430 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %op_pmregexp6172 = getelementptr inbounds %struct.pmop, %struct.pmop* %3430, i32 0, i32 9
  %3431 = load %struct.p5rx*, %struct.p5rx** %op_pmregexp6172, align 8
  %3432 = bitcast %struct.p5rx* %3431 to i8*
  %3433 = bitcast i8* %3432 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %3433)
  %3434 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %3435 = load %struct.pmop*, %struct.pmop** @PL_reg_curpm, align 8
  %op_pmregexp6173 = getelementptr inbounds %struct.pmop, %struct.pmop* %3435, i32 0, i32 9
  store %struct.p5rx* %3434, %struct.p5rx** %op_pmregexp6173, align 8
  br label %if.end6174

if.end6174:                                       ; preds = %if.then6170, %if.then6149
  %3436 = load %struct.p5rx*, %struct.p5rx** %rex_sv, align 8
  %call6175 = call %struct.regexp* @S_ReANY(%struct.p5rx* %3436)
  store %struct.regexp* %call6175, %struct.regexp** %rex, align 8
  %3437 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %pprivate6176 = getelementptr inbounds %struct.regexp, %struct.regexp* %3437, i32 0, i32 14
  %3438 = load i8*, i8** %pprivate6176, align 8
  %3439 = bitcast i8* %3438 to %struct.regexp_internal*
  store %struct.regexp_internal* %3439, %struct.regexp_internal** %rexi, align 8
  %3440 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u6177 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3440, i32 0, i32 2
  %eval6178 = bitcast %union.anon.19* %u6177 to %struct.anon.24*
  %prev_curlyx6179 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval6178, i32 0, i32 2
  %3441 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_curlyx6179, align 8
  store %struct.regmatch_state* %3441, %struct.regmatch_state** %cur_curlyx, align 8
  %3442 = load i32, i32* @PL_savestack_ix, align 4
  %3443 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6180 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3443, i32 0, i32 2
  %eval6181 = bitcast %union.anon.19* %u6180 to %struct.anon.24*
  %lastcp6182 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval6181, i32 0, i32 5
  store i32 %3442, i32* %lastcp6182, align 4
  %3444 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %3445 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u6183 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3445, i32 0, i32 2
  %eval6184 = bitcast %union.anon.19* %u6183 to %struct.anon.24*
  %lastcp6185 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval6184, i32 0, i32 5
  %3446 = load i32, i32* %lastcp6185, align 4
  call void @S_regcp_restore(%struct.regexp* %3444, i32 %3446, i32* %maxopenparen)
  %3447 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %3448 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6186 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3448, i32 0, i32 2
  %eval6187 = bitcast %union.anon.19* %u6186 to %struct.anon.24*
  %prev_eval6188 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval6187, i32 0, i32 1
  store %struct.regmatch_state* %3447, %struct.regmatch_state** %prev_eval6188, align 8
  %3449 = load %struct.regmatch_state*, %struct.regmatch_state** %cur_eval, align 8
  %u6189 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3449, i32 0, i32 2
  %eval6190 = bitcast %union.anon.19* %u6189 to %struct.anon.24*
  %prev_eval6191 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval6190, i32 0, i32 1
  %3450 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_eval6191, align 8
  store %struct.regmatch_state* %3450, %struct.regmatch_state** %cur_eval, align 8
  %3451 = load i32, i32* %nochange_depth, align 4
  %tobool6192 = icmp ne i32 %3451, 0
  br i1 %tobool6192, label %if.then6193, label %if.end6195

if.then6193:                                      ; preds = %if.end6174
  %3452 = load i32, i32* %nochange_depth, align 4
  %dec6194 = add i32 %3452, -1
  store i32 %dec6194, i32* %nochange_depth, align 4
  br label %if.end6195

if.end6195:                                       ; preds = %if.then6193, %if.end6174
  %3453 = load i8*, i8** %locinput, align 8
  store i8* %3453, i8** %pushinput, align 8
  %3454 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6196 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3454, i32 0, i32 2
  %eval6197 = bitcast %union.anon.19* %u6196 to %struct.anon.24*
  %prev_eval6198 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval6197, i32 0, i32 1
  %3455 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_eval6198, align 8
  %u6199 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3455, i32 0, i32 2
  %eval6200 = bitcast %union.anon.19* %u6199 to %struct.anon.24*
  %B6201 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %eval6200, i32 0, i32 7
  %3456 = load %struct.regnode*, %struct.regnode** %B6201, align 8
  store %struct.regnode* %3456, %struct.regnode** %scan, align 8
  %3457 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state6202 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3457, i32 0, i32 0
  store i32 96, i32* %resume_state6202, align 8
  br label %push_yes_state

if.end6203:                                       ; preds = %fake_end
  %3458 = load i8*, i8** %locinput, align 8
  %3459 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %till = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3459, i32 0, i32 3
  %3460 = load i8*, i8** %till, align 8
  %cmp6204 = icmp ult i8* %3458, %3460
  br i1 %cmp6204, label %if.then6206, label %if.end6207

if.then6206:                                      ; preds = %if.end6203
  br label %no_silent

if.end6207:                                       ; preds = %if.end6203
  br label %yes6772

sw.bb6208:                                        ; preds = %cond.end45
  br label %yes6772

sw.bb6209:                                        ; preds = %cond.end45
  %3461 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6210 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3461, i32 0, i32 2
  %ifmatch = bitcast %union.anon.19* %u6210 to %struct.anon.25*
  %wanted = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch, i32 0, i32 1
  store i32 1, i32* %wanted, align 8
  %3462 = load i8*, i8** %locinput, align 8
  store i8* %3462, i8** %newstart, align 8
  br label %do_ifmatch

sw.bb6211:                                        ; preds = %cond.end45
  %3463 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6212 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3463, i32 0, i32 2
  %ifmatch6213 = bitcast %union.anon.19* %u6212 to %struct.anon.25*
  %wanted6214 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6213, i32 0, i32 1
  store i32 0, i32* %wanted6214, align 8
  br label %ifmatch_trivial_fail_test

sw.bb6215:                                        ; preds = %cond.end45
  %3464 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6216 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3464, i32 0, i32 2
  %ifmatch6217 = bitcast %union.anon.19* %u6216 to %struct.anon.25*
  %wanted6218 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6217, i32 0, i32 1
  store i32 1, i32* %wanted6218, align 8
  br label %ifmatch_trivial_fail_test

ifmatch_trivial_fail_test:                        ; preds = %sw.bb6215, %sw.bb6211
  %3465 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags6219 = getelementptr inbounds %struct.regnode, %struct.regnode* %3465, i32 0, i32 0
  %3466 = load i8, i8* %flags6219, align 2
  %tobool6220 = icmp ne i8 %3466, 0
  br i1 %tobool6220, label %if.then6221, label %if.else6281

if.then6221:                                      ; preds = %ifmatch_trivial_fail_test
  %3467 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target6223 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3467, i32 0, i32 14
  %3468 = load i8, i8* %is_utf8_target6223, align 2
  %tobool6224 = trunc i8 %3468 to i1
  br i1 %tobool6224, label %cond.true6226, label %cond.false6233

cond.true6226:                                    ; preds = %if.then6221
  %3469 = load i8*, i8** %locinput, align 8
  %3470 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags6227 = getelementptr inbounds %struct.regnode, %struct.regnode* %3470, i32 0, i32 0
  %3471 = load i8, i8* %flags6227, align 2
  %conv6228 = zext i8 %3471 to i32
  %sub6229 = sub nsw i32 0, %conv6228
  %conv6230 = sext i32 %sub6229 to i64
  %3472 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg6231 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3472, i32 0, i32 1
  %3473 = load i8*, i8** %strbeg6231, align 8
  %call6232 = call i8* @S_reghopmaybe3(i8* %3469, i64 %conv6230, i8* %3473)
  br label %cond.end6251

cond.false6233:                                   ; preds = %if.then6221
  %3474 = load i8*, i8** %locinput, align 8
  %3475 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags6234 = getelementptr inbounds %struct.regnode, %struct.regnode* %3475, i32 0, i32 0
  %3476 = load i8, i8* %flags6234, align 2
  %conv6235 = zext i8 %3476 to i32
  %idx.ext6236 = sext i32 %conv6235 to i64
  %idx.neg6237 = sub i64 0, %idx.ext6236
  %add.ptr6238 = getelementptr inbounds i8, i8* %3474, i64 %idx.neg6237
  %3477 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg6239 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3477, i32 0, i32 1
  %3478 = load i8*, i8** %strbeg6239, align 8
  %cmp6240 = icmp uge i8* %add.ptr6238, %3478
  br i1 %cmp6240, label %cond.true6242, label %cond.false6248

cond.true6242:                                    ; preds = %cond.false6233
  %3479 = load i8*, i8** %locinput, align 8
  %3480 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags6243 = getelementptr inbounds %struct.regnode, %struct.regnode* %3480, i32 0, i32 0
  %3481 = load i8, i8* %flags6243, align 2
  %conv6244 = zext i8 %3481 to i32
  %idx.ext6245 = sext i32 %conv6244 to i64
  %idx.neg6246 = sub i64 0, %idx.ext6245
  %add.ptr6247 = getelementptr inbounds i8, i8* %3479, i64 %idx.neg6246
  br label %cond.end6249

cond.false6248:                                   ; preds = %cond.false6233
  br label %cond.end6249

cond.end6249:                                     ; preds = %cond.false6248, %cond.true6242
  %cond6250 = phi i8* [ %add.ptr6247, %cond.true6242 ], [ null, %cond.false6248 ]
  br label %cond.end6251

cond.end6251:                                     ; preds = %cond.end6249, %cond.true6226
  %cond6252 = phi i8* [ %call6232, %cond.true6226 ], [ %cond6250, %cond.end6249 ]
  store i8* %cond6252, i8** %s6222, align 8
  %3482 = load i8*, i8** %s6222, align 8
  %tobool6253 = icmp ne i8* %3482, null
  br i1 %tobool6253, label %if.end6280, label %if.then6254

if.then6254:                                      ; preds = %cond.end6251
  %3483 = load i32, i32* %logical, align 4
  %tobool6255 = icmp ne i32 %3483, 0
  br i1 %tobool6255, label %if.then6256, label %if.else6265

if.then6256:                                      ; preds = %if.then6254
  store i32 0, i32* %logical, align 4
  %3484 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6257 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3484, i32 0, i32 2
  %ifmatch6258 = bitcast %union.anon.19* %u6257 to %struct.anon.25*
  %wanted6259 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6258, i32 0, i32 1
  %3485 = load i32, i32* %wanted6259, align 8
  %tobool6260 = icmp ne i32 %3485, 0
  %3486 = zext i1 %tobool6260 to i64
  %cond6261 = select i1 %tobool6260, i32 1, i32 0
  %sub6262 = sub nsw i32 1, %cond6261
  %tobool6263 = icmp ne i32 %sub6262, 0
  %frombool6264 = zext i1 %tobool6263 to i8
  store i8 %frombool6264, i8* %sw, align 1
  br label %if.end6272

if.else6265:                                      ; preds = %if.then6254
  %3487 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6266 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3487, i32 0, i32 2
  %ifmatch6267 = bitcast %union.anon.19* %u6266 to %struct.anon.25*
  %wanted6268 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6267, i32 0, i32 1
  %3488 = load i32, i32* %wanted6268, align 8
  %tobool6269 = icmp ne i32 %3488, 0
  br i1 %tobool6269, label %if.then6270, label %if.end6271

if.then6270:                                      ; preds = %if.else6265
  br label %no

if.end6271:                                       ; preds = %if.else6265
  br label %if.end6272

if.end6272:                                       ; preds = %if.end6271, %if.then6256
  %3489 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %3490 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %3491 = bitcast %struct.regnode* %3490 to %struct.regnode_1*
  %arg16273 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %3491, i32 0, i32 3
  %3492 = load i32, i32* %arg16273, align 4
  %idx.ext6274 = zext i32 %3492 to i64
  %add.ptr6275 = getelementptr inbounds %struct.regnode, %struct.regnode* %3489, i64 %idx.ext6274
  store %struct.regnode* %add.ptr6275, %struct.regnode** %next, align 8
  %3493 = load %struct.regnode*, %struct.regnode** %next, align 8
  %3494 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %cmp6276 = icmp eq %struct.regnode* %3493, %3494
  br i1 %cmp6276, label %if.then6278, label %if.end6279

if.then6278:                                      ; preds = %if.end6272
  store %struct.regnode* null, %struct.regnode** %next, align 8
  br label %if.end6279

if.end6279:                                       ; preds = %if.then6278, %if.end6272
  br label %sw.epilog6759

if.end6280:                                       ; preds = %cond.end6251
  %3495 = load i8*, i8** %s6222, align 8
  store i8* %3495, i8** %newstart, align 8
  br label %if.end6282

if.else6281:                                      ; preds = %ifmatch_trivial_fail_test
  %3496 = load i8*, i8** %locinput, align 8
  store i8* %3496, i8** %newstart, align 8
  br label %if.end6282

if.end6282:                                       ; preds = %if.else6281, %if.end6280
  br label %do_ifmatch

do_ifmatch:                                       ; preds = %if.end6282, %sw.bb6209
  %3497 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %3498 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6283 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3498, i32 0, i32 2
  %ifmatch6284 = bitcast %union.anon.19* %u6283 to %struct.anon.25*
  %me6285 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6284, i32 0, i32 3
  store %struct.regnode* %3497, %struct.regnode** %me6285, align 8
  %3499 = load i32, i32* %logical, align 4
  %3500 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6286 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3500, i32 0, i32 2
  %ifmatch6287 = bitcast %union.anon.19* %u6286 to %struct.anon.25*
  %logical6288 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6287, i32 0, i32 2
  store i32 %3499, i32* %logical6288, align 4
  store i32 0, i32* %logical, align 4
  %3501 = load i8*, i8** %newstart, align 8
  store i8* %3501, i8** %pushinput, align 8
  %3502 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %add.ptr6289 = getelementptr inbounds %struct.regnode, %struct.regnode* %3502, i64 1
  %add.ptr6290 = getelementptr inbounds %struct.regnode, %struct.regnode* %add.ptr6289, i64 1
  store %struct.regnode* %add.ptr6290, %struct.regnode** %scan, align 8
  %3503 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state6291 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3503, i32 0, i32 0
  store i32 116, i32* %resume_state6291, align 8
  br label %push_yes_state

sw.bb6292:                                        ; preds = %cond.end45
  %3504 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6293 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3504, i32 0, i32 2
  %ifmatch6294 = bitcast %union.anon.19* %u6293 to %struct.anon.25*
  %wanted6295 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6294, i32 0, i32 1
  %3505 = load i32, i32* %wanted6295, align 8
  %tobool6296 = icmp ne i32 %3505, 0
  %lnot6297 = xor i1 %tobool6296, true
  %lnot.ext6298 = zext i1 %lnot6297 to i32
  %3506 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6299 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3506, i32 0, i32 2
  %ifmatch6300 = bitcast %union.anon.19* %u6299 to %struct.anon.25*
  %wanted6301 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6300, i32 0, i32 1
  store i32 %lnot.ext6298, i32* %wanted6301, align 8
  br label %sw.bb6302

sw.bb6302:                                        ; preds = %cond.end45, %sw.bb6292
  %3507 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6303 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3507, i32 0, i32 2
  %ifmatch6304 = bitcast %union.anon.19* %u6303 to %struct.anon.25*
  %logical6305 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6304, i32 0, i32 2
  %3508 = load i32, i32* %logical6305, align 4
  %tobool6306 = icmp ne i32 %3508, 0
  br i1 %tobool6306, label %if.then6307, label %if.else6315

if.then6307:                                      ; preds = %sw.bb6302
  %3509 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6308 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3509, i32 0, i32 2
  %ifmatch6309 = bitcast %union.anon.19* %u6308 to %struct.anon.25*
  %wanted6310 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6309, i32 0, i32 1
  %3510 = load i32, i32* %wanted6310, align 8
  %tobool6311 = icmp ne i32 %3510, 0
  %3511 = zext i1 %tobool6311 to i64
  %cond6312 = select i1 %tobool6311, i32 1, i32 0
  %tobool6313 = icmp ne i32 %cond6312, 0
  %frombool6314 = zext i1 %tobool6313 to i8
  store i8 %frombool6314, i8* %sw, align 1
  br label %if.end6322

if.else6315:                                      ; preds = %sw.bb6302
  %3512 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6316 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3512, i32 0, i32 2
  %ifmatch6317 = bitcast %union.anon.19* %u6316 to %struct.anon.25*
  %wanted6318 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6317, i32 0, i32 1
  %3513 = load i32, i32* %wanted6318, align 8
  %tobool6319 = icmp ne i32 %3513, 0
  br i1 %tobool6319, label %if.end6321, label %if.then6320

if.then6320:                                      ; preds = %if.else6315
  br label %no

if.end6321:                                       ; preds = %if.else6315
  br label %if.end6322

if.end6322:                                       ; preds = %if.end6321, %if.then6307
  %3514 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6323 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3514, i32 0, i32 2
  %ifmatch6324 = bitcast %union.anon.19* %u6323 to %struct.anon.25*
  %me6325 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6324, i32 0, i32 3
  %3515 = load %struct.regnode*, %struct.regnode** %me6325, align 8
  %type6326 = getelementptr inbounds %struct.regnode, %struct.regnode* %3515, i32 0, i32 1
  %3516 = load i8, i8* %type6326, align 1
  %conv6327 = zext i8 %3516 to i32
  %cmp6328 = icmp ne i32 %conv6327, 65
  br i1 %cmp6328, label %if.then6330, label %if.end6332

if.then6330:                                      ; preds = %if.end6322
  %3517 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %locinput6331 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3517, i32 0, i32 1
  %3518 = load i8*, i8** %locinput6331, align 8
  store i8* %3518, i8** %locinput, align 8
  br label %if.end6332

if.end6332:                                       ; preds = %if.then6330, %if.end6322
  %3519 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6333 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3519, i32 0, i32 2
  %ifmatch6334 = bitcast %union.anon.19* %u6333 to %struct.anon.25*
  %me6335 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6334, i32 0, i32 3
  %3520 = load %struct.regnode*, %struct.regnode** %me6335, align 8
  %3521 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6336 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3521, i32 0, i32 2
  %ifmatch6337 = bitcast %union.anon.19* %u6336 to %struct.anon.25*
  %me6338 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6337, i32 0, i32 3
  %3522 = load %struct.regnode*, %struct.regnode** %me6338, align 8
  %3523 = bitcast %struct.regnode* %3522 to %struct.regnode_1*
  %arg16339 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %3523, i32 0, i32 3
  %3524 = load i32, i32* %arg16339, align 4
  %idx.ext6340 = zext i32 %3524 to i64
  %add.ptr6341 = getelementptr inbounds %struct.regnode, %struct.regnode* %3520, i64 %idx.ext6340
  store %struct.regnode* %add.ptr6341, %struct.regnode** %scan, align 8
  %3525 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %3526 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6342 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3526, i32 0, i32 2
  %ifmatch6343 = bitcast %union.anon.19* %u6342 to %struct.anon.25*
  %me6344 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %ifmatch6343, i32 0, i32 3
  %3527 = load %struct.regnode*, %struct.regnode** %me6344, align 8
  %cmp6345 = icmp eq %struct.regnode* %3525, %3527
  br i1 %cmp6345, label %if.then6347, label %if.end6348

if.then6347:                                      ; preds = %if.end6332
  store %struct.regnode* null, %struct.regnode** %scan, align 8
  br label %if.end6348

if.end6348:                                       ; preds = %if.then6347, %if.end6332
  br label %while.cond

sw.bb6349:                                        ; preds = %cond.end45
  %3528 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %3529 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %3530 = bitcast %struct.regnode* %3529 to %struct.regnode_1*
  %arg16350 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %3530, i32 0, i32 3
  %3531 = load i32, i32* %arg16350, align 4
  %idx.ext6351 = zext i32 %3531 to i64
  %add.ptr6352 = getelementptr inbounds %struct.regnode, %struct.regnode* %3528, i64 %idx.ext6351
  store %struct.regnode* %add.ptr6352, %struct.regnode** %next, align 8
  %3532 = load %struct.regnode*, %struct.regnode** %next, align 8
  %3533 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %cmp6353 = icmp eq %struct.regnode* %3532, %3533
  br i1 %cmp6353, label %if.then6355, label %if.end6356

if.then6355:                                      ; preds = %sw.bb6349
  store %struct.regnode* null, %struct.regnode** %next, align 8
  br label %if.end6356

if.end6356:                                       ; preds = %if.then6355, %sw.bb6349
  br label %sw.epilog6759

sw.bb6357:                                        ; preds = %cond.end45
  %3534 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend6358 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3534, i32 0, i32 2
  %3535 = load i8*, i8** %strend6358, align 8
  %3536 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %cutpoint = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3536, i32 0, i32 6
  store i8* %3535, i8** %cutpoint, align 8
  br label %sw.bb6359

sw.bb6359:                                        ; preds = %cond.end45, %sw.bb6357
  %3537 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags6360 = getelementptr inbounds %struct.regnode, %struct.regnode* %3537, i32 0, i32 0
  %3538 = load i8, i8* %flags6360, align 2
  %tobool6361 = icmp ne i8 %3538, 0
  br i1 %tobool6361, label %if.end6368, label %if.then6362

if.then6362:                                      ; preds = %sw.bb6359
  %3539 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data6363 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %3539, i32 0, i32 3
  %3540 = load %struct.reg_data*, %struct.reg_data** %data6363, align 8
  %data6364 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %3540, i32 0, i32 2
  %3541 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %3542 = bitcast %struct.regnode* %3541 to %struct.regnode_1*
  %arg16365 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %3542, i32 0, i32 3
  %3543 = load i32, i32* %arg16365, align 4
  %idxprom6366 = zext i32 %3543 to i64
  %arrayidx6367 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data6364, i64 0, i64 %idxprom6366
  %3544 = load i8*, i8** %arrayidx6367, align 8
  %3545 = bitcast i8* %3544 to %struct.sv*
  store %struct.sv* %3545, %struct.sv** %sv_commit, align 8
  store %struct.sv* %3545, %struct.sv** %sv_yes_mark, align 8
  br label %if.end6368

if.end6368:                                       ; preds = %if.then6362, %sw.bb6359
  %3546 = load i8*, i8** %locinput, align 8
  store i8* %3546, i8** %pushinput, align 8
  %3547 = load %struct.regnode*, %struct.regnode** %next, align 8
  store %struct.regnode* %3547, %struct.regnode** %scan, align 8
  %3548 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state6369 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3548, i32 0, i32 0
  store i32 124, i32* %resume_state6369, align 8
  br label %push_state

sw.bb6370:                                        ; preds = %cond.end45
  store i8 1, i8* %no_final, align 1
  br label %sw.bb6371

sw.bb6371:                                        ; preds = %cond.end45, %sw.bb6370
  br label %no

sw.bb6372:                                        ; preds = %cond.end45
  %3549 = load %struct.regmatch_state*, %struct.regmatch_state** %mark_state, align 8
  %3550 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6373 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3550, i32 0, i32 2
  %mark6374 = bitcast %union.anon.19* %u6373 to %struct.anon.26*
  %prev_mark = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6374, i32 0, i32 1
  store %struct.regmatch_state* %3549, %struct.regmatch_state** %prev_mark, align 8
  %3551 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data6375 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %3551, i32 0, i32 3
  %3552 = load %struct.reg_data*, %struct.reg_data** %data6375, align 8
  %data6376 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %3552, i32 0, i32 2
  %3553 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %3554 = bitcast %struct.regnode* %3553 to %struct.regnode_1*
  %arg16377 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %3554, i32 0, i32 3
  %3555 = load i32, i32* %arg16377, align 4
  %idxprom6378 = zext i32 %3555 to i64
  %arrayidx6379 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data6376, i64 0, i64 %idxprom6378
  %3556 = load i8*, i8** %arrayidx6379, align 8
  %3557 = bitcast i8* %3556 to %struct.sv*
  store %struct.sv* %3557, %struct.sv** %sv_yes_mark, align 8
  store %struct.sv* %3557, %struct.sv** %sv_commit, align 8
  %3558 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6380 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3558, i32 0, i32 2
  %mark6381 = bitcast %union.anon.19* %u6380 to %struct.anon.26*
  %mark_name6382 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6381, i32 0, i32 2
  store %struct.sv* %3557, %struct.sv** %mark_name6382, align 8
  %3559 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  store %struct.regmatch_state* %3559, %struct.regmatch_state** %mark_state, align 8
  %3560 = load i8*, i8** %locinput, align 8
  %3561 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6383 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3561, i32 0, i32 2
  %mark6384 = bitcast %union.anon.19* %u6383 to %struct.anon.26*
  %mark_loc = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6384, i32 0, i32 3
  store i8* %3560, i8** %mark_loc, align 8
  %3562 = load i8*, i8** %locinput, align 8
  store i8* %3562, i8** %pushinput, align 8
  %3563 = load %struct.regnode*, %struct.regnode** %next, align 8
  store %struct.regnode* %3563, %struct.regnode** %scan, align 8
  %3564 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state6385 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3564, i32 0, i32 0
  store i32 126, i32* %resume_state6385, align 8
  br label %push_yes_state

sw.bb6386:                                        ; preds = %cond.end45
  %3565 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6387 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3565, i32 0, i32 2
  %mark6388 = bitcast %union.anon.19* %u6387 to %struct.anon.26*
  %prev_mark6389 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6388, i32 0, i32 1
  %3566 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_mark6389, align 8
  store %struct.regmatch_state* %3566, %struct.regmatch_state** %mark_state, align 8
  br label %yes6772

sw.bb6390:                                        ; preds = %cond.end45
  %3567 = load %struct.sv*, %struct.sv** %popmark, align 8
  %tobool6391 = icmp ne %struct.sv* %3567, null
  br i1 %tobool6391, label %land.lhs.true6392, label %if.end6437

land.lhs.true6392:                                ; preds = %sw.bb6390
  %3568 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6393 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3568, i32 0, i32 2
  %mark6394 = bitcast %union.anon.19* %u6393 to %struct.anon.26*
  %mark_name6395 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6394, i32 0, i32 2
  %3569 = load %struct.sv*, %struct.sv** %mark_name6395, align 8
  %3570 = load %struct.sv*, %struct.sv** %popmark, align 8
  %call6396 = call i32 @Perl_sv_eq_flags(%struct.sv* %3569, %struct.sv* %3570, i32 2)
  %tobool6397 = icmp ne i32 %call6396, 0
  br i1 %tobool6397, label %if.then6398, label %if.end6437

if.then6398:                                      ; preds = %land.lhs.true6392
  %3571 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6399 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3571, i32 0, i32 2
  %mark6400 = bitcast %union.anon.19* %u6399 to %struct.anon.26*
  %mark_loc6401 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6400, i32 0, i32 3
  %3572 = load i8*, i8** %mark_loc6401, align 8
  %3573 = load i8*, i8** %startpoint, align 8
  %cmp6402 = icmp ugt i8* %3572, %3573
  br i1 %cmp6402, label %if.then6404, label %if.end6433

if.then6404:                                      ; preds = %if.then6398
  %3574 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target6405 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3574, i32 0, i32 14
  %3575 = load i8, i8* %is_utf8_target6405, align 2
  %tobool6406 = trunc i8 %3575 to i1
  br i1 %tobool6406, label %cond.true6408, label %cond.false6414

cond.true6408:                                    ; preds = %if.then6404
  %3576 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6409 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3576, i32 0, i32 2
  %mark6410 = bitcast %union.anon.19* %u6409 to %struct.anon.26*
  %mark_loc6411 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6410, i32 0, i32 3
  %3577 = load i8*, i8** %mark_loc6411, align 8
  %3578 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg6412 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3578, i32 0, i32 1
  %3579 = load i8*, i8** %strbeg6412, align 8
  %call6413 = call i8* @S_reghopmaybe3(i8* %3577, i64 -1, i8* %3579)
  br label %cond.end6430

cond.false6414:                                   ; preds = %if.then6404
  %3580 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6415 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3580, i32 0, i32 2
  %mark6416 = bitcast %union.anon.19* %u6415 to %struct.anon.26*
  %mark_loc6417 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6416, i32 0, i32 3
  %3581 = load i8*, i8** %mark_loc6417, align 8
  %add.ptr6418 = getelementptr inbounds i8, i8* %3581, i64 -1
  %3582 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg6419 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3582, i32 0, i32 1
  %3583 = load i8*, i8** %strbeg6419, align 8
  %cmp6420 = icmp uge i8* %add.ptr6418, %3583
  br i1 %cmp6420, label %cond.true6422, label %cond.false6427

cond.true6422:                                    ; preds = %cond.false6414
  %3584 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6423 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3584, i32 0, i32 2
  %mark6424 = bitcast %union.anon.19* %u6423 to %struct.anon.26*
  %mark_loc6425 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6424, i32 0, i32 3
  %3585 = load i8*, i8** %mark_loc6425, align 8
  %add.ptr6426 = getelementptr inbounds i8, i8* %3585, i64 -1
  br label %cond.end6428

cond.false6427:                                   ; preds = %cond.false6414
  br label %cond.end6428

cond.end6428:                                     ; preds = %cond.false6427, %cond.true6422
  %cond6429 = phi i8* [ %add.ptr6426, %cond.true6422 ], [ null, %cond.false6427 ]
  br label %cond.end6430

cond.end6430:                                     ; preds = %cond.end6428, %cond.true6408
  %cond6431 = phi i8* [ %call6413, %cond.true6408 ], [ %cond6429, %cond.end6428 ]
  %3586 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %cutpoint6432 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3586, i32 0, i32 6
  store i8* %cond6431, i8** %cutpoint6432, align 8
  br label %if.end6433

if.end6433:                                       ; preds = %cond.end6430, %if.then6398
  store %struct.sv* null, %struct.sv** %popmark, align 8
  %3587 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6434 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3587, i32 0, i32 2
  %mark6435 = bitcast %union.anon.19* %u6434 to %struct.anon.26*
  %mark_name6436 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6435, i32 0, i32 2
  %3588 = load %struct.sv*, %struct.sv** %mark_name6436, align 8
  store %struct.sv* %3588, %struct.sv** %sv_commit, align 8
  br label %if.end6437

if.end6437:                                       ; preds = %if.end6433, %land.lhs.true6392, %sw.bb6390
  %3589 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6438 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3589, i32 0, i32 2
  %mark6439 = bitcast %union.anon.19* %u6438 to %struct.anon.26*
  %prev_mark6440 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6439, i32 0, i32 1
  %3590 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_mark6440, align 8
  store %struct.regmatch_state* %3590, %struct.regmatch_state** %mark_state, align 8
  %3591 = load %struct.regmatch_state*, %struct.regmatch_state** %mark_state, align 8
  %tobool6441 = icmp ne %struct.regmatch_state* %3591, null
  br i1 %tobool6441, label %cond.true6442, label %cond.false6446

cond.true6442:                                    ; preds = %if.end6437
  %3592 = load %struct.regmatch_state*, %struct.regmatch_state** %mark_state, align 8
  %u6443 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3592, i32 0, i32 2
  %mark6444 = bitcast %union.anon.19* %u6443 to %struct.anon.26*
  %mark_name6445 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6444, i32 0, i32 2
  %3593 = load %struct.sv*, %struct.sv** %mark_name6445, align 8
  br label %cond.end6447

cond.false6446:                                   ; preds = %if.end6437
  br label %cond.end6447

cond.end6447:                                     ; preds = %cond.false6446, %cond.true6442
  %cond6448 = phi %struct.sv* [ %3593, %cond.true6442 ], [ null, %cond.false6446 ]
  store %struct.sv* %cond6448, %struct.sv** %sv_yes_mark, align 8
  br label %no

sw.bb6449:                                        ; preds = %cond.end45
  %3594 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %flags6450 = getelementptr inbounds %struct.regnode, %struct.regnode* %3594, i32 0, i32 0
  %3595 = load i8, i8* %flags6450, align 2
  %tobool6451 = icmp ne i8 %3595, 0
  br i1 %tobool6451, label %if.then6452, label %if.else6460

if.then6452:                                      ; preds = %sw.bb6449
  %3596 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6453 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3596, i32 0, i32 2
  %mark6454 = bitcast %union.anon.19* %u6453 to %struct.anon.26*
  %mark_name6455 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6454, i32 0, i32 2
  store %struct.sv* null, %struct.sv** %mark_name6455, align 8
  %3597 = load i8*, i8** %locinput, align 8
  %3598 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6456 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3598, i32 0, i32 2
  %mark6457 = bitcast %union.anon.19* %u6456 to %struct.anon.26*
  %mark_loc6458 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6457, i32 0, i32 3
  store i8* %3597, i8** %mark_loc6458, align 8
  %3599 = load i8*, i8** %locinput, align 8
  store i8* %3599, i8** %pushinput, align 8
  %3600 = load %struct.regnode*, %struct.regnode** %next, align 8
  store %struct.regnode* %3600, %struct.regnode** %scan, align 8
  %3601 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state6459 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3601, i32 0, i32 0
  store i32 128, i32* %resume_state6459, align 8
  br label %push_state

if.else6460:                                      ; preds = %sw.bb6449
  %3602 = load %struct.regmatch_state*, %struct.regmatch_state** %mark_state, align 8
  store %struct.regmatch_state* %3602, %struct.regmatch_state** %cur, align 8
  %3603 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data6461 = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %3603, i32 0, i32 3
  %3604 = load %struct.reg_data*, %struct.reg_data** %data6461, align 8
  %data6462 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %3604, i32 0, i32 2
  %3605 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %3606 = bitcast %struct.regnode* %3605 to %struct.regnode_1*
  %arg16463 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %3606, i32 0, i32 3
  %3607 = load i32, i32* %arg16463, align 4
  %idxprom6464 = zext i32 %3607 to i64
  %arrayidx6465 = getelementptr inbounds [1 x i8*], [1 x i8*]* %data6462, i64 0, i64 %idxprom6464
  %3608 = load i8*, i8** %arrayidx6465, align 8
  %3609 = bitcast i8* %3608 to %struct.sv*
  store %struct.sv* %3609, %struct.sv** %find, align 8
  br label %while.cond6466

while.cond6466:                                   ; preds = %if.end6479, %if.else6460
  %3610 = load %struct.regmatch_state*, %struct.regmatch_state** %cur, align 8
  %tobool6467 = icmp ne %struct.regmatch_state* %3610, null
  br i1 %tobool6467, label %while.body6468, label %while.end6483

while.body6468:                                   ; preds = %while.cond6466
  %3611 = load %struct.regmatch_state*, %struct.regmatch_state** %cur, align 8
  %u6469 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3611, i32 0, i32 2
  %mark6470 = bitcast %union.anon.19* %u6469 to %struct.anon.26*
  %mark_name6471 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6470, i32 0, i32 2
  %3612 = load %struct.sv*, %struct.sv** %mark_name6471, align 8
  %3613 = load %struct.sv*, %struct.sv** %find, align 8
  %call6472 = call i32 @Perl_sv_eq_flags(%struct.sv* %3612, %struct.sv* %3613, i32 2)
  %tobool6473 = icmp ne i32 %call6472, 0
  br i1 %tobool6473, label %if.then6474, label %if.end6479

if.then6474:                                      ; preds = %while.body6468
  %3614 = load %struct.sv*, %struct.sv** %find, align 8
  %3615 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6475 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3615, i32 0, i32 2
  %mark6476 = bitcast %union.anon.19* %u6475 to %struct.anon.26*
  %mark_name6477 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6476, i32 0, i32 2
  store %struct.sv* %3614, %struct.sv** %mark_name6477, align 8
  %3616 = load i8*, i8** %locinput, align 8
  store i8* %3616, i8** %pushinput, align 8
  %3617 = load %struct.regnode*, %struct.regnode** %next, align 8
  store %struct.regnode* %3617, %struct.regnode** %scan, align 8
  %3618 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state6478 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3618, i32 0, i32 0
  store i32 128, i32* %resume_state6478, align 8
  br label %push_state

if.end6479:                                       ; preds = %while.body6468
  %3619 = load %struct.regmatch_state*, %struct.regmatch_state** %cur, align 8
  %u6480 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3619, i32 0, i32 2
  %mark6481 = bitcast %union.anon.19* %u6480 to %struct.anon.26*
  %prev_mark6482 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6481, i32 0, i32 1
  %3620 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_mark6482, align 8
  store %struct.regmatch_state* %3620, %struct.regmatch_state** %cur, align 8
  br label %while.cond6466

while.end6483:                                    ; preds = %while.cond6466
  br label %if.end6484

if.end6484:                                       ; preds = %while.end6483
  br label %sw.epilog6759

sw.bb6485:                                        ; preds = %cond.end45
  %3621 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6486 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3621, i32 0, i32 2
  %mark6487 = bitcast %union.anon.19* %u6486 to %struct.anon.26*
  %mark_name6488 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6487, i32 0, i32 2
  %3622 = load %struct.sv*, %struct.sv** %mark_name6488, align 8
  %tobool6489 = icmp ne %struct.sv* %3622, null
  br i1 %tobool6489, label %if.then6490, label %if.else6494

if.then6490:                                      ; preds = %sw.bb6485
  %3623 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6491 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3623, i32 0, i32 2
  %mark6492 = bitcast %union.anon.19* %u6491 to %struct.anon.26*
  %mark_name6493 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6492, i32 0, i32 2
  %3624 = load %struct.sv*, %struct.sv** %mark_name6493, align 8
  store %struct.sv* %3624, %struct.sv** %popmark, align 8
  br label %if.end6536

if.else6494:                                      ; preds = %sw.bb6485
  %3625 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6495 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3625, i32 0, i32 2
  %mark6496 = bitcast %union.anon.19* %u6495 to %struct.anon.26*
  %mark_loc6497 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6496, i32 0, i32 3
  %3626 = load i8*, i8** %mark_loc6497, align 8
  %3627 = load i8*, i8** %startpoint, align 8
  %cmp6498 = icmp ugt i8* %3626, %3627
  br i1 %cmp6498, label %if.then6500, label %if.end6529

if.then6500:                                      ; preds = %if.else6494
  %3628 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target6501 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3628, i32 0, i32 14
  %3629 = load i8, i8* %is_utf8_target6501, align 2
  %tobool6502 = trunc i8 %3629 to i1
  br i1 %tobool6502, label %cond.true6504, label %cond.false6510

cond.true6504:                                    ; preds = %if.then6500
  %3630 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6505 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3630, i32 0, i32 2
  %mark6506 = bitcast %union.anon.19* %u6505 to %struct.anon.26*
  %mark_loc6507 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6506, i32 0, i32 3
  %3631 = load i8*, i8** %mark_loc6507, align 8
  %3632 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg6508 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3632, i32 0, i32 1
  %3633 = load i8*, i8** %strbeg6508, align 8
  %call6509 = call i8* @S_reghopmaybe3(i8* %3631, i64 -1, i8* %3633)
  br label %cond.end6526

cond.false6510:                                   ; preds = %if.then6500
  %3634 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6511 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3634, i32 0, i32 2
  %mark6512 = bitcast %union.anon.19* %u6511 to %struct.anon.26*
  %mark_loc6513 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6512, i32 0, i32 3
  %3635 = load i8*, i8** %mark_loc6513, align 8
  %add.ptr6514 = getelementptr inbounds i8, i8* %3635, i64 -1
  %3636 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg6515 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3636, i32 0, i32 1
  %3637 = load i8*, i8** %strbeg6515, align 8
  %cmp6516 = icmp uge i8* %add.ptr6514, %3637
  br i1 %cmp6516, label %cond.true6518, label %cond.false6523

cond.true6518:                                    ; preds = %cond.false6510
  %3638 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6519 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3638, i32 0, i32 2
  %mark6520 = bitcast %union.anon.19* %u6519 to %struct.anon.26*
  %mark_loc6521 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6520, i32 0, i32 3
  %3639 = load i8*, i8** %mark_loc6521, align 8
  %add.ptr6522 = getelementptr inbounds i8, i8* %3639, i64 -1
  br label %cond.end6524

cond.false6523:                                   ; preds = %cond.false6510
  br label %cond.end6524

cond.end6524:                                     ; preds = %cond.false6523, %cond.true6518
  %cond6525 = phi i8* [ %add.ptr6522, %cond.true6518 ], [ null, %cond.false6523 ]
  br label %cond.end6526

cond.end6526:                                     ; preds = %cond.end6524, %cond.true6504
  %cond6527 = phi i8* [ %call6509, %cond.true6504 ], [ %cond6525, %cond.end6524 ]
  %3640 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %cutpoint6528 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3640, i32 0, i32 6
  store i8* %cond6527, i8** %cutpoint6528, align 8
  br label %if.end6529

if.end6529:                                       ; preds = %cond.end6526, %if.else6494
  %3641 = load %struct.regmatch_state*, %struct.regmatch_state** %mark_state, align 8
  %tobool6530 = icmp ne %struct.regmatch_state* %3641, null
  br i1 %tobool6530, label %if.then6531, label %if.end6535

if.then6531:                                      ; preds = %if.end6529
  %3642 = load %struct.regmatch_state*, %struct.regmatch_state** %mark_state, align 8
  %u6532 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3642, i32 0, i32 2
  %mark6533 = bitcast %union.anon.19* %u6532 to %struct.anon.26*
  %mark_name6534 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %mark6533, i32 0, i32 2
  %3643 = load %struct.sv*, %struct.sv** %mark_name6534, align 8
  store %struct.sv* %3643, %struct.sv** %sv_commit, align 8
  br label %if.end6535

if.end6535:                                       ; preds = %if.then6531, %if.end6529
  br label %if.end6536

if.end6536:                                       ; preds = %if.end6535, %if.then6490
  store i8 1, i8* %no_final, align 1
  br label %no

sw.bb6537:                                        ; preds = %cond.end45
  %3644 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend6538 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3644, i32 0, i32 2
  %3645 = load i8*, i8** %strend6538, align 8
  %3646 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast6539 = ptrtoint i8* %3645 to i64
  %sub.ptr.rhs.cast6540 = ptrtoint i8* %3646 to i64
  %sub.ptr.sub6541 = sub i64 %sub.ptr.lhs.cast6539, %sub.ptr.rhs.cast6540
  %cmp6542 = icmp sgt i64 %sub.ptr.sub6541, 2
  br i1 %cmp6542, label %cond.true6544, label %cond.false6612

cond.true6544:                                    ; preds = %sw.bb6537
  %3647 = load i8*, i8** %locinput, align 8
  %arrayidx6545 = getelementptr inbounds i8, i8* %3647, i64 0
  %3648 = load i8, i8* %arrayidx6545, align 1
  %conv6546 = zext i8 %3648 to i32
  %cmp6547 = icmp sle i32 10, %conv6546
  br i1 %cmp6547, label %land.lhs.true6549, label %cond.false6555

land.lhs.true6549:                                ; preds = %cond.true6544
  %3649 = load i8*, i8** %locinput, align 8
  %arrayidx6550 = getelementptr inbounds i8, i8* %3649, i64 0
  %3650 = load i8, i8* %arrayidx6550, align 1
  %conv6551 = zext i8 %3650 to i32
  %cmp6552 = icmp sle i32 %conv6551, 12
  br i1 %cmp6552, label %cond.true6554, label %cond.false6555

cond.true6554:                                    ; preds = %land.lhs.true6549
  br label %cond.end6610

cond.false6555:                                   ; preds = %land.lhs.true6549, %cond.true6544
  %3651 = load i8*, i8** %locinput, align 8
  %arrayidx6556 = getelementptr inbounds i8, i8* %3651, i64 0
  %3652 = load i8, i8* %arrayidx6556, align 1
  %conv6557 = zext i8 %3652 to i32
  %cmp6558 = icmp eq i32 13, %conv6557
  br i1 %cmp6558, label %cond.true6560, label %cond.false6566

cond.true6560:                                    ; preds = %cond.false6555
  %3653 = load i8*, i8** %locinput, align 8
  %arrayidx6561 = getelementptr inbounds i8, i8* %3653, i64 1
  %3654 = load i8, i8* %arrayidx6561, align 1
  %conv6562 = zext i8 %3654 to i32
  %cmp6563 = icmp eq i32 10, %conv6562
  %3655 = zext i1 %cmp6563 to i64
  %cond6565 = select i1 %cmp6563, i32 2, i32 1
  br label %cond.end6608

cond.false6566:                                   ; preds = %cond.false6555
  %3656 = load i8, i8* %utf8_target, align 1
  %tobool6567 = trunc i8 %3656 to i1
  br i1 %tobool6567, label %cond.true6569, label %cond.false6601

cond.true6569:                                    ; preds = %cond.false6566
  %3657 = load i8*, i8** %locinput, align 8
  %arrayidx6570 = getelementptr inbounds i8, i8* %3657, i64 0
  %3658 = load i8, i8* %arrayidx6570, align 1
  %conv6571 = zext i8 %3658 to i32
  %cmp6572 = icmp eq i32 194, %conv6571
  br i1 %cmp6572, label %cond.true6574, label %cond.false6580

cond.true6574:                                    ; preds = %cond.true6569
  %3659 = load i8*, i8** %locinput, align 8
  %arrayidx6575 = getelementptr inbounds i8, i8* %3659, i64 1
  %3660 = load i8, i8* %arrayidx6575, align 1
  %conv6576 = zext i8 %3660 to i32
  %cmp6577 = icmp eq i32 133, %conv6576
  %3661 = zext i1 %cmp6577 to i64
  %cond6579 = select i1 %cmp6577, i32 2, i32 0
  br label %cond.end6599

cond.false6580:                                   ; preds = %cond.true6569
  %3662 = load i8*, i8** %locinput, align 8
  %arrayidx6581 = getelementptr inbounds i8, i8* %3662, i64 0
  %3663 = load i8, i8* %arrayidx6581, align 1
  %conv6582 = zext i8 %3663 to i32
  %cmp6583 = icmp eq i32 226, %conv6582
  br i1 %cmp6583, label %land.lhs.true6585, label %land.end6596

land.lhs.true6585:                                ; preds = %cond.false6580
  %3664 = load i8*, i8** %locinput, align 8
  %arrayidx6586 = getelementptr inbounds i8, i8* %3664, i64 1
  %3665 = load i8, i8* %arrayidx6586, align 1
  %conv6587 = zext i8 %3665 to i32
  %cmp6588 = icmp eq i32 128, %conv6587
  br i1 %cmp6588, label %land.rhs6590, label %land.end6596

land.rhs6590:                                     ; preds = %land.lhs.true6585
  %3666 = load i8*, i8** %locinput, align 8
  %arrayidx6591 = getelementptr inbounds i8, i8* %3666, i64 2
  %3667 = load i8, i8* %arrayidx6591, align 1
  %conv6592 = zext i8 %3667 to i32
  %and6593 = and i32 %conv6592, 254
  %cmp6594 = icmp eq i32 %and6593, 168
  br label %land.end6596

land.end6596:                                     ; preds = %land.rhs6590, %land.lhs.true6585, %cond.false6580
  %3668 = phi i1 [ false, %land.lhs.true6585 ], [ false, %cond.false6580 ], [ %cmp6594, %land.rhs6590 ]
  %3669 = zext i1 %3668 to i64
  %cond6598 = select i1 %3668, i32 3, i32 0
  br label %cond.end6599

cond.end6599:                                     ; preds = %land.end6596, %cond.true6574
  %cond6600 = phi i32 [ %cond6579, %cond.true6574 ], [ %cond6598, %land.end6596 ]
  br label %cond.end6606

cond.false6601:                                   ; preds = %cond.false6566
  %3670 = load i8*, i8** %locinput, align 8
  %arrayidx6602 = getelementptr inbounds i8, i8* %3670, i64 0
  %3671 = load i8, i8* %arrayidx6602, align 1
  %conv6603 = zext i8 %3671 to i32
  %cmp6604 = icmp eq i32 133, %conv6603
  %conv6605 = zext i1 %cmp6604 to i32
  br label %cond.end6606

cond.end6606:                                     ; preds = %cond.false6601, %cond.end6599
  %cond6607 = phi i32 [ %cond6600, %cond.end6599 ], [ %conv6605, %cond.false6601 ]
  br label %cond.end6608

cond.end6608:                                     ; preds = %cond.end6606, %cond.true6560
  %cond6609 = phi i32 [ %cond6565, %cond.true6560 ], [ %cond6607, %cond.end6606 ]
  br label %cond.end6610

cond.end6610:                                     ; preds = %cond.end6608, %cond.true6554
  %cond6611 = phi i32 [ 1, %cond.true6554 ], [ %cond6609, %cond.end6608 ]
  br label %cond.end6703

cond.false6612:                                   ; preds = %sw.bb6537
  %3672 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend6613 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3672, i32 0, i32 2
  %3673 = load i8*, i8** %strend6613, align 8
  %3674 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast6614 = ptrtoint i8* %3673 to i64
  %sub.ptr.rhs.cast6615 = ptrtoint i8* %3674 to i64
  %sub.ptr.sub6616 = sub i64 %sub.ptr.lhs.cast6614, %sub.ptr.rhs.cast6615
  %cmp6617 = icmp sgt i64 %sub.ptr.sub6616, 1
  br i1 %cmp6617, label %cond.true6619, label %cond.false6668

cond.true6619:                                    ; preds = %cond.false6612
  %3675 = load i8*, i8** %locinput, align 8
  %arrayidx6620 = getelementptr inbounds i8, i8* %3675, i64 0
  %3676 = load i8, i8* %arrayidx6620, align 1
  %conv6621 = zext i8 %3676 to i32
  %cmp6622 = icmp sle i32 10, %conv6621
  br i1 %cmp6622, label %land.lhs.true6624, label %cond.false6630

land.lhs.true6624:                                ; preds = %cond.true6619
  %3677 = load i8*, i8** %locinput, align 8
  %arrayidx6625 = getelementptr inbounds i8, i8* %3677, i64 0
  %3678 = load i8, i8* %arrayidx6625, align 1
  %conv6626 = zext i8 %3678 to i32
  %cmp6627 = icmp sle i32 %conv6626, 12
  br i1 %cmp6627, label %cond.true6629, label %cond.false6630

cond.true6629:                                    ; preds = %land.lhs.true6624
  br label %cond.end6666

cond.false6630:                                   ; preds = %land.lhs.true6624, %cond.true6619
  %3679 = load i8*, i8** %locinput, align 8
  %arrayidx6631 = getelementptr inbounds i8, i8* %3679, i64 0
  %3680 = load i8, i8* %arrayidx6631, align 1
  %conv6632 = zext i8 %3680 to i32
  %cmp6633 = icmp eq i32 13, %conv6632
  br i1 %cmp6633, label %cond.true6635, label %cond.false6641

cond.true6635:                                    ; preds = %cond.false6630
  %3681 = load i8*, i8** %locinput, align 8
  %arrayidx6636 = getelementptr inbounds i8, i8* %3681, i64 1
  %3682 = load i8, i8* %arrayidx6636, align 1
  %conv6637 = zext i8 %3682 to i32
  %cmp6638 = icmp eq i32 10, %conv6637
  %3683 = zext i1 %cmp6638 to i64
  %cond6640 = select i1 %cmp6638, i32 2, i32 1
  br label %cond.end6664

cond.false6641:                                   ; preds = %cond.false6630
  %3684 = load i8, i8* %utf8_target, align 1
  %tobool6642 = trunc i8 %3684 to i1
  br i1 %tobool6642, label %cond.true6644, label %cond.false6657

cond.true6644:                                    ; preds = %cond.false6641
  %3685 = load i8*, i8** %locinput, align 8
  %arrayidx6645 = getelementptr inbounds i8, i8* %3685, i64 0
  %3686 = load i8, i8* %arrayidx6645, align 1
  %conv6646 = zext i8 %3686 to i32
  %cmp6647 = icmp eq i32 194, %conv6646
  br i1 %cmp6647, label %land.rhs6649, label %land.end6654

land.rhs6649:                                     ; preds = %cond.true6644
  %3687 = load i8*, i8** %locinput, align 8
  %arrayidx6650 = getelementptr inbounds i8, i8* %3687, i64 1
  %3688 = load i8, i8* %arrayidx6650, align 1
  %conv6651 = zext i8 %3688 to i32
  %cmp6652 = icmp eq i32 133, %conv6651
  br label %land.end6654

land.end6654:                                     ; preds = %land.rhs6649, %cond.true6644
  %3689 = phi i1 [ false, %cond.true6644 ], [ %cmp6652, %land.rhs6649 ]
  %3690 = zext i1 %3689 to i64
  %cond6656 = select i1 %3689, i32 2, i32 0
  br label %cond.end6662

cond.false6657:                                   ; preds = %cond.false6641
  %3691 = load i8*, i8** %locinput, align 8
  %arrayidx6658 = getelementptr inbounds i8, i8* %3691, i64 0
  %3692 = load i8, i8* %arrayidx6658, align 1
  %conv6659 = zext i8 %3692 to i32
  %cmp6660 = icmp eq i32 133, %conv6659
  %conv6661 = zext i1 %cmp6660 to i32
  br label %cond.end6662

cond.end6662:                                     ; preds = %cond.false6657, %land.end6654
  %cond6663 = phi i32 [ %cond6656, %land.end6654 ], [ %conv6661, %cond.false6657 ]
  br label %cond.end6664

cond.end6664:                                     ; preds = %cond.end6662, %cond.true6635
  %cond6665 = phi i32 [ %cond6640, %cond.true6635 ], [ %cond6663, %cond.end6662 ]
  br label %cond.end6666

cond.end6666:                                     ; preds = %cond.end6664, %cond.true6629
  %cond6667 = phi i32 [ 1, %cond.true6629 ], [ %cond6665, %cond.end6664 ]
  br label %cond.end6701

cond.false6668:                                   ; preds = %cond.false6612
  %3693 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend6669 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3693, i32 0, i32 2
  %3694 = load i8*, i8** %strend6669, align 8
  %3695 = load i8*, i8** %locinput, align 8
  %sub.ptr.lhs.cast6670 = ptrtoint i8* %3694 to i64
  %sub.ptr.rhs.cast6671 = ptrtoint i8* %3695 to i64
  %sub.ptr.sub6672 = sub i64 %sub.ptr.lhs.cast6670, %sub.ptr.rhs.cast6671
  %cmp6673 = icmp sgt i64 %sub.ptr.sub6672, 0
  br i1 %cmp6673, label %cond.true6675, label %cond.false6698

cond.true6675:                                    ; preds = %cond.false6668
  %3696 = load i8*, i8** %locinput, align 8
  %arrayidx6676 = getelementptr inbounds i8, i8* %3696, i64 0
  %3697 = load i8, i8* %arrayidx6676, align 1
  %conv6677 = zext i8 %3697 to i32
  %cmp6678 = icmp sle i32 10, %conv6677
  br i1 %cmp6678, label %land.lhs.true6680, label %cond.false6686

land.lhs.true6680:                                ; preds = %cond.true6675
  %3698 = load i8*, i8** %locinput, align 8
  %arrayidx6681 = getelementptr inbounds i8, i8* %3698, i64 0
  %3699 = load i8, i8* %arrayidx6681, align 1
  %conv6682 = zext i8 %3699 to i32
  %cmp6683 = icmp sle i32 %conv6682, 13
  br i1 %cmp6683, label %cond.true6685, label %cond.false6686

cond.true6685:                                    ; preds = %land.lhs.true6680
  br label %cond.end6696

cond.false6686:                                   ; preds = %land.lhs.true6680, %cond.true6675
  %3700 = load i8, i8* %utf8_target, align 1
  %tobool6687 = trunc i8 %3700 to i1
  br i1 %tobool6687, label %cond.false6693, label %cond.true6688

cond.true6688:                                    ; preds = %cond.false6686
  %3701 = load i8*, i8** %locinput, align 8
  %arrayidx6689 = getelementptr inbounds i8, i8* %3701, i64 0
  %3702 = load i8, i8* %arrayidx6689, align 1
  %conv6690 = zext i8 %3702 to i32
  %cmp6691 = icmp eq i32 133, %conv6690
  %conv6692 = zext i1 %cmp6691 to i32
  br label %cond.end6694

cond.false6693:                                   ; preds = %cond.false6686
  br label %cond.end6694

cond.end6694:                                     ; preds = %cond.false6693, %cond.true6688
  %cond6695 = phi i32 [ %conv6692, %cond.true6688 ], [ 0, %cond.false6693 ]
  br label %cond.end6696

cond.end6696:                                     ; preds = %cond.end6694, %cond.true6685
  %cond6697 = phi i32 [ 1, %cond.true6685 ], [ %cond6695, %cond.end6694 ]
  br label %cond.end6699

cond.false6698:                                   ; preds = %cond.false6668
  br label %cond.end6699

cond.end6699:                                     ; preds = %cond.false6698, %cond.end6696
  %cond6700 = phi i32 [ %cond6697, %cond.end6696 ], [ 0, %cond.false6698 ]
  br label %cond.end6701

cond.end6701:                                     ; preds = %cond.end6699, %cond.end6666
  %cond6702 = phi i32 [ %cond6667, %cond.end6666 ], [ %cond6700, %cond.end6699 ]
  br label %cond.end6703

cond.end6703:                                     ; preds = %cond.end6701, %cond.end6610
  %cond6704 = phi i32 [ %cond6611, %cond.end6610 ], [ %cond6702, %cond.end6701 ]
  store i32 %cond6704, i32* %n, align 4
  %tobool6705 = icmp ne i32 %cond6704, 0
  br i1 %tobool6705, label %if.then6706, label %if.else6709

if.then6706:                                      ; preds = %cond.end6703
  %3703 = load i32, i32* %n, align 4
  %3704 = load i8*, i8** %locinput, align 8
  %idx.ext6707 = zext i32 %3703 to i64
  %add.ptr6708 = getelementptr inbounds i8, i8* %3704, i64 %idx.ext6707
  store i8* %add.ptr6708, i8** %locinput, align 8
  br label %if.end6710

if.else6709:                                      ; preds = %cond.end6703
  br label %no

if.end6710:                                       ; preds = %if.then6706
  br label %sw.epilog6759

sw.default6711:                                   ; preds = %cond.end45
  %3705 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %tobool6712 = icmp ne %struct.gv* %3705, null
  br i1 %tobool6712, label %land.lhs.true6713, label %cond.false6737

land.lhs.true6713:                                ; preds = %sw.default6711
  %3706 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_flags6714 = getelementptr inbounds %struct.gv, %struct.gv* %3706, i32 0, i32 2
  %3707 = load i32, i32* %sv_flags6714, align 4
  %and6715 = and i32 %3707, 255
  %cmp6716 = icmp eq i32 %and6715, 9
  br i1 %cmp6716, label %land.lhs.true6718, label %cond.false6737

land.lhs.true6718:                                ; preds = %land.lhs.true6713
  %3708 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_u6719 = getelementptr inbounds %struct.gv, %struct.gv* %3708, i32 0, i32 3
  %svu_gp6720 = bitcast %union.anon.4* %sv_u6719 to %struct.gp**
  %3709 = load %struct.gp*, %struct.gp** %svu_gp6720, align 8
  %add.ptr6721 = getelementptr inbounds %struct.gp, %struct.gp* %3709, i64 0
  %gp_io = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr6721, i32 0, i32 1
  %3710 = load %struct.io*, %struct.io** %gp_io, align 8
  %tobool6722 = icmp ne %struct.io* %3710, null
  br i1 %tobool6722, label %land.lhs.true6723, label %cond.false6737

land.lhs.true6723:                                ; preds = %land.lhs.true6718
  %3711 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_u6724 = getelementptr inbounds %struct.gv, %struct.gv* %3711, i32 0, i32 3
  %svu_gp6725 = bitcast %union.anon.4* %sv_u6724 to %struct.gp**
  %3712 = load %struct.gp*, %struct.gp** %svu_gp6725, align 8
  %add.ptr6726 = getelementptr inbounds %struct.gp, %struct.gp* %3712, i64 0
  %gp_io6727 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr6726, i32 0, i32 1
  %3713 = load %struct.io*, %struct.io** %gp_io6727, align 8
  %sv_any6728 = getelementptr inbounds %struct.io, %struct.io* %3713, i32 0, i32 0
  %3714 = load %struct.xpvio*, %struct.xpvio** %sv_any6728, align 8
  %xio_ofp = getelementptr inbounds %struct.xpvio, %struct.xpvio* %3714, i32 0, i32 5
  %3715 = load %struct._PerlIO**, %struct._PerlIO*** %xio_ofp, align 8
  %tobool6729 = icmp ne %struct._PerlIO** %3715, null
  br i1 %tobool6729, label %cond.true6730, label %cond.false6737

cond.true6730:                                    ; preds = %land.lhs.true6723
  %3716 = load %struct.gv*, %struct.gv** @PL_stderrgv, align 8
  %sv_u6731 = getelementptr inbounds %struct.gv, %struct.gv* %3716, i32 0, i32 3
  %svu_gp6732 = bitcast %union.anon.4* %sv_u6731 to %struct.gp**
  %3717 = load %struct.gp*, %struct.gp** %svu_gp6732, align 8
  %add.ptr6733 = getelementptr inbounds %struct.gp, %struct.gp* %3717, i64 0
  %gp_io6734 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr6733, i32 0, i32 1
  %3718 = load %struct.io*, %struct.io** %gp_io6734, align 8
  %sv_any6735 = getelementptr inbounds %struct.io, %struct.io* %3718, i32 0, i32 0
  %3719 = load %struct.xpvio*, %struct.xpvio** %sv_any6735, align 8
  %xio_ofp6736 = getelementptr inbounds %struct.xpvio, %struct.xpvio* %3719, i32 0, i32 5
  %3720 = load %struct._PerlIO**, %struct._PerlIO*** %xio_ofp6736, align 8
  br label %cond.end6739

cond.false6737:                                   ; preds = %land.lhs.true6723, %land.lhs.true6718, %land.lhs.true6713, %sw.default6711
  %call6738 = call %struct._PerlIO** @Perl_PerlIO_stderr()
  br label %cond.end6739

cond.end6739:                                     ; preds = %cond.false6737, %cond.true6730
  %cond6740 = phi %struct._PerlIO** [ %3720, %cond.true6730 ], [ %call6738, %cond.false6737 ]
  %3721 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %3722 = ptrtoint %struct.regnode* %3721 to i64
  %3723 = load %struct.regnode*, %struct.regnode** %scan, align 8
  %type6741 = getelementptr inbounds %struct.regnode, %struct.regnode* %3723, i32 0, i32 1
  %3724 = load i8, i8* %type6741, align 1
  %conv6742 = zext i8 %3724 to i32
  %call6743 = call i32 (%struct._PerlIO**, i8*, ...) @PerlIO_printf(%struct._PerlIO** %cond6740, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), i64 %3722, i32 %conv6742)
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i64 0, i64 0))
  br label %increment_locinput

increment_locinput:                               ; preds = %cond.end6739, %if.then1814, %if.end128, %if.end115
  %3725 = load i8, i8* %utf8_target, align 1
  %tobool6744 = trunc i8 %3725 to i1
  br i1 %tobool6744, label %if.then6745, label %if.else6756

if.then6745:                                      ; preds = %increment_locinput
  %3726 = load i32, i32* %nextchr, align 4
  %idxprom6746 = sext i32 %3726 to i64
  %arrayidx6747 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom6746
  %3727 = load i8, i8* %arrayidx6747, align 1
  %conv6748 = zext i8 %3727 to i32
  %3728 = load i8*, i8** %locinput, align 8
  %idx.ext6749 = sext i32 %conv6748 to i64
  %add.ptr6750 = getelementptr inbounds i8, i8* %3728, i64 %idx.ext6749
  store i8* %add.ptr6750, i8** %locinput, align 8
  %3729 = load i8*, i8** %locinput, align 8
  %3730 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend6751 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3730, i32 0, i32 2
  %3731 = load i8*, i8** %strend6751, align 8
  %cmp6752 = icmp ugt i8* %3729, %3731
  br i1 %cmp6752, label %if.then6754, label %if.end6755

if.then6754:                                      ; preds = %if.then6745
  br label %no

if.end6755:                                       ; preds = %if.then6745
  br label %if.end6758

if.else6756:                                      ; preds = %increment_locinput
  %3732 = load i8*, i8** %locinput, align 8
  %incdec.ptr6757 = getelementptr inbounds i8, i8* %3732, i32 1
  store i8* %incdec.ptr6757, i8** %locinput, align 8
  br label %if.end6758

if.end6758:                                       ; preds = %if.else6756, %if.end6755
  br label %sw.epilog6759

sw.epilog6759:                                    ; preds = %if.end6758, %if.end6710, %if.end6484, %if.end6356, %if.end6279, %sw.bb4020, %sw.bb3441, %if.end3440, %sw.bb3420, %land.end3417, %sw.bb3397, %land.end3392, %if.end3314, %if.end3280, %if.then3071, %sw.bb2402, %sw.bb2401, %if.end2399, %if.end2353, %if.then2322, %if.end2283, %if.end2221, %if.end1844, %if.end1795, %if.end1749, %if.end1704, %if.end1321, %if.end1257, %if.end970, %if.end938, %if.end897, %if.then248, %if.end120, %if.end110, %if.end105, %if.end89, %if.then65, %if.then60, %if.then49
  %3733 = load %struct.regnode*, %struct.regnode** %next, align 8
  store %struct.regnode* %3733, %struct.regnode** %scan, align 8
  br label %while.cond

push_yes_state:                                   ; preds = %sw.bb6372, %do_ifmatch, %if.end6195, %curlym_do_A, %if.then3938, %if.end3813, %if.then3664, %if.end3462, %if.end3165
  %3734 = load %struct.regmatch_state*, %struct.regmatch_state** %yes_state, align 8
  %3735 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6760 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3735, i32 0, i32 2
  %yes = bitcast %union.anon.19* %u6760 to %struct.anon.20*
  %prev_yes_state = getelementptr inbounds %struct.anon.20, %struct.anon.20* %yes, i32 0, i32 0
  store %struct.regmatch_state* %3734, %struct.regmatch_state** %prev_yes_state, align 8
  %3736 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  store %struct.regmatch_state* %3736, %struct.regmatch_state** %yes_state, align 8
  br label %push_state

push_state:                                       ; preds = %push_yes_state, %if.then6474, %if.then6452, %if.end6368, %if.end6081, %if.end5910, %if.end5741, %if.end4707, %cond.end3953, %if.else3940, %if.end3891, %if.then3693, %if.then3540, %if.then768, %sw.bb67
  %3737 = load i32, i32* %depth, align 4
  %inc6761 = add nsw i32 %3737, 1
  store i32 %inc6761, i32* %depth, align 4
  %3738 = load i8*, i8** %locinput, align 8
  %3739 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %locinput6762 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3739, i32 0, i32 1
  store i8* %3738, i8** %locinput6762, align 8
  %3740 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %add.ptr6763 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3740, i64 1
  store %struct.regmatch_state* %add.ptr6763, %struct.regmatch_state** %newst, align 8
  %3741 = load %struct.regmatch_state*, %struct.regmatch_state** %newst, align 8
  %3742 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %states6764 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %3742, i32 0, i32 0
  %arrayidx6765 = getelementptr inbounds [33 x %struct.regmatch_state], [33 x %struct.regmatch_state]* %states6764, i64 0, i64 32
  %cmp6766 = icmp ugt %struct.regmatch_state* %3741, %arrayidx6765
  br i1 %cmp6766, label %if.then6768, label %if.end6770

if.then6768:                                      ; preds = %push_state
  %call6769 = call %struct.regmatch_state* @S_push_slab()
  store %struct.regmatch_state* %call6769, %struct.regmatch_state** %newst, align 8
  br label %if.end6770

if.end6770:                                       ; preds = %if.then6768, %push_state
  %3743 = load %struct.regmatch_state*, %struct.regmatch_state** %newst, align 8
  store %struct.regmatch_state* %3743, %struct.regmatch_state** @PL_regmatch_state, align 8
  %3744 = load i8*, i8** %pushinput, align 8
  store i8* %3744, i8** %locinput, align 8
  %3745 = load %struct.regmatch_state*, %struct.regmatch_state** %newst, align 8
  store %struct.regmatch_state* %3745, %struct.regmatch_state** %st, align 8
  br label %while.cond

while.end6771:                                    ; preds = %while.cond
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i64 0, i64 0))
  br label %no

yes6772:                                          ; preds = %if.then6840, %sw.bb6386, %sw.bb6208, %if.end6207, %sw.bb3967, %sw.bb3709, %sw.bb3488, %if.end3223
  %3746 = load %struct.regmatch_state*, %struct.regmatch_state** %yes_state, align 8
  %tobool6773 = icmp ne %struct.regmatch_state* %3746, null
  br i1 %tobool6773, label %if.then6774, label %if.end6820

if.then6774:                                      ; preds = %yes6772
  br label %while.cond6775

while.cond6775:                                   ; preds = %while.body6787, %if.then6774
  %3747 = load %struct.regmatch_state*, %struct.regmatch_state** %yes_state, align 8
  %3748 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %states6776 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %3748, i32 0, i32 0
  %arrayidx6777 = getelementptr inbounds [33 x %struct.regmatch_state], [33 x %struct.regmatch_state]* %states6776, i64 0, i64 0
  %cmp6778 = icmp ult %struct.regmatch_state* %3747, %arrayidx6777
  br i1 %cmp6778, label %lor.end6785, label %lor.rhs6780

lor.rhs6780:                                      ; preds = %while.cond6775
  %3749 = load %struct.regmatch_state*, %struct.regmatch_state** %yes_state, align 8
  %3750 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %states6781 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %3750, i32 0, i32 0
  %arrayidx6782 = getelementptr inbounds [33 x %struct.regmatch_state], [33 x %struct.regmatch_state]* %states6781, i64 0, i64 32
  %cmp6783 = icmp ugt %struct.regmatch_state* %3749, %arrayidx6782
  br label %lor.end6785

lor.end6785:                                      ; preds = %lor.rhs6780, %while.cond6775
  %3751 = phi i1 [ true, %while.cond6775 ], [ %cmp6783, %lor.rhs6780 ]
  br i1 %3751, label %while.body6787, label %while.end6801

while.body6787:                                   ; preds = %lor.end6785
  %3752 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %3753 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %states6788 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %3753, i32 0, i32 0
  %arrayidx6789 = getelementptr inbounds [33 x %struct.regmatch_state], [33 x %struct.regmatch_state]* %states6788, i64 0, i64 0
  %sub.ptr.lhs.cast6790 = ptrtoint %struct.regmatch_state* %3752 to i64
  %sub.ptr.rhs.cast6791 = ptrtoint %struct.regmatch_state* %arrayidx6789 to i64
  %sub.ptr.sub6792 = sub i64 %sub.ptr.lhs.cast6790, %sub.ptr.rhs.cast6791
  %sub.ptr.div6793 = sdiv exact i64 %sub.ptr.sub6792, 120
  %add6794 = add nsw i64 %sub.ptr.div6793, 1
  %3754 = load i32, i32* %depth, align 4
  %conv6795 = sext i32 %3754 to i64
  %sub6796 = sub nsw i64 %conv6795, %add6794
  %conv6797 = trunc i64 %sub6796 to i32
  store i32 %conv6797, i32* %depth, align 4
  %3755 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %prev6798 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %3755, i32 0, i32 1
  %3756 = load %struct.regmatch_slab*, %struct.regmatch_slab** %prev6798, align 8
  store %struct.regmatch_slab* %3756, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %3757 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %states6799 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %3757, i32 0, i32 0
  %arrayidx6800 = getelementptr inbounds [33 x %struct.regmatch_state], [33 x %struct.regmatch_state]* %states6799, i64 0, i64 32
  store %struct.regmatch_state* %arrayidx6800, %struct.regmatch_state** %st, align 8
  br label %while.cond6775

while.end6801:                                    ; preds = %lor.end6785
  %3758 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %3759 = load %struct.regmatch_state*, %struct.regmatch_state** %yes_state, align 8
  %sub.ptr.lhs.cast6802 = ptrtoint %struct.regmatch_state* %3758 to i64
  %sub.ptr.rhs.cast6803 = ptrtoint %struct.regmatch_state* %3759 to i64
  %sub.ptr.sub6804 = sub i64 %sub.ptr.lhs.cast6802, %sub.ptr.rhs.cast6803
  %sub.ptr.div6805 = sdiv exact i64 %sub.ptr.sub6804, 120
  %3760 = load i32, i32* %depth, align 4
  %conv6806 = sext i32 %3760 to i64
  %sub6807 = sub nsw i64 %conv6806, %sub.ptr.div6805
  %conv6808 = trunc i64 %sub6807 to i32
  store i32 %conv6808, i32* %depth, align 4
  %3761 = load %struct.regmatch_state*, %struct.regmatch_state** %yes_state, align 8
  store %struct.regmatch_state* %3761, %struct.regmatch_state** %st, align 8
  %3762 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6809 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3762, i32 0, i32 2
  %yes6810 = bitcast %union.anon.19* %u6809 to %struct.anon.20*
  %prev_yes_state6811 = getelementptr inbounds %struct.anon.20, %struct.anon.20* %yes6810, i32 0, i32 0
  %3763 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_yes_state6811, align 8
  store %struct.regmatch_state* %3763, %struct.regmatch_state** %yes_state, align 8
  %3764 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  store %struct.regmatch_state* %3764, %struct.regmatch_state** @PL_regmatch_state, align 8
  %3765 = load i8, i8* %no_final, align 1
  %tobool6812 = trunc i8 %3765 to i1
  br i1 %tobool6812, label %if.then6813, label %if.end6815

if.then6813:                                      ; preds = %while.end6801
  %3766 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %locinput6814 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3766, i32 0, i32 1
  %3767 = load i8*, i8** %locinput6814, align 8
  store i8* %3767, i8** %locinput, align 8
  br label %if.end6815

if.end6815:                                       ; preds = %if.then6813, %while.end6801
  %3768 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state6816 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3768, i32 0, i32 0
  %3769 = load i32, i32* %resume_state6816, align 8
  %3770 = load i8, i8* %no_final, align 1
  %tobool6817 = trunc i8 %3770 to i1
  %conv6818 = zext i1 %tobool6817 to i32
  %add6819 = add nsw i32 %3769, %conv6818
  store i32 %add6819, i32* %state_num, align 4
  br label %reenter_switch

if.end6820:                                       ; preds = %yes6772
  %3771 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %info_aux_eval6821 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3771, i32 0, i32 8
  %3772 = load %struct.regmatch_info_aux_eval*, %struct.regmatch_info_aux_eval** %info_aux_eval6821, align 8
  %tobool6822 = icmp ne %struct.regmatch_info_aux_eval* %3772, null
  br i1 %tobool6822, label %if.then6823, label %if.end6836

if.then6823:                                      ; preds = %if.end6820
  %3773 = load %struct.sv*, %struct.sv** %oreplsv, align 8
  %3774 = load %struct.gv*, %struct.gv** @PL_replgv, align 8
  %sv_u6824 = getelementptr inbounds %struct.gv, %struct.gv* %3774, i32 0, i32 3
  %svu_gp6825 = bitcast %union.anon.4* %sv_u6824 to %struct.gp**
  %3775 = load %struct.gp*, %struct.gp** %svu_gp6825, align 8
  %add.ptr6826 = getelementptr inbounds %struct.gp, %struct.gp* %3775, i64 0
  %gp_sv6827 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr6826, i32 0, i32 0
  %3776 = load %struct.sv*, %struct.sv** %gp_sv6827, align 8
  %cmp6828 = icmp ne %struct.sv* %3773, %3776
  br i1 %cmp6828, label %if.then6830, label %if.end6835

if.then6830:                                      ; preds = %if.then6823
  %3777 = load %struct.sv*, %struct.sv** %oreplsv, align 8
  %3778 = load %struct.gv*, %struct.gv** @PL_replgv, align 8
  %sv_u6831 = getelementptr inbounds %struct.gv, %struct.gv* %3778, i32 0, i32 3
  %svu_gp6832 = bitcast %union.anon.4* %sv_u6831 to %struct.gp**
  %3779 = load %struct.gp*, %struct.gp** %svu_gp6832, align 8
  %add.ptr6833 = getelementptr inbounds %struct.gp, %struct.gp* %3779, i64 0
  %gp_sv6834 = getelementptr inbounds %struct.gp, %struct.gp* %add.ptr6833, i32 0, i32 0
  %3780 = load %struct.sv*, %struct.sv** %gp_sv6834, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %3777, %struct.sv* %3780, i32 1538)
  br label %if.end6835

if.end6835:                                       ; preds = %if.then6830, %if.then6823
  br label %if.end6836

if.end6836:                                       ; preds = %if.end6835, %if.end6820
  store i8 1, i8* %result, align 1
  br label %final_exit

no:                                               ; preds = %while.end6771, %if.then6754, %if.else6709, %if.end6536, %cond.end6447, %sw.bb6371, %if.then6320, %if.then6270, %if.then6135, %if.end5915, %if.then5791, %if.then5646, %if.then5628, %if.then5357, %if.then5213, %if.then5183, %if.then4777, %if.then4764, %if.else4705, %if.then4547, %if.then4266, %if.end3966, %if.end3890, %if.end3787, %if.end3745, %if.then3648, %do.end3504, %if.then2398, %if.then2383, %if.then2372, %if.then2352, %if.then2314, %if.then2295, %if.then2225, %if.then2211, %if.then2208, %if.then2183, %if.then2118, %if.then2035, %if.then1945, %if.then1918, %if.then1877, %if.then1850, %if.then1843, %if.then1809, %if.then1791, %if.then1769, %if.then1754, %if.then1746, %if.then1716, %if.then1709, %if.then1703, %if.then1320, %if.then1256, %if.then969, %if.then961, %if.then953, %if.then937, %if.then902, %if.then894, %if.then870, %if.then856, %if.then846, %if.then828, %if.then814, %if.then804, %if.then530, %if.then127, %if.then119, %if.then114, %if.then109, %if.then104, %if.then96, %if.then88, %if.end66, %if.end61, %if.end50
  br label %no_silent

no_silent:                                        ; preds = %no, %if.then6206, %if.then4018, %if.end3267, %if.then581, %if.else, %if.then143, %sw.bb74
  %3781 = load i8, i8* %no_final, align 1
  %tobool6837 = trunc i8 %3781 to i1
  br i1 %tobool6837, label %if.then6838, label %if.end6842

if.then6838:                                      ; preds = %no_silent
  %3782 = load %struct.regmatch_state*, %struct.regmatch_state** %yes_state, align 8
  %tobool6839 = icmp ne %struct.regmatch_state* %3782, null
  br i1 %tobool6839, label %if.then6840, label %if.else6841

if.then6840:                                      ; preds = %if.then6838
  br label %yes6772

if.else6841:                                      ; preds = %if.then6838
  br label %final_exit

if.end6842:                                       ; preds = %no_silent
  %3783 = load i32, i32* %depth, align 4
  %tobool6843 = icmp ne i32 %3783, 0
  br i1 %tobool6843, label %if.then6844, label %if.end6866

if.then6844:                                      ; preds = %if.end6842
  %3784 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %incdec.ptr6845 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3784, i32 -1
  store %struct.regmatch_state* %incdec.ptr6845, %struct.regmatch_state** %st, align 8
  %3785 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %3786 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %states6846 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %3786, i32 0, i32 0
  %arrayidx6847 = getelementptr inbounds [33 x %struct.regmatch_state], [33 x %struct.regmatch_state]* %states6846, i64 0, i64 0
  %cmp6848 = icmp ult %struct.regmatch_state* %3785, %arrayidx6847
  br i1 %cmp6848, label %if.then6850, label %if.end6854

if.then6850:                                      ; preds = %if.then6844
  %3787 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %prev6851 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %3787, i32 0, i32 1
  %3788 = load %struct.regmatch_slab*, %struct.regmatch_slab** %prev6851, align 8
  store %struct.regmatch_slab* %3788, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %3789 = load %struct.regmatch_slab*, %struct.regmatch_slab** @PL_regmatch_slab, align 8
  %states6852 = getelementptr inbounds %struct.regmatch_slab, %struct.regmatch_slab* %3789, i32 0, i32 0
  %arrayidx6853 = getelementptr inbounds [33 x %struct.regmatch_state], [33 x %struct.regmatch_state]* %states6852, i64 0, i64 32
  store %struct.regmatch_state* %arrayidx6853, %struct.regmatch_state** %st, align 8
  br label %if.end6854

if.end6854:                                       ; preds = %if.then6850, %if.then6844
  %3790 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  store %struct.regmatch_state* %3790, %struct.regmatch_state** @PL_regmatch_state, align 8
  %3791 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %locinput6855 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3791, i32 0, i32 1
  %3792 = load i8*, i8** %locinput6855, align 8
  store i8* %3792, i8** %locinput, align 8
  %3793 = load i32, i32* %depth, align 4
  %dec6856 = add nsw i32 %3793, -1
  store i32 %dec6856, i32* %depth, align 4
  %3794 = load %struct.regmatch_state*, %struct.regmatch_state** %yes_state, align 8
  %3795 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %cmp6857 = icmp eq %struct.regmatch_state* %3794, %3795
  br i1 %cmp6857, label %if.then6859, label %if.end6863

if.then6859:                                      ; preds = %if.end6854
  %3796 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %u6860 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3796, i32 0, i32 2
  %yes6861 = bitcast %union.anon.19* %u6860 to %struct.anon.20*
  %prev_yes_state6862 = getelementptr inbounds %struct.anon.20, %struct.anon.20* %yes6861, i32 0, i32 0
  %3797 = load %struct.regmatch_state*, %struct.regmatch_state** %prev_yes_state6862, align 8
  store %struct.regmatch_state* %3797, %struct.regmatch_state** %yes_state, align 8
  br label %if.end6863

if.end6863:                                       ; preds = %if.then6859, %if.end6854
  %3798 = load %struct.regmatch_state*, %struct.regmatch_state** %st, align 8
  %resume_state6864 = getelementptr inbounds %struct.regmatch_state, %struct.regmatch_state* %3798, i32 0, i32 0
  %3799 = load i32, i32* %resume_state6864, align 8
  %add6865 = add nsw i32 %3799, 1
  store i32 %add6865, i32* %state_num, align 4
  br label %reenter_switch

if.end6866:                                       ; preds = %if.end6842
  store i8 0, i8* %result, align 1
  br label %final_exit

final_exit:                                       ; preds = %if.end6866, %if.else6841, %if.end6836
  %3800 = load %struct.regexp*, %struct.regexp** %rex, align 8
  %intflags6867 = getelementptr inbounds %struct.regexp, %struct.regexp* %3800, i32 0, i32 13
  %3801 = load i32, i32* %intflags6867, align 4
  %and6868 = and i32 %3801, 8
  %tobool6869 = icmp ne i32 %and6868, 0
  br i1 %tobool6869, label %if.then6870, label %if.end6884

if.then6870:                                      ; preds = %final_exit
  %call6871 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i64 0, i64 0), i32 1)
  store %struct.sv* %call6871, %struct.sv** %sv_err, align 8
  %call6873 = call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i32 1)
  store %struct.sv* %call6873, %struct.sv** %sv_mrk6872, align 8
  %3802 = load i8, i8* %result, align 1
  %tobool6874 = trunc i8 %3802 to i1
  br i1 %tobool6874, label %if.then6875, label %if.else6879

if.then6875:                                      ; preds = %if.then6870
  store %struct.sv* @PL_sv_no, %struct.sv** %sv_commit, align 8
  %3803 = load %struct.sv*, %struct.sv** %sv_yes_mark, align 8
  %tobool6876 = icmp ne %struct.sv* %3803, null
  br i1 %tobool6876, label %if.end6878, label %if.then6877

if.then6877:                                      ; preds = %if.then6875
  store %struct.sv* @PL_sv_yes, %struct.sv** %sv_yes_mark, align 8
  br label %if.end6878

if.end6878:                                       ; preds = %if.then6877, %if.then6875
  br label %if.end6883

if.else6879:                                      ; preds = %if.then6870
  %3804 = load %struct.sv*, %struct.sv** %sv_commit, align 8
  %tobool6880 = icmp ne %struct.sv* %3804, null
  br i1 %tobool6880, label %if.end6882, label %if.then6881

if.then6881:                                      ; preds = %if.else6879
  store %struct.sv* @PL_sv_yes, %struct.sv** %sv_commit, align 8
  br label %if.end6882

if.end6882:                                       ; preds = %if.then6881, %if.else6879
  store %struct.sv* @PL_sv_no, %struct.sv** %sv_yes_mark, align 8
  br label %if.end6883

if.end6883:                                       ; preds = %if.end6882, %if.end6878
  %3805 = load %struct.sv*, %struct.sv** %sv_err, align 8
  %3806 = load %struct.sv*, %struct.sv** %sv_commit, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %3805, %struct.sv* %3806, i32 1538)
  %3807 = load %struct.sv*, %struct.sv** %sv_mrk6872, align 8
  %3808 = load %struct.sv*, %struct.sv** %sv_yes_mark, align 8
  call void @Perl_sv_setsv_flags(%struct.sv* %3807, %struct.sv* %3808, i32 1538)
  br label %if.end6884

if.end6884:                                       ; preds = %if.end6883, %final_exit
  %3809 = load %struct.cv*, %struct.cv** %last_pushed_cv, align 8
  %tobool6885 = icmp ne %struct.cv* %3809, null
  br i1 %tobool6885, label %if.then6886, label %if.end6966

if.then6886:                                      ; preds = %if.end6884
  %3810 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %3810, %struct.sv*** %sp6887, align 8
  br label %do.body6888

do.body6888:                                      ; preds = %if.then6886
  %3811 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack6889 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3811, i32 0, i32 1
  %3812 = load %struct.context*, %struct.context** %si_cxstack6889, align 8
  %3813 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix6890 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3813, i32 0, i32 4
  %3814 = load i32, i32* %si_cxix6890, align 8
  %idxprom6891 = sext i32 %3814 to i64
  %arrayidx6892 = getelementptr inbounds %struct.context, %struct.context* %3812, i64 %idxprom6891
  store %struct.context* %arrayidx6892, %struct.context** %cx, align 8
  %3815 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u6893 = getelementptr inbounds %struct.context, %struct.context* %3815, i32 0, i32 0
  %cx_blk6894 = bitcast %union.anon.37* %cx_u6893 to %struct.block*
  %blk_u6895 = getelementptr inbounds %struct.block, %struct.block* %cx_blk6894, i32 0, i32 8
  %blku_sub6896 = bitcast %union.anon.38* %blk_u6895 to %struct.block_sub*
  %olddepth6897 = getelementptr inbounds %struct.block_sub, %struct.block_sub* %blku_sub6896, i32 0, i32 4
  %3816 = load i32, i32* %olddepth6897, align 8
  %3817 = load %struct.cv*, %struct.cv** %multicall_cv, align 8
  %call6898 = call i32* @S_CvDEPTHp(%struct.cv* %3817)
  store i32 %3816, i32* %call6898, align 4
  %tobool6899 = icmp ne i32 %3816, 0
  br i1 %tobool6899, label %if.end6903, label %if.then6900

if.then6900:                                      ; preds = %do.body6888
  br label %do.body6901

do.body6901:                                      ; preds = %if.then6900
  %3818 = load %struct.cv*, %struct.cv** %multicall_cv, align 8
  %3819 = bitcast %struct.cv* %3818 to i8*
  %3820 = bitcast i8* %3819 to %struct.sv*
  call void @S_SvREFCNT_dec(%struct.sv* %3820)
  br label %do.end6902

do.end6902:                                       ; preds = %do.body6901
  br label %if.end6903

if.end6903:                                       ; preds = %do.end6902, %do.body6888
  %3821 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxstack6904 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3821, i32 0, i32 1
  %3822 = load %struct.context*, %struct.context** %si_cxstack6904, align 8
  %3823 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_cxix6905 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3823, i32 0, i32 4
  %3824 = load i32, i32* %si_cxix6905, align 8
  %dec6906 = add nsw i32 %3824, -1
  store i32 %dec6906, i32* %si_cxix6905, align 8
  %idxprom6907 = sext i32 %3824 to i64
  %arrayidx6908 = getelementptr inbounds %struct.context, %struct.context* %3822, i64 %idxprom6907
  store %struct.context* %arrayidx6908, %struct.context** %cx, align 8
  %3825 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %3826 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u6909 = getelementptr inbounds %struct.context, %struct.context* %3826, i32 0, i32 0
  %cx_blk6910 = bitcast %union.anon.37* %cx_u6909 to %struct.block*
  %blku_oldsp6911 = getelementptr inbounds %struct.block, %struct.block* %cx_blk6910, i32 0, i32 3
  %3827 = load i32, i32* %blku_oldsp6911, align 4
  %idx.ext6912 = sext i32 %3827 to i64
  %add.ptr6913 = getelementptr inbounds %struct.sv*, %struct.sv** %3825, i64 %idx.ext6912
  store %struct.sv** %add.ptr6913, %struct.sv*** %newsp, align 8
  %3828 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u6914 = getelementptr inbounds %struct.context, %struct.context* %3828, i32 0, i32 0
  %cx_blk6915 = bitcast %union.anon.37* %cx_u6914 to %struct.block*
  %blku_oldcop6916 = getelementptr inbounds %struct.block, %struct.block* %cx_blk6915, i32 0, i32 4
  %3829 = load %struct.cop*, %struct.cop** %blku_oldcop6916, align 8
  store %struct.cop* %3829, %struct.cop** @PL_curcop, align 8
  %3830 = load i32*, i32** @PL_markstack, align 8
  %3831 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u6917 = getelementptr inbounds %struct.context, %struct.context* %3831, i32 0, i32 0
  %cx_blk6918 = bitcast %union.anon.37* %cx_u6917 to %struct.block*
  %blku_oldmarksp6919 = getelementptr inbounds %struct.block, %struct.block* %cx_blk6918, i32 0, i32 5
  %3832 = load i32, i32* %blku_oldmarksp6919, align 8
  %idx.ext6920 = sext i32 %3832 to i64
  %add.ptr6921 = getelementptr inbounds i32, i32* %3830, i64 %idx.ext6920
  store i32* %add.ptr6921, i32** @PL_markstack_ptr, align 8
  %3833 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u6922 = getelementptr inbounds %struct.context, %struct.context* %3833, i32 0, i32 0
  %cx_blk6923 = bitcast %union.anon.37* %cx_u6922 to %struct.block*
  %blku_oldscopesp6924 = getelementptr inbounds %struct.block, %struct.block* %cx_blk6923, i32 0, i32 6
  %3834 = load i32, i32* %blku_oldscopesp6924, align 4
  store i32 %3834, i32* @PL_scopestack_ix, align 4
  %3835 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u6925 = getelementptr inbounds %struct.context, %struct.context* %3835, i32 0, i32 0
  %cx_blk6926 = bitcast %union.anon.37* %cx_u6925 to %struct.block*
  %blku_oldpm6927 = getelementptr inbounds %struct.block, %struct.block* %cx_blk6926, i32 0, i32 7
  %3836 = load %struct.pmop*, %struct.pmop** %blku_oldpm6927, align 8
  store %struct.pmop* %3836, %struct.pmop** @PL_curpm, align 8
  %3837 = load %struct.context*, %struct.context** %cx, align 8
  %cx_u6928 = getelementptr inbounds %struct.context, %struct.context* %3837, i32 0, i32 0
  %cx_blk6929 = bitcast %union.anon.37* %cx_u6928 to %struct.block*
  %blku_gimme6930 = getelementptr inbounds %struct.block, %struct.block* %cx_blk6929, i32 0, i32 1
  %3838 = load i8, i8* %blku_gimme6930, align 1
  %conv6931 = zext i8 %3838 to i32
  store i32 %conv6931, i32* %gimme, align 4
  br label %do.body6932

do.body6932:                                      ; preds = %if.end6903
  %3839 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %3839, %struct.sv*** %sp6933, align 8
  %3840 = load %struct.stackinfo*, %struct.stackinfo** @PL_curstackinfo, align 8
  %si_prev6935 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3840, i32 0, i32 2
  %3841 = load %struct.stackinfo*, %struct.stackinfo** %si_prev6935, align 8
  store %struct.stackinfo* %3841, %struct.stackinfo** %prev6934, align 8
  %3842 = load %struct.stackinfo*, %struct.stackinfo** %prev6934, align 8
  %tobool6936 = icmp ne %struct.stackinfo* %3842, null
  br i1 %tobool6936, label %if.end6938, label %if.then6937

if.then6937:                                      ; preds = %do.body6932
  call void @Perl_croak_popstack()
  br label %if.end6938

if.end6938:                                       ; preds = %if.then6937, %do.body6932
  br label %do.body6939

do.body6939:                                      ; preds = %if.end6938
  %3843 = load %struct.sv**, %struct.sv*** %sp6933, align 8
  %3844 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %sub.ptr.lhs.cast6940 = ptrtoint %struct.sv** %3843 to i64
  %sub.ptr.rhs.cast6941 = ptrtoint %struct.sv** %3844 to i64
  %sub.ptr.sub6942 = sub i64 %sub.ptr.lhs.cast6940, %sub.ptr.rhs.cast6941
  %sub.ptr.div6943 = sdiv exact i64 %sub.ptr.sub6942, 8
  %3845 = load %struct.av*, %struct.av** @PL_curstack, align 8
  %sv_any6944 = getelementptr inbounds %struct.av, %struct.av* %3845, i32 0, i32 0
  %3846 = load %struct.xpvav*, %struct.xpvav** %sv_any6944, align 8
  %xav_fill6945 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %3846, i32 0, i32 2
  store i64 %sub.ptr.div6943, i64* %xav_fill6945, align 8
  %3847 = load %struct.stackinfo*, %struct.stackinfo** %prev6934, align 8
  %si_stack6946 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3847, i32 0, i32 0
  %3848 = load %struct.av*, %struct.av** %si_stack6946, align 8
  %sv_u6947 = getelementptr inbounds %struct.av, %struct.av* %3848, i32 0, i32 3
  %svu_array6948 = bitcast %union.anon.3* %sv_u6947 to %struct.sv***
  %3849 = load %struct.sv**, %struct.sv*** %svu_array6948, align 8
  store %struct.sv** %3849, %struct.sv*** @PL_stack_base, align 8
  %3850 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %3851 = load %struct.stackinfo*, %struct.stackinfo** %prev6934, align 8
  %si_stack6949 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3851, i32 0, i32 0
  %3852 = load %struct.av*, %struct.av** %si_stack6949, align 8
  %sv_any6950 = getelementptr inbounds %struct.av, %struct.av* %3852, i32 0, i32 0
  %3853 = load %struct.xpvav*, %struct.xpvav** %sv_any6950, align 8
  %xav_max6951 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %3853, i32 0, i32 3
  %3854 = load i64, i64* %xav_max6951, align 8
  %add.ptr6952 = getelementptr inbounds %struct.sv*, %struct.sv** %3850, i64 %3854
  store %struct.sv** %add.ptr6952, %struct.sv*** @PL_stack_max, align 8
  %3855 = load %struct.sv**, %struct.sv*** @PL_stack_base, align 8
  %3856 = load %struct.stackinfo*, %struct.stackinfo** %prev6934, align 8
  %si_stack6953 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3856, i32 0, i32 0
  %3857 = load %struct.av*, %struct.av** %si_stack6953, align 8
  %sv_any6954 = getelementptr inbounds %struct.av, %struct.av* %3857, i32 0, i32 0
  %3858 = load %struct.xpvav*, %struct.xpvav** %sv_any6954, align 8
  %xav_fill6955 = getelementptr inbounds %struct.xpvav, %struct.xpvav* %3858, i32 0, i32 2
  %3859 = load i64, i64* %xav_fill6955, align 8
  %add.ptr6956 = getelementptr inbounds %struct.sv*, %struct.sv** %3855, i64 %3859
  store %struct.sv** %add.ptr6956, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %add.ptr6956, %struct.sv*** %sp6933, align 8
  %3860 = load %struct.stackinfo*, %struct.stackinfo** %prev6934, align 8
  %si_stack6957 = getelementptr inbounds %struct.stackinfo, %struct.stackinfo* %3860, i32 0, i32 0
  %3861 = load %struct.av*, %struct.av** %si_stack6957, align 8
  store %struct.av* %3861, %struct.av** @PL_curstack, align 8
  br label %do.end6958

do.end6958:                                       ; preds = %do.body6939
  %3862 = load %struct.stackinfo*, %struct.stackinfo** %prev6934, align 8
  store %struct.stackinfo* %3862, %struct.stackinfo** @PL_curstackinfo, align 8
  br label %do.end6959

do.end6959:                                       ; preds = %do.end6958
  br label %do.body6960

do.body6960:                                      ; preds = %do.end6959
  %3863 = load i8, i8* %multicall_oldcatch, align 1
  %tobool6961 = trunc i8 %3863 to i1
  %3864 = load %struct.jmpenv*, %struct.jmpenv** @PL_top_env, align 8
  %je_mustcatch6962 = getelementptr inbounds %struct.jmpenv, %struct.jmpenv* %3864, i32 0, i32 3
  %frombool6963 = zext i1 %tobool6961 to i8
  store i8 %frombool6963, i8* %je_mustcatch6962, align 4
  br label %do.end6964

do.end6964:                                       ; preds = %do.body6960
  call void @Perl_pop_scope()
  %3865 = load %struct.sv**, %struct.sv*** @PL_stack_sp, align 8
  store %struct.sv** %3865, %struct.sv*** %sp6887, align 8
  br label %do.end6965

do.end6965:                                       ; preds = %do.end6964
  %3866 = load %struct.sv**, %struct.sv*** %sp6887, align 8
  br label %if.end6966

if.end6966:                                       ; preds = %do.end6965, %if.end6884
  %3867 = load i8, i8* %result, align 1
  %tobool6967 = trunc i8 %3867 to i1
  br i1 %tobool6967, label %cond.true6969, label %cond.false6974

cond.true6969:                                    ; preds = %if.end6966
  %3868 = load i8*, i8** %locinput, align 8
  %3869 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strbeg6970 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %3869, i32 0, i32 1
  %3870 = load i8*, i8** %strbeg6970, align 8
  %sub.ptr.lhs.cast6971 = ptrtoint i8* %3868 to i64
  %sub.ptr.rhs.cast6972 = ptrtoint i8* %3870 to i64
  %sub.ptr.sub6973 = sub i64 %sub.ptr.lhs.cast6971, %sub.ptr.rhs.cast6972
  br label %cond.end6975

cond.false6974:                                   ; preds = %if.end6966
  br label %cond.end6975

cond.end6975:                                     ; preds = %cond.false6974, %cond.true6969
  %cond6976 = phi i64 [ %sub.ptr.sub6973, %cond.true6969 ], [ -1, %cond.false6974 ]
  ret i64 %cond6976
}

declare dso_local %struct.gv* @Perl_gv_add_by_type(%struct.gv*, i32) #2

declare dso_local i64 @Perl__to_uni_fold_flags(i64, i8*, i64*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_reg_check_named_buff_matched(%struct.regexp* %rex, %struct.regnode* %scan) #0 {
entry:
  %retval = alloca i32, align 4
  %rex.addr = alloca %struct.regexp*, align 8
  %scan.addr = alloca %struct.regnode*, align 8
  %n = alloca i32, align 4
  %rexi = alloca %struct.regexp_internal*, align 8
  %sv_dat = alloca %struct.sv*, align 8
  %nums = alloca i32*, align 8
  store %struct.regexp* %rex, %struct.regexp** %rex.addr, align 8
  store %struct.regnode* %scan, %struct.regnode** %scan.addr, align 8
  %0 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %pprivate = getelementptr inbounds %struct.regexp, %struct.regexp* %0, i32 0, i32 14
  %1 = load i8*, i8** %pprivate, align 8
  %2 = bitcast i8* %1 to %struct.regexp_internal*
  store %struct.regexp_internal* %2, %struct.regexp_internal** %rexi, align 8
  %3 = load %struct.regexp_internal*, %struct.regexp_internal** %rexi, align 8
  %data = getelementptr inbounds %struct.regexp_internal, %struct.regexp_internal* %3, i32 0, i32 3
  %4 = load %struct.reg_data*, %struct.reg_data** %data, align 8
  %data1 = getelementptr inbounds %struct.reg_data, %struct.reg_data* %4, i32 0, i32 2
  %5 = load %struct.regnode*, %struct.regnode** %scan.addr, align 8
  %6 = bitcast %struct.regnode* %5 to %struct.regnode_1*
  %arg1 = getelementptr inbounds %struct.regnode_1, %struct.regnode_1* %6, i32 0, i32 3
  %7 = load i32, i32* %arg1, align 4
  %idxprom = zext i32 %7 to i64
  %arrayidx = getelementptr inbounds [1 x i8*], [1 x i8*]* %data1, i64 0, i64 %idxprom
  %8 = load i8*, i8** %arrayidx, align 8
  %9 = bitcast i8* %8 to %struct.sv*
  store %struct.sv* %9, %struct.sv** %sv_dat, align 8
  %10 = load %struct.sv*, %struct.sv** %sv_dat, align 8
  %sv_u = getelementptr inbounds %struct.sv, %struct.sv* %10, i32 0, i32 3
  %svu_pv = bitcast %union.anon* %sv_u to i8**
  %11 = load i8*, i8** %svu_pv, align 8
  %12 = bitcast i8* %11 to i32*
  store i32* %12, i32** %nums, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %13 = load i32, i32* %n, align 4
  %conv = sext i32 %13 to i64
  %14 = load %struct.sv*, %struct.sv** %sv_dat, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %14, i32 0, i32 0
  %15 = load i8*, i8** %sv_any, align 8
  %16 = bitcast i8* %15 to %struct.xpviv*
  %xiv_u = getelementptr inbounds %struct.xpviv, %struct.xpviv* %16, i32 0, i32 4
  %xivu_iv = bitcast %union._xivu* %xiv_u to i64*
  %17 = load i64, i64* %xivu_iv, align 8
  %cmp = icmp slt i64 %conv, %17
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %18 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %lastparen = getelementptr inbounds %struct.regexp, %struct.regexp* %18, i32 0, i32 15
  %19 = load i32, i32* %lastparen, align 8
  %20 = load i32*, i32** %nums, align 8
  %21 = load i32, i32* %n, align 4
  %idxprom3 = sext i32 %21 to i64
  %arrayidx4 = getelementptr inbounds i32, i32* %20, i64 %idxprom3
  %22 = load i32, i32* %arrayidx4, align 4
  %cmp5 = icmp sge i32 %19, %22
  br i1 %cmp5, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %23 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %offs = getelementptr inbounds %struct.regexp, %struct.regexp* %23, i32 0, i32 17
  %24 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs, align 8
  %25 = load i32*, i32** %nums, align 8
  %26 = load i32, i32* %n, align 4
  %idxprom7 = sext i32 %26 to i64
  %arrayidx8 = getelementptr inbounds i32, i32* %25, i64 %idxprom7
  %27 = load i32, i32* %arrayidx8, align 4
  %idxprom9 = sext i32 %27 to i64
  %arrayidx10 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %24, i64 %idxprom9
  %end = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx10, i32 0, i32 1
  %28 = load i64, i64* %end, align 8
  %cmp11 = icmp ne i64 %28, -1
  br i1 %cmp11, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %29 = load i32*, i32** %nums, align 8
  %30 = load i32, i32* %n, align 4
  %idxprom13 = sext i32 %30 to i64
  %arrayidx14 = getelementptr inbounds i32, i32* %29, i64 %idxprom13
  %31 = load i32, i32* %arrayidx14, align 4
  store i32 %31, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %32 = load i32, i32* %n, align 4
  %inc = add nsw i32 %32, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %33 = load i32, i32* %retval, align 4
  ret i32 %33
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_regcppush(%struct.regexp* %rex, i32 %parenfloor, i32 %maxopenparen) #0 {
entry:
  %rex.addr = alloca %struct.regexp*, align 8
  %parenfloor.addr = alloca i32, align 4
  %maxopenparen.addr = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %paren_elems_to_push = alloca i32, align 4
  %total_elems = alloca i64, align 8
  %elems_shifted = alloca i64, align 8
  %p = alloca i32, align 4
  store %struct.regexp* %rex, %struct.regexp** %rex.addr, align 8
  store i32 %parenfloor, i32* %parenfloor.addr, align 4
  store i32 %maxopenparen, i32* %maxopenparen.addr, align 4
  %0 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %0, i32* %retval1, align 4
  %1 = load i32, i32* %maxopenparen.addr, align 4
  %2 = load i32, i32* %parenfloor.addr, align 4
  %sub = sub i32 %1, %2
  %mul = mul i32 %sub, 3
  store i32 %mul, i32* %paren_elems_to_push, align 4
  %3 = load i32, i32* %paren_elems_to_push, align 4
  %add = add nsw i32 %3, 3
  %conv = sext i32 %add to i64
  store i64 %conv, i64* %total_elems, align 8
  %4 = load i64, i64* %total_elems, align 8
  %shl = shl i64 %4, 6
  store i64 %shl, i64* %elems_shifted, align 8
  %5 = load i32, i32* %paren_elems_to_push, align 4
  %cmp = icmp slt i32 %5, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %paren_elems_to_push, align 4
  %7 = load i32, i32* %maxopenparen.addr, align 4
  %8 = load i32, i32* %parenfloor.addr, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.19, i64 0, i64 0), i32 %6, i32 %7, i32 %8, i32 3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load i64, i64* %elems_shifted, align 8
  %shr = lshr i64 %9, 6
  %10 = load i64, i64* %total_elems, align 8
  %cmp3 = icmp ne i64 %shr, %10
  br i1 %cmp3, label %if.then5, label %if.end8

if.then5:                                         ; preds = %if.end
  %11 = load i64, i64* %total_elems, align 8
  %12 = load i32, i32* %maxopenparen.addr, align 4
  %conv6 = zext i32 %12 to i64
  %13 = load i32, i32* %parenfloor.addr, align 4
  %conv7 = sext i32 %13 to i64
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.20, i64 0, i64 0), i64 %11, i64 %conv6, i64 %conv7)
  br label %if.end8

if.end8:                                          ; preds = %if.then5, %if.end
  %14 = load i32, i32* @PL_savestack_ix, align 4
  %15 = load i64, i64* %total_elems, align 8
  %add9 = add i64 %15, 1
  %conv10 = trunc i64 %add9 to i32
  %add11 = add nsw i32 %14, %conv10
  %add12 = add nsw i32 %add11, 4
  %16 = load i32, i32* @PL_savestack_max, align 4
  %cmp13 = icmp sgt i32 %add12, %16
  br i1 %cmp13, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end8
  br i1 true, label %if.then15, label %if.end19

cond.false:                                       ; preds = %if.end8
  br i1 false, label %if.then15, label %if.end19

if.then15:                                        ; preds = %cond.false, %cond.true
  %17 = load i64, i64* %total_elems, align 8
  %add16 = add i64 %17, 1
  %add17 = add i64 %add16, 4
  %conv18 = trunc i64 %add17 to i32
  call void @Perl_savestack_grow_cnt(i32 %conv18)
  br label %if.end19

if.end19:                                         ; preds = %if.then15, %cond.false, %cond.true
  %18 = load i32, i32* %parenfloor.addr, align 4
  %add20 = add nsw i32 %18, 1
  store i32 %add20, i32* %p, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end19
  %19 = load i32, i32* %p, align 4
  %20 = load i32, i32* %maxopenparen.addr, align 4
  %cmp21 = icmp sle i32 %19, %20
  br i1 %cmp21, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %21 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %offs = getelementptr inbounds %struct.regexp, %struct.regexp* %21, i32 0, i32 17
  %22 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs, align 8
  %23 = load i32, i32* %p, align 4
  %idxprom = sext i32 %23 to i64
  %arrayidx = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %22, i64 %idxprom
  %end = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx, i32 0, i32 1
  %24 = load i64, i64* %end, align 8
  %25 = load %union.any*, %union.any** @PL_savestack, align 8
  %26 = load i32, i32* @PL_savestack_ix, align 4
  %inc = add nsw i32 %26, 1
  store i32 %inc, i32* @PL_savestack_ix, align 4
  %idxprom23 = sext i32 %26 to i64
  %arrayidx24 = getelementptr inbounds %union.any, %union.any* %25, i64 %idxprom23
  %any_iv = bitcast %union.any* %arrayidx24 to i64*
  store i64 %24, i64* %any_iv, align 8
  %27 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %offs25 = getelementptr inbounds %struct.regexp, %struct.regexp* %27, i32 0, i32 17
  %28 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs25, align 8
  %29 = load i32, i32* %p, align 4
  %idxprom26 = sext i32 %29 to i64
  %arrayidx27 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %28, i64 %idxprom26
  %start = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx27, i32 0, i32 0
  %30 = load i64, i64* %start, align 8
  %31 = load %union.any*, %union.any** @PL_savestack, align 8
  %32 = load i32, i32* @PL_savestack_ix, align 4
  %inc28 = add nsw i32 %32, 1
  store i32 %inc28, i32* @PL_savestack_ix, align 4
  %idxprom29 = sext i32 %32 to i64
  %arrayidx30 = getelementptr inbounds %union.any, %union.any* %31, i64 %idxprom29
  %any_iv31 = bitcast %union.any* %arrayidx30 to i64*
  store i64 %30, i64* %any_iv31, align 8
  %33 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %offs32 = getelementptr inbounds %struct.regexp, %struct.regexp* %33, i32 0, i32 17
  %34 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs32, align 8
  %35 = load i32, i32* %p, align 4
  %idxprom33 = sext i32 %35 to i64
  %arrayidx34 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %34, i64 %idxprom33
  %start_tmp = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx34, i32 0, i32 2
  %36 = load i64, i64* %start_tmp, align 8
  %conv35 = trunc i64 %36 to i32
  %37 = load %union.any*, %union.any** @PL_savestack, align 8
  %38 = load i32, i32* @PL_savestack_ix, align 4
  %inc36 = add nsw i32 %38, 1
  store i32 %inc36, i32* @PL_savestack_ix, align 4
  %idxprom37 = sext i32 %38 to i64
  %arrayidx38 = getelementptr inbounds %union.any, %union.any* %37, i64 %idxprom37
  %any_i32 = bitcast %union.any* %arrayidx38 to i32*
  store i32 %conv35, i32* %any_i32, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %39 = load i32, i32* %p, align 4
  %inc39 = add nsw i32 %39, 1
  store i32 %inc39, i32* %p, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %40 = load i32, i32* %maxopenparen.addr, align 4
  %41 = load %union.any*, %union.any** @PL_savestack, align 8
  %42 = load i32, i32* @PL_savestack_ix, align 4
  %inc40 = add nsw i32 %42, 1
  store i32 %inc40, i32* @PL_savestack_ix, align 4
  %idxprom41 = sext i32 %42 to i64
  %arrayidx42 = getelementptr inbounds %union.any, %union.any* %41, i64 %idxprom41
  %any_i3243 = bitcast %union.any* %arrayidx42 to i32*
  store i32 %40, i32* %any_i3243, align 8
  %43 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %lastparen = getelementptr inbounds %struct.regexp, %struct.regexp* %43, i32 0, i32 15
  %44 = load i32, i32* %lastparen, align 8
  %45 = load %union.any*, %union.any** @PL_savestack, align 8
  %46 = load i32, i32* @PL_savestack_ix, align 4
  %inc44 = add nsw i32 %46, 1
  store i32 %inc44, i32* @PL_savestack_ix, align 4
  %idxprom45 = sext i32 %46 to i64
  %arrayidx46 = getelementptr inbounds %union.any, %union.any* %45, i64 %idxprom45
  %any_i3247 = bitcast %union.any* %arrayidx46 to i32*
  store i32 %44, i32* %any_i3247, align 8
  %47 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %lastcloseparen = getelementptr inbounds %struct.regexp, %struct.regexp* %47, i32 0, i32 16
  %48 = load i32, i32* %lastcloseparen, align 4
  %49 = load %union.any*, %union.any** @PL_savestack, align 8
  %50 = load i32, i32* @PL_savestack_ix, align 4
  %inc48 = add nsw i32 %50, 1
  store i32 %inc48, i32* @PL_savestack_ix, align 4
  %idxprom49 = sext i32 %50 to i64
  %arrayidx50 = getelementptr inbounds %union.any, %union.any* %49, i64 %idxprom49
  %any_i3251 = bitcast %union.any* %arrayidx50 to i32*
  store i32 %48, i32* %any_i3251, align 8
  %51 = load i64, i64* %elems_shifted, align 8
  %or = or i64 3, %51
  %52 = load %union.any*, %union.any** @PL_savestack, align 8
  %53 = load i32, i32* @PL_savestack_ix, align 4
  %inc52 = add nsw i32 %53, 1
  store i32 %inc52, i32* @PL_savestack_ix, align 4
  %idxprom53 = sext i32 %53 to i64
  %arrayidx54 = getelementptr inbounds %union.any, %union.any* %52, i64 %idxprom53
  %any_uv = bitcast %union.any* %arrayidx54 to i64*
  store i64 %or, i64* %any_uv, align 8
  %54 = load i32, i32* %retval1, align 4
  ret i32 %54
}

declare dso_local %struct.cv* @Perl_find_runcv(i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32* @S_CvDEPTHp(%struct.cv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.cv*, align 8
  store %struct.cv* %sv, %struct.cv** %sv.addr, align 8
  %0 = load %struct.cv*, %struct.cv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.cv, %struct.cv* %0, i32 0, i32 0
  %1 = load %struct.xpvcv*, %struct.xpvcv** %sv_any, align 8
  %xcv_depth = getelementptr inbounds %struct.xpvcv, %struct.xpvcv* %1, i32 0, i32 13
  ret i32* %xcv_depth
}

declare dso_local i32 @Perl_was_lvalue_sub() #2

declare dso_local void @Perl_pad_push(%struct.padlist*, i32) #2

declare dso_local void @Perl_save_vptr(i8*) #2

declare dso_local %struct.stackinfo* @Perl_new_stackinfo(i32, i32) #2

declare dso_local i32 @Perl_cxinc() #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_sv_only_taint_gmagic(%struct.sv* %sv) #0 {
entry:
  %retval = alloca i1, align 1
  %sv.addr = alloca %struct.sv*, align 8
  %mg = alloca %struct.magic*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %0, i32 0, i32 0
  %1 = load i8*, i8** %sv_any, align 8
  %2 = bitcast i8* %1 to %struct.xpvmg*
  %xmg_u = getelementptr inbounds %struct.xpvmg, %struct.xpvmg* %2, i32 0, i32 1
  %xmg_magic = bitcast %union._xmgu* %xmg_u to %struct.magic**
  %3 = load %struct.magic*, %struct.magic** %xmg_magic, align 8
  store %struct.magic* %3, %struct.magic** %mg, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %4 = load %struct.magic*, %struct.magic** %mg, align 8
  %tobool = icmp ne %struct.magic* %4, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %5 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_type = getelementptr inbounds %struct.magic, %struct.magic* %5, i32 0, i32 3
  %6 = load i8, i8* %mg_type, align 2
  %conv = sext i8 %6 to i32
  %cmp = icmp ne i32 %conv, 116
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %while.body
  %7 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_flags = getelementptr inbounds %struct.magic, %struct.magic* %7, i32 0, i32 4
  %8 = load i8, i8* %mg_flags, align 1
  %conv2 = zext i8 %8 to i32
  %and = and i32 %conv2, 4
  %tobool3 = icmp ne i32 %and, 0
  br i1 %tobool3, label %if.end, label %land.lhs.true4

land.lhs.true4:                                   ; preds = %land.lhs.true
  %9 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_virtual = getelementptr inbounds %struct.magic, %struct.magic* %9, i32 0, i32 1
  %10 = load %struct.mgvtbl*, %struct.mgvtbl** %mg_virtual, align 8
  %svt_get = getelementptr inbounds %struct.mgvtbl, %struct.mgvtbl* %10, i32 0, i32 0
  %11 = load i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)** %svt_get, align 8
  %tobool5 = icmp ne i32 (%struct.sv*, %struct.magic*)* %11, null
  br i1 %tobool5, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true4
  store i1 false, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %land.lhs.true4, %land.lhs.true, %while.body
  %12 = load %struct.magic*, %struct.magic** %mg, align 8
  %mg_moremagic = getelementptr inbounds %struct.magic, %struct.magic* %12, i32 0, i32 0
  %13 = load %struct.magic*, %struct.magic** %mg_moremagic, align 8
  store %struct.magic* %13, %struct.magic** %mg, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  store i1 true, i1* %retval, align 1
  br label %return

return:                                           ; preds = %while.end, %if.then
  %14 = load i1, i1* %retval, align 1
  ret i1 %14
}

declare dso_local %struct.sv* @Perl_get_sv(i8*, i32) #2

declare dso_local %struct.sv* @Perl_save_scalar(%struct.gv*) #2

declare dso_local zeroext i1 @Perl_sv_2bool_flags(%struct.sv*, i32) #2

declare dso_local %struct.sv* @Perl_sv_mortalcopy_flags(%struct.sv*, i32) #2

declare dso_local %struct.magic* @Perl_mg_find(%struct.sv*, i32) #2

declare dso_local i8* @Perl_sv_pvn_force_flags(%struct.sv*, i64*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @S_regcp_restore(%struct.regexp* %rex, i32 %ix, i32* %maxopenparen_p) #0 {
entry:
  %rex.addr = alloca %struct.regexp*, align 8
  %ix.addr = alloca i32, align 4
  %maxopenparen_p.addr = alloca i32*, align 8
  %tmpix = alloca i32, align 4
  store %struct.regexp* %rex, %struct.regexp** %rex.addr, align 8
  store i32 %ix, i32* %ix.addr, align 4
  store i32* %maxopenparen_p, i32** %maxopenparen_p.addr, align 8
  %0 = load i32, i32* @PL_savestack_ix, align 4
  store i32 %0, i32* %tmpix, align 4
  %1 = load i32, i32* %ix.addr, align 4
  store i32 %1, i32* @PL_savestack_ix, align 4
  %2 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %3 = load i32*, i32** %maxopenparen_p.addr, align 8
  call void @S_regcppop(%struct.regexp* %2, i32* %3)
  %4 = load i32, i32* %tmpix, align 4
  store i32 %4, i32* @PL_savestack_ix, align 4
  ret void
}

declare dso_local %struct.p5rx* @Perl_reg_temp_copy(%struct.p5rx*, %struct.p5rx*) #2

declare dso_local %struct.sv* @Perl_newSVpvn_flags(i8*, i64, i32) #2

declare dso_local void @Perl_sv_magic(%struct.sv*, %struct.sv*, i32, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.sv* @S_SvREFCNT_inc(%struct.sv* %sv) #0 {
entry:
  %sv.addr = alloca %struct.sv*, align 8
  store %struct.sv* %sv, %struct.sv** %sv.addr, align 8
  %0 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %cmp = icmp ne %struct.sv* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br i1 true, label %if.then, label %if.end

cond.false:                                       ; preds = %entry
  br i1 false, label %if.then, label %if.end

if.then:                                          ; preds = %cond.false, %cond.true
  %1 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  %sv_refcnt = getelementptr inbounds %struct.sv, %struct.sv* %1, i32 0, i32 1
  %2 = load i32, i32* %sv_refcnt, align 8
  %inc = add i32 %2, 1
  store i32 %inc, i32* %sv_refcnt, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.false, %cond.true
  %3 = load %struct.sv*, %struct.sv** %sv.addr, align 8
  ret %struct.sv* %3
}

; Function Attrs: noinline nounwind uwtable
define internal void @S_regcppop(%struct.regexp* %rex, i32* %maxopenparen_p) #0 {
entry:
  %rex.addr = alloca %struct.regexp*, align 8
  %maxopenparen_p.addr = alloca i32*, align 8
  %i = alloca i64, align 8
  %paren = alloca i32, align 4
  %tmps = alloca i64, align 8
  store %struct.regexp* %rex, %struct.regexp** %rex.addr, align 8
  store i32* %maxopenparen_p, i32** %maxopenparen_p.addr, align 8
  %0 = load %union.any*, %union.any** @PL_savestack, align 8
  %1 = load i32, i32* @PL_savestack_ix, align 4
  %dec = add nsw i32 %1, -1
  store i32 %dec, i32* @PL_savestack_ix, align 4
  %idxprom = sext i32 %dec to i64
  %arrayidx = getelementptr inbounds %union.any, %union.any* %0, i64 %idxprom
  %any_uv = bitcast %union.any* %arrayidx to i64*
  %2 = load i64, i64* %any_uv, align 8
  store i64 %2, i64* %i, align 8
  %3 = load i64, i64* %i, align 8
  %shr = lshr i64 %3, 6
  store i64 %shr, i64* %i, align 8
  %4 = load %union.any*, %union.any** @PL_savestack, align 8
  %5 = load i32, i32* @PL_savestack_ix, align 4
  %dec1 = add nsw i32 %5, -1
  store i32 %dec1, i32* @PL_savestack_ix, align 4
  %idxprom2 = sext i32 %dec1 to i64
  %arrayidx3 = getelementptr inbounds %union.any, %union.any* %4, i64 %idxprom2
  %any_i32 = bitcast %union.any* %arrayidx3 to i32*
  %6 = load i32, i32* %any_i32, align 8
  %7 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %lastcloseparen = getelementptr inbounds %struct.regexp, %struct.regexp* %7, i32 0, i32 16
  store i32 %6, i32* %lastcloseparen, align 4
  %8 = load %union.any*, %union.any** @PL_savestack, align 8
  %9 = load i32, i32* @PL_savestack_ix, align 4
  %dec4 = add nsw i32 %9, -1
  store i32 %dec4, i32* @PL_savestack_ix, align 4
  %idxprom5 = sext i32 %dec4 to i64
  %arrayidx6 = getelementptr inbounds %union.any, %union.any* %8, i64 %idxprom5
  %any_i327 = bitcast %union.any* %arrayidx6 to i32*
  %10 = load i32, i32* %any_i327, align 8
  %11 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %lastparen = getelementptr inbounds %struct.regexp, %struct.regexp* %11, i32 0, i32 15
  store i32 %10, i32* %lastparen, align 8
  %12 = load %union.any*, %union.any** @PL_savestack, align 8
  %13 = load i32, i32* @PL_savestack_ix, align 4
  %dec8 = add nsw i32 %13, -1
  store i32 %dec8, i32* @PL_savestack_ix, align 4
  %idxprom9 = sext i32 %dec8 to i64
  %arrayidx10 = getelementptr inbounds %union.any, %union.any* %12, i64 %idxprom9
  %any_i3211 = bitcast %union.any* %arrayidx10 to i32*
  %14 = load i32, i32* %any_i3211, align 8
  %15 = load i32*, i32** %maxopenparen_p.addr, align 8
  store i32 %14, i32* %15, align 4
  %16 = load i64, i64* %i, align 8
  %sub = sub i64 %16, 3
  store i64 %sub, i64* %i, align 8
  %17 = load i32*, i32** %maxopenparen_p.addr, align 8
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %paren, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %19 = load i64, i64* %i, align 8
  %cmp = icmp ugt i64 %19, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %20 = load %union.any*, %union.any** @PL_savestack, align 8
  %21 = load i32, i32* @PL_savestack_ix, align 4
  %dec12 = add nsw i32 %21, -1
  store i32 %dec12, i32* @PL_savestack_ix, align 4
  %idxprom13 = sext i32 %dec12 to i64
  %arrayidx14 = getelementptr inbounds %union.any, %union.any* %20, i64 %idxprom13
  %any_i3215 = bitcast %union.any* %arrayidx14 to i32*
  %22 = load i32, i32* %any_i3215, align 8
  %conv = sext i32 %22 to i64
  %23 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %offs = getelementptr inbounds %struct.regexp, %struct.regexp* %23, i32 0, i32 17
  %24 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs, align 8
  %25 = load i32, i32* %paren, align 4
  %idxprom16 = zext i32 %25 to i64
  %arrayidx17 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %24, i64 %idxprom16
  %start_tmp = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx17, i32 0, i32 2
  store i64 %conv, i64* %start_tmp, align 8
  %26 = load %union.any*, %union.any** @PL_savestack, align 8
  %27 = load i32, i32* @PL_savestack_ix, align 4
  %dec18 = add nsw i32 %27, -1
  store i32 %dec18, i32* @PL_savestack_ix, align 4
  %idxprom19 = sext i32 %dec18 to i64
  %arrayidx20 = getelementptr inbounds %union.any, %union.any* %26, i64 %idxprom19
  %any_iv = bitcast %union.any* %arrayidx20 to i64*
  %28 = load i64, i64* %any_iv, align 8
  %29 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %offs21 = getelementptr inbounds %struct.regexp, %struct.regexp* %29, i32 0, i32 17
  %30 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs21, align 8
  %31 = load i32, i32* %paren, align 4
  %idxprom22 = zext i32 %31 to i64
  %arrayidx23 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %30, i64 %idxprom22
  %start = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx23, i32 0, i32 0
  store i64 %28, i64* %start, align 8
  %32 = load %union.any*, %union.any** @PL_savestack, align 8
  %33 = load i32, i32* @PL_savestack_ix, align 4
  %dec24 = add nsw i32 %33, -1
  store i32 %dec24, i32* @PL_savestack_ix, align 4
  %idxprom25 = sext i32 %dec24 to i64
  %arrayidx26 = getelementptr inbounds %union.any, %union.any* %32, i64 %idxprom25
  %any_iv27 = bitcast %union.any* %arrayidx26 to i64*
  %34 = load i64, i64* %any_iv27, align 8
  store i64 %34, i64* %tmps, align 8
  %35 = load i32, i32* %paren, align 4
  %36 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %lastparen28 = getelementptr inbounds %struct.regexp, %struct.regexp* %36, i32 0, i32 15
  %37 = load i32, i32* %lastparen28, align 8
  %cmp29 = icmp ule i32 %35, %37
  br i1 %cmp29, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %38 = load i64, i64* %tmps, align 8
  %39 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %offs31 = getelementptr inbounds %struct.regexp, %struct.regexp* %39, i32 0, i32 17
  %40 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs31, align 8
  %41 = load i32, i32* %paren, align 4
  %idxprom32 = zext i32 %41 to i64
  %arrayidx33 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %40, i64 %idxprom32
  %end = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx33, i32 0, i32 1
  store i64 %38, i64* %end, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %42 = load i32, i32* %paren, align 4
  %dec34 = add i32 %42, -1
  store i32 %dec34, i32* %paren, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %43 = load i64, i64* %i, align 8
  %sub35 = sub i64 %43, 3
  store i64 %sub35, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %44 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %lastparen36 = getelementptr inbounds %struct.regexp, %struct.regexp* %44, i32 0, i32 15
  %45 = load i32, i32* %lastparen36, align 8
  %add = add i32 %45, 1
  %conv37 = zext i32 %add to i64
  store i64 %conv37, i64* %i, align 8
  br label %for.cond38

for.cond38:                                       ; preds = %for.inc54, %for.end
  %46 = load i64, i64* %i, align 8
  %47 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %nparens = getelementptr inbounds %struct.regexp, %struct.regexp* %47, i32 0, i32 12
  %48 = load i32, i32* %nparens, align 8
  %conv39 = zext i32 %48 to i64
  %cmp40 = icmp ule i64 %46, %conv39
  br i1 %cmp40, label %for.body42, label %for.end55

for.body42:                                       ; preds = %for.cond38
  %49 = load i64, i64* %i, align 8
  %50 = load i32*, i32** %maxopenparen_p.addr, align 8
  %51 = load i32, i32* %50, align 4
  %conv43 = zext i32 %51 to i64
  %cmp44 = icmp ugt i64 %49, %conv43
  br i1 %cmp44, label %if.then46, label %if.end50

if.then46:                                        ; preds = %for.body42
  %52 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %offs47 = getelementptr inbounds %struct.regexp, %struct.regexp* %52, i32 0, i32 17
  %53 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs47, align 8
  %54 = load i64, i64* %i, align 8
  %arrayidx48 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %53, i64 %54
  %start49 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx48, i32 0, i32 0
  store i64 -1, i64* %start49, align 8
  br label %if.end50

if.end50:                                         ; preds = %if.then46, %for.body42
  %55 = load %struct.regexp*, %struct.regexp** %rex.addr, align 8
  %offs51 = getelementptr inbounds %struct.regexp, %struct.regexp* %55, i32 0, i32 17
  %56 = load %struct.regexp_paren_pair*, %struct.regexp_paren_pair** %offs51, align 8
  %57 = load i64, i64* %i, align 8
  %arrayidx52 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %56, i64 %57
  %end53 = getelementptr inbounds %struct.regexp_paren_pair, %struct.regexp_paren_pair* %arrayidx52, i32 0, i32 1
  store i64 -1, i64* %end53, align 8
  br label %for.inc54

for.inc54:                                        ; preds = %if.end50
  %58 = load i64, i64* %i, align 8
  %inc = add i64 %58, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond38

for.end55:                                        ; preds = %for.cond38
  ret void
}

declare dso_local %struct.regnode* @Perl_regnext(%struct.regnode*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @S_setup_EXACTISH_ST_c1_c2(%struct.regnode* %text_node, i32* %c1p, i8* %c1_utf8, i32* %c2p, i8* %c2_utf8, %struct.regmatch_info* %reginfo) #0 {
entry:
  %retval = alloca i1, align 1
  %text_node.addr = alloca %struct.regnode*, align 8
  %c1p.addr = alloca i32*, align 8
  %c1_utf8.addr = alloca i8*, align 8
  %c2p.addr = alloca i32*, align 8
  %c2_utf8.addr = alloca i8*, align 8
  %reginfo.addr = alloca %struct.regmatch_info*, align 8
  %utf8_target = alloca i8, align 1
  %c1 = alloca i64, align 8
  %c2 = alloca i64, align 8
  %use_chrtest_void = alloca i8, align 1
  %is_utf8_pat = alloca i8, align 1
  %utf8_has_been_setup = alloca i8, align 1
  %pat = alloca i8*, align 8
  %folded = alloca [40 x i8], align 16
  %pat_end = alloca i8*, align 8
  %s = alloca i8*, align 8
  %d = alloca i8*, align 8
  %i = alloca i32, align 4
  %len = alloca i64, align 8
  %listp = alloca %struct.sv**, align 8
  %list = alloca %struct.av*, align 8
  %c_p = alloca %struct.sv**, align 8
  store %struct.regnode* %text_node, %struct.regnode** %text_node.addr, align 8
  store i32* %c1p, i32** %c1p.addr, align 8
  store i8* %c1_utf8, i8** %c1_utf8.addr, align 8
  store i32* %c2p, i32** %c2p.addr, align 8
  store i8* %c2_utf8, i8** %c2_utf8.addr, align 8
  store %struct.regmatch_info* %reginfo, %struct.regmatch_info** %reginfo.addr, align 8
  %0 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %0, i32 0, i32 14
  %1 = load i8, i8* %is_utf8_target, align 2
  %tobool = trunc i8 %1 to i1
  %frombool = zext i1 %tobool to i8
  store i8 %frombool, i8* %utf8_target, align 1
  store i64 -999, i64* %c1, align 8
  store i64 -998, i64* %c2, align 8
  store i8 0, i8* %use_chrtest_void, align 1
  %2 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat1 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2, i32 0, i32 13
  %3 = load i8, i8* %is_utf8_pat1, align 1
  %tobool2 = trunc i8 %3 to i1
  %frombool3 = zext i1 %tobool2 to i8
  store i8 %frombool3, i8* %is_utf8_pat, align 1
  store i8 0, i8* %utf8_has_been_setup, align 1
  %4 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %5 = bitcast %struct.regnode* %4 to %struct.regnode_string*
  %string = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %5, i32 0, i32 3
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %string, i64 0, i64 0
  store i8* %arraydecay, i8** %pat, align 8
  %6 = bitcast [40 x i8]* %folded to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %6, i8 0, i64 40, i1 false)
  %7 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %type = getelementptr inbounds %struct.regnode, %struct.regnode* %7, i32 0, i32 1
  %8 = load i8, i8* %type, align 1
  %conv = zext i8 %8 to i32
  %cmp = icmp eq i32 %conv, 31
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %9 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %type5 = getelementptr inbounds %struct.regnode, %struct.regnode* %9, i32 0, i32 1
  %10 = load i8, i8* %type5, align 1
  %conv6 = zext i8 %10 to i32
  %cmp7 = icmp eq i32 %conv6, 32
  br i1 %cmp7, label %if.then, label %if.else21

if.then:                                          ; preds = %lor.lhs.false, %entry
  %11 = load i8, i8* %is_utf8_pat, align 1
  %tobool9 = trunc i8 %11 to i1
  br i1 %tobool9, label %if.else, label %if.then10

if.then10:                                        ; preds = %if.then
  %12 = load i8*, i8** %pat, align 8
  %13 = load i8, i8* %12, align 1
  %conv11 = zext i8 %13 to i64
  store i64 %conv11, i64* %c1, align 8
  store i64 %conv11, i64* %c2, align 8
  br label %if.end20

if.else:                                          ; preds = %if.then
  %14 = load i8, i8* %utf8_target, align 1
  %tobool12 = trunc i8 %14 to i1
  br i1 %tobool12, label %if.then13, label %if.else19

if.then13:                                        ; preds = %if.else
  %15 = load i8*, i8** %c1_utf8.addr, align 8
  %16 = load i8*, i8** %pat, align 8
  %17 = load i8*, i8** %pat, align 8
  %18 = load i8, i8* %17, align 1
  %idxprom = zext i8 %18 to i64
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom
  %19 = load i8, i8* %arrayidx, align 1
  %conv14 = zext i8 %19 to i64
  %mul = mul i64 %conv14, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 %16, i64 %mul, i1 false)
  %20 = load i8*, i8** %c2_utf8.addr, align 8
  %21 = load i8*, i8** %pat, align 8
  %22 = load i8*, i8** %pat, align 8
  %23 = load i8, i8* %22, align 1
  %idxprom15 = zext i8 %23 to i64
  %arrayidx16 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom15
  %24 = load i8, i8* %arrayidx16, align 1
  %conv17 = zext i8 %24 to i64
  %mul18 = mul i64 %conv17, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %21, i64 %mul18, i1 false)
  store i8 1, i8* %utf8_has_been_setup, align 1
  br label %if.end

if.else19:                                        ; preds = %if.else
  %25 = load i8*, i8** %pat, align 8
  %call = call i64 @Perl_valid_utf8_to_uvchr(i8* %25, i64* null)
  store i64 %call, i64* %c1, align 8
  store i64 %call, i64* %c2, align 8
  br label %if.end

if.end:                                           ; preds = %if.else19, %if.then13
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then10
  br label %if.end2281

if.else21:                                        ; preds = %lor.lhs.false
  %26 = load i8*, i8** %pat, align 8
  %27 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %28 = bitcast %struct.regnode* %27 to %struct.regnode_string*
  %str_len = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %28, i32 0, i32 0
  %29 = load i8, i8* %str_len, align 2
  %conv22 = zext i8 %29 to i32
  %idx.ext = sext i32 %conv22 to i64
  %add.ptr = getelementptr inbounds i8, i8* %26, i64 %idx.ext
  store i8* %add.ptr, i8** %pat_end, align 8
  %30 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %type23 = getelementptr inbounds %struct.regnode, %struct.regnode* %30, i32 0, i32 1
  %31 = load i8, i8* %type23, align 1
  %conv24 = zext i8 %31 to i32
  %cmp25 = icmp eq i32 %conv24, 34
  br i1 %cmp25, label %if.then27, label %if.end211

if.then27:                                        ; preds = %if.else21
  %32 = load i8, i8* %is_utf8_pat, align 1
  %tobool28 = trunc i8 %32 to i1
  br i1 %tobool28, label %if.else42, label %if.then29

if.then29:                                        ; preds = %if.then27
  %33 = load i8, i8* @PL_in_utf8_CTYPE_locale, align 1
  %tobool30 = trunc i8 %33 to i1
  br i1 %tobool30, label %land.lhs.true, label %if.end41

land.lhs.true:                                    ; preds = %if.then29
  %34 = load i8*, i8** %pat, align 8
  %35 = load i8, i8* %34, align 1
  %conv32 = zext i8 %35 to i32
  %cmp33 = icmp eq i32 %conv32, 223
  br i1 %cmp33, label %if.then35, label %if.end41

if.then35:                                        ; preds = %land.lhs.true
  %arrayidx36 = getelementptr inbounds [40 x i8], [40 x i8]* %folded, i64 0, i64 1
  store i8 115, i8* %arrayidx36, align 1
  %arrayidx37 = getelementptr inbounds [40 x i8], [40 x i8]* %folded, i64 0, i64 0
  store i8 115, i8* %arrayidx37, align 16
  %arraydecay38 = getelementptr inbounds [40 x i8], [40 x i8]* %folded, i64 0, i64 0
  store i8* %arraydecay38, i8** %pat, align 8
  %arraydecay39 = getelementptr inbounds [40 x i8], [40 x i8]* %folded, i64 0, i64 0
  %add.ptr40 = getelementptr inbounds i8, i8* %arraydecay39, i64 2
  store i8* %add.ptr40, i8** %pat_end, align 8
  br label %if.end41

if.end41:                                         ; preds = %if.then35, %land.lhs.true, %if.then29
  br label %if.end210

if.else42:                                        ; preds = %if.then27
  %36 = load i8*, i8** %pat, align 8
  %arrayidx43 = getelementptr inbounds i8, i8* %36, i64 0
  %37 = load i8, i8* %arrayidx43, align 1
  %conv44 = zext i8 %37 to i32
  %cmp45 = icmp sle i32 %conv44, 127
  br i1 %cmp45, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else42
  br i1 true, label %if.then178, label %if.end209

cond.false:                                       ; preds = %if.else42
  %38 = load i8*, i8** %pat, align 8
  %arrayidx47 = getelementptr inbounds i8, i8* %38, i64 0
  %39 = load i8, i8* %arrayidx47, align 1
  %conv48 = zext i8 %39 to i32
  %and = and i32 %conv48, 254
  %cmp49 = icmp eq i32 %and, 194
  br i1 %cmp49, label %cond.true51, label %cond.false52

cond.true51:                                      ; preds = %cond.false
  br i1 true, label %if.then178, label %if.end209

cond.false52:                                     ; preds = %cond.false
  %40 = load i8*, i8** %pat, align 8
  %arrayidx53 = getelementptr inbounds i8, i8* %40, i64 0
  %41 = load i8, i8* %arrayidx53, align 1
  %conv54 = zext i8 %41 to i32
  %cmp55 = icmp eq i32 196, %conv54
  br i1 %cmp55, label %cond.true62, label %lor.lhs.false57

lor.lhs.false57:                                  ; preds = %cond.false52
  %42 = load i8*, i8** %pat, align 8
  %arrayidx58 = getelementptr inbounds i8, i8* %42, i64 0
  %43 = load i8, i8* %arrayidx58, align 1
  %conv59 = zext i8 %43 to i32
  %cmp60 = icmp eq i32 199, %conv59
  br i1 %cmp60, label %cond.true62, label %cond.false69

cond.true62:                                      ; preds = %lor.lhs.false57, %cond.false52
  %44 = load i8*, i8** %pat, align 8
  %arrayidx63 = getelementptr inbounds i8, i8* %44, i64 1
  %45 = load i8, i8* %arrayidx63, align 1
  %conv64 = zext i8 %45 to i32
  %cmp65 = icmp eq i32 176, %conv64
  br i1 %cmp65, label %cond.true67, label %cond.false68

cond.true67:                                      ; preds = %cond.true62
  br i1 true, label %if.then178, label %if.end209

cond.false68:                                     ; preds = %cond.true62
  br i1 false, label %if.then178, label %if.end209

cond.false69:                                     ; preds = %lor.lhs.false57
  %46 = load i8*, i8** %pat, align 8
  %arrayidx70 = getelementptr inbounds i8, i8* %46, i64 0
  %47 = load i8, i8* %arrayidx70, align 1
  %conv71 = zext i8 %47 to i32
  %cmp72 = icmp eq i32 197, %conv71
  br i1 %cmp72, label %cond.true74, label %cond.false91

cond.true74:                                      ; preds = %cond.false69
  %48 = load i8*, i8** %pat, align 8
  %arrayidx75 = getelementptr inbounds i8, i8* %48, i64 1
  %49 = load i8, i8* %arrayidx75, align 1
  %conv76 = zext i8 %49 to i32
  %cmp77 = icmp eq i32 137, %conv76
  br i1 %cmp77, label %cond.true89, label %lor.lhs.false79

lor.lhs.false79:                                  ; preds = %cond.true74
  %50 = load i8*, i8** %pat, align 8
  %arrayidx80 = getelementptr inbounds i8, i8* %50, i64 1
  %51 = load i8, i8* %arrayidx80, align 1
  %conv81 = zext i8 %51 to i32
  %cmp82 = icmp eq i32 184, %conv81
  br i1 %cmp82, label %cond.true89, label %lor.lhs.false84

lor.lhs.false84:                                  ; preds = %lor.lhs.false79
  %52 = load i8*, i8** %pat, align 8
  %arrayidx85 = getelementptr inbounds i8, i8* %52, i64 1
  %53 = load i8, i8* %arrayidx85, align 1
  %conv86 = zext i8 %53 to i32
  %cmp87 = icmp eq i32 191, %conv86
  br i1 %cmp87, label %cond.true89, label %cond.false90

cond.true89:                                      ; preds = %lor.lhs.false84, %lor.lhs.false79, %cond.true74
  br i1 true, label %if.then178, label %if.end209

cond.false90:                                     ; preds = %lor.lhs.false84
  br i1 false, label %if.then178, label %if.end209

cond.false91:                                     ; preds = %cond.false69
  %54 = load i8*, i8** %pat, align 8
  %arrayidx92 = getelementptr inbounds i8, i8* %54, i64 0
  %55 = load i8, i8* %arrayidx92, align 1
  %conv93 = zext i8 %55 to i32
  %cmp94 = icmp eq i32 202, %conv93
  br i1 %cmp94, label %cond.true96, label %cond.false103

cond.true96:                                      ; preds = %cond.false91
  %56 = load i8*, i8** %pat, align 8
  %arrayidx97 = getelementptr inbounds i8, i8* %56, i64 1
  %57 = load i8, i8* %arrayidx97, align 1
  %conv98 = zext i8 %57 to i32
  %cmp99 = icmp eq i32 188, %conv98
  br i1 %cmp99, label %cond.true101, label %cond.false102

cond.true101:                                     ; preds = %cond.true96
  br i1 true, label %if.then178, label %if.end209

cond.false102:                                    ; preds = %cond.true96
  br i1 false, label %if.then178, label %if.end209

cond.false103:                                    ; preds = %cond.false91
  %58 = load i8*, i8** %pat, align 8
  %arrayidx104 = getelementptr inbounds i8, i8* %58, i64 0
  %59 = load i8, i8* %arrayidx104, align 1
  %conv105 = zext i8 %59 to i32
  %cmp106 = icmp eq i32 206, %conv105
  br i1 %cmp106, label %cond.true108, label %cond.false116

cond.true108:                                     ; preds = %cond.false103
  %60 = load i8*, i8** %pat, align 8
  %arrayidx109 = getelementptr inbounds i8, i8* %60, i64 1
  %61 = load i8, i8* %arrayidx109, align 1
  %conv110 = zext i8 %61 to i32
  %and111 = and i32 %conv110, 223
  %cmp112 = icmp eq i32 %and111, 156
  br i1 %cmp112, label %cond.true114, label %cond.false115

cond.true114:                                     ; preds = %cond.true108
  br i1 true, label %if.then178, label %if.end209

cond.false115:                                    ; preds = %cond.true108
  br i1 false, label %if.then178, label %if.end209

cond.false116:                                    ; preds = %cond.false103
  %62 = load i8*, i8** %pat, align 8
  %arrayidx117 = getelementptr inbounds i8, i8* %62, i64 0
  %63 = load i8, i8* %arrayidx117, align 1
  %conv118 = zext i8 %63 to i32
  %cmp119 = icmp eq i32 225, %conv118
  br i1 %cmp119, label %cond.true121, label %cond.false143

cond.true121:                                     ; preds = %cond.false116
  %64 = load i8*, i8** %pat, align 8
  %arrayidx122 = getelementptr inbounds i8, i8* %64, i64 1
  %65 = load i8, i8* %arrayidx122, align 1
  %conv123 = zext i8 %65 to i32
  %cmp124 = icmp eq i32 186, %conv123
  br i1 %cmp124, label %land.lhs.true126, label %cond.false142

land.lhs.true126:                                 ; preds = %cond.true121
  %66 = load i8*, i8** %pat, align 8
  %arrayidx127 = getelementptr inbounds i8, i8* %66, i64 2
  %67 = load i8, i8* %arrayidx127, align 1
  %conv128 = zext i8 %67 to i32
  %cmp129 = icmp sle i32 150, %conv128
  br i1 %cmp129, label %land.lhs.true131, label %lor.lhs.false136

land.lhs.true131:                                 ; preds = %land.lhs.true126
  %68 = load i8*, i8** %pat, align 8
  %arrayidx132 = getelementptr inbounds i8, i8* %68, i64 2
  %69 = load i8, i8* %arrayidx132, align 1
  %conv133 = zext i8 %69 to i32
  %cmp134 = icmp sle i32 %conv133, 154
  br i1 %cmp134, label %cond.true141, label %lor.lhs.false136

lor.lhs.false136:                                 ; preds = %land.lhs.true131, %land.lhs.true126
  %70 = load i8*, i8** %pat, align 8
  %arrayidx137 = getelementptr inbounds i8, i8* %70, i64 2
  %71 = load i8, i8* %arrayidx137, align 1
  %conv138 = zext i8 %71 to i32
  %cmp139 = icmp eq i32 158, %conv138
  br i1 %cmp139, label %cond.true141, label %cond.false142

cond.true141:                                     ; preds = %lor.lhs.false136, %land.lhs.true131
  br i1 true, label %if.then178, label %if.end209

cond.false142:                                    ; preds = %lor.lhs.false136, %cond.true121
  br i1 false, label %if.then178, label %if.end209

cond.false143:                                    ; preds = %cond.false116
  %72 = load i8*, i8** %pat, align 8
  %arrayidx144 = getelementptr inbounds i8, i8* %72, i64 0
  %73 = load i8, i8* %arrayidx144, align 1
  %conv145 = zext i8 %73 to i32
  %cmp146 = icmp eq i32 226, %conv145
  br i1 %cmp146, label %cond.true148, label %cond.false161

cond.true148:                                     ; preds = %cond.false143
  %74 = load i8*, i8** %pat, align 8
  %arrayidx149 = getelementptr inbounds i8, i8* %74, i64 1
  %75 = load i8, i8* %arrayidx149, align 1
  %conv150 = zext i8 %75 to i32
  %cmp151 = icmp eq i32 132, %conv150
  br i1 %cmp151, label %land.lhs.true153, label %cond.false160

land.lhs.true153:                                 ; preds = %cond.true148
  %76 = load i8*, i8** %pat, align 8
  %arrayidx154 = getelementptr inbounds i8, i8* %76, i64 2
  %77 = load i8, i8* %arrayidx154, align 1
  %conv155 = zext i8 %77 to i32
  %and156 = and i32 %conv155, 254
  %cmp157 = icmp eq i32 %and156, 170
  br i1 %cmp157, label %cond.true159, label %cond.false160

cond.true159:                                     ; preds = %land.lhs.true153
  br i1 true, label %if.then178, label %if.end209

cond.false160:                                    ; preds = %land.lhs.true153, %cond.true148
  br i1 false, label %if.then178, label %if.end209

cond.false161:                                    ; preds = %cond.false143
  %78 = load i8*, i8** %pat, align 8
  %arrayidx162 = getelementptr inbounds i8, i8* %78, i64 0
  %79 = load i8, i8* %arrayidx162, align 1
  %conv163 = zext i8 %79 to i32
  %cmp164 = icmp eq i32 239, %conv163
  br i1 %cmp164, label %land.lhs.true166, label %cond.false177

land.lhs.true166:                                 ; preds = %cond.false161
  %80 = load i8*, i8** %pat, align 8
  %arrayidx167 = getelementptr inbounds i8, i8* %80, i64 1
  %81 = load i8, i8* %arrayidx167, align 1
  %conv168 = zext i8 %81 to i32
  %cmp169 = icmp eq i32 172, %conv168
  br i1 %cmp169, label %land.lhs.true171, label %cond.false177

land.lhs.true171:                                 ; preds = %land.lhs.true166
  %82 = load i8*, i8** %pat, align 8
  %arrayidx172 = getelementptr inbounds i8, i8* %82, i64 2
  %83 = load i8, i8* %arrayidx172, align 1
  %conv173 = zext i8 %83 to i32
  %cmp174 = icmp sle i32 %conv173, 134
  br i1 %cmp174, label %cond.true176, label %cond.false177

cond.true176:                                     ; preds = %land.lhs.true171
  br i1 true, label %if.then178, label %if.end209

cond.false177:                                    ; preds = %land.lhs.true171, %land.lhs.true166, %cond.false161
  br i1 false, label %if.then178, label %if.end209

if.then178:                                       ; preds = %cond.false177, %cond.true176, %cond.false160, %cond.true159, %cond.false142, %cond.true141, %cond.false115, %cond.true114, %cond.false102, %cond.true101, %cond.false90, %cond.true89, %cond.false68, %cond.true67, %cond.true51, %cond.true
  %84 = load i8*, i8** %pat, align 8
  store i8* %84, i8** %s, align 8
  %arraydecay179 = getelementptr inbounds [40 x i8], [40 x i8]* %folded, i64 0, i64 0
  store i8* %arraydecay179, i8** %d, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then178
  %85 = load i32, i32* %i, align 4
  %cmp180 = icmp slt i32 %85, 3
  br i1 %cmp180, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %86 = load i8*, i8** %s, align 8
  %87 = load i8*, i8** %pat_end, align 8
  %cmp182 = icmp ult i8* %86, %87
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %88 = phi i1 [ false, %for.cond ], [ %cmp182, %land.rhs ]
  br i1 %88, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %89 = load i8*, i8** %s, align 8
  %90 = load i8, i8* %89, align 1
  %conv184 = zext i8 %90 to i64
  %cmp185 = icmp ult i64 %conv184, 128
  br i1 %cmp185, label %if.then187, label %if.else199

if.then187:                                       ; preds = %for.body
  %91 = load i8*, i8** %s, align 8
  %92 = load i8, i8* %91, align 1
  %conv188 = zext i8 %92 to i32
  %and189 = and i32 %conv188, -128
  %cmp190 = icmp eq i32 %and189, 0
  br i1 %cmp190, label %cond.true192, label %cond.false195

cond.true192:                                     ; preds = %if.then187
  %93 = load i8*, i8** %s, align 8
  %94 = load i8, i8* %93, align 1
  %conv193 = zext i8 %94 to i32
  %call194 = call i32 @tolower(i32 %conv193) #5
  br label %cond.end

cond.false195:                                    ; preds = %if.then187
  %95 = load i8*, i8** %s, align 8
  %96 = load i8, i8* %95, align 1
  %conv196 = zext i8 %96 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false195, %cond.true192
  %cond = phi i32 [ %call194, %cond.true192 ], [ %conv196, %cond.false195 ]
  %conv197 = trunc i32 %cond to i8
  %97 = load i8*, i8** %d, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %97, i32 1
  store i8* %incdec.ptr, i8** %d, align 8
  store i8 %conv197, i8* %97, align 1
  %98 = load i8*, i8** %s, align 8
  %incdec.ptr198 = getelementptr inbounds i8, i8* %98, i32 1
  store i8* %incdec.ptr198, i8** %s, align 8
  br label %if.end207

if.else199:                                       ; preds = %for.body
  %99 = load i8*, i8** %s, align 8
  %100 = load i8*, i8** %d, align 8
  %call200 = call i64 @Perl__to_utf8_fold_flags(i8* %99, i8* %100, i64* %len, i8 zeroext 3)
  %101 = load i64, i64* %len, align 8
  %102 = load i8*, i8** %d, align 8
  %add.ptr201 = getelementptr inbounds i8, i8* %102, i64 %101
  store i8* %add.ptr201, i8** %d, align 8
  %103 = load i8*, i8** %s, align 8
  %104 = load i8, i8* %103, align 1
  %idxprom202 = zext i8 %104 to i64
  %arrayidx203 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom202
  %105 = load i8, i8* %arrayidx203, align 1
  %conv204 = zext i8 %105 to i32
  %106 = load i8*, i8** %s, align 8
  %idx.ext205 = sext i32 %conv204 to i64
  %add.ptr206 = getelementptr inbounds i8, i8* %106, i64 %idx.ext205
  store i8* %add.ptr206, i8** %s, align 8
  br label %if.end207

if.end207:                                        ; preds = %if.else199, %cond.end
  br label %for.inc

for.inc:                                          ; preds = %if.end207
  %107 = load i32, i32* %i, align 4
  %inc = add nsw i32 %107, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  %arraydecay208 = getelementptr inbounds [40 x i8], [40 x i8]* %folded, i64 0, i64 0
  store i8* %arraydecay208, i8** %pat, align 8
  %108 = load i8*, i8** %d, align 8
  store i8* %108, i8** %pat_end, align 8
  br label %if.end209

if.end209:                                        ; preds = %for.end, %cond.false177, %cond.true176, %cond.false160, %cond.true159, %cond.false142, %cond.true141, %cond.false115, %cond.true114, %cond.false102, %cond.true101, %cond.false90, %cond.true89, %cond.false68, %cond.true67, %cond.true51, %cond.true
  br label %if.end210

if.end210:                                        ; preds = %if.end209, %if.end41
  br label %if.end211

if.end211:                                        ; preds = %if.end210, %if.else21
  %109 = load i8, i8* %is_utf8_pat, align 1
  %tobool212 = trunc i8 %109 to i1
  br i1 %tobool212, label %land.lhs.true214, label %lor.lhs.false2001

land.lhs.true214:                                 ; preds = %if.end211
  %110 = load i8*, i8** %pat_end, align 8
  %111 = load i8*, i8** %pat, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %110 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %111 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp215 = icmp sgt i64 %sub.ptr.sub, 5
  br i1 %cmp215, label %cond.true217, label %cond.false828

cond.true217:                                     ; preds = %land.lhs.true214
  %112 = load i8*, i8** %pat, align 8
  %arrayidx218 = getelementptr inbounds i8, i8* %112, i64 0
  %113 = load i8, i8* %arrayidx218, align 1
  %conv219 = zext i8 %113 to i32
  %cmp220 = icmp eq i32 97, %conv219
  br i1 %cmp220, label %cond.true222, label %cond.false234

cond.true222:                                     ; preds = %cond.true217
  %114 = load i8*, i8** %pat, align 8
  %arrayidx223 = getelementptr inbounds i8, i8* %114, i64 1
  %115 = load i8, i8* %arrayidx223, align 1
  %conv224 = zext i8 %115 to i32
  %cmp225 = icmp eq i32 202, %conv224
  br i1 %cmp225, label %land.lhs.true227, label %cond.false233

land.lhs.true227:                                 ; preds = %cond.true222
  %116 = load i8*, i8** %pat, align 8
  %arrayidx228 = getelementptr inbounds i8, i8* %116, i64 2
  %117 = load i8, i8* %arrayidx228, align 1
  %conv229 = zext i8 %117 to i32
  %cmp230 = icmp eq i32 190, %conv229
  br i1 %cmp230, label %cond.true232, label %cond.false233

cond.true232:                                     ; preds = %land.lhs.true227
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false233:                                    ; preds = %land.lhs.true227, %cond.true222
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false234:                                    ; preds = %cond.true217
  %118 = load i8*, i8** %pat, align 8
  %arrayidx235 = getelementptr inbounds i8, i8* %118, i64 0
  %119 = load i8, i8* %arrayidx235, align 1
  %conv236 = zext i8 %119 to i32
  %cmp237 = icmp eq i32 102, %conv236
  br i1 %cmp237, label %cond.true239, label %cond.false268

cond.true239:                                     ; preds = %cond.false234
  %120 = load i8*, i8** %pat, align 8
  %arrayidx240 = getelementptr inbounds i8, i8* %120, i64 1
  %121 = load i8, i8* %arrayidx240, align 1
  %conv241 = zext i8 %121 to i32
  %cmp242 = icmp eq i32 102, %conv241
  br i1 %cmp242, label %cond.true244, label %cond.false256

cond.true244:                                     ; preds = %cond.true239
  %122 = load i8*, i8** %pat, align 8
  %arrayidx245 = getelementptr inbounds i8, i8* %122, i64 2
  %123 = load i8, i8* %arrayidx245, align 1
  %conv246 = zext i8 %123 to i32
  %cmp247 = icmp eq i32 105, %conv246
  br i1 %cmp247, label %cond.true254, label %lor.lhs.false249

lor.lhs.false249:                                 ; preds = %cond.true244
  %124 = load i8*, i8** %pat, align 8
  %arrayidx250 = getelementptr inbounds i8, i8* %124, i64 2
  %125 = load i8, i8* %arrayidx250, align 1
  %conv251 = zext i8 %125 to i32
  %cmp252 = icmp eq i32 108, %conv251
  br i1 %cmp252, label %cond.true254, label %cond.false255

cond.true254:                                     ; preds = %lor.lhs.false249, %cond.true244
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false255:                                    ; preds = %lor.lhs.false249
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false256:                                    ; preds = %cond.true239
  %126 = load i8*, i8** %pat, align 8
  %arrayidx257 = getelementptr inbounds i8, i8* %126, i64 1
  %127 = load i8, i8* %arrayidx257, align 1
  %conv258 = zext i8 %127 to i32
  %cmp259 = icmp eq i32 105, %conv258
  br i1 %cmp259, label %cond.true266, label %lor.lhs.false261

lor.lhs.false261:                                 ; preds = %cond.false256
  %128 = load i8*, i8** %pat, align 8
  %arrayidx262 = getelementptr inbounds i8, i8* %128, i64 1
  %129 = load i8, i8* %arrayidx262, align 1
  %conv263 = zext i8 %129 to i32
  %cmp264 = icmp eq i32 108, %conv263
  br i1 %cmp264, label %cond.true266, label %cond.false267

cond.true266:                                     ; preds = %lor.lhs.false261, %cond.false256
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false267:                                    ; preds = %lor.lhs.false261
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false268:                                    ; preds = %cond.false234
  %130 = load i8*, i8** %pat, align 8
  %arrayidx269 = getelementptr inbounds i8, i8* %130, i64 0
  %131 = load i8, i8* %arrayidx269, align 1
  %conv270 = zext i8 %131 to i32
  %cmp271 = icmp eq i32 104, %conv270
  br i1 %cmp271, label %cond.true273, label %cond.false285

cond.true273:                                     ; preds = %cond.false268
  %132 = load i8*, i8** %pat, align 8
  %arrayidx274 = getelementptr inbounds i8, i8* %132, i64 1
  %133 = load i8, i8* %arrayidx274, align 1
  %conv275 = zext i8 %133 to i32
  %cmp276 = icmp eq i32 204, %conv275
  br i1 %cmp276, label %land.lhs.true278, label %cond.false284

land.lhs.true278:                                 ; preds = %cond.true273
  %134 = load i8*, i8** %pat, align 8
  %arrayidx279 = getelementptr inbounds i8, i8* %134, i64 2
  %135 = load i8, i8* %arrayidx279, align 1
  %conv280 = zext i8 %135 to i32
  %cmp281 = icmp eq i32 177, %conv280
  br i1 %cmp281, label %cond.true283, label %cond.false284

cond.true283:                                     ; preds = %land.lhs.true278
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false284:                                    ; preds = %land.lhs.true278, %cond.true273
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false285:                                    ; preds = %cond.false268
  %136 = load i8*, i8** %pat, align 8
  %arrayidx286 = getelementptr inbounds i8, i8* %136, i64 0
  %137 = load i8, i8* %arrayidx286, align 1
  %conv287 = zext i8 %137 to i32
  %cmp288 = icmp eq i32 105, %conv287
  br i1 %cmp288, label %cond.true290, label %cond.false302

cond.true290:                                     ; preds = %cond.false285
  %138 = load i8*, i8** %pat, align 8
  %arrayidx291 = getelementptr inbounds i8, i8* %138, i64 1
  %139 = load i8, i8* %arrayidx291, align 1
  %conv292 = zext i8 %139 to i32
  %cmp293 = icmp eq i32 204, %conv292
  br i1 %cmp293, label %land.lhs.true295, label %cond.false301

land.lhs.true295:                                 ; preds = %cond.true290
  %140 = load i8*, i8** %pat, align 8
  %arrayidx296 = getelementptr inbounds i8, i8* %140, i64 2
  %141 = load i8, i8* %arrayidx296, align 1
  %conv297 = zext i8 %141 to i32
  %cmp298 = icmp eq i32 135, %conv297
  br i1 %cmp298, label %cond.true300, label %cond.false301

cond.true300:                                     ; preds = %land.lhs.true295
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false301:                                    ; preds = %land.lhs.true295, %cond.true290
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false302:                                    ; preds = %cond.false285
  %142 = load i8*, i8** %pat, align 8
  %arrayidx303 = getelementptr inbounds i8, i8* %142, i64 0
  %143 = load i8, i8* %arrayidx303, align 1
  %conv304 = zext i8 %143 to i32
  %cmp305 = icmp eq i32 106, %conv304
  br i1 %cmp305, label %cond.true307, label %cond.false319

cond.true307:                                     ; preds = %cond.false302
  %144 = load i8*, i8** %pat, align 8
  %arrayidx308 = getelementptr inbounds i8, i8* %144, i64 1
  %145 = load i8, i8* %arrayidx308, align 1
  %conv309 = zext i8 %145 to i32
  %cmp310 = icmp eq i32 204, %conv309
  br i1 %cmp310, label %land.lhs.true312, label %cond.false318

land.lhs.true312:                                 ; preds = %cond.true307
  %146 = load i8*, i8** %pat, align 8
  %arrayidx313 = getelementptr inbounds i8, i8* %146, i64 2
  %147 = load i8, i8* %arrayidx313, align 1
  %conv314 = zext i8 %147 to i32
  %cmp315 = icmp eq i32 140, %conv314
  br i1 %cmp315, label %cond.true317, label %cond.false318

cond.true317:                                     ; preds = %land.lhs.true312
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false318:                                    ; preds = %land.lhs.true312, %cond.true307
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false319:                                    ; preds = %cond.false302
  %148 = load i8*, i8** %pat, align 8
  %arrayidx320 = getelementptr inbounds i8, i8* %148, i64 0
  %149 = load i8, i8* %arrayidx320, align 1
  %conv321 = zext i8 %149 to i32
  %cmp322 = icmp eq i32 115, %conv321
  br i1 %cmp322, label %cond.true324, label %cond.false336

cond.true324:                                     ; preds = %cond.false319
  %150 = load i8*, i8** %pat, align 8
  %arrayidx325 = getelementptr inbounds i8, i8* %150, i64 1
  %151 = load i8, i8* %arrayidx325, align 1
  %conv326 = zext i8 %151 to i32
  %cmp327 = icmp eq i32 115, %conv326
  br i1 %cmp327, label %cond.true334, label %lor.lhs.false329

lor.lhs.false329:                                 ; preds = %cond.true324
  %152 = load i8*, i8** %pat, align 8
  %arrayidx330 = getelementptr inbounds i8, i8* %152, i64 1
  %153 = load i8, i8* %arrayidx330, align 1
  %conv331 = zext i8 %153 to i32
  %cmp332 = icmp eq i32 116, %conv331
  br i1 %cmp332, label %cond.true334, label %cond.false335

cond.true334:                                     ; preds = %lor.lhs.false329, %cond.true324
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false335:                                    ; preds = %lor.lhs.false329
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false336:                                    ; preds = %cond.false319
  %154 = load i8*, i8** %pat, align 8
  %arrayidx337 = getelementptr inbounds i8, i8* %154, i64 0
  %155 = load i8, i8* %arrayidx337, align 1
  %conv338 = zext i8 %155 to i32
  %cmp339 = icmp eq i32 116, %conv338
  br i1 %cmp339, label %cond.true341, label %cond.false353

cond.true341:                                     ; preds = %cond.false336
  %156 = load i8*, i8** %pat, align 8
  %arrayidx342 = getelementptr inbounds i8, i8* %156, i64 1
  %157 = load i8, i8* %arrayidx342, align 1
  %conv343 = zext i8 %157 to i32
  %cmp344 = icmp eq i32 204, %conv343
  br i1 %cmp344, label %land.lhs.true346, label %cond.false352

land.lhs.true346:                                 ; preds = %cond.true341
  %158 = load i8*, i8** %pat, align 8
  %arrayidx347 = getelementptr inbounds i8, i8* %158, i64 2
  %159 = load i8, i8* %arrayidx347, align 1
  %conv348 = zext i8 %159 to i32
  %cmp349 = icmp eq i32 136, %conv348
  br i1 %cmp349, label %cond.true351, label %cond.false352

cond.true351:                                     ; preds = %land.lhs.true346
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false352:                                    ; preds = %land.lhs.true346, %cond.true341
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false353:                                    ; preds = %cond.false336
  %160 = load i8*, i8** %pat, align 8
  %arrayidx354 = getelementptr inbounds i8, i8* %160, i64 0
  %161 = load i8, i8* %arrayidx354, align 1
  %conv355 = zext i8 %161 to i32
  %cmp356 = icmp eq i32 119, %conv355
  br i1 %cmp356, label %cond.true363, label %lor.lhs.false358

lor.lhs.false358:                                 ; preds = %cond.false353
  %162 = load i8*, i8** %pat, align 8
  %arrayidx359 = getelementptr inbounds i8, i8* %162, i64 0
  %163 = load i8, i8* %arrayidx359, align 1
  %conv360 = zext i8 %163 to i32
  %cmp361 = icmp eq i32 121, %conv360
  br i1 %cmp361, label %cond.true363, label %cond.false375

cond.true363:                                     ; preds = %lor.lhs.false358, %cond.false353
  %164 = load i8*, i8** %pat, align 8
  %arrayidx364 = getelementptr inbounds i8, i8* %164, i64 1
  %165 = load i8, i8* %arrayidx364, align 1
  %conv365 = zext i8 %165 to i32
  %cmp366 = icmp eq i32 204, %conv365
  br i1 %cmp366, label %land.lhs.true368, label %cond.false374

land.lhs.true368:                                 ; preds = %cond.true363
  %166 = load i8*, i8** %pat, align 8
  %arrayidx369 = getelementptr inbounds i8, i8* %166, i64 2
  %167 = load i8, i8* %arrayidx369, align 1
  %conv370 = zext i8 %167 to i32
  %cmp371 = icmp eq i32 138, %conv370
  br i1 %cmp371, label %cond.true373, label %cond.false374

cond.true373:                                     ; preds = %land.lhs.true368
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false374:                                    ; preds = %land.lhs.true368, %cond.true363
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false375:                                    ; preds = %lor.lhs.false358
  %168 = load i8*, i8** %pat, align 8
  %arrayidx376 = getelementptr inbounds i8, i8* %168, i64 0
  %169 = load i8, i8* %arrayidx376, align 1
  %conv377 = zext i8 %169 to i32
  %cmp378 = icmp eq i32 197, %conv377
  br i1 %cmp378, label %cond.true380, label %cond.false397

cond.true380:                                     ; preds = %cond.false375
  %170 = load i8*, i8** %pat, align 8
  %arrayidx381 = getelementptr inbounds i8, i8* %170, i64 1
  %171 = load i8, i8* %arrayidx381, align 1
  %conv382 = zext i8 %171 to i32
  %cmp383 = icmp eq i32 191, %conv382
  br i1 %cmp383, label %land.lhs.true385, label %cond.false396

land.lhs.true385:                                 ; preds = %cond.true380
  %172 = load i8*, i8** %pat, align 8
  %arrayidx386 = getelementptr inbounds i8, i8* %172, i64 2
  %173 = load i8, i8* %arrayidx386, align 1
  %conv387 = zext i8 %173 to i32
  %cmp388 = icmp eq i32 197, %conv387
  br i1 %cmp388, label %land.lhs.true390, label %cond.false396

land.lhs.true390:                                 ; preds = %land.lhs.true385
  %174 = load i8*, i8** %pat, align 8
  %arrayidx391 = getelementptr inbounds i8, i8* %174, i64 3
  %175 = load i8, i8* %arrayidx391, align 1
  %conv392 = zext i8 %175 to i32
  %cmp393 = icmp eq i32 191, %conv392
  br i1 %cmp393, label %cond.true395, label %cond.false396

cond.true395:                                     ; preds = %land.lhs.true390
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false396:                                    ; preds = %land.lhs.true390, %land.lhs.true385, %cond.true380
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false397:                                    ; preds = %cond.false375
  %176 = load i8*, i8** %pat, align 8
  %arrayidx398 = getelementptr inbounds i8, i8* %176, i64 0
  %177 = load i8, i8* %arrayidx398, align 1
  %conv399 = zext i8 %177 to i32
  %cmp400 = icmp eq i32 202, %conv399
  br i1 %cmp400, label %cond.true402, label %cond.false414

cond.true402:                                     ; preds = %cond.false397
  %178 = load i8*, i8** %pat, align 8
  %arrayidx403 = getelementptr inbounds i8, i8* %178, i64 1
  %179 = load i8, i8* %arrayidx403, align 1
  %conv404 = zext i8 %179 to i32
  %cmp405 = icmp eq i32 188, %conv404
  br i1 %cmp405, label %land.lhs.true407, label %cond.false413

land.lhs.true407:                                 ; preds = %cond.true402
  %180 = load i8*, i8** %pat, align 8
  %arrayidx408 = getelementptr inbounds i8, i8* %180, i64 2
  %181 = load i8, i8* %arrayidx408, align 1
  %conv409 = zext i8 %181 to i32
  %cmp410 = icmp eq i32 110, %conv409
  br i1 %cmp410, label %cond.true412, label %cond.false413

cond.true412:                                     ; preds = %land.lhs.true407
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false413:                                    ; preds = %land.lhs.true407, %cond.true402
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false414:                                    ; preds = %cond.false397
  %182 = load i8*, i8** %pat, align 8
  %arrayidx415 = getelementptr inbounds i8, i8* %182, i64 0
  %183 = load i8, i8* %arrayidx415, align 1
  %conv416 = zext i8 %183 to i32
  %cmp417 = icmp eq i32 206, %conv416
  br i1 %cmp417, label %cond.true419, label %cond.false536

cond.true419:                                     ; preds = %cond.false414
  %184 = load i8*, i8** %pat, align 8
  %arrayidx420 = getelementptr inbounds i8, i8* %184, i64 1
  %185 = load i8, i8* %arrayidx420, align 1
  %conv421 = zext i8 %185 to i32
  %and422 = and i32 %conv421, 253
  %cmp423 = icmp eq i32 %and422, 172
  br i1 %cmp423, label %cond.true425, label %cond.false437

cond.true425:                                     ; preds = %cond.true419
  %186 = load i8*, i8** %pat, align 8
  %arrayidx426 = getelementptr inbounds i8, i8* %186, i64 2
  %187 = load i8, i8* %arrayidx426, align 1
  %conv427 = zext i8 %187 to i32
  %cmp428 = icmp eq i32 206, %conv427
  br i1 %cmp428, label %land.lhs.true430, label %cond.false436

land.lhs.true430:                                 ; preds = %cond.true425
  %188 = load i8*, i8** %pat, align 8
  %arrayidx431 = getelementptr inbounds i8, i8* %188, i64 3
  %189 = load i8, i8* %arrayidx431, align 1
  %conv432 = zext i8 %189 to i32
  %cmp433 = icmp eq i32 185, %conv432
  br i1 %cmp433, label %cond.true435, label %cond.false436

cond.true435:                                     ; preds = %land.lhs.true430
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false436:                                    ; preds = %land.lhs.true430, %cond.true425
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false437:                                    ; preds = %cond.true419
  %190 = load i8*, i8** %pat, align 8
  %arrayidx438 = getelementptr inbounds i8, i8* %190, i64 1
  %191 = load i8, i8* %arrayidx438, align 1
  %conv439 = zext i8 %191 to i32
  %cmp440 = icmp eq i32 177, %conv439
  br i1 %cmp440, label %cond.true447, label %lor.lhs.false442

lor.lhs.false442:                                 ; preds = %cond.false437
  %192 = load i8*, i8** %pat, align 8
  %arrayidx443 = getelementptr inbounds i8, i8* %192, i64 1
  %193 = load i8, i8* %arrayidx443, align 1
  %conv444 = zext i8 %193 to i32
  %cmp445 = icmp eq i32 183, %conv444
  br i1 %cmp445, label %cond.true447, label %cond.false482

cond.true447:                                     ; preds = %lor.lhs.false442, %cond.false437
  %194 = load i8*, i8** %pat, align 8
  %arrayidx448 = getelementptr inbounds i8, i8* %194, i64 2
  %195 = load i8, i8* %arrayidx448, align 1
  %conv449 = zext i8 %195 to i32
  %cmp450 = icmp eq i32 205, %conv449
  br i1 %cmp450, label %cond.true452, label %cond.false470

cond.true452:                                     ; preds = %cond.true447
  %196 = load i8*, i8** %pat, align 8
  %arrayidx453 = getelementptr inbounds i8, i8* %196, i64 3
  %197 = load i8, i8* %arrayidx453, align 1
  %conv454 = zext i8 %197 to i32
  %cmp455 = icmp eq i32 130, %conv454
  br i1 %cmp455, label %cond.true457, label %cond.false469

cond.true457:                                     ; preds = %cond.true452
  %198 = load i8*, i8** %pat, align 8
  %arrayidx458 = getelementptr inbounds i8, i8* %198, i64 4
  %199 = load i8, i8* %arrayidx458, align 1
  %conv459 = zext i8 %199 to i32
  %cmp460 = icmp eq i32 206, %conv459
  br i1 %cmp460, label %land.lhs.true462, label %cond.false468

land.lhs.true462:                                 ; preds = %cond.true457
  %200 = load i8*, i8** %pat, align 8
  %arrayidx463 = getelementptr inbounds i8, i8* %200, i64 5
  %201 = load i8, i8* %arrayidx463, align 1
  %conv464 = zext i8 %201 to i32
  %cmp465 = icmp eq i32 185, %conv464
  br i1 %cmp465, label %cond.true467, label %cond.false468

cond.true467:                                     ; preds = %land.lhs.true462
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false468:                                    ; preds = %land.lhs.true462, %cond.true457
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false469:                                    ; preds = %cond.true452
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false470:                                    ; preds = %cond.true447
  %202 = load i8*, i8** %pat, align 8
  %arrayidx471 = getelementptr inbounds i8, i8* %202, i64 2
  %203 = load i8, i8* %arrayidx471, align 1
  %conv472 = zext i8 %203 to i32
  %cmp473 = icmp eq i32 206, %conv472
  br i1 %cmp473, label %land.lhs.true475, label %cond.false481

land.lhs.true475:                                 ; preds = %cond.false470
  %204 = load i8*, i8** %pat, align 8
  %arrayidx476 = getelementptr inbounds i8, i8* %204, i64 3
  %205 = load i8, i8* %arrayidx476, align 1
  %conv477 = zext i8 %205 to i32
  %cmp478 = icmp eq i32 185, %conv477
  br i1 %cmp478, label %cond.true480, label %cond.false481

cond.true480:                                     ; preds = %land.lhs.true475
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false481:                                    ; preds = %land.lhs.true475, %cond.false470
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false482:                                    ; preds = %lor.lhs.false442
  %206 = load i8*, i8** %pat, align 8
  %arrayidx483 = getelementptr inbounds i8, i8* %206, i64 1
  %207 = load i8, i8* %arrayidx483, align 1
  %conv484 = zext i8 %207 to i32
  %cmp485 = icmp eq i32 185, %conv484
  br i1 %cmp485, label %cond.true487, label %cond.false535

cond.true487:                                     ; preds = %cond.false482
  %208 = load i8*, i8** %pat, align 8
  %arrayidx488 = getelementptr inbounds i8, i8* %208, i64 2
  %209 = load i8, i8* %arrayidx488, align 1
  %conv489 = zext i8 %209 to i32
  %cmp490 = icmp eq i32 204, %conv489
  br i1 %cmp490, label %cond.true492, label %cond.false523

cond.true492:                                     ; preds = %cond.true487
  %210 = load i8*, i8** %pat, align 8
  %arrayidx493 = getelementptr inbounds i8, i8* %210, i64 3
  %211 = load i8, i8* %arrayidx493, align 1
  %conv494 = zext i8 %211 to i32
  %cmp495 = icmp eq i32 136, %conv494
  br i1 %cmp495, label %cond.true497, label %cond.false522

cond.true497:                                     ; preds = %cond.true492
  %212 = load i8*, i8** %pat, align 8
  %arrayidx498 = getelementptr inbounds i8, i8* %212, i64 4
  %213 = load i8, i8* %arrayidx498, align 1
  %conv499 = zext i8 %213 to i32
  %cmp500 = icmp eq i32 204, %conv499
  br i1 %cmp500, label %cond.true502, label %cond.false510

cond.true502:                                     ; preds = %cond.true497
  %214 = load i8*, i8** %pat, align 8
  %arrayidx503 = getelementptr inbounds i8, i8* %214, i64 5
  %215 = load i8, i8* %arrayidx503, align 1
  %conv504 = zext i8 %215 to i32
  %and505 = and i32 %conv504, 254
  %cmp506 = icmp eq i32 %and505, 128
  br i1 %cmp506, label %cond.true508, label %cond.false509

cond.true508:                                     ; preds = %cond.true502
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false509:                                    ; preds = %cond.true502
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false510:                                    ; preds = %cond.true497
  %216 = load i8*, i8** %pat, align 8
  %arrayidx511 = getelementptr inbounds i8, i8* %216, i64 4
  %217 = load i8, i8* %arrayidx511, align 1
  %conv512 = zext i8 %217 to i32
  %cmp513 = icmp eq i32 205, %conv512
  br i1 %cmp513, label %land.lhs.true515, label %cond.false521

land.lhs.true515:                                 ; preds = %cond.false510
  %218 = load i8*, i8** %pat, align 8
  %arrayidx516 = getelementptr inbounds i8, i8* %218, i64 5
  %219 = load i8, i8* %arrayidx516, align 1
  %conv517 = zext i8 %219 to i32
  %cmp518 = icmp eq i32 130, %conv517
  br i1 %cmp518, label %cond.true520, label %cond.false521

cond.true520:                                     ; preds = %land.lhs.true515
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false521:                                    ; preds = %land.lhs.true515, %cond.false510
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false522:                                    ; preds = %cond.true492
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false523:                                    ; preds = %cond.true487
  %220 = load i8*, i8** %pat, align 8
  %arrayidx524 = getelementptr inbounds i8, i8* %220, i64 2
  %221 = load i8, i8* %arrayidx524, align 1
  %conv525 = zext i8 %221 to i32
  %cmp526 = icmp eq i32 205, %conv525
  br i1 %cmp526, label %land.lhs.true528, label %cond.false534

land.lhs.true528:                                 ; preds = %cond.false523
  %222 = load i8*, i8** %pat, align 8
  %arrayidx529 = getelementptr inbounds i8, i8* %222, i64 3
  %223 = load i8, i8* %arrayidx529, align 1
  %conv530 = zext i8 %223 to i32
  %cmp531 = icmp eq i32 130, %conv530
  br i1 %cmp531, label %cond.true533, label %cond.false534

cond.true533:                                     ; preds = %land.lhs.true528
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false534:                                    ; preds = %land.lhs.true528, %cond.false523
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false535:                                    ; preds = %cond.false482
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false536:                                    ; preds = %cond.false414
  %224 = load i8*, i8** %pat, align 8
  %arrayidx537 = getelementptr inbounds i8, i8* %224, i64 0
  %225 = load i8, i8* %arrayidx537, align 1
  %conv538 = zext i8 %225 to i32
  %cmp539 = icmp eq i32 207, %conv538
  br i1 %cmp539, label %cond.true541, label %cond.false698

cond.true541:                                     ; preds = %cond.false536
  %226 = load i8*, i8** %pat, align 8
  %arrayidx542 = getelementptr inbounds i8, i8* %226, i64 1
  %227 = load i8, i8* %arrayidx542, align 1
  %conv543 = zext i8 %227 to i32
  %cmp544 = icmp eq i32 129, %conv543
  br i1 %cmp544, label %cond.true546, label %cond.false558

cond.true546:                                     ; preds = %cond.true541
  %228 = load i8*, i8** %pat, align 8
  %arrayidx547 = getelementptr inbounds i8, i8* %228, i64 2
  %229 = load i8, i8* %arrayidx547, align 1
  %conv548 = zext i8 %229 to i32
  %cmp549 = icmp eq i32 204, %conv548
  br i1 %cmp549, label %land.lhs.true551, label %cond.false557

land.lhs.true551:                                 ; preds = %cond.true546
  %230 = load i8*, i8** %pat, align 8
  %arrayidx552 = getelementptr inbounds i8, i8* %230, i64 3
  %231 = load i8, i8* %arrayidx552, align 1
  %conv553 = zext i8 %231 to i32
  %cmp554 = icmp eq i32 147, %conv553
  br i1 %cmp554, label %cond.true556, label %cond.false557

cond.true556:                                     ; preds = %land.lhs.true551
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false557:                                    ; preds = %land.lhs.true551, %cond.true546
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false558:                                    ; preds = %cond.true541
  %232 = load i8*, i8** %pat, align 8
  %arrayidx559 = getelementptr inbounds i8, i8* %232, i64 1
  %233 = load i8, i8* %arrayidx559, align 1
  %conv560 = zext i8 %233 to i32
  %cmp561 = icmp eq i32 133, %conv560
  br i1 %cmp561, label %cond.true563, label %cond.false641

cond.true563:                                     ; preds = %cond.false558
  %234 = load i8*, i8** %pat, align 8
  %arrayidx564 = getelementptr inbounds i8, i8* %234, i64 2
  %235 = load i8, i8* %arrayidx564, align 1
  %conv565 = zext i8 %235 to i32
  %cmp566 = icmp eq i32 204, %conv565
  br i1 %cmp566, label %cond.true568, label %cond.false629

cond.true568:                                     ; preds = %cond.true563
  %236 = load i8*, i8** %pat, align 8
  %arrayidx569 = getelementptr inbounds i8, i8* %236, i64 3
  %237 = load i8, i8* %arrayidx569, align 1
  %conv570 = zext i8 %237 to i32
  %cmp571 = icmp eq i32 136, %conv570
  br i1 %cmp571, label %cond.true573, label %cond.false598

cond.true573:                                     ; preds = %cond.true568
  %238 = load i8*, i8** %pat, align 8
  %arrayidx574 = getelementptr inbounds i8, i8* %238, i64 4
  %239 = load i8, i8* %arrayidx574, align 1
  %conv575 = zext i8 %239 to i32
  %cmp576 = icmp eq i32 204, %conv575
  br i1 %cmp576, label %cond.true578, label %cond.false586

cond.true578:                                     ; preds = %cond.true573
  %240 = load i8*, i8** %pat, align 8
  %arrayidx579 = getelementptr inbounds i8, i8* %240, i64 5
  %241 = load i8, i8* %arrayidx579, align 1
  %conv580 = zext i8 %241 to i32
  %and581 = and i32 %conv580, 254
  %cmp582 = icmp eq i32 %and581, 128
  br i1 %cmp582, label %cond.true584, label %cond.false585

cond.true584:                                     ; preds = %cond.true578
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false585:                                    ; preds = %cond.true578
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false586:                                    ; preds = %cond.true573
  %242 = load i8*, i8** %pat, align 8
  %arrayidx587 = getelementptr inbounds i8, i8* %242, i64 4
  %243 = load i8, i8* %arrayidx587, align 1
  %conv588 = zext i8 %243 to i32
  %cmp589 = icmp eq i32 205, %conv588
  br i1 %cmp589, label %land.lhs.true591, label %cond.false597

land.lhs.true591:                                 ; preds = %cond.false586
  %244 = load i8*, i8** %pat, align 8
  %arrayidx592 = getelementptr inbounds i8, i8* %244, i64 5
  %245 = load i8, i8* %arrayidx592, align 1
  %conv593 = zext i8 %245 to i32
  %cmp594 = icmp eq i32 130, %conv593
  br i1 %cmp594, label %cond.true596, label %cond.false597

cond.true596:                                     ; preds = %land.lhs.true591
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false597:                                    ; preds = %land.lhs.true591, %cond.false586
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false598:                                    ; preds = %cond.true568
  %246 = load i8*, i8** %pat, align 8
  %arrayidx599 = getelementptr inbounds i8, i8* %246, i64 3
  %247 = load i8, i8* %arrayidx599, align 1
  %conv600 = zext i8 %247 to i32
  %cmp601 = icmp eq i32 147, %conv600
  br i1 %cmp601, label %cond.true603, label %cond.false628

cond.true603:                                     ; preds = %cond.false598
  %248 = load i8*, i8** %pat, align 8
  %arrayidx604 = getelementptr inbounds i8, i8* %248, i64 4
  %249 = load i8, i8* %arrayidx604, align 1
  %conv605 = zext i8 %249 to i32
  %cmp606 = icmp eq i32 204, %conv605
  br i1 %cmp606, label %cond.true608, label %cond.false616

cond.true608:                                     ; preds = %cond.true603
  %250 = load i8*, i8** %pat, align 8
  %arrayidx609 = getelementptr inbounds i8, i8* %250, i64 5
  %251 = load i8, i8* %arrayidx609, align 1
  %conv610 = zext i8 %251 to i32
  %and611 = and i32 %conv610, 254
  %cmp612 = icmp eq i32 %and611, 128
  br i1 %cmp612, label %cond.true614, label %cond.false615

cond.true614:                                     ; preds = %cond.true608
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false615:                                    ; preds = %cond.true608
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false616:                                    ; preds = %cond.true603
  %252 = load i8*, i8** %pat, align 8
  %arrayidx617 = getelementptr inbounds i8, i8* %252, i64 4
  %253 = load i8, i8* %arrayidx617, align 1
  %conv618 = zext i8 %253 to i32
  %cmp619 = icmp eq i32 205, %conv618
  br i1 %cmp619, label %land.lhs.true621, label %cond.false627

land.lhs.true621:                                 ; preds = %cond.false616
  %254 = load i8*, i8** %pat, align 8
  %arrayidx622 = getelementptr inbounds i8, i8* %254, i64 5
  %255 = load i8, i8* %arrayidx622, align 1
  %conv623 = zext i8 %255 to i32
  %cmp624 = icmp eq i32 130, %conv623
  br i1 %cmp624, label %cond.true626, label %cond.false627

cond.true626:                                     ; preds = %land.lhs.true621
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false627:                                    ; preds = %land.lhs.true621, %cond.false616
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false628:                                    ; preds = %cond.false598
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false629:                                    ; preds = %cond.true563
  %256 = load i8*, i8** %pat, align 8
  %arrayidx630 = getelementptr inbounds i8, i8* %256, i64 2
  %257 = load i8, i8* %arrayidx630, align 1
  %conv631 = zext i8 %257 to i32
  %cmp632 = icmp eq i32 205, %conv631
  br i1 %cmp632, label %land.lhs.true634, label %cond.false640

land.lhs.true634:                                 ; preds = %cond.false629
  %258 = load i8*, i8** %pat, align 8
  %arrayidx635 = getelementptr inbounds i8, i8* %258, i64 3
  %259 = load i8, i8* %arrayidx635, align 1
  %conv636 = zext i8 %259 to i32
  %cmp637 = icmp eq i32 130, %conv636
  br i1 %cmp637, label %cond.true639, label %cond.false640

cond.true639:                                     ; preds = %land.lhs.true634
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false640:                                    ; preds = %land.lhs.true634, %cond.false629
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false641:                                    ; preds = %cond.false558
  %260 = load i8*, i8** %pat, align 8
  %arrayidx642 = getelementptr inbounds i8, i8* %260, i64 1
  %261 = load i8, i8* %arrayidx642, align 1
  %conv643 = zext i8 %261 to i32
  %cmp644 = icmp eq i32 137, %conv643
  br i1 %cmp644, label %cond.true646, label %cond.false681

cond.true646:                                     ; preds = %cond.false641
  %262 = load i8*, i8** %pat, align 8
  %arrayidx647 = getelementptr inbounds i8, i8* %262, i64 2
  %263 = load i8, i8* %arrayidx647, align 1
  %conv648 = zext i8 %263 to i32
  %cmp649 = icmp eq i32 205, %conv648
  br i1 %cmp649, label %cond.true651, label %cond.false669

cond.true651:                                     ; preds = %cond.true646
  %264 = load i8*, i8** %pat, align 8
  %arrayidx652 = getelementptr inbounds i8, i8* %264, i64 3
  %265 = load i8, i8* %arrayidx652, align 1
  %conv653 = zext i8 %265 to i32
  %cmp654 = icmp eq i32 130, %conv653
  br i1 %cmp654, label %cond.true656, label %cond.false668

cond.true656:                                     ; preds = %cond.true651
  %266 = load i8*, i8** %pat, align 8
  %arrayidx657 = getelementptr inbounds i8, i8* %266, i64 4
  %267 = load i8, i8* %arrayidx657, align 1
  %conv658 = zext i8 %267 to i32
  %cmp659 = icmp eq i32 206, %conv658
  br i1 %cmp659, label %land.lhs.true661, label %cond.false667

land.lhs.true661:                                 ; preds = %cond.true656
  %268 = load i8*, i8** %pat, align 8
  %arrayidx662 = getelementptr inbounds i8, i8* %268, i64 5
  %269 = load i8, i8* %arrayidx662, align 1
  %conv663 = zext i8 %269 to i32
  %cmp664 = icmp eq i32 185, %conv663
  br i1 %cmp664, label %cond.true666, label %cond.false667

cond.true666:                                     ; preds = %land.lhs.true661
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false667:                                    ; preds = %land.lhs.true661, %cond.true656
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false668:                                    ; preds = %cond.true651
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false669:                                    ; preds = %cond.true646
  %270 = load i8*, i8** %pat, align 8
  %arrayidx670 = getelementptr inbounds i8, i8* %270, i64 2
  %271 = load i8, i8* %arrayidx670, align 1
  %conv671 = zext i8 %271 to i32
  %cmp672 = icmp eq i32 206, %conv671
  br i1 %cmp672, label %land.lhs.true674, label %cond.false680

land.lhs.true674:                                 ; preds = %cond.false669
  %272 = load i8*, i8** %pat, align 8
  %arrayidx675 = getelementptr inbounds i8, i8* %272, i64 3
  %273 = load i8, i8* %arrayidx675, align 1
  %conv676 = zext i8 %273 to i32
  %cmp677 = icmp eq i32 185, %conv676
  br i1 %cmp677, label %cond.true679, label %cond.false680

cond.true679:                                     ; preds = %land.lhs.true674
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false680:                                    ; preds = %land.lhs.true674, %cond.false669
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false681:                                    ; preds = %cond.false641
  %274 = load i8*, i8** %pat, align 8
  %arrayidx682 = getelementptr inbounds i8, i8* %274, i64 1
  %275 = load i8, i8* %arrayidx682, align 1
  %conv683 = zext i8 %275 to i32
  %cmp684 = icmp eq i32 142, %conv683
  br i1 %cmp684, label %land.lhs.true686, label %cond.false697

land.lhs.true686:                                 ; preds = %cond.false681
  %276 = load i8*, i8** %pat, align 8
  %arrayidx687 = getelementptr inbounds i8, i8* %276, i64 2
  %277 = load i8, i8* %arrayidx687, align 1
  %conv688 = zext i8 %277 to i32
  %cmp689 = icmp eq i32 206, %conv688
  br i1 %cmp689, label %land.lhs.true691, label %cond.false697

land.lhs.true691:                                 ; preds = %land.lhs.true686
  %278 = load i8*, i8** %pat, align 8
  %arrayidx692 = getelementptr inbounds i8, i8* %278, i64 3
  %279 = load i8, i8* %arrayidx692, align 1
  %conv693 = zext i8 %279 to i32
  %cmp694 = icmp eq i32 185, %conv693
  br i1 %cmp694, label %cond.true696, label %cond.false697

cond.true696:                                     ; preds = %land.lhs.true691
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false697:                                    ; preds = %land.lhs.true691, %land.lhs.true686, %cond.false681
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false698:                                    ; preds = %cond.false536
  %280 = load i8*, i8** %pat, align 8
  %arrayidx699 = getelementptr inbounds i8, i8* %280, i64 0
  %281 = load i8, i8* %arrayidx699, align 1
  %conv700 = zext i8 %281 to i32
  %cmp701 = icmp eq i32 213, %conv700
  br i1 %cmp701, label %cond.true703, label %cond.false765

cond.true703:                                     ; preds = %cond.false698
  %282 = load i8*, i8** %pat, align 8
  %arrayidx704 = getelementptr inbounds i8, i8* %282, i64 1
  %283 = load i8, i8* %arrayidx704, align 1
  %conv705 = zext i8 %283 to i32
  %cmp706 = icmp eq i32 165, %conv705
  br i1 %cmp706, label %cond.true708, label %cond.false720

cond.true708:                                     ; preds = %cond.true703
  %284 = load i8*, i8** %pat, align 8
  %arrayidx709 = getelementptr inbounds i8, i8* %284, i64 2
  %285 = load i8, i8* %arrayidx709, align 1
  %conv710 = zext i8 %285 to i32
  %cmp711 = icmp eq i32 214, %conv710
  br i1 %cmp711, label %land.lhs.true713, label %cond.false719

land.lhs.true713:                                 ; preds = %cond.true708
  %286 = load i8*, i8** %pat, align 8
  %arrayidx714 = getelementptr inbounds i8, i8* %286, i64 3
  %287 = load i8, i8* %arrayidx714, align 1
  %conv715 = zext i8 %287 to i32
  %cmp716 = icmp eq i32 130, %conv715
  br i1 %cmp716, label %cond.true718, label %cond.false719

cond.true718:                                     ; preds = %land.lhs.true713
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false719:                                    ; preds = %land.lhs.true713, %cond.true708
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false720:                                    ; preds = %cond.true703
  %288 = load i8*, i8** %pat, align 8
  %arrayidx721 = getelementptr inbounds i8, i8* %288, i64 1
  %289 = load i8, i8* %arrayidx721, align 1
  %conv722 = zext i8 %289 to i32
  %cmp723 = icmp eq i32 180, %conv722
  br i1 %cmp723, label %cond.true725, label %cond.false748

cond.true725:                                     ; preds = %cond.false720
  %290 = load i8*, i8** %pat, align 8
  %arrayidx726 = getelementptr inbounds i8, i8* %290, i64 2
  %291 = load i8, i8* %arrayidx726, align 1
  %conv727 = zext i8 %291 to i32
  %cmp728 = icmp eq i32 213, %conv727
  br i1 %cmp728, label %land.lhs.true730, label %cond.false747

land.lhs.true730:                                 ; preds = %cond.true725
  %292 = load i8*, i8** %pat, align 8
  %arrayidx731 = getelementptr inbounds i8, i8* %292, i64 3
  %293 = load i8, i8* %arrayidx731, align 1
  %conv732 = zext i8 %293 to i32
  %and733 = and i32 %conv732, 247
  %cmp734 = icmp eq i32 %and733, 165
  br i1 %cmp734, label %cond.true746, label %lor.lhs.false736

lor.lhs.false736:                                 ; preds = %land.lhs.true730
  %294 = load i8*, i8** %pat, align 8
  %arrayidx737 = getelementptr inbounds i8, i8* %294, i64 3
  %295 = load i8, i8* %arrayidx737, align 1
  %conv738 = zext i8 %295 to i32
  %cmp739 = icmp eq i32 %conv738, 171
  br i1 %cmp739, label %cond.true746, label %lor.lhs.false741

lor.lhs.false741:                                 ; preds = %lor.lhs.false736
  %296 = load i8*, i8** %pat, align 8
  %arrayidx742 = getelementptr inbounds i8, i8* %296, i64 3
  %297 = load i8, i8* %arrayidx742, align 1
  %conv743 = zext i8 %297 to i32
  %cmp744 = icmp eq i32 %conv743, 182
  br i1 %cmp744, label %cond.true746, label %cond.false747

cond.true746:                                     ; preds = %lor.lhs.false741, %lor.lhs.false736, %land.lhs.true730
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false747:                                    ; preds = %lor.lhs.false741, %cond.true725
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false748:                                    ; preds = %cond.false720
  %298 = load i8*, i8** %pat, align 8
  %arrayidx749 = getelementptr inbounds i8, i8* %298, i64 1
  %299 = load i8, i8* %arrayidx749, align 1
  %conv750 = zext i8 %299 to i32
  %cmp751 = icmp eq i32 190, %conv750
  br i1 %cmp751, label %land.lhs.true753, label %cond.false764

land.lhs.true753:                                 ; preds = %cond.false748
  %300 = load i8*, i8** %pat, align 8
  %arrayidx754 = getelementptr inbounds i8, i8* %300, i64 2
  %301 = load i8, i8* %arrayidx754, align 1
  %conv755 = zext i8 %301 to i32
  %cmp756 = icmp eq i32 213, %conv755
  br i1 %cmp756, label %land.lhs.true758, label %cond.false764

land.lhs.true758:                                 ; preds = %land.lhs.true753
  %302 = load i8*, i8** %pat, align 8
  %arrayidx759 = getelementptr inbounds i8, i8* %302, i64 3
  %303 = load i8, i8* %arrayidx759, align 1
  %conv760 = zext i8 %303 to i32
  %cmp761 = icmp eq i32 182, %conv760
  br i1 %cmp761, label %cond.true763, label %cond.false764

cond.true763:                                     ; preds = %land.lhs.true758
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false764:                                    ; preds = %land.lhs.true758, %land.lhs.true753, %cond.false748
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false765:                                    ; preds = %cond.false698
  %304 = load i8*, i8** %pat, align 8
  %arrayidx766 = getelementptr inbounds i8, i8* %304, i64 0
  %305 = load i8, i8* %arrayidx766, align 1
  %conv767 = zext i8 %305 to i32
  %cmp768 = icmp eq i32 225, %conv767
  br i1 %cmp768, label %cond.true770, label %cond.false827

cond.true770:                                     ; preds = %cond.false765
  %306 = load i8*, i8** %pat, align 8
  %arrayidx771 = getelementptr inbounds i8, i8* %306, i64 1
  %307 = load i8, i8* %arrayidx771, align 1
  %conv772 = zext i8 %307 to i32
  %cmp773 = icmp eq i32 188, %conv772
  br i1 %cmp773, label %cond.true775, label %cond.false793

cond.true775:                                     ; preds = %cond.true770
  %308 = load i8*, i8** %pat, align 8
  %arrayidx776 = getelementptr inbounds i8, i8* %308, i64 2
  %309 = load i8, i8* %arrayidx776, align 1
  %conv777 = zext i8 %309 to i32
  %and778 = and i32 %conv777, 216
  %cmp779 = icmp eq i32 %and778, 128
  br i1 %cmp779, label %land.lhs.true781, label %cond.false792

land.lhs.true781:                                 ; preds = %cond.true775
  %310 = load i8*, i8** %pat, align 8
  %arrayidx782 = getelementptr inbounds i8, i8* %310, i64 3
  %311 = load i8, i8* %arrayidx782, align 1
  %conv783 = zext i8 %311 to i32
  %cmp784 = icmp eq i32 206, %conv783
  br i1 %cmp784, label %land.lhs.true786, label %cond.false792

land.lhs.true786:                                 ; preds = %land.lhs.true781
  %312 = load i8*, i8** %pat, align 8
  %arrayidx787 = getelementptr inbounds i8, i8* %312, i64 4
  %313 = load i8, i8* %arrayidx787, align 1
  %conv788 = zext i8 %313 to i32
  %cmp789 = icmp eq i32 185, %conv788
  br i1 %cmp789, label %cond.true791, label %cond.false792

cond.true791:                                     ; preds = %land.lhs.true786
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false792:                                    ; preds = %land.lhs.true786, %land.lhs.true781, %cond.true775
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false793:                                    ; preds = %cond.true770
  %314 = load i8*, i8** %pat, align 8
  %arrayidx794 = getelementptr inbounds i8, i8* %314, i64 1
  %315 = load i8, i8* %arrayidx794, align 1
  %conv795 = zext i8 %315 to i32
  %cmp796 = icmp eq i32 189, %conv795
  br i1 %cmp796, label %land.lhs.true798, label %cond.false826

land.lhs.true798:                                 ; preds = %cond.false793
  %316 = load i8*, i8** %pat, align 8
  %arrayidx799 = getelementptr inbounds i8, i8* %316, i64 2
  %317 = load i8, i8* %arrayidx799, align 1
  %conv800 = zext i8 %317 to i32
  %and801 = and i32 %conv800, 248
  %cmp802 = icmp eq i32 %and801, 160
  br i1 %cmp802, label %land.lhs.true815, label %lor.lhs.false804

lor.lhs.false804:                                 ; preds = %land.lhs.true798
  %318 = load i8*, i8** %pat, align 8
  %arrayidx805 = getelementptr inbounds i8, i8* %318, i64 2
  %319 = load i8, i8* %arrayidx805, align 1
  %conv806 = zext i8 %319 to i32
  %and807 = and i32 %conv806, 251
  %cmp808 = icmp eq i32 %and807, 176
  br i1 %cmp808, label %land.lhs.true815, label %lor.lhs.false810

lor.lhs.false810:                                 ; preds = %lor.lhs.false804
  %320 = load i8*, i8** %pat, align 8
  %arrayidx811 = getelementptr inbounds i8, i8* %320, i64 2
  %321 = load i8, i8* %arrayidx811, align 1
  %conv812 = zext i8 %321 to i32
  %cmp813 = icmp eq i32 %conv812, 188
  br i1 %cmp813, label %land.lhs.true815, label %cond.false826

land.lhs.true815:                                 ; preds = %lor.lhs.false810, %lor.lhs.false804, %land.lhs.true798
  %322 = load i8*, i8** %pat, align 8
  %arrayidx816 = getelementptr inbounds i8, i8* %322, i64 3
  %323 = load i8, i8* %arrayidx816, align 1
  %conv817 = zext i8 %323 to i32
  %cmp818 = icmp eq i32 206, %conv817
  br i1 %cmp818, label %land.lhs.true820, label %cond.false826

land.lhs.true820:                                 ; preds = %land.lhs.true815
  %324 = load i8*, i8** %pat, align 8
  %arrayidx821 = getelementptr inbounds i8, i8* %324, i64 4
  %325 = load i8, i8* %arrayidx821, align 1
  %conv822 = zext i8 %325 to i32
  %cmp823 = icmp eq i32 185, %conv822
  br i1 %cmp823, label %cond.true825, label %cond.false826

cond.true825:                                     ; preds = %land.lhs.true820
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false826:                                    ; preds = %land.lhs.true820, %land.lhs.true815, %lor.lhs.false810, %cond.false793
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false827:                                    ; preds = %cond.false765
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false828:                                    ; preds = %land.lhs.true214
  %326 = load i8*, i8** %pat_end, align 8
  %327 = load i8*, i8** %pat, align 8
  %sub.ptr.lhs.cast829 = ptrtoint i8* %326 to i64
  %sub.ptr.rhs.cast830 = ptrtoint i8* %327 to i64
  %sub.ptr.sub831 = sub i64 %sub.ptr.lhs.cast829, %sub.ptr.rhs.cast830
  %cmp832 = icmp sgt i64 %sub.ptr.sub831, 4
  br i1 %cmp832, label %cond.true834, label %cond.false1332

cond.true834:                                     ; preds = %cond.false828
  %328 = load i8*, i8** %pat, align 8
  %arrayidx835 = getelementptr inbounds i8, i8* %328, i64 0
  %329 = load i8, i8* %arrayidx835, align 1
  %conv836 = zext i8 %329 to i32
  %cmp837 = icmp eq i32 97, %conv836
  br i1 %cmp837, label %cond.true839, label %cond.false851

cond.true839:                                     ; preds = %cond.true834
  %330 = load i8*, i8** %pat, align 8
  %arrayidx840 = getelementptr inbounds i8, i8* %330, i64 1
  %331 = load i8, i8* %arrayidx840, align 1
  %conv841 = zext i8 %331 to i32
  %cmp842 = icmp eq i32 202, %conv841
  br i1 %cmp842, label %land.lhs.true844, label %cond.false850

land.lhs.true844:                                 ; preds = %cond.true839
  %332 = load i8*, i8** %pat, align 8
  %arrayidx845 = getelementptr inbounds i8, i8* %332, i64 2
  %333 = load i8, i8* %arrayidx845, align 1
  %conv846 = zext i8 %333 to i32
  %cmp847 = icmp eq i32 190, %conv846
  br i1 %cmp847, label %cond.true849, label %cond.false850

cond.true849:                                     ; preds = %land.lhs.true844
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false850:                                    ; preds = %land.lhs.true844, %cond.true839
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false851:                                    ; preds = %cond.true834
  %334 = load i8*, i8** %pat, align 8
  %arrayidx852 = getelementptr inbounds i8, i8* %334, i64 0
  %335 = load i8, i8* %arrayidx852, align 1
  %conv853 = zext i8 %335 to i32
  %cmp854 = icmp eq i32 102, %conv853
  br i1 %cmp854, label %cond.true856, label %cond.false885

cond.true856:                                     ; preds = %cond.false851
  %336 = load i8*, i8** %pat, align 8
  %arrayidx857 = getelementptr inbounds i8, i8* %336, i64 1
  %337 = load i8, i8* %arrayidx857, align 1
  %conv858 = zext i8 %337 to i32
  %cmp859 = icmp eq i32 102, %conv858
  br i1 %cmp859, label %cond.true861, label %cond.false873

cond.true861:                                     ; preds = %cond.true856
  %338 = load i8*, i8** %pat, align 8
  %arrayidx862 = getelementptr inbounds i8, i8* %338, i64 2
  %339 = load i8, i8* %arrayidx862, align 1
  %conv863 = zext i8 %339 to i32
  %cmp864 = icmp eq i32 105, %conv863
  br i1 %cmp864, label %cond.true871, label %lor.lhs.false866

lor.lhs.false866:                                 ; preds = %cond.true861
  %340 = load i8*, i8** %pat, align 8
  %arrayidx867 = getelementptr inbounds i8, i8* %340, i64 2
  %341 = load i8, i8* %arrayidx867, align 1
  %conv868 = zext i8 %341 to i32
  %cmp869 = icmp eq i32 108, %conv868
  br i1 %cmp869, label %cond.true871, label %cond.false872

cond.true871:                                     ; preds = %lor.lhs.false866, %cond.true861
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false872:                                    ; preds = %lor.lhs.false866
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false873:                                    ; preds = %cond.true856
  %342 = load i8*, i8** %pat, align 8
  %arrayidx874 = getelementptr inbounds i8, i8* %342, i64 1
  %343 = load i8, i8* %arrayidx874, align 1
  %conv875 = zext i8 %343 to i32
  %cmp876 = icmp eq i32 105, %conv875
  br i1 %cmp876, label %cond.true883, label %lor.lhs.false878

lor.lhs.false878:                                 ; preds = %cond.false873
  %344 = load i8*, i8** %pat, align 8
  %arrayidx879 = getelementptr inbounds i8, i8* %344, i64 1
  %345 = load i8, i8* %arrayidx879, align 1
  %conv880 = zext i8 %345 to i32
  %cmp881 = icmp eq i32 108, %conv880
  br i1 %cmp881, label %cond.true883, label %cond.false884

cond.true883:                                     ; preds = %lor.lhs.false878, %cond.false873
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false884:                                    ; preds = %lor.lhs.false878
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false885:                                    ; preds = %cond.false851
  %346 = load i8*, i8** %pat, align 8
  %arrayidx886 = getelementptr inbounds i8, i8* %346, i64 0
  %347 = load i8, i8* %arrayidx886, align 1
  %conv887 = zext i8 %347 to i32
  %cmp888 = icmp eq i32 104, %conv887
  br i1 %cmp888, label %cond.true890, label %cond.false902

cond.true890:                                     ; preds = %cond.false885
  %348 = load i8*, i8** %pat, align 8
  %arrayidx891 = getelementptr inbounds i8, i8* %348, i64 1
  %349 = load i8, i8* %arrayidx891, align 1
  %conv892 = zext i8 %349 to i32
  %cmp893 = icmp eq i32 204, %conv892
  br i1 %cmp893, label %land.lhs.true895, label %cond.false901

land.lhs.true895:                                 ; preds = %cond.true890
  %350 = load i8*, i8** %pat, align 8
  %arrayidx896 = getelementptr inbounds i8, i8* %350, i64 2
  %351 = load i8, i8* %arrayidx896, align 1
  %conv897 = zext i8 %351 to i32
  %cmp898 = icmp eq i32 177, %conv897
  br i1 %cmp898, label %cond.true900, label %cond.false901

cond.true900:                                     ; preds = %land.lhs.true895
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false901:                                    ; preds = %land.lhs.true895, %cond.true890
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false902:                                    ; preds = %cond.false885
  %352 = load i8*, i8** %pat, align 8
  %arrayidx903 = getelementptr inbounds i8, i8* %352, i64 0
  %353 = load i8, i8* %arrayidx903, align 1
  %conv904 = zext i8 %353 to i32
  %cmp905 = icmp eq i32 105, %conv904
  br i1 %cmp905, label %cond.true907, label %cond.false919

cond.true907:                                     ; preds = %cond.false902
  %354 = load i8*, i8** %pat, align 8
  %arrayidx908 = getelementptr inbounds i8, i8* %354, i64 1
  %355 = load i8, i8* %arrayidx908, align 1
  %conv909 = zext i8 %355 to i32
  %cmp910 = icmp eq i32 204, %conv909
  br i1 %cmp910, label %land.lhs.true912, label %cond.false918

land.lhs.true912:                                 ; preds = %cond.true907
  %356 = load i8*, i8** %pat, align 8
  %arrayidx913 = getelementptr inbounds i8, i8* %356, i64 2
  %357 = load i8, i8* %arrayidx913, align 1
  %conv914 = zext i8 %357 to i32
  %cmp915 = icmp eq i32 135, %conv914
  br i1 %cmp915, label %cond.true917, label %cond.false918

cond.true917:                                     ; preds = %land.lhs.true912
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false918:                                    ; preds = %land.lhs.true912, %cond.true907
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false919:                                    ; preds = %cond.false902
  %358 = load i8*, i8** %pat, align 8
  %arrayidx920 = getelementptr inbounds i8, i8* %358, i64 0
  %359 = load i8, i8* %arrayidx920, align 1
  %conv921 = zext i8 %359 to i32
  %cmp922 = icmp eq i32 106, %conv921
  br i1 %cmp922, label %cond.true924, label %cond.false936

cond.true924:                                     ; preds = %cond.false919
  %360 = load i8*, i8** %pat, align 8
  %arrayidx925 = getelementptr inbounds i8, i8* %360, i64 1
  %361 = load i8, i8* %arrayidx925, align 1
  %conv926 = zext i8 %361 to i32
  %cmp927 = icmp eq i32 204, %conv926
  br i1 %cmp927, label %land.lhs.true929, label %cond.false935

land.lhs.true929:                                 ; preds = %cond.true924
  %362 = load i8*, i8** %pat, align 8
  %arrayidx930 = getelementptr inbounds i8, i8* %362, i64 2
  %363 = load i8, i8* %arrayidx930, align 1
  %conv931 = zext i8 %363 to i32
  %cmp932 = icmp eq i32 140, %conv931
  br i1 %cmp932, label %cond.true934, label %cond.false935

cond.true934:                                     ; preds = %land.lhs.true929
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false935:                                    ; preds = %land.lhs.true929, %cond.true924
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false936:                                    ; preds = %cond.false919
  %364 = load i8*, i8** %pat, align 8
  %arrayidx937 = getelementptr inbounds i8, i8* %364, i64 0
  %365 = load i8, i8* %arrayidx937, align 1
  %conv938 = zext i8 %365 to i32
  %cmp939 = icmp eq i32 115, %conv938
  br i1 %cmp939, label %cond.true941, label %cond.false953

cond.true941:                                     ; preds = %cond.false936
  %366 = load i8*, i8** %pat, align 8
  %arrayidx942 = getelementptr inbounds i8, i8* %366, i64 1
  %367 = load i8, i8* %arrayidx942, align 1
  %conv943 = zext i8 %367 to i32
  %cmp944 = icmp eq i32 115, %conv943
  br i1 %cmp944, label %cond.true951, label %lor.lhs.false946

lor.lhs.false946:                                 ; preds = %cond.true941
  %368 = load i8*, i8** %pat, align 8
  %arrayidx947 = getelementptr inbounds i8, i8* %368, i64 1
  %369 = load i8, i8* %arrayidx947, align 1
  %conv948 = zext i8 %369 to i32
  %cmp949 = icmp eq i32 116, %conv948
  br i1 %cmp949, label %cond.true951, label %cond.false952

cond.true951:                                     ; preds = %lor.lhs.false946, %cond.true941
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false952:                                    ; preds = %lor.lhs.false946
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false953:                                    ; preds = %cond.false936
  %370 = load i8*, i8** %pat, align 8
  %arrayidx954 = getelementptr inbounds i8, i8* %370, i64 0
  %371 = load i8, i8* %arrayidx954, align 1
  %conv955 = zext i8 %371 to i32
  %cmp956 = icmp eq i32 116, %conv955
  br i1 %cmp956, label %cond.true958, label %cond.false970

cond.true958:                                     ; preds = %cond.false953
  %372 = load i8*, i8** %pat, align 8
  %arrayidx959 = getelementptr inbounds i8, i8* %372, i64 1
  %373 = load i8, i8* %arrayidx959, align 1
  %conv960 = zext i8 %373 to i32
  %cmp961 = icmp eq i32 204, %conv960
  br i1 %cmp961, label %land.lhs.true963, label %cond.false969

land.lhs.true963:                                 ; preds = %cond.true958
  %374 = load i8*, i8** %pat, align 8
  %arrayidx964 = getelementptr inbounds i8, i8* %374, i64 2
  %375 = load i8, i8* %arrayidx964, align 1
  %conv965 = zext i8 %375 to i32
  %cmp966 = icmp eq i32 136, %conv965
  br i1 %cmp966, label %cond.true968, label %cond.false969

cond.true968:                                     ; preds = %land.lhs.true963
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false969:                                    ; preds = %land.lhs.true963, %cond.true958
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false970:                                    ; preds = %cond.false953
  %376 = load i8*, i8** %pat, align 8
  %arrayidx971 = getelementptr inbounds i8, i8* %376, i64 0
  %377 = load i8, i8* %arrayidx971, align 1
  %conv972 = zext i8 %377 to i32
  %cmp973 = icmp eq i32 119, %conv972
  br i1 %cmp973, label %cond.true980, label %lor.lhs.false975

lor.lhs.false975:                                 ; preds = %cond.false970
  %378 = load i8*, i8** %pat, align 8
  %arrayidx976 = getelementptr inbounds i8, i8* %378, i64 0
  %379 = load i8, i8* %arrayidx976, align 1
  %conv977 = zext i8 %379 to i32
  %cmp978 = icmp eq i32 121, %conv977
  br i1 %cmp978, label %cond.true980, label %cond.false992

cond.true980:                                     ; preds = %lor.lhs.false975, %cond.false970
  %380 = load i8*, i8** %pat, align 8
  %arrayidx981 = getelementptr inbounds i8, i8* %380, i64 1
  %381 = load i8, i8* %arrayidx981, align 1
  %conv982 = zext i8 %381 to i32
  %cmp983 = icmp eq i32 204, %conv982
  br i1 %cmp983, label %land.lhs.true985, label %cond.false991

land.lhs.true985:                                 ; preds = %cond.true980
  %382 = load i8*, i8** %pat, align 8
  %arrayidx986 = getelementptr inbounds i8, i8* %382, i64 2
  %383 = load i8, i8* %arrayidx986, align 1
  %conv987 = zext i8 %383 to i32
  %cmp988 = icmp eq i32 138, %conv987
  br i1 %cmp988, label %cond.true990, label %cond.false991

cond.true990:                                     ; preds = %land.lhs.true985
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false991:                                    ; preds = %land.lhs.true985, %cond.true980
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false992:                                    ; preds = %lor.lhs.false975
  %384 = load i8*, i8** %pat, align 8
  %arrayidx993 = getelementptr inbounds i8, i8* %384, i64 0
  %385 = load i8, i8* %arrayidx993, align 1
  %conv994 = zext i8 %385 to i32
  %cmp995 = icmp eq i32 197, %conv994
  br i1 %cmp995, label %cond.true997, label %cond.false1014

cond.true997:                                     ; preds = %cond.false992
  %386 = load i8*, i8** %pat, align 8
  %arrayidx998 = getelementptr inbounds i8, i8* %386, i64 1
  %387 = load i8, i8* %arrayidx998, align 1
  %conv999 = zext i8 %387 to i32
  %cmp1000 = icmp eq i32 191, %conv999
  br i1 %cmp1000, label %land.lhs.true1002, label %cond.false1013

land.lhs.true1002:                                ; preds = %cond.true997
  %388 = load i8*, i8** %pat, align 8
  %arrayidx1003 = getelementptr inbounds i8, i8* %388, i64 2
  %389 = load i8, i8* %arrayidx1003, align 1
  %conv1004 = zext i8 %389 to i32
  %cmp1005 = icmp eq i32 197, %conv1004
  br i1 %cmp1005, label %land.lhs.true1007, label %cond.false1013

land.lhs.true1007:                                ; preds = %land.lhs.true1002
  %390 = load i8*, i8** %pat, align 8
  %arrayidx1008 = getelementptr inbounds i8, i8* %390, i64 3
  %391 = load i8, i8* %arrayidx1008, align 1
  %conv1009 = zext i8 %391 to i32
  %cmp1010 = icmp eq i32 191, %conv1009
  br i1 %cmp1010, label %cond.true1012, label %cond.false1013

cond.true1012:                                    ; preds = %land.lhs.true1007
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1013:                                   ; preds = %land.lhs.true1007, %land.lhs.true1002, %cond.true997
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1014:                                   ; preds = %cond.false992
  %392 = load i8*, i8** %pat, align 8
  %arrayidx1015 = getelementptr inbounds i8, i8* %392, i64 0
  %393 = load i8, i8* %arrayidx1015, align 1
  %conv1016 = zext i8 %393 to i32
  %cmp1017 = icmp eq i32 202, %conv1016
  br i1 %cmp1017, label %cond.true1019, label %cond.false1031

cond.true1019:                                    ; preds = %cond.false1014
  %394 = load i8*, i8** %pat, align 8
  %arrayidx1020 = getelementptr inbounds i8, i8* %394, i64 1
  %395 = load i8, i8* %arrayidx1020, align 1
  %conv1021 = zext i8 %395 to i32
  %cmp1022 = icmp eq i32 188, %conv1021
  br i1 %cmp1022, label %land.lhs.true1024, label %cond.false1030

land.lhs.true1024:                                ; preds = %cond.true1019
  %396 = load i8*, i8** %pat, align 8
  %arrayidx1025 = getelementptr inbounds i8, i8* %396, i64 2
  %397 = load i8, i8* %arrayidx1025, align 1
  %conv1026 = zext i8 %397 to i32
  %cmp1027 = icmp eq i32 110, %conv1026
  br i1 %cmp1027, label %cond.true1029, label %cond.false1030

cond.true1029:                                    ; preds = %land.lhs.true1024
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1030:                                   ; preds = %land.lhs.true1024, %cond.true1019
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1031:                                   ; preds = %cond.false1014
  %398 = load i8*, i8** %pat, align 8
  %arrayidx1032 = getelementptr inbounds i8, i8* %398, i64 0
  %399 = load i8, i8* %arrayidx1032, align 1
  %conv1033 = zext i8 %399 to i32
  %cmp1034 = icmp eq i32 206, %conv1033
  br i1 %cmp1034, label %cond.true1036, label %cond.false1105

cond.true1036:                                    ; preds = %cond.false1031
  %400 = load i8*, i8** %pat, align 8
  %arrayidx1037 = getelementptr inbounds i8, i8* %400, i64 1
  %401 = load i8, i8* %arrayidx1037, align 1
  %conv1038 = zext i8 %401 to i32
  %and1039 = and i32 %conv1038, 253
  %cmp1040 = icmp eq i32 %and1039, 172
  br i1 %cmp1040, label %cond.true1042, label %cond.false1054

cond.true1042:                                    ; preds = %cond.true1036
  %402 = load i8*, i8** %pat, align 8
  %arrayidx1043 = getelementptr inbounds i8, i8* %402, i64 2
  %403 = load i8, i8* %arrayidx1043, align 1
  %conv1044 = zext i8 %403 to i32
  %cmp1045 = icmp eq i32 206, %conv1044
  br i1 %cmp1045, label %land.lhs.true1047, label %cond.false1053

land.lhs.true1047:                                ; preds = %cond.true1042
  %404 = load i8*, i8** %pat, align 8
  %arrayidx1048 = getelementptr inbounds i8, i8* %404, i64 3
  %405 = load i8, i8* %arrayidx1048, align 1
  %conv1049 = zext i8 %405 to i32
  %cmp1050 = icmp eq i32 185, %conv1049
  br i1 %cmp1050, label %cond.true1052, label %cond.false1053

cond.true1052:                                    ; preds = %land.lhs.true1047
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1053:                                   ; preds = %land.lhs.true1047, %cond.true1042
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1054:                                   ; preds = %cond.true1036
  %406 = load i8*, i8** %pat, align 8
  %arrayidx1055 = getelementptr inbounds i8, i8* %406, i64 1
  %407 = load i8, i8* %arrayidx1055, align 1
  %conv1056 = zext i8 %407 to i32
  %cmp1057 = icmp eq i32 177, %conv1056
  br i1 %cmp1057, label %cond.true1064, label %lor.lhs.false1059

lor.lhs.false1059:                                ; preds = %cond.false1054
  %408 = load i8*, i8** %pat, align 8
  %arrayidx1060 = getelementptr inbounds i8, i8* %408, i64 1
  %409 = load i8, i8* %arrayidx1060, align 1
  %conv1061 = zext i8 %409 to i32
  %cmp1062 = icmp eq i32 183, %conv1061
  br i1 %cmp1062, label %cond.true1064, label %cond.false1088

cond.true1064:                                    ; preds = %lor.lhs.false1059, %cond.false1054
  %410 = load i8*, i8** %pat, align 8
  %arrayidx1065 = getelementptr inbounds i8, i8* %410, i64 2
  %411 = load i8, i8* %arrayidx1065, align 1
  %conv1066 = zext i8 %411 to i32
  %cmp1067 = icmp eq i32 205, %conv1066
  br i1 %cmp1067, label %cond.true1069, label %cond.false1076

cond.true1069:                                    ; preds = %cond.true1064
  %412 = load i8*, i8** %pat, align 8
  %arrayidx1070 = getelementptr inbounds i8, i8* %412, i64 3
  %413 = load i8, i8* %arrayidx1070, align 1
  %conv1071 = zext i8 %413 to i32
  %cmp1072 = icmp eq i32 130, %conv1071
  br i1 %cmp1072, label %cond.true1074, label %cond.false1075

cond.true1074:                                    ; preds = %cond.true1069
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1075:                                   ; preds = %cond.true1069
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1076:                                   ; preds = %cond.true1064
  %414 = load i8*, i8** %pat, align 8
  %arrayidx1077 = getelementptr inbounds i8, i8* %414, i64 2
  %415 = load i8, i8* %arrayidx1077, align 1
  %conv1078 = zext i8 %415 to i32
  %cmp1079 = icmp eq i32 206, %conv1078
  br i1 %cmp1079, label %land.lhs.true1081, label %cond.false1087

land.lhs.true1081:                                ; preds = %cond.false1076
  %416 = load i8*, i8** %pat, align 8
  %arrayidx1082 = getelementptr inbounds i8, i8* %416, i64 3
  %417 = load i8, i8* %arrayidx1082, align 1
  %conv1083 = zext i8 %417 to i32
  %cmp1084 = icmp eq i32 185, %conv1083
  br i1 %cmp1084, label %cond.true1086, label %cond.false1087

cond.true1086:                                    ; preds = %land.lhs.true1081
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1087:                                   ; preds = %land.lhs.true1081, %cond.false1076
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1088:                                   ; preds = %lor.lhs.false1059
  %418 = load i8*, i8** %pat, align 8
  %arrayidx1089 = getelementptr inbounds i8, i8* %418, i64 1
  %419 = load i8, i8* %arrayidx1089, align 1
  %conv1090 = zext i8 %419 to i32
  %cmp1091 = icmp eq i32 185, %conv1090
  br i1 %cmp1091, label %land.lhs.true1093, label %cond.false1104

land.lhs.true1093:                                ; preds = %cond.false1088
  %420 = load i8*, i8** %pat, align 8
  %arrayidx1094 = getelementptr inbounds i8, i8* %420, i64 2
  %421 = load i8, i8* %arrayidx1094, align 1
  %conv1095 = zext i8 %421 to i32
  %cmp1096 = icmp eq i32 205, %conv1095
  br i1 %cmp1096, label %land.lhs.true1098, label %cond.false1104

land.lhs.true1098:                                ; preds = %land.lhs.true1093
  %422 = load i8*, i8** %pat, align 8
  %arrayidx1099 = getelementptr inbounds i8, i8* %422, i64 3
  %423 = load i8, i8* %arrayidx1099, align 1
  %conv1100 = zext i8 %423 to i32
  %cmp1101 = icmp eq i32 130, %conv1100
  br i1 %cmp1101, label %cond.true1103, label %cond.false1104

cond.true1103:                                    ; preds = %land.lhs.true1098
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1104:                                   ; preds = %land.lhs.true1098, %land.lhs.true1093, %cond.false1088
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1105:                                   ; preds = %cond.false1031
  %424 = load i8*, i8** %pat, align 8
  %arrayidx1106 = getelementptr inbounds i8, i8* %424, i64 0
  %425 = load i8, i8* %arrayidx1106, align 1
  %conv1107 = zext i8 %425 to i32
  %cmp1108 = icmp eq i32 207, %conv1107
  br i1 %cmp1108, label %cond.true1110, label %cond.false1202

cond.true1110:                                    ; preds = %cond.false1105
  %426 = load i8*, i8** %pat, align 8
  %arrayidx1111 = getelementptr inbounds i8, i8* %426, i64 1
  %427 = load i8, i8* %arrayidx1111, align 1
  %conv1112 = zext i8 %427 to i32
  %cmp1113 = icmp eq i32 129, %conv1112
  br i1 %cmp1113, label %cond.true1115, label %cond.false1127

cond.true1115:                                    ; preds = %cond.true1110
  %428 = load i8*, i8** %pat, align 8
  %arrayidx1116 = getelementptr inbounds i8, i8* %428, i64 2
  %429 = load i8, i8* %arrayidx1116, align 1
  %conv1117 = zext i8 %429 to i32
  %cmp1118 = icmp eq i32 204, %conv1117
  br i1 %cmp1118, label %land.lhs.true1120, label %cond.false1126

land.lhs.true1120:                                ; preds = %cond.true1115
  %430 = load i8*, i8** %pat, align 8
  %arrayidx1121 = getelementptr inbounds i8, i8* %430, i64 3
  %431 = load i8, i8* %arrayidx1121, align 1
  %conv1122 = zext i8 %431 to i32
  %cmp1123 = icmp eq i32 147, %conv1122
  br i1 %cmp1123, label %cond.true1125, label %cond.false1126

cond.true1125:                                    ; preds = %land.lhs.true1120
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1126:                                   ; preds = %land.lhs.true1120, %cond.true1115
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1127:                                   ; preds = %cond.true1110
  %432 = load i8*, i8** %pat, align 8
  %arrayidx1128 = getelementptr inbounds i8, i8* %432, i64 1
  %433 = load i8, i8* %arrayidx1128, align 1
  %conv1129 = zext i8 %433 to i32
  %cmp1130 = icmp eq i32 133, %conv1129
  br i1 %cmp1130, label %cond.true1132, label %cond.false1156

cond.true1132:                                    ; preds = %cond.false1127
  %434 = load i8*, i8** %pat, align 8
  %arrayidx1133 = getelementptr inbounds i8, i8* %434, i64 2
  %435 = load i8, i8* %arrayidx1133, align 1
  %conv1134 = zext i8 %435 to i32
  %cmp1135 = icmp eq i32 204, %conv1134
  br i1 %cmp1135, label %cond.true1137, label %cond.false1144

cond.true1137:                                    ; preds = %cond.true1132
  %436 = load i8*, i8** %pat, align 8
  %arrayidx1138 = getelementptr inbounds i8, i8* %436, i64 3
  %437 = load i8, i8* %arrayidx1138, align 1
  %conv1139 = zext i8 %437 to i32
  %cmp1140 = icmp eq i32 147, %conv1139
  br i1 %cmp1140, label %cond.true1142, label %cond.false1143

cond.true1142:                                    ; preds = %cond.true1137
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1143:                                   ; preds = %cond.true1137
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1144:                                   ; preds = %cond.true1132
  %438 = load i8*, i8** %pat, align 8
  %arrayidx1145 = getelementptr inbounds i8, i8* %438, i64 2
  %439 = load i8, i8* %arrayidx1145, align 1
  %conv1146 = zext i8 %439 to i32
  %cmp1147 = icmp eq i32 205, %conv1146
  br i1 %cmp1147, label %land.lhs.true1149, label %cond.false1155

land.lhs.true1149:                                ; preds = %cond.false1144
  %440 = load i8*, i8** %pat, align 8
  %arrayidx1150 = getelementptr inbounds i8, i8* %440, i64 3
  %441 = load i8, i8* %arrayidx1150, align 1
  %conv1151 = zext i8 %441 to i32
  %cmp1152 = icmp eq i32 130, %conv1151
  br i1 %cmp1152, label %cond.true1154, label %cond.false1155

cond.true1154:                                    ; preds = %land.lhs.true1149
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1155:                                   ; preds = %land.lhs.true1149, %cond.false1144
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1156:                                   ; preds = %cond.false1127
  %442 = load i8*, i8** %pat, align 8
  %arrayidx1157 = getelementptr inbounds i8, i8* %442, i64 1
  %443 = load i8, i8* %arrayidx1157, align 1
  %conv1158 = zext i8 %443 to i32
  %cmp1159 = icmp eq i32 137, %conv1158
  br i1 %cmp1159, label %cond.true1161, label %cond.false1185

cond.true1161:                                    ; preds = %cond.false1156
  %444 = load i8*, i8** %pat, align 8
  %arrayidx1162 = getelementptr inbounds i8, i8* %444, i64 2
  %445 = load i8, i8* %arrayidx1162, align 1
  %conv1163 = zext i8 %445 to i32
  %cmp1164 = icmp eq i32 205, %conv1163
  br i1 %cmp1164, label %cond.true1166, label %cond.false1173

cond.true1166:                                    ; preds = %cond.true1161
  %446 = load i8*, i8** %pat, align 8
  %arrayidx1167 = getelementptr inbounds i8, i8* %446, i64 3
  %447 = load i8, i8* %arrayidx1167, align 1
  %conv1168 = zext i8 %447 to i32
  %cmp1169 = icmp eq i32 130, %conv1168
  br i1 %cmp1169, label %cond.true1171, label %cond.false1172

cond.true1171:                                    ; preds = %cond.true1166
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1172:                                   ; preds = %cond.true1166
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1173:                                   ; preds = %cond.true1161
  %448 = load i8*, i8** %pat, align 8
  %arrayidx1174 = getelementptr inbounds i8, i8* %448, i64 2
  %449 = load i8, i8* %arrayidx1174, align 1
  %conv1175 = zext i8 %449 to i32
  %cmp1176 = icmp eq i32 206, %conv1175
  br i1 %cmp1176, label %land.lhs.true1178, label %cond.false1184

land.lhs.true1178:                                ; preds = %cond.false1173
  %450 = load i8*, i8** %pat, align 8
  %arrayidx1179 = getelementptr inbounds i8, i8* %450, i64 3
  %451 = load i8, i8* %arrayidx1179, align 1
  %conv1180 = zext i8 %451 to i32
  %cmp1181 = icmp eq i32 185, %conv1180
  br i1 %cmp1181, label %cond.true1183, label %cond.false1184

cond.true1183:                                    ; preds = %land.lhs.true1178
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1184:                                   ; preds = %land.lhs.true1178, %cond.false1173
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1185:                                   ; preds = %cond.false1156
  %452 = load i8*, i8** %pat, align 8
  %arrayidx1186 = getelementptr inbounds i8, i8* %452, i64 1
  %453 = load i8, i8* %arrayidx1186, align 1
  %conv1187 = zext i8 %453 to i32
  %cmp1188 = icmp eq i32 142, %conv1187
  br i1 %cmp1188, label %land.lhs.true1190, label %cond.false1201

land.lhs.true1190:                                ; preds = %cond.false1185
  %454 = load i8*, i8** %pat, align 8
  %arrayidx1191 = getelementptr inbounds i8, i8* %454, i64 2
  %455 = load i8, i8* %arrayidx1191, align 1
  %conv1192 = zext i8 %455 to i32
  %cmp1193 = icmp eq i32 206, %conv1192
  br i1 %cmp1193, label %land.lhs.true1195, label %cond.false1201

land.lhs.true1195:                                ; preds = %land.lhs.true1190
  %456 = load i8*, i8** %pat, align 8
  %arrayidx1196 = getelementptr inbounds i8, i8* %456, i64 3
  %457 = load i8, i8* %arrayidx1196, align 1
  %conv1197 = zext i8 %457 to i32
  %cmp1198 = icmp eq i32 185, %conv1197
  br i1 %cmp1198, label %cond.true1200, label %cond.false1201

cond.true1200:                                    ; preds = %land.lhs.true1195
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1201:                                   ; preds = %land.lhs.true1195, %land.lhs.true1190, %cond.false1185
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1202:                                   ; preds = %cond.false1105
  %458 = load i8*, i8** %pat, align 8
  %arrayidx1203 = getelementptr inbounds i8, i8* %458, i64 0
  %459 = load i8, i8* %arrayidx1203, align 1
  %conv1204 = zext i8 %459 to i32
  %cmp1205 = icmp eq i32 213, %conv1204
  br i1 %cmp1205, label %cond.true1207, label %cond.false1269

cond.true1207:                                    ; preds = %cond.false1202
  %460 = load i8*, i8** %pat, align 8
  %arrayidx1208 = getelementptr inbounds i8, i8* %460, i64 1
  %461 = load i8, i8* %arrayidx1208, align 1
  %conv1209 = zext i8 %461 to i32
  %cmp1210 = icmp eq i32 165, %conv1209
  br i1 %cmp1210, label %cond.true1212, label %cond.false1224

cond.true1212:                                    ; preds = %cond.true1207
  %462 = load i8*, i8** %pat, align 8
  %arrayidx1213 = getelementptr inbounds i8, i8* %462, i64 2
  %463 = load i8, i8* %arrayidx1213, align 1
  %conv1214 = zext i8 %463 to i32
  %cmp1215 = icmp eq i32 214, %conv1214
  br i1 %cmp1215, label %land.lhs.true1217, label %cond.false1223

land.lhs.true1217:                                ; preds = %cond.true1212
  %464 = load i8*, i8** %pat, align 8
  %arrayidx1218 = getelementptr inbounds i8, i8* %464, i64 3
  %465 = load i8, i8* %arrayidx1218, align 1
  %conv1219 = zext i8 %465 to i32
  %cmp1220 = icmp eq i32 130, %conv1219
  br i1 %cmp1220, label %cond.true1222, label %cond.false1223

cond.true1222:                                    ; preds = %land.lhs.true1217
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1223:                                   ; preds = %land.lhs.true1217, %cond.true1212
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1224:                                   ; preds = %cond.true1207
  %466 = load i8*, i8** %pat, align 8
  %arrayidx1225 = getelementptr inbounds i8, i8* %466, i64 1
  %467 = load i8, i8* %arrayidx1225, align 1
  %conv1226 = zext i8 %467 to i32
  %cmp1227 = icmp eq i32 180, %conv1226
  br i1 %cmp1227, label %cond.true1229, label %cond.false1252

cond.true1229:                                    ; preds = %cond.false1224
  %468 = load i8*, i8** %pat, align 8
  %arrayidx1230 = getelementptr inbounds i8, i8* %468, i64 2
  %469 = load i8, i8* %arrayidx1230, align 1
  %conv1231 = zext i8 %469 to i32
  %cmp1232 = icmp eq i32 213, %conv1231
  br i1 %cmp1232, label %land.lhs.true1234, label %cond.false1251

land.lhs.true1234:                                ; preds = %cond.true1229
  %470 = load i8*, i8** %pat, align 8
  %arrayidx1235 = getelementptr inbounds i8, i8* %470, i64 3
  %471 = load i8, i8* %arrayidx1235, align 1
  %conv1236 = zext i8 %471 to i32
  %and1237 = and i32 %conv1236, 247
  %cmp1238 = icmp eq i32 %and1237, 165
  br i1 %cmp1238, label %cond.true1250, label %lor.lhs.false1240

lor.lhs.false1240:                                ; preds = %land.lhs.true1234
  %472 = load i8*, i8** %pat, align 8
  %arrayidx1241 = getelementptr inbounds i8, i8* %472, i64 3
  %473 = load i8, i8* %arrayidx1241, align 1
  %conv1242 = zext i8 %473 to i32
  %cmp1243 = icmp eq i32 %conv1242, 171
  br i1 %cmp1243, label %cond.true1250, label %lor.lhs.false1245

lor.lhs.false1245:                                ; preds = %lor.lhs.false1240
  %474 = load i8*, i8** %pat, align 8
  %arrayidx1246 = getelementptr inbounds i8, i8* %474, i64 3
  %475 = load i8, i8* %arrayidx1246, align 1
  %conv1247 = zext i8 %475 to i32
  %cmp1248 = icmp eq i32 %conv1247, 182
  br i1 %cmp1248, label %cond.true1250, label %cond.false1251

cond.true1250:                                    ; preds = %lor.lhs.false1245, %lor.lhs.false1240, %land.lhs.true1234
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1251:                                   ; preds = %lor.lhs.false1245, %cond.true1229
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1252:                                   ; preds = %cond.false1224
  %476 = load i8*, i8** %pat, align 8
  %arrayidx1253 = getelementptr inbounds i8, i8* %476, i64 1
  %477 = load i8, i8* %arrayidx1253, align 1
  %conv1254 = zext i8 %477 to i32
  %cmp1255 = icmp eq i32 190, %conv1254
  br i1 %cmp1255, label %land.lhs.true1257, label %cond.false1268

land.lhs.true1257:                                ; preds = %cond.false1252
  %478 = load i8*, i8** %pat, align 8
  %arrayidx1258 = getelementptr inbounds i8, i8* %478, i64 2
  %479 = load i8, i8* %arrayidx1258, align 1
  %conv1259 = zext i8 %479 to i32
  %cmp1260 = icmp eq i32 213, %conv1259
  br i1 %cmp1260, label %land.lhs.true1262, label %cond.false1268

land.lhs.true1262:                                ; preds = %land.lhs.true1257
  %480 = load i8*, i8** %pat, align 8
  %arrayidx1263 = getelementptr inbounds i8, i8* %480, i64 3
  %481 = load i8, i8* %arrayidx1263, align 1
  %conv1264 = zext i8 %481 to i32
  %cmp1265 = icmp eq i32 182, %conv1264
  br i1 %cmp1265, label %cond.true1267, label %cond.false1268

cond.true1267:                                    ; preds = %land.lhs.true1262
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1268:                                   ; preds = %land.lhs.true1262, %land.lhs.true1257, %cond.false1252
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1269:                                   ; preds = %cond.false1202
  %482 = load i8*, i8** %pat, align 8
  %arrayidx1270 = getelementptr inbounds i8, i8* %482, i64 0
  %483 = load i8, i8* %arrayidx1270, align 1
  %conv1271 = zext i8 %483 to i32
  %cmp1272 = icmp eq i32 225, %conv1271
  br i1 %cmp1272, label %cond.true1274, label %cond.false1331

cond.true1274:                                    ; preds = %cond.false1269
  %484 = load i8*, i8** %pat, align 8
  %arrayidx1275 = getelementptr inbounds i8, i8* %484, i64 1
  %485 = load i8, i8* %arrayidx1275, align 1
  %conv1276 = zext i8 %485 to i32
  %cmp1277 = icmp eq i32 188, %conv1276
  br i1 %cmp1277, label %cond.true1279, label %cond.false1297

cond.true1279:                                    ; preds = %cond.true1274
  %486 = load i8*, i8** %pat, align 8
  %arrayidx1280 = getelementptr inbounds i8, i8* %486, i64 2
  %487 = load i8, i8* %arrayidx1280, align 1
  %conv1281 = zext i8 %487 to i32
  %and1282 = and i32 %conv1281, 216
  %cmp1283 = icmp eq i32 %and1282, 128
  br i1 %cmp1283, label %land.lhs.true1285, label %cond.false1296

land.lhs.true1285:                                ; preds = %cond.true1279
  %488 = load i8*, i8** %pat, align 8
  %arrayidx1286 = getelementptr inbounds i8, i8* %488, i64 3
  %489 = load i8, i8* %arrayidx1286, align 1
  %conv1287 = zext i8 %489 to i32
  %cmp1288 = icmp eq i32 206, %conv1287
  br i1 %cmp1288, label %land.lhs.true1290, label %cond.false1296

land.lhs.true1290:                                ; preds = %land.lhs.true1285
  %490 = load i8*, i8** %pat, align 8
  %arrayidx1291 = getelementptr inbounds i8, i8* %490, i64 4
  %491 = load i8, i8* %arrayidx1291, align 1
  %conv1292 = zext i8 %491 to i32
  %cmp1293 = icmp eq i32 185, %conv1292
  br i1 %cmp1293, label %cond.true1295, label %cond.false1296

cond.true1295:                                    ; preds = %land.lhs.true1290
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1296:                                   ; preds = %land.lhs.true1290, %land.lhs.true1285, %cond.true1279
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1297:                                   ; preds = %cond.true1274
  %492 = load i8*, i8** %pat, align 8
  %arrayidx1298 = getelementptr inbounds i8, i8* %492, i64 1
  %493 = load i8, i8* %arrayidx1298, align 1
  %conv1299 = zext i8 %493 to i32
  %cmp1300 = icmp eq i32 189, %conv1299
  br i1 %cmp1300, label %land.lhs.true1302, label %cond.false1330

land.lhs.true1302:                                ; preds = %cond.false1297
  %494 = load i8*, i8** %pat, align 8
  %arrayidx1303 = getelementptr inbounds i8, i8* %494, i64 2
  %495 = load i8, i8* %arrayidx1303, align 1
  %conv1304 = zext i8 %495 to i32
  %and1305 = and i32 %conv1304, 248
  %cmp1306 = icmp eq i32 %and1305, 160
  br i1 %cmp1306, label %land.lhs.true1319, label %lor.lhs.false1308

lor.lhs.false1308:                                ; preds = %land.lhs.true1302
  %496 = load i8*, i8** %pat, align 8
  %arrayidx1309 = getelementptr inbounds i8, i8* %496, i64 2
  %497 = load i8, i8* %arrayidx1309, align 1
  %conv1310 = zext i8 %497 to i32
  %and1311 = and i32 %conv1310, 251
  %cmp1312 = icmp eq i32 %and1311, 176
  br i1 %cmp1312, label %land.lhs.true1319, label %lor.lhs.false1314

lor.lhs.false1314:                                ; preds = %lor.lhs.false1308
  %498 = load i8*, i8** %pat, align 8
  %arrayidx1315 = getelementptr inbounds i8, i8* %498, i64 2
  %499 = load i8, i8* %arrayidx1315, align 1
  %conv1316 = zext i8 %499 to i32
  %cmp1317 = icmp eq i32 %conv1316, 188
  br i1 %cmp1317, label %land.lhs.true1319, label %cond.false1330

land.lhs.true1319:                                ; preds = %lor.lhs.false1314, %lor.lhs.false1308, %land.lhs.true1302
  %500 = load i8*, i8** %pat, align 8
  %arrayidx1320 = getelementptr inbounds i8, i8* %500, i64 3
  %501 = load i8, i8* %arrayidx1320, align 1
  %conv1321 = zext i8 %501 to i32
  %cmp1322 = icmp eq i32 206, %conv1321
  br i1 %cmp1322, label %land.lhs.true1324, label %cond.false1330

land.lhs.true1324:                                ; preds = %land.lhs.true1319
  %502 = load i8*, i8** %pat, align 8
  %arrayidx1325 = getelementptr inbounds i8, i8* %502, i64 4
  %503 = load i8, i8* %arrayidx1325, align 1
  %conv1326 = zext i8 %503 to i32
  %cmp1327 = icmp eq i32 185, %conv1326
  br i1 %cmp1327, label %cond.true1329, label %cond.false1330

cond.true1329:                                    ; preds = %land.lhs.true1324
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1330:                                   ; preds = %land.lhs.true1324, %land.lhs.true1319, %lor.lhs.false1314, %cond.false1297
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1331:                                   ; preds = %cond.false1269
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1332:                                   ; preds = %cond.false828
  %504 = load i8*, i8** %pat_end, align 8
  %505 = load i8*, i8** %pat, align 8
  %sub.ptr.lhs.cast1333 = ptrtoint i8* %504 to i64
  %sub.ptr.rhs.cast1334 = ptrtoint i8* %505 to i64
  %sub.ptr.sub1335 = sub i64 %sub.ptr.lhs.cast1333, %sub.ptr.rhs.cast1334
  %cmp1336 = icmp sgt i64 %sub.ptr.sub1335, 3
  br i1 %cmp1336, label %cond.true1338, label %cond.false1774

cond.true1338:                                    ; preds = %cond.false1332
  %506 = load i8*, i8** %pat, align 8
  %arrayidx1339 = getelementptr inbounds i8, i8* %506, i64 0
  %507 = load i8, i8* %arrayidx1339, align 1
  %conv1340 = zext i8 %507 to i32
  %cmp1341 = icmp eq i32 97, %conv1340
  br i1 %cmp1341, label %cond.true1343, label %cond.false1355

cond.true1343:                                    ; preds = %cond.true1338
  %508 = load i8*, i8** %pat, align 8
  %arrayidx1344 = getelementptr inbounds i8, i8* %508, i64 1
  %509 = load i8, i8* %arrayidx1344, align 1
  %conv1345 = zext i8 %509 to i32
  %cmp1346 = icmp eq i32 202, %conv1345
  br i1 %cmp1346, label %land.lhs.true1348, label %cond.false1354

land.lhs.true1348:                                ; preds = %cond.true1343
  %510 = load i8*, i8** %pat, align 8
  %arrayidx1349 = getelementptr inbounds i8, i8* %510, i64 2
  %511 = load i8, i8* %arrayidx1349, align 1
  %conv1350 = zext i8 %511 to i32
  %cmp1351 = icmp eq i32 190, %conv1350
  br i1 %cmp1351, label %cond.true1353, label %cond.false1354

cond.true1353:                                    ; preds = %land.lhs.true1348
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1354:                                   ; preds = %land.lhs.true1348, %cond.true1343
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1355:                                   ; preds = %cond.true1338
  %512 = load i8*, i8** %pat, align 8
  %arrayidx1356 = getelementptr inbounds i8, i8* %512, i64 0
  %513 = load i8, i8* %arrayidx1356, align 1
  %conv1357 = zext i8 %513 to i32
  %cmp1358 = icmp eq i32 102, %conv1357
  br i1 %cmp1358, label %cond.true1360, label %cond.false1389

cond.true1360:                                    ; preds = %cond.false1355
  %514 = load i8*, i8** %pat, align 8
  %arrayidx1361 = getelementptr inbounds i8, i8* %514, i64 1
  %515 = load i8, i8* %arrayidx1361, align 1
  %conv1362 = zext i8 %515 to i32
  %cmp1363 = icmp eq i32 102, %conv1362
  br i1 %cmp1363, label %cond.true1365, label %cond.false1377

cond.true1365:                                    ; preds = %cond.true1360
  %516 = load i8*, i8** %pat, align 8
  %arrayidx1366 = getelementptr inbounds i8, i8* %516, i64 2
  %517 = load i8, i8* %arrayidx1366, align 1
  %conv1367 = zext i8 %517 to i32
  %cmp1368 = icmp eq i32 105, %conv1367
  br i1 %cmp1368, label %cond.true1375, label %lor.lhs.false1370

lor.lhs.false1370:                                ; preds = %cond.true1365
  %518 = load i8*, i8** %pat, align 8
  %arrayidx1371 = getelementptr inbounds i8, i8* %518, i64 2
  %519 = load i8, i8* %arrayidx1371, align 1
  %conv1372 = zext i8 %519 to i32
  %cmp1373 = icmp eq i32 108, %conv1372
  br i1 %cmp1373, label %cond.true1375, label %cond.false1376

cond.true1375:                                    ; preds = %lor.lhs.false1370, %cond.true1365
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1376:                                   ; preds = %lor.lhs.false1370
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1377:                                   ; preds = %cond.true1360
  %520 = load i8*, i8** %pat, align 8
  %arrayidx1378 = getelementptr inbounds i8, i8* %520, i64 1
  %521 = load i8, i8* %arrayidx1378, align 1
  %conv1379 = zext i8 %521 to i32
  %cmp1380 = icmp eq i32 105, %conv1379
  br i1 %cmp1380, label %cond.true1387, label %lor.lhs.false1382

lor.lhs.false1382:                                ; preds = %cond.false1377
  %522 = load i8*, i8** %pat, align 8
  %arrayidx1383 = getelementptr inbounds i8, i8* %522, i64 1
  %523 = load i8, i8* %arrayidx1383, align 1
  %conv1384 = zext i8 %523 to i32
  %cmp1385 = icmp eq i32 108, %conv1384
  br i1 %cmp1385, label %cond.true1387, label %cond.false1388

cond.true1387:                                    ; preds = %lor.lhs.false1382, %cond.false1377
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1388:                                   ; preds = %lor.lhs.false1382
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1389:                                   ; preds = %cond.false1355
  %524 = load i8*, i8** %pat, align 8
  %arrayidx1390 = getelementptr inbounds i8, i8* %524, i64 0
  %525 = load i8, i8* %arrayidx1390, align 1
  %conv1391 = zext i8 %525 to i32
  %cmp1392 = icmp eq i32 104, %conv1391
  br i1 %cmp1392, label %cond.true1394, label %cond.false1406

cond.true1394:                                    ; preds = %cond.false1389
  %526 = load i8*, i8** %pat, align 8
  %arrayidx1395 = getelementptr inbounds i8, i8* %526, i64 1
  %527 = load i8, i8* %arrayidx1395, align 1
  %conv1396 = zext i8 %527 to i32
  %cmp1397 = icmp eq i32 204, %conv1396
  br i1 %cmp1397, label %land.lhs.true1399, label %cond.false1405

land.lhs.true1399:                                ; preds = %cond.true1394
  %528 = load i8*, i8** %pat, align 8
  %arrayidx1400 = getelementptr inbounds i8, i8* %528, i64 2
  %529 = load i8, i8* %arrayidx1400, align 1
  %conv1401 = zext i8 %529 to i32
  %cmp1402 = icmp eq i32 177, %conv1401
  br i1 %cmp1402, label %cond.true1404, label %cond.false1405

cond.true1404:                                    ; preds = %land.lhs.true1399
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1405:                                   ; preds = %land.lhs.true1399, %cond.true1394
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1406:                                   ; preds = %cond.false1389
  %530 = load i8*, i8** %pat, align 8
  %arrayidx1407 = getelementptr inbounds i8, i8* %530, i64 0
  %531 = load i8, i8* %arrayidx1407, align 1
  %conv1408 = zext i8 %531 to i32
  %cmp1409 = icmp eq i32 105, %conv1408
  br i1 %cmp1409, label %cond.true1411, label %cond.false1423

cond.true1411:                                    ; preds = %cond.false1406
  %532 = load i8*, i8** %pat, align 8
  %arrayidx1412 = getelementptr inbounds i8, i8* %532, i64 1
  %533 = load i8, i8* %arrayidx1412, align 1
  %conv1413 = zext i8 %533 to i32
  %cmp1414 = icmp eq i32 204, %conv1413
  br i1 %cmp1414, label %land.lhs.true1416, label %cond.false1422

land.lhs.true1416:                                ; preds = %cond.true1411
  %534 = load i8*, i8** %pat, align 8
  %arrayidx1417 = getelementptr inbounds i8, i8* %534, i64 2
  %535 = load i8, i8* %arrayidx1417, align 1
  %conv1418 = zext i8 %535 to i32
  %cmp1419 = icmp eq i32 135, %conv1418
  br i1 %cmp1419, label %cond.true1421, label %cond.false1422

cond.true1421:                                    ; preds = %land.lhs.true1416
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1422:                                   ; preds = %land.lhs.true1416, %cond.true1411
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1423:                                   ; preds = %cond.false1406
  %536 = load i8*, i8** %pat, align 8
  %arrayidx1424 = getelementptr inbounds i8, i8* %536, i64 0
  %537 = load i8, i8* %arrayidx1424, align 1
  %conv1425 = zext i8 %537 to i32
  %cmp1426 = icmp eq i32 106, %conv1425
  br i1 %cmp1426, label %cond.true1428, label %cond.false1440

cond.true1428:                                    ; preds = %cond.false1423
  %538 = load i8*, i8** %pat, align 8
  %arrayidx1429 = getelementptr inbounds i8, i8* %538, i64 1
  %539 = load i8, i8* %arrayidx1429, align 1
  %conv1430 = zext i8 %539 to i32
  %cmp1431 = icmp eq i32 204, %conv1430
  br i1 %cmp1431, label %land.lhs.true1433, label %cond.false1439

land.lhs.true1433:                                ; preds = %cond.true1428
  %540 = load i8*, i8** %pat, align 8
  %arrayidx1434 = getelementptr inbounds i8, i8* %540, i64 2
  %541 = load i8, i8* %arrayidx1434, align 1
  %conv1435 = zext i8 %541 to i32
  %cmp1436 = icmp eq i32 140, %conv1435
  br i1 %cmp1436, label %cond.true1438, label %cond.false1439

cond.true1438:                                    ; preds = %land.lhs.true1433
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1439:                                   ; preds = %land.lhs.true1433, %cond.true1428
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1440:                                   ; preds = %cond.false1423
  %542 = load i8*, i8** %pat, align 8
  %arrayidx1441 = getelementptr inbounds i8, i8* %542, i64 0
  %543 = load i8, i8* %arrayidx1441, align 1
  %conv1442 = zext i8 %543 to i32
  %cmp1443 = icmp eq i32 115, %conv1442
  br i1 %cmp1443, label %cond.true1445, label %cond.false1457

cond.true1445:                                    ; preds = %cond.false1440
  %544 = load i8*, i8** %pat, align 8
  %arrayidx1446 = getelementptr inbounds i8, i8* %544, i64 1
  %545 = load i8, i8* %arrayidx1446, align 1
  %conv1447 = zext i8 %545 to i32
  %cmp1448 = icmp eq i32 115, %conv1447
  br i1 %cmp1448, label %cond.true1455, label %lor.lhs.false1450

lor.lhs.false1450:                                ; preds = %cond.true1445
  %546 = load i8*, i8** %pat, align 8
  %arrayidx1451 = getelementptr inbounds i8, i8* %546, i64 1
  %547 = load i8, i8* %arrayidx1451, align 1
  %conv1452 = zext i8 %547 to i32
  %cmp1453 = icmp eq i32 116, %conv1452
  br i1 %cmp1453, label %cond.true1455, label %cond.false1456

cond.true1455:                                    ; preds = %lor.lhs.false1450, %cond.true1445
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1456:                                   ; preds = %lor.lhs.false1450
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1457:                                   ; preds = %cond.false1440
  %548 = load i8*, i8** %pat, align 8
  %arrayidx1458 = getelementptr inbounds i8, i8* %548, i64 0
  %549 = load i8, i8* %arrayidx1458, align 1
  %conv1459 = zext i8 %549 to i32
  %cmp1460 = icmp eq i32 116, %conv1459
  br i1 %cmp1460, label %cond.true1462, label %cond.false1474

cond.true1462:                                    ; preds = %cond.false1457
  %550 = load i8*, i8** %pat, align 8
  %arrayidx1463 = getelementptr inbounds i8, i8* %550, i64 1
  %551 = load i8, i8* %arrayidx1463, align 1
  %conv1464 = zext i8 %551 to i32
  %cmp1465 = icmp eq i32 204, %conv1464
  br i1 %cmp1465, label %land.lhs.true1467, label %cond.false1473

land.lhs.true1467:                                ; preds = %cond.true1462
  %552 = load i8*, i8** %pat, align 8
  %arrayidx1468 = getelementptr inbounds i8, i8* %552, i64 2
  %553 = load i8, i8* %arrayidx1468, align 1
  %conv1469 = zext i8 %553 to i32
  %cmp1470 = icmp eq i32 136, %conv1469
  br i1 %cmp1470, label %cond.true1472, label %cond.false1473

cond.true1472:                                    ; preds = %land.lhs.true1467
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1473:                                   ; preds = %land.lhs.true1467, %cond.true1462
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1474:                                   ; preds = %cond.false1457
  %554 = load i8*, i8** %pat, align 8
  %arrayidx1475 = getelementptr inbounds i8, i8* %554, i64 0
  %555 = load i8, i8* %arrayidx1475, align 1
  %conv1476 = zext i8 %555 to i32
  %cmp1477 = icmp eq i32 119, %conv1476
  br i1 %cmp1477, label %cond.true1484, label %lor.lhs.false1479

lor.lhs.false1479:                                ; preds = %cond.false1474
  %556 = load i8*, i8** %pat, align 8
  %arrayidx1480 = getelementptr inbounds i8, i8* %556, i64 0
  %557 = load i8, i8* %arrayidx1480, align 1
  %conv1481 = zext i8 %557 to i32
  %cmp1482 = icmp eq i32 121, %conv1481
  br i1 %cmp1482, label %cond.true1484, label %cond.false1496

cond.true1484:                                    ; preds = %lor.lhs.false1479, %cond.false1474
  %558 = load i8*, i8** %pat, align 8
  %arrayidx1485 = getelementptr inbounds i8, i8* %558, i64 1
  %559 = load i8, i8* %arrayidx1485, align 1
  %conv1486 = zext i8 %559 to i32
  %cmp1487 = icmp eq i32 204, %conv1486
  br i1 %cmp1487, label %land.lhs.true1489, label %cond.false1495

land.lhs.true1489:                                ; preds = %cond.true1484
  %560 = load i8*, i8** %pat, align 8
  %arrayidx1490 = getelementptr inbounds i8, i8* %560, i64 2
  %561 = load i8, i8* %arrayidx1490, align 1
  %conv1491 = zext i8 %561 to i32
  %cmp1492 = icmp eq i32 138, %conv1491
  br i1 %cmp1492, label %cond.true1494, label %cond.false1495

cond.true1494:                                    ; preds = %land.lhs.true1489
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1495:                                   ; preds = %land.lhs.true1489, %cond.true1484
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1496:                                   ; preds = %lor.lhs.false1479
  %562 = load i8*, i8** %pat, align 8
  %arrayidx1497 = getelementptr inbounds i8, i8* %562, i64 0
  %563 = load i8, i8* %arrayidx1497, align 1
  %conv1498 = zext i8 %563 to i32
  %cmp1499 = icmp eq i32 197, %conv1498
  br i1 %cmp1499, label %cond.true1501, label %cond.false1518

cond.true1501:                                    ; preds = %cond.false1496
  %564 = load i8*, i8** %pat, align 8
  %arrayidx1502 = getelementptr inbounds i8, i8* %564, i64 1
  %565 = load i8, i8* %arrayidx1502, align 1
  %conv1503 = zext i8 %565 to i32
  %cmp1504 = icmp eq i32 191, %conv1503
  br i1 %cmp1504, label %land.lhs.true1506, label %cond.false1517

land.lhs.true1506:                                ; preds = %cond.true1501
  %566 = load i8*, i8** %pat, align 8
  %arrayidx1507 = getelementptr inbounds i8, i8* %566, i64 2
  %567 = load i8, i8* %arrayidx1507, align 1
  %conv1508 = zext i8 %567 to i32
  %cmp1509 = icmp eq i32 197, %conv1508
  br i1 %cmp1509, label %land.lhs.true1511, label %cond.false1517

land.lhs.true1511:                                ; preds = %land.lhs.true1506
  %568 = load i8*, i8** %pat, align 8
  %arrayidx1512 = getelementptr inbounds i8, i8* %568, i64 3
  %569 = load i8, i8* %arrayidx1512, align 1
  %conv1513 = zext i8 %569 to i32
  %cmp1514 = icmp eq i32 191, %conv1513
  br i1 %cmp1514, label %cond.true1516, label %cond.false1517

cond.true1516:                                    ; preds = %land.lhs.true1511
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1517:                                   ; preds = %land.lhs.true1511, %land.lhs.true1506, %cond.true1501
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1518:                                   ; preds = %cond.false1496
  %570 = load i8*, i8** %pat, align 8
  %arrayidx1519 = getelementptr inbounds i8, i8* %570, i64 0
  %571 = load i8, i8* %arrayidx1519, align 1
  %conv1520 = zext i8 %571 to i32
  %cmp1521 = icmp eq i32 202, %conv1520
  br i1 %cmp1521, label %cond.true1523, label %cond.false1535

cond.true1523:                                    ; preds = %cond.false1518
  %572 = load i8*, i8** %pat, align 8
  %arrayidx1524 = getelementptr inbounds i8, i8* %572, i64 1
  %573 = load i8, i8* %arrayidx1524, align 1
  %conv1525 = zext i8 %573 to i32
  %cmp1526 = icmp eq i32 188, %conv1525
  br i1 %cmp1526, label %land.lhs.true1528, label %cond.false1534

land.lhs.true1528:                                ; preds = %cond.true1523
  %574 = load i8*, i8** %pat, align 8
  %arrayidx1529 = getelementptr inbounds i8, i8* %574, i64 2
  %575 = load i8, i8* %arrayidx1529, align 1
  %conv1530 = zext i8 %575 to i32
  %cmp1531 = icmp eq i32 110, %conv1530
  br i1 %cmp1531, label %cond.true1533, label %cond.false1534

cond.true1533:                                    ; preds = %land.lhs.true1528
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1534:                                   ; preds = %land.lhs.true1528, %cond.true1523
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1535:                                   ; preds = %cond.false1518
  %576 = load i8*, i8** %pat, align 8
  %arrayidx1536 = getelementptr inbounds i8, i8* %576, i64 0
  %577 = load i8, i8* %arrayidx1536, align 1
  %conv1537 = zext i8 %577 to i32
  %cmp1538 = icmp eq i32 206, %conv1537
  br i1 %cmp1538, label %cond.true1540, label %cond.false1609

cond.true1540:                                    ; preds = %cond.false1535
  %578 = load i8*, i8** %pat, align 8
  %arrayidx1541 = getelementptr inbounds i8, i8* %578, i64 1
  %579 = load i8, i8* %arrayidx1541, align 1
  %conv1542 = zext i8 %579 to i32
  %and1543 = and i32 %conv1542, 253
  %cmp1544 = icmp eq i32 %and1543, 172
  br i1 %cmp1544, label %cond.true1546, label %cond.false1558

cond.true1546:                                    ; preds = %cond.true1540
  %580 = load i8*, i8** %pat, align 8
  %arrayidx1547 = getelementptr inbounds i8, i8* %580, i64 2
  %581 = load i8, i8* %arrayidx1547, align 1
  %conv1548 = zext i8 %581 to i32
  %cmp1549 = icmp eq i32 206, %conv1548
  br i1 %cmp1549, label %land.lhs.true1551, label %cond.false1557

land.lhs.true1551:                                ; preds = %cond.true1546
  %582 = load i8*, i8** %pat, align 8
  %arrayidx1552 = getelementptr inbounds i8, i8* %582, i64 3
  %583 = load i8, i8* %arrayidx1552, align 1
  %conv1553 = zext i8 %583 to i32
  %cmp1554 = icmp eq i32 185, %conv1553
  br i1 %cmp1554, label %cond.true1556, label %cond.false1557

cond.true1556:                                    ; preds = %land.lhs.true1551
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1557:                                   ; preds = %land.lhs.true1551, %cond.true1546
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1558:                                   ; preds = %cond.true1540
  %584 = load i8*, i8** %pat, align 8
  %arrayidx1559 = getelementptr inbounds i8, i8* %584, i64 1
  %585 = load i8, i8* %arrayidx1559, align 1
  %conv1560 = zext i8 %585 to i32
  %cmp1561 = icmp eq i32 177, %conv1560
  br i1 %cmp1561, label %cond.true1568, label %lor.lhs.false1563

lor.lhs.false1563:                                ; preds = %cond.false1558
  %586 = load i8*, i8** %pat, align 8
  %arrayidx1564 = getelementptr inbounds i8, i8* %586, i64 1
  %587 = load i8, i8* %arrayidx1564, align 1
  %conv1565 = zext i8 %587 to i32
  %cmp1566 = icmp eq i32 183, %conv1565
  br i1 %cmp1566, label %cond.true1568, label %cond.false1592

cond.true1568:                                    ; preds = %lor.lhs.false1563, %cond.false1558
  %588 = load i8*, i8** %pat, align 8
  %arrayidx1569 = getelementptr inbounds i8, i8* %588, i64 2
  %589 = load i8, i8* %arrayidx1569, align 1
  %conv1570 = zext i8 %589 to i32
  %cmp1571 = icmp eq i32 205, %conv1570
  br i1 %cmp1571, label %cond.true1573, label %cond.false1580

cond.true1573:                                    ; preds = %cond.true1568
  %590 = load i8*, i8** %pat, align 8
  %arrayidx1574 = getelementptr inbounds i8, i8* %590, i64 3
  %591 = load i8, i8* %arrayidx1574, align 1
  %conv1575 = zext i8 %591 to i32
  %cmp1576 = icmp eq i32 130, %conv1575
  br i1 %cmp1576, label %cond.true1578, label %cond.false1579

cond.true1578:                                    ; preds = %cond.true1573
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1579:                                   ; preds = %cond.true1573
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1580:                                   ; preds = %cond.true1568
  %592 = load i8*, i8** %pat, align 8
  %arrayidx1581 = getelementptr inbounds i8, i8* %592, i64 2
  %593 = load i8, i8* %arrayidx1581, align 1
  %conv1582 = zext i8 %593 to i32
  %cmp1583 = icmp eq i32 206, %conv1582
  br i1 %cmp1583, label %land.lhs.true1585, label %cond.false1591

land.lhs.true1585:                                ; preds = %cond.false1580
  %594 = load i8*, i8** %pat, align 8
  %arrayidx1586 = getelementptr inbounds i8, i8* %594, i64 3
  %595 = load i8, i8* %arrayidx1586, align 1
  %conv1587 = zext i8 %595 to i32
  %cmp1588 = icmp eq i32 185, %conv1587
  br i1 %cmp1588, label %cond.true1590, label %cond.false1591

cond.true1590:                                    ; preds = %land.lhs.true1585
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1591:                                   ; preds = %land.lhs.true1585, %cond.false1580
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1592:                                   ; preds = %lor.lhs.false1563
  %596 = load i8*, i8** %pat, align 8
  %arrayidx1593 = getelementptr inbounds i8, i8* %596, i64 1
  %597 = load i8, i8* %arrayidx1593, align 1
  %conv1594 = zext i8 %597 to i32
  %cmp1595 = icmp eq i32 185, %conv1594
  br i1 %cmp1595, label %land.lhs.true1597, label %cond.false1608

land.lhs.true1597:                                ; preds = %cond.false1592
  %598 = load i8*, i8** %pat, align 8
  %arrayidx1598 = getelementptr inbounds i8, i8* %598, i64 2
  %599 = load i8, i8* %arrayidx1598, align 1
  %conv1599 = zext i8 %599 to i32
  %cmp1600 = icmp eq i32 205, %conv1599
  br i1 %cmp1600, label %land.lhs.true1602, label %cond.false1608

land.lhs.true1602:                                ; preds = %land.lhs.true1597
  %600 = load i8*, i8** %pat, align 8
  %arrayidx1603 = getelementptr inbounds i8, i8* %600, i64 3
  %601 = load i8, i8* %arrayidx1603, align 1
  %conv1604 = zext i8 %601 to i32
  %cmp1605 = icmp eq i32 130, %conv1604
  br i1 %cmp1605, label %cond.true1607, label %cond.false1608

cond.true1607:                                    ; preds = %land.lhs.true1602
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1608:                                   ; preds = %land.lhs.true1602, %land.lhs.true1597, %cond.false1592
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1609:                                   ; preds = %cond.false1535
  %602 = load i8*, i8** %pat, align 8
  %arrayidx1610 = getelementptr inbounds i8, i8* %602, i64 0
  %603 = load i8, i8* %arrayidx1610, align 1
  %conv1611 = zext i8 %603 to i32
  %cmp1612 = icmp eq i32 207, %conv1611
  br i1 %cmp1612, label %cond.true1614, label %cond.false1706

cond.true1614:                                    ; preds = %cond.false1609
  %604 = load i8*, i8** %pat, align 8
  %arrayidx1615 = getelementptr inbounds i8, i8* %604, i64 1
  %605 = load i8, i8* %arrayidx1615, align 1
  %conv1616 = zext i8 %605 to i32
  %cmp1617 = icmp eq i32 129, %conv1616
  br i1 %cmp1617, label %cond.true1619, label %cond.false1631

cond.true1619:                                    ; preds = %cond.true1614
  %606 = load i8*, i8** %pat, align 8
  %arrayidx1620 = getelementptr inbounds i8, i8* %606, i64 2
  %607 = load i8, i8* %arrayidx1620, align 1
  %conv1621 = zext i8 %607 to i32
  %cmp1622 = icmp eq i32 204, %conv1621
  br i1 %cmp1622, label %land.lhs.true1624, label %cond.false1630

land.lhs.true1624:                                ; preds = %cond.true1619
  %608 = load i8*, i8** %pat, align 8
  %arrayidx1625 = getelementptr inbounds i8, i8* %608, i64 3
  %609 = load i8, i8* %arrayidx1625, align 1
  %conv1626 = zext i8 %609 to i32
  %cmp1627 = icmp eq i32 147, %conv1626
  br i1 %cmp1627, label %cond.true1629, label %cond.false1630

cond.true1629:                                    ; preds = %land.lhs.true1624
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1630:                                   ; preds = %land.lhs.true1624, %cond.true1619
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1631:                                   ; preds = %cond.true1614
  %610 = load i8*, i8** %pat, align 8
  %arrayidx1632 = getelementptr inbounds i8, i8* %610, i64 1
  %611 = load i8, i8* %arrayidx1632, align 1
  %conv1633 = zext i8 %611 to i32
  %cmp1634 = icmp eq i32 133, %conv1633
  br i1 %cmp1634, label %cond.true1636, label %cond.false1660

cond.true1636:                                    ; preds = %cond.false1631
  %612 = load i8*, i8** %pat, align 8
  %arrayidx1637 = getelementptr inbounds i8, i8* %612, i64 2
  %613 = load i8, i8* %arrayidx1637, align 1
  %conv1638 = zext i8 %613 to i32
  %cmp1639 = icmp eq i32 204, %conv1638
  br i1 %cmp1639, label %cond.true1641, label %cond.false1648

cond.true1641:                                    ; preds = %cond.true1636
  %614 = load i8*, i8** %pat, align 8
  %arrayidx1642 = getelementptr inbounds i8, i8* %614, i64 3
  %615 = load i8, i8* %arrayidx1642, align 1
  %conv1643 = zext i8 %615 to i32
  %cmp1644 = icmp eq i32 147, %conv1643
  br i1 %cmp1644, label %cond.true1646, label %cond.false1647

cond.true1646:                                    ; preds = %cond.true1641
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1647:                                   ; preds = %cond.true1641
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1648:                                   ; preds = %cond.true1636
  %616 = load i8*, i8** %pat, align 8
  %arrayidx1649 = getelementptr inbounds i8, i8* %616, i64 2
  %617 = load i8, i8* %arrayidx1649, align 1
  %conv1650 = zext i8 %617 to i32
  %cmp1651 = icmp eq i32 205, %conv1650
  br i1 %cmp1651, label %land.lhs.true1653, label %cond.false1659

land.lhs.true1653:                                ; preds = %cond.false1648
  %618 = load i8*, i8** %pat, align 8
  %arrayidx1654 = getelementptr inbounds i8, i8* %618, i64 3
  %619 = load i8, i8* %arrayidx1654, align 1
  %conv1655 = zext i8 %619 to i32
  %cmp1656 = icmp eq i32 130, %conv1655
  br i1 %cmp1656, label %cond.true1658, label %cond.false1659

cond.true1658:                                    ; preds = %land.lhs.true1653
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1659:                                   ; preds = %land.lhs.true1653, %cond.false1648
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1660:                                   ; preds = %cond.false1631
  %620 = load i8*, i8** %pat, align 8
  %arrayidx1661 = getelementptr inbounds i8, i8* %620, i64 1
  %621 = load i8, i8* %arrayidx1661, align 1
  %conv1662 = zext i8 %621 to i32
  %cmp1663 = icmp eq i32 137, %conv1662
  br i1 %cmp1663, label %cond.true1665, label %cond.false1689

cond.true1665:                                    ; preds = %cond.false1660
  %622 = load i8*, i8** %pat, align 8
  %arrayidx1666 = getelementptr inbounds i8, i8* %622, i64 2
  %623 = load i8, i8* %arrayidx1666, align 1
  %conv1667 = zext i8 %623 to i32
  %cmp1668 = icmp eq i32 205, %conv1667
  br i1 %cmp1668, label %cond.true1670, label %cond.false1677

cond.true1670:                                    ; preds = %cond.true1665
  %624 = load i8*, i8** %pat, align 8
  %arrayidx1671 = getelementptr inbounds i8, i8* %624, i64 3
  %625 = load i8, i8* %arrayidx1671, align 1
  %conv1672 = zext i8 %625 to i32
  %cmp1673 = icmp eq i32 130, %conv1672
  br i1 %cmp1673, label %cond.true1675, label %cond.false1676

cond.true1675:                                    ; preds = %cond.true1670
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1676:                                   ; preds = %cond.true1670
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1677:                                   ; preds = %cond.true1665
  %626 = load i8*, i8** %pat, align 8
  %arrayidx1678 = getelementptr inbounds i8, i8* %626, i64 2
  %627 = load i8, i8* %arrayidx1678, align 1
  %conv1679 = zext i8 %627 to i32
  %cmp1680 = icmp eq i32 206, %conv1679
  br i1 %cmp1680, label %land.lhs.true1682, label %cond.false1688

land.lhs.true1682:                                ; preds = %cond.false1677
  %628 = load i8*, i8** %pat, align 8
  %arrayidx1683 = getelementptr inbounds i8, i8* %628, i64 3
  %629 = load i8, i8* %arrayidx1683, align 1
  %conv1684 = zext i8 %629 to i32
  %cmp1685 = icmp eq i32 185, %conv1684
  br i1 %cmp1685, label %cond.true1687, label %cond.false1688

cond.true1687:                                    ; preds = %land.lhs.true1682
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1688:                                   ; preds = %land.lhs.true1682, %cond.false1677
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1689:                                   ; preds = %cond.false1660
  %630 = load i8*, i8** %pat, align 8
  %arrayidx1690 = getelementptr inbounds i8, i8* %630, i64 1
  %631 = load i8, i8* %arrayidx1690, align 1
  %conv1691 = zext i8 %631 to i32
  %cmp1692 = icmp eq i32 142, %conv1691
  br i1 %cmp1692, label %land.lhs.true1694, label %cond.false1705

land.lhs.true1694:                                ; preds = %cond.false1689
  %632 = load i8*, i8** %pat, align 8
  %arrayidx1695 = getelementptr inbounds i8, i8* %632, i64 2
  %633 = load i8, i8* %arrayidx1695, align 1
  %conv1696 = zext i8 %633 to i32
  %cmp1697 = icmp eq i32 206, %conv1696
  br i1 %cmp1697, label %land.lhs.true1699, label %cond.false1705

land.lhs.true1699:                                ; preds = %land.lhs.true1694
  %634 = load i8*, i8** %pat, align 8
  %arrayidx1700 = getelementptr inbounds i8, i8* %634, i64 3
  %635 = load i8, i8* %arrayidx1700, align 1
  %conv1701 = zext i8 %635 to i32
  %cmp1702 = icmp eq i32 185, %conv1701
  br i1 %cmp1702, label %cond.true1704, label %cond.false1705

cond.true1704:                                    ; preds = %land.lhs.true1699
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1705:                                   ; preds = %land.lhs.true1699, %land.lhs.true1694, %cond.false1689
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1706:                                   ; preds = %cond.false1609
  %636 = load i8*, i8** %pat, align 8
  %arrayidx1707 = getelementptr inbounds i8, i8* %636, i64 0
  %637 = load i8, i8* %arrayidx1707, align 1
  %conv1708 = zext i8 %637 to i32
  %cmp1709 = icmp eq i32 213, %conv1708
  br i1 %cmp1709, label %cond.true1711, label %cond.false1773

cond.true1711:                                    ; preds = %cond.false1706
  %638 = load i8*, i8** %pat, align 8
  %arrayidx1712 = getelementptr inbounds i8, i8* %638, i64 1
  %639 = load i8, i8* %arrayidx1712, align 1
  %conv1713 = zext i8 %639 to i32
  %cmp1714 = icmp eq i32 165, %conv1713
  br i1 %cmp1714, label %cond.true1716, label %cond.false1728

cond.true1716:                                    ; preds = %cond.true1711
  %640 = load i8*, i8** %pat, align 8
  %arrayidx1717 = getelementptr inbounds i8, i8* %640, i64 2
  %641 = load i8, i8* %arrayidx1717, align 1
  %conv1718 = zext i8 %641 to i32
  %cmp1719 = icmp eq i32 214, %conv1718
  br i1 %cmp1719, label %land.lhs.true1721, label %cond.false1727

land.lhs.true1721:                                ; preds = %cond.true1716
  %642 = load i8*, i8** %pat, align 8
  %arrayidx1722 = getelementptr inbounds i8, i8* %642, i64 3
  %643 = load i8, i8* %arrayidx1722, align 1
  %conv1723 = zext i8 %643 to i32
  %cmp1724 = icmp eq i32 130, %conv1723
  br i1 %cmp1724, label %cond.true1726, label %cond.false1727

cond.true1726:                                    ; preds = %land.lhs.true1721
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1727:                                   ; preds = %land.lhs.true1721, %cond.true1716
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1728:                                   ; preds = %cond.true1711
  %644 = load i8*, i8** %pat, align 8
  %arrayidx1729 = getelementptr inbounds i8, i8* %644, i64 1
  %645 = load i8, i8* %arrayidx1729, align 1
  %conv1730 = zext i8 %645 to i32
  %cmp1731 = icmp eq i32 180, %conv1730
  br i1 %cmp1731, label %cond.true1733, label %cond.false1756

cond.true1733:                                    ; preds = %cond.false1728
  %646 = load i8*, i8** %pat, align 8
  %arrayidx1734 = getelementptr inbounds i8, i8* %646, i64 2
  %647 = load i8, i8* %arrayidx1734, align 1
  %conv1735 = zext i8 %647 to i32
  %cmp1736 = icmp eq i32 213, %conv1735
  br i1 %cmp1736, label %land.lhs.true1738, label %cond.false1755

land.lhs.true1738:                                ; preds = %cond.true1733
  %648 = load i8*, i8** %pat, align 8
  %arrayidx1739 = getelementptr inbounds i8, i8* %648, i64 3
  %649 = load i8, i8* %arrayidx1739, align 1
  %conv1740 = zext i8 %649 to i32
  %and1741 = and i32 %conv1740, 247
  %cmp1742 = icmp eq i32 %and1741, 165
  br i1 %cmp1742, label %cond.true1754, label %lor.lhs.false1744

lor.lhs.false1744:                                ; preds = %land.lhs.true1738
  %650 = load i8*, i8** %pat, align 8
  %arrayidx1745 = getelementptr inbounds i8, i8* %650, i64 3
  %651 = load i8, i8* %arrayidx1745, align 1
  %conv1746 = zext i8 %651 to i32
  %cmp1747 = icmp eq i32 %conv1746, 171
  br i1 %cmp1747, label %cond.true1754, label %lor.lhs.false1749

lor.lhs.false1749:                                ; preds = %lor.lhs.false1744
  %652 = load i8*, i8** %pat, align 8
  %arrayidx1750 = getelementptr inbounds i8, i8* %652, i64 3
  %653 = load i8, i8* %arrayidx1750, align 1
  %conv1751 = zext i8 %653 to i32
  %cmp1752 = icmp eq i32 %conv1751, 182
  br i1 %cmp1752, label %cond.true1754, label %cond.false1755

cond.true1754:                                    ; preds = %lor.lhs.false1749, %lor.lhs.false1744, %land.lhs.true1738
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1755:                                   ; preds = %lor.lhs.false1749, %cond.true1733
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1756:                                   ; preds = %cond.false1728
  %654 = load i8*, i8** %pat, align 8
  %arrayidx1757 = getelementptr inbounds i8, i8* %654, i64 1
  %655 = load i8, i8* %arrayidx1757, align 1
  %conv1758 = zext i8 %655 to i32
  %cmp1759 = icmp eq i32 190, %conv1758
  br i1 %cmp1759, label %land.lhs.true1761, label %cond.false1772

land.lhs.true1761:                                ; preds = %cond.false1756
  %656 = load i8*, i8** %pat, align 8
  %arrayidx1762 = getelementptr inbounds i8, i8* %656, i64 2
  %657 = load i8, i8* %arrayidx1762, align 1
  %conv1763 = zext i8 %657 to i32
  %cmp1764 = icmp eq i32 213, %conv1763
  br i1 %cmp1764, label %land.lhs.true1766, label %cond.false1772

land.lhs.true1766:                                ; preds = %land.lhs.true1761
  %658 = load i8*, i8** %pat, align 8
  %arrayidx1767 = getelementptr inbounds i8, i8* %658, i64 3
  %659 = load i8, i8* %arrayidx1767, align 1
  %conv1768 = zext i8 %659 to i32
  %cmp1769 = icmp eq i32 182, %conv1768
  br i1 %cmp1769, label %cond.true1771, label %cond.false1772

cond.true1771:                                    ; preds = %land.lhs.true1766
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1772:                                   ; preds = %land.lhs.true1766, %land.lhs.true1761, %cond.false1756
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1773:                                   ; preds = %cond.false1706
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1774:                                   ; preds = %cond.false1332
  %660 = load i8*, i8** %pat_end, align 8
  %661 = load i8*, i8** %pat, align 8
  %sub.ptr.lhs.cast1775 = ptrtoint i8* %660 to i64
  %sub.ptr.rhs.cast1776 = ptrtoint i8* %661 to i64
  %sub.ptr.sub1777 = sub i64 %sub.ptr.lhs.cast1775, %sub.ptr.rhs.cast1776
  %cmp1778 = icmp sgt i64 %sub.ptr.sub1777, 2
  br i1 %cmp1778, label %cond.true1780, label %cond.false1955

cond.true1780:                                    ; preds = %cond.false1774
  %662 = load i8*, i8** %pat, align 8
  %arrayidx1781 = getelementptr inbounds i8, i8* %662, i64 0
  %663 = load i8, i8* %arrayidx1781, align 1
  %conv1782 = zext i8 %663 to i32
  %cmp1783 = icmp eq i32 97, %conv1782
  br i1 %cmp1783, label %cond.true1785, label %cond.false1797

cond.true1785:                                    ; preds = %cond.true1780
  %664 = load i8*, i8** %pat, align 8
  %arrayidx1786 = getelementptr inbounds i8, i8* %664, i64 1
  %665 = load i8, i8* %arrayidx1786, align 1
  %conv1787 = zext i8 %665 to i32
  %cmp1788 = icmp eq i32 202, %conv1787
  br i1 %cmp1788, label %land.lhs.true1790, label %cond.false1796

land.lhs.true1790:                                ; preds = %cond.true1785
  %666 = load i8*, i8** %pat, align 8
  %arrayidx1791 = getelementptr inbounds i8, i8* %666, i64 2
  %667 = load i8, i8* %arrayidx1791, align 1
  %conv1792 = zext i8 %667 to i32
  %cmp1793 = icmp eq i32 190, %conv1792
  br i1 %cmp1793, label %cond.true1795, label %cond.false1796

cond.true1795:                                    ; preds = %land.lhs.true1790
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1796:                                   ; preds = %land.lhs.true1790, %cond.true1785
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1797:                                   ; preds = %cond.true1780
  %668 = load i8*, i8** %pat, align 8
  %arrayidx1798 = getelementptr inbounds i8, i8* %668, i64 0
  %669 = load i8, i8* %arrayidx1798, align 1
  %conv1799 = zext i8 %669 to i32
  %cmp1800 = icmp eq i32 102, %conv1799
  br i1 %cmp1800, label %cond.true1802, label %cond.false1831

cond.true1802:                                    ; preds = %cond.false1797
  %670 = load i8*, i8** %pat, align 8
  %arrayidx1803 = getelementptr inbounds i8, i8* %670, i64 1
  %671 = load i8, i8* %arrayidx1803, align 1
  %conv1804 = zext i8 %671 to i32
  %cmp1805 = icmp eq i32 102, %conv1804
  br i1 %cmp1805, label %cond.true1807, label %cond.false1819

cond.true1807:                                    ; preds = %cond.true1802
  %672 = load i8*, i8** %pat, align 8
  %arrayidx1808 = getelementptr inbounds i8, i8* %672, i64 2
  %673 = load i8, i8* %arrayidx1808, align 1
  %conv1809 = zext i8 %673 to i32
  %cmp1810 = icmp eq i32 105, %conv1809
  br i1 %cmp1810, label %cond.true1817, label %lor.lhs.false1812

lor.lhs.false1812:                                ; preds = %cond.true1807
  %674 = load i8*, i8** %pat, align 8
  %arrayidx1813 = getelementptr inbounds i8, i8* %674, i64 2
  %675 = load i8, i8* %arrayidx1813, align 1
  %conv1814 = zext i8 %675 to i32
  %cmp1815 = icmp eq i32 108, %conv1814
  br i1 %cmp1815, label %cond.true1817, label %cond.false1818

cond.true1817:                                    ; preds = %lor.lhs.false1812, %cond.true1807
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1818:                                   ; preds = %lor.lhs.false1812
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1819:                                   ; preds = %cond.true1802
  %676 = load i8*, i8** %pat, align 8
  %arrayidx1820 = getelementptr inbounds i8, i8* %676, i64 1
  %677 = load i8, i8* %arrayidx1820, align 1
  %conv1821 = zext i8 %677 to i32
  %cmp1822 = icmp eq i32 105, %conv1821
  br i1 %cmp1822, label %cond.true1829, label %lor.lhs.false1824

lor.lhs.false1824:                                ; preds = %cond.false1819
  %678 = load i8*, i8** %pat, align 8
  %arrayidx1825 = getelementptr inbounds i8, i8* %678, i64 1
  %679 = load i8, i8* %arrayidx1825, align 1
  %conv1826 = zext i8 %679 to i32
  %cmp1827 = icmp eq i32 108, %conv1826
  br i1 %cmp1827, label %cond.true1829, label %cond.false1830

cond.true1829:                                    ; preds = %lor.lhs.false1824, %cond.false1819
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1830:                                   ; preds = %lor.lhs.false1824
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1831:                                   ; preds = %cond.false1797
  %680 = load i8*, i8** %pat, align 8
  %arrayidx1832 = getelementptr inbounds i8, i8* %680, i64 0
  %681 = load i8, i8* %arrayidx1832, align 1
  %conv1833 = zext i8 %681 to i32
  %cmp1834 = icmp eq i32 104, %conv1833
  br i1 %cmp1834, label %cond.true1836, label %cond.false1848

cond.true1836:                                    ; preds = %cond.false1831
  %682 = load i8*, i8** %pat, align 8
  %arrayidx1837 = getelementptr inbounds i8, i8* %682, i64 1
  %683 = load i8, i8* %arrayidx1837, align 1
  %conv1838 = zext i8 %683 to i32
  %cmp1839 = icmp eq i32 204, %conv1838
  br i1 %cmp1839, label %land.lhs.true1841, label %cond.false1847

land.lhs.true1841:                                ; preds = %cond.true1836
  %684 = load i8*, i8** %pat, align 8
  %arrayidx1842 = getelementptr inbounds i8, i8* %684, i64 2
  %685 = load i8, i8* %arrayidx1842, align 1
  %conv1843 = zext i8 %685 to i32
  %cmp1844 = icmp eq i32 177, %conv1843
  br i1 %cmp1844, label %cond.true1846, label %cond.false1847

cond.true1846:                                    ; preds = %land.lhs.true1841
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1847:                                   ; preds = %land.lhs.true1841, %cond.true1836
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1848:                                   ; preds = %cond.false1831
  %686 = load i8*, i8** %pat, align 8
  %arrayidx1849 = getelementptr inbounds i8, i8* %686, i64 0
  %687 = load i8, i8* %arrayidx1849, align 1
  %conv1850 = zext i8 %687 to i32
  %cmp1851 = icmp eq i32 105, %conv1850
  br i1 %cmp1851, label %cond.true1853, label %cond.false1865

cond.true1853:                                    ; preds = %cond.false1848
  %688 = load i8*, i8** %pat, align 8
  %arrayidx1854 = getelementptr inbounds i8, i8* %688, i64 1
  %689 = load i8, i8* %arrayidx1854, align 1
  %conv1855 = zext i8 %689 to i32
  %cmp1856 = icmp eq i32 204, %conv1855
  br i1 %cmp1856, label %land.lhs.true1858, label %cond.false1864

land.lhs.true1858:                                ; preds = %cond.true1853
  %690 = load i8*, i8** %pat, align 8
  %arrayidx1859 = getelementptr inbounds i8, i8* %690, i64 2
  %691 = load i8, i8* %arrayidx1859, align 1
  %conv1860 = zext i8 %691 to i32
  %cmp1861 = icmp eq i32 135, %conv1860
  br i1 %cmp1861, label %cond.true1863, label %cond.false1864

cond.true1863:                                    ; preds = %land.lhs.true1858
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1864:                                   ; preds = %land.lhs.true1858, %cond.true1853
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1865:                                   ; preds = %cond.false1848
  %692 = load i8*, i8** %pat, align 8
  %arrayidx1866 = getelementptr inbounds i8, i8* %692, i64 0
  %693 = load i8, i8* %arrayidx1866, align 1
  %conv1867 = zext i8 %693 to i32
  %cmp1868 = icmp eq i32 106, %conv1867
  br i1 %cmp1868, label %cond.true1870, label %cond.false1882

cond.true1870:                                    ; preds = %cond.false1865
  %694 = load i8*, i8** %pat, align 8
  %arrayidx1871 = getelementptr inbounds i8, i8* %694, i64 1
  %695 = load i8, i8* %arrayidx1871, align 1
  %conv1872 = zext i8 %695 to i32
  %cmp1873 = icmp eq i32 204, %conv1872
  br i1 %cmp1873, label %land.lhs.true1875, label %cond.false1881

land.lhs.true1875:                                ; preds = %cond.true1870
  %696 = load i8*, i8** %pat, align 8
  %arrayidx1876 = getelementptr inbounds i8, i8* %696, i64 2
  %697 = load i8, i8* %arrayidx1876, align 1
  %conv1877 = zext i8 %697 to i32
  %cmp1878 = icmp eq i32 140, %conv1877
  br i1 %cmp1878, label %cond.true1880, label %cond.false1881

cond.true1880:                                    ; preds = %land.lhs.true1875
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1881:                                   ; preds = %land.lhs.true1875, %cond.true1870
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1882:                                   ; preds = %cond.false1865
  %698 = load i8*, i8** %pat, align 8
  %arrayidx1883 = getelementptr inbounds i8, i8* %698, i64 0
  %699 = load i8, i8* %arrayidx1883, align 1
  %conv1884 = zext i8 %699 to i32
  %cmp1885 = icmp eq i32 115, %conv1884
  br i1 %cmp1885, label %cond.true1887, label %cond.false1899

cond.true1887:                                    ; preds = %cond.false1882
  %700 = load i8*, i8** %pat, align 8
  %arrayidx1888 = getelementptr inbounds i8, i8* %700, i64 1
  %701 = load i8, i8* %arrayidx1888, align 1
  %conv1889 = zext i8 %701 to i32
  %cmp1890 = icmp eq i32 115, %conv1889
  br i1 %cmp1890, label %cond.true1897, label %lor.lhs.false1892

lor.lhs.false1892:                                ; preds = %cond.true1887
  %702 = load i8*, i8** %pat, align 8
  %arrayidx1893 = getelementptr inbounds i8, i8* %702, i64 1
  %703 = load i8, i8* %arrayidx1893, align 1
  %conv1894 = zext i8 %703 to i32
  %cmp1895 = icmp eq i32 116, %conv1894
  br i1 %cmp1895, label %cond.true1897, label %cond.false1898

cond.true1897:                                    ; preds = %lor.lhs.false1892, %cond.true1887
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1898:                                   ; preds = %lor.lhs.false1892
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1899:                                   ; preds = %cond.false1882
  %704 = load i8*, i8** %pat, align 8
  %arrayidx1900 = getelementptr inbounds i8, i8* %704, i64 0
  %705 = load i8, i8* %arrayidx1900, align 1
  %conv1901 = zext i8 %705 to i32
  %cmp1902 = icmp eq i32 116, %conv1901
  br i1 %cmp1902, label %cond.true1904, label %cond.false1916

cond.true1904:                                    ; preds = %cond.false1899
  %706 = load i8*, i8** %pat, align 8
  %arrayidx1905 = getelementptr inbounds i8, i8* %706, i64 1
  %707 = load i8, i8* %arrayidx1905, align 1
  %conv1906 = zext i8 %707 to i32
  %cmp1907 = icmp eq i32 204, %conv1906
  br i1 %cmp1907, label %land.lhs.true1909, label %cond.false1915

land.lhs.true1909:                                ; preds = %cond.true1904
  %708 = load i8*, i8** %pat, align 8
  %arrayidx1910 = getelementptr inbounds i8, i8* %708, i64 2
  %709 = load i8, i8* %arrayidx1910, align 1
  %conv1911 = zext i8 %709 to i32
  %cmp1912 = icmp eq i32 136, %conv1911
  br i1 %cmp1912, label %cond.true1914, label %cond.false1915

cond.true1914:                                    ; preds = %land.lhs.true1909
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1915:                                   ; preds = %land.lhs.true1909, %cond.true1904
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1916:                                   ; preds = %cond.false1899
  %710 = load i8*, i8** %pat, align 8
  %arrayidx1917 = getelementptr inbounds i8, i8* %710, i64 0
  %711 = load i8, i8* %arrayidx1917, align 1
  %conv1918 = zext i8 %711 to i32
  %cmp1919 = icmp eq i32 119, %conv1918
  br i1 %cmp1919, label %cond.true1926, label %lor.lhs.false1921

lor.lhs.false1921:                                ; preds = %cond.false1916
  %712 = load i8*, i8** %pat, align 8
  %arrayidx1922 = getelementptr inbounds i8, i8* %712, i64 0
  %713 = load i8, i8* %arrayidx1922, align 1
  %conv1923 = zext i8 %713 to i32
  %cmp1924 = icmp eq i32 121, %conv1923
  br i1 %cmp1924, label %cond.true1926, label %cond.false1938

cond.true1926:                                    ; preds = %lor.lhs.false1921, %cond.false1916
  %714 = load i8*, i8** %pat, align 8
  %arrayidx1927 = getelementptr inbounds i8, i8* %714, i64 1
  %715 = load i8, i8* %arrayidx1927, align 1
  %conv1928 = zext i8 %715 to i32
  %cmp1929 = icmp eq i32 204, %conv1928
  br i1 %cmp1929, label %land.lhs.true1931, label %cond.false1937

land.lhs.true1931:                                ; preds = %cond.true1926
  %716 = load i8*, i8** %pat, align 8
  %arrayidx1932 = getelementptr inbounds i8, i8* %716, i64 2
  %717 = load i8, i8* %arrayidx1932, align 1
  %conv1933 = zext i8 %717 to i32
  %cmp1934 = icmp eq i32 138, %conv1933
  br i1 %cmp1934, label %cond.true1936, label %cond.false1937

cond.true1936:                                    ; preds = %land.lhs.true1931
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1937:                                   ; preds = %land.lhs.true1931, %cond.true1926
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1938:                                   ; preds = %lor.lhs.false1921
  %718 = load i8*, i8** %pat, align 8
  %arrayidx1939 = getelementptr inbounds i8, i8* %718, i64 0
  %719 = load i8, i8* %arrayidx1939, align 1
  %conv1940 = zext i8 %719 to i32
  %cmp1941 = icmp eq i32 202, %conv1940
  br i1 %cmp1941, label %land.lhs.true1943, label %cond.false1954

land.lhs.true1943:                                ; preds = %cond.false1938
  %720 = load i8*, i8** %pat, align 8
  %arrayidx1944 = getelementptr inbounds i8, i8* %720, i64 1
  %721 = load i8, i8* %arrayidx1944, align 1
  %conv1945 = zext i8 %721 to i32
  %cmp1946 = icmp eq i32 188, %conv1945
  br i1 %cmp1946, label %land.lhs.true1948, label %cond.false1954

land.lhs.true1948:                                ; preds = %land.lhs.true1943
  %722 = load i8*, i8** %pat, align 8
  %arrayidx1949 = getelementptr inbounds i8, i8* %722, i64 2
  %723 = load i8, i8* %arrayidx1949, align 1
  %conv1950 = zext i8 %723 to i32
  %cmp1951 = icmp eq i32 110, %conv1950
  br i1 %cmp1951, label %cond.true1953, label %cond.false1954

cond.true1953:                                    ; preds = %land.lhs.true1948
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1954:                                   ; preds = %land.lhs.true1948, %land.lhs.true1943, %cond.false1938
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1955:                                   ; preds = %cond.false1774
  %724 = load i8*, i8** %pat_end, align 8
  %725 = load i8*, i8** %pat, align 8
  %sub.ptr.lhs.cast1956 = ptrtoint i8* %724 to i64
  %sub.ptr.rhs.cast1957 = ptrtoint i8* %725 to i64
  %sub.ptr.sub1958 = sub i64 %sub.ptr.lhs.cast1956, %sub.ptr.rhs.cast1957
  %cmp1959 = icmp sgt i64 %sub.ptr.sub1958, 1
  br i1 %cmp1959, label %cond.true1961, label %cond.false2000

cond.true1961:                                    ; preds = %cond.false1955
  %726 = load i8*, i8** %pat, align 8
  %arrayidx1962 = getelementptr inbounds i8, i8* %726, i64 0
  %727 = load i8, i8* %arrayidx1962, align 1
  %conv1963 = zext i8 %727 to i32
  %cmp1964 = icmp eq i32 102, %conv1963
  br i1 %cmp1964, label %cond.true1966, label %cond.false1983

cond.true1966:                                    ; preds = %cond.true1961
  %728 = load i8*, i8** %pat, align 8
  %arrayidx1967 = getelementptr inbounds i8, i8* %728, i64 1
  %729 = load i8, i8* %arrayidx1967, align 1
  %conv1968 = zext i8 %729 to i32
  %cmp1969 = icmp eq i32 102, %conv1968
  br i1 %cmp1969, label %cond.true1981, label %lor.lhs.false1971

lor.lhs.false1971:                                ; preds = %cond.true1966
  %730 = load i8*, i8** %pat, align 8
  %arrayidx1972 = getelementptr inbounds i8, i8* %730, i64 1
  %731 = load i8, i8* %arrayidx1972, align 1
  %conv1973 = zext i8 %731 to i32
  %cmp1974 = icmp eq i32 105, %conv1973
  br i1 %cmp1974, label %cond.true1981, label %lor.lhs.false1976

lor.lhs.false1976:                                ; preds = %lor.lhs.false1971
  %732 = load i8*, i8** %pat, align 8
  %arrayidx1977 = getelementptr inbounds i8, i8* %732, i64 1
  %733 = load i8, i8* %arrayidx1977, align 1
  %conv1978 = zext i8 %733 to i32
  %cmp1979 = icmp eq i32 108, %conv1978
  br i1 %cmp1979, label %cond.true1981, label %cond.false1982

cond.true1981:                                    ; preds = %lor.lhs.false1976, %lor.lhs.false1971, %cond.true1966
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1982:                                   ; preds = %lor.lhs.false1976
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false1983:                                   ; preds = %cond.true1961
  %734 = load i8*, i8** %pat, align 8
  %arrayidx1984 = getelementptr inbounds i8, i8* %734, i64 0
  %735 = load i8, i8* %arrayidx1984, align 1
  %conv1985 = zext i8 %735 to i32
  %cmp1986 = icmp eq i32 115, %conv1985
  br i1 %cmp1986, label %land.lhs.true1988, label %cond.false1999

land.lhs.true1988:                                ; preds = %cond.false1983
  %736 = load i8*, i8** %pat, align 8
  %arrayidx1989 = getelementptr inbounds i8, i8* %736, i64 1
  %737 = load i8, i8* %arrayidx1989, align 1
  %conv1990 = zext i8 %737 to i32
  %cmp1991 = icmp eq i32 115, %conv1990
  br i1 %cmp1991, label %cond.true1998, label %lor.lhs.false1993

lor.lhs.false1993:                                ; preds = %land.lhs.true1988
  %738 = load i8*, i8** %pat, align 8
  %arrayidx1994 = getelementptr inbounds i8, i8* %738, i64 1
  %739 = load i8, i8* %arrayidx1994, align 1
  %conv1995 = zext i8 %739 to i32
  %cmp1996 = icmp eq i32 116, %conv1995
  br i1 %cmp1996, label %cond.true1998, label %cond.false1999

cond.true1998:                                    ; preds = %lor.lhs.false1993, %land.lhs.true1988
  br i1 true, label %if.then2122, label %lor.lhs.false2001

cond.false1999:                                   ; preds = %lor.lhs.false1993, %cond.false1983
  br i1 false, label %if.then2122, label %lor.lhs.false2001

cond.false2000:                                   ; preds = %cond.false1955
  br i1 false, label %if.then2122, label %lor.lhs.false2001

lor.lhs.false2001:                                ; preds = %cond.false2000, %cond.false1999, %cond.true1998, %cond.false1982, %cond.true1981, %cond.false1954, %cond.true1953, %cond.false1937, %cond.true1936, %cond.false1915, %cond.true1914, %cond.false1898, %cond.true1897, %cond.false1881, %cond.true1880, %cond.false1864, %cond.true1863, %cond.false1847, %cond.true1846, %cond.false1830, %cond.true1829, %cond.false1818, %cond.true1817, %cond.false1796, %cond.true1795, %cond.false1773, %cond.false1772, %cond.true1771, %cond.false1755, %cond.true1754, %cond.false1727, %cond.true1726, %cond.false1705, %cond.true1704, %cond.false1688, %cond.true1687, %cond.false1676, %cond.true1675, %cond.false1659, %cond.true1658, %cond.false1647, %cond.true1646, %cond.false1630, %cond.true1629, %cond.false1608, %cond.true1607, %cond.false1591, %cond.true1590, %cond.false1579, %cond.true1578, %cond.false1557, %cond.true1556, %cond.false1534, %cond.true1533, %cond.false1517, %cond.true1516, %cond.false1495, %cond.true1494, %cond.false1473, %cond.true1472, %cond.false1456, %cond.true1455, %cond.false1439, %cond.true1438, %cond.false1422, %cond.true1421, %cond.false1405, %cond.true1404, %cond.false1388, %cond.true1387, %cond.false1376, %cond.true1375, %cond.false1354, %cond.true1353, %cond.false1331, %cond.false1330, %cond.true1329, %cond.false1296, %cond.true1295, %cond.false1268, %cond.true1267, %cond.false1251, %cond.true1250, %cond.false1223, %cond.true1222, %cond.false1201, %cond.true1200, %cond.false1184, %cond.true1183, %cond.false1172, %cond.true1171, %cond.false1155, %cond.true1154, %cond.false1143, %cond.true1142, %cond.false1126, %cond.true1125, %cond.false1104, %cond.true1103, %cond.false1087, %cond.true1086, %cond.false1075, %cond.true1074, %cond.false1053, %cond.true1052, %cond.false1030, %cond.true1029, %cond.false1013, %cond.true1012, %cond.false991, %cond.true990, %cond.false969, %cond.true968, %cond.false952, %cond.true951, %cond.false935, %cond.true934, %cond.false918, %cond.true917, %cond.false901, %cond.true900, %cond.false884, %cond.true883, %cond.false872, %cond.true871, %cond.false850, %cond.true849, %cond.false827, %cond.false826, %cond.true825, %cond.false792, %cond.true791, %cond.false764, %cond.true763, %cond.false747, %cond.true746, %cond.false719, %cond.true718, %cond.false697, %cond.true696, %cond.false680, %cond.true679, %cond.false668, %cond.false667, %cond.true666, %cond.false640, %cond.true639, %cond.false628, %cond.false627, %cond.true626, %cond.false615, %cond.true614, %cond.false597, %cond.true596, %cond.false585, %cond.true584, %cond.false557, %cond.true556, %cond.false535, %cond.false534, %cond.true533, %cond.false522, %cond.false521, %cond.true520, %cond.false509, %cond.true508, %cond.false481, %cond.true480, %cond.false469, %cond.false468, %cond.true467, %cond.false436, %cond.true435, %cond.false413, %cond.true412, %cond.false396, %cond.true395, %cond.false374, %cond.true373, %cond.false352, %cond.true351, %cond.false335, %cond.true334, %cond.false318, %cond.true317, %cond.false301, %cond.true300, %cond.false284, %cond.true283, %cond.false267, %cond.true266, %cond.false255, %cond.true254, %cond.false233, %cond.true232, %if.end211
  %740 = load i8, i8* %is_utf8_pat, align 1
  %tobool2002 = trunc i8 %740 to i1
  br i1 %tobool2002, label %if.else2123, label %land.lhs.true2003

land.lhs.true2003:                                ; preds = %lor.lhs.false2001
  %741 = load i8*, i8** %pat_end, align 8
  %742 = load i8*, i8** %pat, align 8
  %sub.ptr.lhs.cast2004 = ptrtoint i8* %741 to i64
  %sub.ptr.rhs.cast2005 = ptrtoint i8* %742 to i64
  %sub.ptr.sub2006 = sub i64 %sub.ptr.lhs.cast2004, %sub.ptr.rhs.cast2005
  %cmp2007 = icmp sgt i64 %sub.ptr.sub2006, 2
  br i1 %cmp2007, label %cond.true2009, label %cond.false2069

cond.true2009:                                    ; preds = %land.lhs.true2003
  %743 = load i8*, i8** %pat, align 8
  %arrayidx2010 = getelementptr inbounds i8, i8* %743, i64 0
  %744 = load i8, i8* %arrayidx2010, align 1
  %conv2011 = zext i8 %744 to i32
  %and2012 = and i32 %conv2011, 223
  %cmp2013 = icmp eq i32 %and2012, 70
  br i1 %cmp2013, label %cond.true2015, label %cond.false2049

cond.true2015:                                    ; preds = %cond.true2009
  %745 = load i8*, i8** %pat, align 8
  %arrayidx2016 = getelementptr inbounds i8, i8* %745, i64 1
  %746 = load i8, i8* %arrayidx2016, align 1
  %conv2017 = zext i8 %746 to i32
  %and2018 = and i32 %conv2017, 223
  %cmp2019 = icmp eq i32 %and2018, 70
  br i1 %cmp2019, label %cond.true2021, label %cond.false2035

cond.true2021:                                    ; preds = %cond.true2015
  %747 = load i8*, i8** %pat, align 8
  %arrayidx2022 = getelementptr inbounds i8, i8* %747, i64 2
  %748 = load i8, i8* %arrayidx2022, align 1
  %conv2023 = zext i8 %748 to i32
  %and2024 = and i32 %conv2023, 223
  %cmp2025 = icmp eq i32 %and2024, 73
  br i1 %cmp2025, label %cond.true2033, label %lor.lhs.false2027

lor.lhs.false2027:                                ; preds = %cond.true2021
  %749 = load i8*, i8** %pat, align 8
  %arrayidx2028 = getelementptr inbounds i8, i8* %749, i64 2
  %750 = load i8, i8* %arrayidx2028, align 1
  %conv2029 = zext i8 %750 to i32
  %and2030 = and i32 %conv2029, 223
  %cmp2031 = icmp eq i32 %and2030, 76
  br i1 %cmp2031, label %cond.true2033, label %cond.false2034

cond.true2033:                                    ; preds = %lor.lhs.false2027, %cond.true2021
  br i1 true, label %if.then2122, label %if.else2123

cond.false2034:                                   ; preds = %lor.lhs.false2027
  br i1 true, label %if.then2122, label %if.else2123

cond.false2035:                                   ; preds = %cond.true2015
  %751 = load i8*, i8** %pat, align 8
  %arrayidx2036 = getelementptr inbounds i8, i8* %751, i64 1
  %752 = load i8, i8* %arrayidx2036, align 1
  %conv2037 = zext i8 %752 to i32
  %and2038 = and i32 %conv2037, 223
  %cmp2039 = icmp eq i32 %and2038, 73
  br i1 %cmp2039, label %cond.true2047, label %lor.lhs.false2041

lor.lhs.false2041:                                ; preds = %cond.false2035
  %753 = load i8*, i8** %pat, align 8
  %arrayidx2042 = getelementptr inbounds i8, i8* %753, i64 1
  %754 = load i8, i8* %arrayidx2042, align 1
  %conv2043 = zext i8 %754 to i32
  %and2044 = and i32 %conv2043, 223
  %cmp2045 = icmp eq i32 %and2044, 76
  br i1 %cmp2045, label %cond.true2047, label %cond.false2048

cond.true2047:                                    ; preds = %lor.lhs.false2041, %cond.false2035
  br i1 true, label %if.then2122, label %if.else2123

cond.false2048:                                   ; preds = %lor.lhs.false2041
  br i1 false, label %if.then2122, label %if.else2123

cond.false2049:                                   ; preds = %cond.true2009
  %755 = load i8*, i8** %pat, align 8
  %arrayidx2050 = getelementptr inbounds i8, i8* %755, i64 0
  %756 = load i8, i8* %arrayidx2050, align 1
  %conv2051 = zext i8 %756 to i32
  %and2052 = and i32 %conv2051, 223
  %cmp2053 = icmp eq i32 %and2052, 83
  br i1 %cmp2053, label %land.lhs.true2055, label %cond.false2068

land.lhs.true2055:                                ; preds = %cond.false2049
  %757 = load i8*, i8** %pat, align 8
  %arrayidx2056 = getelementptr inbounds i8, i8* %757, i64 1
  %758 = load i8, i8* %arrayidx2056, align 1
  %conv2057 = zext i8 %758 to i32
  %and2058 = and i32 %conv2057, 223
  %cmp2059 = icmp eq i32 %and2058, 83
  br i1 %cmp2059, label %cond.true2067, label %lor.lhs.false2061

lor.lhs.false2061:                                ; preds = %land.lhs.true2055
  %759 = load i8*, i8** %pat, align 8
  %arrayidx2062 = getelementptr inbounds i8, i8* %759, i64 1
  %760 = load i8, i8* %arrayidx2062, align 1
  %conv2063 = zext i8 %760 to i32
  %and2064 = and i32 %conv2063, 223
  %cmp2065 = icmp eq i32 %and2064, 84
  br i1 %cmp2065, label %cond.true2067, label %cond.false2068

cond.true2067:                                    ; preds = %lor.lhs.false2061, %land.lhs.true2055
  br i1 true, label %if.then2122, label %if.else2123

cond.false2068:                                   ; preds = %lor.lhs.false2061, %cond.false2049
  br i1 false, label %if.then2122, label %if.else2123

cond.false2069:                                   ; preds = %land.lhs.true2003
  %761 = load i8*, i8** %pat_end, align 8
  %762 = load i8*, i8** %pat, align 8
  %sub.ptr.lhs.cast2070 = ptrtoint i8* %761 to i64
  %sub.ptr.rhs.cast2071 = ptrtoint i8* %762 to i64
  %sub.ptr.sub2072 = sub i64 %sub.ptr.lhs.cast2070, %sub.ptr.rhs.cast2071
  %cmp2073 = icmp sgt i64 %sub.ptr.sub2072, 1
  br i1 %cmp2073, label %cond.true2075, label %cond.false2121

cond.true2075:                                    ; preds = %cond.false2069
  %763 = load i8*, i8** %pat, align 8
  %arrayidx2076 = getelementptr inbounds i8, i8* %763, i64 0
  %764 = load i8, i8* %arrayidx2076, align 1
  %conv2077 = zext i8 %764 to i32
  %and2078 = and i32 %conv2077, 223
  %cmp2079 = icmp eq i32 %and2078, 70
  br i1 %cmp2079, label %cond.true2081, label %cond.false2101

cond.true2081:                                    ; preds = %cond.true2075
  %765 = load i8*, i8** %pat, align 8
  %arrayidx2082 = getelementptr inbounds i8, i8* %765, i64 1
  %766 = load i8, i8* %arrayidx2082, align 1
  %conv2083 = zext i8 %766 to i32
  %and2084 = and i32 %conv2083, 223
  %cmp2085 = icmp eq i32 %and2084, 70
  br i1 %cmp2085, label %cond.true2099, label %lor.lhs.false2087

lor.lhs.false2087:                                ; preds = %cond.true2081
  %767 = load i8*, i8** %pat, align 8
  %arrayidx2088 = getelementptr inbounds i8, i8* %767, i64 1
  %768 = load i8, i8* %arrayidx2088, align 1
  %conv2089 = zext i8 %768 to i32
  %and2090 = and i32 %conv2089, 223
  %cmp2091 = icmp eq i32 %and2090, 73
  br i1 %cmp2091, label %cond.true2099, label %lor.lhs.false2093

lor.lhs.false2093:                                ; preds = %lor.lhs.false2087
  %769 = load i8*, i8** %pat, align 8
  %arrayidx2094 = getelementptr inbounds i8, i8* %769, i64 1
  %770 = load i8, i8* %arrayidx2094, align 1
  %conv2095 = zext i8 %770 to i32
  %and2096 = and i32 %conv2095, 223
  %cmp2097 = icmp eq i32 %and2096, 76
  br i1 %cmp2097, label %cond.true2099, label %cond.false2100

cond.true2099:                                    ; preds = %lor.lhs.false2093, %lor.lhs.false2087, %cond.true2081
  br i1 true, label %if.then2122, label %if.else2123

cond.false2100:                                   ; preds = %lor.lhs.false2093
  br i1 false, label %if.then2122, label %if.else2123

cond.false2101:                                   ; preds = %cond.true2075
  %771 = load i8*, i8** %pat, align 8
  %arrayidx2102 = getelementptr inbounds i8, i8* %771, i64 0
  %772 = load i8, i8* %arrayidx2102, align 1
  %conv2103 = zext i8 %772 to i32
  %and2104 = and i32 %conv2103, 223
  %cmp2105 = icmp eq i32 %and2104, 83
  br i1 %cmp2105, label %land.lhs.true2107, label %cond.false2120

land.lhs.true2107:                                ; preds = %cond.false2101
  %773 = load i8*, i8** %pat, align 8
  %arrayidx2108 = getelementptr inbounds i8, i8* %773, i64 1
  %774 = load i8, i8* %arrayidx2108, align 1
  %conv2109 = zext i8 %774 to i32
  %and2110 = and i32 %conv2109, 223
  %cmp2111 = icmp eq i32 %and2110, 83
  br i1 %cmp2111, label %cond.true2119, label %lor.lhs.false2113

lor.lhs.false2113:                                ; preds = %land.lhs.true2107
  %775 = load i8*, i8** %pat, align 8
  %arrayidx2114 = getelementptr inbounds i8, i8* %775, i64 1
  %776 = load i8, i8* %arrayidx2114, align 1
  %conv2115 = zext i8 %776 to i32
  %and2116 = and i32 %conv2115, 223
  %cmp2117 = icmp eq i32 %and2116, 84
  br i1 %cmp2117, label %cond.true2119, label %cond.false2120

cond.true2119:                                    ; preds = %lor.lhs.false2113, %land.lhs.true2107
  br i1 true, label %if.then2122, label %if.else2123

cond.false2120:                                   ; preds = %lor.lhs.false2113, %cond.false2101
  br i1 false, label %if.then2122, label %if.else2123

cond.false2121:                                   ; preds = %cond.false2069
  br i1 false, label %if.then2122, label %if.else2123

if.then2122:                                      ; preds = %cond.false2121, %cond.false2120, %cond.true2119, %cond.false2100, %cond.true2099, %cond.false2068, %cond.true2067, %cond.false2048, %cond.true2047, %cond.false2034, %cond.true2033, %cond.false2000, %cond.false1999, %cond.true1998, %cond.false1982, %cond.true1981, %cond.false1954, %cond.true1953, %cond.false1937, %cond.true1936, %cond.false1915, %cond.true1914, %cond.false1898, %cond.true1897, %cond.false1881, %cond.true1880, %cond.false1864, %cond.true1863, %cond.false1847, %cond.true1846, %cond.false1830, %cond.true1829, %cond.false1818, %cond.true1817, %cond.false1796, %cond.true1795, %cond.false1773, %cond.false1772, %cond.true1771, %cond.false1755, %cond.true1754, %cond.false1727, %cond.true1726, %cond.false1705, %cond.true1704, %cond.false1688, %cond.true1687, %cond.false1676, %cond.true1675, %cond.false1659, %cond.true1658, %cond.false1647, %cond.true1646, %cond.false1630, %cond.true1629, %cond.false1608, %cond.true1607, %cond.false1591, %cond.true1590, %cond.false1579, %cond.true1578, %cond.false1557, %cond.true1556, %cond.false1534, %cond.true1533, %cond.false1517, %cond.true1516, %cond.false1495, %cond.true1494, %cond.false1473, %cond.true1472, %cond.false1456, %cond.true1455, %cond.false1439, %cond.true1438, %cond.false1422, %cond.true1421, %cond.false1405, %cond.true1404, %cond.false1388, %cond.true1387, %cond.false1376, %cond.true1375, %cond.false1354, %cond.true1353, %cond.false1331, %cond.false1330, %cond.true1329, %cond.false1296, %cond.true1295, %cond.false1268, %cond.true1267, %cond.false1251, %cond.true1250, %cond.false1223, %cond.true1222, %cond.false1201, %cond.true1200, %cond.false1184, %cond.true1183, %cond.false1172, %cond.true1171, %cond.false1155, %cond.true1154, %cond.false1143, %cond.true1142, %cond.false1126, %cond.true1125, %cond.false1104, %cond.true1103, %cond.false1087, %cond.true1086, %cond.false1075, %cond.true1074, %cond.false1053, %cond.true1052, %cond.false1030, %cond.true1029, %cond.false1013, %cond.true1012, %cond.false991, %cond.true990, %cond.false969, %cond.true968, %cond.false952, %cond.true951, %cond.false935, %cond.true934, %cond.false918, %cond.true917, %cond.false901, %cond.true900, %cond.false884, %cond.true883, %cond.false872, %cond.true871, %cond.false850, %cond.true849, %cond.false827, %cond.false826, %cond.true825, %cond.false792, %cond.true791, %cond.false764, %cond.true763, %cond.false747, %cond.true746, %cond.false719, %cond.true718, %cond.false697, %cond.true696, %cond.false680, %cond.true679, %cond.false668, %cond.false667, %cond.true666, %cond.false640, %cond.true639, %cond.false628, %cond.false627, %cond.true626, %cond.false615, %cond.true614, %cond.false597, %cond.true596, %cond.false585, %cond.true584, %cond.false557, %cond.true556, %cond.false535, %cond.false534, %cond.true533, %cond.false522, %cond.false521, %cond.true520, %cond.false509, %cond.true508, %cond.false481, %cond.true480, %cond.false469, %cond.false468, %cond.true467, %cond.false436, %cond.true435, %cond.false413, %cond.true412, %cond.false396, %cond.true395, %cond.false374, %cond.true373, %cond.false352, %cond.true351, %cond.false335, %cond.true334, %cond.false318, %cond.true317, %cond.false301, %cond.true300, %cond.false284, %cond.true283, %cond.false267, %cond.true266, %cond.false255, %cond.true254, %cond.false233, %cond.true232
  store i8 1, i8* %use_chrtest_void, align 1
  br label %if.end2280

if.else2123:                                      ; preds = %cond.false2121, %cond.false2120, %cond.true2119, %cond.false2100, %cond.true2099, %cond.false2068, %cond.true2067, %cond.false2048, %cond.true2047, %cond.false2034, %cond.true2033, %lor.lhs.false2001
  %777 = load i8, i8* %is_utf8_pat, align 1
  %tobool2124 = trunc i8 %777 to i1
  br i1 %tobool2124, label %cond.true2126, label %cond.false2128

cond.true2126:                                    ; preds = %if.else2123
  %778 = load i8*, i8** %pat, align 8
  %call2127 = call i64 @Perl_valid_utf8_to_uvchr(i8* %778, i64* null)
  br label %cond.end2130

cond.false2128:                                   ; preds = %if.else2123
  %779 = load i8*, i8** %pat, align 8
  %780 = load i8, i8* %779, align 1
  %conv2129 = zext i8 %780 to i64
  br label %cond.end2130

cond.end2130:                                     ; preds = %cond.false2128, %cond.true2126
  %cond2131 = phi i64 [ %call2127, %cond.true2126 ], [ %conv2129, %cond.false2128 ]
  store i64 %cond2131, i64* %c1, align 8
  %781 = load i64, i64* %c1, align 8
  %cmp2132 = icmp ugt i64 %781, 255
  br i1 %cmp2132, label %if.then2134, label %if.else2219

if.then2134:                                      ; preds = %cond.end2130
  %782 = load %struct.hv*, %struct.hv** @PL_utf8_foldclosures, align 8
  %tobool2135 = icmp ne %struct.hv* %782, null
  br i1 %tobool2135, label %if.end2137, label %if.then2136

if.then2136:                                      ; preds = %if.then2134
  call void @Perl__load_PL_utf8_foldclosures()
  br label %if.end2137

if.end2137:                                       ; preds = %if.then2136, %if.then2134
  %783 = load %struct.hv*, %struct.hv** @PL_utf8_foldclosures, align 8
  %784 = load i8*, i8** %pat, align 8
  %785 = load i8*, i8** %pat, align 8
  %786 = load i8, i8* %785, align 1
  %idxprom2138 = zext i8 %786 to i64
  %arrayidx2139 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom2138
  %787 = load i8, i8* %arrayidx2139, align 1
  %conv2140 = zext i8 %787 to i32
  %call2141 = call i8* @Perl_hv_common_key_len(%struct.hv* %783, i8* %784, i32 %conv2140, i32 32, %struct.sv* null, i32 0)
  %788 = bitcast i8* %call2141 to %struct.sv**
  store %struct.sv** %788, %struct.sv*** %listp, align 8
  %tobool2142 = icmp ne %struct.sv** %788, null
  br i1 %tobool2142, label %if.else2144, label %if.then2143

if.then2143:                                      ; preds = %if.end2137
  %789 = load i64, i64* %c1, align 8
  store i64 %789, i64* %c2, align 8
  br label %if.end2218

if.else2144:                                      ; preds = %if.end2137
  %790 = load %struct.sv**, %struct.sv*** %listp, align 8
  %791 = load %struct.sv*, %struct.sv** %790, align 8
  %792 = bitcast %struct.sv* %791 to %struct.av*
  store %struct.av* %792, %struct.av** %list, align 8
  %793 = load %struct.av*, %struct.av** %list, align 8
  %call2145 = call i64 @S_av_top_index(%struct.av* %793)
  %cmp2146 = icmp ne i64 %call2145, 1
  br i1 %cmp2146, label %if.then2148, label %if.else2149

if.then2148:                                      ; preds = %if.else2144
  store i8 1, i8* %use_chrtest_void, align 1
  br label %if.end2217

if.else2149:                                      ; preds = %if.else2144
  %794 = load %struct.av*, %struct.av** %list, align 8
  %call2150 = call %struct.sv** @Perl_av_fetch(%struct.av* %794, i64 0, i32 0)
  store %struct.sv** %call2150, %struct.sv*** %c_p, align 8
  %795 = load %struct.sv**, %struct.sv*** %c_p, align 8
  %cmp2151 = icmp eq %struct.sv** %795, null
  br i1 %cmp2151, label %if.then2153, label %if.end2154

if.then2153:                                      ; preds = %if.else2149
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.21, i64 0, i64 0))
  br label %if.end2154

if.end2154:                                       ; preds = %if.then2153, %if.else2149
  %796 = load %struct.sv**, %struct.sv*** %c_p, align 8
  %797 = load %struct.sv*, %struct.sv** %796, align 8
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %797, i32 0, i32 2
  %798 = load i32, i32* %sv_flags, align 4
  %and2155 = and i32 %798, -2145386240
  %cmp2156 = icmp eq i32 %and2155, -2147483392
  br i1 %cmp2156, label %cond.true2158, label %cond.false2159

cond.true2158:                                    ; preds = %if.end2154
  %799 = load %struct.sv**, %struct.sv*** %c_p, align 8
  %800 = load %struct.sv*, %struct.sv** %799, align 8
  %sv_any = getelementptr inbounds %struct.sv, %struct.sv* %800, i32 0, i32 0
  %801 = load i8*, i8** %sv_any, align 8
  %802 = bitcast i8* %801 to %struct.xpvuv*
  %xuv_u = getelementptr inbounds %struct.xpvuv, %struct.xpvuv* %802, i32 0, i32 4
  %xivu_uv = bitcast %union._xivu* %xuv_u to i64*
  %803 = load i64, i64* %xivu_uv, align 8
  br label %cond.end2161

cond.false2159:                                   ; preds = %if.end2154
  %804 = load %struct.sv**, %struct.sv*** %c_p, align 8
  %805 = load %struct.sv*, %struct.sv** %804, align 8
  %call2160 = call i64 @Perl_sv_2uv_flags(%struct.sv* %805, i32 2)
  br label %cond.end2161

cond.end2161:                                     ; preds = %cond.false2159, %cond.true2158
  %cond2162 = phi i64 [ %803, %cond.true2158 ], [ %call2160, %cond.false2159 ]
  store i64 %cond2162, i64* %c1, align 8
  %806 = load %struct.av*, %struct.av** %list, align 8
  %call2163 = call %struct.sv** @Perl_av_fetch(%struct.av* %806, i64 1, i32 0)
  store %struct.sv** %call2163, %struct.sv*** %c_p, align 8
  %807 = load %struct.sv**, %struct.sv*** %c_p, align 8
  %cmp2164 = icmp eq %struct.sv** %807, null
  br i1 %cmp2164, label %if.then2166, label %if.end2167

if.then2166:                                      ; preds = %cond.end2161
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.21, i64 0, i64 0))
  br label %if.end2167

if.end2167:                                       ; preds = %if.then2166, %cond.end2161
  %808 = load %struct.sv**, %struct.sv*** %c_p, align 8
  %809 = load %struct.sv*, %struct.sv** %808, align 8
  %sv_flags2168 = getelementptr inbounds %struct.sv, %struct.sv* %809, i32 0, i32 2
  %810 = load i32, i32* %sv_flags2168, align 4
  %and2169 = and i32 %810, -2145386240
  %cmp2170 = icmp eq i32 %and2169, -2147483392
  br i1 %cmp2170, label %cond.true2172, label %cond.false2176

cond.true2172:                                    ; preds = %if.end2167
  %811 = load %struct.sv**, %struct.sv*** %c_p, align 8
  %812 = load %struct.sv*, %struct.sv** %811, align 8
  %sv_any2173 = getelementptr inbounds %struct.sv, %struct.sv* %812, i32 0, i32 0
  %813 = load i8*, i8** %sv_any2173, align 8
  %814 = bitcast i8* %813 to %struct.xpvuv*
  %xuv_u2174 = getelementptr inbounds %struct.xpvuv, %struct.xpvuv* %814, i32 0, i32 4
  %xivu_uv2175 = bitcast %union._xivu* %xuv_u2174 to i64*
  %815 = load i64, i64* %xivu_uv2175, align 8
  br label %cond.end2178

cond.false2176:                                   ; preds = %if.end2167
  %816 = load %struct.sv**, %struct.sv*** %c_p, align 8
  %817 = load %struct.sv*, %struct.sv** %816, align 8
  %call2177 = call i64 @Perl_sv_2uv_flags(%struct.sv* %817, i32 2)
  br label %cond.end2178

cond.end2178:                                     ; preds = %cond.false2176, %cond.true2172
  %cond2179 = phi i64 [ %815, %cond.true2172 ], [ %call2177, %cond.false2176 ]
  store i64 %cond2179, i64* %c2, align 8
  %818 = load i64, i64* %c1, align 8
  %cmp2180 = icmp ult i64 %818, 256
  %conv2181 = zext i1 %cmp2180 to i32
  %819 = load i64, i64* %c2, align 8
  %cmp2182 = icmp ult i64 %819, 256
  %conv2183 = zext i1 %cmp2182 to i32
  %cmp2184 = icmp ne i32 %conv2181, %conv2183
  br i1 %cmp2184, label %if.then2186, label %if.end2216

if.then2186:                                      ; preds = %cond.end2178
  %820 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %type2187 = getelementptr inbounds %struct.regnode, %struct.regnode* %820, i32 0, i32 1
  %821 = load i8, i8* %type2187, align 1
  %conv2188 = zext i8 %821 to i32
  %cmp2189 = icmp eq i32 %conv2188, 34
  br i1 %cmp2189, label %land.lhs.true2191, label %lor.lhs.false2193

land.lhs.true2191:                                ; preds = %if.then2186
  %822 = load i8, i8* @PL_in_utf8_CTYPE_locale, align 1
  %tobool2192 = trunc i8 %822 to i1
  br i1 %tobool2192, label %lor.lhs.false2193, label %if.then2209

lor.lhs.false2193:                                ; preds = %land.lhs.true2191, %if.then2186
  %823 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %type2194 = getelementptr inbounds %struct.regnode, %struct.regnode* %823, i32 0, i32 1
  %824 = load i8, i8* %type2194, align 1
  %conv2195 = zext i8 %824 to i32
  %cmp2196 = icmp eq i32 %conv2195, 36
  br i1 %cmp2196, label %land.lhs.true2203, label %lor.lhs.false2198

lor.lhs.false2198:                                ; preds = %lor.lhs.false2193
  %825 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %type2199 = getelementptr inbounds %struct.regnode, %struct.regnode* %825, i32 0, i32 1
  %826 = load i8, i8* %type2199, align 1
  %conv2200 = zext i8 %826 to i32
  %cmp2201 = icmp eq i32 %conv2200, 39
  br i1 %cmp2201, label %land.lhs.true2203, label %if.end2215

land.lhs.true2203:                                ; preds = %lor.lhs.false2198, %lor.lhs.false2193
  %827 = load i64, i64* %c1, align 8
  %cmp2204 = icmp ult i64 %827, 128
  br i1 %cmp2204, label %if.then2209, label %lor.lhs.false2206

lor.lhs.false2206:                                ; preds = %land.lhs.true2203
  %828 = load i64, i64* %c2, align 8
  %cmp2207 = icmp ult i64 %828, 128
  br i1 %cmp2207, label %if.then2209, label %if.end2215

if.then2209:                                      ; preds = %lor.lhs.false2206, %land.lhs.true2203, %land.lhs.true2191
  %829 = load i64, i64* %c1, align 8
  %cmp2210 = icmp ult i64 %829, 256
  br i1 %cmp2210, label %if.then2212, label %if.else2213

if.then2212:                                      ; preds = %if.then2209
  %830 = load i64, i64* %c2, align 8
  store i64 %830, i64* %c1, align 8
  br label %if.end2214

if.else2213:                                      ; preds = %if.then2209
  %831 = load i64, i64* %c1, align 8
  store i64 %831, i64* %c2, align 8
  br label %if.end2214

if.end2214:                                       ; preds = %if.else2213, %if.then2212
  br label %if.end2215

if.end2215:                                       ; preds = %if.end2214, %lor.lhs.false2206, %lor.lhs.false2198
  br label %if.end2216

if.end2216:                                       ; preds = %if.end2215, %cond.end2178
  br label %if.end2217

if.end2217:                                       ; preds = %if.end2216, %if.then2148
  br label %if.end2218

if.end2218:                                       ; preds = %if.end2217, %if.then2143
  br label %if.end2279

if.else2219:                                      ; preds = %cond.end2130
  %832 = load i8, i8* %utf8_target, align 1
  %tobool2220 = trunc i8 %832 to i1
  br i1 %tobool2220, label %land.lhs.true2222, label %if.else2261

land.lhs.true2222:                                ; preds = %if.else2219
  %833 = load i64, i64* %c1, align 8
  %and2223 = and i64 %833, -256
  %tobool2224 = icmp ne i64 %and2223, 0
  br i1 %tobool2224, label %cond.false2226, label %cond.true2225

cond.true2225:                                    ; preds = %land.lhs.true2222
  br i1 true, label %lor.lhs.false2227, label %land.lhs.true2233

cond.false2226:                                   ; preds = %land.lhs.true2222
  br i1 false, label %lor.lhs.false2227, label %land.lhs.true2233

lor.lhs.false2227:                                ; preds = %cond.false2226, %cond.true2225
  %834 = load i64, i64* %c1, align 8
  %conv2228 = trunc i64 %834 to i8
  %idxprom2229 = zext i8 %conv2228 to i64
  %arrayidx2230 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom2229
  %835 = load i32, i32* %arrayidx2230, align 4
  %and2231 = and i32 %835, 262144
  %tobool2232 = icmp ne i32 %and2231, 0
  br i1 %tobool2232, label %land.lhs.true2233, label %if.else2261

land.lhs.true2233:                                ; preds = %lor.lhs.false2227, %cond.false2226, %cond.true2225
  %836 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %type2234 = getelementptr inbounds %struct.regnode, %struct.regnode* %836, i32 0, i32 1
  %837 = load i8, i8* %type2234, align 1
  %conv2235 = zext i8 %837 to i32
  %cmp2236 = icmp eq i32 %conv2235, 34
  br i1 %cmp2236, label %land.lhs.true2238, label %land.lhs.true2240

land.lhs.true2238:                                ; preds = %land.lhs.true2233
  %838 = load i8, i8* @PL_in_utf8_CTYPE_locale, align 1
  %tobool2239 = trunc i8 %838 to i1
  br i1 %tobool2239, label %land.lhs.true2240, label %if.else2261

land.lhs.true2240:                                ; preds = %land.lhs.true2238, %land.lhs.true2233
  %839 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %type2241 = getelementptr inbounds %struct.regnode, %struct.regnode* %839, i32 0, i32 1
  %840 = load i8, i8* %type2241, align 1
  %conv2242 = zext i8 %840 to i32
  %cmp2243 = icmp ne i32 %conv2242, 36
  br i1 %cmp2243, label %land.lhs.true2245, label %lor.lhs.false2250

land.lhs.true2245:                                ; preds = %land.lhs.true2240
  %841 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %type2246 = getelementptr inbounds %struct.regnode, %struct.regnode* %841, i32 0, i32 1
  %842 = load i8, i8* %type2246, align 1
  %conv2247 = zext i8 %842 to i32
  %cmp2248 = icmp ne i32 %conv2247, 39
  br i1 %cmp2248, label %if.then2253, label %lor.lhs.false2250

lor.lhs.false2250:                                ; preds = %land.lhs.true2245, %land.lhs.true2240
  %843 = load i64, i64* %c1, align 8
  %cmp2251 = icmp ult i64 %843, 128
  br i1 %cmp2251, label %if.else2261, label %if.then2253

if.then2253:                                      ; preds = %lor.lhs.false2250, %land.lhs.true2245
  %844 = load i64, i64* %c1, align 8
  %cmp2254 = icmp eq i64 %844, 255
  br i1 %cmp2254, label %cond.true2256, label %cond.false2257

cond.true2256:                                    ; preds = %if.then2253
  br i1 true, label %if.then2258, label %if.else2259

cond.false2257:                                   ; preds = %if.then2253
  br i1 false, label %if.then2258, label %if.else2259

if.then2258:                                      ; preds = %cond.false2257, %cond.true2256
  store i64 376, i64* %c2, align 8
  br label %if.end2260

if.else2259:                                      ; preds = %cond.false2257, %cond.true2256
  store i8 1, i8* %use_chrtest_void, align 1
  br label %if.end2260

if.end2260:                                       ; preds = %if.else2259, %if.then2258
  br label %if.end2278

if.else2261:                                      ; preds = %lor.lhs.false2250, %land.lhs.true2238, %lor.lhs.false2227, %if.else2219
  %845 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %type2262 = getelementptr inbounds %struct.regnode, %struct.regnode* %845, i32 0, i32 1
  %846 = load i8, i8* %type2262, align 1
  %conv2263 = zext i8 %846 to i32
  switch i32 %conv2263, label %sw.default [
    i32 34, label %sw.bb
    i32 33, label %sw.bb2266
    i32 39, label %sw.bb2272
    i32 36, label %sw.bb2273
    i32 37, label %sw.bb2273
    i32 35, label %sw.bb2273
  ]

sw.bb:                                            ; preds = %if.else2261
  %847 = load i64, i64* %c1, align 8
  %arrayidx2264 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_fold_locale, i64 0, i64 %847
  %848 = load i8, i8* %arrayidx2264, align 1
  %conv2265 = zext i8 %848 to i64
  store i64 %conv2265, i64* %c2, align 8
  br label %sw.epilog

sw.bb2266:                                        ; preds = %if.else2261
  %849 = load i8, i8* %utf8_target, align 1
  %tobool2267 = trunc i8 %849 to i1
  br i1 %tobool2267, label %if.end2271, label %if.then2268

if.then2268:                                      ; preds = %sw.bb2266
  %850 = load i64, i64* %c1, align 8
  %arrayidx2269 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_fold, i64 0, i64 %850
  %851 = load i8, i8* %arrayidx2269, align 1
  %conv2270 = zext i8 %851 to i64
  store i64 %conv2270, i64* %c2, align 8
  br label %sw.epilog

if.end2271:                                       ; preds = %sw.bb2266
  br label %sw.bb2272

sw.bb2272:                                        ; preds = %if.else2261, %if.end2271
  br label %sw.bb2273

sw.bb2273:                                        ; preds = %if.else2261, %if.else2261, %if.else2261, %sw.bb2272
  %852 = load i64, i64* %c1, align 8
  %arrayidx2274 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_fold_latin1, i64 0, i64 %852
  %853 = load i8, i8* %arrayidx2274, align 1
  %conv2275 = zext i8 %853 to i64
  store i64 %conv2275, i64* %c2, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %if.else2261
  %854 = load %struct.regnode*, %struct.regnode** %text_node.addr, align 8
  %type2276 = getelementptr inbounds %struct.regnode, %struct.regnode* %854, i32 0, i32 1
  %855 = load i8, i8* %type2276, align 1
  %conv2277 = zext i8 %855 to i32
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.22, i64 0, i64 0), i32 %conv2277)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb2273, %if.then2268, %sw.bb
  br label %if.end2278

if.end2278:                                       ; preds = %sw.epilog, %if.end2260
  br label %if.end2279

if.end2279:                                       ; preds = %if.end2278, %if.end2218
  br label %if.end2280

if.end2280:                                       ; preds = %if.end2279, %if.then2122
  br label %if.end2281

if.end2281:                                       ; preds = %if.end2280, %if.end20
  %856 = load i8, i8* %use_chrtest_void, align 1
  %tobool2282 = trunc i8 %856 to i1
  br i1 %tobool2282, label %if.then2283, label %if.else2284

if.then2283:                                      ; preds = %if.end2281
  %857 = load i32*, i32** %c1p.addr, align 8
  store i32 -1000, i32* %857, align 4
  %858 = load i32*, i32** %c2p.addr, align 8
  store i32 -1000, i32* %858, align 4
  br label %if.end2331

if.else2284:                                      ; preds = %if.end2281
  %859 = load i8, i8* %utf8_target, align 1
  %tobool2285 = trunc i8 %859 to i1
  br i1 %tobool2285, label %if.then2286, label %if.else2311

if.then2286:                                      ; preds = %if.else2284
  %860 = load i8, i8* %utf8_has_been_setup, align 1
  %tobool2287 = trunc i8 %860 to i1
  br i1 %tobool2287, label %if.end2291, label %if.then2288

if.then2288:                                      ; preds = %if.then2286
  %861 = load i8*, i8** %c1_utf8.addr, align 8
  %862 = load i64, i64* %c1, align 8
  %call2289 = call i8* @Perl_uvoffuni_to_utf8_flags(i8* %861, i64 %862, i64 0)
  %863 = load i8*, i8** %c2_utf8.addr, align 8
  %864 = load i64, i64* %c2, align 8
  %call2290 = call i8* @Perl_uvoffuni_to_utf8_flags(i8* %863, i64 %864, i64 0)
  br label %if.end2291

if.end2291:                                       ; preds = %if.then2288, %if.then2286
  %865 = load i8*, i8** %c1_utf8.addr, align 8
  %866 = load i8, i8* %865, align 1
  %conv2292 = zext i8 %866 to i64
  %cmp2293 = icmp ult i64 %conv2292, 128
  br i1 %cmp2293, label %cond.true2295, label %cond.false2297

cond.true2295:                                    ; preds = %if.end2291
  %867 = load i8*, i8** %c1_utf8.addr, align 8
  %868 = load i8, i8* %867, align 1
  %conv2296 = zext i8 %868 to i32
  br label %cond.end2298

cond.false2297:                                   ; preds = %if.end2291
  br label %cond.end2298

cond.end2298:                                     ; preds = %cond.false2297, %cond.true2295
  %cond2299 = phi i32 [ %conv2296, %cond.true2295 ], [ -999, %cond.false2297 ]
  %869 = load i32*, i32** %c1p.addr, align 8
  store i32 %cond2299, i32* %869, align 4
  %870 = load i8*, i8** %c2_utf8.addr, align 8
  %871 = load i8, i8* %870, align 1
  %conv2300 = zext i8 %871 to i64
  %cmp2301 = icmp ult i64 %conv2300, 128
  br i1 %cmp2301, label %cond.true2303, label %cond.false2305

cond.true2303:                                    ; preds = %cond.end2298
  %872 = load i8*, i8** %c2_utf8.addr, align 8
  %873 = load i8, i8* %872, align 1
  %conv2304 = zext i8 %873 to i32
  br label %cond.end2309

cond.false2305:                                   ; preds = %cond.end2298
  %874 = load i64, i64* %c1, align 8
  %875 = load i64, i64* %c2, align 8
  %cmp2306 = icmp eq i64 %874, %875
  %876 = zext i1 %cmp2306 to i64
  %cond2308 = select i1 %cmp2306, i32 -999, i32 -998
  br label %cond.end2309

cond.end2309:                                     ; preds = %cond.false2305, %cond.true2303
  %cond2310 = phi i32 [ %conv2304, %cond.true2303 ], [ %cond2308, %cond.false2305 ]
  %877 = load i32*, i32** %c2p.addr, align 8
  store i32 %cond2310, i32* %877, align 4
  br label %if.end2330

if.else2311:                                      ; preds = %if.else2284
  %878 = load i64, i64* %c1, align 8
  %cmp2312 = icmp ugt i64 %878, 255
  br i1 %cmp2312, label %if.then2314, label %if.else2320

if.then2314:                                      ; preds = %if.else2311
  %879 = load i64, i64* %c2, align 8
  %cmp2315 = icmp ugt i64 %879, 255
  br i1 %cmp2315, label %if.then2317, label %if.end2318

if.then2317:                                      ; preds = %if.then2314
  store i1 false, i1* %retval, align 1
  br label %return

if.end2318:                                       ; preds = %if.then2314
  %880 = load i64, i64* %c2, align 8
  %conv2319 = trunc i64 %880 to i32
  %881 = load i32*, i32** %c2p.addr, align 8
  store i32 %conv2319, i32* %881, align 4
  %882 = load i32*, i32** %c1p.addr, align 8
  store i32 %conv2319, i32* %882, align 4
  br label %if.end2329

if.else2320:                                      ; preds = %if.else2311
  %883 = load i64, i64* %c1, align 8
  %conv2321 = trunc i64 %883 to i32
  %884 = load i32*, i32** %c1p.addr, align 8
  store i32 %conv2321, i32* %884, align 4
  %885 = load i64, i64* %c2, align 8
  %cmp2322 = icmp ult i64 %885, 256
  br i1 %cmp2322, label %cond.true2324, label %cond.false2325

cond.true2324:                                    ; preds = %if.else2320
  %886 = load i64, i64* %c2, align 8
  br label %cond.end2326

cond.false2325:                                   ; preds = %if.else2320
  %887 = load i64, i64* %c1, align 8
  br label %cond.end2326

cond.end2326:                                     ; preds = %cond.false2325, %cond.true2324
  %cond2327 = phi i64 [ %886, %cond.true2324 ], [ %887, %cond.false2325 ]
  %conv2328 = trunc i64 %cond2327 to i32
  %888 = load i32*, i32** %c2p.addr, align 8
  store i32 %conv2328, i32* %888, align 4
  br label %if.end2329

if.end2329:                                       ; preds = %cond.end2326, %if.end2318
  br label %if.end2330

if.end2330:                                       ; preds = %if.end2329, %cond.end2309
  br label %if.end2331

if.end2331:                                       ; preds = %if.end2330, %if.then2283
  store i1 true, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.end2331, %if.then2317
  %889 = load i1, i1* %retval, align 1
  ret i1 %889
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @S_regrepeat(%struct.regexp* %prog, i8** %startposp, %struct.regnode* %p, %struct.regmatch_info* %reginfo, i32 %max, i32 %depth) #0 {
entry:
  %prog.addr = alloca %struct.regexp*, align 8
  %startposp.addr = alloca i8**, align 8
  %p.addr = alloca %struct.regnode*, align 8
  %reginfo.addr = alloca %struct.regmatch_info*, align 8
  %max.addr = alloca i32, align 4
  %depth.addr = alloca i32, align 4
  %scan = alloca i8*, align 8
  %c = alloca i32, align 4
  %loceol = alloca i8*, align 8
  %hardcount = alloca i32, align 4
  %utf8_target = alloca i8, align 1
  %to_complement = alloca i32, align 4
  %utf8_flags = alloca i64, align 8
  %classnum = alloca i32, align 4
  %scan_char_len = alloca i64, align 8
  %high = alloca i8, align 1
  %low = alloca i8, align 1
  %c1 = alloca i32, align 4
  %c2 = alloca i32, align 4
  %c1_utf8 = alloca [14 x i8], align 1
  %c2_utf8 = alloca [14 x i8], align 1
  %tmpeol = alloca i8*, align 8
  %pat_len = alloca i64, align 8
  %flags1176 = alloca i8, align 1
  store %struct.regexp* %prog, %struct.regexp** %prog.addr, align 8
  store i8** %startposp, i8*** %startposp.addr, align 8
  store %struct.regnode* %p, %struct.regnode** %p.addr, align 8
  store %struct.regmatch_info* %reginfo, %struct.regmatch_info** %reginfo.addr, align 8
  store i32 %max, i32* %max.addr, align 4
  store i32 %depth, i32* %depth.addr, align 4
  %0 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %0, i32 0, i32 2
  %1 = load i8*, i8** %strend, align 8
  store i8* %1, i8** %loceol, align 8
  store i32 0, i32* %hardcount, align 4
  %2 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_target = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %2, i32 0, i32 14
  %3 = load i8, i8* %is_utf8_target, align 2
  %tobool = trunc i8 %3 to i1
  %frombool = zext i1 %tobool to i8
  store i8 %frombool, i8* %utf8_target, align 1
  store i32 0, i32* %to_complement, align 4
  %4 = load i32, i32* %depth.addr, align 4
  %5 = load i8**, i8*** %startposp.addr, align 8
  %6 = load i8*, i8** %5, align 8
  store i8* %6, i8** %scan, align 8
  %7 = load i32, i32* %max.addr, align 4
  %cmp = icmp eq i32 %7, 32767
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 2147483647, i32* %max.addr, align 4
  br label %if.end5

if.else:                                          ; preds = %entry
  %8 = load i8, i8* %utf8_target, align 1
  %tobool1 = trunc i8 %8 to i1
  br i1 %tobool1, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else
  %9 = load i8*, i8** %loceol, align 8
  %10 = load i8*, i8** %scan, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %9 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %10 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %11 = load i32, i32* %max.addr, align 4
  %conv = sext i32 %11 to i64
  %cmp2 = icmp sgt i64 %sub.ptr.sub, %conv
  br i1 %cmp2, label %if.then4, label %if.end

if.then4:                                         ; preds = %land.lhs.true
  %12 = load i8*, i8** %scan, align 8
  %13 = load i32, i32* %max.addr, align 4
  %idx.ext = sext i32 %13 to i64
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %idx.ext
  store i8* %add.ptr, i8** %loceol, align 8
  br label %if.end

if.end:                                           ; preds = %if.then4, %land.lhs.true, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  %14 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %type = getelementptr inbounds %struct.regnode, %struct.regnode* %14, i32 0, i32 1
  %15 = load i8, i8* %type, align 1
  %conv6 = zext i8 %15 to i32
  switch i32 %conv6, label %sw.default1484 [
    i32 16, label %sw.bb
    i32 17, label %sw.bb32
    i32 18, label %sw.bb52
    i32 32, label %sw.bb67
    i32 31, label %sw.bb76
    i32 39, label %sw.bb192
    i32 36, label %sw.bb193
    i32 34, label %sw.bb194
    i32 33, label %sw.bb195
    i32 38, label %sw.bb196
    i32 37, label %sw.bb200
    i32 35, label %sw.bb200
    i32 20, label %sw.bb336
    i32 19, label %sw.bb337
    i32 26, label %sw.bb391
    i32 22, label %sw.bb392
    i32 21, label %sw.bb432
    i32 24, label %sw.bb436
    i32 25, label %sw.bb471
    i32 28, label %sw.bb475
    i32 27, label %sw.bb537
    i32 23, label %sw.bb538
    i32 91, label %sw.bb1255
    i32 9, label %sw.bb1482
    i32 13, label %sw.bb1482
    i32 8, label %sw.bb1483
    i32 11, label %sw.bb1483
    i32 10, label %sw.bb1483
    i32 6, label %sw.bb1483
    i32 7, label %sw.bb1483
    i32 90, label %sw.bb1483
    i32 12, label %sw.bb1483
    i32 15, label %sw.bb1483
    i32 14, label %sw.bb1483
    i32 82, label %sw.bb1483
    i32 2, label %sw.bb1483
    i32 4, label %sw.bb1483
  ]

sw.bb:                                            ; preds = %if.end5
  %16 = load i8, i8* %utf8_target, align 1
  %tobool7 = trunc i8 %16 to i1
  br i1 %tobool7, label %if.then8, label %if.else20

if.then8:                                         ; preds = %sw.bb
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then8
  %17 = load i8*, i8** %scan, align 8
  %18 = load i8*, i8** %loceol, align 8
  %cmp9 = icmp ult i8* %17, %18
  br i1 %cmp9, label %land.lhs.true11, label %land.end

land.lhs.true11:                                  ; preds = %while.cond
  %19 = load i32, i32* %hardcount, align 4
  %20 = load i32, i32* %max.addr, align 4
  %cmp12 = icmp slt i32 %19, %20
  br i1 %cmp12, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true11
  %21 = load i8*, i8** %scan, align 8
  %22 = load i8, i8* %21, align 1
  %conv14 = sext i8 %22 to i32
  %cmp15 = icmp ne i32 %conv14, 10
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true11, %while.cond
  %23 = phi i1 [ false, %land.lhs.true11 ], [ false, %while.cond ], [ %cmp15, %land.rhs ]
  br i1 %23, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %24 = load i8*, i8** %scan, align 8
  %25 = load i8, i8* %24, align 1
  %idxprom = zext i8 %25 to i64
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom
  %26 = load i8, i8* %arrayidx, align 1
  %conv17 = zext i8 %26 to i32
  %27 = load i8*, i8** %scan, align 8
  %idx.ext18 = sext i32 %conv17 to i64
  %add.ptr19 = getelementptr inbounds i8, i8* %27, i64 %idx.ext18
  store i8* %add.ptr19, i8** %scan, align 8
  %28 = load i32, i32* %hardcount, align 4
  %inc = add nsw i32 %28, 1
  store i32 %inc, i32* %hardcount, align 4
  br label %while.cond

while.end:                                        ; preds = %land.end
  br label %if.end31

if.else20:                                        ; preds = %sw.bb
  br label %while.cond21

while.cond21:                                     ; preds = %while.body29, %if.else20
  %29 = load i8*, i8** %scan, align 8
  %30 = load i8*, i8** %loceol, align 8
  %cmp22 = icmp ult i8* %29, %30
  br i1 %cmp22, label %land.rhs24, label %land.end28

land.rhs24:                                       ; preds = %while.cond21
  %31 = load i8*, i8** %scan, align 8
  %32 = load i8, i8* %31, align 1
  %conv25 = sext i8 %32 to i32
  %cmp26 = icmp ne i32 %conv25, 10
  br label %land.end28

land.end28:                                       ; preds = %land.rhs24, %while.cond21
  %33 = phi i1 [ false, %while.cond21 ], [ %cmp26, %land.rhs24 ]
  br i1 %33, label %while.body29, label %while.end30

while.body29:                                     ; preds = %land.end28
  %34 = load i8*, i8** %scan, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %incdec.ptr, i8** %scan, align 8
  br label %while.cond21

while.end30:                                      ; preds = %land.end28
  br label %if.end31

if.end31:                                         ; preds = %while.end30, %while.end
  br label %sw.epilog1490

sw.bb32:                                          ; preds = %if.end5
  %35 = load i8, i8* %utf8_target, align 1
  %tobool33 = trunc i8 %35 to i1
  br i1 %tobool33, label %if.then34, label %if.else50

if.then34:                                        ; preds = %sw.bb32
  br label %while.cond35

while.cond35:                                     ; preds = %while.body42, %if.then34
  %36 = load i8*, i8** %scan, align 8
  %37 = load i8*, i8** %loceol, align 8
  %cmp36 = icmp ult i8* %36, %37
  br i1 %cmp36, label %land.rhs38, label %land.end41

land.rhs38:                                       ; preds = %while.cond35
  %38 = load i32, i32* %hardcount, align 4
  %39 = load i32, i32* %max.addr, align 4
  %cmp39 = icmp slt i32 %38, %39
  br label %land.end41

land.end41:                                       ; preds = %land.rhs38, %while.cond35
  %40 = phi i1 [ false, %while.cond35 ], [ %cmp39, %land.rhs38 ]
  br i1 %40, label %while.body42, label %while.end49

while.body42:                                     ; preds = %land.end41
  %41 = load i8*, i8** %scan, align 8
  %42 = load i8, i8* %41, align 1
  %idxprom43 = zext i8 %42 to i64
  %arrayidx44 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom43
  %43 = load i8, i8* %arrayidx44, align 1
  %conv45 = zext i8 %43 to i32
  %44 = load i8*, i8** %scan, align 8
  %idx.ext46 = sext i32 %conv45 to i64
  %add.ptr47 = getelementptr inbounds i8, i8* %44, i64 %idx.ext46
  store i8* %add.ptr47, i8** %scan, align 8
  %45 = load i32, i32* %hardcount, align 4
  %inc48 = add nsw i32 %45, 1
  store i32 %inc48, i32* %hardcount, align 4
  br label %while.cond35

while.end49:                                      ; preds = %land.end41
  br label %if.end51

if.else50:                                        ; preds = %sw.bb32
  %46 = load i8*, i8** %loceol, align 8
  store i8* %46, i8** %scan, align 8
  br label %if.end51

if.end51:                                         ; preds = %if.else50, %while.end49
  br label %sw.epilog1490

sw.bb52:                                          ; preds = %if.end5
  %47 = load i8, i8* %utf8_target, align 1
  %tobool53 = trunc i8 %47 to i1
  br i1 %tobool53, label %land.lhs.true55, label %if.else65

land.lhs.true55:                                  ; preds = %sw.bb52
  %48 = load i8*, i8** %loceol, align 8
  %49 = load i8*, i8** %scan, align 8
  %sub.ptr.lhs.cast56 = ptrtoint i8* %48 to i64
  %sub.ptr.rhs.cast57 = ptrtoint i8* %49 to i64
  %sub.ptr.sub58 = sub i64 %sub.ptr.lhs.cast56, %sub.ptr.rhs.cast57
  %50 = load i32, i32* %max.addr, align 4
  %conv59 = sext i32 %50 to i64
  %cmp60 = icmp sgt i64 %sub.ptr.sub58, %conv59
  br i1 %cmp60, label %if.then62, label %if.else65

if.then62:                                        ; preds = %land.lhs.true55
  %51 = load i32, i32* %max.addr, align 4
  %52 = load i8*, i8** %scan, align 8
  %idx.ext63 = sext i32 %51 to i64
  %add.ptr64 = getelementptr inbounds i8, i8* %52, i64 %idx.ext63
  store i8* %add.ptr64, i8** %scan, align 8
  br label %if.end66

if.else65:                                        ; preds = %land.lhs.true55, %sw.bb52
  %53 = load i8*, i8** %loceol, align 8
  store i8* %53, i8** %scan, align 8
  br label %if.end66

if.end66:                                         ; preds = %if.else65, %if.then62
  br label %sw.epilog1490

sw.bb67:                                          ; preds = %if.end5
  %54 = load i8, i8* %utf8_target, align 1
  %tobool68 = trunc i8 %54 to i1
  br i1 %tobool68, label %land.lhs.true70, label %if.end75

land.lhs.true70:                                  ; preds = %sw.bb67
  %55 = load i8*, i8** %scan, align 8
  %56 = load i8, i8* %55, align 1
  %conv71 = zext i8 %56 to i32
  %cmp72 = icmp sge i32 %conv71, 196
  br i1 %cmp72, label %if.then74, label %if.end75

if.then74:                                        ; preds = %land.lhs.true70
  br label %if.end75

if.end75:                                         ; preds = %if.then74, %land.lhs.true70, %sw.bb67
  br label %sw.bb76

sw.bb76:                                          ; preds = %if.end5, %if.end75
  %57 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %58 = bitcast %struct.regnode* %57 to %struct.regnode_string*
  %string = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %58, i32 0, i32 3
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %string, i64 0, i64 0
  %59 = load i8, i8* %arraydecay, align 2
  %conv77 = zext i8 %59 to i32
  store i32 %conv77, i32* %c, align 4
  %60 = load i32, i32* %c, align 4
  %conv78 = sext i32 %60 to i64
  %cmp79 = icmp ult i64 %conv78, 128
  br i1 %cmp79, label %if.then84, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb76
  %61 = load i8, i8* %utf8_target, align 1
  %tobool81 = trunc i8 %61 to i1
  br i1 %tobool81, label %if.else109, label %land.lhs.true82

land.lhs.true82:                                  ; preds = %lor.lhs.false
  %62 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %62, i32 0, i32 13
  %63 = load i8, i8* %is_utf8_pat, align 1
  %tobool83 = trunc i8 %63 to i1
  br i1 %tobool83, label %if.else109, label %if.then84

if.then84:                                        ; preds = %land.lhs.true82, %sw.bb76
  %64 = load i8, i8* %utf8_target, align 1
  %tobool85 = trunc i8 %64 to i1
  br i1 %tobool85, label %land.lhs.true87, label %if.end97

land.lhs.true87:                                  ; preds = %if.then84
  %65 = load i8*, i8** %loceol, align 8
  %66 = load i8*, i8** %scan, align 8
  %sub.ptr.lhs.cast88 = ptrtoint i8* %65 to i64
  %sub.ptr.rhs.cast89 = ptrtoint i8* %66 to i64
  %sub.ptr.sub90 = sub i64 %sub.ptr.lhs.cast88, %sub.ptr.rhs.cast89
  %67 = load i32, i32* %max.addr, align 4
  %conv91 = sext i32 %67 to i64
  %cmp92 = icmp sgt i64 %sub.ptr.sub90, %conv91
  br i1 %cmp92, label %if.then94, label %if.end97

if.then94:                                        ; preds = %land.lhs.true87
  %68 = load i8*, i8** %scan, align 8
  %69 = load i32, i32* %max.addr, align 4
  %idx.ext95 = sext i32 %69 to i64
  %add.ptr96 = getelementptr inbounds i8, i8* %68, i64 %idx.ext95
  store i8* %add.ptr96, i8** %loceol, align 8
  br label %if.end97

if.end97:                                         ; preds = %if.then94, %land.lhs.true87, %if.then84
  br label %while.cond98

while.cond98:                                     ; preds = %while.body106, %if.end97
  %70 = load i8*, i8** %scan, align 8
  %71 = load i8*, i8** %loceol, align 8
  %cmp99 = icmp ult i8* %70, %71
  br i1 %cmp99, label %land.rhs101, label %land.end105

land.rhs101:                                      ; preds = %while.cond98
  %72 = load i8*, i8** %scan, align 8
  %73 = load i8, i8* %72, align 1
  %conv102 = zext i8 %73 to i32
  %74 = load i32, i32* %c, align 4
  %cmp103 = icmp eq i32 %conv102, %74
  br label %land.end105

land.end105:                                      ; preds = %land.rhs101, %while.cond98
  %75 = phi i1 [ false, %while.cond98 ], [ %cmp103, %land.rhs101 ]
  br i1 %75, label %while.body106, label %while.end108

while.body106:                                    ; preds = %land.end105
  %76 = load i8*, i8** %scan, align 8
  %incdec.ptr107 = getelementptr inbounds i8, i8* %76, i32 1
  store i8* %incdec.ptr107, i8** %scan, align 8
  br label %while.cond98

while.end108:                                     ; preds = %land.end105
  br label %if.end191

if.else109:                                       ; preds = %land.lhs.true82, %lor.lhs.false
  %77 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat110 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %77, i32 0, i32 13
  %78 = load i8, i8* %is_utf8_pat110, align 1
  %tobool111 = trunc i8 %78 to i1
  br i1 %tobool111, label %if.then112, label %if.else161

if.then112:                                       ; preds = %if.else109
  %79 = load i8, i8* %utf8_target, align 1
  %tobool113 = trunc i8 %79 to i1
  br i1 %tobool113, label %if.then114, label %if.else137

if.then114:                                       ; preds = %if.then112
  br label %while.cond115

while.cond115:                                    ; preds = %while.body133, %if.then114
  %80 = load i32, i32* %hardcount, align 4
  %81 = load i32, i32* %max.addr, align 4
  %cmp116 = icmp slt i32 %80, %81
  br i1 %cmp116, label %land.lhs.true118, label %land.end132

land.lhs.true118:                                 ; preds = %while.cond115
  %82 = load i8*, i8** %scan, align 8
  %83 = load i8*, i8** %loceol, align 8
  %cmp119 = icmp ult i8* %82, %83
  br i1 %cmp119, label %land.lhs.true121, label %land.end132

land.lhs.true121:                                 ; preds = %land.lhs.true118
  %84 = load i8*, i8** %scan, align 8
  %85 = load i8, i8* %84, align 1
  %idxprom122 = zext i8 %85 to i64
  %arrayidx123 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom122
  %86 = load i8, i8* %arrayidx123, align 1
  %conv124 = zext i8 %86 to i64
  store i64 %conv124, i64* %scan_char_len, align 8
  %87 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %88 = bitcast %struct.regnode* %87 to %struct.regnode_string*
  %str_len = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %88, i32 0, i32 0
  %89 = load i8, i8* %str_len, align 2
  %conv125 = zext i8 %89 to i64
  %cmp126 = icmp ule i64 %conv124, %conv125
  br i1 %cmp126, label %land.rhs128, label %land.end132

land.rhs128:                                      ; preds = %land.lhs.true121
  %90 = load i8*, i8** %scan, align 8
  %91 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %92 = bitcast %struct.regnode* %91 to %struct.regnode_string*
  %string129 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %92, i32 0, i32 3
  %arraydecay130 = getelementptr inbounds [1 x i8], [1 x i8]* %string129, i64 0, i64 0
  %93 = load i64, i64* %scan_char_len, align 8
  %call = call i32 @memcmp(i8* %90, i8* %arraydecay130, i64 %93) #5
  %tobool131 = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool131, true
  br label %land.end132

land.end132:                                      ; preds = %land.rhs128, %land.lhs.true121, %land.lhs.true118, %while.cond115
  %94 = phi i1 [ false, %land.lhs.true121 ], [ false, %land.lhs.true118 ], [ false, %while.cond115 ], [ %lnot, %land.rhs128 ]
  br i1 %94, label %while.body133, label %while.end136

while.body133:                                    ; preds = %land.end132
  %95 = load i64, i64* %scan_char_len, align 8
  %96 = load i8*, i8** %scan, align 8
  %add.ptr134 = getelementptr inbounds i8, i8* %96, i64 %95
  store i8* %add.ptr134, i8** %scan, align 8
  %97 = load i32, i32* %hardcount, align 4
  %inc135 = add nsw i32 %97, 1
  store i32 %inc135, i32* %hardcount, align 4
  br label %while.cond115

while.end136:                                     ; preds = %land.end132
  br label %if.end160

if.else137:                                       ; preds = %if.then112
  %98 = load i32, i32* %c, align 4
  %conv138 = trunc i32 %98 to i8
  %conv139 = zext i8 %conv138 to i32
  %cmp140 = icmp sge i32 %conv139, 196
  br i1 %cmp140, label %if.end159, label %if.then142

if.then142:                                       ; preds = %if.else137
  %99 = load i32, i32* %c, align 4
  %and = and i32 %99, 31
  %shl = shl i32 %and, 6
  %100 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %101 = bitcast %struct.regnode* %100 to %struct.regnode_string*
  %string143 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %101, i32 0, i32 3
  %arraydecay144 = getelementptr inbounds [1 x i8], [1 x i8]* %string143, i64 0, i64 0
  %add.ptr145 = getelementptr inbounds i8, i8* %arraydecay144, i64 1
  %102 = load i8, i8* %add.ptr145, align 1
  %conv146 = zext i8 %102 to i32
  %and147 = and i32 %conv146, 63
  %or = or i32 %shl, %and147
  store i32 %or, i32* %c, align 4
  br label %while.cond148

while.cond148:                                    ; preds = %while.body156, %if.then142
  %103 = load i8*, i8** %scan, align 8
  %104 = load i8*, i8** %loceol, align 8
  %cmp149 = icmp ult i8* %103, %104
  br i1 %cmp149, label %land.rhs151, label %land.end155

land.rhs151:                                      ; preds = %while.cond148
  %105 = load i8*, i8** %scan, align 8
  %106 = load i8, i8* %105, align 1
  %conv152 = zext i8 %106 to i32
  %107 = load i32, i32* %c, align 4
  %cmp153 = icmp eq i32 %conv152, %107
  br label %land.end155

land.end155:                                      ; preds = %land.rhs151, %while.cond148
  %108 = phi i1 [ false, %while.cond148 ], [ %cmp153, %land.rhs151 ]
  br i1 %108, label %while.body156, label %while.end158

while.body156:                                    ; preds = %land.end155
  %109 = load i8*, i8** %scan, align 8
  %incdec.ptr157 = getelementptr inbounds i8, i8* %109, i32 1
  store i8* %incdec.ptr157, i8** %scan, align 8
  br label %while.cond148

while.end158:                                     ; preds = %land.end155
  br label %if.end159

if.end159:                                        ; preds = %while.end158, %if.else137
  br label %if.end160

if.end160:                                        ; preds = %if.end159, %while.end136
  br label %if.end190

if.else161:                                       ; preds = %if.else109
  %110 = load i32, i32* %c, align 4
  %shr = ashr i32 %110, 6
  %or162 = or i32 %shr, 192
  %conv163 = trunc i32 %or162 to i8
  store i8 %conv163, i8* %high, align 1
  %111 = load i32, i32* %c, align 4
  %and164 = and i32 %111, 63
  %or165 = or i32 %and164, 128
  %conv166 = trunc i32 %or165 to i8
  store i8 %conv166, i8* %low, align 1
  br label %while.cond167

while.cond167:                                    ; preds = %while.body186, %if.else161
  %112 = load i32, i32* %hardcount, align 4
  %113 = load i32, i32* %max.addr, align 4
  %cmp168 = icmp slt i32 %112, %113
  br i1 %cmp168, label %land.lhs.true170, label %land.end185

land.lhs.true170:                                 ; preds = %while.cond167
  %114 = load i8*, i8** %scan, align 8
  %add.ptr171 = getelementptr inbounds i8, i8* %114, i64 1
  %115 = load i8*, i8** %loceol, align 8
  %cmp172 = icmp ult i8* %add.ptr171, %115
  br i1 %cmp172, label %land.lhs.true174, label %land.end185

land.lhs.true174:                                 ; preds = %land.lhs.true170
  %116 = load i8*, i8** %scan, align 8
  %117 = load i8, i8* %116, align 1
  %conv175 = zext i8 %117 to i32
  %118 = load i8, i8* %high, align 1
  %conv176 = zext i8 %118 to i32
  %cmp177 = icmp eq i32 %conv175, %conv176
  br i1 %cmp177, label %land.rhs179, label %land.end185

land.rhs179:                                      ; preds = %land.lhs.true174
  %119 = load i8*, i8** %scan, align 8
  %add.ptr180 = getelementptr inbounds i8, i8* %119, i64 1
  %120 = load i8, i8* %add.ptr180, align 1
  %conv181 = zext i8 %120 to i32
  %121 = load i8, i8* %low, align 1
  %conv182 = zext i8 %121 to i32
  %cmp183 = icmp eq i32 %conv181, %conv182
  br label %land.end185

land.end185:                                      ; preds = %land.rhs179, %land.lhs.true174, %land.lhs.true170, %while.cond167
  %122 = phi i1 [ false, %land.lhs.true174 ], [ false, %land.lhs.true170 ], [ false, %while.cond167 ], [ %cmp183, %land.rhs179 ]
  br i1 %122, label %while.body186, label %while.end189

while.body186:                                    ; preds = %land.end185
  %123 = load i8*, i8** %scan, align 8
  %add.ptr187 = getelementptr inbounds i8, i8* %123, i64 2
  store i8* %add.ptr187, i8** %scan, align 8
  %124 = load i32, i32* %hardcount, align 4
  %inc188 = add nsw i32 %124, 1
  store i32 %inc188, i32* %hardcount, align 4
  br label %while.cond167

while.end189:                                     ; preds = %land.end185
  br label %if.end190

if.end190:                                        ; preds = %while.end189, %if.end160
  br label %if.end191

if.end191:                                        ; preds = %if.end190, %while.end108
  br label %sw.epilog1490

sw.bb192:                                         ; preds = %if.end5
  br label %sw.bb193

sw.bb193:                                         ; preds = %if.end5, %sw.bb192
  store i64 1, i64* %utf8_flags, align 8
  br label %do_exactf

sw.bb194:                                         ; preds = %if.end5
  store i64 2, i64* %utf8_flags, align 8
  br label %do_exactf

sw.bb195:                                         ; preds = %if.end5
  store i64 0, i64* %utf8_flags, align 8
  br label %do_exactf

sw.bb196:                                         ; preds = %if.end5
  %125 = load i8, i8* %utf8_target, align 1
  %tobool197 = trunc i8 %125 to i1
  br i1 %tobool197, label %if.end199, label %if.then198

if.then198:                                       ; preds = %sw.bb196
  br label %sw.epilog1490

if.end199:                                        ; preds = %sw.bb196
  store i64 42, i64* %utf8_flags, align 8
  br label %do_exactf

sw.bb200:                                         ; preds = %if.end5, %if.end5
  %126 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat201 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %126, i32 0, i32 13
  %127 = load i8, i8* %is_utf8_pat201, align 1
  %tobool202 = trunc i8 %127 to i1
  %128 = zext i1 %tobool202 to i64
  %cond = select i1 %tobool202, i32 8, i32 0
  %conv204 = sext i32 %cond to i64
  store i64 %conv204, i64* %utf8_flags, align 8
  br label %do_exactf

do_exactf:                                        ; preds = %sw.bb200, %if.end199, %sw.bb195, %sw.bb194, %sw.bb193
  %129 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %arraydecay205 = getelementptr inbounds [14 x i8], [14 x i8]* %c1_utf8, i64 0, i64 0
  %arraydecay206 = getelementptr inbounds [14 x i8], [14 x i8]* %c2_utf8, i64 0, i64 0
  %130 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %call207 = call zeroext i1 @S_setup_EXACTISH_ST_c1_c2(%struct.regnode* %129, i32* %c1, i8* %arraydecay205, i32* %c2, i8* %arraydecay206, %struct.regmatch_info* %130)
  br i1 %call207, label %if.then208, label %if.end335

if.then208:                                       ; preds = %do_exactf
  %131 = load i32, i32* %c1, align 4
  %cmp209 = icmp eq i32 %131, -1000
  br i1 %cmp209, label %if.then211, label %if.else240

if.then211:                                       ; preds = %if.then208
  %132 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend212 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %132, i32 0, i32 2
  %133 = load i8*, i8** %strend212, align 8
  store i8* %133, i8** %tmpeol, align 8
  %134 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat213 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %134, i32 0, i32 13
  %135 = load i8, i8* %is_utf8_pat213, align 1
  %tobool214 = trunc i8 %135 to i1
  br i1 %tobool214, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then211
  %136 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %137 = bitcast %struct.regnode* %136 to %struct.regnode_string*
  %string216 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %137, i32 0, i32 3
  %arraydecay217 = getelementptr inbounds [1 x i8], [1 x i8]* %string216, i64 0, i64 0
  %138 = load i8, i8* %arraydecay217, align 2
  %idxprom218 = zext i8 %138 to i64
  %arrayidx219 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom218
  %139 = load i8, i8* %arrayidx219, align 1
  %conv220 = zext i8 %139 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.then211
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond221 = phi i32 [ %conv220, %cond.true ], [ 1, %cond.false ]
  %conv222 = sext i32 %cond221 to i64
  store i64 %conv222, i64* %pat_len, align 8
  br label %while.cond223

while.cond223:                                    ; preds = %while.body236, %cond.end
  %140 = load i32, i32* %hardcount, align 4
  %141 = load i32, i32* %max.addr, align 4
  %cmp224 = icmp slt i32 %140, %141
  br i1 %cmp224, label %land.rhs226, label %land.end235

land.rhs226:                                      ; preds = %while.cond223
  %142 = load i8*, i8** %scan, align 8
  %143 = load i8, i8* %utf8_target, align 1
  %tobool227 = trunc i8 %143 to i1
  %144 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %145 = bitcast %struct.regnode* %144 to %struct.regnode_string*
  %string228 = getelementptr inbounds %struct.regnode_string, %struct.regnode_string* %145, i32 0, i32 3
  %arraydecay229 = getelementptr inbounds [1 x i8], [1 x i8]* %string228, i64 0, i64 0
  %146 = load i64, i64* %pat_len, align 8
  %147 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %is_utf8_pat230 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %147, i32 0, i32 13
  %148 = load i8, i8* %is_utf8_pat230, align 1
  %tobool231 = trunc i8 %148 to i1
  %149 = load i64, i64* %utf8_flags, align 8
  %conv232 = trunc i64 %149 to i32
  %call233 = call i32 @Perl_foldEQ_utf8_flags(i8* %142, i8** %tmpeol, i64 0, i1 zeroext %tobool227, i8* %arraydecay229, i8** null, i64 %146, i1 zeroext %tobool231, i32 %conv232)
  %tobool234 = icmp ne i32 %call233, 0
  br label %land.end235

land.end235:                                      ; preds = %land.rhs226, %while.cond223
  %150 = phi i1 [ false, %while.cond223 ], [ %tobool234, %land.rhs226 ]
  br i1 %150, label %while.body236, label %while.end239

while.body236:                                    ; preds = %land.end235
  %151 = load i8*, i8** %tmpeol, align 8
  store i8* %151, i8** %scan, align 8
  %152 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend237 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %152, i32 0, i32 2
  %153 = load i8*, i8** %strend237, align 8
  store i8* %153, i8** %tmpeol, align 8
  %154 = load i32, i32* %hardcount, align 4
  %inc238 = add nsw i32 %154, 1
  store i32 %inc238, i32* %hardcount, align 4
  br label %while.cond223

while.end239:                                     ; preds = %land.end235
  br label %if.end334

if.else240:                                       ; preds = %if.then208
  %155 = load i8, i8* %utf8_target, align 1
  %tobool241 = trunc i8 %155 to i1
  br i1 %tobool241, label %if.then242, label %if.else300

if.then242:                                       ; preds = %if.else240
  %156 = load i32, i32* %c1, align 4
  %157 = load i32, i32* %c2, align 4
  %cmp243 = icmp eq i32 %156, %157
  br i1 %cmp243, label %if.then245, label %if.else269

if.then245:                                       ; preds = %if.then242
  br label %while.cond246

while.cond246:                                    ; preds = %while.body261, %if.then245
  %158 = load i8*, i8** %scan, align 8
  %159 = load i8*, i8** %loceol, align 8
  %cmp247 = icmp ult i8* %158, %159
  br i1 %cmp247, label %land.lhs.true249, label %land.end260

land.lhs.true249:                                 ; preds = %while.cond246
  %160 = load i32, i32* %hardcount, align 4
  %161 = load i32, i32* %max.addr, align 4
  %cmp250 = icmp slt i32 %160, %161
  br i1 %cmp250, label %land.rhs252, label %land.end260

land.rhs252:                                      ; preds = %land.lhs.true249
  %162 = load i8*, i8** %scan, align 8
  %arraydecay253 = getelementptr inbounds [14 x i8], [14 x i8]* %c1_utf8, i64 0, i64 0
  %163 = load i8*, i8** %scan, align 8
  %164 = load i8, i8* %163, align 1
  %idxprom254 = zext i8 %164 to i64
  %arrayidx255 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom254
  %165 = load i8, i8* %arrayidx255, align 1
  %conv256 = zext i8 %165 to i64
  %call257 = call i32 @memcmp(i8* %162, i8* %arraydecay253, i64 %conv256) #5
  %tobool258 = icmp ne i32 %call257, 0
  %lnot259 = xor i1 %tobool258, true
  br label %land.end260

land.end260:                                      ; preds = %land.rhs252, %land.lhs.true249, %while.cond246
  %166 = phi i1 [ false, %land.lhs.true249 ], [ false, %while.cond246 ], [ %lnot259, %land.rhs252 ]
  br i1 %166, label %while.body261, label %while.end268

while.body261:                                    ; preds = %land.end260
  %167 = load i8*, i8** %scan, align 8
  %168 = load i8, i8* %167, align 1
  %idxprom262 = zext i8 %168 to i64
  %arrayidx263 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom262
  %169 = load i8, i8* %arrayidx263, align 1
  %conv264 = zext i8 %169 to i32
  %170 = load i8*, i8** %scan, align 8
  %idx.ext265 = sext i32 %conv264 to i64
  %add.ptr266 = getelementptr inbounds i8, i8* %170, i64 %idx.ext265
  store i8* %add.ptr266, i8** %scan, align 8
  %171 = load i32, i32* %hardcount, align 4
  %inc267 = add nsw i32 %171, 1
  store i32 %inc267, i32* %hardcount, align 4
  br label %while.cond246

while.end268:                                     ; preds = %land.end260
  br label %if.end299

if.else269:                                       ; preds = %if.then242
  br label %while.cond270

while.cond270:                                    ; preds = %while.body291, %if.else269
  %172 = load i8*, i8** %scan, align 8
  %173 = load i8*, i8** %loceol, align 8
  %cmp271 = icmp ult i8* %172, %173
  br i1 %cmp271, label %land.lhs.true273, label %land.end290

land.lhs.true273:                                 ; preds = %while.cond270
  %174 = load i32, i32* %hardcount, align 4
  %175 = load i32, i32* %max.addr, align 4
  %cmp274 = icmp slt i32 %174, %175
  br i1 %cmp274, label %land.rhs276, label %land.end290

land.rhs276:                                      ; preds = %land.lhs.true273
  %176 = load i8*, i8** %scan, align 8
  %arraydecay277 = getelementptr inbounds [14 x i8], [14 x i8]* %c1_utf8, i64 0, i64 0
  %177 = load i8*, i8** %scan, align 8
  %178 = load i8, i8* %177, align 1
  %idxprom278 = zext i8 %178 to i64
  %arrayidx279 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom278
  %179 = load i8, i8* %arrayidx279, align 1
  %conv280 = zext i8 %179 to i64
  %call281 = call i32 @memcmp(i8* %176, i8* %arraydecay277, i64 %conv280) #5
  %tobool282 = icmp ne i32 %call281, 0
  br i1 %tobool282, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %land.rhs276
  %180 = load i8*, i8** %scan, align 8
  %arraydecay283 = getelementptr inbounds [14 x i8], [14 x i8]* %c2_utf8, i64 0, i64 0
  %181 = load i8*, i8** %scan, align 8
  %182 = load i8, i8* %181, align 1
  %idxprom284 = zext i8 %182 to i64
  %arrayidx285 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom284
  %183 = load i8, i8* %arrayidx285, align 1
  %conv286 = zext i8 %183 to i64
  %call287 = call i32 @memcmp(i8* %180, i8* %arraydecay283, i64 %conv286) #5
  %tobool288 = icmp ne i32 %call287, 0
  %lnot289 = xor i1 %tobool288, true
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs276
  %184 = phi i1 [ true, %land.rhs276 ], [ %lnot289, %lor.rhs ]
  br label %land.end290

land.end290:                                      ; preds = %lor.end, %land.lhs.true273, %while.cond270
  %185 = phi i1 [ false, %land.lhs.true273 ], [ false, %while.cond270 ], [ %184, %lor.end ]
  br i1 %185, label %while.body291, label %while.end298

while.body291:                                    ; preds = %land.end290
  %186 = load i8*, i8** %scan, align 8
  %187 = load i8, i8* %186, align 1
  %idxprom292 = zext i8 %187 to i64
  %arrayidx293 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom292
  %188 = load i8, i8* %arrayidx293, align 1
  %conv294 = zext i8 %188 to i32
  %189 = load i8*, i8** %scan, align 8
  %idx.ext295 = sext i32 %conv294 to i64
  %add.ptr296 = getelementptr inbounds i8, i8* %189, i64 %idx.ext295
  store i8* %add.ptr296, i8** %scan, align 8
  %190 = load i32, i32* %hardcount, align 4
  %inc297 = add nsw i32 %190, 1
  store i32 %inc297, i32* %hardcount, align 4
  br label %while.cond270

while.end298:                                     ; preds = %land.end290
  br label %if.end299

if.end299:                                        ; preds = %while.end298, %while.end268
  br label %if.end333

if.else300:                                       ; preds = %if.else240
  %191 = load i32, i32* %c1, align 4
  %192 = load i32, i32* %c2, align 4
  %cmp301 = icmp eq i32 %191, %192
  br i1 %cmp301, label %if.then303, label %if.else315

if.then303:                                       ; preds = %if.else300
  br label %while.cond304

while.cond304:                                    ; preds = %while.body312, %if.then303
  %193 = load i8*, i8** %scan, align 8
  %194 = load i8*, i8** %loceol, align 8
  %cmp305 = icmp ult i8* %193, %194
  br i1 %cmp305, label %land.rhs307, label %land.end311

land.rhs307:                                      ; preds = %while.cond304
  %195 = load i8*, i8** %scan, align 8
  %196 = load i8, i8* %195, align 1
  %conv308 = zext i8 %196 to i32
  %197 = load i32, i32* %c1, align 4
  %cmp309 = icmp eq i32 %conv308, %197
  br label %land.end311

land.end311:                                      ; preds = %land.rhs307, %while.cond304
  %198 = phi i1 [ false, %while.cond304 ], [ %cmp309, %land.rhs307 ]
  br i1 %198, label %while.body312, label %while.end314

while.body312:                                    ; preds = %land.end311
  %199 = load i8*, i8** %scan, align 8
  %incdec.ptr313 = getelementptr inbounds i8, i8* %199, i32 1
  store i8* %incdec.ptr313, i8** %scan, align 8
  br label %while.cond304

while.end314:                                     ; preds = %land.end311
  br label %if.end332

if.else315:                                       ; preds = %if.else300
  br label %while.cond316

while.cond316:                                    ; preds = %while.body329, %if.else315
  %200 = load i8*, i8** %scan, align 8
  %201 = load i8*, i8** %loceol, align 8
  %cmp317 = icmp ult i8* %200, %201
  br i1 %cmp317, label %land.rhs319, label %land.end328

land.rhs319:                                      ; preds = %while.cond316
  %202 = load i8*, i8** %scan, align 8
  %203 = load i8, i8* %202, align 1
  %conv320 = zext i8 %203 to i32
  %204 = load i32, i32* %c1, align 4
  %cmp321 = icmp eq i32 %conv320, %204
  br i1 %cmp321, label %lor.end327, label %lor.rhs323

lor.rhs323:                                       ; preds = %land.rhs319
  %205 = load i8*, i8** %scan, align 8
  %206 = load i8, i8* %205, align 1
  %conv324 = zext i8 %206 to i32
  %207 = load i32, i32* %c2, align 4
  %cmp325 = icmp eq i32 %conv324, %207
  br label %lor.end327

lor.end327:                                       ; preds = %lor.rhs323, %land.rhs319
  %208 = phi i1 [ true, %land.rhs319 ], [ %cmp325, %lor.rhs323 ]
  br label %land.end328

land.end328:                                      ; preds = %lor.end327, %while.cond316
  %209 = phi i1 [ false, %while.cond316 ], [ %208, %lor.end327 ]
  br i1 %209, label %while.body329, label %while.end331

while.body329:                                    ; preds = %land.end328
  %210 = load i8*, i8** %scan, align 8
  %incdec.ptr330 = getelementptr inbounds i8, i8* %210, i32 1
  store i8* %incdec.ptr330, i8** %scan, align 8
  br label %while.cond316

while.end331:                                     ; preds = %land.end328
  br label %if.end332

if.end332:                                        ; preds = %while.end331, %while.end314
  br label %if.end333

if.end333:                                        ; preds = %if.end332, %if.end299
  br label %if.end334

if.end334:                                        ; preds = %if.end333, %while.end239
  br label %if.end335

if.end335:                                        ; preds = %if.end334, %do_exactf
  br label %sw.epilog1490

sw.bb336:                                         ; preds = %if.end5
  br label %sw.bb337

sw.bb337:                                         ; preds = %if.end5, %sw.bb336
  %211 = load i8, i8* %utf8_target, align 1
  %tobool338 = trunc i8 %211 to i1
  br i1 %tobool338, label %if.then339, label %if.else359

if.then339:                                       ; preds = %sw.bb337
  br label %while.cond340

while.cond340:                                    ; preds = %while.body351, %if.then339
  %212 = load i32, i32* %hardcount, align 4
  %213 = load i32, i32* %max.addr, align 4
  %cmp341 = icmp slt i32 %212, %213
  br i1 %cmp341, label %land.lhs.true343, label %land.end350

land.lhs.true343:                                 ; preds = %while.cond340
  %214 = load i8*, i8** %scan, align 8
  %215 = load i8*, i8** %loceol, align 8
  %cmp344 = icmp ult i8* %214, %215
  br i1 %cmp344, label %land.rhs346, label %land.end350

land.rhs346:                                      ; preds = %land.lhs.true343
  %216 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %217 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %218 = load i8*, i8** %scan, align 8
  %219 = load i8*, i8** %loceol, align 8
  %220 = load i8, i8* %utf8_target, align 1
  %tobool347 = trunc i8 %220 to i1
  %call348 = call zeroext i1 @S_reginclass(%struct.regexp* %216, %struct.regnode* %217, i8* %218, i8* %219, i1 zeroext %tobool347)
  br label %land.end350

land.end350:                                      ; preds = %land.rhs346, %land.lhs.true343, %while.cond340
  %221 = phi i1 [ false, %land.lhs.true343 ], [ false, %while.cond340 ], [ %call348, %land.rhs346 ]
  br i1 %221, label %while.body351, label %while.end358

while.body351:                                    ; preds = %land.end350
  %222 = load i8*, i8** %scan, align 8
  %223 = load i8, i8* %222, align 1
  %idxprom352 = zext i8 %223 to i64
  %arrayidx353 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom352
  %224 = load i8, i8* %arrayidx353, align 1
  %conv354 = zext i8 %224 to i32
  %225 = load i8*, i8** %scan, align 8
  %idx.ext355 = sext i32 %conv354 to i64
  %add.ptr356 = getelementptr inbounds i8, i8* %225, i64 %idx.ext355
  store i8* %add.ptr356, i8** %scan, align 8
  %226 = load i32, i32* %hardcount, align 4
  %inc357 = add nsw i32 %226, 1
  store i32 %inc357, i32* %hardcount, align 4
  br label %while.cond340

while.end358:                                     ; preds = %land.end350
  br label %if.end390

if.else359:                                       ; preds = %sw.bb337
  br label %while.cond360

while.cond360:                                    ; preds = %while.body387, %if.else359
  %227 = load i8*, i8** %scan, align 8
  %228 = load i8*, i8** %loceol, align 8
  %cmp361 = icmp ult i8* %227, %228
  br i1 %cmp361, label %land.rhs363, label %land.end386

land.rhs363:                                      ; preds = %while.cond360
  %229 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %flags = getelementptr inbounds %struct.regnode, %struct.regnode* %229, i32 0, i32 0
  %230 = load i8, i8* %flags, align 2
  %conv364 = zext i8 %230 to i32
  %tobool365 = icmp ne i32 %conv364, 0
  br i1 %tobool365, label %cond.true366, label %cond.false370

cond.true366:                                     ; preds = %land.rhs363
  %231 = load %struct.regexp*, %struct.regexp** %prog.addr, align 8
  %232 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %233 = load i8*, i8** %scan, align 8
  %234 = load i8*, i8** %scan, align 8
  %add.ptr367 = getelementptr inbounds i8, i8* %234, i64 1
  %call368 = call zeroext i1 @S_reginclass(%struct.regexp* %231, %struct.regnode* %232, i8* %233, i8* %add.ptr367, i1 zeroext false)
  %conv369 = zext i1 %call368 to i32
  br label %cond.end383

cond.false370:                                    ; preds = %land.rhs363
  %235 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %236 = bitcast %struct.regnode* %235 to %struct.regnode_charclass*
  %bitmap = getelementptr inbounds %struct.regnode_charclass, %struct.regnode_charclass* %236, i32 0, i32 4
  %237 = load i8*, i8** %scan, align 8
  %238 = load i8, i8* %237, align 1
  %conv371 = zext i8 %238 to i32
  %shr372 = ashr i32 %conv371, 3
  %and373 = and i32 %shr372, 31
  %idxprom374 = sext i32 %and373 to i64
  %arrayidx375 = getelementptr inbounds [32 x i8], [32 x i8]* %bitmap, i64 0, i64 %idxprom374
  %239 = load i8, i8* %arrayidx375, align 1
  %conv376 = sext i8 %239 to i32
  %240 = load i8*, i8** %scan, align 8
  %241 = load i8, i8* %240, align 1
  %conv377 = zext i8 %241 to i32
  %and378 = and i32 %conv377, 7
  %shl379 = shl i32 1, %and378
  %and380 = and i32 %conv376, %shl379
  %tobool381 = icmp ne i32 %and380, 0
  %242 = zext i1 %tobool381 to i64
  %cond382 = select i1 %tobool381, i32 1, i32 0
  br label %cond.end383

cond.end383:                                      ; preds = %cond.false370, %cond.true366
  %cond384 = phi i32 [ %conv369, %cond.true366 ], [ %cond382, %cond.false370 ]
  %tobool385 = icmp ne i32 %cond384, 0
  br label %land.end386

land.end386:                                      ; preds = %cond.end383, %while.cond360
  %243 = phi i1 [ false, %while.cond360 ], [ %tobool385, %cond.end383 ]
  br i1 %243, label %while.body387, label %while.end389

while.body387:                                    ; preds = %land.end386
  %244 = load i8*, i8** %scan, align 8
  %incdec.ptr388 = getelementptr inbounds i8, i8* %244, i32 1
  store i8* %incdec.ptr388, i8** %scan, align 8
  br label %while.cond360

while.end389:                                     ; preds = %land.end386
  br label %if.end390

if.end390:                                        ; preds = %while.end389, %while.end358
  br label %sw.epilog1490

sw.bb391:                                         ; preds = %if.end5
  store i32 1, i32* %to_complement, align 4
  br label %sw.bb392

sw.bb392:                                         ; preds = %if.end5, %sw.bb391
  %245 = load i8, i8* %utf8_target, align 1
  %tobool393 = trunc i8 %245 to i1
  br i1 %tobool393, label %if.else408, label %if.then394

if.then394:                                       ; preds = %sw.bb392
  br label %while.cond395

while.cond395:                                    ; preds = %while.body405, %if.then394
  %246 = load i8*, i8** %scan, align 8
  %247 = load i8*, i8** %loceol, align 8
  %cmp396 = icmp ult i8* %246, %247
  br i1 %cmp396, label %land.rhs398, label %land.end404

land.rhs398:                                      ; preds = %while.cond395
  %248 = load i32, i32* %to_complement, align 4
  %249 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %flags399 = getelementptr inbounds %struct.regnode, %struct.regnode* %249, i32 0, i32 0
  %250 = load i8, i8* %flags399, align 2
  %251 = load i8*, i8** %scan, align 8
  %252 = load i8, i8* %251, align 1
  %call400 = call zeroext i1 @S_isFOO_lc(i8 zeroext %250, i8 zeroext %252)
  %253 = zext i1 %call400 to i64
  %cond402 = select i1 %call400, i32 1, i32 0
  %xor = xor i32 %248, %cond402
  %tobool403 = icmp ne i32 %xor, 0
  br label %land.end404

land.end404:                                      ; preds = %land.rhs398, %while.cond395
  %254 = phi i1 [ false, %while.cond395 ], [ %tobool403, %land.rhs398 ]
  br i1 %254, label %while.body405, label %while.end407

while.body405:                                    ; preds = %land.end404
  %255 = load i8*, i8** %scan, align 8
  %incdec.ptr406 = getelementptr inbounds i8, i8* %255, i32 1
  store i8* %incdec.ptr406, i8** %scan, align 8
  br label %while.cond395

while.end407:                                     ; preds = %land.end404
  br label %if.end431

if.else408:                                       ; preds = %sw.bb392
  br label %while.cond409

while.cond409:                                    ; preds = %while.body423, %if.else408
  %256 = load i32, i32* %hardcount, align 4
  %257 = load i32, i32* %max.addr, align 4
  %cmp410 = icmp slt i32 %256, %257
  br i1 %cmp410, label %land.lhs.true412, label %land.end422

land.lhs.true412:                                 ; preds = %while.cond409
  %258 = load i8*, i8** %scan, align 8
  %259 = load i8*, i8** %loceol, align 8
  %cmp413 = icmp ult i8* %258, %259
  br i1 %cmp413, label %land.rhs415, label %land.end422

land.rhs415:                                      ; preds = %land.lhs.true412
  %260 = load i32, i32* %to_complement, align 4
  %261 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %flags416 = getelementptr inbounds %struct.regnode, %struct.regnode* %261, i32 0, i32 0
  %262 = load i8, i8* %flags416, align 2
  %263 = load i8*, i8** %scan, align 8
  %call417 = call zeroext i1 @S_isFOO_utf8_lc(i8 zeroext %262, i8* %263)
  %264 = zext i1 %call417 to i64
  %cond419 = select i1 %call417, i32 1, i32 0
  %xor420 = xor i32 %260, %cond419
  %tobool421 = icmp ne i32 %xor420, 0
  br label %land.end422

land.end422:                                      ; preds = %land.rhs415, %land.lhs.true412, %while.cond409
  %265 = phi i1 [ false, %land.lhs.true412 ], [ false, %while.cond409 ], [ %tobool421, %land.rhs415 ]
  br i1 %265, label %while.body423, label %while.end430

while.body423:                                    ; preds = %land.end422
  %266 = load i8*, i8** %scan, align 8
  %267 = load i8, i8* %266, align 1
  %idxprom424 = zext i8 %267 to i64
  %arrayidx425 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom424
  %268 = load i8, i8* %arrayidx425, align 1
  %conv426 = zext i8 %268 to i32
  %269 = load i8*, i8** %scan, align 8
  %idx.ext427 = sext i32 %conv426 to i64
  %add.ptr428 = getelementptr inbounds i8, i8* %269, i64 %idx.ext427
  store i8* %add.ptr428, i8** %scan, align 8
  %270 = load i32, i32* %hardcount, align 4
  %inc429 = add nsw i32 %270, 1
  store i32 %inc429, i32* %hardcount, align 4
  br label %while.cond409

while.end430:                                     ; preds = %land.end422
  br label %if.end431

if.end431:                                        ; preds = %while.end430, %while.end407
  br label %sw.epilog1490

sw.bb432:                                         ; preds = %if.end5
  %271 = load i8, i8* %utf8_target, align 1
  %tobool433 = trunc i8 %271 to i1
  br i1 %tobool433, label %if.then434, label %if.end435

if.then434:                                       ; preds = %sw.bb432
  br label %utf8_posix

if.end435:                                        ; preds = %sw.bb432
  br label %sw.bb436

sw.bb436:                                         ; preds = %if.end5, %if.end435
  %272 = load i8, i8* %utf8_target, align 1
  %tobool437 = trunc i8 %272 to i1
  br i1 %tobool437, label %land.lhs.true439, label %if.end449

land.lhs.true439:                                 ; preds = %sw.bb436
  %273 = load i8*, i8** %loceol, align 8
  %274 = load i8*, i8** %scan, align 8
  %sub.ptr.lhs.cast440 = ptrtoint i8* %273 to i64
  %sub.ptr.rhs.cast441 = ptrtoint i8* %274 to i64
  %sub.ptr.sub442 = sub i64 %sub.ptr.lhs.cast440, %sub.ptr.rhs.cast441
  %275 = load i32, i32* %max.addr, align 4
  %conv443 = sext i32 %275 to i64
  %cmp444 = icmp sgt i64 %sub.ptr.sub442, %conv443
  br i1 %cmp444, label %if.then446, label %if.end449

if.then446:                                       ; preds = %land.lhs.true439
  %276 = load i8*, i8** %scan, align 8
  %277 = load i32, i32* %max.addr, align 4
  %idx.ext447 = sext i32 %277 to i64
  %add.ptr448 = getelementptr inbounds i8, i8* %276, i64 %idx.ext447
  store i8* %add.ptr448, i8** %loceol, align 8
  br label %if.end449

if.end449:                                        ; preds = %if.then446, %land.lhs.true439, %sw.bb436
  br label %while.cond450

while.cond450:                                    ; preds = %while.body468, %if.end449
  %278 = load i8*, i8** %scan, align 8
  %279 = load i8*, i8** %loceol, align 8
  %cmp451 = icmp ult i8* %278, %279
  br i1 %cmp451, label %land.rhs453, label %land.end467

land.rhs453:                                      ; preds = %while.cond450
  %280 = load i8*, i8** %scan, align 8
  %281 = load i8, i8* %280, align 1
  %idxprom454 = zext i8 %281 to i64
  %arrayidx455 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom454
  %282 = load i32, i32* %arrayidx455, align 4
  %283 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %flags456 = getelementptr inbounds %struct.regnode, %struct.regnode* %283, i32 0, i32 0
  %284 = load i8, i8* %flags456, align 2
  %conv457 = zext i8 %284 to i32
  %shl458 = shl i32 1, %conv457
  %or459 = or i32 %shl458, 16384
  %and460 = and i32 %282, %or459
  %285 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %flags461 = getelementptr inbounds %struct.regnode, %struct.regnode* %285, i32 0, i32 0
  %286 = load i8, i8* %flags461, align 2
  %conv462 = zext i8 %286 to i32
  %shl463 = shl i32 1, %conv462
  %or464 = or i32 %shl463, 16384
  %cmp465 = icmp eq i32 %and460, %or464
  br label %land.end467

land.end467:                                      ; preds = %land.rhs453, %while.cond450
  %287 = phi i1 [ false, %while.cond450 ], [ %cmp465, %land.rhs453 ]
  br i1 %287, label %while.body468, label %while.end470

while.body468:                                    ; preds = %land.end467
  %288 = load i8*, i8** %scan, align 8
  %incdec.ptr469 = getelementptr inbounds i8, i8* %288, i32 1
  store i8* %incdec.ptr469, i8** %scan, align 8
  br label %while.cond450

while.end470:                                     ; preds = %land.end467
  br label %sw.epilog1490

sw.bb471:                                         ; preds = %if.end5
  %289 = load i8, i8* %utf8_target, align 1
  %tobool472 = trunc i8 %289 to i1
  br i1 %tobool472, label %if.then473, label %if.end474

if.then473:                                       ; preds = %sw.bb471
  store i32 1, i32* %to_complement, align 4
  br label %utf8_posix

if.end474:                                        ; preds = %sw.bb471
  br label %sw.bb475

sw.bb475:                                         ; preds = %if.end5, %if.end474
  %290 = load i8, i8* %utf8_target, align 1
  %tobool476 = trunc i8 %290 to i1
  br i1 %tobool476, label %if.else500, label %if.then477

if.then477:                                       ; preds = %sw.bb475
  br label %while.cond478

while.cond478:                                    ; preds = %while.body497, %if.then477
  %291 = load i8*, i8** %scan, align 8
  %292 = load i8*, i8** %loceol, align 8
  %cmp479 = icmp ult i8* %291, %292
  br i1 %cmp479, label %land.rhs481, label %land.end496

land.rhs481:                                      ; preds = %while.cond478
  %293 = load i8*, i8** %scan, align 8
  %294 = load i8, i8* %293, align 1
  %idxprom482 = zext i8 %294 to i64
  %arrayidx483 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom482
  %295 = load i32, i32* %arrayidx483, align 4
  %296 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %flags484 = getelementptr inbounds %struct.regnode, %struct.regnode* %296, i32 0, i32 0
  %297 = load i8, i8* %flags484, align 2
  %conv485 = zext i8 %297 to i32
  %shl486 = shl i32 1, %conv485
  %or487 = or i32 %shl486, 16384
  %and488 = and i32 %295, %or487
  %298 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %flags489 = getelementptr inbounds %struct.regnode, %struct.regnode* %298, i32 0, i32 0
  %299 = load i8, i8* %flags489, align 2
  %conv490 = zext i8 %299 to i32
  %shl491 = shl i32 1, %conv490
  %or492 = or i32 %shl491, 16384
  %cmp493 = icmp eq i32 %and488, %or492
  %lnot495 = xor i1 %cmp493, true
  br label %land.end496

land.end496:                                      ; preds = %land.rhs481, %while.cond478
  %300 = phi i1 [ false, %while.cond478 ], [ %lnot495, %land.rhs481 ]
  br i1 %300, label %while.body497, label %while.end499

while.body497:                                    ; preds = %land.end496
  %301 = load i8*, i8** %scan, align 8
  %incdec.ptr498 = getelementptr inbounds i8, i8* %301, i32 1
  store i8* %incdec.ptr498, i8** %scan, align 8
  br label %while.cond478

while.end499:                                     ; preds = %land.end496
  br label %if.end536

if.else500:                                       ; preds = %sw.bb475
  br label %while.cond501

while.cond501:                                    ; preds = %while.body528, %if.else500
  %302 = load i32, i32* %hardcount, align 4
  %303 = load i32, i32* %max.addr, align 4
  %cmp502 = icmp slt i32 %302, %303
  br i1 %cmp502, label %land.lhs.true504, label %land.end527

land.lhs.true504:                                 ; preds = %while.cond501
  %304 = load i8*, i8** %scan, align 8
  %305 = load i8*, i8** %loceol, align 8
  %cmp505 = icmp ult i8* %304, %305
  br i1 %cmp505, label %land.rhs507, label %land.end527

land.rhs507:                                      ; preds = %land.lhs.true504
  %306 = load i8*, i8** %scan, align 8
  %307 = load i8, i8* %306, align 1
  %conv508 = sext i8 %307 to i64
  %cmp509 = icmp ult i64 %conv508, 128
  br i1 %cmp509, label %lor.rhs511, label %lor.end526

lor.rhs511:                                       ; preds = %land.rhs507
  %308 = load i8*, i8** %scan, align 8
  %309 = load i8, i8* %308, align 1
  %idxprom512 = zext i8 %309 to i64
  %arrayidx513 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom512
  %310 = load i32, i32* %arrayidx513, align 4
  %311 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %flags514 = getelementptr inbounds %struct.regnode, %struct.regnode* %311, i32 0, i32 0
  %312 = load i8, i8* %flags514, align 2
  %conv515 = zext i8 %312 to i32
  %shl516 = shl i32 1, %conv515
  %or517 = or i32 %shl516, 16384
  %and518 = and i32 %310, %or517
  %313 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %flags519 = getelementptr inbounds %struct.regnode, %struct.regnode* %313, i32 0, i32 0
  %314 = load i8, i8* %flags519, align 2
  %conv520 = zext i8 %314 to i32
  %shl521 = shl i32 1, %conv520
  %or522 = or i32 %shl521, 16384
  %cmp523 = icmp eq i32 %and518, %or522
  %lnot525 = xor i1 %cmp523, true
  br label %lor.end526

lor.end526:                                       ; preds = %lor.rhs511, %land.rhs507
  %315 = phi i1 [ true, %land.rhs507 ], [ %lnot525, %lor.rhs511 ]
  br label %land.end527

land.end527:                                      ; preds = %lor.end526, %land.lhs.true504, %while.cond501
  %316 = phi i1 [ false, %land.lhs.true504 ], [ false, %while.cond501 ], [ %315, %lor.end526 ]
  br i1 %316, label %while.body528, label %while.end535

while.body528:                                    ; preds = %land.end527
  %317 = load i8*, i8** %scan, align 8
  %318 = load i8, i8* %317, align 1
  %idxprom529 = zext i8 %318 to i64
  %arrayidx530 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom529
  %319 = load i8, i8* %arrayidx530, align 1
  %conv531 = zext i8 %319 to i32
  %320 = load i8*, i8** %scan, align 8
  %idx.ext532 = sext i32 %conv531 to i64
  %add.ptr533 = getelementptr inbounds i8, i8* %320, i64 %idx.ext532
  store i8* %add.ptr533, i8** %scan, align 8
  %321 = load i32, i32* %hardcount, align 4
  %inc534 = add nsw i32 %321, 1
  store i32 %inc534, i32* %hardcount, align 4
  br label %while.cond501

while.end535:                                     ; preds = %land.end527
  br label %if.end536

if.end536:                                        ; preds = %while.end535, %while.end499
  br label %sw.epilog1490

sw.bb537:                                         ; preds = %if.end5
  store i32 1, i32* %to_complement, align 4
  br label %sw.bb538

sw.bb538:                                         ; preds = %if.end5, %sw.bb537
  %322 = load i8, i8* %utf8_target, align 1
  %tobool539 = trunc i8 %322 to i1
  br i1 %tobool539, label %if.else561, label %if.then540

if.then540:                                       ; preds = %sw.bb538
  br label %while.cond541

while.cond541:                                    ; preds = %while.body558, %if.then540
  %323 = load i8*, i8** %scan, align 8
  %324 = load i8*, i8** %loceol, align 8
  %cmp542 = icmp ult i8* %323, %324
  br i1 %cmp542, label %land.rhs544, label %land.end557

land.rhs544:                                      ; preds = %while.cond541
  %325 = load i32, i32* %to_complement, align 4
  %326 = load i8*, i8** %scan, align 8
  %327 = load i8, i8* %326, align 1
  %idxprom545 = zext i8 %327 to i64
  %arrayidx546 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom545
  %328 = load i32, i32* %arrayidx546, align 4
  %329 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %flags547 = getelementptr inbounds %struct.regnode, %struct.regnode* %329, i32 0, i32 0
  %330 = load i8, i8* %flags547, align 2
  %conv548 = zext i8 %330 to i32
  %shl549 = shl i32 1, %conv548
  %and550 = and i32 %328, %shl549
  %tobool551 = icmp ne i32 %and550, 0
  %331 = zext i1 %tobool551 to i64
  %cond552 = select i1 %tobool551, i32 1, i32 0
  %tobool553 = icmp ne i32 %cond552, 0
  %332 = zext i1 %tobool553 to i64
  %cond554 = select i1 %tobool553, i32 1, i32 0
  %xor555 = xor i32 %325, %cond554
  %tobool556 = icmp ne i32 %xor555, 0
  br label %land.end557

land.end557:                                      ; preds = %land.rhs544, %while.cond541
  %333 = phi i1 [ false, %while.cond541 ], [ %tobool556, %land.rhs544 ]
  br i1 %333, label %while.body558, label %while.end560

while.body558:                                    ; preds = %land.end557
  %334 = load i8*, i8** %scan, align 8
  %incdec.ptr559 = getelementptr inbounds i8, i8* %334, i32 1
  store i8* %incdec.ptr559, i8** %scan, align 8
  br label %while.cond541

while.end560:                                     ; preds = %land.end557
  br label %if.end1171

if.else561:                                       ; preds = %sw.bb538
  br label %utf8_posix

utf8_posix:                                       ; preds = %if.else561, %if.then473, %if.then434
  %335 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %flags562 = getelementptr inbounds %struct.regnode, %struct.regnode* %335, i32 0, i32 0
  %336 = load i8, i8* %flags562, align 2
  %conv563 = zext i8 %336 to i32
  store i32 %conv563, i32* %classnum, align 4
  %337 = load i32, i32* %classnum, align 4
  %cmp564 = icmp ult i32 %337, 10
  br i1 %cmp564, label %if.then566, label %if.else636

if.then566:                                       ; preds = %utf8_posix
  br label %while.cond567

while.cond567:                                    ; preds = %if.end633, %if.then566
  %338 = load i32, i32* %hardcount, align 4
  %339 = load i32, i32* %max.addr, align 4
  %cmp568 = icmp slt i32 %338, %339
  br i1 %cmp568, label %land.rhs570, label %land.end573

land.rhs570:                                      ; preds = %while.cond567
  %340 = load i8*, i8** %scan, align 8
  %341 = load i8*, i8** %loceol, align 8
  %cmp571 = icmp ult i8* %340, %341
  br label %land.end573

land.end573:                                      ; preds = %land.rhs570, %while.cond567
  %342 = phi i1 [ false, %while.cond567 ], [ %cmp571, %land.rhs570 ]
  br i1 %342, label %while.body574, label %while.end635

while.body574:                                    ; preds = %land.end573
  %343 = load i8*, i8** %scan, align 8
  %344 = load i8, i8* %343, align 1
  %conv575 = sext i8 %344 to i64
  %cmp576 = icmp ult i64 %conv575, 128
  br i1 %cmp576, label %if.then578, label %if.else592

if.then578:                                       ; preds = %while.body574
  %345 = load i32, i32* %to_complement, align 4
  %346 = load i8*, i8** %scan, align 8
  %347 = load i8, i8* %346, align 1
  %idxprom579 = zext i8 %347 to i64
  %arrayidx580 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom579
  %348 = load i32, i32* %arrayidx580, align 4
  %349 = load i32, i32* %classnum, align 4
  %shl581 = shl i32 1, %349
  %and582 = and i32 %348, %shl581
  %tobool583 = icmp ne i32 %and582, 0
  %350 = zext i1 %tobool583 to i64
  %cond584 = select i1 %tobool583, i32 1, i32 0
  %tobool585 = icmp ne i32 %cond584, 0
  %351 = zext i1 %tobool585 to i64
  %cond586 = select i1 %tobool585, i32 1, i32 0
  %xor587 = xor i32 %345, %cond586
  %tobool588 = icmp ne i32 %xor587, 0
  br i1 %tobool588, label %if.end590, label %if.then589

if.then589:                                       ; preds = %if.then578
  br label %while.end635

if.end590:                                        ; preds = %if.then578
  %352 = load i8*, i8** %scan, align 8
  %incdec.ptr591 = getelementptr inbounds i8, i8* %352, i32 1
  store i8* %incdec.ptr591, i8** %scan, align 8
  br label %if.end633

if.else592:                                       ; preds = %while.body574
  %353 = load i8*, i8** %scan, align 8
  %354 = load i8, i8* %353, align 1
  %conv593 = zext i8 %354 to i32
  %and594 = and i32 %conv593, 254
  %cmp595 = icmp eq i32 %and594, 194
  br i1 %cmp595, label %if.then597, label %if.else631

if.then597:                                       ; preds = %if.else592
  %355 = load i32, i32* %to_complement, align 4
  %356 = load i8*, i8** %scan, align 8
  %357 = load i8, i8* %356, align 1
  %conv598 = sext i8 %357 to i32
  %and599 = and i32 %conv598, 31
  %shl600 = shl i32 %and599, 6
  %358 = load i8*, i8** %scan, align 8
  %add.ptr601 = getelementptr inbounds i8, i8* %358, i64 1
  %359 = load i8, i8* %add.ptr601, align 1
  %conv602 = zext i8 %359 to i32
  %and603 = and i32 %conv602, 63
  %or604 = or i32 %shl600, %and603
  %conv605 = sext i32 %or604 to i64
  %and606 = and i64 %conv605, -256
  %tobool607 = icmp ne i64 %and606, 0
  br i1 %tobool607, label %land.end622, label %land.rhs608

land.rhs608:                                      ; preds = %if.then597
  %360 = load i8*, i8** %scan, align 8
  %361 = load i8, i8* %360, align 1
  %conv609 = sext i8 %361 to i32
  %and610 = and i32 %conv609, 31
  %shl611 = shl i32 %and610, 6
  %362 = load i8*, i8** %scan, align 8
  %add.ptr612 = getelementptr inbounds i8, i8* %362, i64 1
  %363 = load i8, i8* %add.ptr612, align 1
  %conv613 = zext i8 %363 to i32
  %and614 = and i32 %conv613, 63
  %or615 = or i32 %shl611, %and614
  %conv616 = trunc i32 %or615 to i8
  %idxprom617 = zext i8 %conv616 to i64
  %arrayidx618 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom617
  %364 = load i32, i32* %arrayidx618, align 4
  %365 = load i32, i32* %classnum, align 4
  %shl619 = shl i32 1, %365
  %and620 = and i32 %364, %shl619
  %tobool621 = icmp ne i32 %and620, 0
  br label %land.end622

land.end622:                                      ; preds = %land.rhs608, %if.then597
  %366 = phi i1 [ false, %if.then597 ], [ %tobool621, %land.rhs608 ]
  %367 = zext i1 %366 to i64
  %cond623 = select i1 %366, i32 1, i32 0
  %tobool624 = icmp ne i32 %cond623, 0
  %368 = zext i1 %tobool624 to i64
  %cond625 = select i1 %tobool624, i32 1, i32 0
  %xor626 = xor i32 %355, %cond625
  %tobool627 = icmp ne i32 %xor626, 0
  br i1 %tobool627, label %if.end629, label %if.then628

if.then628:                                       ; preds = %land.end622
  br label %while.end635

if.end629:                                        ; preds = %land.end622
  %369 = load i8*, i8** %scan, align 8
  %add.ptr630 = getelementptr inbounds i8, i8* %369, i64 2
  store i8* %add.ptr630, i8** %scan, align 8
  br label %if.end632

if.else631:                                       ; preds = %if.else592
  br label %found_above_latin1

if.end632:                                        ; preds = %if.end629
  br label %if.end633

if.end633:                                        ; preds = %if.end632, %if.end590
  %370 = load i32, i32* %hardcount, align 4
  %inc634 = add nsw i32 %370, 1
  store i32 %inc634, i32* %hardcount, align 4
  br label %while.cond567

while.end635:                                     ; preds = %if.then628, %if.then589, %land.end573
  br label %if.end1170

if.else636:                                       ; preds = %utf8_posix
  %371 = load i32, i32* %classnum, align 4
  switch i32 %371, label %sw.default [
    i32 10, label %sw.bb637
    i32 11, label %sw.bb782
    i32 12, label %sw.bb921
    i32 15, label %sw.bb1016
    i32 13, label %sw.bb1099
  ]

sw.bb637:                                         ; preds = %if.else636
  br label %while.cond638

while.cond638:                                    ; preds = %while.body774, %sw.bb637
  %372 = load i32, i32* %hardcount, align 4
  %373 = load i32, i32* %max.addr, align 4
  %cmp639 = icmp slt i32 %372, %373
  br i1 %cmp639, label %land.lhs.true641, label %land.end773

land.lhs.true641:                                 ; preds = %while.cond638
  %374 = load i8*, i8** %scan, align 8
  %375 = load i8*, i8** %loceol, align 8
  %cmp642 = icmp ult i8* %374, %375
  br i1 %cmp642, label %land.rhs644, label %land.end773

land.rhs644:                                      ; preds = %land.lhs.true641
  %376 = load i32, i32* %to_complement, align 4
  %377 = load i8*, i8** %scan, align 8
  %378 = load i8, i8* %377, align 1
  %conv645 = sext i8 %378 to i64
  %cmp646 = icmp ult i64 %conv645, 128
  br i1 %cmp646, label %cond.true648, label %cond.false654

cond.true648:                                     ; preds = %land.rhs644
  %379 = load i8*, i8** %scan, align 8
  %380 = load i8, i8* %379, align 1
  %idxprom649 = zext i8 %380 to i64
  %arrayidx650 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom649
  %381 = load i32, i32* %arrayidx650, align 4
  %and651 = and i32 %381, 1024
  %tobool652 = icmp ne i32 %and651, 0
  %382 = zext i1 %tobool652 to i64
  %cond653 = select i1 %tobool652, i32 1, i32 0
  br label %cond.end767

cond.false654:                                    ; preds = %land.rhs644
  %383 = load i8*, i8** %scan, align 8
  %384 = load i8, i8* %383, align 1
  %conv655 = zext i8 %384 to i32
  %and656 = and i32 %conv655, 254
  %cmp657 = icmp eq i32 %and656, 194
  br i1 %cmp657, label %cond.true659, label %cond.false685

cond.true659:                                     ; preds = %cond.false654
  %385 = load i8*, i8** %scan, align 8
  %386 = load i8, i8* %385, align 1
  %conv660 = sext i8 %386 to i32
  %and661 = and i32 %conv660, 31
  %shl662 = shl i32 %and661, 6
  %387 = load i8*, i8** %scan, align 8
  %add.ptr663 = getelementptr inbounds i8, i8* %387, i64 1
  %388 = load i8, i8* %add.ptr663, align 1
  %conv664 = zext i8 %388 to i32
  %and665 = and i32 %conv664, 63
  %or666 = or i32 %shl662, %and665
  %conv667 = sext i32 %or666 to i64
  %and668 = and i64 %conv667, -256
  %tobool669 = icmp ne i64 %and668, 0
  br i1 %tobool669, label %land.end683, label %land.rhs670

land.rhs670:                                      ; preds = %cond.true659
  %389 = load i8*, i8** %scan, align 8
  %390 = load i8, i8* %389, align 1
  %conv671 = sext i8 %390 to i32
  %and672 = and i32 %conv671, 31
  %shl673 = shl i32 %and672, 6
  %391 = load i8*, i8** %scan, align 8
  %add.ptr674 = getelementptr inbounds i8, i8* %391, i64 1
  %392 = load i8, i8* %add.ptr674, align 1
  %conv675 = zext i8 %392 to i32
  %and676 = and i32 %conv675, 63
  %or677 = or i32 %shl673, %and676
  %conv678 = trunc i32 %or677 to i8
  %idxprom679 = zext i8 %conv678 to i64
  %arrayidx680 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom679
  %393 = load i32, i32* %arrayidx680, align 4
  %and681 = and i32 %393, 1024
  %tobool682 = icmp ne i32 %and681, 0
  br label %land.end683

land.end683:                                      ; preds = %land.rhs670, %cond.true659
  %394 = phi i1 [ false, %cond.true659 ], [ %tobool682, %land.rhs670 ]
  %395 = zext i1 %394 to i64
  %cond684 = select i1 %394, i32 1, i32 0
  br label %cond.end765

cond.false685:                                    ; preds = %cond.false654
  %396 = load i8*, i8** %scan, align 8
  %arrayidx686 = getelementptr inbounds i8, i8* %396, i64 0
  %397 = load i8, i8* %arrayidx686, align 1
  %conv687 = zext i8 %397 to i32
  %cmp688 = icmp eq i32 225, %conv687
  br i1 %cmp688, label %cond.true690, label %cond.false702

cond.true690:                                     ; preds = %cond.false685
  %398 = load i8*, i8** %scan, align 8
  %arrayidx691 = getelementptr inbounds i8, i8* %398, i64 1
  %399 = load i8, i8* %arrayidx691, align 1
  %conv692 = zext i8 %399 to i32
  %cmp693 = icmp eq i32 154, %conv692
  br i1 %cmp693, label %land.rhs695, label %land.end700

land.rhs695:                                      ; preds = %cond.true690
  %400 = load i8*, i8** %scan, align 8
  %arrayidx696 = getelementptr inbounds i8, i8* %400, i64 2
  %401 = load i8, i8* %arrayidx696, align 1
  %conv697 = zext i8 %401 to i32
  %cmp698 = icmp eq i32 128, %conv697
  br label %land.end700

land.end700:                                      ; preds = %land.rhs695, %cond.true690
  %402 = phi i1 [ false, %cond.true690 ], [ %cmp698, %land.rhs695 ]
  %403 = zext i1 %402 to i64
  %cond701 = select i1 %402, i32 3, i32 0
  br label %cond.end763

cond.false702:                                    ; preds = %cond.false685
  %404 = load i8*, i8** %scan, align 8
  %arrayidx703 = getelementptr inbounds i8, i8* %404, i64 0
  %405 = load i8, i8* %arrayidx703, align 1
  %conv704 = zext i8 %405 to i32
  %cmp705 = icmp eq i32 226, %conv704
  br i1 %cmp705, label %cond.true707, label %cond.false744

cond.true707:                                     ; preds = %cond.false702
  %406 = load i8*, i8** %scan, align 8
  %arrayidx708 = getelementptr inbounds i8, i8* %406, i64 1
  %407 = load i8, i8* %arrayidx708, align 1
  %conv709 = zext i8 %407 to i32
  %cmp710 = icmp eq i32 128, %conv709
  br i1 %cmp710, label %cond.true712, label %cond.false730

cond.true712:                                     ; preds = %cond.true707
  %408 = load i8*, i8** %scan, align 8
  %arrayidx713 = getelementptr inbounds i8, i8* %408, i64 2
  %409 = load i8, i8* %arrayidx713, align 1
  %conv714 = zext i8 %409 to i32
  %cmp715 = icmp sle i32 %conv714, 138
  br i1 %cmp715, label %lor.end728, label %lor.lhs.false717

lor.lhs.false717:                                 ; preds = %cond.true712
  %410 = load i8*, i8** %scan, align 8
  %arrayidx718 = getelementptr inbounds i8, i8* %410, i64 2
  %411 = load i8, i8* %arrayidx718, align 1
  %conv719 = zext i8 %411 to i32
  %and720 = and i32 %conv719, 254
  %cmp721 = icmp eq i32 %and720, 168
  br i1 %cmp721, label %lor.end728, label %lor.rhs723

lor.rhs723:                                       ; preds = %lor.lhs.false717
  %412 = load i8*, i8** %scan, align 8
  %arrayidx724 = getelementptr inbounds i8, i8* %412, i64 2
  %413 = load i8, i8* %arrayidx724, align 1
  %conv725 = zext i8 %413 to i32
  %cmp726 = icmp eq i32 175, %conv725
  br label %lor.end728

lor.end728:                                       ; preds = %lor.rhs723, %lor.lhs.false717, %cond.true712
  %414 = phi i1 [ true, %lor.lhs.false717 ], [ true, %cond.true712 ], [ %cmp726, %lor.rhs723 ]
  %415 = zext i1 %414 to i64
  %cond729 = select i1 %414, i32 3, i32 0
  br label %cond.end742

cond.false730:                                    ; preds = %cond.true707
  %416 = load i8*, i8** %scan, align 8
  %arrayidx731 = getelementptr inbounds i8, i8* %416, i64 1
  %417 = load i8, i8* %arrayidx731, align 1
  %conv732 = zext i8 %417 to i32
  %cmp733 = icmp eq i32 129, %conv732
  br i1 %cmp733, label %land.rhs735, label %land.end740

land.rhs735:                                      ; preds = %cond.false730
  %418 = load i8*, i8** %scan, align 8
  %arrayidx736 = getelementptr inbounds i8, i8* %418, i64 2
  %419 = load i8, i8* %arrayidx736, align 1
  %conv737 = zext i8 %419 to i32
  %cmp738 = icmp eq i32 159, %conv737
  br label %land.end740

land.end740:                                      ; preds = %land.rhs735, %cond.false730
  %420 = phi i1 [ false, %cond.false730 ], [ %cmp738, %land.rhs735 ]
  %421 = zext i1 %420 to i64
  %cond741 = select i1 %420, i32 3, i32 0
  br label %cond.end742

cond.end742:                                      ; preds = %land.end740, %lor.end728
  %cond743 = phi i32 [ %cond729, %lor.end728 ], [ %cond741, %land.end740 ]
  br label %cond.end761

cond.false744:                                    ; preds = %cond.false702
  %422 = load i8*, i8** %scan, align 8
  %arrayidx745 = getelementptr inbounds i8, i8* %422, i64 0
  %423 = load i8, i8* %arrayidx745, align 1
  %conv746 = zext i8 %423 to i32
  %cmp747 = icmp eq i32 227, %conv746
  br i1 %cmp747, label %land.lhs.true749, label %land.end759

land.lhs.true749:                                 ; preds = %cond.false744
  %424 = load i8*, i8** %scan, align 8
  %arrayidx750 = getelementptr inbounds i8, i8* %424, i64 1
  %425 = load i8, i8* %arrayidx750, align 1
  %conv751 = zext i8 %425 to i32
  %cmp752 = icmp eq i32 128, %conv751
  br i1 %cmp752, label %land.rhs754, label %land.end759

land.rhs754:                                      ; preds = %land.lhs.true749
  %426 = load i8*, i8** %scan, align 8
  %arrayidx755 = getelementptr inbounds i8, i8* %426, i64 2
  %427 = load i8, i8* %arrayidx755, align 1
  %conv756 = zext i8 %427 to i32
  %cmp757 = icmp eq i32 128, %conv756
  br label %land.end759

land.end759:                                      ; preds = %land.rhs754, %land.lhs.true749, %cond.false744
  %428 = phi i1 [ false, %land.lhs.true749 ], [ false, %cond.false744 ], [ %cmp757, %land.rhs754 ]
  %429 = zext i1 %428 to i64
  %cond760 = select i1 %428, i32 3, i32 0
  br label %cond.end761

cond.end761:                                      ; preds = %land.end759, %cond.end742
  %cond762 = phi i32 [ %cond743, %cond.end742 ], [ %cond760, %land.end759 ]
  br label %cond.end763

cond.end763:                                      ; preds = %cond.end761, %land.end700
  %cond764 = phi i32 [ %cond701, %land.end700 ], [ %cond762, %cond.end761 ]
  br label %cond.end765

cond.end765:                                      ; preds = %cond.end763, %land.end683
  %cond766 = phi i32 [ %cond684, %land.end683 ], [ %cond764, %cond.end763 ]
  br label %cond.end767

cond.end767:                                      ; preds = %cond.end765, %cond.true648
  %cond768 = phi i32 [ %cond653, %cond.true648 ], [ %cond766, %cond.end765 ]
  %tobool769 = icmp ne i32 %cond768, 0
  %430 = zext i1 %tobool769 to i64
  %cond770 = select i1 %tobool769, i32 1, i32 0
  %xor771 = xor i32 %376, %cond770
  %tobool772 = icmp ne i32 %xor771, 0
  br label %land.end773

land.end773:                                      ; preds = %cond.end767, %land.lhs.true641, %while.cond638
  %431 = phi i1 [ false, %land.lhs.true641 ], [ false, %while.cond638 ], [ %tobool772, %cond.end767 ]
  br i1 %431, label %while.body774, label %while.end781

while.body774:                                    ; preds = %land.end773
  %432 = load i8*, i8** %scan, align 8
  %433 = load i8, i8* %432, align 1
  %idxprom775 = zext i8 %433 to i64
  %arrayidx776 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom775
  %434 = load i8, i8* %arrayidx776, align 1
  %conv777 = zext i8 %434 to i32
  %435 = load i8*, i8** %scan, align 8
  %idx.ext778 = sext i32 %conv777 to i64
  %add.ptr779 = getelementptr inbounds i8, i8* %435, i64 %idx.ext778
  store i8* %add.ptr779, i8** %scan, align 8
  %436 = load i32, i32* %hardcount, align 4
  %inc780 = add nsw i32 %436, 1
  store i32 %inc780, i32* %hardcount, align 4
  br label %while.cond638

while.end781:                                     ; preds = %land.end773
  br label %sw.epilog

sw.bb782:                                         ; preds = %if.else636
  br label %while.cond783

while.cond783:                                    ; preds = %while.body913, %sw.bb782
  %437 = load i32, i32* %hardcount, align 4
  %438 = load i32, i32* %max.addr, align 4
  %cmp784 = icmp slt i32 %437, %438
  br i1 %cmp784, label %land.lhs.true786, label %land.end912

land.lhs.true786:                                 ; preds = %while.cond783
  %439 = load i8*, i8** %scan, align 8
  %440 = load i8*, i8** %loceol, align 8
  %cmp787 = icmp ult i8* %439, %440
  br i1 %cmp787, label %land.rhs789, label %land.end912

land.rhs789:                                      ; preds = %land.lhs.true786
  %441 = load i32, i32* %to_complement, align 4
  %442 = load i8*, i8** %scan, align 8
  %443 = load i8, i8* %442, align 1
  %conv790 = sext i8 %443 to i64
  %cmp791 = icmp ult i64 %conv790, 128
  br i1 %cmp791, label %cond.true793, label %cond.false799

cond.true793:                                     ; preds = %land.rhs789
  %444 = load i8*, i8** %scan, align 8
  %445 = load i8, i8* %444, align 1
  %idxprom794 = zext i8 %445 to i64
  %arrayidx795 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom794
  %446 = load i32, i32* %arrayidx795, align 4
  %and796 = and i32 %446, 2048
  %tobool797 = icmp ne i32 %and796, 0
  %447 = zext i1 %tobool797 to i64
  %cond798 = select i1 %tobool797, i32 1, i32 0
  br label %cond.end906

cond.false799:                                    ; preds = %land.rhs789
  %448 = load i8*, i8** %scan, align 8
  %449 = load i8, i8* %448, align 1
  %conv800 = zext i8 %449 to i32
  %and801 = and i32 %conv800, 254
  %cmp802 = icmp eq i32 %and801, 194
  br i1 %cmp802, label %cond.true804, label %cond.false830

cond.true804:                                     ; preds = %cond.false799
  %450 = load i8*, i8** %scan, align 8
  %451 = load i8, i8* %450, align 1
  %conv805 = sext i8 %451 to i32
  %and806 = and i32 %conv805, 31
  %shl807 = shl i32 %and806, 6
  %452 = load i8*, i8** %scan, align 8
  %add.ptr808 = getelementptr inbounds i8, i8* %452, i64 1
  %453 = load i8, i8* %add.ptr808, align 1
  %conv809 = zext i8 %453 to i32
  %and810 = and i32 %conv809, 63
  %or811 = or i32 %shl807, %and810
  %conv812 = sext i32 %or811 to i64
  %and813 = and i64 %conv812, -256
  %tobool814 = icmp ne i64 %and813, 0
  br i1 %tobool814, label %land.end828, label %land.rhs815

land.rhs815:                                      ; preds = %cond.true804
  %454 = load i8*, i8** %scan, align 8
  %455 = load i8, i8* %454, align 1
  %conv816 = sext i8 %455 to i32
  %and817 = and i32 %conv816, 31
  %shl818 = shl i32 %and817, 6
  %456 = load i8*, i8** %scan, align 8
  %add.ptr819 = getelementptr inbounds i8, i8* %456, i64 1
  %457 = load i8, i8* %add.ptr819, align 1
  %conv820 = zext i8 %457 to i32
  %and821 = and i32 %conv820, 63
  %or822 = or i32 %shl818, %and821
  %conv823 = trunc i32 %or822 to i8
  %idxprom824 = zext i8 %conv823 to i64
  %arrayidx825 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom824
  %458 = load i32, i32* %arrayidx825, align 4
  %and826 = and i32 %458, 2048
  %tobool827 = icmp ne i32 %and826, 0
  br label %land.end828

land.end828:                                      ; preds = %land.rhs815, %cond.true804
  %459 = phi i1 [ false, %cond.true804 ], [ %tobool827, %land.rhs815 ]
  %460 = zext i1 %459 to i64
  %cond829 = select i1 %459, i32 1, i32 0
  br label %cond.end904

cond.false830:                                    ; preds = %cond.false799
  %461 = load i8*, i8** %scan, align 8
  %arrayidx831 = getelementptr inbounds i8, i8* %461, i64 0
  %462 = load i8, i8* %arrayidx831, align 1
  %conv832 = zext i8 %462 to i32
  %cmp833 = icmp eq i32 225, %conv832
  br i1 %cmp833, label %cond.true835, label %cond.false847

cond.true835:                                     ; preds = %cond.false830
  %463 = load i8*, i8** %scan, align 8
  %arrayidx836 = getelementptr inbounds i8, i8* %463, i64 1
  %464 = load i8, i8* %arrayidx836, align 1
  %conv837 = zext i8 %464 to i32
  %cmp838 = icmp eq i32 154, %conv837
  br i1 %cmp838, label %land.rhs840, label %land.end845

land.rhs840:                                      ; preds = %cond.true835
  %465 = load i8*, i8** %scan, align 8
  %arrayidx841 = getelementptr inbounds i8, i8* %465, i64 2
  %466 = load i8, i8* %arrayidx841, align 1
  %conv842 = zext i8 %466 to i32
  %cmp843 = icmp eq i32 128, %conv842
  br label %land.end845

land.end845:                                      ; preds = %land.rhs840, %cond.true835
  %467 = phi i1 [ false, %cond.true835 ], [ %cmp843, %land.rhs840 ]
  %468 = zext i1 %467 to i64
  %cond846 = select i1 %467, i32 3, i32 0
  br label %cond.end902

cond.false847:                                    ; preds = %cond.false830
  %469 = load i8*, i8** %scan, align 8
  %arrayidx848 = getelementptr inbounds i8, i8* %469, i64 0
  %470 = load i8, i8* %arrayidx848, align 1
  %conv849 = zext i8 %470 to i32
  %cmp850 = icmp eq i32 226, %conv849
  br i1 %cmp850, label %cond.true852, label %cond.false883

cond.true852:                                     ; preds = %cond.false847
  %471 = load i8*, i8** %scan, align 8
  %arrayidx853 = getelementptr inbounds i8, i8* %471, i64 1
  %472 = load i8, i8* %arrayidx853, align 1
  %conv854 = zext i8 %472 to i32
  %cmp855 = icmp eq i32 128, %conv854
  br i1 %cmp855, label %cond.true857, label %cond.false869

cond.true857:                                     ; preds = %cond.true852
  %473 = load i8*, i8** %scan, align 8
  %arrayidx858 = getelementptr inbounds i8, i8* %473, i64 2
  %474 = load i8, i8* %arrayidx858, align 1
  %conv859 = zext i8 %474 to i32
  %cmp860 = icmp sle i32 %conv859, 138
  br i1 %cmp860, label %lor.end867, label %lor.rhs862

lor.rhs862:                                       ; preds = %cond.true857
  %475 = load i8*, i8** %scan, align 8
  %arrayidx863 = getelementptr inbounds i8, i8* %475, i64 2
  %476 = load i8, i8* %arrayidx863, align 1
  %conv864 = zext i8 %476 to i32
  %cmp865 = icmp eq i32 175, %conv864
  br label %lor.end867

lor.end867:                                       ; preds = %lor.rhs862, %cond.true857
  %477 = phi i1 [ true, %cond.true857 ], [ %cmp865, %lor.rhs862 ]
  %478 = zext i1 %477 to i64
  %cond868 = select i1 %477, i32 3, i32 0
  br label %cond.end881

cond.false869:                                    ; preds = %cond.true852
  %479 = load i8*, i8** %scan, align 8
  %arrayidx870 = getelementptr inbounds i8, i8* %479, i64 1
  %480 = load i8, i8* %arrayidx870, align 1
  %conv871 = zext i8 %480 to i32
  %cmp872 = icmp eq i32 129, %conv871
  br i1 %cmp872, label %land.rhs874, label %land.end879

land.rhs874:                                      ; preds = %cond.false869
  %481 = load i8*, i8** %scan, align 8
  %arrayidx875 = getelementptr inbounds i8, i8* %481, i64 2
  %482 = load i8, i8* %arrayidx875, align 1
  %conv876 = zext i8 %482 to i32
  %cmp877 = icmp eq i32 159, %conv876
  br label %land.end879

land.end879:                                      ; preds = %land.rhs874, %cond.false869
  %483 = phi i1 [ false, %cond.false869 ], [ %cmp877, %land.rhs874 ]
  %484 = zext i1 %483 to i64
  %cond880 = select i1 %483, i32 3, i32 0
  br label %cond.end881

cond.end881:                                      ; preds = %land.end879, %lor.end867
  %cond882 = phi i32 [ %cond868, %lor.end867 ], [ %cond880, %land.end879 ]
  br label %cond.end900

cond.false883:                                    ; preds = %cond.false847
  %485 = load i8*, i8** %scan, align 8
  %arrayidx884 = getelementptr inbounds i8, i8* %485, i64 0
  %486 = load i8, i8* %arrayidx884, align 1
  %conv885 = zext i8 %486 to i32
  %cmp886 = icmp eq i32 227, %conv885
  br i1 %cmp886, label %land.lhs.true888, label %land.end898

land.lhs.true888:                                 ; preds = %cond.false883
  %487 = load i8*, i8** %scan, align 8
  %arrayidx889 = getelementptr inbounds i8, i8* %487, i64 1
  %488 = load i8, i8* %arrayidx889, align 1
  %conv890 = zext i8 %488 to i32
  %cmp891 = icmp eq i32 128, %conv890
  br i1 %cmp891, label %land.rhs893, label %land.end898

land.rhs893:                                      ; preds = %land.lhs.true888
  %489 = load i8*, i8** %scan, align 8
  %arrayidx894 = getelementptr inbounds i8, i8* %489, i64 2
  %490 = load i8, i8* %arrayidx894, align 1
  %conv895 = zext i8 %490 to i32
  %cmp896 = icmp eq i32 128, %conv895
  br label %land.end898

land.end898:                                      ; preds = %land.rhs893, %land.lhs.true888, %cond.false883
  %491 = phi i1 [ false, %land.lhs.true888 ], [ false, %cond.false883 ], [ %cmp896, %land.rhs893 ]
  %492 = zext i1 %491 to i64
  %cond899 = select i1 %491, i32 3, i32 0
  br label %cond.end900

cond.end900:                                      ; preds = %land.end898, %cond.end881
  %cond901 = phi i32 [ %cond882, %cond.end881 ], [ %cond899, %land.end898 ]
  br label %cond.end902

cond.end902:                                      ; preds = %cond.end900, %land.end845
  %cond903 = phi i32 [ %cond846, %land.end845 ], [ %cond901, %cond.end900 ]
  br label %cond.end904

cond.end904:                                      ; preds = %cond.end902, %land.end828
  %cond905 = phi i32 [ %cond829, %land.end828 ], [ %cond903, %cond.end902 ]
  br label %cond.end906

cond.end906:                                      ; preds = %cond.end904, %cond.true793
  %cond907 = phi i32 [ %cond798, %cond.true793 ], [ %cond905, %cond.end904 ]
  %tobool908 = icmp ne i32 %cond907, 0
  %493 = zext i1 %tobool908 to i64
  %cond909 = select i1 %tobool908, i32 1, i32 0
  %xor910 = xor i32 %441, %cond909
  %tobool911 = icmp ne i32 %xor910, 0
  br label %land.end912

land.end912:                                      ; preds = %cond.end906, %land.lhs.true786, %while.cond783
  %494 = phi i1 [ false, %land.lhs.true786 ], [ false, %while.cond783 ], [ %tobool911, %cond.end906 ]
  br i1 %494, label %while.body913, label %while.end920

while.body913:                                    ; preds = %land.end912
  %495 = load i8*, i8** %scan, align 8
  %496 = load i8, i8* %495, align 1
  %idxprom914 = zext i8 %496 to i64
  %arrayidx915 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom914
  %497 = load i8, i8* %arrayidx915, align 1
  %conv916 = zext i8 %497 to i32
  %498 = load i8*, i8** %scan, align 8
  %idx.ext917 = sext i32 %conv916 to i64
  %add.ptr918 = getelementptr inbounds i8, i8* %498, i64 %idx.ext917
  store i8* %add.ptr918, i8** %scan, align 8
  %499 = load i32, i32* %hardcount, align 4
  %inc919 = add nsw i32 %499, 1
  store i32 %inc919, i32* %hardcount, align 4
  br label %while.cond783

while.end920:                                     ; preds = %land.end912
  br label %sw.epilog

sw.bb921:                                         ; preds = %if.else636
  br label %while.cond922

while.cond922:                                    ; preds = %while.body1008, %sw.bb921
  %500 = load i32, i32* %hardcount, align 4
  %501 = load i32, i32* %max.addr, align 4
  %cmp923 = icmp slt i32 %500, %501
  br i1 %cmp923, label %land.lhs.true925, label %land.end1007

land.lhs.true925:                                 ; preds = %while.cond922
  %502 = load i8*, i8** %scan, align 8
  %503 = load i8*, i8** %loceol, align 8
  %cmp926 = icmp ult i8* %502, %503
  br i1 %cmp926, label %land.rhs928, label %land.end1007

land.rhs928:                                      ; preds = %land.lhs.true925
  %504 = load i32, i32* %to_complement, align 4
  %505 = load i8*, i8** %scan, align 8
  %506 = load i8, i8* %505, align 1
  %conv929 = sext i8 %506 to i64
  %cmp930 = icmp ult i64 %conv929, 128
  br i1 %cmp930, label %cond.true932, label %cond.false938

cond.true932:                                     ; preds = %land.rhs928
  %507 = load i8*, i8** %scan, align 8
  %508 = load i8, i8* %507, align 1
  %idxprom933 = zext i8 %508 to i64
  %arrayidx934 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom933
  %509 = load i32, i32* %arrayidx934, align 4
  %and935 = and i32 %509, 4096
  %tobool936 = icmp ne i32 %and935, 0
  %510 = zext i1 %tobool936 to i64
  %cond937 = select i1 %tobool936, i32 1, i32 0
  br label %cond.end1001

cond.false938:                                    ; preds = %land.rhs928
  %511 = load i8*, i8** %scan, align 8
  %512 = load i8, i8* %511, align 1
  %conv939 = zext i8 %512 to i32
  %cmp940 = icmp sge i32 %conv939, 196
  br i1 %cmp940, label %cond.true942, label %cond.false998

cond.true942:                                     ; preds = %cond.false938
  %513 = load i8*, i8** %scan, align 8
  %arrayidx943 = getelementptr inbounds i8, i8* %513, i64 0
  %514 = load i8, i8* %arrayidx943, align 1
  %conv944 = zext i8 %514 to i32
  %cmp945 = icmp eq i32 239, %conv944
  br i1 %cmp945, label %cond.true947, label %cond.false995

cond.true947:                                     ; preds = %cond.true942
  %515 = load i8*, i8** %scan, align 8
  %arrayidx948 = getelementptr inbounds i8, i8* %515, i64 1
  %516 = load i8, i8* %arrayidx948, align 1
  %conv949 = zext i8 %516 to i32
  %cmp950 = icmp eq i32 188, %conv949
  br i1 %cmp950, label %cond.true952, label %cond.false975

cond.true952:                                     ; preds = %cond.true947
  %517 = load i8*, i8** %scan, align 8
  %arrayidx953 = getelementptr inbounds i8, i8* %517, i64 2
  %518 = load i8, i8* %arrayidx953, align 1
  %conv954 = zext i8 %518 to i32
  %cmp955 = icmp sle i32 144, %conv954
  br i1 %cmp955, label %land.lhs.true957, label %lor.rhs962

land.lhs.true957:                                 ; preds = %cond.true952
  %519 = load i8*, i8** %scan, align 8
  %arrayidx958 = getelementptr inbounds i8, i8* %519, i64 2
  %520 = load i8, i8* %arrayidx958, align 1
  %conv959 = zext i8 %520 to i32
  %cmp960 = icmp sle i32 %conv959, 153
  br i1 %cmp960, label %lor.end973, label %lor.rhs962

lor.rhs962:                                       ; preds = %land.lhs.true957, %cond.true952
  %521 = load i8*, i8** %scan, align 8
  %arrayidx963 = getelementptr inbounds i8, i8* %521, i64 2
  %522 = load i8, i8* %arrayidx963, align 1
  %conv964 = zext i8 %522 to i32
  %cmp965 = icmp sle i32 161, %conv964
  br i1 %cmp965, label %land.rhs967, label %land.end972

land.rhs967:                                      ; preds = %lor.rhs962
  %523 = load i8*, i8** %scan, align 8
  %arrayidx968 = getelementptr inbounds i8, i8* %523, i64 2
  %524 = load i8, i8* %arrayidx968, align 1
  %conv969 = zext i8 %524 to i32
  %cmp970 = icmp sle i32 %conv969, 166
  br label %land.end972

land.end972:                                      ; preds = %land.rhs967, %lor.rhs962
  %525 = phi i1 [ false, %lor.rhs962 ], [ %cmp970, %land.rhs967 ]
  br label %lor.end973

lor.end973:                                       ; preds = %land.end972, %land.lhs.true957
  %526 = phi i1 [ true, %land.lhs.true957 ], [ %525, %land.end972 ]
  %527 = zext i1 %526 to i64
  %cond974 = select i1 %526, i32 3, i32 0
  br label %cond.end993

cond.false975:                                    ; preds = %cond.true947
  %528 = load i8*, i8** %scan, align 8
  %arrayidx976 = getelementptr inbounds i8, i8* %528, i64 1
  %529 = load i8, i8* %arrayidx976, align 1
  %conv977 = zext i8 %529 to i32
  %cmp978 = icmp eq i32 189, %conv977
  br i1 %cmp978, label %land.rhs980, label %land.end991

land.rhs980:                                      ; preds = %cond.false975
  %530 = load i8*, i8** %scan, align 8
  %arrayidx981 = getelementptr inbounds i8, i8* %530, i64 2
  %531 = load i8, i8* %arrayidx981, align 1
  %conv982 = zext i8 %531 to i32
  %cmp983 = icmp sle i32 129, %conv982
  br i1 %cmp983, label %land.rhs985, label %land.end990

land.rhs985:                                      ; preds = %land.rhs980
  %532 = load i8*, i8** %scan, align 8
  %arrayidx986 = getelementptr inbounds i8, i8* %532, i64 2
  %533 = load i8, i8* %arrayidx986, align 1
  %conv987 = zext i8 %533 to i32
  %cmp988 = icmp sle i32 %conv987, 134
  br label %land.end990

land.end990:                                      ; preds = %land.rhs985, %land.rhs980
  %534 = phi i1 [ false, %land.rhs980 ], [ %cmp988, %land.rhs985 ]
  br label %land.end991

land.end991:                                      ; preds = %land.end990, %cond.false975
  %535 = phi i1 [ false, %cond.false975 ], [ %534, %land.end990 ]
  %536 = zext i1 %535 to i64
  %cond992 = select i1 %535, i32 3, i32 0
  br label %cond.end993

cond.end993:                                      ; preds = %land.end991, %lor.end973
  %cond994 = phi i32 [ %cond974, %lor.end973 ], [ %cond992, %land.end991 ]
  br label %cond.end996

cond.false995:                                    ; preds = %cond.true942
  br label %cond.end996

cond.end996:                                      ; preds = %cond.false995, %cond.end993
  %cond997 = phi i32 [ %cond994, %cond.end993 ], [ 0, %cond.false995 ]
  br label %cond.end999

cond.false998:                                    ; preds = %cond.false938
  br label %cond.end999

cond.end999:                                      ; preds = %cond.false998, %cond.end996
  %cond1000 = phi i32 [ %cond997, %cond.end996 ], [ 0, %cond.false998 ]
  br label %cond.end1001

cond.end1001:                                     ; preds = %cond.end999, %cond.true932
  %cond1002 = phi i32 [ %cond937, %cond.true932 ], [ %cond1000, %cond.end999 ]
  %tobool1003 = icmp ne i32 %cond1002, 0
  %537 = zext i1 %tobool1003 to i64
  %cond1004 = select i1 %tobool1003, i32 1, i32 0
  %xor1005 = xor i32 %504, %cond1004
  %tobool1006 = icmp ne i32 %xor1005, 0
  br label %land.end1007

land.end1007:                                     ; preds = %cond.end1001, %land.lhs.true925, %while.cond922
  %538 = phi i1 [ false, %land.lhs.true925 ], [ false, %while.cond922 ], [ %tobool1006, %cond.end1001 ]
  br i1 %538, label %while.body1008, label %while.end1015

while.body1008:                                   ; preds = %land.end1007
  %539 = load i8*, i8** %scan, align 8
  %540 = load i8, i8* %539, align 1
  %idxprom1009 = zext i8 %540 to i64
  %arrayidx1010 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1009
  %541 = load i8, i8* %arrayidx1010, align 1
  %conv1011 = zext i8 %541 to i32
  %542 = load i8*, i8** %scan, align 8
  %idx.ext1012 = sext i32 %conv1011 to i64
  %add.ptr1013 = getelementptr inbounds i8, i8* %542, i64 %idx.ext1012
  store i8* %add.ptr1013, i8** %scan, align 8
  %543 = load i32, i32* %hardcount, align 4
  %inc1014 = add nsw i32 %543, 1
  store i32 %inc1014, i32* %hardcount, align 4
  br label %while.cond922

while.end1015:                                    ; preds = %land.end1007
  br label %sw.epilog

sw.bb1016:                                        ; preds = %if.else636
  br label %while.cond1017

while.cond1017:                                   ; preds = %while.body1091, %sw.bb1016
  %544 = load i32, i32* %hardcount, align 4
  %545 = load i32, i32* %max.addr, align 4
  %cmp1018 = icmp slt i32 %544, %545
  br i1 %cmp1018, label %land.lhs.true1020, label %land.end1090

land.lhs.true1020:                                ; preds = %while.cond1017
  %546 = load i8*, i8** %scan, align 8
  %547 = load i8*, i8** %loceol, align 8
  %cmp1021 = icmp ult i8* %546, %547
  br i1 %cmp1021, label %land.rhs1023, label %land.end1090

land.rhs1023:                                     ; preds = %land.lhs.true1020
  %548 = load i32, i32* %to_complement, align 4
  %549 = load i8*, i8** %scan, align 8
  %550 = load i8, i8* %549, align 1
  %conv1024 = sext i8 %550 to i64
  %cmp1025 = icmp ult i64 %conv1024, 128
  br i1 %cmp1025, label %cond.true1027, label %cond.false1033

cond.true1027:                                    ; preds = %land.rhs1023
  %551 = load i8*, i8** %scan, align 8
  %552 = load i8, i8* %551, align 1
  %idxprom1028 = zext i8 %552 to i64
  %arrayidx1029 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1028
  %553 = load i32, i32* %arrayidx1029, align 4
  %and1030 = and i32 %553, 32768
  %tobool1031 = icmp ne i32 %and1030, 0
  %554 = zext i1 %tobool1031 to i64
  %cond1032 = select i1 %tobool1031, i32 1, i32 0
  br label %cond.end1084

cond.false1033:                                   ; preds = %land.rhs1023
  %555 = load i8*, i8** %scan, align 8
  %556 = load i8, i8* %555, align 1
  %conv1034 = zext i8 %556 to i32
  %and1035 = and i32 %conv1034, 254
  %cmp1036 = icmp eq i32 %and1035, 194
  br i1 %cmp1036, label %cond.true1038, label %cond.false1064

cond.true1038:                                    ; preds = %cond.false1033
  %557 = load i8*, i8** %scan, align 8
  %558 = load i8, i8* %557, align 1
  %conv1039 = sext i8 %558 to i32
  %and1040 = and i32 %conv1039, 31
  %shl1041 = shl i32 %and1040, 6
  %559 = load i8*, i8** %scan, align 8
  %add.ptr1042 = getelementptr inbounds i8, i8* %559, i64 1
  %560 = load i8, i8* %add.ptr1042, align 1
  %conv1043 = zext i8 %560 to i32
  %and1044 = and i32 %conv1043, 63
  %or1045 = or i32 %shl1041, %and1044
  %conv1046 = sext i32 %or1045 to i64
  %and1047 = and i64 %conv1046, -256
  %tobool1048 = icmp ne i64 %and1047, 0
  br i1 %tobool1048, label %land.end1062, label %land.rhs1049

land.rhs1049:                                     ; preds = %cond.true1038
  %561 = load i8*, i8** %scan, align 8
  %562 = load i8, i8* %561, align 1
  %conv1050 = sext i8 %562 to i32
  %and1051 = and i32 %conv1050, 31
  %shl1052 = shl i32 %and1051, 6
  %563 = load i8*, i8** %scan, align 8
  %add.ptr1053 = getelementptr inbounds i8, i8* %563, i64 1
  %564 = load i8, i8* %add.ptr1053, align 1
  %conv1054 = zext i8 %564 to i32
  %and1055 = and i32 %conv1054, 63
  %or1056 = or i32 %shl1052, %and1055
  %conv1057 = trunc i32 %or1056 to i8
  %idxprom1058 = zext i8 %conv1057 to i64
  %arrayidx1059 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1058
  %565 = load i32, i32* %arrayidx1059, align 4
  %and1060 = and i32 %565, 32768
  %tobool1061 = icmp ne i32 %and1060, 0
  br label %land.end1062

land.end1062:                                     ; preds = %land.rhs1049, %cond.true1038
  %566 = phi i1 [ false, %cond.true1038 ], [ %tobool1061, %land.rhs1049 ]
  %567 = zext i1 %566 to i64
  %cond1063 = select i1 %566, i32 1, i32 0
  br label %cond.end1082

cond.false1064:                                   ; preds = %cond.false1033
  %568 = load i8*, i8** %scan, align 8
  %arrayidx1065 = getelementptr inbounds i8, i8* %568, i64 0
  %569 = load i8, i8* %arrayidx1065, align 1
  %conv1066 = zext i8 %569 to i32
  %cmp1067 = icmp eq i32 226, %conv1066
  br i1 %cmp1067, label %land.lhs.true1069, label %land.end1080

land.lhs.true1069:                                ; preds = %cond.false1064
  %570 = load i8*, i8** %scan, align 8
  %arrayidx1070 = getelementptr inbounds i8, i8* %570, i64 1
  %571 = load i8, i8* %arrayidx1070, align 1
  %conv1071 = zext i8 %571 to i32
  %cmp1072 = icmp eq i32 128, %conv1071
  br i1 %cmp1072, label %land.rhs1074, label %land.end1080

land.rhs1074:                                     ; preds = %land.lhs.true1069
  %572 = load i8*, i8** %scan, align 8
  %arrayidx1075 = getelementptr inbounds i8, i8* %572, i64 2
  %573 = load i8, i8* %arrayidx1075, align 1
  %conv1076 = zext i8 %573 to i32
  %and1077 = and i32 %conv1076, 254
  %cmp1078 = icmp eq i32 %and1077, 168
  br label %land.end1080

land.end1080:                                     ; preds = %land.rhs1074, %land.lhs.true1069, %cond.false1064
  %574 = phi i1 [ false, %land.lhs.true1069 ], [ false, %cond.false1064 ], [ %cmp1078, %land.rhs1074 ]
  %575 = zext i1 %574 to i64
  %cond1081 = select i1 %574, i32 3, i32 0
  br label %cond.end1082

cond.end1082:                                     ; preds = %land.end1080, %land.end1062
  %cond1083 = phi i32 [ %cond1063, %land.end1062 ], [ %cond1081, %land.end1080 ]
  br label %cond.end1084

cond.end1084:                                     ; preds = %cond.end1082, %cond.true1027
  %cond1085 = phi i32 [ %cond1032, %cond.true1027 ], [ %cond1083, %cond.end1082 ]
  %tobool1086 = icmp ne i32 %cond1085, 0
  %576 = zext i1 %tobool1086 to i64
  %cond1087 = select i1 %tobool1086, i32 1, i32 0
  %xor1088 = xor i32 %548, %cond1087
  %tobool1089 = icmp ne i32 %xor1088, 0
  br label %land.end1090

land.end1090:                                     ; preds = %cond.end1084, %land.lhs.true1020, %while.cond1017
  %577 = phi i1 [ false, %land.lhs.true1020 ], [ false, %while.cond1017 ], [ %tobool1089, %cond.end1084 ]
  br i1 %577, label %while.body1091, label %while.end1098

while.body1091:                                   ; preds = %land.end1090
  %578 = load i8*, i8** %scan, align 8
  %579 = load i8, i8* %578, align 1
  %idxprom1092 = zext i8 %579 to i64
  %arrayidx1093 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1092
  %580 = load i8, i8* %arrayidx1093, align 1
  %conv1094 = zext i8 %580 to i32
  %581 = load i8*, i8** %scan, align 8
  %idx.ext1095 = sext i32 %conv1094 to i64
  %add.ptr1096 = getelementptr inbounds i8, i8* %581, i64 %idx.ext1095
  store i8* %add.ptr1096, i8** %scan, align 8
  %582 = load i32, i32* %hardcount, align 4
  %inc1097 = add nsw i32 %582, 1
  store i32 %inc1097, i32* %hardcount, align 4
  br label %while.cond1017

while.end1098:                                    ; preds = %land.end1090
  br label %sw.epilog

sw.bb1099:                                        ; preds = %if.else636
  br label %while.cond1100

while.cond1100:                                   ; preds = %while.body1157, %sw.bb1099
  %583 = load i32, i32* %hardcount, align 4
  %584 = load i32, i32* %max.addr, align 4
  %cmp1101 = icmp slt i32 %583, %584
  br i1 %cmp1101, label %land.lhs.true1103, label %land.end1156

land.lhs.true1103:                                ; preds = %while.cond1100
  %585 = load i8*, i8** %scan, align 8
  %586 = load i8*, i8** %loceol, align 8
  %cmp1104 = icmp ult i8* %585, %586
  br i1 %cmp1104, label %land.rhs1106, label %land.end1156

land.rhs1106:                                     ; preds = %land.lhs.true1103
  %587 = load i32, i32* %to_complement, align 4
  %588 = load i8*, i8** %scan, align 8
  %589 = load i8, i8* %588, align 1
  %conv1107 = sext i8 %589 to i64
  %cmp1108 = icmp ult i64 %conv1107, 128
  br i1 %cmp1108, label %cond.true1110, label %cond.false1116

cond.true1110:                                    ; preds = %land.rhs1106
  %590 = load i8*, i8** %scan, align 8
  %591 = load i8, i8* %590, align 1
  %idxprom1111 = zext i8 %591 to i64
  %arrayidx1112 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1111
  %592 = load i32, i32* %arrayidx1112, align 4
  %and1113 = and i32 %592, 8192
  %tobool1114 = icmp ne i32 %and1113, 0
  %593 = zext i1 %tobool1114 to i64
  %cond1115 = select i1 %tobool1114, i32 1, i32 0
  br label %cond.end1150

cond.false1116:                                   ; preds = %land.rhs1106
  %594 = load i8*, i8** %scan, align 8
  %595 = load i8, i8* %594, align 1
  %conv1117 = zext i8 %595 to i32
  %and1118 = and i32 %conv1117, 254
  %cmp1119 = icmp eq i32 %and1118, 194
  br i1 %cmp1119, label %cond.true1121, label %cond.false1147

cond.true1121:                                    ; preds = %cond.false1116
  %596 = load i8*, i8** %scan, align 8
  %597 = load i8, i8* %596, align 1
  %conv1122 = sext i8 %597 to i32
  %and1123 = and i32 %conv1122, 31
  %shl1124 = shl i32 %and1123, 6
  %598 = load i8*, i8** %scan, align 8
  %add.ptr1125 = getelementptr inbounds i8, i8* %598, i64 1
  %599 = load i8, i8* %add.ptr1125, align 1
  %conv1126 = zext i8 %599 to i32
  %and1127 = and i32 %conv1126, 63
  %or1128 = or i32 %shl1124, %and1127
  %conv1129 = sext i32 %or1128 to i64
  %and1130 = and i64 %conv1129, -256
  %tobool1131 = icmp ne i64 %and1130, 0
  br i1 %tobool1131, label %land.end1145, label %land.rhs1132

land.rhs1132:                                     ; preds = %cond.true1121
  %600 = load i8*, i8** %scan, align 8
  %601 = load i8, i8* %600, align 1
  %conv1133 = sext i8 %601 to i32
  %and1134 = and i32 %conv1133, 31
  %shl1135 = shl i32 %and1134, 6
  %602 = load i8*, i8** %scan, align 8
  %add.ptr1136 = getelementptr inbounds i8, i8* %602, i64 1
  %603 = load i8, i8* %add.ptr1136, align 1
  %conv1137 = zext i8 %603 to i32
  %and1138 = and i32 %conv1137, 63
  %or1139 = or i32 %shl1135, %and1138
  %conv1140 = trunc i32 %or1139 to i8
  %idxprom1141 = zext i8 %conv1140 to i64
  %arrayidx1142 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1141
  %604 = load i32, i32* %arrayidx1142, align 4
  %and1143 = and i32 %604, 8192
  %tobool1144 = icmp ne i32 %and1143, 0
  br label %land.end1145

land.end1145:                                     ; preds = %land.rhs1132, %cond.true1121
  %605 = phi i1 [ false, %cond.true1121 ], [ %tobool1144, %land.rhs1132 ]
  %606 = zext i1 %605 to i64
  %cond1146 = select i1 %605, i32 1, i32 0
  br label %cond.end1148

cond.false1147:                                   ; preds = %cond.false1116
  br label %cond.end1148

cond.end1148:                                     ; preds = %cond.false1147, %land.end1145
  %cond1149 = phi i32 [ %cond1146, %land.end1145 ], [ 0, %cond.false1147 ]
  br label %cond.end1150

cond.end1150:                                     ; preds = %cond.end1148, %cond.true1110
  %cond1151 = phi i32 [ %cond1115, %cond.true1110 ], [ %cond1149, %cond.end1148 ]
  %tobool1152 = icmp ne i32 %cond1151, 0
  %607 = zext i1 %tobool1152 to i64
  %cond1153 = select i1 %tobool1152, i32 1, i32 0
  %xor1154 = xor i32 %587, %cond1153
  %tobool1155 = icmp ne i32 %xor1154, 0
  br label %land.end1156

land.end1156:                                     ; preds = %cond.end1150, %land.lhs.true1103, %while.cond1100
  %608 = phi i1 [ false, %land.lhs.true1103 ], [ false, %while.cond1100 ], [ %tobool1155, %cond.end1150 ]
  br i1 %608, label %while.body1157, label %while.end1164

while.body1157:                                   ; preds = %land.end1156
  %609 = load i8*, i8** %scan, align 8
  %610 = load i8, i8* %609, align 1
  %idxprom1158 = zext i8 %610 to i64
  %arrayidx1159 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1158
  %611 = load i8, i8* %arrayidx1159, align 1
  %conv1160 = zext i8 %611 to i32
  %612 = load i8*, i8** %scan, align 8
  %idx.ext1161 = sext i32 %conv1160 to i64
  %add.ptr1162 = getelementptr inbounds i8, i8* %612, i64 %idx.ext1161
  store i8* %add.ptr1162, i8** %scan, align 8
  %613 = load i32, i32* %hardcount, align 4
  %inc1163 = add nsw i32 %613, 1
  store i32 %inc1163, i32* %hardcount, align 4
  br label %while.cond1100

while.end1164:                                    ; preds = %land.end1156
  br label %sw.epilog

sw.default:                                       ; preds = %if.else636
  %614 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %type1165 = getelementptr inbounds %struct.regnode, %struct.regnode* %614, i32 0, i32 1
  %615 = load i8, i8* %type1165, align 1
  %conv1166 = zext i8 %615 to i32
  %616 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %type1167 = getelementptr inbounds %struct.regnode, %struct.regnode* %616, i32 0, i32 1
  %617 = load i8, i8* %type1167, align 1
  %idxprom1168 = zext i8 %617 to i64
  %arrayidx1169 = getelementptr inbounds [0 x i8*], [0 x i8*]* @PL_reg_name, i64 0, i64 %idxprom1168
  %618 = load i8*, i8** %arrayidx1169, align 8
  %619 = load i32, i32* %classnum, align 4
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.23, i64 0, i64 0), i32 %conv1166, i8* %618, i32 %619)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %while.end1164, %while.end1098, %while.end1015, %while.end920, %while.end781
  br label %if.end1170

if.end1170:                                       ; preds = %sw.epilog, %while.end635
  br label %if.end1171

if.end1171:                                       ; preds = %if.end1170, %while.end560
  br label %sw.epilog1490

found_above_latin1:                               ; preds = %if.else631
  %620 = load i32, i32* %classnum, align 4
  %idxprom1172 = zext i32 %620 to i64
  %arrayidx1173 = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom1172
  %621 = load %struct.sv*, %struct.sv** %arrayidx1173, align 8
  %tobool1174 = icmp ne %struct.sv* %621, null
  br i1 %tobool1174, label %if.end1182, label %if.then1175

if.then1175:                                      ; preds = %found_above_latin1
  store i8 4, i8* %flags1176, align 1
  %622 = load i32, i32* %classnum, align 4
  %idxprom1177 = zext i32 %622 to i64
  %arrayidx1178 = getelementptr inbounds [16 x %struct.sv*], [16 x %struct.sv*]* @PL_XPosix_ptrs, i64 0, i64 %idxprom1177
  %623 = load %struct.sv*, %struct.sv** %arrayidx1178, align 8
  %call1179 = call %struct.sv* @Perl__core_swash_init(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %struct.sv* @PL_sv_undef, i32 1, i32 0, %struct.sv* %623, i8* %flags1176)
  %624 = load i32, i32* %classnum, align 4
  %idxprom1180 = zext i32 %624 to i64
  %arrayidx1181 = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom1180
  store %struct.sv* %call1179, %struct.sv** %arrayidx1181, align 8
  br label %if.end1182

if.end1182:                                       ; preds = %if.then1175, %found_above_latin1
  br label %while.cond1183

while.cond1183:                                   ; preds = %while.body1247, %if.end1182
  %625 = load i32, i32* %hardcount, align 4
  %626 = load i32, i32* %max.addr, align 4
  %cmp1184 = icmp slt i32 %625, %626
  br i1 %cmp1184, label %land.lhs.true1186, label %land.end1246

land.lhs.true1186:                                ; preds = %while.cond1183
  %627 = load i8*, i8** %scan, align 8
  %628 = load i8*, i8** %loceol, align 8
  %cmp1187 = icmp ult i8* %627, %628
  br i1 %cmp1187, label %land.rhs1189, label %land.end1246

land.rhs1189:                                     ; preds = %land.lhs.true1186
  %629 = load i32, i32* %to_complement, align 4
  %630 = load i8*, i8** %scan, align 8
  %631 = load i8, i8* %630, align 1
  %conv1190 = sext i8 %631 to i64
  %cmp1191 = icmp ult i64 %conv1190, 128
  br i1 %cmp1191, label %cond.true1193, label %cond.false1201

cond.true1193:                                    ; preds = %land.rhs1189
  %632 = load i8*, i8** %scan, align 8
  %633 = load i8, i8* %632, align 1
  %idxprom1194 = zext i8 %633 to i64
  %arrayidx1195 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1194
  %634 = load i32, i32* %arrayidx1195, align 4
  %635 = load i32, i32* %classnum, align 4
  %shl1196 = shl i32 1, %635
  %and1197 = and i32 %634, %shl1196
  %tobool1198 = icmp ne i32 %and1197, 0
  %636 = zext i1 %tobool1198 to i64
  %cond1199 = select i1 %tobool1198, i32 1, i32 0
  %conv1200 = sext i32 %cond1199 to i64
  br label %cond.end1240

cond.false1201:                                   ; preds = %land.rhs1189
  %637 = load i8*, i8** %scan, align 8
  %638 = load i8, i8* %637, align 1
  %conv1202 = zext i8 %638 to i32
  %and1203 = and i32 %conv1202, 254
  %cmp1204 = icmp eq i32 %and1203, 194
  br i1 %cmp1204, label %cond.true1206, label %cond.false1234

cond.true1206:                                    ; preds = %cond.false1201
  %639 = load i8*, i8** %scan, align 8
  %640 = load i8, i8* %639, align 1
  %conv1207 = sext i8 %640 to i32
  %and1208 = and i32 %conv1207, 31
  %shl1209 = shl i32 %and1208, 6
  %641 = load i8*, i8** %scan, align 8
  %add.ptr1210 = getelementptr inbounds i8, i8* %641, i64 1
  %642 = load i8, i8* %add.ptr1210, align 1
  %conv1211 = zext i8 %642 to i32
  %and1212 = and i32 %conv1211, 63
  %or1213 = or i32 %shl1209, %and1212
  %conv1214 = sext i32 %or1213 to i64
  %and1215 = and i64 %conv1214, -256
  %tobool1216 = icmp ne i64 %and1215, 0
  br i1 %tobool1216, label %land.end1231, label %land.rhs1217

land.rhs1217:                                     ; preds = %cond.true1206
  %643 = load i8*, i8** %scan, align 8
  %644 = load i8, i8* %643, align 1
  %conv1218 = sext i8 %644 to i32
  %and1219 = and i32 %conv1218, 31
  %shl1220 = shl i32 %and1219, 6
  %645 = load i8*, i8** %scan, align 8
  %add.ptr1221 = getelementptr inbounds i8, i8* %645, i64 1
  %646 = load i8, i8* %add.ptr1221, align 1
  %conv1222 = zext i8 %646 to i32
  %and1223 = and i32 %conv1222, 63
  %or1224 = or i32 %shl1220, %and1223
  %conv1225 = trunc i32 %or1224 to i8
  %idxprom1226 = zext i8 %conv1225 to i64
  %arrayidx1227 = getelementptr inbounds [0 x i32], [0 x i32]* @PL_charclass, i64 0, i64 %idxprom1226
  %647 = load i32, i32* %arrayidx1227, align 4
  %648 = load i32, i32* %classnum, align 4
  %shl1228 = shl i32 1, %648
  %and1229 = and i32 %647, %shl1228
  %tobool1230 = icmp ne i32 %and1229, 0
  br label %land.end1231

land.end1231:                                     ; preds = %land.rhs1217, %cond.true1206
  %649 = phi i1 [ false, %cond.true1206 ], [ %tobool1230, %land.rhs1217 ]
  %650 = zext i1 %649 to i64
  %cond1232 = select i1 %649, i32 1, i32 0
  %conv1233 = sext i32 %cond1232 to i64
  br label %cond.end1238

cond.false1234:                                   ; preds = %cond.false1201
  %651 = load i32, i32* %classnum, align 4
  %idxprom1235 = zext i32 %651 to i64
  %arrayidx1236 = getelementptr inbounds [10 x %struct.sv*], [10 x %struct.sv*]* @PL_utf8_swash_ptrs, i64 0, i64 %idxprom1235
  %652 = load %struct.sv*, %struct.sv** %arrayidx1236, align 8
  %653 = load i8*, i8** %scan, align 8
  %call1237 = call i64 @Perl_swash_fetch(%struct.sv* %652, i8* %653, i1 zeroext true)
  br label %cond.end1238

cond.end1238:                                     ; preds = %cond.false1234, %land.end1231
  %cond1239 = phi i64 [ %conv1233, %land.end1231 ], [ %call1237, %cond.false1234 ]
  br label %cond.end1240

cond.end1240:                                     ; preds = %cond.end1238, %cond.true1193
  %cond1241 = phi i64 [ %conv1200, %cond.true1193 ], [ %cond1239, %cond.end1238 ]
  %tobool1242 = icmp ne i64 %cond1241, 0
  %654 = zext i1 %tobool1242 to i64
  %cond1243 = select i1 %tobool1242, i32 1, i32 0
  %xor1244 = xor i32 %629, %cond1243
  %tobool1245 = icmp ne i32 %xor1244, 0
  br label %land.end1246

land.end1246:                                     ; preds = %cond.end1240, %land.lhs.true1186, %while.cond1183
  %655 = phi i1 [ false, %land.lhs.true1186 ], [ false, %while.cond1183 ], [ %tobool1245, %cond.end1240 ]
  br i1 %655, label %while.body1247, label %while.end1254

while.body1247:                                   ; preds = %land.end1246
  %656 = load i8*, i8** %scan, align 8
  %657 = load i8, i8* %656, align 1
  %idxprom1248 = zext i8 %657 to i64
  %arrayidx1249 = getelementptr inbounds [0 x i8], [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1248
  %658 = load i8, i8* %arrayidx1249, align 1
  %conv1250 = zext i8 %658 to i32
  %659 = load i8*, i8** %scan, align 8
  %idx.ext1251 = sext i32 %conv1250 to i64
  %add.ptr1252 = getelementptr inbounds i8, i8* %659, i64 %idx.ext1251
  store i8* %add.ptr1252, i8** %scan, align 8
  %660 = load i32, i32* %hardcount, align 4
  %inc1253 = add nsw i32 %660, 1
  store i32 %inc1253, i32* %hardcount, align 4
  br label %while.cond1183

while.end1254:                                    ; preds = %land.end1246
  br label %sw.epilog1490

sw.bb1255:                                        ; preds = %if.end5
  %661 = load i8, i8* %utf8_target, align 1
  %tobool1256 = trunc i8 %661 to i1
  br i1 %tobool1256, label %if.then1257, label %if.else1403

if.then1257:                                      ; preds = %sw.bb1255
  br label %while.cond1258

while.cond1258:                                   ; preds = %while.body1398, %if.then1257
  %662 = load i32, i32* %hardcount, align 4
  %663 = load i32, i32* %max.addr, align 4
  %cmp1259 = icmp slt i32 %662, %663
  br i1 %cmp1259, label %land.lhs.true1261, label %land.end1396

land.lhs.true1261:                                ; preds = %while.cond1258
  %664 = load i8*, i8** %scan, align 8
  %665 = load i8*, i8** %loceol, align 8
  %cmp1262 = icmp ult i8* %664, %665
  br i1 %cmp1262, label %land.rhs1264, label %land.end1396

land.rhs1264:                                     ; preds = %land.lhs.true1261
  %666 = load i8*, i8** %loceol, align 8
  %667 = load i8*, i8** %scan, align 8
  %sub.ptr.lhs.cast1265 = ptrtoint i8* %666 to i64
  %sub.ptr.rhs.cast1266 = ptrtoint i8* %667 to i64
  %sub.ptr.sub1267 = sub i64 %sub.ptr.lhs.cast1265, %sub.ptr.rhs.cast1266
  %cmp1268 = icmp sgt i64 %sub.ptr.sub1267, 2
  br i1 %cmp1268, label %cond.true1270, label %cond.false1327

cond.true1270:                                    ; preds = %land.rhs1264
  %668 = load i8*, i8** %scan, align 8
  %arrayidx1271 = getelementptr inbounds i8, i8* %668, i64 0
  %669 = load i8, i8* %arrayidx1271, align 1
  %conv1272 = zext i8 %669 to i32
  %cmp1273 = icmp sle i32 10, %conv1272
  br i1 %cmp1273, label %land.lhs.true1275, label %cond.false1281

land.lhs.true1275:                                ; preds = %cond.true1270
  %670 = load i8*, i8** %scan, align 8
  %arrayidx1276 = getelementptr inbounds i8, i8* %670, i64 0
  %671 = load i8, i8* %arrayidx1276, align 1
  %conv1277 = zext i8 %671 to i32
  %cmp1278 = icmp sle i32 %conv1277, 12
  br i1 %cmp1278, label %cond.true1280, label %cond.false1281

cond.true1280:                                    ; preds = %land.lhs.true1275
  br label %cond.end1325

cond.false1281:                                   ; preds = %land.lhs.true1275, %cond.true1270
  %672 = load i8*, i8** %scan, align 8
  %arrayidx1282 = getelementptr inbounds i8, i8* %672, i64 0
  %673 = load i8, i8* %arrayidx1282, align 1
  %conv1283 = zext i8 %673 to i32
  %cmp1284 = icmp eq i32 13, %conv1283
  br i1 %cmp1284, label %cond.true1286, label %cond.false1292

cond.true1286:                                    ; preds = %cond.false1281
  %674 = load i8*, i8** %scan, align 8
  %arrayidx1287 = getelementptr inbounds i8, i8* %674, i64 1
  %675 = load i8, i8* %arrayidx1287, align 1
  %conv1288 = zext i8 %675 to i32
  %cmp1289 = icmp eq i32 10, %conv1288
  %676 = zext i1 %cmp1289 to i64
  %cond1291 = select i1 %cmp1289, i32 2, i32 1
  br label %cond.end1323

cond.false1292:                                   ; preds = %cond.false1281
  %677 = load i8*, i8** %scan, align 8
  %arrayidx1293 = getelementptr inbounds i8, i8* %677, i64 0
  %678 = load i8, i8* %arrayidx1293, align 1
  %conv1294 = zext i8 %678 to i32
  %cmp1295 = icmp eq i32 194, %conv1294
  br i1 %cmp1295, label %cond.true1297, label %cond.false1303

cond.true1297:                                    ; preds = %cond.false1292
  %679 = load i8*, i8** %scan, align 8
  %arrayidx1298 = getelementptr inbounds i8, i8* %679, i64 1
  %680 = load i8, i8* %arrayidx1298, align 1
  %conv1299 = zext i8 %680 to i32
  %cmp1300 = icmp eq i32 133, %conv1299
  %681 = zext i1 %cmp1300 to i64
  %cond1302 = select i1 %cmp1300, i32 2, i32 0
  br label %cond.end1321

cond.false1303:                                   ; preds = %cond.false1292
  %682 = load i8*, i8** %scan, align 8
  %arrayidx1304 = getelementptr inbounds i8, i8* %682, i64 0
  %683 = load i8, i8* %arrayidx1304, align 1
  %conv1305 = zext i8 %683 to i32
  %cmp1306 = icmp eq i32 226, %conv1305
  br i1 %cmp1306, label %land.lhs.true1308, label %land.end1319

land.lhs.true1308:                                ; preds = %cond.false1303
  %684 = load i8*, i8** %scan, align 8
  %arrayidx1309 = getelementptr inbounds i8, i8* %684, i64 1
  %685 = load i8, i8* %arrayidx1309, align 1
  %conv1310 = zext i8 %685 to i32
  %cmp1311 = icmp eq i32 128, %conv1310
  br i1 %cmp1311, label %land.rhs1313, label %land.end1319

land.rhs1313:                                     ; preds = %land.lhs.true1308
  %686 = load i8*, i8** %scan, align 8
  %arrayidx1314 = getelementptr inbounds i8, i8* %686, i64 2
  %687 = load i8, i8* %arrayidx1314, align 1
  %conv1315 = zext i8 %687 to i32
  %and1316 = and i32 %conv1315, 254
  %cmp1317 = icmp eq i32 %and1316, 168
  br label %land.end1319

land.end1319:                                     ; preds = %land.rhs1313, %land.lhs.true1308, %cond.false1303
  %688 = phi i1 [ false, %land.lhs.true1308 ], [ false, %cond.false1303 ], [ %cmp1317, %land.rhs1313 ]
  %689 = zext i1 %688 to i64
  %cond1320 = select i1 %688, i32 3, i32 0
  br label %cond.end1321

cond.end1321:                                     ; preds = %land.end1319, %cond.true1297
  %cond1322 = phi i32 [ %cond1302, %cond.true1297 ], [ %cond1320, %land.end1319 ]
  br label %cond.end1323

cond.end1323:                                     ; preds = %cond.end1321, %cond.true1286
  %cond1324 = phi i32 [ %cond1291, %cond.true1286 ], [ %cond1322, %cond.end1321 ]
  br label %cond.end1325

cond.end1325:                                     ; preds = %cond.end1323, %cond.true1280
  %cond1326 = phi i32 [ 1, %cond.true1280 ], [ %cond1324, %cond.end1323 ]
  br label %cond.end1393

cond.false1327:                                   ; preds = %land.rhs1264
  %690 = load i8*, i8** %loceol, align 8
  %691 = load i8*, i8** %scan, align 8
  %sub.ptr.lhs.cast1328 = ptrtoint i8* %690 to i64
  %sub.ptr.rhs.cast1329 = ptrtoint i8* %691 to i64
  %sub.ptr.sub1330 = sub i64 %sub.ptr.lhs.cast1328, %sub.ptr.rhs.cast1329
  %cmp1331 = icmp sgt i64 %sub.ptr.sub1330, 1
  br i1 %cmp1331, label %cond.true1333, label %cond.false1371

cond.true1333:                                    ; preds = %cond.false1327
  %692 = load i8*, i8** %scan, align 8
  %arrayidx1334 = getelementptr inbounds i8, i8* %692, i64 0
  %693 = load i8, i8* %arrayidx1334, align 1
  %conv1335 = zext i8 %693 to i32
  %cmp1336 = icmp sle i32 10, %conv1335
  br i1 %cmp1336, label %land.lhs.true1338, label %cond.false1344

land.lhs.true1338:                                ; preds = %cond.true1333
  %694 = load i8*, i8** %scan, align 8
  %arrayidx1339 = getelementptr inbounds i8, i8* %694, i64 0
  %695 = load i8, i8* %arrayidx1339, align 1
  %conv1340 = zext i8 %695 to i32
  %cmp1341 = icmp sle i32 %conv1340, 12
  br i1 %cmp1341, label %cond.true1343, label %cond.false1344

cond.true1343:                                    ; preds = %land.lhs.true1338
  br label %cond.end1369

cond.false1344:                                   ; preds = %land.lhs.true1338, %cond.true1333
  %696 = load i8*, i8** %scan, align 8
  %arrayidx1345 = getelementptr inbounds i8, i8* %696, i64 0
  %697 = load i8, i8* %arrayidx1345, align 1
  %conv1346 = zext i8 %697 to i32
  %cmp1347 = icmp eq i32 13, %conv1346
  br i1 %cmp1347, label %cond.true1349, label %cond.false1355

cond.true1349:                                    ; preds = %cond.false1344
  %698 = load i8*, i8** %scan, align 8
  %arrayidx1350 = getelementptr inbounds i8, i8* %698, i64 1
  %699 = load i8, i8* %arrayidx1350, align 1
  %conv1351 = zext i8 %699 to i32
  %cmp1352 = icmp eq i32 10, %conv1351
  %700 = zext i1 %cmp1352 to i64
  %cond1354 = select i1 %cmp1352, i32 2, i32 1
  br label %cond.end1367

cond.false1355:                                   ; preds = %cond.false1344
  %701 = load i8*, i8** %scan, align 8
  %arrayidx1356 = getelementptr inbounds i8, i8* %701, i64 0
  %702 = load i8, i8* %arrayidx1356, align 1
  %conv1357 = zext i8 %702 to i32
  %cmp1358 = icmp eq i32 194, %conv1357
  br i1 %cmp1358, label %land.rhs1360, label %land.end1365

land.rhs1360:                                     ; preds = %cond.false1355
  %703 = load i8*, i8** %scan, align 8
  %arrayidx1361 = getelementptr inbounds i8, i8* %703, i64 1
  %704 = load i8, i8* %arrayidx1361, align 1
  %conv1362 = zext i8 %704 to i32
  %cmp1363 = icmp eq i32 133, %conv1362
  br label %land.end1365

land.end1365:                                     ; preds = %land.rhs1360, %cond.false1355
  %705 = phi i1 [ false, %cond.false1355 ], [ %cmp1363, %land.rhs1360 ]
  %706 = zext i1 %705 to i64
  %cond1366 = select i1 %705, i32 2, i32 0
  br label %cond.end1367

cond.end1367:                                     ; preds = %land.end1365, %cond.true1349
  %cond1368 = phi i32 [ %cond1354, %cond.true1349 ], [ %cond1366, %land.end1365 ]
  br label %cond.end1369

cond.end1369:                                     ; preds = %cond.end1367, %cond.true1343
  %cond1370 = phi i32 [ 1, %cond.true1343 ], [ %cond1368, %cond.end1367 ]
  br label %cond.end1391

cond.false1371:                                   ; preds = %cond.false1327
  %707 = load i8*, i8** %loceol, align 8
  %708 = load i8*, i8** %scan, align 8
  %sub.ptr.lhs.cast1372 = ptrtoint i8* %707 to i64
  %sub.ptr.rhs.cast1373 = ptrtoint i8* %708 to i64
  %sub.ptr.sub1374 = sub i64 %sub.ptr.lhs.cast1372, %sub.ptr.rhs.cast1373
  %cmp1375 = icmp sgt i64 %sub.ptr.sub1374, 0
  br i1 %cmp1375, label %cond.true1377, label %cond.false1388

cond.true1377:                                    ; preds = %cond.false1371
  %709 = load i8*, i8** %scan, align 8
  %arrayidx1378 = getelementptr inbounds i8, i8* %709, i64 0
  %710 = load i8, i8* %arrayidx1378, align 1
  %conv1379 = zext i8 %710 to i32
  %cmp1380 = icmp sle i32 10, %conv1379
  br i1 %cmp1380, label %land.rhs1382, label %land.end1387

land.rhs1382:                                     ; preds = %cond.true1377
  %711 = load i8*, i8** %scan, align 8
  %arrayidx1383 = getelementptr inbounds i8, i8* %711, i64 0
  %712 = load i8, i8* %arrayidx1383, align 1
  %conv1384 = zext i8 %712 to i32
  %cmp1385 = icmp sle i32 %conv1384, 13
  br label %land.end1387

land.end1387:                                     ; preds = %land.rhs1382, %cond.true1377
  %713 = phi i1 [ false, %cond.true1377 ], [ %cmp1385, %land.rhs1382 ]
  %land.ext = zext i1 %713 to i32
  br label %cond.end1389

cond.false1388:                                   ; preds = %cond.false1371
  br label %cond.end1389

cond.end1389:                                     ; preds = %cond.false1388, %land.end1387
  %cond1390 = phi i32 [ %land.ext, %land.end1387 ], [ 0, %cond.false1388 ]
  br label %cond.end1391

cond.end1391:                                     ; preds = %cond.end1389, %cond.end1369
  %cond1392 = phi i32 [ %cond1370, %cond.end1369 ], [ %cond1390, %cond.end1389 ]
  br label %cond.end1393

cond.end1393:                                     ; preds = %cond.end1391, %cond.end1325
  %cond1394 = phi i32 [ %cond1326, %cond.end1325 ], [ %cond1392, %cond.end1391 ]
  store i32 %cond1394, i32* %c, align 4
  %tobool1395 = icmp ne i32 %cond1394, 0
  br label %land.end1396

land.end1396:                                     ; preds = %cond.end1393, %land.lhs.true1261, %while.cond1258
  %714 = phi i1 [ false, %land.lhs.true1261 ], [ false, %while.cond1258 ], [ %tobool1395, %cond.end1393 ]
  br i1 %714, label %while.body1398, label %while.end1402

while.body1398:                                   ; preds = %land.end1396
  %715 = load i32, i32* %c, align 4
  %716 = load i8*, i8** %scan, align 8
  %idx.ext1399 = sext i32 %715 to i64
  %add.ptr1400 = getelementptr inbounds i8, i8* %716, i64 %idx.ext1399
  store i8* %add.ptr1400, i8** %scan, align 8
  %717 = load i32, i32* %hardcount, align 4
  %inc1401 = add nsw i32 %717, 1
  store i32 %inc1401, i32* %hardcount, align 4
  br label %while.cond1258

while.end1402:                                    ; preds = %land.end1396
  br label %if.end1481

if.else1403:                                      ; preds = %sw.bb1255
  %718 = load %struct.regmatch_info*, %struct.regmatch_info** %reginfo.addr, align 8
  %strend1404 = getelementptr inbounds %struct.regmatch_info, %struct.regmatch_info* %718, i32 0, i32 2
  %719 = load i8*, i8** %strend1404, align 8
  store i8* %719, i8** %loceol, align 8
  br label %while.cond1405

while.cond1405:                                   ; preds = %while.body1476, %if.else1403
  %720 = load i8*, i8** %scan, align 8
  %721 = load i8*, i8** %loceol, align 8
  %cmp1406 = icmp ult i8* %720, %721
  br i1 %cmp1406, label %land.rhs1408, label %land.end1474

land.rhs1408:                                     ; preds = %while.cond1405
  %722 = load i8*, i8** %loceol, align 8
  %723 = load i8*, i8** %scan, align 8
  %sub.ptr.lhs.cast1409 = ptrtoint i8* %722 to i64
  %sub.ptr.rhs.cast1410 = ptrtoint i8* %723 to i64
  %sub.ptr.sub1411 = sub i64 %sub.ptr.lhs.cast1409, %sub.ptr.rhs.cast1410
  %cmp1412 = icmp sgt i64 %sub.ptr.sub1411, 1
  br i1 %cmp1412, label %cond.true1414, label %cond.false1446

cond.true1414:                                    ; preds = %land.rhs1408
  %724 = load i8*, i8** %scan, align 8
  %arrayidx1415 = getelementptr inbounds i8, i8* %724, i64 0
  %725 = load i8, i8* %arrayidx1415, align 1
  %conv1416 = zext i8 %725 to i32
  %cmp1417 = icmp sle i32 10, %conv1416
  br i1 %cmp1417, label %land.lhs.true1419, label %lor.lhs.false1424

land.lhs.true1419:                                ; preds = %cond.true1414
  %726 = load i8*, i8** %scan, align 8
  %arrayidx1420 = getelementptr inbounds i8, i8* %726, i64 0
  %727 = load i8, i8* %arrayidx1420, align 1
  %conv1421 = zext i8 %727 to i32
  %cmp1422 = icmp sle i32 %conv1421, 12
  br i1 %cmp1422, label %cond.true1429, label %lor.lhs.false1424

lor.lhs.false1424:                                ; preds = %land.lhs.true1419, %cond.true1414
  %728 = load i8*, i8** %scan, align 8
  %arrayidx1425 = getelementptr inbounds i8, i8* %728, i64 0
  %729 = load i8, i8* %arrayidx1425, align 1
  %conv1426 = zext i8 %729 to i32
  %cmp1427 = icmp eq i32 133, %conv1426
  br i1 %cmp1427, label %cond.true1429, label %cond.false1430

cond.true1429:                                    ; preds = %lor.lhs.false1424, %land.lhs.true1419
  br label %cond.end1444

cond.false1430:                                   ; preds = %lor.lhs.false1424
  %730 = load i8*, i8** %scan, align 8
  %arrayidx1431 = getelementptr inbounds i8, i8* %730, i64 0
  %731 = load i8, i8* %arrayidx1431, align 1
  %conv1432 = zext i8 %731 to i32
  %cmp1433 = icmp eq i32 13, %conv1432
  br i1 %cmp1433, label %cond.true1435, label %cond.false1441

cond.true1435:                                    ; preds = %cond.false1430
  %732 = load i8*, i8** %scan, align 8
  %arrayidx1436 = getelementptr inbounds i8, i8* %732, i64 1
  %733 = load i8, i8* %arrayidx1436, align 1
  %conv1437 = zext i8 %733 to i32
  %cmp1438 = icmp eq i32 10, %conv1437
  %734 = zext i1 %cmp1438 to i64
  %cond1440 = select i1 %cmp1438, i32 2, i32 1
  br label %cond.end1442

cond.false1441:                                   ; preds = %cond.false1430
  br label %cond.end1442

cond.end1442:                                     ; preds = %cond.false1441, %cond.true1435
  %cond1443 = phi i32 [ %cond1440, %cond.true1435 ], [ 0, %cond.false1441 ]
  br label %cond.end1444

cond.end1444:                                     ; preds = %cond.end1442, %cond.true1429
  %cond1445 = phi i32 [ 1, %cond.true1429 ], [ %cond1443, %cond.end1442 ]
  br label %cond.end1471

cond.false1446:                                   ; preds = %land.rhs1408
  %735 = load i8*, i8** %loceol, align 8
  %736 = load i8*, i8** %scan, align 8
  %sub.ptr.lhs.cast1447 = ptrtoint i8* %735 to i64
  %sub.ptr.rhs.cast1448 = ptrtoint i8* %736 to i64
  %sub.ptr.sub1449 = sub i64 %sub.ptr.lhs.cast1447, %sub.ptr.rhs.cast1448
  %cmp1450 = icmp sgt i64 %sub.ptr.sub1449, 0
  br i1 %cmp1450, label %cond.true1452, label %cond.false1468

cond.true1452:                                    ; preds = %cond.false1446
  %737 = load i8*, i8** %scan, align 8
  %arrayidx1453 = getelementptr inbounds i8, i8* %737, i64 0
  %738 = load i8, i8* %arrayidx1453, align 1
  %conv1454 = zext i8 %738 to i32
  %cmp1455 = icmp sle i32 10, %conv1454
  br i1 %cmp1455, label %land.lhs.true1457, label %lor.rhs1462

land.lhs.true1457:                                ; preds = %cond.true1452
  %739 = load i8*, i8** %scan, align 8
  %arrayidx1458 = getelementptr inbounds i8, i8* %739, i64 0
  %740 = load i8, i8* %arrayidx1458, align 1
  %conv1459 = zext i8 %740 to i32
  %cmp1460 = icmp sle i32 %conv1459, 13
  br i1 %cmp1460, label %lor.end1467, label %lor.rhs1462

lor.rhs1462:                                      ; preds = %land.lhs.true1457, %cond.true1452
  %741 = load i8*, i8** %scan, align 8
  %arrayidx1463 = getelementptr inbounds i8, i8* %741, i64 0
  %742 = load i8, i8* %arrayidx1463, align 1
  %conv1464 = zext i8 %742 to i32
  %cmp1465 = icmp eq i32 133, %conv1464
  br label %lor.end1467

lor.end1467:                                      ; preds = %lor.rhs1462, %land.lhs.true1457
  %743 = phi i1 [ true, %land.lhs.true1457 ], [ %cmp1465, %lor.rhs1462 ]
  %lor.ext = zext i1 %743 to i32
  br label %cond.end1469

cond.false1468:                                   ; preds = %cond.false1446
  br label %cond.end1469

cond.end1469:                                     ; preds = %cond.false1468, %lor.end1467
  %cond1470 = phi i32 [ %lor.ext, %lor.end1467 ], [ 0, %cond.false1468 ]
  br label %cond.end1471

cond.end1471:                                     ; preds = %cond.end1469, %cond.end1444
  %cond1472 = phi i32 [ %cond1445, %cond.end1444 ], [ %cond1470, %cond.end1469 ]
  store i32 %cond1472, i32* %c, align 4
  %tobool1473 = icmp ne i32 %cond1472, 0
  br label %land.end1474

land.end1474:                                     ; preds = %cond.end1471, %while.cond1405
  %744 = phi i1 [ false, %while.cond1405 ], [ %tobool1473, %cond.end1471 ]
  br i1 %744, label %while.body1476, label %while.end1480

while.body1476:                                   ; preds = %land.end1474
  %745 = load i32, i32* %c, align 4
  %746 = load i8*, i8** %scan, align 8
  %idx.ext1477 = sext i32 %745 to i64
  %add.ptr1478 = getelementptr inbounds i8, i8* %746, i64 %idx.ext1477
  store i8* %add.ptr1478, i8** %scan, align 8
  %747 = load i32, i32* %hardcount, align 4
  %inc1479 = add nsw i32 %747, 1
  store i32 %inc1479, i32* %hardcount, align 4
  br label %while.cond1405

while.end1480:                                    ; preds = %land.end1474
  br label %if.end1481

if.end1481:                                       ; preds = %while.end1480, %while.end1402
  br label %sw.epilog1490

sw.bb1482:                                        ; preds = %if.end5, %if.end5
  br label %sw.bb1483

sw.bb1483:                                        ; preds = %if.end5, %if.end5, %if.end5, %if.end5, %if.end5, %if.end5, %if.end5, %if.end5, %if.end5, %if.end5, %if.end5, %if.end5, %sw.bb1482
  br label %sw.epilog1490

sw.default1484:                                   ; preds = %if.end5
  %748 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %type1485 = getelementptr inbounds %struct.regnode, %struct.regnode* %748, i32 0, i32 1
  %749 = load i8, i8* %type1485, align 1
  %conv1486 = zext i8 %749 to i32
  %750 = load %struct.regnode*, %struct.regnode** %p.addr, align 8
  %type1487 = getelementptr inbounds %struct.regnode, %struct.regnode* %750, i32 0, i32 1
  %751 = load i8, i8* %type1487, align 1
  %idxprom1488 = zext i8 %751 to i64
  %arrayidx1489 = getelementptr inbounds [0 x i8*], [0 x i8*]* @PL_reg_name, i64 0, i64 %idxprom1488
  %752 = load i8*, i8** %arrayidx1489, align 8
  call void (i8*, ...) @Perl_croak(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i64 0, i64 0), i32 %conv1486, i8* %752)
  br label %sw.epilog1490

sw.epilog1490:                                    ; preds = %sw.default1484, %sw.bb1483, %if.end1481, %while.end1254, %if.end1171, %if.end536, %while.end470, %if.end431, %if.end390, %if.end335, %if.then198, %if.end191, %if.end66, %if.end51, %if.end31
  %753 = load i32, i32* %hardcount, align 4
  %tobool1491 = icmp ne i32 %753, 0
  br i1 %tobool1491, label %if.then1492, label %if.else1493

if.then1492:                                      ; preds = %sw.epilog1490
  %754 = load i32, i32* %hardcount, align 4
  store i32 %754, i32* %c, align 4
  br label %if.end1498

if.else1493:                                      ; preds = %sw.epilog1490
  %755 = load i8*, i8** %scan, align 8
  %756 = load i8**, i8*** %startposp.addr, align 8
  %757 = load i8*, i8** %756, align 8
  %sub.ptr.lhs.cast1494 = ptrtoint i8* %755 to i64
  %sub.ptr.rhs.cast1495 = ptrtoint i8* %757 to i64
  %sub.ptr.sub1496 = sub i64 %sub.ptr.lhs.cast1494, %sub.ptr.rhs.cast1495
  %conv1497 = trunc i64 %sub.ptr.sub1496 to i32
  store i32 %conv1497, i32* %c, align 4
  br label %if.end1498

if.end1498:                                       ; preds = %if.else1493, %if.then1492
  %758 = load i8*, i8** %scan, align 8
  %759 = load i8**, i8*** %startposp.addr, align 8
  store i8* %758, i8** %759, align 8
  %760 = load i32, i32* %c, align 4
  ret i32 %760
}

declare dso_local i32 @Perl_sv_eq_flags(%struct.sv*, %struct.sv*, i32) #2

declare dso_local i32 @PerlIO_printf(%struct._PerlIO**, i8*, ...) #2

declare dso_local %struct._PerlIO** @Perl_PerlIO_stderr() #2

declare dso_local void @Perl_croak_popstack() #2

declare dso_local void @Perl_savestack_grow_cnt(i32) #2

declare dso_local i64 @Perl_valid_utf8_to_uvchr(i8*, i64*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @tolower(i32) #1

declare dso_local void @Perl__load_PL_utf8_foldclosures() #2

; Function Attrs: noinline nounwind uwtable
define internal i64 @S_av_top_index(%struct.av* %av) #0 {
entry:
  %av.addr = alloca %struct.av*, align 8
  store %struct.av* %av, %struct.av** %av.addr, align 8
  %0 = load %struct.av*, %struct.av** %av.addr, align 8
  %1 = bitcast %struct.av* %0 to %struct.sv*
  %sv_flags = getelementptr inbounds %struct.sv, %struct.sv* %1, i32 0, i32 2
  %2 = load i32, i32* %sv_flags, align 4
  %and = and i32 %2, 8388608
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct.av*, %struct.av** %av.addr, align 8
  %4 = bitcast %struct.av* %3 to i8*
  %5 = bitcast i8* %4 to %struct.sv*
  %call = call i32 @Perl_mg_size(%struct.sv* %5)
  %conv = sext i32 %call to i64
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct.av*, %struct.av** %av.addr, align 8
  %sv_any = getelementptr inbounds %struct.av, %struct.av* %6, i32 0, i32 0
  %7 = load %struct.xpvav*, %struct.xpvav** %sv_any, align 8
  %xav_fill = getelementptr inbounds %struct.xpvav, %struct.xpvav* %7, i32 0, i32 2
  %8 = load i64, i64* %xav_fill, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv, %cond.true ], [ %8, %cond.false ]
  ret i64 %cond
}

declare dso_local %struct.sv** @Perl_av_fetch(%struct.av*, i64, i32) #2

declare dso_local i64 @Perl_sv_2uv_flags(%struct.sv*, i32) #2

declare dso_local i8* @Perl_uvoffuni_to_utf8_flags(i8*, i64, i64) #2

declare dso_local i32 @Perl_mg_size(%struct.sv*) #2

declare dso_local void @Perl_save_gp(%struct.gv*, i32) #2

declare dso_local void @Perl_save_generic_svref(%struct.sv**) #2

declare dso_local %struct.magic* @Perl_sv_magicext_mglob(%struct.sv*) #2

declare dso_local %struct.sv* @Perl_newSVsv(%struct.sv*) #2

declare dso_local i64 @Perl_sv_utf8_upgrade_flags_grow(%struct.sv*, i32, i64) #2

declare dso_local void @Perl_fbm_compile(%struct.sv*, i32) #2

declare dso_local zeroext i1 @Perl_sv_utf8_downgrade(%struct.sv*, i1 zeroext) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind readonly }
attributes #6 = { nounwind readnone }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
