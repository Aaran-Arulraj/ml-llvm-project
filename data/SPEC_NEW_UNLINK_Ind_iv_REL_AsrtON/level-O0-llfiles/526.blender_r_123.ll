; ModuleID = 'blender/source/blender/blenkernel/intern/cdderivedmesh.c'
source_filename = "blender/source/blender/blenkernel/intern/cdderivedmesh.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.LinkNode = type opaque
%struct.GPUDrawObject = type { %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, i32*, %struct.GPUVertPointLink*, i32, %struct.GPUBufferMaterial*, i32, i32, i32, i32, i32, i8 }
%struct.GPUBuffer = type { i32, i8*, i32 }
%struct.GPUVertPointLink = type opaque
%struct.GPUBufferMaterial = type { i32, i32, i16 }
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type opaque
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type { %struct.MultiresModifierData*, %struct.MVert*, %struct.MPoly*, %struct.MLoop*, i32, i32, [3 x float]*, %struct.KeyBlock*, float*, %struct.MeshElemMap*, %struct.BMesh*, i32, i32, i8, %struct.BMLog*, %struct.PBVH*, i8, i8, [3 x float]*, [3 x float]*, [3 x [3 x float]]*, i8, i32, i32*, i32, %struct.ImagePool*, [3 x float]*, %struct.SculptStroke*, %struct.StrokeCache*, i8, [3 x float], [3 x float], i32 }
%struct.MultiresModifierData = type opaque
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.MLoop = type { i32, i32 }
%struct.KeyBlock = type opaque
%struct.MeshElemMap = type { i32*, i32 }
%struct.BMesh = type { i32, i32, i32, i32, i32, i32, i32, i8, i8, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BMVert**, %struct.BMEdge**, %struct.BMFace**, i32, i32, i32, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, i32, %struct.BMOperator*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i16, i32, i32, i32, %struct.ListBase, %struct.BMFace*, %struct.ListBase, i8* }
%struct.BMVert = type { %struct.BMHeader, %struct.BMFlagLayer*, [3 x float], [3 x float], %struct.BMEdge* }
%struct.BMHeader = type { i8*, i32, i8, i8, i8 }
%struct.BMFlagLayer = type { i16 }
%struct.BMEdge = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMVert*, %struct.BMVert*, %struct.BMLoop*, %struct.BMDiskLink, %struct.BMDiskLink }
%struct.BMLoop = type { %struct.BMHeader, %struct.BMVert*, %struct.BMEdge*, %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMDiskLink = type { %struct.BMEdge*, %struct.BMEdge* }
%struct.BMOperator = type { [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot], void (%struct.BMesh*, %struct.BMOperator*)*, %struct.MemArena*, i32, i32, i32 }
%struct.BMOpSlot = type { i8*, i32, %union.eBMOpSlotSubType_Union, i32, %union.anon }
%union.eBMOpSlotSubType_Union = type { i32 }
%union.anon = type { i8*, [8 x i8] }
%struct.MemArena = type opaque
%struct.BMFace = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMLoop*, i32, [3 x float], i16 }
%struct.BMLog = type opaque
%struct.PBVH = type opaque
%struct.ImagePool = type opaque
%struct.SculptStroke = type opaque
%struct.StrokeCache = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type { %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Path* }
%struct.Path = type { %struct.PathPoint*, i32, float }
%struct.PathPoint = type { [4 x float], [4 x float], float, float }
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Scene = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RenderSlot = type { [64 x i8] }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.rctf = type { float, float, float, float }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.bNodeTree = type opaque
%struct.Ipo = type opaque
%struct.Group = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type opaque
%struct.DMFlagMat = type { i16, i8 }
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.CDDerivedMesh = type { %struct.DerivedMesh, %struct.MVert*, %struct.MEdge*, %struct.MFace*, %struct.MLoop*, %struct.MPoly*, %struct.PBVH*, i8, %struct.MeshElemMap*, i32* }
%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.Key = type opaque
%struct.MSelect = type { i32, i32 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.BMEditMesh = type { %struct.BMesh*, %struct.BMEditMesh*, i32, [3 x %struct.BMLoop*]*, i32, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, [4 x i8]*, i32, [4 x i8]*, i32, i16, i16, %struct.Object*, i32 }
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.Curve = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.ListBase, %struct.EditNurb*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.Key*, %struct.Material**, [3 x float], [3 x float], [3 x float], i16, i16, i16, i16, float, float, i32, i16, i16, i32, float, float, float, i16, i16, i16, i16, i32, i32, [4 x i8], i16, i8, i8, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i8*, %struct.EditFont*, [64 x i8], %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.TextBox*, i32, i32, %struct.CharInfo*, %struct.CharInfo, float, float, float, i8, i8, [2 x i8] }
%struct.EditNurb = type { %struct.ListBase, %struct.GHash*, i32, [4 x i8] }
%struct.EditFont = type opaque
%struct.VFont = type opaque
%struct.TextBox = type { float, float, float, float }
%struct.CharInfo = type { i16, i16, i8, i8, i16 }
%struct.BMIter = type { %union.anon.4, void (i8*)*, i8* (i8*)*, i32, i8 }
%union.anon.4 = type { %struct.BMIter__face_of_vert }
%struct.BMIter__face_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.EdgeHash = type opaque
%struct.PolyKey = type { i32, i32, i32, i32 }
%struct.GSet = type opaque
%struct.EdgeSetIterator = type opaque
%struct.EdgeSet = type opaque
%struct.EdgeHashIterator = type { %struct.EdgeHash*, %struct.EdgeEntry*, i32 }
%struct.EdgeEntry = type opaque
%struct._eh_Entry = type { i8*, i32, i32, i8* }
%struct.GPUVertexAttribs = type { [32 x %struct.anon], i32 }
%struct.anon = type { i32, i32, i32, i32, [64 x i8] }
%struct.DMVertexAttribs = type { [8 x %struct.anon.0], [8 x %struct.anon.1], %struct.anon.2, %struct.anon.3, i32, i32, i32, i32 }
%struct.anon.0 = type { %struct.MTFace*, i32, i32, i32 }
%struct.anon.1 = type { %struct.MCol*, i32, i32 }
%struct.anon.2 = type { [4 x float]*, i32, i32 }
%struct.anon.3 = type { [3 x float]*, i32, i32, i32 }
%struct.GPUAttrib = type { i32, i32, i32 }
%struct.BMIter__elem_of_mesh = type { %struct.BLI_mempool_iter }
%struct.BLI_mempool_iter = type { %struct.BLI_mempool*, %struct.BLI_mempool_chunk*, i32 }
%struct.BLI_mempool_chunk = type opaque
%struct.BMIter__edge_of_vert = type { %struct.BMVert*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__loop_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__vert_of_edge = type { %struct.BMEdge* }
%struct.BMIter__face_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__vert_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__edge_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_loop = type { %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }

@.str = private unnamed_addr constant [12 x i8] c"CDDM_new dm\00", align 1
@__func__.CDDM_from_mesh = private unnamed_addr constant [15 x i8] c"CDDM_from_mesh\00", align 1
@CD_MASK_MESH = external dso_local constant i64, align 8
@.str.1 = private unnamed_addr constant [5 x i8] c"Orco\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.2 = private unnamed_addr constant [24 x i8] c"CDDM_from_template dest\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.3 = private unnamed_addr constant [10 x i8] c"face_nors\00", align 1
@__func__.CDDM_merge_verts = private unnamed_addr constant [17 x i8] c"CDDM_merge_verts\00", align 1
@__func__.CDDM_calc_edges_tessface = private unnamed_addr constant [25 x i8] c"CDDM_calc_edges_tessface\00", align 1
@__func__.CDDM_calc_edges = private unnamed_addr constant [16 x i8] c"CDDM_calc_edges\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.4 = private unnamed_addr constant [21 x i8] c"cdDM_getPBVH vertCos\00", align 1
@__glewMultiTexCoord2fv = external dso_local global void (i32, float*)*, align 8
@G = external dso_local global %struct.Global, align 8
@stipple_quarttone = external dso_local global [128 x i8], align 16
@__glewVertexAttrib3fvARB = external dso_local global void (i32, float*)*, align 8
@__glewVertexAttrib2fvARB = external dso_local global void (i32, float*)*, align 8
@__glewVertexAttrib4ubvARB = external dso_local global void (i32, i8*)*, align 8
@__glewVertexAttrib4fvARB = external dso_local global void (i32, float*)*, align 8
@CD_MASK_DERIVEDMESH = external dso_local constant i64, align 8
@.str.5 = private unnamed_addr constant [15 x i8] c"CDDM_copy cddm\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @CDDM_recalc_tessellation_ex(%struct.DerivedMesh* %dm, i8 zeroext %do_face_nor_cpy) #0 !dbg !1953 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %do_face_nor_cpy.addr = alloca i8, align 1
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !1957, metadata !DIExpression()), !dbg !1958
  store i8 %do_face_nor_cpy, i8* %do_face_nor_cpy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_face_nor_cpy.addr, metadata !1959, metadata !DIExpression()), !dbg !1960
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !1961, metadata !DIExpression()), !dbg !1962
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !1963
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !1964
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !1962
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !1965
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 2, !dbg !1966
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !1967
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 3, !dbg !1968
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !1969
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 4, !dbg !1970
  %5 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !1971
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %5, i32 0, i32 1, !dbg !1972
  %6 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !1972
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !1973
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 7, !dbg !1974
  %8 = load i32, i32* %numTessFaceData, align 8, !dbg !1974
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !1975
  %numLoopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 8, !dbg !1976
  %10 = load i32, i32* %numLoopData, align 4, !dbg !1976
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !1977
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %11, i32 0, i32 9, !dbg !1978
  %12 = load i32, i32* %numPolyData, align 8, !dbg !1978
  %13 = load i8, i8* %do_face_nor_cpy.addr, align 1, !dbg !1979
  %call = call i32 @BKE_mesh_recalc_tessellation(%struct.CustomData* %faceData, %struct.CustomData* %loopData, %struct.CustomData* %polyData, %struct.MVert* %6, i32 %8, i32 %10, i32 %12, i8 zeroext %13), !dbg !1980
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !1981
  %numTessFaceData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %14, i32 0, i32 7, !dbg !1982
  store i32 %call, i32* %numTessFaceData1, align 8, !dbg !1983
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !1984
  %faceData2 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 2, !dbg !1985
  %call3 = call i8* @CustomData_get_layer(%struct.CustomData* %faceData2, i32 4), !dbg !1986
  %16 = bitcast i8* %call3 to %struct.MFace*, !dbg !1986
  %17 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !1987
  %mface = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %17, i32 0, i32 3, !dbg !1988
  store %struct.MFace* %16, %struct.MFace** %mface, align 8, !dbg !1989
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !1990
  %faceData4 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %18, i32 0, i32 2, !dbg !1991
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !1992
  %polyData5 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %19, i32 0, i32 4, !dbg !1993
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !1994
  %loopData6 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %20, i32 0, i32 3, !dbg !1995
  call void @CustomData_bmesh_update_active_layers(%struct.CustomData* %faceData4, %struct.CustomData* %polyData5, %struct.CustomData* %loopData6), !dbg !1996
  ret void, !dbg !1997
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @BKE_mesh_recalc_tessellation(%struct.CustomData*, %struct.CustomData*, %struct.CustomData*, %struct.MVert*, i32, i32, i32, i8 zeroext) #2

declare dso_local i8* @CustomData_get_layer(%struct.CustomData*, i32) #2

declare dso_local void @CustomData_bmesh_update_active_layers(%struct.CustomData*, %struct.CustomData*, %struct.CustomData*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CDDM_recalc_tessellation(%struct.DerivedMesh* %dm) #0 !dbg !1998 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !1999, metadata !DIExpression()), !dbg !2000
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2001
  call void @CDDM_recalc_tessellation_ex(%struct.DerivedMesh* %0, i8 zeroext 1), !dbg !2002
  ret void, !dbg !2003
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @CDDM_new(i32 %numVerts, i32 %numEdges, i32 %numTessFaces, i32 %numLoops, i32 %numPolys) #0 !dbg !2004 {
entry:
  %numVerts.addr = alloca i32, align 4
  %numEdges.addr = alloca i32, align 4
  %numTessFaces.addr = alloca i32, align 4
  %numLoops.addr = alloca i32, align 4
  %numPolys.addr = alloca i32, align 4
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  store i32 %numVerts, i32* %numVerts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numVerts.addr, metadata !2007, metadata !DIExpression()), !dbg !2008
  store i32 %numEdges, i32* %numEdges.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numEdges.addr, metadata !2009, metadata !DIExpression()), !dbg !2010
  store i32 %numTessFaces, i32* %numTessFaces.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numTessFaces.addr, metadata !2011, metadata !DIExpression()), !dbg !2012
  store i32 %numLoops, i32* %numLoops.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numLoops.addr, metadata !2013, metadata !DIExpression()), !dbg !2014
  store i32 %numPolys, i32* %numPolys.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numPolys.addr, metadata !2015, metadata !DIExpression()), !dbg !2016
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !2017, metadata !DIExpression()), !dbg !2018
  %call = call %struct.CDDerivedMesh* @cdDM_create(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0)), !dbg !2019
  store %struct.CDDerivedMesh* %call, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2018
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !2020, metadata !DIExpression()), !dbg !2021
  %0 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2022
  %dm1 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %0, i32 0, i32 0, !dbg !2023
  store %struct.DerivedMesh* %dm1, %struct.DerivedMesh** %dm, align 8, !dbg !2021
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2024
  %2 = load i32, i32* %numVerts.addr, align 4, !dbg !2025
  %3 = load i32, i32* %numEdges.addr, align 4, !dbg !2026
  %4 = load i32, i32* %numTessFaces.addr, align 4, !dbg !2027
  %5 = load i32, i32* %numLoops.addr, align 4, !dbg !2028
  %6 = load i32, i32* %numPolys.addr, align 4, !dbg !2029
  call void @DM_init(%struct.DerivedMesh* %1, i32 0, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6), !dbg !2030
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2031
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 0, !dbg !2032
  %8 = load i32, i32* %numVerts.addr, align 4, !dbg !2033
  %call2 = call i8* @CustomData_add_layer(%struct.CustomData* %vertData, i32 7, i32 1, i8* null, i32 %8), !dbg !2034
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2035
  %edgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 1, !dbg !2036
  %10 = load i32, i32* %numEdges.addr, align 4, !dbg !2037
  %call3 = call i8* @CustomData_add_layer(%struct.CustomData* %edgeData, i32 7, i32 1, i8* null, i32 %10), !dbg !2038
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2039
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %11, i32 0, i32 2, !dbg !2040
  %12 = load i32, i32* %numTessFaces.addr, align 4, !dbg !2041
  %call4 = call i8* @CustomData_add_layer(%struct.CustomData* %faceData, i32 7, i32 1, i8* null, i32 %12), !dbg !2042
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2043
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 4, !dbg !2044
  %14 = load i32, i32* %numPolys.addr, align 4, !dbg !2045
  %call5 = call i8* @CustomData_add_layer(%struct.CustomData* %polyData, i32 7, i32 1, i8* null, i32 %14), !dbg !2046
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2047
  %vertData6 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 0, !dbg !2048
  %16 = load i32, i32* %numVerts.addr, align 4, !dbg !2049
  %call7 = call i8* @CustomData_add_layer(%struct.CustomData* %vertData6, i32 0, i32 1, i8* null, i32 %16), !dbg !2050
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2051
  %edgeData8 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %17, i32 0, i32 1, !dbg !2052
  %18 = load i32, i32* %numEdges.addr, align 4, !dbg !2053
  %call9 = call i8* @CustomData_add_layer(%struct.CustomData* %edgeData8, i32 3, i32 1, i8* null, i32 %18), !dbg !2054
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2055
  %faceData10 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %19, i32 0, i32 2, !dbg !2056
  %20 = load i32, i32* %numTessFaces.addr, align 4, !dbg !2057
  %call11 = call i8* @CustomData_add_layer(%struct.CustomData* %faceData10, i32 4, i32 1, i8* null, i32 %20), !dbg !2058
  %21 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2059
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %21, i32 0, i32 3, !dbg !2060
  %22 = load i32, i32* %numLoops.addr, align 4, !dbg !2061
  %call12 = call i8* @CustomData_add_layer(%struct.CustomData* %loopData, i32 26, i32 1, i8* null, i32 %22), !dbg !2062
  %23 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2063
  %polyData13 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %23, i32 0, i32 4, !dbg !2064
  %24 = load i32, i32* %numPolys.addr, align 4, !dbg !2065
  %call14 = call i8* @CustomData_add_layer(%struct.CustomData* %polyData13, i32 25, i32 1, i8* null, i32 %24), !dbg !2066
  %25 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2067
  %vertData15 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %25, i32 0, i32 0, !dbg !2068
  %call16 = call i8* @CustomData_get_layer(%struct.CustomData* %vertData15, i32 0), !dbg !2069
  %26 = bitcast i8* %call16 to %struct.MVert*, !dbg !2069
  %27 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2070
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %27, i32 0, i32 1, !dbg !2071
  store %struct.MVert* %26, %struct.MVert** %mvert, align 8, !dbg !2072
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2073
  %edgeData17 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %28, i32 0, i32 1, !dbg !2074
  %call18 = call i8* @CustomData_get_layer(%struct.CustomData* %edgeData17, i32 3), !dbg !2075
  %29 = bitcast i8* %call18 to %struct.MEdge*, !dbg !2075
  %30 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2076
  %medge = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %30, i32 0, i32 2, !dbg !2077
  store %struct.MEdge* %29, %struct.MEdge** %medge, align 8, !dbg !2078
  %31 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2079
  %faceData19 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %31, i32 0, i32 2, !dbg !2080
  %call20 = call i8* @CustomData_get_layer(%struct.CustomData* %faceData19, i32 4), !dbg !2081
  %32 = bitcast i8* %call20 to %struct.MFace*, !dbg !2081
  %33 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2082
  %mface = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %33, i32 0, i32 3, !dbg !2083
  store %struct.MFace* %32, %struct.MFace** %mface, align 8, !dbg !2084
  %34 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2085
  %loopData21 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %34, i32 0, i32 3, !dbg !2086
  %call22 = call i8* @CustomData_get_layer(%struct.CustomData* %loopData21, i32 26), !dbg !2087
  %35 = bitcast i8* %call22 to %struct.MLoop*, !dbg !2087
  %36 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2088
  %mloop = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %36, i32 0, i32 4, !dbg !2089
  store %struct.MLoop* %35, %struct.MLoop** %mloop, align 8, !dbg !2090
  %37 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2091
  %polyData23 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %37, i32 0, i32 4, !dbg !2092
  %call24 = call i8* @CustomData_get_layer(%struct.CustomData* %polyData23, i32 25), !dbg !2093
  %38 = bitcast i8* %call24 to %struct.MPoly*, !dbg !2093
  %39 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2094
  %mpoly = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %39, i32 0, i32 5, !dbg !2095
  store %struct.MPoly* %38, %struct.MPoly** %mpoly, align 8, !dbg !2096
  %40 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2097
  ret %struct.DerivedMesh* %40, !dbg !2098
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CDDerivedMesh* @cdDM_create(i8* %desc) #0 !dbg !2099 {
entry:
  %desc.addr = alloca i8*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  store i8* %desc, i8** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %desc.addr, metadata !2102, metadata !DIExpression()), !dbg !2103
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !2104, metadata !DIExpression()), !dbg !2105
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !2106, metadata !DIExpression()), !dbg !2107
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2108
  %1 = load i8*, i8** %desc.addr, align 8, !dbg !2109
  %call = call i8* %0(i64 1760, i8* %1), !dbg !2108
  %2 = bitcast i8* %call to %struct.CDDerivedMesh*, !dbg !2108
  store %struct.CDDerivedMesh* %2, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2110
  %3 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2111
  %dm1 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %3, i32 0, i32 0, !dbg !2112
  store %struct.DerivedMesh* %dm1, %struct.DerivedMesh** %dm, align 8, !dbg !2113
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2114
  %getMinMax = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 75, !dbg !2115
  store void (%struct.DerivedMesh*, float*, float*)* @cdDM_getMinMax, void (%struct.DerivedMesh*, float*, float*)** %getMinMax, align 8, !dbg !2116
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2117
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 23, !dbg !2118
  store i32 (%struct.DerivedMesh*)* @cdDM_getNumVerts, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !2119
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2120
  %getNumEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 24, !dbg !2121
  store i32 (%struct.DerivedMesh*)* @cdDM_getNumEdges, i32 (%struct.DerivedMesh*)** %getNumEdges, align 8, !dbg !2122
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2123
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 25, !dbg !2124
  store i32 (%struct.DerivedMesh*)* @cdDM_getNumTessFaces, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !2125
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2126
  %getNumLoops = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 26, !dbg !2127
  store i32 (%struct.DerivedMesh*)* @cdDM_getNumLoops, i32 (%struct.DerivedMesh*)** %getNumLoops, align 8, !dbg !2128
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2129
  %getNumPolys = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 27, !dbg !2130
  store i32 (%struct.DerivedMesh*)* @cdDM_getNumPolys, i32 (%struct.DerivedMesh*)** %getNumPolys, align 8, !dbg !2131
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2132
  %getVert = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 28, !dbg !2133
  store void (%struct.DerivedMesh*, i32, %struct.MVert*)* @cdDM_getVert, void (%struct.DerivedMesh*, i32, %struct.MVert*)** %getVert, align 8, !dbg !2134
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2135
  %getEdge = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %11, i32 0, i32 29, !dbg !2136
  store void (%struct.DerivedMesh*, i32, %struct.MEdge*)* @cdDM_getEdge, void (%struct.DerivedMesh*, i32, %struct.MEdge*)** %getEdge, align 8, !dbg !2137
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2138
  %getTessFace = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 30, !dbg !2139
  store void (%struct.DerivedMesh*, i32, %struct.MFace*)* @cdDM_getTessFace, void (%struct.DerivedMesh*, i32, %struct.MFace*)** %getTessFace, align 8, !dbg !2140
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2141
  %copyVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 36, !dbg !2142
  store void (%struct.DerivedMesh*, %struct.MVert*)* @cdDM_copyVertArray, void (%struct.DerivedMesh*, %struct.MVert*)** %copyVertArray, align 8, !dbg !2143
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2144
  %copyEdgeArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %14, i32 0, i32 37, !dbg !2145
  store void (%struct.DerivedMesh*, %struct.MEdge*)* @cdDM_copyEdgeArray, void (%struct.DerivedMesh*, %struct.MEdge*)** %copyEdgeArray, align 8, !dbg !2146
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2147
  %copyTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 38, !dbg !2148
  store void (%struct.DerivedMesh*, %struct.MFace*)* @cdDM_copyTessFaceArray, void (%struct.DerivedMesh*, %struct.MFace*)** %copyTessFaceArray, align 8, !dbg !2149
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2150
  %copyLoopArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %16, i32 0, i32 39, !dbg !2151
  store void (%struct.DerivedMesh*, %struct.MLoop*)* @cdDM_copyLoopArray, void (%struct.DerivedMesh*, %struct.MLoop*)** %copyLoopArray, align 8, !dbg !2152
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2153
  %copyPolyArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %17, i32 0, i32 40, !dbg !2154
  store void (%struct.DerivedMesh*, %struct.MPoly*)* @cdDM_copyPolyArray, void (%struct.DerivedMesh*, %struct.MPoly*)** %copyPolyArray, align 8, !dbg !2155
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2156
  %getVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %18, i32 0, i32 46, !dbg !2157
  store i8* (%struct.DerivedMesh*, i32, i32)* @DM_get_vert_data, i8* (%struct.DerivedMesh*, i32, i32)** %getVertData, align 8, !dbg !2158
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2159
  %getEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %19, i32 0, i32 47, !dbg !2160
  store i8* (%struct.DerivedMesh*, i32, i32)* @DM_get_edge_data, i8* (%struct.DerivedMesh*, i32, i32)** %getEdgeData, align 8, !dbg !2161
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2162
  %getTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %20, i32 0, i32 48, !dbg !2163
  store i8* (%struct.DerivedMesh*, i32, i32)* @DM_get_tessface_data, i8* (%struct.DerivedMesh*, i32, i32)** %getTessFaceData, align 8, !dbg !2164
  %21 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2165
  %getVertDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %21, i32 0, i32 50, !dbg !2166
  store i8* (%struct.DerivedMesh*, i32)* @DM_get_vert_data_layer, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray, align 8, !dbg !2167
  %22 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2168
  %getEdgeDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %22, i32 0, i32 51, !dbg !2169
  store i8* (%struct.DerivedMesh*, i32)* @DM_get_edge_data_layer, i8* (%struct.DerivedMesh*, i32)** %getEdgeDataArray, align 8, !dbg !2170
  %23 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2171
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %23, i32 0, i32 52, !dbg !2172
  store i8* (%struct.DerivedMesh*, i32)* @DM_get_tessface_data_layer, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !2173
  %24 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2174
  %calcNormals = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %24, i32 0, i32 20, !dbg !2175
  store void (%struct.DerivedMesh*)* @CDDM_calc_normals, void (%struct.DerivedMesh*)** %calcNormals, align 8, !dbg !2176
  %25 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2177
  %calcLoopNormals = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %25, i32 0, i32 21, !dbg !2178
  store void (%struct.DerivedMesh*, float)* @CDDM_calc_loop_normals, void (%struct.DerivedMesh*, float)** %calcLoopNormals, align 8, !dbg !2179
  %26 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2180
  %recalcTessellation = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %26, i32 0, i32 22, !dbg !2181
  store void (%struct.DerivedMesh*)* @CDDM_recalc_tessellation, void (%struct.DerivedMesh*)** %recalcTessellation, align 8, !dbg !2182
  %27 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2183
  %getVertCos = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %27, i32 0, i32 77, !dbg !2184
  store void (%struct.DerivedMesh*, [3 x float]*)* @cdDM_getVertCos, void (%struct.DerivedMesh*, [3 x float]*)** %getVertCos, align 8, !dbg !2185
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2186
  %getVertCo = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %28, i32 0, i32 76, !dbg !2187
  store void (%struct.DerivedMesh*, i32, float*)* @cdDM_getVertCo, void (%struct.DerivedMesh*, i32, float*)** %getVertCo, align 8, !dbg !2188
  %29 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2189
  %getVertNo = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %29, i32 0, i32 78, !dbg !2190
  store void (%struct.DerivedMesh*, i32, float*)* @cdDM_getVertNo, void (%struct.DerivedMesh*, i32, float*)** %getVertNo, align 8, !dbg !2191
  %30 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2192
  %getPBVH = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %30, i32 0, i32 81, !dbg !2193
  store %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)* @cdDM_getPBVH, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)** %getPBVH, align 8, !dbg !2194
  %31 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2195
  %getPolyMap = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %31, i32 0, i32 80, !dbg !2196
  store %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)* @cdDM_getPolyMap, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)** %getPolyMap, align 8, !dbg !2197
  %32 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2198
  %drawVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %32, i32 0, i32 82, !dbg !2199
  store void (%struct.DerivedMesh*)* @cdDM_drawVerts, void (%struct.DerivedMesh*)** %drawVerts, align 8, !dbg !2200
  %33 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2201
  %drawUVEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %33, i32 0, i32 83, !dbg !2202
  store void (%struct.DerivedMesh*)* @cdDM_drawUVEdges, void (%struct.DerivedMesh*)** %drawUVEdges, align 8, !dbg !2203
  %34 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2204
  %drawEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %34, i32 0, i32 84, !dbg !2205
  store void (%struct.DerivedMesh*, i8, i8)* @cdDM_drawEdges, void (%struct.DerivedMesh*, i8, i8)** %drawEdges, align 8, !dbg !2206
  %35 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2207
  %drawLooseEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %35, i32 0, i32 85, !dbg !2208
  store void (%struct.DerivedMesh*)* @cdDM_drawLooseEdges, void (%struct.DerivedMesh*)** %drawLooseEdges, align 8, !dbg !2209
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2210
  %drawMappedEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %36, i32 0, i32 92, !dbg !2211
  store void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)* @cdDM_drawMappedEdges, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)** %drawMappedEdges, align 8, !dbg !2212
  %37 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2213
  %drawFacesSolid = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %37, i32 0, i32 86, !dbg !2214
  store void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)* @cdDM_drawFacesSolid, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)** %drawFacesSolid, align 8, !dbg !2215
  %38 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2216
  %drawFacesTex = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %38, i32 0, i32 87, !dbg !2217
  store void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)* @cdDM_drawFacesTex, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)** %drawFacesTex, align 8, !dbg !2218
  %39 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2219
  %drawFacesGLSL = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %39, i32 0, i32 88, !dbg !2220
  store void (%struct.DerivedMesh*, i32 (i32, i8*)*)* @cdDM_drawFacesGLSL, void (%struct.DerivedMesh*, i32 (i32, i8*)*)** %drawFacesGLSL, align 8, !dbg !2221
  %40 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2222
  %drawMappedFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %40, i32 0, i32 89, !dbg !2223
  store void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)* @cdDM_drawMappedFaces, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)** %drawMappedFaces, align 8, !dbg !2224
  %41 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2225
  %drawMappedFacesTex = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %41, i32 0, i32 90, !dbg !2226
  store void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)* @cdDM_drawMappedFacesTex, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)** %drawMappedFacesTex, align 8, !dbg !2227
  %42 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2228
  %drawMappedFacesGLSL = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %42, i32 0, i32 91, !dbg !2229
  store void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)* @cdDM_drawMappedFacesGLSL, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)** %drawMappedFacesGLSL, align 8, !dbg !2230
  %43 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2231
  %drawMappedFacesMat = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %43, i32 0, i32 94, !dbg !2232
  store void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)* @cdDM_drawMappedFacesMat, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)** %drawMappedFacesMat, align 8, !dbg !2233
  %44 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2234
  %foreachMappedVert = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %44, i32 0, i32 71, !dbg !2235
  store void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)* @cdDM_foreachMappedVert, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)** %foreachMappedVert, align 8, !dbg !2236
  %45 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2237
  %foreachMappedEdge = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %45, i32 0, i32 72, !dbg !2238
  store void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)* @cdDM_foreachMappedEdge, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)** %foreachMappedEdge, align 8, !dbg !2239
  %46 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2240
  %foreachMappedLoop = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %46, i32 0, i32 73, !dbg !2241
  store void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)* @cdDM_foreachMappedLoop, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)** %foreachMappedLoop, align 8, !dbg !2242
  %47 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2243
  %foreachMappedFaceCenter = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %47, i32 0, i32 74, !dbg !2244
  store void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)* @cdDM_foreachMappedFaceCenter, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)** %foreachMappedFaceCenter, align 8, !dbg !2245
  %48 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2246
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %48, i32 0, i32 95, !dbg !2247
  store void (%struct.DerivedMesh*)* @cdDM_release, void (%struct.DerivedMesh*)** %release, align 8, !dbg !2248
  %49 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2249
  ret %struct.CDDerivedMesh* %49, !dbg !2250
}

declare dso_local void @DM_init(%struct.DerivedMesh*, i32, i32, i32, i32, i32, i32) #2

declare dso_local i8* @CustomData_add_layer(%struct.CustomData*, i32, i32, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @CDDM_from_mesh(%struct.Mesh* %mesh) #0 !dbg !2251 {
entry:
  %mesh.addr = alloca %struct.Mesh*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %mask = alloca i64, align 8
  %alloctype = alloca i32, align 4
  store %struct.Mesh* %mesh, %struct.Mesh** %mesh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %mesh.addr, metadata !2409, metadata !DIExpression()), !dbg !2410
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !2411, metadata !DIExpression()), !dbg !2412
  %call = call %struct.CDDerivedMesh* @cdDM_create(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.CDDM_from_mesh, i64 0, i64 0)), !dbg !2413
  store %struct.CDDerivedMesh* %call, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2412
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !2414, metadata !DIExpression()), !dbg !2415
  %0 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2416
  %dm1 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %0, i32 0, i32 0, !dbg !2417
  store %struct.DerivedMesh* %dm1, %struct.DerivedMesh** %dm, align 8, !dbg !2415
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !2418, metadata !DIExpression()), !dbg !2419
  %1 = load i64, i64* @CD_MASK_MESH, align 8, !dbg !2420
  %and = and i64 %1, -524289, !dbg !2421
  store i64 %and, i64* %mask, align 8, !dbg !2419
  call void @llvm.dbg.declare(metadata i32* %alloctype, metadata !2422, metadata !DIExpression()), !dbg !2423
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2424
  %3 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2425
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 26, !dbg !2426
  %4 = load i32, i32* %totvert, align 8, !dbg !2426
  %5 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2427
  %totedge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 27, !dbg !2428
  %6 = load i32, i32* %totedge, align 4, !dbg !2428
  %7 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2429
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 28, !dbg !2430
  %8 = load i32, i32* %totface, align 8, !dbg !2430
  %9 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2431
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 31, !dbg !2432
  %10 = load i32, i32* %totloop, align 4, !dbg !2432
  %11 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2433
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 30, !dbg !2434
  %12 = load i32, i32* %totpoly, align 8, !dbg !2434
  call void @DM_init(%struct.DerivedMesh* %2, i32 0, i32 %4, i32 %6, i32 %8, i32 %10, i32 %12), !dbg !2435
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2436
  %deformedOnly = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 11, !dbg !2437
  store i32 1, i32* %deformedOnly, align 8, !dbg !2438
  %14 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2439
  %cd_flag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 41, !dbg !2440
  %15 = load i8, i8* %cd_flag, align 8, !dbg !2440
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2441
  %cd_flag2 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %16, i32 0, i32 19, !dbg !2442
  store i8 %15, i8* %cd_flag2, align 8, !dbg !2443
  store i32 3, i32* %alloctype, align 4, !dbg !2444
  %17 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2445
  %vdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 21, !dbg !2446
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2447
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %18, i32 0, i32 0, !dbg !2448
  %19 = load i64, i64* %mask, align 8, !dbg !2449
  %20 = load i32, i32* %alloctype, align 4, !dbg !2450
  %21 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2451
  %totvert3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %21, i32 0, i32 26, !dbg !2452
  %22 = load i32, i32* %totvert3, align 8, !dbg !2452
  %call4 = call zeroext i8 @CustomData_merge(%struct.CustomData* %vdata, %struct.CustomData* %vertData, i64 %19, i32 %20, i32 %22), !dbg !2453
  %23 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2454
  %edata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %23, i32 0, i32 22, !dbg !2455
  %24 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2456
  %edgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %24, i32 0, i32 1, !dbg !2457
  %25 = load i64, i64* %mask, align 8, !dbg !2458
  %26 = load i32, i32* %alloctype, align 4, !dbg !2459
  %27 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2460
  %totedge5 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %27, i32 0, i32 27, !dbg !2461
  %28 = load i32, i32* %totedge5, align 4, !dbg !2461
  %call6 = call zeroext i8 @CustomData_merge(%struct.CustomData* %edata, %struct.CustomData* %edgeData, i64 %25, i32 %26, i32 %28), !dbg !2462
  %29 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2463
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %29, i32 0, i32 23, !dbg !2464
  %30 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2465
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %30, i32 0, i32 2, !dbg !2466
  %31 = load i64, i64* %mask, align 8, !dbg !2467
  %or = or i64 %31, 128, !dbg !2468
  %32 = load i32, i32* %alloctype, align 4, !dbg !2469
  %33 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2470
  %totface7 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %33, i32 0, i32 28, !dbg !2471
  %34 = load i32, i32* %totface7, align 8, !dbg !2471
  %call8 = call zeroext i8 @CustomData_merge(%struct.CustomData* %fdata, %struct.CustomData* %faceData, i64 %or, i32 %32, i32 %34), !dbg !2472
  %35 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2473
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %35, i32 0, i32 25, !dbg !2474
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2475
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %36, i32 0, i32 3, !dbg !2476
  %37 = load i64, i64* %mask, align 8, !dbg !2477
  %38 = load i32, i32* %alloctype, align 4, !dbg !2478
  %39 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2479
  %totloop9 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %39, i32 0, i32 31, !dbg !2480
  %40 = load i32, i32* %totloop9, align 4, !dbg !2480
  %call10 = call zeroext i8 @CustomData_merge(%struct.CustomData* %ldata, %struct.CustomData* %loopData, i64 %37, i32 %38, i32 %40), !dbg !2481
  %41 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2482
  %pdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %41, i32 0, i32 24, !dbg !2483
  %42 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2484
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %42, i32 0, i32 4, !dbg !2485
  %43 = load i64, i64* %mask, align 8, !dbg !2486
  %44 = load i32, i32* %alloctype, align 4, !dbg !2487
  %45 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2488
  %totpoly11 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %45, i32 0, i32 30, !dbg !2489
  %46 = load i32, i32* %totpoly11, align 8, !dbg !2489
  %call12 = call zeroext i8 @CustomData_merge(%struct.CustomData* %pdata, %struct.CustomData* %polyData, i64 %43, i32 %44, i32 %46), !dbg !2490
  %47 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2491
  %vertData13 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %47, i32 0, i32 0, !dbg !2492
  %call14 = call i8* @CustomData_get_layer(%struct.CustomData* %vertData13, i32 0), !dbg !2493
  %48 = bitcast i8* %call14 to %struct.MVert*, !dbg !2493
  %49 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2494
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %49, i32 0, i32 1, !dbg !2495
  store %struct.MVert* %48, %struct.MVert** %mvert, align 8, !dbg !2496
  %50 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2497
  %edgeData15 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %50, i32 0, i32 1, !dbg !2498
  %call16 = call i8* @CustomData_get_layer(%struct.CustomData* %edgeData15, i32 3), !dbg !2499
  %51 = bitcast i8* %call16 to %struct.MEdge*, !dbg !2499
  %52 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2500
  %medge = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %52, i32 0, i32 2, !dbg !2501
  store %struct.MEdge* %51, %struct.MEdge** %medge, align 8, !dbg !2502
  %53 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2503
  %loopData17 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %53, i32 0, i32 3, !dbg !2504
  %call18 = call i8* @CustomData_get_layer(%struct.CustomData* %loopData17, i32 26), !dbg !2505
  %54 = bitcast i8* %call18 to %struct.MLoop*, !dbg !2505
  %55 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2506
  %mloop = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %55, i32 0, i32 4, !dbg !2507
  store %struct.MLoop* %54, %struct.MLoop** %mloop, align 8, !dbg !2508
  %56 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2509
  %polyData19 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %56, i32 0, i32 4, !dbg !2510
  %call20 = call i8* @CustomData_get_layer(%struct.CustomData* %polyData19, i32 25), !dbg !2511
  %57 = bitcast i8* %call20 to %struct.MPoly*, !dbg !2511
  %58 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2512
  %mpoly = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %58, i32 0, i32 5, !dbg !2513
  store %struct.MPoly* %57, %struct.MPoly** %mpoly, align 8, !dbg !2514
  %59 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2515
  %faceData21 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %59, i32 0, i32 2, !dbg !2516
  %call22 = call i8* @CustomData_get_layer(%struct.CustomData* %faceData21, i32 4), !dbg !2517
  %60 = bitcast i8* %call22 to %struct.MFace*, !dbg !2517
  %61 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2518
  %mface = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %61, i32 0, i32 3, !dbg !2519
  store %struct.MFace* %60, %struct.MFace** %mface, align 8, !dbg !2520
  %62 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2521
  ret %struct.DerivedMesh* %62, !dbg !2522
}

declare dso_local zeroext i8 @CustomData_merge(%struct.CustomData*, %struct.CustomData*, i64, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @CDDM_from_curve(%struct.Object* %ob) #0 !dbg !2523 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %disp = alloca %struct.ListBase, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2528, metadata !DIExpression()), !dbg !2529
  call void @llvm.dbg.declare(metadata %struct.ListBase* %disp, metadata !2530, metadata !DIExpression()), !dbg !2531
  %0 = bitcast %struct.ListBase* %disp to i8*, !dbg !2531
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !2531
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2532
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 118, !dbg !2534
  %2 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !2534
  %tobool = icmp ne %struct.CurveCache* %2, null, !dbg !2532
  br i1 %tobool, label %if.then, label %if.end, !dbg !2535

if.then:                                          ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2536
  %curve_cache1 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 118, !dbg !2538
  %4 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache1, align 8, !dbg !2538
  %disp2 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %4, i32 0, i32 0, !dbg !2539
  %5 = bitcast %struct.ListBase* %disp to i8*, !dbg !2539
  %6 = bitcast %struct.ListBase* %disp2 to i8*, !dbg !2539
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false), !dbg !2539
  br label %if.end, !dbg !2540

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2541
  %call = call %struct.DerivedMesh* @CDDM_from_curve_displist(%struct.Object* %7, %struct.ListBase* %disp), !dbg !2542
  ret %struct.DerivedMesh* %call, !dbg !2543
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @CDDM_from_curve_displist(%struct.Object* %ob, %struct.ListBase* %dispbase) #0 !dbg !2544 {
entry:
  %retval = alloca %struct.DerivedMesh*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dispbase.addr = alloca %struct.ListBase*, align 8
  %cu = alloca %struct.Curve*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %allvert = alloca %struct.MVert*, align 8
  %alledge = alloca %struct.MEdge*, align 8
  %allloop = alloca %struct.MLoop*, align 8
  %allpoly = alloca %struct.MPoly*, align 8
  %alluv = alloca %struct.MLoopUV*, align 8
  %totvert = alloca i32, align 4
  %totedge = alloca i32, align 4
  %totloop = alloca i32, align 4
  %totpoly = alloca i32, align 4
  %use_orco_uv = alloca i8, align 1
  %uvname = alloca i8*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2547, metadata !DIExpression()), !dbg !2548
  store %struct.ListBase* %dispbase, %struct.ListBase** %dispbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %dispbase.addr, metadata !2549, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !2551, metadata !DIExpression()), !dbg !2552
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2553
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !2554
  %1 = load i8*, i8** %data, align 8, !dbg !2554
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !2555
  store %struct.Curve* %2, %struct.Curve** %cu, align 8, !dbg !2552
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !2556, metadata !DIExpression()), !dbg !2557
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !2558, metadata !DIExpression()), !dbg !2559
  call void @llvm.dbg.declare(metadata %struct.MVert** %allvert, metadata !2560, metadata !DIExpression()), !dbg !2561
  call void @llvm.dbg.declare(metadata %struct.MEdge** %alledge, metadata !2562, metadata !DIExpression()), !dbg !2563
  call void @llvm.dbg.declare(metadata %struct.MLoop** %allloop, metadata !2564, metadata !DIExpression()), !dbg !2565
  call void @llvm.dbg.declare(metadata %struct.MPoly** %allpoly, metadata !2566, metadata !DIExpression()), !dbg !2567
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %alluv, metadata !2568, metadata !DIExpression()), !dbg !2571
  store %struct.MLoopUV* null, %struct.MLoopUV** %alluv, align 8, !dbg !2571
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !2572, metadata !DIExpression()), !dbg !2573
  call void @llvm.dbg.declare(metadata i32* %totedge, metadata !2574, metadata !DIExpression()), !dbg !2575
  call void @llvm.dbg.declare(metadata i32* %totloop, metadata !2576, metadata !DIExpression()), !dbg !2577
  call void @llvm.dbg.declare(metadata i32* %totpoly, metadata !2578, metadata !DIExpression()), !dbg !2579
  call void @llvm.dbg.declare(metadata i8* %use_orco_uv, metadata !2580, metadata !DIExpression()), !dbg !2581
  %3 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2582
  %flag = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 23, !dbg !2583
  %4 = load i32, i32* %flag, align 4, !dbg !2583
  %and = and i32 %4, 32, !dbg !2584
  %cmp = icmp ne i32 %and, 0, !dbg !2585
  %conv = zext i1 %cmp to i32, !dbg !2585
  %conv1 = trunc i32 %conv to i8, !dbg !2586
  store i8 %conv1, i8* %use_orco_uv, align 1, !dbg !2581
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2587
  %6 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !2589
  %7 = load i8, i8* %use_orco_uv, align 1, !dbg !2590
  %conv2 = zext i8 %7 to i32, !dbg !2591
  %tobool = icmp ne i32 %conv2, 0, !dbg !2591
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2591

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !2591

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !2591

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.MLoopUV** [ %alluv, %cond.true ], [ null, %cond.false ], !dbg !2591
  %call = call i32 @BKE_mesh_nurbs_displist_to_mdata(%struct.Object* %5, %struct.ListBase* %6, %struct.MVert** %allvert, i32* %totvert, %struct.MEdge** %alledge, i32* %totedge, %struct.MLoop** %allloop, %struct.MPoly** %allpoly, %struct.MLoopUV** %cond, i32* %totloop, i32* %totpoly), !dbg !2592
  %cmp3 = icmp ne i32 %call, 0, !dbg !2593
  br i1 %cmp3, label %if.then, label %if.end, !dbg !2594

if.then:                                          ; preds = %cond.end
  %call5 = call %struct.DerivedMesh* @CDDM_new(i32 0, i32 0, i32 0, i32 0, i32 0), !dbg !2595
  store %struct.DerivedMesh* %call5, %struct.DerivedMesh** %retval, align 8, !dbg !2597
  br label %return, !dbg !2597

if.end:                                           ; preds = %cond.end
  %8 = load i32, i32* %totvert, align 4, !dbg !2598
  %9 = load i32, i32* %totedge, align 4, !dbg !2599
  %10 = load i32, i32* %totloop, align 4, !dbg !2600
  %11 = load i32, i32* %totpoly, align 4, !dbg !2601
  %call6 = call %struct.DerivedMesh* @CDDM_new(i32 %8, i32 %9, i32 0, i32 %10, i32 %11), !dbg !2602
  store %struct.DerivedMesh* %call6, %struct.DerivedMesh** %dm, align 8, !dbg !2603
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2604
  %deformedOnly = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 11, !dbg !2605
  store i32 1, i32* %deformedOnly, align 8, !dbg !2606
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2607
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 16, !dbg !2608
  %14 = load i32, i32* %dirty, align 8, !dbg !2609
  %or = or i32 %14, 4, !dbg !2609
  store i32 %or, i32* %dirty, align 8, !dbg !2609
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2610
  %16 = bitcast %struct.DerivedMesh* %15 to %struct.CDDerivedMesh*, !dbg !2611
  store %struct.CDDerivedMesh* %16, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2612
  %17 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2613
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %17, i32 0, i32 1, !dbg !2614
  %18 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2614
  %19 = bitcast %struct.MVert* %18 to i8*, !dbg !2615
  %20 = load %struct.MVert*, %struct.MVert** %allvert, align 8, !dbg !2616
  %21 = bitcast %struct.MVert* %20 to i8*, !dbg !2615
  %22 = load i32, i32* %totvert, align 4, !dbg !2617
  %conv7 = sext i32 %22 to i64, !dbg !2617
  %mul = mul i64 %conv7, 20, !dbg !2618
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %21, i64 %mul, i1 false), !dbg !2615
  %23 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2619
  %medge = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %23, i32 0, i32 2, !dbg !2620
  %24 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !2620
  %25 = bitcast %struct.MEdge* %24 to i8*, !dbg !2621
  %26 = load %struct.MEdge*, %struct.MEdge** %alledge, align 8, !dbg !2622
  %27 = bitcast %struct.MEdge* %26 to i8*, !dbg !2621
  %28 = load i32, i32* %totedge, align 4, !dbg !2623
  %conv8 = sext i32 %28 to i64, !dbg !2623
  %mul9 = mul i64 %conv8, 12, !dbg !2624
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %27, i64 %mul9, i1 false), !dbg !2621
  %29 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2625
  %mloop = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %29, i32 0, i32 4, !dbg !2626
  %30 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !2626
  %31 = bitcast %struct.MLoop* %30 to i8*, !dbg !2627
  %32 = load %struct.MLoop*, %struct.MLoop** %allloop, align 8, !dbg !2628
  %33 = bitcast %struct.MLoop* %32 to i8*, !dbg !2627
  %34 = load i32, i32* %totloop, align 4, !dbg !2629
  %conv10 = sext i32 %34 to i64, !dbg !2629
  %mul11 = mul i64 %conv10, 8, !dbg !2630
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %33, i64 %mul11, i1 false), !dbg !2627
  %35 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2631
  %mpoly = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %35, i32 0, i32 5, !dbg !2632
  %36 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !2632
  %37 = bitcast %struct.MPoly* %36 to i8*, !dbg !2633
  %38 = load %struct.MPoly*, %struct.MPoly** %allpoly, align 8, !dbg !2634
  %39 = bitcast %struct.MPoly* %38 to i8*, !dbg !2633
  %40 = load i32, i32* %totpoly, align 4, !dbg !2635
  %conv12 = sext i32 %40 to i64, !dbg !2635
  %mul13 = mul i64 %conv12, 12, !dbg !2636
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* align 4 %39, i64 %mul13, i1 false), !dbg !2633
  %41 = load %struct.MLoopUV*, %struct.MLoopUV** %alluv, align 8, !dbg !2637
  %tobool14 = icmp ne %struct.MLoopUV* %41, null, !dbg !2637
  br i1 %tobool14, label %if.then15, label %if.end20, !dbg !2639

if.then15:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %uvname, metadata !2640, metadata !DIExpression()), !dbg !2642
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8** %uvname, align 8, !dbg !2642
  %42 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2643
  %dm16 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %42, i32 0, i32 0, !dbg !2644
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm16, i32 0, i32 4, !dbg !2645
  %43 = load i32, i32* %totpoly, align 4, !dbg !2646
  %44 = load i8*, i8** %uvname, align 8, !dbg !2647
  %call17 = call i8* @CustomData_add_layer_named(%struct.CustomData* %polyData, i32 15, i32 2, i8* null, i32 %43, i8* %44), !dbg !2648
  %45 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2649
  %dm18 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %45, i32 0, i32 0, !dbg !2650
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm18, i32 0, i32 3, !dbg !2651
  %46 = load %struct.MLoopUV*, %struct.MLoopUV** %alluv, align 8, !dbg !2652
  %47 = bitcast %struct.MLoopUV* %46 to i8*, !dbg !2652
  %48 = load i32, i32* %totloop, align 4, !dbg !2653
  %49 = load i8*, i8** %uvname, align 8, !dbg !2654
  %call19 = call i8* @CustomData_add_layer_named(%struct.CustomData* %loopData, i32 16, i32 0, i8* %47, i32 %48, i8* %49), !dbg !2655
  br label %if.end20, !dbg !2656

if.end20:                                         ; preds = %if.then15, %if.end
  %50 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2657
  %51 = load %struct.MVert*, %struct.MVert** %allvert, align 8, !dbg !2658
  %52 = bitcast %struct.MVert* %51 to i8*, !dbg !2658
  call void %50(i8* %52), !dbg !2657
  %53 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2659
  %54 = load %struct.MEdge*, %struct.MEdge** %alledge, align 8, !dbg !2660
  %55 = bitcast %struct.MEdge* %54 to i8*, !dbg !2660
  call void %53(i8* %55), !dbg !2659
  %56 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2661
  %57 = load %struct.MLoop*, %struct.MLoop** %allloop, align 8, !dbg !2662
  %58 = bitcast %struct.MLoop* %57 to i8*, !dbg !2662
  call void %56(i8* %58), !dbg !2661
  %59 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2663
  %60 = load %struct.MPoly*, %struct.MPoly** %allpoly, align 8, !dbg !2664
  %61 = bitcast %struct.MPoly* %60 to i8*, !dbg !2664
  call void %59(i8* %61), !dbg !2663
  %62 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2665
  store %struct.DerivedMesh* %62, %struct.DerivedMesh** %retval, align 8, !dbg !2666
  br label %return, !dbg !2666

return:                                           ; preds = %if.end20, %if.then
  %63 = load %struct.DerivedMesh*, %struct.DerivedMesh** %retval, align 8, !dbg !2667
  ret %struct.DerivedMesh* %63, !dbg !2667
}

declare dso_local i32 @BKE_mesh_nurbs_displist_to_mdata(%struct.Object*, %struct.ListBase*, %struct.MVert**, i32*, %struct.MEdge**, i32*, %struct.MLoop**, %struct.MPoly**, %struct.MLoopUV**, i32*, i32*) #2

declare dso_local i8* @CustomData_add_layer_named(%struct.CustomData*, i32, i32, i8*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @CDDM_from_bmesh(%struct.BMesh* %bm, i8 zeroext %use_mdisps) #0 !dbg !2668 {
entry:
  %bm.addr = alloca %struct.BMesh*, align 8
  %use_mdisps.addr = alloca i8, align 1
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !2671, metadata !DIExpression()), !dbg !2672
  store i8 %use_mdisps, i8* %use_mdisps.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_mdisps.addr, metadata !2673, metadata !DIExpression()), !dbg !2674
  %0 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !2675
  %1 = load i8, i8* %use_mdisps.addr, align 1, !dbg !2676
  %call = call %struct.DerivedMesh* @cddm_from_bmesh_ex(%struct.BMesh* %0, i8 zeroext %1, i8 zeroext 0, i32 0, [3 x %struct.BMLoop*]* null), !dbg !2677
  ret %struct.DerivedMesh* %call, !dbg !2678
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.DerivedMesh* @cddm_from_bmesh_ex(%struct.BMesh* %bm, i8 zeroext %use_mdisps, i8 zeroext %use_tessface, i32 %em_tottri, [3 x %struct.BMLoop*]* %em_looptris) #0 !dbg !2679 {
entry:
  %bm.addr = alloca %struct.BMesh*, align 8
  %use_mdisps.addr = alloca i8, align 1
  %use_tessface.addr = alloca i8, align 1
  %em_tottri.addr = alloca i32, align 4
  %em_looptris.addr = alloca [3 x %struct.BMLoop*]*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %iter = alloca %struct.BMIter, align 8
  %eve = alloca %struct.BMVert*, align 8
  %eed = alloca %struct.BMEdge*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %medge = alloca %struct.MEdge*, align 8
  %mface = alloca %struct.MFace*, align 8
  %mloop = alloca %struct.MLoop*, align 8
  %mpoly = alloca %struct.MPoly*, align 8
  %numCol = alloca i32, align 4
  %numTex = alloca i32, align 4
  %index = alloca i32*, align 8
  %add_orig = alloca i32, align 4
  %mask = alloca i64, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %cd_vert_bweight_offset = alloca i32, align 4
  %cd_edge_bweight_offset = alloca i32, align 4
  %cd_edge_crease_offset = alloca i32, align 4
  %mv = alloca %struct.MVert*, align 8
  %med = alloca %struct.MEdge*, align 8
  %mf = alloca %struct.MFace*, align 8
  %l137 = alloca %struct.BMLoop**, align 8
  %l_iter = alloca %struct.BMLoop*, align 8
  %l_first = alloca %struct.BMLoop*, align 8
  %mp = alloca %struct.MPoly*, align 8
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !2683, metadata !DIExpression()), !dbg !2684
  store i8 %use_mdisps, i8* %use_mdisps.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_mdisps.addr, metadata !2685, metadata !DIExpression()), !dbg !2686
  store i8 %use_tessface, i8* %use_tessface.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_tessface.addr, metadata !2687, metadata !DIExpression()), !dbg !2688
  store i32 %em_tottri, i32* %em_tottri.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %em_tottri.addr, metadata !2689, metadata !DIExpression()), !dbg !2690
  store [3 x %struct.BMLoop*]* %em_looptris, [3 x %struct.BMLoop*]** %em_looptris.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x %struct.BMLoop*]** %em_looptris.addr, metadata !2691, metadata !DIExpression()), !dbg !2692
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !2693, metadata !DIExpression()), !dbg !2694
  %0 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !2695
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %0, i32 0, i32 0, !dbg !2696
  %1 = load i32, i32* %totvert, align 8, !dbg !2696
  %2 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !2697
  %totedge = getelementptr inbounds %struct.BMesh, %struct.BMesh* %2, i32 0, i32 1, !dbg !2698
  %3 = load i32, i32* %totedge, align 4, !dbg !2698
  %4 = load i8, i8* %use_tessface.addr, align 1, !dbg !2699
  %conv = zext i8 %4 to i32, !dbg !2699
  %tobool = icmp ne i32 %conv, 0, !dbg !2699
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2699

cond.true:                                        ; preds = %entry
  %5 = load i32, i32* %em_tottri.addr, align 4, !dbg !2700
  br label %cond.end, !dbg !2699

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !2699

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 0, %cond.false ], !dbg !2699
  %6 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !2701
  %totloop = getelementptr inbounds %struct.BMesh, %struct.BMesh* %6, i32 0, i32 2, !dbg !2702
  %7 = load i32, i32* %totloop, align 8, !dbg !2702
  %8 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !2703
  %totface = getelementptr inbounds %struct.BMesh, %struct.BMesh* %8, i32 0, i32 3, !dbg !2704
  %9 = load i32, i32* %totface, align 4, !dbg !2704
  %call = call %struct.DerivedMesh* @CDDM_new(i32 %1, i32 %3, i32 %cond, i32 %7, i32 %9), !dbg !2705
  store %struct.DerivedMesh* %call, %struct.DerivedMesh** %dm, align 8, !dbg !2694
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !2706, metadata !DIExpression()), !dbg !2707
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2708
  %11 = bitcast %struct.DerivedMesh* %10 to %struct.CDDerivedMesh*, !dbg !2709
  store %struct.CDDerivedMesh* %11, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2707
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !2710, metadata !DIExpression()), !dbg !2798
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !2799, metadata !DIExpression()), !dbg !2800
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed, metadata !2801, metadata !DIExpression()), !dbg !2802
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !2803, metadata !DIExpression()), !dbg !2804
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !2805, metadata !DIExpression()), !dbg !2806
  %12 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2807
  %mvert1 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %12, i32 0, i32 1, !dbg !2808
  %13 = load %struct.MVert*, %struct.MVert** %mvert1, align 8, !dbg !2808
  store %struct.MVert* %13, %struct.MVert** %mvert, align 8, !dbg !2806
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge, metadata !2809, metadata !DIExpression()), !dbg !2810
  %14 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2811
  %medge2 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %14, i32 0, i32 2, !dbg !2812
  %15 = load %struct.MEdge*, %struct.MEdge** %medge2, align 8, !dbg !2812
  store %struct.MEdge* %15, %struct.MEdge** %medge, align 8, !dbg !2810
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !2813, metadata !DIExpression()), !dbg !2814
  %16 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2815
  %mface3 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %16, i32 0, i32 3, !dbg !2816
  %17 = load %struct.MFace*, %struct.MFace** %mface3, align 8, !dbg !2816
  store %struct.MFace* %17, %struct.MFace** %mface, align 8, !dbg !2814
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop, metadata !2817, metadata !DIExpression()), !dbg !2818
  %18 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2819
  %mloop4 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %18, i32 0, i32 4, !dbg !2820
  %19 = load %struct.MLoop*, %struct.MLoop** %mloop4, align 8, !dbg !2820
  store %struct.MLoop* %19, %struct.MLoop** %mloop, align 8, !dbg !2818
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly, metadata !2821, metadata !DIExpression()), !dbg !2822
  %20 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !2823
  %mpoly5 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %20, i32 0, i32 5, !dbg !2824
  %21 = load %struct.MPoly*, %struct.MPoly** %mpoly5, align 8, !dbg !2824
  store %struct.MPoly* %21, %struct.MPoly** %mpoly, align 8, !dbg !2822
  call void @llvm.dbg.declare(metadata i32* %numCol, metadata !2825, metadata !DIExpression()), !dbg !2826
  %22 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !2827
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %22, i32 0, i32 26, !dbg !2828
  %call6 = call i32 @CustomData_number_of_layers(%struct.CustomData* %ldata, i32 17), !dbg !2829
  store i32 %call6, i32* %numCol, align 4, !dbg !2826
  call void @llvm.dbg.declare(metadata i32* %numTex, metadata !2830, metadata !DIExpression()), !dbg !2831
  %23 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !2832
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %23, i32 0, i32 27, !dbg !2833
  %call7 = call i32 @CustomData_number_of_layers(%struct.CustomData* %pdata, i32 15), !dbg !2834
  store i32 %call7, i32* %numTex, align 4, !dbg !2831
  call void @llvm.dbg.declare(metadata i32** %index, metadata !2835, metadata !DIExpression()), !dbg !2836
  call void @llvm.dbg.declare(metadata i32* %add_orig, metadata !2837, metadata !DIExpression()), !dbg !2838
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !2839, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2841, metadata !DIExpression()), !dbg !2842
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2843, metadata !DIExpression()), !dbg !2844
  call void @llvm.dbg.declare(metadata i32* %cd_vert_bweight_offset, metadata !2845, metadata !DIExpression()), !dbg !2846
  %24 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !2847
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %24, i32 0, i32 24, !dbg !2848
  %call8 = call i32 @CustomData_get_offset(%struct.CustomData* %vdata, i32 29), !dbg !2849
  store i32 %call8, i32* %cd_vert_bweight_offset, align 4, !dbg !2846
  call void @llvm.dbg.declare(metadata i32* %cd_edge_bweight_offset, metadata !2850, metadata !DIExpression()), !dbg !2851
  %25 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !2852
  %edata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %25, i32 0, i32 25, !dbg !2853
  %call9 = call i32 @CustomData_get_offset(%struct.CustomData* %edata, i32 29), !dbg !2854
  store i32 %call9, i32* %cd_edge_bweight_offset, align 4, !dbg !2851
  call void @llvm.dbg.declare(metadata i32* %cd_edge_crease_offset, metadata !2855, metadata !DIExpression()), !dbg !2856
  %26 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !2857
  %edata10 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %26, i32 0, i32 25, !dbg !2858
  %call11 = call i32 @CustomData_get_offset(%struct.CustomData* %edata10, i32 30), !dbg !2859
  store i32 %call11, i32* %cd_edge_crease_offset, align 4, !dbg !2856
  %27 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2860
  %deformedOnly = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %27, i32 0, i32 11, !dbg !2861
  store i32 1, i32* %deformedOnly, align 8, !dbg !2862
  %28 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !2863
  %pdata12 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %28, i32 0, i32 27, !dbg !2864
  %call13 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %pdata12, i32 7), !dbg !2865
  %tobool14 = icmp ne i8 %call13, 0, !dbg !2866
  %lnot = xor i1 %tobool14, true, !dbg !2866
  %lnot.ext = zext i1 %lnot to i32, !dbg !2866
  store i32 %lnot.ext, i32* %add_orig, align 4, !dbg !2867
  %29 = load i8, i8* %use_mdisps.addr, align 1, !dbg !2868
  %conv15 = zext i8 %29 to i32, !dbg !2868
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !2868
  br i1 %tobool16, label %cond.true17, label %cond.false18, !dbg !2868

cond.true17:                                      ; preds = %cond.end
  %30 = load i64, i64* @CD_MASK_DERIVEDMESH, align 8, !dbg !2869
  %or = or i64 %30, 524288, !dbg !2870
  br label %cond.end19, !dbg !2868

cond.false18:                                     ; preds = %cond.end
  %31 = load i64, i64* @CD_MASK_DERIVEDMESH, align 8, !dbg !2871
  br label %cond.end19, !dbg !2868

cond.end19:                                       ; preds = %cond.false18, %cond.true17
  %cond20 = phi i64 [ %or, %cond.true17 ], [ %31, %cond.false18 ], !dbg !2868
  store i64 %cond20, i64* %mask, align 8, !dbg !2872
  %32 = load i64, i64* %mask, align 8, !dbg !2873
  %and = and i64 %32, -268435457, !dbg !2873
  store i64 %and, i64* %mask, align 8, !dbg !2873
  %33 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !2874
  %vdata21 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %33, i32 0, i32 24, !dbg !2875
  %34 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2876
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %34, i32 0, i32 0, !dbg !2877
  %35 = load i64, i64* %mask, align 8, !dbg !2878
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2879
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %36, i32 0, i32 5, !dbg !2880
  %37 = load i32, i32* %numVertData, align 8, !dbg !2880
  %call22 = call zeroext i8 @CustomData_merge(%struct.CustomData* %vdata21, %struct.CustomData* %vertData, i64 %35, i32 1, i32 %37), !dbg !2881
  %38 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !2882
  %edata23 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %38, i32 0, i32 25, !dbg !2883
  %39 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2884
  %edgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %39, i32 0, i32 1, !dbg !2885
  %40 = load i64, i64* %mask, align 8, !dbg !2886
  %41 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2887
  %numEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %41, i32 0, i32 6, !dbg !2888
  %42 = load i32, i32* %numEdgeData, align 4, !dbg !2888
  %call24 = call zeroext i8 @CustomData_merge(%struct.CustomData* %edata23, %struct.CustomData* %edgeData, i64 %40, i32 1, i32 %42), !dbg !2889
  %43 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !2890
  %ldata25 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %43, i32 0, i32 26, !dbg !2891
  %44 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2892
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %44, i32 0, i32 3, !dbg !2893
  %45 = load i64, i64* %mask, align 8, !dbg !2894
  %46 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2895
  %numLoopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %46, i32 0, i32 8, !dbg !2896
  %47 = load i32, i32* %numLoopData, align 4, !dbg !2896
  %call26 = call zeroext i8 @CustomData_merge(%struct.CustomData* %ldata25, %struct.CustomData* %loopData, i64 %45, i32 1, i32 %47), !dbg !2897
  %48 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !2898
  %pdata27 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %48, i32 0, i32 27, !dbg !2899
  %49 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2900
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %49, i32 0, i32 4, !dbg !2901
  %50 = load i64, i64* %mask, align 8, !dbg !2902
  %51 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2903
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %51, i32 0, i32 9, !dbg !2904
  %52 = load i32, i32* %numPolyData, align 8, !dbg !2904
  %call28 = call zeroext i8 @CustomData_merge(%struct.CustomData* %pdata27, %struct.CustomData* %polyData, i64 %50, i32 1, i32 %52), !dbg !2905
  %53 = load i8, i8* %use_tessface.addr, align 1, !dbg !2906
  %tobool29 = icmp ne i8 %53, 0, !dbg !2906
  br i1 %tobool29, label %if.then, label %if.end, !dbg !2908

if.then:                                          ; preds = %cond.end19
  %54 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2909
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %54, i32 0, i32 2, !dbg !2911
  %55 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2912
  %polyData30 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %55, i32 0, i32 4, !dbg !2913
  %56 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2914
  %loopData31 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %56, i32 0, i32 3, !dbg !2915
  %57 = load i32, i32* %em_tottri.addr, align 4, !dbg !2916
  call void @CustomData_from_bmeshpoly(%struct.CustomData* %faceData, %struct.CustomData* %polyData30, %struct.CustomData* %loopData31, i32 %57), !dbg !2917
  br label %if.end, !dbg !2918

if.end:                                           ; preds = %if.then, %cond.end19
  %58 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2919
  %getVertDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %58, i32 0, i32 50, !dbg !2920
  %59 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray, align 8, !dbg !2920
  %60 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2921
  %call32 = call i8* %59(%struct.DerivedMesh* %60, i32 7), !dbg !2919
  %61 = bitcast i8* %call32 to i32*, !dbg !2919
  store i32* %61, i32** %index, align 8, !dbg !2922
  %62 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !2923
  %call33 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %62, i8 zeroext 1, i8* null), !dbg !2923
  %63 = bitcast i8* %call33 to %struct.BMVert*, !dbg !2923
  store %struct.BMVert* %63, %struct.BMVert** %eve, align 8, !dbg !2923
  store i32 0, i32* %i, align 4, !dbg !2923
  br label %for.cond, !dbg !2923

for.cond:                                         ; preds = %for.inc, %if.end
  %64 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2925
  %tobool34 = icmp ne %struct.BMVert* %64, null, !dbg !2923
  br i1 %tobool34, label %for.body, label %for.end, !dbg !2923

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !2927, metadata !DIExpression()), !dbg !2929
  %65 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2930
  %66 = load i32, i32* %i, align 4, !dbg !2931
  %idxprom = zext i32 %66 to i64, !dbg !2930
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %65, i64 %idxprom, !dbg !2930
  store %struct.MVert* %arrayidx, %struct.MVert** %mv, align 8, !dbg !2929
  %67 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !2932
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %67, i32 0, i32 0, !dbg !2933
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !2932
  %68 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2934
  %co35 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %68, i32 0, i32 2, !dbg !2935
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %co35, i64 0, i64 0, !dbg !2934
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay36), !dbg !2936
  %69 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2937
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %69, i32 0, i32 0, !dbg !2937
  %70 = load i32, i32* %i, align 4, !dbg !2937
  call void @_bm_elem_index_set(%struct.BMHeader* %head, i32 %70), !dbg !2937
  %71 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !2938
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %71, i32 0, i32 1, !dbg !2939
  %arraydecay37 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !2938
  %72 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2940
  %no38 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %72, i32 0, i32 3, !dbg !2941
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %no38, i64 0, i64 0, !dbg !2940
  call void @normal_float_to_short_v3(i16* %arraydecay37, float* %arraydecay39), !dbg !2942
  %73 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2943
  %call40 = call zeroext i8 @BM_vert_flag_to_mflag(%struct.BMVert* %73), !dbg !2944
  %74 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !2945
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %74, i32 0, i32 2, !dbg !2946
  store i8 %call40, i8* %flag, align 2, !dbg !2947
  %75 = load i32, i32* %cd_vert_bweight_offset, align 4, !dbg !2948
  %cmp = icmp ne i32 %75, -1, !dbg !2950
  br i1 %cmp, label %if.then42, label %if.end45, !dbg !2951

if.then42:                                        ; preds = %for.body
  %76 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2952
  %head43 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %76, i32 0, i32 0, !dbg !2952
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head43, i32 0, i32 0, !dbg !2952
  %77 = load i8*, i8** %data, align 8, !dbg !2952
  %78 = load i32, i32* %cd_vert_bweight_offset, align 4, !dbg !2952
  %idx.ext = sext i32 %78 to i64, !dbg !2952
  %add.ptr = getelementptr inbounds i8, i8* %77, i64 %idx.ext, !dbg !2952
  %79 = bitcast i8* %add.ptr to float*, !dbg !2952
  %80 = load float, float* %79, align 4, !dbg !2952
  %mul = fmul float %80, 2.550000e+02, !dbg !2952
  %conv44 = fptoui float %mul to i8, !dbg !2952
  %81 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !2953
  %bweight = getelementptr inbounds %struct.MVert, %struct.MVert* %81, i32 0, i32 3, !dbg !2954
  store i8 %conv44, i8* %bweight, align 1, !dbg !2955
  br label %if.end45, !dbg !2953

if.end45:                                         ; preds = %if.then42, %for.body
  %82 = load i32, i32* %add_orig, align 4, !dbg !2956
  %tobool46 = icmp ne i32 %82, 0, !dbg !2956
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !2958

if.then47:                                        ; preds = %if.end45
  %83 = load i32, i32* %i, align 4, !dbg !2959
  %84 = load i32*, i32** %index, align 8, !dbg !2960
  %incdec.ptr = getelementptr inbounds i32, i32* %84, i32 1, !dbg !2960
  store i32* %incdec.ptr, i32** %index, align 8, !dbg !2960
  store i32 %83, i32* %84, align 4, !dbg !2961
  br label %if.end48, !dbg !2962

if.end48:                                         ; preds = %if.then47, %if.end45
  %85 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !2963
  %vdata49 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %85, i32 0, i32 24, !dbg !2964
  %86 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2965
  %vertData50 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %86, i32 0, i32 0, !dbg !2966
  %87 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2967
  %head51 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %87, i32 0, i32 0, !dbg !2968
  %data52 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head51, i32 0, i32 0, !dbg !2969
  %88 = load i8*, i8** %data52, align 8, !dbg !2969
  %89 = load i32, i32* %i, align 4, !dbg !2970
  call void @CustomData_from_bmesh_block(%struct.CustomData* %vdata49, %struct.CustomData* %vertData50, i8* %88, i32 %89), !dbg !2971
  br label %for.inc, !dbg !2972

for.inc:                                          ; preds = %if.end48
  %call53 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !2925
  %90 = bitcast i8* %call53 to %struct.BMVert*, !dbg !2925
  store %struct.BMVert* %90, %struct.BMVert** %eve, align 8, !dbg !2925
  %91 = load i32, i32* %i, align 4, !dbg !2925
  %inc = add i32 %91, 1, !dbg !2925
  store i32 %inc, i32* %i, align 4, !dbg !2925
  br label %for.cond, !dbg !2925, !llvm.loop !2973

for.end:                                          ; preds = %for.cond
  %92 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !2975
  %elem_index_dirty = getelementptr inbounds %struct.BMesh, %struct.BMesh* %92, i32 0, i32 7, !dbg !2976
  %93 = load i8, i8* %elem_index_dirty, align 4, !dbg !2977
  %conv54 = zext i8 %93 to i32, !dbg !2977
  %and55 = and i32 %conv54, -2, !dbg !2977
  %conv56 = trunc i32 %and55 to i8, !dbg !2977
  store i8 %conv56, i8* %elem_index_dirty, align 4, !dbg !2977
  %94 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2978
  %getEdgeDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %94, i32 0, i32 51, !dbg !2979
  %95 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getEdgeDataArray, align 8, !dbg !2979
  %96 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2980
  %call57 = call i8* %95(%struct.DerivedMesh* %96, i32 7), !dbg !2978
  %97 = bitcast i8* %call57 to i32*, !dbg !2978
  store i32* %97, i32** %index, align 8, !dbg !2981
  %98 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !2982
  %call58 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %98, i8 zeroext 2, i8* null), !dbg !2982
  %99 = bitcast i8* %call58 to %struct.BMEdge*, !dbg !2982
  store %struct.BMEdge* %99, %struct.BMEdge** %eed, align 8, !dbg !2982
  store i32 0, i32* %i, align 4, !dbg !2982
  br label %for.cond59, !dbg !2982

for.cond59:                                       ; preds = %for.inc120, %for.end
  %100 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !2984
  %tobool60 = icmp ne %struct.BMEdge* %100, null, !dbg !2982
  br i1 %tobool60, label %for.body61, label %for.end123, !dbg !2982

for.body61:                                       ; preds = %for.cond59
  call void @llvm.dbg.declare(metadata %struct.MEdge** %med, metadata !2986, metadata !DIExpression()), !dbg !2988
  %101 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !2989
  %102 = load i32, i32* %i, align 4, !dbg !2990
  %idxprom62 = zext i32 %102 to i64, !dbg !2989
  %arrayidx63 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %101, i64 %idxprom62, !dbg !2989
  store %struct.MEdge* %arrayidx63, %struct.MEdge** %med, align 8, !dbg !2988
  %103 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !2991
  %head64 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %103, i32 0, i32 0, !dbg !2991
  %104 = load i32, i32* %i, align 4, !dbg !2991
  call void @_bm_elem_index_set(%struct.BMHeader* %head64, i32 %104), !dbg !2991
  %105 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !2992
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %105, i32 0, i32 2, !dbg !2992
  %106 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !2992
  %head65 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %106, i32 0, i32 0, !dbg !2992
  %call66 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head65), !dbg !2992
  %107 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !2993
  %v167 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %107, i32 0, i32 0, !dbg !2994
  store i32 %call66, i32* %v167, align 4, !dbg !2995
  %108 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !2996
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %108, i32 0, i32 3, !dbg !2996
  %109 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !2996
  %head68 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %109, i32 0, i32 0, !dbg !2996
  %call69 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head68), !dbg !2996
  %110 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !2997
  %v270 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %110, i32 0, i32 1, !dbg !2998
  store i32 %call69, i32* %v270, align 4, !dbg !2999
  %111 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !3000
  %call71 = call signext i16 @BM_edge_flag_to_mflag(%struct.BMEdge* %111), !dbg !3001
  %112 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !3002
  %flag72 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %112, i32 0, i32 4, !dbg !3003
  store i16 %call71, i16* %flag72, align 2, !dbg !3004
  %113 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !3005
  %flag73 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %113, i32 0, i32 4, !dbg !3007
  %114 = load i16, i16* %flag73, align 2, !dbg !3007
  %conv74 = sext i16 %114 to i32, !dbg !3005
  %and75 = and i32 %conv74, 2, !dbg !3008
  %cmp76 = icmp eq i32 %and75, 0, !dbg !3009
  br i1 %cmp76, label %if.then78, label %if.end90, !dbg !3010

if.then78:                                        ; preds = %for.body61
  %115 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !3011
  %l = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %115, i32 0, i32 4, !dbg !3014
  %116 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !3014
  %tobool79 = icmp ne %struct.BMLoop* %116, null, !dbg !3011
  br i1 %tobool79, label %land.lhs.true, label %if.end89, !dbg !3015

land.lhs.true:                                    ; preds = %if.then78
  %117 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !3016
  %l80 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %117, i32 0, i32 4, !dbg !3017
  %118 = load %struct.BMLoop*, %struct.BMLoop** %l80, align 8, !dbg !3017
  %119 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !3018
  %l81 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %119, i32 0, i32 4, !dbg !3019
  %120 = load %struct.BMLoop*, %struct.BMLoop** %l81, align 8, !dbg !3019
  %radial_next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %120, i32 0, i32 4, !dbg !3020
  %121 = load %struct.BMLoop*, %struct.BMLoop** %radial_next, align 8, !dbg !3020
  %cmp82 = icmp eq %struct.BMLoop* %118, %121, !dbg !3021
  br i1 %cmp82, label %if.then84, label %if.end89, !dbg !3022

if.then84:                                        ; preds = %land.lhs.true
  %122 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !3023
  %flag85 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %122, i32 0, i32 4, !dbg !3025
  %123 = load i16, i16* %flag85, align 2, !dbg !3026
  %conv86 = sext i16 %123 to i32, !dbg !3026
  %or87 = or i32 %conv86, 2, !dbg !3026
  %conv88 = trunc i32 %or87 to i16, !dbg !3026
  store i16 %conv88, i16* %flag85, align 2, !dbg !3026
  br label %if.end89, !dbg !3027

if.end89:                                         ; preds = %if.then84, %land.lhs.true, %if.then78
  br label %if.end90, !dbg !3028

if.end90:                                         ; preds = %if.end89, %for.body61
  %124 = load i32, i32* %cd_edge_crease_offset, align 4, !dbg !3029
  %cmp91 = icmp ne i32 %124, -1, !dbg !3031
  br i1 %cmp91, label %if.then93, label %if.end100, !dbg !3032

if.then93:                                        ; preds = %if.end90
  %125 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !3033
  %head94 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %125, i32 0, i32 0, !dbg !3033
  %data95 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head94, i32 0, i32 0, !dbg !3033
  %126 = load i8*, i8** %data95, align 8, !dbg !3033
  %127 = load i32, i32* %cd_edge_crease_offset, align 4, !dbg !3033
  %idx.ext96 = sext i32 %127 to i64, !dbg !3033
  %add.ptr97 = getelementptr inbounds i8, i8* %126, i64 %idx.ext96, !dbg !3033
  %128 = bitcast i8* %add.ptr97 to float*, !dbg !3033
  %129 = load float, float* %128, align 4, !dbg !3033
  %mul98 = fmul float %129, 2.550000e+02, !dbg !3033
  %conv99 = fptoui float %mul98 to i8, !dbg !3033
  %130 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !3034
  %crease = getelementptr inbounds %struct.MEdge, %struct.MEdge* %130, i32 0, i32 2, !dbg !3035
  store i8 %conv99, i8* %crease, align 4, !dbg !3036
  br label %if.end100, !dbg !3034

if.end100:                                        ; preds = %if.then93, %if.end90
  %131 = load i32, i32* %cd_edge_bweight_offset, align 4, !dbg !3037
  %cmp101 = icmp ne i32 %131, -1, !dbg !3039
  br i1 %cmp101, label %if.then103, label %if.end111, !dbg !3040

if.then103:                                       ; preds = %if.end100
  %132 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !3041
  %head104 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %132, i32 0, i32 0, !dbg !3041
  %data105 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head104, i32 0, i32 0, !dbg !3041
  %133 = load i8*, i8** %data105, align 8, !dbg !3041
  %134 = load i32, i32* %cd_edge_bweight_offset, align 4, !dbg !3041
  %idx.ext106 = sext i32 %134 to i64, !dbg !3041
  %add.ptr107 = getelementptr inbounds i8, i8* %133, i64 %idx.ext106, !dbg !3041
  %135 = bitcast i8* %add.ptr107 to float*, !dbg !3041
  %136 = load float, float* %135, align 4, !dbg !3041
  %mul108 = fmul float %136, 2.550000e+02, !dbg !3041
  %conv109 = fptoui float %mul108 to i8, !dbg !3041
  %137 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !3042
  %bweight110 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %137, i32 0, i32 3, !dbg !3043
  store i8 %conv109, i8* %bweight110, align 1, !dbg !3044
  br label %if.end111, !dbg !3042

if.end111:                                        ; preds = %if.then103, %if.end100
  %138 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !3045
  %edata112 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %138, i32 0, i32 25, !dbg !3046
  %139 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3047
  %edgeData113 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %139, i32 0, i32 1, !dbg !3048
  %140 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !3049
  %head114 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %140, i32 0, i32 0, !dbg !3050
  %data115 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head114, i32 0, i32 0, !dbg !3051
  %141 = load i8*, i8** %data115, align 8, !dbg !3051
  %142 = load i32, i32* %i, align 4, !dbg !3052
  call void @CustomData_from_bmesh_block(%struct.CustomData* %edata112, %struct.CustomData* %edgeData113, i8* %141, i32 %142), !dbg !3053
  %143 = load i32, i32* %add_orig, align 4, !dbg !3054
  %tobool116 = icmp ne i32 %143, 0, !dbg !3054
  br i1 %tobool116, label %if.then117, label %if.end119, !dbg !3056

if.then117:                                       ; preds = %if.end111
  %144 = load i32, i32* %i, align 4, !dbg !3057
  %145 = load i32*, i32** %index, align 8, !dbg !3058
  %incdec.ptr118 = getelementptr inbounds i32, i32* %145, i32 1, !dbg !3058
  store i32* %incdec.ptr118, i32** %index, align 8, !dbg !3058
  store i32 %144, i32* %145, align 4, !dbg !3059
  br label %if.end119, !dbg !3060

if.end119:                                        ; preds = %if.then117, %if.end111
  br label %for.inc120, !dbg !3061

for.inc120:                                       ; preds = %if.end119
  %call121 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !2984
  %146 = bitcast i8* %call121 to %struct.BMEdge*, !dbg !2984
  store %struct.BMEdge* %146, %struct.BMEdge** %eed, align 8, !dbg !2984
  %147 = load i32, i32* %i, align 4, !dbg !2984
  %inc122 = add i32 %147, 1, !dbg !2984
  store i32 %inc122, i32* %i, align 4, !dbg !2984
  br label %for.cond59, !dbg !2984, !llvm.loop !3062

for.end123:                                       ; preds = %for.cond59
  %148 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !3064
  %elem_index_dirty124 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %148, i32 0, i32 7, !dbg !3065
  %149 = load i8, i8* %elem_index_dirty124, align 4, !dbg !3066
  %conv125 = zext i8 %149 to i32, !dbg !3066
  %and126 = and i32 %conv125, -3, !dbg !3066
  %conv127 = trunc i32 %and126 to i8, !dbg !3066
  store i8 %conv127, i8* %elem_index_dirty124, align 4, !dbg !3066
  %150 = load i8, i8* %use_tessface.addr, align 1, !dbg !3067
  %tobool128 = icmp ne i8 %150, 0, !dbg !3067
  br i1 %tobool128, label %if.then129, label %if.end167, !dbg !3069

if.then129:                                       ; preds = %for.end123
  %151 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !3070
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %151, i8 zeroext 8), !dbg !3072
  %152 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3073
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %152, i32 0, i32 52, !dbg !3074
  %153 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !3074
  %154 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3075
  %call130 = call i8* %153(%struct.DerivedMesh* %154, i32 7), !dbg !3073
  %155 = bitcast i8* %call130 to i32*, !dbg !3073
  store i32* %155, i32** %index, align 8, !dbg !3076
  store i32 0, i32* %i, align 4, !dbg !3077
  br label %for.cond131, !dbg !3079

for.cond131:                                      ; preds = %for.inc164, %if.then129
  %156 = load i32, i32* %i, align 4, !dbg !3080
  %157 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3082
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %157, i32 0, i32 7, !dbg !3083
  %158 = load i32, i32* %numTessFaceData, align 8, !dbg !3083
  %cmp132 = icmp ult i32 %156, %158, !dbg !3084
  br i1 %cmp132, label %for.body134, label %for.end166, !dbg !3085

for.body134:                                      ; preds = %for.cond131
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !3086, metadata !DIExpression()), !dbg !3088
  %159 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !3089
  %160 = load i32, i32* %i, align 4, !dbg !3090
  %idxprom135 = zext i32 %160 to i64, !dbg !3089
  %arrayidx136 = getelementptr inbounds %struct.MFace, %struct.MFace* %159, i64 %idxprom135, !dbg !3089
  store %struct.MFace* %arrayidx136, %struct.MFace** %mf, align 8, !dbg !3088
  call void @llvm.dbg.declare(metadata %struct.BMLoop*** %l137, metadata !3091, metadata !DIExpression()), !dbg !3093
  %161 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %em_looptris.addr, align 8, !dbg !3094
  %162 = load i32, i32* %i, align 4, !dbg !3095
  %idxprom138 = zext i32 %162 to i64, !dbg !3094
  %arrayidx139 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %161, i64 %idxprom138, !dbg !3094
  %arraydecay140 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %arrayidx139, i64 0, i64 0, !dbg !3094
  store %struct.BMLoop** %arraydecay140, %struct.BMLoop*** %l137, align 8, !dbg !3093
  %163 = load %struct.BMLoop**, %struct.BMLoop*** %l137, align 8, !dbg !3096
  %arrayidx141 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %163, i64 0, !dbg !3096
  %164 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx141, align 8, !dbg !3096
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %164, i32 0, i32 3, !dbg !3097
  %165 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !3097
  store %struct.BMFace* %165, %struct.BMFace** %efa, align 8, !dbg !3098
  %166 = load %struct.BMLoop**, %struct.BMLoop*** %l137, align 8, !dbg !3099
  %arrayidx142 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %166, i64 0, !dbg !3099
  %167 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx142, align 8, !dbg !3099
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %167, i32 0, i32 1, !dbg !3099
  %168 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !3099
  %head143 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %168, i32 0, i32 0, !dbg !3099
  %call144 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head143), !dbg !3099
  %169 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !3100
  %v1145 = getelementptr inbounds %struct.MFace, %struct.MFace* %169, i32 0, i32 0, !dbg !3101
  store i32 %call144, i32* %v1145, align 4, !dbg !3102
  %170 = load %struct.BMLoop**, %struct.BMLoop*** %l137, align 8, !dbg !3103
  %arrayidx146 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %170, i64 1, !dbg !3103
  %171 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx146, align 8, !dbg !3103
  %v147 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %171, i32 0, i32 1, !dbg !3103
  %172 = load %struct.BMVert*, %struct.BMVert** %v147, align 8, !dbg !3103
  %head148 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %172, i32 0, i32 0, !dbg !3103
  %call149 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head148), !dbg !3103
  %173 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !3104
  %v2150 = getelementptr inbounds %struct.MFace, %struct.MFace* %173, i32 0, i32 1, !dbg !3105
  store i32 %call149, i32* %v2150, align 4, !dbg !3106
  %174 = load %struct.BMLoop**, %struct.BMLoop*** %l137, align 8, !dbg !3107
  %arrayidx151 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %174, i64 2, !dbg !3107
  %175 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx151, align 8, !dbg !3107
  %v152 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %175, i32 0, i32 1, !dbg !3107
  %176 = load %struct.BMVert*, %struct.BMVert** %v152, align 8, !dbg !3107
  %head153 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %176, i32 0, i32 0, !dbg !3107
  %call154 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head153), !dbg !3107
  %177 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !3108
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %177, i32 0, i32 2, !dbg !3109
  store i32 %call154, i32* %v3, align 4, !dbg !3110
  %178 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !3111
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %178, i32 0, i32 3, !dbg !3112
  store i32 0, i32* %v4, align 4, !dbg !3113
  %179 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3114
  %mat_nr = getelementptr inbounds %struct.BMFace, %struct.BMFace* %179, i32 0, i32 5, !dbg !3115
  %180 = load i16, i16* %mat_nr, align 8, !dbg !3115
  %181 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !3116
  %mat_nr155 = getelementptr inbounds %struct.MFace, %struct.MFace* %181, i32 0, i32 4, !dbg !3117
  store i16 %180, i16* %mat_nr155, align 4, !dbg !3118
  %182 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3119
  %call156 = call zeroext i8 @BM_face_flag_to_mflag(%struct.BMFace* %182), !dbg !3120
  %183 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !3121
  %flag157 = getelementptr inbounds %struct.MFace, %struct.MFace* %183, i32 0, i32 6, !dbg !3122
  store i8 %call156, i8* %flag157, align 1, !dbg !3123
  %184 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3124
  %head158 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %184, i32 0, i32 0, !dbg !3124
  %call159 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head158), !dbg !3124
  %185 = load i32*, i32** %index, align 8, !dbg !3125
  %incdec.ptr160 = getelementptr inbounds i32, i32* %185, i32 1, !dbg !3125
  store i32* %incdec.ptr160, i32** %index, align 8, !dbg !3125
  store i32 %call159, i32* %185, align 4, !dbg !3126
  %186 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !3127
  %187 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3128
  %faceData161 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %187, i32 0, i32 2, !dbg !3129
  %188 = load i32, i32* %i, align 4, !dbg !3130
  %189 = load %struct.BMLoop**, %struct.BMLoop*** %l137, align 8, !dbg !3131
  %190 = load i32, i32* %numCol, align 4, !dbg !3132
  %191 = load i32, i32* %numTex, align 4, !dbg !3133
  call void @loops_to_customdata_corners(%struct.BMesh* %186, %struct.CustomData* %faceData161, i32 %188, %struct.BMLoop** %189, i32 %190, i32 %191), !dbg !3134
  %192 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !3135
  %193 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3136
  %faceData162 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %193, i32 0, i32 2, !dbg !3137
  %194 = load i32, i32* %i, align 4, !dbg !3138
  %call163 = call i32 @test_index_face(%struct.MFace* %192, %struct.CustomData* %faceData162, i32 %194, i32 3), !dbg !3139
  br label %for.inc164, !dbg !3140

for.inc164:                                       ; preds = %for.body134
  %195 = load i32, i32* %i, align 4, !dbg !3141
  %inc165 = add i32 %195, 1, !dbg !3141
  store i32 %inc165, i32* %i, align 4, !dbg !3141
  br label %for.cond131, !dbg !3142, !llvm.loop !3143

for.end166:                                       ; preds = %for.cond131
  br label %if.end167, !dbg !3145

if.end167:                                        ; preds = %for.end166, %for.end123
  %196 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3146
  %polyData168 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %196, i32 0, i32 4, !dbg !3147
  %call169 = call i8* @CustomData_get_layer(%struct.CustomData* %polyData168, i32 7), !dbg !3148
  %197 = bitcast i8* %call169 to i32*, !dbg !3148
  store i32* %197, i32** %index, align 8, !dbg !3149
  store i32 0, i32* %j, align 4, !dbg !3150
  %198 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !3151
  %call170 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %198, i8 zeroext 3, i8* null), !dbg !3151
  %199 = bitcast i8* %call170 to %struct.BMFace*, !dbg !3151
  store %struct.BMFace* %199, %struct.BMFace** %efa, align 8, !dbg !3151
  store i32 0, i32* %i, align 4, !dbg !3151
  br label %for.cond171, !dbg !3151

for.cond171:                                      ; preds = %for.inc207, %if.end167
  %200 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3153
  %tobool172 = icmp ne %struct.BMFace* %200, null, !dbg !3151
  br i1 %tobool172, label %for.body173, label %for.end210, !dbg !3151

for.body173:                                      ; preds = %for.cond171
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_iter, metadata !3155, metadata !DIExpression()), !dbg !3157
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_first, metadata !3158, metadata !DIExpression()), !dbg !3159
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !3160, metadata !DIExpression()), !dbg !3161
  %201 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !3162
  %202 = load i32, i32* %i, align 4, !dbg !3163
  %idxprom174 = zext i32 %202 to i64, !dbg !3162
  %arrayidx175 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %201, i64 %idxprom174, !dbg !3162
  store %struct.MPoly* %arrayidx175, %struct.MPoly** %mp, align 8, !dbg !3161
  %203 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3164
  %head176 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %203, i32 0, i32 0, !dbg !3164
  %204 = load i32, i32* %i, align 4, !dbg !3164
  call void @_bm_elem_index_set(%struct.BMHeader* %head176, i32 %204), !dbg !3164
  %205 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3165
  %len = getelementptr inbounds %struct.BMFace, %struct.BMFace* %205, i32 0, i32 3, !dbg !3166
  %206 = load i32, i32* %len, align 8, !dbg !3166
  %207 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !3167
  %totloop177 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %207, i32 0, i32 1, !dbg !3168
  store i32 %206, i32* %totloop177, align 4, !dbg !3169
  %208 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3170
  %call178 = call zeroext i8 @BM_face_flag_to_mflag(%struct.BMFace* %208), !dbg !3171
  %209 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !3172
  %flag179 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %209, i32 0, i32 3, !dbg !3173
  store i8 %call178, i8* %flag179, align 2, !dbg !3174
  %210 = load i32, i32* %j, align 4, !dbg !3175
  %211 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !3176
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %211, i32 0, i32 0, !dbg !3177
  store i32 %210, i32* %loopstart, align 4, !dbg !3178
  %212 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3179
  %mat_nr180 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %212, i32 0, i32 5, !dbg !3180
  %213 = load i16, i16* %mat_nr180, align 8, !dbg !3180
  %214 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !3181
  %mat_nr181 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %214, i32 0, i32 2, !dbg !3182
  store i16 %213, i16* %mat_nr181, align 4, !dbg !3183
  %215 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3184
  %l_first182 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %215, i32 0, i32 2, !dbg !3184
  %216 = load %struct.BMLoop*, %struct.BMLoop** %l_first182, align 8, !dbg !3184
  store %struct.BMLoop* %216, %struct.BMLoop** %l_first, align 8, !dbg !3185
  store %struct.BMLoop* %216, %struct.BMLoop** %l_iter, align 8, !dbg !3186
  br label %do.body, !dbg !3187

do.body:                                          ; preds = %do.cond, %for.body173
  %217 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !3188
  %v183 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %217, i32 0, i32 1, !dbg !3188
  %218 = load %struct.BMVert*, %struct.BMVert** %v183, align 8, !dbg !3188
  %head184 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %218, i32 0, i32 0, !dbg !3188
  %call185 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head184), !dbg !3188
  %219 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !3190
  %v186 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %219, i32 0, i32 0, !dbg !3191
  store i32 %call185, i32* %v186, align 4, !dbg !3192
  %220 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !3193
  %e = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %220, i32 0, i32 2, !dbg !3193
  %221 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !3193
  %head187 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %221, i32 0, i32 0, !dbg !3193
  %call188 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head187), !dbg !3193
  %222 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !3194
  %e189 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %222, i32 0, i32 1, !dbg !3195
  store i32 %call188, i32* %e189, align 4, !dbg !3196
  %223 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !3197
  %ldata190 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %223, i32 0, i32 26, !dbg !3198
  %224 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3199
  %loopData191 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %224, i32 0, i32 3, !dbg !3200
  %225 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !3201
  %head192 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %225, i32 0, i32 0, !dbg !3202
  %data193 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head192, i32 0, i32 0, !dbg !3203
  %226 = load i8*, i8** %data193, align 8, !dbg !3203
  %227 = load i32, i32* %j, align 4, !dbg !3204
  call void @CustomData_from_bmesh_block(%struct.CustomData* %ldata190, %struct.CustomData* %loopData191, i8* %226, i32 %227), !dbg !3205
  %228 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !3206
  %head194 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %228, i32 0, i32 0, !dbg !3206
  %229 = load i32, i32* %j, align 4, !dbg !3206
  call void @_bm_elem_index_set(%struct.BMHeader* %head194, i32 %229), !dbg !3206
  %230 = load i32, i32* %j, align 4, !dbg !3207
  %inc195 = add i32 %230, 1, !dbg !3207
  store i32 %inc195, i32* %j, align 4, !dbg !3207
  %231 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !3208
  %incdec.ptr196 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %231, i32 1, !dbg !3208
  store %struct.MLoop* %incdec.ptr196, %struct.MLoop** %mloop, align 8, !dbg !3208
  br label %do.cond, !dbg !3209

do.cond:                                          ; preds = %do.body
  %232 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !3210
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %232, i32 0, i32 6, !dbg !3211
  %233 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !3211
  store %struct.BMLoop* %233, %struct.BMLoop** %l_iter, align 8, !dbg !3212
  %234 = load %struct.BMLoop*, %struct.BMLoop** %l_first, align 8, !dbg !3213
  %cmp197 = icmp ne %struct.BMLoop* %233, %234, !dbg !3214
  br i1 %cmp197, label %do.body, label %do.end, !dbg !3209, !llvm.loop !3215

do.end:                                           ; preds = %do.cond
  %235 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !3217
  %pdata199 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %235, i32 0, i32 27, !dbg !3218
  %236 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3219
  %polyData200 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %236, i32 0, i32 4, !dbg !3220
  %237 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3221
  %head201 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %237, i32 0, i32 0, !dbg !3222
  %data202 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head201, i32 0, i32 0, !dbg !3223
  %238 = load i8*, i8** %data202, align 8, !dbg !3223
  %239 = load i32, i32* %i, align 4, !dbg !3224
  call void @CustomData_from_bmesh_block(%struct.CustomData* %pdata199, %struct.CustomData* %polyData200, i8* %238, i32 %239), !dbg !3225
  %240 = load i32, i32* %add_orig, align 4, !dbg !3226
  %tobool203 = icmp ne i32 %240, 0, !dbg !3226
  br i1 %tobool203, label %if.then204, label %if.end206, !dbg !3228

if.then204:                                       ; preds = %do.end
  %241 = load i32, i32* %i, align 4, !dbg !3229
  %242 = load i32*, i32** %index, align 8, !dbg !3230
  %incdec.ptr205 = getelementptr inbounds i32, i32* %242, i32 1, !dbg !3230
  store i32* %incdec.ptr205, i32** %index, align 8, !dbg !3230
  store i32 %241, i32* %242, align 4, !dbg !3231
  br label %if.end206, !dbg !3232

if.end206:                                        ; preds = %if.then204, %do.end
  br label %for.inc207, !dbg !3233

for.inc207:                                       ; preds = %if.end206
  %call208 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !3153
  %243 = bitcast i8* %call208 to %struct.BMFace*, !dbg !3153
  store %struct.BMFace* %243, %struct.BMFace** %efa, align 8, !dbg !3153
  %244 = load i32, i32* %i, align 4, !dbg !3153
  %inc209 = add i32 %244, 1, !dbg !3153
  store i32 %inc209, i32* %i, align 4, !dbg !3153
  br label %for.cond171, !dbg !3153, !llvm.loop !3234

for.end210:                                       ; preds = %for.cond171
  %245 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !3236
  %elem_index_dirty211 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %245, i32 0, i32 7, !dbg !3237
  %246 = load i8, i8* %elem_index_dirty211, align 4, !dbg !3238
  %conv212 = zext i8 %246 to i32, !dbg !3238
  %and213 = and i32 %conv212, -13, !dbg !3238
  %conv214 = trunc i32 %and213 to i8, !dbg !3238
  store i8 %conv214, i8* %elem_index_dirty211, align 4, !dbg !3238
  %247 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !3239
  %call215 = call zeroext i8 @BM_mesh_cd_flag_from_bmesh(%struct.BMesh* %247), !dbg !3240
  %248 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3241
  %cd_flag = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %248, i32 0, i32 19, !dbg !3242
  store i8 %call215, i8* %cd_flag, align 8, !dbg !3243
  %249 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3244
  ret %struct.DerivedMesh* %249, !dbg !3245
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @CDDM_from_editbmesh(%struct.BMEditMesh* %em, i8 zeroext %use_mdisps, i8 zeroext %use_tessface) #0 !dbg !3246 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %use_mdisps.addr = alloca i8, align 1
  %use_tessface.addr = alloca i8, align 1
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !3251, metadata !DIExpression()), !dbg !3252
  store i8 %use_mdisps, i8* %use_mdisps.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_mdisps.addr, metadata !3253, metadata !DIExpression()), !dbg !3254
  store i8 %use_tessface, i8* %use_tessface.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_tessface.addr, metadata !3255, metadata !DIExpression()), !dbg !3256
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !3257
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 0, !dbg !3258
  %1 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3258
  %2 = load i8, i8* %use_mdisps.addr, align 1, !dbg !3259
  %3 = load i8, i8* %use_tessface.addr, align 1, !dbg !3260
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !3261
  %tottri = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 4, !dbg !3262
  %5 = load i32, i32* %tottri, align 8, !dbg !3262
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !3263
  %looptris = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 3, !dbg !3264
  %7 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !3264
  %call = call %struct.DerivedMesh* @cddm_from_bmesh_ex(%struct.BMesh* %1, i8 zeroext %2, i8 zeroext %3, i32 %5, [3 x %struct.BMLoop*]* %7), !dbg !3265
  ret %struct.DerivedMesh* %call, !dbg !3266
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh* %source) #0 !dbg !3267 {
entry:
  %source.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %source, %struct.DerivedMesh** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %source.addr, metadata !3270, metadata !DIExpression()), !dbg !3271
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3272
  %call = call %struct.DerivedMesh* @cddm_copy_ex(%struct.DerivedMesh* %0, i32 0), !dbg !3273
  ret %struct.DerivedMesh* %call, !dbg !3274
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.DerivedMesh* @cddm_copy_ex(%struct.DerivedMesh* %source, i32 %faces_from_tessfaces) #0 !dbg !3275 {
entry:
  %source.addr = alloca %struct.DerivedMesh*, align 8
  %faces_from_tessfaces.addr = alloca i32, align 4
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %numVerts = alloca i32, align 4
  %numEdges = alloca i32, align 4
  %numTessFaces = alloca i32, align 4
  %numLoops = alloca i32, align 4
  %numPolys = alloca i32, align 4
  store %struct.DerivedMesh* %source, %struct.DerivedMesh** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %source.addr, metadata !3278, metadata !DIExpression()), !dbg !3279
  store i32 %faces_from_tessfaces, i32* %faces_from_tessfaces.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %faces_from_tessfaces.addr, metadata !3280, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !3282, metadata !DIExpression()), !dbg !3283
  %call = call %struct.CDDerivedMesh* @cdDM_create(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0)), !dbg !3284
  store %struct.CDDerivedMesh* %call, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3283
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !3285, metadata !DIExpression()), !dbg !3286
  %0 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3287
  %dm1 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %0, i32 0, i32 0, !dbg !3288
  store %struct.DerivedMesh* %dm1, %struct.DerivedMesh** %dm, align 8, !dbg !3286
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !3289, metadata !DIExpression()), !dbg !3290
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3291
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 5, !dbg !3292
  %2 = load i32, i32* %numVertData, align 8, !dbg !3292
  store i32 %2, i32* %numVerts, align 4, !dbg !3290
  call void @llvm.dbg.declare(metadata i32* %numEdges, metadata !3293, metadata !DIExpression()), !dbg !3294
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3295
  %numEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 6, !dbg !3296
  %4 = load i32, i32* %numEdgeData, align 4, !dbg !3296
  store i32 %4, i32* %numEdges, align 4, !dbg !3294
  call void @llvm.dbg.declare(metadata i32* %numTessFaces, metadata !3297, metadata !DIExpression()), !dbg !3298
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3299
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 7, !dbg !3300
  %6 = load i32, i32* %numTessFaceData, align 8, !dbg !3300
  store i32 %6, i32* %numTessFaces, align 4, !dbg !3298
  call void @llvm.dbg.declare(metadata i32* %numLoops, metadata !3301, metadata !DIExpression()), !dbg !3302
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3303
  %numLoopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 8, !dbg !3304
  %8 = load i32, i32* %numLoopData, align 4, !dbg !3304
  store i32 %8, i32* %numLoops, align 4, !dbg !3302
  call void @llvm.dbg.declare(metadata i32* %numPolys, metadata !3305, metadata !DIExpression()), !dbg !3306
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3307
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 9, !dbg !3308
  %10 = load i32, i32* %numPolyData, align 8, !dbg !3308
  store i32 %10, i32* %numPolys, align 4, !dbg !3306
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3309
  %getVertDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %11, i32 0, i32 50, !dbg !3310
  %12 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray, align 8, !dbg !3310
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3311
  %call2 = call i8* %12(%struct.DerivedMesh* %13, i32 7), !dbg !3309
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3312
  %getEdgeDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %14, i32 0, i32 51, !dbg !3313
  %15 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getEdgeDataArray, align 8, !dbg !3313
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3314
  %call3 = call i8* %15(%struct.DerivedMesh* %16, i32 7), !dbg !3312
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3315
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %17, i32 0, i32 52, !dbg !3316
  %18 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !3316
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3317
  %call4 = call i8* %18(%struct.DerivedMesh* %19, i32 7), !dbg !3315
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3318
  %getPolyDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %20, i32 0, i32 54, !dbg !3319
  %21 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getPolyDataArray, align 8, !dbg !3319
  %22 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3320
  %call5 = call i8* %21(%struct.DerivedMesh* %22, i32 7), !dbg !3318
  %23 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3321
  %24 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3322
  %25 = load i32, i32* %numVerts, align 4, !dbg !3323
  %26 = load i32, i32* %numEdges, align 4, !dbg !3324
  %27 = load i32, i32* %numTessFaces, align 4, !dbg !3325
  %28 = load i32, i32* %numLoops, align 4, !dbg !3326
  %29 = load i32, i32* %numPolys, align 4, !dbg !3327
  call void @DM_from_template(%struct.DerivedMesh* %23, %struct.DerivedMesh* %24, i32 0, i32 %25, i32 %26, i32 %27, i32 %28, i32 %29), !dbg !3328
  %30 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3329
  %deformedOnly = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %30, i32 0, i32 11, !dbg !3330
  %31 = load i32, i32* %deformedOnly, align 8, !dbg !3330
  %32 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3331
  %deformedOnly6 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %32, i32 0, i32 11, !dbg !3332
  store i32 %31, i32* %deformedOnly6, align 8, !dbg !3333
  %33 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3334
  %cd_flag = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %33, i32 0, i32 19, !dbg !3335
  %34 = load i8, i8* %cd_flag, align 8, !dbg !3335
  %35 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3336
  %cd_flag7 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %35, i32 0, i32 19, !dbg !3337
  store i8 %34, i8* %cd_flag7, align 8, !dbg !3338
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3339
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %36, i32 0, i32 16, !dbg !3340
  %37 = load i32, i32* %dirty, align 8, !dbg !3340
  %38 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3341
  %dirty8 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %38, i32 0, i32 16, !dbg !3342
  store i32 %37, i32* %dirty8, align 8, !dbg !3343
  %39 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3344
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %39, i32 0, i32 0, !dbg !3345
  %40 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3346
  %vertData9 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %40, i32 0, i32 0, !dbg !3347
  %41 = load i32, i32* %numVerts, align 4, !dbg !3348
  call void @CustomData_copy_data(%struct.CustomData* %vertData, %struct.CustomData* %vertData9, i32 0, i32 0, i32 %41), !dbg !3349
  %42 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3350
  %edgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %42, i32 0, i32 1, !dbg !3351
  %43 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3352
  %edgeData10 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %43, i32 0, i32 1, !dbg !3353
  %44 = load i32, i32* %numEdges, align 4, !dbg !3354
  call void @CustomData_copy_data(%struct.CustomData* %edgeData, %struct.CustomData* %edgeData10, i32 0, i32 0, i32 %44), !dbg !3355
  %45 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3356
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %45, i32 0, i32 2, !dbg !3357
  %46 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3358
  %faceData11 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %46, i32 0, i32 2, !dbg !3359
  %47 = load i32, i32* %numTessFaces, align 4, !dbg !3360
  call void @CustomData_copy_data(%struct.CustomData* %faceData, %struct.CustomData* %faceData11, i32 0, i32 0, i32 %47), !dbg !3361
  %48 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3362
  %dupVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %48, i32 0, i32 41, !dbg !3363
  %49 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %dupVertArray, align 8, !dbg !3363
  %50 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3364
  %call12 = call %struct.MVert* %49(%struct.DerivedMesh* %50), !dbg !3362
  %51 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3365
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %51, i32 0, i32 1, !dbg !3366
  store %struct.MVert* %call12, %struct.MVert** %mvert, align 8, !dbg !3367
  %52 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3368
  %dupEdgeArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %52, i32 0, i32 42, !dbg !3369
  %53 = load %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)** %dupEdgeArray, align 8, !dbg !3369
  %54 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3370
  %call13 = call %struct.MEdge* %53(%struct.DerivedMesh* %54), !dbg !3368
  %55 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3371
  %medge = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %55, i32 0, i32 2, !dbg !3372
  store %struct.MEdge* %call13, %struct.MEdge** %medge, align 8, !dbg !3373
  %56 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3374
  %dupTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %56, i32 0, i32 43, !dbg !3375
  %57 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %dupTessFaceArray, align 8, !dbg !3375
  %58 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3376
  %call14 = call %struct.MFace* %57(%struct.DerivedMesh* %58), !dbg !3374
  %59 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3377
  %mface = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %59, i32 0, i32 3, !dbg !3378
  store %struct.MFace* %call14, %struct.MFace** %mface, align 8, !dbg !3379
  %60 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3380
  %vertData15 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %60, i32 0, i32 0, !dbg !3381
  %61 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3382
  %mvert16 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %61, i32 0, i32 1, !dbg !3383
  %62 = load %struct.MVert*, %struct.MVert** %mvert16, align 8, !dbg !3383
  %63 = bitcast %struct.MVert* %62 to i8*, !dbg !3382
  %64 = load i32, i32* %numVerts, align 4, !dbg !3384
  %call17 = call i8* @CustomData_add_layer(%struct.CustomData* %vertData15, i32 0, i32 0, i8* %63, i32 %64), !dbg !3385
  %65 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3386
  %edgeData18 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %65, i32 0, i32 1, !dbg !3387
  %66 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3388
  %medge19 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %66, i32 0, i32 2, !dbg !3389
  %67 = load %struct.MEdge*, %struct.MEdge** %medge19, align 8, !dbg !3389
  %68 = bitcast %struct.MEdge* %67 to i8*, !dbg !3388
  %69 = load i32, i32* %numEdges, align 4, !dbg !3390
  %call20 = call i8* @CustomData_add_layer(%struct.CustomData* %edgeData18, i32 3, i32 0, i8* %68, i32 %69), !dbg !3391
  %70 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3392
  %faceData21 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %70, i32 0, i32 2, !dbg !3393
  %71 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3394
  %mface22 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %71, i32 0, i32 3, !dbg !3395
  %72 = load %struct.MFace*, %struct.MFace** %mface22, align 8, !dbg !3395
  %73 = bitcast %struct.MFace* %72 to i8*, !dbg !3394
  %74 = load i32, i32* %numTessFaces, align 4, !dbg !3396
  %call23 = call i8* @CustomData_add_layer(%struct.CustomData* %faceData21, i32 4, i32 0, i8* %73, i32 %74), !dbg !3397
  %75 = load i32, i32* %faces_from_tessfaces.addr, align 4, !dbg !3398
  %tobool = icmp ne i32 %75, 0, !dbg !3398
  br i1 %tobool, label %if.else, label %if.then, !dbg !3400

if.then:                                          ; preds = %entry
  %76 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3401
  %77 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3402
  call void @DM_DupPolys(%struct.DerivedMesh* %76, %struct.DerivedMesh* %77), !dbg !3403
  br label %if.end, !dbg !3403

if.else:                                          ; preds = %entry
  %78 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3404
  call void @CDDM_tessfaces_to_faces(%struct.DerivedMesh* %78), !dbg !3405
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %79 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3406
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %79, i32 0, i32 3, !dbg !3407
  %call24 = call i8* @CustomData_get_layer(%struct.CustomData* %loopData, i32 26), !dbg !3408
  %80 = bitcast i8* %call24 to %struct.MLoop*, !dbg !3408
  %81 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3409
  %mloop = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %81, i32 0, i32 4, !dbg !3410
  store %struct.MLoop* %80, %struct.MLoop** %mloop, align 8, !dbg !3411
  %82 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3412
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %82, i32 0, i32 4, !dbg !3413
  %call25 = call i8* @CustomData_get_layer(%struct.CustomData* %polyData, i32 25), !dbg !3414
  %83 = bitcast i8* %call25 to %struct.MPoly*, !dbg !3414
  %84 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3415
  %mpoly = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %84, i32 0, i32 5, !dbg !3416
  store %struct.MPoly* %83, %struct.MPoly** %mpoly, align 8, !dbg !3417
  %85 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3418
  ret %struct.DerivedMesh* %85, !dbg !3419
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @CDDM_copy_from_tessface(%struct.DerivedMesh* %source) #0 !dbg !3420 {
entry:
  %source.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %source, %struct.DerivedMesh** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %source.addr, metadata !3421, metadata !DIExpression()), !dbg !3422
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3423
  %call = call %struct.DerivedMesh* @cddm_copy_ex(%struct.DerivedMesh* %0, i32 1), !dbg !3424
  ret %struct.DerivedMesh* %call, !dbg !3425
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @CDDM_from_template(%struct.DerivedMesh* %source, i32 %numVerts, i32 %numEdges, i32 %numTessFaces, i32 %numLoops, i32 %numPolys) #0 !dbg !3426 {
entry:
  %source.addr = alloca %struct.DerivedMesh*, align 8
  %numVerts.addr = alloca i32, align 4
  %numEdges.addr = alloca i32, align 4
  %numTessFaces.addr = alloca i32, align 4
  %numLoops.addr = alloca i32, align 4
  %numPolys.addr = alloca i32, align 4
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %source, %struct.DerivedMesh** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %source.addr, metadata !3429, metadata !DIExpression()), !dbg !3430
  store i32 %numVerts, i32* %numVerts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numVerts.addr, metadata !3431, metadata !DIExpression()), !dbg !3432
  store i32 %numEdges, i32* %numEdges.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numEdges.addr, metadata !3433, metadata !DIExpression()), !dbg !3434
  store i32 %numTessFaces, i32* %numTessFaces.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numTessFaces.addr, metadata !3435, metadata !DIExpression()), !dbg !3436
  store i32 %numLoops, i32* %numLoops.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numLoops.addr, metadata !3437, metadata !DIExpression()), !dbg !3438
  store i32 %numPolys, i32* %numPolys.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numPolys.addr, metadata !3439, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !3441, metadata !DIExpression()), !dbg !3442
  %call = call %struct.CDDerivedMesh* @cdDM_create(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)), !dbg !3443
  store %struct.CDDerivedMesh* %call, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3442
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !3444, metadata !DIExpression()), !dbg !3445
  %0 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3446
  %dm1 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %0, i32 0, i32 0, !dbg !3447
  store %struct.DerivedMesh* %dm1, %struct.DerivedMesh** %dm, align 8, !dbg !3445
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3448
  %getVertDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 50, !dbg !3449
  %2 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray, align 8, !dbg !3449
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3450
  %call2 = call i8* %2(%struct.DerivedMesh* %3, i32 7), !dbg !3448
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3451
  %getEdgeDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 51, !dbg !3452
  %5 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getEdgeDataArray, align 8, !dbg !3452
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3453
  %call3 = call i8* %5(%struct.DerivedMesh* %6, i32 7), !dbg !3451
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3454
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 52, !dbg !3455
  %8 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !3455
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3456
  %call4 = call i8* %8(%struct.DerivedMesh* %9, i32 7), !dbg !3454
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3457
  %getPolyDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 54, !dbg !3458
  %11 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getPolyDataArray, align 8, !dbg !3458
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3459
  %call5 = call i8* %11(%struct.DerivedMesh* %12, i32 7), !dbg !3457
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3460
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3461
  %15 = load i32, i32* %numVerts.addr, align 4, !dbg !3462
  %16 = load i32, i32* %numEdges.addr, align 4, !dbg !3463
  %17 = load i32, i32* %numTessFaces.addr, align 4, !dbg !3464
  %18 = load i32, i32* %numLoops.addr, align 4, !dbg !3465
  %19 = load i32, i32* %numPolys.addr, align 4, !dbg !3466
  call void @DM_from_template(%struct.DerivedMesh* %13, %struct.DerivedMesh* %14, i32 0, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19), !dbg !3467
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3468
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %20, i32 0, i32 0, !dbg !3469
  %21 = load i32, i32* %numVerts.addr, align 4, !dbg !3470
  %call6 = call i8* @CustomData_add_layer(%struct.CustomData* %vertData, i32 0, i32 1, i8* null, i32 %21), !dbg !3471
  %22 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3472
  %edgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %22, i32 0, i32 1, !dbg !3473
  %23 = load i32, i32* %numEdges.addr, align 4, !dbg !3474
  %call7 = call i8* @CustomData_add_layer(%struct.CustomData* %edgeData, i32 3, i32 1, i8* null, i32 %23), !dbg !3475
  %24 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3476
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %24, i32 0, i32 2, !dbg !3477
  %25 = load i32, i32* %numTessFaces.addr, align 4, !dbg !3478
  %call8 = call i8* @CustomData_add_layer(%struct.CustomData* %faceData, i32 4, i32 1, i8* null, i32 %25), !dbg !3479
  %26 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3480
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %26, i32 0, i32 3, !dbg !3481
  %27 = load i32, i32* %numLoops.addr, align 4, !dbg !3482
  %call9 = call i8* @CustomData_add_layer(%struct.CustomData* %loopData, i32 26, i32 1, i8* null, i32 %27), !dbg !3483
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3484
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %28, i32 0, i32 4, !dbg !3485
  %29 = load i32, i32* %numPolys.addr, align 4, !dbg !3486
  %call10 = call i8* @CustomData_add_layer(%struct.CustomData* %polyData, i32 25, i32 1, i8* null, i32 %29), !dbg !3487
  %30 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3488
  %vertData11 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %30, i32 0, i32 0, !dbg !3490
  %call12 = call i8* @CustomData_get_layer(%struct.CustomData* %vertData11, i32 7), !dbg !3491
  %tobool = icmp ne i8* %call12, null, !dbg !3491
  br i1 %tobool, label %if.end, label %if.then, !dbg !3492

if.then:                                          ; preds = %entry
  %31 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3493
  %vertData13 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %31, i32 0, i32 0, !dbg !3494
  %32 = load i32, i32* %numVerts.addr, align 4, !dbg !3495
  %call14 = call i8* @CustomData_add_layer(%struct.CustomData* %vertData13, i32 7, i32 1, i8* null, i32 %32), !dbg !3496
  br label %if.end, !dbg !3496

if.end:                                           ; preds = %if.then, %entry
  %33 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3497
  %edgeData15 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %33, i32 0, i32 1, !dbg !3499
  %call16 = call i8* @CustomData_get_layer(%struct.CustomData* %edgeData15, i32 7), !dbg !3500
  %tobool17 = icmp ne i8* %call16, null, !dbg !3500
  br i1 %tobool17, label %if.end21, label %if.then18, !dbg !3501

if.then18:                                        ; preds = %if.end
  %34 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3502
  %edgeData19 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %34, i32 0, i32 1, !dbg !3503
  %35 = load i32, i32* %numEdges.addr, align 4, !dbg !3504
  %call20 = call i8* @CustomData_add_layer(%struct.CustomData* %edgeData19, i32 7, i32 1, i8* null, i32 %35), !dbg !3505
  br label %if.end21, !dbg !3505

if.end21:                                         ; preds = %if.then18, %if.end
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3506
  %faceData22 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %36, i32 0, i32 2, !dbg !3508
  %call23 = call i8* @CustomData_get_layer(%struct.CustomData* %faceData22, i32 7), !dbg !3509
  %tobool24 = icmp ne i8* %call23, null, !dbg !3509
  br i1 %tobool24, label %if.end28, label %if.then25, !dbg !3510

if.then25:                                        ; preds = %if.end21
  %37 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3511
  %faceData26 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %37, i32 0, i32 2, !dbg !3512
  %38 = load i32, i32* %numTessFaces.addr, align 4, !dbg !3513
  %call27 = call i8* @CustomData_add_layer(%struct.CustomData* %faceData26, i32 7, i32 1, i8* null, i32 %38), !dbg !3514
  br label %if.end28, !dbg !3514

if.end28:                                         ; preds = %if.then25, %if.end21
  %39 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3515
  %vertData29 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %39, i32 0, i32 0, !dbg !3516
  %call30 = call i8* @CustomData_get_layer(%struct.CustomData* %vertData29, i32 0), !dbg !3517
  %40 = bitcast i8* %call30 to %struct.MVert*, !dbg !3517
  %41 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3518
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %41, i32 0, i32 1, !dbg !3519
  store %struct.MVert* %40, %struct.MVert** %mvert, align 8, !dbg !3520
  %42 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3521
  %edgeData31 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %42, i32 0, i32 1, !dbg !3522
  %call32 = call i8* @CustomData_get_layer(%struct.CustomData* %edgeData31, i32 3), !dbg !3523
  %43 = bitcast i8* %call32 to %struct.MEdge*, !dbg !3523
  %44 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3524
  %medge = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %44, i32 0, i32 2, !dbg !3525
  store %struct.MEdge* %43, %struct.MEdge** %medge, align 8, !dbg !3526
  %45 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3527
  %faceData33 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %45, i32 0, i32 2, !dbg !3528
  %call34 = call i8* @CustomData_get_layer(%struct.CustomData* %faceData33, i32 4), !dbg !3529
  %46 = bitcast i8* %call34 to %struct.MFace*, !dbg !3529
  %47 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3530
  %mface = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %47, i32 0, i32 3, !dbg !3531
  store %struct.MFace* %46, %struct.MFace** %mface, align 8, !dbg !3532
  %48 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3533
  %loopData35 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %48, i32 0, i32 3, !dbg !3534
  %call36 = call i8* @CustomData_get_layer(%struct.CustomData* %loopData35, i32 26), !dbg !3535
  %49 = bitcast i8* %call36 to %struct.MLoop*, !dbg !3535
  %50 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3536
  %mloop = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %50, i32 0, i32 4, !dbg !3537
  store %struct.MLoop* %49, %struct.MLoop** %mloop, align 8, !dbg !3538
  %51 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3539
  %polyData37 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %51, i32 0, i32 4, !dbg !3540
  %call38 = call i8* @CustomData_get_layer(%struct.CustomData* %polyData37, i32 25), !dbg !3541
  %52 = bitcast i8* %call38 to %struct.MPoly*, !dbg !3541
  %53 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3542
  %mpoly = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %53, i32 0, i32 5, !dbg !3543
  store %struct.MPoly* %52, %struct.MPoly** %mpoly, align 8, !dbg !3544
  %54 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3545
  ret %struct.DerivedMesh* %54, !dbg !3546
}

declare dso_local void @DM_from_template(%struct.DerivedMesh*, %struct.DerivedMesh*, i32, i32, i32, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CDDM_apply_vert_coords(%struct.DerivedMesh* %dm, [3 x float]* %vertCoords) #0 !dbg !3547 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %vertCoords.addr = alloca [3 x float]*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %vert = alloca %struct.MVert*, align 8
  %i = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3548, metadata !DIExpression()), !dbg !3549
  store [3 x float]* %vertCoords, [3 x float]** %vertCoords.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vertCoords.addr, metadata !3550, metadata !DIExpression()), !dbg !3551
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !3552, metadata !DIExpression()), !dbg !3553
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3554
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !3555
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3553
  call void @llvm.dbg.declare(metadata %struct.MVert** %vert, metadata !3556, metadata !DIExpression()), !dbg !3557
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3558, metadata !DIExpression()), !dbg !3559
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3560
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 0, !dbg !3561
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3562
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 5, !dbg !3563
  %4 = load i32, i32* %numVertData, align 8, !dbg !3563
  %call = call i8* @CustomData_duplicate_referenced_layer(%struct.CustomData* %vertData, i32 0, i32 %4), !dbg !3564
  %5 = bitcast i8* %call to %struct.MVert*, !dbg !3564
  store %struct.MVert* %5, %struct.MVert** %vert, align 8, !dbg !3565
  %6 = load %struct.MVert*, %struct.MVert** %vert, align 8, !dbg !3566
  %7 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3567
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %7, i32 0, i32 1, !dbg !3568
  store %struct.MVert* %6, %struct.MVert** %mvert, align 8, !dbg !3569
  store i32 0, i32* %i, align 4, !dbg !3570
  br label %for.cond, !dbg !3572

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !3573
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3575
  %numVertData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 5, !dbg !3576
  %10 = load i32, i32* %numVertData1, align 8, !dbg !3576
  %cmp = icmp slt i32 %8, %10, !dbg !3577
  br i1 %cmp, label %for.body, label %for.end, !dbg !3578

for.body:                                         ; preds = %for.cond
  %11 = load %struct.MVert*, %struct.MVert** %vert, align 8, !dbg !3579
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %11, i32 0, i32 0, !dbg !3580
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3579
  %12 = load [3 x float]*, [3 x float]** %vertCoords.addr, align 8, !dbg !3581
  %13 = load i32, i32* %i, align 4, !dbg !3582
  %idxprom = sext i32 %13 to i64, !dbg !3581
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %12, i64 %idxprom, !dbg !3581
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !3581
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay2), !dbg !3583
  br label %for.inc, !dbg !3583

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !3584
  %inc = add nsw i32 %14, 1, !dbg !3584
  store i32 %inc, i32* %i, align 4, !dbg !3584
  %15 = load %struct.MVert*, %struct.MVert** %vert, align 8, !dbg !3585
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %15, i32 1, !dbg !3585
  store %struct.MVert* %incdec.ptr, %struct.MVert** %vert, align 8, !dbg !3585
  br label %for.cond, !dbg !3586, !llvm.loop !3587

for.end:                                          ; preds = %for.cond
  %16 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3589
  %dm3 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %16, i32 0, i32 0, !dbg !3590
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm3, i32 0, i32 16, !dbg !3591
  %17 = load i32, i32* %dirty, align 8, !dbg !3592
  %or = or i32 %17, 4, !dbg !3592
  store i32 %or, i32* %dirty, align 8, !dbg !3592
  ret void, !dbg !3593
}

declare dso_local i8* @CustomData_duplicate_referenced_layer(%struct.CustomData*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !3594 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3598, metadata !DIExpression()), !dbg !3599
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3600, metadata !DIExpression()), !dbg !3601
  %0 = load float*, float** %a.addr, align 8, !dbg !3602
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3602
  %1 = load float, float* %arrayidx, align 4, !dbg !3602
  %2 = load float*, float** %r.addr, align 8, !dbg !3603
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3603
  store float %1, float* %arrayidx1, align 4, !dbg !3604
  %3 = load float*, float** %a.addr, align 8, !dbg !3605
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !3605
  %4 = load float, float* %arrayidx2, align 4, !dbg !3605
  %5 = load float*, float** %r.addr, align 8, !dbg !3606
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !3606
  store float %4, float* %arrayidx3, align 4, !dbg !3607
  %6 = load float*, float** %a.addr, align 8, !dbg !3608
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !3608
  %7 = load float, float* %arrayidx4, align 4, !dbg !3608
  %8 = load float*, float** %r.addr, align 8, !dbg !3609
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !3609
  store float %7, float* %arrayidx5, align 4, !dbg !3610
  ret void, !dbg !3611
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CDDM_apply_vert_normals(%struct.DerivedMesh* %dm, [3 x i16]* %vertNormals) #0 !dbg !3612 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %vertNormals.addr = alloca [3 x i16]*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %vert = alloca %struct.MVert*, align 8
  %i = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3616, metadata !DIExpression()), !dbg !3617
  store [3 x i16]* %vertNormals, [3 x i16]** %vertNormals.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x i16]** %vertNormals.addr, metadata !3618, metadata !DIExpression()), !dbg !3619
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !3620, metadata !DIExpression()), !dbg !3621
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3622
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !3623
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3621
  call void @llvm.dbg.declare(metadata %struct.MVert** %vert, metadata !3624, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3626, metadata !DIExpression()), !dbg !3627
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3628
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 0, !dbg !3629
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3630
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 5, !dbg !3631
  %4 = load i32, i32* %numVertData, align 8, !dbg !3631
  %call = call i8* @CustomData_duplicate_referenced_layer(%struct.CustomData* %vertData, i32 0, i32 %4), !dbg !3632
  %5 = bitcast i8* %call to %struct.MVert*, !dbg !3632
  store %struct.MVert* %5, %struct.MVert** %vert, align 8, !dbg !3633
  %6 = load %struct.MVert*, %struct.MVert** %vert, align 8, !dbg !3634
  %7 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3635
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %7, i32 0, i32 1, !dbg !3636
  store %struct.MVert* %6, %struct.MVert** %mvert, align 8, !dbg !3637
  store i32 0, i32* %i, align 4, !dbg !3638
  br label %for.cond, !dbg !3640

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !3641
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3643
  %numVertData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 5, !dbg !3644
  %10 = load i32, i32* %numVertData1, align 8, !dbg !3644
  %cmp = icmp slt i32 %8, %10, !dbg !3645
  br i1 %cmp, label %for.body, label %for.end, !dbg !3646

for.body:                                         ; preds = %for.cond
  %11 = load %struct.MVert*, %struct.MVert** %vert, align 8, !dbg !3647
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %11, i32 0, i32 1, !dbg !3648
  %arraydecay = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !3647
  %12 = load [3 x i16]*, [3 x i16]** %vertNormals.addr, align 8, !dbg !3649
  %13 = load i32, i32* %i, align 4, !dbg !3650
  %idxprom = sext i32 %13 to i64, !dbg !3649
  %arrayidx = getelementptr inbounds [3 x i16], [3 x i16]* %12, i64 %idxprom, !dbg !3649
  %arraydecay2 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx, i64 0, i64 0, !dbg !3649
  call void @copy_v3_v3_short(i16* %arraydecay, i16* %arraydecay2), !dbg !3651
  br label %for.inc, !dbg !3651

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !3652
  %inc = add nsw i32 %14, 1, !dbg !3652
  store i32 %inc, i32* %i, align 4, !dbg !3652
  %15 = load %struct.MVert*, %struct.MVert** %vert, align 8, !dbg !3653
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %15, i32 1, !dbg !3653
  store %struct.MVert* %incdec.ptr, %struct.MVert** %vert, align 8, !dbg !3653
  br label %for.cond, !dbg !3654, !llvm.loop !3655

for.end:                                          ; preds = %for.cond
  %16 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3657
  %dm3 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %16, i32 0, i32 0, !dbg !3658
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm3, i32 0, i32 16, !dbg !3659
  %17 = load i32, i32* %dirty, align 8, !dbg !3660
  %and = and i32 %17, -5, !dbg !3660
  store i32 %and, i32* %dirty, align 8, !dbg !3660
  ret void, !dbg !3661
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3_short(i16* %r, i16* %a) #0 !dbg !3662 {
entry:
  %r.addr = alloca i16*, align 8
  %a.addr = alloca i16*, align 8
  store i16* %r, i16** %r.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %r.addr, metadata !3665, metadata !DIExpression()), !dbg !3666
  store i16* %a, i16** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %a.addr, metadata !3667, metadata !DIExpression()), !dbg !3668
  %0 = load i16*, i16** %a.addr, align 8, !dbg !3669
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 0, !dbg !3669
  %1 = load i16, i16* %arrayidx, align 2, !dbg !3669
  %2 = load i16*, i16** %r.addr, align 8, !dbg !3670
  %arrayidx1 = getelementptr inbounds i16, i16* %2, i64 0, !dbg !3670
  store i16 %1, i16* %arrayidx1, align 2, !dbg !3671
  %3 = load i16*, i16** %a.addr, align 8, !dbg !3672
  %arrayidx2 = getelementptr inbounds i16, i16* %3, i64 1, !dbg !3672
  %4 = load i16, i16* %arrayidx2, align 2, !dbg !3672
  %5 = load i16*, i16** %r.addr, align 8, !dbg !3673
  %arrayidx3 = getelementptr inbounds i16, i16* %5, i64 1, !dbg !3673
  store i16 %4, i16* %arrayidx3, align 2, !dbg !3674
  %6 = load i16*, i16** %a.addr, align 8, !dbg !3675
  %arrayidx4 = getelementptr inbounds i16, i16* %6, i64 2, !dbg !3675
  %7 = load i16, i16* %arrayidx4, align 2, !dbg !3675
  %8 = load i16*, i16** %r.addr, align 8, !dbg !3676
  %arrayidx5 = getelementptr inbounds i16, i16* %8, i64 2, !dbg !3676
  store i16 %7, i16* %arrayidx5, align 2, !dbg !3677
  ret void, !dbg !3678
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CDDM_calc_normals_mapping_ex(%struct.DerivedMesh* %dm, i8 zeroext %only_face_normals) #0 !dbg !3679 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %only_face_normals.addr = alloca i8, align 1
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %face_nors = alloca [3 x float]*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3680, metadata !DIExpression()), !dbg !3681
  store i8 %only_face_normals, i8* %only_face_normals.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %only_face_normals.addr, metadata !3682, metadata !DIExpression()), !dbg !3683
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !3684, metadata !DIExpression()), !dbg !3685
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3686
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !3687
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3685
  call void @llvm.dbg.declare(metadata [3 x float]** %face_nors, metadata !3688, metadata !DIExpression()), !dbg !3689
  store [3 x float]* null, [3 x float]** %face_nors, align 8, !dbg !3689
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3690
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 5, !dbg !3692
  %3 = load i32, i32* %numVertData, align 8, !dbg !3692
  %cmp = icmp eq i32 %3, 0, !dbg !3693
  br i1 %cmp, label %if.then, label %if.end, !dbg !3694

if.then:                                          ; preds = %entry
  %4 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3695
  %dm1 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %4, i32 0, i32 0, !dbg !3697
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm1, i32 0, i32 16, !dbg !3698
  %5 = load i32, i32* %dirty, align 8, !dbg !3699
  %and = and i32 %5, -5, !dbg !3699
  store i32 %and, i32* %dirty, align 8, !dbg !3699
  br label %return, !dbg !3700

if.end:                                           ; preds = %entry
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3701
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 7, !dbg !3703
  %7 = load i32, i32* %numTessFaceData, align 8, !dbg !3703
  %cmp2 = icmp eq i32 %7, 0, !dbg !3704
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !3705

if.then3:                                         ; preds = %if.end
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3706
  call void @CDDM_recalc_tessellation_ex(%struct.DerivedMesh* %8, i8 zeroext 0), !dbg !3708
  br label %if.end5, !dbg !3709

if.else:                                          ; preds = %if.end
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3710
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 2, !dbg !3712
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3713
  %numTessFaceData4 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 7, !dbg !3714
  %11 = load i32, i32* %numTessFaceData4, align 8, !dbg !3714
  call void @CustomData_free_layers(%struct.CustomData* %faceData, i32 8, i32 %11), !dbg !3715
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then3
  %12 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3716
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3717
  %numTessFaceData6 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 7, !dbg !3718
  %14 = load i32, i32* %numTessFaceData6, align 8, !dbg !3718
  %conv = sext i32 %14 to i64, !dbg !3717
  %mul = mul i64 12, %conv, !dbg !3719
  %call = call i8* %12(i64 %mul, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0)), !dbg !3716
  %15 = bitcast i8* %call to [3 x float]*, !dbg !3716
  store [3 x float]* %15, [3 x float]** %face_nors, align 8, !dbg !3720
  %16 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3721
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %16, i32 0, i32 1, !dbg !3722
  %17 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !3722
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3723
  %numVertData7 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %18, i32 0, i32 5, !dbg !3724
  %19 = load i32, i32* %numVertData7, align 8, !dbg !3724
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3725
  %call8 = call %struct.MLoop* @CDDM_get_loops(%struct.DerivedMesh* %20), !dbg !3726
  %21 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3727
  %call9 = call %struct.MPoly* @CDDM_get_polys(%struct.DerivedMesh* %21), !dbg !3728
  %22 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3729
  %numLoopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %22, i32 0, i32 8, !dbg !3730
  %23 = load i32, i32* %numLoopData, align 4, !dbg !3730
  %24 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3731
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %24, i32 0, i32 9, !dbg !3732
  %25 = load i32, i32* %numPolyData, align 8, !dbg !3732
  %26 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3733
  %mface = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %26, i32 0, i32 3, !dbg !3734
  %27 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !3734
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3735
  %numTessFaceData10 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %28, i32 0, i32 7, !dbg !3736
  %29 = load i32, i32* %numTessFaceData10, align 8, !dbg !3736
  %30 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3737
  %faceData11 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %30, i32 0, i32 2, !dbg !3738
  %call12 = call i8* @CustomData_get_layer(%struct.CustomData* %faceData11, i32 7), !dbg !3739
  %31 = bitcast i8* %call12 to i32*, !dbg !3739
  %32 = load [3 x float]*, [3 x float]** %face_nors, align 8, !dbg !3740
  %33 = load i8, i8* %only_face_normals.addr, align 1, !dbg !3741
  call void @BKE_mesh_calc_normals_mapping_ex(%struct.MVert* %17, i32 %19, %struct.MLoop* %call8, %struct.MPoly* %call9, i32 %23, i32 %25, [3 x float]* null, %struct.MFace* %27, i32 %29, i32* %31, [3 x float]* %32, i8 zeroext %33), !dbg !3742
  %34 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3743
  %faceData13 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %34, i32 0, i32 2, !dbg !3744
  %35 = load [3 x float]*, [3 x float]** %face_nors, align 8, !dbg !3745
  %36 = bitcast [3 x float]* %35 to i8*, !dbg !3745
  %37 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3746
  %numTessFaceData14 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %37, i32 0, i32 7, !dbg !3747
  %38 = load i32, i32* %numTessFaceData14, align 8, !dbg !3747
  %call15 = call i8* @CustomData_add_layer(%struct.CustomData* %faceData13, i32 8, i32 0, i8* %36, i32 %38), !dbg !3748
  %39 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3749
  %dm16 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %39, i32 0, i32 0, !dbg !3750
  %dirty17 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm16, i32 0, i32 16, !dbg !3751
  %40 = load i32, i32* %dirty17, align 8, !dbg !3752
  %and18 = and i32 %40, -5, !dbg !3752
  store i32 %and18, i32* %dirty17, align 8, !dbg !3752
  br label %return, !dbg !3753

return:                                           ; preds = %if.end5, %if.then
  ret void, !dbg !3753
}

declare dso_local void @CustomData_free_layers(%struct.CustomData*, i32, i32) #2

declare dso_local void @BKE_mesh_calc_normals_mapping_ex(%struct.MVert*, i32, %struct.MLoop*, %struct.MPoly*, i32, i32, [3 x float]*, %struct.MFace*, i32, i32*, [3 x float]*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MLoop* @CDDM_get_loops(%struct.DerivedMesh* %dm) #0 !dbg !3754 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3755, metadata !DIExpression()), !dbg !3756
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3757
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !3758
  %mloop = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %1, i32 0, i32 4, !dbg !3758
  %2 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !3758
  ret %struct.MLoop* %2, !dbg !3759
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MPoly* @CDDM_get_polys(%struct.DerivedMesh* %dm) #0 !dbg !3760 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3761, metadata !DIExpression()), !dbg !3762
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3763
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !3764
  %mpoly = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %1, i32 0, i32 5, !dbg !3764
  %2 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !3764
  ret %struct.MPoly* %2, !dbg !3765
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CDDM_calc_normals_mapping(%struct.DerivedMesh* %dm) #0 !dbg !3766 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %only_face_normals = alloca i8, align 1
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3767, metadata !DIExpression()), !dbg !3768
  call void @llvm.dbg.declare(metadata i8* %only_face_normals, metadata !3769, metadata !DIExpression()), !dbg !3770
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3771
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 0, !dbg !3772
  %call = call zeroext i8 @CustomData_is_referenced_layer(%struct.CustomData* %vertData, i32 0), !dbg !3773
  store i8 %call, i8* %only_face_normals, align 1, !dbg !3770
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3774
  %2 = load i8, i8* %only_face_normals, align 1, !dbg !3775
  call void @CDDM_calc_normals_mapping_ex(%struct.DerivedMesh* %1, i8 zeroext %2), !dbg !3776
  ret void, !dbg !3777
}

declare dso_local zeroext i8 @CustomData_is_referenced_layer(%struct.CustomData*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CDDM_calc_normals(%struct.DerivedMesh* %dm) #0 !dbg !3778 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3779, metadata !DIExpression()), !dbg !3780
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !3781, metadata !DIExpression()), !dbg !3782
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3783
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !3784
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3782
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3785
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 0, !dbg !3786
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3787
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 5, !dbg !3788
  %4 = load i32, i32* %numVertData, align 8, !dbg !3788
  %call = call i8* @CustomData_duplicate_referenced_layer(%struct.CustomData* %vertData, i32 0, i32 %4), !dbg !3789
  %5 = bitcast i8* %call to %struct.MVert*, !dbg !3789
  %6 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3790
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %6, i32 0, i32 1, !dbg !3791
  store %struct.MVert* %5, %struct.MVert** %mvert, align 8, !dbg !3792
  %7 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3793
  %mvert1 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %7, i32 0, i32 1, !dbg !3794
  %8 = load %struct.MVert*, %struct.MVert** %mvert1, align 8, !dbg !3794
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3795
  %numVertData2 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 5, !dbg !3796
  %10 = load i32, i32* %numVertData2, align 8, !dbg !3796
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3797
  %call3 = call %struct.MLoop* @CDDM_get_loops(%struct.DerivedMesh* %11), !dbg !3798
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3799
  %call4 = call %struct.MPoly* @CDDM_get_polys(%struct.DerivedMesh* %12), !dbg !3800
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3801
  %numLoopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 8, !dbg !3802
  %14 = load i32, i32* %numLoopData, align 4, !dbg !3802
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3803
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 9, !dbg !3804
  %16 = load i32, i32* %numPolyData, align 8, !dbg !3804
  call void @BKE_mesh_calc_normals_poly(%struct.MVert* %8, i32 %10, %struct.MLoop* %call3, %struct.MPoly* %call4, i32 %14, i32 %16, [3 x float]* null, i8 zeroext 0), !dbg !3805
  %17 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3806
  %dm5 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %17, i32 0, i32 0, !dbg !3807
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm5, i32 0, i32 16, !dbg !3808
  %18 = load i32, i32* %dirty, align 8, !dbg !3809
  %and = and i32 %18, -5, !dbg !3809
  store i32 %and, i32* %dirty, align 8, !dbg !3809
  ret void, !dbg !3810
}

declare dso_local void @BKE_mesh_calc_normals_poly(%struct.MVert*, i32, %struct.MLoop*, %struct.MPoly*, i32, i32, [3 x float]*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CDDM_calc_loop_normals(%struct.DerivedMesh* %dm, float %split_angle) #0 !dbg !3811 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %split_angle.addr = alloca float, align 4
  %mverts = alloca %struct.MVert*, align 8
  %medges = alloca %struct.MEdge*, align 8
  %mloops = alloca %struct.MLoop*, align 8
  %mpolys = alloca %struct.MPoly*, align 8
  %ldata = alloca %struct.CustomData*, align 8
  %pdata = alloca %struct.CustomData*, align 8
  %lnors = alloca [3 x float]*, align 8
  %pnors = alloca [3 x float]*, align 8
  %numVerts = alloca i32, align 4
  %numEdges = alloca i32, align 4
  %numLoops = alloca i32, align 4
  %numPolys = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3812, metadata !DIExpression()), !dbg !3813
  store float %split_angle, float* %split_angle.addr, align 4
  call void @llvm.dbg.declare(metadata float* %split_angle.addr, metadata !3814, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.declare(metadata %struct.MVert** %mverts, metadata !3816, metadata !DIExpression()), !dbg !3817
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3818
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 31, !dbg !3819
  %1 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !3819
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3820
  %call = call %struct.MVert* %1(%struct.DerivedMesh* %2), !dbg !3818
  store %struct.MVert* %call, %struct.MVert** %mverts, align 8, !dbg !3817
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medges, metadata !3821, metadata !DIExpression()), !dbg !3822
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3823
  %getEdgeArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 32, !dbg !3824
  %4 = load %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)** %getEdgeArray, align 8, !dbg !3824
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3825
  %call1 = call %struct.MEdge* %4(%struct.DerivedMesh* %5), !dbg !3823
  store %struct.MEdge* %call1, %struct.MEdge** %medges, align 8, !dbg !3822
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloops, metadata !3826, metadata !DIExpression()), !dbg !3827
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3828
  %getLoopArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 34, !dbg !3829
  %7 = load %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)** %getLoopArray, align 8, !dbg !3829
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3830
  %call2 = call %struct.MLoop* %7(%struct.DerivedMesh* %8), !dbg !3828
  store %struct.MLoop* %call2, %struct.MLoop** %mloops, align 8, !dbg !3827
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpolys, metadata !3831, metadata !DIExpression()), !dbg !3832
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3833
  %getPolyArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 35, !dbg !3834
  %10 = load %struct.MPoly* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)** %getPolyArray, align 8, !dbg !3834
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3835
  %call3 = call %struct.MPoly* %10(%struct.DerivedMesh* %11), !dbg !3833
  store %struct.MPoly* %call3, %struct.MPoly** %mpolys, align 8, !dbg !3832
  call void @llvm.dbg.declare(metadata %struct.CustomData** %ldata, metadata !3836, metadata !DIExpression()), !dbg !3837
  call void @llvm.dbg.declare(metadata %struct.CustomData** %pdata, metadata !3838, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.declare(metadata [3 x float]** %lnors, metadata !3840, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.declare(metadata [3 x float]** %pnors, metadata !3842, metadata !DIExpression()), !dbg !3843
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !3844, metadata !DIExpression()), !dbg !3845
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3846
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 23, !dbg !3847
  %13 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !3847
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3848
  %call4 = call i32 %13(%struct.DerivedMesh* %14), !dbg !3846
  store i32 %call4, i32* %numVerts, align 4, !dbg !3845
  call void @llvm.dbg.declare(metadata i32* %numEdges, metadata !3849, metadata !DIExpression()), !dbg !3850
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3851
  %getNumEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 24, !dbg !3852
  %16 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumEdges, align 8, !dbg !3852
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3853
  %call5 = call i32 %16(%struct.DerivedMesh* %17), !dbg !3851
  store i32 %call5, i32* %numEdges, align 4, !dbg !3850
  call void @llvm.dbg.declare(metadata i32* %numLoops, metadata !3854, metadata !DIExpression()), !dbg !3855
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3856
  %getNumLoops = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %18, i32 0, i32 26, !dbg !3857
  %19 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumLoops, align 8, !dbg !3857
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3858
  %call6 = call i32 %19(%struct.DerivedMesh* %20), !dbg !3856
  store i32 %call6, i32* %numLoops, align 4, !dbg !3855
  call void @llvm.dbg.declare(metadata i32* %numPolys, metadata !3859, metadata !DIExpression()), !dbg !3860
  %21 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3861
  %getNumPolys = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %21, i32 0, i32 27, !dbg !3862
  %22 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumPolys, align 8, !dbg !3862
  %23 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3863
  %call7 = call i32 %22(%struct.DerivedMesh* %23), !dbg !3861
  store i32 %call7, i32* %numPolys, align 4, !dbg !3860
  %24 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3864
  %getLoopDataLayout = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %24, i32 0, i32 58, !dbg !3865
  %25 = load %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)** %getLoopDataLayout, align 8, !dbg !3865
  %26 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3866
  %call8 = call %struct.CustomData* %25(%struct.DerivedMesh* %26), !dbg !3864
  store %struct.CustomData* %call8, %struct.CustomData** %ldata, align 8, !dbg !3867
  %27 = load %struct.CustomData*, %struct.CustomData** %ldata, align 8, !dbg !3868
  %call9 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %27, i32 8), !dbg !3870
  %tobool = icmp ne i8 %call9, 0, !dbg !3870
  br i1 %tobool, label %if.then, label %if.else, !dbg !3871

if.then:                                          ; preds = %entry
  %28 = load %struct.CustomData*, %struct.CustomData** %ldata, align 8, !dbg !3872
  %call10 = call i8* @CustomData_get_layer(%struct.CustomData* %28, i32 8), !dbg !3874
  %29 = bitcast i8* %call10 to [3 x float]*, !dbg !3874
  store [3 x float]* %29, [3 x float]** %lnors, align 8, !dbg !3875
  br label %if.end, !dbg !3876

if.else:                                          ; preds = %entry
  %30 = load %struct.CustomData*, %struct.CustomData** %ldata, align 8, !dbg !3877
  %31 = load i32, i32* %numLoops, align 4, !dbg !3879
  %call11 = call i8* @CustomData_add_layer(%struct.CustomData* %30, i32 8, i32 1, i8* null, i32 %31), !dbg !3880
  %32 = bitcast i8* %call11 to [3 x float]*, !dbg !3880
  store [3 x float]* %32, [3 x float]** %lnors, align 8, !dbg !3881
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %33 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3882
  %getPolyDataLayout = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %33, i32 0, i32 59, !dbg !3883
  %34 = load %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)** %getPolyDataLayout, align 8, !dbg !3883
  %35 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3884
  %call12 = call %struct.CustomData* %34(%struct.DerivedMesh* %35), !dbg !3882
  store %struct.CustomData* %call12, %struct.CustomData** %pdata, align 8, !dbg !3885
  %36 = load %struct.CustomData*, %struct.CustomData** %pdata, align 8, !dbg !3886
  %call13 = call i8* @CustomData_get_layer(%struct.CustomData* %36, i32 8), !dbg !3887
  %37 = bitcast i8* %call13 to [3 x float]*, !dbg !3887
  store [3 x float]* %37, [3 x float]** %pnors, align 8, !dbg !3888
  %38 = load [3 x float]*, [3 x float]** %pnors, align 8, !dbg !3889
  %tobool14 = icmp ne [3 x float]* %38, null, !dbg !3889
  br i1 %tobool14, label %if.end17, label %if.then15, !dbg !3891

if.then15:                                        ; preds = %if.end
  %39 = load %struct.CustomData*, %struct.CustomData** %pdata, align 8, !dbg !3892
  %40 = load i32, i32* %numPolys, align 4, !dbg !3894
  %call16 = call i8* @CustomData_add_layer(%struct.CustomData* %39, i32 8, i32 1, i8* null, i32 %40), !dbg !3895
  %41 = bitcast i8* %call16 to [3 x float]*, !dbg !3895
  store [3 x float]* %41, [3 x float]** %pnors, align 8, !dbg !3896
  br label %if.end17, !dbg !3897

if.end17:                                         ; preds = %if.then15, %if.end
  %42 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !3898
  %43 = load i32, i32* %numVerts, align 4, !dbg !3899
  %44 = load %struct.MLoop*, %struct.MLoop** %mloops, align 8, !dbg !3900
  %45 = load %struct.MPoly*, %struct.MPoly** %mpolys, align 8, !dbg !3901
  %46 = load i32, i32* %numLoops, align 4, !dbg !3902
  %47 = load i32, i32* %numPolys, align 4, !dbg !3903
  %48 = load [3 x float]*, [3 x float]** %pnors, align 8, !dbg !3904
  %49 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3905
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %49, i32 0, i32 16, !dbg !3906
  %50 = load i32, i32* %dirty, align 8, !dbg !3906
  %and = and i32 %50, 4, !dbg !3907
  %tobool18 = icmp ne i32 %and, 0, !dbg !3908
  %51 = zext i1 %tobool18 to i64, !dbg !3908
  %cond = select i1 %tobool18, i32 0, i32 1, !dbg !3908
  %conv = trunc i32 %cond to i8, !dbg !3908
  call void @BKE_mesh_calc_normals_poly(%struct.MVert* %42, i32 %43, %struct.MLoop* %44, %struct.MPoly* %45, i32 %46, i32 %47, [3 x float]* %48, i8 zeroext %conv), !dbg !3909
  %52 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3910
  %dirty19 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %52, i32 0, i32 16, !dbg !3911
  %53 = load i32, i32* %dirty19, align 8, !dbg !3912
  %and20 = and i32 %53, -5, !dbg !3912
  store i32 %and20, i32* %dirty19, align 8, !dbg !3912
  %54 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !3913
  %55 = load i32, i32* %numVerts, align 4, !dbg !3914
  %56 = load %struct.MEdge*, %struct.MEdge** %medges, align 8, !dbg !3915
  %57 = load i32, i32* %numEdges, align 4, !dbg !3916
  %58 = load %struct.MLoop*, %struct.MLoop** %mloops, align 8, !dbg !3917
  %59 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !3918
  %60 = load i32, i32* %numLoops, align 4, !dbg !3919
  %61 = load %struct.MPoly*, %struct.MPoly** %mpolys, align 8, !dbg !3920
  %62 = load [3 x float]*, [3 x float]** %pnors, align 8, !dbg !3921
  %63 = load i32, i32* %numPolys, align 4, !dbg !3922
  %64 = load float, float* %split_angle.addr, align 4, !dbg !3923
  call void @BKE_mesh_normals_loop_split(%struct.MVert* %54, i32 %55, %struct.MEdge* %56, i32 %57, %struct.MLoop* %58, [3 x float]* %59, i32 %60, %struct.MPoly* %61, [3 x float]* %62, i32 %63, float %64), !dbg !3924
  ret void, !dbg !3925
}

declare dso_local zeroext i8 @CustomData_has_layer(%struct.CustomData*, i32) #2

declare dso_local void @BKE_mesh_normals_loop_split(%struct.MVert*, i32, %struct.MEdge*, i32, %struct.MLoop*, [3 x float]*, i32, %struct.MPoly*, [3 x float]*, i32, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CDDM_calc_normals_tessface(%struct.DerivedMesh* %dm) #0 !dbg !3926 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %face_nors = alloca [3 x float]*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3927, metadata !DIExpression()), !dbg !3928
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !3929, metadata !DIExpression()), !dbg !3930
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3931
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !3932
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3930
  call void @llvm.dbg.declare(metadata [3 x float]** %face_nors, metadata !3933, metadata !DIExpression()), !dbg !3934
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3935
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 5, !dbg !3937
  %3 = load i32, i32* %numVertData, align 8, !dbg !3937
  %cmp = icmp eq i32 %3, 0, !dbg !3938
  br i1 %cmp, label %if.then, label %if.end, !dbg !3939

if.then:                                          ; preds = %entry
  br label %return, !dbg !3940

if.end:                                           ; preds = %entry
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3941
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 0, !dbg !3942
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3943
  %numVertData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 5, !dbg !3944
  %6 = load i32, i32* %numVertData1, align 8, !dbg !3944
  %call = call i8* @CustomData_duplicate_referenced_layer(%struct.CustomData* %vertData, i32 0, i32 %6), !dbg !3945
  %7 = bitcast i8* %call to %struct.MVert*, !dbg !3945
  %8 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3946
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %8, i32 0, i32 1, !dbg !3947
  store %struct.MVert* %7, %struct.MVert** %mvert, align 8, !dbg !3948
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3949
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 2, !dbg !3950
  %call2 = call i8* @CustomData_get_layer(%struct.CustomData* %faceData, i32 8), !dbg !3951
  %10 = bitcast i8* %call2 to [3 x float]*, !dbg !3951
  store [3 x float]* %10, [3 x float]** %face_nors, align 8, !dbg !3952
  %11 = load [3 x float]*, [3 x float]** %face_nors, align 8, !dbg !3953
  %tobool = icmp ne [3 x float]* %11, null, !dbg !3953
  br i1 %tobool, label %if.end6, label %if.then3, !dbg !3955

if.then3:                                         ; preds = %if.end
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3956
  %faceData4 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 2, !dbg !3958
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3959
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 7, !dbg !3960
  %14 = load i32, i32* %numTessFaceData, align 8, !dbg !3960
  %call5 = call i8* @CustomData_add_layer(%struct.CustomData* %faceData4, i32 8, i32 1, i8* null, i32 %14), !dbg !3961
  %15 = bitcast i8* %call5 to [3 x float]*, !dbg !3961
  store [3 x float]* %15, [3 x float]** %face_nors, align 8, !dbg !3962
  br label %if.end6, !dbg !3963

if.end6:                                          ; preds = %if.then3, %if.end
  %16 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3964
  %mvert7 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %16, i32 0, i32 1, !dbg !3965
  %17 = load %struct.MVert*, %struct.MVert** %mvert7, align 8, !dbg !3965
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3966
  %numVertData8 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %18, i32 0, i32 5, !dbg !3967
  %19 = load i32, i32* %numVertData8, align 8, !dbg !3967
  %20 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3968
  %mface = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %20, i32 0, i32 3, !dbg !3969
  %21 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !3969
  %22 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3970
  %numTessFaceData9 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %22, i32 0, i32 7, !dbg !3971
  %23 = load i32, i32* %numTessFaceData9, align 8, !dbg !3971
  %24 = load [3 x float]*, [3 x float]** %face_nors, align 8, !dbg !3972
  call void @BKE_mesh_calc_normals_tessface(%struct.MVert* %17, i32 %19, %struct.MFace* %21, i32 %23, [3 x float]* %24), !dbg !3973
  %25 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3974
  %dm10 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %25, i32 0, i32 0, !dbg !3975
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm10, i32 0, i32 16, !dbg !3976
  %26 = load i32, i32* %dirty, align 8, !dbg !3977
  %and = and i32 %26, -5, !dbg !3977
  store i32 %and, i32* %dirty, align 8, !dbg !3977
  br label %return, !dbg !3978

return:                                           ; preds = %if.end6, %if.then
  ret void, !dbg !3978
}

declare dso_local void @BKE_mesh_calc_normals_tessface(%struct.MVert*, i32, %struct.MFace*, i32, [3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @CDDM_merge_verts(%struct.DerivedMesh* %dm, i32* %vtargetmap, i32 %tot_vtargetmap, i32 %merge_mode) #0 !dbg !3979 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %vtargetmap.addr = alloca i32*, align 8
  %tot_vtargetmap.addr = alloca i32, align 4
  %merge_mode.addr = alloca i32, align 4
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %cddm2 = alloca %struct.CDDerivedMesh*, align 8
  %totvert = alloca i32, align 4
  %totedge = alloca i32, align 4
  %totloop = alloca i32, align 4
  %totpoly = alloca i32, align 4
  %totvert_final = alloca i32, align 4
  %mv = alloca %struct.MVert*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %oldv = alloca i32*, align 8
  %newv = alloca i32*, align 8
  %_mvert_index = alloca i32, align 4
  %_oldv_index = alloca i32, align 4
  %med = alloca %struct.MEdge*, align 8
  %medge = alloca %struct.MEdge*, align 8
  %olde = alloca i32*, align 8
  %newe = alloca i32*, align 8
  %_medge_index = alloca i32, align 4
  %_olde_index = alloca i32, align 4
  %ml = alloca %struct.MLoop*, align 8
  %mloop = alloca %struct.MLoop*, align 8
  %oldl = alloca i32*, align 8
  %_mloop_index = alloca i32, align 4
  %_oldl_index = alloca i32, align 4
  %mp = alloca %struct.MPoly*, align 8
  %mpoly = alloca %struct.MPoly*, align 8
  %oldp = alloca i32*, align 8
  %_mpoly_index = alloca i32, align 4
  %_oldp_index = alloca i32, align 4
  %ehash = alloca %struct.EdgeHash*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %c = alloca i32, align 4
  %poly_keys = alloca %struct.PolyKey*, align 8
  %poly_gset = alloca %struct.GSet*, align 8
  %v1 = alloca i32, align 4
  %v2 = alloca i32, align 4
  %eh_p = alloca i8**, align 8
  %mpgh = alloca %struct.PolyKey*, align 8
  %mp_new = alloca %struct.MPoly*, align 8
  %all_vertices_merged = alloca i8, align 1
  %i_poly = alloca i32, align 4
  %v_target = alloca i32, align 4
  %v_prev = alloca i32, align 4
  %found = alloca i8, align 1
  %pkey = alloca %struct.PolyKey, align 4
  %target_poly = alloca %struct.MPoly*, align 8
  %v1280 = alloca i32, align 4
  %v2281 = alloca i32, align 4
  %_n = alloca i32, align 4
  %_n336 = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3983, metadata !DIExpression()), !dbg !3984
  store i32* %vtargetmap, i32** %vtargetmap.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %vtargetmap.addr, metadata !3985, metadata !DIExpression()), !dbg !3986
  store i32 %tot_vtargetmap, i32* %tot_vtargetmap.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot_vtargetmap.addr, metadata !3987, metadata !DIExpression()), !dbg !3988
  store i32 %merge_mode, i32* %merge_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %merge_mode.addr, metadata !3989, metadata !DIExpression()), !dbg !3990
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !3991, metadata !DIExpression()), !dbg !3992
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3993
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !3994
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !3992
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm2, metadata !3995, metadata !DIExpression()), !dbg !3996
  store %struct.CDDerivedMesh* null, %struct.CDDerivedMesh** %cddm2, align 8, !dbg !3996
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !3997, metadata !DIExpression()), !dbg !3998
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3999
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 5, !dbg !4000
  %3 = load i32, i32* %numVertData, align 8, !dbg !4000
  store i32 %3, i32* %totvert, align 4, !dbg !3998
  call void @llvm.dbg.declare(metadata i32* %totedge, metadata !4001, metadata !DIExpression()), !dbg !4002
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4003
  %numEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 6, !dbg !4004
  %5 = load i32, i32* %numEdgeData, align 4, !dbg !4004
  store i32 %5, i32* %totedge, align 4, !dbg !4002
  call void @llvm.dbg.declare(metadata i32* %totloop, metadata !4005, metadata !DIExpression()), !dbg !4006
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4007
  %numLoopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 8, !dbg !4008
  %7 = load i32, i32* %numLoopData, align 4, !dbg !4008
  store i32 %7, i32* %totloop, align 4, !dbg !4006
  call void @llvm.dbg.declare(metadata i32* %totpoly, metadata !4009, metadata !DIExpression()), !dbg !4010
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4011
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 9, !dbg !4012
  %9 = load i32, i32* %numPolyData, align 8, !dbg !4012
  store i32 %9, i32* %totpoly, align 4, !dbg !4010
  call void @llvm.dbg.declare(metadata i32* %totvert_final, metadata !4013, metadata !DIExpression()), !dbg !4014
  %10 = load i32, i32* %totvert, align 4, !dbg !4015
  %11 = load i32, i32* %tot_vtargetmap.addr, align 4, !dbg !4016
  %sub = sub nsw i32 %10, %11, !dbg !4017
  store i32 %sub, i32* %totvert_final, align 4, !dbg !4014
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !4018, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !4020, metadata !DIExpression()), !dbg !4021
  %12 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4022
  %13 = load i32, i32* %totvert_final, align 4, !dbg !4023
  %conv = sext i32 %13 to i64, !dbg !4023
  %mul = mul i64 20, %conv, !dbg !4024
  %call = call i8* %12(i64 %mul, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.CDDM_merge_verts, i64 0, i64 0)), !dbg !4022
  %14 = bitcast i8* %call to %struct.MVert*, !dbg !4022
  store %struct.MVert* %14, %struct.MVert** %mvert, align 8, !dbg !4021
  call void @llvm.dbg.declare(metadata i32** %oldv, metadata !4025, metadata !DIExpression()), !dbg !4026
  %15 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4027
  %16 = load i32, i32* %totvert_final, align 4, !dbg !4028
  %conv1 = sext i32 %16 to i64, !dbg !4028
  %mul2 = mul i64 4, %conv1, !dbg !4029
  %call3 = call i8* %15(i64 %mul2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.CDDM_merge_verts, i64 0, i64 0)), !dbg !4027
  %17 = bitcast i8* %call3 to i32*, !dbg !4027
  store i32* %17, i32** %oldv, align 8, !dbg !4026
  call void @llvm.dbg.declare(metadata i32** %newv, metadata !4030, metadata !DIExpression()), !dbg !4031
  %18 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4032
  %19 = load i32, i32* %totvert, align 4, !dbg !4033
  %conv4 = sext i32 %19 to i64, !dbg !4033
  %mul5 = mul i64 4, %conv4, !dbg !4034
  %call6 = call i8* %18(i64 %mul5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.CDDM_merge_verts, i64 0, i64 0)), !dbg !4032
  %20 = bitcast i8* %call6 to i32*, !dbg !4032
  store i32* %20, i32** %newv, align 8, !dbg !4031
  call void @llvm.dbg.declare(metadata i32* %_mvert_index, metadata !4035, metadata !DIExpression()), !dbg !4036
  call void @llvm.dbg.declare(metadata i32* %_oldv_index, metadata !4037, metadata !DIExpression()), !dbg !4038
  call void @llvm.dbg.declare(metadata %struct.MEdge** %med, metadata !4039, metadata !DIExpression()), !dbg !4040
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge, metadata !4041, metadata !DIExpression()), !dbg !4042
  %21 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4043
  %22 = load i32, i32* %totedge, align 4, !dbg !4044
  %conv7 = sext i32 %22 to i64, !dbg !4044
  %mul8 = mul i64 12, %conv7, !dbg !4045
  %call9 = call i8* %21(i64 %mul8, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.CDDM_merge_verts, i64 0, i64 0)), !dbg !4043
  %23 = bitcast i8* %call9 to %struct.MEdge*, !dbg !4043
  store %struct.MEdge* %23, %struct.MEdge** %medge, align 8, !dbg !4042
  call void @llvm.dbg.declare(metadata i32** %olde, metadata !4046, metadata !DIExpression()), !dbg !4047
  %24 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4048
  %25 = load i32, i32* %totedge, align 4, !dbg !4049
  %conv10 = sext i32 %25 to i64, !dbg !4049
  %mul11 = mul i64 4, %conv10, !dbg !4050
  %call12 = call i8* %24(i64 %mul11, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.CDDM_merge_verts, i64 0, i64 0)), !dbg !4048
  %26 = bitcast i8* %call12 to i32*, !dbg !4048
  store i32* %26, i32** %olde, align 8, !dbg !4047
  call void @llvm.dbg.declare(metadata i32** %newe, metadata !4051, metadata !DIExpression()), !dbg !4052
  %27 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4053
  %28 = load i32, i32* %totedge, align 4, !dbg !4054
  %conv13 = sext i32 %28 to i64, !dbg !4054
  %mul14 = mul i64 4, %conv13, !dbg !4055
  %call15 = call i8* %27(i64 %mul14, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.CDDM_merge_verts, i64 0, i64 0)), !dbg !4053
  %29 = bitcast i8* %call15 to i32*, !dbg !4053
  store i32* %29, i32** %newe, align 8, !dbg !4052
  call void @llvm.dbg.declare(metadata i32* %_medge_index, metadata !4056, metadata !DIExpression()), !dbg !4057
  call void @llvm.dbg.declare(metadata i32* %_olde_index, metadata !4058, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml, metadata !4060, metadata !DIExpression()), !dbg !4061
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop, metadata !4062, metadata !DIExpression()), !dbg !4063
  %30 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4064
  %31 = load i32, i32* %totloop, align 4, !dbg !4065
  %conv16 = sext i32 %31 to i64, !dbg !4065
  %mul17 = mul i64 8, %conv16, !dbg !4066
  %call18 = call i8* %30(i64 %mul17, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.CDDM_merge_verts, i64 0, i64 0)), !dbg !4064
  %32 = bitcast i8* %call18 to %struct.MLoop*, !dbg !4064
  store %struct.MLoop* %32, %struct.MLoop** %mloop, align 8, !dbg !4063
  call void @llvm.dbg.declare(metadata i32** %oldl, metadata !4067, metadata !DIExpression()), !dbg !4068
  %33 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4069
  %34 = load i32, i32* %totloop, align 4, !dbg !4070
  %conv19 = sext i32 %34 to i64, !dbg !4070
  %mul20 = mul i64 4, %conv19, !dbg !4071
  %call21 = call i8* %33(i64 %mul20, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.CDDM_merge_verts, i64 0, i64 0)), !dbg !4069
  %35 = bitcast i8* %call21 to i32*, !dbg !4069
  store i32* %35, i32** %oldl, align 8, !dbg !4068
  call void @llvm.dbg.declare(metadata i32* %_mloop_index, metadata !4072, metadata !DIExpression()), !dbg !4073
  call void @llvm.dbg.declare(metadata i32* %_oldl_index, metadata !4074, metadata !DIExpression()), !dbg !4075
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !4076, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly, metadata !4078, metadata !DIExpression()), !dbg !4079
  %36 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4080
  %37 = load i32, i32* %totpoly, align 4, !dbg !4081
  %conv22 = sext i32 %37 to i64, !dbg !4081
  %mul23 = mul i64 12, %conv22, !dbg !4082
  %call24 = call i8* %36(i64 %mul23, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.CDDM_merge_verts, i64 0, i64 0)), !dbg !4080
  %38 = bitcast i8* %call24 to %struct.MPoly*, !dbg !4080
  store %struct.MPoly* %38, %struct.MPoly** %mpoly, align 8, !dbg !4079
  call void @llvm.dbg.declare(metadata i32** %oldp, metadata !4083, metadata !DIExpression()), !dbg !4084
  %39 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4085
  %40 = load i32, i32* %totpoly, align 4, !dbg !4086
  %conv25 = sext i32 %40 to i64, !dbg !4086
  %mul26 = mul i64 4, %conv25, !dbg !4087
  %call27 = call i8* %39(i64 %mul26, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.CDDM_merge_verts, i64 0, i64 0)), !dbg !4085
  %41 = bitcast i8* %call27 to i32*, !dbg !4085
  store i32* %41, i32** %oldp, align 8, !dbg !4084
  call void @llvm.dbg.declare(metadata i32* %_mpoly_index, metadata !4088, metadata !DIExpression()), !dbg !4089
  call void @llvm.dbg.declare(metadata i32* %_oldp_index, metadata !4090, metadata !DIExpression()), !dbg !4091
  call void @llvm.dbg.declare(metadata %struct.EdgeHash** %ehash, metadata !4092, metadata !DIExpression()), !dbg !4093
  %42 = load i32, i32* %totedge, align 4, !dbg !4094
  %call28 = call %struct.EdgeHash* @BLI_edgehash_new_ex(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.CDDM_merge_verts, i64 0, i64 0), i32 %42), !dbg !4095
  store %struct.EdgeHash* %call28, %struct.EdgeHash** %ehash, align 8, !dbg !4093
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4096, metadata !DIExpression()), !dbg !4097
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4098, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.declare(metadata i32* %c, metadata !4100, metadata !DIExpression()), !dbg !4101
  call void @llvm.dbg.declare(metadata %struct.PolyKey** %poly_keys, metadata !4102, metadata !DIExpression()), !dbg !4111
  call void @llvm.dbg.declare(metadata %struct.GSet** %poly_gset, metadata !4112, metadata !DIExpression()), !dbg !4116
  store %struct.GSet* null, %struct.GSet** %poly_gset, align 8, !dbg !4116
  %43 = load i32*, i32** %oldv, align 8, !dbg !4117
  store i32 0, i32* %_oldv_index, align 4, !dbg !4117
  %44 = load i32*, i32** %olde, align 8, !dbg !4118
  store i32 0, i32* %_olde_index, align 4, !dbg !4118
  %45 = load i32*, i32** %oldl, align 8, !dbg !4119
  store i32 0, i32* %_oldl_index, align 4, !dbg !4119
  %46 = load i32*, i32** %oldp, align 8, !dbg !4120
  store i32 0, i32* %_oldp_index, align 4, !dbg !4120
  %47 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !4121
  store i32 0, i32* %_mvert_index, align 4, !dbg !4121
  %48 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !4122
  store i32 0, i32* %_medge_index, align 4, !dbg !4122
  %49 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4123
  store i32 0, i32* %_mloop_index, align 4, !dbg !4123
  %50 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !4124
  store i32 0, i32* %_mpoly_index, align 4, !dbg !4124
  %51 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !4125
  %mvert29 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %51, i32 0, i32 1, !dbg !4126
  %52 = load %struct.MVert*, %struct.MVert** %mvert29, align 8, !dbg !4126
  store %struct.MVert* %52, %struct.MVert** %mv, align 8, !dbg !4127
  store i32 0, i32* %c, align 4, !dbg !4128
  store i32 0, i32* %i, align 4, !dbg !4129
  br label %for.cond, !dbg !4131

for.cond:                                         ; preds = %for.inc, %entry
  %53 = load i32, i32* %i, align 4, !dbg !4132
  %54 = load i32, i32* %totvert, align 4, !dbg !4134
  %cmp = icmp slt i32 %53, %54, !dbg !4135
  br i1 %cmp, label %for.body, label %for.end, !dbg !4136

for.body:                                         ; preds = %for.cond
  %55 = load i32*, i32** %vtargetmap.addr, align 8, !dbg !4137
  %56 = load i32, i32* %i, align 4, !dbg !4140
  %idxprom = sext i32 %56 to i64, !dbg !4137
  %arrayidx = getelementptr inbounds i32, i32* %55, i64 %idxprom, !dbg !4137
  %57 = load i32, i32* %arrayidx, align 4, !dbg !4137
  %cmp31 = icmp eq i32 %57, -1, !dbg !4141
  br i1 %cmp31, label %if.then, label %if.else, !dbg !4142

if.then:                                          ; preds = %for.body
  %58 = load i32*, i32** %oldv, align 8, !dbg !4143
  %59 = load i32*, i32** %oldv, align 8, !dbg !4143
  %60 = load i32, i32* %i, align 4, !dbg !4143
  %61 = load i32*, i32** %oldv, align 8, !dbg !4143
  %62 = load i32, i32* %_oldv_index, align 4, !dbg !4143
  %inc = add i32 %62, 1, !dbg !4143
  store i32 %inc, i32* %_oldv_index, align 4, !dbg !4143
  %idxprom33 = zext i32 %62 to i64, !dbg !4143
  %arrayidx34 = getelementptr inbounds i32, i32* %61, i64 %idxprom33, !dbg !4143
  store i32 %60, i32* %arrayidx34, align 4, !dbg !4143
  %63 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !4145
  %64 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !4145
  %65 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !4145
  %66 = load i32, i32* %_mvert_index, align 4, !dbg !4145
  %inc35 = add i32 %66, 1, !dbg !4145
  store i32 %inc35, i32* %_mvert_index, align 4, !dbg !4145
  %idxprom36 = zext i32 %66 to i64, !dbg !4145
  %arrayidx37 = getelementptr inbounds %struct.MVert, %struct.MVert* %65, i64 %idxprom36, !dbg !4145
  %67 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !4145
  %68 = bitcast %struct.MVert* %arrayidx37 to i8*, !dbg !4145
  %69 = bitcast %struct.MVert* %67 to i8*, !dbg !4145
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %69, i64 20, i1 false), !dbg !4145
  %70 = load i32, i32* %c, align 4, !dbg !4146
  %inc38 = add nsw i32 %70, 1, !dbg !4146
  store i32 %inc38, i32* %c, align 4, !dbg !4146
  %71 = load i32*, i32** %newv, align 8, !dbg !4147
  %72 = load i32, i32* %i, align 4, !dbg !4148
  %idxprom39 = sext i32 %72 to i64, !dbg !4147
  %arrayidx40 = getelementptr inbounds i32, i32* %71, i64 %idxprom39, !dbg !4147
  store i32 %70, i32* %arrayidx40, align 4, !dbg !4149
  br label %if.end, !dbg !4150

if.else:                                          ; preds = %for.body
  %73 = load i32*, i32** %newv, align 8, !dbg !4151
  %74 = load i32, i32* %i, align 4, !dbg !4153
  %idxprom41 = sext i32 %74 to i64, !dbg !4151
  %arrayidx42 = getelementptr inbounds i32, i32* %73, i64 %idxprom41, !dbg !4151
  store i32 0, i32* %arrayidx42, align 4, !dbg !4154
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !4155

for.inc:                                          ; preds = %if.end
  %75 = load i32, i32* %i, align 4, !dbg !4156
  %inc43 = add nsw i32 %75, 1, !dbg !4156
  store i32 %inc43, i32* %i, align 4, !dbg !4156
  %76 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !4157
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %76, i32 1, !dbg !4157
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mv, align 8, !dbg !4157
  br label %for.cond, !dbg !4158, !llvm.loop !4159

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !4161
  br label %for.cond44, !dbg !4163

for.cond44:                                       ; preds = %for.inc60, %for.end
  %77 = load i32, i32* %i, align 4, !dbg !4164
  %78 = load i32, i32* %totvert, align 4, !dbg !4166
  %cmp45 = icmp slt i32 %77, %78, !dbg !4167
  br i1 %cmp45, label %for.body47, label %for.end62, !dbg !4168

for.body47:                                       ; preds = %for.cond44
  %79 = load i32*, i32** %vtargetmap.addr, align 8, !dbg !4169
  %80 = load i32, i32* %i, align 4, !dbg !4172
  %idxprom48 = sext i32 %80 to i64, !dbg !4169
  %arrayidx49 = getelementptr inbounds i32, i32* %79, i64 %idxprom48, !dbg !4169
  %81 = load i32, i32* %arrayidx49, align 4, !dbg !4169
  %cmp50 = icmp ne i32 %81, -1, !dbg !4173
  br i1 %cmp50, label %if.then52, label %if.end59, !dbg !4174

if.then52:                                        ; preds = %for.body47
  %82 = load i32*, i32** %newv, align 8, !dbg !4175
  %83 = load i32*, i32** %vtargetmap.addr, align 8, !dbg !4177
  %84 = load i32, i32* %i, align 4, !dbg !4178
  %idxprom53 = sext i32 %84 to i64, !dbg !4177
  %arrayidx54 = getelementptr inbounds i32, i32* %83, i64 %idxprom53, !dbg !4177
  %85 = load i32, i32* %arrayidx54, align 4, !dbg !4177
  %idxprom55 = sext i32 %85 to i64, !dbg !4175
  %arrayidx56 = getelementptr inbounds i32, i32* %82, i64 %idxprom55, !dbg !4175
  %86 = load i32, i32* %arrayidx56, align 4, !dbg !4175
  %87 = load i32*, i32** %newv, align 8, !dbg !4179
  %88 = load i32, i32* %i, align 4, !dbg !4180
  %idxprom57 = sext i32 %88 to i64, !dbg !4179
  %arrayidx58 = getelementptr inbounds i32, i32* %87, i64 %idxprom57, !dbg !4179
  store i32 %86, i32* %arrayidx58, align 4, !dbg !4181
  br label %if.end59, !dbg !4182

if.end59:                                         ; preds = %if.then52, %for.body47
  br label %for.inc60, !dbg !4183

for.inc60:                                        ; preds = %if.end59
  %89 = load i32, i32* %i, align 4, !dbg !4184
  %inc61 = add nsw i32 %89, 1, !dbg !4184
  store i32 %inc61, i32* %i, align 4, !dbg !4184
  br label %for.cond44, !dbg !4185, !llvm.loop !4186

for.end62:                                        ; preds = %for.cond44
  %90 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !4188
  %medge63 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %90, i32 0, i32 2, !dbg !4189
  %91 = load %struct.MEdge*, %struct.MEdge** %medge63, align 8, !dbg !4189
  store %struct.MEdge* %91, %struct.MEdge** %med, align 8, !dbg !4190
  store i32 0, i32* %c, align 4, !dbg !4191
  store i32 0, i32* %i, align 4, !dbg !4192
  br label %for.cond64, !dbg !4194

for.cond64:                                       ; preds = %for.inc114, %for.end62
  %92 = load i32, i32* %i, align 4, !dbg !4195
  %93 = load i32, i32* %totedge, align 4, !dbg !4197
  %cmp65 = icmp slt i32 %92, %93, !dbg !4198
  br i1 %cmp65, label %for.body67, label %for.end117, !dbg !4199

for.body67:                                       ; preds = %for.cond64
  call void @llvm.dbg.declare(metadata i32* %v1, metadata !4200, metadata !DIExpression()), !dbg !4203
  %94 = load i32*, i32** %vtargetmap.addr, align 8, !dbg !4204
  %95 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !4205
  %v168 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %95, i32 0, i32 0, !dbg !4206
  %96 = load i32, i32* %v168, align 4, !dbg !4206
  %idxprom69 = zext i32 %96 to i64, !dbg !4204
  %arrayidx70 = getelementptr inbounds i32, i32* %94, i64 %idxprom69, !dbg !4204
  %97 = load i32, i32* %arrayidx70, align 4, !dbg !4204
  %cmp71 = icmp ne i32 %97, -1, !dbg !4207
  br i1 %cmp71, label %cond.true, label %cond.false, !dbg !4208

cond.true:                                        ; preds = %for.body67
  %98 = load i32*, i32** %vtargetmap.addr, align 8, !dbg !4209
  %99 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !4210
  %v173 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %99, i32 0, i32 0, !dbg !4211
  %100 = load i32, i32* %v173, align 4, !dbg !4211
  %idxprom74 = zext i32 %100 to i64, !dbg !4209
  %arrayidx75 = getelementptr inbounds i32, i32* %98, i64 %idxprom74, !dbg !4209
  %101 = load i32, i32* %arrayidx75, align 4, !dbg !4209
  br label %cond.end, !dbg !4208

cond.false:                                       ; preds = %for.body67
  %102 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !4212
  %v176 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %102, i32 0, i32 0, !dbg !4213
  %103 = load i32, i32* %v176, align 4, !dbg !4213
  br label %cond.end, !dbg !4208

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %101, %cond.true ], [ %103, %cond.false ], !dbg !4208
  store i32 %cond, i32* %v1, align 4, !dbg !4203
  call void @llvm.dbg.declare(metadata i32* %v2, metadata !4214, metadata !DIExpression()), !dbg !4215
  %104 = load i32*, i32** %vtargetmap.addr, align 8, !dbg !4216
  %105 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !4217
  %v277 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %105, i32 0, i32 1, !dbg !4218
  %106 = load i32, i32* %v277, align 4, !dbg !4218
  %idxprom78 = zext i32 %106 to i64, !dbg !4216
  %arrayidx79 = getelementptr inbounds i32, i32* %104, i64 %idxprom78, !dbg !4216
  %107 = load i32, i32* %arrayidx79, align 4, !dbg !4216
  %cmp80 = icmp ne i32 %107, -1, !dbg !4219
  br i1 %cmp80, label %cond.true82, label %cond.false86, !dbg !4220

cond.true82:                                      ; preds = %cond.end
  %108 = load i32*, i32** %vtargetmap.addr, align 8, !dbg !4221
  %109 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !4222
  %v283 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %109, i32 0, i32 1, !dbg !4223
  %110 = load i32, i32* %v283, align 4, !dbg !4223
  %idxprom84 = zext i32 %110 to i64, !dbg !4221
  %arrayidx85 = getelementptr inbounds i32, i32* %108, i64 %idxprom84, !dbg !4221
  %111 = load i32, i32* %arrayidx85, align 4, !dbg !4221
  br label %cond.end88, !dbg !4220

cond.false86:                                     ; preds = %cond.end
  %112 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !4224
  %v287 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %112, i32 0, i32 1, !dbg !4225
  %113 = load i32, i32* %v287, align 4, !dbg !4225
  br label %cond.end88, !dbg !4220

cond.end88:                                       ; preds = %cond.false86, %cond.true82
  %cond89 = phi i32 [ %111, %cond.true82 ], [ %113, %cond.false86 ], !dbg !4220
  store i32 %cond89, i32* %v2, align 4, !dbg !4215
  %114 = load i32, i32* %v1, align 4, !dbg !4226
  %115 = load i32, i32* %v2, align 4, !dbg !4226
  %cmp90 = icmp ne i32 %114, %115, !dbg !4226
  br i1 %cmp90, label %if.then92, label %if.else110, !dbg !4228

if.then92:                                        ; preds = %cond.end88
  call void @llvm.dbg.declare(metadata i8*** %eh_p, metadata !4229, metadata !DIExpression()), !dbg !4231
  %116 = load %struct.EdgeHash*, %struct.EdgeHash** %ehash, align 8, !dbg !4232
  %117 = load i32, i32* %v1, align 4, !dbg !4233
  %118 = load i32, i32* %v2, align 4, !dbg !4234
  %call93 = call i8** @BLI_edgehash_lookup_p(%struct.EdgeHash* %116, i32 %117, i32 %118), !dbg !4235
  store i8** %call93, i8*** %eh_p, align 8, !dbg !4231
  %119 = load i8**, i8*** %eh_p, align 8, !dbg !4236
  %tobool = icmp ne i8** %119, null, !dbg !4236
  br i1 %tobool, label %if.then94, label %if.else98, !dbg !4238

if.then94:                                        ; preds = %if.then92
  %120 = load i8**, i8*** %eh_p, align 8, !dbg !4239
  %121 = load i8*, i8** %120, align 8, !dbg !4239
  %122 = ptrtoint i8* %121 to i64, !dbg !4239
  %conv95 = trunc i64 %122 to i32, !dbg !4239
  %123 = load i32*, i32** %newe, align 8, !dbg !4241
  %124 = load i32, i32* %i, align 4, !dbg !4242
  %idxprom96 = sext i32 %124 to i64, !dbg !4241
  %arrayidx97 = getelementptr inbounds i32, i32* %123, i64 %idxprom96, !dbg !4241
  store i32 %conv95, i32* %arrayidx97, align 4, !dbg !4243
  br label %if.end109, !dbg !4244

if.else98:                                        ; preds = %if.then92
  %125 = load i32*, i32** %olde, align 8, !dbg !4245
  %126 = load i32*, i32** %olde, align 8, !dbg !4245
  %127 = load i32, i32* %i, align 4, !dbg !4245
  %128 = load i32*, i32** %olde, align 8, !dbg !4245
  %129 = load i32, i32* %_olde_index, align 4, !dbg !4245
  %inc99 = add i32 %129, 1, !dbg !4245
  store i32 %inc99, i32* %_olde_index, align 4, !dbg !4245
  %idxprom100 = zext i32 %129 to i64, !dbg !4245
  %arrayidx101 = getelementptr inbounds i32, i32* %128, i64 %idxprom100, !dbg !4245
  store i32 %127, i32* %arrayidx101, align 4, !dbg !4245
  %130 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !4247
  %131 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !4247
  %132 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !4247
  %133 = load i32, i32* %_medge_index, align 4, !dbg !4247
  %inc102 = add i32 %133, 1, !dbg !4247
  store i32 %inc102, i32* %_medge_index, align 4, !dbg !4247
  %idxprom103 = zext i32 %133 to i64, !dbg !4247
  %arrayidx104 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %132, i64 %idxprom103, !dbg !4247
  %134 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !4247
  %135 = bitcast %struct.MEdge* %arrayidx104 to i8*, !dbg !4247
  %136 = bitcast %struct.MEdge* %134 to i8*, !dbg !4247
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %135, i8* align 4 %136, i64 12, i1 false), !dbg !4247
  %137 = load i32, i32* %c, align 4, !dbg !4248
  %138 = load i32*, i32** %newe, align 8, !dbg !4249
  %139 = load i32, i32* %i, align 4, !dbg !4250
  %idxprom105 = sext i32 %139 to i64, !dbg !4249
  %arrayidx106 = getelementptr inbounds i32, i32* %138, i64 %idxprom105, !dbg !4249
  store i32 %137, i32* %arrayidx106, align 4, !dbg !4251
  %140 = load %struct.EdgeHash*, %struct.EdgeHash** %ehash, align 8, !dbg !4252
  %141 = load i32, i32* %v1, align 4, !dbg !4253
  %142 = load i32, i32* %v2, align 4, !dbg !4254
  %143 = load i32, i32* %c, align 4, !dbg !4255
  %conv107 = sext i32 %143 to i64, !dbg !4255
  %144 = inttoptr i64 %conv107 to i8*, !dbg !4255
  call void @BLI_edgehash_insert(%struct.EdgeHash* %140, i32 %141, i32 %142, i8* %144), !dbg !4256
  %145 = load i32, i32* %c, align 4, !dbg !4257
  %inc108 = add nsw i32 %145, 1, !dbg !4257
  store i32 %inc108, i32* %c, align 4, !dbg !4257
  br label %if.end109

if.end109:                                        ; preds = %if.else98, %if.then94
  br label %if.end113, !dbg !4258

if.else110:                                       ; preds = %cond.end88
  %146 = load i32*, i32** %newe, align 8, !dbg !4259
  %147 = load i32, i32* %i, align 4, !dbg !4261
  %idxprom111 = sext i32 %147 to i64, !dbg !4259
  %arrayidx112 = getelementptr inbounds i32, i32* %146, i64 %idxprom111, !dbg !4259
  store i32 -1, i32* %arrayidx112, align 4, !dbg !4262
  br label %if.end113

if.end113:                                        ; preds = %if.else110, %if.end109
  br label %for.inc114, !dbg !4263

for.inc114:                                       ; preds = %if.end113
  %148 = load i32, i32* %i, align 4, !dbg !4264
  %inc115 = add nsw i32 %148, 1, !dbg !4264
  store i32 %inc115, i32* %i, align 4, !dbg !4264
  %149 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !4265
  %incdec.ptr116 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %149, i32 1, !dbg !4265
  store %struct.MEdge* %incdec.ptr116, %struct.MEdge** %med, align 8, !dbg !4265
  br label %for.cond64, !dbg !4266, !llvm.loop !4267

for.end117:                                       ; preds = %for.cond64
  %150 = load i32, i32* %merge_mode.addr, align 4, !dbg !4269
  %cmp118 = icmp eq i32 %150, 1, !dbg !4271
  br i1 %cmp118, label %if.then120, label %if.end157, !dbg !4272

if.then120:                                       ; preds = %for.end117
  call void @llvm.dbg.declare(metadata %struct.PolyKey** %mpgh, metadata !4273, metadata !DIExpression()), !dbg !4275
  %151 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4276
  %152 = load i32, i32* %totpoly, align 4, !dbg !4277
  %conv121 = sext i32 %152 to i64, !dbg !4277
  %mul122 = mul i64 16, %conv121, !dbg !4278
  %call123 = call i8* %151(i64 %mul122, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.CDDM_merge_verts, i64 0, i64 0)), !dbg !4276
  %153 = bitcast i8* %call123 to %struct.PolyKey*, !dbg !4276
  store %struct.PolyKey* %153, %struct.PolyKey** %poly_keys, align 8, !dbg !4279
  %154 = load i32, i32* %totpoly, align 4, !dbg !4280
  %call124 = call %struct.GSet* @BLI_gset_new_ex(i32 (i8*)* @poly_gset_hash_fn, i8 (i8*, i8*)* @poly_gset_compare_fn, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.CDDM_merge_verts, i64 0, i64 0), i32 %154), !dbg !4281
  store %struct.GSet* %call124, %struct.GSet** %poly_gset, align 8, !dbg !4282
  %155 = load %struct.GSet*, %struct.GSet** %poly_gset, align 8, !dbg !4283
  call void @BLI_gset_flag_set(%struct.GSet* %155, i32 1), !dbg !4284
  %156 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !4285
  %mpoly125 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %156, i32 0, i32 5, !dbg !4286
  %157 = load %struct.MPoly*, %struct.MPoly** %mpoly125, align 8, !dbg !4286
  store %struct.MPoly* %157, %struct.MPoly** %mp, align 8, !dbg !4287
  %158 = load %struct.PolyKey*, %struct.PolyKey** %poly_keys, align 8, !dbg !4288
  store %struct.PolyKey* %158, %struct.PolyKey** %mpgh, align 8, !dbg !4289
  store i32 0, i32* %i, align 4, !dbg !4290
  br label %for.cond126, !dbg !4292

for.cond126:                                      ; preds = %for.inc144, %if.then120
  %159 = load i32, i32* %i, align 4, !dbg !4293
  %160 = load i32, i32* %totpoly, align 4, !dbg !4295
  %cmp127 = icmp slt i32 %159, %160, !dbg !4296
  br i1 %cmp127, label %for.body129, label %for.end148, !dbg !4297

for.body129:                                      ; preds = %for.cond126
  %161 = load i32, i32* %i, align 4, !dbg !4298
  %162 = load %struct.PolyKey*, %struct.PolyKey** %mpgh, align 8, !dbg !4300
  %poly_index = getelementptr inbounds %struct.PolyKey, %struct.PolyKey* %162, i32 0, i32 0, !dbg !4301
  store i32 %161, i32* %poly_index, align 4, !dbg !4302
  %163 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4303
  %totloop130 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %163, i32 0, i32 1, !dbg !4304
  %164 = load i32, i32* %totloop130, align 4, !dbg !4304
  %165 = load %struct.PolyKey*, %struct.PolyKey** %mpgh, align 8, !dbg !4305
  %totloops = getelementptr inbounds %struct.PolyKey, %struct.PolyKey* %165, i32 0, i32 1, !dbg !4306
  store i32 %164, i32* %totloops, align 4, !dbg !4307
  %166 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !4308
  %mloop131 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %166, i32 0, i32 4, !dbg !4309
  %167 = load %struct.MLoop*, %struct.MLoop** %mloop131, align 8, !dbg !4309
  %168 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4310
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %168, i32 0, i32 0, !dbg !4311
  %169 = load i32, i32* %loopstart, align 4, !dbg !4311
  %idx.ext = sext i32 %169 to i64, !dbg !4312
  %add.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %167, i64 %idx.ext, !dbg !4312
  store %struct.MLoop* %add.ptr, %struct.MLoop** %ml, align 8, !dbg !4313
  %170 = load %struct.PolyKey*, %struct.PolyKey** %mpgh, align 8, !dbg !4314
  %hash_xor = getelementptr inbounds %struct.PolyKey, %struct.PolyKey* %170, i32 0, i32 3, !dbg !4315
  store i32 0, i32* %hash_xor, align 4, !dbg !4316
  %171 = load %struct.PolyKey*, %struct.PolyKey** %mpgh, align 8, !dbg !4317
  %hash_sum = getelementptr inbounds %struct.PolyKey, %struct.PolyKey* %171, i32 0, i32 2, !dbg !4318
  store i32 0, i32* %hash_sum, align 4, !dbg !4319
  store i32 0, i32* %j, align 4, !dbg !4320
  br label %for.cond132, !dbg !4322

for.cond132:                                      ; preds = %for.inc140, %for.body129
  %172 = load i32, i32* %j, align 4, !dbg !4323
  %173 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4325
  %totloop133 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %173, i32 0, i32 1, !dbg !4326
  %174 = load i32, i32* %totloop133, align 4, !dbg !4326
  %cmp134 = icmp slt i32 %172, %174, !dbg !4327
  br i1 %cmp134, label %for.body136, label %for.end143, !dbg !4328

for.body136:                                      ; preds = %for.cond132
  %175 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4329
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %175, i32 0, i32 0, !dbg !4331
  %176 = load i32, i32* %v, align 4, !dbg !4331
  %177 = load %struct.PolyKey*, %struct.PolyKey** %mpgh, align 8, !dbg !4332
  %hash_sum137 = getelementptr inbounds %struct.PolyKey, %struct.PolyKey* %177, i32 0, i32 2, !dbg !4333
  %178 = load i32, i32* %hash_sum137, align 4, !dbg !4334
  %add = add i32 %178, %176, !dbg !4334
  store i32 %add, i32* %hash_sum137, align 4, !dbg !4334
  %179 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4335
  %v138 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %179, i32 0, i32 0, !dbg !4336
  %180 = load i32, i32* %v138, align 4, !dbg !4336
  %181 = load %struct.PolyKey*, %struct.PolyKey** %mpgh, align 8, !dbg !4337
  %hash_xor139 = getelementptr inbounds %struct.PolyKey, %struct.PolyKey* %181, i32 0, i32 3, !dbg !4338
  %182 = load i32, i32* %hash_xor139, align 4, !dbg !4339
  %xor = xor i32 %182, %180, !dbg !4339
  store i32 %xor, i32* %hash_xor139, align 4, !dbg !4339
  br label %for.inc140, !dbg !4340

for.inc140:                                       ; preds = %for.body136
  %183 = load i32, i32* %j, align 4, !dbg !4341
  %inc141 = add nsw i32 %183, 1, !dbg !4341
  store i32 %inc141, i32* %j, align 4, !dbg !4341
  %184 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4342
  %incdec.ptr142 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %184, i32 1, !dbg !4342
  store %struct.MLoop* %incdec.ptr142, %struct.MLoop** %ml, align 8, !dbg !4342
  br label %for.cond132, !dbg !4343, !llvm.loop !4344

for.end143:                                       ; preds = %for.cond132
  %185 = load %struct.GSet*, %struct.GSet** %poly_gset, align 8, !dbg !4346
  %186 = load %struct.PolyKey*, %struct.PolyKey** %mpgh, align 8, !dbg !4347
  %187 = bitcast %struct.PolyKey* %186 to i8*, !dbg !4347
  call void @BLI_gset_insert(%struct.GSet* %185, i8* %187), !dbg !4348
  br label %for.inc144, !dbg !4349

for.inc144:                                       ; preds = %for.end143
  %188 = load i32, i32* %i, align 4, !dbg !4350
  %inc145 = add nsw i32 %188, 1, !dbg !4350
  store i32 %inc145, i32* %i, align 4, !dbg !4350
  %189 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4351
  %incdec.ptr146 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %189, i32 1, !dbg !4351
  store %struct.MPoly* %incdec.ptr146, %struct.MPoly** %mp, align 8, !dbg !4351
  %190 = load %struct.PolyKey*, %struct.PolyKey** %mpgh, align 8, !dbg !4352
  %incdec.ptr147 = getelementptr inbounds %struct.PolyKey, %struct.PolyKey* %190, i32 1, !dbg !4352
  store %struct.PolyKey* %incdec.ptr147, %struct.PolyKey** %mpgh, align 8, !dbg !4352
  br label %for.cond126, !dbg !4353, !llvm.loop !4354

for.end148:                                       ; preds = %for.cond126
  %191 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !4356
  %pmap = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %191, i32 0, i32 8, !dbg !4358
  %192 = load %struct.MeshElemMap*, %struct.MeshElemMap** %pmap, align 8, !dbg !4358
  %tobool149 = icmp ne %struct.MeshElemMap* %192, null, !dbg !4356
  br i1 %tobool149, label %if.then150, label %if.end152, !dbg !4359

if.then150:                                       ; preds = %for.end148
  %193 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4360
  %194 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !4362
  %pmap151 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %194, i32 0, i32 8, !dbg !4363
  %195 = load %struct.MeshElemMap*, %struct.MeshElemMap** %pmap151, align 8, !dbg !4363
  %196 = bitcast %struct.MeshElemMap* %195 to i8*, !dbg !4362
  call void %193(i8* %196), !dbg !4360
  %197 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4364
  %198 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !4365
  %pmap_mem = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %198, i32 0, i32 9, !dbg !4366
  %199 = load i32*, i32** %pmap_mem, align 8, !dbg !4366
  %200 = bitcast i32* %199 to i8*, !dbg !4365
  call void %197(i8* %200), !dbg !4364
  br label %if.end152, !dbg !4367

if.end152:                                        ; preds = %if.then150, %for.end148
  %201 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !4368
  %pmap153 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %201, i32 0, i32 8, !dbg !4369
  %202 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !4370
  %pmap_mem154 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %202, i32 0, i32 9, !dbg !4371
  %203 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !4372
  %mpoly155 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %203, i32 0, i32 5, !dbg !4373
  %204 = load %struct.MPoly*, %struct.MPoly** %mpoly155, align 8, !dbg !4373
  %205 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !4374
  %mloop156 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %205, i32 0, i32 4, !dbg !4375
  %206 = load %struct.MLoop*, %struct.MLoop** %mloop156, align 8, !dbg !4375
  %207 = load i32, i32* %totvert, align 4, !dbg !4376
  %208 = load i32, i32* %totpoly, align 4, !dbg !4377
  %209 = load i32, i32* %totloop, align 4, !dbg !4378
  call void @BKE_mesh_vert_poly_map_create(%struct.MeshElemMap** %pmap153, i32** %pmap_mem154, %struct.MPoly* %204, %struct.MLoop* %206, i32 %207, i32 %208, i32 %209), !dbg !4379
  br label %if.end157, !dbg !4380

if.end157:                                        ; preds = %if.end152, %for.end117
  %210 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !4381
  %mpoly158 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %210, i32 0, i32 5, !dbg !4382
  %211 = load %struct.MPoly*, %struct.MPoly** %mpoly158, align 8, !dbg !4382
  store %struct.MPoly* %211, %struct.MPoly** %mp, align 8, !dbg !4383
  store i32 0, i32* %i, align 4, !dbg !4384
  br label %for.cond159, !dbg !4386

for.cond159:                                      ; preds = %for.inc349, %if.end157
  %212 = load i32, i32* %i, align 4, !dbg !4387
  %213 = load i32, i32* %totpoly, align 4, !dbg !4389
  %cmp160 = icmp slt i32 %212, %213, !dbg !4390
  br i1 %cmp160, label %for.body162, label %for.end352, !dbg !4391

for.body162:                                      ; preds = %for.cond159
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp_new, metadata !4392, metadata !DIExpression()), !dbg !4394
  %214 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !4395
  %mloop163 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %214, i32 0, i32 4, !dbg !4396
  %215 = load %struct.MLoop*, %struct.MLoop** %mloop163, align 8, !dbg !4396
  %216 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4397
  %loopstart164 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %216, i32 0, i32 0, !dbg !4398
  %217 = load i32, i32* %loopstart164, align 4, !dbg !4398
  %idx.ext165 = sext i32 %217 to i64, !dbg !4399
  %add.ptr166 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %215, i64 %idx.ext165, !dbg !4399
  store %struct.MLoop* %add.ptr166, %struct.MLoop** %ml, align 8, !dbg !4400
  call void @llvm.dbg.declare(metadata i8* %all_vertices_merged, metadata !4401, metadata !DIExpression()), !dbg !4403
  store i8 1, i8* %all_vertices_merged, align 1, !dbg !4403
  store i32 0, i32* %j, align 4, !dbg !4404
  br label %for.cond167, !dbg !4406

for.cond167:                                      ; preds = %for.inc179, %for.body162
  %218 = load i32, i32* %j, align 4, !dbg !4407
  %219 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4409
  %totloop168 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %219, i32 0, i32 1, !dbg !4410
  %220 = load i32, i32* %totloop168, align 4, !dbg !4410
  %cmp169 = icmp slt i32 %218, %220, !dbg !4411
  br i1 %cmp169, label %for.body171, label %for.end182, !dbg !4412

for.body171:                                      ; preds = %for.cond167
  %221 = load i32*, i32** %vtargetmap.addr, align 8, !dbg !4413
  %222 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4416
  %v172 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %222, i32 0, i32 0, !dbg !4417
  %223 = load i32, i32* %v172, align 4, !dbg !4417
  %idxprom173 = zext i32 %223 to i64, !dbg !4413
  %arrayidx174 = getelementptr inbounds i32, i32* %221, i64 %idxprom173, !dbg !4413
  %224 = load i32, i32* %arrayidx174, align 4, !dbg !4413
  %cmp175 = icmp eq i32 %224, -1, !dbg !4418
  br i1 %cmp175, label %if.then177, label %if.end178, !dbg !4419

if.then177:                                       ; preds = %for.body171
  store i8 0, i8* %all_vertices_merged, align 1, !dbg !4420
  br label %for.end182, !dbg !4422

if.end178:                                        ; preds = %for.body171
  br label %for.inc179, !dbg !4423

for.inc179:                                       ; preds = %if.end178
  %225 = load i32, i32* %j, align 4, !dbg !4424
  %inc180 = add nsw i32 %225, 1, !dbg !4424
  store i32 %inc180, i32* %j, align 4, !dbg !4424
  %226 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4425
  %incdec.ptr181 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %226, i32 1, !dbg !4425
  store %struct.MLoop* %incdec.ptr181, %struct.MLoop** %ml, align 8, !dbg !4425
  br label %for.cond167, !dbg !4426, !llvm.loop !4427

for.end182:                                       ; preds = %if.then177, %for.cond167
  %227 = load i8, i8* %all_vertices_merged, align 1, !dbg !4429
  %tobool183 = icmp ne i8 %227, 0, !dbg !4429
  br i1 %tobool183, label %if.then184, label %if.end270, !dbg !4431

if.then184:                                       ; preds = %for.end182
  %228 = load i32, i32* %merge_mode.addr, align 4, !dbg !4432
  %cmp185 = icmp eq i32 %228, 0, !dbg !4435
  br i1 %cmp185, label %if.then187, label %if.else188, !dbg !4436

if.then187:                                       ; preds = %if.then184
  br label %for.inc349, !dbg !4437

if.else188:                                       ; preds = %if.then184
  %229 = load i32, i32* %merge_mode.addr, align 4, !dbg !4439
  %cmp189 = icmp eq i32 %229, 1, !dbg !4441
  br i1 %cmp189, label %if.then191, label %if.end268, !dbg !4442

if.then191:                                       ; preds = %if.else188
  call void @llvm.dbg.declare(metadata i32* %i_poly, metadata !4443, metadata !DIExpression()), !dbg !4445
  call void @llvm.dbg.declare(metadata i32* %v_target, metadata !4446, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.declare(metadata i32* %v_prev, metadata !4448, metadata !DIExpression()), !dbg !4449
  call void @llvm.dbg.declare(metadata i8* %found, metadata !4450, metadata !DIExpression()), !dbg !4451
  store i8 0, i8* %found, align 1, !dbg !4451
  call void @llvm.dbg.declare(metadata %struct.PolyKey* %pkey, metadata !4452, metadata !DIExpression()), !dbg !4453
  %230 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !4454
  %mloop192 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %230, i32 0, i32 4, !dbg !4455
  %231 = load %struct.MLoop*, %struct.MLoop** %mloop192, align 8, !dbg !4455
  %232 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4456
  %loopstart193 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %232, i32 0, i32 0, !dbg !4457
  %233 = load i32, i32* %loopstart193, align 4, !dbg !4457
  %idx.ext194 = sext i32 %233 to i64, !dbg !4458
  %add.ptr195 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %231, i64 %idx.ext194, !dbg !4458
  store %struct.MLoop* %add.ptr195, %struct.MLoop** %ml, align 8, !dbg !4459
  %hash_xor196 = getelementptr inbounds %struct.PolyKey, %struct.PolyKey* %pkey, i32 0, i32 3, !dbg !4460
  store i32 0, i32* %hash_xor196, align 4, !dbg !4461
  %hash_sum197 = getelementptr inbounds %struct.PolyKey, %struct.PolyKey* %pkey, i32 0, i32 2, !dbg !4462
  store i32 0, i32* %hash_sum197, align 4, !dbg !4463
  %totloops198 = getelementptr inbounds %struct.PolyKey, %struct.PolyKey* %pkey, i32 0, i32 1, !dbg !4464
  store i32 0, i32* %totloops198, align 4, !dbg !4465
  %234 = load i32*, i32** %vtargetmap.addr, align 8, !dbg !4466
  %235 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4467
  %236 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4468
  %totloop199 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %236, i32 0, i32 1, !dbg !4469
  %237 = load i32, i32* %totloop199, align 4, !dbg !4469
  %idx.ext200 = sext i32 %237 to i64, !dbg !4470
  %add.ptr201 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %235, i64 %idx.ext200, !dbg !4470
  %add.ptr202 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %add.ptr201, i64 -1, !dbg !4471
  %v203 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %add.ptr202, i32 0, i32 0, !dbg !4472
  %238 = load i32, i32* %v203, align 4, !dbg !4472
  %idxprom204 = zext i32 %238 to i64, !dbg !4466
  %arrayidx205 = getelementptr inbounds i32, i32* %234, i64 %idxprom204, !dbg !4466
  %239 = load i32, i32* %arrayidx205, align 4, !dbg !4466
  store i32 %239, i32* %v_prev, align 4, !dbg !4473
  store i32 0, i32* %j, align 4, !dbg !4474
  br label %for.cond206, !dbg !4476

for.cond206:                                      ; preds = %for.inc224, %if.then191
  %240 = load i32, i32* %j, align 4, !dbg !4477
  %241 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4479
  %totloop207 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %241, i32 0, i32 1, !dbg !4480
  %242 = load i32, i32* %totloop207, align 4, !dbg !4480
  %cmp208 = icmp slt i32 %240, %242, !dbg !4481
  br i1 %cmp208, label %for.body210, label %for.end227, !dbg !4482

for.body210:                                      ; preds = %for.cond206
  %243 = load i32*, i32** %vtargetmap.addr, align 8, !dbg !4483
  %244 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4485
  %v211 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %244, i32 0, i32 0, !dbg !4486
  %245 = load i32, i32* %v211, align 4, !dbg !4486
  %idxprom212 = zext i32 %245 to i64, !dbg !4483
  %arrayidx213 = getelementptr inbounds i32, i32* %243, i64 %idxprom212, !dbg !4483
  %246 = load i32, i32* %arrayidx213, align 4, !dbg !4483
  store i32 %246, i32* %v_target, align 4, !dbg !4487
  %247 = load i32, i32* %v_target, align 4, !dbg !4488
  %248 = load i32, i32* %v_prev, align 4, !dbg !4490
  %cmp214 = icmp eq i32 %247, %248, !dbg !4491
  br i1 %cmp214, label %if.then216, label %if.end217, !dbg !4492

if.then216:                                       ; preds = %for.body210
  br label %for.inc224, !dbg !4493

if.end217:                                        ; preds = %for.body210
  %249 = load i32, i32* %v_target, align 4, !dbg !4495
  %hash_sum218 = getelementptr inbounds %struct.PolyKey, %struct.PolyKey* %pkey, i32 0, i32 2, !dbg !4496
  %250 = load i32, i32* %hash_sum218, align 4, !dbg !4497
  %add219 = add i32 %250, %249, !dbg !4497
  store i32 %add219, i32* %hash_sum218, align 4, !dbg !4497
  %251 = load i32, i32* %v_target, align 4, !dbg !4498
  %hash_xor220 = getelementptr inbounds %struct.PolyKey, %struct.PolyKey* %pkey, i32 0, i32 3, !dbg !4499
  %252 = load i32, i32* %hash_xor220, align 4, !dbg !4500
  %xor221 = xor i32 %252, %251, !dbg !4500
  store i32 %xor221, i32* %hash_xor220, align 4, !dbg !4500
  %totloops222 = getelementptr inbounds %struct.PolyKey, %struct.PolyKey* %pkey, i32 0, i32 1, !dbg !4501
  %253 = load i32, i32* %totloops222, align 4, !dbg !4502
  %inc223 = add nsw i32 %253, 1, !dbg !4502
  store i32 %inc223, i32* %totloops222, align 4, !dbg !4502
  %254 = load i32, i32* %v_target, align 4, !dbg !4503
  store i32 %254, i32* %v_prev, align 4, !dbg !4504
  br label %for.inc224, !dbg !4505

for.inc224:                                       ; preds = %if.end217, %if.then216
  %255 = load i32, i32* %j, align 4, !dbg !4506
  %inc225 = add nsw i32 %255, 1, !dbg !4506
  store i32 %inc225, i32* %j, align 4, !dbg !4506
  %256 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4507
  %incdec.ptr226 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %256, i32 1, !dbg !4507
  store %struct.MLoop* %incdec.ptr226, %struct.MLoop** %ml, align 8, !dbg !4507
  br label %for.cond206, !dbg !4508, !llvm.loop !4509

for.end227:                                       ; preds = %for.cond206
  %257 = load %struct.GSet*, %struct.GSet** %poly_gset, align 8, !dbg !4511
  %258 = bitcast %struct.PolyKey* %pkey to i8*, !dbg !4513
  %call228 = call zeroext i8 @BLI_gset_haskey(%struct.GSet* %257, i8* %258), !dbg !4514
  %tobool229 = icmp ne i8 %call228, 0, !dbg !4514
  br i1 %tobool229, label %if.then230, label %if.end267, !dbg !4515

if.then230:                                       ; preds = %for.end227
  %259 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !4516
  %mloop231 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %259, i32 0, i32 4, !dbg !4518
  %260 = load %struct.MLoop*, %struct.MLoop** %mloop231, align 8, !dbg !4518
  %261 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4519
  %loopstart232 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %261, i32 0, i32 0, !dbg !4520
  %262 = load i32, i32* %loopstart232, align 4, !dbg !4520
  %idx.ext233 = sext i32 %262 to i64, !dbg !4521
  %add.ptr234 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %260, i64 %idx.ext233, !dbg !4521
  store %struct.MLoop* %add.ptr234, %struct.MLoop** %ml, align 8, !dbg !4522
  %263 = load i32*, i32** %vtargetmap.addr, align 8, !dbg !4523
  %264 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4524
  %v235 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %264, i32 0, i32 0, !dbg !4525
  %265 = load i32, i32* %v235, align 4, !dbg !4525
  %idxprom236 = zext i32 %265 to i64, !dbg !4523
  %arrayidx237 = getelementptr inbounds i32, i32* %263, i64 %idxprom236, !dbg !4523
  %266 = load i32, i32* %arrayidx237, align 4, !dbg !4523
  store i32 %266, i32* %v_target, align 4, !dbg !4526
  store i32 0, i32* %i_poly, align 4, !dbg !4527
  br label %for.cond238, !dbg !4529

for.cond238:                                      ; preds = %for.inc261, %if.then230
  %267 = load i32, i32* %i_poly, align 4, !dbg !4530
  %268 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !4532
  %pmap239 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %268, i32 0, i32 8, !dbg !4533
  %269 = load %struct.MeshElemMap*, %struct.MeshElemMap** %pmap239, align 8, !dbg !4533
  %270 = load i32, i32* %v_target, align 4, !dbg !4534
  %idxprom240 = sext i32 %270 to i64, !dbg !4532
  %arrayidx241 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %269, i64 %idxprom240, !dbg !4532
  %count = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx241, i32 0, i32 1, !dbg !4535
  %271 = load i32, i32* %count, align 8, !dbg !4535
  %cmp242 = icmp slt i32 %267, %271, !dbg !4536
  br i1 %cmp242, label %for.body244, label %for.end263, !dbg !4537

for.body244:                                      ; preds = %for.cond238
  call void @llvm.dbg.declare(metadata %struct.MPoly** %target_poly, metadata !4538, metadata !DIExpression()), !dbg !4540
  %272 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !4541
  %mpoly245 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %272, i32 0, i32 5, !dbg !4542
  %273 = load %struct.MPoly*, %struct.MPoly** %mpoly245, align 8, !dbg !4542
  %274 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !4543
  %pmap246 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %274, i32 0, i32 8, !dbg !4544
  %275 = load %struct.MeshElemMap*, %struct.MeshElemMap** %pmap246, align 8, !dbg !4544
  %276 = load i32, i32* %v_target, align 4, !dbg !4545
  %idxprom247 = sext i32 %276 to i64, !dbg !4543
  %arrayidx248 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %275, i64 %idxprom247, !dbg !4543
  %indices = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx248, i32 0, i32 0, !dbg !4546
  %277 = load i32*, i32** %indices, align 8, !dbg !4546
  %278 = load i32, i32* %i_poly, align 4, !dbg !4547
  %idx.ext249 = sext i32 %278 to i64, !dbg !4548
  %add.ptr250 = getelementptr inbounds i32, i32* %277, i64 %idx.ext249, !dbg !4548
  %279 = load i32, i32* %add.ptr250, align 4, !dbg !4549
  %idx.ext251 = sext i32 %279 to i64, !dbg !4550
  %add.ptr252 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %273, i64 %idx.ext251, !dbg !4550
  store %struct.MPoly* %add.ptr252, %struct.MPoly** %target_poly, align 8, !dbg !4540
  %280 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !4551
  %mloop253 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %280, i32 0, i32 4, !dbg !4553
  %281 = load %struct.MLoop*, %struct.MLoop** %mloop253, align 8, !dbg !4553
  %282 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4554
  %283 = load %struct.MPoly*, %struct.MPoly** %target_poly, align 8, !dbg !4555
  %284 = load i32*, i32** %vtargetmap.addr, align 8, !dbg !4556
  %call254 = call i32 @cddm_poly_compare(%struct.MLoop* %281, %struct.MPoly* %282, %struct.MPoly* %283, i32* %284, i32 1), !dbg !4557
  %tobool255 = icmp ne i32 %call254, 0, !dbg !4557
  br i1 %tobool255, label %if.then259, label %lor.lhs.false, !dbg !4558

lor.lhs.false:                                    ; preds = %for.body244
  %285 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !4559
  %mloop256 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %285, i32 0, i32 4, !dbg !4560
  %286 = load %struct.MLoop*, %struct.MLoop** %mloop256, align 8, !dbg !4560
  %287 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4561
  %288 = load %struct.MPoly*, %struct.MPoly** %target_poly, align 8, !dbg !4562
  %289 = load i32*, i32** %vtargetmap.addr, align 8, !dbg !4563
  %call257 = call i32 @cddm_poly_compare(%struct.MLoop* %286, %struct.MPoly* %287, %struct.MPoly* %288, i32* %289, i32 -1), !dbg !4564
  %tobool258 = icmp ne i32 %call257, 0, !dbg !4564
  br i1 %tobool258, label %if.then259, label %if.end260, !dbg !4565

if.then259:                                       ; preds = %lor.lhs.false, %for.body244
  store i8 1, i8* %found, align 1, !dbg !4566
  br label %for.end263, !dbg !4568

if.end260:                                        ; preds = %lor.lhs.false
  br label %for.inc261, !dbg !4569

for.inc261:                                       ; preds = %if.end260
  %290 = load i32, i32* %i_poly, align 4, !dbg !4570
  %inc262 = add nsw i32 %290, 1, !dbg !4570
  store i32 %inc262, i32* %i_poly, align 4, !dbg !4570
  br label %for.cond238, !dbg !4571, !llvm.loop !4572

for.end263:                                       ; preds = %if.then259, %for.cond238
  %291 = load i8, i8* %found, align 1, !dbg !4574
  %tobool264 = icmp ne i8 %291, 0, !dbg !4574
  br i1 %tobool264, label %if.then265, label %if.end266, !dbg !4576

if.then265:                                       ; preds = %for.end263
  br label %for.inc349, !dbg !4577

if.end266:                                        ; preds = %for.end263
  br label %if.end267, !dbg !4579

if.end267:                                        ; preds = %if.end266, %for.end227
  br label %if.end268, !dbg !4580

if.end268:                                        ; preds = %if.end267, %if.else188
  br label %if.end269

if.end269:                                        ; preds = %if.end268
  br label %if.end270, !dbg !4581

if.end270:                                        ; preds = %if.end269, %for.end182
  %292 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !4582
  %mloop271 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %292, i32 0, i32 4, !dbg !4583
  %293 = load %struct.MLoop*, %struct.MLoop** %mloop271, align 8, !dbg !4583
  %294 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4584
  %loopstart272 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %294, i32 0, i32 0, !dbg !4585
  %295 = load i32, i32* %loopstart272, align 4, !dbg !4585
  %idx.ext273 = sext i32 %295 to i64, !dbg !4586
  %add.ptr274 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %293, i64 %idx.ext273, !dbg !4586
  store %struct.MLoop* %add.ptr274, %struct.MLoop** %ml, align 8, !dbg !4587
  store i32 0, i32* %c, align 4, !dbg !4588
  store i32 0, i32* %j, align 4, !dbg !4589
  br label %for.cond275, !dbg !4591

for.cond275:                                      ; preds = %for.inc324, %if.end270
  %296 = load i32, i32* %j, align 4, !dbg !4592
  %297 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4594
  %totloop276 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %297, i32 0, i32 1, !dbg !4595
  %298 = load i32, i32* %totloop276, align 4, !dbg !4595
  %cmp277 = icmp slt i32 %296, %298, !dbg !4596
  br i1 %cmp277, label %for.body279, label %for.end327, !dbg !4597

for.body279:                                      ; preds = %for.cond275
  call void @llvm.dbg.declare(metadata i32* %v1280, metadata !4598, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.declare(metadata i32* %v2281, metadata !4601, metadata !DIExpression()), !dbg !4602
  %299 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !4603
  %medge282 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %299, i32 0, i32 2, !dbg !4604
  %300 = load %struct.MEdge*, %struct.MEdge** %medge282, align 8, !dbg !4604
  %301 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4605
  %e = getelementptr inbounds %struct.MLoop, %struct.MLoop* %301, i32 0, i32 1, !dbg !4606
  %302 = load i32, i32* %e, align 4, !dbg !4606
  %idx.ext283 = zext i32 %302 to i64, !dbg !4607
  %add.ptr284 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %300, i64 %idx.ext283, !dbg !4607
  store %struct.MEdge* %add.ptr284, %struct.MEdge** %med, align 8, !dbg !4608
  %303 = load i32*, i32** %vtargetmap.addr, align 8, !dbg !4609
  %304 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !4610
  %v1285 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %304, i32 0, i32 0, !dbg !4611
  %305 = load i32, i32* %v1285, align 4, !dbg !4611
  %idxprom286 = zext i32 %305 to i64, !dbg !4609
  %arrayidx287 = getelementptr inbounds i32, i32* %303, i64 %idxprom286, !dbg !4609
  %306 = load i32, i32* %arrayidx287, align 4, !dbg !4609
  %cmp288 = icmp ne i32 %306, -1, !dbg !4612
  br i1 %cmp288, label %cond.true290, label %cond.false294, !dbg !4613

cond.true290:                                     ; preds = %for.body279
  %307 = load i32*, i32** %vtargetmap.addr, align 8, !dbg !4614
  %308 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !4615
  %v1291 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %308, i32 0, i32 0, !dbg !4616
  %309 = load i32, i32* %v1291, align 4, !dbg !4616
  %idxprom292 = zext i32 %309 to i64, !dbg !4614
  %arrayidx293 = getelementptr inbounds i32, i32* %307, i64 %idxprom292, !dbg !4614
  %310 = load i32, i32* %arrayidx293, align 4, !dbg !4614
  br label %cond.end296, !dbg !4613

cond.false294:                                    ; preds = %for.body279
  %311 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !4617
  %v1295 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %311, i32 0, i32 0, !dbg !4618
  %312 = load i32, i32* %v1295, align 4, !dbg !4618
  br label %cond.end296, !dbg !4613

cond.end296:                                      ; preds = %cond.false294, %cond.true290
  %cond297 = phi i32 [ %310, %cond.true290 ], [ %312, %cond.false294 ], !dbg !4613
  store i32 %cond297, i32* %v1280, align 4, !dbg !4619
  %313 = load i32*, i32** %vtargetmap.addr, align 8, !dbg !4620
  %314 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !4621
  %v2298 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %314, i32 0, i32 1, !dbg !4622
  %315 = load i32, i32* %v2298, align 4, !dbg !4622
  %idxprom299 = zext i32 %315 to i64, !dbg !4620
  %arrayidx300 = getelementptr inbounds i32, i32* %313, i64 %idxprom299, !dbg !4620
  %316 = load i32, i32* %arrayidx300, align 4, !dbg !4620
  %cmp301 = icmp ne i32 %316, -1, !dbg !4623
  br i1 %cmp301, label %cond.true303, label %cond.false307, !dbg !4624

cond.true303:                                     ; preds = %cond.end296
  %317 = load i32*, i32** %vtargetmap.addr, align 8, !dbg !4625
  %318 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !4626
  %v2304 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %318, i32 0, i32 1, !dbg !4627
  %319 = load i32, i32* %v2304, align 4, !dbg !4627
  %idxprom305 = zext i32 %319 to i64, !dbg !4625
  %arrayidx306 = getelementptr inbounds i32, i32* %317, i64 %idxprom305, !dbg !4625
  %320 = load i32, i32* %arrayidx306, align 4, !dbg !4625
  br label %cond.end309, !dbg !4624

cond.false307:                                    ; preds = %cond.end296
  %321 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !4628
  %v2308 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %321, i32 0, i32 1, !dbg !4629
  %322 = load i32, i32* %v2308, align 4, !dbg !4629
  br label %cond.end309, !dbg !4624

cond.end309:                                      ; preds = %cond.false307, %cond.true303
  %cond310 = phi i32 [ %320, %cond.true303 ], [ %322, %cond.false307 ], !dbg !4624
  store i32 %cond310, i32* %v2281, align 4, !dbg !4630
  %323 = load i32, i32* %v1280, align 4, !dbg !4631
  %324 = load i32, i32* %v2281, align 4, !dbg !4631
  %cmp311 = icmp ne i32 %323, %324, !dbg !4631
  br i1 %cmp311, label %if.then313, label %if.end323, !dbg !4633

if.then313:                                       ; preds = %cond.end309
  %325 = load i32*, i32** %oldl, align 8, !dbg !4634
  %326 = load i32*, i32** %oldl, align 8, !dbg !4634
  %327 = load i32, i32* %j, align 4, !dbg !4634
  %328 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4634
  %loopstart314 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %328, i32 0, i32 0, !dbg !4634
  %329 = load i32, i32* %loopstart314, align 4, !dbg !4634
  %add315 = add nsw i32 %327, %329, !dbg !4634
  %330 = load i32*, i32** %oldl, align 8, !dbg !4634
  %331 = load i32, i32* %_oldl_index, align 4, !dbg !4634
  %inc316 = add i32 %331, 1, !dbg !4634
  store i32 %inc316, i32* %_oldl_index, align 4, !dbg !4634
  %idxprom317 = zext i32 %331 to i64, !dbg !4634
  %arrayidx318 = getelementptr inbounds i32, i32* %330, i64 %idxprom317, !dbg !4634
  store i32 %add315, i32* %arrayidx318, align 4, !dbg !4634
  %332 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4636
  %333 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4636
  %334 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4636
  %335 = load i32, i32* %_mloop_index, align 4, !dbg !4636
  %inc319 = add i32 %335, 1, !dbg !4636
  store i32 %inc319, i32* %_mloop_index, align 4, !dbg !4636
  %idxprom320 = zext i32 %335 to i64, !dbg !4636
  %arrayidx321 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %334, i64 %idxprom320, !dbg !4636
  %336 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4636
  %337 = bitcast %struct.MLoop* %arrayidx321 to i8*, !dbg !4636
  %338 = bitcast %struct.MLoop* %336 to i8*, !dbg !4636
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %337, i8* align 4 %338, i64 8, i1 false), !dbg !4636
  %339 = load i32, i32* %c, align 4, !dbg !4637
  %inc322 = add nsw i32 %339, 1, !dbg !4637
  store i32 %inc322, i32* %c, align 4, !dbg !4637
  br label %if.end323, !dbg !4638

if.end323:                                        ; preds = %if.then313, %cond.end309
  br label %for.inc324, !dbg !4639

for.inc324:                                       ; preds = %if.end323
  %340 = load i32, i32* %j, align 4, !dbg !4640
  %inc325 = add nsw i32 %340, 1, !dbg !4640
  store i32 %inc325, i32* %j, align 4, !dbg !4640
  %341 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4641
  %incdec.ptr326 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %341, i32 1, !dbg !4641
  store %struct.MLoop* %incdec.ptr326, %struct.MLoop** %ml, align 8, !dbg !4641
  br label %for.cond275, !dbg !4642, !llvm.loop !4643

for.end327:                                       ; preds = %for.cond275
  %342 = load i32, i32* %c, align 4, !dbg !4645
  %cmp328 = icmp eq i32 %342, 0, !dbg !4645
  br i1 %cmp328, label %if.then330, label %if.else331, !dbg !4647

if.then330:                                       ; preds = %for.end327
  br label %for.inc349, !dbg !4648

if.else331:                                       ; preds = %for.end327
  %343 = load i32, i32* %c, align 4, !dbg !4650
  %cmp332 = icmp slt i32 %343, 3, !dbg !4650
  br i1 %cmp332, label %if.then334, label %if.end338, !dbg !4652

if.then334:                                       ; preds = %if.else331
  call void @llvm.dbg.declare(metadata i32* %_n, metadata !4653, metadata !DIExpression()), !dbg !4656
  %344 = load i32, i32* %c, align 4, !dbg !4656
  store i32 %344, i32* %_n, align 4, !dbg !4656
  %345 = load i32*, i32** %oldl, align 8, !dbg !4656
  %346 = load i32, i32* %_n, align 4, !dbg !4656
  %347 = load i32, i32* %_oldl_index, align 4, !dbg !4656
  %sub335 = sub i32 %347, %346, !dbg !4656
  store i32 %sub335, i32* %_oldl_index, align 4, !dbg !4656
  call void @llvm.dbg.declare(metadata i32* %_n336, metadata !4657, metadata !DIExpression()), !dbg !4659
  %348 = load i32, i32* %c, align 4, !dbg !4659
  store i32 %348, i32* %_n336, align 4, !dbg !4659
  %349 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4659
  %350 = load i32, i32* %_n336, align 4, !dbg !4659
  %351 = load i32, i32* %_mloop_index, align 4, !dbg !4659
  %sub337 = sub i32 %351, %350, !dbg !4659
  store i32 %sub337, i32* %_mloop_index, align 4, !dbg !4659
  br label %for.inc349, !dbg !4660

if.end338:                                        ; preds = %if.else331
  br label %if.end339

if.end339:                                        ; preds = %if.end338
  %352 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !4661
  %353 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !4661
  %354 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !4661
  %355 = load i32, i32* %_mpoly_index, align 4, !dbg !4661
  %inc340 = add i32 %355, 1, !dbg !4661
  store i32 %inc340, i32* %_mpoly_index, align 4, !dbg !4661
  %idxprom341 = zext i32 %355 to i64, !dbg !4661
  %arrayidx342 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %354, i64 %idxprom341, !dbg !4661
  store %struct.MPoly* %arrayidx342, %struct.MPoly** %mp_new, align 8, !dbg !4662
  %356 = load %struct.MPoly*, %struct.MPoly** %mp_new, align 8, !dbg !4663
  %357 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4664
  %358 = bitcast %struct.MPoly* %356 to i8*, !dbg !4665
  %359 = bitcast %struct.MPoly* %357 to i8*, !dbg !4665
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %358, i8* align 4 %359, i64 12, i1 false), !dbg !4665
  %360 = load i32, i32* %c, align 4, !dbg !4666
  %361 = load %struct.MPoly*, %struct.MPoly** %mp_new, align 8, !dbg !4667
  %totloop343 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %361, i32 0, i32 1, !dbg !4668
  store i32 %360, i32* %totloop343, align 4, !dbg !4669
  %362 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4670
  %363 = load i32, i32* %_mloop_index, align 4, !dbg !4670
  %364 = load i32, i32* %c, align 4, !dbg !4671
  %sub344 = sub i32 %363, %364, !dbg !4672
  %365 = load %struct.MPoly*, %struct.MPoly** %mp_new, align 8, !dbg !4673
  %loopstart345 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %365, i32 0, i32 0, !dbg !4674
  store i32 %sub344, i32* %loopstart345, align 4, !dbg !4675
  %366 = load i32*, i32** %oldp, align 8, !dbg !4676
  %367 = load i32*, i32** %oldp, align 8, !dbg !4676
  %368 = load i32, i32* %i, align 4, !dbg !4676
  %369 = load i32*, i32** %oldp, align 8, !dbg !4676
  %370 = load i32, i32* %_oldp_index, align 4, !dbg !4676
  %inc346 = add i32 %370, 1, !dbg !4676
  store i32 %inc346, i32* %_oldp_index, align 4, !dbg !4676
  %idxprom347 = zext i32 %370 to i64, !dbg !4676
  %arrayidx348 = getelementptr inbounds i32, i32* %369, i64 %idxprom347, !dbg !4676
  store i32 %368, i32* %arrayidx348, align 4, !dbg !4676
  br label %for.inc349, !dbg !4677

for.inc349:                                       ; preds = %if.end339, %if.then334, %if.then330, %if.then265, %if.then187
  %371 = load i32, i32* %i, align 4, !dbg !4678
  %inc350 = add nsw i32 %371, 1, !dbg !4678
  store i32 %inc350, i32* %i, align 4, !dbg !4678
  %372 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4679
  %incdec.ptr351 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %372, i32 1, !dbg !4679
  store %struct.MPoly* %incdec.ptr351, %struct.MPoly** %mp, align 8, !dbg !4679
  br label %for.cond159, !dbg !4680, !llvm.loop !4681

for.end352:                                       ; preds = %for.cond159
  %373 = load %struct.GSet*, %struct.GSet** %poly_gset, align 8, !dbg !4683
  %tobool353 = icmp ne %struct.GSet* %373, null, !dbg !4683
  br i1 %tobool353, label %if.then354, label %if.end355, !dbg !4685

if.then354:                                       ; preds = %for.end352
  %374 = load %struct.GSet*, %struct.GSet** %poly_gset, align 8, !dbg !4686
  call void @BLI_gset_free(%struct.GSet* %374, void (i8*)* null), !dbg !4688
  %375 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4689
  %376 = load %struct.PolyKey*, %struct.PolyKey** %poly_keys, align 8, !dbg !4690
  %377 = bitcast %struct.PolyKey* %376 to i8*, !dbg !4690
  call void %375(i8* %377), !dbg !4689
  br label %if.end355, !dbg !4691

if.end355:                                        ; preds = %if.then354, %for.end352
  %378 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !4692
  %379 = bitcast %struct.CDDerivedMesh* %378 to %struct.DerivedMesh*, !dbg !4693
  %380 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !4694
  %381 = load i32, i32* %_mvert_index, align 4, !dbg !4694
  %382 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !4695
  %383 = load i32, i32* %_medge_index, align 4, !dbg !4695
  %384 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4696
  %385 = load i32, i32* %_mloop_index, align 4, !dbg !4696
  %386 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !4697
  %387 = load i32, i32* %_mpoly_index, align 4, !dbg !4697
  %call356 = call %struct.DerivedMesh* @CDDM_from_template(%struct.DerivedMesh* %379, i32 %381, i32 %383, i32 0, i32 %385, i32 %387), !dbg !4698
  %388 = bitcast %struct.DerivedMesh* %call356 to %struct.CDDerivedMesh*, !dbg !4699
  store %struct.CDDerivedMesh* %388, %struct.CDDerivedMesh** %cddm2, align 8, !dbg !4700
  %389 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !4701
  store %struct.MEdge* %389, %struct.MEdge** %med, align 8, !dbg !4702
  store i32 0, i32* %i, align 4, !dbg !4703
  br label %for.cond357, !dbg !4705

for.cond357:                                      ; preds = %for.inc389, %if.end355
  %390 = load i32, i32* %i, align 4, !dbg !4706
  %391 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm2, align 8, !dbg !4708
  %dm358 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %391, i32 0, i32 0, !dbg !4709
  %numEdgeData359 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm358, i32 0, i32 6, !dbg !4710
  %392 = load i32, i32* %numEdgeData359, align 4, !dbg !4710
  %cmp360 = icmp slt i32 %390, %392, !dbg !4711
  br i1 %cmp360, label %for.body362, label %for.end392, !dbg !4712

for.body362:                                      ; preds = %for.cond357
  %393 = load i32*, i32** %newv, align 8, !dbg !4713
  %394 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !4716
  %v1363 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %394, i32 0, i32 0, !dbg !4717
  %395 = load i32, i32* %v1363, align 4, !dbg !4717
  %idxprom364 = zext i32 %395 to i64, !dbg !4713
  %arrayidx365 = getelementptr inbounds i32, i32* %393, i64 %idxprom364, !dbg !4713
  %396 = load i32, i32* %arrayidx365, align 4, !dbg !4713
  %cmp366 = icmp ne i32 %396, -1, !dbg !4718
  br i1 %cmp366, label %if.then368, label %if.end373, !dbg !4719

if.then368:                                       ; preds = %for.body362
  %397 = load i32*, i32** %newv, align 8, !dbg !4720
  %398 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !4721
  %v1369 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %398, i32 0, i32 0, !dbg !4722
  %399 = load i32, i32* %v1369, align 4, !dbg !4722
  %idxprom370 = zext i32 %399 to i64, !dbg !4720
  %arrayidx371 = getelementptr inbounds i32, i32* %397, i64 %idxprom370, !dbg !4720
  %400 = load i32, i32* %arrayidx371, align 4, !dbg !4720
  %401 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !4723
  %v1372 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %401, i32 0, i32 0, !dbg !4724
  store i32 %400, i32* %v1372, align 4, !dbg !4725
  br label %if.end373, !dbg !4723

if.end373:                                        ; preds = %if.then368, %for.body362
  %402 = load i32*, i32** %newv, align 8, !dbg !4726
  %403 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !4728
  %v2374 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %403, i32 0, i32 1, !dbg !4729
  %404 = load i32, i32* %v2374, align 4, !dbg !4729
  %idxprom375 = zext i32 %404 to i64, !dbg !4726
  %arrayidx376 = getelementptr inbounds i32, i32* %402, i64 %idxprom375, !dbg !4726
  %405 = load i32, i32* %arrayidx376, align 4, !dbg !4726
  %cmp377 = icmp ne i32 %405, -1, !dbg !4730
  br i1 %cmp377, label %if.then379, label %if.end384, !dbg !4731

if.then379:                                       ; preds = %if.end373
  %406 = load i32*, i32** %newv, align 8, !dbg !4732
  %407 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !4733
  %v2380 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %407, i32 0, i32 1, !dbg !4734
  %408 = load i32, i32* %v2380, align 4, !dbg !4734
  %idxprom381 = zext i32 %408 to i64, !dbg !4732
  %arrayidx382 = getelementptr inbounds i32, i32* %406, i64 %idxprom381, !dbg !4732
  %409 = load i32, i32* %arrayidx382, align 4, !dbg !4732
  %410 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !4735
  %v2383 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %410, i32 0, i32 1, !dbg !4736
  store i32 %409, i32* %v2383, align 4, !dbg !4737
  br label %if.end384, !dbg !4735

if.end384:                                        ; preds = %if.then379, %if.end373
  %411 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4738
  %edgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %411, i32 0, i32 1, !dbg !4739
  %412 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm2, align 8, !dbg !4740
  %dm385 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %412, i32 0, i32 0, !dbg !4741
  %edgeData386 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm385, i32 0, i32 1, !dbg !4742
  %413 = load i32*, i32** %olde, align 8, !dbg !4743
  %414 = load i32, i32* %i, align 4, !dbg !4744
  %idxprom387 = sext i32 %414 to i64, !dbg !4743
  %arrayidx388 = getelementptr inbounds i32, i32* %413, i64 %idxprom387, !dbg !4743
  %415 = load i32, i32* %arrayidx388, align 4, !dbg !4743
  %416 = load i32, i32* %i, align 4, !dbg !4745
  call void @CustomData_copy_data(%struct.CustomData* %edgeData, %struct.CustomData* %edgeData386, i32 %415, i32 %416, i32 1), !dbg !4746
  br label %for.inc389, !dbg !4747

for.inc389:                                       ; preds = %if.end384
  %417 = load i32, i32* %i, align 4, !dbg !4748
  %inc390 = add nsw i32 %417, 1, !dbg !4748
  store i32 %inc390, i32* %i, align 4, !dbg !4748
  %418 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !4749
  %incdec.ptr391 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %418, i32 1, !dbg !4749
  store %struct.MEdge* %incdec.ptr391, %struct.MEdge** %med, align 8, !dbg !4749
  br label %for.cond357, !dbg !4750, !llvm.loop !4751

for.end392:                                       ; preds = %for.cond357
  %419 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4753
  store %struct.MLoop* %419, %struct.MLoop** %ml, align 8, !dbg !4754
  store i32 0, i32* %i, align 4, !dbg !4755
  br label %for.cond393, !dbg !4757

for.cond393:                                      ; preds = %for.inc425, %for.end392
  %420 = load i32, i32* %i, align 4, !dbg !4758
  %421 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm2, align 8, !dbg !4760
  %dm394 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %421, i32 0, i32 0, !dbg !4761
  %numLoopData395 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm394, i32 0, i32 8, !dbg !4762
  %422 = load i32, i32* %numLoopData395, align 4, !dbg !4762
  %cmp396 = icmp slt i32 %420, %422, !dbg !4763
  br i1 %cmp396, label %for.body398, label %for.end428, !dbg !4764

for.body398:                                      ; preds = %for.cond393
  %423 = load i32*, i32** %newe, align 8, !dbg !4765
  %424 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4768
  %e399 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %424, i32 0, i32 1, !dbg !4769
  %425 = load i32, i32* %e399, align 4, !dbg !4769
  %idxprom400 = zext i32 %425 to i64, !dbg !4765
  %arrayidx401 = getelementptr inbounds i32, i32* %423, i64 %idxprom400, !dbg !4765
  %426 = load i32, i32* %arrayidx401, align 4, !dbg !4765
  %cmp402 = icmp ne i32 %426, -1, !dbg !4770
  br i1 %cmp402, label %if.then404, label %if.end409, !dbg !4771

if.then404:                                       ; preds = %for.body398
  %427 = load i32*, i32** %newe, align 8, !dbg !4772
  %428 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4773
  %e405 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %428, i32 0, i32 1, !dbg !4774
  %429 = load i32, i32* %e405, align 4, !dbg !4774
  %idxprom406 = zext i32 %429 to i64, !dbg !4772
  %arrayidx407 = getelementptr inbounds i32, i32* %427, i64 %idxprom406, !dbg !4772
  %430 = load i32, i32* %arrayidx407, align 4, !dbg !4772
  %431 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4775
  %e408 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %431, i32 0, i32 1, !dbg !4776
  store i32 %430, i32* %e408, align 4, !dbg !4777
  br label %if.end409, !dbg !4775

if.end409:                                        ; preds = %if.then404, %for.body398
  %432 = load i32*, i32** %newv, align 8, !dbg !4778
  %433 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4780
  %v410 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %433, i32 0, i32 0, !dbg !4781
  %434 = load i32, i32* %v410, align 4, !dbg !4781
  %idxprom411 = zext i32 %434 to i64, !dbg !4778
  %arrayidx412 = getelementptr inbounds i32, i32* %432, i64 %idxprom411, !dbg !4778
  %435 = load i32, i32* %arrayidx412, align 4, !dbg !4778
  %cmp413 = icmp ne i32 %435, -1, !dbg !4782
  br i1 %cmp413, label %if.then415, label %if.end420, !dbg !4783

if.then415:                                       ; preds = %if.end409
  %436 = load i32*, i32** %newv, align 8, !dbg !4784
  %437 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4785
  %v416 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %437, i32 0, i32 0, !dbg !4786
  %438 = load i32, i32* %v416, align 4, !dbg !4786
  %idxprom417 = zext i32 %438 to i64, !dbg !4784
  %arrayidx418 = getelementptr inbounds i32, i32* %436, i64 %idxprom417, !dbg !4784
  %439 = load i32, i32* %arrayidx418, align 4, !dbg !4784
  %440 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4787
  %v419 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %440, i32 0, i32 0, !dbg !4788
  store i32 %439, i32* %v419, align 4, !dbg !4789
  br label %if.end420, !dbg !4787

if.end420:                                        ; preds = %if.then415, %if.end409
  %441 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4790
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %441, i32 0, i32 3, !dbg !4791
  %442 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm2, align 8, !dbg !4792
  %dm421 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %442, i32 0, i32 0, !dbg !4793
  %loopData422 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm421, i32 0, i32 3, !dbg !4794
  %443 = load i32*, i32** %oldl, align 8, !dbg !4795
  %444 = load i32, i32* %i, align 4, !dbg !4796
  %idxprom423 = sext i32 %444 to i64, !dbg !4795
  %arrayidx424 = getelementptr inbounds i32, i32* %443, i64 %idxprom423, !dbg !4795
  %445 = load i32, i32* %arrayidx424, align 4, !dbg !4795
  %446 = load i32, i32* %i, align 4, !dbg !4797
  call void @CustomData_copy_data(%struct.CustomData* %loopData, %struct.CustomData* %loopData422, i32 %445, i32 %446, i32 1), !dbg !4798
  br label %for.inc425, !dbg !4799

for.inc425:                                       ; preds = %if.end420
  %447 = load i32, i32* %i, align 4, !dbg !4800
  %inc426 = add nsw i32 %447, 1, !dbg !4800
  store i32 %inc426, i32* %i, align 4, !dbg !4800
  %448 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4801
  %incdec.ptr427 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %448, i32 1, !dbg !4801
  store %struct.MLoop* %incdec.ptr427, %struct.MLoop** %ml, align 8, !dbg !4801
  br label %for.cond393, !dbg !4802, !llvm.loop !4803

for.end428:                                       ; preds = %for.cond393
  %449 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !4805
  store %struct.MVert* %449, %struct.MVert** %mv, align 8, !dbg !4806
  store i32 0, i32* %i, align 4, !dbg !4807
  br label %for.cond429, !dbg !4809

for.cond429:                                      ; preds = %for.inc439, %for.end428
  %450 = load i32, i32* %i, align 4, !dbg !4810
  %451 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm2, align 8, !dbg !4812
  %dm430 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %451, i32 0, i32 0, !dbg !4813
  %numVertData431 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm430, i32 0, i32 5, !dbg !4814
  %452 = load i32, i32* %numVertData431, align 8, !dbg !4814
  %cmp432 = icmp slt i32 %450, %452, !dbg !4815
  br i1 %cmp432, label %for.body434, label %for.end442, !dbg !4816

for.body434:                                      ; preds = %for.cond429
  %453 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4817
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %453, i32 0, i32 0, !dbg !4819
  %454 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm2, align 8, !dbg !4820
  %dm435 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %454, i32 0, i32 0, !dbg !4821
  %vertData436 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm435, i32 0, i32 0, !dbg !4822
  %455 = load i32*, i32** %oldv, align 8, !dbg !4823
  %456 = load i32, i32* %i, align 4, !dbg !4824
  %idxprom437 = sext i32 %456 to i64, !dbg !4823
  %arrayidx438 = getelementptr inbounds i32, i32* %455, i64 %idxprom437, !dbg !4823
  %457 = load i32, i32* %arrayidx438, align 4, !dbg !4823
  %458 = load i32, i32* %i, align 4, !dbg !4825
  call void @CustomData_copy_data(%struct.CustomData* %vertData, %struct.CustomData* %vertData436, i32 %457, i32 %458, i32 1), !dbg !4826
  br label %for.inc439, !dbg !4827

for.inc439:                                       ; preds = %for.body434
  %459 = load i32, i32* %i, align 4, !dbg !4828
  %inc440 = add nsw i32 %459, 1, !dbg !4828
  store i32 %inc440, i32* %i, align 4, !dbg !4828
  %460 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !4829
  %incdec.ptr441 = getelementptr inbounds %struct.MVert, %struct.MVert* %460, i32 1, !dbg !4829
  store %struct.MVert* %incdec.ptr441, %struct.MVert** %mv, align 8, !dbg !4829
  br label %for.cond429, !dbg !4830, !llvm.loop !4831

for.end442:                                       ; preds = %for.cond429
  %461 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !4833
  store %struct.MPoly* %461, %struct.MPoly** %mp, align 8, !dbg !4834
  store i32 0, i32* %i, align 4, !dbg !4835
  br label %for.cond443, !dbg !4837

for.cond443:                                      ; preds = %for.inc453, %for.end442
  %462 = load i32, i32* %i, align 4, !dbg !4838
  %463 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm2, align 8, !dbg !4840
  %dm444 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %463, i32 0, i32 0, !dbg !4841
  %numPolyData445 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm444, i32 0, i32 9, !dbg !4842
  %464 = load i32, i32* %numPolyData445, align 8, !dbg !4842
  %cmp446 = icmp slt i32 %462, %464, !dbg !4843
  br i1 %cmp446, label %for.body448, label %for.end456, !dbg !4844

for.body448:                                      ; preds = %for.cond443
  %465 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4845
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %465, i32 0, i32 4, !dbg !4847
  %466 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm2, align 8, !dbg !4848
  %dm449 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %466, i32 0, i32 0, !dbg !4849
  %polyData450 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm449, i32 0, i32 4, !dbg !4850
  %467 = load i32*, i32** %oldp, align 8, !dbg !4851
  %468 = load i32, i32* %i, align 4, !dbg !4852
  %idxprom451 = sext i32 %468 to i64, !dbg !4851
  %arrayidx452 = getelementptr inbounds i32, i32* %467, i64 %idxprom451, !dbg !4851
  %469 = load i32, i32* %arrayidx452, align 4, !dbg !4851
  %470 = load i32, i32* %i, align 4, !dbg !4853
  call void @CustomData_copy_data(%struct.CustomData* %polyData, %struct.CustomData* %polyData450, i32 %469, i32 %470, i32 1), !dbg !4854
  br label %for.inc453, !dbg !4855

for.inc453:                                       ; preds = %for.body448
  %471 = load i32, i32* %i, align 4, !dbg !4856
  %inc454 = add nsw i32 %471, 1, !dbg !4856
  store i32 %inc454, i32* %i, align 4, !dbg !4856
  %472 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4857
  %incdec.ptr455 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %472, i32 1, !dbg !4857
  store %struct.MPoly* %incdec.ptr455, %struct.MPoly** %mp, align 8, !dbg !4857
  br label %for.cond443, !dbg !4858, !llvm.loop !4859

for.end456:                                       ; preds = %for.cond443
  %473 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm2, align 8, !dbg !4861
  %mvert457 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %473, i32 0, i32 1, !dbg !4862
  %474 = load %struct.MVert*, %struct.MVert** %mvert457, align 8, !dbg !4862
  %475 = bitcast %struct.MVert* %474 to i8*, !dbg !4863
  %476 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !4864
  %477 = bitcast %struct.MVert* %476 to i8*, !dbg !4863
  %478 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !4865
  %479 = load i32, i32* %_mvert_index, align 4, !dbg !4865
  %conv458 = zext i32 %479 to i64, !dbg !4865
  %mul459 = mul i64 20, %conv458, !dbg !4866
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %475, i8* align 4 %477, i64 %mul459, i1 false), !dbg !4863
  %480 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm2, align 8, !dbg !4867
  %medge460 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %480, i32 0, i32 2, !dbg !4868
  %481 = load %struct.MEdge*, %struct.MEdge** %medge460, align 8, !dbg !4868
  %482 = bitcast %struct.MEdge* %481 to i8*, !dbg !4869
  %483 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !4870
  %484 = bitcast %struct.MEdge* %483 to i8*, !dbg !4869
  %485 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !4871
  %486 = load i32, i32* %_medge_index, align 4, !dbg !4871
  %conv461 = zext i32 %486 to i64, !dbg !4871
  %mul462 = mul i64 12, %conv461, !dbg !4872
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %482, i8* align 4 %484, i64 %mul462, i1 false), !dbg !4869
  %487 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm2, align 8, !dbg !4873
  %mloop463 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %487, i32 0, i32 4, !dbg !4874
  %488 = load %struct.MLoop*, %struct.MLoop** %mloop463, align 8, !dbg !4874
  %489 = bitcast %struct.MLoop* %488 to i8*, !dbg !4875
  %490 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4876
  %491 = bitcast %struct.MLoop* %490 to i8*, !dbg !4875
  %492 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4877
  %493 = load i32, i32* %_mloop_index, align 4, !dbg !4877
  %conv464 = zext i32 %493 to i64, !dbg !4877
  %mul465 = mul i64 8, %conv464, !dbg !4878
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %489, i8* align 4 %491, i64 %mul465, i1 false), !dbg !4875
  %494 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm2, align 8, !dbg !4879
  %mpoly466 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %494, i32 0, i32 5, !dbg !4880
  %495 = load %struct.MPoly*, %struct.MPoly** %mpoly466, align 8, !dbg !4880
  %496 = bitcast %struct.MPoly* %495 to i8*, !dbg !4881
  %497 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !4882
  %498 = bitcast %struct.MPoly* %497 to i8*, !dbg !4881
  %499 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !4883
  %500 = load i32, i32* %_mpoly_index, align 4, !dbg !4883
  %conv467 = zext i32 %500 to i64, !dbg !4883
  %mul468 = mul i64 12, %conv467, !dbg !4884
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %496, i8* align 4 %498, i64 %mul468, i1 false), !dbg !4881
  %501 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4885
  %502 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !4886
  %503 = bitcast %struct.MVert* %502 to i8*, !dbg !4886
  call void %501(i8* %503), !dbg !4885
  %504 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4887
  %505 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !4888
  %506 = bitcast %struct.MEdge* %505 to i8*, !dbg !4888
  call void %504(i8* %506), !dbg !4887
  %507 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4889
  %508 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4890
  %509 = bitcast %struct.MLoop* %508 to i8*, !dbg !4890
  call void %507(i8* %509), !dbg !4889
  %510 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4891
  %511 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !4892
  %512 = bitcast %struct.MPoly* %511 to i8*, !dbg !4892
  call void %510(i8* %512), !dbg !4891
  %513 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4893
  %514 = load i32*, i32** %newv, align 8, !dbg !4894
  %515 = bitcast i32* %514 to i8*, !dbg !4894
  call void %513(i8* %515), !dbg !4893
  %516 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4895
  %517 = load i32*, i32** %newe, align 8, !dbg !4896
  %518 = bitcast i32* %517 to i8*, !dbg !4896
  call void %516(i8* %518), !dbg !4895
  %519 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4897
  %520 = load i32*, i32** %oldv, align 8, !dbg !4898
  %521 = bitcast i32* %520 to i8*, !dbg !4898
  call void %519(i8* %521), !dbg !4897
  %522 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4899
  %523 = load i32*, i32** %olde, align 8, !dbg !4900
  %524 = bitcast i32* %523 to i8*, !dbg !4900
  call void %522(i8* %524), !dbg !4899
  %525 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4901
  %526 = load i32*, i32** %oldl, align 8, !dbg !4902
  %527 = bitcast i32* %526 to i8*, !dbg !4902
  call void %525(i8* %527), !dbg !4901
  %528 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4903
  %529 = load i32*, i32** %oldp, align 8, !dbg !4904
  %530 = bitcast i32* %529 to i8*, !dbg !4904
  call void %528(i8* %530), !dbg !4903
  %531 = load %struct.EdgeHash*, %struct.EdgeHash** %ehash, align 8, !dbg !4905
  call void @BLI_edgehash_free(%struct.EdgeHash* %531, void (i8*)* null), !dbg !4906
  %532 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4907
  %needsFree = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %532, i32 0, i32 10, !dbg !4908
  store i32 1, i32* %needsFree, align 4, !dbg !4909
  %533 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4910
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %533, i32 0, i32 95, !dbg !4911
  %534 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !4911
  %535 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4912
  call void %534(%struct.DerivedMesh* %535), !dbg !4910
  %536 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm2, align 8, !dbg !4913
  %537 = bitcast %struct.CDDerivedMesh* %536 to %struct.DerivedMesh*, !dbg !4914
  ret %struct.DerivedMesh* %537, !dbg !4915
}

declare dso_local %struct.EdgeHash* @BLI_edgehash_new_ex(i8*, i32) #2

declare dso_local i8** @BLI_edgehash_lookup_p(%struct.EdgeHash*, i32, i32) #2

declare dso_local void @BLI_edgehash_insert(%struct.EdgeHash*, i32, i32, i8*) #2

declare dso_local %struct.GSet* @BLI_gset_new_ex(i32 (i8*)*, i8 (i8*, i8*)*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @poly_gset_hash_fn(i8* %key) #0 !dbg !4916 {
entry:
  %key.addr = alloca i8*, align 8
  %pk = alloca %struct.PolyKey*, align 8
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !4921, metadata !DIExpression()), !dbg !4922
  call void @llvm.dbg.declare(metadata %struct.PolyKey** %pk, metadata !4923, metadata !DIExpression()), !dbg !4926
  %0 = load i8*, i8** %key.addr, align 8, !dbg !4927
  %1 = bitcast i8* %0 to %struct.PolyKey*, !dbg !4927
  store %struct.PolyKey* %1, %struct.PolyKey** %pk, align 8, !dbg !4926
  %2 = load %struct.PolyKey*, %struct.PolyKey** %pk, align 8, !dbg !4928
  %hash_sum = getelementptr inbounds %struct.PolyKey, %struct.PolyKey* %2, i32 0, i32 2, !dbg !4929
  %3 = load i32, i32* %hash_sum, align 4, !dbg !4929
  ret i32 %3, !dbg !4930
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @poly_gset_compare_fn(i8* %k1, i8* %k2) #0 !dbg !4931 {
entry:
  %retval = alloca i8, align 1
  %k1.addr = alloca i8*, align 8
  %k2.addr = alloca i8*, align 8
  %pk1 = alloca %struct.PolyKey*, align 8
  %pk2 = alloca %struct.PolyKey*, align 8
  store i8* %k1, i8** %k1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %k1.addr, metadata !4934, metadata !DIExpression()), !dbg !4935
  store i8* %k2, i8** %k2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %k2.addr, metadata !4936, metadata !DIExpression()), !dbg !4937
  call void @llvm.dbg.declare(metadata %struct.PolyKey** %pk1, metadata !4938, metadata !DIExpression()), !dbg !4939
  %0 = load i8*, i8** %k1.addr, align 8, !dbg !4940
  %1 = bitcast i8* %0 to %struct.PolyKey*, !dbg !4940
  store %struct.PolyKey* %1, %struct.PolyKey** %pk1, align 8, !dbg !4939
  call void @llvm.dbg.declare(metadata %struct.PolyKey** %pk2, metadata !4941, metadata !DIExpression()), !dbg !4942
  %2 = load i8*, i8** %k2.addr, align 8, !dbg !4943
  %3 = bitcast i8* %2 to %struct.PolyKey*, !dbg !4943
  store %struct.PolyKey* %3, %struct.PolyKey** %pk2, align 8, !dbg !4942
  %4 = load %struct.PolyKey*, %struct.PolyKey** %pk1, align 8, !dbg !4944
  %hash_sum = getelementptr inbounds %struct.PolyKey, %struct.PolyKey* %4, i32 0, i32 2, !dbg !4946
  %5 = load i32, i32* %hash_sum, align 4, !dbg !4946
  %6 = load %struct.PolyKey*, %struct.PolyKey** %pk2, align 8, !dbg !4947
  %hash_sum1 = getelementptr inbounds %struct.PolyKey, %struct.PolyKey* %6, i32 0, i32 2, !dbg !4948
  %7 = load i32, i32* %hash_sum1, align 4, !dbg !4948
  %cmp = icmp eq i32 %5, %7, !dbg !4949
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !4950

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.PolyKey*, %struct.PolyKey** %pk1, align 8, !dbg !4951
  %hash_xor = getelementptr inbounds %struct.PolyKey, %struct.PolyKey* %8, i32 0, i32 3, !dbg !4952
  %9 = load i32, i32* %hash_xor, align 4, !dbg !4952
  %10 = load %struct.PolyKey*, %struct.PolyKey** %pk2, align 8, !dbg !4953
  %hash_xor2 = getelementptr inbounds %struct.PolyKey, %struct.PolyKey* %10, i32 0, i32 3, !dbg !4954
  %11 = load i32, i32* %hash_xor2, align 4, !dbg !4954
  %cmp3 = icmp eq i32 %9, %11, !dbg !4955
  br i1 %cmp3, label %land.lhs.true4, label %if.else, !dbg !4956

land.lhs.true4:                                   ; preds = %land.lhs.true
  %12 = load %struct.PolyKey*, %struct.PolyKey** %pk1, align 8, !dbg !4957
  %totloops = getelementptr inbounds %struct.PolyKey, %struct.PolyKey* %12, i32 0, i32 1, !dbg !4958
  %13 = load i32, i32* %totloops, align 4, !dbg !4958
  %14 = load %struct.PolyKey*, %struct.PolyKey** %pk2, align 8, !dbg !4959
  %totloops5 = getelementptr inbounds %struct.PolyKey, %struct.PolyKey* %14, i32 0, i32 1, !dbg !4960
  %15 = load i32, i32* %totloops5, align 4, !dbg !4960
  %cmp6 = icmp eq i32 %13, %15, !dbg !4961
  br i1 %cmp6, label %if.then, label %if.else, !dbg !4962

if.then:                                          ; preds = %land.lhs.true4
  store i8 0, i8* %retval, align 1, !dbg !4963
  br label %return, !dbg !4963

if.else:                                          ; preds = %land.lhs.true4, %land.lhs.true, %entry
  store i8 1, i8* %retval, align 1, !dbg !4965
  br label %return, !dbg !4965

return:                                           ; preds = %if.else, %if.then
  %16 = load i8, i8* %retval, align 1, !dbg !4967
  ret i8 %16, !dbg !4967
}

declare dso_local void @BLI_gset_flag_set(%struct.GSet*, i32) #2

declare dso_local void @BLI_gset_insert(%struct.GSet*, i8*) #2

declare dso_local void @BKE_mesh_vert_poly_map_create(%struct.MeshElemMap**, i32**, %struct.MPoly*, %struct.MLoop*, i32, i32, i32) #2

declare dso_local zeroext i8 @BLI_gset_haskey(%struct.GSet*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @cddm_poly_compare(%struct.MLoop* %mloop_array, %struct.MPoly* %mpoly_source, %struct.MPoly* %mpoly_target, i32* %vtargetmap, i32 %direct_reverse) #0 !dbg !4968 {
entry:
  %retval = alloca i32, align 4
  %mloop_array.addr = alloca %struct.MLoop*, align 8
  %mpoly_source.addr = alloca %struct.MPoly*, align 8
  %mpoly_target.addr = alloca %struct.MPoly*, align 8
  %vtargetmap.addr = alloca i32*, align 8
  %direct_reverse.addr = alloca i32, align 4
  %vert_source = alloca i32, align 4
  %first_vert_source = alloca i32, align 4
  %vert_target = alloca i32, align 4
  %i_loop_source = alloca i32, align 4
  %i_loop_target = alloca i32, align 4
  %i_loop_target_start = alloca i32, align 4
  %i_loop_target_offset = alloca i32, align 4
  %i_loop_target_adjusted = alloca i32, align 4
  %compare_completed = alloca i8, align 1
  %same_loops = alloca i8, align 1
  %mloop_source = alloca %struct.MLoop*, align 8
  %mloop_target = alloca %struct.MLoop*, align 8
  store %struct.MLoop* %mloop_array, %struct.MLoop** %mloop_array.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop_array.addr, metadata !4971, metadata !DIExpression()), !dbg !4972
  store %struct.MPoly* %mpoly_source, %struct.MPoly** %mpoly_source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly_source.addr, metadata !4973, metadata !DIExpression()), !dbg !4974
  store %struct.MPoly* %mpoly_target, %struct.MPoly** %mpoly_target.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly_target.addr, metadata !4975, metadata !DIExpression()), !dbg !4976
  store i32* %vtargetmap, i32** %vtargetmap.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %vtargetmap.addr, metadata !4977, metadata !DIExpression()), !dbg !4978
  store i32 %direct_reverse, i32* %direct_reverse.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direct_reverse.addr, metadata !4979, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.declare(metadata i32* %vert_source, metadata !4981, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.declare(metadata i32* %first_vert_source, metadata !4983, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.declare(metadata i32* %vert_target, metadata !4985, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.declare(metadata i32* %i_loop_source, metadata !4987, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.declare(metadata i32* %i_loop_target, metadata !4989, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.declare(metadata i32* %i_loop_target_start, metadata !4991, metadata !DIExpression()), !dbg !4992
  call void @llvm.dbg.declare(metadata i32* %i_loop_target_offset, metadata !4993, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.declare(metadata i32* %i_loop_target_adjusted, metadata !4995, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.declare(metadata i8* %compare_completed, metadata !4997, metadata !DIExpression()), !dbg !4998
  store i8 0, i8* %compare_completed, align 1, !dbg !4998
  call void @llvm.dbg.declare(metadata i8* %same_loops, metadata !4999, metadata !DIExpression()), !dbg !5000
  store i8 0, i8* %same_loops, align 1, !dbg !5000
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop_source, metadata !5001, metadata !DIExpression()), !dbg !5002
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop_target, metadata !5003, metadata !DIExpression()), !dbg !5004
  store i32 0, i32* %i_loop_source, align 4, !dbg !5005
  %0 = load %struct.MLoop*, %struct.MLoop** %mloop_array.addr, align 8, !dbg !5006
  %1 = load %struct.MPoly*, %struct.MPoly** %mpoly_source.addr, align 8, !dbg !5007
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %1, i32 0, i32 0, !dbg !5008
  %2 = load i32, i32* %loopstart, align 4, !dbg !5008
  %idx.ext = sext i32 %2 to i64, !dbg !5009
  %add.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %0, i64 %idx.ext, !dbg !5009
  store %struct.MLoop* %add.ptr, %struct.MLoop** %mloop_source, align 8, !dbg !5010
  %3 = load %struct.MLoop*, %struct.MLoop** %mloop_source, align 8, !dbg !5011
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %3, i32 0, i32 0, !dbg !5012
  %4 = load i32, i32* %v, align 4, !dbg !5012
  store i32 %4, i32* %vert_source, align 4, !dbg !5013
  %5 = load i32*, i32** %vtargetmap.addr, align 8, !dbg !5014
  %6 = load i32, i32* %vert_source, align 4, !dbg !5016
  %idxprom = sext i32 %6 to i64, !dbg !5014
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 %idxprom, !dbg !5014
  %7 = load i32, i32* %arrayidx, align 4, !dbg !5014
  %cmp = icmp ne i32 %7, -1, !dbg !5017
  br i1 %cmp, label %if.then, label %if.else, !dbg !5018

if.then:                                          ; preds = %entry
  %8 = load i32*, i32** %vtargetmap.addr, align 8, !dbg !5019
  %9 = load i32, i32* %vert_source, align 4, !dbg !5021
  %idxprom1 = sext i32 %9 to i64, !dbg !5019
  %arrayidx2 = getelementptr inbounds i32, i32* %8, i64 %idxprom1, !dbg !5019
  %10 = load i32, i32* %arrayidx2, align 4, !dbg !5019
  store i32 %10, i32* %vert_source, align 4, !dbg !5022
  br label %if.end, !dbg !5023

if.else:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load %struct.MLoop*, %struct.MLoop** %mloop_array.addr, align 8, !dbg !5024
  %12 = load %struct.MPoly*, %struct.MPoly** %mpoly_target.addr, align 8, !dbg !5025
  %loopstart3 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %12, i32 0, i32 0, !dbg !5026
  %13 = load i32, i32* %loopstart3, align 4, !dbg !5026
  %idx.ext4 = sext i32 %13 to i64, !dbg !5027
  %add.ptr5 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %11, i64 %idx.ext4, !dbg !5027
  store %struct.MLoop* %add.ptr5, %struct.MLoop** %mloop_target, align 8, !dbg !5028
  store i32 0, i32* %i_loop_target, align 4, !dbg !5029
  br label %for.cond, !dbg !5031

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load i32, i32* %i_loop_target, align 4, !dbg !5032
  %15 = load %struct.MPoly*, %struct.MPoly** %mpoly_target.addr, align 8, !dbg !5034
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %15, i32 0, i32 1, !dbg !5035
  %16 = load i32, i32* %totloop, align 4, !dbg !5035
  %cmp6 = icmp slt i32 %14, %16, !dbg !5036
  br i1 %cmp6, label %for.body, label %for.end, !dbg !5037

for.body:                                         ; preds = %for.cond
  %17 = load %struct.MLoop*, %struct.MLoop** %mloop_target, align 8, !dbg !5038
  %v7 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %17, i32 0, i32 0, !dbg !5041
  %18 = load i32, i32* %v7, align 4, !dbg !5041
  %19 = load i32, i32* %vert_source, align 4, !dbg !5042
  %cmp8 = icmp eq i32 %18, %19, !dbg !5043
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !5044

if.then9:                                         ; preds = %for.body
  br label %for.end, !dbg !5045

if.end10:                                         ; preds = %for.body
  br label %for.inc, !dbg !5047

for.inc:                                          ; preds = %if.end10
  %20 = load i32, i32* %i_loop_target, align 4, !dbg !5048
  %inc = add nsw i32 %20, 1, !dbg !5048
  store i32 %inc, i32* %i_loop_target, align 4, !dbg !5048
  %21 = load %struct.MLoop*, %struct.MLoop** %mloop_target, align 8, !dbg !5049
  %incdec.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %21, i32 1, !dbg !5049
  store %struct.MLoop* %incdec.ptr, %struct.MLoop** %mloop_target, align 8, !dbg !5049
  br label %for.cond, !dbg !5050, !llvm.loop !5051

for.end:                                          ; preds = %if.then9, %for.cond
  %22 = load i32, i32* %i_loop_target, align 4, !dbg !5053
  %23 = load %struct.MPoly*, %struct.MPoly** %mpoly_target.addr, align 8, !dbg !5055
  %totloop11 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %23, i32 0, i32 1, !dbg !5056
  %24 = load i32, i32* %totloop11, align 4, !dbg !5056
  %cmp12 = icmp sge i32 %22, %24, !dbg !5057
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !5058

if.then13:                                        ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !5059
  br label %return, !dbg !5059

if.end14:                                         ; preds = %for.end
  %25 = load i32, i32* %i_loop_target, align 4, !dbg !5061
  store i32 %25, i32* %i_loop_target_start, align 4, !dbg !5062
  store i32 0, i32* %i_loop_target_offset, align 4, !dbg !5063
  %26 = load i32, i32* %vert_source, align 4, !dbg !5064
  store i32 %26, i32* %first_vert_source, align 4, !dbg !5065
  store i8 0, i8* %compare_completed, align 1, !dbg !5066
  store i8 0, i8* %same_loops, align 1, !dbg !5067
  br label %while.cond, !dbg !5068

while.cond:                                       ; preds = %if.end75, %if.end14
  %27 = load i8, i8* %compare_completed, align 1, !dbg !5069
  %tobool = icmp ne i8 %27, 0, !dbg !5070
  %lnot = xor i1 %tobool, true, !dbg !5070
  br i1 %lnot, label %while.body, label %while.end, !dbg !5068

while.body:                                       ; preds = %while.cond
  %28 = load %struct.MLoop*, %struct.MLoop** %mloop_target, align 8, !dbg !5071
  %v15 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %28, i32 0, i32 0, !dbg !5073
  %29 = load i32, i32* %v15, align 4, !dbg !5073
  store i32 %29, i32* %vert_target, align 4, !dbg !5074
  br label %do.body, !dbg !5075

do.body:                                          ; preds = %do.cond, %while.body
  %30 = load i32, i32* %i_loop_source, align 4, !dbg !5076
  %inc16 = add nsw i32 %30, 1, !dbg !5076
  store i32 %inc16, i32* %i_loop_source, align 4, !dbg !5076
  %31 = load i32, i32* %i_loop_source, align 4, !dbg !5078
  %32 = load %struct.MPoly*, %struct.MPoly** %mpoly_source.addr, align 8, !dbg !5080
  %totloop17 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %32, i32 0, i32 1, !dbg !5081
  %33 = load i32, i32* %totloop17, align 4, !dbg !5081
  %cmp18 = icmp eq i32 %31, %33, !dbg !5082
  br i1 %cmp18, label %if.then19, label %if.end24, !dbg !5083

if.then19:                                        ; preds = %do.body
  %34 = load i32, i32* %i_loop_target_offset, align 4, !dbg !5084
  %35 = load %struct.MPoly*, %struct.MPoly** %mpoly_target.addr, align 8, !dbg !5087
  %totloop20 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %35, i32 0, i32 1, !dbg !5088
  %36 = load i32, i32* %totloop20, align 4, !dbg !5088
  %sub = sub nsw i32 %36, 1, !dbg !5089
  %cmp21 = icmp eq i32 %34, %sub, !dbg !5090
  br i1 %cmp21, label %if.then22, label %if.else23, !dbg !5091

if.then22:                                        ; preds = %if.then19
  store i8 1, i8* %compare_completed, align 1, !dbg !5092
  store i8 1, i8* %same_loops, align 1, !dbg !5094
  br label %do.end, !dbg !5095

if.else23:                                        ; preds = %if.then19
  store i8 1, i8* %compare_completed, align 1, !dbg !5096
  store i8 0, i8* %same_loops, align 1, !dbg !5098
  br label %do.end, !dbg !5099

if.end24:                                         ; preds = %do.body
  %37 = load %struct.MLoop*, %struct.MLoop** %mloop_source, align 8, !dbg !5100
  %incdec.ptr25 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %37, i32 1, !dbg !5100
  store %struct.MLoop* %incdec.ptr25, %struct.MLoop** %mloop_source, align 8, !dbg !5100
  %38 = load %struct.MLoop*, %struct.MLoop** %mloop_source, align 8, !dbg !5101
  %v26 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %38, i32 0, i32 0, !dbg !5102
  %39 = load i32, i32* %v26, align 4, !dbg !5102
  store i32 %39, i32* %vert_source, align 4, !dbg !5103
  %40 = load i32*, i32** %vtargetmap.addr, align 8, !dbg !5104
  %41 = load i32, i32* %vert_source, align 4, !dbg !5106
  %idxprom27 = sext i32 %41 to i64, !dbg !5104
  %arrayidx28 = getelementptr inbounds i32, i32* %40, i64 %idxprom27, !dbg !5104
  %42 = load i32, i32* %arrayidx28, align 4, !dbg !5104
  %cmp29 = icmp ne i32 %42, -1, !dbg !5107
  br i1 %cmp29, label %if.then30, label %if.else33, !dbg !5108

if.then30:                                        ; preds = %if.end24
  %43 = load i32*, i32** %vtargetmap.addr, align 8, !dbg !5109
  %44 = load i32, i32* %vert_source, align 4, !dbg !5111
  %idxprom31 = sext i32 %44 to i64, !dbg !5109
  %arrayidx32 = getelementptr inbounds i32, i32* %43, i64 %idxprom31, !dbg !5109
  %45 = load i32, i32* %arrayidx32, align 4, !dbg !5109
  store i32 %45, i32* %vert_source, align 4, !dbg !5112
  br label %if.end34, !dbg !5113

if.else33:                                        ; preds = %if.end24
  br label %if.end34

if.end34:                                         ; preds = %if.else33, %if.then30
  br label %do.cond, !dbg !5114

do.cond:                                          ; preds = %if.end34
  %46 = load i32, i32* %vert_source, align 4, !dbg !5115
  %47 = load i32, i32* %vert_target, align 4, !dbg !5116
  %cmp35 = icmp eq i32 %46, %47, !dbg !5117
  br i1 %cmp35, label %do.body, label %do.end, !dbg !5114, !llvm.loop !5118

do.end:                                           ; preds = %do.cond, %if.else23, %if.then22
  %48 = load i8, i8* %compare_completed, align 1, !dbg !5120
  %tobool36 = icmp ne i8 %48, 0, !dbg !5120
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !5122

if.then37:                                        ; preds = %do.end
  br label %while.end, !dbg !5123

if.end38:                                         ; preds = %do.end
  %49 = load i32, i32* %i_loop_target_offset, align 4, !dbg !5125
  %inc39 = add nsw i32 %49, 1, !dbg !5125
  store i32 %inc39, i32* %i_loop_target_offset, align 4, !dbg !5125
  %50 = load i32, i32* %i_loop_target_offset, align 4, !dbg !5126
  %51 = load %struct.MPoly*, %struct.MPoly** %mpoly_target.addr, align 8, !dbg !5128
  %totloop40 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %51, i32 0, i32 1, !dbg !5129
  %52 = load i32, i32* %totloop40, align 4, !dbg !5129
  %cmp41 = icmp eq i32 %50, %52, !dbg !5130
  br i1 %cmp41, label %if.then42, label %if.end60, !dbg !5131

if.then42:                                        ; preds = %if.end38
  br label %for.cond43, !dbg !5132

for.cond43:                                       ; preds = %for.inc53, %if.then42
  %53 = load i32, i32* %i_loop_source, align 4, !dbg !5134
  %54 = load %struct.MPoly*, %struct.MPoly** %mpoly_source.addr, align 8, !dbg !5137
  %totloop44 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %54, i32 0, i32 1, !dbg !5138
  %55 = load i32, i32* %totloop44, align 4, !dbg !5138
  %cmp45 = icmp slt i32 %53, %55, !dbg !5139
  br i1 %cmp45, label %for.body46, label %for.end56, !dbg !5140

for.body46:                                       ; preds = %for.cond43
  %56 = load i32*, i32** %vtargetmap.addr, align 8, !dbg !5141
  %57 = load %struct.MLoop*, %struct.MLoop** %mloop_source, align 8, !dbg !5143
  %v47 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %57, i32 0, i32 0, !dbg !5144
  %58 = load i32, i32* %v47, align 4, !dbg !5144
  %idxprom48 = zext i32 %58 to i64, !dbg !5141
  %arrayidx49 = getelementptr inbounds i32, i32* %56, i64 %idxprom48, !dbg !5141
  %59 = load i32, i32* %arrayidx49, align 4, !dbg !5141
  store i32 %59, i32* %vert_source, align 4, !dbg !5145
  %60 = load i32, i32* %vert_source, align 4, !dbg !5146
  %61 = load i32, i32* %first_vert_source, align 4, !dbg !5148
  %cmp50 = icmp ne i32 %60, %61, !dbg !5149
  br i1 %cmp50, label %if.then51, label %if.end52, !dbg !5150

if.then51:                                        ; preds = %for.body46
  store i8 1, i8* %compare_completed, align 1, !dbg !5151
  store i8 0, i8* %same_loops, align 1, !dbg !5153
  br label %for.end56, !dbg !5154

if.end52:                                         ; preds = %for.body46
  br label %for.inc53, !dbg !5155

for.inc53:                                        ; preds = %if.end52
  %62 = load i32, i32* %i_loop_source, align 4, !dbg !5156
  %inc54 = add nsw i32 %62, 1, !dbg !5156
  store i32 %inc54, i32* %i_loop_source, align 4, !dbg !5156
  %63 = load %struct.MLoop*, %struct.MLoop** %mloop_source, align 8, !dbg !5157
  %incdec.ptr55 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %63, i32 1, !dbg !5157
  store %struct.MLoop* %incdec.ptr55, %struct.MLoop** %mloop_source, align 8, !dbg !5157
  br label %for.cond43, !dbg !5158, !llvm.loop !5159

for.end56:                                        ; preds = %if.then51, %for.cond43
  %64 = load i8, i8* %compare_completed, align 1, !dbg !5161
  %tobool57 = icmp ne i8 %64, 0, !dbg !5161
  br i1 %tobool57, label %if.end59, label %if.then58, !dbg !5163

if.then58:                                        ; preds = %for.end56
  store i8 1, i8* %same_loops, align 1, !dbg !5164
  br label %if.end59, !dbg !5166

if.end59:                                         ; preds = %if.then58, %for.end56
  br label %while.end, !dbg !5167

if.end60:                                         ; preds = %if.end38
  %65 = load i32, i32* %i_loop_target_start, align 4, !dbg !5168
  %66 = load i32, i32* %direct_reverse.addr, align 4, !dbg !5169
  %67 = load i32, i32* %i_loop_target_offset, align 4, !dbg !5170
  %mul = mul nsw i32 %66, %67, !dbg !5171
  %add = add nsw i32 %65, %mul, !dbg !5172
  %68 = load %struct.MPoly*, %struct.MPoly** %mpoly_target.addr, align 8, !dbg !5173
  %totloop61 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %68, i32 0, i32 1, !dbg !5174
  %69 = load i32, i32* %totloop61, align 4, !dbg !5174
  %rem = srem i32 %add, %69, !dbg !5175
  store i32 %rem, i32* %i_loop_target_adjusted, align 4, !dbg !5176
  %70 = load i32, i32* %i_loop_target_adjusted, align 4, !dbg !5177
  %cmp62 = icmp slt i32 %70, 0, !dbg !5179
  br i1 %cmp62, label %if.then63, label %if.end66, !dbg !5180

if.then63:                                        ; preds = %if.end60
  %71 = load %struct.MPoly*, %struct.MPoly** %mpoly_target.addr, align 8, !dbg !5181
  %totloop64 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %71, i32 0, i32 1, !dbg !5183
  %72 = load i32, i32* %totloop64, align 4, !dbg !5183
  %73 = load i32, i32* %i_loop_target_adjusted, align 4, !dbg !5184
  %add65 = add nsw i32 %73, %72, !dbg !5184
  store i32 %add65, i32* %i_loop_target_adjusted, align 4, !dbg !5184
  br label %if.end66, !dbg !5185

if.end66:                                         ; preds = %if.then63, %if.end60
  %74 = load %struct.MLoop*, %struct.MLoop** %mloop_array.addr, align 8, !dbg !5186
  %75 = load %struct.MPoly*, %struct.MPoly** %mpoly_target.addr, align 8, !dbg !5187
  %loopstart67 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %75, i32 0, i32 0, !dbg !5188
  %76 = load i32, i32* %loopstart67, align 4, !dbg !5188
  %idx.ext68 = sext i32 %76 to i64, !dbg !5189
  %add.ptr69 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %74, i64 %idx.ext68, !dbg !5189
  %77 = load i32, i32* %i_loop_target_adjusted, align 4, !dbg !5190
  %idx.ext70 = sext i32 %77 to i64, !dbg !5191
  %add.ptr71 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %add.ptr69, i64 %idx.ext70, !dbg !5191
  store %struct.MLoop* %add.ptr71, %struct.MLoop** %mloop_target, align 8, !dbg !5192
  %78 = load %struct.MLoop*, %struct.MLoop** %mloop_target, align 8, !dbg !5193
  %v72 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %78, i32 0, i32 0, !dbg !5194
  %79 = load i32, i32* %v72, align 4, !dbg !5194
  store i32 %79, i32* %vert_target, align 4, !dbg !5195
  %80 = load i32, i32* %vert_target, align 4, !dbg !5196
  %81 = load i32, i32* %vert_source, align 4, !dbg !5198
  %cmp73 = icmp ne i32 %80, %81, !dbg !5199
  br i1 %cmp73, label %if.then74, label %if.end75, !dbg !5200

if.then74:                                        ; preds = %if.end66
  store i8 0, i8* %same_loops, align 1, !dbg !5201
  br label %while.end, !dbg !5203

if.end75:                                         ; preds = %if.end66
  br label %while.cond, !dbg !5068, !llvm.loop !5204

while.end:                                        ; preds = %if.then74, %if.end59, %if.then37, %while.cond
  %82 = load i8, i8* %same_loops, align 1, !dbg !5206
  %conv = zext i8 %82 to i32, !dbg !5206
  store i32 %conv, i32* %retval, align 4, !dbg !5207
  br label %return, !dbg !5207

return:                                           ; preds = %while.end, %if.then13
  %83 = load i32, i32* %retval, align 4, !dbg !5208
  ret i32 %83, !dbg !5208
}

declare dso_local void @BLI_gset_free(%struct.GSet*, void (i8*)*) #2

declare dso_local void @CustomData_copy_data(%struct.CustomData*, %struct.CustomData*, i32, i32, i32) #2

declare dso_local void @BLI_edgehash_free(%struct.EdgeHash*, void (i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CDDM_calc_edges_tessface(%struct.DerivedMesh* %dm) #0 !dbg !5209 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %edgeData = alloca %struct.CustomData, align 8
  %ehi = alloca %struct.EdgeSetIterator*, align 8
  %mf = alloca %struct.MFace*, align 8
  %med = alloca %struct.MEdge*, align 8
  %eh = alloca %struct.EdgeSet*, align 8
  %i = alloca i32, align 4
  %index = alloca i32*, align 8
  %numEdges = alloca i32, align 4
  %numFaces = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5210, metadata !DIExpression()), !dbg !5211
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !5212, metadata !DIExpression()), !dbg !5213
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5214
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !5215
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5213
  call void @llvm.dbg.declare(metadata %struct.CustomData* %edgeData, metadata !5216, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.declare(metadata %struct.EdgeSetIterator** %ehi, metadata !5218, metadata !DIExpression()), !dbg !5219
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !5220, metadata !DIExpression()), !dbg !5221
  %2 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5222
  %mface = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %2, i32 0, i32 3, !dbg !5223
  %3 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !5223
  store %struct.MFace* %3, %struct.MFace** %mf, align 8, !dbg !5221
  call void @llvm.dbg.declare(metadata %struct.MEdge** %med, metadata !5224, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.declare(metadata %struct.EdgeSet** %eh, metadata !5226, metadata !DIExpression()), !dbg !5230
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5231, metadata !DIExpression()), !dbg !5232
  call void @llvm.dbg.declare(metadata i32** %index, metadata !5233, metadata !DIExpression()), !dbg !5234
  call void @llvm.dbg.declare(metadata i32* %numEdges, metadata !5235, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.declare(metadata i32* %numFaces, metadata !5237, metadata !DIExpression()), !dbg !5238
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5239
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 7, !dbg !5240
  %5 = load i32, i32* %numTessFaceData, align 8, !dbg !5240
  store i32 %5, i32* %numFaces, align 4, !dbg !5238
  %6 = load i32, i32* %numFaces, align 4, !dbg !5241
  %mul = mul nsw i32 %6, 2, !dbg !5241
  %call = call %struct.EdgeSet* @BLI_edgeset_new_ex(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.CDDM_calc_edges_tessface, i64 0, i64 0), i32 %mul), !dbg !5242
  store %struct.EdgeSet* %call, %struct.EdgeSet** %eh, align 8, !dbg !5243
  store i32 0, i32* %i, align 4, !dbg !5244
  br label %for.cond, !dbg !5246

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !5247
  %8 = load i32, i32* %numFaces, align 4, !dbg !5249
  %cmp = icmp slt i32 %7, %8, !dbg !5250
  br i1 %cmp, label %for.body, label %for.end, !dbg !5251

for.body:                                         ; preds = %for.cond
  %9 = load %struct.EdgeSet*, %struct.EdgeSet** %eh, align 8, !dbg !5252
  %10 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5254
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %10, i32 0, i32 0, !dbg !5255
  %11 = load i32, i32* %v1, align 4, !dbg !5255
  %12 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5256
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %12, i32 0, i32 1, !dbg !5257
  %13 = load i32, i32* %v2, align 4, !dbg !5257
  %call1 = call zeroext i8 @BLI_edgeset_add(%struct.EdgeSet* %9, i32 %11, i32 %13), !dbg !5258
  %14 = load %struct.EdgeSet*, %struct.EdgeSet** %eh, align 8, !dbg !5259
  %15 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5260
  %v22 = getelementptr inbounds %struct.MFace, %struct.MFace* %15, i32 0, i32 1, !dbg !5261
  %16 = load i32, i32* %v22, align 4, !dbg !5261
  %17 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5262
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %17, i32 0, i32 2, !dbg !5263
  %18 = load i32, i32* %v3, align 4, !dbg !5263
  %call3 = call zeroext i8 @BLI_edgeset_add(%struct.EdgeSet* %14, i32 %16, i32 %18), !dbg !5264
  %19 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5265
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %19, i32 0, i32 3, !dbg !5267
  %20 = load i32, i32* %v4, align 4, !dbg !5267
  %tobool = icmp ne i32 %20, 0, !dbg !5265
  br i1 %tobool, label %if.then, label %if.else, !dbg !5268

if.then:                                          ; preds = %for.body
  %21 = load %struct.EdgeSet*, %struct.EdgeSet** %eh, align 8, !dbg !5269
  %22 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5271
  %v34 = getelementptr inbounds %struct.MFace, %struct.MFace* %22, i32 0, i32 2, !dbg !5272
  %23 = load i32, i32* %v34, align 4, !dbg !5272
  %24 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5273
  %v45 = getelementptr inbounds %struct.MFace, %struct.MFace* %24, i32 0, i32 3, !dbg !5274
  %25 = load i32, i32* %v45, align 4, !dbg !5274
  %call6 = call zeroext i8 @BLI_edgeset_add(%struct.EdgeSet* %21, i32 %23, i32 %25), !dbg !5275
  %26 = load %struct.EdgeSet*, %struct.EdgeSet** %eh, align 8, !dbg !5276
  %27 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5277
  %v47 = getelementptr inbounds %struct.MFace, %struct.MFace* %27, i32 0, i32 3, !dbg !5278
  %28 = load i32, i32* %v47, align 4, !dbg !5278
  %29 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5279
  %v18 = getelementptr inbounds %struct.MFace, %struct.MFace* %29, i32 0, i32 0, !dbg !5280
  %30 = load i32, i32* %v18, align 4, !dbg !5280
  %call9 = call zeroext i8 @BLI_edgeset_add(%struct.EdgeSet* %26, i32 %28, i32 %30), !dbg !5281
  br label %if.end, !dbg !5282

if.else:                                          ; preds = %for.body
  %31 = load %struct.EdgeSet*, %struct.EdgeSet** %eh, align 8, !dbg !5283
  %32 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5285
  %v310 = getelementptr inbounds %struct.MFace, %struct.MFace* %32, i32 0, i32 2, !dbg !5286
  %33 = load i32, i32* %v310, align 4, !dbg !5286
  %34 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5287
  %v111 = getelementptr inbounds %struct.MFace, %struct.MFace* %34, i32 0, i32 0, !dbg !5288
  %35 = load i32, i32* %v111, align 4, !dbg !5288
  %call12 = call zeroext i8 @BLI_edgeset_add(%struct.EdgeSet* %31, i32 %33, i32 %35), !dbg !5289
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !5290

for.inc:                                          ; preds = %if.end
  %36 = load i32, i32* %i, align 4, !dbg !5291
  %inc = add nsw i32 %36, 1, !dbg !5291
  store i32 %inc, i32* %i, align 4, !dbg !5291
  %37 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5292
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %37, i32 1, !dbg !5292
  store %struct.MFace* %incdec.ptr, %struct.MFace** %mf, align 8, !dbg !5292
  br label %for.cond, !dbg !5293, !llvm.loop !5294

for.end:                                          ; preds = %for.cond
  %38 = load %struct.EdgeSet*, %struct.EdgeSet** %eh, align 8, !dbg !5296
  %call13 = call i32 @BLI_edgeset_size(%struct.EdgeSet* %38), !dbg !5297
  store i32 %call13, i32* %numEdges, align 4, !dbg !5298
  call void @CustomData_reset(%struct.CustomData* %edgeData), !dbg !5299
  %39 = load i32, i32* %numEdges, align 4, !dbg !5300
  %call14 = call i8* @CustomData_add_layer(%struct.CustomData* %edgeData, i32 3, i32 1, i8* null, i32 %39), !dbg !5301
  %40 = load i32, i32* %numEdges, align 4, !dbg !5302
  %call15 = call i8* @CustomData_add_layer(%struct.CustomData* %edgeData, i32 7, i32 1, i8* null, i32 %40), !dbg !5303
  %call16 = call i8* @CustomData_get_layer(%struct.CustomData* %edgeData, i32 3), !dbg !5304
  %41 = bitcast i8* %call16 to %struct.MEdge*, !dbg !5304
  store %struct.MEdge* %41, %struct.MEdge** %med, align 8, !dbg !5305
  %call17 = call i8* @CustomData_get_layer(%struct.CustomData* %edgeData, i32 7), !dbg !5306
  %42 = bitcast i8* %call17 to i32*, !dbg !5306
  store i32* %42, i32** %index, align 8, !dbg !5307
  %43 = load %struct.EdgeSet*, %struct.EdgeSet** %eh, align 8, !dbg !5308
  %call18 = call %struct.EdgeSetIterator* @BLI_edgesetIterator_new(%struct.EdgeSet* %43), !dbg !5310
  store %struct.EdgeSetIterator* %call18, %struct.EdgeSetIterator** %ehi, align 8, !dbg !5311
  store i32 0, i32* %i, align 4, !dbg !5312
  br label %for.cond19, !dbg !5313

for.cond19:                                       ; preds = %for.inc26, %for.end
  %44 = load %struct.EdgeSetIterator*, %struct.EdgeSetIterator** %ehi, align 8, !dbg !5314
  %call20 = call zeroext i8 @BLI_edgesetIterator_isDone(%struct.EdgeSetIterator* %44), !dbg !5316
  %conv = zext i8 %call20 to i32, !dbg !5316
  %cmp21 = icmp eq i32 %conv, 0, !dbg !5317
  br i1 %cmp21, label %for.body23, label %for.end30, !dbg !5318

for.body23:                                       ; preds = %for.cond19
  %45 = load %struct.EdgeSetIterator*, %struct.EdgeSetIterator** %ehi, align 8, !dbg !5319
  %46 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !5321
  %v124 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %46, i32 0, i32 0, !dbg !5322
  %47 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !5323
  %v225 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %47, i32 0, i32 1, !dbg !5324
  call void @BLI_edgesetIterator_getKey(%struct.EdgeSetIterator* %45, i32* %v124, i32* %v225), !dbg !5325
  %48 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !5326
  %flag = getelementptr inbounds %struct.MEdge, %struct.MEdge* %48, i32 0, i32 4, !dbg !5327
  store i16 34, i16* %flag, align 2, !dbg !5328
  %49 = load i32*, i32** %index, align 8, !dbg !5329
  store i32 -1, i32* %49, align 4, !dbg !5330
  br label %for.inc26, !dbg !5331

for.inc26:                                        ; preds = %for.body23
  %50 = load %struct.EdgeSetIterator*, %struct.EdgeSetIterator** %ehi, align 8, !dbg !5332
  call void @BLI_edgesetIterator_step(%struct.EdgeSetIterator* %50), !dbg !5333
  %51 = load i32, i32* %i, align 4, !dbg !5334
  %inc27 = add nsw i32 %51, 1, !dbg !5334
  store i32 %inc27, i32* %i, align 4, !dbg !5334
  %52 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !5335
  %incdec.ptr28 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %52, i32 1, !dbg !5335
  store %struct.MEdge* %incdec.ptr28, %struct.MEdge** %med, align 8, !dbg !5335
  %53 = load i32*, i32** %index, align 8, !dbg !5336
  %incdec.ptr29 = getelementptr inbounds i32, i32* %53, i32 1, !dbg !5336
  store i32* %incdec.ptr29, i32** %index, align 8, !dbg !5336
  br label %for.cond19, !dbg !5337, !llvm.loop !5338

for.end30:                                        ; preds = %for.cond19
  %54 = load %struct.EdgeSetIterator*, %struct.EdgeSetIterator** %ehi, align 8, !dbg !5340
  call void @BLI_edgesetIterator_free(%struct.EdgeSetIterator* %54), !dbg !5341
  %55 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5342
  %edgeData31 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %55, i32 0, i32 1, !dbg !5343
  %56 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5344
  %numEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %56, i32 0, i32 6, !dbg !5345
  %57 = load i32, i32* %numEdgeData, align 4, !dbg !5345
  call void @CustomData_free(%struct.CustomData* %edgeData31, i32 %57), !dbg !5346
  %58 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5347
  %edgeData32 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %58, i32 0, i32 1, !dbg !5348
  %59 = bitcast %struct.CustomData* %edgeData32 to i8*, !dbg !5349
  %60 = bitcast %struct.CustomData* %edgeData to i8*, !dbg !5349
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 200, i1 false), !dbg !5349
  %61 = load i32, i32* %numEdges, align 4, !dbg !5350
  %62 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5351
  %numEdgeData33 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %62, i32 0, i32 6, !dbg !5352
  store i32 %61, i32* %numEdgeData33, align 4, !dbg !5353
  %63 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5354
  %edgeData34 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %63, i32 0, i32 1, !dbg !5355
  %call35 = call i8* @CustomData_get_layer(%struct.CustomData* %edgeData34, i32 3), !dbg !5356
  %64 = bitcast i8* %call35 to %struct.MEdge*, !dbg !5356
  %65 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5357
  %medge = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %65, i32 0, i32 2, !dbg !5358
  store %struct.MEdge* %64, %struct.MEdge** %medge, align 8, !dbg !5359
  %66 = load %struct.EdgeSet*, %struct.EdgeSet** %eh, align 8, !dbg !5360
  call void @BLI_edgeset_free(%struct.EdgeSet* %66), !dbg !5361
  ret void, !dbg !5362
}

declare dso_local %struct.EdgeSet* @BLI_edgeset_new_ex(i8*, i32) #2

declare dso_local zeroext i8 @BLI_edgeset_add(%struct.EdgeSet*, i32, i32) #2

declare dso_local i32 @BLI_edgeset_size(%struct.EdgeSet*) #2

declare dso_local void @CustomData_reset(%struct.CustomData*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.EdgeSetIterator* @BLI_edgesetIterator_new(%struct.EdgeSet* %gs) #0 !dbg !5363 {
entry:
  %gs.addr = alloca %struct.EdgeSet*, align 8
  store %struct.EdgeSet* %gs, %struct.EdgeSet** %gs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EdgeSet** %gs.addr, metadata !5366, metadata !DIExpression()), !dbg !5367
  %0 = load %struct.EdgeSet*, %struct.EdgeSet** %gs.addr, align 8, !dbg !5368
  %1 = bitcast %struct.EdgeSet* %0 to %struct.EdgeHash*, !dbg !5369
  %call = call %struct.EdgeHashIterator* @BLI_edgehashIterator_new(%struct.EdgeHash* %1), !dbg !5370
  %2 = bitcast %struct.EdgeHashIterator* %call to %struct.EdgeSetIterator*, !dbg !5371
  ret %struct.EdgeSetIterator* %2, !dbg !5372
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_edgesetIterator_isDone(%struct.EdgeSetIterator* %esi) #0 !dbg !5373 {
entry:
  %esi.addr = alloca %struct.EdgeSetIterator*, align 8
  store %struct.EdgeSetIterator* %esi, %struct.EdgeSetIterator** %esi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EdgeSetIterator** %esi.addr, metadata !5376, metadata !DIExpression()), !dbg !5377
  %0 = load %struct.EdgeSetIterator*, %struct.EdgeSetIterator** %esi.addr, align 8, !dbg !5378
  %1 = bitcast %struct.EdgeSetIterator* %0 to %struct.EdgeHashIterator*, !dbg !5379
  %call = call zeroext i8 @BLI_edgehashIterator_isDone(%struct.EdgeHashIterator* %1), !dbg !5380
  ret i8 %call, !dbg !5381
}

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_edgesetIterator_getKey(%struct.EdgeSetIterator* %esi, i32* %r_v0, i32* %r_v1) #0 !dbg !5382 {
entry:
  %esi.addr = alloca %struct.EdgeSetIterator*, align 8
  %r_v0.addr = alloca i32*, align 8
  %r_v1.addr = alloca i32*, align 8
  store %struct.EdgeSetIterator* %esi, %struct.EdgeSetIterator** %esi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EdgeSetIterator** %esi.addr, metadata !5385, metadata !DIExpression()), !dbg !5386
  store i32* %r_v0, i32** %r_v0.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_v0.addr, metadata !5387, metadata !DIExpression()), !dbg !5388
  store i32* %r_v1, i32** %r_v1.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_v1.addr, metadata !5389, metadata !DIExpression()), !dbg !5390
  %0 = load %struct.EdgeSetIterator*, %struct.EdgeSetIterator** %esi.addr, align 8, !dbg !5391
  %1 = bitcast %struct.EdgeSetIterator* %0 to %struct.EdgeHashIterator*, !dbg !5392
  %2 = load i32*, i32** %r_v0.addr, align 8, !dbg !5393
  %3 = load i32*, i32** %r_v1.addr, align 8, !dbg !5394
  call void @BLI_edgehashIterator_getKey(%struct.EdgeHashIterator* %1, i32* %2, i32* %3), !dbg !5395
  ret void, !dbg !5396
}

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_edgesetIterator_step(%struct.EdgeSetIterator* %esi) #0 !dbg !5397 {
entry:
  %esi.addr = alloca %struct.EdgeSetIterator*, align 8
  store %struct.EdgeSetIterator* %esi, %struct.EdgeSetIterator** %esi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EdgeSetIterator** %esi.addr, metadata !5400, metadata !DIExpression()), !dbg !5401
  %0 = load %struct.EdgeSetIterator*, %struct.EdgeSetIterator** %esi.addr, align 8, !dbg !5402
  %1 = bitcast %struct.EdgeSetIterator* %0 to %struct.EdgeHashIterator*, !dbg !5403
  call void @BLI_edgehashIterator_step(%struct.EdgeHashIterator* %1), !dbg !5404
  ret void, !dbg !5405
}

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_edgesetIterator_free(%struct.EdgeSetIterator* %esi) #0 !dbg !5406 {
entry:
  %esi.addr = alloca %struct.EdgeSetIterator*, align 8
  store %struct.EdgeSetIterator* %esi, %struct.EdgeSetIterator** %esi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EdgeSetIterator** %esi.addr, metadata !5407, metadata !DIExpression()), !dbg !5408
  %0 = load %struct.EdgeSetIterator*, %struct.EdgeSetIterator** %esi.addr, align 8, !dbg !5409
  %1 = bitcast %struct.EdgeSetIterator* %0 to %struct.EdgeHashIterator*, !dbg !5410
  call void @BLI_edgehashIterator_free(%struct.EdgeHashIterator* %1), !dbg !5411
  ret void, !dbg !5412
}

declare dso_local void @CustomData_free(%struct.CustomData*, i32) #2

declare dso_local void @BLI_edgeset_free(%struct.EdgeSet*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CDDM_calc_edges(%struct.DerivedMesh* %dm) #0 !dbg !5413 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %edgeData = alloca %struct.CustomData, align 8
  %ehi = alloca %struct.EdgeHashIterator*, align 8
  %mp = alloca %struct.MPoly*, align 8
  %ml = alloca %struct.MLoop*, align 8
  %med = alloca %struct.MEdge*, align 8
  %origmed = alloca %struct.MEdge*, align 8
  %eh = alloca %struct.EdgeHash*, align 8
  %eh_reserve = alloca i32, align 4
  %v1 = alloca i32, align 4
  %v2 = alloca i32, align 4
  %eindex = alloca i32*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %index = alloca i32*, align 8
  %numFaces = alloca i32, align 4
  %numLoops = alloca i32, align 4
  %numEdges = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5414, metadata !DIExpression()), !dbg !5415
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !5416, metadata !DIExpression()), !dbg !5417
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5418
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !5419
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5417
  call void @llvm.dbg.declare(metadata %struct.CustomData* %edgeData, metadata !5420, metadata !DIExpression()), !dbg !5421
  call void @llvm.dbg.declare(metadata %struct.EdgeHashIterator** %ehi, metadata !5422, metadata !DIExpression()), !dbg !5423
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !5424, metadata !DIExpression()), !dbg !5425
  %2 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5426
  %mpoly = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %2, i32 0, i32 5, !dbg !5427
  %3 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !5427
  store %struct.MPoly* %3, %struct.MPoly** %mp, align 8, !dbg !5425
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml, metadata !5428, metadata !DIExpression()), !dbg !5429
  call void @llvm.dbg.declare(metadata %struct.MEdge** %med, metadata !5430, metadata !DIExpression()), !dbg !5431
  call void @llvm.dbg.declare(metadata %struct.MEdge** %origmed, metadata !5432, metadata !DIExpression()), !dbg !5433
  call void @llvm.dbg.declare(metadata %struct.EdgeHash** %eh, metadata !5434, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.declare(metadata i32* %eh_reserve, metadata !5436, metadata !DIExpression()), !dbg !5437
  call void @llvm.dbg.declare(metadata i32* %v1, metadata !5438, metadata !DIExpression()), !dbg !5439
  call void @llvm.dbg.declare(metadata i32* %v2, metadata !5440, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.declare(metadata i32** %eindex, metadata !5442, metadata !DIExpression()), !dbg !5443
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5444, metadata !DIExpression()), !dbg !5445
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5446, metadata !DIExpression()), !dbg !5447
  call void @llvm.dbg.declare(metadata i32** %index, metadata !5448, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.declare(metadata i32* %numFaces, metadata !5450, metadata !DIExpression()), !dbg !5451
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5452
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 9, !dbg !5453
  %5 = load i32, i32* %numPolyData, align 8, !dbg !5453
  store i32 %5, i32* %numFaces, align 4, !dbg !5451
  call void @llvm.dbg.declare(metadata i32* %numLoops, metadata !5454, metadata !DIExpression()), !dbg !5455
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5456
  %numLoopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 8, !dbg !5457
  %7 = load i32, i32* %numLoopData, align 4, !dbg !5457
  store i32 %7, i32* %numLoops, align 4, !dbg !5455
  call void @llvm.dbg.declare(metadata i32* %numEdges, metadata !5458, metadata !DIExpression()), !dbg !5459
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5460
  %numEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 6, !dbg !5461
  %9 = load i32, i32* %numEdgeData, align 4, !dbg !5461
  store i32 %9, i32* %numEdges, align 4, !dbg !5459
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5462
  %call = call i8* @DM_get_edge_data_layer(%struct.DerivedMesh* %10, i32 7), !dbg !5463
  %11 = bitcast i8* %call to i32*, !dbg !5463
  store i32* %11, i32** %eindex, align 8, !dbg !5464
  %12 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5465
  %medge = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %12, i32 0, i32 2, !dbg !5466
  %13 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !5466
  store %struct.MEdge* %13, %struct.MEdge** %med, align 8, !dbg !5467
  %14 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !5468
  %tobool = icmp ne %struct.MEdge* %14, null, !dbg !5468
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5468

cond.true:                                        ; preds = %entry
  %15 = load i32, i32* %numEdges, align 4, !dbg !5469
  br label %cond.end, !dbg !5468

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5468

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %15, %cond.true ], [ 0, %cond.false ], !dbg !5468
  %16 = load i32, i32* %numLoops, align 4, !dbg !5470
  %div = sdiv i32 %16, 2, !dbg !5470
  %call1 = call i32 @max_ii(i32 %cond, i32 %div), !dbg !5471
  store i32 %call1, i32* %eh_reserve, align 4, !dbg !5472
  %17 = load i32, i32* %eh_reserve, align 4, !dbg !5473
  %call2 = call %struct.EdgeHash* @BLI_edgehash_new_ex(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.CDDM_calc_edges, i64 0, i64 0), i32 %17), !dbg !5474
  store %struct.EdgeHash* %call2, %struct.EdgeHash** %eh, align 8, !dbg !5475
  %18 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !5476
  %tobool3 = icmp ne %struct.MEdge* %18, null, !dbg !5476
  br i1 %tobool3, label %if.then, label %if.end, !dbg !5478

if.then:                                          ; preds = %cond.end
  store i32 0, i32* %i, align 4, !dbg !5479
  br label %for.cond, !dbg !5482

for.cond:                                         ; preds = %for.inc, %if.then
  %19 = load i32, i32* %i, align 4, !dbg !5483
  %20 = load i32, i32* %numEdges, align 4, !dbg !5485
  %cmp = icmp slt i32 %19, %20, !dbg !5486
  br i1 %cmp, label %for.body, label %for.end, !dbg !5487

for.body:                                         ; preds = %for.cond
  %21 = load %struct.EdgeHash*, %struct.EdgeHash** %eh, align 8, !dbg !5488
  %22 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !5490
  %v14 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %22, i32 0, i32 0, !dbg !5491
  %23 = load i32, i32* %v14, align 4, !dbg !5491
  %24 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !5492
  %v25 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %24, i32 0, i32 1, !dbg !5493
  %25 = load i32, i32* %v25, align 4, !dbg !5493
  %26 = load i32, i32* %i, align 4, !dbg !5494
  %add = add nsw i32 %26, 1, !dbg !5494
  %conv = sext i32 %add to i64, !dbg !5494
  %27 = inttoptr i64 %conv to i8*, !dbg !5494
  call void @BLI_edgehash_insert(%struct.EdgeHash* %21, i32 %23, i32 %25, i8* %27), !dbg !5495
  br label %for.inc, !dbg !5496

for.inc:                                          ; preds = %for.body
  %28 = load i32, i32* %i, align 4, !dbg !5497
  %inc = add nsw i32 %28, 1, !dbg !5497
  store i32 %inc, i32* %i, align 4, !dbg !5497
  %29 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !5498
  %incdec.ptr = getelementptr inbounds %struct.MEdge, %struct.MEdge* %29, i32 1, !dbg !5498
  store %struct.MEdge* %incdec.ptr, %struct.MEdge** %med, align 8, !dbg !5498
  br label %for.cond, !dbg !5499, !llvm.loop !5500

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !5502

if.end:                                           ; preds = %for.end, %cond.end
  store i32 0, i32* %i, align 4, !dbg !5503
  br label %for.cond6, !dbg !5505

for.cond6:                                        ; preds = %for.inc25, %if.end
  %30 = load i32, i32* %i, align 4, !dbg !5506
  %31 = load i32, i32* %numFaces, align 4, !dbg !5508
  %cmp7 = icmp slt i32 %30, %31, !dbg !5509
  br i1 %cmp7, label %for.body9, label %for.end28, !dbg !5510

for.body9:                                        ; preds = %for.cond6
  %32 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5511
  %mloop = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %32, i32 0, i32 4, !dbg !5513
  %33 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !5513
  %34 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5514
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %34, i32 0, i32 0, !dbg !5515
  %35 = load i32, i32* %loopstart, align 4, !dbg !5515
  %idx.ext = sext i32 %35 to i64, !dbg !5516
  %add.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %33, i64 %idx.ext, !dbg !5516
  store %struct.MLoop* %add.ptr, %struct.MLoop** %ml, align 8, !dbg !5517
  store i32 0, i32* %j, align 4, !dbg !5518
  br label %for.cond10, !dbg !5520

for.cond10:                                       ; preds = %for.inc21, %for.body9
  %36 = load i32, i32* %j, align 4, !dbg !5521
  %37 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5523
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %37, i32 0, i32 1, !dbg !5524
  %38 = load i32, i32* %totloop, align 4, !dbg !5524
  %cmp11 = icmp slt i32 %36, %38, !dbg !5525
  br i1 %cmp11, label %for.body13, label %for.end24, !dbg !5526

for.body13:                                       ; preds = %for.cond10
  %39 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5527
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %39, i32 0, i32 0, !dbg !5529
  %40 = load i32, i32* %v, align 4, !dbg !5529
  store i32 %40, i32* %v1, align 4, !dbg !5530
  %41 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5531
  %mloop14 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %41, i32 0, i32 4, !dbg !5531
  %42 = load %struct.MLoop*, %struct.MLoop** %mloop14, align 8, !dbg !5531
  %43 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5531
  %loopstart15 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %43, i32 0, i32 0, !dbg !5531
  %44 = load i32, i32* %loopstart15, align 4, !dbg !5531
  %45 = load i32, i32* %j, align 4, !dbg !5531
  %add16 = add nsw i32 %45, 1, !dbg !5531
  %46 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5531
  %totloop17 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %46, i32 0, i32 1, !dbg !5531
  %47 = load i32, i32* %totloop17, align 4, !dbg !5531
  %rem = srem i32 %add16, %47, !dbg !5531
  %add18 = add nsw i32 %44, %rem, !dbg !5531
  %idxprom = sext i32 %add18 to i64, !dbg !5531
  %arrayidx = getelementptr inbounds %struct.MLoop, %struct.MLoop* %42, i64 %idxprom, !dbg !5531
  %v19 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx, i32 0, i32 0, !dbg !5532
  %48 = load i32, i32* %v19, align 4, !dbg !5532
  store i32 %48, i32* %v2, align 4, !dbg !5533
  %49 = load %struct.EdgeHash*, %struct.EdgeHash** %eh, align 8, !dbg !5534
  %50 = load i32, i32* %v1, align 4, !dbg !5535
  %51 = load i32, i32* %v2, align 4, !dbg !5536
  %call20 = call zeroext i8 @BLI_edgehash_reinsert(%struct.EdgeHash* %49, i32 %50, i32 %51, i8* null), !dbg !5537
  br label %for.inc21, !dbg !5538

for.inc21:                                        ; preds = %for.body13
  %52 = load i32, i32* %j, align 4, !dbg !5539
  %inc22 = add nsw i32 %52, 1, !dbg !5539
  store i32 %inc22, i32* %j, align 4, !dbg !5539
  %53 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5540
  %incdec.ptr23 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %53, i32 1, !dbg !5540
  store %struct.MLoop* %incdec.ptr23, %struct.MLoop** %ml, align 8, !dbg !5540
  br label %for.cond10, !dbg !5541, !llvm.loop !5542

for.end24:                                        ; preds = %for.cond10
  br label %for.inc25, !dbg !5544

for.inc25:                                        ; preds = %for.end24
  %54 = load i32, i32* %i, align 4, !dbg !5545
  %inc26 = add nsw i32 %54, 1, !dbg !5545
  store i32 %inc26, i32* %i, align 4, !dbg !5545
  %55 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5546
  %incdec.ptr27 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %55, i32 1, !dbg !5546
  store %struct.MPoly* %incdec.ptr27, %struct.MPoly** %mp, align 8, !dbg !5546
  br label %for.cond6, !dbg !5547, !llvm.loop !5548

for.end28:                                        ; preds = %for.cond6
  %56 = load %struct.EdgeHash*, %struct.EdgeHash** %eh, align 8, !dbg !5550
  %call29 = call i32 @BLI_edgehash_size(%struct.EdgeHash* %56), !dbg !5551
  store i32 %call29, i32* %numEdges, align 4, !dbg !5552
  call void @CustomData_reset(%struct.CustomData* %edgeData), !dbg !5553
  %57 = load i32, i32* %numEdges, align 4, !dbg !5554
  %call30 = call i8* @CustomData_add_layer(%struct.CustomData* %edgeData, i32 3, i32 1, i8* null, i32 %57), !dbg !5555
  %58 = load i32, i32* %numEdges, align 4, !dbg !5556
  %call31 = call i8* @CustomData_add_layer(%struct.CustomData* %edgeData, i32 7, i32 1, i8* null, i32 %58), !dbg !5557
  %59 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5558
  %medge32 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %59, i32 0, i32 2, !dbg !5559
  %60 = load %struct.MEdge*, %struct.MEdge** %medge32, align 8, !dbg !5559
  store %struct.MEdge* %60, %struct.MEdge** %origmed, align 8, !dbg !5560
  %call33 = call i8* @CustomData_get_layer(%struct.CustomData* %edgeData, i32 3), !dbg !5561
  %61 = bitcast i8* %call33 to %struct.MEdge*, !dbg !5561
  store %struct.MEdge* %61, %struct.MEdge** %med, align 8, !dbg !5562
  %call34 = call i8* @CustomData_get_layer(%struct.CustomData* %edgeData, i32 7), !dbg !5563
  %62 = bitcast i8* %call34 to i32*, !dbg !5563
  store i32* %62, i32** %index, align 8, !dbg !5564
  %63 = load %struct.EdgeHash*, %struct.EdgeHash** %eh, align 8, !dbg !5565
  %call35 = call %struct.EdgeHashIterator* @BLI_edgehashIterator_new(%struct.EdgeHash* %63), !dbg !5567
  store %struct.EdgeHashIterator* %call35, %struct.EdgeHashIterator** %ehi, align 8, !dbg !5568
  store i32 0, i32* %i, align 4, !dbg !5569
  br label %for.cond36, !dbg !5570

for.cond36:                                       ; preds = %for.inc60, %for.end28
  %64 = load %struct.EdgeHashIterator*, %struct.EdgeHashIterator** %ehi, align 8, !dbg !5571
  %call37 = call zeroext i8 @BLI_edgehashIterator_isDone(%struct.EdgeHashIterator* %64), !dbg !5573
  %conv38 = zext i8 %call37 to i32, !dbg !5573
  %cmp39 = icmp eq i32 %conv38, 0, !dbg !5574
  br i1 %cmp39, label %for.body41, label %for.end64, !dbg !5575

for.body41:                                       ; preds = %for.cond36
  %65 = load %struct.EdgeHashIterator*, %struct.EdgeHashIterator** %ehi, align 8, !dbg !5576
  %66 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !5578
  %v142 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %66, i32 0, i32 0, !dbg !5579
  %67 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !5580
  %v243 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %67, i32 0, i32 1, !dbg !5581
  call void @BLI_edgehashIterator_getKey(%struct.EdgeHashIterator* %65, i32* %v142, i32* %v243), !dbg !5582
  %68 = load %struct.EdgeHashIterator*, %struct.EdgeHashIterator** %ehi, align 8, !dbg !5583
  %call44 = call i8* @BLI_edgehashIterator_getValue(%struct.EdgeHashIterator* %68), !dbg !5583
  %69 = ptrtoint i8* %call44 to i64, !dbg !5583
  %conv45 = trunc i64 %69 to i32, !dbg !5583
  store i32 %conv45, i32* %j, align 4, !dbg !5584
  %70 = load i32, i32* %j, align 4, !dbg !5585
  %cmp46 = icmp eq i32 %70, 0, !dbg !5587
  br i1 %cmp46, label %if.then48, label %if.else, !dbg !5588

if.then48:                                        ; preds = %for.body41
  %71 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !5589
  %flag = getelementptr inbounds %struct.MEdge, %struct.MEdge* %71, i32 0, i32 4, !dbg !5591
  store i16 34, i16* %flag, align 2, !dbg !5592
  %72 = load i32*, i32** %index, align 8, !dbg !5593
  store i32 -1, i32* %72, align 4, !dbg !5594
  br label %if.end58, !dbg !5595

if.else:                                          ; preds = %for.body41
  %73 = load %struct.MEdge*, %struct.MEdge** %origmed, align 8, !dbg !5596
  %74 = load i32, i32* %j, align 4, !dbg !5598
  %sub = sub nsw i32 %74, 1, !dbg !5599
  %idxprom49 = sext i32 %sub to i64, !dbg !5596
  %arrayidx50 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %73, i64 %idxprom49, !dbg !5596
  %flag51 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %arrayidx50, i32 0, i32 4, !dbg !5600
  %75 = load i16, i16* %flag51, align 2, !dbg !5600
  %conv52 = sext i16 %75 to i32, !dbg !5596
  %or = or i32 34, %conv52, !dbg !5601
  %conv53 = trunc i32 %or to i16, !dbg !5602
  %76 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !5603
  %flag54 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %76, i32 0, i32 4, !dbg !5604
  store i16 %conv53, i16* %flag54, align 2, !dbg !5605
  %77 = load i32*, i32** %eindex, align 8, !dbg !5606
  %78 = load i32, i32* %j, align 4, !dbg !5607
  %sub55 = sub nsw i32 %78, 1, !dbg !5608
  %idxprom56 = sext i32 %sub55 to i64, !dbg !5606
  %arrayidx57 = getelementptr inbounds i32, i32* %77, i64 %idxprom56, !dbg !5606
  %79 = load i32, i32* %arrayidx57, align 4, !dbg !5606
  %80 = load i32*, i32** %index, align 8, !dbg !5609
  store i32 %79, i32* %80, align 4, !dbg !5610
  br label %if.end58

if.end58:                                         ; preds = %if.else, %if.then48
  %81 = load %struct.EdgeHashIterator*, %struct.EdgeHashIterator** %ehi, align 8, !dbg !5611
  %82 = load i32, i32* %i, align 4, !dbg !5612
  %conv59 = sext i32 %82 to i64, !dbg !5612
  %83 = inttoptr i64 %conv59 to i8*, !dbg !5612
  call void @BLI_edgehashIterator_setValue(%struct.EdgeHashIterator* %81, i8* %83), !dbg !5613
  br label %for.inc60, !dbg !5614

for.inc60:                                        ; preds = %if.end58
  %84 = load %struct.EdgeHashIterator*, %struct.EdgeHashIterator** %ehi, align 8, !dbg !5615
  call void @BLI_edgehashIterator_step(%struct.EdgeHashIterator* %84), !dbg !5616
  %85 = load i32, i32* %i, align 4, !dbg !5617
  %inc61 = add nsw i32 %85, 1, !dbg !5617
  store i32 %inc61, i32* %i, align 4, !dbg !5617
  %86 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !5618
  %incdec.ptr62 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %86, i32 1, !dbg !5618
  store %struct.MEdge* %incdec.ptr62, %struct.MEdge** %med, align 8, !dbg !5618
  %87 = load i32*, i32** %index, align 8, !dbg !5619
  %incdec.ptr63 = getelementptr inbounds i32, i32* %87, i32 1, !dbg !5619
  store i32* %incdec.ptr63, i32** %index, align 8, !dbg !5619
  br label %for.cond36, !dbg !5620, !llvm.loop !5621

for.end64:                                        ; preds = %for.cond36
  %88 = load %struct.EdgeHashIterator*, %struct.EdgeHashIterator** %ehi, align 8, !dbg !5623
  call void @BLI_edgehashIterator_free(%struct.EdgeHashIterator* %88), !dbg !5624
  %89 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5625
  %edgeData65 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %89, i32 0, i32 1, !dbg !5626
  %90 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5627
  %numEdgeData66 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %90, i32 0, i32 6, !dbg !5628
  %91 = load i32, i32* %numEdgeData66, align 4, !dbg !5628
  call void @CustomData_free(%struct.CustomData* %edgeData65, i32 %91), !dbg !5629
  %92 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5630
  %edgeData67 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %92, i32 0, i32 1, !dbg !5631
  %93 = bitcast %struct.CustomData* %edgeData67 to i8*, !dbg !5632
  %94 = bitcast %struct.CustomData* %edgeData to i8*, !dbg !5632
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 200, i1 false), !dbg !5632
  %95 = load i32, i32* %numEdges, align 4, !dbg !5633
  %96 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5634
  %numEdgeData68 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %96, i32 0, i32 6, !dbg !5635
  store i32 %95, i32* %numEdgeData68, align 4, !dbg !5636
  %97 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5637
  %edgeData69 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %97, i32 0, i32 1, !dbg !5638
  %call70 = call i8* @CustomData_get_layer(%struct.CustomData* %edgeData69, i32 3), !dbg !5639
  %98 = bitcast i8* %call70 to %struct.MEdge*, !dbg !5639
  %99 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5640
  %medge71 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %99, i32 0, i32 2, !dbg !5641
  store %struct.MEdge* %98, %struct.MEdge** %medge71, align 8, !dbg !5642
  %100 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5643
  %mpoly72 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %100, i32 0, i32 5, !dbg !5644
  %101 = load %struct.MPoly*, %struct.MPoly** %mpoly72, align 8, !dbg !5644
  store %struct.MPoly* %101, %struct.MPoly** %mp, align 8, !dbg !5645
  store i32 0, i32* %i, align 4, !dbg !5646
  br label %for.cond73, !dbg !5648

for.cond73:                                       ; preds = %for.inc102, %for.end64
  %102 = load i32, i32* %i, align 4, !dbg !5649
  %103 = load i32, i32* %numFaces, align 4, !dbg !5651
  %cmp74 = icmp slt i32 %102, %103, !dbg !5652
  br i1 %cmp74, label %for.body76, label %for.end105, !dbg !5653

for.body76:                                       ; preds = %for.cond73
  %104 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5654
  %mloop77 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %104, i32 0, i32 4, !dbg !5656
  %105 = load %struct.MLoop*, %struct.MLoop** %mloop77, align 8, !dbg !5656
  %106 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5657
  %loopstart78 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %106, i32 0, i32 0, !dbg !5658
  %107 = load i32, i32* %loopstart78, align 4, !dbg !5658
  %idx.ext79 = sext i32 %107 to i64, !dbg !5659
  %add.ptr80 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %105, i64 %idx.ext79, !dbg !5659
  store %struct.MLoop* %add.ptr80, %struct.MLoop** %ml, align 8, !dbg !5660
  store i32 0, i32* %j, align 4, !dbg !5661
  br label %for.cond81, !dbg !5663

for.cond81:                                       ; preds = %for.inc98, %for.body76
  %108 = load i32, i32* %j, align 4, !dbg !5664
  %109 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5666
  %totloop82 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %109, i32 0, i32 1, !dbg !5667
  %110 = load i32, i32* %totloop82, align 4, !dbg !5667
  %cmp83 = icmp slt i32 %108, %110, !dbg !5668
  br i1 %cmp83, label %for.body85, label %for.end101, !dbg !5669

for.body85:                                       ; preds = %for.cond81
  %111 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5670
  %v86 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %111, i32 0, i32 0, !dbg !5672
  %112 = load i32, i32* %v86, align 4, !dbg !5672
  store i32 %112, i32* %v1, align 4, !dbg !5673
  %113 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5674
  %mloop87 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %113, i32 0, i32 4, !dbg !5674
  %114 = load %struct.MLoop*, %struct.MLoop** %mloop87, align 8, !dbg !5674
  %115 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5674
  %loopstart88 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %115, i32 0, i32 0, !dbg !5674
  %116 = load i32, i32* %loopstart88, align 4, !dbg !5674
  %117 = load i32, i32* %j, align 4, !dbg !5674
  %add89 = add nsw i32 %117, 1, !dbg !5674
  %118 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5674
  %totloop90 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %118, i32 0, i32 1, !dbg !5674
  %119 = load i32, i32* %totloop90, align 4, !dbg !5674
  %rem91 = srem i32 %add89, %119, !dbg !5674
  %add92 = add nsw i32 %116, %rem91, !dbg !5674
  %idxprom93 = sext i32 %add92 to i64, !dbg !5674
  %arrayidx94 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %114, i64 %idxprom93, !dbg !5674
  %v95 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx94, i32 0, i32 0, !dbg !5675
  %120 = load i32, i32* %v95, align 4, !dbg !5675
  store i32 %120, i32* %v2, align 4, !dbg !5676
  %121 = load %struct.EdgeHash*, %struct.EdgeHash** %eh, align 8, !dbg !5677
  %122 = load i32, i32* %v1, align 4, !dbg !5677
  %123 = load i32, i32* %v2, align 4, !dbg !5677
  %call96 = call i8* @BLI_edgehash_lookup(%struct.EdgeHash* %121, i32 %122, i32 %123), !dbg !5677
  %124 = ptrtoint i8* %call96 to i64, !dbg !5677
  %conv97 = trunc i64 %124 to i32, !dbg !5677
  %125 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5678
  %e = getelementptr inbounds %struct.MLoop, %struct.MLoop* %125, i32 0, i32 1, !dbg !5679
  store i32 %conv97, i32* %e, align 4, !dbg !5680
  br label %for.inc98, !dbg !5681

for.inc98:                                        ; preds = %for.body85
  %126 = load i32, i32* %j, align 4, !dbg !5682
  %inc99 = add nsw i32 %126, 1, !dbg !5682
  store i32 %inc99, i32* %j, align 4, !dbg !5682
  %127 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5683
  %incdec.ptr100 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %127, i32 1, !dbg !5683
  store %struct.MLoop* %incdec.ptr100, %struct.MLoop** %ml, align 8, !dbg !5683
  br label %for.cond81, !dbg !5684, !llvm.loop !5685

for.end101:                                       ; preds = %for.cond81
  br label %for.inc102, !dbg !5687

for.inc102:                                       ; preds = %for.end101
  %128 = load i32, i32* %i, align 4, !dbg !5688
  %inc103 = add nsw i32 %128, 1, !dbg !5688
  store i32 %inc103, i32* %i, align 4, !dbg !5688
  %129 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5689
  %incdec.ptr104 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %129, i32 1, !dbg !5689
  store %struct.MPoly* %incdec.ptr104, %struct.MPoly** %mp, align 8, !dbg !5689
  br label %for.cond73, !dbg !5690, !llvm.loop !5691

for.end105:                                       ; preds = %for.cond73
  %130 = load %struct.EdgeHash*, %struct.EdgeHash** %eh, align 8, !dbg !5693
  call void @BLI_edgehash_free(%struct.EdgeHash* %130, void (i8*)* null), !dbg !5694
  ret void, !dbg !5695
}

declare dso_local i8* @DM_get_edge_data_layer(%struct.DerivedMesh*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @max_ii(i32 %a, i32 %b) #0 !dbg !5696 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !5700, metadata !DIExpression()), !dbg !5701
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !5702, metadata !DIExpression()), !dbg !5703
  %0 = load i32, i32* %b.addr, align 4, !dbg !5704
  %1 = load i32, i32* %a.addr, align 4, !dbg !5705
  %cmp = icmp slt i32 %0, %1, !dbg !5706
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5707

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !5708
  br label %cond.end, !dbg !5707

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !5709
  br label %cond.end, !dbg !5707

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !5707
  ret i32 %cond, !dbg !5710
}

declare dso_local zeroext i8 @BLI_edgehash_reinsert(%struct.EdgeHash*, i32, i32, i8*) #2

declare dso_local i32 @BLI_edgehash_size(%struct.EdgeHash*) #2

declare dso_local %struct.EdgeHashIterator* @BLI_edgehashIterator_new(%struct.EdgeHash*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_edgehashIterator_isDone(%struct.EdgeHashIterator* %ehi) #0 !dbg !5711 {
entry:
  %ehi.addr = alloca %struct.EdgeHashIterator*, align 8
  store %struct.EdgeHashIterator* %ehi, %struct.EdgeHashIterator** %ehi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EdgeHashIterator** %ehi.addr, metadata !5714, metadata !DIExpression()), !dbg !5715
  %0 = load %struct.EdgeHashIterator*, %struct.EdgeHashIterator** %ehi.addr, align 8, !dbg !5716
  %curEntry = getelementptr inbounds %struct.EdgeHashIterator, %struct.EdgeHashIterator* %0, i32 0, i32 1, !dbg !5717
  %1 = load %struct.EdgeEntry*, %struct.EdgeEntry** %curEntry, align 8, !dbg !5717
  %2 = bitcast %struct.EdgeEntry* %1 to %struct._eh_Entry*, !dbg !5718
  %cmp = icmp eq %struct._eh_Entry* %2, null, !dbg !5719
  %conv = zext i1 %cmp to i32, !dbg !5719
  %conv1 = trunc i32 %conv to i8, !dbg !5720
  ret i8 %conv1, !dbg !5721
}

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_edgehashIterator_getKey(%struct.EdgeHashIterator* %ehi, i32* %r_v0, i32* %r_v1) #0 !dbg !5722 {
entry:
  %ehi.addr = alloca %struct.EdgeHashIterator*, align 8
  %r_v0.addr = alloca i32*, align 8
  %r_v1.addr = alloca i32*, align 8
  store %struct.EdgeHashIterator* %ehi, %struct.EdgeHashIterator** %ehi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EdgeHashIterator** %ehi.addr, metadata !5725, metadata !DIExpression()), !dbg !5726
  store i32* %r_v0, i32** %r_v0.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_v0.addr, metadata !5727, metadata !DIExpression()), !dbg !5728
  store i32* %r_v1, i32** %r_v1.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_v1.addr, metadata !5729, metadata !DIExpression()), !dbg !5730
  %0 = load %struct.EdgeHashIterator*, %struct.EdgeHashIterator** %ehi.addr, align 8, !dbg !5731
  %curEntry = getelementptr inbounds %struct.EdgeHashIterator, %struct.EdgeHashIterator* %0, i32 0, i32 1, !dbg !5732
  %1 = load %struct.EdgeEntry*, %struct.EdgeEntry** %curEntry, align 8, !dbg !5732
  %2 = bitcast %struct.EdgeEntry* %1 to %struct._eh_Entry*, !dbg !5733
  %v0 = getelementptr inbounds %struct._eh_Entry, %struct._eh_Entry* %2, i32 0, i32 1, !dbg !5733
  %3 = load i32, i32* %v0, align 8, !dbg !5733
  %4 = load i32*, i32** %r_v0.addr, align 8, !dbg !5734
  store i32 %3, i32* %4, align 4, !dbg !5735
  %5 = load %struct.EdgeHashIterator*, %struct.EdgeHashIterator** %ehi.addr, align 8, !dbg !5736
  %curEntry1 = getelementptr inbounds %struct.EdgeHashIterator, %struct.EdgeHashIterator* %5, i32 0, i32 1, !dbg !5737
  %6 = load %struct.EdgeEntry*, %struct.EdgeEntry** %curEntry1, align 8, !dbg !5737
  %7 = bitcast %struct.EdgeEntry* %6 to %struct._eh_Entry*, !dbg !5738
  %v1 = getelementptr inbounds %struct._eh_Entry, %struct._eh_Entry* %7, i32 0, i32 2, !dbg !5738
  %8 = load i32, i32* %v1, align 4, !dbg !5738
  %9 = load i32*, i32** %r_v1.addr, align 8, !dbg !5739
  store i32 %8, i32* %9, align 4, !dbg !5740
  ret void, !dbg !5741
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BLI_edgehashIterator_getValue(%struct.EdgeHashIterator* %ehi) #0 !dbg !5742 {
entry:
  %ehi.addr = alloca %struct.EdgeHashIterator*, align 8
  store %struct.EdgeHashIterator* %ehi, %struct.EdgeHashIterator** %ehi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EdgeHashIterator** %ehi.addr, metadata !5745, metadata !DIExpression()), !dbg !5746
  %0 = load %struct.EdgeHashIterator*, %struct.EdgeHashIterator** %ehi.addr, align 8, !dbg !5747
  %curEntry = getelementptr inbounds %struct.EdgeHashIterator, %struct.EdgeHashIterator* %0, i32 0, i32 1, !dbg !5748
  %1 = load %struct.EdgeEntry*, %struct.EdgeEntry** %curEntry, align 8, !dbg !5748
  %2 = bitcast %struct.EdgeEntry* %1 to %struct._eh_Entry*, !dbg !5749
  %val = getelementptr inbounds %struct._eh_Entry, %struct._eh_Entry* %2, i32 0, i32 3, !dbg !5749
  %3 = load i8*, i8** %val, align 8, !dbg !5749
  ret i8* %3, !dbg !5750
}

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_edgehashIterator_setValue(%struct.EdgeHashIterator* %ehi, i8* %val) #0 !dbg !5751 {
entry:
  %ehi.addr = alloca %struct.EdgeHashIterator*, align 8
  %val.addr = alloca i8*, align 8
  store %struct.EdgeHashIterator* %ehi, %struct.EdgeHashIterator** %ehi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EdgeHashIterator** %ehi.addr, metadata !5754, metadata !DIExpression()), !dbg !5755
  store i8* %val, i8** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %val.addr, metadata !5756, metadata !DIExpression()), !dbg !5757
  %0 = load i8*, i8** %val.addr, align 8, !dbg !5758
  %1 = load %struct.EdgeHashIterator*, %struct.EdgeHashIterator** %ehi.addr, align 8, !dbg !5759
  %curEntry = getelementptr inbounds %struct.EdgeHashIterator, %struct.EdgeHashIterator* %1, i32 0, i32 1, !dbg !5760
  %2 = load %struct.EdgeEntry*, %struct.EdgeEntry** %curEntry, align 8, !dbg !5760
  %3 = bitcast %struct.EdgeEntry* %2 to %struct._eh_Entry*, !dbg !5761
  %val1 = getelementptr inbounds %struct._eh_Entry, %struct._eh_Entry* %3, i32 0, i32 3, !dbg !5761
  store i8* %0, i8** %val1, align 8, !dbg !5762
  ret void, !dbg !5763
}

declare dso_local void @BLI_edgehashIterator_step(%struct.EdgeHashIterator*) #2

declare dso_local void @BLI_edgehashIterator_free(%struct.EdgeHashIterator*) #2

declare dso_local i8* @BLI_edgehash_lookup(%struct.EdgeHash*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CDDM_lower_num_verts(%struct.DerivedMesh* %dm, i32 %numVerts) #0 !dbg !5764 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %numVerts.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5767, metadata !DIExpression()), !dbg !5768
  store i32 %numVerts, i32* %numVerts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numVerts.addr, metadata !5769, metadata !DIExpression()), !dbg !5770
  %0 = load i32, i32* %numVerts.addr, align 4, !dbg !5771
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5773
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 5, !dbg !5774
  %2 = load i32, i32* %numVertData, align 8, !dbg !5774
  %cmp = icmp slt i32 %0, %2, !dbg !5775
  br i1 %cmp, label %if.then, label %if.end, !dbg !5776

if.then:                                          ; preds = %entry
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5777
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 0, !dbg !5778
  %4 = load i32, i32* %numVerts.addr, align 4, !dbg !5779
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5780
  %numVertData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 5, !dbg !5781
  %6 = load i32, i32* %numVertData1, align 8, !dbg !5781
  %7 = load i32, i32* %numVerts.addr, align 4, !dbg !5782
  %sub = sub nsw i32 %6, %7, !dbg !5783
  call void @CustomData_free_elem(%struct.CustomData* %vertData, i32 %4, i32 %sub), !dbg !5784
  br label %if.end, !dbg !5784

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %numVerts.addr, align 4, !dbg !5785
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5786
  %numVertData2 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 5, !dbg !5787
  store i32 %8, i32* %numVertData2, align 8, !dbg !5788
  ret void, !dbg !5789
}

declare dso_local void @CustomData_free_elem(%struct.CustomData*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CDDM_lower_num_edges(%struct.DerivedMesh* %dm, i32 %numEdges) #0 !dbg !5790 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %numEdges.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5791, metadata !DIExpression()), !dbg !5792
  store i32 %numEdges, i32* %numEdges.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numEdges.addr, metadata !5793, metadata !DIExpression()), !dbg !5794
  %0 = load i32, i32* %numEdges.addr, align 4, !dbg !5795
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5797
  %numEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 6, !dbg !5798
  %2 = load i32, i32* %numEdgeData, align 4, !dbg !5798
  %cmp = icmp slt i32 %0, %2, !dbg !5799
  br i1 %cmp, label %if.then, label %if.end, !dbg !5800

if.then:                                          ; preds = %entry
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5801
  %edgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 1, !dbg !5802
  %4 = load i32, i32* %numEdges.addr, align 4, !dbg !5803
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5804
  %numEdgeData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 6, !dbg !5805
  %6 = load i32, i32* %numEdgeData1, align 4, !dbg !5805
  %7 = load i32, i32* %numEdges.addr, align 4, !dbg !5806
  %sub = sub nsw i32 %6, %7, !dbg !5807
  call void @CustomData_free_elem(%struct.CustomData* %edgeData, i32 %4, i32 %sub), !dbg !5808
  br label %if.end, !dbg !5808

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %numEdges.addr, align 4, !dbg !5809
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5810
  %numEdgeData2 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 6, !dbg !5811
  store i32 %8, i32* %numEdgeData2, align 4, !dbg !5812
  ret void, !dbg !5813
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CDDM_lower_num_tessfaces(%struct.DerivedMesh* %dm, i32 %numTessFaces) #0 !dbg !5814 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %numTessFaces.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5815, metadata !DIExpression()), !dbg !5816
  store i32 %numTessFaces, i32* %numTessFaces.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numTessFaces.addr, metadata !5817, metadata !DIExpression()), !dbg !5818
  %0 = load i32, i32* %numTessFaces.addr, align 4, !dbg !5819
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5821
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 7, !dbg !5822
  %2 = load i32, i32* %numTessFaceData, align 8, !dbg !5822
  %cmp = icmp slt i32 %0, %2, !dbg !5823
  br i1 %cmp, label %if.then, label %if.end, !dbg !5824

if.then:                                          ; preds = %entry
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5825
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 2, !dbg !5826
  %4 = load i32, i32* %numTessFaces.addr, align 4, !dbg !5827
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5828
  %numTessFaceData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 7, !dbg !5829
  %6 = load i32, i32* %numTessFaceData1, align 8, !dbg !5829
  %7 = load i32, i32* %numTessFaces.addr, align 4, !dbg !5830
  %sub = sub nsw i32 %6, %7, !dbg !5831
  call void @CustomData_free_elem(%struct.CustomData* %faceData, i32 %4, i32 %sub), !dbg !5832
  br label %if.end, !dbg !5832

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %numTessFaces.addr, align 4, !dbg !5833
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5834
  %numTessFaceData2 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 7, !dbg !5835
  store i32 %8, i32* %numTessFaceData2, align 8, !dbg !5836
  ret void, !dbg !5837
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CDDM_lower_num_loops(%struct.DerivedMesh* %dm, i32 %numLoops) #0 !dbg !5838 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %numLoops.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5839, metadata !DIExpression()), !dbg !5840
  store i32 %numLoops, i32* %numLoops.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numLoops.addr, metadata !5841, metadata !DIExpression()), !dbg !5842
  %0 = load i32, i32* %numLoops.addr, align 4, !dbg !5843
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5845
  %numLoopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 8, !dbg !5846
  %2 = load i32, i32* %numLoopData, align 4, !dbg !5846
  %cmp = icmp slt i32 %0, %2, !dbg !5847
  br i1 %cmp, label %if.then, label %if.end, !dbg !5848

if.then:                                          ; preds = %entry
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5849
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 3, !dbg !5850
  %4 = load i32, i32* %numLoops.addr, align 4, !dbg !5851
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5852
  %numLoopData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 8, !dbg !5853
  %6 = load i32, i32* %numLoopData1, align 4, !dbg !5853
  %7 = load i32, i32* %numLoops.addr, align 4, !dbg !5854
  %sub = sub nsw i32 %6, %7, !dbg !5855
  call void @CustomData_free_elem(%struct.CustomData* %loopData, i32 %4, i32 %sub), !dbg !5856
  br label %if.end, !dbg !5856

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %numLoops.addr, align 4, !dbg !5857
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5858
  %numLoopData2 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 8, !dbg !5859
  store i32 %8, i32* %numLoopData2, align 4, !dbg !5860
  ret void, !dbg !5861
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CDDM_lower_num_polys(%struct.DerivedMesh* %dm, i32 %numPolys) #0 !dbg !5862 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %numPolys.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5863, metadata !DIExpression()), !dbg !5864
  store i32 %numPolys, i32* %numPolys.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numPolys.addr, metadata !5865, metadata !DIExpression()), !dbg !5866
  %0 = load i32, i32* %numPolys.addr, align 4, !dbg !5867
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5869
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 9, !dbg !5870
  %2 = load i32, i32* %numPolyData, align 8, !dbg !5870
  %cmp = icmp slt i32 %0, %2, !dbg !5871
  br i1 %cmp, label %if.then, label %if.end, !dbg !5872

if.then:                                          ; preds = %entry
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5873
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 4, !dbg !5874
  %4 = load i32, i32* %numPolys.addr, align 4, !dbg !5875
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5876
  %numPolyData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 9, !dbg !5877
  %6 = load i32, i32* %numPolyData1, align 8, !dbg !5877
  %7 = load i32, i32* %numPolys.addr, align 4, !dbg !5878
  %sub = sub nsw i32 %6, %7, !dbg !5879
  call void @CustomData_free_elem(%struct.CustomData* %polyData, i32 %4, i32 %sub), !dbg !5880
  br label %if.end, !dbg !5880

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %numPolys.addr, align 4, !dbg !5881
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5882
  %numPolyData2 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 9, !dbg !5883
  store i32 %8, i32* %numPolyData2, align 8, !dbg !5884
  ret void, !dbg !5885
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MVert* @CDDM_get_vert(%struct.DerivedMesh* %dm, i32 %index) #0 !dbg !5886 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5889, metadata !DIExpression()), !dbg !5890
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5891, metadata !DIExpression()), !dbg !5892
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5893
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !5894
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %1, i32 0, i32 1, !dbg !5894
  %2 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !5894
  %3 = load i32, i32* %index.addr, align 4, !dbg !5895
  %idxprom = sext i32 %3 to i64, !dbg !5896
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %2, i64 %idxprom, !dbg !5896
  ret %struct.MVert* %arrayidx, !dbg !5897
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MEdge* @CDDM_get_edge(%struct.DerivedMesh* %dm, i32 %index) #0 !dbg !5898 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5901, metadata !DIExpression()), !dbg !5902
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5903, metadata !DIExpression()), !dbg !5904
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5905
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !5906
  %medge = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %1, i32 0, i32 2, !dbg !5906
  %2 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !5906
  %3 = load i32, i32* %index.addr, align 4, !dbg !5907
  %idxprom = sext i32 %3 to i64, !dbg !5908
  %arrayidx = getelementptr inbounds %struct.MEdge, %struct.MEdge* %2, i64 %idxprom, !dbg !5908
  ret %struct.MEdge* %arrayidx, !dbg !5909
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MFace* @CDDM_get_tessface(%struct.DerivedMesh* %dm, i32 %index) #0 !dbg !5910 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5913, metadata !DIExpression()), !dbg !5914
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5915, metadata !DIExpression()), !dbg !5916
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5917
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !5918
  %mface = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %1, i32 0, i32 3, !dbg !5918
  %2 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !5918
  %3 = load i32, i32* %index.addr, align 4, !dbg !5919
  %idxprom = sext i32 %3 to i64, !dbg !5920
  %arrayidx = getelementptr inbounds %struct.MFace, %struct.MFace* %2, i64 %idxprom, !dbg !5920
  ret %struct.MFace* %arrayidx, !dbg !5921
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MLoop* @CDDM_get_loop(%struct.DerivedMesh* %dm, i32 %index) #0 !dbg !5922 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5925, metadata !DIExpression()), !dbg !5926
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5927, metadata !DIExpression()), !dbg !5928
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5929
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !5930
  %mloop = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %1, i32 0, i32 4, !dbg !5930
  %2 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !5930
  %3 = load i32, i32* %index.addr, align 4, !dbg !5931
  %idxprom = sext i32 %3 to i64, !dbg !5932
  %arrayidx = getelementptr inbounds %struct.MLoop, %struct.MLoop* %2, i64 %idxprom, !dbg !5932
  ret %struct.MLoop* %arrayidx, !dbg !5933
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MPoly* @CDDM_get_poly(%struct.DerivedMesh* %dm, i32 %index) #0 !dbg !5934 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5937, metadata !DIExpression()), !dbg !5938
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5939, metadata !DIExpression()), !dbg !5940
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5941
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !5942
  %mpoly = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %1, i32 0, i32 5, !dbg !5942
  %2 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !5942
  %3 = load i32, i32* %index.addr, align 4, !dbg !5943
  %idxprom = sext i32 %3 to i64, !dbg !5944
  %arrayidx = getelementptr inbounds %struct.MPoly, %struct.MPoly* %2, i64 %idxprom, !dbg !5944
  ret %struct.MPoly* %arrayidx, !dbg !5945
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MVert* @CDDM_get_verts(%struct.DerivedMesh* %dm) #0 !dbg !5946 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5947, metadata !DIExpression()), !dbg !5948
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5949
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !5950
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %1, i32 0, i32 1, !dbg !5950
  %2 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !5950
  ret %struct.MVert* %2, !dbg !5951
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MEdge* @CDDM_get_edges(%struct.DerivedMesh* %dm) #0 !dbg !5952 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5953, metadata !DIExpression()), !dbg !5954
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5955
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !5956
  %medge = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %1, i32 0, i32 2, !dbg !5956
  %2 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !5956
  ret %struct.MEdge* %2, !dbg !5957
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MFace* @CDDM_get_tessfaces(%struct.DerivedMesh* %dm) #0 !dbg !5958 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5959, metadata !DIExpression()), !dbg !5960
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5961
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !5962
  %mface = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %1, i32 0, i32 3, !dbg !5962
  %2 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !5962
  ret %struct.MFace* %2, !dbg !5963
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CDDM_tessfaces_to_faces(%struct.DerivedMesh* %dm) #0 !dbg !5964 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5965, metadata !DIExpression()), !dbg !5966
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !5967, metadata !DIExpression()), !dbg !5968
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5969
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !5970
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5968
  %2 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5971
  %dm1 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %2, i32 0, i32 0, !dbg !5972
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm1, i32 0, i32 2, !dbg !5973
  %3 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5974
  %dm2 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %3, i32 0, i32 0, !dbg !5975
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm2, i32 0, i32 3, !dbg !5976
  %4 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5977
  %dm3 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %4, i32 0, i32 0, !dbg !5978
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm3, i32 0, i32 4, !dbg !5979
  %5 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5980
  %dm4 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %5, i32 0, i32 0, !dbg !5981
  %numEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm4, i32 0, i32 6, !dbg !5982
  %6 = load i32, i32* %numEdgeData, align 4, !dbg !5982
  %7 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5983
  %dm5 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %7, i32 0, i32 0, !dbg !5984
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm5, i32 0, i32 7, !dbg !5985
  %8 = load i32, i32* %numTessFaceData, align 8, !dbg !5985
  %9 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5986
  %dm6 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %9, i32 0, i32 0, !dbg !5987
  %numLoopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm6, i32 0, i32 8, !dbg !5988
  %10 = load i32, i32* %numLoopData, align 4, !dbg !5988
  %11 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5989
  %dm7 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %11, i32 0, i32 0, !dbg !5990
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm7, i32 0, i32 9, !dbg !5991
  %12 = load i32, i32* %numPolyData, align 8, !dbg !5991
  %13 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5992
  %medge = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %13, i32 0, i32 2, !dbg !5993
  %14 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !5993
  %15 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5994
  %mface = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %15, i32 0, i32 3, !dbg !5995
  %16 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !5995
  %17 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5996
  %dm8 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %17, i32 0, i32 0, !dbg !5997
  %numLoopData9 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm8, i32 0, i32 8, !dbg !5998
  %18 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !5999
  %dm10 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %18, i32 0, i32 0, !dbg !6000
  %numPolyData11 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm10, i32 0, i32 9, !dbg !6001
  %19 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6002
  %mloop = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %19, i32 0, i32 4, !dbg !6003
  %20 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6004
  %mpoly = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %20, i32 0, i32 5, !dbg !6005
  call void @BKE_mesh_convert_mfaces_to_mpolys_ex(%struct.ID* null, %struct.CustomData* %faceData, %struct.CustomData* %loopData, %struct.CustomData* %polyData, i32 %6, i32 %8, i32 %10, i32 %12, %struct.MEdge* %14, %struct.MFace* %16, i32* %numLoopData9, i32* %numPolyData11, %struct.MLoop** %mloop, %struct.MPoly** %mpoly), !dbg !6006
  ret void, !dbg !6007
}

declare dso_local void @BKE_mesh_convert_mfaces_to_mpolys_ex(%struct.ID*, %struct.CustomData*, %struct.CustomData*, %struct.CustomData*, i32, i32, i32, i32, %struct.MEdge*, %struct.MFace*, i32*, i32*, %struct.MLoop**, %struct.MPoly**) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CDDM_set_mvert(%struct.DerivedMesh* %dm, %struct.MVert* %mvert) #0 !dbg !6008 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mvert.addr = alloca %struct.MVert*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6011, metadata !DIExpression()), !dbg !6012
  store %struct.MVert* %mvert, %struct.MVert** %mvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert.addr, metadata !6013, metadata !DIExpression()), !dbg !6014
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !6015, metadata !DIExpression()), !dbg !6016
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6017
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !6018
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6016
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6019
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 0, !dbg !6021
  %call = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %vertData, i32 0), !dbg !6022
  %tobool = icmp ne i8 %call, 0, !dbg !6022
  br i1 %tobool, label %if.end, label %if.then, !dbg !6023

if.then:                                          ; preds = %entry
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6024
  %vertData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 0, !dbg !6025
  %4 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !6026
  %5 = bitcast %struct.MVert* %4 to i8*, !dbg !6026
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6027
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 5, !dbg !6028
  %7 = load i32, i32* %numVertData, align 8, !dbg !6028
  %call2 = call i8* @CustomData_add_layer(%struct.CustomData* %vertData1, i32 0, i32 0, i8* %5, i32 %7), !dbg !6029
  br label %if.end, !dbg !6029

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !6030
  %9 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6031
  %mvert3 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %9, i32 0, i32 1, !dbg !6032
  store %struct.MVert* %8, %struct.MVert** %mvert3, align 8, !dbg !6033
  ret void, !dbg !6034
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CDDM_set_medge(%struct.DerivedMesh* %dm, %struct.MEdge* %medge) #0 !dbg !6035 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %medge.addr = alloca %struct.MEdge*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6038, metadata !DIExpression()), !dbg !6039
  store %struct.MEdge* %medge, %struct.MEdge** %medge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge.addr, metadata !6040, metadata !DIExpression()), !dbg !6041
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !6042, metadata !DIExpression()), !dbg !6043
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6044
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !6045
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6043
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6046
  %edgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 1, !dbg !6048
  %call = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %edgeData, i32 3), !dbg !6049
  %tobool = icmp ne i8 %call, 0, !dbg !6049
  br i1 %tobool, label %if.end, label %if.then, !dbg !6050

if.then:                                          ; preds = %entry
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6051
  %edgeData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 1, !dbg !6052
  %4 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !6053
  %5 = bitcast %struct.MEdge* %4 to i8*, !dbg !6053
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6054
  %numEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 6, !dbg !6055
  %7 = load i32, i32* %numEdgeData, align 4, !dbg !6055
  %call2 = call i8* @CustomData_add_layer(%struct.CustomData* %edgeData1, i32 3, i32 0, i8* %5, i32 %7), !dbg !6056
  br label %if.end, !dbg !6056

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !6057
  %9 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6058
  %medge3 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %9, i32 0, i32 2, !dbg !6059
  store %struct.MEdge* %8, %struct.MEdge** %medge3, align 8, !dbg !6060
  ret void, !dbg !6061
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CDDM_set_mface(%struct.DerivedMesh* %dm, %struct.MFace* %mface) #0 !dbg !6062 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mface.addr = alloca %struct.MFace*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6065, metadata !DIExpression()), !dbg !6066
  store %struct.MFace* %mface, %struct.MFace** %mface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface.addr, metadata !6067, metadata !DIExpression()), !dbg !6068
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !6069, metadata !DIExpression()), !dbg !6070
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6071
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !6072
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6070
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6073
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 2, !dbg !6075
  %call = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %faceData, i32 4), !dbg !6076
  %tobool = icmp ne i8 %call, 0, !dbg !6076
  br i1 %tobool, label %if.end, label %if.then, !dbg !6077

if.then:                                          ; preds = %entry
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6078
  %faceData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 2, !dbg !6079
  %4 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !6080
  %5 = bitcast %struct.MFace* %4 to i8*, !dbg !6080
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6081
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 7, !dbg !6082
  %7 = load i32, i32* %numTessFaceData, align 8, !dbg !6082
  %call2 = call i8* @CustomData_add_layer(%struct.CustomData* %faceData1, i32 4, i32 0, i8* %5, i32 %7), !dbg !6083
  br label %if.end, !dbg !6083

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !6084
  %9 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6085
  %mface3 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %9, i32 0, i32 3, !dbg !6086
  store %struct.MFace* %8, %struct.MFace** %mface3, align 8, !dbg !6087
  ret void, !dbg !6088
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CDDM_set_mloop(%struct.DerivedMesh* %dm, %struct.MLoop* %mloop) #0 !dbg !6089 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mloop.addr = alloca %struct.MLoop*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6092, metadata !DIExpression()), !dbg !6093
  store %struct.MLoop* %mloop, %struct.MLoop** %mloop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop.addr, metadata !6094, metadata !DIExpression()), !dbg !6095
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !6096, metadata !DIExpression()), !dbg !6097
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6098
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !6099
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6097
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6100
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 3, !dbg !6102
  %call = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %loopData, i32 26), !dbg !6103
  %tobool = icmp ne i8 %call, 0, !dbg !6103
  br i1 %tobool, label %if.end, label %if.then, !dbg !6104

if.then:                                          ; preds = %entry
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6105
  %loopData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 3, !dbg !6106
  %4 = load %struct.MLoop*, %struct.MLoop** %mloop.addr, align 8, !dbg !6107
  %5 = bitcast %struct.MLoop* %4 to i8*, !dbg !6107
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6108
  %numLoopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 8, !dbg !6109
  %7 = load i32, i32* %numLoopData, align 4, !dbg !6109
  %call2 = call i8* @CustomData_add_layer(%struct.CustomData* %loopData1, i32 26, i32 0, i8* %5, i32 %7), !dbg !6110
  br label %if.end, !dbg !6110

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.MLoop*, %struct.MLoop** %mloop.addr, align 8, !dbg !6111
  %9 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6112
  %mloop3 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %9, i32 0, i32 4, !dbg !6113
  store %struct.MLoop* %8, %struct.MLoop** %mloop3, align 8, !dbg !6114
  ret void, !dbg !6115
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CDDM_set_mpoly(%struct.DerivedMesh* %dm, %struct.MPoly* %mpoly) #0 !dbg !6116 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mpoly.addr = alloca %struct.MPoly*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6119, metadata !DIExpression()), !dbg !6120
  store %struct.MPoly* %mpoly, %struct.MPoly** %mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly.addr, metadata !6121, metadata !DIExpression()), !dbg !6122
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !6123, metadata !DIExpression()), !dbg !6124
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6125
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !6126
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6124
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6127
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 4, !dbg !6129
  %call = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %polyData, i32 25), !dbg !6130
  %tobool = icmp ne i8 %call, 0, !dbg !6130
  br i1 %tobool, label %if.end, label %if.then, !dbg !6131

if.then:                                          ; preds = %entry
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6132
  %polyData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 4, !dbg !6133
  %4 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !6134
  %5 = bitcast %struct.MPoly* %4 to i8*, !dbg !6134
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6135
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 9, !dbg !6136
  %7 = load i32, i32* %numPolyData, align 8, !dbg !6136
  %call2 = call i8* @CustomData_add_layer(%struct.CustomData* %polyData1, i32 25, i32 0, i8* %5, i32 %7), !dbg !6137
  br label %if.end, !dbg !6137

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !6138
  %9 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6139
  %mpoly3 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %9, i32 0, i32 5, !dbg !6140
  store %struct.MPoly* %8, %struct.MPoly** %mpoly3, align 8, !dbg !6141
  ret void, !dbg !6142
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_getMinMax(%struct.DerivedMesh* %dm, float* %r_min, float* %r_max) #0 !dbg !6143 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %r_min.addr = alloca float*, align 8
  %r_max.addr = alloca float*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %i = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6144, metadata !DIExpression()), !dbg !6145
  store float* %r_min, float** %r_min.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_min.addr, metadata !6146, metadata !DIExpression()), !dbg !6147
  store float* %r_max, float** %r_max.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_max.addr, metadata !6148, metadata !DIExpression()), !dbg !6149
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !6150, metadata !DIExpression()), !dbg !6151
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6152
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !6153
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6151
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6154, metadata !DIExpression()), !dbg !6155
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6156
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 5, !dbg !6158
  %3 = load i32, i32* %numVertData, align 8, !dbg !6158
  %tobool = icmp ne i32 %3, 0, !dbg !6156
  br i1 %tobool, label %if.then, label %if.else, !dbg !6159

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !6160
  br label %for.cond, !dbg !6163

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load i32, i32* %i, align 4, !dbg !6164
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6166
  %numVertData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 5, !dbg !6167
  %6 = load i32, i32* %numVertData1, align 8, !dbg !6167
  %cmp = icmp slt i32 %4, %6, !dbg !6168
  br i1 %cmp, label %for.body, label %for.end, !dbg !6169

for.body:                                         ; preds = %for.cond
  %7 = load float*, float** %r_min.addr, align 8, !dbg !6170
  %8 = load float*, float** %r_max.addr, align 8, !dbg !6172
  %9 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6173
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %9, i32 0, i32 1, !dbg !6174
  %10 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6174
  %11 = load i32, i32* %i, align 4, !dbg !6175
  %idxprom = sext i32 %11 to i64, !dbg !6173
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %10, i64 %idxprom, !dbg !6173
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx, i32 0, i32 0, !dbg !6176
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6173
  call void @minmax_v3v3_v3(float* %7, float* %8, float* %arraydecay), !dbg !6177
  br label %for.inc, !dbg !6178

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !6179
  %inc = add nsw i32 %12, 1, !dbg !6179
  store i32 %inc, i32* %i, align 4, !dbg !6179
  br label %for.cond, !dbg !6180, !llvm.loop !6181

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !6183

if.else:                                          ; preds = %entry
  %13 = load float*, float** %r_min.addr, align 8, !dbg !6184
  call void @zero_v3(float* %13), !dbg !6186
  %14 = load float*, float** %r_max.addr, align 8, !dbg !6187
  call void @zero_v3(float* %14), !dbg !6188
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  ret void, !dbg !6189
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @cdDM_getNumVerts(%struct.DerivedMesh* %dm) #0 !dbg !6190 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6191, metadata !DIExpression()), !dbg !6192
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6193
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 5, !dbg !6194
  %1 = load i32, i32* %numVertData, align 8, !dbg !6194
  ret i32 %1, !dbg !6195
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @cdDM_getNumEdges(%struct.DerivedMesh* %dm) #0 !dbg !6196 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6197, metadata !DIExpression()), !dbg !6198
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6199
  %numEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 6, !dbg !6200
  %1 = load i32, i32* %numEdgeData, align 4, !dbg !6200
  ret i32 %1, !dbg !6201
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @cdDM_getNumTessFaces(%struct.DerivedMesh* %dm) #0 !dbg !6202 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6203, metadata !DIExpression()), !dbg !6204
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6205
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 7, !dbg !6206
  %1 = load i32, i32* %numTessFaceData, align 8, !dbg !6206
  ret i32 %1, !dbg !6207
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @cdDM_getNumLoops(%struct.DerivedMesh* %dm) #0 !dbg !6208 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6209, metadata !DIExpression()), !dbg !6210
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6211
  %numLoopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 8, !dbg !6212
  %1 = load i32, i32* %numLoopData, align 4, !dbg !6212
  ret i32 %1, !dbg !6213
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @cdDM_getNumPolys(%struct.DerivedMesh* %dm) #0 !dbg !6214 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6215, metadata !DIExpression()), !dbg !6216
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6217
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 9, !dbg !6218
  %1 = load i32, i32* %numPolyData, align 8, !dbg !6218
  ret i32 %1, !dbg !6219
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_getVert(%struct.DerivedMesh* %dm, i32 %index, %struct.MVert* %r_vert) #0 !dbg !6220 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %r_vert.addr = alloca %struct.MVert*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6223, metadata !DIExpression()), !dbg !6224
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6225, metadata !DIExpression()), !dbg !6226
  store %struct.MVert* %r_vert, %struct.MVert** %r_vert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %r_vert.addr, metadata !6227, metadata !DIExpression()), !dbg !6228
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !6229, metadata !DIExpression()), !dbg !6230
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6231
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !6232
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6230
  %2 = load %struct.MVert*, %struct.MVert** %r_vert.addr, align 8, !dbg !6233
  %3 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6234
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %3, i32 0, i32 1, !dbg !6235
  %4 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6235
  %5 = load i32, i32* %index.addr, align 4, !dbg !6236
  %idxprom = sext i32 %5 to i64, !dbg !6234
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %4, i64 %idxprom, !dbg !6234
  %6 = bitcast %struct.MVert* %2 to i8*, !dbg !6234
  %7 = bitcast %struct.MVert* %arrayidx to i8*, !dbg !6234
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 20, i1 false), !dbg !6234
  ret void, !dbg !6237
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_getEdge(%struct.DerivedMesh* %dm, i32 %index, %struct.MEdge* %r_edge) #0 !dbg !6238 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %r_edge.addr = alloca %struct.MEdge*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6241, metadata !DIExpression()), !dbg !6242
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6243, metadata !DIExpression()), !dbg !6244
  store %struct.MEdge* %r_edge, %struct.MEdge** %r_edge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %r_edge.addr, metadata !6245, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !6247, metadata !DIExpression()), !dbg !6248
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6249
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !6250
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6248
  %2 = load %struct.MEdge*, %struct.MEdge** %r_edge.addr, align 8, !dbg !6251
  %3 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6252
  %medge = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %3, i32 0, i32 2, !dbg !6253
  %4 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !6253
  %5 = load i32, i32* %index.addr, align 4, !dbg !6254
  %idxprom = sext i32 %5 to i64, !dbg !6252
  %arrayidx = getelementptr inbounds %struct.MEdge, %struct.MEdge* %4, i64 %idxprom, !dbg !6252
  %6 = bitcast %struct.MEdge* %2 to i8*, !dbg !6252
  %7 = bitcast %struct.MEdge* %arrayidx to i8*, !dbg !6252
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 12, i1 false), !dbg !6252
  ret void, !dbg !6255
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_getTessFace(%struct.DerivedMesh* %dm, i32 %index, %struct.MFace* %r_face) #0 !dbg !6256 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %r_face.addr = alloca %struct.MFace*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6259, metadata !DIExpression()), !dbg !6260
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6261, metadata !DIExpression()), !dbg !6262
  store %struct.MFace* %r_face, %struct.MFace** %r_face.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %r_face.addr, metadata !6263, metadata !DIExpression()), !dbg !6264
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !6265, metadata !DIExpression()), !dbg !6266
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6267
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !6268
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6266
  %2 = load %struct.MFace*, %struct.MFace** %r_face.addr, align 8, !dbg !6269
  %3 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6270
  %mface = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %3, i32 0, i32 3, !dbg !6271
  %4 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6271
  %5 = load i32, i32* %index.addr, align 4, !dbg !6272
  %idxprom = sext i32 %5 to i64, !dbg !6270
  %arrayidx = getelementptr inbounds %struct.MFace, %struct.MFace* %4, i64 %idxprom, !dbg !6270
  %6 = bitcast %struct.MFace* %2 to i8*, !dbg !6270
  %7 = bitcast %struct.MFace* %arrayidx to i8*, !dbg !6270
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 20, i1 false), !dbg !6270
  ret void, !dbg !6273
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_copyVertArray(%struct.DerivedMesh* %dm, %struct.MVert* %r_vert) #0 !dbg !6274 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %r_vert.addr = alloca %struct.MVert*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6275, metadata !DIExpression()), !dbg !6276
  store %struct.MVert* %r_vert, %struct.MVert** %r_vert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %r_vert.addr, metadata !6277, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !6279, metadata !DIExpression()), !dbg !6280
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6281
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !6282
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6280
  %2 = load %struct.MVert*, %struct.MVert** %r_vert.addr, align 8, !dbg !6283
  %3 = bitcast %struct.MVert* %2 to i8*, !dbg !6284
  %4 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6285
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %4, i32 0, i32 1, !dbg !6286
  %5 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6286
  %6 = bitcast %struct.MVert* %5 to i8*, !dbg !6284
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6287
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 5, !dbg !6288
  %8 = load i32, i32* %numVertData, align 8, !dbg !6288
  %conv = sext i32 %8 to i64, !dbg !6287
  %mul = mul i64 20, %conv, !dbg !6289
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %6, i64 %mul, i1 false), !dbg !6284
  ret void, !dbg !6290
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_copyEdgeArray(%struct.DerivedMesh* %dm, %struct.MEdge* %r_edge) #0 !dbg !6291 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %r_edge.addr = alloca %struct.MEdge*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6292, metadata !DIExpression()), !dbg !6293
  store %struct.MEdge* %r_edge, %struct.MEdge** %r_edge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %r_edge.addr, metadata !6294, metadata !DIExpression()), !dbg !6295
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !6296, metadata !DIExpression()), !dbg !6297
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6298
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !6299
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6297
  %2 = load %struct.MEdge*, %struct.MEdge** %r_edge.addr, align 8, !dbg !6300
  %3 = bitcast %struct.MEdge* %2 to i8*, !dbg !6301
  %4 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6302
  %medge = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %4, i32 0, i32 2, !dbg !6303
  %5 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !6303
  %6 = bitcast %struct.MEdge* %5 to i8*, !dbg !6301
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6304
  %numEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 6, !dbg !6305
  %8 = load i32, i32* %numEdgeData, align 4, !dbg !6305
  %conv = sext i32 %8 to i64, !dbg !6304
  %mul = mul i64 12, %conv, !dbg !6306
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %6, i64 %mul, i1 false), !dbg !6301
  ret void, !dbg !6307
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_copyTessFaceArray(%struct.DerivedMesh* %dm, %struct.MFace* %r_face) #0 !dbg !6308 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %r_face.addr = alloca %struct.MFace*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6309, metadata !DIExpression()), !dbg !6310
  store %struct.MFace* %r_face, %struct.MFace** %r_face.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %r_face.addr, metadata !6311, metadata !DIExpression()), !dbg !6312
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !6313, metadata !DIExpression()), !dbg !6314
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6315
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !6316
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6314
  %2 = load %struct.MFace*, %struct.MFace** %r_face.addr, align 8, !dbg !6317
  %3 = bitcast %struct.MFace* %2 to i8*, !dbg !6318
  %4 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6319
  %mface = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %4, i32 0, i32 3, !dbg !6320
  %5 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6320
  %6 = bitcast %struct.MFace* %5 to i8*, !dbg !6318
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6321
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 7, !dbg !6322
  %8 = load i32, i32* %numTessFaceData, align 8, !dbg !6322
  %conv = sext i32 %8 to i64, !dbg !6321
  %mul = mul i64 20, %conv, !dbg !6323
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %6, i64 %mul, i1 false), !dbg !6318
  ret void, !dbg !6324
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_copyLoopArray(%struct.DerivedMesh* %dm, %struct.MLoop* %r_loop) #0 !dbg !6325 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %r_loop.addr = alloca %struct.MLoop*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6326, metadata !DIExpression()), !dbg !6327
  store %struct.MLoop* %r_loop, %struct.MLoop** %r_loop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %r_loop.addr, metadata !6328, metadata !DIExpression()), !dbg !6329
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !6330, metadata !DIExpression()), !dbg !6331
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6332
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !6333
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6331
  %2 = load %struct.MLoop*, %struct.MLoop** %r_loop.addr, align 8, !dbg !6334
  %3 = bitcast %struct.MLoop* %2 to i8*, !dbg !6335
  %4 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6336
  %mloop = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %4, i32 0, i32 4, !dbg !6337
  %5 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !6337
  %6 = bitcast %struct.MLoop* %5 to i8*, !dbg !6335
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6338
  %numLoopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 8, !dbg !6339
  %8 = load i32, i32* %numLoopData, align 4, !dbg !6339
  %conv = sext i32 %8 to i64, !dbg !6338
  %mul = mul i64 8, %conv, !dbg !6340
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %6, i64 %mul, i1 false), !dbg !6335
  ret void, !dbg !6341
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_copyPolyArray(%struct.DerivedMesh* %dm, %struct.MPoly* %r_poly) #0 !dbg !6342 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %r_poly.addr = alloca %struct.MPoly*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6343, metadata !DIExpression()), !dbg !6344
  store %struct.MPoly* %r_poly, %struct.MPoly** %r_poly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %r_poly.addr, metadata !6345, metadata !DIExpression()), !dbg !6346
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !6347, metadata !DIExpression()), !dbg !6348
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6349
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !6350
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6348
  %2 = load %struct.MPoly*, %struct.MPoly** %r_poly.addr, align 8, !dbg !6351
  %3 = bitcast %struct.MPoly* %2 to i8*, !dbg !6352
  %4 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6353
  %mpoly = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %4, i32 0, i32 5, !dbg !6354
  %5 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !6354
  %6 = bitcast %struct.MPoly* %5 to i8*, !dbg !6352
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6355
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 9, !dbg !6356
  %8 = load i32, i32* %numPolyData, align 8, !dbg !6356
  %conv = sext i32 %8 to i64, !dbg !6355
  %mul = mul i64 12, %conv, !dbg !6357
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %6, i64 %mul, i1 false), !dbg !6352
  ret void, !dbg !6358
}

declare dso_local i8* @DM_get_vert_data(%struct.DerivedMesh*, i32, i32) #2

declare dso_local i8* @DM_get_edge_data(%struct.DerivedMesh*, i32, i32) #2

declare dso_local i8* @DM_get_tessface_data(%struct.DerivedMesh*, i32, i32) #2

declare dso_local i8* @DM_get_vert_data_layer(%struct.DerivedMesh*, i32) #2

declare dso_local i8* @DM_get_tessface_data_layer(%struct.DerivedMesh*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_getVertCos(%struct.DerivedMesh* %dm, [3 x float]* %r_cos) #0 !dbg !6359 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %r_cos.addr = alloca [3 x float]*, align 8
  %mv = alloca %struct.MVert*, align 8
  %i = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6360, metadata !DIExpression()), !dbg !6361
  store [3 x float]* %r_cos, [3 x float]** %r_cos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %r_cos.addr, metadata !6362, metadata !DIExpression()), !dbg !6363
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !6364, metadata !DIExpression()), !dbg !6365
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6366
  %call = call %struct.MVert* @CDDM_get_verts(%struct.DerivedMesh* %0), !dbg !6367
  store %struct.MVert* %call, %struct.MVert** %mv, align 8, !dbg !6365
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6368, metadata !DIExpression()), !dbg !6369
  store i32 0, i32* %i, align 4, !dbg !6370
  br label %for.cond, !dbg !6372

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !6373
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6375
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 5, !dbg !6376
  %3 = load i32, i32* %numVertData, align 8, !dbg !6376
  %cmp = icmp slt i32 %1, %3, !dbg !6377
  br i1 %cmp, label %for.body, label %for.end, !dbg !6378

for.body:                                         ; preds = %for.cond
  %4 = load [3 x float]*, [3 x float]** %r_cos.addr, align 8, !dbg !6379
  %5 = load i32, i32* %i, align 4, !dbg !6380
  %idxprom = sext i32 %5 to i64, !dbg !6379
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %4, i64 %idxprom, !dbg !6379
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !6379
  %6 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !6381
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %6, i32 0, i32 0, !dbg !6382
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6381
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay1), !dbg !6383
  br label %for.inc, !dbg !6383

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !6384
  %inc = add nsw i32 %7, 1, !dbg !6384
  store i32 %inc, i32* %i, align 4, !dbg !6384
  %8 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !6385
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %8, i32 1, !dbg !6385
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mv, align 8, !dbg !6385
  br label %for.cond, !dbg !6386, !llvm.loop !6387

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6389
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_getVertCo(%struct.DerivedMesh* %dm, i32 %index, float* %r_co) #0 !dbg !6390 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %r_co.addr = alloca float*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6391, metadata !DIExpression()), !dbg !6392
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6393, metadata !DIExpression()), !dbg !6394
  store float* %r_co, float** %r_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_co.addr, metadata !6395, metadata !DIExpression()), !dbg !6396
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !6397, metadata !DIExpression()), !dbg !6398
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6399
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !6400
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6398
  %2 = load float*, float** %r_co.addr, align 8, !dbg !6401
  %3 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6402
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %3, i32 0, i32 1, !dbg !6403
  %4 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6403
  %5 = load i32, i32* %index.addr, align 4, !dbg !6404
  %idxprom = sext i32 %5 to i64, !dbg !6402
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %4, i64 %idxprom, !dbg !6402
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx, i32 0, i32 0, !dbg !6405
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6402
  call void @copy_v3_v3(float* %2, float* %arraydecay), !dbg !6406
  ret void, !dbg !6407
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_getVertNo(%struct.DerivedMesh* %dm, i32 %index, float* %r_no) #0 !dbg !6408 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %r_no.addr = alloca float*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6409, metadata !DIExpression()), !dbg !6410
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6411, metadata !DIExpression()), !dbg !6412
  store float* %r_no, float** %r_no.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_no.addr, metadata !6413, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !6415, metadata !DIExpression()), !dbg !6416
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6417
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !6418
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6416
  %2 = load float*, float** %r_no.addr, align 8, !dbg !6419
  %3 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6420
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %3, i32 0, i32 1, !dbg !6421
  %4 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6421
  %5 = load i32, i32* %index.addr, align 4, !dbg !6422
  %idxprom = sext i32 %5 to i64, !dbg !6420
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %4, i64 %idxprom, !dbg !6420
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx, i32 0, i32 1, !dbg !6423
  %arraydecay = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !6420
  call void @normal_short_to_float_v3(float* %2, i16* %arraydecay), !dbg !6424
  ret void, !dbg !6425
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.PBVH* @cdDM_getPBVH(%struct.Object* %ob, %struct.DerivedMesh* %dm) #0 !dbg !6426 {
entry:
  %retval = alloca %struct.PBVH*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %me = alloca %struct.Mesh*, align 8
  %deformed = alloca i8, align 1
  %deformdm = alloca %struct.DerivedMesh*, align 8
  %vertCos = alloca [3 x float]*, align 8
  %totvert50 = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6431, metadata !DIExpression()), !dbg !6432
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6433, metadata !DIExpression()), !dbg !6434
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !6435, metadata !DIExpression()), !dbg !6436
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6437
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !6438
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6436
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6439
  %tobool = icmp ne %struct.Object* %2, null, !dbg !6439
  br i1 %tobool, label %if.end, label %if.then, !dbg !6441

if.then:                                          ; preds = %entry
  %3 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6442
  %pbvh = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %3, i32 0, i32 6, !dbg !6444
  store %struct.PBVH* null, %struct.PBVH** %pbvh, align 8, !dbg !6445
  store %struct.PBVH* null, %struct.PBVH** %retval, align 8, !dbg !6446
  br label %return, !dbg !6446

if.end:                                           ; preds = %entry
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6447
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 2, !dbg !6449
  %5 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !6449
  %tobool1 = icmp ne %struct.SculptSession* %5, null, !dbg !6447
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !6450

if.then2:                                         ; preds = %if.end
  store %struct.PBVH* null, %struct.PBVH** %retval, align 8, !dbg !6451
  br label %return, !dbg !6451

if.end3:                                          ; preds = %if.end
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6452
  %sculpt4 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 2, !dbg !6454
  %7 = load %struct.SculptSession*, %struct.SculptSession** %sculpt4, align 8, !dbg !6454
  %pbvh5 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %7, i32 0, i32 15, !dbg !6455
  %8 = load %struct.PBVH*, %struct.PBVH** %pbvh5, align 8, !dbg !6455
  %tobool6 = icmp ne %struct.PBVH* %8, null, !dbg !6452
  br i1 %tobool6, label %if.then7, label %if.end11, !dbg !6456

if.then7:                                         ; preds = %if.end3
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6457
  %sculpt8 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 2, !dbg !6459
  %10 = load %struct.SculptSession*, %struct.SculptSession** %sculpt8, align 8, !dbg !6459
  %pbvh9 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %10, i32 0, i32 15, !dbg !6460
  %11 = load %struct.PBVH*, %struct.PBVH** %pbvh9, align 8, !dbg !6460
  %12 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6461
  %pbvh10 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %12, i32 0, i32 6, !dbg !6462
  store %struct.PBVH* %11, %struct.PBVH** %pbvh10, align 8, !dbg !6463
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6464
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6465
  %call = call zeroext i8 @can_pbvh_draw(%struct.Object* %13, %struct.DerivedMesh* %14), !dbg !6466
  %15 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6467
  %pbvh_draw = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %15, i32 0, i32 7, !dbg !6468
  store i8 %call, i8* %pbvh_draw, align 8, !dbg !6469
  br label %if.end11, !dbg !6470

if.end11:                                         ; preds = %if.then7, %if.end3
  %16 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6471
  %pbvh12 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %16, i32 0, i32 6, !dbg !6473
  %17 = load %struct.PBVH*, %struct.PBVH** %pbvh12, align 8, !dbg !6473
  %tobool13 = icmp ne %struct.PBVH* %17, null, !dbg !6471
  br i1 %tobool13, label %if.end29, label %land.lhs.true, !dbg !6474

land.lhs.true:                                    ; preds = %if.end11
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6475
  %sculpt14 = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 2, !dbg !6476
  %19 = load %struct.SculptSession*, %struct.SculptSession** %sculpt14, align 8, !dbg !6476
  %bm = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %19, i32 0, i32 10, !dbg !6477
  %20 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6477
  %tobool15 = icmp ne %struct.BMesh* %20, null, !dbg !6475
  br i1 %tobool15, label %if.then16, label %if.end29, !dbg !6478

if.then16:                                        ; preds = %land.lhs.true
  %call17 = call %struct.PBVH* @BKE_pbvh_new(), !dbg !6479
  %21 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6481
  %pbvh18 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %21, i32 0, i32 6, !dbg !6482
  store %struct.PBVH* %call17, %struct.PBVH** %pbvh18, align 8, !dbg !6483
  %22 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6484
  %pbvh_draw19 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %22, i32 0, i32 7, !dbg !6485
  store i8 1, i8* %pbvh_draw19, align 8, !dbg !6486
  %23 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6487
  %pbvh20 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %23, i32 0, i32 6, !dbg !6488
  %24 = load %struct.PBVH*, %struct.PBVH** %pbvh20, align 8, !dbg !6488
  %25 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6489
  %sculpt21 = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 2, !dbg !6490
  %26 = load %struct.SculptSession*, %struct.SculptSession** %sculpt21, align 8, !dbg !6490
  %bm22 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %26, i32 0, i32 10, !dbg !6491
  %27 = load %struct.BMesh*, %struct.BMesh** %bm22, align 8, !dbg !6491
  %28 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6492
  %sculpt23 = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 2, !dbg !6493
  %29 = load %struct.SculptSession*, %struct.SculptSession** %sculpt23, align 8, !dbg !6493
  %bm_smooth_shading = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %29, i32 0, i32 13, !dbg !6494
  %30 = load i8, i8* %bm_smooth_shading, align 8, !dbg !6494
  %31 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6495
  %sculpt24 = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 2, !dbg !6496
  %32 = load %struct.SculptSession*, %struct.SculptSession** %sculpt24, align 8, !dbg !6496
  %bm_log = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %32, i32 0, i32 14, !dbg !6497
  %33 = load %struct.BMLog*, %struct.BMLog** %bm_log, align 8, !dbg !6497
  %34 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6498
  %sculpt25 = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 2, !dbg !6499
  %35 = load %struct.SculptSession*, %struct.SculptSession** %sculpt25, align 8, !dbg !6499
  %cd_vert_node_offset = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %35, i32 0, i32 11, !dbg !6500
  %36 = load i32, i32* %cd_vert_node_offset, align 8, !dbg !6500
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6501
  %sculpt26 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 2, !dbg !6502
  %38 = load %struct.SculptSession*, %struct.SculptSession** %sculpt26, align 8, !dbg !6502
  %cd_face_node_offset = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %38, i32 0, i32 12, !dbg !6503
  %39 = load i32, i32* %cd_face_node_offset, align 4, !dbg !6503
  call void @BKE_pbvh_build_bmesh(%struct.PBVH* %24, %struct.BMesh* %27, i8 zeroext %30, %struct.BMLog* %33, i32 %36, i32 %39), !dbg !6504
  %40 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6505
  %pbvh27 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %40, i32 0, i32 6, !dbg !6506
  %41 = load %struct.PBVH*, %struct.PBVH** %pbvh27, align 8, !dbg !6506
  %42 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6507
  %sculpt28 = getelementptr inbounds %struct.Object, %struct.Object* %42, i32 0, i32 2, !dbg !6508
  %43 = load %struct.SculptSession*, %struct.SculptSession** %sculpt28, align 8, !dbg !6508
  %show_diffuse_color = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %43, i32 0, i32 16, !dbg !6509
  %44 = load i8, i8* %show_diffuse_color, align 8, !dbg !6509
  call void @pbvh_show_diffuse_color_set(%struct.PBVH* %41, i8 zeroext %44), !dbg !6510
  br label %if.end29, !dbg !6511

if.end29:                                         ; preds = %if.then16, %land.lhs.true, %if.end11
  %45 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6512
  %pbvh30 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %45, i32 0, i32 6, !dbg !6514
  %46 = load %struct.PBVH*, %struct.PBVH** %pbvh30, align 8, !dbg !6514
  %tobool31 = icmp ne %struct.PBVH* %46, null, !dbg !6512
  br i1 %tobool31, label %if.end56, label %land.lhs.true32, !dbg !6515

land.lhs.true32:                                  ; preds = %if.end29
  %47 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6516
  %type = getelementptr inbounds %struct.Object, %struct.Object* %47, i32 0, i32 3, !dbg !6517
  %48 = load i16, i16* %type, align 8, !dbg !6517
  %conv = sext i16 %48 to i32, !dbg !6516
  %cmp = icmp eq i32 %conv, 1, !dbg !6518
  br i1 %cmp, label %if.then34, label %if.end56, !dbg !6519

if.then34:                                        ; preds = %land.lhs.true32
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !6520, metadata !DIExpression()), !dbg !6522
  %49 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6523
  %data = getelementptr inbounds %struct.Object, %struct.Object* %49, i32 0, i32 19, !dbg !6524
  %50 = load i8*, i8** %data, align 8, !dbg !6524
  %51 = bitcast i8* %50 to %struct.Mesh*, !dbg !6523
  store %struct.Mesh* %51, %struct.Mesh** %me, align 8, !dbg !6522
  call void @llvm.dbg.declare(metadata i8* %deformed, metadata !6525, metadata !DIExpression()), !dbg !6526
  %call35 = call %struct.PBVH* @BKE_pbvh_new(), !dbg !6527
  %52 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6528
  %pbvh36 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %52, i32 0, i32 6, !dbg !6529
  store %struct.PBVH* %call35, %struct.PBVH** %pbvh36, align 8, !dbg !6530
  %53 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6531
  %54 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6532
  %call37 = call zeroext i8 @can_pbvh_draw(%struct.Object* %53, %struct.DerivedMesh* %54), !dbg !6533
  %55 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6534
  %pbvh_draw38 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %55, i32 0, i32 7, !dbg !6535
  store i8 %call37, i8* %pbvh_draw38, align 8, !dbg !6536
  %56 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6537
  call void @BKE_mesh_tessface_ensure(%struct.Mesh* %56), !dbg !6538
  %57 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6539
  %pbvh39 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %57, i32 0, i32 6, !dbg !6540
  %58 = load %struct.PBVH*, %struct.PBVH** %pbvh39, align 8, !dbg !6540
  %59 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6541
  %mface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %59, i32 0, i32 12, !dbg !6542
  %60 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6542
  %61 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6543
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %61, i32 0, i32 15, !dbg !6544
  %62 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6544
  %63 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6545
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %63, i32 0, i32 28, !dbg !6546
  %64 = load i32, i32* %totface, align 8, !dbg !6546
  %65 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6547
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %65, i32 0, i32 26, !dbg !6548
  %66 = load i32, i32* %totvert, align 8, !dbg !6548
  %67 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6549
  %vdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %67, i32 0, i32 21, !dbg !6550
  call void @BKE_pbvh_build_mesh(%struct.PBVH* %58, %struct.MFace* %60, %struct.MVert* %62, i32 %64, i32 %66, %struct.CustomData* %vdata), !dbg !6551
  %68 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6552
  %pbvh40 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %68, i32 0, i32 6, !dbg !6553
  %69 = load %struct.PBVH*, %struct.PBVH** %pbvh40, align 8, !dbg !6553
  %70 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6554
  %sculpt41 = getelementptr inbounds %struct.Object, %struct.Object* %70, i32 0, i32 2, !dbg !6555
  %71 = load %struct.SculptSession*, %struct.SculptSession** %sculpt41, align 8, !dbg !6555
  %show_diffuse_color42 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %71, i32 0, i32 16, !dbg !6556
  %72 = load i8, i8* %show_diffuse_color42, align 8, !dbg !6556
  call void @pbvh_show_diffuse_color_set(%struct.PBVH* %69, i8 zeroext %72), !dbg !6557
  %73 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6558
  %call43 = call zeroext i8 @check_sculpt_object_deformed(%struct.Object* %73, i8 zeroext 1), !dbg !6559
  store i8 %call43, i8* %deformed, align 1, !dbg !6560
  %74 = load i8, i8* %deformed, align 1, !dbg !6561
  %conv44 = zext i8 %74 to i32, !dbg !6561
  %tobool45 = icmp ne i32 %conv44, 0, !dbg !6561
  br i1 %tobool45, label %land.lhs.true46, label %if.end55, !dbg !6563

land.lhs.true46:                                  ; preds = %if.then34
  %75 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6564
  %derivedDeform = getelementptr inbounds %struct.Object, %struct.Object* %75, i32 0, i32 119, !dbg !6565
  %76 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedDeform, align 8, !dbg !6565
  %tobool47 = icmp ne %struct.DerivedMesh* %76, null, !dbg !6564
  br i1 %tobool47, label %if.then48, label %if.end55, !dbg !6566

if.then48:                                        ; preds = %land.lhs.true46
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %deformdm, metadata !6567, metadata !DIExpression()), !dbg !6569
  %77 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6570
  %derivedDeform49 = getelementptr inbounds %struct.Object, %struct.Object* %77, i32 0, i32 119, !dbg !6571
  %78 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedDeform49, align 8, !dbg !6571
  store %struct.DerivedMesh* %78, %struct.DerivedMesh** %deformdm, align 8, !dbg !6569
  call void @llvm.dbg.declare(metadata [3 x float]** %vertCos, metadata !6572, metadata !DIExpression()), !dbg !6573
  call void @llvm.dbg.declare(metadata i32* %totvert50, metadata !6574, metadata !DIExpression()), !dbg !6575
  %79 = load %struct.DerivedMesh*, %struct.DerivedMesh** %deformdm, align 8, !dbg !6576
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %79, i32 0, i32 23, !dbg !6577
  %80 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !6577
  %81 = load %struct.DerivedMesh*, %struct.DerivedMesh** %deformdm, align 8, !dbg !6578
  %call51 = call i32 %80(%struct.DerivedMesh* %81), !dbg !6576
  store i32 %call51, i32* %totvert50, align 4, !dbg !6579
  %82 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6580
  %83 = load i32, i32* %totvert50, align 4, !dbg !6581
  %conv52 = sext i32 %83 to i64, !dbg !6581
  %mul = mul i64 %conv52, 12, !dbg !6582
  %call53 = call i8* %82(i64 %mul, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !6580
  %84 = bitcast i8* %call53 to [3 x float]*, !dbg !6580
  store [3 x float]* %84, [3 x float]** %vertCos, align 8, !dbg !6583
  %85 = load %struct.DerivedMesh*, %struct.DerivedMesh** %deformdm, align 8, !dbg !6584
  %getVertCos = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %85, i32 0, i32 77, !dbg !6585
  %86 = load void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, [3 x float]*)** %getVertCos, align 8, !dbg !6585
  %87 = load %struct.DerivedMesh*, %struct.DerivedMesh** %deformdm, align 8, !dbg !6586
  %88 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !6587
  call void %86(%struct.DerivedMesh* %87, [3 x float]* %88), !dbg !6584
  %89 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6588
  %pbvh54 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %89, i32 0, i32 6, !dbg !6589
  %90 = load %struct.PBVH*, %struct.PBVH** %pbvh54, align 8, !dbg !6589
  %91 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !6590
  call void @BKE_pbvh_apply_vertCos(%struct.PBVH* %90, [3 x float]* %91), !dbg !6591
  %92 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6592
  %93 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !6593
  %94 = bitcast [3 x float]* %93 to i8*, !dbg !6593
  call void %92(i8* %94), !dbg !6592
  br label %if.end55, !dbg !6594

if.end55:                                         ; preds = %if.then48, %land.lhs.true46, %if.then34
  br label %if.end56, !dbg !6595

if.end56:                                         ; preds = %if.end55, %land.lhs.true32, %if.end29
  %95 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6596
  %pbvh57 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %95, i32 0, i32 6, !dbg !6597
  %96 = load %struct.PBVH*, %struct.PBVH** %pbvh57, align 8, !dbg !6597
  store %struct.PBVH* %96, %struct.PBVH** %retval, align 8, !dbg !6598
  br label %return, !dbg !6598

return:                                           ; preds = %if.end56, %if.then2, %if.then
  %97 = load %struct.PBVH*, %struct.PBVH** %retval, align 8, !dbg !6599
  ret %struct.PBVH* %97, !dbg !6599
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.MeshElemMap* @cdDM_getPolyMap(%struct.Object* %ob, %struct.DerivedMesh* %dm) #0 !dbg !6600 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %me = alloca %struct.Mesh*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6605, metadata !DIExpression()), !dbg !6606
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6607, metadata !DIExpression()), !dbg !6608
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !6609, metadata !DIExpression()), !dbg !6610
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6611
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !6612
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6610
  %2 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6613
  %pmap = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %2, i32 0, i32 8, !dbg !6615
  %3 = load %struct.MeshElemMap*, %struct.MeshElemMap** %pmap, align 8, !dbg !6615
  %tobool = icmp ne %struct.MeshElemMap* %3, null, !dbg !6613
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6616

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6617
  %type = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 3, !dbg !6618
  %5 = load i16, i16* %type, align 8, !dbg !6618
  %conv = sext i16 %5 to i32, !dbg !6617
  %cmp = icmp eq i32 %conv, 1, !dbg !6619
  br i1 %cmp, label %if.then, label %if.end, !dbg !6620

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !6621, metadata !DIExpression()), !dbg !6623
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6624
  %data = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 19, !dbg !6625
  %7 = load i8*, i8** %data, align 8, !dbg !6625
  %8 = bitcast i8* %7 to %struct.Mesh*, !dbg !6624
  store %struct.Mesh* %8, %struct.Mesh** %me, align 8, !dbg !6623
  %9 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6626
  %pmap2 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %9, i32 0, i32 8, !dbg !6627
  %10 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6628
  %pmap_mem = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %10, i32 0, i32 9, !dbg !6629
  %11 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6630
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 7, !dbg !6631
  %12 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !6631
  %13 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6632
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %13, i32 0, i32 9, !dbg !6633
  %14 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !6633
  %15 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6634
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %15, i32 0, i32 26, !dbg !6635
  %16 = load i32, i32* %totvert, align 8, !dbg !6635
  %17 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6636
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 30, !dbg !6637
  %18 = load i32, i32* %totpoly, align 8, !dbg !6637
  %19 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6638
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %19, i32 0, i32 31, !dbg !6639
  %20 = load i32, i32* %totloop, align 4, !dbg !6639
  call void @BKE_mesh_vert_poly_map_create(%struct.MeshElemMap** %pmap2, i32** %pmap_mem, %struct.MPoly* %12, %struct.MLoop* %14, i32 %16, i32 %18, i32 %20), !dbg !6640
  br label %if.end, !dbg !6641

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %21 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6642
  %pmap3 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %21, i32 0, i32 8, !dbg !6643
  %22 = load %struct.MeshElemMap*, %struct.MeshElemMap** %pmap3, align 8, !dbg !6643
  ret %struct.MeshElemMap* %22, !dbg !6644
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_drawVerts(%struct.DerivedMesh* %dm) #0 !dbg !6645 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %mv = alloca %struct.MVert*, align 8
  %i = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6646, metadata !DIExpression()), !dbg !6647
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !6648, metadata !DIExpression()), !dbg !6649
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6650
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !6651
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6649
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !6652, metadata !DIExpression()), !dbg !6653
  %2 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6654
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %2, i32 0, i32 1, !dbg !6655
  %3 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6655
  store %struct.MVert* %3, %struct.MVert** %mv, align 8, !dbg !6653
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6656, metadata !DIExpression()), !dbg !6657
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6658
  %call = call zeroext i8 @GPU_buffer_legacy(%struct.DerivedMesh* %4), !dbg !6660
  %tobool = icmp ne i8 %call, 0, !dbg !6660
  br i1 %tobool, label %if.then, label %if.else, !dbg !6661

if.then:                                          ; preds = %entry
  call void @glBegin(i32 0), !dbg !6662
  store i32 0, i32* %i, align 4, !dbg !6664
  br label %for.cond, !dbg !6666

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i32, i32* %i, align 4, !dbg !6667
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6669
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 5, !dbg !6670
  %7 = load i32, i32* %numVertData, align 8, !dbg !6670
  %cmp = icmp slt i32 %5, %7, !dbg !6671
  br i1 %cmp, label %for.body, label %for.end, !dbg !6672

for.body:                                         ; preds = %for.cond
  %8 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !6673
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %8, i32 0, i32 0, !dbg !6674
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6673
  call void @glVertex3fv(float* %arraydecay), !dbg !6675
  br label %for.inc, !dbg !6675

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !6676
  %inc = add nsw i32 %9, 1, !dbg !6676
  store i32 %inc, i32* %i, align 4, !dbg !6676
  %10 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !6677
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %10, i32 1, !dbg !6677
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mv, align 8, !dbg !6677
  br label %for.cond, !dbg !6678, !llvm.loop !6679

for.end:                                          ; preds = %for.cond
  call void @glEnd(), !dbg !6681
  br label %if.end11, !dbg !6682

if.else:                                          ; preds = %entry
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6683
  call void @GPU_vertex_setup(%struct.DerivedMesh* %11), !dbg !6685
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6686
  %call1 = call zeroext i8 @GPU_buffer_legacy(%struct.DerivedMesh* %12), !dbg !6688
  %tobool2 = icmp ne i8 %call1, 0, !dbg !6688
  br i1 %tobool2, label %if.end10, label %if.then3, !dbg !6689

if.then3:                                         ; preds = %if.else
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6690
  %drawObject = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 13, !dbg !6693
  %14 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject, align 8, !dbg !6693
  %tot_triangle_point = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %14, i32 0, i32 11, !dbg !6694
  %15 = load i32, i32* %tot_triangle_point, align 4, !dbg !6694
  %tobool4 = icmp ne i32 %15, 0, !dbg !6690
  br i1 %tobool4, label %if.then5, label %if.else8, !dbg !6695

if.then5:                                         ; preds = %if.then3
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6696
  %drawObject6 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %16, i32 0, i32 13, !dbg !6697
  %17 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject6, align 8, !dbg !6697
  %tot_triangle_point7 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %17, i32 0, i32 11, !dbg !6698
  %18 = load i32, i32* %tot_triangle_point7, align 4, !dbg !6698
  call void @glDrawArrays(i32 0, i32 0, i32 %18), !dbg !6699
  br label %if.end, !dbg !6699

if.else8:                                         ; preds = %if.then3
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6700
  %drawObject9 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %19, i32 0, i32 13, !dbg !6701
  %20 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject9, align 8, !dbg !6701
  %tot_loose_point = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %20, i32 0, i32 12, !dbg !6702
  %21 = load i32, i32* %tot_loose_point, align 8, !dbg !6702
  call void @glDrawArrays(i32 0, i32 0, i32 %21), !dbg !6703
  br label %if.end

if.end:                                           ; preds = %if.else8, %if.then5
  br label %if.end10, !dbg !6704

if.end10:                                         ; preds = %if.end, %if.else
  call void @GPU_buffer_unbind(), !dbg !6705
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %for.end
  ret void, !dbg !6706
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_drawUVEdges(%struct.DerivedMesh* %dm) #0 !dbg !6707 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %mf = alloca %struct.MFace*, align 8
  %tf = alloca %struct.MTFace*, align 8
  %i = alloca i32, align 4
  %prevstart = alloca i32, align 4
  %prevdraw = alloca i32, align 4
  %draw = alloca i32, align 4
  %curpos = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6708, metadata !DIExpression()), !dbg !6709
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !6710, metadata !DIExpression()), !dbg !6711
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6712
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !6713
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6711
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !6714, metadata !DIExpression()), !dbg !6715
  %2 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6716
  %mface = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %2, i32 0, i32 3, !dbg !6717
  %3 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6717
  store %struct.MFace* %3, %struct.MFace** %mf, align 8, !dbg !6715
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf, metadata !6718, metadata !DIExpression()), !dbg !6721
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6722
  %call = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %4, i32 5), !dbg !6723
  %5 = bitcast i8* %call to %struct.MTFace*, !dbg !6723
  store %struct.MTFace* %5, %struct.MTFace** %tf, align 8, !dbg !6721
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6724, metadata !DIExpression()), !dbg !6725
  %6 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6726
  %tobool = icmp ne %struct.MFace* %6, null, !dbg !6726
  br i1 %tobool, label %if.then, label %if.end85, !dbg !6728

if.then:                                          ; preds = %entry
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6729
  %call1 = call zeroext i8 @GPU_buffer_legacy(%struct.DerivedMesh* %7), !dbg !6732
  %tobool2 = icmp ne i8 %call1, 0, !dbg !6732
  br i1 %tobool2, label %if.then3, label %if.else37, !dbg !6733

if.then3:                                         ; preds = %if.then
  call void @glBegin(i32 1), !dbg !6734
  store i32 0, i32* %i, align 4, !dbg !6736
  br label %for.cond, !dbg !6738

for.cond:                                         ; preds = %for.inc, %if.then3
  %8 = load i32, i32* %i, align 4, !dbg !6739
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6741
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 7, !dbg !6742
  %10 = load i32, i32* %numTessFaceData, align 8, !dbg !6742
  %cmp = icmp slt i32 %8, %10, !dbg !6743
  br i1 %cmp, label %for.body, label %for.end, !dbg !6744

for.body:                                         ; preds = %for.cond
  %11 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6745
  %flag = getelementptr inbounds %struct.MFace, %struct.MFace* %11, i32 0, i32 6, !dbg !6748
  %12 = load i8, i8* %flag, align 1, !dbg !6748
  %conv = zext i8 %12 to i32, !dbg !6745
  %and = and i32 %conv, 16, !dbg !6749
  %tobool4 = icmp ne i32 %and, 0, !dbg !6749
  br i1 %tobool4, label %if.end35, label %if.then5, !dbg !6750

if.then5:                                         ; preds = %for.body
  %13 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !6751
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %13, i32 0, i32 0, !dbg !6753
  %arrayidx = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 0, !dbg !6751
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !6751
  call void @glVertex2fv(float* %arraydecay), !dbg !6754
  %14 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !6755
  %uv6 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %14, i32 0, i32 0, !dbg !6756
  %arrayidx7 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv6, i64 0, i64 1, !dbg !6755
  %arraydecay8 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx7, i64 0, i64 0, !dbg !6755
  call void @glVertex2fv(float* %arraydecay8), !dbg !6757
  %15 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !6758
  %uv9 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %15, i32 0, i32 0, !dbg !6759
  %arrayidx10 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv9, i64 0, i64 1, !dbg !6758
  %arraydecay11 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx10, i64 0, i64 0, !dbg !6758
  call void @glVertex2fv(float* %arraydecay11), !dbg !6760
  %16 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !6761
  %uv12 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %16, i32 0, i32 0, !dbg !6762
  %arrayidx13 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv12, i64 0, i64 2, !dbg !6761
  %arraydecay14 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx13, i64 0, i64 0, !dbg !6761
  call void @glVertex2fv(float* %arraydecay14), !dbg !6763
  %17 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6764
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %17, i32 0, i32 3, !dbg !6766
  %18 = load i32, i32* %v4, align 4, !dbg !6766
  %tobool15 = icmp ne i32 %18, 0, !dbg !6764
  br i1 %tobool15, label %if.else, label %if.then16, !dbg !6767

if.then16:                                        ; preds = %if.then5
  %19 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !6768
  %uv17 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %19, i32 0, i32 0, !dbg !6770
  %arrayidx18 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv17, i64 0, i64 2, !dbg !6768
  %arraydecay19 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx18, i64 0, i64 0, !dbg !6768
  call void @glVertex2fv(float* %arraydecay19), !dbg !6771
  %20 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !6772
  %uv20 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %20, i32 0, i32 0, !dbg !6773
  %arrayidx21 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv20, i64 0, i64 0, !dbg !6772
  %arraydecay22 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx21, i64 0, i64 0, !dbg !6772
  call void @glVertex2fv(float* %arraydecay22), !dbg !6774
  br label %if.end, !dbg !6775

if.else:                                          ; preds = %if.then5
  %21 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !6776
  %uv23 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %21, i32 0, i32 0, !dbg !6778
  %arrayidx24 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv23, i64 0, i64 2, !dbg !6776
  %arraydecay25 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx24, i64 0, i64 0, !dbg !6776
  call void @glVertex2fv(float* %arraydecay25), !dbg !6779
  %22 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !6780
  %uv26 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %22, i32 0, i32 0, !dbg !6781
  %arrayidx27 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv26, i64 0, i64 3, !dbg !6780
  %arraydecay28 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx27, i64 0, i64 0, !dbg !6780
  call void @glVertex2fv(float* %arraydecay28), !dbg !6782
  %23 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !6783
  %uv29 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %23, i32 0, i32 0, !dbg !6784
  %arrayidx30 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv29, i64 0, i64 3, !dbg !6783
  %arraydecay31 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx30, i64 0, i64 0, !dbg !6783
  call void @glVertex2fv(float* %arraydecay31), !dbg !6785
  %24 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !6786
  %uv32 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %24, i32 0, i32 0, !dbg !6787
  %arrayidx33 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv32, i64 0, i64 0, !dbg !6786
  %arraydecay34 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx33, i64 0, i64 0, !dbg !6786
  call void @glVertex2fv(float* %arraydecay34), !dbg !6788
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then16
  br label %if.end35, !dbg !6789

if.end35:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !6790

for.inc:                                          ; preds = %if.end35
  %25 = load i32, i32* %i, align 4, !dbg !6791
  %inc = add nsw i32 %25, 1, !dbg !6791
  store i32 %inc, i32* %i, align 4, !dbg !6791
  %26 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6792
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %26, i32 1, !dbg !6792
  store %struct.MFace* %incdec.ptr, %struct.MFace** %mf, align 8, !dbg !6792
  %27 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !6793
  %incdec.ptr36 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %27, i32 1, !dbg !6793
  store %struct.MTFace* %incdec.ptr36, %struct.MTFace** %tf, align 8, !dbg !6793
  br label %for.cond, !dbg !6794, !llvm.loop !6795

for.end:                                          ; preds = %for.cond
  call void @glEnd(), !dbg !6797
  br label %if.end84, !dbg !6798

if.else37:                                        ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %prevstart, metadata !6799, metadata !DIExpression()), !dbg !6801
  store i32 0, i32* %prevstart, align 4, !dbg !6801
  call void @llvm.dbg.declare(metadata i32* %prevdraw, metadata !6802, metadata !DIExpression()), !dbg !6803
  store i32 1, i32* %prevdraw, align 4, !dbg !6803
  call void @llvm.dbg.declare(metadata i32* %draw, metadata !6804, metadata !DIExpression()), !dbg !6805
  store i32 1, i32* %draw, align 4, !dbg !6805
  call void @llvm.dbg.declare(metadata i32* %curpos, metadata !6806, metadata !DIExpression()), !dbg !6807
  store i32 0, i32* %curpos, align 4, !dbg !6807
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6808
  call void @GPU_uvedge_setup(%struct.DerivedMesh* %28), !dbg !6809
  %29 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6810
  %call38 = call zeroext i8 @GPU_buffer_legacy(%struct.DerivedMesh* %29), !dbg !6812
  %tobool39 = icmp ne i8 %call38, 0, !dbg !6812
  br i1 %tobool39, label %if.end83, label %if.then40, !dbg !6813

if.then40:                                        ; preds = %if.else37
  store i32 0, i32* %i, align 4, !dbg !6814
  br label %for.cond41, !dbg !6817

for.cond41:                                       ; preds = %for.inc70, %if.then40
  %30 = load i32, i32* %i, align 4, !dbg !6818
  %31 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6820
  %numTessFaceData42 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %31, i32 0, i32 7, !dbg !6821
  %32 = load i32, i32* %numTessFaceData42, align 8, !dbg !6821
  %cmp43 = icmp slt i32 %30, %32, !dbg !6822
  br i1 %cmp43, label %for.body45, label %for.end73, !dbg !6823

for.body45:                                       ; preds = %for.cond41
  %33 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6824
  %flag46 = getelementptr inbounds %struct.MFace, %struct.MFace* %33, i32 0, i32 6, !dbg !6827
  %34 = load i8, i8* %flag46, align 1, !dbg !6827
  %conv47 = zext i8 %34 to i32, !dbg !6824
  %and48 = and i32 %conv47, 16, !dbg !6828
  %tobool49 = icmp ne i32 %and48, 0, !dbg !6828
  br i1 %tobool49, label %if.else51, label %if.then50, !dbg !6829

if.then50:                                        ; preds = %for.body45
  store i32 1, i32* %draw, align 4, !dbg !6830
  br label %if.end52, !dbg !6832

if.else51:                                        ; preds = %for.body45
  store i32 0, i32* %draw, align 4, !dbg !6833
  br label %if.end52

if.end52:                                         ; preds = %if.else51, %if.then50
  %35 = load i32, i32* %prevdraw, align 4, !dbg !6835
  %36 = load i32, i32* %draw, align 4, !dbg !6837
  %cmp53 = icmp ne i32 %35, %36, !dbg !6838
  br i1 %cmp53, label %if.then55, label %if.end63, !dbg !6839

if.then55:                                        ; preds = %if.end52
  %37 = load i32, i32* %prevdraw, align 4, !dbg !6840
  %cmp56 = icmp sgt i32 %37, 0, !dbg !6843
  br i1 %cmp56, label %land.lhs.true, label %if.end62, !dbg !6844

land.lhs.true:                                    ; preds = %if.then55
  %38 = load i32, i32* %curpos, align 4, !dbg !6845
  %39 = load i32, i32* %prevstart, align 4, !dbg !6846
  %sub = sub nsw i32 %38, %39, !dbg !6847
  %cmp58 = icmp sgt i32 %sub, 0, !dbg !6848
  br i1 %cmp58, label %if.then60, label %if.end62, !dbg !6849

if.then60:                                        ; preds = %land.lhs.true
  %40 = load i32, i32* %prevstart, align 4, !dbg !6850
  %41 = load i32, i32* %curpos, align 4, !dbg !6852
  %42 = load i32, i32* %prevstart, align 4, !dbg !6853
  %sub61 = sub nsw i32 %41, %42, !dbg !6854
  call void @glDrawArrays(i32 1, i32 %40, i32 %sub61), !dbg !6855
  br label %if.end62, !dbg !6856

if.end62:                                         ; preds = %if.then60, %land.lhs.true, %if.then55
  %43 = load i32, i32* %curpos, align 4, !dbg !6857
  store i32 %43, i32* %prevstart, align 4, !dbg !6858
  br label %if.end63, !dbg !6859

if.end63:                                         ; preds = %if.end62, %if.end52
  %44 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6860
  %v464 = getelementptr inbounds %struct.MFace, %struct.MFace* %44, i32 0, i32 3, !dbg !6862
  %45 = load i32, i32* %v464, align 4, !dbg !6862
  %tobool65 = icmp ne i32 %45, 0, !dbg !6860
  br i1 %tobool65, label %if.then66, label %if.else67, !dbg !6863

if.then66:                                        ; preds = %if.end63
  %46 = load i32, i32* %curpos, align 4, !dbg !6864
  %add = add nsw i32 %46, 8, !dbg !6864
  store i32 %add, i32* %curpos, align 4, !dbg !6864
  br label %if.end69, !dbg !6866

if.else67:                                        ; preds = %if.end63
  %47 = load i32, i32* %curpos, align 4, !dbg !6867
  %add68 = add nsw i32 %47, 6, !dbg !6867
  store i32 %add68, i32* %curpos, align 4, !dbg !6867
  br label %if.end69

if.end69:                                         ; preds = %if.else67, %if.then66
  %48 = load i32, i32* %draw, align 4, !dbg !6869
  store i32 %48, i32* %prevdraw, align 4, !dbg !6870
  br label %for.inc70, !dbg !6871

for.inc70:                                        ; preds = %if.end69
  %49 = load i32, i32* %i, align 4, !dbg !6872
  %inc71 = add nsw i32 %49, 1, !dbg !6872
  store i32 %inc71, i32* %i, align 4, !dbg !6872
  %50 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !6873
  %incdec.ptr72 = getelementptr inbounds %struct.MFace, %struct.MFace* %50, i32 1, !dbg !6873
  store %struct.MFace* %incdec.ptr72, %struct.MFace** %mf, align 8, !dbg !6873
  br label %for.cond41, !dbg !6874, !llvm.loop !6875

for.end73:                                        ; preds = %for.cond41
  %51 = load i32, i32* %prevdraw, align 4, !dbg !6877
  %cmp74 = icmp sgt i32 %51, 0, !dbg !6879
  br i1 %cmp74, label %land.lhs.true76, label %if.end82, !dbg !6880

land.lhs.true76:                                  ; preds = %for.end73
  %52 = load i32, i32* %curpos, align 4, !dbg !6881
  %53 = load i32, i32* %prevstart, align 4, !dbg !6882
  %sub77 = sub nsw i32 %52, %53, !dbg !6883
  %cmp78 = icmp sgt i32 %sub77, 0, !dbg !6884
  br i1 %cmp78, label %if.then80, label %if.end82, !dbg !6885

if.then80:                                        ; preds = %land.lhs.true76
  %54 = load i32, i32* %prevstart, align 4, !dbg !6886
  %55 = load i32, i32* %curpos, align 4, !dbg !6888
  %56 = load i32, i32* %prevstart, align 4, !dbg !6889
  %sub81 = sub nsw i32 %55, %56, !dbg !6890
  call void @glDrawArrays(i32 1, i32 %54, i32 %sub81), !dbg !6891
  br label %if.end82, !dbg !6892

if.end82:                                         ; preds = %if.then80, %land.lhs.true76, %for.end73
  br label %if.end83, !dbg !6893

if.end83:                                         ; preds = %if.end82, %if.else37
  call void @GPU_buffer_unbind(), !dbg !6894
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %for.end
  br label %if.end85, !dbg !6895

if.end85:                                         ; preds = %if.end84, %entry
  ret void, !dbg !6896
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_drawEdges(%struct.DerivedMesh* %dm, i8 zeroext %drawLooseEdges, i8 zeroext %drawAllEdges) #0 !dbg !6897 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %drawLooseEdges.addr = alloca i8, align 1
  %drawAllEdges.addr = alloca i8, align 1
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %medge = alloca %struct.MEdge*, align 8
  %i = alloca i32, align 4
  %prevstart = alloca i32, align 4
  %prevdraw = alloca i32, align 4
  %draw = alloca i8, align 1
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6898, metadata !DIExpression()), !dbg !6899
  store i8 %drawLooseEdges, i8* %drawLooseEdges.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %drawLooseEdges.addr, metadata !6900, metadata !DIExpression()), !dbg !6901
  store i8 %drawAllEdges, i8* %drawAllEdges.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %drawAllEdges.addr, metadata !6902, metadata !DIExpression()), !dbg !6903
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !6904, metadata !DIExpression()), !dbg !6905
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6906
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !6907
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6905
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !6908, metadata !DIExpression()), !dbg !6909
  %2 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6910
  %mvert1 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %2, i32 0, i32 1, !dbg !6911
  %3 = load %struct.MVert*, %struct.MVert** %mvert1, align 8, !dbg !6911
  store %struct.MVert* %3, %struct.MVert** %mvert, align 8, !dbg !6909
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge, metadata !6912, metadata !DIExpression()), !dbg !6913
  %4 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6914
  %medge2 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %4, i32 0, i32 2, !dbg !6915
  %5 = load %struct.MEdge*, %struct.MEdge** %medge2, align 8, !dbg !6915
  store %struct.MEdge* %5, %struct.MEdge** %medge, align 8, !dbg !6913
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6916, metadata !DIExpression()), !dbg !6917
  %6 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6918
  %pbvh = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %6, i32 0, i32 6, !dbg !6920
  %7 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !6920
  %tobool = icmp ne %struct.PBVH* %7, null, !dbg !6918
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6921

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6922
  %pbvh_draw = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %8, i32 0, i32 7, !dbg !6923
  %9 = load i8, i8* %pbvh_draw, align 8, !dbg !6923
  %conv = zext i8 %9 to i32, !dbg !6922
  %tobool3 = icmp ne i32 %conv, 0, !dbg !6922
  br i1 %tobool3, label %land.lhs.true4, label %if.end, !dbg !6924

land.lhs.true4:                                   ; preds = %land.lhs.true
  %10 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6925
  %pbvh5 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %10, i32 0, i32 6, !dbg !6926
  %11 = load %struct.PBVH*, %struct.PBVH** %pbvh5, align 8, !dbg !6926
  %call = call i32 @BKE_pbvh_type(%struct.PBVH* %11), !dbg !6927
  %cmp = icmp eq i32 %call, 2, !dbg !6928
  br i1 %cmp, label %if.then, label %if.end, !dbg !6929

if.then:                                          ; preds = %land.lhs.true4
  %12 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !6930
  %pbvh7 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %12, i32 0, i32 6, !dbg !6932
  %13 = load %struct.PBVH*, %struct.PBVH** %pbvh7, align 8, !dbg !6932
  call void @BKE_pbvh_draw(%struct.PBVH* %13, [4 x float]* null, [3 x float]* null, i32 (i32, i8*)* null, i8 zeroext 1), !dbg !6933
  br label %if.end90, !dbg !6934

if.end:                                           ; preds = %land.lhs.true4, %land.lhs.true, %entry
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6935
  %call8 = call zeroext i8 @GPU_buffer_legacy(%struct.DerivedMesh* %14), !dbg !6937
  %tobool9 = icmp ne i8 %call8, 0, !dbg !6937
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !6938

if.then10:                                        ; preds = %if.end
  call void @glBegin(i32 1), !dbg !6939
  store i32 0, i32* %i, align 4, !dbg !6941
  br label %for.cond, !dbg !6943

for.cond:                                         ; preds = %for.inc, %if.then10
  %15 = load i32, i32* %i, align 4, !dbg !6944
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6946
  %numEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %16, i32 0, i32 6, !dbg !6947
  %17 = load i32, i32* %numEdgeData, align 4, !dbg !6947
  %cmp11 = icmp slt i32 %15, %17, !dbg !6948
  br i1 %cmp11, label %for.body, label %for.end, !dbg !6949

for.body:                                         ; preds = %for.cond
  %18 = load i8, i8* %drawAllEdges.addr, align 1, !dbg !6950
  %conv13 = zext i8 %18 to i32, !dbg !6950
  %tobool14 = icmp ne i32 %conv13, 0, !dbg !6950
  br i1 %tobool14, label %land.lhs.true17, label %lor.lhs.false, !dbg !6953

lor.lhs.false:                                    ; preds = %for.body
  %19 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !6954
  %flag = getelementptr inbounds %struct.MEdge, %struct.MEdge* %19, i32 0, i32 4, !dbg !6955
  %20 = load i16, i16* %flag, align 2, !dbg !6955
  %conv15 = sext i16 %20 to i32, !dbg !6954
  %and = and i32 %conv15, 2, !dbg !6956
  %tobool16 = icmp ne i32 %and, 0, !dbg !6956
  br i1 %tobool16, label %land.lhs.true17, label %if.end30, !dbg !6957

land.lhs.true17:                                  ; preds = %lor.lhs.false, %for.body
  %21 = load i8, i8* %drawLooseEdges.addr, align 1, !dbg !6958
  %conv18 = zext i8 %21 to i32, !dbg !6958
  %tobool19 = icmp ne i32 %conv18, 0, !dbg !6958
  br i1 %tobool19, label %if.then25, label %lor.lhs.false20, !dbg !6959

lor.lhs.false20:                                  ; preds = %land.lhs.true17
  %22 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !6960
  %flag21 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %22, i32 0, i32 4, !dbg !6961
  %23 = load i16, i16* %flag21, align 2, !dbg !6961
  %conv22 = sext i16 %23 to i32, !dbg !6960
  %and23 = and i32 %conv22, 128, !dbg !6962
  %tobool24 = icmp ne i32 %and23, 0, !dbg !6962
  br i1 %tobool24, label %if.end30, label %if.then25, !dbg !6963

if.then25:                                        ; preds = %lor.lhs.false20, %land.lhs.true17
  %24 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6964
  %25 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !6966
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %25, i32 0, i32 0, !dbg !6967
  %26 = load i32, i32* %v1, align 4, !dbg !6967
  %idxprom = zext i32 %26 to i64, !dbg !6964
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %24, i64 %idxprom, !dbg !6964
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx, i32 0, i32 0, !dbg !6968
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6964
  call void @glVertex3fv(float* %arraydecay), !dbg !6969
  %27 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6970
  %28 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !6971
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %28, i32 0, i32 1, !dbg !6972
  %29 = load i32, i32* %v2, align 4, !dbg !6972
  %idxprom26 = zext i32 %29 to i64, !dbg !6970
  %arrayidx27 = getelementptr inbounds %struct.MVert, %struct.MVert* %27, i64 %idxprom26, !dbg !6970
  %co28 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx27, i32 0, i32 0, !dbg !6973
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %co28, i64 0, i64 0, !dbg !6970
  call void @glVertex3fv(float* %arraydecay29), !dbg !6974
  br label %if.end30, !dbg !6975

if.end30:                                         ; preds = %if.then25, %lor.lhs.false20, %lor.lhs.false
  br label %for.inc, !dbg !6976

for.inc:                                          ; preds = %if.end30
  %30 = load i32, i32* %i, align 4, !dbg !6977
  %inc = add nsw i32 %30, 1, !dbg !6977
  store i32 %inc, i32* %i, align 4, !dbg !6977
  %31 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !6978
  %incdec.ptr = getelementptr inbounds %struct.MEdge, %struct.MEdge* %31, i32 1, !dbg !6978
  store %struct.MEdge* %incdec.ptr, %struct.MEdge** %medge, align 8, !dbg !6978
  br label %for.cond, !dbg !6979, !llvm.loop !6980

for.end:                                          ; preds = %for.cond
  call void @glEnd(), !dbg !6982
  br label %if.end90, !dbg !6983

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %prevstart, metadata !6984, metadata !DIExpression()), !dbg !6986
  store i32 0, i32* %prevstart, align 4, !dbg !6986
  call void @llvm.dbg.declare(metadata i32* %prevdraw, metadata !6987, metadata !DIExpression()), !dbg !6988
  store i32 1, i32* %prevdraw, align 4, !dbg !6988
  call void @llvm.dbg.declare(metadata i8* %draw, metadata !6989, metadata !DIExpression()), !dbg !6990
  store i8 1, i8* %draw, align 1, !dbg !6990
  %32 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6991
  call void @GPU_edge_setup(%struct.DerivedMesh* %32), !dbg !6992
  %33 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6993
  %call31 = call zeroext i8 @GPU_buffer_legacy(%struct.DerivedMesh* %33), !dbg !6995
  %tobool32 = icmp ne i8 %call31, 0, !dbg !6995
  br i1 %tobool32, label %if.end89, label %if.then33, !dbg !6996

if.then33:                                        ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !6997
  br label %for.cond34, !dbg !7000

for.cond34:                                       ; preds = %for.inc72, %if.then33
  %34 = load i32, i32* %i, align 4, !dbg !7001
  %35 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7003
  %numEdgeData35 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %35, i32 0, i32 6, !dbg !7004
  %36 = load i32, i32* %numEdgeData35, align 4, !dbg !7004
  %cmp36 = icmp slt i32 %34, %36, !dbg !7005
  br i1 %cmp36, label %for.body38, label %for.end75, !dbg !7006

for.body38:                                       ; preds = %for.cond34
  %37 = load i8, i8* %drawAllEdges.addr, align 1, !dbg !7007
  %conv39 = zext i8 %37 to i32, !dbg !7007
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !7007
  br i1 %tobool40, label %land.lhs.true46, label %lor.lhs.false41, !dbg !7010

lor.lhs.false41:                                  ; preds = %for.body38
  %38 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !7011
  %flag42 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %38, i32 0, i32 4, !dbg !7012
  %39 = load i16, i16* %flag42, align 2, !dbg !7012
  %conv43 = sext i16 %39 to i32, !dbg !7011
  %and44 = and i32 %conv43, 2, !dbg !7013
  %tobool45 = icmp ne i32 %and44, 0, !dbg !7013
  br i1 %tobool45, label %land.lhs.true46, label %if.else55, !dbg !7014

land.lhs.true46:                                  ; preds = %lor.lhs.false41, %for.body38
  %40 = load i8, i8* %drawLooseEdges.addr, align 1, !dbg !7015
  %conv47 = zext i8 %40 to i32, !dbg !7015
  %tobool48 = icmp ne i32 %conv47, 0, !dbg !7015
  br i1 %tobool48, label %if.then54, label %lor.lhs.false49, !dbg !7016

lor.lhs.false49:                                  ; preds = %land.lhs.true46
  %41 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !7017
  %flag50 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %41, i32 0, i32 4, !dbg !7018
  %42 = load i16, i16* %flag50, align 2, !dbg !7018
  %conv51 = sext i16 %42 to i32, !dbg !7017
  %and52 = and i32 %conv51, 128, !dbg !7019
  %tobool53 = icmp ne i32 %and52, 0, !dbg !7019
  br i1 %tobool53, label %if.else55, label %if.then54, !dbg !7020

if.then54:                                        ; preds = %lor.lhs.false49, %land.lhs.true46
  store i8 1, i8* %draw, align 1, !dbg !7021
  br label %if.end56, !dbg !7023

if.else55:                                        ; preds = %lor.lhs.false49, %lor.lhs.false41
  store i8 0, i8* %draw, align 1, !dbg !7024
  br label %if.end56

if.end56:                                         ; preds = %if.else55, %if.then54
  %43 = load i32, i32* %prevdraw, align 4, !dbg !7026
  %44 = load i8, i8* %draw, align 1, !dbg !7028
  %conv57 = zext i8 %44 to i32, !dbg !7028
  %cmp58 = icmp ne i32 %43, %conv57, !dbg !7029
  br i1 %cmp58, label %if.then60, label %if.end70, !dbg !7030

if.then60:                                        ; preds = %if.end56
  %45 = load i32, i32* %prevdraw, align 4, !dbg !7031
  %cmp61 = icmp sgt i32 %45, 0, !dbg !7034
  br i1 %cmp61, label %land.lhs.true63, label %if.end69, !dbg !7035

land.lhs.true63:                                  ; preds = %if.then60
  %46 = load i32, i32* %i, align 4, !dbg !7036
  %47 = load i32, i32* %prevstart, align 4, !dbg !7037
  %sub = sub nsw i32 %46, %47, !dbg !7038
  %cmp64 = icmp sgt i32 %sub, 0, !dbg !7039
  br i1 %cmp64, label %if.then66, label %if.end69, !dbg !7040

if.then66:                                        ; preds = %land.lhs.true63
  %48 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7041
  %drawObject = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %48, i32 0, i32 13, !dbg !7043
  %49 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject, align 8, !dbg !7043
  %edges = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %49, i32 0, i32 4, !dbg !7044
  %50 = load %struct.GPUBuffer*, %struct.GPUBuffer** %edges, align 8, !dbg !7044
  %51 = load i32, i32* %prevstart, align 4, !dbg !7045
  %mul = mul nsw i32 %51, 2, !dbg !7046
  %52 = load i32, i32* %i, align 4, !dbg !7047
  %53 = load i32, i32* %prevstart, align 4, !dbg !7048
  %sub67 = sub nsw i32 %52, %53, !dbg !7049
  %mul68 = mul nsw i32 %sub67, 2, !dbg !7050
  call void @GPU_buffer_draw_elements(%struct.GPUBuffer* %50, i32 1, i32 %mul, i32 %mul68), !dbg !7051
  br label %if.end69, !dbg !7052

if.end69:                                         ; preds = %if.then66, %land.lhs.true63, %if.then60
  %54 = load i32, i32* %i, align 4, !dbg !7053
  store i32 %54, i32* %prevstart, align 4, !dbg !7054
  br label %if.end70, !dbg !7055

if.end70:                                         ; preds = %if.end69, %if.end56
  %55 = load i8, i8* %draw, align 1, !dbg !7056
  %conv71 = zext i8 %55 to i32, !dbg !7056
  store i32 %conv71, i32* %prevdraw, align 4, !dbg !7057
  br label %for.inc72, !dbg !7058

for.inc72:                                        ; preds = %if.end70
  %56 = load i32, i32* %i, align 4, !dbg !7059
  %inc73 = add nsw i32 %56, 1, !dbg !7059
  store i32 %inc73, i32* %i, align 4, !dbg !7059
  %57 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !7060
  %incdec.ptr74 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %57, i32 1, !dbg !7060
  store %struct.MEdge* %incdec.ptr74, %struct.MEdge** %medge, align 8, !dbg !7060
  br label %for.cond34, !dbg !7061, !llvm.loop !7062

for.end75:                                        ; preds = %for.cond34
  %58 = load i32, i32* %prevdraw, align 4, !dbg !7064
  %cmp76 = icmp sgt i32 %58, 0, !dbg !7066
  br i1 %cmp76, label %land.lhs.true78, label %if.end88, !dbg !7067

land.lhs.true78:                                  ; preds = %for.end75
  %59 = load i32, i32* %i, align 4, !dbg !7068
  %60 = load i32, i32* %prevstart, align 4, !dbg !7069
  %sub79 = sub nsw i32 %59, %60, !dbg !7070
  %cmp80 = icmp sgt i32 %sub79, 0, !dbg !7071
  br i1 %cmp80, label %if.then82, label %if.end88, !dbg !7072

if.then82:                                        ; preds = %land.lhs.true78
  %61 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7073
  %drawObject83 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %61, i32 0, i32 13, !dbg !7075
  %62 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject83, align 8, !dbg !7075
  %edges84 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %62, i32 0, i32 4, !dbg !7076
  %63 = load %struct.GPUBuffer*, %struct.GPUBuffer** %edges84, align 8, !dbg !7076
  %64 = load i32, i32* %prevstart, align 4, !dbg !7077
  %mul85 = mul nsw i32 %64, 2, !dbg !7078
  %65 = load i32, i32* %i, align 4, !dbg !7079
  %66 = load i32, i32* %prevstart, align 4, !dbg !7080
  %sub86 = sub nsw i32 %65, %66, !dbg !7081
  %mul87 = mul nsw i32 %sub86, 2, !dbg !7082
  call void @GPU_buffer_draw_elements(%struct.GPUBuffer* %63, i32 1, i32 %mul85, i32 %mul87), !dbg !7083
  br label %if.end88, !dbg !7084

if.end88:                                         ; preds = %if.then82, %land.lhs.true78, %for.end75
  br label %if.end89, !dbg !7085

if.end89:                                         ; preds = %if.end88, %if.else
  call void @GPU_buffer_unbind(), !dbg !7086
  br label %if.end90

if.end90:                                         ; preds = %if.then, %if.end89, %for.end
  ret void, !dbg !7087
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_drawLooseEdges(%struct.DerivedMesh* %dm) #0 !dbg !7088 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %medge = alloca %struct.MEdge*, align 8
  %i = alloca i32, align 4
  %prevstart = alloca i32, align 4
  %prevdraw = alloca i32, align 4
  %draw = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !7089, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !7091, metadata !DIExpression()), !dbg !7092
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7093
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !7094
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !7092
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !7095, metadata !DIExpression()), !dbg !7096
  %2 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !7097
  %mvert1 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %2, i32 0, i32 1, !dbg !7098
  %3 = load %struct.MVert*, %struct.MVert** %mvert1, align 8, !dbg !7098
  store %struct.MVert* %3, %struct.MVert** %mvert, align 8, !dbg !7096
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge, metadata !7099, metadata !DIExpression()), !dbg !7100
  %4 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !7101
  %medge2 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %4, i32 0, i32 2, !dbg !7102
  %5 = load %struct.MEdge*, %struct.MEdge** %medge2, align 8, !dbg !7102
  store %struct.MEdge* %5, %struct.MEdge** %medge, align 8, !dbg !7100
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7103, metadata !DIExpression()), !dbg !7104
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7105
  %call = call zeroext i8 @GPU_buffer_legacy(%struct.DerivedMesh* %6), !dbg !7107
  %tobool = icmp ne i8 %call, 0, !dbg !7107
  br i1 %tobool, label %if.then, label %if.else, !dbg !7108

if.then:                                          ; preds = %entry
  call void @glBegin(i32 1), !dbg !7109
  store i32 0, i32* %i, align 4, !dbg !7111
  br label %for.cond, !dbg !7113

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load i32, i32* %i, align 4, !dbg !7114
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7116
  %numEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 6, !dbg !7117
  %9 = load i32, i32* %numEdgeData, align 4, !dbg !7117
  %cmp = icmp slt i32 %7, %9, !dbg !7118
  br i1 %cmp, label %for.body, label %for.end, !dbg !7119

for.body:                                         ; preds = %for.cond
  %10 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !7120
  %flag = getelementptr inbounds %struct.MEdge, %struct.MEdge* %10, i32 0, i32 4, !dbg !7123
  %11 = load i16, i16* %flag, align 2, !dbg !7123
  %conv = sext i16 %11 to i32, !dbg !7120
  %and = and i32 %conv, 128, !dbg !7124
  %tobool3 = icmp ne i32 %and, 0, !dbg !7124
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !7125

if.then4:                                         ; preds = %for.body
  %12 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7126
  %13 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !7128
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %13, i32 0, i32 0, !dbg !7129
  %14 = load i32, i32* %v1, align 4, !dbg !7129
  %idxprom = zext i32 %14 to i64, !dbg !7126
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %12, i64 %idxprom, !dbg !7126
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx, i32 0, i32 0, !dbg !7130
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7126
  call void @glVertex3fv(float* %arraydecay), !dbg !7131
  %15 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7132
  %16 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !7133
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %16, i32 0, i32 1, !dbg !7134
  %17 = load i32, i32* %v2, align 4, !dbg !7134
  %idxprom5 = zext i32 %17 to i64, !dbg !7132
  %arrayidx6 = getelementptr inbounds %struct.MVert, %struct.MVert* %15, i64 %idxprom5, !dbg !7132
  %co7 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx6, i32 0, i32 0, !dbg !7135
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %co7, i64 0, i64 0, !dbg !7132
  call void @glVertex3fv(float* %arraydecay8), !dbg !7136
  br label %if.end, !dbg !7137

if.end:                                           ; preds = %if.then4, %for.body
  br label %for.inc, !dbg !7138

for.inc:                                          ; preds = %if.end
  %18 = load i32, i32* %i, align 4, !dbg !7139
  %inc = add nsw i32 %18, 1, !dbg !7139
  store i32 %inc, i32* %i, align 4, !dbg !7139
  %19 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !7140
  %incdec.ptr = getelementptr inbounds %struct.MEdge, %struct.MEdge* %19, i32 1, !dbg !7140
  store %struct.MEdge* %incdec.ptr, %struct.MEdge** %medge, align 8, !dbg !7140
  br label %for.cond, !dbg !7141, !llvm.loop !7142

for.end:                                          ; preds = %for.cond
  call void @glEnd(), !dbg !7144
  br label %if.end54, !dbg !7145

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %prevstart, metadata !7146, metadata !DIExpression()), !dbg !7148
  store i32 0, i32* %prevstart, align 4, !dbg !7148
  call void @llvm.dbg.declare(metadata i32* %prevdraw, metadata !7149, metadata !DIExpression()), !dbg !7150
  store i32 1, i32* %prevdraw, align 4, !dbg !7150
  call void @llvm.dbg.declare(metadata i32* %draw, metadata !7151, metadata !DIExpression()), !dbg !7152
  store i32 1, i32* %draw, align 4, !dbg !7152
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7153
  call void @GPU_edge_setup(%struct.DerivedMesh* %20), !dbg !7154
  %21 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7155
  %call9 = call zeroext i8 @GPU_buffer_legacy(%struct.DerivedMesh* %21), !dbg !7157
  %tobool10 = icmp ne i8 %call9, 0, !dbg !7157
  br i1 %tobool10, label %if.end53, label %if.then11, !dbg !7158

if.then11:                                        ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !7159
  br label %for.cond12, !dbg !7162

for.cond12:                                       ; preds = %for.inc36, %if.then11
  %22 = load i32, i32* %i, align 4, !dbg !7163
  %23 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7165
  %numEdgeData13 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %23, i32 0, i32 6, !dbg !7166
  %24 = load i32, i32* %numEdgeData13, align 4, !dbg !7166
  %cmp14 = icmp slt i32 %22, %24, !dbg !7167
  br i1 %cmp14, label %for.body16, label %for.end39, !dbg !7168

for.body16:                                       ; preds = %for.cond12
  %25 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !7169
  %flag17 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %25, i32 0, i32 4, !dbg !7172
  %26 = load i16, i16* %flag17, align 2, !dbg !7172
  %conv18 = sext i16 %26 to i32, !dbg !7169
  %and19 = and i32 %conv18, 128, !dbg !7173
  %tobool20 = icmp ne i32 %and19, 0, !dbg !7173
  br i1 %tobool20, label %if.then21, label %if.else22, !dbg !7174

if.then21:                                        ; preds = %for.body16
  store i32 1, i32* %draw, align 4, !dbg !7175
  br label %if.end23, !dbg !7177

if.else22:                                        ; preds = %for.body16
  store i32 0, i32* %draw, align 4, !dbg !7178
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then21
  %27 = load i32, i32* %prevdraw, align 4, !dbg !7180
  %28 = load i32, i32* %draw, align 4, !dbg !7182
  %cmp24 = icmp ne i32 %27, %28, !dbg !7183
  br i1 %cmp24, label %if.then26, label %if.end35, !dbg !7184

if.then26:                                        ; preds = %if.end23
  %29 = load i32, i32* %prevdraw, align 4, !dbg !7185
  %cmp27 = icmp sgt i32 %29, 0, !dbg !7188
  br i1 %cmp27, label %land.lhs.true, label %if.end34, !dbg !7189

land.lhs.true:                                    ; preds = %if.then26
  %30 = load i32, i32* %i, align 4, !dbg !7190
  %31 = load i32, i32* %prevstart, align 4, !dbg !7191
  %sub = sub nsw i32 %30, %31, !dbg !7192
  %cmp29 = icmp sgt i32 %sub, 0, !dbg !7193
  br i1 %cmp29, label %if.then31, label %if.end34, !dbg !7194

if.then31:                                        ; preds = %land.lhs.true
  %32 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7195
  %drawObject = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %32, i32 0, i32 13, !dbg !7197
  %33 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject, align 8, !dbg !7197
  %edges = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %33, i32 0, i32 4, !dbg !7198
  %34 = load %struct.GPUBuffer*, %struct.GPUBuffer** %edges, align 8, !dbg !7198
  %35 = load i32, i32* %prevstart, align 4, !dbg !7199
  %mul = mul nsw i32 %35, 2, !dbg !7200
  %36 = load i32, i32* %i, align 4, !dbg !7201
  %37 = load i32, i32* %prevstart, align 4, !dbg !7202
  %sub32 = sub nsw i32 %36, %37, !dbg !7203
  %mul33 = mul nsw i32 %sub32, 2, !dbg !7204
  call void @GPU_buffer_draw_elements(%struct.GPUBuffer* %34, i32 1, i32 %mul, i32 %mul33), !dbg !7205
  br label %if.end34, !dbg !7206

if.end34:                                         ; preds = %if.then31, %land.lhs.true, %if.then26
  %38 = load i32, i32* %i, align 4, !dbg !7207
  store i32 %38, i32* %prevstart, align 4, !dbg !7208
  br label %if.end35, !dbg !7209

if.end35:                                         ; preds = %if.end34, %if.end23
  %39 = load i32, i32* %draw, align 4, !dbg !7210
  store i32 %39, i32* %prevdraw, align 4, !dbg !7211
  br label %for.inc36, !dbg !7212

for.inc36:                                        ; preds = %if.end35
  %40 = load i32, i32* %i, align 4, !dbg !7213
  %inc37 = add nsw i32 %40, 1, !dbg !7213
  store i32 %inc37, i32* %i, align 4, !dbg !7213
  %41 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !7214
  %incdec.ptr38 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %41, i32 1, !dbg !7214
  store %struct.MEdge* %incdec.ptr38, %struct.MEdge** %medge, align 8, !dbg !7214
  br label %for.cond12, !dbg !7215, !llvm.loop !7216

for.end39:                                        ; preds = %for.cond12
  %42 = load i32, i32* %prevdraw, align 4, !dbg !7218
  %cmp40 = icmp sgt i32 %42, 0, !dbg !7220
  br i1 %cmp40, label %land.lhs.true42, label %if.end52, !dbg !7221

land.lhs.true42:                                  ; preds = %for.end39
  %43 = load i32, i32* %i, align 4, !dbg !7222
  %44 = load i32, i32* %prevstart, align 4, !dbg !7223
  %sub43 = sub nsw i32 %43, %44, !dbg !7224
  %cmp44 = icmp sgt i32 %sub43, 0, !dbg !7225
  br i1 %cmp44, label %if.then46, label %if.end52, !dbg !7226

if.then46:                                        ; preds = %land.lhs.true42
  %45 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7227
  %drawObject47 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %45, i32 0, i32 13, !dbg !7229
  %46 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject47, align 8, !dbg !7229
  %edges48 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %46, i32 0, i32 4, !dbg !7230
  %47 = load %struct.GPUBuffer*, %struct.GPUBuffer** %edges48, align 8, !dbg !7230
  %48 = load i32, i32* %prevstart, align 4, !dbg !7231
  %mul49 = mul nsw i32 %48, 2, !dbg !7232
  %49 = load i32, i32* %i, align 4, !dbg !7233
  %50 = load i32, i32* %prevstart, align 4, !dbg !7234
  %sub50 = sub nsw i32 %49, %50, !dbg !7235
  %mul51 = mul nsw i32 %sub50, 2, !dbg !7236
  call void @GPU_buffer_draw_elements(%struct.GPUBuffer* %47, i32 1, i32 %mul49, i32 %mul51), !dbg !7237
  br label %if.end52, !dbg !7238

if.end52:                                         ; preds = %if.then46, %land.lhs.true42, %for.end39
  br label %if.end53, !dbg !7239

if.end53:                                         ; preds = %if.end52, %if.else
  call void @GPU_buffer_unbind(), !dbg !7240
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %for.end
  ret void, !dbg !7241
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_drawMappedEdges(%struct.DerivedMesh* %dm, i32 (i8*, i32)* %setDrawOptions, i8* %userData) #0 !dbg !7242 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %setDrawOptions.addr = alloca i32 (i8*, i32)*, align 8
  %userData.addr = alloca i8*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %vert = alloca %struct.MVert*, align 8
  %edge = alloca %struct.MEdge*, align 8
  %i = alloca i32, align 4
  %orig = alloca i32, align 4
  %index = alloca i32*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !7243, metadata !DIExpression()), !dbg !7244
  store i32 (i8*, i32)* %setDrawOptions, i32 (i8*, i32)** %setDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32)** %setDrawOptions.addr, metadata !7245, metadata !DIExpression()), !dbg !7246
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !7247, metadata !DIExpression()), !dbg !7248
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !7249, metadata !DIExpression()), !dbg !7250
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7251
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !7252
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !7250
  call void @llvm.dbg.declare(metadata %struct.MVert** %vert, metadata !7253, metadata !DIExpression()), !dbg !7254
  %2 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !7255
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %2, i32 0, i32 1, !dbg !7256
  %3 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7256
  store %struct.MVert* %3, %struct.MVert** %vert, align 8, !dbg !7254
  call void @llvm.dbg.declare(metadata %struct.MEdge** %edge, metadata !7257, metadata !DIExpression()), !dbg !7258
  %4 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !7259
  %medge = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %4, i32 0, i32 2, !dbg !7260
  %5 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !7260
  store %struct.MEdge* %5, %struct.MEdge** %edge, align 8, !dbg !7258
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7261, metadata !DIExpression()), !dbg !7262
  call void @llvm.dbg.declare(metadata i32* %orig, metadata !7263, metadata !DIExpression()), !dbg !7264
  call void @llvm.dbg.declare(metadata i32** %index, metadata !7265, metadata !DIExpression()), !dbg !7266
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7267
  %call = call i8* @DM_get_edge_data_layer(%struct.DerivedMesh* %6, i32 7), !dbg !7268
  %7 = bitcast i8* %call to i32*, !dbg !7268
  store i32* %7, i32** %index, align 8, !dbg !7266
  call void @glBegin(i32 1), !dbg !7269
  store i32 0, i32* %i, align 4, !dbg !7270
  br label %for.cond, !dbg !7272

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !7273
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7275
  %numEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 6, !dbg !7276
  %10 = load i32, i32* %numEdgeData, align 4, !dbg !7276
  %cmp = icmp slt i32 %8, %10, !dbg !7277
  br i1 %cmp, label %for.body, label %for.end, !dbg !7278

for.body:                                         ; preds = %for.cond
  %11 = load i32*, i32** %index, align 8, !dbg !7279
  %tobool = icmp ne i32* %11, null, !dbg !7279
  br i1 %tobool, label %if.then, label %if.else, !dbg !7282

if.then:                                          ; preds = %for.body
  %12 = load i32*, i32** %index, align 8, !dbg !7283
  %incdec.ptr = getelementptr inbounds i32, i32* %12, i32 1, !dbg !7283
  store i32* %incdec.ptr, i32** %index, align 8, !dbg !7283
  %13 = load i32, i32* %12, align 4, !dbg !7285
  store i32 %13, i32* %orig, align 4, !dbg !7286
  %14 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !7287
  %tobool1 = icmp ne i32 (i8*, i32)* %14, null, !dbg !7287
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !7289

land.lhs.true:                                    ; preds = %if.then
  %15 = load i32, i32* %orig, align 4, !dbg !7290
  %cmp2 = icmp eq i32 %15, -1, !dbg !7291
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !7292

if.then3:                                         ; preds = %land.lhs.true
  br label %for.inc, !dbg !7293

if.end:                                           ; preds = %land.lhs.true, %if.then
  br label %if.end4, !dbg !7294

if.else:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !7295
  store i32 %16, i32* %orig, align 4, !dbg !7296
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.end
  %17 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !7297
  %tobool5 = icmp ne i32 (i8*, i32)* %17, null, !dbg !7297
  br i1 %tobool5, label %lor.lhs.false, label %if.then8, !dbg !7299

lor.lhs.false:                                    ; preds = %if.end4
  %18 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !7300
  %19 = load i8*, i8** %userData.addr, align 8, !dbg !7301
  %20 = load i32, i32* %orig, align 4, !dbg !7302
  %call6 = call i32 %18(i8* %19, i32 %20), !dbg !7300
  %cmp7 = icmp ne i32 %call6, 0, !dbg !7303
  br i1 %cmp7, label %if.then8, label %if.end13, !dbg !7304

if.then8:                                         ; preds = %lor.lhs.false, %if.end4
  %21 = load %struct.MVert*, %struct.MVert** %vert, align 8, !dbg !7305
  %22 = load %struct.MEdge*, %struct.MEdge** %edge, align 8, !dbg !7307
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %22, i32 0, i32 0, !dbg !7308
  %23 = load i32, i32* %v1, align 4, !dbg !7308
  %idxprom = zext i32 %23 to i64, !dbg !7305
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %21, i64 %idxprom, !dbg !7305
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx, i32 0, i32 0, !dbg !7309
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7305
  call void @glVertex3fv(float* %arraydecay), !dbg !7310
  %24 = load %struct.MVert*, %struct.MVert** %vert, align 8, !dbg !7311
  %25 = load %struct.MEdge*, %struct.MEdge** %edge, align 8, !dbg !7312
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %25, i32 0, i32 1, !dbg !7313
  %26 = load i32, i32* %v2, align 4, !dbg !7313
  %idxprom9 = zext i32 %26 to i64, !dbg !7311
  %arrayidx10 = getelementptr inbounds %struct.MVert, %struct.MVert* %24, i64 %idxprom9, !dbg !7311
  %co11 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx10, i32 0, i32 0, !dbg !7314
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %co11, i64 0, i64 0, !dbg !7311
  call void @glVertex3fv(float* %arraydecay12), !dbg !7315
  br label %if.end13, !dbg !7316

if.end13:                                         ; preds = %if.then8, %lor.lhs.false
  br label %for.inc, !dbg !7317

for.inc:                                          ; preds = %if.end13, %if.then3
  %27 = load i32, i32* %i, align 4, !dbg !7318
  %inc = add nsw i32 %27, 1, !dbg !7318
  store i32 %inc, i32* %i, align 4, !dbg !7318
  %28 = load %struct.MEdge*, %struct.MEdge** %edge, align 8, !dbg !7319
  %incdec.ptr14 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %28, i32 1, !dbg !7319
  store %struct.MEdge* %incdec.ptr14, %struct.MEdge** %edge, align 8, !dbg !7319
  br label %for.cond, !dbg !7320, !llvm.loop !7321

for.end:                                          ; preds = %for.cond
  call void @glEnd(), !dbg !7323
  ret void, !dbg !7324
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_drawFacesSolid(%struct.DerivedMesh* %dm, [4 x float]* %partial_redraw_planes, i8 zeroext %UNUSED_fast, i32 (i32, i8*)* %setMaterial) #0 !dbg !7325 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %partial_redraw_planes.addr = alloca [4 x float]*, align 8
  %UNUSED_fast.addr = alloca i8, align 1
  %setMaterial.addr = alloca i32 (i32, i8*)*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %mface = alloca %struct.MFace*, align 8
  %nors = alloca float*, align 8
  %lnors = alloca [4 x [3 x i16]]*, align 8
  %a = alloca i32, align 4
  %glmode = alloca i32, align 4
  %shademodel = alloca i32, align 4
  %matnr = alloca i32, align 4
  %drawCurrentMat = alloca i32, align 4
  %face_nors = alloca [3 x float]*, align 8
  %new_glmode = alloca i32, align 4
  %new_matnr = alloca i32, align 4
  %new_shademodel = alloca i32, align 4
  %nor = alloca [3 x float], align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !7326, metadata !DIExpression()), !dbg !7327
  store [4 x float]* %partial_redraw_planes, [4 x float]** %partial_redraw_planes.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %partial_redraw_planes.addr, metadata !7328, metadata !DIExpression()), !dbg !7329
  store i8 %UNUSED_fast, i8* %UNUSED_fast.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %UNUSED_fast.addr, metadata !7330, metadata !DIExpression()), !dbg !7331
  store i32 (i32, i8*)* %setMaterial, i32 (i32, i8*)** %setMaterial.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %setMaterial.addr, metadata !7332, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !7334, metadata !DIExpression()), !dbg !7335
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7336
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !7337
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !7335
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !7338, metadata !DIExpression()), !dbg !7339
  %2 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !7340
  %mvert1 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %2, i32 0, i32 1, !dbg !7341
  %3 = load %struct.MVert*, %struct.MVert** %mvert1, align 8, !dbg !7341
  store %struct.MVert* %3, %struct.MVert** %mvert, align 8, !dbg !7339
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !7342, metadata !DIExpression()), !dbg !7343
  %4 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !7344
  %mface2 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %4, i32 0, i32 3, !dbg !7345
  %5 = load %struct.MFace*, %struct.MFace** %mface2, align 8, !dbg !7345
  store %struct.MFace* %5, %struct.MFace** %mface, align 8, !dbg !7343
  call void @llvm.dbg.declare(metadata float** %nors, metadata !7346, metadata !DIExpression()), !dbg !7347
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7348
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 52, !dbg !7349
  %7 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !7349
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7350
  %call = call i8* %7(%struct.DerivedMesh* %8, i32 8), !dbg !7348
  %9 = bitcast i8* %call to float*, !dbg !7348
  store float* %9, float** %nors, align 8, !dbg !7347
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %lnors, metadata !7351, metadata !DIExpression()), !dbg !7355
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7356
  %getTessFaceDataArray3 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 52, !dbg !7357
  %11 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray3, align 8, !dbg !7357
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7358
  %call4 = call i8* %11(%struct.DerivedMesh* %12, i32 40), !dbg !7356
  %13 = bitcast i8* %call4 to [4 x [3 x i16]]*, !dbg !7356
  store [4 x [3 x i16]]* %13, [4 x [3 x i16]]** %lnors, align 8, !dbg !7355
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7359, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.declare(metadata i32* %glmode, metadata !7361, metadata !DIExpression()), !dbg !7362
  store i32 -1, i32* %glmode, align 4, !dbg !7362
  call void @llvm.dbg.declare(metadata i32* %shademodel, metadata !7363, metadata !DIExpression()), !dbg !7364
  store i32 -1, i32* %shademodel, align 4, !dbg !7364
  call void @llvm.dbg.declare(metadata i32* %matnr, metadata !7365, metadata !DIExpression()), !dbg !7366
  store i32 -1, i32* %matnr, align 4, !dbg !7366
  call void @llvm.dbg.declare(metadata i32* %drawCurrentMat, metadata !7367, metadata !DIExpression()), !dbg !7368
  store i32 1, i32* %drawCurrentMat, align 4, !dbg !7368
  %14 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !7369
  %pbvh = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %14, i32 0, i32 6, !dbg !7371
  %15 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !7371
  %tobool = icmp ne %struct.PBVH* %15, null, !dbg !7369
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !7372

land.lhs.true:                                    ; preds = %entry
  %16 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !7373
  %pbvh_draw = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %16, i32 0, i32 7, !dbg !7374
  %17 = load i8, i8* %pbvh_draw, align 8, !dbg !7374
  %conv = zext i8 %17 to i32, !dbg !7373
  %tobool5 = icmp ne i32 %conv, 0, !dbg !7373
  br i1 %tobool5, label %if.then, label %if.end10, !dbg !7375

if.then:                                          ; preds = %land.lhs.true
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7376
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %18, i32 0, i32 7, !dbg !7379
  %19 = load i32, i32* %numTessFaceData, align 8, !dbg !7379
  %tobool6 = icmp ne i32 %19, 0, !dbg !7376
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !7380

if.then7:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata [3 x float]** %face_nors, metadata !7381, metadata !DIExpression()), !dbg !7383
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7384
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %20, i32 0, i32 2, !dbg !7385
  %call8 = call i8* @CustomData_get_layer(%struct.CustomData* %faceData, i32 8), !dbg !7386
  %21 = bitcast i8* %call8 to [3 x float]*, !dbg !7386
  store [3 x float]* %21, [3 x float]** %face_nors, align 8, !dbg !7383
  %22 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !7387
  %pbvh9 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %22, i32 0, i32 6, !dbg !7388
  %23 = load %struct.PBVH*, %struct.PBVH** %pbvh9, align 8, !dbg !7388
  %24 = load [4 x float]*, [4 x float]** %partial_redraw_planes.addr, align 8, !dbg !7389
  %25 = load [3 x float]*, [3 x float]** %face_nors, align 8, !dbg !7390
  %26 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !7391
  call void @BKE_pbvh_draw(%struct.PBVH* %23, [4 x float]* %24, [3 x float]* %25, i32 (i32, i8*)* %26, i8 zeroext 0), !dbg !7392
  call void @glShadeModel(i32 7424), !dbg !7393
  br label %if.end, !dbg !7394

if.end:                                           ; preds = %if.then7, %if.then
  br label %return, !dbg !7395

if.end10:                                         ; preds = %land.lhs.true, %entry
  %27 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7396
  %call11 = call zeroext i8 @GPU_buffer_legacy(%struct.DerivedMesh* %27), !dbg !7398
  %tobool12 = icmp ne i8 %call11, 0, !dbg !7398
  br i1 %tobool12, label %if.then13, label %if.else200, !dbg !7399

if.then13:                                        ; preds = %if.end10
  store i32 7, i32* %glmode, align 4, !dbg !7400
  call void @glBegin(i32 7), !dbg !7402
  store i32 0, i32* %a, align 4, !dbg !7403
  br label %for.cond, !dbg !7405

for.cond:                                         ; preds = %for.inc, %if.then13
  %28 = load i32, i32* %a, align 4, !dbg !7406
  %29 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7408
  %numTessFaceData14 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %29, i32 0, i32 7, !dbg !7409
  %30 = load i32, i32* %numTessFaceData14, align 8, !dbg !7409
  %cmp = icmp slt i32 %28, %30, !dbg !7410
  br i1 %cmp, label %for.body, label %for.end, !dbg !7411

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %new_glmode, metadata !7412, metadata !DIExpression()), !dbg !7414
  call void @llvm.dbg.declare(metadata i32* %new_matnr, metadata !7415, metadata !DIExpression()), !dbg !7416
  call void @llvm.dbg.declare(metadata i32* %new_shademodel, metadata !7417, metadata !DIExpression()), !dbg !7418
  %31 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7419
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %31, i32 0, i32 3, !dbg !7420
  %32 = load i32, i32* %v4, align 4, !dbg !7420
  %tobool16 = icmp ne i32 %32, 0, !dbg !7419
  %33 = zext i1 %tobool16 to i64, !dbg !7419
  %cond = select i1 %tobool16, i32 7, i32 4, !dbg !7419
  store i32 %cond, i32* %new_glmode, align 4, !dbg !7421
  %34 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7422
  %mat_nr = getelementptr inbounds %struct.MFace, %struct.MFace* %34, i32 0, i32 4, !dbg !7423
  %35 = load i16, i16* %mat_nr, align 4, !dbg !7423
  %conv17 = sext i16 %35 to i32, !dbg !7422
  %add = add nsw i32 %conv17, 1, !dbg !7424
  store i32 %add, i32* %new_matnr, align 4, !dbg !7425
  %36 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !7426
  %tobool18 = icmp ne [4 x [3 x i16]]* %36, null, !dbg !7426
  br i1 %tobool18, label %lor.end, label %lor.rhs, !dbg !7427

lor.rhs:                                          ; preds = %for.body
  %37 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7428
  %flag = getelementptr inbounds %struct.MFace, %struct.MFace* %37, i32 0, i32 6, !dbg !7429
  %38 = load i8, i8* %flag, align 1, !dbg !7429
  %conv19 = zext i8 %38 to i32, !dbg !7428
  %and = and i32 %conv19, 1, !dbg !7430
  %tobool20 = icmp ne i32 %and, 0, !dbg !7427
  br label %lor.end, !dbg !7427

lor.end:                                          ; preds = %lor.rhs, %for.body
  %39 = phi i1 [ true, %for.body ], [ %tobool20, %lor.rhs ]
  %40 = zext i1 %39 to i64, !dbg !7431
  %cond21 = select i1 %39, i32 7425, i32 7424, !dbg !7431
  store i32 %cond21, i32* %new_shademodel, align 4, !dbg !7432
  %41 = load i32, i32* %new_glmode, align 4, !dbg !7433
  %42 = load i32, i32* %glmode, align 4, !dbg !7435
  %cmp22 = icmp ne i32 %41, %42, !dbg !7436
  br i1 %cmp22, label %if.then31, label %lor.lhs.false, !dbg !7437

lor.lhs.false:                                    ; preds = %lor.end
  %43 = load i32, i32* %new_shademodel, align 4, !dbg !7438
  %44 = load i32, i32* %shademodel, align 4, !dbg !7439
  %cmp24 = icmp ne i32 %43, %44, !dbg !7440
  br i1 %cmp24, label %if.then31, label %lor.lhs.false26, !dbg !7441

lor.lhs.false26:                                  ; preds = %lor.lhs.false
  %45 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !7442
  %tobool27 = icmp ne i32 (i32, i8*)* %45, null, !dbg !7442
  br i1 %tobool27, label %land.lhs.true28, label %if.end36, !dbg !7443

land.lhs.true28:                                  ; preds = %lor.lhs.false26
  %46 = load i32, i32* %new_matnr, align 4, !dbg !7444
  %47 = load i32, i32* %matnr, align 4, !dbg !7445
  %cmp29 = icmp ne i32 %46, %47, !dbg !7446
  br i1 %cmp29, label %if.then31, label %if.end36, !dbg !7447

if.then31:                                        ; preds = %land.lhs.true28, %lor.lhs.false, %lor.end
  call void @glEnd(), !dbg !7448
  %48 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !7450
  %tobool32 = icmp ne i32 (i32, i8*)* %48, null, !dbg !7450
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !7452

if.then33:                                        ; preds = %if.then31
  %49 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !7453
  %50 = load i32, i32* %new_matnr, align 4, !dbg !7455
  store i32 %50, i32* %matnr, align 4, !dbg !7456
  %call34 = call i32 %49(i32 %50, i8* null), !dbg !7453
  store i32 %call34, i32* %drawCurrentMat, align 4, !dbg !7457
  br label %if.end35, !dbg !7458

if.end35:                                         ; preds = %if.then33, %if.then31
  %51 = load i32, i32* %new_shademodel, align 4, !dbg !7459
  store i32 %51, i32* %shademodel, align 4, !dbg !7460
  call void @glShadeModel(i32 %51), !dbg !7461
  %52 = load i32, i32* %new_glmode, align 4, !dbg !7462
  store i32 %52, i32* %glmode, align 4, !dbg !7463
  call void @glBegin(i32 %52), !dbg !7464
  br label %if.end36, !dbg !7465

if.end36:                                         ; preds = %if.end35, %land.lhs.true28, %lor.lhs.false26
  %53 = load i32, i32* %drawCurrentMat, align 4, !dbg !7466
  %tobool37 = icmp ne i32 %53, 0, !dbg !7466
  br i1 %tobool37, label %if.then38, label %if.end192, !dbg !7468

if.then38:                                        ; preds = %if.end36
  %54 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !7469
  %tobool39 = icmp ne [4 x [3 x i16]]* %54, null, !dbg !7469
  br i1 %tobool39, label %if.then40, label %if.else, !dbg !7472

if.then40:                                        ; preds = %if.then38
  %55 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !7473
  %arrayidx = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %55, i64 0, !dbg !7473
  %arrayidx41 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx, i64 0, i64 0, !dbg !7473
  %arraydecay = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx41, i64 0, i64 0, !dbg !7473
  call void @glNormal3sv(i16* %arraydecay), !dbg !7475
  %56 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7476
  %57 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7477
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %57, i32 0, i32 0, !dbg !7478
  %58 = load i32, i32* %v1, align 4, !dbg !7478
  %idxprom = zext i32 %58 to i64, !dbg !7476
  %arrayidx42 = getelementptr inbounds %struct.MVert, %struct.MVert* %56, i64 %idxprom, !dbg !7476
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx42, i32 0, i32 0, !dbg !7479
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7476
  call void @glVertex3fv(float* %arraydecay43), !dbg !7480
  %59 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !7481
  %arrayidx44 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %59, i64 0, !dbg !7481
  %arrayidx45 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx44, i64 0, i64 1, !dbg !7481
  %arraydecay46 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx45, i64 0, i64 0, !dbg !7481
  call void @glNormal3sv(i16* %arraydecay46), !dbg !7482
  %60 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7483
  %61 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7484
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %61, i32 0, i32 1, !dbg !7485
  %62 = load i32, i32* %v2, align 4, !dbg !7485
  %idxprom47 = zext i32 %62 to i64, !dbg !7483
  %arrayidx48 = getelementptr inbounds %struct.MVert, %struct.MVert* %60, i64 %idxprom47, !dbg !7483
  %co49 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx48, i32 0, i32 0, !dbg !7486
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %co49, i64 0, i64 0, !dbg !7483
  call void @glVertex3fv(float* %arraydecay50), !dbg !7487
  %63 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !7488
  %arrayidx51 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %63, i64 0, !dbg !7488
  %arrayidx52 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx51, i64 0, i64 2, !dbg !7488
  %arraydecay53 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx52, i64 0, i64 0, !dbg !7488
  call void @glNormal3sv(i16* %arraydecay53), !dbg !7489
  %64 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7490
  %65 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7491
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %65, i32 0, i32 2, !dbg !7492
  %66 = load i32, i32* %v3, align 4, !dbg !7492
  %idxprom54 = zext i32 %66 to i64, !dbg !7490
  %arrayidx55 = getelementptr inbounds %struct.MVert, %struct.MVert* %64, i64 %idxprom54, !dbg !7490
  %co56 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx55, i32 0, i32 0, !dbg !7493
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %co56, i64 0, i64 0, !dbg !7490
  call void @glVertex3fv(float* %arraydecay57), !dbg !7494
  %67 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7495
  %v458 = getelementptr inbounds %struct.MFace, %struct.MFace* %67, i32 0, i32 3, !dbg !7497
  %68 = load i32, i32* %v458, align 4, !dbg !7497
  %tobool59 = icmp ne i32 %68, 0, !dbg !7495
  br i1 %tobool59, label %if.then60, label %if.end69, !dbg !7498

if.then60:                                        ; preds = %if.then40
  %69 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !7499
  %arrayidx61 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %69, i64 0, !dbg !7499
  %arrayidx62 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx61, i64 0, i64 3, !dbg !7499
  %arraydecay63 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx62, i64 0, i64 0, !dbg !7499
  call void @glNormal3sv(i16* %arraydecay63), !dbg !7501
  %70 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7502
  %71 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7503
  %v464 = getelementptr inbounds %struct.MFace, %struct.MFace* %71, i32 0, i32 3, !dbg !7504
  %72 = load i32, i32* %v464, align 4, !dbg !7504
  %idxprom65 = zext i32 %72 to i64, !dbg !7502
  %arrayidx66 = getelementptr inbounds %struct.MVert, %struct.MVert* %70, i64 %idxprom65, !dbg !7502
  %co67 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx66, i32 0, i32 0, !dbg !7505
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %co67, i64 0, i64 0, !dbg !7502
  call void @glVertex3fv(float* %arraydecay68), !dbg !7506
  br label %if.end69, !dbg !7507

if.end69:                                         ; preds = %if.then60, %if.then40
  br label %if.end191, !dbg !7508

if.else:                                          ; preds = %if.then38
  %73 = load i32, i32* %shademodel, align 4, !dbg !7509
  %cmp70 = icmp eq i32 %73, 7424, !dbg !7511
  br i1 %cmp70, label %if.then72, label %if.else146, !dbg !7512

if.then72:                                        ; preds = %if.else
  %74 = load float*, float** %nors, align 8, !dbg !7513
  %tobool73 = icmp ne float* %74, null, !dbg !7513
  br i1 %tobool73, label %if.then74, label %if.else75, !dbg !7516

if.then74:                                        ; preds = %if.then72
  %75 = load float*, float** %nors, align 8, !dbg !7517
  call void @glNormal3fv(float* %75), !dbg !7519
  br label %if.end121, !dbg !7520

if.else75:                                        ; preds = %if.then72
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !7521, metadata !DIExpression()), !dbg !7523
  %76 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7524
  %v476 = getelementptr inbounds %struct.MFace, %struct.MFace* %76, i32 0, i32 3, !dbg !7526
  %77 = load i32, i32* %v476, align 4, !dbg !7526
  %tobool77 = icmp ne i32 %77, 0, !dbg !7524
  br i1 %tobool77, label %if.then78, label %if.else101, !dbg !7527

if.then78:                                        ; preds = %if.else75
  %arraydecay79 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !7528
  %78 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7530
  %79 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7531
  %v180 = getelementptr inbounds %struct.MFace, %struct.MFace* %79, i32 0, i32 0, !dbg !7532
  %80 = load i32, i32* %v180, align 4, !dbg !7532
  %idxprom81 = zext i32 %80 to i64, !dbg !7530
  %arrayidx82 = getelementptr inbounds %struct.MVert, %struct.MVert* %78, i64 %idxprom81, !dbg !7530
  %co83 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx82, i32 0, i32 0, !dbg !7533
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %co83, i64 0, i64 0, !dbg !7530
  %81 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7534
  %82 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7535
  %v285 = getelementptr inbounds %struct.MFace, %struct.MFace* %82, i32 0, i32 1, !dbg !7536
  %83 = load i32, i32* %v285, align 4, !dbg !7536
  %idxprom86 = zext i32 %83 to i64, !dbg !7534
  %arrayidx87 = getelementptr inbounds %struct.MVert, %struct.MVert* %81, i64 %idxprom86, !dbg !7534
  %co88 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx87, i32 0, i32 0, !dbg !7537
  %arraydecay89 = getelementptr inbounds [3 x float], [3 x float]* %co88, i64 0, i64 0, !dbg !7534
  %84 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7538
  %85 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7539
  %v390 = getelementptr inbounds %struct.MFace, %struct.MFace* %85, i32 0, i32 2, !dbg !7540
  %86 = load i32, i32* %v390, align 4, !dbg !7540
  %idxprom91 = zext i32 %86 to i64, !dbg !7538
  %arrayidx92 = getelementptr inbounds %struct.MVert, %struct.MVert* %84, i64 %idxprom91, !dbg !7538
  %co93 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx92, i32 0, i32 0, !dbg !7541
  %arraydecay94 = getelementptr inbounds [3 x float], [3 x float]* %co93, i64 0, i64 0, !dbg !7538
  %87 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7542
  %88 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7543
  %v495 = getelementptr inbounds %struct.MFace, %struct.MFace* %88, i32 0, i32 3, !dbg !7544
  %89 = load i32, i32* %v495, align 4, !dbg !7544
  %idxprom96 = zext i32 %89 to i64, !dbg !7542
  %arrayidx97 = getelementptr inbounds %struct.MVert, %struct.MVert* %87, i64 %idxprom96, !dbg !7542
  %co98 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx97, i32 0, i32 0, !dbg !7545
  %arraydecay99 = getelementptr inbounds [3 x float], [3 x float]* %co98, i64 0, i64 0, !dbg !7542
  %call100 = call float @normal_quad_v3(float* %arraydecay79, float* %arraydecay84, float* %arraydecay89, float* %arraydecay94, float* %arraydecay99), !dbg !7546
  br label %if.end119, !dbg !7547

if.else101:                                       ; preds = %if.else75
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !7548
  %90 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7550
  %91 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7551
  %v1103 = getelementptr inbounds %struct.MFace, %struct.MFace* %91, i32 0, i32 0, !dbg !7552
  %92 = load i32, i32* %v1103, align 4, !dbg !7552
  %idxprom104 = zext i32 %92 to i64, !dbg !7550
  %arrayidx105 = getelementptr inbounds %struct.MVert, %struct.MVert* %90, i64 %idxprom104, !dbg !7550
  %co106 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx105, i32 0, i32 0, !dbg !7553
  %arraydecay107 = getelementptr inbounds [3 x float], [3 x float]* %co106, i64 0, i64 0, !dbg !7550
  %93 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7554
  %94 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7555
  %v2108 = getelementptr inbounds %struct.MFace, %struct.MFace* %94, i32 0, i32 1, !dbg !7556
  %95 = load i32, i32* %v2108, align 4, !dbg !7556
  %idxprom109 = zext i32 %95 to i64, !dbg !7554
  %arrayidx110 = getelementptr inbounds %struct.MVert, %struct.MVert* %93, i64 %idxprom109, !dbg !7554
  %co111 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx110, i32 0, i32 0, !dbg !7557
  %arraydecay112 = getelementptr inbounds [3 x float], [3 x float]* %co111, i64 0, i64 0, !dbg !7554
  %96 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7558
  %97 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7559
  %v3113 = getelementptr inbounds %struct.MFace, %struct.MFace* %97, i32 0, i32 2, !dbg !7560
  %98 = load i32, i32* %v3113, align 4, !dbg !7560
  %idxprom114 = zext i32 %98 to i64, !dbg !7558
  %arrayidx115 = getelementptr inbounds %struct.MVert, %struct.MVert* %96, i64 %idxprom114, !dbg !7558
  %co116 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx115, i32 0, i32 0, !dbg !7561
  %arraydecay117 = getelementptr inbounds [3 x float], [3 x float]* %co116, i64 0, i64 0, !dbg !7558
  %call118 = call float @normal_tri_v3(float* %arraydecay102, float* %arraydecay107, float* %arraydecay112, float* %arraydecay117), !dbg !7562
  br label %if.end119

if.end119:                                        ; preds = %if.else101, %if.then78
  %arraydecay120 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !7563
  call void @glNormal3fv(float* %arraydecay120), !dbg !7564
  br label %if.end121

if.end121:                                        ; preds = %if.end119, %if.then74
  %99 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7565
  %100 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7566
  %v1122 = getelementptr inbounds %struct.MFace, %struct.MFace* %100, i32 0, i32 0, !dbg !7567
  %101 = load i32, i32* %v1122, align 4, !dbg !7567
  %idxprom123 = zext i32 %101 to i64, !dbg !7565
  %arrayidx124 = getelementptr inbounds %struct.MVert, %struct.MVert* %99, i64 %idxprom123, !dbg !7565
  %co125 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx124, i32 0, i32 0, !dbg !7568
  %arraydecay126 = getelementptr inbounds [3 x float], [3 x float]* %co125, i64 0, i64 0, !dbg !7565
  call void @glVertex3fv(float* %arraydecay126), !dbg !7569
  %102 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7570
  %103 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7571
  %v2127 = getelementptr inbounds %struct.MFace, %struct.MFace* %103, i32 0, i32 1, !dbg !7572
  %104 = load i32, i32* %v2127, align 4, !dbg !7572
  %idxprom128 = zext i32 %104 to i64, !dbg !7570
  %arrayidx129 = getelementptr inbounds %struct.MVert, %struct.MVert* %102, i64 %idxprom128, !dbg !7570
  %co130 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx129, i32 0, i32 0, !dbg !7573
  %arraydecay131 = getelementptr inbounds [3 x float], [3 x float]* %co130, i64 0, i64 0, !dbg !7570
  call void @glVertex3fv(float* %arraydecay131), !dbg !7574
  %105 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7575
  %106 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7576
  %v3132 = getelementptr inbounds %struct.MFace, %struct.MFace* %106, i32 0, i32 2, !dbg !7577
  %107 = load i32, i32* %v3132, align 4, !dbg !7577
  %idxprom133 = zext i32 %107 to i64, !dbg !7575
  %arrayidx134 = getelementptr inbounds %struct.MVert, %struct.MVert* %105, i64 %idxprom133, !dbg !7575
  %co135 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx134, i32 0, i32 0, !dbg !7578
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %co135, i64 0, i64 0, !dbg !7575
  call void @glVertex3fv(float* %arraydecay136), !dbg !7579
  %108 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7580
  %v4137 = getelementptr inbounds %struct.MFace, %struct.MFace* %108, i32 0, i32 3, !dbg !7582
  %109 = load i32, i32* %v4137, align 4, !dbg !7582
  %tobool138 = icmp ne i32 %109, 0, !dbg !7580
  br i1 %tobool138, label %if.then139, label %if.end145, !dbg !7583

if.then139:                                       ; preds = %if.end121
  %110 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7584
  %111 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7586
  %v4140 = getelementptr inbounds %struct.MFace, %struct.MFace* %111, i32 0, i32 3, !dbg !7587
  %112 = load i32, i32* %v4140, align 4, !dbg !7587
  %idxprom141 = zext i32 %112 to i64, !dbg !7584
  %arrayidx142 = getelementptr inbounds %struct.MVert, %struct.MVert* %110, i64 %idxprom141, !dbg !7584
  %co143 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx142, i32 0, i32 0, !dbg !7588
  %arraydecay144 = getelementptr inbounds [3 x float], [3 x float]* %co143, i64 0, i64 0, !dbg !7584
  call void @glVertex3fv(float* %arraydecay144), !dbg !7589
  br label %if.end145, !dbg !7590

if.end145:                                        ; preds = %if.then139, %if.end121
  br label %if.end190, !dbg !7591

if.else146:                                       ; preds = %if.else
  %113 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7592
  %114 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7594
  %v1147 = getelementptr inbounds %struct.MFace, %struct.MFace* %114, i32 0, i32 0, !dbg !7595
  %115 = load i32, i32* %v1147, align 4, !dbg !7595
  %idxprom148 = zext i32 %115 to i64, !dbg !7592
  %arrayidx149 = getelementptr inbounds %struct.MVert, %struct.MVert* %113, i64 %idxprom148, !dbg !7592
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx149, i32 0, i32 1, !dbg !7596
  %arraydecay150 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !7592
  call void @glNormal3sv(i16* %arraydecay150), !dbg !7597
  %116 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7598
  %117 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7599
  %v1151 = getelementptr inbounds %struct.MFace, %struct.MFace* %117, i32 0, i32 0, !dbg !7600
  %118 = load i32, i32* %v1151, align 4, !dbg !7600
  %idxprom152 = zext i32 %118 to i64, !dbg !7598
  %arrayidx153 = getelementptr inbounds %struct.MVert, %struct.MVert* %116, i64 %idxprom152, !dbg !7598
  %co154 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx153, i32 0, i32 0, !dbg !7601
  %arraydecay155 = getelementptr inbounds [3 x float], [3 x float]* %co154, i64 0, i64 0, !dbg !7598
  call void @glVertex3fv(float* %arraydecay155), !dbg !7602
  %119 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7603
  %120 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7604
  %v2156 = getelementptr inbounds %struct.MFace, %struct.MFace* %120, i32 0, i32 1, !dbg !7605
  %121 = load i32, i32* %v2156, align 4, !dbg !7605
  %idxprom157 = zext i32 %121 to i64, !dbg !7603
  %arrayidx158 = getelementptr inbounds %struct.MVert, %struct.MVert* %119, i64 %idxprom157, !dbg !7603
  %no159 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx158, i32 0, i32 1, !dbg !7606
  %arraydecay160 = getelementptr inbounds [3 x i16], [3 x i16]* %no159, i64 0, i64 0, !dbg !7603
  call void @glNormal3sv(i16* %arraydecay160), !dbg !7607
  %122 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7608
  %123 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7609
  %v2161 = getelementptr inbounds %struct.MFace, %struct.MFace* %123, i32 0, i32 1, !dbg !7610
  %124 = load i32, i32* %v2161, align 4, !dbg !7610
  %idxprom162 = zext i32 %124 to i64, !dbg !7608
  %arrayidx163 = getelementptr inbounds %struct.MVert, %struct.MVert* %122, i64 %idxprom162, !dbg !7608
  %co164 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx163, i32 0, i32 0, !dbg !7611
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %co164, i64 0, i64 0, !dbg !7608
  call void @glVertex3fv(float* %arraydecay165), !dbg !7612
  %125 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7613
  %126 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7614
  %v3166 = getelementptr inbounds %struct.MFace, %struct.MFace* %126, i32 0, i32 2, !dbg !7615
  %127 = load i32, i32* %v3166, align 4, !dbg !7615
  %idxprom167 = zext i32 %127 to i64, !dbg !7613
  %arrayidx168 = getelementptr inbounds %struct.MVert, %struct.MVert* %125, i64 %idxprom167, !dbg !7613
  %no169 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx168, i32 0, i32 1, !dbg !7616
  %arraydecay170 = getelementptr inbounds [3 x i16], [3 x i16]* %no169, i64 0, i64 0, !dbg !7613
  call void @glNormal3sv(i16* %arraydecay170), !dbg !7617
  %128 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7618
  %129 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7619
  %v3171 = getelementptr inbounds %struct.MFace, %struct.MFace* %129, i32 0, i32 2, !dbg !7620
  %130 = load i32, i32* %v3171, align 4, !dbg !7620
  %idxprom172 = zext i32 %130 to i64, !dbg !7618
  %arrayidx173 = getelementptr inbounds %struct.MVert, %struct.MVert* %128, i64 %idxprom172, !dbg !7618
  %co174 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx173, i32 0, i32 0, !dbg !7621
  %arraydecay175 = getelementptr inbounds [3 x float], [3 x float]* %co174, i64 0, i64 0, !dbg !7618
  call void @glVertex3fv(float* %arraydecay175), !dbg !7622
  %131 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7623
  %v4176 = getelementptr inbounds %struct.MFace, %struct.MFace* %131, i32 0, i32 3, !dbg !7625
  %132 = load i32, i32* %v4176, align 4, !dbg !7625
  %tobool177 = icmp ne i32 %132, 0, !dbg !7623
  br i1 %tobool177, label %if.then178, label %if.end189, !dbg !7626

if.then178:                                       ; preds = %if.else146
  %133 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7627
  %134 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7629
  %v4179 = getelementptr inbounds %struct.MFace, %struct.MFace* %134, i32 0, i32 3, !dbg !7630
  %135 = load i32, i32* %v4179, align 4, !dbg !7630
  %idxprom180 = zext i32 %135 to i64, !dbg !7627
  %arrayidx181 = getelementptr inbounds %struct.MVert, %struct.MVert* %133, i64 %idxprom180, !dbg !7627
  %no182 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx181, i32 0, i32 1, !dbg !7631
  %arraydecay183 = getelementptr inbounds [3 x i16], [3 x i16]* %no182, i64 0, i64 0, !dbg !7627
  call void @glNormal3sv(i16* %arraydecay183), !dbg !7632
  %136 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7633
  %137 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7634
  %v4184 = getelementptr inbounds %struct.MFace, %struct.MFace* %137, i32 0, i32 3, !dbg !7635
  %138 = load i32, i32* %v4184, align 4, !dbg !7635
  %idxprom185 = zext i32 %138 to i64, !dbg !7633
  %arrayidx186 = getelementptr inbounds %struct.MVert, %struct.MVert* %136, i64 %idxprom185, !dbg !7633
  %co187 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx186, i32 0, i32 0, !dbg !7636
  %arraydecay188 = getelementptr inbounds [3 x float], [3 x float]* %co187, i64 0, i64 0, !dbg !7633
  call void @glVertex3fv(float* %arraydecay188), !dbg !7637
  br label %if.end189, !dbg !7638

if.end189:                                        ; preds = %if.then178, %if.else146
  br label %if.end190

if.end190:                                        ; preds = %if.end189, %if.end145
  br label %if.end191

if.end191:                                        ; preds = %if.end190, %if.end69
  br label %if.end192, !dbg !7639

if.end192:                                        ; preds = %if.end191, %if.end36
  %139 = load float*, float** %nors, align 8, !dbg !7640
  %tobool193 = icmp ne float* %139, null, !dbg !7640
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !7642

if.then194:                                       ; preds = %if.end192
  %140 = load float*, float** %nors, align 8, !dbg !7643
  %add.ptr = getelementptr inbounds float, float* %140, i64 3, !dbg !7643
  store float* %add.ptr, float** %nors, align 8, !dbg !7643
  br label %if.end195, !dbg !7644

if.end195:                                        ; preds = %if.then194, %if.end192
  %141 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !7645
  %tobool196 = icmp ne [4 x [3 x i16]]* %141, null, !dbg !7645
  br i1 %tobool196, label %if.then197, label %if.end198, !dbg !7647

if.then197:                                       ; preds = %if.end195
  %142 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !7648
  %incdec.ptr = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %142, i32 1, !dbg !7648
  store [4 x [3 x i16]]* %incdec.ptr, [4 x [3 x i16]]** %lnors, align 8, !dbg !7648
  br label %if.end198, !dbg !7649

if.end198:                                        ; preds = %if.then197, %if.end195
  br label %for.inc, !dbg !7650

for.inc:                                          ; preds = %if.end198
  %143 = load i32, i32* %a, align 4, !dbg !7651
  %inc = add nsw i32 %143, 1, !dbg !7651
  store i32 %inc, i32* %a, align 4, !dbg !7651
  %144 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7652
  %incdec.ptr199 = getelementptr inbounds %struct.MFace, %struct.MFace* %144, i32 1, !dbg !7652
  store %struct.MFace* %incdec.ptr199, %struct.MFace** %mface, align 8, !dbg !7652
  br label %for.cond, !dbg !7653, !llvm.loop !7654

for.end:                                          ; preds = %for.cond
  call void @glEnd(), !dbg !7656
  br label %if.end232, !dbg !7657

if.else200:                                       ; preds = %if.end10
  %145 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7658
  call void @GPU_vertex_setup(%struct.DerivedMesh* %145), !dbg !7660
  %146 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7661
  call void @GPU_normal_setup(%struct.DerivedMesh* %146), !dbg !7662
  %147 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7663
  %call201 = call zeroext i8 @GPU_buffer_legacy(%struct.DerivedMesh* %147), !dbg !7665
  %tobool202 = icmp ne i8 %call201, 0, !dbg !7665
  br i1 %tobool202, label %if.end231, label %if.then203, !dbg !7666

if.then203:                                       ; preds = %if.else200
  call void @glShadeModel(i32 7425), !dbg !7667
  store i32 0, i32* %a, align 4, !dbg !7669
  br label %for.cond204, !dbg !7671

for.cond204:                                      ; preds = %for.inc228, %if.then203
  %148 = load i32, i32* %a, align 4, !dbg !7672
  %149 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7674
  %drawObject = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %149, i32 0, i32 13, !dbg !7675
  %150 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject, align 8, !dbg !7675
  %totmaterial = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %150, i32 0, i32 10, !dbg !7676
  %151 = load i32, i32* %totmaterial, align 8, !dbg !7676
  %cmp205 = icmp slt i32 %148, %151, !dbg !7677
  br i1 %cmp205, label %for.body207, label %for.end230, !dbg !7678

for.body207:                                      ; preds = %for.cond204
  %152 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !7679
  %tobool208 = icmp ne i32 (i32, i8*)* %152, null, !dbg !7679
  br i1 %tobool208, label %lor.lhs.false209, label %if.then218, !dbg !7682

lor.lhs.false209:                                 ; preds = %for.body207
  %153 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !7683
  %154 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7684
  %drawObject210 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %154, i32 0, i32 13, !dbg !7685
  %155 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject210, align 8, !dbg !7685
  %materials = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %155, i32 0, i32 9, !dbg !7686
  %156 = load %struct.GPUBufferMaterial*, %struct.GPUBufferMaterial** %materials, align 8, !dbg !7686
  %157 = load i32, i32* %a, align 4, !dbg !7687
  %idxprom211 = sext i32 %157 to i64, !dbg !7684
  %arrayidx212 = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %156, i64 %idxprom211, !dbg !7684
  %mat_nr213 = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %arrayidx212, i32 0, i32 2, !dbg !7688
  %158 = load i16, i16* %mat_nr213, align 4, !dbg !7688
  %conv214 = sext i16 %158 to i32, !dbg !7684
  %add215 = add nsw i32 %conv214, 1, !dbg !7689
  %call216 = call i32 %153(i32 %add215, i8* null), !dbg !7683
  %tobool217 = icmp ne i32 %call216, 0, !dbg !7683
  br i1 %tobool217, label %if.then218, label %if.end227, !dbg !7690

if.then218:                                       ; preds = %lor.lhs.false209, %for.body207
  %159 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7691
  %drawObject219 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %159, i32 0, i32 13, !dbg !7693
  %160 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject219, align 8, !dbg !7693
  %materials220 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %160, i32 0, i32 9, !dbg !7694
  %161 = load %struct.GPUBufferMaterial*, %struct.GPUBufferMaterial** %materials220, align 8, !dbg !7694
  %162 = load i32, i32* %a, align 4, !dbg !7695
  %idxprom221 = sext i32 %162 to i64, !dbg !7691
  %arrayidx222 = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %161, i64 %idxprom221, !dbg !7691
  %start = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %arrayidx222, i32 0, i32 0, !dbg !7696
  %163 = load i32, i32* %start, align 4, !dbg !7696
  %164 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7697
  %drawObject223 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %164, i32 0, i32 13, !dbg !7698
  %165 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject223, align 8, !dbg !7698
  %materials224 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %165, i32 0, i32 9, !dbg !7699
  %166 = load %struct.GPUBufferMaterial*, %struct.GPUBufferMaterial** %materials224, align 8, !dbg !7699
  %167 = load i32, i32* %a, align 4, !dbg !7700
  %idxprom225 = sext i32 %167 to i64, !dbg !7697
  %arrayidx226 = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %166, i64 %idxprom225, !dbg !7697
  %totpoint = getelementptr inbounds %struct.GPUBufferMaterial, %struct.GPUBufferMaterial* %arrayidx226, i32 0, i32 1, !dbg !7701
  %168 = load i32, i32* %totpoint, align 4, !dbg !7701
  call void @glDrawArrays(i32 4, i32 %163, i32 %168), !dbg !7702
  br label %if.end227, !dbg !7703

if.end227:                                        ; preds = %if.then218, %lor.lhs.false209
  br label %for.inc228, !dbg !7704

for.inc228:                                       ; preds = %if.end227
  %169 = load i32, i32* %a, align 4, !dbg !7705
  %inc229 = add nsw i32 %169, 1, !dbg !7705
  store i32 %inc229, i32* %a, align 4, !dbg !7705
  br label %for.cond204, !dbg !7706, !llvm.loop !7707

for.end230:                                       ; preds = %for.cond204
  br label %if.end231, !dbg !7709

if.end231:                                        ; preds = %for.end230, %if.else200
  call void @GPU_buffer_unbind(), !dbg !7710
  br label %if.end232

if.end232:                                        ; preds = %if.end231, %for.end
  call void @glShadeModel(i32 7424), !dbg !7711
  br label %return, !dbg !7712

return:                                           ; preds = %if.end232, %if.end
  ret void, !dbg !7712
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_drawFacesTex(%struct.DerivedMesh* %dm, i32 (%struct.MTFace*, i8, i32)* %setDrawOptions, i32 (i8*, i32, i32)* %compareDrawOptions, i8* %userData, i32 %uvflag) #0 !dbg !7713 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %setDrawOptions.addr = alloca i32 (%struct.MTFace*, i8, i32)*, align 8
  %compareDrawOptions.addr = alloca i32 (i8*, i32, i32)*, align 8
  %userData.addr = alloca i8*, align 8
  %uvflag.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !7714, metadata !DIExpression()), !dbg !7715
  store i32 (%struct.MTFace*, i8, i32)* %setDrawOptions, i32 (%struct.MTFace*, i8, i32)** %setDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.MTFace*, i8, i32)** %setDrawOptions.addr, metadata !7716, metadata !DIExpression()), !dbg !7717
  store i32 (i8*, i32, i32)* %compareDrawOptions, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32, i32)** %compareDrawOptions.addr, metadata !7718, metadata !DIExpression()), !dbg !7719
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !7720, metadata !DIExpression()), !dbg !7721
  store i32 %uvflag, i32* %uvflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uvflag.addr, metadata !7722, metadata !DIExpression()), !dbg !7723
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7724
  %1 = load i32 (%struct.MTFace*, i8, i32)*, i32 (%struct.MTFace*, i8, i32)** %setDrawOptions.addr, align 8, !dbg !7725
  %2 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8, !dbg !7726
  %3 = load i8*, i8** %userData.addr, align 8, !dbg !7727
  %4 = load i32, i32* %uvflag.addr, align 4, !dbg !7728
  call void @cdDM_drawFacesTex_common(%struct.DerivedMesh* %0, i32 (%struct.MTFace*, i8, i32)* %1, i32 (i8*, i32)* null, i32 (i8*, i32, i32)* %2, i8* %3, i32 %4), !dbg !7729
  ret void, !dbg !7730
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_drawFacesGLSL(%struct.DerivedMesh* %dm, i32 (i32, i8*)* %setMaterial) #0 !dbg !7731 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %setMaterial.addr = alloca i32 (i32, i8*)*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !7732, metadata !DIExpression()), !dbg !7733
  store i32 (i32, i8*)* %setMaterial, i32 (i32, i8*)** %setMaterial.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %setMaterial.addr, metadata !7734, metadata !DIExpression()), !dbg !7735
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7736
  %drawMappedFacesGLSL = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 91, !dbg !7737
  %1 = load void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)** %drawMappedFacesGLSL, align 8, !dbg !7737
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7738
  %3 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !7739
  call void %1(%struct.DerivedMesh* %2, i32 (i32, i8*)* %3, i32 (i8*, i32)* null, i8* null), !dbg !7736
  ret void, !dbg !7740
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_drawMappedFaces(%struct.DerivedMesh* %dm, i32 (i8*, i32)* %setDrawOptions, i32 (i32, i8*)* %setMaterial, i32 (i8*, i32, i32)* %compareDrawOptions, i8* %userData, i32 %flag) #0 !dbg !7741 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %setDrawOptions.addr = alloca i32 (i8*, i32)*, align 8
  %setMaterial.addr = alloca i32 (i32, i8*)*, align 8
  %compareDrawOptions.addr = alloca i32 (i8*, i32, i32)*, align 8
  %userData.addr = alloca i8*, align 8
  %flag.addr = alloca i32, align 4
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %mv = alloca %struct.MVert*, align 8
  %mf = alloca %struct.MFace*, align 8
  %mcol = alloca %struct.MCol*, align 8
  %nors = alloca float*, align 8
  %lnors = alloca [4 x [3 x i16]]*, align 8
  %colType = alloca i32, align 4
  %useColors = alloca i32, align 4
  %i = alloca i32, align 4
  %orig = alloca i32, align 4
  %index_mf_to_mpoly = alloca i32*, align 8
  %index_mp_to_orig = alloca i32*, align 8
  %drawSmooth = alloca i32, align 4
  %draw_option = alloca i32, align 4
  %cp = alloca i8*, align 8
  %nor = alloca [3 x float], align 4
  %prevstart = alloca i32, align 4
  %tottri = alloca i32, align 4
  %next_actualFace = alloca i32, align 4
  %actualFace = alloca i32, align 4
  %mface320 = alloca %struct.MFace*, align 8
  %draw_option322 = alloca i32, align 4
  %flush = alloca i32, align 4
  %first = alloca i32, align 4
  %count = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !7742, metadata !DIExpression()), !dbg !7743
  store i32 (i8*, i32)* %setDrawOptions, i32 (i8*, i32)** %setDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32)** %setDrawOptions.addr, metadata !7744, metadata !DIExpression()), !dbg !7745
  store i32 (i32, i8*)* %setMaterial, i32 (i32, i8*)** %setMaterial.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %setMaterial.addr, metadata !7746, metadata !DIExpression()), !dbg !7747
  store i32 (i8*, i32, i32)* %compareDrawOptions, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32, i32)** %compareDrawOptions.addr, metadata !7748, metadata !DIExpression()), !dbg !7749
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !7750, metadata !DIExpression()), !dbg !7751
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !7752, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !7754, metadata !DIExpression()), !dbg !7755
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7756
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !7757
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !7755
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !7758, metadata !DIExpression()), !dbg !7759
  %2 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !7760
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %2, i32 0, i32 1, !dbg !7761
  %3 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7761
  store %struct.MVert* %3, %struct.MVert** %mv, align 8, !dbg !7759
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !7762, metadata !DIExpression()), !dbg !7763
  %4 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !7764
  %mface = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %4, i32 0, i32 3, !dbg !7765
  %5 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7765
  store %struct.MFace* %5, %struct.MFace** %mf, align 8, !dbg !7763
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol, metadata !7766, metadata !DIExpression()), !dbg !7769
  call void @llvm.dbg.declare(metadata float** %nors, metadata !7770, metadata !DIExpression()), !dbg !7771
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7772
  %call = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %6, i32 8), !dbg !7773
  %7 = bitcast i8* %call to float*, !dbg !7773
  store float* %7, float** %nors, align 8, !dbg !7771
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %lnors, metadata !7774, metadata !DIExpression()), !dbg !7775
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7776
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 52, !dbg !7777
  %9 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !7777
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7778
  %call1 = call i8* %9(%struct.DerivedMesh* %10, i32 40), !dbg !7776
  %11 = bitcast i8* %call1 to [4 x [3 x i16]]*, !dbg !7776
  store [4 x [3 x i16]]* %11, [4 x [3 x i16]]** %lnors, align 8, !dbg !7775
  call void @llvm.dbg.declare(metadata i32* %colType, metadata !7779, metadata !DIExpression()), !dbg !7780
  call void @llvm.dbg.declare(metadata i32* %useColors, metadata !7781, metadata !DIExpression()), !dbg !7782
  %12 = load i32, i32* %flag.addr, align 4, !dbg !7783
  %and = and i32 %12, 1, !dbg !7784
  store i32 %and, i32* %useColors, align 4, !dbg !7782
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7785, metadata !DIExpression()), !dbg !7786
  call void @llvm.dbg.declare(metadata i32* %orig, metadata !7787, metadata !DIExpression()), !dbg !7788
  call void @llvm.dbg.declare(metadata i32** %index_mf_to_mpoly, metadata !7789, metadata !DIExpression()), !dbg !7790
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7791
  %getTessFaceDataArray2 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 52, !dbg !7792
  %14 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray2, align 8, !dbg !7792
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7793
  %call3 = call i8* %14(%struct.DerivedMesh* %15, i32 7), !dbg !7791
  %16 = bitcast i8* %call3 to i32*, !dbg !7791
  store i32* %16, i32** %index_mf_to_mpoly, align 8, !dbg !7790
  call void @llvm.dbg.declare(metadata i32** %index_mp_to_orig, metadata !7794, metadata !DIExpression()), !dbg !7795
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7796
  %getPolyDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %17, i32 0, i32 54, !dbg !7797
  %18 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getPolyDataArray, align 8, !dbg !7797
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7798
  %call4 = call i8* %18(%struct.DerivedMesh* %19, i32 7), !dbg !7796
  %20 = bitcast i8* %call4 to i32*, !dbg !7796
  store i32* %20, i32** %index_mp_to_orig, align 8, !dbg !7795
  %21 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !7799
  %cmp = icmp eq i32* %21, null, !dbg !7801
  br i1 %cmp, label %if.then, label %if.end, !dbg !7802

if.then:                                          ; preds = %entry
  store i32* null, i32** %index_mp_to_orig, align 8, !dbg !7803
  br label %if.end, !dbg !7805

if.end:                                           ; preds = %if.then, %entry
  store i32 21, i32* %colType, align 4, !dbg !7806
  %22 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7807
  %23 = load i32, i32* %colType, align 4, !dbg !7808
  %call5 = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %22, i32 %23), !dbg !7809
  %24 = bitcast i8* %call5 to %struct.MCol*, !dbg !7809
  store %struct.MCol* %24, %struct.MCol** %mcol, align 8, !dbg !7810
  %25 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !7811
  %tobool = icmp ne %struct.MCol* %25, null, !dbg !7811
  br i1 %tobool, label %if.end8, label %if.then6, !dbg !7813

if.then6:                                         ; preds = %if.end
  store i32 20, i32* %colType, align 4, !dbg !7814
  %26 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7816
  %27 = load i32, i32* %colType, align 4, !dbg !7817
  %call7 = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %26, i32 %27), !dbg !7818
  %28 = bitcast i8* %call7 to %struct.MCol*, !dbg !7818
  store %struct.MCol* %28, %struct.MCol** %mcol, align 8, !dbg !7819
  br label %if.end8, !dbg !7820

if.end8:                                          ; preds = %if.then6, %if.end
  %29 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !7821
  %tobool9 = icmp ne %struct.MCol* %29, null, !dbg !7821
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !7823

if.then10:                                        ; preds = %if.end8
  store i32 6, i32* %colType, align 4, !dbg !7824
  %30 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7826
  %31 = load i32, i32* %colType, align 4, !dbg !7827
  %call11 = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %30, i32 %31), !dbg !7828
  %32 = bitcast i8* %call11 to %struct.MCol*, !dbg !7828
  store %struct.MCol* %32, %struct.MCol** %mcol, align 8, !dbg !7829
  br label %if.end12, !dbg !7830

if.end12:                                         ; preds = %if.then10, %if.end8
  %33 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7831
  call void @cdDM_update_normals_from_pbvh(%struct.DerivedMesh* %33), !dbg !7832
  %34 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7833
  %call13 = call zeroext i8 @GPU_buffer_legacy(%struct.DerivedMesh* %34), !dbg !7835
  %conv = zext i8 %call13 to i32, !dbg !7835
  %tobool14 = icmp ne i32 %conv, 0, !dbg !7835
  br i1 %tobool14, label %if.then17, label %lor.lhs.false, !dbg !7836

lor.lhs.false:                                    ; preds = %if.end12
  %35 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !7837
  %and15 = and i32 %35, 16, !dbg !7838
  %tobool16 = icmp ne i32 %and15, 0, !dbg !7838
  br i1 %tobool16, label %if.then17, label %if.else296, !dbg !7839

if.then17:                                        ; preds = %lor.lhs.false, %if.end12
  store i32 0, i32* %i, align 4, !dbg !7840
  br label %for.cond, !dbg !7843

for.cond:                                         ; preds = %for.inc, %if.then17
  %36 = load i32, i32* %i, align 4, !dbg !7844
  %37 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7846
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %37, i32 0, i32 7, !dbg !7847
  %38 = load i32, i32* %numTessFaceData, align 8, !dbg !7847
  %cmp18 = icmp slt i32 %36, %38, !dbg !7848
  br i1 %cmp18, label %for.body, label %for.end, !dbg !7849

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %drawSmooth, metadata !7850, metadata !DIExpression()), !dbg !7852
  %39 = load i32, i32* %flag.addr, align 4, !dbg !7853
  %and20 = and i32 %39, 2, !dbg !7854
  %tobool21 = icmp ne i32 %and20, 0, !dbg !7854
  br i1 %tobool21, label %cond.true, label %lor.lhs.false22, !dbg !7855

lor.lhs.false22:                                  ; preds = %for.body
  %40 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !7856
  %tobool23 = icmp ne [4 x [3 x i16]]* %40, null, !dbg !7856
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !7857

cond.true:                                        ; preds = %lor.lhs.false22, %for.body
  br label %cond.end, !dbg !7857

cond.false:                                       ; preds = %lor.lhs.false22
  %41 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !7858
  %flag24 = getelementptr inbounds %struct.MFace, %struct.MFace* %41, i32 0, i32 6, !dbg !7859
  %42 = load i8, i8* %flag24, align 1, !dbg !7859
  %conv25 = zext i8 %42 to i32, !dbg !7858
  %and26 = and i32 %conv25, 1, !dbg !7860
  br label %cond.end, !dbg !7857

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %and26, %cond.false ], !dbg !7857
  store i32 %cond, i32* %drawSmooth, align 4, !dbg !7852
  call void @llvm.dbg.declare(metadata i32* %draw_option, metadata !7861, metadata !DIExpression()), !dbg !7862
  store i32 1, i32* %draw_option, align 4, !dbg !7862
  %43 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !7863
  %tobool27 = icmp ne i32* %43, null, !dbg !7864
  br i1 %tobool27, label %cond.true28, label %cond.false30, !dbg !7864

cond.true28:                                      ; preds = %cond.end
  %44 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !7865
  %45 = load i32*, i32** %index_mp_to_orig, align 8, !dbg !7866
  %46 = load i32, i32* %i, align 4, !dbg !7867
  %call29 = call i32 @DM_origindex_mface_mpoly(i32* %44, i32* %45, i32 %46), !dbg !7868
  br label %cond.end31, !dbg !7864

cond.false30:                                     ; preds = %cond.end
  %47 = load i32, i32* %i, align 4, !dbg !7869
  br label %cond.end31, !dbg !7864

cond.end31:                                       ; preds = %cond.false30, %cond.true28
  %cond32 = phi i32 [ %call29, %cond.true28 ], [ %47, %cond.false30 ], !dbg !7864
  store i32 %cond32, i32* %orig, align 4, !dbg !7870
  %48 = load i32, i32* %orig, align 4, !dbg !7871
  %cmp33 = icmp eq i32 %48, -1, !dbg !7873
  br i1 %cmp33, label %if.then35, label %if.else, !dbg !7874

if.then35:                                        ; preds = %cond.end31
  %49 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !7875
  %50 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !7876
  %mat_nr = getelementptr inbounds %struct.MFace, %struct.MFace* %50, i32 0, i32 4, !dbg !7877
  %51 = load i16, i16* %mat_nr, align 4, !dbg !7877
  %conv36 = sext i16 %51 to i32, !dbg !7876
  %add = add nsw i32 %conv36, 1, !dbg !7878
  %call37 = call i32 %49(i32 %add, i8* null), !dbg !7875
  store i32 %call37, i32* %draw_option, align 4, !dbg !7879
  br label %if.end43, !dbg !7880

if.else:                                          ; preds = %cond.end31
  %52 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !7881
  %cmp38 = icmp ne i32 (i8*, i32)* %52, null, !dbg !7883
  br i1 %cmp38, label %if.then40, label %if.end42, !dbg !7884

if.then40:                                        ; preds = %if.else
  %53 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !7885
  %54 = load i8*, i8** %userData.addr, align 8, !dbg !7886
  %55 = load i32, i32* %orig, align 4, !dbg !7887
  %call41 = call i32 %53(i8* %54, i32 %55), !dbg !7885
  store i32 %call41, i32* %draw_option, align 4, !dbg !7888
  br label %if.end42, !dbg !7889

if.end42:                                         ; preds = %if.then40, %if.else
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then35
  %56 = load i32, i32* %draw_option, align 4, !dbg !7890
  %cmp44 = icmp ne i32 %56, 0, !dbg !7892
  br i1 %cmp44, label %if.then46, label %if.end288, !dbg !7893

if.then46:                                        ; preds = %if.end43
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !7894, metadata !DIExpression()), !dbg !7896
  store i8* null, i8** %cp, align 8, !dbg !7896
  %57 = load i32, i32* %draw_option, align 4, !dbg !7897
  %cmp47 = icmp eq i32 %57, 3, !dbg !7899
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !7900

if.then49:                                        ; preds = %if.then46
  call void @glEnable(i32 2882), !dbg !7901
  call void @glPolygonStipple(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @stipple_quarttone, i64 0, i64 0)), !dbg !7903
  br label %if.end50, !dbg !7904

if.end50:                                         ; preds = %if.then49, %if.then46
  %58 = load i32, i32* %useColors, align 4, !dbg !7905
  %tobool51 = icmp ne i32 %58, 0, !dbg !7905
  br i1 %tobool51, label %land.lhs.true, label %if.end54, !dbg !7907

land.lhs.true:                                    ; preds = %if.end50
  %59 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !7908
  %tobool52 = icmp ne %struct.MCol* %59, null, !dbg !7908
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !7909

if.then53:                                        ; preds = %land.lhs.true
  %60 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !7910
  %61 = load i32, i32* %i, align 4, !dbg !7911
  %mul = mul nsw i32 %61, 4, !dbg !7912
  %idxprom = sext i32 %mul to i64, !dbg !7910
  %arrayidx = getelementptr inbounds %struct.MCol, %struct.MCol* %60, i64 %idxprom, !dbg !7910
  %62 = bitcast %struct.MCol* %arrayidx to i8*, !dbg !7913
  store i8* %62, i8** %cp, align 8, !dbg !7914
  br label %if.end54, !dbg !7915

if.end54:                                         ; preds = %if.then53, %land.lhs.true, %if.end50
  call void @glShadeModel(i32 7425), !dbg !7916
  %63 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !7917
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %63, i32 0, i32 3, !dbg !7918
  %64 = load i32, i32* %v4, align 4, !dbg !7918
  %tobool55 = icmp ne i32 %64, 0, !dbg !7917
  %65 = zext i1 %tobool55 to i64, !dbg !7917
  %cond56 = select i1 %tobool55, i32 7, i32 4, !dbg !7917
  call void @glBegin(i32 %cond56), !dbg !7919
  %66 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !7920
  %tobool57 = icmp ne [4 x [3 x i16]]* %66, null, !dbg !7920
  br i1 %tobool57, label %if.then58, label %if.else114, !dbg !7922

if.then58:                                        ; preds = %if.end54
  %67 = load i8*, i8** %cp, align 8, !dbg !7923
  %tobool59 = icmp ne i8* %67, null, !dbg !7923
  br i1 %tobool59, label %if.then60, label %if.end64, !dbg !7926

if.then60:                                        ; preds = %if.then58
  %68 = load i8*, i8** %cp, align 8, !dbg !7927
  %arrayidx61 = getelementptr inbounds i8, i8* %68, i64 3, !dbg !7927
  %69 = load i8, i8* %arrayidx61, align 1, !dbg !7927
  %70 = load i8*, i8** %cp, align 8, !dbg !7928
  %arrayidx62 = getelementptr inbounds i8, i8* %70, i64 2, !dbg !7928
  %71 = load i8, i8* %arrayidx62, align 1, !dbg !7928
  %72 = load i8*, i8** %cp, align 8, !dbg !7929
  %arrayidx63 = getelementptr inbounds i8, i8* %72, i64 1, !dbg !7929
  %73 = load i8, i8* %arrayidx63, align 1, !dbg !7929
  call void @glColor3ub(i8 zeroext %69, i8 zeroext %71, i8 zeroext %73), !dbg !7930
  br label %if.end64, !dbg !7930

if.end64:                                         ; preds = %if.then60, %if.then58
  %74 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !7931
  %arrayidx65 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %74, i64 0, !dbg !7931
  %arrayidx66 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx65, i64 0, i64 0, !dbg !7931
  %arraydecay = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx66, i64 0, i64 0, !dbg !7931
  call void @glNormal3sv(i16* %arraydecay), !dbg !7932
  %75 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !7933
  %76 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !7934
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %76, i32 0, i32 0, !dbg !7935
  %77 = load i32, i32* %v1, align 4, !dbg !7935
  %idxprom67 = zext i32 %77 to i64, !dbg !7933
  %arrayidx68 = getelementptr inbounds %struct.MVert, %struct.MVert* %75, i64 %idxprom67, !dbg !7933
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx68, i32 0, i32 0, !dbg !7936
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7933
  call void @glVertex3fv(float* %arraydecay69), !dbg !7937
  %78 = load i8*, i8** %cp, align 8, !dbg !7938
  %tobool70 = icmp ne i8* %78, null, !dbg !7938
  br i1 %tobool70, label %if.then71, label %if.end75, !dbg !7940

if.then71:                                        ; preds = %if.end64
  %79 = load i8*, i8** %cp, align 8, !dbg !7941
  %arrayidx72 = getelementptr inbounds i8, i8* %79, i64 7, !dbg !7941
  %80 = load i8, i8* %arrayidx72, align 1, !dbg !7941
  %81 = load i8*, i8** %cp, align 8, !dbg !7942
  %arrayidx73 = getelementptr inbounds i8, i8* %81, i64 6, !dbg !7942
  %82 = load i8, i8* %arrayidx73, align 1, !dbg !7942
  %83 = load i8*, i8** %cp, align 8, !dbg !7943
  %arrayidx74 = getelementptr inbounds i8, i8* %83, i64 5, !dbg !7943
  %84 = load i8, i8* %arrayidx74, align 1, !dbg !7943
  call void @glColor3ub(i8 zeroext %80, i8 zeroext %82, i8 zeroext %84), !dbg !7944
  br label %if.end75, !dbg !7944

if.end75:                                         ; preds = %if.then71, %if.end64
  %85 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !7945
  %arrayidx76 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %85, i64 0, !dbg !7945
  %arrayidx77 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx76, i64 0, i64 1, !dbg !7945
  %arraydecay78 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx77, i64 0, i64 0, !dbg !7945
  call void @glNormal3sv(i16* %arraydecay78), !dbg !7946
  %86 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !7947
  %87 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !7948
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %87, i32 0, i32 1, !dbg !7949
  %88 = load i32, i32* %v2, align 4, !dbg !7949
  %idxprom79 = zext i32 %88 to i64, !dbg !7947
  %arrayidx80 = getelementptr inbounds %struct.MVert, %struct.MVert* %86, i64 %idxprom79, !dbg !7947
  %co81 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx80, i32 0, i32 0, !dbg !7950
  %arraydecay82 = getelementptr inbounds [3 x float], [3 x float]* %co81, i64 0, i64 0, !dbg !7947
  call void @glVertex3fv(float* %arraydecay82), !dbg !7951
  %89 = load i8*, i8** %cp, align 8, !dbg !7952
  %tobool83 = icmp ne i8* %89, null, !dbg !7952
  br i1 %tobool83, label %if.then84, label %if.end88, !dbg !7954

if.then84:                                        ; preds = %if.end75
  %90 = load i8*, i8** %cp, align 8, !dbg !7955
  %arrayidx85 = getelementptr inbounds i8, i8* %90, i64 11, !dbg !7955
  %91 = load i8, i8* %arrayidx85, align 1, !dbg !7955
  %92 = load i8*, i8** %cp, align 8, !dbg !7956
  %arrayidx86 = getelementptr inbounds i8, i8* %92, i64 10, !dbg !7956
  %93 = load i8, i8* %arrayidx86, align 1, !dbg !7956
  %94 = load i8*, i8** %cp, align 8, !dbg !7957
  %arrayidx87 = getelementptr inbounds i8, i8* %94, i64 9, !dbg !7957
  %95 = load i8, i8* %arrayidx87, align 1, !dbg !7957
  call void @glColor3ub(i8 zeroext %91, i8 zeroext %93, i8 zeroext %95), !dbg !7958
  br label %if.end88, !dbg !7958

if.end88:                                         ; preds = %if.then84, %if.end75
  %96 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !7959
  %arrayidx89 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %96, i64 0, !dbg !7959
  %arrayidx90 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx89, i64 0, i64 2, !dbg !7959
  %arraydecay91 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx90, i64 0, i64 0, !dbg !7959
  call void @glNormal3sv(i16* %arraydecay91), !dbg !7960
  %97 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !7961
  %98 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !7962
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %98, i32 0, i32 2, !dbg !7963
  %99 = load i32, i32* %v3, align 4, !dbg !7963
  %idxprom92 = zext i32 %99 to i64, !dbg !7961
  %arrayidx93 = getelementptr inbounds %struct.MVert, %struct.MVert* %97, i64 %idxprom92, !dbg !7961
  %co94 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx93, i32 0, i32 0, !dbg !7964
  %arraydecay95 = getelementptr inbounds [3 x float], [3 x float]* %co94, i64 0, i64 0, !dbg !7961
  call void @glVertex3fv(float* %arraydecay95), !dbg !7965
  %100 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !7966
  %v496 = getelementptr inbounds %struct.MFace, %struct.MFace* %100, i32 0, i32 3, !dbg !7968
  %101 = load i32, i32* %v496, align 4, !dbg !7968
  %tobool97 = icmp ne i32 %101, 0, !dbg !7966
  br i1 %tobool97, label %if.then98, label %if.end113, !dbg !7969

if.then98:                                        ; preds = %if.end88
  %102 = load i8*, i8** %cp, align 8, !dbg !7970
  %tobool99 = icmp ne i8* %102, null, !dbg !7970
  br i1 %tobool99, label %if.then100, label %if.end104, !dbg !7973

if.then100:                                       ; preds = %if.then98
  %103 = load i8*, i8** %cp, align 8, !dbg !7974
  %arrayidx101 = getelementptr inbounds i8, i8* %103, i64 15, !dbg !7974
  %104 = load i8, i8* %arrayidx101, align 1, !dbg !7974
  %105 = load i8*, i8** %cp, align 8, !dbg !7975
  %arrayidx102 = getelementptr inbounds i8, i8* %105, i64 14, !dbg !7975
  %106 = load i8, i8* %arrayidx102, align 1, !dbg !7975
  %107 = load i8*, i8** %cp, align 8, !dbg !7976
  %arrayidx103 = getelementptr inbounds i8, i8* %107, i64 13, !dbg !7976
  %108 = load i8, i8* %arrayidx103, align 1, !dbg !7976
  call void @glColor3ub(i8 zeroext %104, i8 zeroext %106, i8 zeroext %108), !dbg !7977
  br label %if.end104, !dbg !7977

if.end104:                                        ; preds = %if.then100, %if.then98
  %109 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !7978
  %arrayidx105 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %109, i64 0, !dbg !7978
  %arrayidx106 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx105, i64 0, i64 3, !dbg !7978
  %arraydecay107 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx106, i64 0, i64 0, !dbg !7978
  call void @glNormal3sv(i16* %arraydecay107), !dbg !7979
  %110 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !7980
  %111 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !7981
  %v4108 = getelementptr inbounds %struct.MFace, %struct.MFace* %111, i32 0, i32 3, !dbg !7982
  %112 = load i32, i32* %v4108, align 4, !dbg !7982
  %idxprom109 = zext i32 %112 to i64, !dbg !7980
  %arrayidx110 = getelementptr inbounds %struct.MVert, %struct.MVert* %110, i64 %idxprom109, !dbg !7980
  %co111 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx110, i32 0, i32 0, !dbg !7983
  %arraydecay112 = getelementptr inbounds [3 x float], [3 x float]* %co111, i64 0, i64 0, !dbg !7980
  call void @glVertex3fv(float* %arraydecay112), !dbg !7984
  br label %if.end113, !dbg !7985

if.end113:                                        ; preds = %if.end104, %if.end88
  br label %if.end283, !dbg !7986

if.else114:                                       ; preds = %if.end54
  %113 = load i32, i32* %drawSmooth, align 4, !dbg !7987
  %tobool115 = icmp ne i32 %113, 0, !dbg !7987
  br i1 %tobool115, label %if.else214, label %if.then116, !dbg !7989

if.then116:                                       ; preds = %if.else114
  %114 = load float*, float** %nors, align 8, !dbg !7990
  %tobool117 = icmp ne float* %114, null, !dbg !7990
  br i1 %tobool117, label %if.then118, label %if.else119, !dbg !7993

if.then118:                                       ; preds = %if.then116
  %115 = load float*, float** %nors, align 8, !dbg !7994
  call void @glNormal3fv(float* %115), !dbg !7996
  br label %if.end165, !dbg !7997

if.else119:                                       ; preds = %if.then116
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !7998, metadata !DIExpression()), !dbg !8000
  %116 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8001
  %v4120 = getelementptr inbounds %struct.MFace, %struct.MFace* %116, i32 0, i32 3, !dbg !8003
  %117 = load i32, i32* %v4120, align 4, !dbg !8003
  %tobool121 = icmp ne i32 %117, 0, !dbg !8001
  br i1 %tobool121, label %if.then122, label %if.else145, !dbg !8004

if.then122:                                       ; preds = %if.else119
  %arraydecay123 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !8005
  %118 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !8007
  %119 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8008
  %v1124 = getelementptr inbounds %struct.MFace, %struct.MFace* %119, i32 0, i32 0, !dbg !8009
  %120 = load i32, i32* %v1124, align 4, !dbg !8009
  %idxprom125 = zext i32 %120 to i64, !dbg !8007
  %arrayidx126 = getelementptr inbounds %struct.MVert, %struct.MVert* %118, i64 %idxprom125, !dbg !8007
  %co127 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx126, i32 0, i32 0, !dbg !8010
  %arraydecay128 = getelementptr inbounds [3 x float], [3 x float]* %co127, i64 0, i64 0, !dbg !8007
  %121 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !8011
  %122 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8012
  %v2129 = getelementptr inbounds %struct.MFace, %struct.MFace* %122, i32 0, i32 1, !dbg !8013
  %123 = load i32, i32* %v2129, align 4, !dbg !8013
  %idxprom130 = zext i32 %123 to i64, !dbg !8011
  %arrayidx131 = getelementptr inbounds %struct.MVert, %struct.MVert* %121, i64 %idxprom130, !dbg !8011
  %co132 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx131, i32 0, i32 0, !dbg !8014
  %arraydecay133 = getelementptr inbounds [3 x float], [3 x float]* %co132, i64 0, i64 0, !dbg !8011
  %124 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !8015
  %125 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8016
  %v3134 = getelementptr inbounds %struct.MFace, %struct.MFace* %125, i32 0, i32 2, !dbg !8017
  %126 = load i32, i32* %v3134, align 4, !dbg !8017
  %idxprom135 = zext i32 %126 to i64, !dbg !8015
  %arrayidx136 = getelementptr inbounds %struct.MVert, %struct.MVert* %124, i64 %idxprom135, !dbg !8015
  %co137 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx136, i32 0, i32 0, !dbg !8018
  %arraydecay138 = getelementptr inbounds [3 x float], [3 x float]* %co137, i64 0, i64 0, !dbg !8015
  %127 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !8019
  %128 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8020
  %v4139 = getelementptr inbounds %struct.MFace, %struct.MFace* %128, i32 0, i32 3, !dbg !8021
  %129 = load i32, i32* %v4139, align 4, !dbg !8021
  %idxprom140 = zext i32 %129 to i64, !dbg !8019
  %arrayidx141 = getelementptr inbounds %struct.MVert, %struct.MVert* %127, i64 %idxprom140, !dbg !8019
  %co142 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx141, i32 0, i32 0, !dbg !8022
  %arraydecay143 = getelementptr inbounds [3 x float], [3 x float]* %co142, i64 0, i64 0, !dbg !8019
  %call144 = call float @normal_quad_v3(float* %arraydecay123, float* %arraydecay128, float* %arraydecay133, float* %arraydecay138, float* %arraydecay143), !dbg !8023
  br label %if.end163, !dbg !8024

if.else145:                                       ; preds = %if.else119
  %arraydecay146 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !8025
  %130 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !8027
  %131 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8028
  %v1147 = getelementptr inbounds %struct.MFace, %struct.MFace* %131, i32 0, i32 0, !dbg !8029
  %132 = load i32, i32* %v1147, align 4, !dbg !8029
  %idxprom148 = zext i32 %132 to i64, !dbg !8027
  %arrayidx149 = getelementptr inbounds %struct.MVert, %struct.MVert* %130, i64 %idxprom148, !dbg !8027
  %co150 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx149, i32 0, i32 0, !dbg !8030
  %arraydecay151 = getelementptr inbounds [3 x float], [3 x float]* %co150, i64 0, i64 0, !dbg !8027
  %133 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !8031
  %134 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8032
  %v2152 = getelementptr inbounds %struct.MFace, %struct.MFace* %134, i32 0, i32 1, !dbg !8033
  %135 = load i32, i32* %v2152, align 4, !dbg !8033
  %idxprom153 = zext i32 %135 to i64, !dbg !8031
  %arrayidx154 = getelementptr inbounds %struct.MVert, %struct.MVert* %133, i64 %idxprom153, !dbg !8031
  %co155 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx154, i32 0, i32 0, !dbg !8034
  %arraydecay156 = getelementptr inbounds [3 x float], [3 x float]* %co155, i64 0, i64 0, !dbg !8031
  %136 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !8035
  %137 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8036
  %v3157 = getelementptr inbounds %struct.MFace, %struct.MFace* %137, i32 0, i32 2, !dbg !8037
  %138 = load i32, i32* %v3157, align 4, !dbg !8037
  %idxprom158 = zext i32 %138 to i64, !dbg !8035
  %arrayidx159 = getelementptr inbounds %struct.MVert, %struct.MVert* %136, i64 %idxprom158, !dbg !8035
  %co160 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx159, i32 0, i32 0, !dbg !8038
  %arraydecay161 = getelementptr inbounds [3 x float], [3 x float]* %co160, i64 0, i64 0, !dbg !8035
  %call162 = call float @normal_tri_v3(float* %arraydecay146, float* %arraydecay151, float* %arraydecay156, float* %arraydecay161), !dbg !8039
  br label %if.end163

if.end163:                                        ; preds = %if.else145, %if.then122
  %arraydecay164 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !8040
  call void @glNormal3fv(float* %arraydecay164), !dbg !8041
  br label %if.end165

if.end165:                                        ; preds = %if.end163, %if.then118
  %139 = load i8*, i8** %cp, align 8, !dbg !8042
  %tobool166 = icmp ne i8* %139, null, !dbg !8042
  br i1 %tobool166, label %if.then167, label %if.end171, !dbg !8044

if.then167:                                       ; preds = %if.end165
  %140 = load i8*, i8** %cp, align 8, !dbg !8045
  %arrayidx168 = getelementptr inbounds i8, i8* %140, i64 3, !dbg !8045
  %141 = load i8, i8* %arrayidx168, align 1, !dbg !8045
  %142 = load i8*, i8** %cp, align 8, !dbg !8046
  %arrayidx169 = getelementptr inbounds i8, i8* %142, i64 2, !dbg !8046
  %143 = load i8, i8* %arrayidx169, align 1, !dbg !8046
  %144 = load i8*, i8** %cp, align 8, !dbg !8047
  %arrayidx170 = getelementptr inbounds i8, i8* %144, i64 1, !dbg !8047
  %145 = load i8, i8* %arrayidx170, align 1, !dbg !8047
  call void @glColor3ub(i8 zeroext %141, i8 zeroext %143, i8 zeroext %145), !dbg !8048
  br label %if.end171, !dbg !8048

if.end171:                                        ; preds = %if.then167, %if.end165
  %146 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !8049
  %147 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8050
  %v1172 = getelementptr inbounds %struct.MFace, %struct.MFace* %147, i32 0, i32 0, !dbg !8051
  %148 = load i32, i32* %v1172, align 4, !dbg !8051
  %idxprom173 = zext i32 %148 to i64, !dbg !8049
  %arrayidx174 = getelementptr inbounds %struct.MVert, %struct.MVert* %146, i64 %idxprom173, !dbg !8049
  %co175 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx174, i32 0, i32 0, !dbg !8052
  %arraydecay176 = getelementptr inbounds [3 x float], [3 x float]* %co175, i64 0, i64 0, !dbg !8049
  call void @glVertex3fv(float* %arraydecay176), !dbg !8053
  %149 = load i8*, i8** %cp, align 8, !dbg !8054
  %tobool177 = icmp ne i8* %149, null, !dbg !8054
  br i1 %tobool177, label %if.then178, label %if.end182, !dbg !8056

if.then178:                                       ; preds = %if.end171
  %150 = load i8*, i8** %cp, align 8, !dbg !8057
  %arrayidx179 = getelementptr inbounds i8, i8* %150, i64 7, !dbg !8057
  %151 = load i8, i8* %arrayidx179, align 1, !dbg !8057
  %152 = load i8*, i8** %cp, align 8, !dbg !8058
  %arrayidx180 = getelementptr inbounds i8, i8* %152, i64 6, !dbg !8058
  %153 = load i8, i8* %arrayidx180, align 1, !dbg !8058
  %154 = load i8*, i8** %cp, align 8, !dbg !8059
  %arrayidx181 = getelementptr inbounds i8, i8* %154, i64 5, !dbg !8059
  %155 = load i8, i8* %arrayidx181, align 1, !dbg !8059
  call void @glColor3ub(i8 zeroext %151, i8 zeroext %153, i8 zeroext %155), !dbg !8060
  br label %if.end182, !dbg !8060

if.end182:                                        ; preds = %if.then178, %if.end171
  %156 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !8061
  %157 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8062
  %v2183 = getelementptr inbounds %struct.MFace, %struct.MFace* %157, i32 0, i32 1, !dbg !8063
  %158 = load i32, i32* %v2183, align 4, !dbg !8063
  %idxprom184 = zext i32 %158 to i64, !dbg !8061
  %arrayidx185 = getelementptr inbounds %struct.MVert, %struct.MVert* %156, i64 %idxprom184, !dbg !8061
  %co186 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx185, i32 0, i32 0, !dbg !8064
  %arraydecay187 = getelementptr inbounds [3 x float], [3 x float]* %co186, i64 0, i64 0, !dbg !8061
  call void @glVertex3fv(float* %arraydecay187), !dbg !8065
  %159 = load i8*, i8** %cp, align 8, !dbg !8066
  %tobool188 = icmp ne i8* %159, null, !dbg !8066
  br i1 %tobool188, label %if.then189, label %if.end193, !dbg !8068

if.then189:                                       ; preds = %if.end182
  %160 = load i8*, i8** %cp, align 8, !dbg !8069
  %arrayidx190 = getelementptr inbounds i8, i8* %160, i64 11, !dbg !8069
  %161 = load i8, i8* %arrayidx190, align 1, !dbg !8069
  %162 = load i8*, i8** %cp, align 8, !dbg !8070
  %arrayidx191 = getelementptr inbounds i8, i8* %162, i64 10, !dbg !8070
  %163 = load i8, i8* %arrayidx191, align 1, !dbg !8070
  %164 = load i8*, i8** %cp, align 8, !dbg !8071
  %arrayidx192 = getelementptr inbounds i8, i8* %164, i64 9, !dbg !8071
  %165 = load i8, i8* %arrayidx192, align 1, !dbg !8071
  call void @glColor3ub(i8 zeroext %161, i8 zeroext %163, i8 zeroext %165), !dbg !8072
  br label %if.end193, !dbg !8072

if.end193:                                        ; preds = %if.then189, %if.end182
  %166 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !8073
  %167 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8074
  %v3194 = getelementptr inbounds %struct.MFace, %struct.MFace* %167, i32 0, i32 2, !dbg !8075
  %168 = load i32, i32* %v3194, align 4, !dbg !8075
  %idxprom195 = zext i32 %168 to i64, !dbg !8073
  %arrayidx196 = getelementptr inbounds %struct.MVert, %struct.MVert* %166, i64 %idxprom195, !dbg !8073
  %co197 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx196, i32 0, i32 0, !dbg !8076
  %arraydecay198 = getelementptr inbounds [3 x float], [3 x float]* %co197, i64 0, i64 0, !dbg !8073
  call void @glVertex3fv(float* %arraydecay198), !dbg !8077
  %169 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8078
  %v4199 = getelementptr inbounds %struct.MFace, %struct.MFace* %169, i32 0, i32 3, !dbg !8080
  %170 = load i32, i32* %v4199, align 4, !dbg !8080
  %tobool200 = icmp ne i32 %170, 0, !dbg !8078
  br i1 %tobool200, label %if.then201, label %if.end213, !dbg !8081

if.then201:                                       ; preds = %if.end193
  %171 = load i8*, i8** %cp, align 8, !dbg !8082
  %tobool202 = icmp ne i8* %171, null, !dbg !8082
  br i1 %tobool202, label %if.then203, label %if.end207, !dbg !8085

if.then203:                                       ; preds = %if.then201
  %172 = load i8*, i8** %cp, align 8, !dbg !8086
  %arrayidx204 = getelementptr inbounds i8, i8* %172, i64 15, !dbg !8086
  %173 = load i8, i8* %arrayidx204, align 1, !dbg !8086
  %174 = load i8*, i8** %cp, align 8, !dbg !8087
  %arrayidx205 = getelementptr inbounds i8, i8* %174, i64 14, !dbg !8087
  %175 = load i8, i8* %arrayidx205, align 1, !dbg !8087
  %176 = load i8*, i8** %cp, align 8, !dbg !8088
  %arrayidx206 = getelementptr inbounds i8, i8* %176, i64 13, !dbg !8088
  %177 = load i8, i8* %arrayidx206, align 1, !dbg !8088
  call void @glColor3ub(i8 zeroext %173, i8 zeroext %175, i8 zeroext %177), !dbg !8089
  br label %if.end207, !dbg !8089

if.end207:                                        ; preds = %if.then203, %if.then201
  %178 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !8090
  %179 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8091
  %v4208 = getelementptr inbounds %struct.MFace, %struct.MFace* %179, i32 0, i32 3, !dbg !8092
  %180 = load i32, i32* %v4208, align 4, !dbg !8092
  %idxprom209 = zext i32 %180 to i64, !dbg !8090
  %arrayidx210 = getelementptr inbounds %struct.MVert, %struct.MVert* %178, i64 %idxprom209, !dbg !8090
  %co211 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx210, i32 0, i32 0, !dbg !8093
  %arraydecay212 = getelementptr inbounds [3 x float], [3 x float]* %co211, i64 0, i64 0, !dbg !8090
  call void @glVertex3fv(float* %arraydecay212), !dbg !8094
  br label %if.end213, !dbg !8095

if.end213:                                        ; preds = %if.end207, %if.end193
  br label %if.end282, !dbg !8096

if.else214:                                       ; preds = %if.else114
  %181 = load i8*, i8** %cp, align 8, !dbg !8097
  %tobool215 = icmp ne i8* %181, null, !dbg !8097
  br i1 %tobool215, label %if.then216, label %if.end220, !dbg !8100

if.then216:                                       ; preds = %if.else214
  %182 = load i8*, i8** %cp, align 8, !dbg !8101
  %arrayidx217 = getelementptr inbounds i8, i8* %182, i64 3, !dbg !8101
  %183 = load i8, i8* %arrayidx217, align 1, !dbg !8101
  %184 = load i8*, i8** %cp, align 8, !dbg !8102
  %arrayidx218 = getelementptr inbounds i8, i8* %184, i64 2, !dbg !8102
  %185 = load i8, i8* %arrayidx218, align 1, !dbg !8102
  %186 = load i8*, i8** %cp, align 8, !dbg !8103
  %arrayidx219 = getelementptr inbounds i8, i8* %186, i64 1, !dbg !8103
  %187 = load i8, i8* %arrayidx219, align 1, !dbg !8103
  call void @glColor3ub(i8 zeroext %183, i8 zeroext %185, i8 zeroext %187), !dbg !8104
  br label %if.end220, !dbg !8104

if.end220:                                        ; preds = %if.then216, %if.else214
  %188 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !8105
  %189 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8106
  %v1221 = getelementptr inbounds %struct.MFace, %struct.MFace* %189, i32 0, i32 0, !dbg !8107
  %190 = load i32, i32* %v1221, align 4, !dbg !8107
  %idxprom222 = zext i32 %190 to i64, !dbg !8105
  %arrayidx223 = getelementptr inbounds %struct.MVert, %struct.MVert* %188, i64 %idxprom222, !dbg !8105
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx223, i32 0, i32 1, !dbg !8108
  %arraydecay224 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !8105
  call void @glNormal3sv(i16* %arraydecay224), !dbg !8109
  %191 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !8110
  %192 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8111
  %v1225 = getelementptr inbounds %struct.MFace, %struct.MFace* %192, i32 0, i32 0, !dbg !8112
  %193 = load i32, i32* %v1225, align 4, !dbg !8112
  %idxprom226 = zext i32 %193 to i64, !dbg !8110
  %arrayidx227 = getelementptr inbounds %struct.MVert, %struct.MVert* %191, i64 %idxprom226, !dbg !8110
  %co228 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx227, i32 0, i32 0, !dbg !8113
  %arraydecay229 = getelementptr inbounds [3 x float], [3 x float]* %co228, i64 0, i64 0, !dbg !8110
  call void @glVertex3fv(float* %arraydecay229), !dbg !8114
  %194 = load i8*, i8** %cp, align 8, !dbg !8115
  %tobool230 = icmp ne i8* %194, null, !dbg !8115
  br i1 %tobool230, label %if.then231, label %if.end235, !dbg !8117

if.then231:                                       ; preds = %if.end220
  %195 = load i8*, i8** %cp, align 8, !dbg !8118
  %arrayidx232 = getelementptr inbounds i8, i8* %195, i64 7, !dbg !8118
  %196 = load i8, i8* %arrayidx232, align 1, !dbg !8118
  %197 = load i8*, i8** %cp, align 8, !dbg !8119
  %arrayidx233 = getelementptr inbounds i8, i8* %197, i64 6, !dbg !8119
  %198 = load i8, i8* %arrayidx233, align 1, !dbg !8119
  %199 = load i8*, i8** %cp, align 8, !dbg !8120
  %arrayidx234 = getelementptr inbounds i8, i8* %199, i64 5, !dbg !8120
  %200 = load i8, i8* %arrayidx234, align 1, !dbg !8120
  call void @glColor3ub(i8 zeroext %196, i8 zeroext %198, i8 zeroext %200), !dbg !8121
  br label %if.end235, !dbg !8121

if.end235:                                        ; preds = %if.then231, %if.end220
  %201 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !8122
  %202 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8123
  %v2236 = getelementptr inbounds %struct.MFace, %struct.MFace* %202, i32 0, i32 1, !dbg !8124
  %203 = load i32, i32* %v2236, align 4, !dbg !8124
  %idxprom237 = zext i32 %203 to i64, !dbg !8122
  %arrayidx238 = getelementptr inbounds %struct.MVert, %struct.MVert* %201, i64 %idxprom237, !dbg !8122
  %no239 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx238, i32 0, i32 1, !dbg !8125
  %arraydecay240 = getelementptr inbounds [3 x i16], [3 x i16]* %no239, i64 0, i64 0, !dbg !8122
  call void @glNormal3sv(i16* %arraydecay240), !dbg !8126
  %204 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !8127
  %205 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8128
  %v2241 = getelementptr inbounds %struct.MFace, %struct.MFace* %205, i32 0, i32 1, !dbg !8129
  %206 = load i32, i32* %v2241, align 4, !dbg !8129
  %idxprom242 = zext i32 %206 to i64, !dbg !8127
  %arrayidx243 = getelementptr inbounds %struct.MVert, %struct.MVert* %204, i64 %idxprom242, !dbg !8127
  %co244 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx243, i32 0, i32 0, !dbg !8130
  %arraydecay245 = getelementptr inbounds [3 x float], [3 x float]* %co244, i64 0, i64 0, !dbg !8127
  call void @glVertex3fv(float* %arraydecay245), !dbg !8131
  %207 = load i8*, i8** %cp, align 8, !dbg !8132
  %tobool246 = icmp ne i8* %207, null, !dbg !8132
  br i1 %tobool246, label %if.then247, label %if.end251, !dbg !8134

if.then247:                                       ; preds = %if.end235
  %208 = load i8*, i8** %cp, align 8, !dbg !8135
  %arrayidx248 = getelementptr inbounds i8, i8* %208, i64 11, !dbg !8135
  %209 = load i8, i8* %arrayidx248, align 1, !dbg !8135
  %210 = load i8*, i8** %cp, align 8, !dbg !8136
  %arrayidx249 = getelementptr inbounds i8, i8* %210, i64 10, !dbg !8136
  %211 = load i8, i8* %arrayidx249, align 1, !dbg !8136
  %212 = load i8*, i8** %cp, align 8, !dbg !8137
  %arrayidx250 = getelementptr inbounds i8, i8* %212, i64 9, !dbg !8137
  %213 = load i8, i8* %arrayidx250, align 1, !dbg !8137
  call void @glColor3ub(i8 zeroext %209, i8 zeroext %211, i8 zeroext %213), !dbg !8138
  br label %if.end251, !dbg !8138

if.end251:                                        ; preds = %if.then247, %if.end235
  %214 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !8139
  %215 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8140
  %v3252 = getelementptr inbounds %struct.MFace, %struct.MFace* %215, i32 0, i32 2, !dbg !8141
  %216 = load i32, i32* %v3252, align 4, !dbg !8141
  %idxprom253 = zext i32 %216 to i64, !dbg !8139
  %arrayidx254 = getelementptr inbounds %struct.MVert, %struct.MVert* %214, i64 %idxprom253, !dbg !8139
  %no255 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx254, i32 0, i32 1, !dbg !8142
  %arraydecay256 = getelementptr inbounds [3 x i16], [3 x i16]* %no255, i64 0, i64 0, !dbg !8139
  call void @glNormal3sv(i16* %arraydecay256), !dbg !8143
  %217 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !8144
  %218 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8145
  %v3257 = getelementptr inbounds %struct.MFace, %struct.MFace* %218, i32 0, i32 2, !dbg !8146
  %219 = load i32, i32* %v3257, align 4, !dbg !8146
  %idxprom258 = zext i32 %219 to i64, !dbg !8144
  %arrayidx259 = getelementptr inbounds %struct.MVert, %struct.MVert* %217, i64 %idxprom258, !dbg !8144
  %co260 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx259, i32 0, i32 0, !dbg !8147
  %arraydecay261 = getelementptr inbounds [3 x float], [3 x float]* %co260, i64 0, i64 0, !dbg !8144
  call void @glVertex3fv(float* %arraydecay261), !dbg !8148
  %220 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8149
  %v4262 = getelementptr inbounds %struct.MFace, %struct.MFace* %220, i32 0, i32 3, !dbg !8151
  %221 = load i32, i32* %v4262, align 4, !dbg !8151
  %tobool263 = icmp ne i32 %221, 0, !dbg !8149
  br i1 %tobool263, label %if.then264, label %if.end281, !dbg !8152

if.then264:                                       ; preds = %if.end251
  %222 = load i8*, i8** %cp, align 8, !dbg !8153
  %tobool265 = icmp ne i8* %222, null, !dbg !8153
  br i1 %tobool265, label %if.then266, label %if.end270, !dbg !8156

if.then266:                                       ; preds = %if.then264
  %223 = load i8*, i8** %cp, align 8, !dbg !8157
  %arrayidx267 = getelementptr inbounds i8, i8* %223, i64 15, !dbg !8157
  %224 = load i8, i8* %arrayidx267, align 1, !dbg !8157
  %225 = load i8*, i8** %cp, align 8, !dbg !8158
  %arrayidx268 = getelementptr inbounds i8, i8* %225, i64 14, !dbg !8158
  %226 = load i8, i8* %arrayidx268, align 1, !dbg !8158
  %227 = load i8*, i8** %cp, align 8, !dbg !8159
  %arrayidx269 = getelementptr inbounds i8, i8* %227, i64 13, !dbg !8159
  %228 = load i8, i8* %arrayidx269, align 1, !dbg !8159
  call void @glColor3ub(i8 zeroext %224, i8 zeroext %226, i8 zeroext %228), !dbg !8160
  br label %if.end270, !dbg !8160

if.end270:                                        ; preds = %if.then266, %if.then264
  %229 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !8161
  %230 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8162
  %v4271 = getelementptr inbounds %struct.MFace, %struct.MFace* %230, i32 0, i32 3, !dbg !8163
  %231 = load i32, i32* %v4271, align 4, !dbg !8163
  %idxprom272 = zext i32 %231 to i64, !dbg !8161
  %arrayidx273 = getelementptr inbounds %struct.MVert, %struct.MVert* %229, i64 %idxprom272, !dbg !8161
  %no274 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx273, i32 0, i32 1, !dbg !8164
  %arraydecay275 = getelementptr inbounds [3 x i16], [3 x i16]* %no274, i64 0, i64 0, !dbg !8161
  call void @glNormal3sv(i16* %arraydecay275), !dbg !8165
  %232 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !8166
  %233 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8167
  %v4276 = getelementptr inbounds %struct.MFace, %struct.MFace* %233, i32 0, i32 3, !dbg !8168
  %234 = load i32, i32* %v4276, align 4, !dbg !8168
  %idxprom277 = zext i32 %234 to i64, !dbg !8166
  %arrayidx278 = getelementptr inbounds %struct.MVert, %struct.MVert* %232, i64 %idxprom277, !dbg !8166
  %co279 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx278, i32 0, i32 0, !dbg !8169
  %arraydecay280 = getelementptr inbounds [3 x float], [3 x float]* %co279, i64 0, i64 0, !dbg !8166
  call void @glVertex3fv(float* %arraydecay280), !dbg !8170
  br label %if.end281, !dbg !8171

if.end281:                                        ; preds = %if.end270, %if.end251
  br label %if.end282

if.end282:                                        ; preds = %if.end281, %if.end213
  br label %if.end283

if.end283:                                        ; preds = %if.end282, %if.end113
  call void @glEnd(), !dbg !8172
  %235 = load i32, i32* %draw_option, align 4, !dbg !8173
  %cmp284 = icmp eq i32 %235, 3, !dbg !8175
  br i1 %cmp284, label %if.then286, label %if.end287, !dbg !8176

if.then286:                                       ; preds = %if.end283
  call void @glDisable(i32 2882), !dbg !8177
  br label %if.end287, !dbg !8177

if.end287:                                        ; preds = %if.then286, %if.end283
  br label %if.end288, !dbg !8178

if.end288:                                        ; preds = %if.end287, %if.end43
  %236 = load float*, float** %nors, align 8, !dbg !8179
  %tobool289 = icmp ne float* %236, null, !dbg !8179
  br i1 %tobool289, label %if.then290, label %if.end291, !dbg !8181

if.then290:                                       ; preds = %if.end288
  %237 = load float*, float** %nors, align 8, !dbg !8182
  %add.ptr = getelementptr inbounds float, float* %237, i64 3, !dbg !8182
  store float* %add.ptr, float** %nors, align 8, !dbg !8182
  br label %if.end291, !dbg !8183

if.end291:                                        ; preds = %if.then290, %if.end288
  %238 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !8184
  %tobool292 = icmp ne [4 x [3 x i16]]* %238, null, !dbg !8184
  br i1 %tobool292, label %if.then293, label %if.end294, !dbg !8186

if.then293:                                       ; preds = %if.end291
  %239 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !8187
  %incdec.ptr = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %239, i32 1, !dbg !8187
  store [4 x [3 x i16]]* %incdec.ptr, [4 x [3 x i16]]** %lnors, align 8, !dbg !8187
  br label %if.end294, !dbg !8188

if.end294:                                        ; preds = %if.then293, %if.end291
  br label %for.inc, !dbg !8189

for.inc:                                          ; preds = %if.end294
  %240 = load i32, i32* %i, align 4, !dbg !8190
  %inc = add nsw i32 %240, 1, !dbg !8190
  store i32 %inc, i32* %i, align 4, !dbg !8190
  %241 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8191
  %incdec.ptr295 = getelementptr inbounds %struct.MFace, %struct.MFace* %241, i32 1, !dbg !8191
  store %struct.MFace* %incdec.ptr295, %struct.MFace** %mf, align 8, !dbg !8191
  br label %for.cond, !dbg !8192, !llvm.loop !8193

for.end:                                          ; preds = %for.cond
  br label %if.end406, !dbg !8195

if.else296:                                       ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %prevstart, metadata !8196, metadata !DIExpression()), !dbg !8198
  store i32 0, i32* %prevstart, align 4, !dbg !8198
  %242 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8199
  call void @GPU_vertex_setup(%struct.DerivedMesh* %242), !dbg !8200
  %243 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8201
  call void @GPU_normal_setup(%struct.DerivedMesh* %243), !dbg !8202
  %244 = load i32, i32* %useColors, align 4, !dbg !8203
  %tobool297 = icmp ne i32 %244, 0, !dbg !8203
  br i1 %tobool297, label %land.lhs.true298, label %if.end301, !dbg !8205

land.lhs.true298:                                 ; preds = %if.else296
  %245 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !8206
  %tobool299 = icmp ne %struct.MCol* %245, null, !dbg !8206
  br i1 %tobool299, label %if.then300, label %if.end301, !dbg !8207

if.then300:                                       ; preds = %land.lhs.true298
  %246 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8208
  %247 = load i32, i32* %colType, align 4, !dbg !8210
  call void @GPU_color_setup(%struct.DerivedMesh* %246, i32 %247), !dbg !8211
  br label %if.end301, !dbg !8212

if.end301:                                        ; preds = %if.then300, %land.lhs.true298, %if.else296
  %248 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8213
  %call302 = call zeroext i8 @GPU_buffer_legacy(%struct.DerivedMesh* %248), !dbg !8215
  %tobool303 = icmp ne i8 %call302, 0, !dbg !8215
  br i1 %tobool303, label %if.end405, label %if.then304, !dbg !8216

if.then304:                                       ; preds = %if.end301
  call void @llvm.dbg.declare(metadata i32* %tottri, metadata !8217, metadata !DIExpression()), !dbg !8219
  %249 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8220
  %drawObject = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %249, i32 0, i32 13, !dbg !8221
  %250 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject, align 8, !dbg !8221
  %tot_triangle_point = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %250, i32 0, i32 11, !dbg !8222
  %251 = load i32, i32* %tot_triangle_point, align 4, !dbg !8222
  %div = sdiv i32 %251, 3, !dbg !8223
  store i32 %div, i32* %tottri, align 4, !dbg !8219
  call void @glShadeModel(i32 7425), !dbg !8224
  %252 = load i32, i32* %tottri, align 4, !dbg !8225
  %cmp305 = icmp eq i32 %252, 0, !dbg !8227
  br i1 %cmp305, label %if.then307, label %if.end308, !dbg !8228

if.then307:                                       ; preds = %if.then304
  br label %if.end308, !dbg !8229

if.end308:                                        ; preds = %if.then307, %if.then304
  %253 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !8231
  %cmp309 = icmp eq i32 (i8*, i32)* %253, null, !dbg !8233
  br i1 %cmp309, label %if.then311, label %if.else313, !dbg !8234

if.then311:                                       ; preds = %if.end308
  %254 = load i32, i32* %tottri, align 4, !dbg !8235
  %mul312 = mul nsw i32 %254, 3, !dbg !8237
  call void @glDrawArrays(i32 4, i32 0, i32 %mul312), !dbg !8238
  br label %if.end404, !dbg !8239

if.else313:                                       ; preds = %if.end308
  call void @llvm.dbg.declare(metadata i32* %next_actualFace, metadata !8240, metadata !DIExpression()), !dbg !8242
  %255 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8243
  %drawObject314 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %255, i32 0, i32 13, !dbg !8244
  %256 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject314, align 8, !dbg !8244
  %triangle_to_mface = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %256, i32 0, i32 6, !dbg !8245
  %257 = load i32*, i32** %triangle_to_mface, align 8, !dbg !8245
  %arrayidx315 = getelementptr inbounds i32, i32* %257, i64 0, !dbg !8243
  %258 = load i32, i32* %arrayidx315, align 4, !dbg !8243
  store i32 %258, i32* %next_actualFace, align 4, !dbg !8242
  store i32 0, i32* %i, align 4, !dbg !8246
  br label %for.cond316, !dbg !8248

for.cond316:                                      ; preds = %for.inc401, %if.else313
  %259 = load i32, i32* %i, align 4, !dbg !8249
  %260 = load i32, i32* %tottri, align 4, !dbg !8251
  %cmp317 = icmp slt i32 %259, %260, !dbg !8252
  br i1 %cmp317, label %for.body319, label %for.end403, !dbg !8253

for.body319:                                      ; preds = %for.cond316
  call void @llvm.dbg.declare(metadata i32* %actualFace, metadata !8254, metadata !DIExpression()), !dbg !8256
  %261 = load i32, i32* %next_actualFace, align 4, !dbg !8257
  store i32 %261, i32* %actualFace, align 4, !dbg !8256
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface320, metadata !8258, metadata !DIExpression()), !dbg !8259
  %262 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8260
  %263 = load i32, i32* %actualFace, align 4, !dbg !8261
  %idx.ext = sext i32 %263 to i64, !dbg !8262
  %add.ptr321 = getelementptr inbounds %struct.MFace, %struct.MFace* %262, i64 %idx.ext, !dbg !8262
  store %struct.MFace* %add.ptr321, %struct.MFace** %mface320, align 8, !dbg !8259
  call void @llvm.dbg.declare(metadata i32* %draw_option322, metadata !8263, metadata !DIExpression()), !dbg !8264
  store i32 1, i32* %draw_option322, align 4, !dbg !8264
  call void @llvm.dbg.declare(metadata i32* %flush, metadata !8265, metadata !DIExpression()), !dbg !8266
  store i32 0, i32* %flush, align 4, !dbg !8266
  %264 = load i32, i32* %i, align 4, !dbg !8267
  %265 = load i32, i32* %tottri, align 4, !dbg !8269
  %sub = sub nsw i32 %265, 1, !dbg !8270
  %cmp323 = icmp ne i32 %264, %sub, !dbg !8271
  br i1 %cmp323, label %if.then325, label %if.end331, !dbg !8272

if.then325:                                       ; preds = %for.body319
  %266 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8273
  %drawObject326 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %266, i32 0, i32 13, !dbg !8274
  %267 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject326, align 8, !dbg !8274
  %triangle_to_mface327 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %267, i32 0, i32 6, !dbg !8275
  %268 = load i32*, i32** %triangle_to_mface327, align 8, !dbg !8275
  %269 = load i32, i32* %i, align 4, !dbg !8276
  %add328 = add nsw i32 %269, 1, !dbg !8277
  %idxprom329 = sext i32 %add328 to i64, !dbg !8273
  %arrayidx330 = getelementptr inbounds i32, i32* %268, i64 %idxprom329, !dbg !8273
  %270 = load i32, i32* %arrayidx330, align 4, !dbg !8273
  store i32 %270, i32* %next_actualFace, align 4, !dbg !8278
  br label %if.end331, !dbg !8279

if.end331:                                        ; preds = %if.then325, %for.body319
  %271 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !8280
  %tobool332 = icmp ne i32* %271, null, !dbg !8281
  br i1 %tobool332, label %cond.true333, label %cond.false335, !dbg !8281

cond.true333:                                     ; preds = %if.end331
  %272 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !8282
  %273 = load i32*, i32** %index_mp_to_orig, align 8, !dbg !8283
  %274 = load i32, i32* %actualFace, align 4, !dbg !8284
  %call334 = call i32 @DM_origindex_mface_mpoly(i32* %272, i32* %273, i32 %274), !dbg !8285
  br label %cond.end336, !dbg !8281

cond.false335:                                    ; preds = %if.end331
  %275 = load i32, i32* %actualFace, align 4, !dbg !8286
  br label %cond.end336, !dbg !8281

cond.end336:                                      ; preds = %cond.false335, %cond.true333
  %cond337 = phi i32 [ %call334, %cond.true333 ], [ %275, %cond.false335 ], !dbg !8281
  store i32 %cond337, i32* %orig, align 4, !dbg !8287
  %276 = load i32, i32* %orig, align 4, !dbg !8288
  %cmp338 = icmp eq i32 %276, -1, !dbg !8290
  br i1 %cmp338, label %if.then340, label %if.else345, !dbg !8291

if.then340:                                       ; preds = %cond.end336
  %277 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !8292
  %278 = load %struct.MFace*, %struct.MFace** %mface320, align 8, !dbg !8293
  %mat_nr341 = getelementptr inbounds %struct.MFace, %struct.MFace* %278, i32 0, i32 4, !dbg !8294
  %279 = load i16, i16* %mat_nr341, align 4, !dbg !8294
  %conv342 = sext i16 %279 to i32, !dbg !8293
  %add343 = add nsw i32 %conv342, 1, !dbg !8295
  %call344 = call i32 %277(i32 %add343, i8* null), !dbg !8292
  store i32 %call344, i32* %draw_option322, align 4, !dbg !8296
  br label %if.end351, !dbg !8297

if.else345:                                       ; preds = %cond.end336
  %280 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !8298
  %cmp346 = icmp ne i32 (i8*, i32)* %280, null, !dbg !8300
  br i1 %cmp346, label %if.then348, label %if.end350, !dbg !8301

if.then348:                                       ; preds = %if.else345
  %281 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !8302
  %282 = load i8*, i8** %userData.addr, align 8, !dbg !8303
  %283 = load i32, i32* %orig, align 4, !dbg !8304
  %call349 = call i32 %281(i8* %282, i32 %283), !dbg !8302
  store i32 %call349, i32* %draw_option322, align 4, !dbg !8305
  br label %if.end350, !dbg !8306

if.end350:                                        ; preds = %if.then348, %if.else345
  br label %if.end351

if.end351:                                        ; preds = %if.end350, %if.then340
  %284 = load i32, i32* %draw_option322, align 4, !dbg !8307
  %cmp352 = icmp eq i32 %284, 3, !dbg !8309
  br i1 %cmp352, label %if.then354, label %if.end355, !dbg !8310

if.then354:                                       ; preds = %if.end351
  call void @glEnable(i32 2882), !dbg !8311
  call void @glPolygonStipple(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @stipple_quarttone, i64 0, i64 0)), !dbg !8313
  br label %if.end355, !dbg !8314

if.end355:                                        ; preds = %if.then354, %if.end351
  %285 = load i32, i32* %draw_option322, align 4, !dbg !8315
  %cmp356 = icmp eq i32 %285, 0, !dbg !8315
  br i1 %cmp356, label %lor.end, label %lor.lhs.false358, !dbg !8315

lor.lhs.false358:                                 ; preds = %if.end355
  %286 = load i32, i32* %draw_option322, align 4, !dbg !8315
  %cmp359 = icmp eq i32 %286, 3, !dbg !8315
  br i1 %cmp359, label %lor.end, label %lor.rhs, !dbg !8316

lor.rhs:                                          ; preds = %lor.lhs.false358
  %287 = load i32, i32* %i, align 4, !dbg !8317
  %288 = load i32, i32* %tottri, align 4, !dbg !8318
  %sub361 = sub nsw i32 %288, 1, !dbg !8319
  %cmp362 = icmp eq i32 %287, %sub361, !dbg !8320
  br label %lor.end, !dbg !8316

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false358, %if.end355
  %289 = phi i1 [ true, %lor.lhs.false358 ], [ true, %if.end355 ], [ %cmp362, %lor.rhs ]
  %lor.ext = zext i1 %289 to i32, !dbg !8316
  store i32 %lor.ext, i32* %flush, align 4, !dbg !8321
  %290 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8322
  %291 = load i32, i32* %actualFace, align 4, !dbg !8323
  %idxprom364 = sext i32 %291 to i64, !dbg !8322
  %arrayidx365 = getelementptr inbounds %struct.MFace, %struct.MFace* %290, i64 %idxprom364, !dbg !8322
  %mat_nr366 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx365, i32 0, i32 4, !dbg !8324
  %292 = load i16, i16* %mat_nr366, align 4, !dbg !8324
  %conv367 = sext i16 %292 to i32, !dbg !8322
  %293 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8325
  %294 = load i32, i32* %next_actualFace, align 4, !dbg !8326
  %idxprom368 = sext i32 %294 to i64, !dbg !8325
  %arrayidx369 = getelementptr inbounds %struct.MFace, %struct.MFace* %293, i64 %idxprom368, !dbg !8325
  %mat_nr370 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx369, i32 0, i32 4, !dbg !8327
  %295 = load i16, i16* %mat_nr370, align 4, !dbg !8327
  %conv371 = sext i16 %295 to i32, !dbg !8325
  %cmp372 = icmp ne i32 %conv367, %conv371, !dbg !8328
  %conv373 = zext i1 %cmp372 to i32, !dbg !8328
  %296 = load i32, i32* %flush, align 4, !dbg !8329
  %or = or i32 %296, %conv373, !dbg !8329
  store i32 %or, i32* %flush, align 4, !dbg !8329
  %297 = load i32, i32* %flush, align 4, !dbg !8330
  %tobool374 = icmp ne i32 %297, 0, !dbg !8330
  br i1 %tobool374, label %if.end382, label %land.lhs.true375, !dbg !8332

land.lhs.true375:                                 ; preds = %lor.end
  %298 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8, !dbg !8333
  %tobool376 = icmp ne i32 (i8*, i32, i32)* %298, null, !dbg !8333
  br i1 %tobool376, label %if.then377, label %if.end382, !dbg !8334

if.then377:                                       ; preds = %land.lhs.true375
  %299 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8, !dbg !8335
  %300 = load i8*, i8** %userData.addr, align 8, !dbg !8337
  %301 = load i32, i32* %actualFace, align 4, !dbg !8338
  %302 = load i32, i32* %next_actualFace, align 4, !dbg !8339
  %call378 = call i32 %299(i8* %300, i32 %301, i32 %302), !dbg !8335
  %cmp379 = icmp eq i32 %call378, 0, !dbg !8340
  %conv380 = zext i1 %cmp379 to i32, !dbg !8340
  %303 = load i32, i32* %flush, align 4, !dbg !8341
  %or381 = or i32 %303, %conv380, !dbg !8341
  store i32 %or381, i32* %flush, align 4, !dbg !8341
  br label %if.end382, !dbg !8342

if.end382:                                        ; preds = %if.then377, %land.lhs.true375, %lor.end
  %304 = load i32, i32* %flush, align 4, !dbg !8343
  %tobool383 = icmp ne i32 %304, 0, !dbg !8343
  br i1 %tobool383, label %if.then384, label %if.end400, !dbg !8345

if.then384:                                       ; preds = %if.end382
  call void @llvm.dbg.declare(metadata i32* %first, metadata !8346, metadata !DIExpression()), !dbg !8348
  %305 = load i32, i32* %prevstart, align 4, !dbg !8349
  %mul385 = mul nsw i32 %305, 3, !dbg !8350
  store i32 %mul385, i32* %first, align 4, !dbg !8348
  call void @llvm.dbg.declare(metadata i32* %count, metadata !8351, metadata !DIExpression()), !dbg !8352
  %306 = load i32, i32* %i, align 4, !dbg !8353
  %307 = load i32, i32* %prevstart, align 4, !dbg !8354
  %sub386 = sub nsw i32 %306, %307, !dbg !8355
  %308 = load i32, i32* %draw_option322, align 4, !dbg !8356
  %cmp387 = icmp ne i32 %308, 0, !dbg !8357
  %309 = zext i1 %cmp387 to i64, !dbg !8356
  %cond389 = select i1 %cmp387, i32 1, i32 0, !dbg !8356
  %add390 = add nsw i32 %sub386, %cond389, !dbg !8358
  %mul391 = mul nsw i32 %add390, 3, !dbg !8359
  store i32 %mul391, i32* %count, align 4, !dbg !8352
  %310 = load i32, i32* %count, align 4, !dbg !8360
  %tobool392 = icmp ne i32 %310, 0, !dbg !8360
  br i1 %tobool392, label %if.then393, label %if.end394, !dbg !8362

if.then393:                                       ; preds = %if.then384
  %311 = load i32, i32* %first, align 4, !dbg !8363
  %312 = load i32, i32* %count, align 4, !dbg !8364
  call void @glDrawArrays(i32 4, i32 %311, i32 %312), !dbg !8365
  br label %if.end394, !dbg !8365

if.end394:                                        ; preds = %if.then393, %if.then384
  %313 = load i32, i32* %i, align 4, !dbg !8366
  %add395 = add nsw i32 %313, 1, !dbg !8367
  store i32 %add395, i32* %prevstart, align 4, !dbg !8368
  %314 = load i32, i32* %draw_option322, align 4, !dbg !8369
  %cmp396 = icmp eq i32 %314, 3, !dbg !8371
  br i1 %cmp396, label %if.then398, label %if.end399, !dbg !8372

if.then398:                                       ; preds = %if.end394
  call void @glDisable(i32 2882), !dbg !8373
  br label %if.end399, !dbg !8373

if.end399:                                        ; preds = %if.then398, %if.end394
  br label %if.end400, !dbg !8374

if.end400:                                        ; preds = %if.end399, %if.end382
  br label %for.inc401, !dbg !8375

for.inc401:                                       ; preds = %if.end400
  %315 = load i32, i32* %i, align 4, !dbg !8376
  %inc402 = add nsw i32 %315, 1, !dbg !8376
  store i32 %inc402, i32* %i, align 4, !dbg !8376
  br label %for.cond316, !dbg !8377, !llvm.loop !8378

for.end403:                                       ; preds = %for.cond316
  br label %if.end404

if.end404:                                        ; preds = %for.end403, %if.then311
  call void @glShadeModel(i32 7424), !dbg !8380
  br label %if.end405, !dbg !8381

if.end405:                                        ; preds = %if.end404, %if.end301
  call void @GPU_buffer_unbind(), !dbg !8382
  br label %if.end406

if.end406:                                        ; preds = %if.end405, %for.end
  ret void, !dbg !8383
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_drawMappedFacesTex(%struct.DerivedMesh* %dm, i32 (i8*, i32)* %setDrawOptions, i32 (i8*, i32, i32)* %compareDrawOptions, i8* %userData, i32 %flag) #0 !dbg !8384 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %setDrawOptions.addr = alloca i32 (i8*, i32)*, align 8
  %compareDrawOptions.addr = alloca i32 (i8*, i32, i32)*, align 8
  %userData.addr = alloca i8*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !8385, metadata !DIExpression()), !dbg !8386
  store i32 (i8*, i32)* %setDrawOptions, i32 (i8*, i32)** %setDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32)** %setDrawOptions.addr, metadata !8387, metadata !DIExpression()), !dbg !8388
  store i32 (i8*, i32, i32)* %compareDrawOptions, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32, i32)** %compareDrawOptions.addr, metadata !8389, metadata !DIExpression()), !dbg !8390
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !8391, metadata !DIExpression()), !dbg !8392
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !8393, metadata !DIExpression()), !dbg !8394
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8395
  %1 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !8396
  %2 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8, !dbg !8397
  %3 = load i8*, i8** %userData.addr, align 8, !dbg !8398
  %4 = load i32, i32* %flag.addr, align 4, !dbg !8399
  call void @cdDM_drawFacesTex_common(%struct.DerivedMesh* %0, i32 (%struct.MTFace*, i8, i32)* null, i32 (i8*, i32)* %1, i32 (i8*, i32, i32)* %2, i8* %3, i32 %4), !dbg !8400
  ret void, !dbg !8401
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_drawMappedFacesGLSL(%struct.DerivedMesh* %dm, i32 (i32, i8*)* %setMaterial, i32 (i8*, i32)* %setDrawOptions, i8* %userData) #0 !dbg !8402 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %setMaterial.addr = alloca i32 (i32, i8*)*, align 8
  %setDrawOptions.addr = alloca i32 (i8*, i32)*, align 8
  %userData.addr = alloca i8*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %gattribs = alloca %struct.GPUVertexAttribs, align 4
  %attribs = alloca %struct.DMVertexAttribs, align 8
  %mvert = alloca %struct.MVert*, align 8
  %mface = alloca %struct.MFace*, align 8
  %nors = alloca [3 x float]*, align 8
  %lnors = alloca [4 x [3 x i16]]*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %matnr = alloca i32, align 4
  %new_matnr = alloca i32, align 4
  %do_draw = alloca i8, align 1
  %orig = alloca i32, align 4
  %index_mf_to_mpoly = alloca i32*, align 8
  %index_mp_to_orig = alloca i32*, align 8
  %smoothnormal = alloca i8, align 1
  %ln1 = alloca [3 x i16]*, align 8
  %ln2 = alloca [3 x i16]*, align 8
  %ln3 = alloca [3 x i16]*, align 8
  %ln4 = alloca [3 x i16]*, align 8
  %nor = alloca [3 x float], align 4
  %buffer = alloca %struct.GPUBuffer*, align 8
  %varray = alloca i8*, align 8
  %numdata = alloca i32, align 4
  %elementsize = alloca i32, align 4
  %offset = alloca i32, align 4
  %start = alloca i32, align 4
  %numfaces = alloca i32, align 4
  %curface = alloca i32, align 4
  %i = alloca i32, align 4
  %mf = alloca %struct.MFace*, align 8
  %datatypes = alloca [32 x %struct.GPUAttrib], align 16
  %tf = alloca %struct.MTFace*, align 8
  %cp = alloca %struct.MCol*, align 8
  %col = alloca [4 x i8], align 1
  %tang475 = alloca float*, align 8
  %tf585 = alloca %struct.MTFace*, align 8
  %cp637 = alloca %struct.MCol*, align 8
  %col646 = alloca [4 x i8], align 1
  %tang722 = alloca float*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !8403, metadata !DIExpression()), !dbg !8404
  store i32 (i32, i8*)* %setMaterial, i32 (i32, i8*)** %setMaterial.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %setMaterial.addr, metadata !8405, metadata !DIExpression()), !dbg !8406
  store i32 (i8*, i32)* %setDrawOptions, i32 (i8*, i32)** %setDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32)** %setDrawOptions.addr, metadata !8407, metadata !DIExpression()), !dbg !8408
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !8409, metadata !DIExpression()), !dbg !8410
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !8411, metadata !DIExpression()), !dbg !8412
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8413
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !8414
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !8412
  call void @llvm.dbg.declare(metadata %struct.GPUVertexAttribs* %gattribs, metadata !8415, metadata !DIExpression()), !dbg !8430
  call void @llvm.dbg.declare(metadata %struct.DMVertexAttribs* %attribs, metadata !8431, metadata !DIExpression()), !dbg !8467
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !8468, metadata !DIExpression()), !dbg !8471
  %2 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !8472
  %mvert1 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %2, i32 0, i32 1, !dbg !8473
  %3 = load %struct.MVert*, %struct.MVert** %mvert1, align 8, !dbg !8473
  store %struct.MVert* %3, %struct.MVert** %mvert, align 8, !dbg !8471
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !8474, metadata !DIExpression()), !dbg !8477
  %4 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !8478
  %mface2 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %4, i32 0, i32 3, !dbg !8479
  %5 = load %struct.MFace*, %struct.MFace** %mface2, align 8, !dbg !8479
  store %struct.MFace* %5, %struct.MFace** %mface, align 8, !dbg !8477
  call void @llvm.dbg.declare(metadata [3 x float]** %nors, metadata !8480, metadata !DIExpression()), !dbg !8483
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8484
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 52, !dbg !8485
  %7 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !8485
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8486
  %call = call i8* %7(%struct.DerivedMesh* %8, i32 8), !dbg !8484
  %9 = bitcast i8* %call to [3 x float]*, !dbg !8484
  store [3 x float]* %9, [3 x float]** %nors, align 8, !dbg !8483
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %lnors, metadata !8487, metadata !DIExpression()), !dbg !8488
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8489
  %getTessFaceDataArray3 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 52, !dbg !8490
  %11 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray3, align 8, !dbg !8490
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8491
  %call4 = call i8* %11(%struct.DerivedMesh* %12, i32 40), !dbg !8489
  %13 = bitcast i8* %call4 to [4 x [3 x i16]]*, !dbg !8489
  store [4 x [3 x i16]]* %13, [4 x [3 x i16]]** %lnors, align 8, !dbg !8488
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8492, metadata !DIExpression()), !dbg !8493
  call void @llvm.dbg.declare(metadata i32* %b, metadata !8494, metadata !DIExpression()), !dbg !8495
  call void @llvm.dbg.declare(metadata i32* %matnr, metadata !8496, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.declare(metadata i32* %new_matnr, metadata !8498, metadata !DIExpression()), !dbg !8499
  call void @llvm.dbg.declare(metadata i8* %do_draw, metadata !8500, metadata !DIExpression()), !dbg !8501
  call void @llvm.dbg.declare(metadata i32* %orig, metadata !8502, metadata !DIExpression()), !dbg !8503
  call void @llvm.dbg.declare(metadata i32** %index_mf_to_mpoly, metadata !8504, metadata !DIExpression()), !dbg !8505
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8506
  %getTessFaceDataArray5 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %14, i32 0, i32 52, !dbg !8507
  %15 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray5, align 8, !dbg !8507
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8508
  %call6 = call i8* %15(%struct.DerivedMesh* %16, i32 7), !dbg !8506
  %17 = bitcast i8* %call6 to i32*, !dbg !8506
  store i32* %17, i32** %index_mf_to_mpoly, align 8, !dbg !8505
  call void @llvm.dbg.declare(metadata i32** %index_mp_to_orig, metadata !8509, metadata !DIExpression()), !dbg !8510
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8511
  %getPolyDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %18, i32 0, i32 54, !dbg !8512
  %19 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getPolyDataArray, align 8, !dbg !8512
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8513
  %call7 = call i8* %19(%struct.DerivedMesh* %20, i32 7), !dbg !8511
  %21 = bitcast i8* %call7 to i32*, !dbg !8511
  store i32* %21, i32** %index_mp_to_orig, align 8, !dbg !8510
  %22 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !8514
  %cmp = icmp eq i32* %22, null, !dbg !8516
  br i1 %cmp, label %if.then, label %if.end, !dbg !8517

if.then:                                          ; preds = %entry
  store i32* null, i32** %index_mp_to_orig, align 8, !dbg !8518
  br label %if.end, !dbg !8520

if.end:                                           ; preds = %if.then, %entry
  %23 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !8521
  %pbvh = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %23, i32 0, i32 6, !dbg !8523
  %24 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !8523
  %tobool = icmp ne %struct.PBVH* %24, null, !dbg !8521
  br i1 %tobool, label %land.lhs.true, label %if.end20, !dbg !8524

land.lhs.true:                                    ; preds = %if.end
  %25 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !8525
  %pbvh_draw = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %25, i32 0, i32 7, !dbg !8526
  %26 = load i8, i8* %pbvh_draw, align 8, !dbg !8526
  %conv = zext i8 %26 to i32, !dbg !8525
  %tobool8 = icmp ne i32 %conv, 0, !dbg !8525
  br i1 %tobool8, label %land.lhs.true9, label %if.end20, !dbg !8527

land.lhs.true9:                                   ; preds = %land.lhs.true
  %27 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !8528
  %pbvh10 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %27, i32 0, i32 6, !dbg !8529
  %28 = load %struct.PBVH*, %struct.PBVH** %pbvh10, align 8, !dbg !8529
  %call11 = call i32 @BKE_pbvh_type(%struct.PBVH* %28), !dbg !8530
  %cmp12 = icmp eq i32 %call11, 2, !dbg !8531
  br i1 %cmp12, label %if.then14, label %if.end20, !dbg !8532

if.then14:                                        ; preds = %land.lhs.true9
  %29 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8533
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %29, i32 0, i32 7, !dbg !8536
  %30 = load i32, i32* %numTessFaceData, align 8, !dbg !8536
  %tobool15 = icmp ne i32 %30, 0, !dbg !8533
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !8537

if.then16:                                        ; preds = %if.then14
  %31 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !8538
  %32 = bitcast %struct.GPUVertexAttribs* %gattribs to i8*, !dbg !8540
  %call17 = call i32 %31(i32 1, i8* %32), !dbg !8538
  %33 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !8541
  %pbvh18 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %33, i32 0, i32 6, !dbg !8542
  %34 = load %struct.PBVH*, %struct.PBVH** %pbvh18, align 8, !dbg !8542
  call void @BKE_pbvh_draw(%struct.PBVH* %34, [4 x float]* null, [3 x float]* null, i32 (i32, i8*)* null, i8 zeroext 0), !dbg !8543
  br label %if.end19, !dbg !8544

if.end19:                                         ; preds = %if.then16, %if.then14
  br label %return, !dbg !8545

if.end20:                                         ; preds = %land.lhs.true9, %land.lhs.true, %if.end
  %35 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8546
  call void @cdDM_update_normals_from_pbvh(%struct.DerivedMesh* %35), !dbg !8547
  store i32 -1, i32* %matnr, align 4, !dbg !8548
  store i8 0, i8* %do_draw, align 1, !dbg !8549
  call void @glShadeModel(i32 7425), !dbg !8550
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8551
  %call21 = call zeroext i8 @GPU_buffer_legacy(%struct.DerivedMesh* %36), !dbg !8553
  %conv22 = zext i8 %call21 to i32, !dbg !8553
  %tobool23 = icmp ne i32 %conv22, 0, !dbg !8553
  br i1 %tobool23, label %if.then26, label %lor.lhs.false, !dbg !8554

lor.lhs.false:                                    ; preds = %if.end20
  %37 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !8555
  %cmp24 = icmp ne i32 (i8*, i32)* %37, null, !dbg !8556
  br i1 %cmp24, label %if.then26, label %if.else135, !dbg !8557

if.then26:                                        ; preds = %lor.lhs.false, %if.end20
  %38 = bitcast %struct.DMVertexAttribs* %attribs to i8*, !dbg !8558
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 376, i1 false), !dbg !8558
  call void @glBegin(i32 7), !dbg !8560
  store i32 0, i32* %a, align 4, !dbg !8561
  br label %for.cond, !dbg !8563

for.cond:                                         ; preds = %for.inc, %if.then26
  %39 = load i32, i32* %a, align 4, !dbg !8564
  %40 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8566
  %numTessFaceData27 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %40, i32 0, i32 7, !dbg !8567
  %41 = load i32, i32* %numTessFaceData27, align 8, !dbg !8567
  %cmp28 = icmp slt i32 %39, %41, !dbg !8568
  br i1 %cmp28, label %for.body, label %for.end, !dbg !8569

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %smoothnormal, metadata !8570, metadata !DIExpression()), !dbg !8572
  %42 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !8573
  %tobool30 = icmp ne [4 x [3 x i16]]* %42, null, !dbg !8573
  br i1 %tobool30, label %lor.end, label %lor.rhs, !dbg !8574

lor.rhs:                                          ; preds = %for.body
  %43 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8575
  %flag = getelementptr inbounds %struct.MFace, %struct.MFace* %43, i32 0, i32 6, !dbg !8576
  %44 = load i8, i8* %flag, align 1, !dbg !8576
  %conv31 = zext i8 %44 to i32, !dbg !8575
  %and = and i32 %conv31, 1, !dbg !8577
  %tobool32 = icmp ne i32 %and, 0, !dbg !8574
  br label %lor.end, !dbg !8574

lor.end:                                          ; preds = %lor.rhs, %for.body
  %45 = phi i1 [ true, %for.body ], [ %tobool32, %lor.rhs ]
  %lor.ext = zext i1 %45 to i32, !dbg !8574
  %conv33 = trunc i32 %lor.ext to i8, !dbg !8573
  store i8 %conv33, i8* %smoothnormal, align 1, !dbg !8572
  call void @llvm.dbg.declare(metadata [3 x i16]** %ln1, metadata !8578, metadata !DIExpression()), !dbg !8581
  store [3 x i16]* null, [3 x i16]** %ln1, align 8, !dbg !8581
  call void @llvm.dbg.declare(metadata [3 x i16]** %ln2, metadata !8582, metadata !DIExpression()), !dbg !8583
  store [3 x i16]* null, [3 x i16]** %ln2, align 8, !dbg !8583
  call void @llvm.dbg.declare(metadata [3 x i16]** %ln3, metadata !8584, metadata !DIExpression()), !dbg !8585
  store [3 x i16]* null, [3 x i16]** %ln3, align 8, !dbg !8585
  call void @llvm.dbg.declare(metadata [3 x i16]** %ln4, metadata !8586, metadata !DIExpression()), !dbg !8587
  store [3 x i16]* null, [3 x i16]** %ln4, align 8, !dbg !8587
  %46 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8588
  %mat_nr = getelementptr inbounds %struct.MFace, %struct.MFace* %46, i32 0, i32 4, !dbg !8589
  %47 = load i16, i16* %mat_nr, align 4, !dbg !8589
  %conv34 = sext i16 %47 to i32, !dbg !8588
  %add = add nsw i32 %conv34, 1, !dbg !8590
  store i32 %add, i32* %new_matnr, align 4, !dbg !8591
  %48 = load i32, i32* %new_matnr, align 4, !dbg !8592
  %49 = load i32, i32* %matnr, align 4, !dbg !8594
  %cmp35 = icmp ne i32 %48, %49, !dbg !8595
  br i1 %cmp35, label %if.then37, label %if.end43, !dbg !8596

if.then37:                                        ; preds = %lor.end
  call void @glEnd(), !dbg !8597
  %50 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !8599
  %51 = load i32, i32* %new_matnr, align 4, !dbg !8600
  store i32 %51, i32* %matnr, align 4, !dbg !8601
  %52 = bitcast %struct.GPUVertexAttribs* %gattribs to i8*, !dbg !8602
  %call38 = call i32 %50(i32 %51, i8* %52), !dbg !8599
  %conv39 = trunc i32 %call38 to i8, !dbg !8599
  store i8 %conv39, i8* %do_draw, align 1, !dbg !8603
  %53 = load i8, i8* %do_draw, align 1, !dbg !8604
  %tobool40 = icmp ne i8 %53, 0, !dbg !8604
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !8606

if.then41:                                        ; preds = %if.then37
  %54 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8607
  call void @DM_vertex_attributes_from_gpu(%struct.DerivedMesh* %54, %struct.GPUVertexAttribs* %gattribs, %struct.DMVertexAttribs* %attribs), !dbg !8608
  br label %if.end42, !dbg !8608

if.end42:                                         ; preds = %if.then41, %if.then37
  call void @glBegin(i32 7), !dbg !8609
  br label %if.end43, !dbg !8610

if.end43:                                         ; preds = %if.end42, %lor.end
  %55 = load i8, i8* %do_draw, align 1, !dbg !8611
  %tobool44 = icmp ne i8 %55, 0, !dbg !8611
  br i1 %tobool44, label %if.else, label %if.then45, !dbg !8613

if.then45:                                        ; preds = %if.end43
  br label %for.inc, !dbg !8614

if.else:                                          ; preds = %if.end43
  %56 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !8616
  %tobool46 = icmp ne i32 (i8*, i32)* %56, null, !dbg !8616
  br i1 %tobool46, label %if.then47, label %if.end60, !dbg !8618

if.then47:                                        ; preds = %if.else
  %57 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !8619
  %tobool48 = icmp ne i32* %57, null, !dbg !8621
  br i1 %tobool48, label %cond.true, label %cond.false, !dbg !8621

cond.true:                                        ; preds = %if.then47
  %58 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !8622
  %59 = load i32*, i32** %index_mp_to_orig, align 8, !dbg !8623
  %60 = load i32, i32* %a, align 4, !dbg !8624
  %call49 = call i32 @DM_origindex_mface_mpoly(i32* %58, i32* %59, i32 %60), !dbg !8625
  br label %cond.end, !dbg !8621

cond.false:                                       ; preds = %if.then47
  %61 = load i32, i32* %a, align 4, !dbg !8626
  br label %cond.end, !dbg !8621

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call49, %cond.true ], [ %61, %cond.false ], !dbg !8621
  store i32 %cond, i32* %orig, align 4, !dbg !8627
  %62 = load i32, i32* %orig, align 4, !dbg !8628
  %cmp50 = icmp eq i32 %62, -1, !dbg !8630
  br i1 %cmp50, label %if.then52, label %if.else53, !dbg !8631

if.then52:                                        ; preds = %cond.end
  br label %if.end59, !dbg !8632

if.else53:                                        ; preds = %cond.end
  %63 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !8634
  %64 = load i8*, i8** %userData.addr, align 8, !dbg !8636
  %65 = load i32, i32* %orig, align 4, !dbg !8637
  %call54 = call i32 %63(i8* %64, i32 %65), !dbg !8634
  %cmp55 = icmp eq i32 %call54, 0, !dbg !8638
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !8639

if.then57:                                        ; preds = %if.else53
  br label %for.inc, !dbg !8640

if.end58:                                         ; preds = %if.else53
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.then52
  br label %if.end60, !dbg !8641

if.end60:                                         ; preds = %if.end59, %if.else
  br label %if.end61

if.end61:                                         ; preds = %if.end60
  %66 = load i8, i8* %smoothnormal, align 1, !dbg !8642
  %tobool62 = icmp ne i8 %66, 0, !dbg !8642
  br i1 %tobool62, label %if.else108, label %if.then63, !dbg !8644

if.then63:                                        ; preds = %if.end61
  %67 = load [3 x float]*, [3 x float]** %nors, align 8, !dbg !8645
  %tobool64 = icmp ne [3 x float]* %67, null, !dbg !8645
  br i1 %tobool64, label %if.then65, label %if.else66, !dbg !8648

if.then65:                                        ; preds = %if.then63
  %68 = load [3 x float]*, [3 x float]** %nors, align 8, !dbg !8649
  %69 = load i32, i32* %a, align 4, !dbg !8651
  %idxprom = sext i32 %69 to i64, !dbg !8649
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %68, i64 %idxprom, !dbg !8649
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !8649
  call void @glNormal3fv(float* %arraydecay), !dbg !8652
  br label %if.end107, !dbg !8653

if.else66:                                        ; preds = %if.then63
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !8654, metadata !DIExpression()), !dbg !8656
  %70 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8657
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %70, i32 0, i32 3, !dbg !8659
  %71 = load i32, i32* %v4, align 4, !dbg !8659
  %tobool67 = icmp ne i32 %71, 0, !dbg !8657
  br i1 %tobool67, label %if.then68, label %if.else87, !dbg !8660

if.then68:                                        ; preds = %if.else66
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !8661
  %72 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8663
  %73 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8664
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %73, i32 0, i32 0, !dbg !8665
  %74 = load i32, i32* %v1, align 4, !dbg !8665
  %idxprom70 = zext i32 %74 to i64, !dbg !8663
  %arrayidx71 = getelementptr inbounds %struct.MVert, %struct.MVert* %72, i64 %idxprom70, !dbg !8663
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx71, i32 0, i32 0, !dbg !8666
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !8663
  %75 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8667
  %76 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8668
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %76, i32 0, i32 1, !dbg !8669
  %77 = load i32, i32* %v2, align 4, !dbg !8669
  %idxprom73 = zext i32 %77 to i64, !dbg !8667
  %arrayidx74 = getelementptr inbounds %struct.MVert, %struct.MVert* %75, i64 %idxprom73, !dbg !8667
  %co75 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx74, i32 0, i32 0, !dbg !8670
  %arraydecay76 = getelementptr inbounds [3 x float], [3 x float]* %co75, i64 0, i64 0, !dbg !8667
  %78 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8671
  %79 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8672
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %79, i32 0, i32 2, !dbg !8673
  %80 = load i32, i32* %v3, align 4, !dbg !8673
  %idxprom77 = zext i32 %80 to i64, !dbg !8671
  %arrayidx78 = getelementptr inbounds %struct.MVert, %struct.MVert* %78, i64 %idxprom77, !dbg !8671
  %co79 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx78, i32 0, i32 0, !dbg !8674
  %arraydecay80 = getelementptr inbounds [3 x float], [3 x float]* %co79, i64 0, i64 0, !dbg !8671
  %81 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8675
  %82 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8676
  %v481 = getelementptr inbounds %struct.MFace, %struct.MFace* %82, i32 0, i32 3, !dbg !8677
  %83 = load i32, i32* %v481, align 4, !dbg !8677
  %idxprom82 = zext i32 %83 to i64, !dbg !8675
  %arrayidx83 = getelementptr inbounds %struct.MVert, %struct.MVert* %81, i64 %idxprom82, !dbg !8675
  %co84 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx83, i32 0, i32 0, !dbg !8678
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %co84, i64 0, i64 0, !dbg !8675
  %call86 = call float @normal_quad_v3(float* %arraydecay69, float* %arraydecay72, float* %arraydecay76, float* %arraydecay80, float* %arraydecay85), !dbg !8679
  br label %if.end105, !dbg !8680

if.else87:                                        ; preds = %if.else66
  %arraydecay88 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !8681
  %84 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8683
  %85 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8684
  %v189 = getelementptr inbounds %struct.MFace, %struct.MFace* %85, i32 0, i32 0, !dbg !8685
  %86 = load i32, i32* %v189, align 4, !dbg !8685
  %idxprom90 = zext i32 %86 to i64, !dbg !8683
  %arrayidx91 = getelementptr inbounds %struct.MVert, %struct.MVert* %84, i64 %idxprom90, !dbg !8683
  %co92 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx91, i32 0, i32 0, !dbg !8686
  %arraydecay93 = getelementptr inbounds [3 x float], [3 x float]* %co92, i64 0, i64 0, !dbg !8683
  %87 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8687
  %88 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8688
  %v294 = getelementptr inbounds %struct.MFace, %struct.MFace* %88, i32 0, i32 1, !dbg !8689
  %89 = load i32, i32* %v294, align 4, !dbg !8689
  %idxprom95 = zext i32 %89 to i64, !dbg !8687
  %arrayidx96 = getelementptr inbounds %struct.MVert, %struct.MVert* %87, i64 %idxprom95, !dbg !8687
  %co97 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx96, i32 0, i32 0, !dbg !8690
  %arraydecay98 = getelementptr inbounds [3 x float], [3 x float]* %co97, i64 0, i64 0, !dbg !8687
  %90 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8691
  %91 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8692
  %v399 = getelementptr inbounds %struct.MFace, %struct.MFace* %91, i32 0, i32 2, !dbg !8693
  %92 = load i32, i32* %v399, align 4, !dbg !8693
  %idxprom100 = zext i32 %92 to i64, !dbg !8691
  %arrayidx101 = getelementptr inbounds %struct.MVert, %struct.MVert* %90, i64 %idxprom100, !dbg !8691
  %co102 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx101, i32 0, i32 0, !dbg !8694
  %arraydecay103 = getelementptr inbounds [3 x float], [3 x float]* %co102, i64 0, i64 0, !dbg !8691
  %call104 = call float @normal_tri_v3(float* %arraydecay88, float* %arraydecay93, float* %arraydecay98, float* %arraydecay103), !dbg !8695
  br label %if.end105

if.end105:                                        ; preds = %if.else87, %if.then68
  %arraydecay106 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !8696
  call void @glNormal3fv(float* %arraydecay106), !dbg !8697
  br label %if.end107

if.end107:                                        ; preds = %if.end105, %if.then65
  br label %if.end124, !dbg !8698

if.else108:                                       ; preds = %if.end61
  %93 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !8699
  %tobool109 = icmp ne [4 x [3 x i16]]* %93, null, !dbg !8699
  br i1 %tobool109, label %if.then110, label %if.end123, !dbg !8701

if.then110:                                       ; preds = %if.else108
  %94 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !8702
  %95 = load i32, i32* %a, align 4, !dbg !8704
  %idxprom111 = sext i32 %95 to i64, !dbg !8702
  %arrayidx112 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %94, i64 %idxprom111, !dbg !8702
  %arrayidx113 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx112, i64 0, i64 0, !dbg !8702
  store [3 x i16]* %arrayidx113, [3 x i16]** %ln1, align 8, !dbg !8705
  %96 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !8706
  %97 = load i32, i32* %a, align 4, !dbg !8707
  %idxprom114 = sext i32 %97 to i64, !dbg !8706
  %arrayidx115 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %96, i64 %idxprom114, !dbg !8706
  %arrayidx116 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx115, i64 0, i64 1, !dbg !8706
  store [3 x i16]* %arrayidx116, [3 x i16]** %ln2, align 8, !dbg !8708
  %98 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !8709
  %99 = load i32, i32* %a, align 4, !dbg !8710
  %idxprom117 = sext i32 %99 to i64, !dbg !8709
  %arrayidx118 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %98, i64 %idxprom117, !dbg !8709
  %arrayidx119 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx118, i64 0, i64 2, !dbg !8709
  store [3 x i16]* %arrayidx119, [3 x i16]** %ln3, align 8, !dbg !8711
  %100 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !8712
  %101 = load i32, i32* %a, align 4, !dbg !8713
  %idxprom120 = sext i32 %101 to i64, !dbg !8712
  %arrayidx121 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %100, i64 %idxprom120, !dbg !8712
  %arrayidx122 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx121, i64 0, i64 3, !dbg !8712
  store [3 x i16]* %arrayidx122, [3 x i16]** %ln4, align 8, !dbg !8714
  br label %if.end123, !dbg !8715

if.end123:                                        ; preds = %if.then110, %if.else108
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.end107
  %102 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8716
  %103 = load i32, i32* %a, align 4, !dbg !8717
  %104 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8718
  %v1125 = getelementptr inbounds %struct.MFace, %struct.MFace* %104, i32 0, i32 0, !dbg !8719
  %105 = load i32, i32* %v1125, align 4, !dbg !8719
  %106 = load [3 x i16]*, [3 x i16]** %ln1, align 8, !dbg !8720
  %107 = load i8, i8* %smoothnormal, align 1, !dbg !8721
  call void @cddm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, %struct.MVert* %102, i32 %103, i32 %105, i32 0, [3 x i16]* %106, i8 zeroext %107), !dbg !8722
  %108 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8723
  %109 = load i32, i32* %a, align 4, !dbg !8724
  %110 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8725
  %v2126 = getelementptr inbounds %struct.MFace, %struct.MFace* %110, i32 0, i32 1, !dbg !8726
  %111 = load i32, i32* %v2126, align 4, !dbg !8726
  %112 = load [3 x i16]*, [3 x i16]** %ln2, align 8, !dbg !8727
  %113 = load i8, i8* %smoothnormal, align 1, !dbg !8728
  call void @cddm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, %struct.MVert* %108, i32 %109, i32 %111, i32 1, [3 x i16]* %112, i8 zeroext %113), !dbg !8729
  %114 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8730
  %115 = load i32, i32* %a, align 4, !dbg !8731
  %116 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8732
  %v3127 = getelementptr inbounds %struct.MFace, %struct.MFace* %116, i32 0, i32 2, !dbg !8733
  %117 = load i32, i32* %v3127, align 4, !dbg !8733
  %118 = load [3 x i16]*, [3 x i16]** %ln3, align 8, !dbg !8734
  %119 = load i8, i8* %smoothnormal, align 1, !dbg !8735
  call void @cddm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, %struct.MVert* %114, i32 %115, i32 %117, i32 2, [3 x i16]* %118, i8 zeroext %119), !dbg !8736
  %120 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8737
  %v4128 = getelementptr inbounds %struct.MFace, %struct.MFace* %120, i32 0, i32 3, !dbg !8739
  %121 = load i32, i32* %v4128, align 4, !dbg !8739
  %tobool129 = icmp ne i32 %121, 0, !dbg !8737
  br i1 %tobool129, label %if.then130, label %if.else132, !dbg !8740

if.then130:                                       ; preds = %if.end124
  %122 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8741
  %123 = load i32, i32* %a, align 4, !dbg !8742
  %124 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8743
  %v4131 = getelementptr inbounds %struct.MFace, %struct.MFace* %124, i32 0, i32 3, !dbg !8744
  %125 = load i32, i32* %v4131, align 4, !dbg !8744
  %126 = load [3 x i16]*, [3 x i16]** %ln4, align 8, !dbg !8745
  %127 = load i8, i8* %smoothnormal, align 1, !dbg !8746
  call void @cddm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, %struct.MVert* %122, i32 %123, i32 %125, i32 3, [3 x i16]* %126, i8 zeroext %127), !dbg !8747
  br label %if.end134, !dbg !8747

if.else132:                                       ; preds = %if.end124
  %128 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8748
  %129 = load i32, i32* %a, align 4, !dbg !8749
  %130 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8750
  %v3133 = getelementptr inbounds %struct.MFace, %struct.MFace* %130, i32 0, i32 2, !dbg !8751
  %131 = load i32, i32* %v3133, align 4, !dbg !8751
  %132 = load [3 x i16]*, [3 x i16]** %ln3, align 8, !dbg !8752
  %133 = load i8, i8* %smoothnormal, align 1, !dbg !8753
  call void @cddm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, %struct.MVert* %128, i32 %129, i32 %131, i32 2, [3 x i16]* %132, i8 zeroext %133), !dbg !8754
  br label %if.end134

if.end134:                                        ; preds = %if.else132, %if.then130
  br label %for.inc, !dbg !8755

for.inc:                                          ; preds = %if.end134, %if.then57, %if.then45
  %134 = load i32, i32* %a, align 4, !dbg !8756
  %inc = add nsw i32 %134, 1, !dbg !8756
  store i32 %inc, i32* %a, align 4, !dbg !8756
  %135 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8757
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %135, i32 1, !dbg !8757
  store %struct.MFace* %incdec.ptr, %struct.MFace** %mface, align 8, !dbg !8757
  br label %for.cond, !dbg !8758, !llvm.loop !8759

for.end:                                          ; preds = %for.cond
  call void @glEnd(), !dbg !8761
  br label %if.end790, !dbg !8762

if.else135:                                       ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata %struct.GPUBuffer** %buffer, metadata !8763, metadata !DIExpression()), !dbg !8765
  store %struct.GPUBuffer* null, %struct.GPUBuffer** %buffer, align 8, !dbg !8765
  call void @llvm.dbg.declare(metadata i8** %varray, metadata !8766, metadata !DIExpression()), !dbg !8767
  store i8* null, i8** %varray, align 8, !dbg !8767
  call void @llvm.dbg.declare(metadata i32* %numdata, metadata !8768, metadata !DIExpression()), !dbg !8769
  store i32 0, i32* %numdata, align 4, !dbg !8769
  call void @llvm.dbg.declare(metadata i32* %elementsize, metadata !8770, metadata !DIExpression()), !dbg !8771
  store i32 0, i32* %elementsize, align 4, !dbg !8771
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !8772, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.declare(metadata i32* %start, metadata !8774, metadata !DIExpression()), !dbg !8775
  store i32 0, i32* %start, align 4, !dbg !8775
  call void @llvm.dbg.declare(metadata i32* %numfaces, metadata !8776, metadata !DIExpression()), !dbg !8777
  store i32 0, i32* %numfaces, align 4, !dbg !8777
  call void @llvm.dbg.declare(metadata i32* %curface, metadata !8778, metadata !DIExpression()), !dbg !8779
  store i32 0, i32* %curface, align 4, !dbg !8779
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8780, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !8782, metadata !DIExpression()), !dbg !8783
  %136 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8784
  store %struct.MFace* %136, %struct.MFace** %mf, align 8, !dbg !8783
  call void @llvm.dbg.declare(metadata [32 x %struct.GPUAttrib]* %datatypes, metadata !8785, metadata !DIExpression()), !dbg !8793
  %137 = bitcast %struct.DMVertexAttribs* %attribs to i8*, !dbg !8794
  call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 0, i64 376, i1 false), !dbg !8794
  %138 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8795
  call void @GPU_vertex_setup(%struct.DerivedMesh* %138), !dbg !8796
  %139 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8797
  call void @GPU_normal_setup(%struct.DerivedMesh* %139), !dbg !8798
  %140 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8799
  %call136 = call zeroext i8 @GPU_buffer_legacy(%struct.DerivedMesh* %140), !dbg !8801
  %tobool137 = icmp ne i8 %call136, 0, !dbg !8801
  br i1 %tobool137, label %if.end789, label %if.then138, !dbg !8802

if.then138:                                       ; preds = %if.else135
  store i32 0, i32* %i, align 4, !dbg !8803
  br label %for.cond139, !dbg !8806

for.cond139:                                      ; preds = %for.inc770, %if.then138
  %141 = load i32, i32* %i, align 4, !dbg !8807
  %142 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8809
  %drawObject = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %142, i32 0, i32 13, !dbg !8810
  %143 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject, align 8, !dbg !8810
  %tot_triangle_point = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %143, i32 0, i32 11, !dbg !8811
  %144 = load i32, i32* %tot_triangle_point, align 4, !dbg !8811
  %div = sdiv i32 %144, 3, !dbg !8812
  %cmp140 = icmp slt i32 %141, %div, !dbg !8813
  br i1 %cmp140, label %for.body142, label %for.end772, !dbg !8814

for.body142:                                      ; preds = %for.cond139
  %145 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8815
  %drawObject143 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %145, i32 0, i32 13, !dbg !8817
  %146 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject143, align 8, !dbg !8817
  %triangle_to_mface = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %146, i32 0, i32 6, !dbg !8818
  %147 = load i32*, i32** %triangle_to_mface, align 8, !dbg !8818
  %148 = load i32, i32* %i, align 4, !dbg !8819
  %idxprom144 = sext i32 %148 to i64, !dbg !8815
  %arrayidx145 = getelementptr inbounds i32, i32* %147, i64 %idxprom144, !dbg !8815
  %149 = load i32, i32* %arrayidx145, align 4, !dbg !8815
  store i32 %149, i32* %a, align 4, !dbg !8820
  %150 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8821
  %151 = load i32, i32* %a, align 4, !dbg !8822
  %idx.ext = sext i32 %151 to i64, !dbg !8823
  %add.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %150, i64 %idx.ext, !dbg !8823
  store %struct.MFace* %add.ptr, %struct.MFace** %mface, align 8, !dbg !8824
  %152 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8825
  %mat_nr146 = getelementptr inbounds %struct.MFace, %struct.MFace* %152, i32 0, i32 4, !dbg !8826
  %153 = load i16, i16* %mat_nr146, align 4, !dbg !8826
  %conv147 = sext i16 %153 to i32, !dbg !8825
  %add148 = add nsw i32 %conv147, 1, !dbg !8827
  store i32 %add148, i32* %new_matnr, align 4, !dbg !8828
  %154 = load i32, i32* %new_matnr, align 4, !dbg !8829
  %155 = load i32, i32* %matnr, align 4, !dbg !8831
  %cmp149 = icmp ne i32 %154, %155, !dbg !8832
  br i1 %cmp149, label %if.then151, label %if.end282, !dbg !8833

if.then151:                                       ; preds = %for.body142
  %156 = load i32, i32* %curface, align 4, !dbg !8834
  %157 = load i32, i32* %start, align 4, !dbg !8836
  %sub = sub nsw i32 %156, %157, !dbg !8837
  store i32 %sub, i32* %numfaces, align 4, !dbg !8838
  %158 = load i32, i32* %numfaces, align 4, !dbg !8839
  %cmp152 = icmp sgt i32 %158, 0, !dbg !8841
  br i1 %cmp152, label %if.then154, label %if.end168, !dbg !8842

if.then154:                                       ; preds = %if.then151
  %159 = load i8, i8* %do_draw, align 1, !dbg !8843
  %tobool155 = icmp ne i8 %159, 0, !dbg !8843
  br i1 %tobool155, label %if.then156, label %if.end167, !dbg !8846

if.then156:                                       ; preds = %if.then154
  %160 = load i32, i32* %numdata, align 4, !dbg !8847
  %cmp157 = icmp ne i32 %160, 0, !dbg !8850
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !8851

if.then159:                                       ; preds = %if.then156
  %161 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer, align 8, !dbg !8852
  call void @GPU_buffer_unlock(%struct.GPUBuffer* %161), !dbg !8854
  %162 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer, align 8, !dbg !8855
  %arraydecay160 = getelementptr inbounds [32 x %struct.GPUAttrib], [32 x %struct.GPUAttrib]* %datatypes, i64 0, i64 0, !dbg !8856
  %163 = load i32, i32* %numdata, align 4, !dbg !8857
  call void @GPU_interleaved_attrib_setup(%struct.GPUBuffer* %162, %struct.GPUAttrib* %arraydecay160, i32 %163), !dbg !8858
  br label %if.end161, !dbg !8859

if.end161:                                        ; preds = %if.then159, %if.then156
  %164 = load i32, i32* %start, align 4, !dbg !8860
  %mul = mul nsw i32 %164, 3, !dbg !8861
  %165 = load i32, i32* %numfaces, align 4, !dbg !8862
  %mul162 = mul nsw i32 %165, 3, !dbg !8863
  call void @glDrawArrays(i32 4, i32 %mul, i32 %mul162), !dbg !8864
  %166 = load i32, i32* %numdata, align 4, !dbg !8865
  %cmp163 = icmp ne i32 %166, 0, !dbg !8867
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !8868

if.then165:                                       ; preds = %if.end161
  %167 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer, align 8, !dbg !8869
  call void @GPU_buffer_free(%struct.GPUBuffer* %167), !dbg !8871
  store %struct.GPUBuffer* null, %struct.GPUBuffer** %buffer, align 8, !dbg !8872
  br label %if.end166, !dbg !8873

if.end166:                                        ; preds = %if.then165, %if.end161
  br label %if.end167, !dbg !8874

if.end167:                                        ; preds = %if.end166, %if.then154
  br label %if.end168, !dbg !8875

if.end168:                                        ; preds = %if.end167, %if.then151
  store i32 0, i32* %numdata, align 4, !dbg !8876
  %168 = load i32, i32* %curface, align 4, !dbg !8877
  store i32 %168, i32* %start, align 4, !dbg !8878
  %169 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !8879
  %170 = load i32, i32* %new_matnr, align 4, !dbg !8880
  store i32 %170, i32* %matnr, align 4, !dbg !8881
  %171 = bitcast %struct.GPUVertexAttribs* %gattribs to i8*, !dbg !8882
  %call169 = call i32 %169(i32 %170, i8* %171), !dbg !8879
  %conv170 = trunc i32 %call169 to i8, !dbg !8879
  store i8 %conv170, i8* %do_draw, align 1, !dbg !8883
  %172 = load i8, i8* %do_draw, align 1, !dbg !8884
  %tobool171 = icmp ne i8 %172, 0, !dbg !8884
  br i1 %tobool171, label %if.then172, label %if.end281, !dbg !8886

if.then172:                                       ; preds = %if.end168
  %173 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8887
  call void @DM_vertex_attributes_from_gpu(%struct.DerivedMesh* %173, %struct.GPUVertexAttribs* %gattribs, %struct.DMVertexAttribs* %attribs), !dbg !8889
  %totorco = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !8890
  %174 = load i32, i32* %totorco, align 4, !dbg !8890
  %tobool173 = icmp ne i32 %174, 0, !dbg !8892
  br i1 %tobool173, label %land.lhs.true174, label %if.end185, !dbg !8893

land.lhs.true174:                                 ; preds = %if.then172
  %orco = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 3, !dbg !8894
  %array = getelementptr inbounds %struct.anon.3, %struct.anon.3* %orco, i32 0, i32 0, !dbg !8895
  %175 = load [3 x float]*, [3 x float]** %array, align 8, !dbg !8895
  %tobool175 = icmp ne [3 x float]* %175, null, !dbg !8896
  br i1 %tobool175, label %if.then176, label %if.end185, !dbg !8897

if.then176:                                       ; preds = %land.lhs.true174
  %orco177 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 3, !dbg !8898
  %gl_index = getelementptr inbounds %struct.anon.3, %struct.anon.3* %orco177, i32 0, i32 2, !dbg !8900
  %176 = load i32, i32* %gl_index, align 4, !dbg !8900
  %177 = load i32, i32* %numdata, align 4, !dbg !8901
  %idxprom178 = sext i32 %177 to i64, !dbg !8902
  %arrayidx179 = getelementptr inbounds [32 x %struct.GPUAttrib], [32 x %struct.GPUAttrib]* %datatypes, i64 0, i64 %idxprom178, !dbg !8902
  %index = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx179, i32 0, i32 0, !dbg !8903
  store i32 %176, i32* %index, align 4, !dbg !8904
  %178 = load i32, i32* %numdata, align 4, !dbg !8905
  %idxprom180 = sext i32 %178 to i64, !dbg !8906
  %arrayidx181 = getelementptr inbounds [32 x %struct.GPUAttrib], [32 x %struct.GPUAttrib]* %datatypes, i64 0, i64 %idxprom180, !dbg !8906
  %size = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx181, i32 0, i32 1, !dbg !8907
  store i32 3, i32* %size, align 4, !dbg !8908
  %179 = load i32, i32* %numdata, align 4, !dbg !8909
  %idxprom182 = sext i32 %179 to i64, !dbg !8910
  %arrayidx183 = getelementptr inbounds [32 x %struct.GPUAttrib], [32 x %struct.GPUAttrib]* %datatypes, i64 0, i64 %idxprom182, !dbg !8910
  %type = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx183, i32 0, i32 2, !dbg !8911
  store i32 5126, i32* %type, align 4, !dbg !8912
  %180 = load i32, i32* %numdata, align 4, !dbg !8913
  %inc184 = add nsw i32 %180, 1, !dbg !8913
  store i32 %inc184, i32* %numdata, align 4, !dbg !8913
  br label %if.end185, !dbg !8914

if.end185:                                        ; preds = %if.then176, %land.lhs.true174, %if.then172
  store i32 0, i32* %b, align 4, !dbg !8915
  br label %for.cond186, !dbg !8917

for.cond186:                                      ; preds = %for.inc210, %if.end185
  %181 = load i32, i32* %b, align 4, !dbg !8918
  %tottface = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 4, !dbg !8920
  %182 = load i32, i32* %tottface, align 8, !dbg !8920
  %cmp187 = icmp slt i32 %181, %182, !dbg !8921
  br i1 %cmp187, label %for.body189, label %for.end212, !dbg !8922

for.body189:                                      ; preds = %for.cond186
  %tface = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 0, !dbg !8923
  %183 = load i32, i32* %b, align 4, !dbg !8926
  %idxprom190 = sext i32 %183 to i64, !dbg !8927
  %arrayidx191 = getelementptr inbounds [8 x %struct.anon.0], [8 x %struct.anon.0]* %tface, i64 0, i64 %idxprom190, !dbg !8927
  %array192 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx191, i32 0, i32 0, !dbg !8928
  %184 = load %struct.MTFace*, %struct.MTFace** %array192, align 8, !dbg !8928
  %tobool193 = icmp ne %struct.MTFace* %184, null, !dbg !8927
  br i1 %tobool193, label %if.then194, label %if.end209, !dbg !8929

if.then194:                                       ; preds = %for.body189
  %tface195 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 0, !dbg !8930
  %185 = load i32, i32* %b, align 4, !dbg !8932
  %idxprom196 = sext i32 %185 to i64, !dbg !8933
  %arrayidx197 = getelementptr inbounds [8 x %struct.anon.0], [8 x %struct.anon.0]* %tface195, i64 0, i64 %idxprom196, !dbg !8933
  %gl_index198 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx197, i32 0, i32 2, !dbg !8934
  %186 = load i32, i32* %gl_index198, align 4, !dbg !8934
  %187 = load i32, i32* %numdata, align 4, !dbg !8935
  %idxprom199 = sext i32 %187 to i64, !dbg !8936
  %arrayidx200 = getelementptr inbounds [32 x %struct.GPUAttrib], [32 x %struct.GPUAttrib]* %datatypes, i64 0, i64 %idxprom199, !dbg !8936
  %index201 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx200, i32 0, i32 0, !dbg !8937
  store i32 %186, i32* %index201, align 4, !dbg !8938
  %188 = load i32, i32* %numdata, align 4, !dbg !8939
  %idxprom202 = sext i32 %188 to i64, !dbg !8940
  %arrayidx203 = getelementptr inbounds [32 x %struct.GPUAttrib], [32 x %struct.GPUAttrib]* %datatypes, i64 0, i64 %idxprom202, !dbg !8940
  %size204 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx203, i32 0, i32 1, !dbg !8941
  store i32 2, i32* %size204, align 4, !dbg !8942
  %189 = load i32, i32* %numdata, align 4, !dbg !8943
  %idxprom205 = sext i32 %189 to i64, !dbg !8944
  %arrayidx206 = getelementptr inbounds [32 x %struct.GPUAttrib], [32 x %struct.GPUAttrib]* %datatypes, i64 0, i64 %idxprom205, !dbg !8944
  %type207 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx206, i32 0, i32 2, !dbg !8945
  store i32 5126, i32* %type207, align 4, !dbg !8946
  %190 = load i32, i32* %numdata, align 4, !dbg !8947
  %inc208 = add nsw i32 %190, 1, !dbg !8947
  store i32 %inc208, i32* %numdata, align 4, !dbg !8947
  br label %if.end209, !dbg !8948

if.end209:                                        ; preds = %if.then194, %for.body189
  br label %for.inc210, !dbg !8949

for.inc210:                                       ; preds = %if.end209
  %191 = load i32, i32* %b, align 4, !dbg !8950
  %inc211 = add nsw i32 %191, 1, !dbg !8950
  store i32 %inc211, i32* %b, align 4, !dbg !8950
  br label %for.cond186, !dbg !8951, !llvm.loop !8952

for.end212:                                       ; preds = %for.cond186
  store i32 0, i32* %b, align 4, !dbg !8954
  br label %for.cond213, !dbg !8956

for.cond213:                                      ; preds = %for.inc237, %for.end212
  %192 = load i32, i32* %b, align 4, !dbg !8957
  %totmcol = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 5, !dbg !8959
  %193 = load i32, i32* %totmcol, align 4, !dbg !8959
  %cmp214 = icmp slt i32 %192, %193, !dbg !8960
  br i1 %cmp214, label %for.body216, label %for.end239, !dbg !8961

for.body216:                                      ; preds = %for.cond213
  %mcol = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 1, !dbg !8962
  %194 = load i32, i32* %b, align 4, !dbg !8965
  %idxprom217 = sext i32 %194 to i64, !dbg !8966
  %arrayidx218 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %mcol, i64 0, i64 %idxprom217, !dbg !8966
  %array219 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx218, i32 0, i32 0, !dbg !8967
  %195 = load %struct.MCol*, %struct.MCol** %array219, align 8, !dbg !8967
  %tobool220 = icmp ne %struct.MCol* %195, null, !dbg !8966
  br i1 %tobool220, label %if.then221, label %if.end236, !dbg !8968

if.then221:                                       ; preds = %for.body216
  %mcol222 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 1, !dbg !8969
  %196 = load i32, i32* %b, align 4, !dbg !8971
  %idxprom223 = sext i32 %196 to i64, !dbg !8972
  %arrayidx224 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %mcol222, i64 0, i64 %idxprom223, !dbg !8972
  %gl_index225 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx224, i32 0, i32 2, !dbg !8973
  %197 = load i32, i32* %gl_index225, align 4, !dbg !8973
  %198 = load i32, i32* %numdata, align 4, !dbg !8974
  %idxprom226 = sext i32 %198 to i64, !dbg !8975
  %arrayidx227 = getelementptr inbounds [32 x %struct.GPUAttrib], [32 x %struct.GPUAttrib]* %datatypes, i64 0, i64 %idxprom226, !dbg !8975
  %index228 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx227, i32 0, i32 0, !dbg !8976
  store i32 %197, i32* %index228, align 4, !dbg !8977
  %199 = load i32, i32* %numdata, align 4, !dbg !8978
  %idxprom229 = sext i32 %199 to i64, !dbg !8979
  %arrayidx230 = getelementptr inbounds [32 x %struct.GPUAttrib], [32 x %struct.GPUAttrib]* %datatypes, i64 0, i64 %idxprom229, !dbg !8979
  %size231 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx230, i32 0, i32 1, !dbg !8980
  store i32 4, i32* %size231, align 4, !dbg !8981
  %200 = load i32, i32* %numdata, align 4, !dbg !8982
  %idxprom232 = sext i32 %200 to i64, !dbg !8983
  %arrayidx233 = getelementptr inbounds [32 x %struct.GPUAttrib], [32 x %struct.GPUAttrib]* %datatypes, i64 0, i64 %idxprom232, !dbg !8983
  %type234 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx233, i32 0, i32 2, !dbg !8984
  store i32 5121, i32* %type234, align 4, !dbg !8985
  %201 = load i32, i32* %numdata, align 4, !dbg !8986
  %inc235 = add nsw i32 %201, 1, !dbg !8986
  store i32 %inc235, i32* %numdata, align 4, !dbg !8986
  br label %if.end236, !dbg !8987

if.end236:                                        ; preds = %if.then221, %for.body216
  br label %for.inc237, !dbg !8988

for.inc237:                                       ; preds = %if.end236
  %202 = load i32, i32* %b, align 4, !dbg !8989
  %inc238 = add nsw i32 %202, 1, !dbg !8989
  store i32 %inc238, i32* %b, align 4, !dbg !8989
  br label %for.cond213, !dbg !8990, !llvm.loop !8991

for.end239:                                       ; preds = %for.cond213
  %tottang = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 6, !dbg !8993
  %203 = load i32, i32* %tottang, align 8, !dbg !8993
  %tobool240 = icmp ne i32 %203, 0, !dbg !8995
  br i1 %tobool240, label %land.lhs.true241, label %if.end257, !dbg !8996

land.lhs.true241:                                 ; preds = %for.end239
  %tang = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 2, !dbg !8997
  %array242 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %tang, i32 0, i32 0, !dbg !8998
  %204 = load [4 x float]*, [4 x float]** %array242, align 8, !dbg !8998
  %tobool243 = icmp ne [4 x float]* %204, null, !dbg !8999
  br i1 %tobool243, label %if.then244, label %if.end257, !dbg !9000

if.then244:                                       ; preds = %land.lhs.true241
  %tang245 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 2, !dbg !9001
  %gl_index246 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %tang245, i32 0, i32 2, !dbg !9003
  %205 = load i32, i32* %gl_index246, align 4, !dbg !9003
  %206 = load i32, i32* %numdata, align 4, !dbg !9004
  %idxprom247 = sext i32 %206 to i64, !dbg !9005
  %arrayidx248 = getelementptr inbounds [32 x %struct.GPUAttrib], [32 x %struct.GPUAttrib]* %datatypes, i64 0, i64 %idxprom247, !dbg !9005
  %index249 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx248, i32 0, i32 0, !dbg !9006
  store i32 %205, i32* %index249, align 4, !dbg !9007
  %207 = load i32, i32* %numdata, align 4, !dbg !9008
  %idxprom250 = sext i32 %207 to i64, !dbg !9009
  %arrayidx251 = getelementptr inbounds [32 x %struct.GPUAttrib], [32 x %struct.GPUAttrib]* %datatypes, i64 0, i64 %idxprom250, !dbg !9009
  %size252 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx251, i32 0, i32 1, !dbg !9010
  store i32 4, i32* %size252, align 4, !dbg !9011
  %208 = load i32, i32* %numdata, align 4, !dbg !9012
  %idxprom253 = sext i32 %208 to i64, !dbg !9013
  %arrayidx254 = getelementptr inbounds [32 x %struct.GPUAttrib], [32 x %struct.GPUAttrib]* %datatypes, i64 0, i64 %idxprom253, !dbg !9013
  %type255 = getelementptr inbounds %struct.GPUAttrib, %struct.GPUAttrib* %arrayidx254, i32 0, i32 2, !dbg !9014
  store i32 5126, i32* %type255, align 4, !dbg !9015
  %209 = load i32, i32* %numdata, align 4, !dbg !9016
  %inc256 = add nsw i32 %209, 1, !dbg !9016
  store i32 %inc256, i32* %numdata, align 4, !dbg !9016
  br label %if.end257, !dbg !9017

if.end257:                                        ; preds = %if.then244, %land.lhs.true241, %for.end239
  %210 = load i32, i32* %numdata, align 4, !dbg !9018
  %cmp258 = icmp ne i32 %210, 0, !dbg !9020
  br i1 %cmp258, label %if.then260, label %if.else279, !dbg !9021

if.then260:                                       ; preds = %if.end257
  %arraydecay261 = getelementptr inbounds [32 x %struct.GPUAttrib], [32 x %struct.GPUAttrib]* %datatypes, i64 0, i64 0, !dbg !9022
  %211 = load i32, i32* %numdata, align 4, !dbg !9024
  %call262 = call i32 @GPU_attrib_element_size(%struct.GPUAttrib* %arraydecay261, i32 %211), !dbg !9025
  store i32 %call262, i32* %elementsize, align 4, !dbg !9026
  %212 = load i32, i32* %elementsize, align 4, !dbg !9027
  %213 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9028
  %drawObject263 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %213, i32 0, i32 13, !dbg !9029
  %214 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject263, align 8, !dbg !9029
  %tot_triangle_point264 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %214, i32 0, i32 11, !dbg !9030
  %215 = load i32, i32* %tot_triangle_point264, align 4, !dbg !9030
  %mul265 = mul nsw i32 %212, %215, !dbg !9031
  %call266 = call %struct.GPUBuffer* @GPU_buffer_alloc(i32 %mul265), !dbg !9032
  store %struct.GPUBuffer* %call266, %struct.GPUBuffer** %buffer, align 8, !dbg !9033
  %216 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer, align 8, !dbg !9034
  %cmp267 = icmp eq %struct.GPUBuffer* %216, null, !dbg !9036
  br i1 %cmp267, label %if.then269, label %if.end271, !dbg !9037

if.then269:                                       ; preds = %if.then260
  call void @GPU_buffer_unbind(), !dbg !9038
  %217 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9040
  %drawObject270 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %217, i32 0, i32 13, !dbg !9041
  %218 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject270, align 8, !dbg !9041
  %legacy = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %218, i32 0, i32 15, !dbg !9042
  store i8 1, i8* %legacy, align 4, !dbg !9043
  br label %return, !dbg !9044

if.end271:                                        ; preds = %if.then260
  %219 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer, align 8, !dbg !9045
  %call272 = call i8* @GPU_buffer_lock_stream(%struct.GPUBuffer* %219), !dbg !9046
  store i8* %call272, i8** %varray, align 8, !dbg !9047
  %220 = load i8*, i8** %varray, align 8, !dbg !9048
  %cmp273 = icmp eq i8* %220, null, !dbg !9050
  br i1 %cmp273, label %if.then275, label %if.end278, !dbg !9051

if.then275:                                       ; preds = %if.end271
  call void @GPU_buffer_unbind(), !dbg !9052
  %221 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer, align 8, !dbg !9054
  call void @GPU_buffer_free(%struct.GPUBuffer* %221), !dbg !9055
  %222 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9056
  %drawObject276 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %222, i32 0, i32 13, !dbg !9057
  %223 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject276, align 8, !dbg !9057
  %legacy277 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %223, i32 0, i32 15, !dbg !9058
  store i8 1, i8* %legacy277, align 4, !dbg !9059
  br label %return, !dbg !9060

if.end278:                                        ; preds = %if.end271
  br label %if.end280, !dbg !9061

if.else279:                                       ; preds = %if.end257
  store %struct.GPUBuffer* null, %struct.GPUBuffer** %buffer, align 8, !dbg !9062
  br label %if.end280

if.end280:                                        ; preds = %if.else279, %if.end278
  br label %if.end281, !dbg !9064

if.end281:                                        ; preds = %if.end280, %if.end168
  br label %if.end282, !dbg !9065

if.end282:                                        ; preds = %if.end281, %for.body142
  %224 = load i8, i8* %do_draw, align 1, !dbg !9066
  %conv283 = zext i8 %224 to i32, !dbg !9066
  %tobool284 = icmp ne i32 %conv283, 0, !dbg !9066
  br i1 %tobool284, label %land.lhs.true285, label %if.end519, !dbg !9068

land.lhs.true285:                                 ; preds = %if.end282
  %225 = load i32, i32* %numdata, align 4, !dbg !9069
  %cmp286 = icmp ne i32 %225, 0, !dbg !9070
  br i1 %cmp286, label %if.then288, label %if.end519, !dbg !9071

if.then288:                                       ; preds = %land.lhs.true285
  store i32 0, i32* %offset, align 4, !dbg !9072
  %totorco289 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !9074
  %226 = load i32, i32* %totorco289, align 4, !dbg !9074
  %tobool290 = icmp ne i32 %226, 0, !dbg !9076
  br i1 %tobool290, label %land.lhs.true291, label %if.end332, !dbg !9077

land.lhs.true291:                                 ; preds = %if.then288
  %orco292 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 3, !dbg !9078
  %array293 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %orco292, i32 0, i32 0, !dbg !9079
  %227 = load [3 x float]*, [3 x float]** %array293, align 8, !dbg !9079
  %tobool294 = icmp ne [3 x float]* %227, null, !dbg !9080
  br i1 %tobool294, label %if.then295, label %if.end332, !dbg !9081

if.then295:                                       ; preds = %land.lhs.true291
  %228 = load i8*, i8** %varray, align 8, !dbg !9082
  %229 = load i32, i32* %elementsize, align 4, !dbg !9084
  %230 = load i32, i32* %curface, align 4, !dbg !9085
  %mul296 = mul nsw i32 %229, %230, !dbg !9086
  %mul297 = mul nsw i32 %mul296, 3, !dbg !9087
  %idxprom298 = sext i32 %mul297 to i64, !dbg !9082
  %arrayidx299 = getelementptr inbounds i8, i8* %228, i64 %idxprom298, !dbg !9082
  %231 = bitcast i8* %arrayidx299 to float*, !dbg !9088
  %orco300 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 3, !dbg !9089
  %array301 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %orco300, i32 0, i32 0, !dbg !9090
  %232 = load [3 x float]*, [3 x float]** %array301, align 8, !dbg !9090
  %233 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9091
  %v1302 = getelementptr inbounds %struct.MFace, %struct.MFace* %233, i32 0, i32 0, !dbg !9092
  %234 = load i32, i32* %v1302, align 4, !dbg !9092
  %idxprom303 = zext i32 %234 to i64, !dbg !9093
  %arrayidx304 = getelementptr inbounds [3 x float], [3 x float]* %232, i64 %idxprom303, !dbg !9093
  %arraydecay305 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx304, i64 0, i64 0, !dbg !9093
  call void @copy_v3_v3(float* %231, float* %arraydecay305), !dbg !9094
  %235 = load i8*, i8** %varray, align 8, !dbg !9095
  %236 = load i32, i32* %elementsize, align 4, !dbg !9096
  %237 = load i32, i32* %curface, align 4, !dbg !9097
  %mul306 = mul nsw i32 %236, %237, !dbg !9098
  %mul307 = mul nsw i32 %mul306, 3, !dbg !9099
  %238 = load i32, i32* %elementsize, align 4, !dbg !9100
  %add308 = add nsw i32 %mul307, %238, !dbg !9101
  %idxprom309 = sext i32 %add308 to i64, !dbg !9095
  %arrayidx310 = getelementptr inbounds i8, i8* %235, i64 %idxprom309, !dbg !9095
  %239 = bitcast i8* %arrayidx310 to float*, !dbg !9102
  %orco311 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 3, !dbg !9103
  %array312 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %orco311, i32 0, i32 0, !dbg !9104
  %240 = load [3 x float]*, [3 x float]** %array312, align 8, !dbg !9104
  %241 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9105
  %v2313 = getelementptr inbounds %struct.MFace, %struct.MFace* %241, i32 0, i32 1, !dbg !9106
  %242 = load i32, i32* %v2313, align 4, !dbg !9106
  %idxprom314 = zext i32 %242 to i64, !dbg !9107
  %arrayidx315 = getelementptr inbounds [3 x float], [3 x float]* %240, i64 %idxprom314, !dbg !9107
  %arraydecay316 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx315, i64 0, i64 0, !dbg !9107
  call void @copy_v3_v3(float* %239, float* %arraydecay316), !dbg !9108
  %243 = load i8*, i8** %varray, align 8, !dbg !9109
  %244 = load i32, i32* %elementsize, align 4, !dbg !9110
  %245 = load i32, i32* %curface, align 4, !dbg !9111
  %mul317 = mul nsw i32 %244, %245, !dbg !9112
  %mul318 = mul nsw i32 %mul317, 3, !dbg !9113
  %246 = load i32, i32* %elementsize, align 4, !dbg !9114
  %mul319 = mul nsw i32 %246, 2, !dbg !9115
  %add320 = add nsw i32 %mul318, %mul319, !dbg !9116
  %idxprom321 = sext i32 %add320 to i64, !dbg !9109
  %arrayidx322 = getelementptr inbounds i8, i8* %243, i64 %idxprom321, !dbg !9109
  %247 = bitcast i8* %arrayidx322 to float*, !dbg !9117
  %orco323 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 3, !dbg !9118
  %array324 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %orco323, i32 0, i32 0, !dbg !9119
  %248 = load [3 x float]*, [3 x float]** %array324, align 8, !dbg !9119
  %249 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9120
  %v3325 = getelementptr inbounds %struct.MFace, %struct.MFace* %249, i32 0, i32 2, !dbg !9121
  %250 = load i32, i32* %v3325, align 4, !dbg !9121
  %idxprom326 = zext i32 %250 to i64, !dbg !9122
  %arrayidx327 = getelementptr inbounds [3 x float], [3 x float]* %248, i64 %idxprom326, !dbg !9122
  %arraydecay328 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx327, i64 0, i64 0, !dbg !9122
  call void @copy_v3_v3(float* %247, float* %arraydecay328), !dbg !9123
  %251 = load i32, i32* %offset, align 4, !dbg !9124
  %conv329 = sext i32 %251 to i64, !dbg !9124
  %add330 = add i64 %conv329, 12, !dbg !9124
  %conv331 = trunc i64 %add330 to i32, !dbg !9124
  store i32 %conv331, i32* %offset, align 4, !dbg !9124
  br label %if.end332, !dbg !9125

if.end332:                                        ; preds = %if.then295, %land.lhs.true291, %if.then288
  store i32 0, i32* %b, align 4, !dbg !9126
  br label %for.cond333, !dbg !9128

for.cond333:                                      ; preds = %for.inc380, %if.end332
  %252 = load i32, i32* %b, align 4, !dbg !9129
  %tottface334 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 4, !dbg !9131
  %253 = load i32, i32* %tottface334, align 8, !dbg !9131
  %cmp335 = icmp slt i32 %252, %253, !dbg !9132
  br i1 %cmp335, label %for.body337, label %for.end382, !dbg !9133

for.body337:                                      ; preds = %for.cond333
  %tface338 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 0, !dbg !9134
  %254 = load i32, i32* %b, align 4, !dbg !9137
  %idxprom339 = sext i32 %254 to i64, !dbg !9138
  %arrayidx340 = getelementptr inbounds [8 x %struct.anon.0], [8 x %struct.anon.0]* %tface338, i64 0, i64 %idxprom339, !dbg !9138
  %array341 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx340, i32 0, i32 0, !dbg !9139
  %255 = load %struct.MTFace*, %struct.MTFace** %array341, align 8, !dbg !9139
  %tobool342 = icmp ne %struct.MTFace* %255, null, !dbg !9138
  br i1 %tobool342, label %if.then343, label %if.end379, !dbg !9140

if.then343:                                       ; preds = %for.body337
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf, metadata !9141, metadata !DIExpression()), !dbg !9143
  %tface344 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 0, !dbg !9144
  %256 = load i32, i32* %b, align 4, !dbg !9145
  %idxprom345 = sext i32 %256 to i64, !dbg !9146
  %arrayidx346 = getelementptr inbounds [8 x %struct.anon.0], [8 x %struct.anon.0]* %tface344, i64 0, i64 %idxprom345, !dbg !9146
  %array347 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx346, i32 0, i32 0, !dbg !9147
  %257 = load %struct.MTFace*, %struct.MTFace** %array347, align 8, !dbg !9147
  %258 = load i32, i32* %a, align 4, !dbg !9148
  %idxprom348 = sext i32 %258 to i64, !dbg !9146
  %arrayidx349 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %257, i64 %idxprom348, !dbg !9146
  store %struct.MTFace* %arrayidx349, %struct.MTFace** %tf, align 8, !dbg !9143
  %259 = load i8*, i8** %varray, align 8, !dbg !9149
  %260 = load i32, i32* %elementsize, align 4, !dbg !9150
  %261 = load i32, i32* %curface, align 4, !dbg !9151
  %mul350 = mul nsw i32 %260, %261, !dbg !9152
  %mul351 = mul nsw i32 %mul350, 3, !dbg !9153
  %262 = load i32, i32* %offset, align 4, !dbg !9154
  %add352 = add nsw i32 %mul351, %262, !dbg !9155
  %idxprom353 = sext i32 %add352 to i64, !dbg !9149
  %arrayidx354 = getelementptr inbounds i8, i8* %259, i64 %idxprom353, !dbg !9149
  %263 = bitcast i8* %arrayidx354 to float*, !dbg !9156
  %264 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !9157
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %264, i32 0, i32 0, !dbg !9158
  %arrayidx355 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 0, !dbg !9157
  %arraydecay356 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx355, i64 0, i64 0, !dbg !9157
  call void @copy_v2_v2(float* %263, float* %arraydecay356), !dbg !9159
  %265 = load i8*, i8** %varray, align 8, !dbg !9160
  %266 = load i32, i32* %elementsize, align 4, !dbg !9161
  %267 = load i32, i32* %curface, align 4, !dbg !9162
  %mul357 = mul nsw i32 %266, %267, !dbg !9163
  %mul358 = mul nsw i32 %mul357, 3, !dbg !9164
  %268 = load i32, i32* %offset, align 4, !dbg !9165
  %add359 = add nsw i32 %mul358, %268, !dbg !9166
  %269 = load i32, i32* %elementsize, align 4, !dbg !9167
  %add360 = add nsw i32 %add359, %269, !dbg !9168
  %idxprom361 = sext i32 %add360 to i64, !dbg !9160
  %arrayidx362 = getelementptr inbounds i8, i8* %265, i64 %idxprom361, !dbg !9160
  %270 = bitcast i8* %arrayidx362 to float*, !dbg !9169
  %271 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !9170
  %uv363 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %271, i32 0, i32 0, !dbg !9171
  %arrayidx364 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv363, i64 0, i64 1, !dbg !9170
  %arraydecay365 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx364, i64 0, i64 0, !dbg !9170
  call void @copy_v2_v2(float* %270, float* %arraydecay365), !dbg !9172
  %272 = load i8*, i8** %varray, align 8, !dbg !9173
  %273 = load i32, i32* %elementsize, align 4, !dbg !9174
  %274 = load i32, i32* %curface, align 4, !dbg !9175
  %mul366 = mul nsw i32 %273, %274, !dbg !9176
  %mul367 = mul nsw i32 %mul366, 3, !dbg !9177
  %275 = load i32, i32* %offset, align 4, !dbg !9178
  %add368 = add nsw i32 %mul367, %275, !dbg !9179
  %276 = load i32, i32* %elementsize, align 4, !dbg !9180
  %mul369 = mul nsw i32 %276, 2, !dbg !9181
  %add370 = add nsw i32 %add368, %mul369, !dbg !9182
  %idxprom371 = sext i32 %add370 to i64, !dbg !9173
  %arrayidx372 = getelementptr inbounds i8, i8* %272, i64 %idxprom371, !dbg !9173
  %277 = bitcast i8* %arrayidx372 to float*, !dbg !9183
  %278 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !9184
  %uv373 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %278, i32 0, i32 0, !dbg !9185
  %arrayidx374 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv373, i64 0, i64 2, !dbg !9184
  %arraydecay375 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx374, i64 0, i64 0, !dbg !9184
  call void @copy_v2_v2(float* %277, float* %arraydecay375), !dbg !9186
  %279 = load i32, i32* %offset, align 4, !dbg !9187
  %conv376 = sext i32 %279 to i64, !dbg !9187
  %add377 = add i64 %conv376, 8, !dbg !9187
  %conv378 = trunc i64 %add377 to i32, !dbg !9187
  store i32 %conv378, i32* %offset, align 4, !dbg !9187
  br label %if.end379, !dbg !9188

if.end379:                                        ; preds = %if.then343, %for.body337
  br label %for.inc380, !dbg !9189

for.inc380:                                       ; preds = %if.end379
  %280 = load i32, i32* %b, align 4, !dbg !9190
  %inc381 = add nsw i32 %280, 1, !dbg !9190
  store i32 %inc381, i32* %b, align 4, !dbg !9190
  br label %for.cond333, !dbg !9191, !llvm.loop !9192

for.end382:                                       ; preds = %for.cond333
  store i32 0, i32* %b, align 4, !dbg !9194
  br label %for.cond383, !dbg !9196

for.cond383:                                      ; preds = %for.inc465, %for.end382
  %281 = load i32, i32* %b, align 4, !dbg !9197
  %totmcol384 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 5, !dbg !9199
  %282 = load i32, i32* %totmcol384, align 4, !dbg !9199
  %cmp385 = icmp slt i32 %281, %282, !dbg !9200
  br i1 %cmp385, label %for.body387, label %for.end467, !dbg !9201

for.body387:                                      ; preds = %for.cond383
  %mcol388 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 1, !dbg !9202
  %283 = load i32, i32* %b, align 4, !dbg !9205
  %idxprom389 = sext i32 %283 to i64, !dbg !9206
  %arrayidx390 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %mcol388, i64 0, i64 %idxprom389, !dbg !9206
  %array391 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx390, i32 0, i32 0, !dbg !9207
  %284 = load %struct.MCol*, %struct.MCol** %array391, align 8, !dbg !9207
  %tobool392 = icmp ne %struct.MCol* %284, null, !dbg !9206
  br i1 %tobool392, label %if.then393, label %if.end464, !dbg !9208

if.then393:                                       ; preds = %for.body387
  call void @llvm.dbg.declare(metadata %struct.MCol** %cp, metadata !9209, metadata !DIExpression()), !dbg !9211
  %mcol394 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 1, !dbg !9212
  %285 = load i32, i32* %b, align 4, !dbg !9213
  %idxprom395 = sext i32 %285 to i64, !dbg !9214
  %arrayidx396 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %mcol394, i64 0, i64 %idxprom395, !dbg !9214
  %array397 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx396, i32 0, i32 0, !dbg !9215
  %286 = load %struct.MCol*, %struct.MCol** %array397, align 8, !dbg !9215
  %287 = load i32, i32* %a, align 4, !dbg !9216
  %mul398 = mul nsw i32 %287, 4, !dbg !9217
  %add399 = add nsw i32 %mul398, 0, !dbg !9218
  %idxprom400 = sext i32 %add399 to i64, !dbg !9214
  %arrayidx401 = getelementptr inbounds %struct.MCol, %struct.MCol* %286, i64 %idxprom400, !dbg !9214
  store %struct.MCol* %arrayidx401, %struct.MCol** %cp, align 8, !dbg !9211
  call void @llvm.dbg.declare(metadata [4 x i8]* %col, metadata !9219, metadata !DIExpression()), !dbg !9222
  %288 = load %struct.MCol*, %struct.MCol** %cp, align 8, !dbg !9223
  %b402 = getelementptr inbounds %struct.MCol, %struct.MCol* %288, i32 0, i32 3, !dbg !9224
  %289 = load i8, i8* %b402, align 1, !dbg !9224
  %arrayidx403 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !9225
  store i8 %289, i8* %arrayidx403, align 1, !dbg !9226
  %290 = load %struct.MCol*, %struct.MCol** %cp, align 8, !dbg !9227
  %g = getelementptr inbounds %struct.MCol, %struct.MCol* %290, i32 0, i32 2, !dbg !9228
  %291 = load i8, i8* %g, align 1, !dbg !9228
  %arrayidx404 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 1, !dbg !9229
  store i8 %291, i8* %arrayidx404, align 1, !dbg !9230
  %292 = load %struct.MCol*, %struct.MCol** %cp, align 8, !dbg !9231
  %r = getelementptr inbounds %struct.MCol, %struct.MCol* %292, i32 0, i32 1, !dbg !9232
  %293 = load i8, i8* %r, align 1, !dbg !9232
  %arrayidx405 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 2, !dbg !9233
  store i8 %293, i8* %arrayidx405, align 1, !dbg !9234
  %294 = load %struct.MCol*, %struct.MCol** %cp, align 8, !dbg !9235
  %a406 = getelementptr inbounds %struct.MCol, %struct.MCol* %294, i32 0, i32 0, !dbg !9236
  %295 = load i8, i8* %a406, align 1, !dbg !9236
  %arrayidx407 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 3, !dbg !9237
  store i8 %295, i8* %arrayidx407, align 1, !dbg !9238
  %296 = load i8*, i8** %varray, align 8, !dbg !9239
  %297 = load i32, i32* %elementsize, align 4, !dbg !9240
  %298 = load i32, i32* %curface, align 4, !dbg !9241
  %mul408 = mul nsw i32 %297, %298, !dbg !9242
  %mul409 = mul nsw i32 %mul408, 3, !dbg !9243
  %299 = load i32, i32* %offset, align 4, !dbg !9244
  %add410 = add nsw i32 %mul409, %299, !dbg !9245
  %idxprom411 = sext i32 %add410 to i64, !dbg !9239
  %arrayidx412 = getelementptr inbounds i8, i8* %296, i64 %idxprom411, !dbg !9239
  %arraydecay413 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !9246
  call void @copy_v4_v4_char(i8* %arrayidx412, i8* %arraydecay413), !dbg !9247
  %mcol414 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 1, !dbg !9248
  %300 = load i32, i32* %b, align 4, !dbg !9249
  %idxprom415 = sext i32 %300 to i64, !dbg !9250
  %arrayidx416 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %mcol414, i64 0, i64 %idxprom415, !dbg !9250
  %array417 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx416, i32 0, i32 0, !dbg !9251
  %301 = load %struct.MCol*, %struct.MCol** %array417, align 8, !dbg !9251
  %302 = load i32, i32* %a, align 4, !dbg !9252
  %mul418 = mul nsw i32 %302, 4, !dbg !9253
  %add419 = add nsw i32 %mul418, 1, !dbg !9254
  %idxprom420 = sext i32 %add419 to i64, !dbg !9250
  %arrayidx421 = getelementptr inbounds %struct.MCol, %struct.MCol* %301, i64 %idxprom420, !dbg !9250
  store %struct.MCol* %arrayidx421, %struct.MCol** %cp, align 8, !dbg !9255
  %303 = load %struct.MCol*, %struct.MCol** %cp, align 8, !dbg !9256
  %b422 = getelementptr inbounds %struct.MCol, %struct.MCol* %303, i32 0, i32 3, !dbg !9257
  %304 = load i8, i8* %b422, align 1, !dbg !9257
  %arrayidx423 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !9258
  store i8 %304, i8* %arrayidx423, align 1, !dbg !9259
  %305 = load %struct.MCol*, %struct.MCol** %cp, align 8, !dbg !9260
  %g424 = getelementptr inbounds %struct.MCol, %struct.MCol* %305, i32 0, i32 2, !dbg !9261
  %306 = load i8, i8* %g424, align 1, !dbg !9261
  %arrayidx425 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 1, !dbg !9262
  store i8 %306, i8* %arrayidx425, align 1, !dbg !9263
  %307 = load %struct.MCol*, %struct.MCol** %cp, align 8, !dbg !9264
  %r426 = getelementptr inbounds %struct.MCol, %struct.MCol* %307, i32 0, i32 1, !dbg !9265
  %308 = load i8, i8* %r426, align 1, !dbg !9265
  %arrayidx427 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 2, !dbg !9266
  store i8 %308, i8* %arrayidx427, align 1, !dbg !9267
  %309 = load %struct.MCol*, %struct.MCol** %cp, align 8, !dbg !9268
  %a428 = getelementptr inbounds %struct.MCol, %struct.MCol* %309, i32 0, i32 0, !dbg !9269
  %310 = load i8, i8* %a428, align 1, !dbg !9269
  %arrayidx429 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 3, !dbg !9270
  store i8 %310, i8* %arrayidx429, align 1, !dbg !9271
  %311 = load i8*, i8** %varray, align 8, !dbg !9272
  %312 = load i32, i32* %elementsize, align 4, !dbg !9273
  %313 = load i32, i32* %curface, align 4, !dbg !9274
  %mul430 = mul nsw i32 %312, %313, !dbg !9275
  %mul431 = mul nsw i32 %mul430, 3, !dbg !9276
  %314 = load i32, i32* %offset, align 4, !dbg !9277
  %add432 = add nsw i32 %mul431, %314, !dbg !9278
  %315 = load i32, i32* %elementsize, align 4, !dbg !9279
  %add433 = add nsw i32 %add432, %315, !dbg !9280
  %idxprom434 = sext i32 %add433 to i64, !dbg !9272
  %arrayidx435 = getelementptr inbounds i8, i8* %311, i64 %idxprom434, !dbg !9272
  %arraydecay436 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !9281
  call void @copy_v4_v4_char(i8* %arrayidx435, i8* %arraydecay436), !dbg !9282
  %mcol437 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 1, !dbg !9283
  %316 = load i32, i32* %b, align 4, !dbg !9284
  %idxprom438 = sext i32 %316 to i64, !dbg !9285
  %arrayidx439 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %mcol437, i64 0, i64 %idxprom438, !dbg !9285
  %array440 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx439, i32 0, i32 0, !dbg !9286
  %317 = load %struct.MCol*, %struct.MCol** %array440, align 8, !dbg !9286
  %318 = load i32, i32* %a, align 4, !dbg !9287
  %mul441 = mul nsw i32 %318, 4, !dbg !9288
  %add442 = add nsw i32 %mul441, 2, !dbg !9289
  %idxprom443 = sext i32 %add442 to i64, !dbg !9285
  %arrayidx444 = getelementptr inbounds %struct.MCol, %struct.MCol* %317, i64 %idxprom443, !dbg !9285
  store %struct.MCol* %arrayidx444, %struct.MCol** %cp, align 8, !dbg !9290
  %319 = load %struct.MCol*, %struct.MCol** %cp, align 8, !dbg !9291
  %b445 = getelementptr inbounds %struct.MCol, %struct.MCol* %319, i32 0, i32 3, !dbg !9292
  %320 = load i8, i8* %b445, align 1, !dbg !9292
  %arrayidx446 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !9293
  store i8 %320, i8* %arrayidx446, align 1, !dbg !9294
  %321 = load %struct.MCol*, %struct.MCol** %cp, align 8, !dbg !9295
  %g447 = getelementptr inbounds %struct.MCol, %struct.MCol* %321, i32 0, i32 2, !dbg !9296
  %322 = load i8, i8* %g447, align 1, !dbg !9296
  %arrayidx448 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 1, !dbg !9297
  store i8 %322, i8* %arrayidx448, align 1, !dbg !9298
  %323 = load %struct.MCol*, %struct.MCol** %cp, align 8, !dbg !9299
  %r449 = getelementptr inbounds %struct.MCol, %struct.MCol* %323, i32 0, i32 1, !dbg !9300
  %324 = load i8, i8* %r449, align 1, !dbg !9300
  %arrayidx450 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 2, !dbg !9301
  store i8 %324, i8* %arrayidx450, align 1, !dbg !9302
  %325 = load %struct.MCol*, %struct.MCol** %cp, align 8, !dbg !9303
  %a451 = getelementptr inbounds %struct.MCol, %struct.MCol* %325, i32 0, i32 0, !dbg !9304
  %326 = load i8, i8* %a451, align 1, !dbg !9304
  %arrayidx452 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 3, !dbg !9305
  store i8 %326, i8* %arrayidx452, align 1, !dbg !9306
  %327 = load i8*, i8** %varray, align 8, !dbg !9307
  %328 = load i32, i32* %elementsize, align 4, !dbg !9308
  %329 = load i32, i32* %curface, align 4, !dbg !9309
  %mul453 = mul nsw i32 %328, %329, !dbg !9310
  %mul454 = mul nsw i32 %mul453, 3, !dbg !9311
  %330 = load i32, i32* %offset, align 4, !dbg !9312
  %add455 = add nsw i32 %mul454, %330, !dbg !9313
  %331 = load i32, i32* %elementsize, align 4, !dbg !9314
  %mul456 = mul nsw i32 %331, 2, !dbg !9315
  %add457 = add nsw i32 %add455, %mul456, !dbg !9316
  %idxprom458 = sext i32 %add457 to i64, !dbg !9307
  %arrayidx459 = getelementptr inbounds i8, i8* %327, i64 %idxprom458, !dbg !9307
  %arraydecay460 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !9317
  call void @copy_v4_v4_char(i8* %arrayidx459, i8* %arraydecay460), !dbg !9318
  %332 = load i32, i32* %offset, align 4, !dbg !9319
  %conv461 = sext i32 %332 to i64, !dbg !9319
  %add462 = add i64 %conv461, 4, !dbg !9319
  %conv463 = trunc i64 %add462 to i32, !dbg !9319
  store i32 %conv463, i32* %offset, align 4, !dbg !9319
  br label %if.end464, !dbg !9320

if.end464:                                        ; preds = %if.then393, %for.body387
  br label %for.inc465, !dbg !9321

for.inc465:                                       ; preds = %if.end464
  %333 = load i32, i32* %b, align 4, !dbg !9322
  %inc466 = add nsw i32 %333, 1, !dbg !9322
  store i32 %inc466, i32* %b, align 4, !dbg !9322
  br label %for.cond383, !dbg !9323, !llvm.loop !9324

for.end467:                                       ; preds = %for.cond383
  %tottang468 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 6, !dbg !9326
  %334 = load i32, i32* %tottang468, align 8, !dbg !9326
  %tobool469 = icmp ne i32 %334, 0, !dbg !9328
  br i1 %tobool469, label %land.lhs.true470, label %if.end518, !dbg !9329

land.lhs.true470:                                 ; preds = %for.end467
  %tang471 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 2, !dbg !9330
  %array472 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %tang471, i32 0, i32 0, !dbg !9331
  %335 = load [4 x float]*, [4 x float]** %array472, align 8, !dbg !9331
  %tobool473 = icmp ne [4 x float]* %335, null, !dbg !9332
  br i1 %tobool473, label %if.then474, label %if.end518, !dbg !9333

if.then474:                                       ; preds = %land.lhs.true470
  call void @llvm.dbg.declare(metadata float** %tang475, metadata !9334, metadata !DIExpression()), !dbg !9336
  %tang476 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 2, !dbg !9337
  %array477 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %tang476, i32 0, i32 0, !dbg !9338
  %336 = load [4 x float]*, [4 x float]** %array477, align 8, !dbg !9338
  %337 = load i32, i32* %a, align 4, !dbg !9339
  %mul478 = mul nsw i32 %337, 4, !dbg !9340
  %add479 = add nsw i32 %mul478, 0, !dbg !9341
  %idxprom480 = sext i32 %add479 to i64, !dbg !9342
  %arrayidx481 = getelementptr inbounds [4 x float], [4 x float]* %336, i64 %idxprom480, !dbg !9342
  %arraydecay482 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx481, i64 0, i64 0, !dbg !9342
  store float* %arraydecay482, float** %tang475, align 8, !dbg !9336
  %338 = load i8*, i8** %varray, align 8, !dbg !9343
  %339 = load i32, i32* %elementsize, align 4, !dbg !9344
  %340 = load i32, i32* %curface, align 4, !dbg !9345
  %mul483 = mul nsw i32 %339, %340, !dbg !9346
  %mul484 = mul nsw i32 %mul483, 3, !dbg !9347
  %341 = load i32, i32* %offset, align 4, !dbg !9348
  %add485 = add nsw i32 %mul484, %341, !dbg !9349
  %idxprom486 = sext i32 %add485 to i64, !dbg !9343
  %arrayidx487 = getelementptr inbounds i8, i8* %338, i64 %idxprom486, !dbg !9343
  %342 = bitcast i8* %arrayidx487 to float*, !dbg !9350
  %343 = load float*, float** %tang475, align 8, !dbg !9351
  call void @copy_v4_v4(float* %342, float* %343), !dbg !9352
  %tang488 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 2, !dbg !9353
  %array489 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %tang488, i32 0, i32 0, !dbg !9354
  %344 = load [4 x float]*, [4 x float]** %array489, align 8, !dbg !9354
  %345 = load i32, i32* %a, align 4, !dbg !9355
  %mul490 = mul nsw i32 %345, 4, !dbg !9356
  %add491 = add nsw i32 %mul490, 1, !dbg !9357
  %idxprom492 = sext i32 %add491 to i64, !dbg !9358
  %arrayidx493 = getelementptr inbounds [4 x float], [4 x float]* %344, i64 %idxprom492, !dbg !9358
  %arraydecay494 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx493, i64 0, i64 0, !dbg !9358
  store float* %arraydecay494, float** %tang475, align 8, !dbg !9359
  %346 = load i8*, i8** %varray, align 8, !dbg !9360
  %347 = load i32, i32* %elementsize, align 4, !dbg !9361
  %348 = load i32, i32* %curface, align 4, !dbg !9362
  %mul495 = mul nsw i32 %347, %348, !dbg !9363
  %mul496 = mul nsw i32 %mul495, 3, !dbg !9364
  %349 = load i32, i32* %offset, align 4, !dbg !9365
  %add497 = add nsw i32 %mul496, %349, !dbg !9366
  %350 = load i32, i32* %elementsize, align 4, !dbg !9367
  %add498 = add nsw i32 %add497, %350, !dbg !9368
  %idxprom499 = sext i32 %add498 to i64, !dbg !9360
  %arrayidx500 = getelementptr inbounds i8, i8* %346, i64 %idxprom499, !dbg !9360
  %351 = bitcast i8* %arrayidx500 to float*, !dbg !9369
  %352 = load float*, float** %tang475, align 8, !dbg !9370
  call void @copy_v4_v4(float* %351, float* %352), !dbg !9371
  %tang501 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 2, !dbg !9372
  %array502 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %tang501, i32 0, i32 0, !dbg !9373
  %353 = load [4 x float]*, [4 x float]** %array502, align 8, !dbg !9373
  %354 = load i32, i32* %a, align 4, !dbg !9374
  %mul503 = mul nsw i32 %354, 4, !dbg !9375
  %add504 = add nsw i32 %mul503, 2, !dbg !9376
  %idxprom505 = sext i32 %add504 to i64, !dbg !9377
  %arrayidx506 = getelementptr inbounds [4 x float], [4 x float]* %353, i64 %idxprom505, !dbg !9377
  %arraydecay507 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx506, i64 0, i64 0, !dbg !9377
  store float* %arraydecay507, float** %tang475, align 8, !dbg !9378
  %355 = load i8*, i8** %varray, align 8, !dbg !9379
  %356 = load i32, i32* %elementsize, align 4, !dbg !9380
  %357 = load i32, i32* %curface, align 4, !dbg !9381
  %mul508 = mul nsw i32 %356, %357, !dbg !9382
  %mul509 = mul nsw i32 %mul508, 3, !dbg !9383
  %358 = load i32, i32* %offset, align 4, !dbg !9384
  %add510 = add nsw i32 %mul509, %358, !dbg !9385
  %359 = load i32, i32* %elementsize, align 4, !dbg !9386
  %mul511 = mul nsw i32 %359, 2, !dbg !9387
  %add512 = add nsw i32 %add510, %mul511, !dbg !9388
  %idxprom513 = sext i32 %add512 to i64, !dbg !9379
  %arrayidx514 = getelementptr inbounds i8, i8* %355, i64 %idxprom513, !dbg !9379
  %360 = bitcast i8* %arrayidx514 to float*, !dbg !9389
  %361 = load float*, float** %tang475, align 8, !dbg !9390
  call void @copy_v4_v4(float* %360, float* %361), !dbg !9391
  %362 = load i32, i32* %offset, align 4, !dbg !9392
  %conv515 = sext i32 %362 to i64, !dbg !9392
  %add516 = add i64 %conv515, 16, !dbg !9392
  %conv517 = trunc i64 %add516 to i32, !dbg !9392
  store i32 %conv517, i32* %offset, align 4, !dbg !9392
  br label %if.end518, !dbg !9393

if.end518:                                        ; preds = %if.then474, %land.lhs.true470, %for.end467
  %363 = load i32, i32* %offset, align 4, !dbg !9394
  br label %if.end519, !dbg !9395

if.end519:                                        ; preds = %if.end518, %land.lhs.true285, %if.end282
  %364 = load i32, i32* %curface, align 4, !dbg !9396
  %inc520 = add nsw i32 %364, 1, !dbg !9396
  store i32 %inc520, i32* %curface, align 4, !dbg !9396
  %365 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9397
  %v4521 = getelementptr inbounds %struct.MFace, %struct.MFace* %365, i32 0, i32 3, !dbg !9399
  %366 = load i32, i32* %v4521, align 4, !dbg !9399
  %tobool522 = icmp ne i32 %366, 0, !dbg !9397
  br i1 %tobool522, label %if.then523, label %if.end769, !dbg !9400

if.then523:                                       ; preds = %if.end519
  %367 = load i8, i8* %do_draw, align 1, !dbg !9401
  %conv524 = zext i8 %367 to i32, !dbg !9401
  %tobool525 = icmp ne i32 %conv524, 0, !dbg !9401
  br i1 %tobool525, label %land.lhs.true526, label %if.end766, !dbg !9404

land.lhs.true526:                                 ; preds = %if.then523
  %368 = load i32, i32* %numdata, align 4, !dbg !9405
  %cmp527 = icmp ne i32 %368, 0, !dbg !9406
  br i1 %cmp527, label %if.then529, label %if.end766, !dbg !9407

if.then529:                                       ; preds = %land.lhs.true526
  store i32 0, i32* %offset, align 4, !dbg !9408
  %totorco530 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !9410
  %369 = load i32, i32* %totorco530, align 4, !dbg !9410
  %tobool531 = icmp ne i32 %369, 0, !dbg !9412
  br i1 %tobool531, label %land.lhs.true532, label %if.end573, !dbg !9413

land.lhs.true532:                                 ; preds = %if.then529
  %orco533 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 3, !dbg !9414
  %array534 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %orco533, i32 0, i32 0, !dbg !9415
  %370 = load [3 x float]*, [3 x float]** %array534, align 8, !dbg !9415
  %tobool535 = icmp ne [3 x float]* %370, null, !dbg !9416
  br i1 %tobool535, label %if.then536, label %if.end573, !dbg !9417

if.then536:                                       ; preds = %land.lhs.true532
  %371 = load i8*, i8** %varray, align 8, !dbg !9418
  %372 = load i32, i32* %elementsize, align 4, !dbg !9420
  %373 = load i32, i32* %curface, align 4, !dbg !9421
  %mul537 = mul nsw i32 %372, %373, !dbg !9422
  %mul538 = mul nsw i32 %mul537, 3, !dbg !9423
  %idxprom539 = sext i32 %mul538 to i64, !dbg !9418
  %arrayidx540 = getelementptr inbounds i8, i8* %371, i64 %idxprom539, !dbg !9418
  %374 = bitcast i8* %arrayidx540 to float*, !dbg !9424
  %orco541 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 3, !dbg !9425
  %array542 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %orco541, i32 0, i32 0, !dbg !9426
  %375 = load [3 x float]*, [3 x float]** %array542, align 8, !dbg !9426
  %376 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9427
  %v3543 = getelementptr inbounds %struct.MFace, %struct.MFace* %376, i32 0, i32 2, !dbg !9428
  %377 = load i32, i32* %v3543, align 4, !dbg !9428
  %idxprom544 = zext i32 %377 to i64, !dbg !9429
  %arrayidx545 = getelementptr inbounds [3 x float], [3 x float]* %375, i64 %idxprom544, !dbg !9429
  %arraydecay546 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx545, i64 0, i64 0, !dbg !9429
  call void @copy_v3_v3(float* %374, float* %arraydecay546), !dbg !9430
  %378 = load i8*, i8** %varray, align 8, !dbg !9431
  %379 = load i32, i32* %elementsize, align 4, !dbg !9432
  %380 = load i32, i32* %curface, align 4, !dbg !9433
  %mul547 = mul nsw i32 %379, %380, !dbg !9434
  %mul548 = mul nsw i32 %mul547, 3, !dbg !9435
  %381 = load i32, i32* %elementsize, align 4, !dbg !9436
  %add549 = add nsw i32 %mul548, %381, !dbg !9437
  %idxprom550 = sext i32 %add549 to i64, !dbg !9431
  %arrayidx551 = getelementptr inbounds i8, i8* %378, i64 %idxprom550, !dbg !9431
  %382 = bitcast i8* %arrayidx551 to float*, !dbg !9438
  %orco552 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 3, !dbg !9439
  %array553 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %orco552, i32 0, i32 0, !dbg !9440
  %383 = load [3 x float]*, [3 x float]** %array553, align 8, !dbg !9440
  %384 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9441
  %v4554 = getelementptr inbounds %struct.MFace, %struct.MFace* %384, i32 0, i32 3, !dbg !9442
  %385 = load i32, i32* %v4554, align 4, !dbg !9442
  %idxprom555 = zext i32 %385 to i64, !dbg !9443
  %arrayidx556 = getelementptr inbounds [3 x float], [3 x float]* %383, i64 %idxprom555, !dbg !9443
  %arraydecay557 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx556, i64 0, i64 0, !dbg !9443
  call void @copy_v3_v3(float* %382, float* %arraydecay557), !dbg !9444
  %386 = load i8*, i8** %varray, align 8, !dbg !9445
  %387 = load i32, i32* %elementsize, align 4, !dbg !9446
  %388 = load i32, i32* %curface, align 4, !dbg !9447
  %mul558 = mul nsw i32 %387, %388, !dbg !9448
  %mul559 = mul nsw i32 %mul558, 3, !dbg !9449
  %389 = load i32, i32* %elementsize, align 4, !dbg !9450
  %mul560 = mul nsw i32 %389, 2, !dbg !9451
  %add561 = add nsw i32 %mul559, %mul560, !dbg !9452
  %idxprom562 = sext i32 %add561 to i64, !dbg !9445
  %arrayidx563 = getelementptr inbounds i8, i8* %386, i64 %idxprom562, !dbg !9445
  %390 = bitcast i8* %arrayidx563 to float*, !dbg !9453
  %orco564 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 3, !dbg !9454
  %array565 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %orco564, i32 0, i32 0, !dbg !9455
  %391 = load [3 x float]*, [3 x float]** %array565, align 8, !dbg !9455
  %392 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9456
  %v1566 = getelementptr inbounds %struct.MFace, %struct.MFace* %392, i32 0, i32 0, !dbg !9457
  %393 = load i32, i32* %v1566, align 4, !dbg !9457
  %idxprom567 = zext i32 %393 to i64, !dbg !9458
  %arrayidx568 = getelementptr inbounds [3 x float], [3 x float]* %391, i64 %idxprom567, !dbg !9458
  %arraydecay569 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx568, i64 0, i64 0, !dbg !9458
  call void @copy_v3_v3(float* %390, float* %arraydecay569), !dbg !9459
  %394 = load i32, i32* %offset, align 4, !dbg !9460
  %conv570 = sext i32 %394 to i64, !dbg !9460
  %add571 = add i64 %conv570, 12, !dbg !9460
  %conv572 = trunc i64 %add571 to i32, !dbg !9460
  store i32 %conv572, i32* %offset, align 4, !dbg !9460
  br label %if.end573, !dbg !9461

if.end573:                                        ; preds = %if.then536, %land.lhs.true532, %if.then529
  store i32 0, i32* %b, align 4, !dbg !9462
  br label %for.cond574, !dbg !9464

for.cond574:                                      ; preds = %for.inc623, %if.end573
  %395 = load i32, i32* %b, align 4, !dbg !9465
  %tottface575 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 4, !dbg !9467
  %396 = load i32, i32* %tottface575, align 8, !dbg !9467
  %cmp576 = icmp slt i32 %395, %396, !dbg !9468
  br i1 %cmp576, label %for.body578, label %for.end625, !dbg !9469

for.body578:                                      ; preds = %for.cond574
  %tface579 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 0, !dbg !9470
  %397 = load i32, i32* %b, align 4, !dbg !9473
  %idxprom580 = sext i32 %397 to i64, !dbg !9474
  %arrayidx581 = getelementptr inbounds [8 x %struct.anon.0], [8 x %struct.anon.0]* %tface579, i64 0, i64 %idxprom580, !dbg !9474
  %array582 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx581, i32 0, i32 0, !dbg !9475
  %398 = load %struct.MTFace*, %struct.MTFace** %array582, align 8, !dbg !9475
  %tobool583 = icmp ne %struct.MTFace* %398, null, !dbg !9474
  br i1 %tobool583, label %if.then584, label %if.end622, !dbg !9476

if.then584:                                       ; preds = %for.body578
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf585, metadata !9477, metadata !DIExpression()), !dbg !9479
  %tface586 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 0, !dbg !9480
  %399 = load i32, i32* %b, align 4, !dbg !9481
  %idxprom587 = sext i32 %399 to i64, !dbg !9482
  %arrayidx588 = getelementptr inbounds [8 x %struct.anon.0], [8 x %struct.anon.0]* %tface586, i64 0, i64 %idxprom587, !dbg !9482
  %array589 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx588, i32 0, i32 0, !dbg !9483
  %400 = load %struct.MTFace*, %struct.MTFace** %array589, align 8, !dbg !9483
  %401 = load i32, i32* %a, align 4, !dbg !9484
  %idxprom590 = sext i32 %401 to i64, !dbg !9482
  %arrayidx591 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %400, i64 %idxprom590, !dbg !9482
  store %struct.MTFace* %arrayidx591, %struct.MTFace** %tf585, align 8, !dbg !9479
  %402 = load i8*, i8** %varray, align 8, !dbg !9485
  %403 = load i32, i32* %elementsize, align 4, !dbg !9486
  %404 = load i32, i32* %curface, align 4, !dbg !9487
  %mul592 = mul nsw i32 %403, %404, !dbg !9488
  %mul593 = mul nsw i32 %mul592, 3, !dbg !9489
  %405 = load i32, i32* %offset, align 4, !dbg !9490
  %add594 = add nsw i32 %mul593, %405, !dbg !9491
  %idxprom595 = sext i32 %add594 to i64, !dbg !9485
  %arrayidx596 = getelementptr inbounds i8, i8* %402, i64 %idxprom595, !dbg !9485
  %406 = bitcast i8* %arrayidx596 to float*, !dbg !9492
  %407 = load %struct.MTFace*, %struct.MTFace** %tf585, align 8, !dbg !9493
  %uv597 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %407, i32 0, i32 0, !dbg !9494
  %arrayidx598 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv597, i64 0, i64 2, !dbg !9493
  %arraydecay599 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx598, i64 0, i64 0, !dbg !9493
  call void @copy_v2_v2(float* %406, float* %arraydecay599), !dbg !9495
  %408 = load i8*, i8** %varray, align 8, !dbg !9496
  %409 = load i32, i32* %elementsize, align 4, !dbg !9497
  %410 = load i32, i32* %curface, align 4, !dbg !9498
  %mul600 = mul nsw i32 %409, %410, !dbg !9499
  %mul601 = mul nsw i32 %mul600, 3, !dbg !9500
  %411 = load i32, i32* %offset, align 4, !dbg !9501
  %add602 = add nsw i32 %mul601, %411, !dbg !9502
  %412 = load i32, i32* %elementsize, align 4, !dbg !9503
  %add603 = add nsw i32 %add602, %412, !dbg !9504
  %idxprom604 = sext i32 %add603 to i64, !dbg !9496
  %arrayidx605 = getelementptr inbounds i8, i8* %408, i64 %idxprom604, !dbg !9496
  %413 = bitcast i8* %arrayidx605 to float*, !dbg !9505
  %414 = load %struct.MTFace*, %struct.MTFace** %tf585, align 8, !dbg !9506
  %uv606 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %414, i32 0, i32 0, !dbg !9507
  %arrayidx607 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv606, i64 0, i64 3, !dbg !9506
  %arraydecay608 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx607, i64 0, i64 0, !dbg !9506
  call void @copy_v2_v2(float* %413, float* %arraydecay608), !dbg !9508
  %415 = load i8*, i8** %varray, align 8, !dbg !9509
  %416 = load i32, i32* %elementsize, align 4, !dbg !9510
  %417 = load i32, i32* %curface, align 4, !dbg !9511
  %mul609 = mul nsw i32 %416, %417, !dbg !9512
  %mul610 = mul nsw i32 %mul609, 3, !dbg !9513
  %418 = load i32, i32* %offset, align 4, !dbg !9514
  %add611 = add nsw i32 %mul610, %418, !dbg !9515
  %419 = load i32, i32* %elementsize, align 4, !dbg !9516
  %mul612 = mul nsw i32 %419, 2, !dbg !9517
  %add613 = add nsw i32 %add611, %mul612, !dbg !9518
  %idxprom614 = sext i32 %add613 to i64, !dbg !9509
  %arrayidx615 = getelementptr inbounds i8, i8* %415, i64 %idxprom614, !dbg !9509
  %420 = bitcast i8* %arrayidx615 to float*, !dbg !9519
  %421 = load %struct.MTFace*, %struct.MTFace** %tf585, align 8, !dbg !9520
  %uv616 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %421, i32 0, i32 0, !dbg !9521
  %arrayidx617 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv616, i64 0, i64 0, !dbg !9520
  %arraydecay618 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx617, i64 0, i64 0, !dbg !9520
  call void @copy_v2_v2(float* %420, float* %arraydecay618), !dbg !9522
  %422 = load i32, i32* %offset, align 4, !dbg !9523
  %conv619 = sext i32 %422 to i64, !dbg !9523
  %add620 = add i64 %conv619, 8, !dbg !9523
  %conv621 = trunc i64 %add620 to i32, !dbg !9523
  store i32 %conv621, i32* %offset, align 4, !dbg !9523
  br label %if.end622, !dbg !9524

if.end622:                                        ; preds = %if.then584, %for.body578
  br label %for.inc623, !dbg !9525

for.inc623:                                       ; preds = %if.end622
  %423 = load i32, i32* %b, align 4, !dbg !9526
  %inc624 = add nsw i32 %423, 1, !dbg !9526
  store i32 %inc624, i32* %b, align 4, !dbg !9526
  br label %for.cond574, !dbg !9527, !llvm.loop !9528

for.end625:                                       ; preds = %for.cond574
  store i32 0, i32* %b, align 4, !dbg !9530
  br label %for.cond626, !dbg !9532

for.cond626:                                      ; preds = %for.inc712, %for.end625
  %424 = load i32, i32* %b, align 4, !dbg !9533
  %totmcol627 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 5, !dbg !9535
  %425 = load i32, i32* %totmcol627, align 4, !dbg !9535
  %cmp628 = icmp slt i32 %424, %425, !dbg !9536
  br i1 %cmp628, label %for.body630, label %for.end714, !dbg !9537

for.body630:                                      ; preds = %for.cond626
  %mcol631 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 1, !dbg !9538
  %426 = load i32, i32* %b, align 4, !dbg !9541
  %idxprom632 = sext i32 %426 to i64, !dbg !9542
  %arrayidx633 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %mcol631, i64 0, i64 %idxprom632, !dbg !9542
  %array634 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx633, i32 0, i32 0, !dbg !9543
  %427 = load %struct.MCol*, %struct.MCol** %array634, align 8, !dbg !9543
  %tobool635 = icmp ne %struct.MCol* %427, null, !dbg !9542
  br i1 %tobool635, label %if.then636, label %if.end711, !dbg !9544

if.then636:                                       ; preds = %for.body630
  call void @llvm.dbg.declare(metadata %struct.MCol** %cp637, metadata !9545, metadata !DIExpression()), !dbg !9547
  %mcol638 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 1, !dbg !9548
  %428 = load i32, i32* %b, align 4, !dbg !9549
  %idxprom639 = sext i32 %428 to i64, !dbg !9550
  %arrayidx640 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %mcol638, i64 0, i64 %idxprom639, !dbg !9550
  %array641 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx640, i32 0, i32 0, !dbg !9551
  %429 = load %struct.MCol*, %struct.MCol** %array641, align 8, !dbg !9551
  %430 = load i32, i32* %a, align 4, !dbg !9552
  %mul642 = mul nsw i32 %430, 4, !dbg !9553
  %add643 = add nsw i32 %mul642, 2, !dbg !9554
  %idxprom644 = sext i32 %add643 to i64, !dbg !9550
  %arrayidx645 = getelementptr inbounds %struct.MCol, %struct.MCol* %429, i64 %idxprom644, !dbg !9550
  store %struct.MCol* %arrayidx645, %struct.MCol** %cp637, align 8, !dbg !9547
  call void @llvm.dbg.declare(metadata [4 x i8]* %col646, metadata !9555, metadata !DIExpression()), !dbg !9556
  %431 = load %struct.MCol*, %struct.MCol** %cp637, align 8, !dbg !9557
  %b647 = getelementptr inbounds %struct.MCol, %struct.MCol* %431, i32 0, i32 3, !dbg !9558
  %432 = load i8, i8* %b647, align 1, !dbg !9558
  %arrayidx648 = getelementptr inbounds [4 x i8], [4 x i8]* %col646, i64 0, i64 0, !dbg !9559
  store i8 %432, i8* %arrayidx648, align 1, !dbg !9560
  %433 = load %struct.MCol*, %struct.MCol** %cp637, align 8, !dbg !9561
  %g649 = getelementptr inbounds %struct.MCol, %struct.MCol* %433, i32 0, i32 2, !dbg !9562
  %434 = load i8, i8* %g649, align 1, !dbg !9562
  %arrayidx650 = getelementptr inbounds [4 x i8], [4 x i8]* %col646, i64 0, i64 1, !dbg !9563
  store i8 %434, i8* %arrayidx650, align 1, !dbg !9564
  %435 = load %struct.MCol*, %struct.MCol** %cp637, align 8, !dbg !9565
  %r651 = getelementptr inbounds %struct.MCol, %struct.MCol* %435, i32 0, i32 1, !dbg !9566
  %436 = load i8, i8* %r651, align 1, !dbg !9566
  %arrayidx652 = getelementptr inbounds [4 x i8], [4 x i8]* %col646, i64 0, i64 2, !dbg !9567
  store i8 %436, i8* %arrayidx652, align 1, !dbg !9568
  %437 = load %struct.MCol*, %struct.MCol** %cp637, align 8, !dbg !9569
  %a653 = getelementptr inbounds %struct.MCol, %struct.MCol* %437, i32 0, i32 0, !dbg !9570
  %438 = load i8, i8* %a653, align 1, !dbg !9570
  %arrayidx654 = getelementptr inbounds [4 x i8], [4 x i8]* %col646, i64 0, i64 3, !dbg !9571
  store i8 %438, i8* %arrayidx654, align 1, !dbg !9572
  %439 = load i8*, i8** %varray, align 8, !dbg !9573
  %440 = load i32, i32* %elementsize, align 4, !dbg !9574
  %441 = load i32, i32* %curface, align 4, !dbg !9575
  %mul655 = mul nsw i32 %440, %441, !dbg !9576
  %mul656 = mul nsw i32 %mul655, 3, !dbg !9577
  %442 = load i32, i32* %offset, align 4, !dbg !9578
  %add657 = add nsw i32 %mul656, %442, !dbg !9579
  %idxprom658 = sext i32 %add657 to i64, !dbg !9573
  %arrayidx659 = getelementptr inbounds i8, i8* %439, i64 %idxprom658, !dbg !9573
  %arraydecay660 = getelementptr inbounds [4 x i8], [4 x i8]* %col646, i64 0, i64 0, !dbg !9580
  call void @copy_v4_v4_char(i8* %arrayidx659, i8* %arraydecay660), !dbg !9581
  %mcol661 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 1, !dbg !9582
  %443 = load i32, i32* %b, align 4, !dbg !9583
  %idxprom662 = sext i32 %443 to i64, !dbg !9584
  %arrayidx663 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %mcol661, i64 0, i64 %idxprom662, !dbg !9584
  %array664 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx663, i32 0, i32 0, !dbg !9585
  %444 = load %struct.MCol*, %struct.MCol** %array664, align 8, !dbg !9585
  %445 = load i32, i32* %a, align 4, !dbg !9586
  %mul665 = mul nsw i32 %445, 4, !dbg !9587
  %add666 = add nsw i32 %mul665, 3, !dbg !9588
  %idxprom667 = sext i32 %add666 to i64, !dbg !9584
  %arrayidx668 = getelementptr inbounds %struct.MCol, %struct.MCol* %444, i64 %idxprom667, !dbg !9584
  store %struct.MCol* %arrayidx668, %struct.MCol** %cp637, align 8, !dbg !9589
  %446 = load %struct.MCol*, %struct.MCol** %cp637, align 8, !dbg !9590
  %b669 = getelementptr inbounds %struct.MCol, %struct.MCol* %446, i32 0, i32 3, !dbg !9591
  %447 = load i8, i8* %b669, align 1, !dbg !9591
  %arrayidx670 = getelementptr inbounds [4 x i8], [4 x i8]* %col646, i64 0, i64 0, !dbg !9592
  store i8 %447, i8* %arrayidx670, align 1, !dbg !9593
  %448 = load %struct.MCol*, %struct.MCol** %cp637, align 8, !dbg !9594
  %g671 = getelementptr inbounds %struct.MCol, %struct.MCol* %448, i32 0, i32 2, !dbg !9595
  %449 = load i8, i8* %g671, align 1, !dbg !9595
  %arrayidx672 = getelementptr inbounds [4 x i8], [4 x i8]* %col646, i64 0, i64 1, !dbg !9596
  store i8 %449, i8* %arrayidx672, align 1, !dbg !9597
  %450 = load %struct.MCol*, %struct.MCol** %cp637, align 8, !dbg !9598
  %r673 = getelementptr inbounds %struct.MCol, %struct.MCol* %450, i32 0, i32 1, !dbg !9599
  %451 = load i8, i8* %r673, align 1, !dbg !9599
  %arrayidx674 = getelementptr inbounds [4 x i8], [4 x i8]* %col646, i64 0, i64 2, !dbg !9600
  store i8 %451, i8* %arrayidx674, align 1, !dbg !9601
  %452 = load %struct.MCol*, %struct.MCol** %cp637, align 8, !dbg !9602
  %a675 = getelementptr inbounds %struct.MCol, %struct.MCol* %452, i32 0, i32 0, !dbg !9603
  %453 = load i8, i8* %a675, align 1, !dbg !9603
  %arrayidx676 = getelementptr inbounds [4 x i8], [4 x i8]* %col646, i64 0, i64 3, !dbg !9604
  store i8 %453, i8* %arrayidx676, align 1, !dbg !9605
  %454 = load i8*, i8** %varray, align 8, !dbg !9606
  %455 = load i32, i32* %elementsize, align 4, !dbg !9607
  %456 = load i32, i32* %curface, align 4, !dbg !9608
  %mul677 = mul nsw i32 %455, %456, !dbg !9609
  %mul678 = mul nsw i32 %mul677, 3, !dbg !9610
  %457 = load i32, i32* %offset, align 4, !dbg !9611
  %add679 = add nsw i32 %mul678, %457, !dbg !9612
  %458 = load i32, i32* %elementsize, align 4, !dbg !9613
  %add680 = add nsw i32 %add679, %458, !dbg !9614
  %idxprom681 = sext i32 %add680 to i64, !dbg !9606
  %arrayidx682 = getelementptr inbounds i8, i8* %454, i64 %idxprom681, !dbg !9606
  %arraydecay683 = getelementptr inbounds [4 x i8], [4 x i8]* %col646, i64 0, i64 0, !dbg !9615
  call void @copy_v4_v4_char(i8* %arrayidx682, i8* %arraydecay683), !dbg !9616
  %mcol684 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 1, !dbg !9617
  %459 = load i32, i32* %b, align 4, !dbg !9618
  %idxprom685 = sext i32 %459 to i64, !dbg !9619
  %arrayidx686 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %mcol684, i64 0, i64 %idxprom685, !dbg !9619
  %array687 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx686, i32 0, i32 0, !dbg !9620
  %460 = load %struct.MCol*, %struct.MCol** %array687, align 8, !dbg !9620
  %461 = load i32, i32* %a, align 4, !dbg !9621
  %mul688 = mul nsw i32 %461, 4, !dbg !9622
  %add689 = add nsw i32 %mul688, 0, !dbg !9623
  %idxprom690 = sext i32 %add689 to i64, !dbg !9619
  %arrayidx691 = getelementptr inbounds %struct.MCol, %struct.MCol* %460, i64 %idxprom690, !dbg !9619
  store %struct.MCol* %arrayidx691, %struct.MCol** %cp637, align 8, !dbg !9624
  %462 = load %struct.MCol*, %struct.MCol** %cp637, align 8, !dbg !9625
  %b692 = getelementptr inbounds %struct.MCol, %struct.MCol* %462, i32 0, i32 3, !dbg !9626
  %463 = load i8, i8* %b692, align 1, !dbg !9626
  %arrayidx693 = getelementptr inbounds [4 x i8], [4 x i8]* %col646, i64 0, i64 0, !dbg !9627
  store i8 %463, i8* %arrayidx693, align 1, !dbg !9628
  %464 = load %struct.MCol*, %struct.MCol** %cp637, align 8, !dbg !9629
  %g694 = getelementptr inbounds %struct.MCol, %struct.MCol* %464, i32 0, i32 2, !dbg !9630
  %465 = load i8, i8* %g694, align 1, !dbg !9630
  %arrayidx695 = getelementptr inbounds [4 x i8], [4 x i8]* %col646, i64 0, i64 1, !dbg !9631
  store i8 %465, i8* %arrayidx695, align 1, !dbg !9632
  %466 = load %struct.MCol*, %struct.MCol** %cp637, align 8, !dbg !9633
  %r696 = getelementptr inbounds %struct.MCol, %struct.MCol* %466, i32 0, i32 1, !dbg !9634
  %467 = load i8, i8* %r696, align 1, !dbg !9634
  %arrayidx697 = getelementptr inbounds [4 x i8], [4 x i8]* %col646, i64 0, i64 2, !dbg !9635
  store i8 %467, i8* %arrayidx697, align 1, !dbg !9636
  %468 = load %struct.MCol*, %struct.MCol** %cp637, align 8, !dbg !9637
  %a698 = getelementptr inbounds %struct.MCol, %struct.MCol* %468, i32 0, i32 0, !dbg !9638
  %469 = load i8, i8* %a698, align 1, !dbg !9638
  %arrayidx699 = getelementptr inbounds [4 x i8], [4 x i8]* %col646, i64 0, i64 3, !dbg !9639
  store i8 %469, i8* %arrayidx699, align 1, !dbg !9640
  %470 = load i8*, i8** %varray, align 8, !dbg !9641
  %471 = load i32, i32* %elementsize, align 4, !dbg !9642
  %472 = load i32, i32* %curface, align 4, !dbg !9643
  %mul700 = mul nsw i32 %471, %472, !dbg !9644
  %mul701 = mul nsw i32 %mul700, 3, !dbg !9645
  %473 = load i32, i32* %offset, align 4, !dbg !9646
  %add702 = add nsw i32 %mul701, %473, !dbg !9647
  %474 = load i32, i32* %elementsize, align 4, !dbg !9648
  %mul703 = mul nsw i32 %474, 2, !dbg !9649
  %add704 = add nsw i32 %add702, %mul703, !dbg !9650
  %idxprom705 = sext i32 %add704 to i64, !dbg !9641
  %arrayidx706 = getelementptr inbounds i8, i8* %470, i64 %idxprom705, !dbg !9641
  %arraydecay707 = getelementptr inbounds [4 x i8], [4 x i8]* %col646, i64 0, i64 0, !dbg !9651
  call void @copy_v4_v4_char(i8* %arrayidx706, i8* %arraydecay707), !dbg !9652
  %475 = load i32, i32* %offset, align 4, !dbg !9653
  %conv708 = sext i32 %475 to i64, !dbg !9653
  %add709 = add i64 %conv708, 4, !dbg !9653
  %conv710 = trunc i64 %add709 to i32, !dbg !9653
  store i32 %conv710, i32* %offset, align 4, !dbg !9653
  br label %if.end711, !dbg !9654

if.end711:                                        ; preds = %if.then636, %for.body630
  br label %for.inc712, !dbg !9655

for.inc712:                                       ; preds = %if.end711
  %476 = load i32, i32* %b, align 4, !dbg !9656
  %inc713 = add nsw i32 %476, 1, !dbg !9656
  store i32 %inc713, i32* %b, align 4, !dbg !9656
  br label %for.cond626, !dbg !9657, !llvm.loop !9658

for.end714:                                       ; preds = %for.cond626
  %tottang715 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 6, !dbg !9660
  %477 = load i32, i32* %tottang715, align 8, !dbg !9660
  %tobool716 = icmp ne i32 %477, 0, !dbg !9662
  br i1 %tobool716, label %land.lhs.true717, label %if.end765, !dbg !9663

land.lhs.true717:                                 ; preds = %for.end714
  %tang718 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 2, !dbg !9664
  %array719 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %tang718, i32 0, i32 0, !dbg !9665
  %478 = load [4 x float]*, [4 x float]** %array719, align 8, !dbg !9665
  %tobool720 = icmp ne [4 x float]* %478, null, !dbg !9666
  br i1 %tobool720, label %if.then721, label %if.end765, !dbg !9667

if.then721:                                       ; preds = %land.lhs.true717
  call void @llvm.dbg.declare(metadata float** %tang722, metadata !9668, metadata !DIExpression()), !dbg !9670
  %tang723 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 2, !dbg !9671
  %array724 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %tang723, i32 0, i32 0, !dbg !9672
  %479 = load [4 x float]*, [4 x float]** %array724, align 8, !dbg !9672
  %480 = load i32, i32* %a, align 4, !dbg !9673
  %mul725 = mul nsw i32 %480, 4, !dbg !9674
  %add726 = add nsw i32 %mul725, 2, !dbg !9675
  %idxprom727 = sext i32 %add726 to i64, !dbg !9676
  %arrayidx728 = getelementptr inbounds [4 x float], [4 x float]* %479, i64 %idxprom727, !dbg !9676
  %arraydecay729 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx728, i64 0, i64 0, !dbg !9676
  store float* %arraydecay729, float** %tang722, align 8, !dbg !9670
  %481 = load i8*, i8** %varray, align 8, !dbg !9677
  %482 = load i32, i32* %elementsize, align 4, !dbg !9678
  %483 = load i32, i32* %curface, align 4, !dbg !9679
  %mul730 = mul nsw i32 %482, %483, !dbg !9680
  %mul731 = mul nsw i32 %mul730, 3, !dbg !9681
  %484 = load i32, i32* %offset, align 4, !dbg !9682
  %add732 = add nsw i32 %mul731, %484, !dbg !9683
  %idxprom733 = sext i32 %add732 to i64, !dbg !9677
  %arrayidx734 = getelementptr inbounds i8, i8* %481, i64 %idxprom733, !dbg !9677
  %485 = bitcast i8* %arrayidx734 to float*, !dbg !9684
  %486 = load float*, float** %tang722, align 8, !dbg !9685
  call void @copy_v4_v4(float* %485, float* %486), !dbg !9686
  %tang735 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 2, !dbg !9687
  %array736 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %tang735, i32 0, i32 0, !dbg !9688
  %487 = load [4 x float]*, [4 x float]** %array736, align 8, !dbg !9688
  %488 = load i32, i32* %a, align 4, !dbg !9689
  %mul737 = mul nsw i32 %488, 4, !dbg !9690
  %add738 = add nsw i32 %mul737, 3, !dbg !9691
  %idxprom739 = sext i32 %add738 to i64, !dbg !9692
  %arrayidx740 = getelementptr inbounds [4 x float], [4 x float]* %487, i64 %idxprom739, !dbg !9692
  %arraydecay741 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx740, i64 0, i64 0, !dbg !9692
  store float* %arraydecay741, float** %tang722, align 8, !dbg !9693
  %489 = load i8*, i8** %varray, align 8, !dbg !9694
  %490 = load i32, i32* %elementsize, align 4, !dbg !9695
  %491 = load i32, i32* %curface, align 4, !dbg !9696
  %mul742 = mul nsw i32 %490, %491, !dbg !9697
  %mul743 = mul nsw i32 %mul742, 3, !dbg !9698
  %492 = load i32, i32* %offset, align 4, !dbg !9699
  %add744 = add nsw i32 %mul743, %492, !dbg !9700
  %493 = load i32, i32* %elementsize, align 4, !dbg !9701
  %add745 = add nsw i32 %add744, %493, !dbg !9702
  %idxprom746 = sext i32 %add745 to i64, !dbg !9694
  %arrayidx747 = getelementptr inbounds i8, i8* %489, i64 %idxprom746, !dbg !9694
  %494 = bitcast i8* %arrayidx747 to float*, !dbg !9703
  %495 = load float*, float** %tang722, align 8, !dbg !9704
  call void @copy_v4_v4(float* %494, float* %495), !dbg !9705
  %tang748 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 2, !dbg !9706
  %array749 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %tang748, i32 0, i32 0, !dbg !9707
  %496 = load [4 x float]*, [4 x float]** %array749, align 8, !dbg !9707
  %497 = load i32, i32* %a, align 4, !dbg !9708
  %mul750 = mul nsw i32 %497, 4, !dbg !9709
  %add751 = add nsw i32 %mul750, 0, !dbg !9710
  %idxprom752 = sext i32 %add751 to i64, !dbg !9711
  %arrayidx753 = getelementptr inbounds [4 x float], [4 x float]* %496, i64 %idxprom752, !dbg !9711
  %arraydecay754 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx753, i64 0, i64 0, !dbg !9711
  store float* %arraydecay754, float** %tang722, align 8, !dbg !9712
  %498 = load i8*, i8** %varray, align 8, !dbg !9713
  %499 = load i32, i32* %elementsize, align 4, !dbg !9714
  %500 = load i32, i32* %curface, align 4, !dbg !9715
  %mul755 = mul nsw i32 %499, %500, !dbg !9716
  %mul756 = mul nsw i32 %mul755, 3, !dbg !9717
  %501 = load i32, i32* %offset, align 4, !dbg !9718
  %add757 = add nsw i32 %mul756, %501, !dbg !9719
  %502 = load i32, i32* %elementsize, align 4, !dbg !9720
  %mul758 = mul nsw i32 %502, 2, !dbg !9721
  %add759 = add nsw i32 %add757, %mul758, !dbg !9722
  %idxprom760 = sext i32 %add759 to i64, !dbg !9713
  %arrayidx761 = getelementptr inbounds i8, i8* %498, i64 %idxprom760, !dbg !9713
  %503 = bitcast i8* %arrayidx761 to float*, !dbg !9723
  %504 = load float*, float** %tang722, align 8, !dbg !9724
  call void @copy_v4_v4(float* %503, float* %504), !dbg !9725
  %505 = load i32, i32* %offset, align 4, !dbg !9726
  %conv762 = sext i32 %505 to i64, !dbg !9726
  %add763 = add i64 %conv762, 16, !dbg !9726
  %conv764 = trunc i64 %add763 to i32, !dbg !9726
  store i32 %conv764, i32* %offset, align 4, !dbg !9726
  br label %if.end765, !dbg !9727

if.end765:                                        ; preds = %if.then721, %land.lhs.true717, %for.end714
  %506 = load i32, i32* %offset, align 4, !dbg !9728
  br label %if.end766, !dbg !9729

if.end766:                                        ; preds = %if.end765, %land.lhs.true526, %if.then523
  %507 = load i32, i32* %curface, align 4, !dbg !9730
  %inc767 = add nsw i32 %507, 1, !dbg !9730
  store i32 %inc767, i32* %curface, align 4, !dbg !9730
  %508 = load i32, i32* %i, align 4, !dbg !9731
  %inc768 = add nsw i32 %508, 1, !dbg !9731
  store i32 %inc768, i32* %i, align 4, !dbg !9731
  br label %if.end769, !dbg !9732

if.end769:                                        ; preds = %if.end766, %if.end519
  br label %for.inc770, !dbg !9733

for.inc770:                                       ; preds = %if.end769
  %509 = load i32, i32* %i, align 4, !dbg !9734
  %inc771 = add nsw i32 %509, 1, !dbg !9734
  store i32 %inc771, i32* %i, align 4, !dbg !9734
  br label %for.cond139, !dbg !9735, !llvm.loop !9736

for.end772:                                       ; preds = %for.cond139
  %510 = load i32, i32* %curface, align 4, !dbg !9738
  %511 = load i32, i32* %start, align 4, !dbg !9739
  %sub773 = sub nsw i32 %510, %511, !dbg !9740
  store i32 %sub773, i32* %numfaces, align 4, !dbg !9741
  %512 = load i32, i32* %numfaces, align 4, !dbg !9742
  %cmp774 = icmp sgt i32 %512, 0, !dbg !9744
  br i1 %cmp774, label %if.then776, label %if.end788, !dbg !9745

if.then776:                                       ; preds = %for.end772
  %513 = load i8, i8* %do_draw, align 1, !dbg !9746
  %tobool777 = icmp ne i8 %513, 0, !dbg !9746
  br i1 %tobool777, label %if.then778, label %if.end787, !dbg !9749

if.then778:                                       ; preds = %if.then776
  %514 = load i32, i32* %numdata, align 4, !dbg !9750
  %cmp779 = icmp ne i32 %514, 0, !dbg !9753
  br i1 %cmp779, label %if.then781, label %if.end783, !dbg !9754

if.then781:                                       ; preds = %if.then778
  %515 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer, align 8, !dbg !9755
  call void @GPU_buffer_unlock(%struct.GPUBuffer* %515), !dbg !9757
  %516 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer, align 8, !dbg !9758
  %arraydecay782 = getelementptr inbounds [32 x %struct.GPUAttrib], [32 x %struct.GPUAttrib]* %datatypes, i64 0, i64 0, !dbg !9759
  %517 = load i32, i32* %numdata, align 4, !dbg !9760
  call void @GPU_interleaved_attrib_setup(%struct.GPUBuffer* %516, %struct.GPUAttrib* %arraydecay782, i32 %517), !dbg !9761
  br label %if.end783, !dbg !9762

if.end783:                                        ; preds = %if.then781, %if.then778
  %518 = load i32, i32* %start, align 4, !dbg !9763
  %mul784 = mul nsw i32 %518, 3, !dbg !9764
  %519 = load i32, i32* %curface, align 4, !dbg !9765
  %520 = load i32, i32* %start, align 4, !dbg !9766
  %sub785 = sub nsw i32 %519, %520, !dbg !9767
  %mul786 = mul nsw i32 %sub785, 3, !dbg !9768
  call void @glDrawArrays(i32 4, i32 %mul784, i32 %mul786), !dbg !9769
  br label %if.end787, !dbg !9770

if.end787:                                        ; preds = %if.end783, %if.then776
  br label %if.end788, !dbg !9771

if.end788:                                        ; preds = %if.end787, %for.end772
  call void @GPU_buffer_unbind(), !dbg !9772
  br label %if.end789, !dbg !9773

if.end789:                                        ; preds = %if.end788, %if.else135
  %521 = load %struct.GPUBuffer*, %struct.GPUBuffer** %buffer, align 8, !dbg !9774
  call void @GPU_buffer_free(%struct.GPUBuffer* %521), !dbg !9775
  br label %if.end790

if.end790:                                        ; preds = %if.end789, %for.end
  call void @glShadeModel(i32 7424), !dbg !9776
  br label %return, !dbg !9777

return:                                           ; preds = %if.end790, %if.then275, %if.then269, %if.end19
  ret void, !dbg !9777
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_drawMappedFacesMat(%struct.DerivedMesh* %dm, void (i8*, i32, i8*)* %setMaterial, i8 (i8*, i32)* %setFace, i8* %userData) #0 !dbg !9778 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %setMaterial.addr = alloca void (i8*, i32, i8*)*, align 8
  %setFace.addr = alloca i8 (i8*, i32)*, align 8
  %userData.addr = alloca i8*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %gattribs = alloca %struct.GPUVertexAttribs, align 4
  %attribs = alloca %struct.DMVertexAttribs, align 8
  %mvert = alloca %struct.MVert*, align 8
  %mf = alloca %struct.MFace*, align 8
  %nors = alloca [3 x float]*, align 8
  %lnors = alloca [4 x [3 x i16]]*, align 8
  %a = alloca i32, align 4
  %matnr = alloca i32, align 4
  %new_matnr = alloca i32, align 4
  %orig = alloca i32, align 4
  %index_mf_to_mpoly = alloca i32*, align 8
  %index_mp_to_orig = alloca i32*, align 8
  %smoothnormal = alloca i8, align 1
  %ln1 = alloca [3 x i16]*, align 8
  %ln2 = alloca [3 x i16]*, align 8
  %ln3 = alloca [3 x i16]*, align 8
  %ln4 = alloca [3 x i16]*, align 8
  %nor = alloca [3 x float], align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !9779, metadata !DIExpression()), !dbg !9780
  store void (i8*, i32, i8*)* %setMaterial, void (i8*, i32, i8*)** %setMaterial.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32, i8*)** %setMaterial.addr, metadata !9781, metadata !DIExpression()), !dbg !9782
  store i8 (i8*, i32)* %setFace, i8 (i8*, i32)** %setFace.addr, align 8
  call void @llvm.dbg.declare(metadata i8 (i8*, i32)** %setFace.addr, metadata !9783, metadata !DIExpression()), !dbg !9784
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !9785, metadata !DIExpression()), !dbg !9786
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !9787, metadata !DIExpression()), !dbg !9788
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9789
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !9790
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !9788
  call void @llvm.dbg.declare(metadata %struct.GPUVertexAttribs* %gattribs, metadata !9791, metadata !DIExpression()), !dbg !9792
  call void @llvm.dbg.declare(metadata %struct.DMVertexAttribs* %attribs, metadata !9793, metadata !DIExpression()), !dbg !9794
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !9795, metadata !DIExpression()), !dbg !9796
  %2 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !9797
  %mvert1 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %2, i32 0, i32 1, !dbg !9798
  %3 = load %struct.MVert*, %struct.MVert** %mvert1, align 8, !dbg !9798
  store %struct.MVert* %3, %struct.MVert** %mvert, align 8, !dbg !9796
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !9799, metadata !DIExpression()), !dbg !9800
  %4 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !9801
  %mface = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %4, i32 0, i32 3, !dbg !9802
  %5 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9802
  store %struct.MFace* %5, %struct.MFace** %mf, align 8, !dbg !9800
  call void @llvm.dbg.declare(metadata [3 x float]** %nors, metadata !9803, metadata !DIExpression()), !dbg !9804
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9805
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 52, !dbg !9806
  %7 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !9806
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9807
  %call = call i8* %7(%struct.DerivedMesh* %8, i32 8), !dbg !9805
  %9 = bitcast i8* %call to [3 x float]*, !dbg !9805
  store [3 x float]* %9, [3 x float]** %nors, align 8, !dbg !9804
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %lnors, metadata !9808, metadata !DIExpression()), !dbg !9809
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9810
  %getTessFaceDataArray2 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 52, !dbg !9811
  %11 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray2, align 8, !dbg !9811
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9812
  %call3 = call i8* %11(%struct.DerivedMesh* %12, i32 40), !dbg !9810
  %13 = bitcast i8* %call3 to [4 x [3 x i16]]*, !dbg !9810
  store [4 x [3 x i16]]* %13, [4 x [3 x i16]]** %lnors, align 8, !dbg !9809
  call void @llvm.dbg.declare(metadata i32* %a, metadata !9813, metadata !DIExpression()), !dbg !9814
  call void @llvm.dbg.declare(metadata i32* %matnr, metadata !9815, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.declare(metadata i32* %new_matnr, metadata !9817, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.declare(metadata i32* %orig, metadata !9819, metadata !DIExpression()), !dbg !9820
  call void @llvm.dbg.declare(metadata i32** %index_mf_to_mpoly, metadata !9821, metadata !DIExpression()), !dbg !9822
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9823
  %getTessFaceDataArray4 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %14, i32 0, i32 52, !dbg !9824
  %15 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray4, align 8, !dbg !9824
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9825
  %call5 = call i8* %15(%struct.DerivedMesh* %16, i32 7), !dbg !9823
  %17 = bitcast i8* %call5 to i32*, !dbg !9823
  store i32* %17, i32** %index_mf_to_mpoly, align 8, !dbg !9822
  call void @llvm.dbg.declare(metadata i32** %index_mp_to_orig, metadata !9826, metadata !DIExpression()), !dbg !9827
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9828
  %getPolyDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %18, i32 0, i32 54, !dbg !9829
  %19 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getPolyDataArray, align 8, !dbg !9829
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9830
  %call6 = call i8* %19(%struct.DerivedMesh* %20, i32 7), !dbg !9828
  %21 = bitcast i8* %call6 to i32*, !dbg !9828
  store i32* %21, i32** %index_mp_to_orig, align 8, !dbg !9827
  %22 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !9831
  %cmp = icmp eq i32* %22, null, !dbg !9833
  br i1 %cmp, label %if.then, label %if.end, !dbg !9834

if.then:                                          ; preds = %entry
  store i32* null, i32** %index_mp_to_orig, align 8, !dbg !9835
  br label %if.end, !dbg !9837

if.end:                                           ; preds = %if.then, %entry
  %23 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !9838
  %pbvh = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %23, i32 0, i32 6, !dbg !9840
  %24 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !9840
  %tobool = icmp ne %struct.PBVH* %24, null, !dbg !9838
  br i1 %tobool, label %land.lhs.true, label %if.end18, !dbg !9841

land.lhs.true:                                    ; preds = %if.end
  %25 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !9842
  %pbvh_draw = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %25, i32 0, i32 7, !dbg !9843
  %26 = load i8, i8* %pbvh_draw, align 8, !dbg !9843
  %conv = zext i8 %26 to i32, !dbg !9842
  %tobool7 = icmp ne i32 %conv, 0, !dbg !9842
  br i1 %tobool7, label %land.lhs.true8, label %if.end18, !dbg !9844

land.lhs.true8:                                   ; preds = %land.lhs.true
  %27 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !9845
  %pbvh9 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %27, i32 0, i32 6, !dbg !9846
  %28 = load %struct.PBVH*, %struct.PBVH** %pbvh9, align 8, !dbg !9846
  %call10 = call i32 @BKE_pbvh_type(%struct.PBVH* %28), !dbg !9847
  %cmp11 = icmp eq i32 %call10, 2, !dbg !9848
  br i1 %cmp11, label %if.then13, label %if.end18, !dbg !9849

if.then13:                                        ; preds = %land.lhs.true8
  %29 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9850
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %29, i32 0, i32 7, !dbg !9853
  %30 = load i32, i32* %numTessFaceData, align 8, !dbg !9853
  %tobool14 = icmp ne i32 %30, 0, !dbg !9850
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !9854

if.then15:                                        ; preds = %if.then13
  %31 = load void (i8*, i32, i8*)*, void (i8*, i32, i8*)** %setMaterial.addr, align 8, !dbg !9855
  %32 = load i8*, i8** %userData.addr, align 8, !dbg !9857
  %33 = bitcast %struct.GPUVertexAttribs* %gattribs to i8*, !dbg !9858
  call void %31(i8* %32, i32 1, i8* %33), !dbg !9855
  %34 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !9859
  %pbvh16 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %34, i32 0, i32 6, !dbg !9860
  %35 = load %struct.PBVH*, %struct.PBVH** %pbvh16, align 8, !dbg !9860
  call void @BKE_pbvh_draw(%struct.PBVH* %35, [4 x float]* null, [3 x float]* null, i32 (i32, i8*)* null, i8 zeroext 0), !dbg !9861
  br label %if.end17, !dbg !9862

if.end17:                                         ; preds = %if.then15, %if.then13
  br label %return, !dbg !9863

if.end18:                                         ; preds = %land.lhs.true8, %land.lhs.true, %if.end
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9864
  call void @cdDM_update_normals_from_pbvh(%struct.DerivedMesh* %36), !dbg !9865
  store i32 -1, i32* %matnr, align 4, !dbg !9866
  call void @glShadeModel(i32 7425), !dbg !9867
  %37 = bitcast %struct.DMVertexAttribs* %attribs to i8*, !dbg !9868
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 376, i1 false), !dbg !9868
  call void @glBegin(i32 7), !dbg !9869
  store i32 0, i32* %a, align 4, !dbg !9870
  br label %for.cond, !dbg !9872

for.cond:                                         ; preds = %for.inc, %if.end18
  %38 = load i32, i32* %a, align 4, !dbg !9873
  %39 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9875
  %numTessFaceData19 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %39, i32 0, i32 7, !dbg !9876
  %40 = load i32, i32* %numTessFaceData19, align 8, !dbg !9876
  %cmp20 = icmp slt i32 %38, %40, !dbg !9877
  br i1 %cmp20, label %for.body, label %for.end, !dbg !9878

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %smoothnormal, metadata !9879, metadata !DIExpression()), !dbg !9881
  %41 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !9882
  %tobool22 = icmp ne [4 x [3 x i16]]* %41, null, !dbg !9882
  br i1 %tobool22, label %lor.end, label %lor.rhs, !dbg !9883

lor.rhs:                                          ; preds = %for.body
  %42 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !9884
  %flag = getelementptr inbounds %struct.MFace, %struct.MFace* %42, i32 0, i32 6, !dbg !9885
  %43 = load i8, i8* %flag, align 1, !dbg !9885
  %conv23 = zext i8 %43 to i32, !dbg !9884
  %and = and i32 %conv23, 1, !dbg !9886
  %tobool24 = icmp ne i32 %and, 0, !dbg !9883
  br label %lor.end, !dbg !9883

lor.end:                                          ; preds = %lor.rhs, %for.body
  %44 = phi i1 [ true, %for.body ], [ %tobool24, %lor.rhs ]
  %lor.ext = zext i1 %44 to i32, !dbg !9883
  %conv25 = trunc i32 %lor.ext to i8, !dbg !9882
  store i8 %conv25, i8* %smoothnormal, align 1, !dbg !9881
  call void @llvm.dbg.declare(metadata [3 x i16]** %ln1, metadata !9887, metadata !DIExpression()), !dbg !9888
  store [3 x i16]* null, [3 x i16]** %ln1, align 8, !dbg !9888
  call void @llvm.dbg.declare(metadata [3 x i16]** %ln2, metadata !9889, metadata !DIExpression()), !dbg !9890
  store [3 x i16]* null, [3 x i16]** %ln2, align 8, !dbg !9890
  call void @llvm.dbg.declare(metadata [3 x i16]** %ln3, metadata !9891, metadata !DIExpression()), !dbg !9892
  store [3 x i16]* null, [3 x i16]** %ln3, align 8, !dbg !9892
  call void @llvm.dbg.declare(metadata [3 x i16]** %ln4, metadata !9893, metadata !DIExpression()), !dbg !9894
  store [3 x i16]* null, [3 x i16]** %ln4, align 8, !dbg !9894
  %45 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !9895
  %mat_nr = getelementptr inbounds %struct.MFace, %struct.MFace* %45, i32 0, i32 4, !dbg !9896
  %46 = load i16, i16* %mat_nr, align 4, !dbg !9896
  %conv26 = sext i16 %46 to i32, !dbg !9895
  %add = add nsw i32 %conv26, 1, !dbg !9897
  store i32 %add, i32* %new_matnr, align 4, !dbg !9898
  %47 = load i32, i32* %new_matnr, align 4, !dbg !9899
  %48 = load i32, i32* %matnr, align 4, !dbg !9901
  %cmp27 = icmp ne i32 %47, %48, !dbg !9902
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !9903

if.then29:                                        ; preds = %lor.end
  call void @glEnd(), !dbg !9904
  %49 = load void (i8*, i32, i8*)*, void (i8*, i32, i8*)** %setMaterial.addr, align 8, !dbg !9906
  %50 = load i8*, i8** %userData.addr, align 8, !dbg !9907
  %51 = load i32, i32* %new_matnr, align 4, !dbg !9908
  store i32 %51, i32* %matnr, align 4, !dbg !9909
  %52 = bitcast %struct.GPUVertexAttribs* %gattribs to i8*, !dbg !9910
  call void %49(i8* %50, i32 %51, i8* %52), !dbg !9906
  %53 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9911
  call void @DM_vertex_attributes_from_gpu(%struct.DerivedMesh* %53, %struct.GPUVertexAttribs* %gattribs, %struct.DMVertexAttribs* %attribs), !dbg !9912
  call void @glBegin(i32 7), !dbg !9913
  br label %if.end30, !dbg !9914

if.end30:                                         ; preds = %if.then29, %lor.end
  %54 = load i8 (i8*, i32)*, i8 (i8*, i32)** %setFace.addr, align 8, !dbg !9915
  %tobool31 = icmp ne i8 (i8*, i32)* %54, null, !dbg !9915
  br i1 %tobool31, label %if.then32, label %if.end42, !dbg !9917

if.then32:                                        ; preds = %if.end30
  %55 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !9918
  %tobool33 = icmp ne i32* %55, null, !dbg !9920
  br i1 %tobool33, label %cond.true, label %cond.false, !dbg !9920

cond.true:                                        ; preds = %if.then32
  %56 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !9921
  %57 = load i32*, i32** %index_mp_to_orig, align 8, !dbg !9922
  %58 = load i32, i32* %a, align 4, !dbg !9923
  %call34 = call i32 @DM_origindex_mface_mpoly(i32* %56, i32* %57, i32 %58), !dbg !9924
  br label %cond.end, !dbg !9920

cond.false:                                       ; preds = %if.then32
  %59 = load i32, i32* %a, align 4, !dbg !9925
  br label %cond.end, !dbg !9920

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call34, %cond.true ], [ %59, %cond.false ], !dbg !9920
  store i32 %cond, i32* %orig, align 4, !dbg !9926
  %60 = load i32, i32* %orig, align 4, !dbg !9927
  %cmp35 = icmp ne i32 %60, -1, !dbg !9929
  br i1 %cmp35, label %land.lhs.true37, label %if.end41, !dbg !9930

land.lhs.true37:                                  ; preds = %cond.end
  %61 = load i8 (i8*, i32)*, i8 (i8*, i32)** %setFace.addr, align 8, !dbg !9931
  %62 = load i8*, i8** %userData.addr, align 8, !dbg !9932
  %63 = load i32, i32* %orig, align 4, !dbg !9933
  %call38 = call zeroext i8 %61(i8* %62, i32 %63), !dbg !9931
  %tobool39 = icmp ne i8 %call38, 0, !dbg !9931
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !9934

if.then40:                                        ; preds = %land.lhs.true37
  br label %for.inc, !dbg !9935

if.end41:                                         ; preds = %land.lhs.true37, %cond.end
  br label %if.end42, !dbg !9936

if.end42:                                         ; preds = %if.end41, %if.end30
  %64 = load i8, i8* %smoothnormal, align 1, !dbg !9937
  %tobool43 = icmp ne i8 %64, 0, !dbg !9937
  br i1 %tobool43, label %if.else88, label %if.then44, !dbg !9939

if.then44:                                        ; preds = %if.end42
  %65 = load [3 x float]*, [3 x float]** %nors, align 8, !dbg !9940
  %tobool45 = icmp ne [3 x float]* %65, null, !dbg !9940
  br i1 %tobool45, label %if.then46, label %if.else, !dbg !9943

if.then46:                                        ; preds = %if.then44
  %66 = load [3 x float]*, [3 x float]** %nors, align 8, !dbg !9944
  %67 = load i32, i32* %a, align 4, !dbg !9946
  %idxprom = sext i32 %67 to i64, !dbg !9944
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %66, i64 %idxprom, !dbg !9944
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !9944
  call void @glNormal3fv(float* %arraydecay), !dbg !9947
  br label %if.end87, !dbg !9948

if.else:                                          ; preds = %if.then44
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !9949, metadata !DIExpression()), !dbg !9951
  %68 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !9952
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %68, i32 0, i32 3, !dbg !9954
  %69 = load i32, i32* %v4, align 4, !dbg !9954
  %tobool47 = icmp ne i32 %69, 0, !dbg !9952
  br i1 %tobool47, label %if.then48, label %if.else67, !dbg !9955

if.then48:                                        ; preds = %if.else
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !9956
  %70 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !9957
  %71 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !9958
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %71, i32 0, i32 0, !dbg !9959
  %72 = load i32, i32* %v1, align 4, !dbg !9959
  %idxprom50 = zext i32 %72 to i64, !dbg !9957
  %arrayidx51 = getelementptr inbounds %struct.MVert, %struct.MVert* %70, i64 %idxprom50, !dbg !9957
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx51, i32 0, i32 0, !dbg !9960
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !9957
  %73 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !9961
  %74 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !9962
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %74, i32 0, i32 1, !dbg !9963
  %75 = load i32, i32* %v2, align 4, !dbg !9963
  %idxprom53 = zext i32 %75 to i64, !dbg !9961
  %arrayidx54 = getelementptr inbounds %struct.MVert, %struct.MVert* %73, i64 %idxprom53, !dbg !9961
  %co55 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx54, i32 0, i32 0, !dbg !9964
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %co55, i64 0, i64 0, !dbg !9961
  %76 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !9965
  %77 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !9966
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %77, i32 0, i32 2, !dbg !9967
  %78 = load i32, i32* %v3, align 4, !dbg !9967
  %idxprom57 = zext i32 %78 to i64, !dbg !9965
  %arrayidx58 = getelementptr inbounds %struct.MVert, %struct.MVert* %76, i64 %idxprom57, !dbg !9965
  %co59 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx58, i32 0, i32 0, !dbg !9968
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %co59, i64 0, i64 0, !dbg !9965
  %79 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !9969
  %80 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !9970
  %v461 = getelementptr inbounds %struct.MFace, %struct.MFace* %80, i32 0, i32 3, !dbg !9971
  %81 = load i32, i32* %v461, align 4, !dbg !9971
  %idxprom62 = zext i32 %81 to i64, !dbg !9969
  %arrayidx63 = getelementptr inbounds %struct.MVert, %struct.MVert* %79, i64 %idxprom62, !dbg !9969
  %co64 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx63, i32 0, i32 0, !dbg !9972
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %co64, i64 0, i64 0, !dbg !9969
  %call66 = call float @normal_quad_v3(float* %arraydecay49, float* %arraydecay52, float* %arraydecay56, float* %arraydecay60, float* %arraydecay65), !dbg !9973
  br label %if.end85, !dbg !9973

if.else67:                                        ; preds = %if.else
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !9974
  %82 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !9975
  %83 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !9976
  %v169 = getelementptr inbounds %struct.MFace, %struct.MFace* %83, i32 0, i32 0, !dbg !9977
  %84 = load i32, i32* %v169, align 4, !dbg !9977
  %idxprom70 = zext i32 %84 to i64, !dbg !9975
  %arrayidx71 = getelementptr inbounds %struct.MVert, %struct.MVert* %82, i64 %idxprom70, !dbg !9975
  %co72 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx71, i32 0, i32 0, !dbg !9978
  %arraydecay73 = getelementptr inbounds [3 x float], [3 x float]* %co72, i64 0, i64 0, !dbg !9975
  %85 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !9979
  %86 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !9980
  %v274 = getelementptr inbounds %struct.MFace, %struct.MFace* %86, i32 0, i32 1, !dbg !9981
  %87 = load i32, i32* %v274, align 4, !dbg !9981
  %idxprom75 = zext i32 %87 to i64, !dbg !9979
  %arrayidx76 = getelementptr inbounds %struct.MVert, %struct.MVert* %85, i64 %idxprom75, !dbg !9979
  %co77 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx76, i32 0, i32 0, !dbg !9982
  %arraydecay78 = getelementptr inbounds [3 x float], [3 x float]* %co77, i64 0, i64 0, !dbg !9979
  %88 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !9983
  %89 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !9984
  %v379 = getelementptr inbounds %struct.MFace, %struct.MFace* %89, i32 0, i32 2, !dbg !9985
  %90 = load i32, i32* %v379, align 4, !dbg !9985
  %idxprom80 = zext i32 %90 to i64, !dbg !9983
  %arrayidx81 = getelementptr inbounds %struct.MVert, %struct.MVert* %88, i64 %idxprom80, !dbg !9983
  %co82 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx81, i32 0, i32 0, !dbg !9986
  %arraydecay83 = getelementptr inbounds [3 x float], [3 x float]* %co82, i64 0, i64 0, !dbg !9983
  %call84 = call float @normal_tri_v3(float* %arraydecay68, float* %arraydecay73, float* %arraydecay78, float* %arraydecay83), !dbg !9987
  br label %if.end85

if.end85:                                         ; preds = %if.else67, %if.then48
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !9988
  call void @glNormal3fv(float* %arraydecay86), !dbg !9989
  br label %if.end87

if.end87:                                         ; preds = %if.end85, %if.then46
  br label %if.end104, !dbg !9990

if.else88:                                        ; preds = %if.end42
  %91 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !9991
  %tobool89 = icmp ne [4 x [3 x i16]]* %91, null, !dbg !9991
  br i1 %tobool89, label %if.then90, label %if.end103, !dbg !9993

if.then90:                                        ; preds = %if.else88
  %92 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !9994
  %93 = load i32, i32* %a, align 4, !dbg !9996
  %idxprom91 = sext i32 %93 to i64, !dbg !9994
  %arrayidx92 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %92, i64 %idxprom91, !dbg !9994
  %arrayidx93 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx92, i64 0, i64 0, !dbg !9994
  store [3 x i16]* %arrayidx93, [3 x i16]** %ln1, align 8, !dbg !9997
  %94 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !9998
  %95 = load i32, i32* %a, align 4, !dbg !9999
  %idxprom94 = sext i32 %95 to i64, !dbg !9998
  %arrayidx95 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %94, i64 %idxprom94, !dbg !9998
  %arrayidx96 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx95, i64 0, i64 1, !dbg !9998
  store [3 x i16]* %arrayidx96, [3 x i16]** %ln2, align 8, !dbg !10000
  %96 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !10001
  %97 = load i32, i32* %a, align 4, !dbg !10002
  %idxprom97 = sext i32 %97 to i64, !dbg !10001
  %arrayidx98 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %96, i64 %idxprom97, !dbg !10001
  %arrayidx99 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx98, i64 0, i64 2, !dbg !10001
  store [3 x i16]* %arrayidx99, [3 x i16]** %ln3, align 8, !dbg !10003
  %98 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !10004
  %99 = load i32, i32* %a, align 4, !dbg !10005
  %idxprom100 = sext i32 %99 to i64, !dbg !10004
  %arrayidx101 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %98, i64 %idxprom100, !dbg !10004
  %arrayidx102 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx101, i64 0, i64 3, !dbg !10004
  store [3 x i16]* %arrayidx102, [3 x i16]** %ln4, align 8, !dbg !10006
  br label %if.end103, !dbg !10007

if.end103:                                        ; preds = %if.then90, %if.else88
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.end87
  %100 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !10008
  %101 = load i32, i32* %a, align 4, !dbg !10009
  %102 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10010
  %v1105 = getelementptr inbounds %struct.MFace, %struct.MFace* %102, i32 0, i32 0, !dbg !10011
  %103 = load i32, i32* %v1105, align 4, !dbg !10011
  %104 = load [3 x i16]*, [3 x i16]** %ln1, align 8, !dbg !10012
  %105 = load i8, i8* %smoothnormal, align 1, !dbg !10013
  call void @cddm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, %struct.MVert* %100, i32 %101, i32 %103, i32 0, [3 x i16]* %104, i8 zeroext %105), !dbg !10014
  %106 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !10015
  %107 = load i32, i32* %a, align 4, !dbg !10016
  %108 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10017
  %v2106 = getelementptr inbounds %struct.MFace, %struct.MFace* %108, i32 0, i32 1, !dbg !10018
  %109 = load i32, i32* %v2106, align 4, !dbg !10018
  %110 = load [3 x i16]*, [3 x i16]** %ln2, align 8, !dbg !10019
  %111 = load i8, i8* %smoothnormal, align 1, !dbg !10020
  call void @cddm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, %struct.MVert* %106, i32 %107, i32 %109, i32 1, [3 x i16]* %110, i8 zeroext %111), !dbg !10021
  %112 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !10022
  %113 = load i32, i32* %a, align 4, !dbg !10023
  %114 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10024
  %v3107 = getelementptr inbounds %struct.MFace, %struct.MFace* %114, i32 0, i32 2, !dbg !10025
  %115 = load i32, i32* %v3107, align 4, !dbg !10025
  %116 = load [3 x i16]*, [3 x i16]** %ln3, align 8, !dbg !10026
  %117 = load i8, i8* %smoothnormal, align 1, !dbg !10027
  call void @cddm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, %struct.MVert* %112, i32 %113, i32 %115, i32 2, [3 x i16]* %116, i8 zeroext %117), !dbg !10028
  %118 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10029
  %v4108 = getelementptr inbounds %struct.MFace, %struct.MFace* %118, i32 0, i32 3, !dbg !10031
  %119 = load i32, i32* %v4108, align 4, !dbg !10031
  %tobool109 = icmp ne i32 %119, 0, !dbg !10029
  br i1 %tobool109, label %if.then110, label %if.else112, !dbg !10032

if.then110:                                       ; preds = %if.end104
  %120 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !10033
  %121 = load i32, i32* %a, align 4, !dbg !10034
  %122 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10035
  %v4111 = getelementptr inbounds %struct.MFace, %struct.MFace* %122, i32 0, i32 3, !dbg !10036
  %123 = load i32, i32* %v4111, align 4, !dbg !10036
  %124 = load [3 x i16]*, [3 x i16]** %ln4, align 8, !dbg !10037
  %125 = load i8, i8* %smoothnormal, align 1, !dbg !10038
  call void @cddm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, %struct.MVert* %120, i32 %121, i32 %123, i32 3, [3 x i16]* %124, i8 zeroext %125), !dbg !10039
  br label %if.end114, !dbg !10039

if.else112:                                       ; preds = %if.end104
  %126 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !10040
  %127 = load i32, i32* %a, align 4, !dbg !10041
  %128 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10042
  %v3113 = getelementptr inbounds %struct.MFace, %struct.MFace* %128, i32 0, i32 2, !dbg !10043
  %129 = load i32, i32* %v3113, align 4, !dbg !10043
  %130 = load [3 x i16]*, [3 x i16]** %ln3, align 8, !dbg !10044
  %131 = load i8, i8* %smoothnormal, align 1, !dbg !10045
  call void @cddm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, %struct.MVert* %126, i32 %127, i32 %129, i32 2, [3 x i16]* %130, i8 zeroext %131), !dbg !10046
  br label %if.end114

if.end114:                                        ; preds = %if.else112, %if.then110
  br label %for.inc, !dbg !10047

for.inc:                                          ; preds = %if.end114, %if.then40
  %132 = load i32, i32* %a, align 4, !dbg !10048
  %inc = add nsw i32 %132, 1, !dbg !10048
  store i32 %inc, i32* %a, align 4, !dbg !10048
  %133 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10049
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %133, i32 1, !dbg !10049
  store %struct.MFace* %incdec.ptr, %struct.MFace** %mf, align 8, !dbg !10049
  br label %for.cond, !dbg !10050, !llvm.loop !10051

for.end:                                          ; preds = %for.cond
  call void @glEnd(), !dbg !10053
  call void @glShadeModel(i32 7424), !dbg !10054
  br label %return, !dbg !10055

return:                                           ; preds = %for.end, %if.end17
  ret void, !dbg !10055
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_foreachMappedVert(%struct.DerivedMesh* %dm, void (i8*, i32, float*, float*, i16*)* %func, i8* %userData, i32 %flag) #0 !dbg !10056 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %func.addr = alloca void (i8*, i32, float*, float*, i16*)*, align 8
  %userData.addr = alloca i8*, align 8
  %flag.addr = alloca i32, align 4
  %mv = alloca %struct.MVert*, align 8
  %index = alloca i32*, align 8
  %i = alloca i32, align 4
  %no = alloca i16*, align 8
  %orig = alloca i32, align 4
  %no12 = alloca i16*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !10057, metadata !DIExpression()), !dbg !10058
  store void (i8*, i32, float*, float*, i16*)* %func, void (i8*, i32, float*, float*, i16*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32, float*, float*, i16*)** %func.addr, metadata !10059, metadata !DIExpression()), !dbg !10060
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !10061, metadata !DIExpression()), !dbg !10062
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !10063, metadata !DIExpression()), !dbg !10064
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !10065, metadata !DIExpression()), !dbg !10066
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10067
  %call = call %struct.MVert* @CDDM_get_verts(%struct.DerivedMesh* %0), !dbg !10068
  store %struct.MVert* %call, %struct.MVert** %mv, align 8, !dbg !10066
  call void @llvm.dbg.declare(metadata i32** %index, metadata !10069, metadata !DIExpression()), !dbg !10070
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10071
  %call1 = call i8* @DM_get_vert_data_layer(%struct.DerivedMesh* %1, i32 7), !dbg !10072
  %2 = bitcast i8* %call1 to i32*, !dbg !10072
  store i32* %2, i32** %index, align 8, !dbg !10070
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10073, metadata !DIExpression()), !dbg !10074
  %3 = load i32*, i32** %index, align 8, !dbg !10075
  %tobool = icmp ne i32* %3, null, !dbg !10075
  br i1 %tobool, label %if.then, label %if.else, !dbg !10077

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !10078
  br label %for.cond, !dbg !10081

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load i32, i32* %i, align 4, !dbg !10082
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10084
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 5, !dbg !10085
  %6 = load i32, i32* %numVertData, align 8, !dbg !10085
  %cmp = icmp slt i32 %4, %6, !dbg !10086
  br i1 %cmp, label %for.body, label %for.end, !dbg !10087

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16** %no, metadata !10088, metadata !DIExpression()), !dbg !10090
  %7 = load i32, i32* %flag.addr, align 4, !dbg !10091
  %and = and i32 %7, 1, !dbg !10092
  %tobool2 = icmp ne i32 %and, 0, !dbg !10092
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !10093

cond.true:                                        ; preds = %for.body
  %8 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !10094
  %no3 = getelementptr inbounds %struct.MVert, %struct.MVert* %8, i32 0, i32 1, !dbg !10095
  %arraydecay = getelementptr inbounds [3 x i16], [3 x i16]* %no3, i64 0, i64 0, !dbg !10094
  br label %cond.end, !dbg !10093

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !10093

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i16* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !10093
  store i16* %cond, i16** %no, align 8, !dbg !10090
  call void @llvm.dbg.declare(metadata i32* %orig, metadata !10096, metadata !DIExpression()), !dbg !10097
  %9 = load i32*, i32** %index, align 8, !dbg !10098
  %incdec.ptr = getelementptr inbounds i32, i32* %9, i32 1, !dbg !10098
  store i32* %incdec.ptr, i32** %index, align 8, !dbg !10098
  %10 = load i32, i32* %9, align 4, !dbg !10099
  store i32 %10, i32* %orig, align 4, !dbg !10097
  %11 = load i32, i32* %orig, align 4, !dbg !10100
  %cmp4 = icmp eq i32 %11, -1, !dbg !10102
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !10103

if.then5:                                         ; preds = %cond.end
  br label %for.inc, !dbg !10104

if.end:                                           ; preds = %cond.end
  %12 = load void (i8*, i32, float*, float*, i16*)*, void (i8*, i32, float*, float*, i16*)** %func.addr, align 8, !dbg !10105
  %13 = load i8*, i8** %userData.addr, align 8, !dbg !10106
  %14 = load i32, i32* %orig, align 4, !dbg !10107
  %15 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !10108
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %15, i32 0, i32 0, !dbg !10109
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !10108
  %16 = load i16*, i16** %no, align 8, !dbg !10110
  call void %12(i8* %13, i32 %14, float* %arraydecay6, float* null, i16* %16), !dbg !10105
  br label %for.inc, !dbg !10111

for.inc:                                          ; preds = %if.end, %if.then5
  %17 = load i32, i32* %i, align 4, !dbg !10112
  %inc = add nsw i32 %17, 1, !dbg !10112
  store i32 %inc, i32* %i, align 4, !dbg !10112
  %18 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !10113
  %incdec.ptr7 = getelementptr inbounds %struct.MVert, %struct.MVert* %18, i32 1, !dbg !10113
  store %struct.MVert* %incdec.ptr7, %struct.MVert** %mv, align 8, !dbg !10113
  br label %for.cond, !dbg !10114, !llvm.loop !10115

for.end:                                          ; preds = %for.cond
  br label %if.end27, !dbg !10117

if.else:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !10118
  br label %for.cond8, !dbg !10121

for.cond8:                                        ; preds = %for.inc23, %if.else
  %19 = load i32, i32* %i, align 4, !dbg !10122
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10124
  %numVertData9 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %20, i32 0, i32 5, !dbg !10125
  %21 = load i32, i32* %numVertData9, align 8, !dbg !10125
  %cmp10 = icmp slt i32 %19, %21, !dbg !10126
  br i1 %cmp10, label %for.body11, label %for.end26, !dbg !10127

for.body11:                                       ; preds = %for.cond8
  call void @llvm.dbg.declare(metadata i16** %no12, metadata !10128, metadata !DIExpression()), !dbg !10130
  %22 = load i32, i32* %flag.addr, align 4, !dbg !10131
  %and13 = and i32 %22, 1, !dbg !10132
  %tobool14 = icmp ne i32 %and13, 0, !dbg !10132
  br i1 %tobool14, label %cond.true15, label %cond.false18, !dbg !10133

cond.true15:                                      ; preds = %for.body11
  %23 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !10134
  %no16 = getelementptr inbounds %struct.MVert, %struct.MVert* %23, i32 0, i32 1, !dbg !10135
  %arraydecay17 = getelementptr inbounds [3 x i16], [3 x i16]* %no16, i64 0, i64 0, !dbg !10134
  br label %cond.end19, !dbg !10133

cond.false18:                                     ; preds = %for.body11
  br label %cond.end19, !dbg !10133

cond.end19:                                       ; preds = %cond.false18, %cond.true15
  %cond20 = phi i16* [ %arraydecay17, %cond.true15 ], [ null, %cond.false18 ], !dbg !10133
  store i16* %cond20, i16** %no12, align 8, !dbg !10130
  %24 = load void (i8*, i32, float*, float*, i16*)*, void (i8*, i32, float*, float*, i16*)** %func.addr, align 8, !dbg !10136
  %25 = load i8*, i8** %userData.addr, align 8, !dbg !10137
  %26 = load i32, i32* %i, align 4, !dbg !10138
  %27 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !10139
  %co21 = getelementptr inbounds %struct.MVert, %struct.MVert* %27, i32 0, i32 0, !dbg !10140
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %co21, i64 0, i64 0, !dbg !10139
  %28 = load i16*, i16** %no12, align 8, !dbg !10141
  call void %24(i8* %25, i32 %26, float* %arraydecay22, float* null, i16* %28), !dbg !10136
  br label %for.inc23, !dbg !10142

for.inc23:                                        ; preds = %cond.end19
  %29 = load i32, i32* %i, align 4, !dbg !10143
  %inc24 = add nsw i32 %29, 1, !dbg !10143
  store i32 %inc24, i32* %i, align 4, !dbg !10143
  %30 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !10144
  %incdec.ptr25 = getelementptr inbounds %struct.MVert, %struct.MVert* %30, i32 1, !dbg !10144
  store %struct.MVert* %incdec.ptr25, %struct.MVert** %mv, align 8, !dbg !10144
  br label %for.cond8, !dbg !10145, !llvm.loop !10146

for.end26:                                        ; preds = %for.cond8
  br label %if.end27

if.end27:                                         ; preds = %for.end26, %for.end
  ret void, !dbg !10148
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_foreachMappedEdge(%struct.DerivedMesh* %dm, void (i8*, i32, float*, float*)* %func, i8* %userData) #0 !dbg !10149 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %func.addr = alloca void (i8*, i32, float*, float*)*, align 8
  %userData.addr = alloca i8*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %mv = alloca %struct.MVert*, align 8
  %med = alloca %struct.MEdge*, align 8
  %i = alloca i32, align 4
  %orig = alloca i32, align 4
  %index = alloca i32*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !10150, metadata !DIExpression()), !dbg !10151
  store void (i8*, i32, float*, float*)* %func, void (i8*, i32, float*, float*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32, float*, float*)** %func.addr, metadata !10152, metadata !DIExpression()), !dbg !10153
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !10154, metadata !DIExpression()), !dbg !10155
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !10156, metadata !DIExpression()), !dbg !10157
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10158
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !10159
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !10157
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !10160, metadata !DIExpression()), !dbg !10161
  %2 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !10162
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %2, i32 0, i32 1, !dbg !10163
  %3 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !10163
  store %struct.MVert* %3, %struct.MVert** %mv, align 8, !dbg !10161
  call void @llvm.dbg.declare(metadata %struct.MEdge** %med, metadata !10164, metadata !DIExpression()), !dbg !10165
  %4 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !10166
  %medge = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %4, i32 0, i32 2, !dbg !10167
  %5 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !10167
  store %struct.MEdge* %5, %struct.MEdge** %med, align 8, !dbg !10165
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10168, metadata !DIExpression()), !dbg !10169
  call void @llvm.dbg.declare(metadata i32* %orig, metadata !10170, metadata !DIExpression()), !dbg !10171
  call void @llvm.dbg.declare(metadata i32** %index, metadata !10172, metadata !DIExpression()), !dbg !10173
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10174
  %call = call i8* @DM_get_edge_data_layer(%struct.DerivedMesh* %6, i32 7), !dbg !10175
  %7 = bitcast i8* %call to i32*, !dbg !10175
  store i32* %7, i32** %index, align 8, !dbg !10173
  store i32 0, i32* %i, align 4, !dbg !10176
  br label %for.cond, !dbg !10178

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !10179
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10181
  %numEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 6, !dbg !10182
  %10 = load i32, i32* %numEdgeData, align 4, !dbg !10182
  %cmp = icmp slt i32 %8, %10, !dbg !10183
  br i1 %cmp, label %for.body, label %for.end, !dbg !10184

for.body:                                         ; preds = %for.cond
  %11 = load i32*, i32** %index, align 8, !dbg !10185
  %tobool = icmp ne i32* %11, null, !dbg !10185
  br i1 %tobool, label %if.then, label %if.else, !dbg !10188

if.then:                                          ; preds = %for.body
  %12 = load i32*, i32** %index, align 8, !dbg !10189
  %incdec.ptr = getelementptr inbounds i32, i32* %12, i32 1, !dbg !10189
  store i32* %incdec.ptr, i32** %index, align 8, !dbg !10189
  %13 = load i32, i32* %12, align 4, !dbg !10191
  store i32 %13, i32* %orig, align 4, !dbg !10192
  %14 = load i32, i32* %orig, align 4, !dbg !10193
  %cmp1 = icmp eq i32 %14, -1, !dbg !10195
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !10196

if.then2:                                         ; preds = %if.then
  br label %for.inc, !dbg !10197

if.end:                                           ; preds = %if.then
  %15 = load void (i8*, i32, float*, float*)*, void (i8*, i32, float*, float*)** %func.addr, align 8, !dbg !10198
  %16 = load i8*, i8** %userData.addr, align 8, !dbg !10199
  %17 = load i32, i32* %orig, align 4, !dbg !10200
  %18 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !10201
  %19 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !10202
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %19, i32 0, i32 0, !dbg !10203
  %20 = load i32, i32* %v1, align 4, !dbg !10203
  %idxprom = zext i32 %20 to i64, !dbg !10201
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %18, i64 %idxprom, !dbg !10201
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx, i32 0, i32 0, !dbg !10204
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !10201
  %21 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !10205
  %22 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !10206
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %22, i32 0, i32 1, !dbg !10207
  %23 = load i32, i32* %v2, align 4, !dbg !10207
  %idxprom3 = zext i32 %23 to i64, !dbg !10205
  %arrayidx4 = getelementptr inbounds %struct.MVert, %struct.MVert* %21, i64 %idxprom3, !dbg !10205
  %co5 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx4, i32 0, i32 0, !dbg !10208
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %co5, i64 0, i64 0, !dbg !10205
  call void %15(i8* %16, i32 %17, float* %arraydecay, float* %arraydecay6), !dbg !10198
  br label %if.end17, !dbg !10209

if.else:                                          ; preds = %for.body
  %24 = load void (i8*, i32, float*, float*)*, void (i8*, i32, float*, float*)** %func.addr, align 8, !dbg !10210
  %25 = load i8*, i8** %userData.addr, align 8, !dbg !10211
  %26 = load i32, i32* %i, align 4, !dbg !10212
  %27 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !10213
  %28 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !10214
  %v17 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %28, i32 0, i32 0, !dbg !10215
  %29 = load i32, i32* %v17, align 4, !dbg !10215
  %idxprom8 = zext i32 %29 to i64, !dbg !10213
  %arrayidx9 = getelementptr inbounds %struct.MVert, %struct.MVert* %27, i64 %idxprom8, !dbg !10213
  %co10 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx9, i32 0, i32 0, !dbg !10216
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %co10, i64 0, i64 0, !dbg !10213
  %30 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !10217
  %31 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !10218
  %v212 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %31, i32 0, i32 1, !dbg !10219
  %32 = load i32, i32* %v212, align 4, !dbg !10219
  %idxprom13 = zext i32 %32 to i64, !dbg !10217
  %arrayidx14 = getelementptr inbounds %struct.MVert, %struct.MVert* %30, i64 %idxprom13, !dbg !10217
  %co15 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx14, i32 0, i32 0, !dbg !10220
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %co15, i64 0, i64 0, !dbg !10217
  call void %24(i8* %25, i32 %26, float* %arraydecay11, float* %arraydecay16), !dbg !10210
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.end
  br label %for.inc, !dbg !10221

for.inc:                                          ; preds = %if.end17, %if.then2
  %33 = load i32, i32* %i, align 4, !dbg !10222
  %inc = add nsw i32 %33, 1, !dbg !10222
  store i32 %inc, i32* %i, align 4, !dbg !10222
  %34 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !10223
  %incdec.ptr18 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %34, i32 1, !dbg !10223
  store %struct.MEdge* %incdec.ptr18, %struct.MEdge** %med, align 8, !dbg !10223
  br label %for.cond, !dbg !10224, !llvm.loop !10225

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10227
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_foreachMappedLoop(%struct.DerivedMesh* %dm, void (i8*, i32, i32, float*, float*)* %func, i8* %userData, i32 %flag) #0 !dbg !10228 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %func.addr = alloca void (i8*, i32, i32, float*, float*)*, align 8
  %userData.addr = alloca i8*, align 8
  %flag.addr = alloca i32, align 4
  %lnors = alloca [3 x float]*, align 8
  %mv = alloca %struct.MVert*, align 8
  %ml = alloca %struct.MLoop*, align 8
  %mp = alloca %struct.MPoly*, align 8
  %v_index = alloca i32*, align 8
  %f_index = alloca i32*, align 8
  %p_idx = alloca i32, align 4
  %i = alloca i32, align 4
  %v_idx = alloca i32, align 4
  %f_idx = alloca i32, align 4
  %no = alloca float*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !10229, metadata !DIExpression()), !dbg !10230
  store void (i8*, i32, i32, float*, float*)* %func, void (i8*, i32, i32, float*, float*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32, i32, float*, float*)** %func.addr, metadata !10231, metadata !DIExpression()), !dbg !10232
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !10233, metadata !DIExpression()), !dbg !10234
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !10235, metadata !DIExpression()), !dbg !10236
  call void @llvm.dbg.declare(metadata [3 x float]** %lnors, metadata !10237, metadata !DIExpression()), !dbg !10238
  %0 = load i32, i32* %flag.addr, align 4, !dbg !10239
  %and = and i32 %0, 1, !dbg !10240
  %tobool = icmp ne i32 %and, 0, !dbg !10240
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10241

cond.true:                                        ; preds = %entry
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10242
  %call = call i8* @DM_get_loop_data_layer(%struct.DerivedMesh* %1, i32 8), !dbg !10243
  br label %cond.end, !dbg !10241

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10241

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ null, %cond.false ], !dbg !10241
  %2 = bitcast i8* %cond to [3 x float]*, !dbg !10241
  store [3 x float]* %2, [3 x float]** %lnors, align 8, !dbg !10238
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !10244, metadata !DIExpression()), !dbg !10245
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10246
  %call1 = call %struct.MVert* @CDDM_get_verts(%struct.DerivedMesh* %3), !dbg !10247
  store %struct.MVert* %call1, %struct.MVert** %mv, align 8, !dbg !10245
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml, metadata !10248, metadata !DIExpression()), !dbg !10251
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10252
  %call2 = call %struct.MLoop* @CDDM_get_loops(%struct.DerivedMesh* %4), !dbg !10253
  store %struct.MLoop* %call2, %struct.MLoop** %ml, align 8, !dbg !10251
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !10254, metadata !DIExpression()), !dbg !10257
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10258
  %call3 = call %struct.MPoly* @CDDM_get_polys(%struct.DerivedMesh* %5), !dbg !10259
  store %struct.MPoly* %call3, %struct.MPoly** %mp, align 8, !dbg !10257
  call void @llvm.dbg.declare(metadata i32** %v_index, metadata !10260, metadata !DIExpression()), !dbg !10261
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10262
  %call4 = call i8* @DM_get_vert_data_layer(%struct.DerivedMesh* %6, i32 7), !dbg !10263
  %7 = bitcast i8* %call4 to i32*, !dbg !10263
  store i32* %7, i32** %v_index, align 8, !dbg !10261
  call void @llvm.dbg.declare(metadata i32** %f_index, metadata !10264, metadata !DIExpression()), !dbg !10265
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10266
  %call5 = call i8* @DM_get_poly_data_layer(%struct.DerivedMesh* %8, i32 7), !dbg !10267
  %9 = bitcast i8* %call5 to i32*, !dbg !10267
  store i32* %9, i32** %f_index, align 8, !dbg !10265
  call void @llvm.dbg.declare(metadata i32* %p_idx, metadata !10268, metadata !DIExpression()), !dbg !10269
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10270, metadata !DIExpression()), !dbg !10271
  store i32 0, i32* %p_idx, align 4, !dbg !10272
  br label %for.cond, !dbg !10274

for.cond:                                         ; preds = %for.inc34, %cond.end
  %10 = load i32, i32* %p_idx, align 4, !dbg !10275
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10277
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %11, i32 0, i32 9, !dbg !10278
  %12 = load i32, i32* %numPolyData, align 8, !dbg !10278
  %cmp = icmp slt i32 %10, %12, !dbg !10279
  br i1 %cmp, label %for.body, label %for.end37, !dbg !10280

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !10281
  br label %for.cond6, !dbg !10284

for.cond6:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %i, align 4, !dbg !10285
  %14 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !10287
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %14, i32 0, i32 1, !dbg !10288
  %15 = load i32, i32* %totloop, align 4, !dbg !10288
  %cmp7 = icmp slt i32 %13, %15, !dbg !10289
  br i1 %cmp7, label %for.body8, label %for.end, !dbg !10290

for.body8:                                        ; preds = %for.cond6
  call void @llvm.dbg.declare(metadata i32* %v_idx, metadata !10291, metadata !DIExpression()), !dbg !10293
  %16 = load i32*, i32** %v_index, align 8, !dbg !10294
  %tobool9 = icmp ne i32* %16, null, !dbg !10294
  br i1 %tobool9, label %cond.true10, label %cond.false11, !dbg !10294

cond.true10:                                      ; preds = %for.body8
  %17 = load i32*, i32** %v_index, align 8, !dbg !10295
  %18 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !10296
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %18, i32 0, i32 0, !dbg !10297
  %19 = load i32, i32* %v, align 4, !dbg !10297
  %idxprom = zext i32 %19 to i64, !dbg !10295
  %arrayidx = getelementptr inbounds i32, i32* %17, i64 %idxprom, !dbg !10295
  %20 = load i32, i32* %arrayidx, align 4, !dbg !10295
  br label %cond.end13, !dbg !10294

cond.false11:                                     ; preds = %for.body8
  %21 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !10298
  %v12 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %21, i32 0, i32 0, !dbg !10299
  %22 = load i32, i32* %v12, align 4, !dbg !10299
  br label %cond.end13, !dbg !10294

cond.end13:                                       ; preds = %cond.false11, %cond.true10
  %cond14 = phi i32 [ %20, %cond.true10 ], [ %22, %cond.false11 ], !dbg !10294
  store i32 %cond14, i32* %v_idx, align 4, !dbg !10293
  call void @llvm.dbg.declare(metadata i32* %f_idx, metadata !10300, metadata !DIExpression()), !dbg !10301
  %23 = load i32*, i32** %f_index, align 8, !dbg !10302
  %tobool15 = icmp ne i32* %23, null, !dbg !10302
  br i1 %tobool15, label %cond.true16, label %cond.false19, !dbg !10302

cond.true16:                                      ; preds = %cond.end13
  %24 = load i32*, i32** %f_index, align 8, !dbg !10303
  %25 = load i32, i32* %p_idx, align 4, !dbg !10304
  %idxprom17 = sext i32 %25 to i64, !dbg !10303
  %arrayidx18 = getelementptr inbounds i32, i32* %24, i64 %idxprom17, !dbg !10303
  %26 = load i32, i32* %arrayidx18, align 4, !dbg !10303
  br label %cond.end20, !dbg !10302

cond.false19:                                     ; preds = %cond.end13
  %27 = load i32, i32* %p_idx, align 4, !dbg !10305
  br label %cond.end20, !dbg !10302

cond.end20:                                       ; preds = %cond.false19, %cond.true16
  %cond21 = phi i32 [ %26, %cond.true16 ], [ %27, %cond.false19 ], !dbg !10302
  store i32 %cond21, i32* %f_idx, align 4, !dbg !10301
  call void @llvm.dbg.declare(metadata float** %no, metadata !10306, metadata !DIExpression()), !dbg !10307
  %28 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !10308
  %tobool22 = icmp ne [3 x float]* %28, null, !dbg !10308
  br i1 %tobool22, label %cond.true23, label %cond.false24, !dbg !10308

cond.true23:                                      ; preds = %cond.end20
  %29 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !10309
  %incdec.ptr = getelementptr inbounds [3 x float], [3 x float]* %29, i32 1, !dbg !10309
  store [3 x float]* %incdec.ptr, [3 x float]** %lnors, align 8, !dbg !10309
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %29, i64 0, i64 0, !dbg !10310
  br label %cond.end25, !dbg !10308

cond.false24:                                     ; preds = %cond.end20
  br label %cond.end25, !dbg !10308

cond.end25:                                       ; preds = %cond.false24, %cond.true23
  %cond26 = phi float* [ %arraydecay, %cond.true23 ], [ null, %cond.false24 ], !dbg !10308
  store float* %cond26, float** %no, align 8, !dbg !10307
  %30 = load i32, i32* %v_idx, align 4, !dbg !10311
  %cmp27 = icmp eq i32 -1, %30, !dbg !10311
  br i1 %cmp27, label %if.end, label %lor.lhs.false, !dbg !10311

lor.lhs.false:                                    ; preds = %cond.end25
  %31 = load i32, i32* %f_idx, align 4, !dbg !10311
  %cmp28 = icmp eq i32 -1, %31, !dbg !10311
  br i1 %cmp28, label %if.end, label %if.then, !dbg !10313

if.then:                                          ; preds = %lor.lhs.false
  %32 = load void (i8*, i32, i32, float*, float*)*, void (i8*, i32, i32, float*, float*)** %func.addr, align 8, !dbg !10314
  %33 = load i8*, i8** %userData.addr, align 8, !dbg !10316
  %34 = load i32, i32* %v_idx, align 4, !dbg !10317
  %35 = load i32, i32* %f_idx, align 4, !dbg !10318
  %36 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !10319
  %37 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !10320
  %v29 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %37, i32 0, i32 0, !dbg !10321
  %38 = load i32, i32* %v29, align 4, !dbg !10321
  %idxprom30 = zext i32 %38 to i64, !dbg !10319
  %arrayidx31 = getelementptr inbounds %struct.MVert, %struct.MVert* %36, i64 %idxprom30, !dbg !10319
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx31, i32 0, i32 0, !dbg !10322
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !10319
  %39 = load float*, float** %no, align 8, !dbg !10323
  call void %32(i8* %33, i32 %34, i32 %35, float* %arraydecay32, float* %39), !dbg !10314
  br label %if.end, !dbg !10324

if.end:                                           ; preds = %if.then, %lor.lhs.false, %cond.end25
  br label %for.inc, !dbg !10325

for.inc:                                          ; preds = %if.end
  %40 = load i32, i32* %i, align 4, !dbg !10326
  %inc = add nsw i32 %40, 1, !dbg !10326
  store i32 %inc, i32* %i, align 4, !dbg !10326
  %41 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !10327
  %incdec.ptr33 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %41, i32 1, !dbg !10327
  store %struct.MLoop* %incdec.ptr33, %struct.MLoop** %ml, align 8, !dbg !10327
  br label %for.cond6, !dbg !10328, !llvm.loop !10329

for.end:                                          ; preds = %for.cond6
  br label %for.inc34, !dbg !10331

for.inc34:                                        ; preds = %for.end
  %42 = load i32, i32* %p_idx, align 4, !dbg !10332
  %inc35 = add nsw i32 %42, 1, !dbg !10332
  store i32 %inc35, i32* %p_idx, align 4, !dbg !10332
  %43 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !10333
  %incdec.ptr36 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %43, i32 1, !dbg !10333
  store %struct.MPoly* %incdec.ptr36, %struct.MPoly** %mp, align 8, !dbg !10333
  br label %for.cond, !dbg !10334, !llvm.loop !10335

for.end37:                                        ; preds = %for.cond
  ret void, !dbg !10337
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_foreachMappedFaceCenter(%struct.DerivedMesh* %dm, void (i8*, i32, float*, float*)* %func, i8* %userData, i32 %flag) #0 !dbg !10338 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %func.addr = alloca void (i8*, i32, float*, float*)*, align 8
  %userData.addr = alloca i8*, align 8
  %flag.addr = alloca i32, align 4
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %mp = alloca %struct.MPoly*, align 8
  %ml = alloca %struct.MLoop*, align 8
  %i = alloca i32, align 4
  %orig = alloca i32, align 4
  %index = alloca i32*, align 8
  %cent = alloca [3 x float], align 4
  %no = alloca float*, align 8
  %_no = alloca [3 x float], align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !10339, metadata !DIExpression()), !dbg !10340
  store void (i8*, i32, float*, float*)* %func, void (i8*, i32, float*, float*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32, float*, float*)** %func.addr, metadata !10341, metadata !DIExpression()), !dbg !10342
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !10343, metadata !DIExpression()), !dbg !10344
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !10345, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !10347, metadata !DIExpression()), !dbg !10348
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10349
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !10350
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !10348
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !10351, metadata !DIExpression()), !dbg !10352
  %2 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !10353
  %mvert1 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %2, i32 0, i32 1, !dbg !10354
  %3 = load %struct.MVert*, %struct.MVert** %mvert1, align 8, !dbg !10354
  store %struct.MVert* %3, %struct.MVert** %mvert, align 8, !dbg !10352
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !10355, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml, metadata !10357, metadata !DIExpression()), !dbg !10358
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10359, metadata !DIExpression()), !dbg !10360
  call void @llvm.dbg.declare(metadata i32* %orig, metadata !10361, metadata !DIExpression()), !dbg !10362
  call void @llvm.dbg.declare(metadata i32** %index, metadata !10363, metadata !DIExpression()), !dbg !10364
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10365
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 4, !dbg !10366
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %polyData, i32 7), !dbg !10367
  %5 = bitcast i8* %call to i32*, !dbg !10367
  store i32* %5, i32** %index, align 8, !dbg !10368
  %6 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !10369
  %mpoly = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %6, i32 0, i32 5, !dbg !10370
  %7 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !10370
  store %struct.MPoly* %7, %struct.MPoly** %mp, align 8, !dbg !10371
  store i32 0, i32* %i, align 4, !dbg !10372
  br label %for.cond, !dbg !10374

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !10375
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10377
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 9, !dbg !10378
  %10 = load i32, i32* %numPolyData, align 8, !dbg !10378
  %cmp = icmp slt i32 %8, %10, !dbg !10379
  br i1 %cmp, label %for.body, label %for.end, !dbg !10380

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [3 x float]* %cent, metadata !10381, metadata !DIExpression()), !dbg !10383
  call void @llvm.dbg.declare(metadata float** %no, metadata !10384, metadata !DIExpression()), !dbg !10385
  call void @llvm.dbg.declare(metadata [3 x float]* %_no, metadata !10386, metadata !DIExpression()), !dbg !10387
  %11 = load i32*, i32** %index, align 8, !dbg !10388
  %tobool = icmp ne i32* %11, null, !dbg !10388
  br i1 %tobool, label %if.then, label %if.else, !dbg !10390

if.then:                                          ; preds = %for.body
  %12 = load i32*, i32** %index, align 8, !dbg !10391
  %incdec.ptr = getelementptr inbounds i32, i32* %12, i32 1, !dbg !10391
  store i32* %incdec.ptr, i32** %index, align 8, !dbg !10391
  %13 = load i32, i32* %12, align 4, !dbg !10393
  store i32 %13, i32* %orig, align 4, !dbg !10394
  %14 = load i32, i32* %orig, align 4, !dbg !10395
  %cmp2 = icmp eq i32 %14, -1, !dbg !10397
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !10398

if.then3:                                         ; preds = %if.then
  br label %for.inc, !dbg !10399

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !10400

if.else:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !10401
  store i32 %15, i32* %orig, align 4, !dbg !10403
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.end
  %16 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !10404
  %mloop = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %16, i32 0, i32 4, !dbg !10405
  %17 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !10405
  %18 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !10406
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %18, i32 0, i32 0, !dbg !10407
  %19 = load i32, i32* %loopstart, align 4, !dbg !10407
  %idxprom = sext i32 %19 to i64, !dbg !10404
  %arrayidx = getelementptr inbounds %struct.MLoop, %struct.MLoop* %17, i64 %idxprom, !dbg !10404
  store %struct.MLoop* %arrayidx, %struct.MLoop** %ml, align 8, !dbg !10408
  %20 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !10409
  %21 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !10410
  %22 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !10411
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !10412
  call void @BKE_mesh_calc_poly_center(%struct.MPoly* %20, %struct.MLoop* %21, %struct.MVert* %22, float* %arraydecay), !dbg !10413
  %23 = load i32, i32* %flag.addr, align 4, !dbg !10414
  %and = and i32 %23, 1, !dbg !10416
  %tobool5 = icmp ne i32 %and, 0, !dbg !10416
  br i1 %tobool5, label %if.then6, label %if.else8, !dbg !10417

if.then6:                                         ; preds = %if.end4
  %24 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !10418
  %25 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !10420
  %26 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !10421
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %_no, i64 0, i64 0, !dbg !10422
  store float* %arraydecay7, float** %no, align 8, !dbg !10423
  call void @BKE_mesh_calc_poly_normal(%struct.MPoly* %24, %struct.MLoop* %25, %struct.MVert* %26, float* %arraydecay7), !dbg !10424
  br label %if.end9, !dbg !10425

if.else8:                                         ; preds = %if.end4
  store float* null, float** %no, align 8, !dbg !10426
  br label %if.end9

if.end9:                                          ; preds = %if.else8, %if.then6
  %27 = load void (i8*, i32, float*, float*)*, void (i8*, i32, float*, float*)** %func.addr, align 8, !dbg !10428
  %28 = load i8*, i8** %userData.addr, align 8, !dbg !10429
  %29 = load i32, i32* %orig, align 4, !dbg !10430
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !10431
  %30 = load float*, float** %no, align 8, !dbg !10432
  call void %27(i8* %28, i32 %29, float* %arraydecay10, float* %30), !dbg !10428
  br label %for.inc, !dbg !10433

for.inc:                                          ; preds = %if.end9, %if.then3
  %31 = load i32, i32* %i, align 4, !dbg !10434
  %inc = add nsw i32 %31, 1, !dbg !10434
  store i32 %inc, i32* %i, align 4, !dbg !10434
  %32 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !10435
  %incdec.ptr11 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %32, i32 1, !dbg !10435
  store %struct.MPoly* %incdec.ptr11, %struct.MPoly** %mp, align 8, !dbg !10435
  br label %for.cond, !dbg !10436, !llvm.loop !10437

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10439
}

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_release(%struct.DerivedMesh* %dm) #0 !dbg !10440 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !10441, metadata !DIExpression()), !dbg !10442
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !10443, metadata !DIExpression()), !dbg !10444
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10445
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !10446
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !10444
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10447
  %call = call i32 @DM_release(%struct.DerivedMesh* %2), !dbg !10449
  %tobool = icmp ne i32 %call, 0, !dbg !10449
  br i1 %tobool, label %if.then, label %if.end, !dbg !10450

if.then:                                          ; preds = %entry
  %3 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !10451
  call void @cdDM_free_internal(%struct.CDDerivedMesh* %3), !dbg !10453
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10454
  %5 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !10455
  %6 = bitcast %struct.CDDerivedMesh* %5 to i8*, !dbg !10455
  call void %4(i8* %6), !dbg !10454
  br label %if.end, !dbg !10456

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10457
}

declare dso_local void @minmax_v3v3_v3(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !10458 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !10461, metadata !DIExpression()), !dbg !10462
  %0 = load float*, float** %r.addr, align 8, !dbg !10463
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !10463
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !10464
  %1 = load float*, float** %r.addr, align 8, !dbg !10465
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !10465
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !10466
  %2 = load float*, float** %r.addr, align 8, !dbg !10467
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !10467
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !10468
  ret void, !dbg !10469
}

; Function Attrs: noinline nounwind uwtable
define internal void @normal_short_to_float_v3(float* %out, i16* %in) #0 !dbg !10470 {
entry:
  %out.addr = alloca float*, align 8
  %in.addr = alloca i16*, align 8
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !10473, metadata !DIExpression()), !dbg !10474
  store i16* %in, i16** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %in.addr, metadata !10475, metadata !DIExpression()), !dbg !10476
  %0 = load i16*, i16** %in.addr, align 8, !dbg !10477
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 0, !dbg !10477
  %1 = load i16, i16* %arrayidx, align 2, !dbg !10477
  %conv = sext i16 %1 to i32, !dbg !10477
  %conv1 = sitofp i32 %conv to float, !dbg !10477
  %mul = fmul float %conv1, 0x3F00002000000000, !dbg !10478
  %2 = load float*, float** %out.addr, align 8, !dbg !10479
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 0, !dbg !10479
  store float %mul, float* %arrayidx2, align 4, !dbg !10480
  %3 = load i16*, i16** %in.addr, align 8, !dbg !10481
  %arrayidx3 = getelementptr inbounds i16, i16* %3, i64 1, !dbg !10481
  %4 = load i16, i16* %arrayidx3, align 2, !dbg !10481
  %conv4 = sext i16 %4 to i32, !dbg !10481
  %conv5 = sitofp i32 %conv4 to float, !dbg !10481
  %mul6 = fmul float %conv5, 0x3F00002000000000, !dbg !10482
  %5 = load float*, float** %out.addr, align 8, !dbg !10483
  %arrayidx7 = getelementptr inbounds float, float* %5, i64 1, !dbg !10483
  store float %mul6, float* %arrayidx7, align 4, !dbg !10484
  %6 = load i16*, i16** %in.addr, align 8, !dbg !10485
  %arrayidx8 = getelementptr inbounds i16, i16* %6, i64 2, !dbg !10485
  %7 = load i16, i16* %arrayidx8, align 2, !dbg !10485
  %conv9 = sext i16 %7 to i32, !dbg !10485
  %conv10 = sitofp i32 %conv9 to float, !dbg !10485
  %mul11 = fmul float %conv10, 0x3F00002000000000, !dbg !10486
  %8 = load float*, float** %out.addr, align 8, !dbg !10487
  %arrayidx12 = getelementptr inbounds float, float* %8, i64 2, !dbg !10487
  store float %mul11, float* %arrayidx12, align 4, !dbg !10488
  ret void, !dbg !10489
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @can_pbvh_draw(%struct.Object* %ob, %struct.DerivedMesh* %dm) #0 !dbg !10490 {
entry:
  %retval = alloca i8, align 1
  %ob.addr = alloca %struct.Object*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %me = alloca %struct.Mesh*, align 8
  %deformed = alloca i8, align 1
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10493, metadata !DIExpression()), !dbg !10494
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !10495, metadata !DIExpression()), !dbg !10496
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !10497, metadata !DIExpression()), !dbg !10498
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10499
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !10500
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !10498
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !10501, metadata !DIExpression()), !dbg !10502
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10503
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !10504
  %3 = load i8*, i8** %data, align 8, !dbg !10504
  %4 = bitcast i8* %3 to %struct.Mesh*, !dbg !10503
  store %struct.Mesh* %4, %struct.Mesh** %me, align 8, !dbg !10502
  call void @llvm.dbg.declare(metadata i8* %deformed, metadata !10505, metadata !DIExpression()), !dbg !10506
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10507
  %call = call zeroext i8 @check_sculpt_object_deformed(%struct.Object* %5, i8 zeroext 0), !dbg !10508
  store i8 %call, i8* %deformed, align 1, !dbg !10506
  %6 = load i8, i8* %deformed, align 1, !dbg !10509
  %tobool = icmp ne i8 %6, 0, !dbg !10509
  br i1 %tobool, label %if.then, label %if.end, !dbg !10511

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !10512
  br label %return, !dbg !10512

if.end:                                           ; preds = %entry
  %7 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !10514
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %7, i32 0, i32 1, !dbg !10515
  %8 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !10515
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !10516
  %mvert1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 15, !dbg !10517
  %10 = load %struct.MVert*, %struct.MVert** %mvert1, align 8, !dbg !10517
  %cmp = icmp eq %struct.MVert* %8, %10, !dbg !10518
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !10519

lor.rhs:                                          ; preds = %if.end
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10520
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 2, !dbg !10521
  %12 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !10521
  %kb = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %12, i32 0, i32 7, !dbg !10522
  %13 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !10522
  %tobool2 = icmp ne %struct.KeyBlock* %13, null, !dbg !10519
  br label %lor.end, !dbg !10519

lor.end:                                          ; preds = %lor.rhs, %if.end
  %14 = phi i1 [ true, %if.end ], [ %tobool2, %lor.rhs ]
  %lor.ext = zext i1 %14 to i32, !dbg !10519
  %conv = trunc i32 %lor.ext to i8, !dbg !10514
  store i8 %conv, i8* %retval, align 1, !dbg !10523
  br label %return, !dbg !10523

return:                                           ; preds = %lor.end, %if.then
  %15 = load i8, i8* %retval, align 1, !dbg !10524
  ret i8 %15, !dbg !10524
}

declare dso_local %struct.PBVH* @BKE_pbvh_new() #2

declare dso_local void @BKE_pbvh_build_bmesh(%struct.PBVH*, %struct.BMesh*, i8 zeroext, %struct.BMLog*, i32, i32) #2

declare dso_local void @pbvh_show_diffuse_color_set(%struct.PBVH*, i8 zeroext) #2

declare dso_local void @BKE_mesh_tessface_ensure(%struct.Mesh*) #2

declare dso_local void @BKE_pbvh_build_mesh(%struct.PBVH*, %struct.MFace*, %struct.MVert*, i32, i32, %struct.CustomData*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @check_sculpt_object_deformed(%struct.Object* %object, i8 zeroext %for_construction) #0 !dbg !10525 {
entry:
  %object.addr = alloca %struct.Object*, align 8
  %for_construction.addr = alloca i8, align 1
  %deformed = alloca i8, align 1
  store %struct.Object* %object, %struct.Object** %object.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %object.addr, metadata !10528, metadata !DIExpression()), !dbg !10529
  store i8 %for_construction, i8* %for_construction.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %for_construction.addr, metadata !10530, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.declare(metadata i8* %deformed, metadata !10532, metadata !DIExpression()), !dbg !10533
  store i8 0, i8* %deformed, align 1, !dbg !10533
  %0 = load %struct.Object*, %struct.Object** %object.addr, align 8, !dbg !10534
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !10535
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !10535
  %modifiers_active = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %1, i32 0, i32 17, !dbg !10536
  %2 = load i8, i8* %modifiers_active, align 1, !dbg !10536
  %conv = zext i8 %2 to i32, !dbg !10534
  %3 = load i8, i8* %deformed, align 1, !dbg !10537
  %conv1 = zext i8 %3 to i32, !dbg !10537
  %or = or i32 %conv1, %conv, !dbg !10537
  %conv2 = trunc i32 %or to i8, !dbg !10537
  store i8 %conv2, i8* %deformed, align 1, !dbg !10537
  %4 = load i8, i8* %for_construction.addr, align 1, !dbg !10538
  %tobool = icmp ne i8 %4, 0, !dbg !10538
  br i1 %tobool, label %if.then, label %if.else, !dbg !10540

if.then:                                          ; preds = %entry
  %5 = load %struct.Object*, %struct.Object** %object.addr, align 8, !dbg !10541
  %sculpt3 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 2, !dbg !10543
  %6 = load %struct.SculptSession*, %struct.SculptSession** %sculpt3, align 8, !dbg !10543
  %kb = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 7, !dbg !10544
  %7 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !10544
  %cmp = icmp ne %struct.KeyBlock* %7, null, !dbg !10545
  %conv4 = zext i1 %cmp to i32, !dbg !10545
  %8 = load i8, i8* %deformed, align 1, !dbg !10546
  %conv5 = zext i8 %8 to i32, !dbg !10546
  %or6 = or i32 %conv5, %conv4, !dbg !10546
  %conv7 = trunc i32 %or6 to i8, !dbg !10546
  store i8 %conv7, i8* %deformed, align 1, !dbg !10546
  br label %if.end, !dbg !10547

if.else:                                          ; preds = %entry
  %9 = load %struct.Object*, %struct.Object** %object.addr, align 8, !dbg !10548
  %sculpt8 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 2, !dbg !10550
  %10 = load %struct.SculptSession*, %struct.SculptSession** %sculpt8, align 8, !dbg !10550
  %kb9 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %10, i32 0, i32 7, !dbg !10551
  %11 = load %struct.KeyBlock*, %struct.KeyBlock** %kb9, align 8, !dbg !10551
  %tobool10 = icmp ne %struct.KeyBlock* %11, null, !dbg !10548
  br i1 %tobool10, label %land.rhs, label %land.end, !dbg !10552

land.rhs:                                         ; preds = %if.else
  %12 = load %struct.Object*, %struct.Object** %object.addr, align 8, !dbg !10553
  %shapeflag = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 114, !dbg !10554
  %13 = load i8, i8* %shapeflag, align 1, !dbg !10554
  %conv11 = zext i8 %13 to i32, !dbg !10553
  %and = and i32 %conv11, 1, !dbg !10555
  %cmp12 = icmp eq i32 %and, 0, !dbg !10556
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else
  %14 = phi i1 [ false, %if.else ], [ %cmp12, %land.rhs ], !dbg !10557
  %land.ext = zext i1 %14 to i32, !dbg !10552
  %15 = load i8, i8* %deformed, align 1, !dbg !10558
  %conv14 = zext i8 %15 to i32, !dbg !10558
  %or15 = or i32 %conv14, %land.ext, !dbg !10558
  %conv16 = trunc i32 %or15 to i8, !dbg !10558
  store i8 %conv16, i8* %deformed, align 1, !dbg !10558
  br label %if.end

if.end:                                           ; preds = %land.end, %if.then
  %16 = load i8, i8* %deformed, align 1, !dbg !10559
  ret i8 %16, !dbg !10560
}

declare dso_local void @BKE_pbvh_apply_vertCos(%struct.PBVH*, [3 x float]*) #2

declare dso_local zeroext i8 @GPU_buffer_legacy(%struct.DerivedMesh*) #2

declare dso_local void @glBegin(i32) #2

declare dso_local void @glVertex3fv(float*) #2

declare dso_local void @glEnd() #2

declare dso_local void @GPU_vertex_setup(%struct.DerivedMesh*) #2

declare dso_local void @glDrawArrays(i32, i32, i32) #2

declare dso_local void @GPU_buffer_unbind() #2

declare dso_local void @glVertex2fv(float*) #2

declare dso_local void @GPU_uvedge_setup(%struct.DerivedMesh*) #2

declare dso_local i32 @BKE_pbvh_type(%struct.PBVH*) #2

declare dso_local void @BKE_pbvh_draw(%struct.PBVH*, [4 x float]*, [3 x float]*, i32 (i32, i8*)*, i8 zeroext) #2

declare dso_local void @GPU_edge_setup(%struct.DerivedMesh*) #2

declare dso_local void @GPU_buffer_draw_elements(%struct.GPUBuffer*, i32, i32, i32) #2

declare dso_local void @glShadeModel(i32) #2

declare dso_local void @glNormal3sv(i16*) #2

declare dso_local void @glNormal3fv(float*) #2

declare dso_local float @normal_quad_v3(float*, float*, float*, float*, float*) #2

declare dso_local float @normal_tri_v3(float*, float*, float*, float*) #2

declare dso_local void @GPU_normal_setup(%struct.DerivedMesh*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_drawFacesTex_common(%struct.DerivedMesh* %dm, i32 (%struct.MTFace*, i8, i32)* %drawParams, i32 (i8*, i32)* %drawParamsMapped, i32 (i8*, i32, i32)* %compareDrawOptions, i8* %userData, i32 %uvflag) #0 !dbg !10561 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %drawParams.addr = alloca i32 (%struct.MTFace*, i8, i32)*, align 8
  %drawParamsMapped.addr = alloca i32 (i8*, i32)*, align 8
  %compareDrawOptions.addr = alloca i32 (i8*, i32, i32)*, align 8
  %userData.addr = alloca i8*, align 8
  %uvflag.addr = alloca i32, align 4
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %mv = alloca %struct.MVert*, align 8
  %mf = alloca %struct.MFace*, align 8
  %nors = alloca float*, align 8
  %lnors = alloca [4 x [3 x i16]]*, align 8
  %tf = alloca %struct.MTFace*, align 8
  %mcol = alloca %struct.MCol*, align 8
  %i = alloca i32, align 4
  %orig = alloca i32, align 4
  %colType = alloca i32, align 4
  %startFace = alloca i32, align 4
  %use_tface = alloca i8, align 1
  %index_mf_to_mpoly = alloca i32*, align 8
  %index_mp_to_orig = alloca i32*, align 8
  %mat_nr_cache = alloca i32, align 4
  %tf_base = alloca %struct.MTFace*, align 8
  %tf_stencil_base = alloca %struct.MTFace*, align 8
  %tf_stencil = alloca %struct.MTFace*, align 8
  %stencil = alloca i32, align 4
  %mvert51 = alloca %struct.MVert*, align 8
  %draw_option = alloca i32, align 4
  %cp = alloca i8*, align 8
  %nor = alloca [3 x float], align 4
  %tottri = alloca i32, align 4
  %next_actualFace = alloca i32, align 4
  %actualFace = alloca i32, align 4
  %draw_option359 = alloca i32, align 4
  %flush = alloca i32, align 4
  %first = alloca i32, align 4
  %count = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !10564, metadata !DIExpression()), !dbg !10565
  store i32 (%struct.MTFace*, i8, i32)* %drawParams, i32 (%struct.MTFace*, i8, i32)** %drawParams.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.MTFace*, i8, i32)** %drawParams.addr, metadata !10566, metadata !DIExpression()), !dbg !10567
  store i32 (i8*, i32)* %drawParamsMapped, i32 (i8*, i32)** %drawParamsMapped.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32)** %drawParamsMapped.addr, metadata !10568, metadata !DIExpression()), !dbg !10569
  store i32 (i8*, i32, i32)* %compareDrawOptions, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32, i32)** %compareDrawOptions.addr, metadata !10570, metadata !DIExpression()), !dbg !10571
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !10572, metadata !DIExpression()), !dbg !10573
  store i32 %uvflag, i32* %uvflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uvflag.addr, metadata !10574, metadata !DIExpression()), !dbg !10575
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !10576, metadata !DIExpression()), !dbg !10577
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10578
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !10579
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !10577
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !10580, metadata !DIExpression()), !dbg !10581
  %2 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !10582
  %mvert = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %2, i32 0, i32 1, !dbg !10583
  %3 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !10583
  store %struct.MVert* %3, %struct.MVert** %mv, align 8, !dbg !10581
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !10584, metadata !DIExpression()), !dbg !10585
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10586
  %call = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %4, i32 4), !dbg !10587
  %5 = bitcast i8* %call to %struct.MFace*, !dbg !10587
  store %struct.MFace* %5, %struct.MFace** %mf, align 8, !dbg !10585
  call void @llvm.dbg.declare(metadata float** %nors, metadata !10588, metadata !DIExpression()), !dbg !10589
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10590
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 52, !dbg !10591
  %7 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !10591
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10592
  %call1 = call i8* %7(%struct.DerivedMesh* %8, i32 8), !dbg !10590
  %9 = bitcast i8* %call1 to float*, !dbg !10590
  store float* %9, float** %nors, align 8, !dbg !10589
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %lnors, metadata !10593, metadata !DIExpression()), !dbg !10594
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10595
  %getTessFaceDataArray2 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 52, !dbg !10596
  %11 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray2, align 8, !dbg !10596
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10597
  %call3 = call i8* %11(%struct.DerivedMesh* %12, i32 40), !dbg !10595
  %13 = bitcast i8* %call3 to [4 x [3 x i16]]*, !dbg !10595
  store [4 x [3 x i16]]* %13, [4 x [3 x i16]]** %lnors, align 8, !dbg !10594
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf, metadata !10598, metadata !DIExpression()), !dbg !10599
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10600
  %call4 = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %14, i32 5), !dbg !10601
  %15 = bitcast i8* %call4 to %struct.MTFace*, !dbg !10601
  store %struct.MTFace* %15, %struct.MTFace** %tf, align 8, !dbg !10599
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol, metadata !10602, metadata !DIExpression()), !dbg !10603
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10604, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.declare(metadata i32* %orig, metadata !10606, metadata !DIExpression()), !dbg !10607
  call void @llvm.dbg.declare(metadata i32* %colType, metadata !10608, metadata !DIExpression()), !dbg !10609
  call void @llvm.dbg.declare(metadata i32* %startFace, metadata !10610, metadata !DIExpression()), !dbg !10611
  store i32 0, i32* %startFace, align 4, !dbg !10611
  call void @llvm.dbg.declare(metadata i8* %use_tface, metadata !10612, metadata !DIExpression()), !dbg !10613
  %16 = load i32, i32* %uvflag.addr, align 4, !dbg !10614
  %and = and i32 %16, 4, !dbg !10615
  %cmp = icmp ne i32 %and, 0, !dbg !10616
  %conv = zext i1 %cmp to i32, !dbg !10616
  %conv5 = trunc i32 %conv to i8, !dbg !10617
  store i8 %conv5, i8* %use_tface, align 1, !dbg !10613
  call void @llvm.dbg.declare(metadata i32** %index_mf_to_mpoly, metadata !10618, metadata !DIExpression()), !dbg !10619
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10620
  %getTessFaceDataArray6 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %17, i32 0, i32 52, !dbg !10621
  %18 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray6, align 8, !dbg !10621
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10622
  %call7 = call i8* %18(%struct.DerivedMesh* %19, i32 7), !dbg !10620
  %20 = bitcast i8* %call7 to i32*, !dbg !10620
  store i32* %20, i32** %index_mf_to_mpoly, align 8, !dbg !10619
  call void @llvm.dbg.declare(metadata i32** %index_mp_to_orig, metadata !10623, metadata !DIExpression()), !dbg !10624
  %21 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10625
  %getPolyDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %21, i32 0, i32 54, !dbg !10626
  %22 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getPolyDataArray, align 8, !dbg !10626
  %23 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10627
  %call8 = call i8* %22(%struct.DerivedMesh* %23, i32 7), !dbg !10625
  %24 = bitcast i8* %call8 to i32*, !dbg !10625
  store i32* %24, i32** %index_mp_to_orig, align 8, !dbg !10624
  %25 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !10628
  %cmp9 = icmp eq i32* %25, null, !dbg !10630
  br i1 %cmp9, label %if.then, label %if.end, !dbg !10631

if.then:                                          ; preds = %entry
  store i32* null, i32** %index_mp_to_orig, align 8, !dbg !10632
  br label %if.end, !dbg !10634

if.end:                                           ; preds = %if.then, %entry
  %26 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !10635
  %pbvh = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %26, i32 0, i32 6, !dbg !10637
  %27 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !10637
  %tobool = icmp ne %struct.PBVH* %27, null, !dbg !10635
  br i1 %tobool, label %land.lhs.true, label %if.end24, !dbg !10638

land.lhs.true:                                    ; preds = %if.end
  %28 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !10639
  %pbvh_draw = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %28, i32 0, i32 7, !dbg !10640
  %29 = load i8, i8* %pbvh_draw, align 8, !dbg !10640
  %conv11 = zext i8 %29 to i32, !dbg !10639
  %tobool12 = icmp ne i32 %conv11, 0, !dbg !10639
  br i1 %tobool12, label %land.lhs.true13, label %if.end24, !dbg !10641

land.lhs.true13:                                  ; preds = %land.lhs.true
  %30 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !10642
  %pbvh14 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %30, i32 0, i32 6, !dbg !10643
  %31 = load %struct.PBVH*, %struct.PBVH** %pbvh14, align 8, !dbg !10643
  %call15 = call i32 @BKE_pbvh_type(%struct.PBVH* %31), !dbg !10644
  %cmp16 = icmp eq i32 %call15, 2, !dbg !10645
  br i1 %cmp16, label %if.then18, label %if.end24, !dbg !10646

if.then18:                                        ; preds = %land.lhs.true13
  %32 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10647
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %32, i32 0, i32 7, !dbg !10650
  %33 = load i32, i32* %numTessFaceData, align 8, !dbg !10650
  %tobool19 = icmp ne i32 %33, 0, !dbg !10647
  br i1 %tobool19, label %if.then20, label %if.end23, !dbg !10651

if.then20:                                        ; preds = %if.then18
  %call21 = call i32 @GPU_set_tpage(%struct.MTFace* null, i32 0, i32 0), !dbg !10652
  %34 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !10654
  %pbvh22 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %34, i32 0, i32 6, !dbg !10655
  %35 = load %struct.PBVH*, %struct.PBVH** %pbvh22, align 8, !dbg !10655
  call void @BKE_pbvh_draw(%struct.PBVH* %35, [4 x float]* null, [3 x float]* null, i32 (i32, i8*)* null, i8 zeroext 0), !dbg !10656
  br label %if.end23, !dbg !10657

if.end23:                                         ; preds = %if.then20, %if.then18
  br label %if.end446, !dbg !10658

if.end24:                                         ; preds = %land.lhs.true13, %land.lhs.true, %if.end
  store i32 22, i32* %colType, align 4, !dbg !10659
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10660
  %getTessFaceDataArray25 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %36, i32 0, i32 52, !dbg !10661
  %37 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray25, align 8, !dbg !10661
  %38 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10662
  %39 = load i32, i32* %colType, align 4, !dbg !10663
  %call26 = call i8* %37(%struct.DerivedMesh* %38, i32 %39), !dbg !10660
  %40 = bitcast i8* %call26 to %struct.MCol*, !dbg !10660
  store %struct.MCol* %40, %struct.MCol** %mcol, align 8, !dbg !10664
  %41 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !10665
  %tobool27 = icmp ne %struct.MCol* %41, null, !dbg !10665
  br i1 %tobool27, label %if.end31, label %if.then28, !dbg !10667

if.then28:                                        ; preds = %if.end24
  store i32 20, i32* %colType, align 4, !dbg !10668
  %42 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10670
  %getTessFaceDataArray29 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %42, i32 0, i32 52, !dbg !10671
  %43 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray29, align 8, !dbg !10671
  %44 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10672
  %45 = load i32, i32* %colType, align 4, !dbg !10673
  %call30 = call i8* %43(%struct.DerivedMesh* %44, i32 %45), !dbg !10670
  %46 = bitcast i8* %call30 to %struct.MCol*, !dbg !10670
  store %struct.MCol* %46, %struct.MCol** %mcol, align 8, !dbg !10674
  br label %if.end31, !dbg !10675

if.end31:                                         ; preds = %if.then28, %if.end24
  %47 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !10676
  %tobool32 = icmp ne %struct.MCol* %47, null, !dbg !10676
  br i1 %tobool32, label %if.end36, label %if.then33, !dbg !10678

if.then33:                                        ; preds = %if.end31
  store i32 6, i32* %colType, align 4, !dbg !10679
  %48 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10681
  %getTessFaceDataArray34 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %48, i32 0, i32 52, !dbg !10682
  %49 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray34, align 8, !dbg !10682
  %50 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10683
  %51 = load i32, i32* %colType, align 4, !dbg !10684
  %call35 = call i8* %49(%struct.DerivedMesh* %50, i32 %51), !dbg !10681
  %52 = bitcast i8* %call35 to %struct.MCol*, !dbg !10681
  store %struct.MCol* %52, %struct.MCol** %mcol, align 8, !dbg !10685
  br label %if.end36, !dbg !10686

if.end36:                                         ; preds = %if.then33, %if.end31
  %53 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10687
  call void @cdDM_update_normals_from_pbvh(%struct.DerivedMesh* %53), !dbg !10688
  %54 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10689
  %call37 = call zeroext i8 @GPU_buffer_legacy(%struct.DerivedMesh* %54), !dbg !10691
  %tobool38 = icmp ne i8 %call37, 0, !dbg !10691
  br i1 %tobool38, label %if.then39, label %if.else341, !dbg !10692

if.then39:                                        ; preds = %if.end36
  call void @llvm.dbg.declare(metadata i32* %mat_nr_cache, metadata !10693, metadata !DIExpression()), !dbg !10695
  store i32 -1, i32* %mat_nr_cache, align 4, !dbg !10695
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf_base, metadata !10696, metadata !DIExpression()), !dbg !10697
  %55 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10698
  %call40 = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %55, i32 5), !dbg !10699
  %56 = bitcast i8* %call40 to %struct.MTFace*, !dbg !10699
  store %struct.MTFace* %56, %struct.MTFace** %tf_base, align 8, !dbg !10697
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf_stencil_base, metadata !10700, metadata !DIExpression()), !dbg !10701
  store %struct.MTFace* null, %struct.MTFace** %tf_stencil_base, align 8, !dbg !10701
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf_stencil, metadata !10702, metadata !DIExpression()), !dbg !10703
  store %struct.MTFace* null, %struct.MTFace** %tf_stencil, align 8, !dbg !10703
  %57 = load i32, i32* %uvflag.addr, align 4, !dbg !10704
  %and41 = and i32 %57, 8, !dbg !10706
  %tobool42 = icmp ne i32 %and41, 0, !dbg !10706
  br i1 %tobool42, label %if.then43, label %if.end47, !dbg !10707

if.then43:                                        ; preds = %if.then39
  call void @llvm.dbg.declare(metadata i32* %stencil, metadata !10708, metadata !DIExpression()), !dbg !10710
  %58 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10711
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %58, i32 0, i32 2, !dbg !10712
  %call44 = call i32 @CustomData_get_stencil_layer(%struct.CustomData* %faceData, i32 5), !dbg !10713
  store i32 %call44, i32* %stencil, align 4, !dbg !10710
  %59 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10714
  %faceData45 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %59, i32 0, i32 2, !dbg !10715
  %60 = load i32, i32* %stencil, align 4, !dbg !10716
  %call46 = call i8* @CustomData_get_layer_n(%struct.CustomData* %faceData45, i32 5, i32 %60), !dbg !10717
  %61 = bitcast i8* %call46 to %struct.MTFace*, !dbg !10717
  store %struct.MTFace* %61, %struct.MTFace** %tf_stencil_base, align 8, !dbg !10718
  br label %if.end47, !dbg !10719

if.end47:                                         ; preds = %if.then43, %if.then39
  store i32 0, i32* %i, align 4, !dbg !10720
  br label %for.cond, !dbg !10722

for.cond:                                         ; preds = %for.inc, %if.end47
  %62 = load i32, i32* %i, align 4, !dbg !10723
  %63 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10725
  %numTessFaceData48 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %63, i32 0, i32 7, !dbg !10726
  %64 = load i32, i32* %numTessFaceData48, align 8, !dbg !10726
  %cmp49 = icmp slt i32 %62, %64, !dbg !10727
  br i1 %cmp49, label %for.body, label %for.end, !dbg !10728

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert51, metadata !10729, metadata !DIExpression()), !dbg !10731
  call void @llvm.dbg.declare(metadata i32* %draw_option, metadata !10732, metadata !DIExpression()), !dbg !10733
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !10734, metadata !DIExpression()), !dbg !10735
  store i8* null, i8** %cp, align 8, !dbg !10735
  %65 = load i32, i32* %uvflag.addr, align 4, !dbg !10736
  %and52 = and i32 %65, 8, !dbg !10738
  %tobool53 = icmp ne i32 %and52, 0, !dbg !10738
  br i1 %tobool53, label %if.then54, label %if.end65, !dbg !10739

if.then54:                                        ; preds = %for.body
  %66 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10740
  %mat_nr = getelementptr inbounds %struct.MFace, %struct.MFace* %66, i32 0, i32 4, !dbg !10743
  %67 = load i16, i16* %mat_nr, align 4, !dbg !10743
  %conv55 = sext i16 %67 to i32, !dbg !10740
  %68 = load i32, i32* %mat_nr_cache, align 4, !dbg !10744
  %cmp56 = icmp ne i32 %conv55, %68, !dbg !10745
  br i1 %cmp56, label %if.then58, label %if.end64, !dbg !10746

if.then58:                                        ; preds = %if.then54
  %69 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10747
  %70 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10749
  %mat_nr59 = getelementptr inbounds %struct.MFace, %struct.MFace* %70, i32 0, i32 4, !dbg !10750
  %71 = load i16, i16* %mat_nr59, align 4, !dbg !10750
  %conv60 = sext i16 %71 to i32, !dbg !10749
  %call61 = call %struct.MTFace* @DM_paint_uvlayer_active_get(%struct.DerivedMesh* %69, i32 %conv60), !dbg !10751
  store %struct.MTFace* %call61, %struct.MTFace** %tf_base, align 8, !dbg !10752
  %72 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10753
  %mat_nr62 = getelementptr inbounds %struct.MFace, %struct.MFace* %72, i32 0, i32 4, !dbg !10754
  %73 = load i16, i16* %mat_nr62, align 4, !dbg !10754
  %conv63 = sext i16 %73 to i32, !dbg !10753
  store i32 %conv63, i32* %mat_nr_cache, align 4, !dbg !10755
  br label %if.end64, !dbg !10756

if.end64:                                         ; preds = %if.then58, %if.then54
  br label %if.end65, !dbg !10757

if.end65:                                         ; preds = %if.end64, %for.body
  %74 = load %struct.MTFace*, %struct.MTFace** %tf_base, align 8, !dbg !10758
  %tobool66 = icmp ne %struct.MTFace* %74, null, !dbg !10758
  br i1 %tobool66, label %cond.true, label %cond.false, !dbg !10758

cond.true:                                        ; preds = %if.end65
  %75 = load %struct.MTFace*, %struct.MTFace** %tf_base, align 8, !dbg !10759
  %76 = load i32, i32* %i, align 4, !dbg !10760
  %idx.ext = sext i32 %76 to i64, !dbg !10761
  %add.ptr = getelementptr inbounds %struct.MTFace, %struct.MTFace* %75, i64 %idx.ext, !dbg !10761
  br label %cond.end, !dbg !10758

cond.false:                                       ; preds = %if.end65
  br label %cond.end, !dbg !10758

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.MTFace* [ %add.ptr, %cond.true ], [ null, %cond.false ], !dbg !10758
  store %struct.MTFace* %cond, %struct.MTFace** %tf, align 8, !dbg !10762
  %77 = load %struct.MTFace*, %struct.MTFace** %tf_stencil_base, align 8, !dbg !10763
  %tobool67 = icmp ne %struct.MTFace* %77, null, !dbg !10763
  br i1 %tobool67, label %cond.true68, label %cond.false71, !dbg !10763

cond.true68:                                      ; preds = %cond.end
  %78 = load %struct.MTFace*, %struct.MTFace** %tf_stencil_base, align 8, !dbg !10764
  %79 = load i32, i32* %i, align 4, !dbg !10765
  %idx.ext69 = sext i32 %79 to i64, !dbg !10766
  %add.ptr70 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %78, i64 %idx.ext69, !dbg !10766
  br label %cond.end72, !dbg !10763

cond.false71:                                     ; preds = %cond.end
  br label %cond.end72, !dbg !10763

cond.end72:                                       ; preds = %cond.false71, %cond.true68
  %cond73 = phi %struct.MTFace* [ %add.ptr70, %cond.true68 ], [ null, %cond.false71 ], !dbg !10763
  store %struct.MTFace* %cond73, %struct.MTFace** %tf_stencil, align 8, !dbg !10767
  %80 = load i32 (%struct.MTFace*, i8, i32)*, i32 (%struct.MTFace*, i8, i32)** %drawParams.addr, align 8, !dbg !10768
  %tobool74 = icmp ne i32 (%struct.MTFace*, i8, i32)* %80, null, !dbg !10768
  br i1 %tobool74, label %if.then75, label %if.else, !dbg !10770

if.then75:                                        ; preds = %cond.end72
  %81 = load i32 (%struct.MTFace*, i8, i32)*, i32 (%struct.MTFace*, i8, i32)** %drawParams.addr, align 8, !dbg !10771
  %82 = load i8, i8* %use_tface, align 1, !dbg !10773
  %conv76 = zext i8 %82 to i32, !dbg !10773
  %tobool77 = icmp ne i32 %conv76, 0, !dbg !10773
  br i1 %tobool77, label %cond.true78, label %cond.false79, !dbg !10773

cond.true78:                                      ; preds = %if.then75
  %83 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !10774
  br label %cond.end80, !dbg !10773

cond.false79:                                     ; preds = %if.then75
  br label %cond.end80, !dbg !10773

cond.end80:                                       ; preds = %cond.false79, %cond.true78
  %cond81 = phi %struct.MTFace* [ %83, %cond.true78 ], [ null, %cond.false79 ], !dbg !10773
  %84 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !10775
  %cmp82 = icmp ne %struct.MCol* %84, null, !dbg !10776
  %conv83 = zext i1 %cmp82 to i32, !dbg !10776
  %conv84 = trunc i32 %conv83 to i8, !dbg !10777
  %85 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10778
  %mat_nr85 = getelementptr inbounds %struct.MFace, %struct.MFace* %85, i32 0, i32 4, !dbg !10779
  %86 = load i16, i16* %mat_nr85, align 4, !dbg !10779
  %conv86 = sext i16 %86 to i32, !dbg !10778
  %call87 = call i32 %81(%struct.MTFace* %cond81, i8 zeroext %conv84, i32 %conv86), !dbg !10771
  store i32 %call87, i32* %draw_option, align 4, !dbg !10780
  br label %if.end116, !dbg !10781

if.else:                                          ; preds = %cond.end72
  %87 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !10782
  %tobool88 = icmp ne i32* %87, null, !dbg !10782
  br i1 %tobool88, label %if.then89, label %if.else105, !dbg !10785

if.then89:                                        ; preds = %if.else
  %88 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !10786
  %89 = load i32*, i32** %index_mp_to_orig, align 8, !dbg !10788
  %90 = load i32, i32* %i, align 4, !dbg !10789
  %call90 = call i32 @DM_origindex_mface_mpoly(i32* %88, i32* %89, i32 %90), !dbg !10790
  store i32 %call90, i32* %orig, align 4, !dbg !10791
  %91 = load i32, i32* %orig, align 4, !dbg !10792
  %cmp91 = icmp eq i32 %91, -1, !dbg !10794
  br i1 %cmp91, label %if.then93, label %if.else94, !dbg !10795

if.then93:                                        ; preds = %if.then89
  store i32 1, i32* %draw_option, align 4, !dbg !10796
  br label %if.end104, !dbg !10798

if.else94:                                        ; preds = %if.then89
  %92 = load i32 (i8*, i32)*, i32 (i8*, i32)** %drawParamsMapped.addr, align 8, !dbg !10799
  %tobool95 = icmp ne i32 (i8*, i32)* %92, null, !dbg !10799
  br i1 %tobool95, label %if.then96, label %if.else98, !dbg !10801

if.then96:                                        ; preds = %if.else94
  %93 = load i32 (i8*, i32)*, i32 (i8*, i32)** %drawParamsMapped.addr, align 8, !dbg !10802
  %94 = load i8*, i8** %userData.addr, align 8, !dbg !10804
  %95 = load i32, i32* %orig, align 4, !dbg !10805
  %call97 = call i32 %93(i8* %94, i32 %95), !dbg !10802
  store i32 %call97, i32* %draw_option, align 4, !dbg !10806
  br label %if.end103, !dbg !10807

if.else98:                                        ; preds = %if.else94
  %96 = load float*, float** %nors, align 8, !dbg !10808
  %tobool99 = icmp ne float* %96, null, !dbg !10808
  br i1 %tobool99, label %if.then100, label %if.end102, !dbg !10811

if.then100:                                       ; preds = %if.else98
  %97 = load float*, float** %nors, align 8, !dbg !10812
  %add.ptr101 = getelementptr inbounds float, float* %97, i64 3, !dbg !10812
  store float* %add.ptr101, float** %nors, align 8, !dbg !10812
  br label %if.end102, !dbg !10814

if.end102:                                        ; preds = %if.then100, %if.else98
  br label %for.inc, !dbg !10815

if.end103:                                        ; preds = %if.then96
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then93
  br label %if.end115, !dbg !10816

if.else105:                                       ; preds = %if.else
  %98 = load i32 (i8*, i32)*, i32 (i8*, i32)** %drawParamsMapped.addr, align 8, !dbg !10817
  %tobool106 = icmp ne i32 (i8*, i32)* %98, null, !dbg !10817
  br i1 %tobool106, label %if.then107, label %if.else109, !dbg !10819

if.then107:                                       ; preds = %if.else105
  %99 = load i32 (i8*, i32)*, i32 (i8*, i32)** %drawParamsMapped.addr, align 8, !dbg !10820
  %100 = load i8*, i8** %userData.addr, align 8, !dbg !10822
  %101 = load i32, i32* %i, align 4, !dbg !10823
  %call108 = call i32 %99(i8* %100, i32 %101), !dbg !10820
  store i32 %call108, i32* %draw_option, align 4, !dbg !10824
  br label %if.end114, !dbg !10825

if.else109:                                       ; preds = %if.else105
  %102 = load float*, float** %nors, align 8, !dbg !10826
  %tobool110 = icmp ne float* %102, null, !dbg !10826
  br i1 %tobool110, label %if.then111, label %if.end113, !dbg !10829

if.then111:                                       ; preds = %if.else109
  %103 = load float*, float** %nors, align 8, !dbg !10830
  %add.ptr112 = getelementptr inbounds float, float* %103, i64 3, !dbg !10830
  store float* %add.ptr112, float** %nors, align 8, !dbg !10830
  br label %if.end113, !dbg !10832

if.end113:                                        ; preds = %if.then111, %if.else109
  br label %for.inc, !dbg !10833

if.end114:                                        ; preds = %if.then107
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.end104
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %cond.end80
  %104 = load i32, i32* %draw_option, align 4, !dbg !10834
  %cmp117 = icmp ne i32 %104, 0, !dbg !10836
  br i1 %cmp117, label %if.then119, label %if.end332, !dbg !10837

if.then119:                                       ; preds = %if.end116
  %105 = load i32, i32* %draw_option, align 4, !dbg !10838
  %cmp120 = icmp ne i32 %105, 2, !dbg !10841
  br i1 %cmp120, label %land.lhs.true122, label %if.end125, !dbg !10842

land.lhs.true122:                                 ; preds = %if.then119
  %106 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !10843
  %tobool123 = icmp ne %struct.MCol* %106, null, !dbg !10843
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !10844

if.then124:                                       ; preds = %land.lhs.true122
  %107 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !10845
  %108 = load i32, i32* %i, align 4, !dbg !10846
  %mul = mul nsw i32 %108, 4, !dbg !10847
  %idxprom = sext i32 %mul to i64, !dbg !10845
  %arrayidx = getelementptr inbounds %struct.MCol, %struct.MCol* %107, i64 %idxprom, !dbg !10845
  %109 = bitcast %struct.MCol* %arrayidx to i8*, !dbg !10848
  store i8* %109, i8** %cp, align 8, !dbg !10849
  br label %if.end125, !dbg !10850

if.end125:                                        ; preds = %if.then124, %land.lhs.true122, %if.then119
  %110 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !10851
  %tobool126 = icmp ne [4 x [3 x i16]]* %110, null, !dbg !10851
  br i1 %tobool126, label %if.end174, label %lor.lhs.false, !dbg !10853

lor.lhs.false:                                    ; preds = %if.end125
  %111 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10854
  %flag = getelementptr inbounds %struct.MFace, %struct.MFace* %111, i32 0, i32 6, !dbg !10855
  %112 = load i8, i8* %flag, align 1, !dbg !10855
  %conv127 = zext i8 %112 to i32, !dbg !10854
  %and128 = and i32 %conv127, 1, !dbg !10856
  %tobool129 = icmp ne i32 %and128, 0, !dbg !10856
  br i1 %tobool129, label %if.end174, label %if.then130, !dbg !10857

if.then130:                                       ; preds = %lor.lhs.false
  %113 = load float*, float** %nors, align 8, !dbg !10858
  %tobool131 = icmp ne float* %113, null, !dbg !10858
  br i1 %tobool131, label %if.then132, label %if.else133, !dbg !10861

if.then132:                                       ; preds = %if.then130
  %114 = load float*, float** %nors, align 8, !dbg !10862
  call void @glNormal3fv(float* %114), !dbg !10864
  br label %if.end173, !dbg !10865

if.else133:                                       ; preds = %if.then130
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !10866, metadata !DIExpression()), !dbg !10868
  %115 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10869
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %115, i32 0, i32 3, !dbg !10871
  %116 = load i32, i32* %v4, align 4, !dbg !10871
  %tobool134 = icmp ne i32 %116, 0, !dbg !10869
  br i1 %tobool134, label %if.then135, label %if.else153, !dbg !10872

if.then135:                                       ; preds = %if.else133
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !10873
  %117 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !10875
  %118 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10876
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %118, i32 0, i32 0, !dbg !10877
  %119 = load i32, i32* %v1, align 4, !dbg !10877
  %idxprom136 = zext i32 %119 to i64, !dbg !10875
  %arrayidx137 = getelementptr inbounds %struct.MVert, %struct.MVert* %117, i64 %idxprom136, !dbg !10875
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx137, i32 0, i32 0, !dbg !10878
  %arraydecay138 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !10875
  %120 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !10879
  %121 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10880
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %121, i32 0, i32 1, !dbg !10881
  %122 = load i32, i32* %v2, align 4, !dbg !10881
  %idxprom139 = zext i32 %122 to i64, !dbg !10879
  %arrayidx140 = getelementptr inbounds %struct.MVert, %struct.MVert* %120, i64 %idxprom139, !dbg !10879
  %co141 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx140, i32 0, i32 0, !dbg !10882
  %arraydecay142 = getelementptr inbounds [3 x float], [3 x float]* %co141, i64 0, i64 0, !dbg !10879
  %123 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !10883
  %124 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10884
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %124, i32 0, i32 2, !dbg !10885
  %125 = load i32, i32* %v3, align 4, !dbg !10885
  %idxprom143 = zext i32 %125 to i64, !dbg !10883
  %arrayidx144 = getelementptr inbounds %struct.MVert, %struct.MVert* %123, i64 %idxprom143, !dbg !10883
  %co145 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx144, i32 0, i32 0, !dbg !10886
  %arraydecay146 = getelementptr inbounds [3 x float], [3 x float]* %co145, i64 0, i64 0, !dbg !10883
  %126 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !10887
  %127 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10888
  %v4147 = getelementptr inbounds %struct.MFace, %struct.MFace* %127, i32 0, i32 3, !dbg !10889
  %128 = load i32, i32* %v4147, align 4, !dbg !10889
  %idxprom148 = zext i32 %128 to i64, !dbg !10887
  %arrayidx149 = getelementptr inbounds %struct.MVert, %struct.MVert* %126, i64 %idxprom148, !dbg !10887
  %co150 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx149, i32 0, i32 0, !dbg !10890
  %arraydecay151 = getelementptr inbounds [3 x float], [3 x float]* %co150, i64 0, i64 0, !dbg !10887
  %call152 = call float @normal_quad_v3(float* %arraydecay, float* %arraydecay138, float* %arraydecay142, float* %arraydecay146, float* %arraydecay151), !dbg !10891
  br label %if.end171, !dbg !10892

if.else153:                                       ; preds = %if.else133
  %arraydecay154 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !10893
  %129 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !10895
  %130 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10896
  %v1155 = getelementptr inbounds %struct.MFace, %struct.MFace* %130, i32 0, i32 0, !dbg !10897
  %131 = load i32, i32* %v1155, align 4, !dbg !10897
  %idxprom156 = zext i32 %131 to i64, !dbg !10895
  %arrayidx157 = getelementptr inbounds %struct.MVert, %struct.MVert* %129, i64 %idxprom156, !dbg !10895
  %co158 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx157, i32 0, i32 0, !dbg !10898
  %arraydecay159 = getelementptr inbounds [3 x float], [3 x float]* %co158, i64 0, i64 0, !dbg !10895
  %132 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !10899
  %133 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10900
  %v2160 = getelementptr inbounds %struct.MFace, %struct.MFace* %133, i32 0, i32 1, !dbg !10901
  %134 = load i32, i32* %v2160, align 4, !dbg !10901
  %idxprom161 = zext i32 %134 to i64, !dbg !10899
  %arrayidx162 = getelementptr inbounds %struct.MVert, %struct.MVert* %132, i64 %idxprom161, !dbg !10899
  %co163 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx162, i32 0, i32 0, !dbg !10902
  %arraydecay164 = getelementptr inbounds [3 x float], [3 x float]* %co163, i64 0, i64 0, !dbg !10899
  %135 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !10903
  %136 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10904
  %v3165 = getelementptr inbounds %struct.MFace, %struct.MFace* %136, i32 0, i32 2, !dbg !10905
  %137 = load i32, i32* %v3165, align 4, !dbg !10905
  %idxprom166 = zext i32 %137 to i64, !dbg !10903
  %arrayidx167 = getelementptr inbounds %struct.MVert, %struct.MVert* %135, i64 %idxprom166, !dbg !10903
  %co168 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx167, i32 0, i32 0, !dbg !10906
  %arraydecay169 = getelementptr inbounds [3 x float], [3 x float]* %co168, i64 0, i64 0, !dbg !10903
  %call170 = call float @normal_tri_v3(float* %arraydecay154, float* %arraydecay159, float* %arraydecay164, float* %arraydecay169), !dbg !10907
  br label %if.end171

if.end171:                                        ; preds = %if.else153, %if.then135
  %arraydecay172 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !10908
  call void @glNormal3fv(float* %arraydecay172), !dbg !10909
  br label %if.end173

if.end173:                                        ; preds = %if.end171, %if.then132
  br label %if.end174, !dbg !10910

if.end174:                                        ; preds = %if.end173, %lor.lhs.false, %if.end125
  %138 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10911
  %v4175 = getelementptr inbounds %struct.MFace, %struct.MFace* %138, i32 0, i32 3, !dbg !10912
  %139 = load i32, i32* %v4175, align 4, !dbg !10912
  %tobool176 = icmp ne i32 %139, 0, !dbg !10911
  %140 = zext i1 %tobool176 to i64, !dbg !10911
  %cond177 = select i1 %tobool176, i32 7, i32 4, !dbg !10911
  call void @glBegin(i32 %cond177), !dbg !10913
  %141 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !10914
  %tobool178 = icmp ne %struct.MTFace* %141, null, !dbg !10914
  br i1 %tobool178, label %if.then179, label %if.end182, !dbg !10916

if.then179:                                       ; preds = %if.end174
  %142 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !10917
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %142, i32 0, i32 0, !dbg !10918
  %arrayidx180 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 0, !dbg !10917
  %arraydecay181 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx180, i64 0, i64 0, !dbg !10917
  call void @glTexCoord2fv(float* %arraydecay181), !dbg !10919
  br label %if.end182, !dbg !10919

if.end182:                                        ; preds = %if.then179, %if.end174
  %143 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !10920
  %tobool183 = icmp ne %struct.MTFace* %143, null, !dbg !10920
  br i1 %tobool183, label %if.then184, label %if.end188, !dbg !10922

if.then184:                                       ; preds = %if.end182
  %144 = load void (i32, float*)*, void (i32, float*)** @__glewMultiTexCoord2fv, align 8, !dbg !10923
  %145 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !10924
  %uv185 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %145, i32 0, i32 0, !dbg !10925
  %arrayidx186 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv185, i64 0, i64 0, !dbg !10924
  %arraydecay187 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx186, i64 0, i64 0, !dbg !10924
  call void %144(i32 33986, float* %arraydecay187), !dbg !10923
  br label %if.end188, !dbg !10923

if.end188:                                        ; preds = %if.then184, %if.end182
  %146 = load i8*, i8** %cp, align 8, !dbg !10926
  %tobool189 = icmp ne i8* %146, null, !dbg !10926
  br i1 %tobool189, label %if.then190, label %if.end194, !dbg !10928

if.then190:                                       ; preds = %if.end188
  %147 = load i8*, i8** %cp, align 8, !dbg !10929
  %arrayidx191 = getelementptr inbounds i8, i8* %147, i64 3, !dbg !10929
  %148 = load i8, i8* %arrayidx191, align 1, !dbg !10929
  %149 = load i8*, i8** %cp, align 8, !dbg !10930
  %arrayidx192 = getelementptr inbounds i8, i8* %149, i64 2, !dbg !10930
  %150 = load i8, i8* %arrayidx192, align 1, !dbg !10930
  %151 = load i8*, i8** %cp, align 8, !dbg !10931
  %arrayidx193 = getelementptr inbounds i8, i8* %151, i64 1, !dbg !10931
  %152 = load i8, i8* %arrayidx193, align 1, !dbg !10931
  call void @glColor3ub(i8 zeroext %148, i8 zeroext %150, i8 zeroext %152), !dbg !10932
  br label %if.end194, !dbg !10932

if.end194:                                        ; preds = %if.then190, %if.end188
  %153 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !10933
  %154 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10934
  %v1195 = getelementptr inbounds %struct.MFace, %struct.MFace* %154, i32 0, i32 0, !dbg !10935
  %155 = load i32, i32* %v1195, align 4, !dbg !10935
  %idxprom196 = zext i32 %155 to i64, !dbg !10933
  %arrayidx197 = getelementptr inbounds %struct.MVert, %struct.MVert* %153, i64 %idxprom196, !dbg !10933
  store %struct.MVert* %arrayidx197, %struct.MVert** %mvert51, align 8, !dbg !10936
  %156 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !10937
  %tobool198 = icmp ne [4 x [3 x i16]]* %156, null, !dbg !10937
  br i1 %tobool198, label %if.then199, label %if.else203, !dbg !10939

if.then199:                                       ; preds = %if.end194
  %157 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !10940
  %arrayidx200 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %157, i64 0, !dbg !10940
  %arrayidx201 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx200, i64 0, i64 0, !dbg !10940
  %arraydecay202 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx201, i64 0, i64 0, !dbg !10940
  call void @glNormal3sv(i16* %arraydecay202), !dbg !10941
  br label %if.end211, !dbg !10941

if.else203:                                       ; preds = %if.end194
  %158 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10942
  %flag204 = getelementptr inbounds %struct.MFace, %struct.MFace* %158, i32 0, i32 6, !dbg !10944
  %159 = load i8, i8* %flag204, align 1, !dbg !10944
  %conv205 = zext i8 %159 to i32, !dbg !10942
  %and206 = and i32 %conv205, 1, !dbg !10945
  %tobool207 = icmp ne i32 %and206, 0, !dbg !10945
  br i1 %tobool207, label %if.then208, label %if.end210, !dbg !10946

if.then208:                                       ; preds = %if.else203
  %160 = load %struct.MVert*, %struct.MVert** %mvert51, align 8, !dbg !10947
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %160, i32 0, i32 1, !dbg !10948
  %arraydecay209 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !10947
  call void @glNormal3sv(i16* %arraydecay209), !dbg !10949
  br label %if.end210, !dbg !10949

if.end210:                                        ; preds = %if.then208, %if.else203
  br label %if.end211

if.end211:                                        ; preds = %if.end210, %if.then199
  %161 = load %struct.MVert*, %struct.MVert** %mvert51, align 8, !dbg !10950
  %co212 = getelementptr inbounds %struct.MVert, %struct.MVert* %161, i32 0, i32 0, !dbg !10951
  %arraydecay213 = getelementptr inbounds [3 x float], [3 x float]* %co212, i64 0, i64 0, !dbg !10950
  call void @glVertex3fv(float* %arraydecay213), !dbg !10952
  %162 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !10953
  %tobool214 = icmp ne %struct.MTFace* %162, null, !dbg !10953
  br i1 %tobool214, label %if.then215, label %if.end219, !dbg !10955

if.then215:                                       ; preds = %if.end211
  %163 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !10956
  %uv216 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %163, i32 0, i32 0, !dbg !10957
  %arrayidx217 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv216, i64 0, i64 1, !dbg !10956
  %arraydecay218 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx217, i64 0, i64 0, !dbg !10956
  call void @glTexCoord2fv(float* %arraydecay218), !dbg !10958
  br label %if.end219, !dbg !10958

if.end219:                                        ; preds = %if.then215, %if.end211
  %164 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !10959
  %tobool220 = icmp ne %struct.MTFace* %164, null, !dbg !10959
  br i1 %tobool220, label %if.then221, label %if.end225, !dbg !10961

if.then221:                                       ; preds = %if.end219
  %165 = load void (i32, float*)*, void (i32, float*)** @__glewMultiTexCoord2fv, align 8, !dbg !10962
  %166 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !10963
  %uv222 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %166, i32 0, i32 0, !dbg !10964
  %arrayidx223 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv222, i64 0, i64 1, !dbg !10963
  %arraydecay224 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx223, i64 0, i64 0, !dbg !10963
  call void %165(i32 33986, float* %arraydecay224), !dbg !10962
  br label %if.end225, !dbg !10962

if.end225:                                        ; preds = %if.then221, %if.end219
  %167 = load i8*, i8** %cp, align 8, !dbg !10965
  %tobool226 = icmp ne i8* %167, null, !dbg !10965
  br i1 %tobool226, label %if.then227, label %if.end231, !dbg !10967

if.then227:                                       ; preds = %if.end225
  %168 = load i8*, i8** %cp, align 8, !dbg !10968
  %arrayidx228 = getelementptr inbounds i8, i8* %168, i64 7, !dbg !10968
  %169 = load i8, i8* %arrayidx228, align 1, !dbg !10968
  %170 = load i8*, i8** %cp, align 8, !dbg !10969
  %arrayidx229 = getelementptr inbounds i8, i8* %170, i64 6, !dbg !10969
  %171 = load i8, i8* %arrayidx229, align 1, !dbg !10969
  %172 = load i8*, i8** %cp, align 8, !dbg !10970
  %arrayidx230 = getelementptr inbounds i8, i8* %172, i64 5, !dbg !10970
  %173 = load i8, i8* %arrayidx230, align 1, !dbg !10970
  call void @glColor3ub(i8 zeroext %169, i8 zeroext %171, i8 zeroext %173), !dbg !10971
  br label %if.end231, !dbg !10971

if.end231:                                        ; preds = %if.then227, %if.end225
  %174 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !10972
  %175 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10973
  %v2232 = getelementptr inbounds %struct.MFace, %struct.MFace* %175, i32 0, i32 1, !dbg !10974
  %176 = load i32, i32* %v2232, align 4, !dbg !10974
  %idxprom233 = zext i32 %176 to i64, !dbg !10972
  %arrayidx234 = getelementptr inbounds %struct.MVert, %struct.MVert* %174, i64 %idxprom233, !dbg !10972
  store %struct.MVert* %arrayidx234, %struct.MVert** %mvert51, align 8, !dbg !10975
  %177 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !10976
  %tobool235 = icmp ne [4 x [3 x i16]]* %177, null, !dbg !10976
  br i1 %tobool235, label %if.then236, label %if.else240, !dbg !10978

if.then236:                                       ; preds = %if.end231
  %178 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !10979
  %arrayidx237 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %178, i64 0, !dbg !10979
  %arrayidx238 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx237, i64 0, i64 1, !dbg !10979
  %arraydecay239 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx238, i64 0, i64 0, !dbg !10979
  call void @glNormal3sv(i16* %arraydecay239), !dbg !10980
  br label %if.end249, !dbg !10980

if.else240:                                       ; preds = %if.end231
  %179 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !10981
  %flag241 = getelementptr inbounds %struct.MFace, %struct.MFace* %179, i32 0, i32 6, !dbg !10983
  %180 = load i8, i8* %flag241, align 1, !dbg !10983
  %conv242 = zext i8 %180 to i32, !dbg !10981
  %and243 = and i32 %conv242, 1, !dbg !10984
  %tobool244 = icmp ne i32 %and243, 0, !dbg !10984
  br i1 %tobool244, label %if.then245, label %if.end248, !dbg !10985

if.then245:                                       ; preds = %if.else240
  %181 = load %struct.MVert*, %struct.MVert** %mvert51, align 8, !dbg !10986
  %no246 = getelementptr inbounds %struct.MVert, %struct.MVert* %181, i32 0, i32 1, !dbg !10987
  %arraydecay247 = getelementptr inbounds [3 x i16], [3 x i16]* %no246, i64 0, i64 0, !dbg !10986
  call void @glNormal3sv(i16* %arraydecay247), !dbg !10988
  br label %if.end248, !dbg !10988

if.end248:                                        ; preds = %if.then245, %if.else240
  br label %if.end249

if.end249:                                        ; preds = %if.end248, %if.then236
  %182 = load %struct.MVert*, %struct.MVert** %mvert51, align 8, !dbg !10989
  %co250 = getelementptr inbounds %struct.MVert, %struct.MVert* %182, i32 0, i32 0, !dbg !10990
  %arraydecay251 = getelementptr inbounds [3 x float], [3 x float]* %co250, i64 0, i64 0, !dbg !10989
  call void @glVertex3fv(float* %arraydecay251), !dbg !10991
  %183 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !10992
  %tobool252 = icmp ne %struct.MTFace* %183, null, !dbg !10992
  br i1 %tobool252, label %if.then253, label %if.end257, !dbg !10994

if.then253:                                       ; preds = %if.end249
  %184 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !10995
  %uv254 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %184, i32 0, i32 0, !dbg !10996
  %arrayidx255 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv254, i64 0, i64 2, !dbg !10995
  %arraydecay256 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx255, i64 0, i64 0, !dbg !10995
  call void @glTexCoord2fv(float* %arraydecay256), !dbg !10997
  br label %if.end257, !dbg !10997

if.end257:                                        ; preds = %if.then253, %if.end249
  %185 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !10998
  %tobool258 = icmp ne %struct.MTFace* %185, null, !dbg !10998
  br i1 %tobool258, label %if.then259, label %if.end263, !dbg !11000

if.then259:                                       ; preds = %if.end257
  %186 = load void (i32, float*)*, void (i32, float*)** @__glewMultiTexCoord2fv, align 8, !dbg !11001
  %187 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !11002
  %uv260 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %187, i32 0, i32 0, !dbg !11003
  %arrayidx261 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv260, i64 0, i64 2, !dbg !11002
  %arraydecay262 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx261, i64 0, i64 0, !dbg !11002
  call void %186(i32 33986, float* %arraydecay262), !dbg !11001
  br label %if.end263, !dbg !11001

if.end263:                                        ; preds = %if.then259, %if.end257
  %188 = load i8*, i8** %cp, align 8, !dbg !11004
  %tobool264 = icmp ne i8* %188, null, !dbg !11004
  br i1 %tobool264, label %if.then265, label %if.end269, !dbg !11006

if.then265:                                       ; preds = %if.end263
  %189 = load i8*, i8** %cp, align 8, !dbg !11007
  %arrayidx266 = getelementptr inbounds i8, i8* %189, i64 11, !dbg !11007
  %190 = load i8, i8* %arrayidx266, align 1, !dbg !11007
  %191 = load i8*, i8** %cp, align 8, !dbg !11008
  %arrayidx267 = getelementptr inbounds i8, i8* %191, i64 10, !dbg !11008
  %192 = load i8, i8* %arrayidx267, align 1, !dbg !11008
  %193 = load i8*, i8** %cp, align 8, !dbg !11009
  %arrayidx268 = getelementptr inbounds i8, i8* %193, i64 9, !dbg !11009
  %194 = load i8, i8* %arrayidx268, align 1, !dbg !11009
  call void @glColor3ub(i8 zeroext %190, i8 zeroext %192, i8 zeroext %194), !dbg !11010
  br label %if.end269, !dbg !11010

if.end269:                                        ; preds = %if.then265, %if.end263
  %195 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !11011
  %196 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11012
  %v3270 = getelementptr inbounds %struct.MFace, %struct.MFace* %196, i32 0, i32 2, !dbg !11013
  %197 = load i32, i32* %v3270, align 4, !dbg !11013
  %idxprom271 = zext i32 %197 to i64, !dbg !11011
  %arrayidx272 = getelementptr inbounds %struct.MVert, %struct.MVert* %195, i64 %idxprom271, !dbg !11011
  store %struct.MVert* %arrayidx272, %struct.MVert** %mvert51, align 8, !dbg !11014
  %198 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !11015
  %tobool273 = icmp ne [4 x [3 x i16]]* %198, null, !dbg !11015
  br i1 %tobool273, label %if.then274, label %if.else278, !dbg !11017

if.then274:                                       ; preds = %if.end269
  %199 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !11018
  %arrayidx275 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %199, i64 0, !dbg !11018
  %arrayidx276 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx275, i64 0, i64 2, !dbg !11018
  %arraydecay277 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx276, i64 0, i64 0, !dbg !11018
  call void @glNormal3sv(i16* %arraydecay277), !dbg !11019
  br label %if.end287, !dbg !11019

if.else278:                                       ; preds = %if.end269
  %200 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11020
  %flag279 = getelementptr inbounds %struct.MFace, %struct.MFace* %200, i32 0, i32 6, !dbg !11022
  %201 = load i8, i8* %flag279, align 1, !dbg !11022
  %conv280 = zext i8 %201 to i32, !dbg !11020
  %and281 = and i32 %conv280, 1, !dbg !11023
  %tobool282 = icmp ne i32 %and281, 0, !dbg !11023
  br i1 %tobool282, label %if.then283, label %if.end286, !dbg !11024

if.then283:                                       ; preds = %if.else278
  %202 = load %struct.MVert*, %struct.MVert** %mvert51, align 8, !dbg !11025
  %no284 = getelementptr inbounds %struct.MVert, %struct.MVert* %202, i32 0, i32 1, !dbg !11026
  %arraydecay285 = getelementptr inbounds [3 x i16], [3 x i16]* %no284, i64 0, i64 0, !dbg !11025
  call void @glNormal3sv(i16* %arraydecay285), !dbg !11027
  br label %if.end286, !dbg !11027

if.end286:                                        ; preds = %if.then283, %if.else278
  br label %if.end287

if.end287:                                        ; preds = %if.end286, %if.then274
  %203 = load %struct.MVert*, %struct.MVert** %mvert51, align 8, !dbg !11028
  %co288 = getelementptr inbounds %struct.MVert, %struct.MVert* %203, i32 0, i32 0, !dbg !11029
  %arraydecay289 = getelementptr inbounds [3 x float], [3 x float]* %co288, i64 0, i64 0, !dbg !11028
  call void @glVertex3fv(float* %arraydecay289), !dbg !11030
  %204 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11031
  %v4290 = getelementptr inbounds %struct.MFace, %struct.MFace* %204, i32 0, i32 3, !dbg !11033
  %205 = load i32, i32* %v4290, align 4, !dbg !11033
  %tobool291 = icmp ne i32 %205, 0, !dbg !11031
  br i1 %tobool291, label %if.then292, label %if.end331, !dbg !11034

if.then292:                                       ; preds = %if.end287
  %206 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !11035
  %tobool293 = icmp ne %struct.MTFace* %206, null, !dbg !11035
  br i1 %tobool293, label %if.then294, label %if.end298, !dbg !11038

if.then294:                                       ; preds = %if.then292
  %207 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !11039
  %uv295 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %207, i32 0, i32 0, !dbg !11040
  %arrayidx296 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv295, i64 0, i64 3, !dbg !11039
  %arraydecay297 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx296, i64 0, i64 0, !dbg !11039
  call void @glTexCoord2fv(float* %arraydecay297), !dbg !11041
  br label %if.end298, !dbg !11041

if.end298:                                        ; preds = %if.then294, %if.then292
  %208 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !11042
  %tobool299 = icmp ne %struct.MTFace* %208, null, !dbg !11042
  br i1 %tobool299, label %if.then300, label %if.end304, !dbg !11044

if.then300:                                       ; preds = %if.end298
  %209 = load void (i32, float*)*, void (i32, float*)** @__glewMultiTexCoord2fv, align 8, !dbg !11045
  %210 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !11046
  %uv301 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %210, i32 0, i32 0, !dbg !11047
  %arrayidx302 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv301, i64 0, i64 3, !dbg !11046
  %arraydecay303 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx302, i64 0, i64 0, !dbg !11046
  call void %209(i32 33986, float* %arraydecay303), !dbg !11045
  br label %if.end304, !dbg !11045

if.end304:                                        ; preds = %if.then300, %if.end298
  %211 = load i8*, i8** %cp, align 8, !dbg !11048
  %tobool305 = icmp ne i8* %211, null, !dbg !11048
  br i1 %tobool305, label %if.then306, label %if.end310, !dbg !11050

if.then306:                                       ; preds = %if.end304
  %212 = load i8*, i8** %cp, align 8, !dbg !11051
  %arrayidx307 = getelementptr inbounds i8, i8* %212, i64 15, !dbg !11051
  %213 = load i8, i8* %arrayidx307, align 1, !dbg !11051
  %214 = load i8*, i8** %cp, align 8, !dbg !11052
  %arrayidx308 = getelementptr inbounds i8, i8* %214, i64 14, !dbg !11052
  %215 = load i8, i8* %arrayidx308, align 1, !dbg !11052
  %216 = load i8*, i8** %cp, align 8, !dbg !11053
  %arrayidx309 = getelementptr inbounds i8, i8* %216, i64 13, !dbg !11053
  %217 = load i8, i8* %arrayidx309, align 1, !dbg !11053
  call void @glColor3ub(i8 zeroext %213, i8 zeroext %215, i8 zeroext %217), !dbg !11054
  br label %if.end310, !dbg !11054

if.end310:                                        ; preds = %if.then306, %if.end304
  %218 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !11055
  %219 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11056
  %v4311 = getelementptr inbounds %struct.MFace, %struct.MFace* %219, i32 0, i32 3, !dbg !11057
  %220 = load i32, i32* %v4311, align 4, !dbg !11057
  %idxprom312 = zext i32 %220 to i64, !dbg !11055
  %arrayidx313 = getelementptr inbounds %struct.MVert, %struct.MVert* %218, i64 %idxprom312, !dbg !11055
  store %struct.MVert* %arrayidx313, %struct.MVert** %mvert51, align 8, !dbg !11058
  %221 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !11059
  %tobool314 = icmp ne [4 x [3 x i16]]* %221, null, !dbg !11059
  br i1 %tobool314, label %if.then315, label %if.else319, !dbg !11061

if.then315:                                       ; preds = %if.end310
  %222 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !11062
  %arrayidx316 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %222, i64 0, !dbg !11062
  %arrayidx317 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx316, i64 0, i64 3, !dbg !11062
  %arraydecay318 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx317, i64 0, i64 0, !dbg !11062
  call void @glNormal3sv(i16* %arraydecay318), !dbg !11063
  br label %if.end328, !dbg !11063

if.else319:                                       ; preds = %if.end310
  %223 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11064
  %flag320 = getelementptr inbounds %struct.MFace, %struct.MFace* %223, i32 0, i32 6, !dbg !11066
  %224 = load i8, i8* %flag320, align 1, !dbg !11066
  %conv321 = zext i8 %224 to i32, !dbg !11064
  %and322 = and i32 %conv321, 1, !dbg !11067
  %tobool323 = icmp ne i32 %and322, 0, !dbg !11067
  br i1 %tobool323, label %if.then324, label %if.end327, !dbg !11068

if.then324:                                       ; preds = %if.else319
  %225 = load %struct.MVert*, %struct.MVert** %mvert51, align 8, !dbg !11069
  %no325 = getelementptr inbounds %struct.MVert, %struct.MVert* %225, i32 0, i32 1, !dbg !11070
  %arraydecay326 = getelementptr inbounds [3 x i16], [3 x i16]* %no325, i64 0, i64 0, !dbg !11069
  call void @glNormal3sv(i16* %arraydecay326), !dbg !11071
  br label %if.end327, !dbg !11071

if.end327:                                        ; preds = %if.then324, %if.else319
  br label %if.end328

if.end328:                                        ; preds = %if.end327, %if.then315
  %226 = load %struct.MVert*, %struct.MVert** %mvert51, align 8, !dbg !11072
  %co329 = getelementptr inbounds %struct.MVert, %struct.MVert* %226, i32 0, i32 0, !dbg !11073
  %arraydecay330 = getelementptr inbounds [3 x float], [3 x float]* %co329, i64 0, i64 0, !dbg !11072
  call void @glVertex3fv(float* %arraydecay330), !dbg !11074
  br label %if.end331, !dbg !11075

if.end331:                                        ; preds = %if.end328, %if.end287
  call void @glEnd(), !dbg !11076
  br label %if.end332, !dbg !11077

if.end332:                                        ; preds = %if.end331, %if.end116
  %227 = load float*, float** %nors, align 8, !dbg !11078
  %tobool333 = icmp ne float* %227, null, !dbg !11078
  br i1 %tobool333, label %if.then334, label %if.end336, !dbg !11080

if.then334:                                       ; preds = %if.end332
  %228 = load float*, float** %nors, align 8, !dbg !11081
  %add.ptr335 = getelementptr inbounds float, float* %228, i64 3, !dbg !11081
  store float* %add.ptr335, float** %nors, align 8, !dbg !11081
  br label %if.end336, !dbg !11082

if.end336:                                        ; preds = %if.then334, %if.end332
  %229 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !11083
  %tobool337 = icmp ne [4 x [3 x i16]]* %229, null, !dbg !11083
  br i1 %tobool337, label %if.then338, label %if.end339, !dbg !11085

if.then338:                                       ; preds = %if.end336
  %230 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !11086
  %incdec.ptr = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %230, i32 1, !dbg !11086
  store [4 x [3 x i16]]* %incdec.ptr, [4 x [3 x i16]]** %lnors, align 8, !dbg !11086
  br label %if.end339, !dbg !11087

if.end339:                                        ; preds = %if.then338, %if.end336
  br label %for.inc, !dbg !11088

for.inc:                                          ; preds = %if.end339, %if.end113, %if.end102
  %231 = load i32, i32* %i, align 4, !dbg !11089
  %inc = add nsw i32 %231, 1, !dbg !11089
  store i32 %inc, i32* %i, align 4, !dbg !11089
  %232 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11090
  %incdec.ptr340 = getelementptr inbounds %struct.MFace, %struct.MFace* %232, i32 1, !dbg !11090
  store %struct.MFace* %incdec.ptr340, %struct.MFace** %mf, align 8, !dbg !11090
  br label %for.cond, !dbg !11091, !llvm.loop !11092

for.end:                                          ; preds = %for.cond
  br label %if.end446, !dbg !11094

if.else341:                                       ; preds = %if.end36
  %233 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11095
  call void @GPU_vertex_setup(%struct.DerivedMesh* %233), !dbg !11097
  %234 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11098
  call void @GPU_normal_setup(%struct.DerivedMesh* %234), !dbg !11099
  %235 = load i32, i32* %uvflag.addr, align 4, !dbg !11100
  %and342 = and i32 %235, 8, !dbg !11102
  %tobool343 = icmp ne i32 %and342, 0, !dbg !11102
  br i1 %tobool343, label %if.then344, label %if.else345, !dbg !11103

if.then344:                                       ; preds = %if.else341
  %236 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11104
  call void @GPU_texpaint_uv_setup(%struct.DerivedMesh* %236), !dbg !11105
  br label %if.end346, !dbg !11105

if.else345:                                       ; preds = %if.else341
  %237 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11106
  call void @GPU_uv_setup(%struct.DerivedMesh* %237), !dbg !11107
  br label %if.end346

if.end346:                                        ; preds = %if.else345, %if.then344
  %238 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !11108
  %tobool347 = icmp ne %struct.MCol* %238, null, !dbg !11108
  br i1 %tobool347, label %if.then348, label %if.end349, !dbg !11110

if.then348:                                       ; preds = %if.end346
  %239 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11111
  %240 = load i32, i32* %colType, align 4, !dbg !11113
  call void @GPU_color_setup(%struct.DerivedMesh* %239, i32 %240), !dbg !11114
  br label %if.end349, !dbg !11115

if.end349:                                        ; preds = %if.then348, %if.end346
  %241 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11116
  %call350 = call zeroext i8 @GPU_buffer_legacy(%struct.DerivedMesh* %241), !dbg !11118
  %tobool351 = icmp ne i8 %call350, 0, !dbg !11118
  br i1 %tobool351, label %if.end445, label %if.then352, !dbg !11119

if.then352:                                       ; preds = %if.end349
  call void @llvm.dbg.declare(metadata i32* %tottri, metadata !11120, metadata !DIExpression()), !dbg !11122
  %242 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11123
  %drawObject = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %242, i32 0, i32 13, !dbg !11124
  %243 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject, align 8, !dbg !11124
  %tot_triangle_point = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %243, i32 0, i32 11, !dbg !11125
  %244 = load i32, i32* %tot_triangle_point, align 4, !dbg !11125
  %div = sdiv i32 %244, 3, !dbg !11126
  store i32 %div, i32* %tottri, align 4, !dbg !11122
  call void @llvm.dbg.declare(metadata i32* %next_actualFace, metadata !11127, metadata !DIExpression()), !dbg !11128
  %245 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11129
  %drawObject353 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %245, i32 0, i32 13, !dbg !11130
  %246 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject353, align 8, !dbg !11130
  %triangle_to_mface = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %246, i32 0, i32 6, !dbg !11131
  %247 = load i32*, i32** %triangle_to_mface, align 8, !dbg !11131
  %arrayidx354 = getelementptr inbounds i32, i32* %247, i64 0, !dbg !11129
  %248 = load i32, i32* %arrayidx354, align 4, !dbg !11129
  store i32 %248, i32* %next_actualFace, align 4, !dbg !11128
  call void @glShadeModel(i32 7425), !dbg !11132
  store i32 0, i32* %i, align 4, !dbg !11133
  br label %for.cond355, !dbg !11135

for.cond355:                                      ; preds = %for.inc442, %if.then352
  %249 = load i32, i32* %i, align 4, !dbg !11136
  %250 = load i32, i32* %tottri, align 4, !dbg !11138
  %cmp356 = icmp slt i32 %249, %250, !dbg !11139
  br i1 %cmp356, label %for.body358, label %for.end444, !dbg !11140

for.body358:                                      ; preds = %for.cond355
  call void @llvm.dbg.declare(metadata i32* %actualFace, metadata !11141, metadata !DIExpression()), !dbg !11143
  %251 = load i32, i32* %next_actualFace, align 4, !dbg !11144
  store i32 %251, i32* %actualFace, align 4, !dbg !11143
  call void @llvm.dbg.declare(metadata i32* %draw_option359, metadata !11145, metadata !DIExpression()), !dbg !11146
  store i32 1, i32* %draw_option359, align 4, !dbg !11146
  call void @llvm.dbg.declare(metadata i32* %flush, metadata !11147, metadata !DIExpression()), !dbg !11148
  store i32 0, i32* %flush, align 4, !dbg !11148
  %252 = load i32, i32* %i, align 4, !dbg !11149
  %253 = load i32, i32* %tottri, align 4, !dbg !11151
  %sub = sub nsw i32 %253, 1, !dbg !11152
  %cmp360 = icmp ne i32 %252, %sub, !dbg !11153
  br i1 %cmp360, label %if.then362, label %if.end367, !dbg !11154

if.then362:                                       ; preds = %for.body358
  %254 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11155
  %drawObject363 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %254, i32 0, i32 13, !dbg !11156
  %255 = load %struct.GPUDrawObject*, %struct.GPUDrawObject** %drawObject363, align 8, !dbg !11156
  %triangle_to_mface364 = getelementptr inbounds %struct.GPUDrawObject, %struct.GPUDrawObject* %255, i32 0, i32 6, !dbg !11157
  %256 = load i32*, i32** %triangle_to_mface364, align 8, !dbg !11157
  %257 = load i32, i32* %i, align 4, !dbg !11158
  %add = add nsw i32 %257, 1, !dbg !11159
  %idxprom365 = sext i32 %add to i64, !dbg !11155
  %arrayidx366 = getelementptr inbounds i32, i32* %256, i64 %idxprom365, !dbg !11155
  %258 = load i32, i32* %arrayidx366, align 4, !dbg !11155
  store i32 %258, i32* %next_actualFace, align 4, !dbg !11160
  br label %if.end367, !dbg !11161

if.end367:                                        ; preds = %if.then362, %for.body358
  %259 = load i32 (%struct.MTFace*, i8, i32)*, i32 (%struct.MTFace*, i8, i32)** %drawParams.addr, align 8, !dbg !11162
  %tobool368 = icmp ne i32 (%struct.MTFace*, i8, i32)* %259, null, !dbg !11162
  br i1 %tobool368, label %if.then369, label %if.else388, !dbg !11164

if.then369:                                       ; preds = %if.end367
  %260 = load i32 (%struct.MTFace*, i8, i32)*, i32 (%struct.MTFace*, i8, i32)** %drawParams.addr, align 8, !dbg !11165
  %261 = load i8, i8* %use_tface, align 1, !dbg !11167
  %conv370 = zext i8 %261 to i32, !dbg !11167
  %tobool371 = icmp ne i32 %conv370, 0, !dbg !11167
  br i1 %tobool371, label %land.lhs.true372, label %cond.false377, !dbg !11168

land.lhs.true372:                                 ; preds = %if.then369
  %262 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !11169
  %tobool373 = icmp ne %struct.MTFace* %262, null, !dbg !11169
  br i1 %tobool373, label %cond.true374, label %cond.false377, !dbg !11167

cond.true374:                                     ; preds = %land.lhs.true372
  %263 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !11170
  %264 = load i32, i32* %actualFace, align 4, !dbg !11171
  %idxprom375 = sext i32 %264 to i64, !dbg !11170
  %arrayidx376 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %263, i64 %idxprom375, !dbg !11170
  br label %cond.end378, !dbg !11167

cond.false377:                                    ; preds = %land.lhs.true372, %if.then369
  br label %cond.end378, !dbg !11167

cond.end378:                                      ; preds = %cond.false377, %cond.true374
  %cond379 = phi %struct.MTFace* [ %arrayidx376, %cond.true374 ], [ null, %cond.false377 ], !dbg !11167
  %265 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !11172
  %cmp380 = icmp ne %struct.MCol* %265, null, !dbg !11173
  %conv381 = zext i1 %cmp380 to i32, !dbg !11173
  %conv382 = trunc i32 %conv381 to i8, !dbg !11174
  %266 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !11175
  %267 = load i32, i32* %actualFace, align 4, !dbg !11176
  %idxprom383 = sext i32 %267 to i64, !dbg !11175
  %arrayidx384 = getelementptr inbounds %struct.MFace, %struct.MFace* %266, i64 %idxprom383, !dbg !11175
  %mat_nr385 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx384, i32 0, i32 4, !dbg !11177
  %268 = load i16, i16* %mat_nr385, align 4, !dbg !11177
  %conv386 = sext i16 %268 to i32, !dbg !11175
  %call387 = call i32 %260(%struct.MTFace* %cond379, i8 zeroext %conv382, i32 %conv386), !dbg !11165
  store i32 %call387, i32* %draw_option359, align 4, !dbg !11178
  br label %if.end407, !dbg !11179

if.else388:                                       ; preds = %if.end367
  %269 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !11180
  %tobool389 = icmp ne i32* %269, null, !dbg !11180
  br i1 %tobool389, label %if.then390, label %if.else401, !dbg !11183

if.then390:                                       ; preds = %if.else388
  %270 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !11184
  %271 = load i32*, i32** %index_mp_to_orig, align 8, !dbg !11186
  %272 = load i32, i32* %actualFace, align 4, !dbg !11187
  %call391 = call i32 @DM_origindex_mface_mpoly(i32* %270, i32* %271, i32 %272), !dbg !11188
  store i32 %call391, i32* %orig, align 4, !dbg !11189
  %273 = load i32, i32* %orig, align 4, !dbg !11190
  %cmp392 = icmp eq i32 %273, -1, !dbg !11192
  br i1 %cmp392, label %if.then394, label %if.else395, !dbg !11193

if.then394:                                       ; preds = %if.then390
  store i32 1, i32* %draw_option359, align 4, !dbg !11194
  br label %if.end400, !dbg !11196

if.else395:                                       ; preds = %if.then390
  %274 = load i32 (i8*, i32)*, i32 (i8*, i32)** %drawParamsMapped.addr, align 8, !dbg !11197
  %tobool396 = icmp ne i32 (i8*, i32)* %274, null, !dbg !11197
  br i1 %tobool396, label %if.then397, label %if.end399, !dbg !11199

if.then397:                                       ; preds = %if.else395
  %275 = load i32 (i8*, i32)*, i32 (i8*, i32)** %drawParamsMapped.addr, align 8, !dbg !11200
  %276 = load i8*, i8** %userData.addr, align 8, !dbg !11202
  %277 = load i32, i32* %orig, align 4, !dbg !11203
  %call398 = call i32 %275(i8* %276, i32 %277), !dbg !11200
  store i32 %call398, i32* %draw_option359, align 4, !dbg !11204
  br label %if.end399, !dbg !11205

if.end399:                                        ; preds = %if.then397, %if.else395
  br label %if.end400

if.end400:                                        ; preds = %if.end399, %if.then394
  br label %if.end406, !dbg !11206

if.else401:                                       ; preds = %if.else388
  %278 = load i32 (i8*, i32)*, i32 (i8*, i32)** %drawParamsMapped.addr, align 8, !dbg !11207
  %tobool402 = icmp ne i32 (i8*, i32)* %278, null, !dbg !11207
  br i1 %tobool402, label %if.then403, label %if.end405, !dbg !11209

if.then403:                                       ; preds = %if.else401
  %279 = load i32 (i8*, i32)*, i32 (i8*, i32)** %drawParamsMapped.addr, align 8, !dbg !11210
  %280 = load i8*, i8** %userData.addr, align 8, !dbg !11212
  %281 = load i32, i32* %actualFace, align 4, !dbg !11213
  %call404 = call i32 %279(i8* %280, i32 %281), !dbg !11210
  store i32 %call404, i32* %draw_option359, align 4, !dbg !11214
  br label %if.end405, !dbg !11215

if.end405:                                        ; preds = %if.then403, %if.else401
  br label %if.end406

if.end406:                                        ; preds = %if.end405, %if.end400
  br label %if.end407

if.end407:                                        ; preds = %if.end406, %cond.end378
  %282 = load i32, i32* %draw_option359, align 4, !dbg !11216
  %cmp408 = icmp eq i32 %282, 0, !dbg !11217
  br i1 %cmp408, label %lor.end, label %lor.rhs, !dbg !11218

lor.rhs:                                          ; preds = %if.end407
  %283 = load i32, i32* %i, align 4, !dbg !11219
  %284 = load i32, i32* %tottri, align 4, !dbg !11220
  %sub410 = sub nsw i32 %284, 1, !dbg !11221
  %cmp411 = icmp eq i32 %283, %sub410, !dbg !11222
  br label %lor.end, !dbg !11218

lor.end:                                          ; preds = %lor.rhs, %if.end407
  %285 = phi i1 [ true, %if.end407 ], [ %cmp411, %lor.rhs ]
  %lor.ext = zext i1 %285 to i32, !dbg !11218
  store i32 %lor.ext, i32* %flush, align 4, !dbg !11223
  %286 = load i32, i32* %flush, align 4, !dbg !11224
  %tobool413 = icmp ne i32 %286, 0, !dbg !11224
  br i1 %tobool413, label %if.end420, label %land.lhs.true414, !dbg !11226

land.lhs.true414:                                 ; preds = %lor.end
  %287 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8, !dbg !11227
  %tobool415 = icmp ne i32 (i8*, i32, i32)* %287, null, !dbg !11227
  br i1 %tobool415, label %if.then416, label %if.end420, !dbg !11228

if.then416:                                       ; preds = %land.lhs.true414
  %288 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8, !dbg !11229
  %289 = load i8*, i8** %userData.addr, align 8, !dbg !11231
  %290 = load i32, i32* %actualFace, align 4, !dbg !11232
  %291 = load i32, i32* %next_actualFace, align 4, !dbg !11233
  %call417 = call i32 %288(i8* %289, i32 %290, i32 %291), !dbg !11229
  %cmp418 = icmp eq i32 %call417, 0, !dbg !11234
  %conv419 = zext i1 %cmp418 to i32, !dbg !11234
  %292 = load i32, i32* %flush, align 4, !dbg !11235
  %or = or i32 %292, %conv419, !dbg !11235
  store i32 %or, i32* %flush, align 4, !dbg !11235
  br label %if.end420, !dbg !11236

if.end420:                                        ; preds = %if.then416, %land.lhs.true414, %lor.end
  %293 = load i32, i32* %flush, align 4, !dbg !11237
  %tobool421 = icmp ne i32 %293, 0, !dbg !11237
  br i1 %tobool421, label %if.then422, label %if.end441, !dbg !11239

if.then422:                                       ; preds = %if.end420
  call void @llvm.dbg.declare(metadata i32* %first, metadata !11240, metadata !DIExpression()), !dbg !11242
  %294 = load i32, i32* %startFace, align 4, !dbg !11243
  %mul423 = mul nsw i32 %294, 3, !dbg !11244
  store i32 %mul423, i32* %first, align 4, !dbg !11242
  call void @llvm.dbg.declare(metadata i32* %count, metadata !11245, metadata !DIExpression()), !dbg !11246
  %295 = load i32, i32* %i, align 4, !dbg !11247
  %296 = load i32, i32* %startFace, align 4, !dbg !11248
  %sub424 = sub nsw i32 %295, %296, !dbg !11249
  %297 = load i32, i32* %draw_option359, align 4, !dbg !11250
  %cmp425 = icmp ne i32 %297, 0, !dbg !11251
  %298 = zext i1 %cmp425 to i64, !dbg !11250
  %cond427 = select i1 %cmp425, i32 1, i32 0, !dbg !11250
  %add428 = add nsw i32 %sub424, %cond427, !dbg !11252
  %mul429 = mul nsw i32 %add428, 3, !dbg !11253
  store i32 %mul429, i32* %count, align 4, !dbg !11246
  %299 = load i32, i32* %count, align 4, !dbg !11254
  %tobool430 = icmp ne i32 %299, 0, !dbg !11254
  br i1 %tobool430, label %if.then431, label %if.end439, !dbg !11256

if.then431:                                       ; preds = %if.then422
  %300 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !11257
  %tobool432 = icmp ne %struct.MCol* %300, null, !dbg !11257
  br i1 %tobool432, label %land.lhs.true433, label %if.else437, !dbg !11260

land.lhs.true433:                                 ; preds = %if.then431
  %301 = load i32, i32* %draw_option359, align 4, !dbg !11261
  %cmp434 = icmp ne i32 %301, 2, !dbg !11262
  br i1 %cmp434, label %if.then436, label %if.else437, !dbg !11263

if.then436:                                       ; preds = %land.lhs.true433
  call void @GPU_color_switch(i32 1), !dbg !11264
  br label %if.end438, !dbg !11264

if.else437:                                       ; preds = %land.lhs.true433, %if.then431
  call void @GPU_color_switch(i32 0), !dbg !11265
  br label %if.end438

if.end438:                                        ; preds = %if.else437, %if.then436
  %302 = load i32, i32* %first, align 4, !dbg !11266
  %303 = load i32, i32* %count, align 4, !dbg !11267
  call void @glDrawArrays(i32 4, i32 %302, i32 %303), !dbg !11268
  br label %if.end439, !dbg !11269

if.end439:                                        ; preds = %if.end438, %if.then422
  %304 = load i32, i32* %i, align 4, !dbg !11270
  %add440 = add nsw i32 %304, 1, !dbg !11271
  store i32 %add440, i32* %startFace, align 4, !dbg !11272
  br label %if.end441, !dbg !11273

if.end441:                                        ; preds = %if.end439, %if.end420
  br label %for.inc442, !dbg !11274

for.inc442:                                       ; preds = %if.end441
  %305 = load i32, i32* %i, align 4, !dbg !11275
  %inc443 = add nsw i32 %305, 1, !dbg !11275
  store i32 %inc443, i32* %i, align 4, !dbg !11275
  br label %for.cond355, !dbg !11276, !llvm.loop !11277

for.end444:                                       ; preds = %for.cond355
  br label %if.end445, !dbg !11279

if.end445:                                        ; preds = %for.end444, %if.end349
  call void @GPU_buffer_unbind(), !dbg !11280
  call void @glShadeModel(i32 7424), !dbg !11281
  br label %if.end446

if.end446:                                        ; preds = %if.end23, %if.end445, %for.end
  ret void, !dbg !11282
}

declare dso_local i32 @GPU_set_tpage(%struct.MTFace*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_update_normals_from_pbvh(%struct.DerivedMesh* %dm) #0 !dbg !11283 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %cddm = alloca %struct.CDDerivedMesh*, align 8
  %face_nors = alloca [3 x float]*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !11284, metadata !DIExpression()), !dbg !11285
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm, metadata !11286, metadata !DIExpression()), !dbg !11287
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11288
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CDDerivedMesh*, !dbg !11289
  store %struct.CDDerivedMesh* %1, %struct.CDDerivedMesh** %cddm, align 8, !dbg !11287
  call void @llvm.dbg.declare(metadata [3 x float]** %face_nors, metadata !11290, metadata !DIExpression()), !dbg !11291
  %2 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !11292
  %pbvh = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %2, i32 0, i32 6, !dbg !11294
  %3 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !11294
  %tobool = icmp ne %struct.PBVH* %3, null, !dbg !11292
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !11295

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !11296
  %pbvh_draw = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %4, i32 0, i32 7, !dbg !11297
  %5 = load i8, i8* %pbvh_draw, align 8, !dbg !11297
  %tobool1 = icmp ne i8 %5, 0, !dbg !11296
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !11298

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11299
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 7, !dbg !11300
  %7 = load i32, i32* %numTessFaceData, align 8, !dbg !11300
  %tobool3 = icmp ne i32 %7, 0, !dbg !11299
  br i1 %tobool3, label %if.end, label %if.then, !dbg !11301

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  br label %return, !dbg !11302

if.end:                                           ; preds = %lor.lhs.false2
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11303
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 2, !dbg !11304
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %faceData, i32 8), !dbg !11305
  %9 = bitcast i8* %call to [3 x float]*, !dbg !11305
  store [3 x float]* %9, [3 x float]** %face_nors, align 8, !dbg !11306
  %10 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm, align 8, !dbg !11307
  %pbvh4 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %10, i32 0, i32 6, !dbg !11308
  %11 = load %struct.PBVH*, %struct.PBVH** %pbvh4, align 8, !dbg !11308
  %12 = load [3 x float]*, [3 x float]** %face_nors, align 8, !dbg !11309
  call void @BKE_pbvh_update(%struct.PBVH* %11, i32 2, [3 x float]* %12), !dbg !11310
  br label %return, !dbg !11311

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !11311
}

declare dso_local i32 @CustomData_get_stencil_layer(%struct.CustomData*, i32) #2

declare dso_local i8* @CustomData_get_layer_n(%struct.CustomData*, i32, i32) #2

declare dso_local %struct.MTFace* @DM_paint_uvlayer_active_get(%struct.DerivedMesh*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @DM_origindex_mface_mpoly(i32* %index_mf_to_mpoly, i32* %index_mp_to_orig, i32 %i) #0 !dbg !11312 {
entry:
  %index_mf_to_mpoly.addr = alloca i32*, align 8
  %index_mp_to_orig.addr = alloca i32*, align 8
  %i.addr = alloca i32, align 4
  %j = alloca i32, align 4
  store i32* %index_mf_to_mpoly, i32** %index_mf_to_mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %index_mf_to_mpoly.addr, metadata !11315, metadata !DIExpression()), !dbg !11316
  store i32* %index_mp_to_orig, i32** %index_mp_to_orig.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %index_mp_to_orig.addr, metadata !11317, metadata !DIExpression()), !dbg !11318
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !11319, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11321, metadata !DIExpression()), !dbg !11322
  %0 = load i32*, i32** %index_mf_to_mpoly.addr, align 8, !dbg !11323
  %1 = load i32, i32* %i.addr, align 4, !dbg !11324
  %idxprom = sext i32 %1 to i64, !dbg !11323
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !11323
  %2 = load i32, i32* %arrayidx, align 4, !dbg !11323
  store i32 %2, i32* %j, align 4, !dbg !11322
  %3 = load i32, i32* %j, align 4, !dbg !11325
  %cmp = icmp ne i32 %3, -1, !dbg !11326
  br i1 %cmp, label %cond.true, label %cond.false4, !dbg !11327

cond.true:                                        ; preds = %entry
  %4 = load i32*, i32** %index_mp_to_orig.addr, align 8, !dbg !11328
  %tobool = icmp ne i32* %4, null, !dbg !11328
  br i1 %tobool, label %cond.true1, label %cond.false, !dbg !11328

cond.true1:                                       ; preds = %cond.true
  %5 = load i32*, i32** %index_mp_to_orig.addr, align 8, !dbg !11329
  %6 = load i32, i32* %j, align 4, !dbg !11330
  %idxprom2 = sext i32 %6 to i64, !dbg !11329
  %arrayidx3 = getelementptr inbounds i32, i32* %5, i64 %idxprom2, !dbg !11329
  %7 = load i32, i32* %arrayidx3, align 4, !dbg !11329
  br label %cond.end, !dbg !11328

cond.false:                                       ; preds = %cond.true
  %8 = load i32, i32* %j, align 4, !dbg !11331
  br label %cond.end, !dbg !11328

cond.end:                                         ; preds = %cond.false, %cond.true1
  %cond = phi i32 [ %7, %cond.true1 ], [ %8, %cond.false ], !dbg !11328
  br label %cond.end5, !dbg !11327

cond.false4:                                      ; preds = %entry
  br label %cond.end5, !dbg !11327

cond.end5:                                        ; preds = %cond.false4, %cond.end
  %cond6 = phi i32 [ %cond, %cond.end ], [ -1, %cond.false4 ], !dbg !11327
  ret i32 %cond6, !dbg !11332
}

declare dso_local void @glTexCoord2fv(float*) #2

declare dso_local void @glColor3ub(i8 zeroext, i8 zeroext, i8 zeroext) #2

declare dso_local void @GPU_texpaint_uv_setup(%struct.DerivedMesh*) #2

declare dso_local void @GPU_uv_setup(%struct.DerivedMesh*) #2

declare dso_local void @GPU_color_setup(%struct.DerivedMesh*, i32) #2

declare dso_local void @GPU_color_switch(i32) #2

declare dso_local void @BKE_pbvh_update(%struct.PBVH*, i32, [3 x float]*) #2

declare dso_local void @glEnable(i32) #2

declare dso_local void @glPolygonStipple(i8*) #2

declare dso_local void @glDisable(i32) #2

declare dso_local void @DM_vertex_attributes_from_gpu(%struct.DerivedMesh*, %struct.GPUVertexAttribs*, %struct.DMVertexAttribs*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @cddm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, %struct.MVert* %mvert, i32 %a, i32 %index, i32 %vert, [3 x i16]* %lnor, i8 zeroext %smoothnormal) #0 !dbg !11333 {
entry:
  %attribs.addr = alloca %struct.DMVertexAttribs*, align 8
  %mvert.addr = alloca %struct.MVert*, align 8
  %a.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %vert.addr = alloca i32, align 4
  %lnor.addr = alloca [3 x i16]*, align 8
  %smoothnormal.addr = alloca i8, align 1
  %zero = alloca [4 x float], align 16
  %b = alloca i32, align 4
  %array = alloca [3 x float]*, align 8
  %orco2 = alloca float*, align 8
  %uv = alloca float*, align 8
  %tf = alloca %struct.MTFace*, align 8
  %col = alloca [4 x i8], align 1
  %cp = alloca %struct.MCol*, align 8
  %array76 = alloca [4 x float]*, align 8
  %tang78 = alloca float*, align 8
  store %struct.DMVertexAttribs* %attribs, %struct.DMVertexAttribs** %attribs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DMVertexAttribs** %attribs.addr, metadata !11337, metadata !DIExpression()), !dbg !11338
  store %struct.MVert* %mvert, %struct.MVert** %mvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert.addr, metadata !11339, metadata !DIExpression()), !dbg !11340
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !11341, metadata !DIExpression()), !dbg !11342
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !11343, metadata !DIExpression()), !dbg !11344
  store i32 %vert, i32* %vert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vert.addr, metadata !11345, metadata !DIExpression()), !dbg !11346
  store [3 x i16]* %lnor, [3 x i16]** %lnor.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x i16]** %lnor.addr, metadata !11347, metadata !DIExpression()), !dbg !11348
  store i8 %smoothnormal, i8* %smoothnormal.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %smoothnormal.addr, metadata !11349, metadata !DIExpression()), !dbg !11350
  call void @llvm.dbg.declare(metadata [4 x float]* %zero, metadata !11351, metadata !DIExpression()), !dbg !11353
  %0 = bitcast [4 x float]* %zero to i8*, !dbg !11353
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 16, i1 false), !dbg !11353
  call void @llvm.dbg.declare(metadata i32* %b, metadata !11354, metadata !DIExpression()), !dbg !11355
  %1 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !11356
  %totorco = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %1, i32 0, i32 7, !dbg !11358
  %2 = load i32, i32* %totorco, align 4, !dbg !11358
  %tobool = icmp ne i32 %2, 0, !dbg !11356
  br i1 %tobool, label %if.then, label %if.end9, !dbg !11359

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]** %array, metadata !11360, metadata !DIExpression()), !dbg !11362
  %3 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !11363
  %orco = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %3, i32 0, i32 3, !dbg !11364
  %array1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %orco, i32 0, i32 0, !dbg !11365
  %4 = load [3 x float]*, [3 x float]** %array1, align 8, !dbg !11365
  store [3 x float]* %4, [3 x float]** %array, align 8, !dbg !11362
  call void @llvm.dbg.declare(metadata float** %orco2, metadata !11366, metadata !DIExpression()), !dbg !11367
  %5 = load [3 x float]*, [3 x float]** %array, align 8, !dbg !11368
  %tobool3 = icmp ne [3 x float]* %5, null, !dbg !11369
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !11369

cond.true:                                        ; preds = %if.then
  %6 = load [3 x float]*, [3 x float]** %array, align 8, !dbg !11370
  %7 = load i32, i32* %index.addr, align 4, !dbg !11371
  %idxprom = sext i32 %7 to i64, !dbg !11370
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %6, i64 %idxprom, !dbg !11370
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !11370
  br label %cond.end, !dbg !11369

cond.false:                                       ; preds = %if.then
  %arraydecay4 = getelementptr inbounds [4 x float], [4 x float]* %zero, i64 0, i64 0, !dbg !11372
  br label %cond.end, !dbg !11369

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %arraydecay, %cond.true ], [ %arraydecay4, %cond.false ], !dbg !11369
  store float* %cond, float** %orco2, align 8, !dbg !11367
  %8 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !11373
  %orco5 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %8, i32 0, i32 3, !dbg !11375
  %gl_texco = getelementptr inbounds %struct.anon.3, %struct.anon.3* %orco5, i32 0, i32 3, !dbg !11376
  %9 = load i32, i32* %gl_texco, align 8, !dbg !11376
  %tobool6 = icmp ne i32 %9, 0, !dbg !11373
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !11377

if.then7:                                         ; preds = %cond.end
  %10 = load float*, float** %orco2, align 8, !dbg !11378
  call void @glTexCoord3fv(float* %10), !dbg !11379
  br label %if.end, !dbg !11379

if.else:                                          ; preds = %cond.end
  %11 = load void (i32, float*)*, void (i32, float*)** @__glewVertexAttrib3fvARB, align 8, !dbg !11380
  %12 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !11381
  %orco8 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %12, i32 0, i32 3, !dbg !11382
  %gl_index = getelementptr inbounds %struct.anon.3, %struct.anon.3* %orco8, i32 0, i32 2, !dbg !11383
  %13 = load i32, i32* %gl_index, align 4, !dbg !11383
  %14 = load float*, float** %orco2, align 8, !dbg !11384
  call void %11(i32 %13, float* %14), !dbg !11380
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  br label %if.end9, !dbg !11385

if.end9:                                          ; preds = %if.end, %entry
  store i32 0, i32* %b, align 4, !dbg !11386
  br label %for.cond, !dbg !11388

for.cond:                                         ; preds = %for.inc, %if.end9
  %15 = load i32, i32* %b, align 4, !dbg !11389
  %16 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !11391
  %tottface = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %16, i32 0, i32 4, !dbg !11392
  %17 = load i32, i32* %tottface, align 8, !dbg !11392
  %cmp = icmp slt i32 %15, %17, !dbg !11393
  br i1 %cmp, label %for.body, label %for.end, !dbg !11394

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float** %uv, metadata !11395, metadata !DIExpression()), !dbg !11397
  %18 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !11398
  %tface = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %18, i32 0, i32 0, !dbg !11400
  %19 = load i32, i32* %b, align 4, !dbg !11401
  %idxprom10 = sext i32 %19 to i64, !dbg !11398
  %arrayidx11 = getelementptr inbounds [8 x %struct.anon.0], [8 x %struct.anon.0]* %tface, i64 0, i64 %idxprom10, !dbg !11398
  %array12 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx11, i32 0, i32 0, !dbg !11402
  %20 = load %struct.MTFace*, %struct.MTFace** %array12, align 8, !dbg !11402
  %tobool13 = icmp ne %struct.MTFace* %20, null, !dbg !11398
  br i1 %tobool13, label %if.then14, label %if.else25, !dbg !11403

if.then14:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf, metadata !11404, metadata !DIExpression()), !dbg !11406
  %21 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !11407
  %tface15 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %21, i32 0, i32 0, !dbg !11408
  %22 = load i32, i32* %b, align 4, !dbg !11409
  %idxprom16 = sext i32 %22 to i64, !dbg !11407
  %arrayidx17 = getelementptr inbounds [8 x %struct.anon.0], [8 x %struct.anon.0]* %tface15, i64 0, i64 %idxprom16, !dbg !11407
  %array18 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx17, i32 0, i32 0, !dbg !11410
  %23 = load %struct.MTFace*, %struct.MTFace** %array18, align 8, !dbg !11410
  %24 = load i32, i32* %a.addr, align 4, !dbg !11411
  %idxprom19 = sext i32 %24 to i64, !dbg !11407
  %arrayidx20 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %23, i64 %idxprom19, !dbg !11407
  store %struct.MTFace* %arrayidx20, %struct.MTFace** %tf, align 8, !dbg !11406
  %25 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !11412
  %uv21 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %25, i32 0, i32 0, !dbg !11413
  %26 = load i32, i32* %vert.addr, align 4, !dbg !11414
  %idxprom22 = sext i32 %26 to i64, !dbg !11412
  %arrayidx23 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv21, i64 0, i64 %idxprom22, !dbg !11412
  %arraydecay24 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx23, i64 0, i64 0, !dbg !11412
  store float* %arraydecay24, float** %uv, align 8, !dbg !11415
  br label %if.end27, !dbg !11416

if.else25:                                        ; preds = %for.body
  %arraydecay26 = getelementptr inbounds [4 x float], [4 x float]* %zero, i64 0, i64 0, !dbg !11417
  store float* %arraydecay26, float** %uv, align 8, !dbg !11419
  br label %if.end27

if.end27:                                         ; preds = %if.else25, %if.then14
  %27 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !11420
  %tface28 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %27, i32 0, i32 0, !dbg !11422
  %28 = load i32, i32* %b, align 4, !dbg !11423
  %idxprom29 = sext i32 %28 to i64, !dbg !11420
  %arrayidx30 = getelementptr inbounds [8 x %struct.anon.0], [8 x %struct.anon.0]* %tface28, i64 0, i64 %idxprom29, !dbg !11420
  %gl_texco31 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx30, i32 0, i32 3, !dbg !11424
  %29 = load i32, i32* %gl_texco31, align 8, !dbg !11424
  %tobool32 = icmp ne i32 %29, 0, !dbg !11420
  br i1 %tobool32, label %if.then33, label %if.else34, !dbg !11425

if.then33:                                        ; preds = %if.end27
  %30 = load float*, float** %uv, align 8, !dbg !11426
  call void @glTexCoord2fv(float* %30), !dbg !11427
  br label %if.end39, !dbg !11427

if.else34:                                        ; preds = %if.end27
  %31 = load void (i32, float*)*, void (i32, float*)** @__glewVertexAttrib2fvARB, align 8, !dbg !11428
  %32 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !11429
  %tface35 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %32, i32 0, i32 0, !dbg !11430
  %33 = load i32, i32* %b, align 4, !dbg !11431
  %idxprom36 = sext i32 %33 to i64, !dbg !11429
  %arrayidx37 = getelementptr inbounds [8 x %struct.anon.0], [8 x %struct.anon.0]* %tface35, i64 0, i64 %idxprom36, !dbg !11429
  %gl_index38 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx37, i32 0, i32 2, !dbg !11432
  %34 = load i32, i32* %gl_index38, align 4, !dbg !11432
  %35 = load float*, float** %uv, align 8, !dbg !11433
  call void %31(i32 %34, float* %35), !dbg !11428
  br label %if.end39

if.end39:                                         ; preds = %if.else34, %if.then33
  br label %for.inc, !dbg !11434

for.inc:                                          ; preds = %if.end39
  %36 = load i32, i32* %b, align 4, !dbg !11435
  %inc = add nsw i32 %36, 1, !dbg !11435
  store i32 %inc, i32* %b, align 4, !dbg !11435
  br label %for.cond, !dbg !11436, !llvm.loop !11437

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %b, align 4, !dbg !11439
  br label %for.cond40, !dbg !11441

for.cond40:                                       ; preds = %for.inc71, %for.end
  %37 = load i32, i32* %b, align 4, !dbg !11442
  %38 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !11444
  %totmcol = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %38, i32 0, i32 5, !dbg !11445
  %39 = load i32, i32* %totmcol, align 4, !dbg !11445
  %cmp41 = icmp slt i32 %37, %39, !dbg !11446
  br i1 %cmp41, label %for.body42, label %for.end73, !dbg !11447

for.body42:                                       ; preds = %for.cond40
  call void @llvm.dbg.declare(metadata [4 x i8]* %col, metadata !11448, metadata !DIExpression()), !dbg !11450
  %40 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !11451
  %mcol = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %40, i32 0, i32 1, !dbg !11453
  %41 = load i32, i32* %b, align 4, !dbg !11454
  %idxprom43 = sext i32 %41 to i64, !dbg !11451
  %arrayidx44 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %mcol, i64 0, i64 %idxprom43, !dbg !11451
  %array45 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx44, i32 0, i32 0, !dbg !11455
  %42 = load %struct.MCol*, %struct.MCol** %array45, align 8, !dbg !11455
  %tobool46 = icmp ne %struct.MCol* %42, null, !dbg !11451
  br i1 %tobool46, label %if.then47, label %if.else60, !dbg !11456

if.then47:                                        ; preds = %for.body42
  call void @llvm.dbg.declare(metadata %struct.MCol** %cp, metadata !11457, metadata !DIExpression()), !dbg !11459
  %43 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !11460
  %mcol48 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %43, i32 0, i32 1, !dbg !11461
  %44 = load i32, i32* %b, align 4, !dbg !11462
  %idxprom49 = sext i32 %44 to i64, !dbg !11460
  %arrayidx50 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %mcol48, i64 0, i64 %idxprom49, !dbg !11460
  %array51 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx50, i32 0, i32 0, !dbg !11463
  %45 = load %struct.MCol*, %struct.MCol** %array51, align 8, !dbg !11463
  %46 = load i32, i32* %a.addr, align 4, !dbg !11464
  %mul = mul nsw i32 %46, 4, !dbg !11465
  %47 = load i32, i32* %vert.addr, align 4, !dbg !11466
  %add = add nsw i32 %mul, %47, !dbg !11467
  %idxprom52 = sext i32 %add to i64, !dbg !11460
  %arrayidx53 = getelementptr inbounds %struct.MCol, %struct.MCol* %45, i64 %idxprom52, !dbg !11460
  store %struct.MCol* %arrayidx53, %struct.MCol** %cp, align 8, !dbg !11459
  %48 = load %struct.MCol*, %struct.MCol** %cp, align 8, !dbg !11468
  %b54 = getelementptr inbounds %struct.MCol, %struct.MCol* %48, i32 0, i32 3, !dbg !11469
  %49 = load i8, i8* %b54, align 1, !dbg !11469
  %arrayidx55 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !11470
  store i8 %49, i8* %arrayidx55, align 1, !dbg !11471
  %50 = load %struct.MCol*, %struct.MCol** %cp, align 8, !dbg !11472
  %g = getelementptr inbounds %struct.MCol, %struct.MCol* %50, i32 0, i32 2, !dbg !11473
  %51 = load i8, i8* %g, align 1, !dbg !11473
  %arrayidx56 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 1, !dbg !11474
  store i8 %51, i8* %arrayidx56, align 1, !dbg !11475
  %52 = load %struct.MCol*, %struct.MCol** %cp, align 8, !dbg !11476
  %r = getelementptr inbounds %struct.MCol, %struct.MCol* %52, i32 0, i32 1, !dbg !11477
  %53 = load i8, i8* %r, align 1, !dbg !11477
  %arrayidx57 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 2, !dbg !11478
  store i8 %53, i8* %arrayidx57, align 1, !dbg !11479
  %54 = load %struct.MCol*, %struct.MCol** %cp, align 8, !dbg !11480
  %a58 = getelementptr inbounds %struct.MCol, %struct.MCol* %54, i32 0, i32 0, !dbg !11481
  %55 = load i8, i8* %a58, align 1, !dbg !11481
  %arrayidx59 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 3, !dbg !11482
  store i8 %55, i8* %arrayidx59, align 1, !dbg !11483
  br label %if.end65, !dbg !11484

if.else60:                                        ; preds = %for.body42
  %arrayidx61 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !11485
  store i8 0, i8* %arrayidx61, align 1, !dbg !11487
  %arrayidx62 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 1, !dbg !11488
  store i8 0, i8* %arrayidx62, align 1, !dbg !11489
  %arrayidx63 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 2, !dbg !11490
  store i8 0, i8* %arrayidx63, align 1, !dbg !11491
  %arrayidx64 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 3, !dbg !11492
  store i8 0, i8* %arrayidx64, align 1, !dbg !11493
  br label %if.end65

if.end65:                                         ; preds = %if.else60, %if.then47
  %56 = load void (i32, i8*)*, void (i32, i8*)** @__glewVertexAttrib4ubvARB, align 8, !dbg !11494
  %57 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !11495
  %mcol66 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %57, i32 0, i32 1, !dbg !11496
  %58 = load i32, i32* %b, align 4, !dbg !11497
  %idxprom67 = sext i32 %58 to i64, !dbg !11495
  %arrayidx68 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %mcol66, i64 0, i64 %idxprom67, !dbg !11495
  %gl_index69 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx68, i32 0, i32 2, !dbg !11498
  %59 = load i32, i32* %gl_index69, align 4, !dbg !11498
  %arraydecay70 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !11499
  call void %56(i32 %59, i8* %arraydecay70), !dbg !11494
  br label %for.inc71, !dbg !11500

for.inc71:                                        ; preds = %if.end65
  %60 = load i32, i32* %b, align 4, !dbg !11501
  %inc72 = add nsw i32 %60, 1, !dbg !11501
  store i32 %inc72, i32* %b, align 4, !dbg !11501
  br label %for.cond40, !dbg !11502, !llvm.loop !11503

for.end73:                                        ; preds = %for.cond40
  %61 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !11505
  %tottang = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %61, i32 0, i32 6, !dbg !11507
  %62 = load i32, i32* %tottang, align 8, !dbg !11507
  %tobool74 = icmp ne i32 %62, 0, !dbg !11505
  br i1 %tobool74, label %if.then75, label %if.end92, !dbg !11508

if.then75:                                        ; preds = %for.end73
  call void @llvm.dbg.declare(metadata [4 x float]** %array76, metadata !11509, metadata !DIExpression()), !dbg !11511
  %63 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !11512
  %tang = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %63, i32 0, i32 2, !dbg !11513
  %array77 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %tang, i32 0, i32 0, !dbg !11514
  %64 = load [4 x float]*, [4 x float]** %array77, align 8, !dbg !11514
  store [4 x float]* %64, [4 x float]** %array76, align 8, !dbg !11511
  call void @llvm.dbg.declare(metadata float** %tang78, metadata !11515, metadata !DIExpression()), !dbg !11516
  %65 = load [4 x float]*, [4 x float]** %array76, align 8, !dbg !11517
  %tobool79 = icmp ne [4 x float]* %65, null, !dbg !11518
  br i1 %tobool79, label %cond.true80, label %cond.false86, !dbg !11518

cond.true80:                                      ; preds = %if.then75
  %66 = load [4 x float]*, [4 x float]** %array76, align 8, !dbg !11519
  %67 = load i32, i32* %a.addr, align 4, !dbg !11520
  %mul81 = mul nsw i32 %67, 4, !dbg !11521
  %68 = load i32, i32* %vert.addr, align 4, !dbg !11522
  %add82 = add nsw i32 %mul81, %68, !dbg !11523
  %idxprom83 = sext i32 %add82 to i64, !dbg !11519
  %arrayidx84 = getelementptr inbounds [4 x float], [4 x float]* %66, i64 %idxprom83, !dbg !11519
  %arraydecay85 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx84, i64 0, i64 0, !dbg !11519
  br label %cond.end88, !dbg !11518

cond.false86:                                     ; preds = %if.then75
  %arraydecay87 = getelementptr inbounds [4 x float], [4 x float]* %zero, i64 0, i64 0, !dbg !11524
  br label %cond.end88, !dbg !11518

cond.end88:                                       ; preds = %cond.false86, %cond.true80
  %cond89 = phi float* [ %arraydecay85, %cond.true80 ], [ %arraydecay87, %cond.false86 ], !dbg !11518
  store float* %cond89, float** %tang78, align 8, !dbg !11516
  %69 = load void (i32, float*)*, void (i32, float*)** @__glewVertexAttrib4fvARB, align 8, !dbg !11525
  %70 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !11526
  %tang90 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %70, i32 0, i32 2, !dbg !11527
  %gl_index91 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %tang90, i32 0, i32 2, !dbg !11528
  %71 = load i32, i32* %gl_index91, align 4, !dbg !11528
  %72 = load float*, float** %tang78, align 8, !dbg !11529
  call void %69(i32 %71, float* %72), !dbg !11525
  br label %if.end92, !dbg !11530

if.end92:                                         ; preds = %cond.end88, %for.end73
  %73 = load [3 x i16]*, [3 x i16]** %lnor.addr, align 8, !dbg !11531
  %tobool93 = icmp ne [3 x i16]* %73, null, !dbg !11531
  br i1 %tobool93, label %if.then94, label %if.else95, !dbg !11533

if.then94:                                        ; preds = %if.end92
  %74 = load [3 x i16]*, [3 x i16]** %lnor.addr, align 8, !dbg !11534
  %75 = bitcast [3 x i16]* %74 to i16*, !dbg !11536
  call void @glNormal3sv(i16* %75), !dbg !11537
  br label %if.end102, !dbg !11538

if.else95:                                        ; preds = %if.end92
  %76 = load i8, i8* %smoothnormal.addr, align 1, !dbg !11539
  %tobool96 = icmp ne i8 %76, 0, !dbg !11539
  br i1 %tobool96, label %if.then97, label %if.end101, !dbg !11541

if.then97:                                        ; preds = %if.else95
  %77 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !11542
  %78 = load i32, i32* %index.addr, align 4, !dbg !11544
  %idxprom98 = sext i32 %78 to i64, !dbg !11542
  %arrayidx99 = getelementptr inbounds %struct.MVert, %struct.MVert* %77, i64 %idxprom98, !dbg !11542
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx99, i32 0, i32 1, !dbg !11545
  %arraydecay100 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !11542
  call void @glNormal3sv(i16* %arraydecay100), !dbg !11546
  br label %if.end101, !dbg !11547

if.end101:                                        ; preds = %if.then97, %if.else95
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.then94
  %79 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !11548
  %80 = load i32, i32* %index.addr, align 4, !dbg !11549
  %idxprom103 = sext i32 %80 to i64, !dbg !11548
  %arrayidx104 = getelementptr inbounds %struct.MVert, %struct.MVert* %79, i64 %idxprom103, !dbg !11548
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx104, i32 0, i32 0, !dbg !11550
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11548
  call void @glVertex3fv(float* %arraydecay105), !dbg !11551
  ret void, !dbg !11552
}

declare dso_local void @GPU_buffer_unlock(%struct.GPUBuffer*) #2

declare dso_local void @GPU_interleaved_attrib_setup(%struct.GPUBuffer*, %struct.GPUAttrib*, i32) #2

declare dso_local void @GPU_buffer_free(%struct.GPUBuffer*) #2

declare dso_local i32 @GPU_attrib_element_size(%struct.GPUAttrib*, i32) #2

declare dso_local %struct.GPUBuffer* @GPU_buffer_alloc(i32) #2

declare dso_local i8* @GPU_buffer_lock_stream(%struct.GPUBuffer*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_v2(float* %r, float* %a) #0 !dbg !11553 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11554, metadata !DIExpression()), !dbg !11555
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11556, metadata !DIExpression()), !dbg !11557
  %0 = load float*, float** %a.addr, align 8, !dbg !11558
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11558
  %1 = load float, float* %arrayidx, align 4, !dbg !11558
  %2 = load float*, float** %r.addr, align 8, !dbg !11559
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !11559
  store float %1, float* %arrayidx1, align 4, !dbg !11560
  %3 = load float*, float** %a.addr, align 8, !dbg !11561
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !11561
  %4 = load float, float* %arrayidx2, align 4, !dbg !11561
  %5 = load float*, float** %r.addr, align 8, !dbg !11562
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !11562
  store float %4, float* %arrayidx3, align 4, !dbg !11563
  ret void, !dbg !11564
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v4_v4_char(i8* %r, i8* %a) #0 !dbg !11565 {
entry:
  %r.addr = alloca i8*, align 8
  %a.addr = alloca i8*, align 8
  store i8* %r, i8** %r.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r.addr, metadata !11568, metadata !DIExpression()), !dbg !11569
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !11570, metadata !DIExpression()), !dbg !11571
  %0 = load i8*, i8** %a.addr, align 8, !dbg !11572
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !11572
  %1 = load i8, i8* %arrayidx, align 1, !dbg !11572
  %2 = load i8*, i8** %r.addr, align 8, !dbg !11573
  %arrayidx1 = getelementptr inbounds i8, i8* %2, i64 0, !dbg !11573
  store i8 %1, i8* %arrayidx1, align 1, !dbg !11574
  %3 = load i8*, i8** %a.addr, align 8, !dbg !11575
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !11575
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !11575
  %5 = load i8*, i8** %r.addr, align 8, !dbg !11576
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !11576
  store i8 %4, i8* %arrayidx3, align 1, !dbg !11577
  %6 = load i8*, i8** %a.addr, align 8, !dbg !11578
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 2, !dbg !11578
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !11578
  %8 = load i8*, i8** %r.addr, align 8, !dbg !11579
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 2, !dbg !11579
  store i8 %7, i8* %arrayidx5, align 1, !dbg !11580
  %9 = load i8*, i8** %a.addr, align 8, !dbg !11581
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 3, !dbg !11581
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !11581
  %11 = load i8*, i8** %r.addr, align 8, !dbg !11582
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !11582
  store i8 %10, i8* %arrayidx7, align 1, !dbg !11583
  ret void, !dbg !11584
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v4_v4(float* %r, float* %a) #0 !dbg !11585 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11586, metadata !DIExpression()), !dbg !11587
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11588, metadata !DIExpression()), !dbg !11589
  %0 = load float*, float** %a.addr, align 8, !dbg !11590
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11590
  %1 = load float, float* %arrayidx, align 4, !dbg !11590
  %2 = load float*, float** %r.addr, align 8, !dbg !11591
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !11591
  store float %1, float* %arrayidx1, align 4, !dbg !11592
  %3 = load float*, float** %a.addr, align 8, !dbg !11593
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !11593
  %4 = load float, float* %arrayidx2, align 4, !dbg !11593
  %5 = load float*, float** %r.addr, align 8, !dbg !11594
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !11594
  store float %4, float* %arrayidx3, align 4, !dbg !11595
  %6 = load float*, float** %a.addr, align 8, !dbg !11596
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !11596
  %7 = load float, float* %arrayidx4, align 4, !dbg !11596
  %8 = load float*, float** %r.addr, align 8, !dbg !11597
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !11597
  store float %7, float* %arrayidx5, align 4, !dbg !11598
  %9 = load float*, float** %a.addr, align 8, !dbg !11599
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 3, !dbg !11599
  %10 = load float, float* %arrayidx6, align 4, !dbg !11599
  %11 = load float*, float** %r.addr, align 8, !dbg !11600
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 3, !dbg !11600
  store float %10, float* %arrayidx7, align 4, !dbg !11601
  ret void, !dbg !11602
}

declare dso_local void @glTexCoord3fv(float*) #2

declare dso_local i8* @DM_get_loop_data_layer(%struct.DerivedMesh*, i32) #2

declare dso_local i8* @DM_get_poly_data_layer(%struct.DerivedMesh*, i32) #2

declare dso_local void @BKE_mesh_calc_poly_center(%struct.MPoly*, %struct.MLoop*, %struct.MVert*, float*) #2

declare dso_local void @BKE_mesh_calc_poly_normal(%struct.MPoly*, %struct.MLoop*, %struct.MVert*, float*) #2

declare dso_local i32 @DM_release(%struct.DerivedMesh*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @cdDM_free_internal(%struct.CDDerivedMesh* %cddm) #0 !dbg !11603 {
entry:
  %cddm.addr = alloca %struct.CDDerivedMesh*, align 8
  store %struct.CDDerivedMesh* %cddm, %struct.CDDerivedMesh** %cddm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CDDerivedMesh** %cddm.addr, metadata !11606, metadata !DIExpression()), !dbg !11607
  %0 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm.addr, align 8, !dbg !11608
  %pmap = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %0, i32 0, i32 8, !dbg !11610
  %1 = load %struct.MeshElemMap*, %struct.MeshElemMap** %pmap, align 8, !dbg !11610
  %tobool = icmp ne %struct.MeshElemMap* %1, null, !dbg !11608
  br i1 %tobool, label %if.then, label %if.end, !dbg !11611

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11612
  %3 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm.addr, align 8, !dbg !11613
  %pmap1 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %3, i32 0, i32 8, !dbg !11614
  %4 = load %struct.MeshElemMap*, %struct.MeshElemMap** %pmap1, align 8, !dbg !11614
  %5 = bitcast %struct.MeshElemMap* %4 to i8*, !dbg !11613
  call void %2(i8* %5), !dbg !11612
  br label %if.end, !dbg !11612

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm.addr, align 8, !dbg !11615
  %pmap_mem = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %6, i32 0, i32 9, !dbg !11617
  %7 = load i32*, i32** %pmap_mem, align 8, !dbg !11617
  %tobool2 = icmp ne i32* %7, null, !dbg !11615
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !11618

if.then3:                                         ; preds = %if.end
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11619
  %9 = load %struct.CDDerivedMesh*, %struct.CDDerivedMesh** %cddm.addr, align 8, !dbg !11620
  %pmap_mem4 = getelementptr inbounds %struct.CDDerivedMesh, %struct.CDDerivedMesh* %9, i32 0, i32 9, !dbg !11621
  %10 = load i32*, i32** %pmap_mem4, align 8, !dbg !11621
  %11 = bitcast i32* %10 to i8*, !dbg !11620
  call void %8(i8* %11), !dbg !11619
  br label %if.end5, !dbg !11619

if.end5:                                          ; preds = %if.then3, %if.end
  ret void, !dbg !11622
}

declare dso_local i32 @CustomData_number_of_layers(%struct.CustomData*, i32) #2

declare dso_local i32 @CustomData_get_offset(%struct.CustomData*, i32) #2

declare dso_local void @CustomData_from_bmeshpoly(%struct.CustomData*, %struct.CustomData*, %struct.CustomData*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !11623 {
entry:
  %retval = alloca i8*, align 8
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !11628, metadata !DIExpression()), !dbg !11629
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !11630, metadata !DIExpression()), !dbg !11631
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !11632, metadata !DIExpression()), !dbg !11633
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11634, metadata !DIExpression()), !dbg !11635
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11636
  %1 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11636
  %2 = load i8, i8* %itype.addr, align 1, !dbg !11636
  %3 = load i8*, i8** %data.addr, align 8, !dbg !11636
  %call = call zeroext i8 @BM_iter_init(%struct.BMIter* %0, %struct.BMesh* %1, i8 zeroext %2, i8* %3), !dbg !11636
  %tobool = icmp ne i8 %call, 0, !dbg !11636
  br i1 %tobool, label %if.then, label %if.else, !dbg !11638

if.then:                                          ; preds = %entry
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11639
  %call1 = call i8* @BM_iter_step(%struct.BMIter* %4), !dbg !11641
  store i8* %call1, i8** %retval, align 8, !dbg !11642
  br label %return, !dbg !11642

if.else:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11643
  br label %return, !dbg !11643

return:                                           ; preds = %if.else, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !11645
  ret i8* %5, !dbg !11645
}

; Function Attrs: noinline nounwind uwtable
define internal void @_bm_elem_index_set(%struct.BMHeader* %head, i32 %index) #0 !dbg !11646 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %index.addr = alloca i32, align 4
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !11651, metadata !DIExpression()), !dbg !11652
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !11653, metadata !DIExpression()), !dbg !11654
  %0 = load i32, i32* %index.addr, align 4, !dbg !11655
  %1 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !11656
  %index1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %1, i32 0, i32 1, !dbg !11657
  store i32 %0, i32* %index1, align 8, !dbg !11658
  ret void, !dbg !11659
}

; Function Attrs: noinline nounwind uwtable
define internal void @normal_float_to_short_v3(i16* %out, float* %in) #0 !dbg !11660 {
entry:
  %out.addr = alloca i16*, align 8
  %in.addr = alloca float*, align 8
  store i16* %out, i16** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %out.addr, metadata !11663, metadata !DIExpression()), !dbg !11664
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !11665, metadata !DIExpression()), !dbg !11666
  %0 = load float*, float** %in.addr, align 8, !dbg !11667
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11667
  %1 = load float, float* %arrayidx, align 4, !dbg !11667
  %mul = fmul float %1, 3.276700e+04, !dbg !11668
  %conv = fptosi float %mul to i16, !dbg !11669
  %2 = load i16*, i16** %out.addr, align 8, !dbg !11670
  %arrayidx1 = getelementptr inbounds i16, i16* %2, i64 0, !dbg !11670
  store i16 %conv, i16* %arrayidx1, align 2, !dbg !11671
  %3 = load float*, float** %in.addr, align 8, !dbg !11672
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !11672
  %4 = load float, float* %arrayidx2, align 4, !dbg !11672
  %mul3 = fmul float %4, 3.276700e+04, !dbg !11673
  %conv4 = fptosi float %mul3 to i16, !dbg !11674
  %5 = load i16*, i16** %out.addr, align 8, !dbg !11675
  %arrayidx5 = getelementptr inbounds i16, i16* %5, i64 1, !dbg !11675
  store i16 %conv4, i16* %arrayidx5, align 2, !dbg !11676
  %6 = load float*, float** %in.addr, align 8, !dbg !11677
  %arrayidx6 = getelementptr inbounds float, float* %6, i64 2, !dbg !11677
  %7 = load float, float* %arrayidx6, align 4, !dbg !11677
  %mul7 = fmul float %7, 3.276700e+04, !dbg !11678
  %conv8 = fptosi float %mul7 to i16, !dbg !11679
  %8 = load i16*, i16** %out.addr, align 8, !dbg !11680
  %arrayidx9 = getelementptr inbounds i16, i16* %8, i64 2, !dbg !11680
  store i16 %conv8, i16* %arrayidx9, align 2, !dbg !11681
  ret void, !dbg !11682
}

declare dso_local zeroext i8 @BM_vert_flag_to_mflag(%struct.BMVert*) #2

declare dso_local void @CustomData_from_bmesh_block(%struct.CustomData*, %struct.CustomData*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_step(%struct.BMIter* %iter) #0 !dbg !11683 {
entry:
  %iter.addr = alloca %struct.BMIter*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !11686, metadata !DIExpression()), !dbg !11687
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11688
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %0, i32 0, i32 2, !dbg !11689
  %1 = load i8* (i8*)*, i8* (i8*)** %step, align 8, !dbg !11689
  %2 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11690
  %3 = bitcast %struct.BMIter* %2 to i8*, !dbg !11690
  %call = call i8* %1(i8* %3), !dbg !11688
  ret i8* %call, !dbg !11691
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @_bm_elem_index_get(%struct.BMHeader* %head) #0 !dbg !11692 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !11697, metadata !DIExpression()), !dbg !11698
  %0 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !11699
  %index = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %0, i32 0, i32 1, !dbg !11700
  %1 = load i32, i32* %index, align 8, !dbg !11700
  ret i32 %1, !dbg !11701
}

declare dso_local signext i16 @BM_edge_flag_to_mflag(%struct.BMEdge*) #2

declare dso_local void @BM_mesh_elem_index_ensure(%struct.BMesh*, i8 zeroext) #2

declare dso_local zeroext i8 @BM_face_flag_to_mflag(%struct.BMFace*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @loops_to_customdata_corners(%struct.BMesh* %bm, %struct.CustomData* %facedata, i32 %cdindex, %struct.BMLoop** %l3, i32 %numCol, i32 %numTex) #0 !dbg !11702 {
entry:
  %bm.addr = alloca %struct.BMesh*, align 8
  %facedata.addr = alloca %struct.CustomData*, align 8
  %cdindex.addr = alloca i32, align 4
  %l3.addr = alloca %struct.BMLoop**, align 8
  %numCol.addr = alloca i32, align 4
  %numTex.addr = alloca i32, align 4
  %l = alloca %struct.BMLoop*, align 8
  %f = alloca %struct.BMFace*, align 8
  %texface = alloca %struct.MTFace*, align 8
  %texpoly = alloca %struct.MTexPoly*, align 8
  %mcol = alloca %struct.MCol*, align 8
  %mloopcol = alloca %struct.MLoopCol*, align 8
  %mloopuv = alloca %struct.MLoopUV*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %hasPCol = alloca i32, align 4
  %mloopcol__tmp = alloca %struct.MLoopCol*, align 8
  %mcol__tmp = alloca %struct.MCol*, align 8
  %mloopcol__tmp64 = alloca %struct.MLoopCol*, align 8
  %mcol__tmp65 = alloca %struct.MCol*, align 8
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !11705, metadata !DIExpression()), !dbg !11706
  store %struct.CustomData* %facedata, %struct.CustomData** %facedata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %facedata.addr, metadata !11707, metadata !DIExpression()), !dbg !11708
  store i32 %cdindex, i32* %cdindex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cdindex.addr, metadata !11709, metadata !DIExpression()), !dbg !11710
  store %struct.BMLoop** %l3, %struct.BMLoop*** %l3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMLoop*** %l3.addr, metadata !11711, metadata !DIExpression()), !dbg !11712
  store i32 %numCol, i32* %numCol.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numCol.addr, metadata !11713, metadata !DIExpression()), !dbg !11714
  store i32 %numTex, i32* %numTex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numTex.addr, metadata !11715, metadata !DIExpression()), !dbg !11716
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !11717, metadata !DIExpression()), !dbg !11718
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !11719, metadata !DIExpression()), !dbg !11720
  %0 = load %struct.BMLoop**, %struct.BMLoop*** %l3.addr, align 8, !dbg !11721
  %arrayidx = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %0, i64 0, !dbg !11721
  %1 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx, align 8, !dbg !11721
  %f1 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %1, i32 0, i32 3, !dbg !11722
  %2 = load %struct.BMFace*, %struct.BMFace** %f1, align 8, !dbg !11722
  store %struct.BMFace* %2, %struct.BMFace** %f, align 8, !dbg !11720
  call void @llvm.dbg.declare(metadata %struct.MTFace** %texface, metadata !11723, metadata !DIExpression()), !dbg !11724
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %texpoly, metadata !11725, metadata !DIExpression()), !dbg !11728
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol, metadata !11729, metadata !DIExpression()), !dbg !11730
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %mloopcol, metadata !11731, metadata !DIExpression()), !dbg !11734
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %mloopuv, metadata !11735, metadata !DIExpression()), !dbg !11736
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11737, metadata !DIExpression()), !dbg !11738
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11739, metadata !DIExpression()), !dbg !11740
  call void @llvm.dbg.declare(metadata i32* %hasPCol, metadata !11741, metadata !DIExpression()), !dbg !11742
  %3 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11743
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %3, i32 0, i32 26, !dbg !11744
  %call = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %ldata, i32 32), !dbg !11745
  %conv = zext i8 %call to i32, !dbg !11745
  store i32 %conv, i32* %hasPCol, align 4, !dbg !11742
  store i32 0, i32* %i, align 4, !dbg !11746
  br label %for.cond, !dbg !11748

for.cond:                                         ; preds = %for.inc23, %entry
  %4 = load i32, i32* %i, align 4, !dbg !11749
  %5 = load i32, i32* %numTex.addr, align 4, !dbg !11751
  %cmp = icmp slt i32 %4, %5, !dbg !11752
  br i1 %cmp, label %for.body, label %for.end25, !dbg !11753

for.body:                                         ; preds = %for.cond
  %6 = load %struct.CustomData*, %struct.CustomData** %facedata.addr, align 8, !dbg !11754
  %7 = load i32, i32* %cdindex.addr, align 4, !dbg !11756
  %8 = load i32, i32* %i, align 4, !dbg !11757
  %call3 = call i8* @CustomData_get_n(%struct.CustomData* %6, i32 5, i32 %7, i32 %8), !dbg !11758
  %9 = bitcast i8* %call3 to %struct.MTFace*, !dbg !11758
  store %struct.MTFace* %9, %struct.MTFace** %texface, align 8, !dbg !11759
  %10 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11760
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 27, !dbg !11761
  %11 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !11762
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %11, i32 0, i32 0, !dbg !11763
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !11764
  %12 = load i8*, i8** %data, align 8, !dbg !11764
  %13 = load i32, i32* %i, align 4, !dbg !11765
  %call4 = call i8* @CustomData_bmesh_get_n(%struct.CustomData* %pdata, i8* %12, i32 15, i32 %13), !dbg !11766
  %14 = bitcast i8* %call4 to %struct.MTexPoly*, !dbg !11766
  store %struct.MTexPoly* %14, %struct.MTexPoly** %texpoly, align 8, !dbg !11767
  %15 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !11768
  %tpage = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %15, i32 0, i32 0, !dbg !11768
  %16 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !11768
  %17 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !11768
  %tpage5 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %17, i32 0, i32 1, !dbg !11768
  store %struct.Image* %16, %struct.Image** %tpage5, align 8, !dbg !11768
  %18 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !11768
  %flag = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %18, i32 0, i32 1, !dbg !11768
  %19 = load i8, i8* %flag, align 8, !dbg !11768
  %20 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !11768
  %flag6 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %20, i32 0, i32 2, !dbg !11768
  store i8 %19, i8* %flag6, align 8, !dbg !11768
  %21 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !11768
  %transp = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %21, i32 0, i32 2, !dbg !11768
  %22 = load i8, i8* %transp, align 1, !dbg !11768
  %23 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !11768
  %transp7 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %23, i32 0, i32 3, !dbg !11768
  store i8 %22, i8* %transp7, align 1, !dbg !11768
  %24 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !11768
  %mode = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %24, i32 0, i32 3, !dbg !11768
  %25 = load i16, i16* %mode, align 2, !dbg !11768
  %26 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !11768
  %mode8 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %26, i32 0, i32 4, !dbg !11768
  store i16 %25, i16* %mode8, align 2, !dbg !11768
  %27 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !11768
  %tile = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %27, i32 0, i32 4, !dbg !11768
  %28 = load i16, i16* %tile, align 4, !dbg !11768
  %29 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !11768
  %tile9 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %29, i32 0, i32 5, !dbg !11768
  store i16 %28, i16* %tile9, align 4, !dbg !11768
  store i32 0, i32* %j, align 4, !dbg !11770
  br label %for.cond10, !dbg !11772

for.cond10:                                       ; preds = %for.inc, %for.body
  %30 = load i32, i32* %j, align 4, !dbg !11773
  %cmp11 = icmp slt i32 %30, 3, !dbg !11775
  br i1 %cmp11, label %for.body13, label %for.end, !dbg !11776

for.body13:                                       ; preds = %for.cond10
  %31 = load %struct.BMLoop**, %struct.BMLoop*** %l3.addr, align 8, !dbg !11777
  %32 = load i32, i32* %j, align 4, !dbg !11779
  %idxprom = sext i32 %32 to i64, !dbg !11777
  %arrayidx14 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %31, i64 %idxprom, !dbg !11777
  %33 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx14, align 8, !dbg !11777
  store %struct.BMLoop* %33, %struct.BMLoop** %l, align 8, !dbg !11780
  %34 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11781
  %ldata15 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %34, i32 0, i32 26, !dbg !11782
  %35 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11783
  %head16 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %35, i32 0, i32 0, !dbg !11784
  %data17 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head16, i32 0, i32 0, !dbg !11785
  %36 = load i8*, i8** %data17, align 8, !dbg !11785
  %37 = load i32, i32* %i, align 4, !dbg !11786
  %call18 = call i8* @CustomData_bmesh_get_n(%struct.CustomData* %ldata15, i8* %36, i32 16, i32 %37), !dbg !11787
  %38 = bitcast i8* %call18 to %struct.MLoopUV*, !dbg !11787
  store %struct.MLoopUV* %38, %struct.MLoopUV** %mloopuv, align 8, !dbg !11788
  %39 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !11789
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %39, i32 0, i32 0, !dbg !11790
  %40 = load i32, i32* %j, align 4, !dbg !11791
  %idxprom19 = sext i32 %40 to i64, !dbg !11789
  %arrayidx20 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 %idxprom19, !dbg !11789
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx20, i64 0, i64 0, !dbg !11789
  %41 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !11792
  %uv21 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %41, i32 0, i32 0, !dbg !11793
  %arraydecay22 = getelementptr inbounds [2 x float], [2 x float]* %uv21, i64 0, i64 0, !dbg !11792
  call void @copy_v2_v2(float* %arraydecay, float* %arraydecay22), !dbg !11794
  br label %for.inc, !dbg !11795

for.inc:                                          ; preds = %for.body13
  %42 = load i32, i32* %j, align 4, !dbg !11796
  %inc = add nsw i32 %42, 1, !dbg !11796
  store i32 %inc, i32* %j, align 4, !dbg !11796
  br label %for.cond10, !dbg !11797, !llvm.loop !11798

for.end:                                          ; preds = %for.cond10
  br label %for.inc23, !dbg !11800

for.inc23:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !11801
  %inc24 = add nsw i32 %43, 1, !dbg !11801
  store i32 %inc24, i32* %i, align 4, !dbg !11801
  br label %for.cond, !dbg !11802, !llvm.loop !11803

for.end25:                                        ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !11805
  br label %for.cond26, !dbg !11807

for.cond26:                                       ; preds = %for.inc50, %for.end25
  %44 = load i32, i32* %i, align 4, !dbg !11808
  %45 = load i32, i32* %numCol.addr, align 4, !dbg !11810
  %cmp27 = icmp slt i32 %44, %45, !dbg !11811
  br i1 %cmp27, label %for.body29, label %for.end52, !dbg !11812

for.body29:                                       ; preds = %for.cond26
  %46 = load %struct.CustomData*, %struct.CustomData** %facedata.addr, align 8, !dbg !11813
  %47 = load i32, i32* %cdindex.addr, align 4, !dbg !11815
  %48 = load i32, i32* %i, align 4, !dbg !11816
  %call30 = call i8* @CustomData_get_n(%struct.CustomData* %46, i32 6, i32 %47, i32 %48), !dbg !11817
  %49 = bitcast i8* %call30 to %struct.MCol*, !dbg !11817
  store %struct.MCol* %49, %struct.MCol** %mcol, align 8, !dbg !11818
  store i32 0, i32* %j, align 4, !dbg !11819
  br label %for.cond31, !dbg !11821

for.cond31:                                       ; preds = %for.inc47, %for.body29
  %50 = load i32, i32* %j, align 4, !dbg !11822
  %cmp32 = icmp slt i32 %50, 3, !dbg !11824
  br i1 %cmp32, label %for.body34, label %for.end49, !dbg !11825

for.body34:                                       ; preds = %for.cond31
  %51 = load %struct.BMLoop**, %struct.BMLoop*** %l3.addr, align 8, !dbg !11826
  %52 = load i32, i32* %j, align 4, !dbg !11828
  %idxprom35 = sext i32 %52 to i64, !dbg !11826
  %arrayidx36 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %51, i64 %idxprom35, !dbg !11826
  %53 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx36, align 8, !dbg !11826
  store %struct.BMLoop* %53, %struct.BMLoop** %l, align 8, !dbg !11829
  %54 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11830
  %ldata37 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %54, i32 0, i32 26, !dbg !11831
  %55 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11832
  %head38 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %55, i32 0, i32 0, !dbg !11833
  %data39 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head38, i32 0, i32 0, !dbg !11834
  %56 = load i8*, i8** %data39, align 8, !dbg !11834
  %57 = load i32, i32* %i, align 4, !dbg !11835
  %call40 = call i8* @CustomData_bmesh_get_n(%struct.CustomData* %ldata37, i8* %56, i32 17, i32 %57), !dbg !11836
  %58 = bitcast i8* %call40 to %struct.MLoopCol*, !dbg !11836
  store %struct.MLoopCol* %58, %struct.MLoopCol** %mloopcol, align 8, !dbg !11837
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %mloopcol__tmp, metadata !11838, metadata !DIExpression()), !dbg !11842
  %59 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !11842
  store %struct.MLoopCol* %59, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !11842
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol__tmp, metadata !11843, metadata !DIExpression()), !dbg !11842
  %60 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !11842
  %61 = load i32, i32* %j, align 4, !dbg !11842
  %idxprom41 = sext i32 %61 to i64, !dbg !11842
  %arrayidx42 = getelementptr inbounds %struct.MCol, %struct.MCol* %60, i64 %idxprom41, !dbg !11842
  store %struct.MCol* %arrayidx42, %struct.MCol** %mcol__tmp, align 8, !dbg !11842
  %62 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !11842
  %r = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %62, i32 0, i32 0, !dbg !11842
  %63 = load i8, i8* %r, align 1, !dbg !11842
  %64 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !11842
  %b = getelementptr inbounds %struct.MCol, %struct.MCol* %64, i32 0, i32 3, !dbg !11842
  store i8 %63, i8* %b, align 1, !dbg !11842
  %65 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !11842
  %g = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %65, i32 0, i32 1, !dbg !11842
  %66 = load i8, i8* %g, align 1, !dbg !11842
  %67 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !11842
  %g43 = getelementptr inbounds %struct.MCol, %struct.MCol* %67, i32 0, i32 2, !dbg !11842
  store i8 %66, i8* %g43, align 1, !dbg !11842
  %68 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !11842
  %b44 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %68, i32 0, i32 2, !dbg !11842
  %69 = load i8, i8* %b44, align 1, !dbg !11842
  %70 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !11842
  %r45 = getelementptr inbounds %struct.MCol, %struct.MCol* %70, i32 0, i32 1, !dbg !11842
  store i8 %69, i8* %r45, align 1, !dbg !11842
  %71 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !11842
  %a = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %71, i32 0, i32 3, !dbg !11842
  %72 = load i8, i8* %a, align 1, !dbg !11842
  %73 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !11842
  %a46 = getelementptr inbounds %struct.MCol, %struct.MCol* %73, i32 0, i32 0, !dbg !11842
  store i8 %72, i8* %a46, align 1, !dbg !11842
  br label %for.inc47, !dbg !11844

for.inc47:                                        ; preds = %for.body34
  %74 = load i32, i32* %j, align 4, !dbg !11845
  %inc48 = add nsw i32 %74, 1, !dbg !11845
  store i32 %inc48, i32* %j, align 4, !dbg !11845
  br label %for.cond31, !dbg !11846, !llvm.loop !11847

for.end49:                                        ; preds = %for.cond31
  br label %for.inc50, !dbg !11849

for.inc50:                                        ; preds = %for.end49
  %75 = load i32, i32* %i, align 4, !dbg !11850
  %inc51 = add nsw i32 %75, 1, !dbg !11850
  store i32 %inc51, i32* %i, align 4, !dbg !11850
  br label %for.cond26, !dbg !11851, !llvm.loop !11852

for.end52:                                        ; preds = %for.cond26
  %76 = load i32, i32* %hasPCol, align 4, !dbg !11854
  %tobool = icmp ne i32 %76, 0, !dbg !11854
  br i1 %tobool, label %if.then, label %if.end, !dbg !11856

if.then:                                          ; preds = %for.end52
  %77 = load %struct.CustomData*, %struct.CustomData** %facedata.addr, align 8, !dbg !11857
  %78 = load i32, i32* %cdindex.addr, align 4, !dbg !11859
  %call53 = call i8* @CustomData_get(%struct.CustomData* %77, i32 %78, i32 20), !dbg !11860
  %79 = bitcast i8* %call53 to %struct.MCol*, !dbg !11860
  store %struct.MCol* %79, %struct.MCol** %mcol, align 8, !dbg !11861
  store i32 0, i32* %j, align 4, !dbg !11862
  br label %for.cond54, !dbg !11864

for.cond54:                                       ; preds = %for.inc76, %if.then
  %80 = load i32, i32* %j, align 4, !dbg !11865
  %cmp55 = icmp slt i32 %80, 3, !dbg !11867
  br i1 %cmp55, label %for.body57, label %for.end78, !dbg !11868

for.body57:                                       ; preds = %for.cond54
  %81 = load %struct.BMLoop**, %struct.BMLoop*** %l3.addr, align 8, !dbg !11869
  %82 = load i32, i32* %j, align 4, !dbg !11871
  %idxprom58 = sext i32 %82 to i64, !dbg !11869
  %arrayidx59 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %81, i64 %idxprom58, !dbg !11869
  %83 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx59, align 8, !dbg !11869
  store %struct.BMLoop* %83, %struct.BMLoop** %l, align 8, !dbg !11872
  %84 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11873
  %ldata60 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %84, i32 0, i32 26, !dbg !11874
  %85 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11875
  %head61 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %85, i32 0, i32 0, !dbg !11876
  %data62 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head61, i32 0, i32 0, !dbg !11877
  %86 = load i8*, i8** %data62, align 8, !dbg !11877
  %call63 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata60, i8* %86, i32 32), !dbg !11878
  %87 = bitcast i8* %call63 to %struct.MLoopCol*, !dbg !11878
  store %struct.MLoopCol* %87, %struct.MLoopCol** %mloopcol, align 8, !dbg !11879
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %mloopcol__tmp64, metadata !11880, metadata !DIExpression()), !dbg !11882
  %88 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !11882
  store %struct.MLoopCol* %88, %struct.MLoopCol** %mloopcol__tmp64, align 8, !dbg !11882
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol__tmp65, metadata !11883, metadata !DIExpression()), !dbg !11882
  %89 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !11882
  %90 = load i32, i32* %j, align 4, !dbg !11882
  %idxprom66 = sext i32 %90 to i64, !dbg !11882
  %arrayidx67 = getelementptr inbounds %struct.MCol, %struct.MCol* %89, i64 %idxprom66, !dbg !11882
  store %struct.MCol* %arrayidx67, %struct.MCol** %mcol__tmp65, align 8, !dbg !11882
  %91 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp64, align 8, !dbg !11882
  %r68 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %91, i32 0, i32 0, !dbg !11882
  %92 = load i8, i8* %r68, align 1, !dbg !11882
  %93 = load %struct.MCol*, %struct.MCol** %mcol__tmp65, align 8, !dbg !11882
  %b69 = getelementptr inbounds %struct.MCol, %struct.MCol* %93, i32 0, i32 3, !dbg !11882
  store i8 %92, i8* %b69, align 1, !dbg !11882
  %94 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp64, align 8, !dbg !11882
  %g70 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %94, i32 0, i32 1, !dbg !11882
  %95 = load i8, i8* %g70, align 1, !dbg !11882
  %96 = load %struct.MCol*, %struct.MCol** %mcol__tmp65, align 8, !dbg !11882
  %g71 = getelementptr inbounds %struct.MCol, %struct.MCol* %96, i32 0, i32 2, !dbg !11882
  store i8 %95, i8* %g71, align 1, !dbg !11882
  %97 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp64, align 8, !dbg !11882
  %b72 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %97, i32 0, i32 2, !dbg !11882
  %98 = load i8, i8* %b72, align 1, !dbg !11882
  %99 = load %struct.MCol*, %struct.MCol** %mcol__tmp65, align 8, !dbg !11882
  %r73 = getelementptr inbounds %struct.MCol, %struct.MCol* %99, i32 0, i32 1, !dbg !11882
  store i8 %98, i8* %r73, align 1, !dbg !11882
  %100 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp64, align 8, !dbg !11882
  %a74 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %100, i32 0, i32 3, !dbg !11882
  %101 = load i8, i8* %a74, align 1, !dbg !11882
  %102 = load %struct.MCol*, %struct.MCol** %mcol__tmp65, align 8, !dbg !11882
  %a75 = getelementptr inbounds %struct.MCol, %struct.MCol* %102, i32 0, i32 0, !dbg !11882
  store i8 %101, i8* %a75, align 1, !dbg !11882
  br label %for.inc76, !dbg !11884

for.inc76:                                        ; preds = %for.body57
  %103 = load i32, i32* %j, align 4, !dbg !11885
  %inc77 = add nsw i32 %103, 1, !dbg !11885
  store i32 %inc77, i32* %j, align 4, !dbg !11885
  br label %for.cond54, !dbg !11886, !llvm.loop !11887

for.end78:                                        ; preds = %for.cond54
  br label %if.end, !dbg !11889

if.end:                                           ; preds = %for.end78, %for.end52
  ret void, !dbg !11890
}

declare dso_local i32 @test_index_face(%struct.MFace*, %struct.CustomData*, i32, i32) #2

declare dso_local zeroext i8 @BM_mesh_cd_flag_from_bmesh(%struct.BMesh*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BM_iter_init(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !11891 {
entry:
  %retval = alloca i8, align 1
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !11894, metadata !DIExpression()), !dbg !11895
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !11896, metadata !DIExpression()), !dbg !11897
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !11898, metadata !DIExpression()), !dbg !11899
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11900, metadata !DIExpression()), !dbg !11901
  %0 = load i8, i8* %itype.addr, align 1, !dbg !11902
  %1 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11903
  %itype1 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %1, i32 0, i32 4, !dbg !11904
  store i8 %0, i8* %itype1, align 4, !dbg !11905
  %2 = load i8, i8* %itype.addr, align 1, !dbg !11906
  %conv = zext i8 %2 to i32, !dbg !11907
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 3, label %sw.bb10
    i32 4, label %sw.bb17
    i32 5, label %sw.bb21
    i32 6, label %sw.bb26
    i32 7, label %sw.bb31
    i32 8, label %sw.bb35
    i32 9, label %sw.bb40
    i32 10, label %sw.bb44
    i32 11, label %sw.bb49
    i32 13, label %sw.bb54
    i32 14, label %sw.bb58
  ], !dbg !11908

sw.bb:                                            ; preds = %entry
  %3 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11909
  %begin = getelementptr inbounds %struct.BMIter, %struct.BMIter* %3, i32 0, i32 1, !dbg !11911
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin, align 8, !dbg !11912
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11913
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %4, i32 0, i32 2, !dbg !11914
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step, align 8, !dbg !11915
  %5 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11916
  %vpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 9, !dbg !11917
  %6 = load %struct.BLI_mempool*, %struct.BLI_mempool** %vpool, align 8, !dbg !11917
  %7 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11918
  %data2 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %7, i32 0, i32 0, !dbg !11919
  %elem_of_mesh = bitcast %union.anon.4* %data2 to %struct.BMIter__elem_of_mesh*, !dbg !11920
  %pooliter = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh, i32 0, i32 0, !dbg !11921
  %pool = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter, i32 0, i32 0, !dbg !11922
  store %struct.BLI_mempool* %6, %struct.BLI_mempool** %pool, align 8, !dbg !11923
  br label %sw.epilog, !dbg !11924

sw.bb3:                                           ; preds = %entry
  %8 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11925
  %begin4 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %8, i32 0, i32 1, !dbg !11926
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin4, align 8, !dbg !11927
  %9 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11928
  %step5 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %9, i32 0, i32 2, !dbg !11929
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step5, align 8, !dbg !11930
  %10 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11931
  %epool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 10, !dbg !11932
  %11 = load %struct.BLI_mempool*, %struct.BLI_mempool** %epool, align 8, !dbg !11932
  %12 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11933
  %data6 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %12, i32 0, i32 0, !dbg !11934
  %elem_of_mesh7 = bitcast %union.anon.4* %data6 to %struct.BMIter__elem_of_mesh*, !dbg !11935
  %pooliter8 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh7, i32 0, i32 0, !dbg !11936
  %pool9 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter8, i32 0, i32 0, !dbg !11937
  store %struct.BLI_mempool* %11, %struct.BLI_mempool** %pool9, align 8, !dbg !11938
  br label %sw.epilog, !dbg !11939

sw.bb10:                                          ; preds = %entry
  %13 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11940
  %begin11 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %13, i32 0, i32 1, !dbg !11941
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin11, align 8, !dbg !11942
  %14 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11943
  %step12 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %14, i32 0, i32 2, !dbg !11944
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step12, align 8, !dbg !11945
  %15 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11946
  %fpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 12, !dbg !11947
  %16 = load %struct.BLI_mempool*, %struct.BLI_mempool** %fpool, align 8, !dbg !11947
  %17 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11948
  %data13 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %17, i32 0, i32 0, !dbg !11949
  %elem_of_mesh14 = bitcast %union.anon.4* %data13 to %struct.BMIter__elem_of_mesh*, !dbg !11950
  %pooliter15 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh14, i32 0, i32 0, !dbg !11951
  %pool16 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter15, i32 0, i32 0, !dbg !11952
  store %struct.BLI_mempool* %16, %struct.BLI_mempool** %pool16, align 8, !dbg !11953
  br label %sw.epilog, !dbg !11954

sw.bb17:                                          ; preds = %entry
  %18 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11955
  %begin18 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %18, i32 0, i32 1, !dbg !11956
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_begin to void (i8*)*), void (i8*)** %begin18, align 8, !dbg !11957
  %19 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11958
  %step19 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %19, i32 0, i32 2, !dbg !11959
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_step to i8* (i8*)*), i8* (i8*)** %step19, align 8, !dbg !11960
  %20 = load i8*, i8** %data.addr, align 8, !dbg !11961
  %21 = bitcast i8* %20 to %struct.BMVert*, !dbg !11962
  %22 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11963
  %data20 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %22, i32 0, i32 0, !dbg !11964
  %edge_of_vert = bitcast %union.anon.4* %data20 to %struct.BMIter__edge_of_vert*, !dbg !11965
  %vdata = getelementptr inbounds %struct.BMIter__edge_of_vert, %struct.BMIter__edge_of_vert* %edge_of_vert, i32 0, i32 0, !dbg !11966
  store %struct.BMVert* %21, %struct.BMVert** %vdata, align 8, !dbg !11967
  br label %sw.epilog, !dbg !11968

sw.bb21:                                          ; preds = %entry
  %23 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11969
  %begin22 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %23, i32 0, i32 1, !dbg !11970
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_begin to void (i8*)*), void (i8*)** %begin22, align 8, !dbg !11971
  %24 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11972
  %step23 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %24, i32 0, i32 2, !dbg !11973
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_step to i8* (i8*)*), i8* (i8*)** %step23, align 8, !dbg !11974
  %25 = load i8*, i8** %data.addr, align 8, !dbg !11975
  %26 = bitcast i8* %25 to %struct.BMVert*, !dbg !11976
  %27 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11977
  %data24 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %27, i32 0, i32 0, !dbg !11978
  %face_of_vert = bitcast %union.anon.4* %data24 to %struct.BMIter__face_of_vert*, !dbg !11979
  %vdata25 = getelementptr inbounds %struct.BMIter__face_of_vert, %struct.BMIter__face_of_vert* %face_of_vert, i32 0, i32 0, !dbg !11980
  store %struct.BMVert* %26, %struct.BMVert** %vdata25, align 8, !dbg !11981
  br label %sw.epilog, !dbg !11982

sw.bb26:                                          ; preds = %entry
  %28 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11983
  %begin27 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %28, i32 0, i32 1, !dbg !11984
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_begin to void (i8*)*), void (i8*)** %begin27, align 8, !dbg !11985
  %29 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11986
  %step28 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %29, i32 0, i32 2, !dbg !11987
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_step to i8* (i8*)*), i8* (i8*)** %step28, align 8, !dbg !11988
  %30 = load i8*, i8** %data.addr, align 8, !dbg !11989
  %31 = bitcast i8* %30 to %struct.BMVert*, !dbg !11990
  %32 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11991
  %data29 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %32, i32 0, i32 0, !dbg !11992
  %loop_of_vert = bitcast %union.anon.4* %data29 to %struct.BMIter__loop_of_vert*, !dbg !11993
  %vdata30 = getelementptr inbounds %struct.BMIter__loop_of_vert, %struct.BMIter__loop_of_vert* %loop_of_vert, i32 0, i32 0, !dbg !11994
  store %struct.BMVert* %31, %struct.BMVert** %vdata30, align 8, !dbg !11995
  br label %sw.epilog, !dbg !11996

sw.bb31:                                          ; preds = %entry
  %33 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11997
  %begin32 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %33, i32 0, i32 1, !dbg !11998
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_begin to void (i8*)*), void (i8*)** %begin32, align 8, !dbg !11999
  %34 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12000
  %step33 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %34, i32 0, i32 2, !dbg !12001
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_step to i8* (i8*)*), i8* (i8*)** %step33, align 8, !dbg !12002
  %35 = load i8*, i8** %data.addr, align 8, !dbg !12003
  %36 = bitcast i8* %35 to %struct.BMEdge*, !dbg !12004
  %37 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12005
  %data34 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %37, i32 0, i32 0, !dbg !12006
  %vert_of_edge = bitcast %union.anon.4* %data34 to %struct.BMIter__vert_of_edge*, !dbg !12007
  %edata = getelementptr inbounds %struct.BMIter__vert_of_edge, %struct.BMIter__vert_of_edge* %vert_of_edge, i32 0, i32 0, !dbg !12008
  store %struct.BMEdge* %36, %struct.BMEdge** %edata, align 8, !dbg !12009
  br label %sw.epilog, !dbg !12010

sw.bb35:                                          ; preds = %entry
  %38 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12011
  %begin36 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %38, i32 0, i32 1, !dbg !12012
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_begin to void (i8*)*), void (i8*)** %begin36, align 8, !dbg !12013
  %39 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12014
  %step37 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %39, i32 0, i32 2, !dbg !12015
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_step to i8* (i8*)*), i8* (i8*)** %step37, align 8, !dbg !12016
  %40 = load i8*, i8** %data.addr, align 8, !dbg !12017
  %41 = bitcast i8* %40 to %struct.BMEdge*, !dbg !12018
  %42 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12019
  %data38 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %42, i32 0, i32 0, !dbg !12020
  %face_of_edge = bitcast %union.anon.4* %data38 to %struct.BMIter__face_of_edge*, !dbg !12021
  %edata39 = getelementptr inbounds %struct.BMIter__face_of_edge, %struct.BMIter__face_of_edge* %face_of_edge, i32 0, i32 0, !dbg !12022
  store %struct.BMEdge* %41, %struct.BMEdge** %edata39, align 8, !dbg !12023
  br label %sw.epilog, !dbg !12024

sw.bb40:                                          ; preds = %entry
  %43 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12025
  %begin41 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %43, i32 0, i32 1, !dbg !12026
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_begin to void (i8*)*), void (i8*)** %begin41, align 8, !dbg !12027
  %44 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12028
  %step42 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %44, i32 0, i32 2, !dbg !12029
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_step to i8* (i8*)*), i8* (i8*)** %step42, align 8, !dbg !12030
  %45 = load i8*, i8** %data.addr, align 8, !dbg !12031
  %46 = bitcast i8* %45 to %struct.BMFace*, !dbg !12032
  %47 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12033
  %data43 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %47, i32 0, i32 0, !dbg !12034
  %vert_of_face = bitcast %union.anon.4* %data43 to %struct.BMIter__vert_of_face*, !dbg !12035
  %pdata = getelementptr inbounds %struct.BMIter__vert_of_face, %struct.BMIter__vert_of_face* %vert_of_face, i32 0, i32 0, !dbg !12036
  store %struct.BMFace* %46, %struct.BMFace** %pdata, align 8, !dbg !12037
  br label %sw.epilog, !dbg !12038

sw.bb44:                                          ; preds = %entry
  %48 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12039
  %begin45 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %48, i32 0, i32 1, !dbg !12040
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_begin to void (i8*)*), void (i8*)** %begin45, align 8, !dbg !12041
  %49 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12042
  %step46 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %49, i32 0, i32 2, !dbg !12043
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_step to i8* (i8*)*), i8* (i8*)** %step46, align 8, !dbg !12044
  %50 = load i8*, i8** %data.addr, align 8, !dbg !12045
  %51 = bitcast i8* %50 to %struct.BMFace*, !dbg !12046
  %52 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12047
  %data47 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %52, i32 0, i32 0, !dbg !12048
  %edge_of_face = bitcast %union.anon.4* %data47 to %struct.BMIter__edge_of_face*, !dbg !12049
  %pdata48 = getelementptr inbounds %struct.BMIter__edge_of_face, %struct.BMIter__edge_of_face* %edge_of_face, i32 0, i32 0, !dbg !12050
  store %struct.BMFace* %51, %struct.BMFace** %pdata48, align 8, !dbg !12051
  br label %sw.epilog, !dbg !12052

sw.bb49:                                          ; preds = %entry
  %53 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12053
  %begin50 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %53, i32 0, i32 1, !dbg !12054
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_begin to void (i8*)*), void (i8*)** %begin50, align 8, !dbg !12055
  %54 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12056
  %step51 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %54, i32 0, i32 2, !dbg !12057
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_step to i8* (i8*)*), i8* (i8*)** %step51, align 8, !dbg !12058
  %55 = load i8*, i8** %data.addr, align 8, !dbg !12059
  %56 = bitcast i8* %55 to %struct.BMFace*, !dbg !12060
  %57 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12061
  %data52 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %57, i32 0, i32 0, !dbg !12062
  %loop_of_face = bitcast %union.anon.4* %data52 to %struct.BMIter__loop_of_face*, !dbg !12063
  %pdata53 = getelementptr inbounds %struct.BMIter__loop_of_face, %struct.BMIter__loop_of_face* %loop_of_face, i32 0, i32 0, !dbg !12064
  store %struct.BMFace* %56, %struct.BMFace** %pdata53, align 8, !dbg !12065
  br label %sw.epilog, !dbg !12066

sw.bb54:                                          ; preds = %entry
  %58 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12067
  %begin55 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %58, i32 0, i32 1, !dbg !12068
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_begin to void (i8*)*), void (i8*)** %begin55, align 8, !dbg !12069
  %59 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12070
  %step56 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %59, i32 0, i32 2, !dbg !12071
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_step to i8* (i8*)*), i8* (i8*)** %step56, align 8, !dbg !12072
  %60 = load i8*, i8** %data.addr, align 8, !dbg !12073
  %61 = bitcast i8* %60 to %struct.BMLoop*, !dbg !12074
  %62 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12075
  %data57 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %62, i32 0, i32 0, !dbg !12076
  %loop_of_loop = bitcast %union.anon.4* %data57 to %struct.BMIter__loop_of_loop*, !dbg !12077
  %ldata = getelementptr inbounds %struct.BMIter__loop_of_loop, %struct.BMIter__loop_of_loop* %loop_of_loop, i32 0, i32 0, !dbg !12078
  store %struct.BMLoop* %61, %struct.BMLoop** %ldata, align 8, !dbg !12079
  br label %sw.epilog, !dbg !12080

sw.bb58:                                          ; preds = %entry
  %63 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12081
  %begin59 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %63, i32 0, i32 1, !dbg !12082
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_begin to void (i8*)*), void (i8*)** %begin59, align 8, !dbg !12083
  %64 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12084
  %step60 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %64, i32 0, i32 2, !dbg !12085
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_step to i8* (i8*)*), i8* (i8*)** %step60, align 8, !dbg !12086
  %65 = load i8*, i8** %data.addr, align 8, !dbg !12087
  %66 = bitcast i8* %65 to %struct.BMEdge*, !dbg !12088
  %67 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12089
  %data61 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %67, i32 0, i32 0, !dbg !12090
  %loop_of_edge = bitcast %union.anon.4* %data61 to %struct.BMIter__loop_of_edge*, !dbg !12091
  %edata62 = getelementptr inbounds %struct.BMIter__loop_of_edge, %struct.BMIter__loop_of_edge* %loop_of_edge, i32 0, i32 0, !dbg !12092
  store %struct.BMEdge* %66, %struct.BMEdge** %edata62, align 8, !dbg !12093
  br label %sw.epilog, !dbg !12094

sw.default:                                       ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !12095
  br label %return, !dbg !12095

sw.epilog:                                        ; preds = %sw.bb58, %sw.bb54, %sw.bb49, %sw.bb44, %sw.bb40, %sw.bb35, %sw.bb31, %sw.bb26, %sw.bb21, %sw.bb17, %sw.bb10, %sw.bb3, %sw.bb
  %68 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12096
  %begin63 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %68, i32 0, i32 1, !dbg !12097
  %69 = load void (i8*)*, void (i8*)** %begin63, align 8, !dbg !12097
  %70 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12098
  %71 = bitcast %struct.BMIter* %70 to i8*, !dbg !12098
  call void %69(i8* %71), !dbg !12096
  store i8 1, i8* %retval, align 1, !dbg !12099
  br label %return, !dbg !12099

return:                                           ; preds = %sw.epilog, %sw.default
  %72 = load i8, i8* %retval, align 1, !dbg !12100
  ret i8 %72, !dbg !12100
}

declare dso_local void @bmiter__elem_of_mesh_begin(%struct.BMIter__elem_of_mesh*) #2

declare dso_local i8* @bmiter__elem_of_mesh_step(%struct.BMIter__elem_of_mesh*) #2

declare dso_local void @bmiter__edge_of_vert_begin(%struct.BMIter__edge_of_vert*) #2

declare dso_local i8* @bmiter__edge_of_vert_step(%struct.BMIter__edge_of_vert*) #2

declare dso_local void @bmiter__face_of_vert_begin(%struct.BMIter__face_of_vert*) #2

declare dso_local i8* @bmiter__face_of_vert_step(%struct.BMIter__face_of_vert*) #2

declare dso_local void @bmiter__loop_of_vert_begin(%struct.BMIter__loop_of_vert*) #2

declare dso_local i8* @bmiter__loop_of_vert_step(%struct.BMIter__loop_of_vert*) #2

declare dso_local void @bmiter__vert_of_edge_begin(%struct.BMIter__vert_of_edge*) #2

declare dso_local i8* @bmiter__vert_of_edge_step(%struct.BMIter__vert_of_edge*) #2

declare dso_local void @bmiter__face_of_edge_begin(%struct.BMIter__face_of_edge*) #2

declare dso_local i8* @bmiter__face_of_edge_step(%struct.BMIter__face_of_edge*) #2

declare dso_local void @bmiter__vert_of_face_begin(%struct.BMIter__vert_of_face*) #2

declare dso_local i8* @bmiter__vert_of_face_step(%struct.BMIter__vert_of_face*) #2

declare dso_local void @bmiter__edge_of_face_begin(%struct.BMIter__edge_of_face*) #2

declare dso_local i8* @bmiter__edge_of_face_step(%struct.BMIter__edge_of_face*) #2

declare dso_local void @bmiter__loop_of_face_begin(%struct.BMIter__loop_of_face*) #2

declare dso_local i8* @bmiter__loop_of_face_step(%struct.BMIter__loop_of_face*) #2

declare dso_local void @bmiter__loop_of_loop_begin(%struct.BMIter__loop_of_loop*) #2

declare dso_local i8* @bmiter__loop_of_loop_step(%struct.BMIter__loop_of_loop*) #2

declare dso_local void @bmiter__loop_of_edge_begin(%struct.BMIter__loop_of_edge*) #2

declare dso_local i8* @bmiter__loop_of_edge_step(%struct.BMIter__loop_of_edge*) #2

declare dso_local i8* @CustomData_get_n(%struct.CustomData*, i32, i32, i32) #2

declare dso_local i8* @CustomData_bmesh_get_n(%struct.CustomData*, i8*, i32, i32) #2

declare dso_local i8* @CustomData_get(%struct.CustomData*, i32, i32) #2

declare dso_local i8* @CustomData_bmesh_get(%struct.CustomData*, i8*, i32) #2

declare dso_local void @DM_DupPolys(%struct.DerivedMesh*, %struct.DerivedMesh*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1949, !1950, !1951}
!llvm.ident = !{!1952}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !200, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "blender/source/blender/blenkernel/intern/cdderivedmesh.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !10, !15, !26, !32, !38, !46, !53, !57, !63, !69, !113, !118, !122, !131, !145, !149, !155, !161, !165, !176, !193}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !4, line: 128, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9}
!7 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!9 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!10 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !4, line: 164, baseType: !5, size: 32, elements: !11)
!11 = !{!12, !13, !14}
!12 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!13 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!14 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!15 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotType", file: !16, line: 94, baseType: !5, size: 32, elements: !17)
!16 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operator_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!17 = !{!18, !19, !20, !21, !22, !23, !24, !25}
!18 = !DIEnumerator(name: "BMO_OP_SLOT_BOOL", value: 1, isUnsigned: true)
!19 = !DIEnumerator(name: "BMO_OP_SLOT_INT", value: 2, isUnsigned: true)
!20 = !DIEnumerator(name: "BMO_OP_SLOT_FLT", value: 3, isUnsigned: true)
!21 = !DIEnumerator(name: "BMO_OP_SLOT_PTR", value: 4, isUnsigned: true)
!22 = !DIEnumerator(name: "BMO_OP_SLOT_MAT", value: 5, isUnsigned: true)
!23 = !DIEnumerator(name: "BMO_OP_SLOT_VEC", value: 8, isUnsigned: true)
!24 = !DIEnumerator(name: "BMO_OP_SLOT_ELEMENT_BUF", value: 9, isUnsigned: true)
!25 = !DIEnumerator(name: "BMO_OP_SLOT_MAPPING", value: 10, isUnsigned: true)
!26 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Elem", file: !16, line: 116, baseType: !5, size: 32, elements: !27)
!27 = !{!28, !29, !30, !31}
!28 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_VERT", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_EDGE", value: 2, isUnsigned: true)
!30 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_FACE", value: 8, isUnsigned: true)
!31 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_IS_SINGLE", value: 16, isUnsigned: true)
!32 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Ptr", file: !16, line: 131, baseType: !5, size: 32, elements: !33)
!33 = !{!34, !35, !36, !37}
!34 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_BMESH", value: 100, isUnsigned: true)
!35 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_SCENE", value: 101, isUnsigned: true)
!36 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_OBJECT", value: 102, isUnsigned: true)
!37 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_MESH", value: 103, isUnsigned: true)
!38 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Map", file: !16, line: 123, baseType: !5, size: 32, elements: !39)
!39 = !{!40, !41, !42, !43, !44, !45}
!40 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_EMPTY", value: 64, isUnsigned: true)
!41 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_ELEM", value: 65, isUnsigned: true)
!42 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_FLT", value: 66, isUnsigned: true)
!43 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INT", value: 67, isUnsigned: true)
!44 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_BOOL", value: 68, isUnsigned: true)
!45 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INTERNAL", value: 69, isUnsigned: true)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !16, line: 182, baseType: !5, size: 32, elements: !47)
!47 = !{!48, !49, !50, !51, !52}
!48 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NOP", value: 0, isUnsigned: true)
!49 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_UNTAN_MULTIRES", value: 1, isUnsigned: true)
!50 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NORMALS_CALC", value: 2, isUnsigned: true)
!51 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_FLUSH", value: 4, isUnsigned: true)
!52 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_VALIDATE", value: 8, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !4, line: 159, baseType: !5, size: 32, elements: !54)
!54 = !{!55, !56}
!55 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !4, line: 134, baseType: !5, size: 32, elements: !58)
!58 = !{!59, !60, !61, !62}
!59 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!60 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!61 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!62 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!63 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !4, line: 152, baseType: !5, size: 32, elements: !64)
!64 = !{!65, !66, !67, !68}
!65 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!66 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!67 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!68 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!69 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !70, line: 76, baseType: !5, size: 32, elements: !71)
!70 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!71 = !{!72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112}
!72 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!73 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!74 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!75 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!76 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!77 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!78 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!79 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!80 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!81 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!82 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!83 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!84 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!85 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!86 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!87 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!88 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!89 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!90 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!91 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!92 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!93 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!94 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!95 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!96 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!97 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!98 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!99 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!100 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!101 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!102 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!103 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!104 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!105 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!106 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!107 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!108 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!109 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!110 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!111 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!112 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !114, line: 63, baseType: !5, size: 32, elements: !115)
!114 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_cdderivedmesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!115 = !{!116, !117}
!116 = !DIEnumerator(name: "CDDM_MERGE_VERTS_DUMP_IF_MAPPED", value: 0, isUnsigned: true)
!117 = !DIEnumerator(name: "CDDM_MERGE_VERTS_DUMP_IF_EQUAL", value: 1, isUnsigned: true)
!118 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !119, line: 56, baseType: !5, size: 32, elements: !120)
!119 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!120 = !{!121}
!121 = !DIEnumerator(name: "GHASH_FLAG_ALLOW_DUPES", value: 1, isUnsigned: true)
!122 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !123, line: 313, baseType: !5, size: 32, elements: !124)
!123 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!124 = !{!125, !126, !127, !128, !129, !130}
!125 = !DIEnumerator(name: "ME_EDGEDRAW", value: 2, isUnsigned: true)
!126 = !DIEnumerator(name: "ME_SEAM", value: 4, isUnsigned: true)
!127 = !DIEnumerator(name: "ME_EDGERENDER", value: 32, isUnsigned: true)
!128 = !DIEnumerator(name: "ME_LOOSEEDGE", value: 128, isUnsigned: true)
!129 = !DIEnumerator(name: "ME_EDGE_TMP_TAG", value: 256, isUnsigned: true)
!130 = !DIEnumerator(name: "ME_SHARP", value: 512, isUnsigned: true)
!131 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !132, line: 339, baseType: !5, size: 32, elements: !133)
!132 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!133 = !{!134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144}
!134 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!135 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!136 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!137 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!138 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!139 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!140 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!141 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!142 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!143 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!144 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !132, line: 626, baseType: !5, size: 32, elements: !146)
!146 = !{!147, !148}
!147 = !DIEnumerator(name: "OB_SHAPE_LOCK", value: 1, isUnsigned: true)
!148 = !DIEnumerator(name: "OB_SHAPE_EDIT_MODE", value: 4, isUnsigned: true)
!149 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !123, line: 304, baseType: !5, size: 32, elements: !150)
!150 = !{!151, !152, !153, !154}
!151 = !DIEnumerator(name: "ME_VERT_TMP_TAG", value: 4, isUnsigned: true)
!152 = !DIEnumerator(name: "ME_HIDE", value: 16, isUnsigned: true)
!153 = !DIEnumerator(name: "ME_VERT_MERGED", value: 64, isUnsigned: true)
!154 = !DIEnumerator(name: "ME_VERT_PBVH_UPDATE", value: 128, isUnsigned: true)
!155 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !156, line: 118, baseType: !5, size: 32, elements: !157)
!156 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_pbvh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!157 = !{!158, !159, !160}
!158 = !DIEnumerator(name: "PBVH_FACES", value: 0, isUnsigned: true)
!159 = !DIEnumerator(name: "PBVH_GRIDS", value: 1, isUnsigned: true)
!160 = !DIEnumerator(name: "PBVH_BMESH", value: 2, isUnsigned: true)
!161 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !123, line: 341, baseType: !5, size: 32, elements: !162)
!162 = !{!163, !164}
!163 = !DIEnumerator(name: "ME_SMOOTH", value: 1, isUnsigned: true)
!164 = !DIEnumerator(name: "ME_FACE_SEL", value: 2, isUnsigned: true)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !156, line: 152, baseType: !5, size: 32, elements: !166)
!166 = !{!167, !168, !169, !170, !171, !172, !173, !174, !175}
!167 = !DIEnumerator(name: "PBVH_Leaf", value: 1, isUnsigned: true)
!168 = !DIEnumerator(name: "PBVH_UpdateNormals", value: 2, isUnsigned: true)
!169 = !DIEnumerator(name: "PBVH_UpdateBB", value: 4, isUnsigned: true)
!170 = !DIEnumerator(name: "PBVH_UpdateOriginalBB", value: 8, isUnsigned: true)
!171 = !DIEnumerator(name: "PBVH_UpdateDrawBuffers", value: 16, isUnsigned: true)
!172 = !DIEnumerator(name: "PBVH_UpdateRedraw", value: 32, isUnsigned: true)
!173 = !DIEnumerator(name: "PBVH_RebuildDrawBuffers", value: 64, isUnsigned: true)
!174 = !DIEnumerator(name: "PBVH_FullyHidden", value: 128, isUnsigned: true)
!175 = !DIEnumerator(name: "PBVH_UpdateTopology", value: 256, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BMIterType", file: !177, line: 57, baseType: !5, size: 32, elements: !178)
!177 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!178 = !{!179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192}
!179 = !DIEnumerator(name: "BM_VERTS_OF_MESH", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "BM_EDGES_OF_MESH", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "BM_FACES_OF_MESH", value: 3, isUnsigned: true)
!182 = !DIEnumerator(name: "BM_EDGES_OF_VERT", value: 4, isUnsigned: true)
!183 = !DIEnumerator(name: "BM_FACES_OF_VERT", value: 5, isUnsigned: true)
!184 = !DIEnumerator(name: "BM_LOOPS_OF_VERT", value: 6, isUnsigned: true)
!185 = !DIEnumerator(name: "BM_VERTS_OF_EDGE", value: 7, isUnsigned: true)
!186 = !DIEnumerator(name: "BM_FACES_OF_EDGE", value: 8, isUnsigned: true)
!187 = !DIEnumerator(name: "BM_VERTS_OF_FACE", value: 9, isUnsigned: true)
!188 = !DIEnumerator(name: "BM_EDGES_OF_FACE", value: 10, isUnsigned: true)
!189 = !DIEnumerator(name: "BM_LOOPS_OF_FACE", value: 11, isUnsigned: true)
!190 = !DIEnumerator(name: "BM_ALL_LOOPS_OF_FACE", value: 12, isUnsigned: true)
!191 = !DIEnumerator(name: "BM_LOOPS_OF_LOOP", value: 13, isUnsigned: true)
!192 = !DIEnumerator(name: "BM_LOOPS_OF_EDGE", value: 14, isUnsigned: true)
!193 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !194, line: 249, baseType: !5, size: 32, elements: !195)
!194 = !DIFile(filename: "blender/source/blender/bmesh/bmesh_class.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!195 = !{!196, !197, !198, !199}
!196 = !DIEnumerator(name: "BM_VERT", value: 1, isUnsigned: true)
!197 = !DIEnumerator(name: "BM_EDGE", value: 2, isUnsigned: true)
!198 = !DIEnumerator(name: "BM_LOOP", value: 4, isUnsigned: true)
!199 = !DIEnumerator(name: "BM_FACE", value: 8, isUnsigned: true)
!200 = !{!201, !233, !1800, !1905, !219, !1909, !1477, !1912, !1916, !601, !912, !309, !1917, !1918, !1922, !629, !690, !694, !672, !302, !1926, !1930, !1933, !1942}
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64)
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "CDDerivedMesh", file: !1, line: 90, baseType: !203)
!203 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 72, size: 14080, elements: !204)
!204 = !{!205, !1779, !1782, !1785, !1788, !1791, !1794, !1795, !1796, !1799}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !203, file: !1, line: 73, baseType: !206, size: 13504)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !4, line: 177, baseType: !207)
!207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !4, line: 178, size: 13504, elements: !208)
!208 = !{!209, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !270, !310, !312, !314, !316, !317, !1472, !1473, !1478, !1483, !1484, !1488, !1489, !1490, !1491, !1492, !1496, !1508, !1522, !1526, !1530, !1534, !1538, !1542, !1546, !1550, !1554, !1558, !1562, !1563, !1564, !1565, !1566, !1567, !1571, !1572, !1573, !1574, !1578, !1579, !1580, !1581, !1582, !1587, !1588, !1589, !1590, !1591, !1595, !1596, !1597, !1598, !1599, !1606, !1617, !1621, !1627, !1637, !1642, !1653, !1660, !1667, !1671, !1675, !1679, !1683, !1684, !1685, !1689, !1693, !1694, !1695, !1699, !1700, !1709, !1736, !1740, !1748, !1752, !1756, !1760, !1768, !1778}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !207, file: !4, line: 180, baseType: !210, size: 1600)
!210 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !70, line: 73, baseType: !211)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !70, line: 64, size: 1600, elements: !212)
!212 = !{!213, !234, !238, !239, !240, !241, !244}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !211, file: !70, line: 65, baseType: !214, size: 64)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64)
!215 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !70, line: 53, baseType: !216)
!216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !70, line: 42, size: 832, elements: !217)
!217 = !{!218, !220, !221, !222, !223, !224, !225, !226, !227, !232}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !216, file: !70, line: 43, baseType: !219, size: 32)
!219 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !216, file: !70, line: 44, baseType: !219, size: 32, offset: 32)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !216, file: !70, line: 45, baseType: !219, size: 32, offset: 64)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !216, file: !70, line: 46, baseType: !219, size: 32, offset: 96)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !216, file: !70, line: 47, baseType: !219, size: 32, offset: 128)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !216, file: !70, line: 48, baseType: !219, size: 32, offset: 160)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !216, file: !70, line: 49, baseType: !219, size: 32, offset: 192)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !216, file: !70, line: 50, baseType: !219, size: 32, offset: 224)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !216, file: !70, line: 51, baseType: !228, size: 512, offset: 256)
!228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !229, size: 512, elements: !230)
!229 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!230 = !{!231}
!231 = !DISubrange(count: 64)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !216, file: !70, line: 52, baseType: !233, size: 64, offset: 768)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !211, file: !70, line: 66, baseType: !235, size: 1312, offset: 64)
!235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !219, size: 1312, elements: !236)
!236 = !{!237}
!237 = !DISubrange(count: 41)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !211, file: !70, line: 69, baseType: !219, size: 32, offset: 1376)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !211, file: !70, line: 69, baseType: !219, size: 32, offset: 1408)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !211, file: !70, line: 70, baseType: !219, size: 32, offset: 1440)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !211, file: !70, line: 71, baseType: !242, size: 64, offset: 1472)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!243 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !70, line: 71, flags: DIFlagFwdDecl)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !211, file: !70, line: 72, baseType: !245, size: 64, offset: 1536)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !70, line: 59, baseType: !247)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !70, line: 57, size: 8192, elements: !248)
!248 = !{!249}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !247, file: !70, line: 58, baseType: !250, size: 8192)
!250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !229, size: 8192, elements: !251)
!251 = !{!252}
!252 = !DISubrange(count: 1024)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !207, file: !4, line: 180, baseType: !210, size: 1600, offset: 1600)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !207, file: !4, line: 180, baseType: !210, size: 1600, offset: 3200)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !207, file: !4, line: 180, baseType: !210, size: 1600, offset: 4800)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !207, file: !4, line: 180, baseType: !210, size: 1600, offset: 6400)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !207, file: !4, line: 181, baseType: !219, size: 32, offset: 8000)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !207, file: !4, line: 181, baseType: !219, size: 32, offset: 8032)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !207, file: !4, line: 181, baseType: !219, size: 32, offset: 8064)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !207, file: !4, line: 181, baseType: !219, size: 32, offset: 8096)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !207, file: !4, line: 181, baseType: !219, size: 32, offset: 8128)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !207, file: !4, line: 182, baseType: !219, size: 32, offset: 8160)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !207, file: !4, line: 183, baseType: !219, size: 32, offset: 8192)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !207, file: !4, line: 184, baseType: !265, size: 64, offset: 8256)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !266, line: 124, baseType: !267)
!266 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!268 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !269, line: 118, flags: DIFlagFwdDecl)
!269 = !DIFile(filename: "blender/source/blender/blenlib/BLI_fileops.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!270 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !207, file: !4, line: 185, baseType: !271, size: 64, offset: 8320)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64)
!272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !273, line: 84, size: 832, elements: !274)
!273 = !DIFile(filename: "blender/source/blender/gpu/GPU_buffers.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!274 = !{!275, !283, !284, !285, !286, !287, !288, !290, !293, !294, !303, !304, !305, !306, !307, !308}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !272, file: !273, line: 85, baseType: !276, size: 64)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64)
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUBuffer", file: !273, line: 57, baseType: !278)
!278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUBuffer", file: !273, line: 53, size: 192, elements: !279)
!279 = !{!280, !281, !282}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !278, file: !273, line: 54, baseType: !219, size: 32)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !278, file: !273, line: 55, baseType: !233, size: 64, offset: 64)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !278, file: !273, line: 56, baseType: !5, size: 32, offset: 128)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "normals", scope: !272, file: !273, line: 86, baseType: !276, size: 64, offset: 64)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !272, file: !273, line: 87, baseType: !276, size: 64, offset: 128)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !272, file: !273, line: 88, baseType: !276, size: 64, offset: 192)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "edges", scope: !272, file: !273, line: 89, baseType: !276, size: 64, offset: 256)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "uvedges", scope: !272, file: !273, line: 90, baseType: !276, size: 64, offset: 320)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "triangle_to_mface", scope: !272, file: !273, line: 93, baseType: !289, size: 64, offset: 384)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "vert_points", scope: !272, file: !273, line: 96, baseType: !291, size: 64, offset: 448)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!292 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUVertPointLink", file: !273, line: 50, flags: DIFlagFwdDecl)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "colType", scope: !272, file: !273, line: 105, baseType: !219, size: 32, offset: 512)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "materials", scope: !272, file: !273, line: 107, baseType: !295, size: 64, offset: 576)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUBufferMaterial", file: !273, line: 66, baseType: !297)
!297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUBufferMaterial", file: !273, line: 59, size: 96, elements: !298)
!298 = !{!299, !300, !301}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !297, file: !273, line: 61, baseType: !219, size: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !297, file: !273, line: 62, baseType: !219, size: 32, offset: 32)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !297, file: !273, line: 65, baseType: !302, size: 16, offset: 64)
!302 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "totmaterial", scope: !272, file: !273, line: 108, baseType: !219, size: 32, offset: 640)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "tot_triangle_point", scope: !272, file: !273, line: 110, baseType: !219, size: 32, offset: 672)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "tot_loose_point", scope: !272, file: !273, line: 111, baseType: !219, size: 32, offset: 704)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !272, file: !273, line: 114, baseType: !219, size: 32, offset: 736)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !272, file: !273, line: 115, baseType: !219, size: 32, offset: 768)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "legacy", scope: !272, file: !273, line: 119, baseType: !309, size: 8, offset: 800)
!309 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !207, file: !4, line: 186, baseType: !311, size: 32, offset: 8384)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !4, line: 132, baseType: !3)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !207, file: !4, line: 187, baseType: !313, size: 32, offset: 8416)
!313 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !207, file: !4, line: 188, baseType: !315, size: 32, offset: 8448)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !4, line: 175, baseType: !10)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !207, file: !4, line: 189, baseType: !219, size: 32, offset: 8480)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !207, file: !4, line: 190, baseType: !318, size: 64, offset: 8512)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !321, line: 93, size: 7552, elements: !322)
!321 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!322 = !{!323, !385, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !438, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !507, !508, !509, !510, !511, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1471}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !320, file: !321, line: 94, baseType: !324, size: 960)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !325, line: 130, baseType: !326)
!325 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !325, line: 117, size: 960, elements: !327)
!327 = !{!328, !329, !330, !332, !348, !352, !353, !354, !355, !356}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !326, file: !325, line: 118, baseType: !233, size: 64)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !326, file: !325, line: 118, baseType: !233, size: 64, offset: 64)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !326, file: !325, line: 119, baseType: !331, size: 64, offset: 128)
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !326, file: !325, line: 120, baseType: !333, size: 64, offset: 192)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 64)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !325, line: 136, size: 17600, elements: !335)
!335 = !{!336, !337, !339, !342, !343, !344, !345}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !334, file: !325, line: 137, baseType: !324, size: 960)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !334, file: !325, line: 138, baseType: !338, size: 64, offset: 960)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !334, file: !325, line: 139, baseType: !340, size: 64, offset: 1024)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!341 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !325, line: 43, flags: DIFlagFwdDecl)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !334, file: !325, line: 140, baseType: !250, size: 8192, offset: 1088)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !334, file: !325, line: 141, baseType: !250, size: 8192, offset: 9280)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !334, file: !325, line: 148, baseType: !333, size: 64, offset: 17472)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !334, file: !325, line: 150, baseType: !346, size: 64, offset: 17536)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!347 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !325, line: 45, flags: DIFlagFwdDecl)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !326, file: !325, line: 121, baseType: !349, size: 528, offset: 256)
!349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !229, size: 528, elements: !350)
!350 = !{!351}
!351 = !DISubrange(count: 66)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !326, file: !325, line: 126, baseType: !302, size: 16, offset: 784)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !326, file: !325, line: 127, baseType: !219, size: 32, offset: 800)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !326, file: !325, line: 128, baseType: !219, size: 32, offset: 832)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !326, file: !325, line: 128, baseType: !219, size: 32, offset: 864)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !326, file: !325, line: 129, baseType: !357, size: 64, offset: 896)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!358 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !325, line: 75, baseType: !359)
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !325, line: 62, size: 1024, elements: !360)
!360 = !{!361, !363, !364, !365, !366, !367, !368, !369, !383, !384}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !359, file: !325, line: 63, baseType: !362, size: 64)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !359, file: !325, line: 63, baseType: !362, size: 64, offset: 64)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !359, file: !325, line: 64, baseType: !229, size: 8, offset: 128)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !359, file: !325, line: 64, baseType: !229, size: 8, offset: 136)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !359, file: !325, line: 65, baseType: !302, size: 16, offset: 144)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !359, file: !325, line: 66, baseType: !228, size: 512, offset: 160)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !359, file: !325, line: 67, baseType: !219, size: 32, offset: 672)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !359, file: !325, line: 69, baseType: !370, size: 256, offset: 704)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !325, line: 60, baseType: !371)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !325, line: 48, size: 256, elements: !372)
!372 = !{!373, !374, !381, !382}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !371, file: !325, line: 49, baseType: !233, size: 64)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !371, file: !325, line: 58, baseType: !375, size: 128, offset: 64)
!375 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !376, line: 71, baseType: !377)
!376 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !376, line: 69, size: 128, elements: !378)
!378 = !{!379, !380}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !377, file: !376, line: 70, baseType: !233, size: 64)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !377, file: !376, line: 70, baseType: !233, size: 64, offset: 64)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !371, file: !325, line: 59, baseType: !219, size: 32, offset: 192)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !371, file: !325, line: 59, baseType: !219, size: 32, offset: 224)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !359, file: !325, line: 70, baseType: !219, size: 32, offset: 960)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !359, file: !325, line: 74, baseType: !219, size: 32, offset: 992)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !320, file: !321, line: 95, baseType: !386, size: 64, offset: 960)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!387 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !388, line: 45, flags: DIFlagFwdDecl)
!388 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!389 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !320, file: !321, line: 97, baseType: !302, size: 16, offset: 1024)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !320, file: !321, line: 97, baseType: !302, size: 16, offset: 1040)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !320, file: !321, line: 99, baseType: !313, size: 32, offset: 1056)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !320, file: !321, line: 99, baseType: !313, size: 32, offset: 1088)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !320, file: !321, line: 99, baseType: !313, size: 32, offset: 1120)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !320, file: !321, line: 100, baseType: !313, size: 32, offset: 1152)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !320, file: !321, line: 100, baseType: !313, size: 32, offset: 1184)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !320, file: !321, line: 100, baseType: !313, size: 32, offset: 1216)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !320, file: !321, line: 101, baseType: !313, size: 32, offset: 1248)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !320, file: !321, line: 101, baseType: !313, size: 32, offset: 1280)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !320, file: !321, line: 101, baseType: !313, size: 32, offset: 1312)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !320, file: !321, line: 102, baseType: !313, size: 32, offset: 1344)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !320, file: !321, line: 102, baseType: !313, size: 32, offset: 1376)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !320, file: !321, line: 102, baseType: !313, size: 32, offset: 1408)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !320, file: !321, line: 103, baseType: !313, size: 32, offset: 1440)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !320, file: !321, line: 103, baseType: !313, size: 32, offset: 1472)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !320, file: !321, line: 103, baseType: !313, size: 32, offset: 1504)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !320, file: !321, line: 103, baseType: !313, size: 32, offset: 1536)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !320, file: !321, line: 103, baseType: !313, size: 32, offset: 1568)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !320, file: !321, line: 104, baseType: !313, size: 32, offset: 1600)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !320, file: !321, line: 104, baseType: !313, size: 32, offset: 1632)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !320, file: !321, line: 104, baseType: !313, size: 32, offset: 1664)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !320, file: !321, line: 104, baseType: !313, size: 32, offset: 1696)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !320, file: !321, line: 104, baseType: !313, size: 32, offset: 1728)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !320, file: !321, line: 105, baseType: !313, size: 32, offset: 1760)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !320, file: !321, line: 108, baseType: !415, size: 704, offset: 1792)
!415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !321, line: 53, size: 704, elements: !416)
!416 = !{!417, !418, !419, !420, !421, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437}
!417 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !415, file: !321, line: 54, baseType: !313, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !415, file: !321, line: 55, baseType: !313, size: 32, offset: 32)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !415, file: !321, line: 56, baseType: !313, size: 32, offset: 64)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !415, file: !321, line: 57, baseType: !313, size: 32, offset: 96)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !415, file: !321, line: 59, baseType: !422, size: 96, offset: 128)
!422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !313, size: 96, elements: !423)
!423 = !{!424}
!424 = !DISubrange(count: 3)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !415, file: !321, line: 60, baseType: !422, size: 96, offset: 224)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !415, file: !321, line: 61, baseType: !422, size: 96, offset: 320)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !415, file: !321, line: 63, baseType: !313, size: 32, offset: 416)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !415, file: !321, line: 64, baseType: !313, size: 32, offset: 448)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !415, file: !321, line: 65, baseType: !313, size: 32, offset: 480)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !415, file: !321, line: 67, baseType: !302, size: 16, offset: 512)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !415, file: !321, line: 68, baseType: !302, size: 16, offset: 528)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !415, file: !321, line: 69, baseType: !302, size: 16, offset: 544)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !415, file: !321, line: 70, baseType: !302, size: 16, offset: 560)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !415, file: !321, line: 72, baseType: !313, size: 32, offset: 576)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !415, file: !321, line: 73, baseType: !313, size: 32, offset: 608)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !415, file: !321, line: 74, baseType: !313, size: 32, offset: 640)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !415, file: !321, line: 75, baseType: !313, size: 32, offset: 672)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !320, file: !321, line: 109, baseType: !439, size: 128, offset: 2496)
!439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !321, line: 79, size: 128, elements: !440)
!440 = !{!441, !442, !443, !444}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !439, file: !321, line: 80, baseType: !219, size: 32)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !439, file: !321, line: 81, baseType: !219, size: 32, offset: 32)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !439, file: !321, line: 82, baseType: !219, size: 32, offset: 64)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !439, file: !321, line: 83, baseType: !219, size: 32, offset: 96)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !320, file: !321, line: 111, baseType: !313, size: 32, offset: 2624)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !320, file: !321, line: 111, baseType: !313, size: 32, offset: 2656)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !320, file: !321, line: 112, baseType: !313, size: 32, offset: 2688)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !320, file: !321, line: 112, baseType: !313, size: 32, offset: 2720)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !320, file: !321, line: 113, baseType: !313, size: 32, offset: 2752)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !320, file: !321, line: 114, baseType: !313, size: 32, offset: 2784)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !320, file: !321, line: 114, baseType: !313, size: 32, offset: 2816)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !320, file: !321, line: 115, baseType: !302, size: 16, offset: 2848)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !320, file: !321, line: 115, baseType: !302, size: 16, offset: 2864)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !320, file: !321, line: 116, baseType: !302, size: 16, offset: 2880)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !320, file: !321, line: 117, baseType: !229, size: 8, offset: 2896)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !320, file: !321, line: 117, baseType: !229, size: 8, offset: 2904)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !320, file: !321, line: 119, baseType: !313, size: 32, offset: 2912)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !320, file: !321, line: 119, baseType: !313, size: 32, offset: 2944)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !320, file: !321, line: 120, baseType: !302, size: 16, offset: 2976)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !320, file: !321, line: 120, baseType: !302, size: 16, offset: 2992)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !320, file: !321, line: 121, baseType: !313, size: 32, offset: 3008)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !320, file: !321, line: 121, baseType: !313, size: 32, offset: 3040)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !320, file: !321, line: 122, baseType: !313, size: 32, offset: 3072)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !320, file: !321, line: 123, baseType: !313, size: 32, offset: 3104)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !320, file: !321, line: 124, baseType: !302, size: 16, offset: 3136)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !320, file: !321, line: 125, baseType: !302, size: 16, offset: 3152)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !320, file: !321, line: 127, baseType: !219, size: 32, offset: 3168)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !320, file: !321, line: 127, baseType: !219, size: 32, offset: 3200)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !320, file: !321, line: 128, baseType: !219, size: 32, offset: 3232)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !320, file: !321, line: 128, baseType: !219, size: 32, offset: 3264)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !320, file: !321, line: 129, baseType: !302, size: 16, offset: 3296)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !320, file: !321, line: 129, baseType: !302, size: 16, offset: 3312)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !320, file: !321, line: 129, baseType: !302, size: 16, offset: 3328)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !320, file: !321, line: 129, baseType: !302, size: 16, offset: 3344)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !320, file: !321, line: 130, baseType: !313, size: 32, offset: 3360)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !320, file: !321, line: 130, baseType: !313, size: 32, offset: 3392)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !320, file: !321, line: 130, baseType: !313, size: 32, offset: 3424)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !320, file: !321, line: 130, baseType: !313, size: 32, offset: 3456)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !320, file: !321, line: 131, baseType: !313, size: 32, offset: 3488)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !320, file: !321, line: 131, baseType: !313, size: 32, offset: 3520)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !320, file: !321, line: 131, baseType: !313, size: 32, offset: 3552)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !320, file: !321, line: 131, baseType: !313, size: 32, offset: 3584)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !320, file: !321, line: 132, baseType: !313, size: 32, offset: 3616)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !320, file: !321, line: 132, baseType: !313, size: 32, offset: 3648)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !320, file: !321, line: 133, baseType: !228, size: 512, offset: 3680)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !320, file: !321, line: 135, baseType: !313, size: 32, offset: 4192)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !320, file: !321, line: 136, baseType: !313, size: 32, offset: 4224)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !320, file: !321, line: 137, baseType: !313, size: 32, offset: 4256)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !320, file: !321, line: 138, baseType: !219, size: 32, offset: 4288)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !320, file: !321, line: 141, baseType: !229, size: 8, offset: 4320)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !320, file: !321, line: 141, baseType: !229, size: 8, offset: 4328)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !320, file: !321, line: 141, baseType: !229, size: 8, offset: 4336)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !320, file: !321, line: 141, baseType: !229, size: 8, offset: 4344)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !320, file: !321, line: 142, baseType: !302, size: 16, offset: 4352)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !320, file: !321, line: 142, baseType: !302, size: 16, offset: 4368)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !320, file: !321, line: 142, baseType: !302, size: 16, offset: 4384)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !320, file: !321, line: 145, baseType: !229, size: 8, offset: 4400)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !320, file: !321, line: 145, baseType: !229, size: 8, offset: 4408)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !320, file: !321, line: 148, baseType: !302, size: 16, offset: 4416)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !320, file: !321, line: 148, baseType: !302, size: 16, offset: 4432)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !320, file: !321, line: 149, baseType: !313, size: 32, offset: 4448)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !320, file: !321, line: 149, baseType: !313, size: 32, offset: 4480)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !320, file: !321, line: 152, baseType: !504, size: 128, offset: 4512)
!504 = !DICompositeType(tag: DW_TAG_array_type, baseType: !313, size: 128, elements: !505)
!505 = !{!506}
!506 = !DISubrange(count: 4)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !320, file: !321, line: 153, baseType: !313, size: 32, offset: 4640)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !320, file: !321, line: 154, baseType: !313, size: 32, offset: 4672)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !320, file: !321, line: 157, baseType: !302, size: 16, offset: 4704)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !320, file: !321, line: 157, baseType: !302, size: 16, offset: 4720)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !320, file: !321, line: 160, baseType: !512, size: 64, offset: 4736)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !388, line: 113, size: 6208, elements: !514)
!514 = !{!515, !516, !517, !518, !519, !520, !524}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !513, file: !388, line: 114, baseType: !302, size: 16)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !513, file: !388, line: 114, baseType: !302, size: 16, offset: 16)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !513, file: !388, line: 115, baseType: !229, size: 8, offset: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !513, file: !388, line: 115, baseType: !229, size: 8, offset: 40)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !513, file: !388, line: 116, baseType: !229, size: 8, offset: 48)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !513, file: !388, line: 117, baseType: !521, size: 8, offset: 56)
!521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !229, size: 8, elements: !522)
!522 = !{!523}
!523 = !DISubrange(count: 1)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !513, file: !388, line: 119, baseType: !525, size: 6144, offset: 64)
!525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !526, size: 6144, elements: !535)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !388, line: 109, baseType: !527)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !388, line: 106, size: 192, elements: !528)
!528 = !{!529, !530, !531, !532, !533, !534}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !527, file: !388, line: 107, baseType: !313, size: 32)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !527, file: !388, line: 107, baseType: !313, size: 32, offset: 32)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !527, file: !388, line: 107, baseType: !313, size: 32, offset: 64)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !527, file: !388, line: 107, baseType: !313, size: 32, offset: 96)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !527, file: !388, line: 107, baseType: !313, size: 32, offset: 128)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !527, file: !388, line: 108, baseType: !219, size: 32, offset: 160)
!535 = !{!536}
!536 = !DISubrange(count: 32)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !320, file: !321, line: 161, baseType: !512, size: 64, offset: 4800)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !320, file: !321, line: 162, baseType: !229, size: 8, offset: 4864)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !320, file: !321, line: 162, baseType: !229, size: 8, offset: 4872)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !320, file: !321, line: 163, baseType: !229, size: 8, offset: 4880)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !320, file: !321, line: 163, baseType: !229, size: 8, offset: 4888)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !320, file: !321, line: 164, baseType: !302, size: 16, offset: 4896)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !320, file: !321, line: 164, baseType: !302, size: 16, offset: 4912)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !320, file: !321, line: 165, baseType: !313, size: 32, offset: 4928)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !320, file: !321, line: 165, baseType: !313, size: 32, offset: 4960)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !320, file: !321, line: 167, baseType: !547, size: 1152, offset: 4992)
!547 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, size: 1152, elements: !1429)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !388, line: 57, size: 2496, elements: !550)
!550 = !{!551, !552, !553, !554, !555, !1096, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !549, file: !388, line: 59, baseType: !302, size: 16)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !549, file: !388, line: 59, baseType: !302, size: 16, offset: 16)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !549, file: !388, line: 59, baseType: !302, size: 16, offset: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !549, file: !388, line: 59, baseType: !302, size: 16, offset: 48)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !549, file: !388, line: 60, baseType: !556, size: 64, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !132, line: 115, size: 11392, elements: !558)
!558 = !{!559, !560, !561, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !818, !828, !842, !843, !883, !884, !887, !888, !904, !905, !906, !907, !908, !909, !910, !911, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !989, !990, !991, !992, !993, !994, !995, !996, !997, !1000, !1003, !1006, !1007, !1008, !1009, !1010, !1013, !1036, !1038, !1039, !1045, !1046, !1047, !1048, !1049, !1050, !1052, !1055, !1058, !1062, !1084, !1085}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !557, file: !132, line: 116, baseType: !324, size: 960)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !557, file: !132, line: 117, baseType: !386, size: 64, offset: 960)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !557, file: !132, line: 119, baseType: !562, size: 64, offset: 1024)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !564, line: 155, size: 1856, elements: !565)
!564 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_paint.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!565 = !{!566, !569, !578, !587, !593, !594, !595, !597, !600, !602, !610, !768, !769, !770, !771, !774, !777, !778, !779, !780, !781, !785, !786, !787, !789, !790, !793, !794, !797, !800, !801, !802, !803}
!566 = !DIDerivedType(tag: DW_TAG_member, name: "multires", scope: !563, file: !564, line: 157, baseType: !567, size: 64)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = !DICompositeType(tag: DW_TAG_structure_type, name: "MultiresModifierData", file: !564, line: 157, flags: DIFlagFwdDecl)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !563, file: !564, line: 158, baseType: !570, size: 64, offset: 64)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !123, line: 65, size: 160, elements: !572)
!572 = !{!573, !574, !576, !577}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !571, file: !123, line: 66, baseType: !422, size: 96)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !571, file: !123, line: 67, baseType: !575, size: 48, offset: 96)
!575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !302, size: 48, elements: !423)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !571, file: !123, line: 68, baseType: !229, size: 8, offset: 144)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !571, file: !123, line: 68, baseType: !229, size: 8, offset: 152)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !563, file: !564, line: 159, baseType: !579, size: 64, offset: 128)
!579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 64)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !123, line: 79, size: 96, elements: !581)
!581 = !{!582, !583, !584, !585, !586}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !580, file: !123, line: 81, baseType: !219, size: 32)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !580, file: !123, line: 82, baseType: !219, size: 32, offset: 32)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !580, file: !123, line: 83, baseType: !302, size: 16, offset: 64)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !580, file: !123, line: 84, baseType: !229, size: 8, offset: 80)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !580, file: !123, line: 84, baseType: !229, size: 8, offset: 88)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !563, file: !564, line: 160, baseType: !588, size: 64, offset: 192)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !123, line: 88, size: 64, elements: !590)
!590 = !{!591, !592}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !589, file: !123, line: 89, baseType: !5, size: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !589, file: !123, line: 90, baseType: !5, size: 32, offset: 32)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !563, file: !564, line: 161, baseType: !219, size: 32, offset: 256)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !563, file: !564, line: 161, baseType: !219, size: 32, offset: 288)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "face_normals", scope: !563, file: !564, line: 162, baseType: !596, size: 64, offset: 320)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "kb", scope: !563, file: !564, line: 163, baseType: !598, size: 64, offset: 384)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!599 = !DICompositeType(tag: DW_TAG_structure_type, name: "KeyBlock", file: !4, line: 92, flags: DIFlagFwdDecl)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "vmask", scope: !563, file: !564, line: 164, baseType: !601, size: 64, offset: 448)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "pmap", scope: !563, file: !564, line: 167, baseType: !603, size: 64, offset: 512)
!603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64)
!604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !605)
!605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !606, line: 96, size: 128, elements: !607)
!606 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_mesh_mapping.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!607 = !{!608, !609}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !605, file: !606, line: 97, baseType: !289, size: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !605, file: !606, line: 98, baseType: !219, size: 32, offset: 64)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !563, file: !564, line: 170, baseType: !611, size: 64, offset: 576)
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64)
!612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !194, line: 186, size: 8064, elements: !613)
!613 = !{!614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !688, !692, !696, !697, !698, !699, !700, !701, !702, !703, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767}
!614 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !612, file: !194, line: 187, baseType: !219, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !612, file: !194, line: 187, baseType: !219, size: 32, offset: 32)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !612, file: !194, line: 187, baseType: !219, size: 32, offset: 64)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !612, file: !194, line: 187, baseType: !219, size: 32, offset: 96)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "totvertsel", scope: !612, file: !194, line: 188, baseType: !219, size: 32, offset: 128)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "totedgesel", scope: !612, file: !194, line: 188, baseType: !219, size: 32, offset: 160)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "totfacesel", scope: !612, file: !194, line: 188, baseType: !219, size: 32, offset: 192)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "elem_index_dirty", scope: !612, file: !194, line: 193, baseType: !229, size: 8, offset: 224)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "elem_table_dirty", scope: !612, file: !194, line: 197, baseType: !229, size: 8, offset: 232)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "vpool", scope: !612, file: !194, line: 201, baseType: !242, size: 64, offset: 256)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "epool", scope: !612, file: !194, line: 201, baseType: !242, size: 64, offset: 320)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "lpool", scope: !612, file: !194, line: 201, baseType: !242, size: 64, offset: 384)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "fpool", scope: !612, file: !194, line: 201, baseType: !242, size: 64, offset: 448)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !612, file: !194, line: 208, baseType: !628, size: 64, offset: 512)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMVert", file: !194, line: 103, baseType: !631)
!631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMVert", file: !194, line: 90, size: 448, elements: !632)
!632 = !{!633, !642, !647, !648, !649}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !631, file: !194, line: 91, baseType: !634, size: 128)
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMHeader", file: !194, line: 82, baseType: !635)
!635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMHeader", file: !194, line: 64, size: 128, elements: !636)
!636 = !{!637, !638, !639, !640, !641}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !635, file: !194, line: 65, baseType: !233, size: 64)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !635, file: !194, line: 66, baseType: !219, size: 32, offset: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "htype", scope: !635, file: !194, line: 73, baseType: !229, size: 8, offset: 96)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "hflag", scope: !635, file: !194, line: 74, baseType: !229, size: 8, offset: 104)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "api_flag", scope: !635, file: !194, line: 80, baseType: !229, size: 8, offset: 112)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !631, file: !194, line: 92, baseType: !643, size: 64, offset: 128)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFlagLayer", file: !194, line: 180, size: 16, elements: !645)
!645 = !{!646}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !644, file: !194, line: 181, baseType: !302, size: 16)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !631, file: !194, line: 94, baseType: !422, size: 96, offset: 192)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !631, file: !194, line: 95, baseType: !422, size: 96, offset: 288)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !631, file: !194, line: 102, baseType: !650, size: 64, offset: 384)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEdge", file: !194, line: 110, size: 640, elements: !652)
!652 = !{!653, !654, !655, !657, !658, !681, !687}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !651, file: !194, line: 111, baseType: !634, size: 128)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !651, file: !194, line: 112, baseType: !643, size: 64, offset: 128)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !651, file: !194, line: 114, baseType: !656, size: 64, offset: 192)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !651, file: !194, line: 114, baseType: !656, size: 64, offset: 256)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !651, file: !194, line: 118, baseType: !659, size: 64, offset: 320)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMLoop", file: !194, line: 125, size: 576, elements: !661)
!661 = !{!662, !663, !664, !665, !677, !678, !679, !680}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !660, file: !194, line: 126, baseType: !634, size: 128)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !660, file: !194, line: 129, baseType: !656, size: 64, offset: 128)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !660, file: !194, line: 130, baseType: !650, size: 64, offset: 192)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !660, file: !194, line: 131, baseType: !666, size: 64, offset: 256)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFace", file: !194, line: 164, size: 448, elements: !668)
!668 = !{!669, !670, !671, !674, !675, !676}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !667, file: !194, line: 165, baseType: !634, size: 128)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !667, file: !194, line: 166, baseType: !643, size: 64, offset: 128)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !667, file: !194, line: 172, baseType: !672, size: 64, offset: 192)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!673 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMLoop", file: !194, line: 140, baseType: !660)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !667, file: !194, line: 174, baseType: !219, size: 32, offset: 256)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !667, file: !194, line: 175, baseType: !422, size: 96, offset: 288)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !667, file: !194, line: 176, baseType: !302, size: 16, offset: 384)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "radial_next", scope: !660, file: !194, line: 135, baseType: !659, size: 64, offset: 320)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "radial_prev", scope: !660, file: !194, line: 135, baseType: !659, size: 64, offset: 384)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !660, file: !194, line: 139, baseType: !659, size: 64, offset: 448)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !660, file: !194, line: 139, baseType: !659, size: 64, offset: 512)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "v1_disk_link", scope: !651, file: !194, line: 122, baseType: !682, size: 128, offset: 384)
!682 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMDiskLink", file: !194, line: 108, baseType: !683)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMDiskLink", file: !194, line: 106, size: 128, elements: !684)
!684 = !{!685, !686}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !683, file: !194, line: 107, baseType: !650, size: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !683, file: !194, line: 107, baseType: !650, size: 64, offset: 64)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "v2_disk_link", scope: !651, file: !194, line: 122, baseType: !682, size: 128, offset: 512)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "etable", scope: !612, file: !194, line: 209, baseType: !689, size: 64, offset: 576)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!691 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEdge", file: !194, line: 123, baseType: !651)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "ftable", scope: !612, file: !194, line: 210, baseType: !693, size: 64, offset: 640)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMFace", file: !194, line: 178, baseType: !667)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_tot", scope: !612, file: !194, line: 213, baseType: !219, size: 32, offset: 704)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "etable_tot", scope: !612, file: !194, line: 214, baseType: !219, size: 32, offset: 736)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "ftable_tot", scope: !612, file: !194, line: 215, baseType: !219, size: 32, offset: 768)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "vtoolflagpool", scope: !612, file: !194, line: 218, baseType: !242, size: 64, offset: 832)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "etoolflagpool", scope: !612, file: !194, line: 218, baseType: !242, size: 64, offset: 896)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "ftoolflagpool", scope: !612, file: !194, line: 218, baseType: !242, size: 64, offset: 960)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "stackdepth", scope: !612, file: !194, line: 220, baseType: !219, size: 32, offset: 1024)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "currentop", scope: !612, file: !194, line: 221, baseType: !704, size: 64, offset: 1088)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOperator", file: !16, line: 190, size: 10496, elements: !706)
!706 = !{!707, !742, !743, !749, !752, !753, !755}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "slots_in", scope: !705, file: !16, line: 191, baseType: !708, size: 5120)
!708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !709, size: 5120, elements: !740)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOpSlot", file: !16, line: 147, size: 320, elements: !710)
!710 = !{!711, !714, !716, !726, !727}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "slot_name", scope: !709, file: !16, line: 148, baseType: !712, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !229)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "slot_type", scope: !709, file: !16, line: 149, baseType: !715, size: 32, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotType", file: !16, line: 112, baseType: !15)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "slot_subtype", scope: !709, file: !16, line: 150, baseType: !717, size: 32, offset: 96)
!717 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Union", file: !16, line: 142, baseType: !718)
!718 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eBMOpSlotSubType_Union", file: !16, line: 138, size: 32, elements: !719)
!719 = !{!720, !722, !724}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !718, file: !16, line: 139, baseType: !721, size: 32)
!721 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Elem", file: !16, line: 122, baseType: !26)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !718, file: !16, line: 140, baseType: !723, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Ptr", file: !16, line: 136, baseType: !32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !718, file: !16, line: 141, baseType: !725, size: 32)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Map", file: !16, line: 130, baseType: !38)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !709, file: !16, line: 152, baseType: !219, size: 32, offset: 128)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !709, file: !16, line: 162, baseType: !728, size: 128, offset: 192)
!728 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !709, file: !16, line: 155, size: 128, elements: !729)
!729 = !{!730, !731, !732, !733, !734, !736}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !728, file: !16, line: 156, baseType: !219, size: 32)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !728, file: !16, line: 157, baseType: !313, size: 32)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !728, file: !16, line: 158, baseType: !233, size: 64)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !728, file: !16, line: 159, baseType: !422, size: 96)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !728, file: !16, line: 160, baseType: !735, size: 64)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !728, file: !16, line: 161, baseType: !737, size: 64)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !119, line: 48, baseType: !739)
!739 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !119, line: 48, flags: DIFlagFwdDecl)
!740 = !{!741}
!741 = !DISubrange(count: 16)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "slots_out", scope: !705, file: !16, line: 192, baseType: !708, size: 5120, offset: 5120)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !705, file: !16, line: 193, baseType: !744, size: 64, offset: 10240)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DISubroutineType(types: !746)
!746 = !{null, !747, !704}
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMesh", file: !194, line: 246, baseType: !612)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !705, file: !16, line: 194, baseType: !750, size: 64, offset: 10304)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !16, line: 194, flags: DIFlagFwdDecl)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !705, file: !16, line: 195, baseType: !219, size: 32, offset: 10368)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "type_flag", scope: !705, file: !16, line: 196, baseType: !754, size: 32, offset: 10400)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOpTypeFlag", file: !16, line: 188, baseType: !46)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !705, file: !16, line: 197, baseType: !219, size: 32, offset: 10432)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !612, file: !194, line: 223, baseType: !210, size: 1600, offset: 1152)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !612, file: !194, line: 223, baseType: !210, size: 1600, offset: 2752)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !612, file: !194, line: 223, baseType: !210, size: 1600, offset: 4352)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !612, file: !194, line: 223, baseType: !210, size: 1600, offset: 5952)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !612, file: !194, line: 233, baseType: !302, size: 16, offset: 7552)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !612, file: !194, line: 236, baseType: !219, size: 32, offset: 7584)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !612, file: !194, line: 238, baseType: !219, size: 32, offset: 7616)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "totflags", scope: !612, file: !194, line: 238, baseType: !219, size: 32, offset: 7648)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "selected", scope: !612, file: !194, line: 239, baseType: !375, size: 128, offset: 7680)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !612, file: !194, line: 241, baseType: !694, size: 64, offset: 7808)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "errorstack", scope: !612, file: !194, line: 243, baseType: !375, size: 128, offset: 7872)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "py_handle", scope: !612, file: !194, line: 245, baseType: !233, size: 64, offset: 8000)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "cd_vert_node_offset", scope: !563, file: !564, line: 171, baseType: !219, size: 32, offset: 640)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "cd_face_node_offset", scope: !563, file: !564, line: 172, baseType: !219, size: 32, offset: 672)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "bm_smooth_shading", scope: !563, file: !564, line: 173, baseType: !309, size: 8, offset: 704)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "bm_log", scope: !563, file: !564, line: 175, baseType: !772, size: 64, offset: 768)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!773 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMLog", file: !156, line: 44, flags: DIFlagFwdDecl)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "pbvh", scope: !563, file: !564, line: 178, baseType: !775, size: 64, offset: 832)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !156, line: 41, flags: DIFlagFwdDecl)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "show_diffuse_color", scope: !563, file: !564, line: 179, baseType: !309, size: 8, offset: 896)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers_active", scope: !563, file: !564, line: 182, baseType: !309, size: 8, offset: 904)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "orig_cos", scope: !563, file: !564, line: 183, baseType: !596, size: 64, offset: 960)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "deform_cos", scope: !563, file: !564, line: 184, baseType: !596, size: 64, offset: 1024)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "deform_imats", scope: !563, file: !564, line: 185, baseType: !782, size: 64, offset: 1088)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !313, size: 288, elements: !784)
!784 = !{!424, !424}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "partial_redraw", scope: !563, file: !564, line: 188, baseType: !309, size: 8, offset: 1152)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "texcache_side", scope: !563, file: !564, line: 191, baseType: !5, size: 32, offset: 1184)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "texcache", scope: !563, file: !564, line: 191, baseType: !788, size: 64, offset: 1216)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "texcache_actual", scope: !563, file: !564, line: 191, baseType: !5, size: 32, offset: 1280)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "tex_pool", scope: !563, file: !564, line: 192, baseType: !791, size: 64, offset: 1344)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!792 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !564, line: 61, flags: DIFlagFwdDecl)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "layer_co", scope: !563, file: !564, line: 195, baseType: !596, size: 64, offset: 1408)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "stroke", scope: !563, file: !564, line: 197, baseType: !795, size: 64, offset: 1472)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptStroke", file: !564, line: 197, flags: DIFlagFwdDecl)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !563, file: !564, line: 198, baseType: !798, size: 64, offset: 1536)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrokeCache", file: !564, line: 59, flags: DIFlagFwdDecl)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "last_stroke_valid", scope: !563, file: !564, line: 201, baseType: !309, size: 8, offset: 1600)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "last_stroke", scope: !563, file: !564, line: 202, baseType: !422, size: 96, offset: 1632)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "average_stroke_accum", scope: !563, file: !564, line: 204, baseType: !422, size: 96, offset: 1728)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "average_stroke_counter", scope: !563, file: !564, line: 205, baseType: !219, size: 32, offset: 1824)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !557, file: !132, line: 121, baseType: !302, size: 16, offset: 1088)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !557, file: !132, line: 121, baseType: !302, size: 16, offset: 1104)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !557, file: !132, line: 122, baseType: !219, size: 32, offset: 1120)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !557, file: !132, line: 122, baseType: !219, size: 32, offset: 1152)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !557, file: !132, line: 122, baseType: !219, size: 32, offset: 1184)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !557, file: !132, line: 123, baseType: !228, size: 512, offset: 1216)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !557, file: !132, line: 124, baseType: !556, size: 64, offset: 1728)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !557, file: !132, line: 124, baseType: !556, size: 64, offset: 1792)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !557, file: !132, line: 127, baseType: !556, size: 64, offset: 1856)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !557, file: !132, line: 127, baseType: !556, size: 64, offset: 1920)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !557, file: !132, line: 127, baseType: !556, size: 64, offset: 1984)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !557, file: !132, line: 128, baseType: !816, size: 64, offset: 2048)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!817 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !388, line: 46, flags: DIFlagFwdDecl)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !557, file: !132, line: 130, baseType: !819, size: 64, offset: 2112)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !132, line: 97, size: 832, elements: !821)
!821 = !{!822, !826, !827}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !820, file: !132, line: 98, baseType: !823, size: 768)
!823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !313, size: 768, elements: !824)
!824 = !{!825, !424}
!825 = !DISubrange(count: 8)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !820, file: !132, line: 99, baseType: !219, size: 32, offset: 768)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !820, file: !132, line: 99, baseType: !219, size: 32, offset: 800)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !557, file: !132, line: 131, baseType: !829, size: 64, offset: 2176)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !831, line: 486, size: 1600, elements: !832)
!831 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!832 = !{!833, !834, !835, !836, !837, !838, !839, !840, !841}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !830, file: !831, line: 487, baseType: !324, size: 960)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !830, file: !831, line: 489, baseType: !375, size: 128, offset: 960)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !830, file: !831, line: 490, baseType: !375, size: 128, offset: 1088)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !830, file: !831, line: 491, baseType: !375, size: 128, offset: 1216)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !830, file: !831, line: 492, baseType: !375, size: 128, offset: 1344)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !830, file: !831, line: 494, baseType: !219, size: 32, offset: 1472)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !830, file: !831, line: 495, baseType: !219, size: 32, offset: 1504)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !830, file: !831, line: 497, baseType: !219, size: 32, offset: 1536)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !830, file: !831, line: 498, baseType: !219, size: 32, offset: 1568)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !557, file: !132, line: 132, baseType: !829, size: 64, offset: 2240)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !557, file: !132, line: 133, baseType: !844, size: 64, offset: 2304)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !831, line: 334, size: 1728, elements: !846)
!846 = !{!847, !848, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !882}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !845, file: !831, line: 335, baseType: !375, size: 128)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !845, file: !831, line: 336, baseType: !849, size: 64, offset: 128)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !845, file: !831, line: 338, baseType: !302, size: 16, offset: 192)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !845, file: !831, line: 338, baseType: !302, size: 16, offset: 208)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !845, file: !831, line: 339, baseType: !5, size: 32, offset: 224)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !845, file: !831, line: 340, baseType: !219, size: 32, offset: 256)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !845, file: !831, line: 342, baseType: !313, size: 32, offset: 288)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !845, file: !831, line: 343, baseType: !422, size: 96, offset: 320)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !845, file: !831, line: 344, baseType: !422, size: 96, offset: 416)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !845, file: !831, line: 347, baseType: !375, size: 128, offset: 512)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !845, file: !831, line: 349, baseType: !219, size: 32, offset: 640)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !845, file: !831, line: 350, baseType: !219, size: 32, offset: 672)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !845, file: !831, line: 351, baseType: !233, size: 64, offset: 704)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !845, file: !831, line: 352, baseType: !233, size: 64, offset: 768)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !845, file: !831, line: 354, baseType: !863, size: 384, offset: 832)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !831, line: 116, baseType: !864)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !831, line: 94, size: 384, elements: !865)
!865 = !{!866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !864, file: !831, line: 96, baseType: !219, size: 32)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !864, file: !831, line: 96, baseType: !219, size: 32, offset: 32)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !864, file: !831, line: 97, baseType: !219, size: 32, offset: 64)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !864, file: !831, line: 97, baseType: !219, size: 32, offset: 96)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !864, file: !831, line: 99, baseType: !302, size: 16, offset: 128)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !864, file: !831, line: 100, baseType: !302, size: 16, offset: 144)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !864, file: !831, line: 102, baseType: !302, size: 16, offset: 160)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !864, file: !831, line: 105, baseType: !302, size: 16, offset: 176)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !864, file: !831, line: 108, baseType: !302, size: 16, offset: 192)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !864, file: !831, line: 109, baseType: !302, size: 16, offset: 208)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !864, file: !831, line: 111, baseType: !302, size: 16, offset: 224)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !864, file: !831, line: 112, baseType: !302, size: 16, offset: 240)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !864, file: !831, line: 114, baseType: !219, size: 32, offset: 256)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !864, file: !831, line: 114, baseType: !219, size: 32, offset: 288)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !864, file: !831, line: 115, baseType: !219, size: 32, offset: 320)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !864, file: !831, line: 115, baseType: !219, size: 32, offset: 352)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !845, file: !831, line: 355, baseType: !228, size: 512, offset: 1216)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !557, file: !132, line: 134, baseType: !233, size: 64, offset: 2368)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !557, file: !132, line: 136, baseType: !885, size: 64, offset: 2432)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !132, line: 58, flags: DIFlagFwdDecl)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !557, file: !132, line: 138, baseType: !863, size: 384, offset: 2496)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !557, file: !132, line: 139, baseType: !889, size: 64, offset: 2880)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64)
!890 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !831, line: 80, baseType: !891)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !831, line: 72, size: 192, elements: !892)
!892 = !{!893, !900, !901, !902, !903}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !891, file: !831, line: 73, baseType: !894, size: 64)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!895 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !831, line: 59, baseType: !896)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !831, line: 56, size: 128, elements: !897)
!897 = !{!898, !899}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !896, file: !831, line: 57, baseType: !422, size: 96)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !896, file: !831, line: 58, baseType: !219, size: 32, offset: 96)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !891, file: !831, line: 74, baseType: !219, size: 32, offset: 64)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !891, file: !831, line: 76, baseType: !219, size: 32, offset: 96)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !891, file: !831, line: 77, baseType: !219, size: 32, offset: 128)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !891, file: !831, line: 79, baseType: !219, size: 32, offset: 160)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !557, file: !132, line: 141, baseType: !375, size: 128, offset: 2944)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !557, file: !132, line: 142, baseType: !375, size: 128, offset: 3072)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !557, file: !132, line: 143, baseType: !375, size: 128, offset: 3200)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !557, file: !132, line: 144, baseType: !375, size: 128, offset: 3328)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !557, file: !132, line: 146, baseType: !219, size: 32, offset: 3456)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !557, file: !132, line: 147, baseType: !219, size: 32, offset: 3488)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !557, file: !132, line: 150, baseType: !318, size: 64, offset: 3520)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !557, file: !132, line: 151, baseType: !912, size: 64, offset: 3584)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !557, file: !132, line: 152, baseType: !219, size: 32, offset: 3648)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !557, file: !132, line: 153, baseType: !219, size: 32, offset: 3680)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !557, file: !132, line: 156, baseType: !422, size: 96, offset: 3712)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !557, file: !132, line: 156, baseType: !422, size: 96, offset: 3808)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !557, file: !132, line: 156, baseType: !422, size: 96, offset: 3904)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !557, file: !132, line: 157, baseType: !422, size: 96, offset: 4000)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !557, file: !132, line: 158, baseType: !422, size: 96, offset: 4096)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !557, file: !132, line: 159, baseType: !422, size: 96, offset: 4192)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !557, file: !132, line: 160, baseType: !422, size: 96, offset: 4288)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !557, file: !132, line: 160, baseType: !422, size: 96, offset: 4384)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !557, file: !132, line: 161, baseType: !504, size: 128, offset: 4480)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !557, file: !132, line: 161, baseType: !504, size: 128, offset: 4608)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !557, file: !132, line: 162, baseType: !422, size: 96, offset: 4736)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !557, file: !132, line: 162, baseType: !422, size: 96, offset: 4832)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !557, file: !132, line: 163, baseType: !313, size: 32, offset: 4928)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !557, file: !132, line: 163, baseType: !313, size: 32, offset: 4960)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !557, file: !132, line: 164, baseType: !930, size: 512, offset: 4992)
!930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !313, size: 512, elements: !931)
!931 = !{!506, !506}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !557, file: !132, line: 165, baseType: !930, size: 512, offset: 5504)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !557, file: !132, line: 166, baseType: !930, size: 512, offset: 6016)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !557, file: !132, line: 167, baseType: !930, size: 512, offset: 6528)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !557, file: !132, line: 176, baseType: !930, size: 512, offset: 7040)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !557, file: !132, line: 178, baseType: !5, size: 32, offset: 7552)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !557, file: !132, line: 180, baseType: !302, size: 16, offset: 7584)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !557, file: !132, line: 181, baseType: !302, size: 16, offset: 7600)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !557, file: !132, line: 183, baseType: !302, size: 16, offset: 7616)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !557, file: !132, line: 183, baseType: !302, size: 16, offset: 7632)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !557, file: !132, line: 184, baseType: !302, size: 16, offset: 7648)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !557, file: !132, line: 184, baseType: !302, size: 16, offset: 7664)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !557, file: !132, line: 185, baseType: !302, size: 16, offset: 7680)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !557, file: !132, line: 186, baseType: !302, size: 16, offset: 7696)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !557, file: !132, line: 187, baseType: !302, size: 16, offset: 7712)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !557, file: !132, line: 188, baseType: !229, size: 8, offset: 7728)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !557, file: !132, line: 189, baseType: !229, size: 8, offset: 7736)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !557, file: !132, line: 192, baseType: !219, size: 32, offset: 7744)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !557, file: !132, line: 192, baseType: !219, size: 32, offset: 7776)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !557, file: !132, line: 192, baseType: !219, size: 32, offset: 7808)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !557, file: !132, line: 192, baseType: !219, size: 32, offset: 7840)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !557, file: !132, line: 194, baseType: !219, size: 32, offset: 7872)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !557, file: !132, line: 202, baseType: !313, size: 32, offset: 7904)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !557, file: !132, line: 202, baseType: !313, size: 32, offset: 7936)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !557, file: !132, line: 202, baseType: !313, size: 32, offset: 7968)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !557, file: !132, line: 211, baseType: !313, size: 32, offset: 8000)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !557, file: !132, line: 212, baseType: !313, size: 32, offset: 8032)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !557, file: !132, line: 213, baseType: !313, size: 32, offset: 8064)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !557, file: !132, line: 214, baseType: !313, size: 32, offset: 8096)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !557, file: !132, line: 215, baseType: !313, size: 32, offset: 8128)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !557, file: !132, line: 216, baseType: !313, size: 32, offset: 8160)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !557, file: !132, line: 219, baseType: !313, size: 32, offset: 8192)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !557, file: !132, line: 220, baseType: !313, size: 32, offset: 8224)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !557, file: !132, line: 221, baseType: !313, size: 32, offset: 8256)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !557, file: !132, line: 224, baseType: !966, size: 16, offset: 8288)
!966 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !557, file: !132, line: 224, baseType: !966, size: 16, offset: 8304)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !557, file: !132, line: 226, baseType: !302, size: 16, offset: 8320)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !557, file: !132, line: 228, baseType: !229, size: 8, offset: 8336)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !557, file: !132, line: 229, baseType: !229, size: 8, offset: 8344)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !557, file: !132, line: 231, baseType: !302, size: 16, offset: 8352)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !557, file: !132, line: 232, baseType: !229, size: 8, offset: 8368)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !557, file: !132, line: 233, baseType: !229, size: 8, offset: 8376)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !557, file: !132, line: 234, baseType: !313, size: 32, offset: 8384)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !557, file: !132, line: 235, baseType: !313, size: 32, offset: 8416)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !557, file: !132, line: 237, baseType: !375, size: 128, offset: 8448)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !557, file: !132, line: 238, baseType: !375, size: 128, offset: 8576)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !557, file: !132, line: 239, baseType: !375, size: 128, offset: 8704)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !557, file: !132, line: 240, baseType: !375, size: 128, offset: 8832)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !557, file: !132, line: 242, baseType: !313, size: 32, offset: 8960)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !557, file: !132, line: 244, baseType: !302, size: 16, offset: 8992)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !557, file: !132, line: 245, baseType: !966, size: 16, offset: 9008)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !557, file: !132, line: 246, baseType: !504, size: 128, offset: 9024)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !557, file: !132, line: 248, baseType: !219, size: 32, offset: 9152)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !557, file: !132, line: 249, baseType: !219, size: 32, offset: 9184)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !557, file: !132, line: 251, baseType: !987, size: 64, offset: 9216)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !132, line: 251, flags: DIFlagFwdDecl)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !557, file: !132, line: 253, baseType: !229, size: 8, offset: 9280)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !557, file: !132, line: 254, baseType: !229, size: 8, offset: 9288)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !557, file: !132, line: 255, baseType: !302, size: 16, offset: 9296)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !557, file: !132, line: 256, baseType: !422, size: 96, offset: 9312)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !557, file: !132, line: 258, baseType: !375, size: 128, offset: 9408)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !557, file: !132, line: 259, baseType: !375, size: 128, offset: 9536)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !557, file: !132, line: 260, baseType: !375, size: 128, offset: 9664)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !557, file: !132, line: 261, baseType: !375, size: 128, offset: 9792)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !557, file: !132, line: 263, baseType: !998, size: 64, offset: 9920)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !132, line: 52, flags: DIFlagFwdDecl)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !557, file: !132, line: 264, baseType: !1001, size: 64, offset: 9984)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !132, line: 53, flags: DIFlagFwdDecl)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !557, file: !132, line: 265, baseType: !1004, size: 64, offset: 10048)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !321, line: 46, flags: DIFlagFwdDecl)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !557, file: !132, line: 267, baseType: !229, size: 8, offset: 10112)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !557, file: !132, line: 268, baseType: !229, size: 8, offset: 10120)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !557, file: !132, line: 269, baseType: !302, size: 16, offset: 10128)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !557, file: !132, line: 270, baseType: !313, size: 32, offset: 10144)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !557, file: !132, line: 272, baseType: !1011, size: 64, offset: 10176)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1012 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !132, line: 54, flags: DIFlagFwdDecl)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !557, file: !132, line: 275, baseType: !1014, size: 64, offset: 10240)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !1016, line: 49, size: 448, elements: !1017)
!1016 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_curve.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1017 = !{!1018, !1019, !1020, !1021}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !1015, file: !1016, line: 50, baseType: !375, size: 128)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "bev", scope: !1015, file: !1016, line: 51, baseType: !375, size: 128, offset: 128)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "deformed_nurbs", scope: !1015, file: !1016, line: 52, baseType: !375, size: 128, offset: 256)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !1015, file: !1016, line: 53, baseType: !1022, size: 64, offset: 384)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Path", file: !1024, line: 65, size: 128, elements: !1025)
!1024 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1025 = !{!1026, !1034, !1035}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1023, file: !1024, line: 66, baseType: !1027, size: 64)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PathPoint", file: !1024, line: 56, size: 320, elements: !1029)
!1029 = !{!1030, !1031, !1032, !1033}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1028, file: !1024, line: 57, baseType: !504, size: 128)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !1028, file: !1024, line: 58, baseType: !504, size: 128, offset: 128)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1028, file: !1024, line: 59, baseType: !313, size: 32, offset: 256)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1028, file: !1024, line: 59, baseType: !313, size: 32, offset: 288)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1023, file: !1024, line: 67, baseType: !219, size: 32, offset: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "totdist", scope: !1023, file: !1024, line: 68, baseType: !313, size: 32, offset: 96)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !557, file: !132, line: 277, baseType: !1037, size: 64, offset: 10304)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !557, file: !132, line: 277, baseType: !1037, size: 64, offset: 10368)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !557, file: !132, line: 278, baseType: !1040, size: 64, offset: 10432)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1041, line: 27, baseType: !1042)
!1041 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1043, line: 45, baseType: !1044)
!1043 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1044 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !557, file: !132, line: 279, baseType: !1040, size: 64, offset: 10496)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !557, file: !132, line: 280, baseType: !5, size: 32, offset: 10560)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !557, file: !132, line: 281, baseType: !5, size: 32, offset: 10592)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !557, file: !132, line: 283, baseType: !375, size: 128, offset: 10624)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !557, file: !132, line: 284, baseType: !375, size: 128, offset: 10752)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !557, file: !132, line: 285, baseType: !1051, size: 64, offset: 10880)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !557, file: !132, line: 287, baseType: !1053, size: 64, offset: 10944)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64)
!1054 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !132, line: 59, flags: DIFlagFwdDecl)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !557, file: !132, line: 288, baseType: !1056, size: 64, offset: 11008)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !132, line: 288, flags: DIFlagFwdDecl)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !557, file: !132, line: 290, baseType: !1059, size: 64, offset: 11072)
!1059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !313, size: 64, elements: !1060)
!1060 = !{!1061}
!1061 = !DISubrange(count: 2)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !557, file: !132, line: 291, baseType: !1063, size: 64, offset: 11136)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !1065, line: 65, baseType: !1066)
!1065 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !1065, line: 50, size: 320, elements: !1067)
!1067 = !{!1068, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1066, file: !1065, line: 51, baseType: !1069, size: 64)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !4, line: 89, flags: DIFlagFwdDecl)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1066, file: !1065, line: 53, baseType: !219, size: 32, offset: 64)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1066, file: !1065, line: 54, baseType: !219, size: 32, offset: 96)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1066, file: !1065, line: 55, baseType: !219, size: 32, offset: 128)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1066, file: !1065, line: 55, baseType: !219, size: 32, offset: 160)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1066, file: !1065, line: 56, baseType: !229, size: 8, offset: 192)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !1066, file: !1065, line: 56, baseType: !229, size: 8, offset: 200)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1066, file: !1065, line: 57, baseType: !229, size: 8, offset: 208)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1066, file: !1065, line: 57, baseType: !229, size: 8, offset: 216)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !1066, file: !1065, line: 59, baseType: !302, size: 16, offset: 224)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1066, file: !1065, line: 59, baseType: !302, size: 16, offset: 240)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1066, file: !1065, line: 59, baseType: !302, size: 16, offset: 256)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1066, file: !1065, line: 61, baseType: !302, size: 16, offset: 272)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1066, file: !1065, line: 63, baseType: !219, size: 32, offset: 288)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !557, file: !132, line: 293, baseType: !375, size: 128, offset: 11200)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !557, file: !132, line: 294, baseType: !1086, size: 64, offset: 11328)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !132, line: 113, baseType: !1088)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !132, line: 108, size: 256, elements: !1089)
!1089 = !{!1090, !1092, !1093, !1094, !1095}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1088, file: !132, line: 109, baseType: !1091, size: 64)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1088, file: !132, line: 109, baseType: !1091, size: 64, offset: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1088, file: !132, line: 110, baseType: !556, size: 64, offset: 128)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1088, file: !132, line: 111, baseType: !219, size: 32, offset: 192)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1088, file: !132, line: 112, baseType: !313, size: 32, offset: 224)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !549, file: !388, line: 61, baseType: !1097, size: 64, offset: 128)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !388, line: 202, size: 3328, elements: !1099)
!1099 = !{!1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1155, !1156, !1236, !1237, !1263, !1264, !1339, !1360, !1368, !1369}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1098, file: !388, line: 203, baseType: !324, size: 960)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1098, file: !388, line: 204, baseType: !386, size: 64, offset: 960)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !1098, file: !388, line: 206, baseType: !313, size: 32, offset: 1024)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !1098, file: !388, line: 206, baseType: !313, size: 32, offset: 1056)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !1098, file: !388, line: 207, baseType: !313, size: 32, offset: 1088)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !1098, file: !388, line: 207, baseType: !313, size: 32, offset: 1120)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !1098, file: !388, line: 207, baseType: !313, size: 32, offset: 1152)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !1098, file: !388, line: 207, baseType: !313, size: 32, offset: 1184)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !1098, file: !388, line: 207, baseType: !313, size: 32, offset: 1216)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !1098, file: !388, line: 207, baseType: !313, size: 32, offset: 1248)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !1098, file: !388, line: 208, baseType: !313, size: 32, offset: 1280)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1098, file: !388, line: 208, baseType: !313, size: 32, offset: 1312)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !1098, file: !388, line: 211, baseType: !313, size: 32, offset: 1344)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !1098, file: !388, line: 211, baseType: !313, size: 32, offset: 1376)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !1098, file: !388, line: 211, baseType: !313, size: 32, offset: 1408)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !1098, file: !388, line: 211, baseType: !313, size: 32, offset: 1440)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !1098, file: !388, line: 211, baseType: !313, size: 32, offset: 1472)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !1098, file: !388, line: 214, baseType: !313, size: 32, offset: 1504)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !1098, file: !388, line: 214, baseType: !313, size: 32, offset: 1536)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !1098, file: !388, line: 217, baseType: !313, size: 32, offset: 1568)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !1098, file: !388, line: 218, baseType: !313, size: 32, offset: 1600)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !1098, file: !388, line: 219, baseType: !313, size: 32, offset: 1632)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !1098, file: !388, line: 220, baseType: !313, size: 32, offset: 1664)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !1098, file: !388, line: 221, baseType: !313, size: 32, offset: 1696)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !1098, file: !388, line: 222, baseType: !302, size: 16, offset: 1728)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !1098, file: !388, line: 222, baseType: !302, size: 16, offset: 1744)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !1098, file: !388, line: 224, baseType: !302, size: 16, offset: 1760)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !1098, file: !388, line: 224, baseType: !302, size: 16, offset: 1776)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !1098, file: !388, line: 227, baseType: !302, size: 16, offset: 1792)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !1098, file: !388, line: 227, baseType: !302, size: 16, offset: 1808)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !1098, file: !388, line: 229, baseType: !302, size: 16, offset: 1824)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1098, file: !388, line: 229, baseType: !302, size: 16, offset: 1840)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1098, file: !388, line: 230, baseType: !302, size: 16, offset: 1856)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1098, file: !388, line: 230, baseType: !302, size: 16, offset: 1872)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !1098, file: !388, line: 232, baseType: !313, size: 32, offset: 1888)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !1098, file: !388, line: 232, baseType: !313, size: 32, offset: 1920)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !1098, file: !388, line: 232, baseType: !313, size: 32, offset: 1952)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !1098, file: !388, line: 232, baseType: !313, size: 32, offset: 1984)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !1098, file: !388, line: 233, baseType: !219, size: 32, offset: 2016)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !1098, file: !388, line: 234, baseType: !219, size: 32, offset: 2048)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !1098, file: !388, line: 235, baseType: !302, size: 16, offset: 2080)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !1098, file: !388, line: 235, baseType: !302, size: 16, offset: 2096)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1098, file: !388, line: 236, baseType: !302, size: 16, offset: 2112)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1098, file: !388, line: 239, baseType: !302, size: 16, offset: 2128)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1098, file: !388, line: 240, baseType: !219, size: 32, offset: 2144)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1098, file: !388, line: 241, baseType: !219, size: 32, offset: 2176)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1098, file: !388, line: 241, baseType: !219, size: 32, offset: 2208)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1098, file: !388, line: 241, baseType: !219, size: 32, offset: 2240)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !1098, file: !388, line: 243, baseType: !313, size: 32, offset: 2272)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !1098, file: !388, line: 243, baseType: !313, size: 32, offset: 2304)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1098, file: !388, line: 244, baseType: !313, size: 32, offset: 2336)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !1098, file: !388, line: 246, baseType: !1066, size: 320, offset: 2368)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1098, file: !388, line: 248, baseType: !1153, size: 64, offset: 2688)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1154 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !388, line: 248, flags: DIFlagFwdDecl)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1098, file: !388, line: 249, baseType: !816, size: 64, offset: 2752)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1098, file: !388, line: 250, baseType: !1157, size: 64, offset: 2816)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !1065, line: 77, size: 15424, elements: !1159)
!1159 = !{!1160, !1161, !1162, !1165, !1168, !1171, !1174, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1225, !1226, !1230}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1158, file: !1065, line: 78, baseType: !324, size: 960)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1158, file: !1065, line: 80, baseType: !250, size: 8192, offset: 960)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1158, file: !1065, line: 82, baseType: !1163, size: 64, offset: 9152)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64)
!1164 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !1065, line: 43, flags: DIFlagFwdDecl)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1158, file: !1065, line: 83, baseType: !1166, size: 64, offset: 9216)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !325, line: 46, flags: DIFlagFwdDecl)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1158, file: !1065, line: 86, baseType: !1169, size: 64, offset: 9280)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64)
!1170 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !1065, line: 41, flags: DIFlagFwdDecl)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1158, file: !1065, line: 87, baseType: !1172, size: 64, offset: 9344)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !1065, line: 44, flags: DIFlagFwdDecl)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1158, file: !1065, line: 89, baseType: !1175, size: 512, offset: 9408)
!1175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1172, size: 512, elements: !1176)
!1176 = !{!825}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1158, file: !1065, line: 90, baseType: !302, size: 16, offset: 9920)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1158, file: !1065, line: 90, baseType: !302, size: 16, offset: 9936)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1158, file: !1065, line: 92, baseType: !302, size: 16, offset: 9952)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1158, file: !1065, line: 92, baseType: !302, size: 16, offset: 9968)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1158, file: !1065, line: 93, baseType: !302, size: 16, offset: 9984)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1158, file: !1065, line: 93, baseType: !302, size: 16, offset: 10000)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1158, file: !1065, line: 94, baseType: !219, size: 32, offset: 10016)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1158, file: !1065, line: 97, baseType: !302, size: 16, offset: 10048)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1158, file: !1065, line: 97, baseType: !302, size: 16, offset: 10064)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1158, file: !1065, line: 98, baseType: !302, size: 16, offset: 10080)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1158, file: !1065, line: 98, baseType: !302, size: 16, offset: 10096)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1158, file: !1065, line: 99, baseType: !302, size: 16, offset: 10112)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1158, file: !1065, line: 99, baseType: !302, size: 16, offset: 10128)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1158, file: !1065, line: 100, baseType: !5, size: 32, offset: 10144)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1158, file: !1065, line: 101, baseType: !788, size: 64, offset: 10176)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1158, file: !1065, line: 103, baseType: !346, size: 64, offset: 10240)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1158, file: !1065, line: 104, baseType: !1194, size: 64, offset: 10304)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !325, line: 159, size: 448, elements: !1196)
!1196 = !{!1197, !1199, !1200, !1202, !1203, !1205}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1195, file: !325, line: 161, baseType: !1198, size: 64)
!1198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !1060)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1195, file: !325, line: 162, baseType: !1198, size: 64, offset: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1195, file: !325, line: 163, baseType: !1201, size: 32, offset: 128)
!1201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !302, size: 32, elements: !1060)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1195, file: !325, line: 164, baseType: !1201, size: 32, offset: 160)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1195, file: !325, line: 165, baseType: !1204, size: 128, offset: 192)
!1204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !788, size: 128, elements: !1060)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1195, file: !325, line: 166, baseType: !1206, size: 128, offset: 320)
!1206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1166, size: 128, elements: !1060)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1158, file: !1065, line: 107, baseType: !313, size: 32, offset: 10368)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1158, file: !1065, line: 108, baseType: !219, size: 32, offset: 10400)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1158, file: !1065, line: 109, baseType: !302, size: 16, offset: 10432)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1158, file: !1065, line: 110, baseType: !302, size: 16, offset: 10448)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1158, file: !1065, line: 113, baseType: !219, size: 32, offset: 10464)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1158, file: !1065, line: 113, baseType: !219, size: 32, offset: 10496)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1158, file: !1065, line: 114, baseType: !229, size: 8, offset: 10528)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1158, file: !1065, line: 114, baseType: !229, size: 8, offset: 10536)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1158, file: !1065, line: 115, baseType: !302, size: 16, offset: 10544)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1158, file: !1065, line: 116, baseType: !504, size: 128, offset: 10560)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1158, file: !1065, line: 119, baseType: !313, size: 32, offset: 10688)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1158, file: !1065, line: 119, baseType: !313, size: 32, offset: 10720)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1158, file: !1065, line: 122, baseType: !1220, size: 512, offset: 10752)
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1221, line: 182, baseType: !1222)
!1221 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1221, line: 180, size: 512, elements: !1223)
!1223 = !{!1224}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1222, file: !1221, line: 181, baseType: !228, size: 512)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1158, file: !1065, line: 123, baseType: !229, size: 8, offset: 11264)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1158, file: !1065, line: 125, baseType: !1227, size: 56, offset: 11272)
!1227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !229, size: 56, elements: !1228)
!1228 = !{!1229}
!1229 = !DISubrange(count: 7)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1158, file: !1065, line: 126, baseType: !1231, size: 4096, offset: 11328)
!1231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1232, size: 4096, elements: !1176)
!1232 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !1065, line: 69, baseType: !1233)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !1065, line: 67, size: 512, elements: !1234)
!1234 = !{!1235}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1233, file: !1065, line: 68, baseType: !228, size: 512)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1098, file: !388, line: 251, baseType: !512, size: 64, offset: 2880)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !1098, file: !388, line: 252, baseType: !1238, size: 64, offset: 2944)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !388, line: 122, size: 1600, elements: !1240)
!1240 = !{!1241, !1242, !1243, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1239, file: !388, line: 123, baseType: !556, size: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1239, file: !388, line: 124, baseType: !1157, size: 64, offset: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1239, file: !388, line: 125, baseType: !1244, size: 384, offset: 128)
!1244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1245, size: 384, elements: !1247)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64)
!1246 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !1221, line: 136, flags: DIFlagFwdDecl)
!1247 = !{!1248}
!1248 = !DISubrange(count: 6)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1239, file: !388, line: 126, baseType: !930, size: 512, offset: 512)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1239, file: !388, line: 127, baseType: !783, size: 288, offset: 1024)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1239, file: !388, line: 128, baseType: !302, size: 16, offset: 1312)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1239, file: !388, line: 128, baseType: !302, size: 16, offset: 1328)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1239, file: !388, line: 129, baseType: !313, size: 32, offset: 1344)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1239, file: !388, line: 129, baseType: !313, size: 32, offset: 1376)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1239, file: !388, line: 130, baseType: !313, size: 32, offset: 1408)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1239, file: !388, line: 131, baseType: !5, size: 32, offset: 1440)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1239, file: !388, line: 132, baseType: !302, size: 16, offset: 1472)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1239, file: !388, line: 132, baseType: !302, size: 16, offset: 1488)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1239, file: !388, line: 133, baseType: !219, size: 32, offset: 1504)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1239, file: !388, line: 133, baseType: !219, size: 32, offset: 1536)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1239, file: !388, line: 134, baseType: !302, size: 16, offset: 1568)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1239, file: !388, line: 134, baseType: !302, size: 16, offset: 1584)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1098, file: !388, line: 253, baseType: !1194, size: 64, offset: 3008)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1098, file: !388, line: 254, baseType: !1265, size: 64, offset: 3072)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64)
!1266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !388, line: 137, size: 832, elements: !1267)
!1267 = !{!1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1266, file: !388, line: 138, baseType: !302, size: 16)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1266, file: !388, line: 140, baseType: !302, size: 16, offset: 16)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1266, file: !388, line: 141, baseType: !313, size: 32, offset: 32)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1266, file: !388, line: 142, baseType: !313, size: 32, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1266, file: !388, line: 143, baseType: !302, size: 16, offset: 96)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1266, file: !388, line: 144, baseType: !302, size: 16, offset: 112)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1266, file: !388, line: 145, baseType: !219, size: 32, offset: 128)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1266, file: !388, line: 147, baseType: !219, size: 32, offset: 160)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1266, file: !388, line: 149, baseType: !556, size: 64, offset: 192)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1266, file: !388, line: 150, baseType: !219, size: 32, offset: 256)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1266, file: !388, line: 151, baseType: !302, size: 16, offset: 288)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1266, file: !388, line: 152, baseType: !302, size: 16, offset: 304)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1266, file: !388, line: 154, baseType: !233, size: 64, offset: 320)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1266, file: !388, line: 155, baseType: !601, size: 64, offset: 384)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1266, file: !388, line: 157, baseType: !313, size: 32, offset: 448)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1266, file: !388, line: 158, baseType: !302, size: 16, offset: 480)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1266, file: !388, line: 159, baseType: !302, size: 16, offset: 496)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1266, file: !388, line: 160, baseType: !302, size: 16, offset: 512)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1266, file: !388, line: 161, baseType: !575, size: 48, offset: 528)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1266, file: !388, line: 162, baseType: !313, size: 32, offset: 576)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1266, file: !388, line: 164, baseType: !313, size: 32, offset: 608)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1266, file: !388, line: 164, baseType: !313, size: 32, offset: 640)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1266, file: !388, line: 164, baseType: !313, size: 32, offset: 672)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1266, file: !388, line: 165, baseType: !512, size: 64, offset: 704)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1266, file: !388, line: 167, baseType: !1293, size: 64, offset: 768)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1221, line: 72, size: 3072, elements: !1295)
!1295 = !{!1296, !1297, !1298, !1299, !1300, !1309, !1310, !1335, !1336, !1337, !1338}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1294, file: !1221, line: 73, baseType: !219, size: 32)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1294, file: !1221, line: 73, baseType: !219, size: 32, offset: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1294, file: !1221, line: 74, baseType: !219, size: 32, offset: 64)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1294, file: !1221, line: 75, baseType: !219, size: 32, offset: 96)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1294, file: !1221, line: 77, baseType: !1301, size: 128, offset: 128)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1302, line: 95, baseType: !1303)
!1302 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1302, line: 92, size: 128, elements: !1304)
!1304 = !{!1305, !1306, !1307, !1308}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1303, file: !1302, line: 93, baseType: !313, size: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1303, file: !1302, line: 93, baseType: !313, size: 32, offset: 32)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1303, file: !1302, line: 94, baseType: !313, size: 32, offset: 64)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1303, file: !1302, line: 94, baseType: !313, size: 32, offset: 96)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1294, file: !1221, line: 77, baseType: !1301, size: 128, offset: 256)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1294, file: !1221, line: 79, baseType: !1311, size: 2304, offset: 384)
!1311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1312, size: 2304, elements: !505)
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1221, line: 67, baseType: !1313)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1221, line: 55, size: 576, elements: !1314)
!1314 = !{!1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1331, !1332, !1333, !1334}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1313, file: !1221, line: 56, baseType: !302, size: 16)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1313, file: !1221, line: 56, baseType: !302, size: 16, offset: 16)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1313, file: !1221, line: 58, baseType: !313, size: 32, offset: 32)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1313, file: !1221, line: 59, baseType: !313, size: 32, offset: 64)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1313, file: !1221, line: 59, baseType: !313, size: 32, offset: 96)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1313, file: !1221, line: 60, baseType: !1059, size: 64, offset: 128)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1313, file: !1221, line: 60, baseType: !1059, size: 64, offset: 192)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1313, file: !1221, line: 61, baseType: !1323, size: 64, offset: 256)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64)
!1324 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1221, line: 47, baseType: !1325)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1221, line: 44, size: 96, elements: !1326)
!1326 = !{!1327, !1328, !1329, !1330}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1325, file: !1221, line: 45, baseType: !313, size: 32)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1325, file: !1221, line: 45, baseType: !313, size: 32, offset: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1325, file: !1221, line: 46, baseType: !302, size: 16, offset: 64)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1325, file: !1221, line: 46, baseType: !302, size: 16, offset: 80)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1313, file: !1221, line: 62, baseType: !1323, size: 64, offset: 320)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1313, file: !1221, line: 64, baseType: !1323, size: 64, offset: 384)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1313, file: !1221, line: 65, baseType: !1059, size: 64, offset: 448)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1313, file: !1221, line: 66, baseType: !1059, size: 64, offset: 512)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1294, file: !1221, line: 80, baseType: !422, size: 96, offset: 2688)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1294, file: !1221, line: 80, baseType: !422, size: 96, offset: 2784)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1294, file: !1221, line: 81, baseType: !422, size: 96, offset: 2880)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1294, file: !1221, line: 83, baseType: !422, size: 96, offset: 2976)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !1098, file: !388, line: 255, baseType: !1340, size: 64, offset: 3136)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !388, line: 170, size: 8704, elements: !1342)
!1342 = !{!1343, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1341, file: !388, line: 171, baseType: !1344, size: 96)
!1344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !219, size: 96, elements: !423)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1341, file: !388, line: 172, baseType: !219, size: 32, offset: 96)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1341, file: !388, line: 173, baseType: !302, size: 16, offset: 128)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1341, file: !388, line: 174, baseType: !302, size: 16, offset: 144)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1341, file: !388, line: 175, baseType: !302, size: 16, offset: 160)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1341, file: !388, line: 176, baseType: !302, size: 16, offset: 176)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1341, file: !388, line: 177, baseType: !302, size: 16, offset: 192)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1341, file: !388, line: 178, baseType: !302, size: 16, offset: 208)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1341, file: !388, line: 179, baseType: !219, size: 32, offset: 224)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1341, file: !388, line: 181, baseType: !556, size: 64, offset: 256)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1341, file: !388, line: 182, baseType: !313, size: 32, offset: 320)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1341, file: !388, line: 183, baseType: !219, size: 32, offset: 352)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1341, file: !388, line: 184, baseType: !250, size: 8192, offset: 384)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1341, file: !388, line: 187, baseType: !601, size: 64, offset: 8576)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1341, file: !388, line: 188, baseType: !219, size: 32, offset: 8640)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1341, file: !388, line: 189, baseType: !219, size: 32, offset: 8672)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !1098, file: !388, line: 256, baseType: !1361, size: 64, offset: 3200)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !388, line: 193, size: 640, elements: !1363)
!1363 = !{!1364, !1365, !1366, !1367}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1362, file: !388, line: 194, baseType: !556, size: 64)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1362, file: !388, line: 195, baseType: !228, size: 512, offset: 64)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1362, file: !388, line: 197, baseType: !219, size: 32, offset: 576)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1362, file: !388, line: 198, baseType: !219, size: 32, offset: 608)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1098, file: !388, line: 258, baseType: !229, size: 8, offset: 3264)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1098, file: !388, line: 259, baseType: !1227, size: 56, offset: 3272)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !549, file: !388, line: 62, baseType: !228, size: 512, offset: 192)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !549, file: !388, line: 64, baseType: !229, size: 8, offset: 704)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !549, file: !388, line: 64, baseType: !229, size: 8, offset: 712)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !549, file: !388, line: 64, baseType: !229, size: 8, offset: 720)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !549, file: !388, line: 64, baseType: !229, size: 8, offset: 728)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !549, file: !388, line: 65, baseType: !422, size: 96, offset: 736)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !549, file: !388, line: 65, baseType: !422, size: 96, offset: 832)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !549, file: !388, line: 65, baseType: !313, size: 32, offset: 928)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !549, file: !388, line: 67, baseType: !302, size: 16, offset: 960)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !549, file: !388, line: 67, baseType: !302, size: 16, offset: 976)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !549, file: !388, line: 67, baseType: !302, size: 16, offset: 992)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !549, file: !388, line: 67, baseType: !302, size: 16, offset: 1008)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !549, file: !388, line: 68, baseType: !302, size: 16, offset: 1024)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !549, file: !388, line: 68, baseType: !302, size: 16, offset: 1040)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !549, file: !388, line: 69, baseType: !229, size: 8, offset: 1056)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !549, file: !388, line: 69, baseType: !1227, size: 56, offset: 1064)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !549, file: !388, line: 70, baseType: !313, size: 32, offset: 1120)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !549, file: !388, line: 70, baseType: !313, size: 32, offset: 1152)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !549, file: !388, line: 70, baseType: !313, size: 32, offset: 1184)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !549, file: !388, line: 70, baseType: !313, size: 32, offset: 1216)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !549, file: !388, line: 71, baseType: !313, size: 32, offset: 1248)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !549, file: !388, line: 71, baseType: !313, size: 32, offset: 1280)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !549, file: !388, line: 74, baseType: !313, size: 32, offset: 1312)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !549, file: !388, line: 74, baseType: !313, size: 32, offset: 1344)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !549, file: !388, line: 77, baseType: !313, size: 32, offset: 1376)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !549, file: !388, line: 77, baseType: !313, size: 32, offset: 1408)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !549, file: !388, line: 77, baseType: !313, size: 32, offset: 1440)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !549, file: !388, line: 78, baseType: !313, size: 32, offset: 1472)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !549, file: !388, line: 78, baseType: !313, size: 32, offset: 1504)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !549, file: !388, line: 78, baseType: !313, size: 32, offset: 1536)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !549, file: !388, line: 79, baseType: !313, size: 32, offset: 1568)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !549, file: !388, line: 79, baseType: !313, size: 32, offset: 1600)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !549, file: !388, line: 79, baseType: !313, size: 32, offset: 1632)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !549, file: !388, line: 79, baseType: !313, size: 32, offset: 1664)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !549, file: !388, line: 80, baseType: !313, size: 32, offset: 1696)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !549, file: !388, line: 80, baseType: !313, size: 32, offset: 1728)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !549, file: !388, line: 80, baseType: !313, size: 32, offset: 1760)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !549, file: !388, line: 81, baseType: !313, size: 32, offset: 1792)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !549, file: !388, line: 81, baseType: !313, size: 32, offset: 1824)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !549, file: !388, line: 81, baseType: !313, size: 32, offset: 1856)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !549, file: !388, line: 82, baseType: !313, size: 32, offset: 1888)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !549, file: !388, line: 82, baseType: !313, size: 32, offset: 1920)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !549, file: !388, line: 82, baseType: !313, size: 32, offset: 1952)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !549, file: !388, line: 85, baseType: !313, size: 32, offset: 1984)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !549, file: !388, line: 85, baseType: !313, size: 32, offset: 2016)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !549, file: !388, line: 85, baseType: !313, size: 32, offset: 2048)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !549, file: !388, line: 85, baseType: !313, size: 32, offset: 2080)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !549, file: !388, line: 86, baseType: !313, size: 32, offset: 2112)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !549, file: !388, line: 86, baseType: !313, size: 32, offset: 2144)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !549, file: !388, line: 86, baseType: !313, size: 32, offset: 2176)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !549, file: !388, line: 86, baseType: !313, size: 32, offset: 2208)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !549, file: !388, line: 87, baseType: !313, size: 32, offset: 2240)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !549, file: !388, line: 87, baseType: !313, size: 32, offset: 2272)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !549, file: !388, line: 87, baseType: !313, size: 32, offset: 2304)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !549, file: !388, line: 87, baseType: !313, size: 32, offset: 2336)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !549, file: !388, line: 90, baseType: !313, size: 32, offset: 2368)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !549, file: !388, line: 93, baseType: !313, size: 32, offset: 2400)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !549, file: !388, line: 93, baseType: !313, size: 32, offset: 2432)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !549, file: !388, line: 93, baseType: !313, size: 32, offset: 2464)
!1429 = !{!1430}
!1430 = !DISubrange(count: 18)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !320, file: !321, line: 168, baseType: !1153, size: 64, offset: 6144)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !320, file: !321, line: 169, baseType: !816, size: 64, offset: 6208)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !320, file: !321, line: 170, baseType: !1004, size: 64, offset: 6272)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !320, file: !321, line: 171, baseType: !1194, size: 64, offset: 6336)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !320, file: !321, line: 174, baseType: !313, size: 32, offset: 6400)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !320, file: !321, line: 174, baseType: !313, size: 32, offset: 6432)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !320, file: !321, line: 174, baseType: !313, size: 32, offset: 6464)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !320, file: !321, line: 175, baseType: !313, size: 32, offset: 6496)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !320, file: !321, line: 175, baseType: !313, size: 32, offset: 6528)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !320, file: !321, line: 176, baseType: !302, size: 16, offset: 6560)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !320, file: !321, line: 176, baseType: !302, size: 16, offset: 6576)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !320, file: !321, line: 179, baseType: !422, size: 96, offset: 6592)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !320, file: !321, line: 179, baseType: !422, size: 96, offset: 6688)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !320, file: !321, line: 180, baseType: !313, size: 32, offset: 6784)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !320, file: !321, line: 180, baseType: !313, size: 32, offset: 6816)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !320, file: !321, line: 180, baseType: !313, size: 32, offset: 6848)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !320, file: !321, line: 181, baseType: !313, size: 32, offset: 6880)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !320, file: !321, line: 181, baseType: !313, size: 32, offset: 6912)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !320, file: !321, line: 182, baseType: !313, size: 32, offset: 6944)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !320, file: !321, line: 182, baseType: !313, size: 32, offset: 6976)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !320, file: !321, line: 183, baseType: !302, size: 16, offset: 7008)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !320, file: !321, line: 183, baseType: !302, size: 16, offset: 7024)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !320, file: !321, line: 185, baseType: !219, size: 32, offset: 7040)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !320, file: !321, line: 186, baseType: !302, size: 16, offset: 7072)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !320, file: !321, line: 187, baseType: !302, size: 16, offset: 7088)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !320, file: !321, line: 190, baseType: !504, size: 128, offset: 7104)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !320, file: !321, line: 191, baseType: !302, size: 16, offset: 7232)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !320, file: !321, line: 192, baseType: !302, size: 16, offset: 7248)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !320, file: !321, line: 195, baseType: !302, size: 16, offset: 7264)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !320, file: !321, line: 196, baseType: !302, size: 16, offset: 7280)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !320, file: !321, line: 197, baseType: !302, size: 16, offset: 7296)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !320, file: !321, line: 198, baseType: !575, size: 48, offset: 7312)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !320, file: !321, line: 200, baseType: !1464, size: 64, offset: 7360)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64)
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !321, line: 86, size: 192, elements: !1466)
!1466 = !{!1467, !1468, !1469, !1470}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1465, file: !321, line: 87, baseType: !1157, size: 64)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !1465, file: !321, line: 88, baseType: !912, size: 64, offset: 64)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1465, file: !321, line: 89, baseType: !219, size: 32, offset: 128)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1465, file: !321, line: 90, baseType: !219, size: 32, offset: 160)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !320, file: !321, line: 202, baseType: !375, size: 128, offset: 7424)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !207, file: !4, line: 193, baseType: !229, size: 8, offset: 8576)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !207, file: !4, line: 196, baseType: !1474, size: 64, offset: 8640)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64)
!1475 = !DISubroutineType(types: !1476)
!1476 = !{null, !1477}
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !207, file: !4, line: 199, baseType: !1479, size: 64, offset: 8704)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64)
!1480 = !DISubroutineType(types: !1481)
!1481 = !{null, !1477, !1482}
!1482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !313)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !207, file: !4, line: 202, baseType: !1474, size: 64, offset: 8768)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !207, file: !4, line: 207, baseType: !1485, size: 64, offset: 8832)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64)
!1486 = !DISubroutineType(types: !1487)
!1487 = !{!219, !1477}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !207, file: !4, line: 208, baseType: !1485, size: 64, offset: 8896)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !207, file: !4, line: 209, baseType: !1485, size: 64, offset: 8960)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !207, file: !4, line: 210, baseType: !1485, size: 64, offset: 9024)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !207, file: !4, line: 211, baseType: !1485, size: 64, offset: 9088)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !207, file: !4, line: 218, baseType: !1493, size: 64, offset: 9152)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 64)
!1494 = !DISubroutineType(types: !1495)
!1495 = !{null, !1477, !219, !570}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !207, file: !4, line: 219, baseType: !1497, size: 64, offset: 9216)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 64)
!1498 = !DISubroutineType(types: !1499)
!1499 = !{null, !1477, !219, !1500}
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 64)
!1501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !123, line: 48, size: 96, elements: !1502)
!1502 = !{!1503, !1504, !1505, !1506, !1507}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1501, file: !123, line: 49, baseType: !5, size: 32)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1501, file: !123, line: 49, baseType: !5, size: 32, offset: 32)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !1501, file: !123, line: 50, baseType: !229, size: 8, offset: 64)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !1501, file: !123, line: 50, baseType: !229, size: 8, offset: 72)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1501, file: !123, line: 51, baseType: !302, size: 16, offset: 80)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !207, file: !4, line: 220, baseType: !1509, size: 64, offset: 9280)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64)
!1510 = !DISubroutineType(types: !1511)
!1511 = !{null, !1477, !219, !1512}
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64)
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !123, line: 42, size: 160, elements: !1514)
!1514 = !{!1515, !1516, !1517, !1518, !1519, !1520, !1521}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1513, file: !123, line: 43, baseType: !5, size: 32)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1513, file: !123, line: 43, baseType: !5, size: 32, offset: 32)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1513, file: !123, line: 43, baseType: !5, size: 32, offset: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1513, file: !123, line: 43, baseType: !5, size: 32, offset: 96)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1513, file: !123, line: 44, baseType: !302, size: 16, offset: 128)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !1513, file: !123, line: 45, baseType: !229, size: 8, offset: 144)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1513, file: !123, line: 45, baseType: !229, size: 8, offset: 152)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !207, file: !4, line: 227, baseType: !1523, size: 64, offset: 9344)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{!570, !1477}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !207, file: !4, line: 228, baseType: !1527, size: 64, offset: 9408)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{!1500, !1477}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !207, file: !4, line: 229, baseType: !1531, size: 64, offset: 9472)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!1532 = !DISubroutineType(types: !1533)
!1533 = !{!1512, !1477}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !207, file: !4, line: 230, baseType: !1535, size: 64, offset: 9536)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 64)
!1536 = !DISubroutineType(types: !1537)
!1537 = !{!588, !1477}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !207, file: !4, line: 231, baseType: !1539, size: 64, offset: 9600)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1540 = !DISubroutineType(types: !1541)
!1541 = !{!579, !1477}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !207, file: !4, line: 236, baseType: !1543, size: 64, offset: 9664)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64)
!1544 = !DISubroutineType(types: !1545)
!1545 = !{null, !1477, !570}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !207, file: !4, line: 237, baseType: !1547, size: 64, offset: 9728)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{null, !1477, !1500}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !207, file: !4, line: 238, baseType: !1551, size: 64, offset: 9792)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 64)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{null, !1477, !1512}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !207, file: !4, line: 239, baseType: !1555, size: 64, offset: 9856)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 64)
!1556 = !DISubroutineType(types: !1557)
!1557 = !{null, !1477, !588}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !207, file: !4, line: 240, baseType: !1559, size: 64, offset: 9920)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64)
!1560 = !DISubroutineType(types: !1561)
!1561 = !{null, !1477, !579}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !207, file: !4, line: 245, baseType: !1523, size: 64, offset: 9984)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !207, file: !4, line: 246, baseType: !1527, size: 64, offset: 10048)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !207, file: !4, line: 247, baseType: !1531, size: 64, offset: 10112)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !207, file: !4, line: 248, baseType: !1535, size: 64, offset: 10176)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !207, file: !4, line: 249, baseType: !1539, size: 64, offset: 10240)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !207, file: !4, line: 255, baseType: !1568, size: 64, offset: 10304)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 64)
!1569 = !DISubroutineType(types: !1570)
!1570 = !{!233, !1477, !219, !219}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !207, file: !4, line: 256, baseType: !1568, size: 64, offset: 10368)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !207, file: !4, line: 257, baseType: !1568, size: 64, offset: 10432)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !207, file: !4, line: 258, baseType: !1568, size: 64, offset: 10496)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !207, file: !4, line: 264, baseType: !1575, size: 64, offset: 10560)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{!233, !1477, !219}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !207, file: !4, line: 265, baseType: !1575, size: 64, offset: 10624)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !207, file: !4, line: 266, baseType: !1575, size: 64, offset: 10688)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !207, file: !4, line: 267, baseType: !1575, size: 64, offset: 10752)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !207, file: !4, line: 268, baseType: !1575, size: 64, offset: 10816)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !207, file: !4, line: 272, baseType: !1583, size: 64, offset: 10880)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 64)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{!1586, !1477}
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !207, file: !4, line: 273, baseType: !1583, size: 64, offset: 10944)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !207, file: !4, line: 274, baseType: !1583, size: 64, offset: 11008)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !207, file: !4, line: 275, baseType: !1583, size: 64, offset: 11072)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !207, file: !4, line: 276, baseType: !1583, size: 64, offset: 11136)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !207, file: !4, line: 279, baseType: !1592, size: 64, offset: 11200)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 64)
!1593 = !DISubroutineType(types: !1594)
!1594 = !{null, !1477, !219, !1586, !219}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !207, file: !4, line: 280, baseType: !1592, size: 64, offset: 11264)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !207, file: !4, line: 281, baseType: !1592, size: 64, offset: 11328)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !207, file: !4, line: 284, baseType: !1485, size: 64, offset: 11392)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !207, file: !4, line: 285, baseType: !1485, size: 64, offset: 11456)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !207, file: !4, line: 286, baseType: !1600, size: 64, offset: 11520)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64)
!1601 = !DISubroutineType(types: !1602)
!1602 = !{!1603, !1477}
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64)
!1605 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !156, line: 33, flags: DIFlagFwdDecl)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !207, file: !4, line: 287, baseType: !1607, size: 64, offset: 11584)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!1610, !1477}
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64)
!1611 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !4, line: 120, baseType: !1612)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !4, line: 117, size: 256, elements: !1613)
!1613 = !{!1614, !1616}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1612, file: !4, line: 118, baseType: !1615, size: 128)
!1615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !219, size: 128, elements: !505)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !1612, file: !4, line: 119, baseType: !1615, size: 128, offset: 128)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !207, file: !4, line: 288, baseType: !1618, size: 64, offset: 11648)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!1619 = !DISubroutineType(types: !1620)
!1620 = !{!289, !1477}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !207, file: !4, line: 289, baseType: !1622, size: 64, offset: 11712)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64)
!1623 = !DISubroutineType(types: !1624)
!1624 = !{null, !1477, !1625}
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64)
!1626 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !156, line: 34, flags: DIFlagFwdDecl)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !207, file: !4, line: 290, baseType: !1628, size: 64, offset: 11776)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = !DISubroutineType(types: !1630)
!1630 = !{!1631, !1477}
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1632, size: 64)
!1632 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !4, line: 126, baseType: !1633)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !4, line: 123, size: 32, elements: !1634)
!1634 = !{!1635, !1636}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1633, file: !4, line: 124, baseType: !302, size: 16)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1633, file: !4, line: 125, baseType: !229, size: 8, offset: 16)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !207, file: !4, line: 291, baseType: !1638, size: 64, offset: 11840)
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 64)
!1639 = !DISubroutineType(types: !1640)
!1640 = !{!1641, !1477}
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !207, file: !4, line: 299, baseType: !1643, size: 64, offset: 11904)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64)
!1644 = !DISubroutineType(types: !1645)
!1645 = !{null, !1477, !1646, !233, !1652}
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 64)
!1647 = !DISubroutineType(types: !1648)
!1648 = !{null, !233, !219, !1649, !1649, !1650}
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 64)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64)
!1651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !302)
!1652 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !4, line: 162, baseType: !53)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !207, file: !4, line: 309, baseType: !1654, size: 64, offset: 11968)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64)
!1655 = !DISubroutineType(types: !1656)
!1656 = !{null, !1477, !1657, !233}
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 64)
!1658 = !DISubroutineType(types: !1659)
!1659 = !{null, !233, !219, !1649, !1649}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !207, file: !4, line: 317, baseType: !1661, size: 64, offset: 12032)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64)
!1662 = !DISubroutineType(types: !1663)
!1663 = !{null, !1477, !1664, !233, !1652}
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 64)
!1665 = !DISubroutineType(types: !1666)
!1666 = !{null, !233, !219, !219, !1649, !1649}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !207, file: !4, line: 327, baseType: !1668, size: 64, offset: 12096)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64)
!1669 = !DISubroutineType(types: !1670)
!1670 = !{null, !1477, !1657, !233, !1652}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !207, file: !4, line: 337, baseType: !1672, size: 64, offset: 12160)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64)
!1673 = !DISubroutineType(types: !1674)
!1674 = !{null, !1477, !601, !601}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !207, file: !4, line: 344, baseType: !1676, size: 64, offset: 12224)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64)
!1677 = !DISubroutineType(types: !1678)
!1678 = !{null, !1477, !219, !601}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !207, file: !4, line: 347, baseType: !1680, size: 64, offset: 12288)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 64)
!1681 = !DISubroutineType(types: !1682)
!1682 = !{null, !1477, !596}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !207, file: !4, line: 350, baseType: !1676, size: 64, offset: 12352)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !207, file: !4, line: 351, baseType: !1676, size: 64, offset: 12416)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !207, file: !4, line: 355, baseType: !1686, size: 64, offset: 12480)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1687 = !DISubroutineType(types: !1688)
!1688 = !{!603, !556, !1477}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !207, file: !4, line: 359, baseType: !1690, size: 64, offset: 12544)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 64)
!1691 = !DISubroutineType(types: !1692)
!1692 = !{!775, !556, !1477}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !207, file: !4, line: 364, baseType: !1474, size: 64, offset: 12608)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !207, file: !4, line: 367, baseType: !1474, size: 64, offset: 12672)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !207, file: !4, line: 373, baseType: !1696, size: 64, offset: 12736)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64)
!1697 = !DISubroutineType(types: !1698)
!1698 = !{null, !1477, !309, !309}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !207, file: !4, line: 376, baseType: !1474, size: 64, offset: 12800)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !207, file: !4, line: 385, baseType: !1701, size: 64, offset: 12864)
!1701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 64)
!1702 = !DISubroutineType(types: !1703)
!1703 = !{null, !1477, !1704, !309, !1705}
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!1705 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !4, line: 146, baseType: !1706)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64)
!1707 = !DISubroutineType(types: !1708)
!1708 = !{!219, !219, !233}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !207, file: !4, line: 391, baseType: !1710, size: 64, offset: 12928)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 64)
!1711 = !DISubroutineType(types: !1712)
!1712 = !{null, !1477, !1713, !1731, !233, !1735}
!1713 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !4, line: 150, baseType: !1714)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64)
!1715 = !DISubroutineType(types: !1716)
!1716 = !{!1717, !1718, !1730, !219}
!1717 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !4, line: 143, baseType: !57)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !123, line: 160, size: 384, elements: !1720)
!1720 = !{!1721, !1724, !1725, !1726, !1727, !1728, !1729}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !1719, file: !123, line: 161, baseType: !1722, size: 256)
!1722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !313, size: 256, elements: !1723)
!1723 = !{!506, !1061}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !1719, file: !123, line: 162, baseType: !1157, size: 64, offset: 256)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1719, file: !123, line: 163, baseType: !229, size: 8, offset: 320)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !1719, file: !123, line: 163, baseType: !229, size: 8, offset: 328)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1719, file: !123, line: 164, baseType: !302, size: 16, offset: 336)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1719, file: !123, line: 164, baseType: !302, size: 16, offset: 352)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !1719, file: !123, line: 164, baseType: !302, size: 16, offset: 368)
!1730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !309)
!1731 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !4, line: 147, baseType: !1732)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64)
!1733 = !DISubroutineType(types: !1734)
!1734 = !{!219, !233, !219, !219}
!1735 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !4, line: 157, baseType: !63)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !207, file: !4, line: 400, baseType: !1737, size: 64, offset: 12992)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64)
!1738 = !DISubroutineType(types: !1739)
!1739 = !{null, !1477, !1705}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !207, file: !4, line: 415, baseType: !1741, size: 64, offset: 13056)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 64)
!1742 = !DISubroutineType(types: !1743)
!1743 = !{null, !1477, !1744, !1705, !1731, !233, !1735}
!1744 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !4, line: 149, baseType: !1745)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64)
!1746 = !DISubroutineType(types: !1747)
!1747 = !{!1717, !233, !219}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !207, file: !4, line: 425, baseType: !1749, size: 64, offset: 13120)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 64)
!1750 = !DISubroutineType(types: !1751)
!1751 = !{null, !1477, !1744, !1731, !233, !1735}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !207, file: !4, line: 435, baseType: !1753, size: 64, offset: 13184)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 64)
!1754 = !DISubroutineType(types: !1755)
!1755 = !{null, !1477, !1705, !1744, !233}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !207, file: !4, line: 444, baseType: !1757, size: 64, offset: 13248)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 64)
!1758 = !DISubroutineType(types: !1759)
!1759 = !{null, !1477, !1744, !233}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !207, file: !4, line: 455, baseType: !1761, size: 64, offset: 13312)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64)
!1762 = !DISubroutineType(types: !1763)
!1763 = !{null, !1477, !1744, !1764, !233}
!1764 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !4, line: 148, baseType: !1765)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64)
!1766 = !DISubroutineType(types: !1767)
!1767 = !{null, !233, !219, !313}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !207, file: !4, line: 464, baseType: !1769, size: 64, offset: 13376)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 64)
!1770 = !DISubroutineType(types: !1771)
!1771 = !{null, !1477, !1772, !1775, !233}
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = !DISubroutineType(types: !1774)
!1774 = !{null, !233, !219, !233}
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 64)
!1776 = !DISubroutineType(types: !1777)
!1777 = !{!309, !233, !219}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !207, file: !4, line: 470, baseType: !1474, size: 64, offset: 13440)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !203, file: !1, line: 77, baseType: !1780, size: 64, offset: 13504)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64)
!1781 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !123, line: 69, baseType: !571)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !203, file: !1, line: 78, baseType: !1783, size: 64, offset: 13568)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64)
!1784 = !DIDerivedType(tag: DW_TAG_typedef, name: "MEdge", file: !123, line: 52, baseType: !1501)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !203, file: !1, line: 79, baseType: !1786, size: 64, offset: 13632)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 64)
!1787 = !DIDerivedType(tag: DW_TAG_typedef, name: "MFace", file: !123, line: 46, baseType: !1513)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !203, file: !1, line: 80, baseType: !1789, size: 64, offset: 13696)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 64)
!1790 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoop", file: !123, line: 91, baseType: !589)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !203, file: !1, line: 81, baseType: !1792, size: 64, offset: 13760)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPoly", file: !123, line: 85, baseType: !580)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "pbvh", scope: !203, file: !1, line: 84, baseType: !775, size: 64, offset: 13824)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "pbvh_draw", scope: !203, file: !1, line: 85, baseType: !309, size: 8, offset: 13888)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "pmap", scope: !203, file: !1, line: 88, baseType: !1797, size: 64, offset: 13952)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1798 = !DIDerivedType(tag: DW_TAG_typedef, name: "MeshElemMap", file: !606, line: 99, baseType: !605)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "pmap_mem", scope: !203, file: !1, line: 89, baseType: !289, size: 64, offset: 14016)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64)
!1801 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curve", file: !1024, line: 273, baseType: !1802)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Curve", file: !1024, line: 193, size: 4224, elements: !1803)
!1803 = !{!1804, !1805, !1806, !1807, !1808, !1818, !1819, !1820, !1821, !1822, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1871, !1872, !1875, !1876, !1877, !1878, !1886, !1887, !1888, !1897, !1898, !1899, !1900, !1901, !1902, !1903}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1802, file: !1024, line: 194, baseType: !324, size: 960)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1802, file: !1024, line: 195, baseType: !386, size: 64, offset: 960)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1802, file: !1024, line: 197, baseType: !819, size: 64, offset: 1024)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "nurb", scope: !1802, file: !1024, line: 199, baseType: !375, size: 128, offset: 1088)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "editnurb", scope: !1802, file: !1024, line: 201, baseType: !1809, size: 64, offset: 1216)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!1810 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditNurb", file: !1024, line: 191, baseType: !1811)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditNurb", file: !1024, line: 180, size: 256, elements: !1812)
!1812 = !{!1813, !1814, !1815, !1816}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "nurbs", scope: !1811, file: !1024, line: 182, baseType: !375, size: 128)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "keyindex", scope: !1811, file: !1024, line: 185, baseType: !849, size: 64, offset: 128)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !1811, file: !1024, line: 188, baseType: !219, size: 32, offset: 192)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1811, file: !1024, line: 190, baseType: !1817, size: 32, offset: 224)
!1817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !229, size: 32, elements: !505)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "bevobj", scope: !1802, file: !1024, line: 203, baseType: !556, size: 64, offset: 1280)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "taperobj", scope: !1802, file: !1024, line: 203, baseType: !556, size: 64, offset: 1344)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "textoncurve", scope: !1802, file: !1024, line: 203, baseType: !556, size: 64, offset: 1408)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1802, file: !1024, line: 204, baseType: !816, size: 64, offset: 1472)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1802, file: !1024, line: 205, baseType: !1823, size: 64, offset: 1536)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !1024, line: 45, flags: DIFlagFwdDecl)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1802, file: !1024, line: 206, baseType: !318, size: 64, offset: 1600)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1802, file: !1024, line: 209, baseType: !422, size: 96, offset: 1664)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1802, file: !1024, line: 210, baseType: !422, size: 96, offset: 1760)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1802, file: !1024, line: 211, baseType: !422, size: 96, offset: 1856)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1802, file: !1024, line: 213, baseType: !302, size: 16, offset: 1952)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !1802, file: !1024, line: 215, baseType: !302, size: 16, offset: 1968)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !1802, file: !1024, line: 216, baseType: !302, size: 16, offset: 1984)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "twist_mode", scope: !1802, file: !1024, line: 216, baseType: !302, size: 16, offset: 2000)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "twist_smooth", scope: !1802, file: !1024, line: 217, baseType: !313, size: 32, offset: 2016)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "smallcaps_scale", scope: !1802, file: !1024, line: 217, baseType: !313, size: 32, offset: 2048)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "pathlen", scope: !1802, file: !1024, line: 219, baseType: !219, size: 32, offset: 2080)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "bevresol", scope: !1802, file: !1024, line: 220, baseType: !302, size: 16, offset: 2112)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !1802, file: !1024, line: 220, baseType: !302, size: 16, offset: 2128)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1802, file: !1024, line: 221, baseType: !219, size: 32, offset: 2144)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1802, file: !1024, line: 222, baseType: !313, size: 32, offset: 2176)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "ext1", scope: !1802, file: !1024, line: 222, baseType: !313, size: 32, offset: 2208)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "ext2", scope: !1802, file: !1024, line: 222, baseType: !313, size: 32, offset: 2240)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !1802, file: !1024, line: 225, baseType: !302, size: 16, offset: 2272)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !1802, file: !1024, line: 225, baseType: !302, size: 16, offset: 2288)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "resolu_ren", scope: !1802, file: !1024, line: 226, baseType: !302, size: 16, offset: 2304)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "resolv_ren", scope: !1802, file: !1024, line: 226, baseType: !302, size: 16, offset: 2320)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "actnu", scope: !1802, file: !1024, line: 229, baseType: !219, size: 32, offset: 2336)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "actvert", scope: !1802, file: !1024, line: 231, baseType: !219, size: 32, offset: 2368)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1802, file: !1024, line: 233, baseType: !1817, size: 32, offset: 2400)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !1802, file: !1024, line: 236, baseType: !302, size: 16, offset: 2432)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "spacemode", scope: !1802, file: !1024, line: 237, baseType: !229, size: 8, offset: 2448)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1802, file: !1024, line: 237, baseType: !229, size: 8, offset: 2456)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !1802, file: !1024, line: 238, baseType: !313, size: 32, offset: 2464)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "linedist", scope: !1802, file: !1024, line: 238, baseType: !313, size: 32, offset: 2496)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "shear", scope: !1802, file: !1024, line: 238, baseType: !313, size: 32, offset: 2528)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !1802, file: !1024, line: 238, baseType: !313, size: 32, offset: 2560)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "wordspace", scope: !1802, file: !1024, line: 238, baseType: !313, size: 32, offset: 2592)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "ulpos", scope: !1802, file: !1024, line: 238, baseType: !313, size: 32, offset: 2624)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "ulheight", scope: !1802, file: !1024, line: 238, baseType: !313, size: 32, offset: 2656)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !1802, file: !1024, line: 239, baseType: !313, size: 32, offset: 2688)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !1802, file: !1024, line: 239, baseType: !313, size: 32, offset: 2720)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "linewidth", scope: !1802, file: !1024, line: 240, baseType: !313, size: 32, offset: 2752)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1802, file: !1024, line: 244, baseType: !219, size: 32, offset: 2784)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "selstart", scope: !1802, file: !1024, line: 245, baseType: !219, size: 32, offset: 2816)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "selend", scope: !1802, file: !1024, line: 245, baseType: !219, size: 32, offset: 2848)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "len_wchar", scope: !1802, file: !1024, line: 248, baseType: !219, size: 32, offset: 2880)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1802, file: !1024, line: 249, baseType: !219, size: 32, offset: 2912)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1802, file: !1024, line: 250, baseType: !912, size: 64, offset: 2944)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "editfont", scope: !1802, file: !1024, line: 251, baseType: !1869, size: 64, offset: 3008)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64)
!1870 = !DICompositeType(tag: DW_TAG_structure_type, name: "EditFont", file: !1024, line: 50, flags: DIFlagFwdDecl)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !1802, file: !1024, line: 253, baseType: !228, size: 512, offset: 3072)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !1802, file: !1024, line: 254, baseType: !1873, size: 64, offset: 3584)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64)
!1874 = !DICompositeType(tag: DW_TAG_structure_type, name: "VFont", file: !1024, line: 47, flags: DIFlagFwdDecl)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "vfontb", scope: !1802, file: !1024, line: 255, baseType: !1873, size: 64, offset: 3648)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "vfonti", scope: !1802, file: !1024, line: 256, baseType: !1873, size: 64, offset: 3712)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "vfontbi", scope: !1802, file: !1024, line: 257, baseType: !1873, size: 64, offset: 3776)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "tb", scope: !1802, file: !1024, line: 259, baseType: !1879, size: 64, offset: 3840)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 64)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextBox", file: !1024, line: 176, size: 128, elements: !1881)
!1881 = !{!1882, !1883, !1884, !1885}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1880, file: !1024, line: 177, baseType: !313, size: 32)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1880, file: !1024, line: 177, baseType: !313, size: 32, offset: 32)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1880, file: !1024, line: 177, baseType: !313, size: 32, offset: 64)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1880, file: !1024, line: 177, baseType: !313, size: 32, offset: 96)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "totbox", scope: !1802, file: !1024, line: 260, baseType: !219, size: 32, offset: 3904)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "actbox", scope: !1802, file: !1024, line: 260, baseType: !219, size: 32, offset: 3936)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "strinfo", scope: !1802, file: !1024, line: 262, baseType: !1889, size: 64, offset: 3968)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CharInfo", file: !1024, line: 168, size: 64, elements: !1891)
!1891 = !{!1892, !1893, !1894, !1895, !1896}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "kern", scope: !1890, file: !1024, line: 169, baseType: !302, size: 16)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1890, file: !1024, line: 170, baseType: !302, size: 16, offset: 16)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1890, file: !1024, line: 171, baseType: !229, size: 8, offset: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1890, file: !1024, line: 172, baseType: !229, size: 8, offset: 40)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1890, file: !1024, line: 173, baseType: !302, size: 16, offset: 48)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "curinfo", scope: !1802, file: !1024, line: 263, baseType: !1890, size: 64, offset: 4032)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1802, file: !1024, line: 267, baseType: !313, size: 32, offset: 4096)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1", scope: !1802, file: !1024, line: 268, baseType: !313, size: 32, offset: 4128)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2", scope: !1802, file: !1024, line: 268, baseType: !313, size: 32, offset: 4160)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1_mapping", scope: !1802, file: !1024, line: 269, baseType: !229, size: 8, offset: 4192)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2_mapping", scope: !1802, file: !1024, line: 269, baseType: !229, size: 8, offset: 4200)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1802, file: !1024, line: 271, baseType: !1904, size: 16, offset: 4208)
!1904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !229, size: 16, elements: !1060)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 64)
!1906 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1907, size: 192, elements: !423)
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!1908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!1909 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !1910, line: 87, baseType: !1911)
!1910 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!1911 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 64)
!1913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1914)
!1914 = !DIDerivedType(tag: DW_TAG_typedef, name: "GLshort", file: !1915, line: 277, baseType: !302)
!1915 = !DIFile(filename: "blender/extern/glew/include/GL/glew.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIterType", file: !177, line: 79, baseType: !176)
!1918 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__begin_cb", file: !177, line: 158, baseType: !1919)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 64)
!1920 = !DISubroutineType(types: !1921)
!1921 = !{null, !233}
!1922 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__step_cb", file: !177, line: 159, baseType: !1923)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!1924 = !DISubroutineType(types: !1925)
!1925 = !{!233, !233}
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1927 = !DIDerivedType(tag: DW_TAG_typedef, name: "EdgeSetIterator", file: !1928, line: 99, baseType: !1929)
!1928 = !DIFile(filename: "blender/source/blender/blenlib/BLI_edgehash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1929 = !DICompositeType(tag: DW_TAG_structure_type, name: "EdgeSetIterator", file: !1928, line: 97, flags: DIFlagFwdDecl)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64)
!1931 = !DIDerivedType(tag: DW_TAG_typedef, name: "EdgeHash", file: !1928, line: 35, baseType: !1932)
!1932 = !DICompositeType(tag: DW_TAG_structure_type, name: "EdgeHash", file: !1928, line: 34, flags: DIFlagFwdDecl)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_typedef, name: "EdgeHashIterator", file: !1928, line: 41, baseType: !1935)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EdgeHashIterator", file: !1928, line: 37, size: 192, elements: !1936)
!1936 = !{!1937, !1938, !1941}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1935, file: !1928, line: 38, baseType: !1930, size: 64)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "curEntry", scope: !1935, file: !1928, line: 39, baseType: !1939, size: 64, offset: 64)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64)
!1940 = !DICompositeType(tag: DW_TAG_structure_type, name: "EdgeEntry", file: !1928, line: 39, flags: DIFlagFwdDecl)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "curBucket", scope: !1935, file: !1928, line: 40, baseType: !5, size: 32, offset: 128)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_eh_Entry", file: !1928, line: 77, size: 192, elements: !1944)
!1944 = !{!1945, !1946, !1947, !1948}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1943, file: !1928, line: 77, baseType: !233, size: 64)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "v0", scope: !1943, file: !1928, line: 77, baseType: !5, size: 32, offset: 64)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1943, file: !1928, line: 77, baseType: !5, size: 32, offset: 96)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1943, file: !1928, line: 77, baseType: !233, size: 64, offset: 128)
!1949 = !{i32 7, !"Dwarf Version", i32 4}
!1950 = !{i32 2, !"Debug Info Version", i32 3}
!1951 = !{i32 1, !"wchar_size", i32 4}
!1952 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!1953 = distinct !DISubprogram(name: "CDDM_recalc_tessellation_ex", scope: !1, file: !1, line: 1814, type: !1954, scopeLine: 1815, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!1954 = !DISubroutineType(types: !1955)
!1955 = !{null, !1477, !1730}
!1956 = !{}
!1957 = !DILocalVariable(name: "dm", arg: 1, scope: !1953, file: !1, line: 1814, type: !1477)
!1958 = !DILocation(line: 1814, column: 47, scope: !1953)
!1959 = !DILocalVariable(name: "do_face_nor_cpy", arg: 2, scope: !1953, file: !1, line: 1814, type: !1730)
!1960 = !DILocation(line: 1814, column: 62, scope: !1953)
!1961 = !DILocalVariable(name: "cddm", scope: !1953, file: !1, line: 1816, type: !201)
!1962 = !DILocation(line: 1816, column: 17, scope: !1953)
!1963 = !DILocation(line: 1816, column: 41, scope: !1953)
!1964 = !DILocation(line: 1816, column: 24, scope: !1953)
!1965 = !DILocation(line: 1818, column: 54, scope: !1953)
!1966 = !DILocation(line: 1818, column: 58, scope: !1953)
!1967 = !DILocation(line: 1818, column: 69, scope: !1953)
!1968 = !DILocation(line: 1818, column: 73, scope: !1953)
!1969 = !DILocation(line: 1818, column: 84, scope: !1953)
!1970 = !DILocation(line: 1818, column: 88, scope: !1953)
!1971 = !DILocation(line: 1819, column: 53, scope: !1953)
!1972 = !DILocation(line: 1819, column: 59, scope: !1953)
!1973 = !DILocation(line: 1820, column: 53, scope: !1953)
!1974 = !DILocation(line: 1820, column: 57, scope: !1953)
!1975 = !DILocation(line: 1820, column: 74, scope: !1953)
!1976 = !DILocation(line: 1820, column: 78, scope: !1953)
!1977 = !DILocation(line: 1820, column: 91, scope: !1953)
!1978 = !DILocation(line: 1820, column: 95, scope: !1953)
!1979 = !DILocation(line: 1821, column: 53, scope: !1953)
!1980 = !DILocation(line: 1818, column: 24, scope: !1953)
!1981 = !DILocation(line: 1818, column: 2, scope: !1953)
!1982 = !DILocation(line: 1818, column: 6, scope: !1953)
!1983 = !DILocation(line: 1818, column: 22, scope: !1953)
!1984 = !DILocation(line: 1823, column: 38, scope: !1953)
!1985 = !DILocation(line: 1823, column: 42, scope: !1953)
!1986 = !DILocation(line: 1823, column: 16, scope: !1953)
!1987 = !DILocation(line: 1823, column: 2, scope: !1953)
!1988 = !DILocation(line: 1823, column: 8, scope: !1953)
!1989 = !DILocation(line: 1823, column: 14, scope: !1953)
!1990 = !DILocation(line: 1827, column: 41, scope: !1953)
!1991 = !DILocation(line: 1827, column: 45, scope: !1953)
!1992 = !DILocation(line: 1827, column: 56, scope: !1953)
!1993 = !DILocation(line: 1827, column: 60, scope: !1953)
!1994 = !DILocation(line: 1827, column: 71, scope: !1953)
!1995 = !DILocation(line: 1827, column: 75, scope: !1953)
!1996 = !DILocation(line: 1827, column: 2, scope: !1953)
!1997 = !DILocation(line: 1828, column: 1, scope: !1953)
!1998 = distinct !DISubprogram(name: "CDDM_recalc_tessellation", scope: !1, file: !1, line: 1830, type: !1475, scopeLine: 1831, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!1999 = !DILocalVariable(name: "dm", arg: 1, scope: !1998, file: !1, line: 1830, type: !1477)
!2000 = !DILocation(line: 1830, column: 44, scope: !1998)
!2001 = !DILocation(line: 1832, column: 30, scope: !1998)
!2002 = !DILocation(line: 1832, column: 2, scope: !1998)
!2003 = !DILocation(line: 1833, column: 1, scope: !1998)
!2004 = distinct !DISubprogram(name: "CDDM_new", scope: !1, file: !1, line: 1921, type: !2005, scopeLine: 1922, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!2005 = !DISubroutineType(types: !2006)
!2006 = !{!1037, !219, !219, !219, !219, !219}
!2007 = !DILocalVariable(name: "numVerts", arg: 1, scope: !2004, file: !1, line: 1921, type: !219)
!2008 = !DILocation(line: 1921, column: 27, scope: !2004)
!2009 = !DILocalVariable(name: "numEdges", arg: 2, scope: !2004, file: !1, line: 1921, type: !219)
!2010 = !DILocation(line: 1921, column: 41, scope: !2004)
!2011 = !DILocalVariable(name: "numTessFaces", arg: 3, scope: !2004, file: !1, line: 1921, type: !219)
!2012 = !DILocation(line: 1921, column: 55, scope: !2004)
!2013 = !DILocalVariable(name: "numLoops", arg: 4, scope: !2004, file: !1, line: 1921, type: !219)
!2014 = !DILocation(line: 1921, column: 73, scope: !2004)
!2015 = !DILocalVariable(name: "numPolys", arg: 5, scope: !2004, file: !1, line: 1921, type: !219)
!2016 = !DILocation(line: 1921, column: 87, scope: !2004)
!2017 = !DILocalVariable(name: "cddm", scope: !2004, file: !1, line: 1923, type: !201)
!2018 = !DILocation(line: 1923, column: 17, scope: !2004)
!2019 = !DILocation(line: 1923, column: 24, scope: !2004)
!2020 = !DILocalVariable(name: "dm", scope: !2004, file: !1, line: 1924, type: !1477)
!2021 = !DILocation(line: 1924, column: 15, scope: !2004)
!2022 = !DILocation(line: 1924, column: 21, scope: !2004)
!2023 = !DILocation(line: 1924, column: 27, scope: !2004)
!2024 = !DILocation(line: 1926, column: 10, scope: !2004)
!2025 = !DILocation(line: 1926, column: 28, scope: !2004)
!2026 = !DILocation(line: 1926, column: 38, scope: !2004)
!2027 = !DILocation(line: 1926, column: 48, scope: !2004)
!2028 = !DILocation(line: 1926, column: 62, scope: !2004)
!2029 = !DILocation(line: 1926, column: 72, scope: !2004)
!2030 = !DILocation(line: 1926, column: 2, scope: !2004)
!2031 = !DILocation(line: 1928, column: 24, scope: !2004)
!2032 = !DILocation(line: 1928, column: 28, scope: !2004)
!2033 = !DILocation(line: 1928, column: 69, scope: !2004)
!2034 = !DILocation(line: 1928, column: 2, scope: !2004)
!2035 = !DILocation(line: 1929, column: 24, scope: !2004)
!2036 = !DILocation(line: 1929, column: 28, scope: !2004)
!2037 = !DILocation(line: 1929, column: 69, scope: !2004)
!2038 = !DILocation(line: 1929, column: 2, scope: !2004)
!2039 = !DILocation(line: 1930, column: 24, scope: !2004)
!2040 = !DILocation(line: 1930, column: 28, scope: !2004)
!2041 = !DILocation(line: 1930, column: 69, scope: !2004)
!2042 = !DILocation(line: 1930, column: 2, scope: !2004)
!2043 = !DILocation(line: 1931, column: 24, scope: !2004)
!2044 = !DILocation(line: 1931, column: 28, scope: !2004)
!2045 = !DILocation(line: 1931, column: 69, scope: !2004)
!2046 = !DILocation(line: 1931, column: 2, scope: !2004)
!2047 = !DILocation(line: 1933, column: 24, scope: !2004)
!2048 = !DILocation(line: 1933, column: 28, scope: !2004)
!2049 = !DILocation(line: 1933, column: 65, scope: !2004)
!2050 = !DILocation(line: 1933, column: 2, scope: !2004)
!2051 = !DILocation(line: 1934, column: 24, scope: !2004)
!2052 = !DILocation(line: 1934, column: 28, scope: !2004)
!2053 = !DILocation(line: 1934, column: 65, scope: !2004)
!2054 = !DILocation(line: 1934, column: 2, scope: !2004)
!2055 = !DILocation(line: 1935, column: 24, scope: !2004)
!2056 = !DILocation(line: 1935, column: 28, scope: !2004)
!2057 = !DILocation(line: 1935, column: 65, scope: !2004)
!2058 = !DILocation(line: 1935, column: 2, scope: !2004)
!2059 = !DILocation(line: 1936, column: 24, scope: !2004)
!2060 = !DILocation(line: 1936, column: 28, scope: !2004)
!2061 = !DILocation(line: 1936, column: 65, scope: !2004)
!2062 = !DILocation(line: 1936, column: 2, scope: !2004)
!2063 = !DILocation(line: 1937, column: 24, scope: !2004)
!2064 = !DILocation(line: 1937, column: 28, scope: !2004)
!2065 = !DILocation(line: 1937, column: 65, scope: !2004)
!2066 = !DILocation(line: 1937, column: 2, scope: !2004)
!2067 = !DILocation(line: 1939, column: 38, scope: !2004)
!2068 = !DILocation(line: 1939, column: 42, scope: !2004)
!2069 = !DILocation(line: 1939, column: 16, scope: !2004)
!2070 = !DILocation(line: 1939, column: 2, scope: !2004)
!2071 = !DILocation(line: 1939, column: 8, scope: !2004)
!2072 = !DILocation(line: 1939, column: 14, scope: !2004)
!2073 = !DILocation(line: 1940, column: 38, scope: !2004)
!2074 = !DILocation(line: 1940, column: 42, scope: !2004)
!2075 = !DILocation(line: 1940, column: 16, scope: !2004)
!2076 = !DILocation(line: 1940, column: 2, scope: !2004)
!2077 = !DILocation(line: 1940, column: 8, scope: !2004)
!2078 = !DILocation(line: 1940, column: 14, scope: !2004)
!2079 = !DILocation(line: 1941, column: 38, scope: !2004)
!2080 = !DILocation(line: 1941, column: 42, scope: !2004)
!2081 = !DILocation(line: 1941, column: 16, scope: !2004)
!2082 = !DILocation(line: 1941, column: 2, scope: !2004)
!2083 = !DILocation(line: 1941, column: 8, scope: !2004)
!2084 = !DILocation(line: 1941, column: 14, scope: !2004)
!2085 = !DILocation(line: 1942, column: 38, scope: !2004)
!2086 = !DILocation(line: 1942, column: 42, scope: !2004)
!2087 = !DILocation(line: 1942, column: 16, scope: !2004)
!2088 = !DILocation(line: 1942, column: 2, scope: !2004)
!2089 = !DILocation(line: 1942, column: 8, scope: !2004)
!2090 = !DILocation(line: 1942, column: 14, scope: !2004)
!2091 = !DILocation(line: 1943, column: 38, scope: !2004)
!2092 = !DILocation(line: 1943, column: 42, scope: !2004)
!2093 = !DILocation(line: 1943, column: 16, scope: !2004)
!2094 = !DILocation(line: 1943, column: 2, scope: !2004)
!2095 = !DILocation(line: 1943, column: 8, scope: !2004)
!2096 = !DILocation(line: 1943, column: 14, scope: !2004)
!2097 = !DILocation(line: 1945, column: 9, scope: !2004)
!2098 = !DILocation(line: 1945, column: 2, scope: !2004)
!2099 = distinct !DISubprogram(name: "cdDM_create", scope: !1, file: !1, line: 1852, type: !2100, scopeLine: 1853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!2100 = !DISubroutineType(types: !2101)
!2101 = !{!201, !712}
!2102 = !DILocalVariable(name: "desc", arg: 1, scope: !2099, file: !1, line: 1852, type: !712)
!2103 = !DILocation(line: 1852, column: 47, scope: !2099)
!2104 = !DILocalVariable(name: "cddm", scope: !2099, file: !1, line: 1854, type: !201)
!2105 = !DILocation(line: 1854, column: 17, scope: !2099)
!2106 = !DILocalVariable(name: "dm", scope: !2099, file: !1, line: 1855, type: !1477)
!2107 = !DILocation(line: 1855, column: 15, scope: !2099)
!2108 = !DILocation(line: 1857, column: 9, scope: !2099)
!2109 = !DILocation(line: 1857, column: 36, scope: !2099)
!2110 = !DILocation(line: 1857, column: 7, scope: !2099)
!2111 = !DILocation(line: 1858, column: 8, scope: !2099)
!2112 = !DILocation(line: 1858, column: 14, scope: !2099)
!2113 = !DILocation(line: 1858, column: 5, scope: !2099)
!2114 = !DILocation(line: 1860, column: 2, scope: !2099)
!2115 = !DILocation(line: 1860, column: 6, scope: !2099)
!2116 = !DILocation(line: 1860, column: 16, scope: !2099)
!2117 = !DILocation(line: 1862, column: 2, scope: !2099)
!2118 = !DILocation(line: 1862, column: 6, scope: !2099)
!2119 = !DILocation(line: 1862, column: 18, scope: !2099)
!2120 = !DILocation(line: 1863, column: 2, scope: !2099)
!2121 = !DILocation(line: 1863, column: 6, scope: !2099)
!2122 = !DILocation(line: 1863, column: 18, scope: !2099)
!2123 = !DILocation(line: 1864, column: 2, scope: !2099)
!2124 = !DILocation(line: 1864, column: 6, scope: !2099)
!2125 = !DILocation(line: 1864, column: 22, scope: !2099)
!2126 = !DILocation(line: 1865, column: 2, scope: !2099)
!2127 = !DILocation(line: 1865, column: 6, scope: !2099)
!2128 = !DILocation(line: 1865, column: 18, scope: !2099)
!2129 = !DILocation(line: 1866, column: 2, scope: !2099)
!2130 = !DILocation(line: 1866, column: 6, scope: !2099)
!2131 = !DILocation(line: 1866, column: 18, scope: !2099)
!2132 = !DILocation(line: 1868, column: 2, scope: !2099)
!2133 = !DILocation(line: 1868, column: 6, scope: !2099)
!2134 = !DILocation(line: 1868, column: 14, scope: !2099)
!2135 = !DILocation(line: 1869, column: 2, scope: !2099)
!2136 = !DILocation(line: 1869, column: 6, scope: !2099)
!2137 = !DILocation(line: 1869, column: 14, scope: !2099)
!2138 = !DILocation(line: 1870, column: 2, scope: !2099)
!2139 = !DILocation(line: 1870, column: 6, scope: !2099)
!2140 = !DILocation(line: 1870, column: 18, scope: !2099)
!2141 = !DILocation(line: 1872, column: 2, scope: !2099)
!2142 = !DILocation(line: 1872, column: 6, scope: !2099)
!2143 = !DILocation(line: 1872, column: 20, scope: !2099)
!2144 = !DILocation(line: 1873, column: 2, scope: !2099)
!2145 = !DILocation(line: 1873, column: 6, scope: !2099)
!2146 = !DILocation(line: 1873, column: 20, scope: !2099)
!2147 = !DILocation(line: 1874, column: 2, scope: !2099)
!2148 = !DILocation(line: 1874, column: 6, scope: !2099)
!2149 = !DILocation(line: 1874, column: 24, scope: !2099)
!2150 = !DILocation(line: 1875, column: 2, scope: !2099)
!2151 = !DILocation(line: 1875, column: 6, scope: !2099)
!2152 = !DILocation(line: 1875, column: 20, scope: !2099)
!2153 = !DILocation(line: 1876, column: 2, scope: !2099)
!2154 = !DILocation(line: 1876, column: 6, scope: !2099)
!2155 = !DILocation(line: 1876, column: 20, scope: !2099)
!2156 = !DILocation(line: 1878, column: 2, scope: !2099)
!2157 = !DILocation(line: 1878, column: 6, scope: !2099)
!2158 = !DILocation(line: 1878, column: 18, scope: !2099)
!2159 = !DILocation(line: 1879, column: 2, scope: !2099)
!2160 = !DILocation(line: 1879, column: 6, scope: !2099)
!2161 = !DILocation(line: 1879, column: 18, scope: !2099)
!2162 = !DILocation(line: 1880, column: 2, scope: !2099)
!2163 = !DILocation(line: 1880, column: 6, scope: !2099)
!2164 = !DILocation(line: 1880, column: 22, scope: !2099)
!2165 = !DILocation(line: 1881, column: 2, scope: !2099)
!2166 = !DILocation(line: 1881, column: 6, scope: !2099)
!2167 = !DILocation(line: 1881, column: 23, scope: !2099)
!2168 = !DILocation(line: 1882, column: 2, scope: !2099)
!2169 = !DILocation(line: 1882, column: 6, scope: !2099)
!2170 = !DILocation(line: 1882, column: 23, scope: !2099)
!2171 = !DILocation(line: 1883, column: 2, scope: !2099)
!2172 = !DILocation(line: 1883, column: 6, scope: !2099)
!2173 = !DILocation(line: 1883, column: 27, scope: !2099)
!2174 = !DILocation(line: 1885, column: 2, scope: !2099)
!2175 = !DILocation(line: 1885, column: 6, scope: !2099)
!2176 = !DILocation(line: 1885, column: 18, scope: !2099)
!2177 = !DILocation(line: 1886, column: 2, scope: !2099)
!2178 = !DILocation(line: 1886, column: 6, scope: !2099)
!2179 = !DILocation(line: 1886, column: 22, scope: !2099)
!2180 = !DILocation(line: 1887, column: 2, scope: !2099)
!2181 = !DILocation(line: 1887, column: 6, scope: !2099)
!2182 = !DILocation(line: 1887, column: 25, scope: !2099)
!2183 = !DILocation(line: 1889, column: 2, scope: !2099)
!2184 = !DILocation(line: 1889, column: 6, scope: !2099)
!2185 = !DILocation(line: 1889, column: 17, scope: !2099)
!2186 = !DILocation(line: 1890, column: 2, scope: !2099)
!2187 = !DILocation(line: 1890, column: 6, scope: !2099)
!2188 = !DILocation(line: 1890, column: 16, scope: !2099)
!2189 = !DILocation(line: 1891, column: 2, scope: !2099)
!2190 = !DILocation(line: 1891, column: 6, scope: !2099)
!2191 = !DILocation(line: 1891, column: 16, scope: !2099)
!2192 = !DILocation(line: 1893, column: 2, scope: !2099)
!2193 = !DILocation(line: 1893, column: 6, scope: !2099)
!2194 = !DILocation(line: 1893, column: 14, scope: !2099)
!2195 = !DILocation(line: 1894, column: 2, scope: !2099)
!2196 = !DILocation(line: 1894, column: 6, scope: !2099)
!2197 = !DILocation(line: 1894, column: 17, scope: !2099)
!2198 = !DILocation(line: 1896, column: 2, scope: !2099)
!2199 = !DILocation(line: 1896, column: 6, scope: !2099)
!2200 = !DILocation(line: 1896, column: 16, scope: !2099)
!2201 = !DILocation(line: 1898, column: 2, scope: !2099)
!2202 = !DILocation(line: 1898, column: 6, scope: !2099)
!2203 = !DILocation(line: 1898, column: 18, scope: !2099)
!2204 = !DILocation(line: 1899, column: 2, scope: !2099)
!2205 = !DILocation(line: 1899, column: 6, scope: !2099)
!2206 = !DILocation(line: 1899, column: 16, scope: !2099)
!2207 = !DILocation(line: 1900, column: 2, scope: !2099)
!2208 = !DILocation(line: 1900, column: 6, scope: !2099)
!2209 = !DILocation(line: 1900, column: 21, scope: !2099)
!2210 = !DILocation(line: 1901, column: 2, scope: !2099)
!2211 = !DILocation(line: 1901, column: 6, scope: !2099)
!2212 = !DILocation(line: 1901, column: 22, scope: !2099)
!2213 = !DILocation(line: 1903, column: 2, scope: !2099)
!2214 = !DILocation(line: 1903, column: 6, scope: !2099)
!2215 = !DILocation(line: 1903, column: 21, scope: !2099)
!2216 = !DILocation(line: 1904, column: 2, scope: !2099)
!2217 = !DILocation(line: 1904, column: 6, scope: !2099)
!2218 = !DILocation(line: 1904, column: 19, scope: !2099)
!2219 = !DILocation(line: 1905, column: 2, scope: !2099)
!2220 = !DILocation(line: 1905, column: 6, scope: !2099)
!2221 = !DILocation(line: 1905, column: 20, scope: !2099)
!2222 = !DILocation(line: 1906, column: 2, scope: !2099)
!2223 = !DILocation(line: 1906, column: 6, scope: !2099)
!2224 = !DILocation(line: 1906, column: 22, scope: !2099)
!2225 = !DILocation(line: 1907, column: 2, scope: !2099)
!2226 = !DILocation(line: 1907, column: 6, scope: !2099)
!2227 = !DILocation(line: 1907, column: 25, scope: !2099)
!2228 = !DILocation(line: 1908, column: 2, scope: !2099)
!2229 = !DILocation(line: 1908, column: 6, scope: !2099)
!2230 = !DILocation(line: 1908, column: 26, scope: !2099)
!2231 = !DILocation(line: 1909, column: 2, scope: !2099)
!2232 = !DILocation(line: 1909, column: 6, scope: !2099)
!2233 = !DILocation(line: 1909, column: 25, scope: !2099)
!2234 = !DILocation(line: 1911, column: 2, scope: !2099)
!2235 = !DILocation(line: 1911, column: 6, scope: !2099)
!2236 = !DILocation(line: 1911, column: 24, scope: !2099)
!2237 = !DILocation(line: 1912, column: 2, scope: !2099)
!2238 = !DILocation(line: 1912, column: 6, scope: !2099)
!2239 = !DILocation(line: 1912, column: 24, scope: !2099)
!2240 = !DILocation(line: 1913, column: 2, scope: !2099)
!2241 = !DILocation(line: 1913, column: 6, scope: !2099)
!2242 = !DILocation(line: 1913, column: 24, scope: !2099)
!2243 = !DILocation(line: 1914, column: 2, scope: !2099)
!2244 = !DILocation(line: 1914, column: 6, scope: !2099)
!2245 = !DILocation(line: 1914, column: 30, scope: !2099)
!2246 = !DILocation(line: 1916, column: 2, scope: !2099)
!2247 = !DILocation(line: 1916, column: 6, scope: !2099)
!2248 = !DILocation(line: 1916, column: 14, scope: !2099)
!2249 = !DILocation(line: 1918, column: 9, scope: !2099)
!2250 = !DILocation(line: 1918, column: 2, scope: !2099)
!2251 = distinct !DISubprogram(name: "CDDM_from_mesh", scope: !1, file: !1, line: 1948, type: !2252, scopeLine: 1949, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!2252 = !DISubroutineType(types: !2253)
!2253 = !{!1037, !2254}
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 64)
!2255 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !2256, line: 133, baseType: !2257)
!2256 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !2256, line: 58, size: 11008, elements: !2258)
!2258 = !{!2259, !2260, !2261, !2262, !2263, !2264, !2265, !2271, !2272, !2282, !2283, !2289, !2297, !2298, !2299, !2312, !2313, !2314, !2326, !2334, !2336, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2257, file: !2256, line: 59, baseType: !324, size: 960)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2257, file: !2256, line: 60, baseType: !386, size: 64, offset: 960)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2257, file: !2256, line: 62, baseType: !819, size: 64, offset: 1024)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2257, file: !2256, line: 64, baseType: !816, size: 64, offset: 1088)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2257, file: !2256, line: 65, baseType: !1823, size: 64, offset: 1152)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2257, file: !2256, line: 66, baseType: !318, size: 64, offset: 1216)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !2257, file: !2256, line: 67, baseType: !2266, size: 64, offset: 1280)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !123, line: 154, size: 64, elements: !2268)
!2268 = !{!2269, !2270}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2267, file: !123, line: 155, baseType: !219, size: 32)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2267, file: !123, line: 156, baseType: !219, size: 32, offset: 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !2257, file: !2256, line: 71, baseType: !579, size: 64, offset: 1344)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !2257, file: !2256, line: 72, baseType: !2273, size: 64, offset: 1408)
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 64)
!2274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !123, line: 93, size: 128, elements: !2275)
!2275 = !{!2276, !2277, !2278, !2279, !2280, !2281}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !2274, file: !123, line: 94, baseType: !1157, size: 64)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2274, file: !123, line: 95, baseType: !229, size: 8, offset: 64)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !2274, file: !123, line: 95, baseType: !229, size: 8, offset: 72)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2274, file: !123, line: 96, baseType: !302, size: 16, offset: 80)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !2274, file: !123, line: 96, baseType: !302, size: 16, offset: 96)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2274, file: !123, line: 96, baseType: !302, size: 16, offset: 112)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !2257, file: !2256, line: 73, baseType: !588, size: 64, offset: 1472)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !2257, file: !2256, line: 74, baseType: !2284, size: 64, offset: 1536)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 64)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !123, line: 109, size: 96, elements: !2286)
!2286 = !{!2287, !2288}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2285, file: !123, line: 110, baseType: !1059, size: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2285, file: !123, line: 111, baseType: !219, size: 32, offset: 64)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !2257, file: !2256, line: 75, baseType: !2290, size: 64, offset: 1600)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 64)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !123, line: 129, size: 32, elements: !2292)
!2292 = !{!2293, !2294, !2295, !2296}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2291, file: !123, line: 130, baseType: !229, size: 8)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2291, file: !123, line: 130, baseType: !229, size: 8, offset: 8)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2291, file: !123, line: 130, baseType: !229, size: 8, offset: 16)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2291, file: !123, line: 130, baseType: !229, size: 8, offset: 24)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !2257, file: !2256, line: 80, baseType: !1512, size: 64, offset: 1664)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !2257, file: !2256, line: 81, baseType: !1718, size: 64, offset: 1728)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !2257, file: !2256, line: 82, baseType: !2300, size: 64, offset: 1792)
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 64)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !2256, line: 136, size: 512, elements: !2302)
!2302 = !{!2303, !2304, !2305, !2307, !2308, !2309, !2310, !2311}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !2301, file: !2256, line: 137, baseType: !233, size: 64)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2301, file: !2256, line: 138, baseType: !1722, size: 256, offset: 64)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2301, file: !2256, line: 139, baseType: !2306, size: 128, offset: 320)
!2306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 128, elements: !505)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2301, file: !2256, line: 140, baseType: !229, size: 8, offset: 448)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !2301, file: !2256, line: 140, baseType: !229, size: 8, offset: 456)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2301, file: !2256, line: 141, baseType: !302, size: 16, offset: 464)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !2301, file: !2256, line: 141, baseType: !302, size: 16, offset: 480)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !2301, file: !2256, line: 141, baseType: !302, size: 16, offset: 496)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !2257, file: !2256, line: 83, baseType: !570, size: 64, offset: 1856)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !2257, file: !2256, line: 84, baseType: !1500, size: 64, offset: 1920)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !2257, file: !2256, line: 85, baseType: !2315, size: 64, offset: 1984)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 64)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !123, line: 59, size: 128, elements: !2317)
!2317 = !{!2318, !2324, !2325}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !2316, file: !123, line: 60, baseType: !2319, size: 64)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 64)
!2320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !123, line: 54, size: 64, elements: !2321)
!2321 = !{!2322, !2323}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !2320, file: !123, line: 55, baseType: !219, size: 32)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2320, file: !123, line: 56, baseType: !313, size: 32, offset: 32)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !2316, file: !123, line: 61, baseType: !219, size: 32, offset: 64)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2316, file: !123, line: 62, baseType: !219, size: 32, offset: 96)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !2257, file: !2256, line: 89, baseType: !2327, size: 64, offset: 2048)
!2327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2328, size: 64)
!2328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !123, line: 74, size: 32, elements: !2329)
!2329 = !{!2330, !2331, !2332, !2333}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2328, file: !123, line: 75, baseType: !229, size: 8)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2328, file: !123, line: 75, baseType: !229, size: 8, offset: 8)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2328, file: !123, line: 75, baseType: !229, size: 8, offset: 16)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2328, file: !123, line: 75, baseType: !229, size: 8, offset: 24)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !2257, file: !2256, line: 90, baseType: !2335, size: 64, offset: 2112)
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !2257, file: !2256, line: 93, baseType: !2337, size: 64, offset: 2176)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 64)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !2339, line: 54, size: 896, elements: !2340)
!2339 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_editmesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2340 = !{!2341, !2342, !2343, !2344, !2347, !2348, !2349, !2350, !2353, !2356, !2357, !2358, !2359, !2360, !2361, !2362}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !2338, file: !2339, line: 55, baseType: !611, size: 64)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "emcopy", scope: !2338, file: !2339, line: 58, baseType: !2337, size: 64, offset: 64)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "emcopyusers", scope: !2338, file: !2339, line: 59, baseType: !219, size: 32, offset: 128)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "looptris", scope: !2338, file: !2339, line: 63, baseType: !2345, size: 64, offset: 192)
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 64)
!2346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !659, size: 192, elements: !423)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "tottri", scope: !2338, file: !2339, line: 64, baseType: !219, size: 32, offset: 256)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !2338, file: !2339, line: 67, baseType: !1037, size: 64, offset: 320)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "derivedCage", scope: !2338, file: !2339, line: 67, baseType: !1037, size: 64, offset: 384)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !2338, file: !2339, line: 68, baseType: !2351, size: 64, offset: 448)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataMask", file: !2352, line: 48, baseType: !1040)
!2352 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColor", scope: !2338, file: !2339, line: 69, baseType: !2354, size: 64, offset: 512)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!2355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 32, elements: !505)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColorLen", scope: !2338, file: !2339, line: 70, baseType: !219, size: 32, offset: 576)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColor", scope: !2338, file: !2339, line: 71, baseType: !2354, size: 64, offset: 640)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColorLen", scope: !2338, file: !2339, line: 72, baseType: !219, size: 32, offset: 704)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2338, file: !2339, line: 75, baseType: !302, size: 16, offset: 736)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2338, file: !2339, line: 76, baseType: !302, size: 16, offset: 752)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2338, file: !2339, line: 79, baseType: !556, size: 64, offset: 768)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cdlayer", scope: !2338, file: !2339, line: 82, baseType: !219, size: 32, offset: 832)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !2257, file: !2256, line: 95, baseType: !211, size: 1600, offset: 2240)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !2257, file: !2256, line: 95, baseType: !211, size: 1600, offset: 3840)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !2257, file: !2256, line: 95, baseType: !211, size: 1600, offset: 5440)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !2257, file: !2256, line: 98, baseType: !211, size: 1600, offset: 7040)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !2257, file: !2256, line: 98, baseType: !211, size: 1600, offset: 8640)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2257, file: !2256, line: 101, baseType: !219, size: 32, offset: 10240)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !2257, file: !2256, line: 101, baseType: !219, size: 32, offset: 10272)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !2257, file: !2256, line: 101, baseType: !219, size: 32, offset: 10304)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !2257, file: !2256, line: 101, baseType: !219, size: 32, offset: 10336)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !2257, file: !2256, line: 104, baseType: !219, size: 32, offset: 10368)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !2257, file: !2256, line: 104, baseType: !219, size: 32, offset: 10400)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !2257, file: !2256, line: 111, baseType: !219, size: 32, offset: 10432)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2257, file: !2256, line: 114, baseType: !422, size: 96, offset: 10464)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2257, file: !2256, line: 115, baseType: !422, size: 96, offset: 10560)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !2257, file: !2256, line: 116, baseType: !422, size: 96, offset: 10656)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !2257, file: !2256, line: 118, baseType: !219, size: 32, offset: 10752)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !2257, file: !2256, line: 119, baseType: !302, size: 16, offset: 10784)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2257, file: !2256, line: 119, baseType: !302, size: 16, offset: 10800)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !2257, file: !2256, line: 120, baseType: !313, size: 32, offset: 10816)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2257, file: !2256, line: 121, baseType: !219, size: 32, offset: 10848)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !2257, file: !2256, line: 124, baseType: !229, size: 8, offset: 10880)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2257, file: !2256, line: 124, baseType: !229, size: 8, offset: 10888)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !2257, file: !2256, line: 126, baseType: !229, size: 8, offset: 10896)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !2257, file: !2256, line: 126, baseType: !229, size: 8, offset: 10904)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !2257, file: !2256, line: 127, baseType: !229, size: 8, offset: 10912)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !2257, file: !2256, line: 128, baseType: !229, size: 8, offset: 10920)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !2257, file: !2256, line: 130, baseType: !302, size: 16, offset: 10928)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !2257, file: !2256, line: 132, baseType: !2391, size: 64, offset: 10944)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !123, line: 233, size: 3584, elements: !2393)
!2393 = !{!2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2408}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !2392, file: !123, line: 234, baseType: !375, size: 128)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !2392, file: !123, line: 235, baseType: !1780, size: 64, offset: 128)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !2392, file: !123, line: 237, baseType: !309, size: 8, offset: 192)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2392, file: !123, line: 237, baseType: !309, size: 8, offset: 200)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !2392, file: !123, line: 237, baseType: !309, size: 8, offset: 208)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !2392, file: !123, line: 237, baseType: !309, size: 8, offset: 216)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !2392, file: !123, line: 237, baseType: !309, size: 8, offset: 224)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !2392, file: !123, line: 237, baseType: !309, size: 8, offset: 232)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !2392, file: !123, line: 238, baseType: !309, size: 8, offset: 240)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2392, file: !123, line: 238, baseType: !309, size: 8, offset: 248)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !2392, file: !123, line: 241, baseType: !210, size: 1600, offset: 256)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !2392, file: !123, line: 242, baseType: !210, size: 1600, offset: 1856)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !2392, file: !123, line: 243, baseType: !2407, size: 64, offset: 3456)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !2392, file: !123, line: 244, baseType: !912, size: 64, offset: 3520)
!2409 = !DILocalVariable(name: "mesh", arg: 1, scope: !2251, file: !1, line: 1948, type: !2254)
!2410 = !DILocation(line: 1948, column: 35, scope: !2251)
!2411 = !DILocalVariable(name: "cddm", scope: !2251, file: !1, line: 1950, type: !201)
!2412 = !DILocation(line: 1950, column: 17, scope: !2251)
!2413 = !DILocation(line: 1950, column: 24, scope: !2251)
!2414 = !DILocalVariable(name: "dm", scope: !2251, file: !1, line: 1951, type: !1477)
!2415 = !DILocation(line: 1951, column: 15, scope: !2251)
!2416 = !DILocation(line: 1951, column: 21, scope: !2251)
!2417 = !DILocation(line: 1951, column: 27, scope: !2251)
!2418 = !DILocalVariable(name: "mask", scope: !2251, file: !1, line: 1952, type: !2351)
!2419 = !DILocation(line: 1952, column: 17, scope: !2251)
!2420 = !DILocation(line: 1952, column: 24, scope: !2251)
!2421 = !DILocation(line: 1952, column: 37, scope: !2251)
!2422 = !DILocalVariable(name: "alloctype", scope: !2251, file: !1, line: 1953, type: !219)
!2423 = !DILocation(line: 1953, column: 6, scope: !2251)
!2424 = !DILocation(line: 1957, column: 10, scope: !2251)
!2425 = !DILocation(line: 1957, column: 28, scope: !2251)
!2426 = !DILocation(line: 1957, column: 34, scope: !2251)
!2427 = !DILocation(line: 1957, column: 43, scope: !2251)
!2428 = !DILocation(line: 1957, column: 49, scope: !2251)
!2429 = !DILocation(line: 1957, column: 58, scope: !2251)
!2430 = !DILocation(line: 1957, column: 64, scope: !2251)
!2431 = !DILocation(line: 1958, column: 10, scope: !2251)
!2432 = !DILocation(line: 1958, column: 16, scope: !2251)
!2433 = !DILocation(line: 1958, column: 25, scope: !2251)
!2434 = !DILocation(line: 1958, column: 31, scope: !2251)
!2435 = !DILocation(line: 1957, column: 2, scope: !2251)
!2436 = !DILocation(line: 1960, column: 2, scope: !2251)
!2437 = !DILocation(line: 1960, column: 6, scope: !2251)
!2438 = !DILocation(line: 1960, column: 19, scope: !2251)
!2439 = !DILocation(line: 1961, column: 16, scope: !2251)
!2440 = !DILocation(line: 1961, column: 22, scope: !2251)
!2441 = !DILocation(line: 1961, column: 2, scope: !2251)
!2442 = !DILocation(line: 1961, column: 6, scope: !2251)
!2443 = !DILocation(line: 1961, column: 14, scope: !2251)
!2444 = !DILocation(line: 1963, column: 12, scope: !2251)
!2445 = !DILocation(line: 1965, column: 20, scope: !2251)
!2446 = !DILocation(line: 1965, column: 26, scope: !2251)
!2447 = !DILocation(line: 1965, column: 34, scope: !2251)
!2448 = !DILocation(line: 1965, column: 38, scope: !2251)
!2449 = !DILocation(line: 1965, column: 48, scope: !2251)
!2450 = !DILocation(line: 1965, column: 54, scope: !2251)
!2451 = !DILocation(line: 1966, column: 19, scope: !2251)
!2452 = !DILocation(line: 1966, column: 25, scope: !2251)
!2453 = !DILocation(line: 1965, column: 2, scope: !2251)
!2454 = !DILocation(line: 1967, column: 20, scope: !2251)
!2455 = !DILocation(line: 1967, column: 26, scope: !2251)
!2456 = !DILocation(line: 1967, column: 34, scope: !2251)
!2457 = !DILocation(line: 1967, column: 38, scope: !2251)
!2458 = !DILocation(line: 1967, column: 48, scope: !2251)
!2459 = !DILocation(line: 1967, column: 54, scope: !2251)
!2460 = !DILocation(line: 1968, column: 19, scope: !2251)
!2461 = !DILocation(line: 1968, column: 25, scope: !2251)
!2462 = !DILocation(line: 1967, column: 2, scope: !2251)
!2463 = !DILocation(line: 1969, column: 20, scope: !2251)
!2464 = !DILocation(line: 1969, column: 26, scope: !2251)
!2465 = !DILocation(line: 1969, column: 34, scope: !2251)
!2466 = !DILocation(line: 1969, column: 38, scope: !2251)
!2467 = !DILocation(line: 1969, column: 48, scope: !2251)
!2468 = !DILocation(line: 1969, column: 53, scope: !2251)
!2469 = !DILocation(line: 1969, column: 74, scope: !2251)
!2470 = !DILocation(line: 1970, column: 19, scope: !2251)
!2471 = !DILocation(line: 1970, column: 25, scope: !2251)
!2472 = !DILocation(line: 1969, column: 2, scope: !2251)
!2473 = !DILocation(line: 1971, column: 20, scope: !2251)
!2474 = !DILocation(line: 1971, column: 26, scope: !2251)
!2475 = !DILocation(line: 1971, column: 34, scope: !2251)
!2476 = !DILocation(line: 1971, column: 38, scope: !2251)
!2477 = !DILocation(line: 1971, column: 48, scope: !2251)
!2478 = !DILocation(line: 1971, column: 54, scope: !2251)
!2479 = !DILocation(line: 1972, column: 19, scope: !2251)
!2480 = !DILocation(line: 1972, column: 25, scope: !2251)
!2481 = !DILocation(line: 1971, column: 2, scope: !2251)
!2482 = !DILocation(line: 1973, column: 20, scope: !2251)
!2483 = !DILocation(line: 1973, column: 26, scope: !2251)
!2484 = !DILocation(line: 1973, column: 34, scope: !2251)
!2485 = !DILocation(line: 1973, column: 38, scope: !2251)
!2486 = !DILocation(line: 1973, column: 48, scope: !2251)
!2487 = !DILocation(line: 1973, column: 54, scope: !2251)
!2488 = !DILocation(line: 1974, column: 19, scope: !2251)
!2489 = !DILocation(line: 1974, column: 25, scope: !2251)
!2490 = !DILocation(line: 1973, column: 2, scope: !2251)
!2491 = !DILocation(line: 1976, column: 38, scope: !2251)
!2492 = !DILocation(line: 1976, column: 42, scope: !2251)
!2493 = !DILocation(line: 1976, column: 16, scope: !2251)
!2494 = !DILocation(line: 1976, column: 2, scope: !2251)
!2495 = !DILocation(line: 1976, column: 8, scope: !2251)
!2496 = !DILocation(line: 1976, column: 14, scope: !2251)
!2497 = !DILocation(line: 1977, column: 38, scope: !2251)
!2498 = !DILocation(line: 1977, column: 42, scope: !2251)
!2499 = !DILocation(line: 1977, column: 16, scope: !2251)
!2500 = !DILocation(line: 1977, column: 2, scope: !2251)
!2501 = !DILocation(line: 1977, column: 8, scope: !2251)
!2502 = !DILocation(line: 1977, column: 14, scope: !2251)
!2503 = !DILocation(line: 1978, column: 38, scope: !2251)
!2504 = !DILocation(line: 1978, column: 42, scope: !2251)
!2505 = !DILocation(line: 1978, column: 16, scope: !2251)
!2506 = !DILocation(line: 1978, column: 2, scope: !2251)
!2507 = !DILocation(line: 1978, column: 8, scope: !2251)
!2508 = !DILocation(line: 1978, column: 14, scope: !2251)
!2509 = !DILocation(line: 1979, column: 38, scope: !2251)
!2510 = !DILocation(line: 1979, column: 42, scope: !2251)
!2511 = !DILocation(line: 1979, column: 16, scope: !2251)
!2512 = !DILocation(line: 1979, column: 2, scope: !2251)
!2513 = !DILocation(line: 1979, column: 8, scope: !2251)
!2514 = !DILocation(line: 1979, column: 14, scope: !2251)
!2515 = !DILocation(line: 1980, column: 38, scope: !2251)
!2516 = !DILocation(line: 1980, column: 42, scope: !2251)
!2517 = !DILocation(line: 1980, column: 16, scope: !2251)
!2518 = !DILocation(line: 1980, column: 2, scope: !2251)
!2519 = !DILocation(line: 1980, column: 8, scope: !2251)
!2520 = !DILocation(line: 1980, column: 14, scope: !2251)
!2521 = !DILocation(line: 1988, column: 9, scope: !2251)
!2522 = !DILocation(line: 1988, column: 2, scope: !2251)
!2523 = distinct !DISubprogram(name: "CDDM_from_curve", scope: !1, file: !1, line: 1991, type: !2524, scopeLine: 1992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!2524 = !DISubroutineType(types: !2525)
!2525 = !{!1037, !2526}
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 64)
!2527 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !132, line: 295, baseType: !557)
!2528 = !DILocalVariable(name: "ob", arg: 1, scope: !2523, file: !1, line: 1991, type: !2526)
!2529 = !DILocation(line: 1991, column: 38, scope: !2523)
!2530 = !DILocalVariable(name: "disp", scope: !2523, file: !1, line: 1993, type: !375)
!2531 = !DILocation(line: 1993, column: 11, scope: !2523)
!2532 = !DILocation(line: 1995, column: 6, scope: !2533)
!2533 = distinct !DILexicalBlock(scope: !2523, file: !1, line: 1995, column: 6)
!2534 = !DILocation(line: 1995, column: 10, scope: !2533)
!2535 = !DILocation(line: 1995, column: 6, scope: !2523)
!2536 = !DILocation(line: 1996, column: 10, scope: !2537)
!2537 = distinct !DILexicalBlock(scope: !2533, file: !1, line: 1995, column: 23)
!2538 = !DILocation(line: 1996, column: 14, scope: !2537)
!2539 = !DILocation(line: 1996, column: 27, scope: !2537)
!2540 = !DILocation(line: 1997, column: 2, scope: !2537)
!2541 = !DILocation(line: 1999, column: 34, scope: !2523)
!2542 = !DILocation(line: 1999, column: 9, scope: !2523)
!2543 = !DILocation(line: 1999, column: 2, scope: !2523)
!2544 = distinct !DISubprogram(name: "CDDM_from_curve_displist", scope: !1, file: !1, line: 2002, type: !2545, scopeLine: 2003, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!2545 = !DISubroutineType(types: !2546)
!2546 = !{!1477, !2526, !1051}
!2547 = !DILocalVariable(name: "ob", arg: 1, scope: !2544, file: !1, line: 2002, type: !2526)
!2548 = !DILocation(line: 2002, column: 47, scope: !2544)
!2549 = !DILocalVariable(name: "dispbase", arg: 2, scope: !2544, file: !1, line: 2002, type: !1051)
!2550 = !DILocation(line: 2002, column: 61, scope: !2544)
!2551 = !DILocalVariable(name: "cu", scope: !2544, file: !1, line: 2004, type: !1800)
!2552 = !DILocation(line: 2004, column: 9, scope: !2544)
!2553 = !DILocation(line: 2004, column: 24, scope: !2544)
!2554 = !DILocation(line: 2004, column: 28, scope: !2544)
!2555 = !DILocation(line: 2004, column: 14, scope: !2544)
!2556 = !DILocalVariable(name: "dm", scope: !2544, file: !1, line: 2005, type: !1477)
!2557 = !DILocation(line: 2005, column: 15, scope: !2544)
!2558 = !DILocalVariable(name: "cddm", scope: !2544, file: !1, line: 2006, type: !201)
!2559 = !DILocation(line: 2006, column: 17, scope: !2544)
!2560 = !DILocalVariable(name: "allvert", scope: !2544, file: !1, line: 2007, type: !1780)
!2561 = !DILocation(line: 2007, column: 9, scope: !2544)
!2562 = !DILocalVariable(name: "alledge", scope: !2544, file: !1, line: 2008, type: !1783)
!2563 = !DILocation(line: 2008, column: 9, scope: !2544)
!2564 = !DILocalVariable(name: "allloop", scope: !2544, file: !1, line: 2009, type: !1789)
!2565 = !DILocation(line: 2009, column: 9, scope: !2544)
!2566 = !DILocalVariable(name: "allpoly", scope: !2544, file: !1, line: 2010, type: !1792)
!2567 = !DILocation(line: 2010, column: 9, scope: !2544)
!2568 = !DILocalVariable(name: "alluv", scope: !2544, file: !1, line: 2011, type: !2569)
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2570, size: 64)
!2570 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoopUV", file: !123, line: 112, baseType: !2285)
!2571 = !DILocation(line: 2011, column: 11, scope: !2544)
!2572 = !DILocalVariable(name: "totvert", scope: !2544, file: !1, line: 2012, type: !219)
!2573 = !DILocation(line: 2012, column: 6, scope: !2544)
!2574 = !DILocalVariable(name: "totedge", scope: !2544, file: !1, line: 2012, type: !219)
!2575 = !DILocation(line: 2012, column: 15, scope: !2544)
!2576 = !DILocalVariable(name: "totloop", scope: !2544, file: !1, line: 2012, type: !219)
!2577 = !DILocation(line: 2012, column: 24, scope: !2544)
!2578 = !DILocalVariable(name: "totpoly", scope: !2544, file: !1, line: 2012, type: !219)
!2579 = !DILocation(line: 2012, column: 33, scope: !2544)
!2580 = !DILocalVariable(name: "use_orco_uv", scope: !2544, file: !1, line: 2013, type: !309)
!2581 = !DILocation(line: 2013, column: 7, scope: !2544)
!2582 = !DILocation(line: 2013, column: 22, scope: !2544)
!2583 = !DILocation(line: 2013, column: 26, scope: !2544)
!2584 = !DILocation(line: 2013, column: 31, scope: !2544)
!2585 = !DILocation(line: 2013, column: 45, scope: !2544)
!2586 = !DILocation(line: 2013, column: 21, scope: !2544)
!2587 = !DILocation(line: 2015, column: 39, scope: !2588)
!2588 = distinct !DILexicalBlock(scope: !2544, file: !1, line: 2015, column: 6)
!2589 = !DILocation(line: 2015, column: 43, scope: !2588)
!2590 = !DILocation(line: 2016, column: 70, scope: !2588)
!2591 = !DILocation(line: 2016, column: 69, scope: !2588)
!2592 = !DILocation(line: 2015, column: 6, scope: !2588)
!2593 = !DILocation(line: 2017, column: 59, scope: !2588)
!2594 = !DILocation(line: 2015, column: 6, scope: !2544)
!2595 = !DILocation(line: 2020, column: 10, scope: !2596)
!2596 = distinct !DILexicalBlock(scope: !2588, file: !1, line: 2018, column: 2)
!2597 = !DILocation(line: 2020, column: 3, scope: !2596)
!2598 = !DILocation(line: 2023, column: 16, scope: !2544)
!2599 = !DILocation(line: 2023, column: 25, scope: !2544)
!2600 = !DILocation(line: 2023, column: 37, scope: !2544)
!2601 = !DILocation(line: 2023, column: 46, scope: !2544)
!2602 = !DILocation(line: 2023, column: 7, scope: !2544)
!2603 = !DILocation(line: 2023, column: 5, scope: !2544)
!2604 = !DILocation(line: 2024, column: 2, scope: !2544)
!2605 = !DILocation(line: 2024, column: 6, scope: !2544)
!2606 = !DILocation(line: 2024, column: 19, scope: !2544)
!2607 = !DILocation(line: 2025, column: 2, scope: !2544)
!2608 = !DILocation(line: 2025, column: 6, scope: !2544)
!2609 = !DILocation(line: 2025, column: 12, scope: !2544)
!2610 = !DILocation(line: 2027, column: 26, scope: !2544)
!2611 = !DILocation(line: 2027, column: 9, scope: !2544)
!2612 = !DILocation(line: 2027, column: 7, scope: !2544)
!2613 = !DILocation(line: 2029, column: 9, scope: !2544)
!2614 = !DILocation(line: 2029, column: 15, scope: !2544)
!2615 = !DILocation(line: 2029, column: 2, scope: !2544)
!2616 = !DILocation(line: 2029, column: 22, scope: !2544)
!2617 = !DILocation(line: 2029, column: 31, scope: !2544)
!2618 = !DILocation(line: 2029, column: 39, scope: !2544)
!2619 = !DILocation(line: 2030, column: 9, scope: !2544)
!2620 = !DILocation(line: 2030, column: 15, scope: !2544)
!2621 = !DILocation(line: 2030, column: 2, scope: !2544)
!2622 = !DILocation(line: 2030, column: 22, scope: !2544)
!2623 = !DILocation(line: 2030, column: 31, scope: !2544)
!2624 = !DILocation(line: 2030, column: 39, scope: !2544)
!2625 = !DILocation(line: 2031, column: 9, scope: !2544)
!2626 = !DILocation(line: 2031, column: 15, scope: !2544)
!2627 = !DILocation(line: 2031, column: 2, scope: !2544)
!2628 = !DILocation(line: 2031, column: 22, scope: !2544)
!2629 = !DILocation(line: 2031, column: 31, scope: !2544)
!2630 = !DILocation(line: 2031, column: 39, scope: !2544)
!2631 = !DILocation(line: 2032, column: 9, scope: !2544)
!2632 = !DILocation(line: 2032, column: 15, scope: !2544)
!2633 = !DILocation(line: 2032, column: 2, scope: !2544)
!2634 = !DILocation(line: 2032, column: 22, scope: !2544)
!2635 = !DILocation(line: 2032, column: 31, scope: !2544)
!2636 = !DILocation(line: 2032, column: 39, scope: !2544)
!2637 = !DILocation(line: 2034, column: 6, scope: !2638)
!2638 = distinct !DILexicalBlock(scope: !2544, file: !1, line: 2034, column: 6)
!2639 = !DILocation(line: 2034, column: 6, scope: !2544)
!2640 = !DILocalVariable(name: "uvname", scope: !2641, file: !1, line: 2035, type: !712)
!2641 = distinct !DILexicalBlock(scope: !2638, file: !1, line: 2034, column: 13)
!2642 = !DILocation(line: 2035, column: 15, scope: !2641)
!2643 = !DILocation(line: 2036, column: 31, scope: !2641)
!2644 = !DILocation(line: 2036, column: 37, scope: !2641)
!2645 = !DILocation(line: 2036, column: 40, scope: !2641)
!2646 = !DILocation(line: 2036, column: 81, scope: !2641)
!2647 = !DILocation(line: 2036, column: 90, scope: !2641)
!2648 = !DILocation(line: 2036, column: 3, scope: !2641)
!2649 = !DILocation(line: 2037, column: 31, scope: !2641)
!2650 = !DILocation(line: 2037, column: 37, scope: !2641)
!2651 = !DILocation(line: 2037, column: 40, scope: !2641)
!2652 = !DILocation(line: 2037, column: 73, scope: !2641)
!2653 = !DILocation(line: 2037, column: 80, scope: !2641)
!2654 = !DILocation(line: 2037, column: 89, scope: !2641)
!2655 = !DILocation(line: 2037, column: 3, scope: !2641)
!2656 = !DILocation(line: 2038, column: 2, scope: !2641)
!2657 = !DILocation(line: 2040, column: 2, scope: !2544)
!2658 = !DILocation(line: 2040, column: 12, scope: !2544)
!2659 = !DILocation(line: 2041, column: 2, scope: !2544)
!2660 = !DILocation(line: 2041, column: 12, scope: !2544)
!2661 = !DILocation(line: 2042, column: 2, scope: !2544)
!2662 = !DILocation(line: 2042, column: 12, scope: !2544)
!2663 = !DILocation(line: 2043, column: 2, scope: !2544)
!2664 = !DILocation(line: 2043, column: 12, scope: !2544)
!2665 = !DILocation(line: 2045, column: 9, scope: !2544)
!2666 = !DILocation(line: 2045, column: 2, scope: !2544)
!2667 = !DILocation(line: 2046, column: 1, scope: !2544)
!2668 = distinct !DISubprogram(name: "CDDM_from_bmesh", scope: !1, file: !1, line: 2263, type: !2669, scopeLine: 2264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!2669 = !DISubroutineType(types: !2670)
!2670 = !{!1037, !611, !1730}
!2671 = !DILocalVariable(name: "bm", arg: 1, scope: !2668, file: !1, line: 2263, type: !611)
!2672 = !DILocation(line: 2263, column: 51, scope: !2668)
!2673 = !DILocalVariable(name: "use_mdisps", arg: 2, scope: !2668, file: !1, line: 2263, type: !1730)
!2674 = !DILocation(line: 2263, column: 66, scope: !2668)
!2675 = !DILocation(line: 2265, column: 28, scope: !2668)
!2676 = !DILocation(line: 2265, column: 32, scope: !2668)
!2677 = !DILocation(line: 2265, column: 9, scope: !2668)
!2678 = !DILocation(line: 2265, column: 2, scope: !2668)
!2679 = distinct !DISubprogram(name: "cddm_from_bmesh_ex", scope: !1, file: !1, line: 2096, type: !2680, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!2680 = !DISubroutineType(types: !2681)
!2681 = !{!1477, !611, !1730, !1730, !2682, !1905}
!2682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !219)
!2683 = !DILocalVariable(name: "bm", arg: 1, scope: !2679, file: !1, line: 2096, type: !611)
!2684 = !DILocation(line: 2096, column: 54, scope: !2679)
!2685 = !DILocalVariable(name: "use_mdisps", arg: 2, scope: !2679, file: !1, line: 2096, type: !1730)
!2686 = !DILocation(line: 2096, column: 69, scope: !2679)
!2687 = !DILocalVariable(name: "use_tessface", arg: 3, scope: !2679, file: !1, line: 2098, type: !1730)
!2688 = !DILocation(line: 2098, column: 51, scope: !2679)
!2689 = !DILocalVariable(name: "em_tottri", arg: 4, scope: !2679, file: !1, line: 2099, type: !2682)
!2690 = !DILocation(line: 2099, column: 50, scope: !2679)
!2691 = !DILocalVariable(name: "em_looptris", arg: 5, scope: !2679, file: !1, line: 2099, type: !1905)
!2692 = !DILocation(line: 2099, column: 77, scope: !2679)
!2693 = !DILocalVariable(name: "dm", scope: !2679, file: !1, line: 2102, type: !1477)
!2694 = !DILocation(line: 2102, column: 15, scope: !2679)
!2695 = !DILocation(line: 2102, column: 29, scope: !2679)
!2696 = !DILocation(line: 2102, column: 33, scope: !2679)
!2697 = !DILocation(line: 2103, column: 29, scope: !2679)
!2698 = !DILocation(line: 2103, column: 33, scope: !2679)
!2699 = !DILocation(line: 2104, column: 29, scope: !2679)
!2700 = !DILocation(line: 2104, column: 44, scope: !2679)
!2701 = !DILocation(line: 2105, column: 29, scope: !2679)
!2702 = !DILocation(line: 2105, column: 33, scope: !2679)
!2703 = !DILocation(line: 2106, column: 29, scope: !2679)
!2704 = !DILocation(line: 2106, column: 33, scope: !2679)
!2705 = !DILocation(line: 2102, column: 20, scope: !2679)
!2706 = !DILocalVariable(name: "cddm", scope: !2679, file: !1, line: 2108, type: !201)
!2707 = !DILocation(line: 2108, column: 17, scope: !2679)
!2708 = !DILocation(line: 2108, column: 41, scope: !2679)
!2709 = !DILocation(line: 2108, column: 24, scope: !2679)
!2710 = !DILocalVariable(name: "iter", scope: !2679, file: !1, line: 2109, type: !2711)
!2711 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter", file: !177, line: 186, baseType: !2712)
!2712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter", file: !177, line: 164, size: 512, elements: !2713)
!2713 = !{!2714, !2794, !2795, !2796, !2797}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2712, file: !177, line: 179, baseType: !2715, size: 320)
!2715 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2712, file: !177, line: 166, size: 320, elements: !2716)
!2716 = !{!2717, !2732, !2738, !2746, !2754, !2760, !2766, !2772, !2776, !2782, !2788}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "elem_of_mesh", scope: !2715, file: !177, line: 167, baseType: !2718, size: 192)
!2718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__elem_of_mesh", file: !177, line: 113, size: 192, elements: !2719)
!2719 = !{!2720}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "pooliter", scope: !2718, file: !177, line: 114, baseType: !2721, size: 192)
!2721 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool_iter", file: !2722, line: 80, baseType: !2723)
!2722 = !DIFile(filename: "blender/source/blender/blenlib/BLI_mempool.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_iter", file: !2722, line: 76, size: 192, elements: !2724)
!2724 = !{!2725, !2728, !2731}
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !2723, file: !2722, line: 77, baseType: !2726, size: 64)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 64)
!2727 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool", file: !2722, line: 47, baseType: !243)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "curchunk", scope: !2723, file: !2722, line: 78, baseType: !2729, size: 64, offset: 64)
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2730, size: 64)
!2730 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_chunk", file: !2722, line: 45, flags: DIFlagFwdDecl)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "curindex", scope: !2723, file: !2722, line: 79, baseType: !5, size: 32, offset: 128)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_vert", scope: !2715, file: !177, line: 169, baseType: !2733, size: 192)
!2733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_vert", file: !177, line: 116, size: 192, elements: !2734)
!2734 = !{!2735, !2736, !2737}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !2733, file: !177, line: 117, baseType: !629, size: 64)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !2733, file: !177, line: 118, baseType: !690, size: 64, offset: 64)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !2733, file: !177, line: 118, baseType: !690, size: 64, offset: 128)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_vert", scope: !2715, file: !177, line: 170, baseType: !2739, size: 320)
!2739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_vert", file: !177, line: 120, size: 320, elements: !2740)
!2740 = !{!2741, !2742, !2743, !2744, !2745}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !2739, file: !177, line: 121, baseType: !629, size: 64)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !2739, file: !177, line: 122, baseType: !672, size: 64, offset: 64)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !2739, file: !177, line: 122, baseType: !672, size: 64, offset: 128)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !2739, file: !177, line: 123, baseType: !690, size: 64, offset: 192)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !2739, file: !177, line: 123, baseType: !690, size: 64, offset: 256)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_vert", scope: !2715, file: !177, line: 171, baseType: !2747, size: 320)
!2747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_vert", file: !177, line: 125, size: 320, elements: !2748)
!2748 = !{!2749, !2750, !2751, !2752, !2753}
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !2747, file: !177, line: 126, baseType: !629, size: 64)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !2747, file: !177, line: 127, baseType: !672, size: 64, offset: 64)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !2747, file: !177, line: 127, baseType: !672, size: 64, offset: 128)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !2747, file: !177, line: 128, baseType: !690, size: 64, offset: 192)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !2747, file: !177, line: 128, baseType: !690, size: 64, offset: 256)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_edge", scope: !2715, file: !177, line: 172, baseType: !2755, size: 192)
!2755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_edge", file: !177, line: 130, size: 192, elements: !2756)
!2756 = !{!2757, !2758, !2759}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !2755, file: !177, line: 131, baseType: !690, size: 64)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !2755, file: !177, line: 132, baseType: !672, size: 64, offset: 64)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !2755, file: !177, line: 132, baseType: !672, size: 64, offset: 128)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_loop", scope: !2715, file: !177, line: 173, baseType: !2761, size: 192)
!2761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_loop", file: !177, line: 134, size: 192, elements: !2762)
!2762 = !{!2763, !2764, !2765}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !2761, file: !177, line: 135, baseType: !672, size: 64)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !2761, file: !177, line: 136, baseType: !672, size: 64, offset: 64)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !2761, file: !177, line: 136, baseType: !672, size: 64, offset: 128)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_edge", scope: !2715, file: !177, line: 174, baseType: !2767, size: 192)
!2767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_edge", file: !177, line: 138, size: 192, elements: !2768)
!2768 = !{!2769, !2770, !2771}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !2767, file: !177, line: 139, baseType: !690, size: 64)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !2767, file: !177, line: 140, baseType: !672, size: 64, offset: 64)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !2767, file: !177, line: 140, baseType: !672, size: 64, offset: 128)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_edge", scope: !2715, file: !177, line: 175, baseType: !2773, size: 64)
!2773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_edge", file: !177, line: 142, size: 64, elements: !2774)
!2774 = !{!2775}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !2773, file: !177, line: 143, baseType: !690, size: 64)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_face", scope: !2715, file: !177, line: 176, baseType: !2777, size: 192)
!2777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_face", file: !177, line: 145, size: 192, elements: !2778)
!2778 = !{!2779, !2780, !2781}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !2777, file: !177, line: 146, baseType: !694, size: 64)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !2777, file: !177, line: 147, baseType: !672, size: 64, offset: 64)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !2777, file: !177, line: 147, baseType: !672, size: 64, offset: 128)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_face", scope: !2715, file: !177, line: 177, baseType: !2783, size: 192)
!2783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_face", file: !177, line: 149, size: 192, elements: !2784)
!2784 = !{!2785, !2786, !2787}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !2783, file: !177, line: 150, baseType: !694, size: 64)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !2783, file: !177, line: 151, baseType: !672, size: 64, offset: 64)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !2783, file: !177, line: 151, baseType: !672, size: 64, offset: 128)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_face", scope: !2715, file: !177, line: 178, baseType: !2789, size: 192)
!2789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_face", file: !177, line: 153, size: 192, elements: !2790)
!2790 = !{!2791, !2792, !2793}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !2789, file: !177, line: 154, baseType: !694, size: 64)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !2789, file: !177, line: 155, baseType: !672, size: 64, offset: 64)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !2789, file: !177, line: 155, baseType: !672, size: 64, offset: 128)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2712, file: !177, line: 181, baseType: !1918, size: 64, offset: 320)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2712, file: !177, line: 182, baseType: !1922, size: 64, offset: 384)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2712, file: !177, line: 184, baseType: !219, size: 32, offset: 448)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "itype", scope: !2712, file: !177, line: 185, baseType: !229, size: 8, offset: 480)
!2798 = !DILocation(line: 2109, column: 9, scope: !2679)
!2799 = !DILocalVariable(name: "eve", scope: !2679, file: !1, line: 2110, type: !629)
!2800 = !DILocation(line: 2110, column: 10, scope: !2679)
!2801 = !DILocalVariable(name: "eed", scope: !2679, file: !1, line: 2111, type: !690)
!2802 = !DILocation(line: 2111, column: 10, scope: !2679)
!2803 = !DILocalVariable(name: "efa", scope: !2679, file: !1, line: 2112, type: !694)
!2804 = !DILocation(line: 2112, column: 10, scope: !2679)
!2805 = !DILocalVariable(name: "mvert", scope: !2679, file: !1, line: 2113, type: !1780)
!2806 = !DILocation(line: 2113, column: 9, scope: !2679)
!2807 = !DILocation(line: 2113, column: 17, scope: !2679)
!2808 = !DILocation(line: 2113, column: 23, scope: !2679)
!2809 = !DILocalVariable(name: "medge", scope: !2679, file: !1, line: 2114, type: !1783)
!2810 = !DILocation(line: 2114, column: 9, scope: !2679)
!2811 = !DILocation(line: 2114, column: 17, scope: !2679)
!2812 = !DILocation(line: 2114, column: 23, scope: !2679)
!2813 = !DILocalVariable(name: "mface", scope: !2679, file: !1, line: 2115, type: !1786)
!2814 = !DILocation(line: 2115, column: 9, scope: !2679)
!2815 = !DILocation(line: 2115, column: 17, scope: !2679)
!2816 = !DILocation(line: 2115, column: 23, scope: !2679)
!2817 = !DILocalVariable(name: "mloop", scope: !2679, file: !1, line: 2116, type: !1789)
!2818 = !DILocation(line: 2116, column: 9, scope: !2679)
!2819 = !DILocation(line: 2116, column: 17, scope: !2679)
!2820 = !DILocation(line: 2116, column: 23, scope: !2679)
!2821 = !DILocalVariable(name: "mpoly", scope: !2679, file: !1, line: 2117, type: !1792)
!2822 = !DILocation(line: 2117, column: 9, scope: !2679)
!2823 = !DILocation(line: 2117, column: 17, scope: !2679)
!2824 = !DILocation(line: 2117, column: 23, scope: !2679)
!2825 = !DILocalVariable(name: "numCol", scope: !2679, file: !1, line: 2118, type: !219)
!2826 = !DILocation(line: 2118, column: 6, scope: !2679)
!2827 = !DILocation(line: 2118, column: 44, scope: !2679)
!2828 = !DILocation(line: 2118, column: 48, scope: !2679)
!2829 = !DILocation(line: 2118, column: 15, scope: !2679)
!2830 = !DILocalVariable(name: "numTex", scope: !2679, file: !1, line: 2119, type: !219)
!2831 = !DILocation(line: 2119, column: 6, scope: !2679)
!2832 = !DILocation(line: 2119, column: 44, scope: !2679)
!2833 = !DILocation(line: 2119, column: 48, scope: !2679)
!2834 = !DILocation(line: 2119, column: 15, scope: !2679)
!2835 = !DILocalVariable(name: "index", scope: !2679, file: !1, line: 2120, type: !289)
!2836 = !DILocation(line: 2120, column: 7, scope: !2679)
!2837 = !DILocalVariable(name: "add_orig", scope: !2679, file: !1, line: 2120, type: !219)
!2838 = !DILocation(line: 2120, column: 14, scope: !2679)
!2839 = !DILocalVariable(name: "mask", scope: !2679, file: !1, line: 2121, type: !2351)
!2840 = !DILocation(line: 2121, column: 17, scope: !2679)
!2841 = !DILocalVariable(name: "i", scope: !2679, file: !1, line: 2122, type: !5)
!2842 = !DILocation(line: 2122, column: 15, scope: !2679)
!2843 = !DILocalVariable(name: "j", scope: !2679, file: !1, line: 2122, type: !5)
!2844 = !DILocation(line: 2122, column: 18, scope: !2679)
!2845 = !DILocalVariable(name: "cd_vert_bweight_offset", scope: !2679, file: !1, line: 2124, type: !2682)
!2846 = !DILocation(line: 2124, column: 12, scope: !2679)
!2847 = !DILocation(line: 2124, column: 60, scope: !2679)
!2848 = !DILocation(line: 2124, column: 64, scope: !2679)
!2849 = !DILocation(line: 2124, column: 37, scope: !2679)
!2850 = !DILocalVariable(name: "cd_edge_bweight_offset", scope: !2679, file: !1, line: 2125, type: !2682)
!2851 = !DILocation(line: 2125, column: 12, scope: !2679)
!2852 = !DILocation(line: 2125, column: 60, scope: !2679)
!2853 = !DILocation(line: 2125, column: 64, scope: !2679)
!2854 = !DILocation(line: 2125, column: 37, scope: !2679)
!2855 = !DILocalVariable(name: "cd_edge_crease_offset", scope: !2679, file: !1, line: 2126, type: !2682)
!2856 = !DILocation(line: 2126, column: 12, scope: !2679)
!2857 = !DILocation(line: 2126, column: 60, scope: !2679)
!2858 = !DILocation(line: 2126, column: 64, scope: !2679)
!2859 = !DILocation(line: 2126, column: 37, scope: !2679)
!2860 = !DILocation(line: 2128, column: 2, scope: !2679)
!2861 = !DILocation(line: 2128, column: 6, scope: !2679)
!2862 = !DILocation(line: 2128, column: 19, scope: !2679)
!2863 = !DILocation(line: 2131, column: 36, scope: !2679)
!2864 = !DILocation(line: 2131, column: 40, scope: !2679)
!2865 = !DILocation(line: 2131, column: 14, scope: !2679)
!2866 = !DILocation(line: 2131, column: 13, scope: !2679)
!2867 = !DILocation(line: 2131, column: 11, scope: !2679)
!2868 = !DILocation(line: 2133, column: 9, scope: !2679)
!2869 = !DILocation(line: 2133, column: 22, scope: !2679)
!2870 = !DILocation(line: 2133, column: 42, scope: !2679)
!2871 = !DILocation(line: 2133, column: 61, scope: !2679)
!2872 = !DILocation(line: 2133, column: 7, scope: !2679)
!2873 = !DILocation(line: 2137, column: 7, scope: !2679)
!2874 = !DILocation(line: 2138, column: 20, scope: !2679)
!2875 = !DILocation(line: 2138, column: 24, scope: !2679)
!2876 = !DILocation(line: 2138, column: 32, scope: !2679)
!2877 = !DILocation(line: 2138, column: 36, scope: !2679)
!2878 = !DILocation(line: 2138, column: 46, scope: !2679)
!2879 = !DILocation(line: 2139, column: 30, scope: !2679)
!2880 = !DILocation(line: 2139, column: 34, scope: !2679)
!2881 = !DILocation(line: 2138, column: 2, scope: !2679)
!2882 = !DILocation(line: 2140, column: 20, scope: !2679)
!2883 = !DILocation(line: 2140, column: 24, scope: !2679)
!2884 = !DILocation(line: 2140, column: 32, scope: !2679)
!2885 = !DILocation(line: 2140, column: 36, scope: !2679)
!2886 = !DILocation(line: 2140, column: 46, scope: !2679)
!2887 = !DILocation(line: 2141, column: 30, scope: !2679)
!2888 = !DILocation(line: 2141, column: 34, scope: !2679)
!2889 = !DILocation(line: 2140, column: 2, scope: !2679)
!2890 = !DILocation(line: 2142, column: 20, scope: !2679)
!2891 = !DILocation(line: 2142, column: 24, scope: !2679)
!2892 = !DILocation(line: 2142, column: 32, scope: !2679)
!2893 = !DILocation(line: 2142, column: 36, scope: !2679)
!2894 = !DILocation(line: 2142, column: 46, scope: !2679)
!2895 = !DILocation(line: 2143, column: 30, scope: !2679)
!2896 = !DILocation(line: 2143, column: 34, scope: !2679)
!2897 = !DILocation(line: 2142, column: 2, scope: !2679)
!2898 = !DILocation(line: 2144, column: 20, scope: !2679)
!2899 = !DILocation(line: 2144, column: 24, scope: !2679)
!2900 = !DILocation(line: 2144, column: 32, scope: !2679)
!2901 = !DILocation(line: 2144, column: 36, scope: !2679)
!2902 = !DILocation(line: 2144, column: 46, scope: !2679)
!2903 = !DILocation(line: 2145, column: 30, scope: !2679)
!2904 = !DILocation(line: 2145, column: 34, scope: !2679)
!2905 = !DILocation(line: 2144, column: 2, scope: !2679)
!2906 = !DILocation(line: 2148, column: 6, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2679, file: !1, line: 2148, column: 6)
!2908 = !DILocation(line: 2148, column: 6, scope: !2679)
!2909 = !DILocation(line: 2149, column: 30, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2907, file: !1, line: 2148, column: 20)
!2911 = !DILocation(line: 2149, column: 34, scope: !2910)
!2912 = !DILocation(line: 2149, column: 45, scope: !2910)
!2913 = !DILocation(line: 2149, column: 49, scope: !2910)
!2914 = !DILocation(line: 2149, column: 60, scope: !2910)
!2915 = !DILocation(line: 2149, column: 64, scope: !2910)
!2916 = !DILocation(line: 2149, column: 74, scope: !2910)
!2917 = !DILocation(line: 2149, column: 3, scope: !2910)
!2918 = !DILocation(line: 2150, column: 2, scope: !2910)
!2919 = !DILocation(line: 2152, column: 10, scope: !2679)
!2920 = !DILocation(line: 2152, column: 14, scope: !2679)
!2921 = !DILocation(line: 2152, column: 31, scope: !2679)
!2922 = !DILocation(line: 2152, column: 8, scope: !2679)
!2923 = !DILocation(line: 2154, column: 2, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2679, file: !1, line: 2154, column: 2)
!2925 = !DILocation(line: 2154, column: 2, scope: !2926)
!2926 = distinct !DILexicalBlock(scope: !2924, file: !1, line: 2154, column: 2)
!2927 = !DILocalVariable(name: "mv", scope: !2928, file: !1, line: 2155, type: !1780)
!2928 = distinct !DILexicalBlock(scope: !2926, file: !1, line: 2154, column: 59)
!2929 = !DILocation(line: 2155, column: 10, scope: !2928)
!2930 = !DILocation(line: 2155, column: 16, scope: !2928)
!2931 = !DILocation(line: 2155, column: 22, scope: !2928)
!2932 = !DILocation(line: 2157, column: 14, scope: !2928)
!2933 = !DILocation(line: 2157, column: 18, scope: !2928)
!2934 = !DILocation(line: 2157, column: 22, scope: !2928)
!2935 = !DILocation(line: 2157, column: 27, scope: !2928)
!2936 = !DILocation(line: 2157, column: 3, scope: !2928)
!2937 = !DILocation(line: 2159, column: 3, scope: !2928)
!2938 = !DILocation(line: 2161, column: 28, scope: !2928)
!2939 = !DILocation(line: 2161, column: 32, scope: !2928)
!2940 = !DILocation(line: 2161, column: 36, scope: !2928)
!2941 = !DILocation(line: 2161, column: 41, scope: !2928)
!2942 = !DILocation(line: 2161, column: 3, scope: !2928)
!2943 = !DILocation(line: 2163, column: 36, scope: !2928)
!2944 = !DILocation(line: 2163, column: 14, scope: !2928)
!2945 = !DILocation(line: 2163, column: 3, scope: !2928)
!2946 = !DILocation(line: 2163, column: 7, scope: !2928)
!2947 = !DILocation(line: 2163, column: 12, scope: !2928)
!2948 = !DILocation(line: 2165, column: 7, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2928, file: !1, line: 2165, column: 7)
!2950 = !DILocation(line: 2165, column: 30, scope: !2949)
!2951 = !DILocation(line: 2165, column: 7, scope: !2928)
!2952 = !DILocation(line: 2165, column: 51, scope: !2949)
!2953 = !DILocation(line: 2165, column: 37, scope: !2949)
!2954 = !DILocation(line: 2165, column: 41, scope: !2949)
!2955 = !DILocation(line: 2165, column: 49, scope: !2949)
!2956 = !DILocation(line: 2167, column: 7, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2928, file: !1, line: 2167, column: 7)
!2958 = !DILocation(line: 2167, column: 7, scope: !2928)
!2959 = !DILocation(line: 2167, column: 28, scope: !2957)
!2960 = !DILocation(line: 2167, column: 23, scope: !2957)
!2961 = !DILocation(line: 2167, column: 26, scope: !2957)
!2962 = !DILocation(line: 2167, column: 17, scope: !2957)
!2963 = !DILocation(line: 2169, column: 32, scope: !2928)
!2964 = !DILocation(line: 2169, column: 36, scope: !2928)
!2965 = !DILocation(line: 2169, column: 44, scope: !2928)
!2966 = !DILocation(line: 2169, column: 48, scope: !2928)
!2967 = !DILocation(line: 2169, column: 58, scope: !2928)
!2968 = !DILocation(line: 2169, column: 63, scope: !2928)
!2969 = !DILocation(line: 2169, column: 68, scope: !2928)
!2970 = !DILocation(line: 2169, column: 74, scope: !2928)
!2971 = !DILocation(line: 2169, column: 3, scope: !2928)
!2972 = !DILocation(line: 2170, column: 2, scope: !2928)
!2973 = distinct !{!2973, !2923, !2974}
!2974 = !DILocation(line: 2170, column: 2, scope: !2924)
!2975 = !DILocation(line: 2171, column: 2, scope: !2679)
!2976 = !DILocation(line: 2171, column: 6, scope: !2679)
!2977 = !DILocation(line: 2171, column: 23, scope: !2679)
!2978 = !DILocation(line: 2173, column: 10, scope: !2679)
!2979 = !DILocation(line: 2173, column: 14, scope: !2679)
!2980 = !DILocation(line: 2173, column: 31, scope: !2679)
!2981 = !DILocation(line: 2173, column: 8, scope: !2679)
!2982 = !DILocation(line: 2174, column: 2, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2679, file: !1, line: 2174, column: 2)
!2984 = !DILocation(line: 2174, column: 2, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2983, file: !1, line: 2174, column: 2)
!2986 = !DILocalVariable(name: "med", scope: !2987, file: !1, line: 2175, type: !1783)
!2987 = distinct !DILexicalBlock(scope: !2985, file: !1, line: 2174, column: 59)
!2988 = !DILocation(line: 2175, column: 10, scope: !2987)
!2989 = !DILocation(line: 2175, column: 17, scope: !2987)
!2990 = !DILocation(line: 2175, column: 23, scope: !2987)
!2991 = !DILocation(line: 2177, column: 3, scope: !2987)
!2992 = !DILocation(line: 2179, column: 13, scope: !2987)
!2993 = !DILocation(line: 2179, column: 3, scope: !2987)
!2994 = !DILocation(line: 2179, column: 8, scope: !2987)
!2995 = !DILocation(line: 2179, column: 11, scope: !2987)
!2996 = !DILocation(line: 2180, column: 13, scope: !2987)
!2997 = !DILocation(line: 2180, column: 3, scope: !2987)
!2998 = !DILocation(line: 2180, column: 8, scope: !2987)
!2999 = !DILocation(line: 2180, column: 11, scope: !2987)
!3000 = !DILocation(line: 2182, column: 37, scope: !2987)
!3001 = !DILocation(line: 2182, column: 15, scope: !2987)
!3002 = !DILocation(line: 2182, column: 3, scope: !2987)
!3003 = !DILocation(line: 2182, column: 8, scope: !2987)
!3004 = !DILocation(line: 2182, column: 13, scope: !2987)
!3005 = !DILocation(line: 2186, column: 8, scope: !3006)
!3006 = distinct !DILexicalBlock(scope: !2987, file: !1, line: 2186, column: 7)
!3007 = !DILocation(line: 2186, column: 13, scope: !3006)
!3008 = !DILocation(line: 2186, column: 18, scope: !3006)
!3009 = !DILocation(line: 2186, column: 33, scope: !3006)
!3010 = !DILocation(line: 2186, column: 7, scope: !2987)
!3011 = !DILocation(line: 2187, column: 8, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !3013, file: !1, line: 2187, column: 8)
!3013 = distinct !DILexicalBlock(scope: !3006, file: !1, line: 2186, column: 39)
!3014 = !DILocation(line: 2187, column: 13, scope: !3012)
!3015 = !DILocation(line: 2187, column: 15, scope: !3012)
!3016 = !DILocation(line: 2187, column: 18, scope: !3012)
!3017 = !DILocation(line: 2187, column: 23, scope: !3012)
!3018 = !DILocation(line: 2187, column: 28, scope: !3012)
!3019 = !DILocation(line: 2187, column: 33, scope: !3012)
!3020 = !DILocation(line: 2187, column: 36, scope: !3012)
!3021 = !DILocation(line: 2187, column: 25, scope: !3012)
!3022 = !DILocation(line: 2187, column: 8, scope: !3013)
!3023 = !DILocation(line: 2188, column: 5, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !3012, file: !1, line: 2187, column: 49)
!3025 = !DILocation(line: 2188, column: 10, scope: !3024)
!3026 = !DILocation(line: 2188, column: 15, scope: !3024)
!3027 = !DILocation(line: 2189, column: 4, scope: !3024)
!3028 = !DILocation(line: 2190, column: 3, scope: !3013)
!3029 = !DILocation(line: 2192, column: 7, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !2987, file: !1, line: 2192, column: 7)
!3031 = !DILocation(line: 2192, column: 30, scope: !3030)
!3032 = !DILocation(line: 2192, column: 7, scope: !2987)
!3033 = !DILocation(line: 2192, column: 52, scope: !3030)
!3034 = !DILocation(line: 2192, column: 37, scope: !3030)
!3035 = !DILocation(line: 2192, column: 42, scope: !3030)
!3036 = !DILocation(line: 2192, column: 50, scope: !3030)
!3037 = !DILocation(line: 2193, column: 7, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !2987, file: !1, line: 2193, column: 7)
!3039 = !DILocation(line: 2193, column: 30, scope: !3038)
!3040 = !DILocation(line: 2193, column: 7, scope: !2987)
!3041 = !DILocation(line: 2193, column: 52, scope: !3038)
!3042 = !DILocation(line: 2193, column: 37, scope: !3038)
!3043 = !DILocation(line: 2193, column: 42, scope: !3038)
!3044 = !DILocation(line: 2193, column: 50, scope: !3038)
!3045 = !DILocation(line: 2195, column: 32, scope: !2987)
!3046 = !DILocation(line: 2195, column: 36, scope: !2987)
!3047 = !DILocation(line: 2195, column: 44, scope: !2987)
!3048 = !DILocation(line: 2195, column: 48, scope: !2987)
!3049 = !DILocation(line: 2195, column: 58, scope: !2987)
!3050 = !DILocation(line: 2195, column: 63, scope: !2987)
!3051 = !DILocation(line: 2195, column: 68, scope: !2987)
!3052 = !DILocation(line: 2195, column: 74, scope: !2987)
!3053 = !DILocation(line: 2195, column: 3, scope: !2987)
!3054 = !DILocation(line: 2196, column: 7, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !2987, file: !1, line: 2196, column: 7)
!3056 = !DILocation(line: 2196, column: 7, scope: !2987)
!3057 = !DILocation(line: 2196, column: 28, scope: !3055)
!3058 = !DILocation(line: 2196, column: 23, scope: !3055)
!3059 = !DILocation(line: 2196, column: 26, scope: !3055)
!3060 = !DILocation(line: 2196, column: 17, scope: !3055)
!3061 = !DILocation(line: 2197, column: 2, scope: !2987)
!3062 = distinct !{!3062, !2982, !3063}
!3063 = !DILocation(line: 2197, column: 2, scope: !2983)
!3064 = !DILocation(line: 2198, column: 2, scope: !2679)
!3065 = !DILocation(line: 2198, column: 6, scope: !2679)
!3066 = !DILocation(line: 2198, column: 23, scope: !2679)
!3067 = !DILocation(line: 2201, column: 6, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !2679, file: !1, line: 2201, column: 6)
!3069 = !DILocation(line: 2201, column: 6, scope: !2679)
!3070 = !DILocation(line: 2203, column: 29, scope: !3071)
!3071 = distinct !DILexicalBlock(scope: !3068, file: !1, line: 2201, column: 20)
!3072 = !DILocation(line: 2203, column: 3, scope: !3071)
!3073 = !DILocation(line: 2205, column: 11, scope: !3071)
!3074 = !DILocation(line: 2205, column: 15, scope: !3071)
!3075 = !DILocation(line: 2205, column: 36, scope: !3071)
!3076 = !DILocation(line: 2205, column: 9, scope: !3071)
!3077 = !DILocation(line: 2206, column: 10, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3071, file: !1, line: 2206, column: 3)
!3079 = !DILocation(line: 2206, column: 8, scope: !3078)
!3080 = !DILocation(line: 2206, column: 15, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3078, file: !1, line: 2206, column: 3)
!3082 = !DILocation(line: 2206, column: 19, scope: !3081)
!3083 = !DILocation(line: 2206, column: 23, scope: !3081)
!3084 = !DILocation(line: 2206, column: 17, scope: !3081)
!3085 = !DILocation(line: 2206, column: 3, scope: !3078)
!3086 = !DILocalVariable(name: "mf", scope: !3087, file: !1, line: 2207, type: !1786)
!3087 = distinct !DILexicalBlock(scope: !3081, file: !1, line: 2206, column: 45)
!3088 = !DILocation(line: 2207, column: 11, scope: !3087)
!3089 = !DILocation(line: 2207, column: 17, scope: !3087)
!3090 = !DILocation(line: 2207, column: 23, scope: !3087)
!3091 = !DILocalVariable(name: "l", scope: !3087, file: !1, line: 2208, type: !3092)
!3092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 64)
!3093 = !DILocation(line: 2208, column: 19, scope: !3087)
!3094 = !DILocation(line: 2208, column: 23, scope: !3087)
!3095 = !DILocation(line: 2208, column: 35, scope: !3087)
!3096 = !DILocation(line: 2209, column: 10, scope: !3087)
!3097 = !DILocation(line: 2209, column: 16, scope: !3087)
!3098 = !DILocation(line: 2209, column: 8, scope: !3087)
!3099 = !DILocation(line: 2211, column: 13, scope: !3087)
!3100 = !DILocation(line: 2211, column: 4, scope: !3087)
!3101 = !DILocation(line: 2211, column: 8, scope: !3087)
!3102 = !DILocation(line: 2211, column: 11, scope: !3087)
!3103 = !DILocation(line: 2212, column: 13, scope: !3087)
!3104 = !DILocation(line: 2212, column: 4, scope: !3087)
!3105 = !DILocation(line: 2212, column: 8, scope: !3087)
!3106 = !DILocation(line: 2212, column: 11, scope: !3087)
!3107 = !DILocation(line: 2213, column: 13, scope: !3087)
!3108 = !DILocation(line: 2213, column: 4, scope: !3087)
!3109 = !DILocation(line: 2213, column: 8, scope: !3087)
!3110 = !DILocation(line: 2213, column: 11, scope: !3087)
!3111 = !DILocation(line: 2214, column: 4, scope: !3087)
!3112 = !DILocation(line: 2214, column: 8, scope: !3087)
!3113 = !DILocation(line: 2214, column: 11, scope: !3087)
!3114 = !DILocation(line: 2215, column: 17, scope: !3087)
!3115 = !DILocation(line: 2215, column: 22, scope: !3087)
!3116 = !DILocation(line: 2215, column: 4, scope: !3087)
!3117 = !DILocation(line: 2215, column: 8, scope: !3087)
!3118 = !DILocation(line: 2215, column: 15, scope: !3087)
!3119 = !DILocation(line: 2216, column: 37, scope: !3087)
!3120 = !DILocation(line: 2216, column: 15, scope: !3087)
!3121 = !DILocation(line: 2216, column: 4, scope: !3087)
!3122 = !DILocation(line: 2216, column: 8, scope: !3087)
!3123 = !DILocation(line: 2216, column: 13, scope: !3087)
!3124 = !DILocation(line: 2219, column: 15, scope: !3087)
!3125 = !DILocation(line: 2219, column: 10, scope: !3087)
!3126 = !DILocation(line: 2219, column: 13, scope: !3087)
!3127 = !DILocation(line: 2221, column: 32, scope: !3087)
!3128 = !DILocation(line: 2221, column: 37, scope: !3087)
!3129 = !DILocation(line: 2221, column: 41, scope: !3087)
!3130 = !DILocation(line: 2221, column: 51, scope: !3087)
!3131 = !DILocation(line: 2221, column: 54, scope: !3087)
!3132 = !DILocation(line: 2221, column: 57, scope: !3087)
!3133 = !DILocation(line: 2221, column: 65, scope: !3087)
!3134 = !DILocation(line: 2221, column: 4, scope: !3087)
!3135 = !DILocation(line: 2222, column: 20, scope: !3087)
!3136 = !DILocation(line: 2222, column: 25, scope: !3087)
!3137 = !DILocation(line: 2222, column: 29, scope: !3087)
!3138 = !DILocation(line: 2222, column: 39, scope: !3087)
!3139 = !DILocation(line: 2222, column: 4, scope: !3087)
!3140 = !DILocation(line: 2223, column: 3, scope: !3087)
!3141 = !DILocation(line: 2206, column: 41, scope: !3081)
!3142 = !DILocation(line: 2206, column: 3, scope: !3081)
!3143 = distinct !{!3143, !3085, !3144}
!3144 = !DILocation(line: 2223, column: 3, scope: !3078)
!3145 = !DILocation(line: 2224, column: 2, scope: !3071)
!3146 = !DILocation(line: 2226, column: 32, scope: !2679)
!3147 = !DILocation(line: 2226, column: 36, scope: !2679)
!3148 = !DILocation(line: 2226, column: 10, scope: !2679)
!3149 = !DILocation(line: 2226, column: 8, scope: !2679)
!3150 = !DILocation(line: 2227, column: 4, scope: !2679)
!3151 = !DILocation(line: 2228, column: 2, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !2679, file: !1, line: 2228, column: 2)
!3153 = !DILocation(line: 2228, column: 2, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !3152, file: !1, line: 2228, column: 2)
!3155 = !DILocalVariable(name: "l_iter", scope: !3156, file: !1, line: 2229, type: !672)
!3156 = distinct !DILexicalBlock(scope: !3154, file: !1, line: 2228, column: 59)
!3157 = !DILocation(line: 2229, column: 11, scope: !3156)
!3158 = !DILocalVariable(name: "l_first", scope: !3156, file: !1, line: 2230, type: !672)
!3159 = !DILocation(line: 2230, column: 11, scope: !3156)
!3160 = !DILocalVariable(name: "mp", scope: !3156, file: !1, line: 2231, type: !1792)
!3161 = !DILocation(line: 2231, column: 10, scope: !3156)
!3162 = !DILocation(line: 2231, column: 16, scope: !3156)
!3163 = !DILocation(line: 2231, column: 22, scope: !3156)
!3164 = !DILocation(line: 2233, column: 3, scope: !3156)
!3165 = !DILocation(line: 2235, column: 17, scope: !3156)
!3166 = !DILocation(line: 2235, column: 22, scope: !3156)
!3167 = !DILocation(line: 2235, column: 3, scope: !3156)
!3168 = !DILocation(line: 2235, column: 7, scope: !3156)
!3169 = !DILocation(line: 2235, column: 15, scope: !3156)
!3170 = !DILocation(line: 2236, column: 36, scope: !3156)
!3171 = !DILocation(line: 2236, column: 14, scope: !3156)
!3172 = !DILocation(line: 2236, column: 3, scope: !3156)
!3173 = !DILocation(line: 2236, column: 7, scope: !3156)
!3174 = !DILocation(line: 2236, column: 12, scope: !3156)
!3175 = !DILocation(line: 2237, column: 19, scope: !3156)
!3176 = !DILocation(line: 2237, column: 3, scope: !3156)
!3177 = !DILocation(line: 2237, column: 7, scope: !3156)
!3178 = !DILocation(line: 2237, column: 17, scope: !3156)
!3179 = !DILocation(line: 2238, column: 16, scope: !3156)
!3180 = !DILocation(line: 2238, column: 21, scope: !3156)
!3181 = !DILocation(line: 2238, column: 3, scope: !3156)
!3182 = !DILocation(line: 2238, column: 7, scope: !3156)
!3183 = !DILocation(line: 2238, column: 14, scope: !3156)
!3184 = !DILocation(line: 2240, column: 22, scope: !3156)
!3185 = !DILocation(line: 2240, column: 20, scope: !3156)
!3186 = !DILocation(line: 2240, column: 10, scope: !3156)
!3187 = !DILocation(line: 2241, column: 3, scope: !3156)
!3188 = !DILocation(line: 2242, column: 15, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !3156, file: !1, line: 2241, column: 6)
!3190 = !DILocation(line: 2242, column: 4, scope: !3189)
!3191 = !DILocation(line: 2242, column: 11, scope: !3189)
!3192 = !DILocation(line: 2242, column: 13, scope: !3189)
!3193 = !DILocation(line: 2243, column: 15, scope: !3189)
!3194 = !DILocation(line: 2243, column: 4, scope: !3189)
!3195 = !DILocation(line: 2243, column: 11, scope: !3189)
!3196 = !DILocation(line: 2243, column: 13, scope: !3189)
!3197 = !DILocation(line: 2244, column: 33, scope: !3189)
!3198 = !DILocation(line: 2244, column: 37, scope: !3189)
!3199 = !DILocation(line: 2244, column: 45, scope: !3189)
!3200 = !DILocation(line: 2244, column: 49, scope: !3189)
!3201 = !DILocation(line: 2244, column: 59, scope: !3189)
!3202 = !DILocation(line: 2244, column: 67, scope: !3189)
!3203 = !DILocation(line: 2244, column: 72, scope: !3189)
!3204 = !DILocation(line: 2244, column: 78, scope: !3189)
!3205 = !DILocation(line: 2244, column: 4, scope: !3189)
!3206 = !DILocation(line: 2246, column: 4, scope: !3189)
!3207 = !DILocation(line: 2248, column: 5, scope: !3189)
!3208 = !DILocation(line: 2249, column: 9, scope: !3189)
!3209 = !DILocation(line: 2250, column: 3, scope: !3189)
!3210 = !DILocation(line: 2250, column: 22, scope: !3156)
!3211 = !DILocation(line: 2250, column: 30, scope: !3156)
!3212 = !DILocation(line: 2250, column: 20, scope: !3156)
!3213 = !DILocation(line: 2250, column: 39, scope: !3156)
!3214 = !DILocation(line: 2250, column: 36, scope: !3156)
!3215 = distinct !{!3215, !3187, !3216}
!3216 = !DILocation(line: 2250, column: 46, scope: !3156)
!3217 = !DILocation(line: 2252, column: 32, scope: !3156)
!3218 = !DILocation(line: 2252, column: 36, scope: !3156)
!3219 = !DILocation(line: 2252, column: 44, scope: !3156)
!3220 = !DILocation(line: 2252, column: 48, scope: !3156)
!3221 = !DILocation(line: 2252, column: 58, scope: !3156)
!3222 = !DILocation(line: 2252, column: 63, scope: !3156)
!3223 = !DILocation(line: 2252, column: 68, scope: !3156)
!3224 = !DILocation(line: 2252, column: 74, scope: !3156)
!3225 = !DILocation(line: 2252, column: 3, scope: !3156)
!3226 = !DILocation(line: 2254, column: 7, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3156, file: !1, line: 2254, column: 7)
!3228 = !DILocation(line: 2254, column: 7, scope: !3156)
!3229 = !DILocation(line: 2254, column: 28, scope: !3227)
!3230 = !DILocation(line: 2254, column: 23, scope: !3227)
!3231 = !DILocation(line: 2254, column: 26, scope: !3227)
!3232 = !DILocation(line: 2254, column: 17, scope: !3227)
!3233 = !DILocation(line: 2255, column: 2, scope: !3156)
!3234 = distinct !{!3234, !3151, !3235}
!3235 = !DILocation(line: 2255, column: 2, scope: !3152)
!3236 = !DILocation(line: 2256, column: 2, scope: !2679)
!3237 = !DILocation(line: 2256, column: 6, scope: !2679)
!3238 = !DILocation(line: 2256, column: 23, scope: !2679)
!3239 = !DILocation(line: 2258, column: 43, scope: !2679)
!3240 = !DILocation(line: 2258, column: 16, scope: !2679)
!3241 = !DILocation(line: 2258, column: 2, scope: !2679)
!3242 = !DILocation(line: 2258, column: 6, scope: !2679)
!3243 = !DILocation(line: 2258, column: 14, scope: !2679)
!3244 = !DILocation(line: 2260, column: 9, scope: !2679)
!3245 = !DILocation(line: 2260, column: 2, scope: !2679)
!3246 = distinct !DISubprogram(name: "CDDM_from_editbmesh", scope: !1, file: !1, line: 2270, type: !3247, scopeLine: 2271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!3247 = !DISubroutineType(types: !3248)
!3248 = !{!1477, !3249, !1730, !1730}
!3249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3250, size: 64)
!3250 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEditMesh", file: !2339, line: 83, baseType: !2338)
!3251 = !DILocalVariable(name: "em", arg: 1, scope: !3246, file: !1, line: 2270, type: !3249)
!3252 = !DILocation(line: 2270, column: 46, scope: !3246)
!3253 = !DILocalVariable(name: "use_mdisps", arg: 2, scope: !3246, file: !1, line: 2270, type: !1730)
!3254 = !DILocation(line: 2270, column: 61, scope: !3246)
!3255 = !DILocalVariable(name: "use_tessface", arg: 3, scope: !3246, file: !1, line: 2270, type: !1730)
!3256 = !DILocation(line: 2270, column: 84, scope: !3246)
!3257 = !DILocation(line: 2272, column: 28, scope: !3246)
!3258 = !DILocation(line: 2272, column: 32, scope: !3246)
!3259 = !DILocation(line: 2272, column: 36, scope: !3246)
!3260 = !DILocation(line: 2274, column: 28, scope: !3246)
!3261 = !DILocation(line: 2274, column: 42, scope: !3246)
!3262 = !DILocation(line: 2274, column: 46, scope: !3246)
!3263 = !DILocation(line: 2274, column: 76, scope: !3246)
!3264 = !DILocation(line: 2274, column: 80, scope: !3246)
!3265 = !DILocation(line: 2272, column: 9, scope: !3246)
!3266 = !DILocation(line: 2272, column: 2, scope: !3246)
!3267 = distinct !DISubprogram(name: "CDDM_copy", scope: !1, file: !1, line: 2324, type: !3268, scopeLine: 2325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!3268 = !DISubroutineType(types: !3269)
!3269 = !{!1037, !1477}
!3270 = !DILocalVariable(name: "source", arg: 1, scope: !3267, file: !1, line: 2324, type: !1477)
!3271 = !DILocation(line: 2324, column: 37, scope: !3267)
!3272 = !DILocation(line: 2326, column: 22, scope: !3267)
!3273 = !DILocation(line: 2326, column: 9, scope: !3267)
!3274 = !DILocation(line: 2326, column: 2, scope: !3267)
!3275 = distinct !DISubprogram(name: "cddm_copy_ex", scope: !1, file: !1, line: 2277, type: !3276, scopeLine: 2278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!3276 = !DISubroutineType(types: !3277)
!3277 = !{!1477, !1477, !219}
!3278 = !DILocalVariable(name: "source", arg: 1, scope: !3275, file: !1, line: 2277, type: !1477)
!3279 = !DILocation(line: 2277, column: 47, scope: !3275)
!3280 = !DILocalVariable(name: "faces_from_tessfaces", arg: 2, scope: !3275, file: !1, line: 2277, type: !219)
!3281 = !DILocation(line: 2277, column: 59, scope: !3275)
!3282 = !DILocalVariable(name: "cddm", scope: !3275, file: !1, line: 2279, type: !201)
!3283 = !DILocation(line: 2279, column: 17, scope: !3275)
!3284 = !DILocation(line: 2279, column: 24, scope: !3275)
!3285 = !DILocalVariable(name: "dm", scope: !3275, file: !1, line: 2280, type: !1477)
!3286 = !DILocation(line: 2280, column: 15, scope: !3275)
!3287 = !DILocation(line: 2280, column: 21, scope: !3275)
!3288 = !DILocation(line: 2280, column: 27, scope: !3275)
!3289 = !DILocalVariable(name: "numVerts", scope: !3275, file: !1, line: 2281, type: !219)
!3290 = !DILocation(line: 2281, column: 6, scope: !3275)
!3291 = !DILocation(line: 2281, column: 17, scope: !3275)
!3292 = !DILocation(line: 2281, column: 25, scope: !3275)
!3293 = !DILocalVariable(name: "numEdges", scope: !3275, file: !1, line: 2282, type: !219)
!3294 = !DILocation(line: 2282, column: 6, scope: !3275)
!3295 = !DILocation(line: 2282, column: 17, scope: !3275)
!3296 = !DILocation(line: 2282, column: 25, scope: !3275)
!3297 = !DILocalVariable(name: "numTessFaces", scope: !3275, file: !1, line: 2283, type: !219)
!3298 = !DILocation(line: 2283, column: 6, scope: !3275)
!3299 = !DILocation(line: 2283, column: 21, scope: !3275)
!3300 = !DILocation(line: 2283, column: 29, scope: !3275)
!3301 = !DILocalVariable(name: "numLoops", scope: !3275, file: !1, line: 2284, type: !219)
!3302 = !DILocation(line: 2284, column: 6, scope: !3275)
!3303 = !DILocation(line: 2284, column: 17, scope: !3275)
!3304 = !DILocation(line: 2284, column: 25, scope: !3275)
!3305 = !DILocalVariable(name: "numPolys", scope: !3275, file: !1, line: 2285, type: !219)
!3306 = !DILocation(line: 2285, column: 6, scope: !3275)
!3307 = !DILocation(line: 2285, column: 17, scope: !3275)
!3308 = !DILocation(line: 2285, column: 25, scope: !3275)
!3309 = !DILocation(line: 2288, column: 2, scope: !3275)
!3310 = !DILocation(line: 2288, column: 10, scope: !3275)
!3311 = !DILocation(line: 2288, column: 27, scope: !3275)
!3312 = !DILocation(line: 2289, column: 2, scope: !3275)
!3313 = !DILocation(line: 2289, column: 10, scope: !3275)
!3314 = !DILocation(line: 2289, column: 27, scope: !3275)
!3315 = !DILocation(line: 2290, column: 2, scope: !3275)
!3316 = !DILocation(line: 2290, column: 10, scope: !3275)
!3317 = !DILocation(line: 2290, column: 31, scope: !3275)
!3318 = !DILocation(line: 2291, column: 2, scope: !3275)
!3319 = !DILocation(line: 2291, column: 10, scope: !3275)
!3320 = !DILocation(line: 2291, column: 27, scope: !3275)
!3321 = !DILocation(line: 2294, column: 19, scope: !3275)
!3322 = !DILocation(line: 2294, column: 23, scope: !3275)
!3323 = !DILocation(line: 2294, column: 45, scope: !3275)
!3324 = !DILocation(line: 2294, column: 55, scope: !3275)
!3325 = !DILocation(line: 2294, column: 65, scope: !3275)
!3326 = !DILocation(line: 2295, column: 19, scope: !3275)
!3327 = !DILocation(line: 2295, column: 29, scope: !3275)
!3328 = !DILocation(line: 2294, column: 2, scope: !3275)
!3329 = !DILocation(line: 2296, column: 21, scope: !3275)
!3330 = !DILocation(line: 2296, column: 29, scope: !3275)
!3331 = !DILocation(line: 2296, column: 2, scope: !3275)
!3332 = !DILocation(line: 2296, column: 6, scope: !3275)
!3333 = !DILocation(line: 2296, column: 19, scope: !3275)
!3334 = !DILocation(line: 2297, column: 16, scope: !3275)
!3335 = !DILocation(line: 2297, column: 24, scope: !3275)
!3336 = !DILocation(line: 2297, column: 2, scope: !3275)
!3337 = !DILocation(line: 2297, column: 6, scope: !3275)
!3338 = !DILocation(line: 2297, column: 14, scope: !3275)
!3339 = !DILocation(line: 2298, column: 14, scope: !3275)
!3340 = !DILocation(line: 2298, column: 22, scope: !3275)
!3341 = !DILocation(line: 2298, column: 2, scope: !3275)
!3342 = !DILocation(line: 2298, column: 6, scope: !3275)
!3343 = !DILocation(line: 2298, column: 12, scope: !3275)
!3344 = !DILocation(line: 2300, column: 24, scope: !3275)
!3345 = !DILocation(line: 2300, column: 32, scope: !3275)
!3346 = !DILocation(line: 2300, column: 43, scope: !3275)
!3347 = !DILocation(line: 2300, column: 47, scope: !3275)
!3348 = !DILocation(line: 2300, column: 63, scope: !3275)
!3349 = !DILocation(line: 2300, column: 2, scope: !3275)
!3350 = !DILocation(line: 2301, column: 24, scope: !3275)
!3351 = !DILocation(line: 2301, column: 32, scope: !3275)
!3352 = !DILocation(line: 2301, column: 43, scope: !3275)
!3353 = !DILocation(line: 2301, column: 47, scope: !3275)
!3354 = !DILocation(line: 2301, column: 63, scope: !3275)
!3355 = !DILocation(line: 2301, column: 2, scope: !3275)
!3356 = !DILocation(line: 2302, column: 24, scope: !3275)
!3357 = !DILocation(line: 2302, column: 32, scope: !3275)
!3358 = !DILocation(line: 2302, column: 43, scope: !3275)
!3359 = !DILocation(line: 2302, column: 47, scope: !3275)
!3360 = !DILocation(line: 2302, column: 63, scope: !3275)
!3361 = !DILocation(line: 2302, column: 2, scope: !3275)
!3362 = !DILocation(line: 2305, column: 16, scope: !3275)
!3363 = !DILocation(line: 2305, column: 24, scope: !3275)
!3364 = !DILocation(line: 2305, column: 37, scope: !3275)
!3365 = !DILocation(line: 2305, column: 2, scope: !3275)
!3366 = !DILocation(line: 2305, column: 8, scope: !3275)
!3367 = !DILocation(line: 2305, column: 14, scope: !3275)
!3368 = !DILocation(line: 2306, column: 16, scope: !3275)
!3369 = !DILocation(line: 2306, column: 24, scope: !3275)
!3370 = !DILocation(line: 2306, column: 37, scope: !3275)
!3371 = !DILocation(line: 2306, column: 2, scope: !3275)
!3372 = !DILocation(line: 2306, column: 8, scope: !3275)
!3373 = !DILocation(line: 2306, column: 14, scope: !3275)
!3374 = !DILocation(line: 2307, column: 16, scope: !3275)
!3375 = !DILocation(line: 2307, column: 24, scope: !3275)
!3376 = !DILocation(line: 2307, column: 41, scope: !3275)
!3377 = !DILocation(line: 2307, column: 2, scope: !3275)
!3378 = !DILocation(line: 2307, column: 8, scope: !3275)
!3379 = !DILocation(line: 2307, column: 14, scope: !3275)
!3380 = !DILocation(line: 2309, column: 24, scope: !3275)
!3381 = !DILocation(line: 2309, column: 28, scope: !3275)
!3382 = !DILocation(line: 2309, column: 59, scope: !3275)
!3383 = !DILocation(line: 2309, column: 65, scope: !3275)
!3384 = !DILocation(line: 2309, column: 72, scope: !3275)
!3385 = !DILocation(line: 2309, column: 2, scope: !3275)
!3386 = !DILocation(line: 2310, column: 24, scope: !3275)
!3387 = !DILocation(line: 2310, column: 28, scope: !3275)
!3388 = !DILocation(line: 2310, column: 59, scope: !3275)
!3389 = !DILocation(line: 2310, column: 65, scope: !3275)
!3390 = !DILocation(line: 2310, column: 72, scope: !3275)
!3391 = !DILocation(line: 2310, column: 2, scope: !3275)
!3392 = !DILocation(line: 2311, column: 24, scope: !3275)
!3393 = !DILocation(line: 2311, column: 28, scope: !3275)
!3394 = !DILocation(line: 2311, column: 59, scope: !3275)
!3395 = !DILocation(line: 2311, column: 65, scope: !3275)
!3396 = !DILocation(line: 2311, column: 72, scope: !3275)
!3397 = !DILocation(line: 2311, column: 2, scope: !3275)
!3398 = !DILocation(line: 2313, column: 7, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3275, file: !1, line: 2313, column: 6)
!3400 = !DILocation(line: 2313, column: 6, scope: !3275)
!3401 = !DILocation(line: 2314, column: 15, scope: !3399)
!3402 = !DILocation(line: 2314, column: 23, scope: !3399)
!3403 = !DILocation(line: 2314, column: 3, scope: !3399)
!3404 = !DILocation(line: 2316, column: 27, scope: !3399)
!3405 = !DILocation(line: 2316, column: 3, scope: !3399)
!3406 = !DILocation(line: 2318, column: 38, scope: !3275)
!3407 = !DILocation(line: 2318, column: 42, scope: !3275)
!3408 = !DILocation(line: 2318, column: 16, scope: !3275)
!3409 = !DILocation(line: 2318, column: 2, scope: !3275)
!3410 = !DILocation(line: 2318, column: 8, scope: !3275)
!3411 = !DILocation(line: 2318, column: 14, scope: !3275)
!3412 = !DILocation(line: 2319, column: 38, scope: !3275)
!3413 = !DILocation(line: 2319, column: 42, scope: !3275)
!3414 = !DILocation(line: 2319, column: 16, scope: !3275)
!3415 = !DILocation(line: 2319, column: 2, scope: !3275)
!3416 = !DILocation(line: 2319, column: 8, scope: !3275)
!3417 = !DILocation(line: 2319, column: 14, scope: !3275)
!3418 = !DILocation(line: 2321, column: 9, scope: !3275)
!3419 = !DILocation(line: 2321, column: 2, scope: !3275)
!3420 = distinct !DISubprogram(name: "CDDM_copy_from_tessface", scope: !1, file: !1, line: 2329, type: !3268, scopeLine: 2330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!3421 = !DILocalVariable(name: "source", arg: 1, scope: !3420, file: !1, line: 2329, type: !1477)
!3422 = !DILocation(line: 2329, column: 51, scope: !3420)
!3423 = !DILocation(line: 2331, column: 22, scope: !3420)
!3424 = !DILocation(line: 2331, column: 9, scope: !3420)
!3425 = !DILocation(line: 2331, column: 2, scope: !3420)
!3426 = distinct !DISubprogram(name: "CDDM_from_template", scope: !1, file: !1, line: 2336, type: !3427, scopeLine: 2339, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!3427 = !DISubroutineType(types: !3428)
!3428 = !{!1037, !1477, !219, !219, !219, !219, !219}
!3429 = !DILocalVariable(name: "source", arg: 1, scope: !3426, file: !1, line: 2336, type: !1477)
!3430 = !DILocation(line: 2336, column: 46, scope: !3426)
!3431 = !DILocalVariable(name: "numVerts", arg: 2, scope: !3426, file: !1, line: 2337, type: !219)
!3432 = !DILocation(line: 2337, column: 37, scope: !3426)
!3433 = !DILocalVariable(name: "numEdges", arg: 3, scope: !3426, file: !1, line: 2337, type: !219)
!3434 = !DILocation(line: 2337, column: 51, scope: !3426)
!3435 = !DILocalVariable(name: "numTessFaces", arg: 4, scope: !3426, file: !1, line: 2337, type: !219)
!3436 = !DILocation(line: 2337, column: 65, scope: !3426)
!3437 = !DILocalVariable(name: "numLoops", arg: 5, scope: !3426, file: !1, line: 2338, type: !219)
!3438 = !DILocation(line: 2338, column: 37, scope: !3426)
!3439 = !DILocalVariable(name: "numPolys", arg: 6, scope: !3426, file: !1, line: 2338, type: !219)
!3440 = !DILocation(line: 2338, column: 51, scope: !3426)
!3441 = !DILocalVariable(name: "cddm", scope: !3426, file: !1, line: 2340, type: !201)
!3442 = !DILocation(line: 2340, column: 17, scope: !3426)
!3443 = !DILocation(line: 2340, column: 24, scope: !3426)
!3444 = !DILocalVariable(name: "dm", scope: !3426, file: !1, line: 2341, type: !1477)
!3445 = !DILocation(line: 2341, column: 15, scope: !3426)
!3446 = !DILocation(line: 2341, column: 21, scope: !3426)
!3447 = !DILocation(line: 2341, column: 27, scope: !3426)
!3448 = !DILocation(line: 2344, column: 2, scope: !3426)
!3449 = !DILocation(line: 2344, column: 10, scope: !3426)
!3450 = !DILocation(line: 2344, column: 27, scope: !3426)
!3451 = !DILocation(line: 2345, column: 2, scope: !3426)
!3452 = !DILocation(line: 2345, column: 10, scope: !3426)
!3453 = !DILocation(line: 2345, column: 27, scope: !3426)
!3454 = !DILocation(line: 2346, column: 2, scope: !3426)
!3455 = !DILocation(line: 2346, column: 10, scope: !3426)
!3456 = !DILocation(line: 2346, column: 31, scope: !3426)
!3457 = !DILocation(line: 2347, column: 2, scope: !3426)
!3458 = !DILocation(line: 2347, column: 10, scope: !3426)
!3459 = !DILocation(line: 2347, column: 27, scope: !3426)
!3460 = !DILocation(line: 2350, column: 19, scope: !3426)
!3461 = !DILocation(line: 2350, column: 23, scope: !3426)
!3462 = !DILocation(line: 2350, column: 45, scope: !3426)
!3463 = !DILocation(line: 2350, column: 55, scope: !3426)
!3464 = !DILocation(line: 2350, column: 65, scope: !3426)
!3465 = !DILocation(line: 2350, column: 79, scope: !3426)
!3466 = !DILocation(line: 2350, column: 89, scope: !3426)
!3467 = !DILocation(line: 2350, column: 2, scope: !3426)
!3468 = !DILocation(line: 2353, column: 24, scope: !3426)
!3469 = !DILocation(line: 2353, column: 28, scope: !3426)
!3470 = !DILocation(line: 2353, column: 65, scope: !3426)
!3471 = !DILocation(line: 2353, column: 2, scope: !3426)
!3472 = !DILocation(line: 2354, column: 24, scope: !3426)
!3473 = !DILocation(line: 2354, column: 28, scope: !3426)
!3474 = !DILocation(line: 2354, column: 65, scope: !3426)
!3475 = !DILocation(line: 2354, column: 2, scope: !3426)
!3476 = !DILocation(line: 2355, column: 24, scope: !3426)
!3477 = !DILocation(line: 2355, column: 28, scope: !3426)
!3478 = !DILocation(line: 2355, column: 65, scope: !3426)
!3479 = !DILocation(line: 2355, column: 2, scope: !3426)
!3480 = !DILocation(line: 2356, column: 24, scope: !3426)
!3481 = !DILocation(line: 2356, column: 28, scope: !3426)
!3482 = !DILocation(line: 2356, column: 65, scope: !3426)
!3483 = !DILocation(line: 2356, column: 2, scope: !3426)
!3484 = !DILocation(line: 2357, column: 24, scope: !3426)
!3485 = !DILocation(line: 2357, column: 28, scope: !3426)
!3486 = !DILocation(line: 2357, column: 65, scope: !3426)
!3487 = !DILocation(line: 2357, column: 2, scope: !3426)
!3488 = !DILocation(line: 2359, column: 29, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3426, file: !1, line: 2359, column: 6)
!3490 = !DILocation(line: 2359, column: 33, scope: !3489)
!3491 = !DILocation(line: 2359, column: 7, scope: !3489)
!3492 = !DILocation(line: 2359, column: 6, scope: !3426)
!3493 = !DILocation(line: 2360, column: 25, scope: !3489)
!3494 = !DILocation(line: 2360, column: 29, scope: !3489)
!3495 = !DILocation(line: 2360, column: 70, scope: !3489)
!3496 = !DILocation(line: 2360, column: 3, scope: !3489)
!3497 = !DILocation(line: 2361, column: 29, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3426, file: !1, line: 2361, column: 6)
!3499 = !DILocation(line: 2361, column: 33, scope: !3498)
!3500 = !DILocation(line: 2361, column: 7, scope: !3498)
!3501 = !DILocation(line: 2361, column: 6, scope: !3426)
!3502 = !DILocation(line: 2362, column: 25, scope: !3498)
!3503 = !DILocation(line: 2362, column: 29, scope: !3498)
!3504 = !DILocation(line: 2362, column: 70, scope: !3498)
!3505 = !DILocation(line: 2362, column: 3, scope: !3498)
!3506 = !DILocation(line: 2363, column: 29, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3426, file: !1, line: 2363, column: 6)
!3508 = !DILocation(line: 2363, column: 33, scope: !3507)
!3509 = !DILocation(line: 2363, column: 7, scope: !3507)
!3510 = !DILocation(line: 2363, column: 6, scope: !3426)
!3511 = !DILocation(line: 2364, column: 25, scope: !3507)
!3512 = !DILocation(line: 2364, column: 29, scope: !3507)
!3513 = !DILocation(line: 2364, column: 70, scope: !3507)
!3514 = !DILocation(line: 2364, column: 3, scope: !3507)
!3515 = !DILocation(line: 2366, column: 38, scope: !3426)
!3516 = !DILocation(line: 2366, column: 42, scope: !3426)
!3517 = !DILocation(line: 2366, column: 16, scope: !3426)
!3518 = !DILocation(line: 2366, column: 2, scope: !3426)
!3519 = !DILocation(line: 2366, column: 8, scope: !3426)
!3520 = !DILocation(line: 2366, column: 14, scope: !3426)
!3521 = !DILocation(line: 2367, column: 38, scope: !3426)
!3522 = !DILocation(line: 2367, column: 42, scope: !3426)
!3523 = !DILocation(line: 2367, column: 16, scope: !3426)
!3524 = !DILocation(line: 2367, column: 2, scope: !3426)
!3525 = !DILocation(line: 2367, column: 8, scope: !3426)
!3526 = !DILocation(line: 2367, column: 14, scope: !3426)
!3527 = !DILocation(line: 2368, column: 38, scope: !3426)
!3528 = !DILocation(line: 2368, column: 42, scope: !3426)
!3529 = !DILocation(line: 2368, column: 16, scope: !3426)
!3530 = !DILocation(line: 2368, column: 2, scope: !3426)
!3531 = !DILocation(line: 2368, column: 8, scope: !3426)
!3532 = !DILocation(line: 2368, column: 14, scope: !3426)
!3533 = !DILocation(line: 2369, column: 38, scope: !3426)
!3534 = !DILocation(line: 2369, column: 42, scope: !3426)
!3535 = !DILocation(line: 2369, column: 16, scope: !3426)
!3536 = !DILocation(line: 2369, column: 2, scope: !3426)
!3537 = !DILocation(line: 2369, column: 8, scope: !3426)
!3538 = !DILocation(line: 2369, column: 14, scope: !3426)
!3539 = !DILocation(line: 2370, column: 38, scope: !3426)
!3540 = !DILocation(line: 2370, column: 42, scope: !3426)
!3541 = !DILocation(line: 2370, column: 16, scope: !3426)
!3542 = !DILocation(line: 2370, column: 2, scope: !3426)
!3543 = !DILocation(line: 2370, column: 8, scope: !3426)
!3544 = !DILocation(line: 2370, column: 14, scope: !3426)
!3545 = !DILocation(line: 2372, column: 9, scope: !3426)
!3546 = !DILocation(line: 2372, column: 2, scope: !3426)
!3547 = distinct !DISubprogram(name: "CDDM_apply_vert_coords", scope: !1, file: !1, line: 2375, type: !1681, scopeLine: 2376, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!3548 = !DILocalVariable(name: "dm", arg: 1, scope: !3547, file: !1, line: 2375, type: !1477)
!3549 = !DILocation(line: 2375, column: 42, scope: !3547)
!3550 = !DILocalVariable(name: "vertCoords", arg: 2, scope: !3547, file: !1, line: 2375, type: !596)
!3551 = !DILocation(line: 2375, column: 54, scope: !3547)
!3552 = !DILocalVariable(name: "cddm", scope: !3547, file: !1, line: 2377, type: !201)
!3553 = !DILocation(line: 2377, column: 17, scope: !3547)
!3554 = !DILocation(line: 2377, column: 41, scope: !3547)
!3555 = !DILocation(line: 2377, column: 24, scope: !3547)
!3556 = !DILocalVariable(name: "vert", scope: !3547, file: !1, line: 2378, type: !1780)
!3557 = !DILocation(line: 2378, column: 9, scope: !3547)
!3558 = !DILocalVariable(name: "i", scope: !3547, file: !1, line: 2379, type: !219)
!3559 = !DILocation(line: 2379, column: 6, scope: !3547)
!3560 = !DILocation(line: 2382, column: 48, scope: !3547)
!3561 = !DILocation(line: 2382, column: 52, scope: !3547)
!3562 = !DILocation(line: 2382, column: 72, scope: !3547)
!3563 = !DILocation(line: 2382, column: 76, scope: !3547)
!3564 = !DILocation(line: 2382, column: 9, scope: !3547)
!3565 = !DILocation(line: 2382, column: 7, scope: !3547)
!3566 = !DILocation(line: 2383, column: 16, scope: !3547)
!3567 = !DILocation(line: 2383, column: 2, scope: !3547)
!3568 = !DILocation(line: 2383, column: 8, scope: !3547)
!3569 = !DILocation(line: 2383, column: 14, scope: !3547)
!3570 = !DILocation(line: 2385, column: 9, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3547, file: !1, line: 2385, column: 2)
!3572 = !DILocation(line: 2385, column: 7, scope: !3571)
!3573 = !DILocation(line: 2385, column: 14, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3571, file: !1, line: 2385, column: 2)
!3575 = !DILocation(line: 2385, column: 18, scope: !3574)
!3576 = !DILocation(line: 2385, column: 22, scope: !3574)
!3577 = !DILocation(line: 2385, column: 16, scope: !3574)
!3578 = !DILocation(line: 2385, column: 2, scope: !3571)
!3579 = !DILocation(line: 2386, column: 14, scope: !3574)
!3580 = !DILocation(line: 2386, column: 20, scope: !3574)
!3581 = !DILocation(line: 2386, column: 24, scope: !3574)
!3582 = !DILocation(line: 2386, column: 35, scope: !3574)
!3583 = !DILocation(line: 2386, column: 3, scope: !3574)
!3584 = !DILocation(line: 2385, column: 35, scope: !3574)
!3585 = !DILocation(line: 2385, column: 40, scope: !3574)
!3586 = !DILocation(line: 2385, column: 2, scope: !3574)
!3587 = distinct !{!3587, !3578, !3588}
!3588 = !DILocation(line: 2386, column: 37, scope: !3571)
!3589 = !DILocation(line: 2388, column: 2, scope: !3547)
!3590 = !DILocation(line: 2388, column: 8, scope: !3547)
!3591 = !DILocation(line: 2388, column: 11, scope: !3547)
!3592 = !DILocation(line: 2388, column: 17, scope: !3547)
!3593 = !DILocation(line: 2389, column: 1, scope: !3547)
!3594 = distinct !DISubprogram(name: "copy_v3_v3", scope: !3595, file: !3595, line: 64, type: !3596, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!3595 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3596 = !DISubroutineType(types: !3597)
!3597 = !{null, !601, !1649}
!3598 = !DILocalVariable(name: "r", arg: 1, scope: !3594, file: !3595, line: 64, type: !601)
!3599 = !DILocation(line: 64, column: 31, scope: !3594)
!3600 = !DILocalVariable(name: "a", arg: 2, scope: !3594, file: !3595, line: 64, type: !1649)
!3601 = !DILocation(line: 64, column: 49, scope: !3594)
!3602 = !DILocation(line: 66, column: 9, scope: !3594)
!3603 = !DILocation(line: 66, column: 2, scope: !3594)
!3604 = !DILocation(line: 66, column: 7, scope: !3594)
!3605 = !DILocation(line: 67, column: 9, scope: !3594)
!3606 = !DILocation(line: 67, column: 2, scope: !3594)
!3607 = !DILocation(line: 67, column: 7, scope: !3594)
!3608 = !DILocation(line: 68, column: 9, scope: !3594)
!3609 = !DILocation(line: 68, column: 2, scope: !3594)
!3610 = !DILocation(line: 68, column: 7, scope: !3594)
!3611 = !DILocation(line: 69, column: 1, scope: !3594)
!3612 = distinct !DISubprogram(name: "CDDM_apply_vert_normals", scope: !1, file: !1, line: 2391, type: !3613, scopeLine: 2392, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!3613 = !DISubroutineType(types: !3614)
!3614 = !{null, !1477, !3615}
!3615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!3616 = !DILocalVariable(name: "dm", arg: 1, scope: !3612, file: !1, line: 2391, type: !1477)
!3617 = !DILocation(line: 2391, column: 43, scope: !3612)
!3618 = !DILocalVariable(name: "vertNormals", arg: 2, scope: !3612, file: !1, line: 2391, type: !3615)
!3619 = !DILocation(line: 2391, column: 55, scope: !3612)
!3620 = !DILocalVariable(name: "cddm", scope: !3612, file: !1, line: 2393, type: !201)
!3621 = !DILocation(line: 2393, column: 17, scope: !3612)
!3622 = !DILocation(line: 2393, column: 41, scope: !3612)
!3623 = !DILocation(line: 2393, column: 24, scope: !3612)
!3624 = !DILocalVariable(name: "vert", scope: !3612, file: !1, line: 2394, type: !1780)
!3625 = !DILocation(line: 2394, column: 9, scope: !3612)
!3626 = !DILocalVariable(name: "i", scope: !3612, file: !1, line: 2395, type: !219)
!3627 = !DILocation(line: 2395, column: 6, scope: !3612)
!3628 = !DILocation(line: 2398, column: 48, scope: !3612)
!3629 = !DILocation(line: 2398, column: 52, scope: !3612)
!3630 = !DILocation(line: 2398, column: 72, scope: !3612)
!3631 = !DILocation(line: 2398, column: 76, scope: !3612)
!3632 = !DILocation(line: 2398, column: 9, scope: !3612)
!3633 = !DILocation(line: 2398, column: 7, scope: !3612)
!3634 = !DILocation(line: 2399, column: 16, scope: !3612)
!3635 = !DILocation(line: 2399, column: 2, scope: !3612)
!3636 = !DILocation(line: 2399, column: 8, scope: !3612)
!3637 = !DILocation(line: 2399, column: 14, scope: !3612)
!3638 = !DILocation(line: 2401, column: 9, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3612, file: !1, line: 2401, column: 2)
!3640 = !DILocation(line: 2401, column: 7, scope: !3639)
!3641 = !DILocation(line: 2401, column: 14, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3639, file: !1, line: 2401, column: 2)
!3643 = !DILocation(line: 2401, column: 18, scope: !3642)
!3644 = !DILocation(line: 2401, column: 22, scope: !3642)
!3645 = !DILocation(line: 2401, column: 16, scope: !3642)
!3646 = !DILocation(line: 2401, column: 2, scope: !3639)
!3647 = !DILocation(line: 2402, column: 20, scope: !3642)
!3648 = !DILocation(line: 2402, column: 26, scope: !3642)
!3649 = !DILocation(line: 2402, column: 30, scope: !3642)
!3650 = !DILocation(line: 2402, column: 42, scope: !3642)
!3651 = !DILocation(line: 2402, column: 3, scope: !3642)
!3652 = !DILocation(line: 2401, column: 35, scope: !3642)
!3653 = !DILocation(line: 2401, column: 40, scope: !3642)
!3654 = !DILocation(line: 2401, column: 2, scope: !3642)
!3655 = distinct !{!3655, !3646, !3656}
!3656 = !DILocation(line: 2402, column: 44, scope: !3639)
!3657 = !DILocation(line: 2404, column: 2, scope: !3612)
!3658 = !DILocation(line: 2404, column: 8, scope: !3612)
!3659 = !DILocation(line: 2404, column: 11, scope: !3612)
!3660 = !DILocation(line: 2404, column: 17, scope: !3612)
!3661 = !DILocation(line: 2405, column: 1, scope: !3612)
!3662 = distinct !DISubprogram(name: "copy_v3_v3_short", scope: !3595, file: !3595, line: 136, type: !3663, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!3663 = !DISubroutineType(types: !3664)
!3664 = !{null, !2407, !1650}
!3665 = !DILocalVariable(name: "r", arg: 1, scope: !3662, file: !3595, line: 136, type: !2407)
!3666 = !DILocation(line: 136, column: 37, scope: !3662)
!3667 = !DILocalVariable(name: "a", arg: 2, scope: !3662, file: !3595, line: 136, type: !1650)
!3668 = !DILocation(line: 136, column: 55, scope: !3662)
!3669 = !DILocation(line: 138, column: 9, scope: !3662)
!3670 = !DILocation(line: 138, column: 2, scope: !3662)
!3671 = !DILocation(line: 138, column: 7, scope: !3662)
!3672 = !DILocation(line: 139, column: 9, scope: !3662)
!3673 = !DILocation(line: 139, column: 2, scope: !3662)
!3674 = !DILocation(line: 139, column: 7, scope: !3662)
!3675 = !DILocation(line: 140, column: 9, scope: !3662)
!3676 = !DILocation(line: 140, column: 2, scope: !3662)
!3677 = !DILocation(line: 140, column: 7, scope: !3662)
!3678 = !DILocation(line: 141, column: 1, scope: !3662)
!3679 = distinct !DISubprogram(name: "CDDM_calc_normals_mapping_ex", scope: !1, file: !1, line: 2407, type: !1954, scopeLine: 2408, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!3680 = !DILocalVariable(name: "dm", arg: 1, scope: !3679, file: !1, line: 2407, type: !1477)
!3681 = !DILocation(line: 2407, column: 48, scope: !3679)
!3682 = !DILocalVariable(name: "only_face_normals", arg: 2, scope: !3679, file: !1, line: 2407, type: !1730)
!3683 = !DILocation(line: 2407, column: 63, scope: !3679)
!3684 = !DILocalVariable(name: "cddm", scope: !3679, file: !1, line: 2409, type: !201)
!3685 = !DILocation(line: 2409, column: 17, scope: !3679)
!3686 = !DILocation(line: 2409, column: 41, scope: !3679)
!3687 = !DILocation(line: 2409, column: 24, scope: !3679)
!3688 = !DILocalVariable(name: "face_nors", scope: !3679, file: !1, line: 2410, type: !596)
!3689 = !DILocation(line: 2410, column: 10, scope: !3679)
!3690 = !DILocation(line: 2412, column: 6, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3679, file: !1, line: 2412, column: 6)
!3692 = !DILocation(line: 2412, column: 10, scope: !3691)
!3693 = !DILocation(line: 2412, column: 22, scope: !3691)
!3694 = !DILocation(line: 2412, column: 6, scope: !3679)
!3695 = !DILocation(line: 2413, column: 3, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3691, file: !1, line: 2412, column: 28)
!3697 = !DILocation(line: 2413, column: 9, scope: !3696)
!3698 = !DILocation(line: 2413, column: 12, scope: !3696)
!3699 = !DILocation(line: 2413, column: 18, scope: !3696)
!3700 = !DILocation(line: 2414, column: 3, scope: !3696)
!3701 = !DILocation(line: 2427, column: 6, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3679, file: !1, line: 2427, column: 6)
!3703 = !DILocation(line: 2427, column: 10, scope: !3702)
!3704 = !DILocation(line: 2427, column: 26, scope: !3702)
!3705 = !DILocation(line: 2427, column: 6, scope: !3679)
!3706 = !DILocation(line: 2433, column: 31, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3702, file: !1, line: 2427, column: 32)
!3708 = !DILocation(line: 2433, column: 3, scope: !3707)
!3709 = !DILocation(line: 2434, column: 2, scope: !3707)
!3710 = !DILocation(line: 2438, column: 27, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3702, file: !1, line: 2435, column: 7)
!3712 = !DILocation(line: 2438, column: 31, scope: !3711)
!3713 = !DILocation(line: 2438, column: 52, scope: !3711)
!3714 = !DILocation(line: 2438, column: 56, scope: !3711)
!3715 = !DILocation(line: 2438, column: 3, scope: !3711)
!3716 = !DILocation(line: 2441, column: 14, scope: !3679)
!3717 = !DILocation(line: 2441, column: 47, scope: !3679)
!3718 = !DILocation(line: 2441, column: 51, scope: !3679)
!3719 = !DILocation(line: 2441, column: 45, scope: !3679)
!3720 = !DILocation(line: 2441, column: 12, scope: !3679)
!3721 = !DILocation(line: 2444, column: 35, scope: !3679)
!3722 = !DILocation(line: 2444, column: 41, scope: !3679)
!3723 = !DILocation(line: 2444, column: 48, scope: !3679)
!3724 = !DILocation(line: 2444, column: 52, scope: !3679)
!3725 = !DILocation(line: 2444, column: 80, scope: !3679)
!3726 = !DILocation(line: 2444, column: 65, scope: !3679)
!3727 = !DILocation(line: 2444, column: 100, scope: !3679)
!3728 = !DILocation(line: 2444, column: 85, scope: !3679)
!3729 = !DILocation(line: 2445, column: 35, scope: !3679)
!3730 = !DILocation(line: 2445, column: 39, scope: !3679)
!3731 = !DILocation(line: 2445, column: 52, scope: !3679)
!3732 = !DILocation(line: 2445, column: 56, scope: !3679)
!3733 = !DILocation(line: 2445, column: 75, scope: !3679)
!3734 = !DILocation(line: 2445, column: 81, scope: !3679)
!3735 = !DILocation(line: 2445, column: 88, scope: !3679)
!3736 = !DILocation(line: 2445, column: 92, scope: !3679)
!3737 = !DILocation(line: 2446, column: 57, scope: !3679)
!3738 = !DILocation(line: 2446, column: 61, scope: !3679)
!3739 = !DILocation(line: 2446, column: 35, scope: !3679)
!3740 = !DILocation(line: 2446, column: 86, scope: !3679)
!3741 = !DILocation(line: 2447, column: 35, scope: !3679)
!3742 = !DILocation(line: 2444, column: 2, scope: !3679)
!3743 = !DILocation(line: 2449, column: 24, scope: !3679)
!3744 = !DILocation(line: 2449, column: 28, scope: !3679)
!3745 = !DILocation(line: 2449, column: 60, scope: !3679)
!3746 = !DILocation(line: 2449, column: 71, scope: !3679)
!3747 = !DILocation(line: 2449, column: 75, scope: !3679)
!3748 = !DILocation(line: 2449, column: 2, scope: !3679)
!3749 = !DILocation(line: 2451, column: 2, scope: !3679)
!3750 = !DILocation(line: 2451, column: 8, scope: !3679)
!3751 = !DILocation(line: 2451, column: 11, scope: !3679)
!3752 = !DILocation(line: 2451, column: 17, scope: !3679)
!3753 = !DILocation(line: 2452, column: 1, scope: !3679)
!3754 = distinct !DISubprogram(name: "CDDM_get_loops", scope: !1, file: !1, line: 3343, type: !1536, scopeLine: 3344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!3755 = !DILocalVariable(name: "dm", arg: 1, scope: !3754, file: !1, line: 3343, type: !1477)
!3756 = !DILocation(line: 3343, column: 36, scope: !3754)
!3757 = !DILocation(line: 3345, column: 27, scope: !3754)
!3758 = !DILocation(line: 3345, column: 32, scope: !3754)
!3759 = !DILocation(line: 3345, column: 2, scope: !3754)
!3760 = distinct !DISubprogram(name: "CDDM_get_polys", scope: !1, file: !1, line: 3348, type: !1540, scopeLine: 3349, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!3761 = !DILocalVariable(name: "dm", arg: 1, scope: !3760, file: !1, line: 3348, type: !1477)
!3762 = !DILocation(line: 3348, column: 36, scope: !3760)
!3763 = !DILocation(line: 3350, column: 27, scope: !3760)
!3764 = !DILocation(line: 3350, column: 32, scope: !3760)
!3765 = !DILocation(line: 3350, column: 2, scope: !3760)
!3766 = distinct !DISubprogram(name: "CDDM_calc_normals_mapping", scope: !1, file: !1, line: 2454, type: !1475, scopeLine: 2455, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!3767 = !DILocalVariable(name: "dm", arg: 1, scope: !3766, file: !1, line: 2454, type: !1477)
!3768 = !DILocation(line: 2454, column: 45, scope: !3766)
!3769 = !DILocalVariable(name: "only_face_normals", scope: !3766, file: !1, line: 2457, type: !1730)
!3770 = !DILocation(line: 2457, column: 13, scope: !3766)
!3771 = !DILocation(line: 2457, column: 65, scope: !3766)
!3772 = !DILocation(line: 2457, column: 69, scope: !3766)
!3773 = !DILocation(line: 2457, column: 33, scope: !3766)
!3774 = !DILocation(line: 2459, column: 31, scope: !3766)
!3775 = !DILocation(line: 2459, column: 35, scope: !3766)
!3776 = !DILocation(line: 2459, column: 2, scope: !3766)
!3777 = !DILocation(line: 2460, column: 1, scope: !3766)
!3778 = distinct !DISubprogram(name: "CDDM_calc_normals", scope: !1, file: !1, line: 2488, type: !1475, scopeLine: 2489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!3779 = !DILocalVariable(name: "dm", arg: 1, scope: !3778, file: !1, line: 2488, type: !1477)
!3780 = !DILocation(line: 2488, column: 37, scope: !3778)
!3781 = !DILocalVariable(name: "cddm", scope: !3778, file: !1, line: 2490, type: !201)
!3782 = !DILocation(line: 2490, column: 17, scope: !3778)
!3783 = !DILocation(line: 2490, column: 41, scope: !3778)
!3784 = !DILocation(line: 2490, column: 24, scope: !3778)
!3785 = !DILocation(line: 2493, column: 55, scope: !3778)
!3786 = !DILocation(line: 2493, column: 59, scope: !3778)
!3787 = !DILocation(line: 2493, column: 79, scope: !3778)
!3788 = !DILocation(line: 2493, column: 83, scope: !3778)
!3789 = !DILocation(line: 2493, column: 16, scope: !3778)
!3790 = !DILocation(line: 2493, column: 2, scope: !3778)
!3791 = !DILocation(line: 2493, column: 8, scope: !3778)
!3792 = !DILocation(line: 2493, column: 14, scope: !3778)
!3793 = !DILocation(line: 2495, column: 29, scope: !3778)
!3794 = !DILocation(line: 2495, column: 35, scope: !3778)
!3795 = !DILocation(line: 2495, column: 42, scope: !3778)
!3796 = !DILocation(line: 2495, column: 46, scope: !3778)
!3797 = !DILocation(line: 2495, column: 74, scope: !3778)
!3798 = !DILocation(line: 2495, column: 59, scope: !3778)
!3799 = !DILocation(line: 2495, column: 94, scope: !3778)
!3800 = !DILocation(line: 2495, column: 79, scope: !3778)
!3801 = !DILocation(line: 2496, column: 29, scope: !3778)
!3802 = !DILocation(line: 2496, column: 33, scope: !3778)
!3803 = !DILocation(line: 2496, column: 46, scope: !3778)
!3804 = !DILocation(line: 2496, column: 50, scope: !3778)
!3805 = !DILocation(line: 2495, column: 2, scope: !3778)
!3806 = !DILocation(line: 2498, column: 2, scope: !3778)
!3807 = !DILocation(line: 2498, column: 8, scope: !3778)
!3808 = !DILocation(line: 2498, column: 11, scope: !3778)
!3809 = !DILocation(line: 2498, column: 17, scope: !3778)
!3810 = !DILocation(line: 2499, column: 1, scope: !3778)
!3811 = distinct !DISubprogram(name: "CDDM_calc_loop_normals", scope: !1, file: !1, line: 2503, type: !1480, scopeLine: 2504, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!3812 = !DILocalVariable(name: "dm", arg: 1, scope: !3811, file: !1, line: 2503, type: !1477)
!3813 = !DILocation(line: 2503, column: 42, scope: !3811)
!3814 = !DILocalVariable(name: "split_angle", arg: 2, scope: !3811, file: !1, line: 2503, type: !1482)
!3815 = !DILocation(line: 2503, column: 58, scope: !3811)
!3816 = !DILocalVariable(name: "mverts", scope: !3811, file: !1, line: 2505, type: !1780)
!3817 = !DILocation(line: 2505, column: 9, scope: !3811)
!3818 = !DILocation(line: 2505, column: 18, scope: !3811)
!3819 = !DILocation(line: 2505, column: 22, scope: !3811)
!3820 = !DILocation(line: 2505, column: 35, scope: !3811)
!3821 = !DILocalVariable(name: "medges", scope: !3811, file: !1, line: 2506, type: !1783)
!3822 = !DILocation(line: 2506, column: 9, scope: !3811)
!3823 = !DILocation(line: 2506, column: 18, scope: !3811)
!3824 = !DILocation(line: 2506, column: 22, scope: !3811)
!3825 = !DILocation(line: 2506, column: 35, scope: !3811)
!3826 = !DILocalVariable(name: "mloops", scope: !3811, file: !1, line: 2507, type: !1789)
!3827 = !DILocation(line: 2507, column: 9, scope: !3811)
!3828 = !DILocation(line: 2507, column: 18, scope: !3811)
!3829 = !DILocation(line: 2507, column: 22, scope: !3811)
!3830 = !DILocation(line: 2507, column: 35, scope: !3811)
!3831 = !DILocalVariable(name: "mpolys", scope: !3811, file: !1, line: 2508, type: !1792)
!3832 = !DILocation(line: 2508, column: 9, scope: !3811)
!3833 = !DILocation(line: 2508, column: 18, scope: !3811)
!3834 = !DILocation(line: 2508, column: 22, scope: !3811)
!3835 = !DILocation(line: 2508, column: 35, scope: !3811)
!3836 = !DILocalVariable(name: "ldata", scope: !3811, file: !1, line: 2510, type: !1586)
!3837 = !DILocation(line: 2510, column: 14, scope: !3811)
!3838 = !DILocalVariable(name: "pdata", scope: !3811, file: !1, line: 2510, type: !1586)
!3839 = !DILocation(line: 2510, column: 22, scope: !3811)
!3840 = !DILocalVariable(name: "lnors", scope: !3811, file: !1, line: 2512, type: !596)
!3841 = !DILocation(line: 2512, column: 10, scope: !3811)
!3842 = !DILocalVariable(name: "pnors", scope: !3811, file: !1, line: 2513, type: !596)
!3843 = !DILocation(line: 2513, column: 10, scope: !3811)
!3844 = !DILocalVariable(name: "numVerts", scope: !3811, file: !1, line: 2515, type: !2682)
!3845 = !DILocation(line: 2515, column: 12, scope: !3811)
!3846 = !DILocation(line: 2515, column: 23, scope: !3811)
!3847 = !DILocation(line: 2515, column: 27, scope: !3811)
!3848 = !DILocation(line: 2515, column: 39, scope: !3811)
!3849 = !DILocalVariable(name: "numEdges", scope: !3811, file: !1, line: 2516, type: !2682)
!3850 = !DILocation(line: 2516, column: 12, scope: !3811)
!3851 = !DILocation(line: 2516, column: 23, scope: !3811)
!3852 = !DILocation(line: 2516, column: 27, scope: !3811)
!3853 = !DILocation(line: 2516, column: 39, scope: !3811)
!3854 = !DILocalVariable(name: "numLoops", scope: !3811, file: !1, line: 2517, type: !2682)
!3855 = !DILocation(line: 2517, column: 12, scope: !3811)
!3856 = !DILocation(line: 2517, column: 23, scope: !3811)
!3857 = !DILocation(line: 2517, column: 27, scope: !3811)
!3858 = !DILocation(line: 2517, column: 39, scope: !3811)
!3859 = !DILocalVariable(name: "numPolys", scope: !3811, file: !1, line: 2518, type: !2682)
!3860 = !DILocation(line: 2518, column: 12, scope: !3811)
!3861 = !DILocation(line: 2518, column: 23, scope: !3811)
!3862 = !DILocation(line: 2518, column: 27, scope: !3811)
!3863 = !DILocation(line: 2518, column: 39, scope: !3811)
!3864 = !DILocation(line: 2520, column: 10, scope: !3811)
!3865 = !DILocation(line: 2520, column: 14, scope: !3811)
!3866 = !DILocation(line: 2520, column: 32, scope: !3811)
!3867 = !DILocation(line: 2520, column: 8, scope: !3811)
!3868 = !DILocation(line: 2521, column: 27, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3811, file: !1, line: 2521, column: 6)
!3870 = !DILocation(line: 2521, column: 6, scope: !3869)
!3871 = !DILocation(line: 2521, column: 6, scope: !3811)
!3872 = !DILocation(line: 2522, column: 32, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3869, file: !1, line: 2521, column: 46)
!3874 = !DILocation(line: 2522, column: 11, scope: !3873)
!3875 = !DILocation(line: 2522, column: 9, scope: !3873)
!3876 = !DILocation(line: 2523, column: 2, scope: !3873)
!3877 = !DILocation(line: 2525, column: 32, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3869, file: !1, line: 2524, column: 7)
!3879 = !DILocation(line: 2525, column: 67, scope: !3878)
!3880 = !DILocation(line: 2525, column: 11, scope: !3878)
!3881 = !DILocation(line: 2525, column: 9, scope: !3878)
!3882 = !DILocation(line: 2530, column: 10, scope: !3811)
!3883 = !DILocation(line: 2530, column: 14, scope: !3811)
!3884 = !DILocation(line: 2530, column: 32, scope: !3811)
!3885 = !DILocation(line: 2530, column: 8, scope: !3811)
!3886 = !DILocation(line: 2531, column: 31, scope: !3811)
!3887 = !DILocation(line: 2531, column: 10, scope: !3811)
!3888 = !DILocation(line: 2531, column: 8, scope: !3811)
!3889 = !DILocation(line: 2532, column: 7, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3811, file: !1, line: 2532, column: 6)
!3891 = !DILocation(line: 2532, column: 6, scope: !3811)
!3892 = !DILocation(line: 2533, column: 32, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3890, file: !1, line: 2532, column: 14)
!3894 = !DILocation(line: 2533, column: 67, scope: !3893)
!3895 = !DILocation(line: 2533, column: 11, scope: !3893)
!3896 = !DILocation(line: 2533, column: 9, scope: !3893)
!3897 = !DILocation(line: 2534, column: 2, scope: !3893)
!3898 = !DILocation(line: 2535, column: 29, scope: !3811)
!3899 = !DILocation(line: 2535, column: 37, scope: !3811)
!3900 = !DILocation(line: 2535, column: 47, scope: !3811)
!3901 = !DILocation(line: 2535, column: 55, scope: !3811)
!3902 = !DILocation(line: 2535, column: 63, scope: !3811)
!3903 = !DILocation(line: 2535, column: 73, scope: !3811)
!3904 = !DILocation(line: 2535, column: 83, scope: !3811)
!3905 = !DILocation(line: 2536, column: 30, scope: !3811)
!3906 = !DILocation(line: 2536, column: 34, scope: !3811)
!3907 = !DILocation(line: 2536, column: 40, scope: !3811)
!3908 = !DILocation(line: 2536, column: 29, scope: !3811)
!3909 = !DILocation(line: 2535, column: 2, scope: !3811)
!3910 = !DILocation(line: 2538, column: 2, scope: !3811)
!3911 = !DILocation(line: 2538, column: 6, scope: !3811)
!3912 = !DILocation(line: 2538, column: 12, scope: !3811)
!3913 = !DILocation(line: 2540, column: 30, scope: !3811)
!3914 = !DILocation(line: 2540, column: 38, scope: !3811)
!3915 = !DILocation(line: 2540, column: 48, scope: !3811)
!3916 = !DILocation(line: 2540, column: 56, scope: !3811)
!3917 = !DILocation(line: 2540, column: 66, scope: !3811)
!3918 = !DILocation(line: 2540, column: 74, scope: !3811)
!3919 = !DILocation(line: 2540, column: 81, scope: !3811)
!3920 = !DILocation(line: 2541, column: 30, scope: !3811)
!3921 = !DILocation(line: 2541, column: 38, scope: !3811)
!3922 = !DILocation(line: 2541, column: 45, scope: !3811)
!3923 = !DILocation(line: 2541, column: 55, scope: !3811)
!3924 = !DILocation(line: 2540, column: 2, scope: !3811)
!3925 = !DILocation(line: 2542, column: 1, scope: !3811)
!3926 = distinct !DISubprogram(name: "CDDM_calc_normals_tessface", scope: !1, file: !1, line: 2545, type: !1475, scopeLine: 2546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!3927 = !DILocalVariable(name: "dm", arg: 1, scope: !3926, file: !1, line: 2545, type: !1477)
!3928 = !DILocation(line: 2545, column: 46, scope: !3926)
!3929 = !DILocalVariable(name: "cddm", scope: !3926, file: !1, line: 2547, type: !201)
!3930 = !DILocation(line: 2547, column: 17, scope: !3926)
!3931 = !DILocation(line: 2547, column: 41, scope: !3926)
!3932 = !DILocation(line: 2547, column: 24, scope: !3926)
!3933 = !DILocalVariable(name: "face_nors", scope: !3926, file: !1, line: 2548, type: !596)
!3934 = !DILocation(line: 2548, column: 10, scope: !3926)
!3935 = !DILocation(line: 2550, column: 6, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3926, file: !1, line: 2550, column: 6)
!3937 = !DILocation(line: 2550, column: 10, scope: !3936)
!3938 = !DILocation(line: 2550, column: 22, scope: !3936)
!3939 = !DILocation(line: 2550, column: 6, scope: !3926)
!3940 = !DILocation(line: 2550, column: 28, scope: !3936)
!3941 = !DILocation(line: 2553, column: 55, scope: !3926)
!3942 = !DILocation(line: 2553, column: 59, scope: !3926)
!3943 = !DILocation(line: 2553, column: 79, scope: !3926)
!3944 = !DILocation(line: 2553, column: 83, scope: !3926)
!3945 = !DILocation(line: 2553, column: 16, scope: !3926)
!3946 = !DILocation(line: 2553, column: 2, scope: !3926)
!3947 = !DILocation(line: 2553, column: 8, scope: !3926)
!3948 = !DILocation(line: 2553, column: 14, scope: !3926)
!3949 = !DILocation(line: 2556, column: 36, scope: !3926)
!3950 = !DILocation(line: 2556, column: 40, scope: !3926)
!3951 = !DILocation(line: 2556, column: 14, scope: !3926)
!3952 = !DILocation(line: 2556, column: 12, scope: !3926)
!3953 = !DILocation(line: 2557, column: 7, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3926, file: !1, line: 2557, column: 6)
!3955 = !DILocation(line: 2557, column: 6, scope: !3926)
!3956 = !DILocation(line: 2558, column: 37, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3954, file: !1, line: 2557, column: 18)
!3958 = !DILocation(line: 2558, column: 41, scope: !3957)
!3959 = !DILocation(line: 2558, column: 79, scope: !3957)
!3960 = !DILocation(line: 2558, column: 83, scope: !3957)
!3961 = !DILocation(line: 2558, column: 15, scope: !3957)
!3962 = !DILocation(line: 2558, column: 13, scope: !3957)
!3963 = !DILocation(line: 2559, column: 2, scope: !3957)
!3964 = !DILocation(line: 2561, column: 33, scope: !3926)
!3965 = !DILocation(line: 2561, column: 39, scope: !3926)
!3966 = !DILocation(line: 2561, column: 46, scope: !3926)
!3967 = !DILocation(line: 2561, column: 50, scope: !3926)
!3968 = !DILocation(line: 2562, column: 33, scope: !3926)
!3969 = !DILocation(line: 2562, column: 39, scope: !3926)
!3970 = !DILocation(line: 2562, column: 46, scope: !3926)
!3971 = !DILocation(line: 2562, column: 50, scope: !3926)
!3972 = !DILocation(line: 2562, column: 67, scope: !3926)
!3973 = !DILocation(line: 2561, column: 2, scope: !3926)
!3974 = !DILocation(line: 2564, column: 2, scope: !3926)
!3975 = !DILocation(line: 2564, column: 8, scope: !3926)
!3976 = !DILocation(line: 2564, column: 11, scope: !3926)
!3977 = !DILocation(line: 2564, column: 17, scope: !3926)
!3978 = !DILocation(line: 2565, column: 1, scope: !3926)
!3979 = distinct !DISubprogram(name: "CDDM_merge_verts", scope: !1, file: !1, line: 2763, type: !3980, scopeLine: 2764, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!3980 = !DISubroutineType(types: !3981)
!3981 = !{!1477, !1477, !3982, !2682, !2682}
!3982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 64)
!3983 = !DILocalVariable(name: "dm", arg: 1, scope: !3979, file: !1, line: 2763, type: !1477)
!3984 = !DILocation(line: 2763, column: 44, scope: !3979)
!3985 = !DILocalVariable(name: "vtargetmap", arg: 2, scope: !3979, file: !1, line: 2763, type: !3982)
!3986 = !DILocation(line: 2763, column: 59, scope: !3979)
!3987 = !DILocalVariable(name: "tot_vtargetmap", arg: 3, scope: !3979, file: !1, line: 2763, type: !2682)
!3988 = !DILocation(line: 2763, column: 81, scope: !3979)
!3989 = !DILocalVariable(name: "merge_mode", arg: 4, scope: !3979, file: !1, line: 2763, type: !2682)
!3990 = !DILocation(line: 2763, column: 107, scope: !3979)
!3991 = !DILocalVariable(name: "cddm", scope: !3979, file: !1, line: 2766, type: !201)
!3992 = !DILocation(line: 2766, column: 17, scope: !3979)
!3993 = !DILocation(line: 2766, column: 41, scope: !3979)
!3994 = !DILocation(line: 2766, column: 24, scope: !3979)
!3995 = !DILocalVariable(name: "cddm2", scope: !3979, file: !1, line: 2767, type: !201)
!3996 = !DILocation(line: 2767, column: 17, scope: !3979)
!3997 = !DILocalVariable(name: "totvert", scope: !3979, file: !1, line: 2769, type: !2682)
!3998 = !DILocation(line: 2769, column: 12, scope: !3979)
!3999 = !DILocation(line: 2769, column: 22, scope: !3979)
!4000 = !DILocation(line: 2769, column: 26, scope: !3979)
!4001 = !DILocalVariable(name: "totedge", scope: !3979, file: !1, line: 2770, type: !2682)
!4002 = !DILocation(line: 2770, column: 12, scope: !3979)
!4003 = !DILocation(line: 2770, column: 22, scope: !3979)
!4004 = !DILocation(line: 2770, column: 26, scope: !3979)
!4005 = !DILocalVariable(name: "totloop", scope: !3979, file: !1, line: 2771, type: !2682)
!4006 = !DILocation(line: 2771, column: 12, scope: !3979)
!4007 = !DILocation(line: 2771, column: 22, scope: !3979)
!4008 = !DILocation(line: 2771, column: 26, scope: !3979)
!4009 = !DILocalVariable(name: "totpoly", scope: !3979, file: !1, line: 2772, type: !2682)
!4010 = !DILocation(line: 2772, column: 12, scope: !3979)
!4011 = !DILocation(line: 2772, column: 22, scope: !3979)
!4012 = !DILocation(line: 2772, column: 26, scope: !3979)
!4013 = !DILocalVariable(name: "totvert_final", scope: !3979, file: !1, line: 2774, type: !2682)
!4014 = !DILocation(line: 2774, column: 12, scope: !3979)
!4015 = !DILocation(line: 2774, column: 28, scope: !3979)
!4016 = !DILocation(line: 2774, column: 38, scope: !3979)
!4017 = !DILocation(line: 2774, column: 36, scope: !3979)
!4018 = !DILocalVariable(name: "mv", scope: !3979, file: !1, line: 2776, type: !1780)
!4019 = !DILocation(line: 2776, column: 9, scope: !3979)
!4020 = !DILocalVariable(name: "mvert", scope: !3979, file: !1, line: 2776, type: !1780)
!4021 = !DILocation(line: 2776, column: 14, scope: !3979)
!4022 = !DILocation(line: 2776, column: 22, scope: !3979)
!4023 = !DILocation(line: 2776, column: 51, scope: !3979)
!4024 = !DILocation(line: 2776, column: 49, scope: !3979)
!4025 = !DILocalVariable(name: "oldv", scope: !3979, file: !1, line: 2777, type: !289)
!4026 = !DILocation(line: 2777, column: 7, scope: !3979)
!4027 = !DILocation(line: 2777, column: 22, scope: !3979)
!4028 = !DILocation(line: 2777, column: 51, scope: !3979)
!4029 = !DILocation(line: 2777, column: 49, scope: !3979)
!4030 = !DILocalVariable(name: "newv", scope: !3979, file: !1, line: 2778, type: !289)
!4031 = !DILocation(line: 2778, column: 7, scope: !3979)
!4032 = !DILocation(line: 2778, column: 22, scope: !3979)
!4033 = !DILocation(line: 2778, column: 51, scope: !3979)
!4034 = !DILocation(line: 2778, column: 49, scope: !3979)
!4035 = !DILocalVariable(name: "_mvert_index", scope: !3979, file: !1, line: 2779, type: !5)
!4036 = !DILocation(line: 2779, column: 2, scope: !3979)
!4037 = !DILocalVariable(name: "_oldv_index", scope: !3979, file: !1, line: 2780, type: !5)
!4038 = !DILocation(line: 2780, column: 2, scope: !3979)
!4039 = !DILocalVariable(name: "med", scope: !3979, file: !1, line: 2782, type: !1783)
!4040 = !DILocation(line: 2782, column: 9, scope: !3979)
!4041 = !DILocalVariable(name: "medge", scope: !3979, file: !1, line: 2782, type: !1783)
!4042 = !DILocation(line: 2782, column: 15, scope: !3979)
!4043 = !DILocation(line: 2782, column: 23, scope: !3979)
!4044 = !DILocation(line: 2782, column: 52, scope: !3979)
!4045 = !DILocation(line: 2782, column: 50, scope: !3979)
!4046 = !DILocalVariable(name: "olde", scope: !3979, file: !1, line: 2783, type: !289)
!4047 = !DILocation(line: 2783, column: 7, scope: !3979)
!4048 = !DILocation(line: 2783, column: 23, scope: !3979)
!4049 = !DILocation(line: 2783, column: 52, scope: !3979)
!4050 = !DILocation(line: 2783, column: 50, scope: !3979)
!4051 = !DILocalVariable(name: "newe", scope: !3979, file: !1, line: 2784, type: !289)
!4052 = !DILocation(line: 2784, column: 7, scope: !3979)
!4053 = !DILocation(line: 2784, column: 23, scope: !3979)
!4054 = !DILocation(line: 2784, column: 52, scope: !3979)
!4055 = !DILocation(line: 2784, column: 50, scope: !3979)
!4056 = !DILocalVariable(name: "_medge_index", scope: !3979, file: !1, line: 2785, type: !5)
!4057 = !DILocation(line: 2785, column: 2, scope: !3979)
!4058 = !DILocalVariable(name: "_olde_index", scope: !3979, file: !1, line: 2786, type: !5)
!4059 = !DILocation(line: 2786, column: 2, scope: !3979)
!4060 = !DILocalVariable(name: "ml", scope: !3979, file: !1, line: 2788, type: !1789)
!4061 = !DILocation(line: 2788, column: 9, scope: !3979)
!4062 = !DILocalVariable(name: "mloop", scope: !3979, file: !1, line: 2788, type: !1789)
!4063 = !DILocation(line: 2788, column: 14, scope: !3979)
!4064 = !DILocation(line: 2788, column: 22, scope: !3979)
!4065 = !DILocation(line: 2788, column: 51, scope: !3979)
!4066 = !DILocation(line: 2788, column: 49, scope: !3979)
!4067 = !DILocalVariable(name: "oldl", scope: !3979, file: !1, line: 2789, type: !289)
!4068 = !DILocation(line: 2789, column: 7, scope: !3979)
!4069 = !DILocation(line: 2789, column: 22, scope: !3979)
!4070 = !DILocation(line: 2789, column: 51, scope: !3979)
!4071 = !DILocation(line: 2789, column: 49, scope: !3979)
!4072 = !DILocalVariable(name: "_mloop_index", scope: !3979, file: !1, line: 2793, type: !5)
!4073 = !DILocation(line: 2793, column: 2, scope: !3979)
!4074 = !DILocalVariable(name: "_oldl_index", scope: !3979, file: !1, line: 2794, type: !5)
!4075 = !DILocation(line: 2794, column: 2, scope: !3979)
!4076 = !DILocalVariable(name: "mp", scope: !3979, file: !1, line: 2796, type: !1792)
!4077 = !DILocation(line: 2796, column: 9, scope: !3979)
!4078 = !DILocalVariable(name: "mpoly", scope: !3979, file: !1, line: 2796, type: !1792)
!4079 = !DILocation(line: 2796, column: 14, scope: !3979)
!4080 = !DILocation(line: 2796, column: 22, scope: !3979)
!4081 = !DILocation(line: 2796, column: 51, scope: !3979)
!4082 = !DILocation(line: 2796, column: 49, scope: !3979)
!4083 = !DILocalVariable(name: "oldp", scope: !3979, file: !1, line: 2797, type: !289)
!4084 = !DILocation(line: 2797, column: 7, scope: !3979)
!4085 = !DILocation(line: 2797, column: 22, scope: !3979)
!4086 = !DILocation(line: 2797, column: 51, scope: !3979)
!4087 = !DILocation(line: 2797, column: 49, scope: !3979)
!4088 = !DILocalVariable(name: "_mpoly_index", scope: !3979, file: !1, line: 2798, type: !5)
!4089 = !DILocation(line: 2798, column: 2, scope: !3979)
!4090 = !DILocalVariable(name: "_oldp_index", scope: !3979, file: !1, line: 2799, type: !5)
!4091 = !DILocation(line: 2799, column: 2, scope: !3979)
!4092 = !DILocalVariable(name: "ehash", scope: !3979, file: !1, line: 2801, type: !1930)
!4093 = !DILocation(line: 2801, column: 12, scope: !3979)
!4094 = !DILocation(line: 2801, column: 50, scope: !3979)
!4095 = !DILocation(line: 2801, column: 20, scope: !3979)
!4096 = !DILocalVariable(name: "i", scope: !3979, file: !1, line: 2803, type: !219)
!4097 = !DILocation(line: 2803, column: 6, scope: !3979)
!4098 = !DILocalVariable(name: "j", scope: !3979, file: !1, line: 2803, type: !219)
!4099 = !DILocation(line: 2803, column: 9, scope: !3979)
!4100 = !DILocalVariable(name: "c", scope: !3979, file: !1, line: 2803, type: !219)
!4101 = !DILocation(line: 2803, column: 12, scope: !3979)
!4102 = !DILocalVariable(name: "poly_keys", scope: !3979, file: !1, line: 2805, type: !4103)
!4103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4104, size: 64)
!4104 = !DIDerivedType(tag: DW_TAG_typedef, name: "PolyKey", file: !1, line: 2710, baseType: !4105)
!4105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PolyKey", file: !1, line: 2705, size: 128, elements: !4106)
!4106 = !{!4107, !4108, !4109, !4110}
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "poly_index", scope: !4105, file: !1, line: 2706, baseType: !219, size: 32)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "totloops", scope: !4105, file: !1, line: 2707, baseType: !219, size: 32, offset: 32)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "hash_sum", scope: !4105, file: !1, line: 2708, baseType: !5, size: 32, offset: 64)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "hash_xor", scope: !4105, file: !1, line: 2709, baseType: !5, size: 32, offset: 96)
!4111 = !DILocation(line: 2805, column: 11, scope: !3979)
!4112 = !DILocalVariable(name: "poly_gset", scope: !3979, file: !1, line: 2806, type: !4113)
!4113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4114, size: 64)
!4114 = !DIDerivedType(tag: DW_TAG_typedef, name: "GSet", file: !119, line: 176, baseType: !4115)
!4115 = !DICompositeType(tag: DW_TAG_structure_type, name: "GSet", file: !119, line: 176, flags: DIFlagFwdDecl)
!4116 = !DILocation(line: 2806, column: 8, scope: !3979)
!4117 = !DILocation(line: 2808, column: 2, scope: !3979)
!4118 = !DILocation(line: 2809, column: 2, scope: !3979)
!4119 = !DILocation(line: 2810, column: 2, scope: !3979)
!4120 = !DILocation(line: 2811, column: 2, scope: !3979)
!4121 = !DILocation(line: 2813, column: 2, scope: !3979)
!4122 = !DILocation(line: 2814, column: 2, scope: !3979)
!4123 = !DILocation(line: 2815, column: 2, scope: !3979)
!4124 = !DILocation(line: 2816, column: 2, scope: !3979)
!4125 = !DILocation(line: 2819, column: 7, scope: !3979)
!4126 = !DILocation(line: 2819, column: 13, scope: !3979)
!4127 = !DILocation(line: 2819, column: 5, scope: !3979)
!4128 = !DILocation(line: 2820, column: 4, scope: !3979)
!4129 = !DILocation(line: 2821, column: 9, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !3979, file: !1, line: 2821, column: 2)
!4131 = !DILocation(line: 2821, column: 7, scope: !4130)
!4132 = !DILocation(line: 2821, column: 14, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4130, file: !1, line: 2821, column: 2)
!4134 = !DILocation(line: 2821, column: 18, scope: !4133)
!4135 = !DILocation(line: 2821, column: 16, scope: !4133)
!4136 = !DILocation(line: 2821, column: 2, scope: !4130)
!4137 = !DILocation(line: 2822, column: 7, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4139, file: !1, line: 2822, column: 7)
!4139 = distinct !DILexicalBlock(scope: !4133, file: !1, line: 2821, column: 38)
!4140 = !DILocation(line: 2822, column: 18, scope: !4138)
!4141 = !DILocation(line: 2822, column: 21, scope: !4138)
!4142 = !DILocation(line: 2822, column: 7, scope: !4139)
!4143 = !DILocation(line: 2823, column: 4, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4138, file: !1, line: 2822, column: 28)
!4145 = !DILocation(line: 2824, column: 4, scope: !4144)
!4146 = !DILocation(line: 2825, column: 15, scope: !4144)
!4147 = !DILocation(line: 2825, column: 4, scope: !4144)
!4148 = !DILocation(line: 2825, column: 9, scope: !4144)
!4149 = !DILocation(line: 2825, column: 12, scope: !4144)
!4150 = !DILocation(line: 2826, column: 3, scope: !4144)
!4151 = !DILocation(line: 2829, column: 4, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4138, file: !1, line: 2827, column: 8)
!4153 = !DILocation(line: 2829, column: 9, scope: !4152)
!4154 = !DILocation(line: 2829, column: 12, scope: !4152)
!4155 = !DILocation(line: 2831, column: 2, scope: !4139)
!4156 = !DILocation(line: 2821, column: 28, scope: !4133)
!4157 = !DILocation(line: 2821, column: 34, scope: !4133)
!4158 = !DILocation(line: 2821, column: 2, scope: !4133)
!4159 = distinct !{!4159, !4136, !4160}
!4160 = !DILocation(line: 2831, column: 2, scope: !4130)
!4161 = !DILocation(line: 2834, column: 9, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !3979, file: !1, line: 2834, column: 2)
!4163 = !DILocation(line: 2834, column: 7, scope: !4162)
!4164 = !DILocation(line: 2834, column: 14, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4162, file: !1, line: 2834, column: 2)
!4166 = !DILocation(line: 2834, column: 18, scope: !4165)
!4167 = !DILocation(line: 2834, column: 16, scope: !4165)
!4168 = !DILocation(line: 2834, column: 2, scope: !4162)
!4169 = !DILocation(line: 2835, column: 7, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4171, file: !1, line: 2835, column: 7)
!4171 = distinct !DILexicalBlock(scope: !4165, file: !1, line: 2834, column: 32)
!4172 = !DILocation(line: 2835, column: 18, scope: !4170)
!4173 = !DILocation(line: 2835, column: 21, scope: !4170)
!4174 = !DILocation(line: 2835, column: 7, scope: !4171)
!4175 = !DILocation(line: 2836, column: 14, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4170, file: !1, line: 2835, column: 28)
!4177 = !DILocation(line: 2836, column: 19, scope: !4176)
!4178 = !DILocation(line: 2836, column: 30, scope: !4176)
!4179 = !DILocation(line: 2836, column: 4, scope: !4176)
!4180 = !DILocation(line: 2836, column: 9, scope: !4176)
!4181 = !DILocation(line: 2836, column: 12, scope: !4176)
!4182 = !DILocation(line: 2837, column: 3, scope: !4176)
!4183 = !DILocation(line: 2838, column: 2, scope: !4171)
!4184 = !DILocation(line: 2834, column: 28, scope: !4165)
!4185 = !DILocation(line: 2834, column: 2, scope: !4165)
!4186 = distinct !{!4186, !4168, !4187}
!4187 = !DILocation(line: 2838, column: 2, scope: !4162)
!4188 = !DILocation(line: 2846, column: 8, scope: !3979)
!4189 = !DILocation(line: 2846, column: 14, scope: !3979)
!4190 = !DILocation(line: 2846, column: 6, scope: !3979)
!4191 = !DILocation(line: 2847, column: 4, scope: !3979)
!4192 = !DILocation(line: 2848, column: 9, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !3979, file: !1, line: 2848, column: 2)
!4194 = !DILocation(line: 2848, column: 7, scope: !4193)
!4195 = !DILocation(line: 2848, column: 14, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4193, file: !1, line: 2848, column: 2)
!4197 = !DILocation(line: 2848, column: 18, scope: !4196)
!4198 = !DILocation(line: 2848, column: 16, scope: !4196)
!4199 = !DILocation(line: 2848, column: 2, scope: !4193)
!4200 = !DILocalVariable(name: "v1", scope: !4201, file: !1, line: 2849, type: !4202)
!4201 = distinct !DILexicalBlock(scope: !4196, file: !1, line: 2848, column: 39)
!4202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5)
!4203 = !DILocation(line: 2849, column: 22, scope: !4201)
!4204 = !DILocation(line: 2849, column: 28, scope: !4201)
!4205 = !DILocation(line: 2849, column: 39, scope: !4201)
!4206 = !DILocation(line: 2849, column: 44, scope: !4201)
!4207 = !DILocation(line: 2849, column: 48, scope: !4201)
!4208 = !DILocation(line: 2849, column: 27, scope: !4201)
!4209 = !DILocation(line: 2849, column: 57, scope: !4201)
!4210 = !DILocation(line: 2849, column: 68, scope: !4201)
!4211 = !DILocation(line: 2849, column: 73, scope: !4201)
!4212 = !DILocation(line: 2849, column: 79, scope: !4201)
!4213 = !DILocation(line: 2849, column: 84, scope: !4201)
!4214 = !DILocalVariable(name: "v2", scope: !4201, file: !1, line: 2850, type: !4202)
!4215 = !DILocation(line: 2850, column: 22, scope: !4201)
!4216 = !DILocation(line: 2850, column: 28, scope: !4201)
!4217 = !DILocation(line: 2850, column: 39, scope: !4201)
!4218 = !DILocation(line: 2850, column: 44, scope: !4201)
!4219 = !DILocation(line: 2850, column: 48, scope: !4201)
!4220 = !DILocation(line: 2850, column: 27, scope: !4201)
!4221 = !DILocation(line: 2850, column: 57, scope: !4201)
!4222 = !DILocation(line: 2850, column: 68, scope: !4201)
!4223 = !DILocation(line: 2850, column: 73, scope: !4201)
!4224 = !DILocation(line: 2850, column: 79, scope: !4201)
!4225 = !DILocation(line: 2850, column: 84, scope: !4201)
!4226 = !DILocation(line: 2851, column: 7, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4201, file: !1, line: 2851, column: 7)
!4228 = !DILocation(line: 2851, column: 7, scope: !4201)
!4229 = !DILocalVariable(name: "eh_p", scope: !4230, file: !1, line: 2852, type: !735)
!4230 = distinct !DILexicalBlock(scope: !4227, file: !1, line: 2851, column: 25)
!4231 = !DILocation(line: 2852, column: 11, scope: !4230)
!4232 = !DILocation(line: 2852, column: 40, scope: !4230)
!4233 = !DILocation(line: 2852, column: 47, scope: !4230)
!4234 = !DILocation(line: 2852, column: 51, scope: !4230)
!4235 = !DILocation(line: 2852, column: 18, scope: !4230)
!4236 = !DILocation(line: 2854, column: 8, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4230, file: !1, line: 2854, column: 8)
!4238 = !DILocation(line: 2854, column: 8, scope: !4230)
!4239 = !DILocation(line: 2855, column: 15, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4237, file: !1, line: 2854, column: 14)
!4241 = !DILocation(line: 2855, column: 5, scope: !4240)
!4242 = !DILocation(line: 2855, column: 10, scope: !4240)
!4243 = !DILocation(line: 2855, column: 13, scope: !4240)
!4244 = !DILocation(line: 2856, column: 4, scope: !4240)
!4245 = !DILocation(line: 2858, column: 5, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4237, file: !1, line: 2857, column: 9)
!4247 = !DILocation(line: 2859, column: 5, scope: !4246)
!4248 = !DILocation(line: 2860, column: 15, scope: !4246)
!4249 = !DILocation(line: 2860, column: 5, scope: !4246)
!4250 = !DILocation(line: 2860, column: 10, scope: !4246)
!4251 = !DILocation(line: 2860, column: 13, scope: !4246)
!4252 = !DILocation(line: 2861, column: 25, scope: !4246)
!4253 = !DILocation(line: 2861, column: 32, scope: !4246)
!4254 = !DILocation(line: 2861, column: 36, scope: !4246)
!4255 = !DILocation(line: 2861, column: 40, scope: !4246)
!4256 = !DILocation(line: 2861, column: 5, scope: !4246)
!4257 = !DILocation(line: 2862, column: 6, scope: !4246)
!4258 = !DILocation(line: 2864, column: 3, scope: !4230)
!4259 = !DILocation(line: 2866, column: 4, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4227, file: !1, line: 2865, column: 8)
!4261 = !DILocation(line: 2866, column: 9, scope: !4260)
!4262 = !DILocation(line: 2866, column: 12, scope: !4260)
!4263 = !DILocation(line: 2868, column: 2, scope: !4201)
!4264 = !DILocation(line: 2848, column: 28, scope: !4196)
!4265 = !DILocation(line: 2848, column: 35, scope: !4196)
!4266 = !DILocation(line: 2848, column: 2, scope: !4196)
!4267 = distinct !{!4267, !4199, !4268}
!4268 = !DILocation(line: 2868, column: 2, scope: !4193)
!4269 = !DILocation(line: 2870, column: 6, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !3979, file: !1, line: 2870, column: 6)
!4271 = !DILocation(line: 2870, column: 17, scope: !4270)
!4272 = !DILocation(line: 2870, column: 6, scope: !3979)
!4273 = !DILocalVariable(name: "mpgh", scope: !4274, file: !1, line: 2874, type: !4103)
!4274 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 2870, column: 52)
!4275 = !DILocation(line: 2874, column: 12, scope: !4274)
!4276 = !DILocation(line: 2875, column: 15, scope: !4274)
!4277 = !DILocation(line: 2875, column: 45, scope: !4274)
!4278 = !DILocation(line: 2875, column: 43, scope: !4274)
!4279 = !DILocation(line: 2875, column: 13, scope: !4274)
!4280 = !DILocation(line: 2876, column: 82, scope: !4274)
!4281 = !DILocation(line: 2876, column: 15, scope: !4274)
!4282 = !DILocation(line: 2876, column: 13, scope: !4274)
!4283 = !DILocation(line: 2878, column: 21, scope: !4274)
!4284 = !DILocation(line: 2878, column: 3, scope: !4274)
!4285 = !DILocation(line: 2880, column: 8, scope: !4274)
!4286 = !DILocation(line: 2880, column: 14, scope: !4274)
!4287 = !DILocation(line: 2880, column: 6, scope: !4274)
!4288 = !DILocation(line: 2881, column: 10, scope: !4274)
!4289 = !DILocation(line: 2881, column: 8, scope: !4274)
!4290 = !DILocation(line: 2882, column: 10, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4274, file: !1, line: 2882, column: 3)
!4292 = !DILocation(line: 2882, column: 8, scope: !4291)
!4293 = !DILocation(line: 2882, column: 15, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4291, file: !1, line: 2882, column: 3)
!4295 = !DILocation(line: 2882, column: 19, scope: !4294)
!4296 = !DILocation(line: 2882, column: 17, scope: !4294)
!4297 = !DILocation(line: 2882, column: 3, scope: !4291)
!4298 = !DILocation(line: 2883, column: 23, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4294, file: !1, line: 2882, column: 47)
!4300 = !DILocation(line: 2883, column: 4, scope: !4299)
!4301 = !DILocation(line: 2883, column: 10, scope: !4299)
!4302 = !DILocation(line: 2883, column: 21, scope: !4299)
!4303 = !DILocation(line: 2884, column: 21, scope: !4299)
!4304 = !DILocation(line: 2884, column: 25, scope: !4299)
!4305 = !DILocation(line: 2884, column: 4, scope: !4299)
!4306 = !DILocation(line: 2884, column: 10, scope: !4299)
!4307 = !DILocation(line: 2884, column: 19, scope: !4299)
!4308 = !DILocation(line: 2885, column: 9, scope: !4299)
!4309 = !DILocation(line: 2885, column: 15, scope: !4299)
!4310 = !DILocation(line: 2885, column: 23, scope: !4299)
!4311 = !DILocation(line: 2885, column: 27, scope: !4299)
!4312 = !DILocation(line: 2885, column: 21, scope: !4299)
!4313 = !DILocation(line: 2885, column: 7, scope: !4299)
!4314 = !DILocation(line: 2886, column: 21, scope: !4299)
!4315 = !DILocation(line: 2886, column: 27, scope: !4299)
!4316 = !DILocation(line: 2886, column: 36, scope: !4299)
!4317 = !DILocation(line: 2886, column: 4, scope: !4299)
!4318 = !DILocation(line: 2886, column: 10, scope: !4299)
!4319 = !DILocation(line: 2886, column: 19, scope: !4299)
!4320 = !DILocation(line: 2887, column: 11, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4299, file: !1, line: 2887, column: 4)
!4322 = !DILocation(line: 2887, column: 9, scope: !4321)
!4323 = !DILocation(line: 2887, column: 16, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4321, file: !1, line: 2887, column: 4)
!4325 = !DILocation(line: 2887, column: 20, scope: !4324)
!4326 = !DILocation(line: 2887, column: 24, scope: !4324)
!4327 = !DILocation(line: 2887, column: 18, scope: !4324)
!4328 = !DILocation(line: 2887, column: 4, scope: !4321)
!4329 = !DILocation(line: 2888, column: 23, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4324, file: !1, line: 2887, column: 44)
!4331 = !DILocation(line: 2888, column: 27, scope: !4330)
!4332 = !DILocation(line: 2888, column: 5, scope: !4330)
!4333 = !DILocation(line: 2888, column: 11, scope: !4330)
!4334 = !DILocation(line: 2888, column: 20, scope: !4330)
!4335 = !DILocation(line: 2889, column: 23, scope: !4330)
!4336 = !DILocation(line: 2889, column: 27, scope: !4330)
!4337 = !DILocation(line: 2889, column: 5, scope: !4330)
!4338 = !DILocation(line: 2889, column: 11, scope: !4330)
!4339 = !DILocation(line: 2889, column: 20, scope: !4330)
!4340 = !DILocation(line: 2890, column: 4, scope: !4330)
!4341 = !DILocation(line: 2887, column: 34, scope: !4324)
!4342 = !DILocation(line: 2887, column: 40, scope: !4324)
!4343 = !DILocation(line: 2887, column: 4, scope: !4324)
!4344 = distinct !{!4344, !4328, !4345}
!4345 = !DILocation(line: 2890, column: 4, scope: !4321)
!4346 = !DILocation(line: 2891, column: 20, scope: !4299)
!4347 = !DILocation(line: 2891, column: 31, scope: !4299)
!4348 = !DILocation(line: 2891, column: 4, scope: !4299)
!4349 = !DILocation(line: 2892, column: 3, scope: !4299)
!4350 = !DILocation(line: 2882, column: 29, scope: !4294)
!4351 = !DILocation(line: 2882, column: 35, scope: !4294)
!4352 = !DILocation(line: 2882, column: 43, scope: !4294)
!4353 = !DILocation(line: 2882, column: 3, scope: !4294)
!4354 = distinct !{!4354, !4297, !4355}
!4355 = !DILocation(line: 2892, column: 3, scope: !4291)
!4356 = !DILocation(line: 2894, column: 7, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4274, file: !1, line: 2894, column: 7)
!4358 = !DILocation(line: 2894, column: 13, scope: !4357)
!4359 = !DILocation(line: 2894, column: 7, scope: !4274)
!4360 = !DILocation(line: 2895, column: 4, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4357, file: !1, line: 2894, column: 19)
!4362 = !DILocation(line: 2895, column: 14, scope: !4361)
!4363 = !DILocation(line: 2895, column: 20, scope: !4361)
!4364 = !DILocation(line: 2896, column: 4, scope: !4361)
!4365 = !DILocation(line: 2896, column: 14, scope: !4361)
!4366 = !DILocation(line: 2896, column: 20, scope: !4361)
!4367 = !DILocation(line: 2897, column: 3, scope: !4361)
!4368 = !DILocation(line: 2900, column: 34, scope: !4274)
!4369 = !DILocation(line: 2900, column: 40, scope: !4274)
!4370 = !DILocation(line: 2900, column: 47, scope: !4274)
!4371 = !DILocation(line: 2900, column: 53, scope: !4274)
!4372 = !DILocation(line: 2901, column: 33, scope: !4274)
!4373 = !DILocation(line: 2901, column: 39, scope: !4274)
!4374 = !DILocation(line: 2901, column: 46, scope: !4274)
!4375 = !DILocation(line: 2901, column: 52, scope: !4274)
!4376 = !DILocation(line: 2902, column: 33, scope: !4274)
!4377 = !DILocation(line: 2902, column: 42, scope: !4274)
!4378 = !DILocation(line: 2902, column: 51, scope: !4274)
!4379 = !DILocation(line: 2900, column: 3, scope: !4274)
!4380 = !DILocation(line: 2903, column: 2, scope: !4274)
!4381 = !DILocation(line: 2906, column: 7, scope: !3979)
!4382 = !DILocation(line: 2906, column: 13, scope: !3979)
!4383 = !DILocation(line: 2906, column: 5, scope: !3979)
!4384 = !DILocation(line: 2907, column: 9, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !3979, file: !1, line: 2907, column: 2)
!4386 = !DILocation(line: 2907, column: 7, scope: !4385)
!4387 = !DILocation(line: 2907, column: 14, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4385, file: !1, line: 2907, column: 2)
!4389 = !DILocation(line: 2907, column: 18, scope: !4388)
!4390 = !DILocation(line: 2907, column: 16, scope: !4388)
!4391 = !DILocation(line: 2907, column: 2, scope: !4385)
!4392 = !DILocalVariable(name: "mp_new", scope: !4393, file: !1, line: 2908, type: !1792)
!4393 = distinct !DILexicalBlock(scope: !4388, file: !1, line: 2907, column: 38)
!4394 = !DILocation(line: 2908, column: 10, scope: !4393)
!4395 = !DILocation(line: 2910, column: 8, scope: !4393)
!4396 = !DILocation(line: 2910, column: 14, scope: !4393)
!4397 = !DILocation(line: 2910, column: 22, scope: !4393)
!4398 = !DILocation(line: 2910, column: 26, scope: !4393)
!4399 = !DILocation(line: 2910, column: 20, scope: !4393)
!4400 = !DILocation(line: 2910, column: 6, scope: !4393)
!4401 = !DILocalVariable(name: "all_vertices_merged", scope: !4402, file: !1, line: 2914, type: !309)
!4402 = distinct !DILexicalBlock(scope: !4393, file: !1, line: 2913, column: 3)
!4403 = !DILocation(line: 2914, column: 9, scope: !4402)
!4404 = !DILocation(line: 2916, column: 11, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4402, file: !1, line: 2916, column: 4)
!4406 = !DILocation(line: 2916, column: 9, scope: !4405)
!4407 = !DILocation(line: 2916, column: 16, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4405, file: !1, line: 2916, column: 4)
!4409 = !DILocation(line: 2916, column: 20, scope: !4408)
!4410 = !DILocation(line: 2916, column: 24, scope: !4408)
!4411 = !DILocation(line: 2916, column: 18, scope: !4408)
!4412 = !DILocation(line: 2916, column: 4, scope: !4405)
!4413 = !DILocation(line: 2917, column: 9, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4415, file: !1, line: 2917, column: 9)
!4415 = distinct !DILexicalBlock(scope: !4408, file: !1, line: 2916, column: 44)
!4416 = !DILocation(line: 2917, column: 20, scope: !4414)
!4417 = !DILocation(line: 2917, column: 24, scope: !4414)
!4418 = !DILocation(line: 2917, column: 27, scope: !4414)
!4419 = !DILocation(line: 2917, column: 9, scope: !4415)
!4420 = !DILocation(line: 2918, column: 26, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4414, file: !1, line: 2917, column: 34)
!4422 = !DILocation(line: 2919, column: 6, scope: !4421)
!4423 = !DILocation(line: 2921, column: 4, scope: !4415)
!4424 = !DILocation(line: 2916, column: 34, scope: !4408)
!4425 = !DILocation(line: 2916, column: 40, scope: !4408)
!4426 = !DILocation(line: 2916, column: 4, scope: !4408)
!4427 = distinct !{!4427, !4412, !4428}
!4428 = !DILocation(line: 2921, column: 4, scope: !4405)
!4429 = !DILocation(line: 2923, column: 8, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4402, file: !1, line: 2923, column: 8)
!4431 = !DILocation(line: 2923, column: 8, scope: !4402)
!4432 = !DILocation(line: 2924, column: 9, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4434, file: !1, line: 2924, column: 9)
!4434 = distinct !DILexicalBlock(scope: !4430, file: !1, line: 2923, column: 39)
!4435 = !DILocation(line: 2924, column: 20, scope: !4433)
!4436 = !DILocation(line: 2924, column: 9, scope: !4434)
!4437 = !DILocation(line: 2926, column: 6, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4433, file: !1, line: 2924, column: 56)
!4439 = !DILocation(line: 2928, column: 14, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4433, file: !1, line: 2928, column: 14)
!4441 = !DILocation(line: 2928, column: 25, scope: !4440)
!4442 = !DILocation(line: 2928, column: 14, scope: !4433)
!4443 = !DILocalVariable(name: "i_poly", scope: !4444, file: !1, line: 2932, type: !219)
!4444 = distinct !DILexicalBlock(scope: !4440, file: !1, line: 2928, column: 60)
!4445 = !DILocation(line: 2932, column: 10, scope: !4444)
!4446 = !DILocalVariable(name: "v_target", scope: !4444, file: !1, line: 2932, type: !219)
!4447 = !DILocation(line: 2932, column: 18, scope: !4444)
!4448 = !DILocalVariable(name: "v_prev", scope: !4444, file: !1, line: 2932, type: !219)
!4449 = !DILocation(line: 2932, column: 28, scope: !4444)
!4450 = !DILocalVariable(name: "found", scope: !4444, file: !1, line: 2933, type: !309)
!4451 = !DILocation(line: 2933, column: 11, scope: !4444)
!4452 = !DILocalVariable(name: "pkey", scope: !4444, file: !1, line: 2934, type: !4104)
!4453 = !DILocation(line: 2934, column: 14, scope: !4444)
!4454 = !DILocation(line: 2938, column: 11, scope: !4444)
!4455 = !DILocation(line: 2938, column: 17, scope: !4444)
!4456 = !DILocation(line: 2938, column: 25, scope: !4444)
!4457 = !DILocation(line: 2938, column: 29, scope: !4444)
!4458 = !DILocation(line: 2938, column: 23, scope: !4444)
!4459 = !DILocation(line: 2938, column: 9, scope: !4444)
!4460 = !DILocation(line: 2939, column: 27, scope: !4444)
!4461 = !DILocation(line: 2939, column: 36, scope: !4444)
!4462 = !DILocation(line: 2939, column: 11, scope: !4444)
!4463 = !DILocation(line: 2939, column: 20, scope: !4444)
!4464 = !DILocation(line: 2940, column: 11, scope: !4444)
!4465 = !DILocation(line: 2940, column: 20, scope: !4444)
!4466 = !DILocation(line: 2941, column: 15, scope: !4444)
!4467 = !DILocation(line: 2941, column: 27, scope: !4444)
!4468 = !DILocation(line: 2941, column: 32, scope: !4444)
!4469 = !DILocation(line: 2941, column: 36, scope: !4444)
!4470 = !DILocation(line: 2941, column: 30, scope: !4444)
!4471 = !DILocation(line: 2941, column: 44, scope: !4444)
!4472 = !DILocation(line: 2941, column: 49, scope: !4444)
!4473 = !DILocation(line: 2941, column: 13, scope: !4444)
!4474 = !DILocation(line: 2942, column: 13, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4444, file: !1, line: 2942, column: 6)
!4476 = !DILocation(line: 2942, column: 11, scope: !4475)
!4477 = !DILocation(line: 2942, column: 18, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4475, file: !1, line: 2942, column: 6)
!4479 = !DILocation(line: 2942, column: 22, scope: !4478)
!4480 = !DILocation(line: 2942, column: 26, scope: !4478)
!4481 = !DILocation(line: 2942, column: 20, scope: !4478)
!4482 = !DILocation(line: 2942, column: 6, scope: !4475)
!4483 = !DILocation(line: 2943, column: 18, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4478, file: !1, line: 2942, column: 46)
!4485 = !DILocation(line: 2943, column: 29, scope: !4484)
!4486 = !DILocation(line: 2943, column: 33, scope: !4484)
!4487 = !DILocation(line: 2943, column: 16, scope: !4484)
!4488 = !DILocation(line: 2944, column: 11, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4484, file: !1, line: 2944, column: 11)
!4490 = !DILocation(line: 2944, column: 23, scope: !4489)
!4491 = !DILocation(line: 2944, column: 20, scope: !4489)
!4492 = !DILocation(line: 2944, column: 11, scope: !4484)
!4493 = !DILocation(line: 2947, column: 8, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4489, file: !1, line: 2944, column: 31)
!4495 = !DILocation(line: 2949, column: 24, scope: !4484)
!4496 = !DILocation(line: 2949, column: 12, scope: !4484)
!4497 = !DILocation(line: 2949, column: 21, scope: !4484)
!4498 = !DILocation(line: 2950, column: 24, scope: !4484)
!4499 = !DILocation(line: 2950, column: 12, scope: !4484)
!4500 = !DILocation(line: 2950, column: 21, scope: !4484)
!4501 = !DILocation(line: 2951, column: 12, scope: !4484)
!4502 = !DILocation(line: 2951, column: 20, scope: !4484)
!4503 = !DILocation(line: 2952, column: 16, scope: !4484)
!4504 = !DILocation(line: 2952, column: 14, scope: !4484)
!4505 = !DILocation(line: 2953, column: 6, scope: !4484)
!4506 = !DILocation(line: 2942, column: 36, scope: !4478)
!4507 = !DILocation(line: 2942, column: 42, scope: !4478)
!4508 = !DILocation(line: 2942, column: 6, scope: !4478)
!4509 = distinct !{!4509, !4482, !4510}
!4510 = !DILocation(line: 2953, column: 6, scope: !4475)
!4511 = !DILocation(line: 2954, column: 26, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4444, file: !1, line: 2954, column: 10)
!4513 = !DILocation(line: 2954, column: 37, scope: !4512)
!4514 = !DILocation(line: 2954, column: 10, scope: !4512)
!4515 = !DILocation(line: 2954, column: 10, scope: !4444)
!4516 = !DILocation(line: 2963, column: 12, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4512, file: !1, line: 2954, column: 45)
!4518 = !DILocation(line: 2963, column: 18, scope: !4517)
!4519 = !DILocation(line: 2963, column: 26, scope: !4517)
!4520 = !DILocation(line: 2963, column: 30, scope: !4517)
!4521 = !DILocation(line: 2963, column: 24, scope: !4517)
!4522 = !DILocation(line: 2963, column: 10, scope: !4517)
!4523 = !DILocation(line: 2965, column: 18, scope: !4517)
!4524 = !DILocation(line: 2965, column: 29, scope: !4517)
!4525 = !DILocation(line: 2965, column: 33, scope: !4517)
!4526 = !DILocation(line: 2965, column: 16, scope: !4517)
!4527 = !DILocation(line: 2969, column: 19, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4517, file: !1, line: 2969, column: 7)
!4529 = !DILocation(line: 2969, column: 12, scope: !4528)
!4530 = !DILocation(line: 2969, column: 24, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4528, file: !1, line: 2969, column: 7)
!4532 = !DILocation(line: 2969, column: 33, scope: !4531)
!4533 = !DILocation(line: 2969, column: 39, scope: !4531)
!4534 = !DILocation(line: 2969, column: 44, scope: !4531)
!4535 = !DILocation(line: 2969, column: 54, scope: !4531)
!4536 = !DILocation(line: 2969, column: 31, scope: !4531)
!4537 = !DILocation(line: 2969, column: 7, scope: !4528)
!4538 = !DILocalVariable(name: "target_poly", scope: !4539, file: !1, line: 2970, type: !1792)
!4539 = distinct !DILexicalBlock(scope: !4531, file: !1, line: 2969, column: 71)
!4540 = !DILocation(line: 2970, column: 15, scope: !4539)
!4541 = !DILocation(line: 2970, column: 29, scope: !4539)
!4542 = !DILocation(line: 2970, column: 35, scope: !4539)
!4543 = !DILocation(line: 2970, column: 45, scope: !4539)
!4544 = !DILocation(line: 2970, column: 51, scope: !4539)
!4545 = !DILocation(line: 2970, column: 56, scope: !4539)
!4546 = !DILocation(line: 2970, column: 66, scope: !4539)
!4547 = !DILocation(line: 2970, column: 76, scope: !4539)
!4548 = !DILocation(line: 2970, column: 74, scope: !4539)
!4549 = !DILocation(line: 2970, column: 43, scope: !4539)
!4550 = !DILocation(line: 2970, column: 41, scope: !4539)
!4551 = !DILocation(line: 2972, column: 30, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4539, file: !1, line: 2972, column: 12)
!4553 = !DILocation(line: 2972, column: 36, scope: !4552)
!4554 = !DILocation(line: 2972, column: 43, scope: !4552)
!4555 = !DILocation(line: 2972, column: 47, scope: !4552)
!4556 = !DILocation(line: 2972, column: 60, scope: !4552)
!4557 = !DILocation(line: 2972, column: 12, scope: !4552)
!4558 = !DILocation(line: 2972, column: 76, scope: !4552)
!4559 = !DILocation(line: 2973, column: 30, scope: !4552)
!4560 = !DILocation(line: 2973, column: 36, scope: !4552)
!4561 = !DILocation(line: 2973, column: 43, scope: !4552)
!4562 = !DILocation(line: 2973, column: 47, scope: !4552)
!4563 = !DILocation(line: 2973, column: 60, scope: !4552)
!4564 = !DILocation(line: 2973, column: 12, scope: !4552)
!4565 = !DILocation(line: 2972, column: 12, scope: !4539)
!4566 = !DILocation(line: 2975, column: 15, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4552, file: !1, line: 2974, column: 8)
!4568 = !DILocation(line: 2976, column: 9, scope: !4567)
!4569 = !DILocation(line: 2978, column: 7, scope: !4539)
!4570 = !DILocation(line: 2969, column: 67, scope: !4531)
!4571 = !DILocation(line: 2969, column: 7, scope: !4531)
!4572 = distinct !{!4572, !4537, !4573}
!4573 = !DILocation(line: 2978, column: 7, scope: !4528)
!4574 = !DILocation(line: 2979, column: 11, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4517, file: !1, line: 2979, column: 11)
!4576 = !DILocation(line: 2979, column: 11, scope: !4517)
!4577 = !DILocation(line: 2982, column: 8, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4575, file: !1, line: 2979, column: 18)
!4579 = !DILocation(line: 2984, column: 6, scope: !4517)
!4580 = !DILocation(line: 2985, column: 5, scope: !4444)
!4581 = !DILocation(line: 2986, column: 4, scope: !4434)
!4582 = !DILocation(line: 2994, column: 8, scope: !4393)
!4583 = !DILocation(line: 2994, column: 14, scope: !4393)
!4584 = !DILocation(line: 2994, column: 22, scope: !4393)
!4585 = !DILocation(line: 2994, column: 26, scope: !4393)
!4586 = !DILocation(line: 2994, column: 20, scope: !4393)
!4587 = !DILocation(line: 2994, column: 6, scope: !4393)
!4588 = !DILocation(line: 2996, column: 5, scope: !4393)
!4589 = !DILocation(line: 2997, column: 10, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4393, file: !1, line: 2997, column: 3)
!4591 = !DILocation(line: 2997, column: 8, scope: !4590)
!4592 = !DILocation(line: 2997, column: 15, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4590, file: !1, line: 2997, column: 3)
!4594 = !DILocation(line: 2997, column: 19, scope: !4593)
!4595 = !DILocation(line: 2997, column: 23, scope: !4593)
!4596 = !DILocation(line: 2997, column: 17, scope: !4593)
!4597 = !DILocation(line: 2997, column: 3, scope: !4590)
!4598 = !DILocalVariable(name: "v1", scope: !4599, file: !1, line: 2998, type: !5)
!4599 = distinct !DILexicalBlock(scope: !4593, file: !1, line: 2997, column: 43)
!4600 = !DILocation(line: 2998, column: 17, scope: !4599)
!4601 = !DILocalVariable(name: "v2", scope: !4599, file: !1, line: 2998, type: !5)
!4602 = !DILocation(line: 2998, column: 21, scope: !4599)
!4603 = !DILocation(line: 3000, column: 10, scope: !4599)
!4604 = !DILocation(line: 3000, column: 16, scope: !4599)
!4605 = !DILocation(line: 3000, column: 24, scope: !4599)
!4606 = !DILocation(line: 3000, column: 28, scope: !4599)
!4607 = !DILocation(line: 3000, column: 22, scope: !4599)
!4608 = !DILocation(line: 3000, column: 8, scope: !4599)
!4609 = !DILocation(line: 3001, column: 10, scope: !4599)
!4610 = !DILocation(line: 3001, column: 21, scope: !4599)
!4611 = !DILocation(line: 3001, column: 26, scope: !4599)
!4612 = !DILocation(line: 3001, column: 30, scope: !4599)
!4613 = !DILocation(line: 3001, column: 9, scope: !4599)
!4614 = !DILocation(line: 3001, column: 39, scope: !4599)
!4615 = !DILocation(line: 3001, column: 50, scope: !4599)
!4616 = !DILocation(line: 3001, column: 55, scope: !4599)
!4617 = !DILocation(line: 3001, column: 61, scope: !4599)
!4618 = !DILocation(line: 3001, column: 66, scope: !4599)
!4619 = !DILocation(line: 3001, column: 7, scope: !4599)
!4620 = !DILocation(line: 3002, column: 10, scope: !4599)
!4621 = !DILocation(line: 3002, column: 21, scope: !4599)
!4622 = !DILocation(line: 3002, column: 26, scope: !4599)
!4623 = !DILocation(line: 3002, column: 30, scope: !4599)
!4624 = !DILocation(line: 3002, column: 9, scope: !4599)
!4625 = !DILocation(line: 3002, column: 39, scope: !4599)
!4626 = !DILocation(line: 3002, column: 50, scope: !4599)
!4627 = !DILocation(line: 3002, column: 55, scope: !4599)
!4628 = !DILocation(line: 3002, column: 61, scope: !4599)
!4629 = !DILocation(line: 3002, column: 66, scope: !4599)
!4630 = !DILocation(line: 3002, column: 7, scope: !4599)
!4631 = !DILocation(line: 3003, column: 8, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4599, file: !1, line: 3003, column: 8)
!4633 = !DILocation(line: 3003, column: 8, scope: !4599)
!4634 = !DILocation(line: 3007, column: 5, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4632, file: !1, line: 3003, column: 26)
!4636 = !DILocation(line: 3008, column: 5, scope: !4635)
!4637 = !DILocation(line: 3009, column: 6, scope: !4635)
!4638 = !DILocation(line: 3010, column: 4, scope: !4635)
!4639 = !DILocation(line: 3011, column: 3, scope: !4599)
!4640 = !DILocation(line: 2997, column: 33, scope: !4593)
!4641 = !DILocation(line: 2997, column: 39, scope: !4593)
!4642 = !DILocation(line: 2997, column: 3, scope: !4593)
!4643 = distinct !{!4643, !4597, !4644}
!4644 = !DILocation(line: 3011, column: 3, scope: !4590)
!4645 = !DILocation(line: 3013, column: 7, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4393, file: !1, line: 3013, column: 7)
!4647 = !DILocation(line: 3013, column: 7, scope: !4393)
!4648 = !DILocation(line: 3014, column: 4, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4646, file: !1, line: 3013, column: 25)
!4650 = !DILocation(line: 3016, column: 12, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4646, file: !1, line: 3016, column: 12)
!4652 = !DILocation(line: 3016, column: 12, scope: !4646)
!4653 = !DILocalVariable(name: "_n", scope: !4654, file: !1, line: 3017, type: !4202)
!4654 = distinct !DILexicalBlock(scope: !4655, file: !1, line: 3017, column: 4)
!4655 = distinct !DILexicalBlock(scope: !4651, file: !1, line: 3016, column: 29)
!4656 = !DILocation(line: 3017, column: 4, scope: !4654)
!4657 = !DILocalVariable(name: "_n", scope: !4658, file: !1, line: 3018, type: !4202)
!4658 = distinct !DILexicalBlock(scope: !4655, file: !1, line: 3018, column: 4)
!4659 = !DILocation(line: 3018, column: 4, scope: !4658)
!4660 = !DILocation(line: 3019, column: 4, scope: !4655)
!4661 = !DILocation(line: 3023, column: 12, scope: !4393)
!4662 = !DILocation(line: 3023, column: 10, scope: !4393)
!4663 = !DILocation(line: 3024, column: 4, scope: !4393)
!4664 = !DILocation(line: 3024, column: 14, scope: !4393)
!4665 = !DILocation(line: 3024, column: 13, scope: !4393)
!4666 = !DILocation(line: 3025, column: 21, scope: !4393)
!4667 = !DILocation(line: 3025, column: 3, scope: !4393)
!4668 = !DILocation(line: 3025, column: 11, scope: !4393)
!4669 = !DILocation(line: 3025, column: 19, scope: !4393)
!4670 = !DILocation(line: 3027, column: 23, scope: !4393)
!4671 = !DILocation(line: 3027, column: 43, scope: !4393)
!4672 = !DILocation(line: 3027, column: 41, scope: !4393)
!4673 = !DILocation(line: 3027, column: 3, scope: !4393)
!4674 = !DILocation(line: 3027, column: 11, scope: !4393)
!4675 = !DILocation(line: 3027, column: 21, scope: !4393)
!4676 = !DILocation(line: 3029, column: 3, scope: !4393)
!4677 = !DILocation(line: 3030, column: 2, scope: !4393)
!4678 = !DILocation(line: 2907, column: 28, scope: !4388)
!4679 = !DILocation(line: 2907, column: 34, scope: !4388)
!4680 = !DILocation(line: 2907, column: 2, scope: !4388)
!4681 = distinct !{!4681, !4391, !4682}
!4682 = !DILocation(line: 3030, column: 2, scope: !4385)
!4683 = !DILocation(line: 3033, column: 6, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !3979, file: !1, line: 3033, column: 6)
!4685 = !DILocation(line: 3033, column: 6, scope: !3979)
!4686 = !DILocation(line: 3036, column: 17, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4684, file: !1, line: 3033, column: 17)
!4688 = !DILocation(line: 3036, column: 3, scope: !4687)
!4689 = !DILocation(line: 3037, column: 3, scope: !4687)
!4690 = !DILocation(line: 3037, column: 13, scope: !4687)
!4691 = !DILocation(line: 3038, column: 2, scope: !4687)
!4692 = !DILocation(line: 3041, column: 62, scope: !3979)
!4693 = !DILocation(line: 3041, column: 47, scope: !3979)
!4694 = !DILocation(line: 3041, column: 68, scope: !3979)
!4695 = !DILocation(line: 3041, column: 87, scope: !3979)
!4696 = !DILocation(line: 3041, column: 109, scope: !3979)
!4697 = !DILocation(line: 3041, column: 128, scope: !3979)
!4698 = !DILocation(line: 3041, column: 28, scope: !3979)
!4699 = !DILocation(line: 3041, column: 10, scope: !3979)
!4700 = !DILocation(line: 3041, column: 8, scope: !3979)
!4701 = !DILocation(line: 3044, column: 8, scope: !3979)
!4702 = !DILocation(line: 3044, column: 6, scope: !3979)
!4703 = !DILocation(line: 3045, column: 9, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !3979, file: !1, line: 3045, column: 2)
!4705 = !DILocation(line: 3045, column: 7, scope: !4704)
!4706 = !DILocation(line: 3045, column: 14, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4704, file: !1, line: 3045, column: 2)
!4708 = !DILocation(line: 3045, column: 18, scope: !4707)
!4709 = !DILocation(line: 3045, column: 25, scope: !4707)
!4710 = !DILocation(line: 3045, column: 28, scope: !4707)
!4711 = !DILocation(line: 3045, column: 16, scope: !4707)
!4712 = !DILocation(line: 3045, column: 2, scope: !4704)
!4713 = !DILocation(line: 3046, column: 7, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !1, line: 3046, column: 7)
!4715 = distinct !DILexicalBlock(scope: !4707, file: !1, line: 3045, column: 53)
!4716 = !DILocation(line: 3046, column: 12, scope: !4714)
!4717 = !DILocation(line: 3046, column: 17, scope: !4714)
!4718 = !DILocation(line: 3046, column: 21, scope: !4714)
!4719 = !DILocation(line: 3046, column: 7, scope: !4715)
!4720 = !DILocation(line: 3047, column: 14, scope: !4714)
!4721 = !DILocation(line: 3047, column: 19, scope: !4714)
!4722 = !DILocation(line: 3047, column: 24, scope: !4714)
!4723 = !DILocation(line: 3047, column: 4, scope: !4714)
!4724 = !DILocation(line: 3047, column: 9, scope: !4714)
!4725 = !DILocation(line: 3047, column: 12, scope: !4714)
!4726 = !DILocation(line: 3048, column: 7, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4715, file: !1, line: 3048, column: 7)
!4728 = !DILocation(line: 3048, column: 12, scope: !4727)
!4729 = !DILocation(line: 3048, column: 17, scope: !4727)
!4730 = !DILocation(line: 3048, column: 21, scope: !4727)
!4731 = !DILocation(line: 3048, column: 7, scope: !4715)
!4732 = !DILocation(line: 3049, column: 14, scope: !4727)
!4733 = !DILocation(line: 3049, column: 19, scope: !4727)
!4734 = !DILocation(line: 3049, column: 24, scope: !4727)
!4735 = !DILocation(line: 3049, column: 4, scope: !4727)
!4736 = !DILocation(line: 3049, column: 9, scope: !4727)
!4737 = !DILocation(line: 3049, column: 12, scope: !4727)
!4738 = !DILocation(line: 3051, column: 25, scope: !4715)
!4739 = !DILocation(line: 3051, column: 29, scope: !4715)
!4740 = !DILocation(line: 3051, column: 40, scope: !4715)
!4741 = !DILocation(line: 3051, column: 47, scope: !4715)
!4742 = !DILocation(line: 3051, column: 50, scope: !4715)
!4743 = !DILocation(line: 3051, column: 60, scope: !4715)
!4744 = !DILocation(line: 3051, column: 65, scope: !4715)
!4745 = !DILocation(line: 3051, column: 69, scope: !4715)
!4746 = !DILocation(line: 3051, column: 3, scope: !4715)
!4747 = !DILocation(line: 3052, column: 2, scope: !4715)
!4748 = !DILocation(line: 3045, column: 42, scope: !4707)
!4749 = !DILocation(line: 3045, column: 49, scope: !4707)
!4750 = !DILocation(line: 3045, column: 2, scope: !4707)
!4751 = distinct !{!4751, !4712, !4752}
!4752 = !DILocation(line: 3052, column: 2, scope: !4704)
!4753 = !DILocation(line: 3055, column: 7, scope: !3979)
!4754 = !DILocation(line: 3055, column: 5, scope: !3979)
!4755 = !DILocation(line: 3056, column: 9, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !3979, file: !1, line: 3056, column: 2)
!4757 = !DILocation(line: 3056, column: 7, scope: !4756)
!4758 = !DILocation(line: 3056, column: 14, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4756, file: !1, line: 3056, column: 2)
!4760 = !DILocation(line: 3056, column: 18, scope: !4759)
!4761 = !DILocation(line: 3056, column: 25, scope: !4759)
!4762 = !DILocation(line: 3056, column: 28, scope: !4759)
!4763 = !DILocation(line: 3056, column: 16, scope: !4759)
!4764 = !DILocation(line: 3056, column: 2, scope: !4756)
!4765 = !DILocation(line: 3057, column: 7, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4767, file: !1, line: 3057, column: 7)
!4767 = distinct !DILexicalBlock(scope: !4759, file: !1, line: 3056, column: 52)
!4768 = !DILocation(line: 3057, column: 12, scope: !4766)
!4769 = !DILocation(line: 3057, column: 16, scope: !4766)
!4770 = !DILocation(line: 3057, column: 19, scope: !4766)
!4771 = !DILocation(line: 3057, column: 7, scope: !4767)
!4772 = !DILocation(line: 3058, column: 12, scope: !4766)
!4773 = !DILocation(line: 3058, column: 17, scope: !4766)
!4774 = !DILocation(line: 3058, column: 21, scope: !4766)
!4775 = !DILocation(line: 3058, column: 4, scope: !4766)
!4776 = !DILocation(line: 3058, column: 8, scope: !4766)
!4777 = !DILocation(line: 3058, column: 10, scope: !4766)
!4778 = !DILocation(line: 3059, column: 7, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4767, file: !1, line: 3059, column: 7)
!4780 = !DILocation(line: 3059, column: 12, scope: !4779)
!4781 = !DILocation(line: 3059, column: 16, scope: !4779)
!4782 = !DILocation(line: 3059, column: 19, scope: !4779)
!4783 = !DILocation(line: 3059, column: 7, scope: !4767)
!4784 = !DILocation(line: 3060, column: 12, scope: !4779)
!4785 = !DILocation(line: 3060, column: 17, scope: !4779)
!4786 = !DILocation(line: 3060, column: 21, scope: !4779)
!4787 = !DILocation(line: 3060, column: 4, scope: !4779)
!4788 = !DILocation(line: 3060, column: 8, scope: !4779)
!4789 = !DILocation(line: 3060, column: 10, scope: !4779)
!4790 = !DILocation(line: 3062, column: 25, scope: !4767)
!4791 = !DILocation(line: 3062, column: 29, scope: !4767)
!4792 = !DILocation(line: 3062, column: 40, scope: !4767)
!4793 = !DILocation(line: 3062, column: 47, scope: !4767)
!4794 = !DILocation(line: 3062, column: 50, scope: !4767)
!4795 = !DILocation(line: 3062, column: 60, scope: !4767)
!4796 = !DILocation(line: 3062, column: 65, scope: !4767)
!4797 = !DILocation(line: 3062, column: 69, scope: !4767)
!4798 = !DILocation(line: 3062, column: 3, scope: !4767)
!4799 = !DILocation(line: 3063, column: 2, scope: !4767)
!4800 = !DILocation(line: 3056, column: 42, scope: !4759)
!4801 = !DILocation(line: 3056, column: 48, scope: !4759)
!4802 = !DILocation(line: 3056, column: 2, scope: !4759)
!4803 = distinct !{!4803, !4764, !4804}
!4804 = !DILocation(line: 3063, column: 2, scope: !4756)
!4805 = !DILocation(line: 3066, column: 7, scope: !3979)
!4806 = !DILocation(line: 3066, column: 5, scope: !3979)
!4807 = !DILocation(line: 3067, column: 9, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !3979, file: !1, line: 3067, column: 2)
!4809 = !DILocation(line: 3067, column: 7, scope: !4808)
!4810 = !DILocation(line: 3067, column: 14, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4808, file: !1, line: 3067, column: 2)
!4812 = !DILocation(line: 3067, column: 18, scope: !4811)
!4813 = !DILocation(line: 3067, column: 25, scope: !4811)
!4814 = !DILocation(line: 3067, column: 28, scope: !4811)
!4815 = !DILocation(line: 3067, column: 16, scope: !4811)
!4816 = !DILocation(line: 3067, column: 2, scope: !4808)
!4817 = !DILocation(line: 3068, column: 25, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4811, file: !1, line: 3067, column: 52)
!4819 = !DILocation(line: 3068, column: 29, scope: !4818)
!4820 = !DILocation(line: 3068, column: 40, scope: !4818)
!4821 = !DILocation(line: 3068, column: 47, scope: !4818)
!4822 = !DILocation(line: 3068, column: 50, scope: !4818)
!4823 = !DILocation(line: 3068, column: 60, scope: !4818)
!4824 = !DILocation(line: 3068, column: 65, scope: !4818)
!4825 = !DILocation(line: 3068, column: 69, scope: !4818)
!4826 = !DILocation(line: 3068, column: 3, scope: !4818)
!4827 = !DILocation(line: 3069, column: 2, scope: !4818)
!4828 = !DILocation(line: 3067, column: 42, scope: !4811)
!4829 = !DILocation(line: 3067, column: 48, scope: !4811)
!4830 = !DILocation(line: 3067, column: 2, scope: !4811)
!4831 = distinct !{!4831, !4816, !4832}
!4832 = !DILocation(line: 3069, column: 2, scope: !4808)
!4833 = !DILocation(line: 3072, column: 7, scope: !3979)
!4834 = !DILocation(line: 3072, column: 5, scope: !3979)
!4835 = !DILocation(line: 3073, column: 9, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !3979, file: !1, line: 3073, column: 2)
!4837 = !DILocation(line: 3073, column: 7, scope: !4836)
!4838 = !DILocation(line: 3073, column: 14, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4836, file: !1, line: 3073, column: 2)
!4840 = !DILocation(line: 3073, column: 18, scope: !4839)
!4841 = !DILocation(line: 3073, column: 25, scope: !4839)
!4842 = !DILocation(line: 3073, column: 28, scope: !4839)
!4843 = !DILocation(line: 3073, column: 16, scope: !4839)
!4844 = !DILocation(line: 3073, column: 2, scope: !4836)
!4845 = !DILocation(line: 3074, column: 25, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4839, file: !1, line: 3073, column: 52)
!4847 = !DILocation(line: 3074, column: 29, scope: !4846)
!4848 = !DILocation(line: 3074, column: 40, scope: !4846)
!4849 = !DILocation(line: 3074, column: 47, scope: !4846)
!4850 = !DILocation(line: 3074, column: 50, scope: !4846)
!4851 = !DILocation(line: 3074, column: 60, scope: !4846)
!4852 = !DILocation(line: 3074, column: 65, scope: !4846)
!4853 = !DILocation(line: 3074, column: 69, scope: !4846)
!4854 = !DILocation(line: 3074, column: 3, scope: !4846)
!4855 = !DILocation(line: 3075, column: 2, scope: !4846)
!4856 = !DILocation(line: 3073, column: 42, scope: !4839)
!4857 = !DILocation(line: 3073, column: 48, scope: !4839)
!4858 = !DILocation(line: 3073, column: 2, scope: !4839)
!4859 = distinct !{!4859, !4844, !4860}
!4860 = !DILocation(line: 3075, column: 2, scope: !4836)
!4861 = !DILocation(line: 3078, column: 9, scope: !3979)
!4862 = !DILocation(line: 3078, column: 16, scope: !3979)
!4863 = !DILocation(line: 3078, column: 2, scope: !3979)
!4864 = !DILocation(line: 3078, column: 23, scope: !3979)
!4865 = !DILocation(line: 3078, column: 46, scope: !3979)
!4866 = !DILocation(line: 3078, column: 44, scope: !3979)
!4867 = !DILocation(line: 3079, column: 9, scope: !3979)
!4868 = !DILocation(line: 3079, column: 16, scope: !3979)
!4869 = !DILocation(line: 3079, column: 2, scope: !3979)
!4870 = !DILocation(line: 3079, column: 23, scope: !3979)
!4871 = !DILocation(line: 3079, column: 46, scope: !3979)
!4872 = !DILocation(line: 3079, column: 44, scope: !3979)
!4873 = !DILocation(line: 3080, column: 9, scope: !3979)
!4874 = !DILocation(line: 3080, column: 16, scope: !3979)
!4875 = !DILocation(line: 3080, column: 2, scope: !3979)
!4876 = !DILocation(line: 3080, column: 23, scope: !3979)
!4877 = !DILocation(line: 3080, column: 46, scope: !3979)
!4878 = !DILocation(line: 3080, column: 44, scope: !3979)
!4879 = !DILocation(line: 3081, column: 9, scope: !3979)
!4880 = !DILocation(line: 3081, column: 16, scope: !3979)
!4881 = !DILocation(line: 3081, column: 2, scope: !3979)
!4882 = !DILocation(line: 3081, column: 23, scope: !3979)
!4883 = !DILocation(line: 3081, column: 46, scope: !3979)
!4884 = !DILocation(line: 3081, column: 44, scope: !3979)
!4885 = !DILocation(line: 3083, column: 2, scope: !3979)
!4886 = !DILocation(line: 3083, column: 12, scope: !3979)
!4887 = !DILocation(line: 3084, column: 2, scope: !3979)
!4888 = !DILocation(line: 3084, column: 12, scope: !3979)
!4889 = !DILocation(line: 3085, column: 2, scope: !3979)
!4890 = !DILocation(line: 3085, column: 12, scope: !3979)
!4891 = !DILocation(line: 3086, column: 2, scope: !3979)
!4892 = !DILocation(line: 3086, column: 12, scope: !3979)
!4893 = !DILocation(line: 3088, column: 2, scope: !3979)
!4894 = !DILocation(line: 3088, column: 12, scope: !3979)
!4895 = !DILocation(line: 3089, column: 2, scope: !3979)
!4896 = !DILocation(line: 3089, column: 12, scope: !3979)
!4897 = !DILocation(line: 3094, column: 2, scope: !3979)
!4898 = !DILocation(line: 3094, column: 12, scope: !3979)
!4899 = !DILocation(line: 3095, column: 2, scope: !3979)
!4900 = !DILocation(line: 3095, column: 12, scope: !3979)
!4901 = !DILocation(line: 3096, column: 2, scope: !3979)
!4902 = !DILocation(line: 3096, column: 12, scope: !3979)
!4903 = !DILocation(line: 3097, column: 2, scope: !3979)
!4904 = !DILocation(line: 3097, column: 12, scope: !3979)
!4905 = !DILocation(line: 3099, column: 20, scope: !3979)
!4906 = !DILocation(line: 3099, column: 2, scope: !3979)
!4907 = !DILocation(line: 3102, column: 2, scope: !3979)
!4908 = !DILocation(line: 3102, column: 6, scope: !3979)
!4909 = !DILocation(line: 3102, column: 16, scope: !3979)
!4910 = !DILocation(line: 3103, column: 2, scope: !3979)
!4911 = !DILocation(line: 3103, column: 6, scope: !3979)
!4912 = !DILocation(line: 3103, column: 14, scope: !3979)
!4913 = !DILocation(line: 3105, column: 24, scope: !3979)
!4914 = !DILocation(line: 3105, column: 9, scope: !3979)
!4915 = !DILocation(line: 3105, column: 2, scope: !3979)
!4916 = distinct !DISubprogram(name: "poly_gset_hash_fn", scope: !1, file: !1, line: 2713, type: !4917, scopeLine: 2714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!4917 = !DISubroutineType(types: !4918)
!4918 = !{!5, !4919}
!4919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4920, size: 64)
!4920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!4921 = !DILocalVariable(name: "key", arg: 1, scope: !4916, file: !1, line: 2713, type: !4919)
!4922 = !DILocation(line: 2713, column: 51, scope: !4916)
!4923 = !DILocalVariable(name: "pk", scope: !4916, file: !1, line: 2715, type: !4924)
!4924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4925, size: 64)
!4925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4104)
!4926 = !DILocation(line: 2715, column: 17, scope: !4916)
!4927 = !DILocation(line: 2715, column: 22, scope: !4916)
!4928 = !DILocation(line: 2716, column: 9, scope: !4916)
!4929 = !DILocation(line: 2716, column: 13, scope: !4916)
!4930 = !DILocation(line: 2716, column: 2, scope: !4916)
!4931 = distinct !DISubprogram(name: "poly_gset_compare_fn", scope: !1, file: !1, line: 2719, type: !4932, scopeLine: 2720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!4932 = !DISubroutineType(types: !4933)
!4933 = !{!309, !4919, !4919}
!4934 = !DILocalVariable(name: "k1", arg: 1, scope: !4931, file: !1, line: 2719, type: !4919)
!4935 = !DILocation(line: 2719, column: 46, scope: !4931)
!4936 = !DILocalVariable(name: "k2", arg: 2, scope: !4931, file: !1, line: 2719, type: !4919)
!4937 = !DILocation(line: 2719, column: 62, scope: !4931)
!4938 = !DILocalVariable(name: "pk1", scope: !4931, file: !1, line: 2721, type: !4924)
!4939 = !DILocation(line: 2721, column: 17, scope: !4931)
!4940 = !DILocation(line: 2721, column: 23, scope: !4931)
!4941 = !DILocalVariable(name: "pk2", scope: !4931, file: !1, line: 2722, type: !4924)
!4942 = !DILocation(line: 2722, column: 17, scope: !4931)
!4943 = !DILocation(line: 2722, column: 23, scope: !4931)
!4944 = !DILocation(line: 2723, column: 7, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4931, file: !1, line: 2723, column: 6)
!4946 = !DILocation(line: 2723, column: 12, scope: !4945)
!4947 = !DILocation(line: 2723, column: 24, scope: !4945)
!4948 = !DILocation(line: 2723, column: 29, scope: !4945)
!4949 = !DILocation(line: 2723, column: 21, scope: !4945)
!4950 = !DILocation(line: 2723, column: 39, scope: !4945)
!4951 = !DILocation(line: 2724, column: 7, scope: !4945)
!4952 = !DILocation(line: 2724, column: 12, scope: !4945)
!4953 = !DILocation(line: 2724, column: 24, scope: !4945)
!4954 = !DILocation(line: 2724, column: 29, scope: !4945)
!4955 = !DILocation(line: 2724, column: 21, scope: !4945)
!4956 = !DILocation(line: 2724, column: 39, scope: !4945)
!4957 = !DILocation(line: 2725, column: 7, scope: !4945)
!4958 = !DILocation(line: 2725, column: 12, scope: !4945)
!4959 = !DILocation(line: 2725, column: 24, scope: !4945)
!4960 = !DILocation(line: 2725, column: 29, scope: !4945)
!4961 = !DILocation(line: 2725, column: 21, scope: !4945)
!4962 = !DILocation(line: 2723, column: 6, scope: !4931)
!4963 = !DILocation(line: 2728, column: 3, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4945, file: !1, line: 2726, column: 2)
!4965 = !DILocation(line: 2731, column: 3, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4945, file: !1, line: 2730, column: 7)
!4967 = !DILocation(line: 2733, column: 1, scope: !4931)
!4968 = distinct !DISubprogram(name: "cddm_poly_compare", scope: !1, file: !1, line: 2579, type: !4969, scopeLine: 2580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!4969 = !DISubroutineType(types: !4970)
!4970 = !{!219, !1789, !1792, !1792, !3982, !2682}
!4971 = !DILocalVariable(name: "mloop_array", arg: 1, scope: !4968, file: !1, line: 2579, type: !1789)
!4972 = !DILocation(line: 2579, column: 37, scope: !4968)
!4973 = !DILocalVariable(name: "mpoly_source", arg: 2, scope: !4968, file: !1, line: 2579, type: !1792)
!4974 = !DILocation(line: 2579, column: 57, scope: !4968)
!4975 = !DILocalVariable(name: "mpoly_target", arg: 3, scope: !4968, file: !1, line: 2579, type: !1792)
!4976 = !DILocation(line: 2579, column: 78, scope: !4968)
!4977 = !DILocalVariable(name: "vtargetmap", arg: 4, scope: !4968, file: !1, line: 2579, type: !3982)
!4978 = !DILocation(line: 2579, column: 103, scope: !4968)
!4979 = !DILocalVariable(name: "direct_reverse", arg: 5, scope: !4968, file: !1, line: 2579, type: !2682)
!4980 = !DILocation(line: 2579, column: 125, scope: !4968)
!4981 = !DILocalVariable(name: "vert_source", scope: !4968, file: !1, line: 2581, type: !219)
!4982 = !DILocation(line: 2581, column: 6, scope: !4968)
!4983 = !DILocalVariable(name: "first_vert_source", scope: !4968, file: !1, line: 2581, type: !219)
!4984 = !DILocation(line: 2581, column: 19, scope: !4968)
!4985 = !DILocalVariable(name: "vert_target", scope: !4968, file: !1, line: 2581, type: !219)
!4986 = !DILocation(line: 2581, column: 38, scope: !4968)
!4987 = !DILocalVariable(name: "i_loop_source", scope: !4968, file: !1, line: 2582, type: !219)
!4988 = !DILocation(line: 2582, column: 6, scope: !4968)
!4989 = !DILocalVariable(name: "i_loop_target", scope: !4968, file: !1, line: 2583, type: !219)
!4990 = !DILocation(line: 2583, column: 6, scope: !4968)
!4991 = !DILocalVariable(name: "i_loop_target_start", scope: !4968, file: !1, line: 2583, type: !219)
!4992 = !DILocation(line: 2583, column: 21, scope: !4968)
!4993 = !DILocalVariable(name: "i_loop_target_offset", scope: !4968, file: !1, line: 2583, type: !219)
!4994 = !DILocation(line: 2583, column: 42, scope: !4968)
!4995 = !DILocalVariable(name: "i_loop_target_adjusted", scope: !4968, file: !1, line: 2583, type: !219)
!4996 = !DILocation(line: 2583, column: 64, scope: !4968)
!4997 = !DILocalVariable(name: "compare_completed", scope: !4968, file: !1, line: 2584, type: !309)
!4998 = !DILocation(line: 2584, column: 7, scope: !4968)
!4999 = !DILocalVariable(name: "same_loops", scope: !4968, file: !1, line: 2585, type: !309)
!5000 = !DILocation(line: 2585, column: 7, scope: !4968)
!5001 = !DILocalVariable(name: "mloop_source", scope: !4968, file: !1, line: 2587, type: !1789)
!5002 = !DILocation(line: 2587, column: 9, scope: !4968)
!5003 = !DILocalVariable(name: "mloop_target", scope: !4968, file: !1, line: 2587, type: !1789)
!5004 = !DILocation(line: 2587, column: 24, scope: !4968)
!5005 = !DILocation(line: 2591, column: 16, scope: !4968)
!5006 = !DILocation(line: 2592, column: 17, scope: !4968)
!5007 = !DILocation(line: 2592, column: 31, scope: !4968)
!5008 = !DILocation(line: 2592, column: 45, scope: !4968)
!5009 = !DILocation(line: 2592, column: 29, scope: !4968)
!5010 = !DILocation(line: 2592, column: 15, scope: !4968)
!5011 = !DILocation(line: 2593, column: 16, scope: !4968)
!5012 = !DILocation(line: 2593, column: 30, scope: !4968)
!5013 = !DILocation(line: 2593, column: 14, scope: !4968)
!5014 = !DILocation(line: 2595, column: 6, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !4968, file: !1, line: 2595, column: 6)
!5016 = !DILocation(line: 2595, column: 17, scope: !5015)
!5017 = !DILocation(line: 2595, column: 30, scope: !5015)
!5018 = !DILocation(line: 2595, column: 6, scope: !4968)
!5019 = !DILocation(line: 2596, column: 17, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5015, file: !1, line: 2595, column: 37)
!5021 = !DILocation(line: 2596, column: 28, scope: !5020)
!5022 = !DILocation(line: 2596, column: 15, scope: !5020)
!5023 = !DILocation(line: 2597, column: 2, scope: !5020)
!5024 = !DILocation(line: 2604, column: 17, scope: !4968)
!5025 = !DILocation(line: 2604, column: 31, scope: !4968)
!5026 = !DILocation(line: 2604, column: 45, scope: !4968)
!5027 = !DILocation(line: 2604, column: 29, scope: !4968)
!5028 = !DILocation(line: 2604, column: 15, scope: !4968)
!5029 = !DILocation(line: 2605, column: 21, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !4968, file: !1, line: 2605, column: 2)
!5031 = !DILocation(line: 2605, column: 7, scope: !5030)
!5032 = !DILocation(line: 2605, column: 26, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5030, file: !1, line: 2605, column: 2)
!5034 = !DILocation(line: 2605, column: 42, scope: !5033)
!5035 = !DILocation(line: 2605, column: 56, scope: !5033)
!5036 = !DILocation(line: 2605, column: 40, scope: !5033)
!5037 = !DILocation(line: 2605, column: 2, scope: !5030)
!5038 = !DILocation(line: 2606, column: 7, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5040, file: !1, line: 2606, column: 7)
!5040 = distinct !DILexicalBlock(scope: !5033, file: !1, line: 2605, column: 98)
!5041 = !DILocation(line: 2606, column: 21, scope: !5039)
!5042 = !DILocation(line: 2606, column: 26, scope: !5039)
!5043 = !DILocation(line: 2606, column: 23, scope: !5039)
!5044 = !DILocation(line: 2606, column: 7, scope: !5040)
!5045 = !DILocation(line: 2607, column: 4, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5039, file: !1, line: 2606, column: 39)
!5047 = !DILocation(line: 2609, column: 2, scope: !5040)
!5048 = !DILocation(line: 2605, column: 78, scope: !5033)
!5049 = !DILocation(line: 2605, column: 94, scope: !5033)
!5050 = !DILocation(line: 2605, column: 2, scope: !5033)
!5051 = distinct !{!5051, !5037, !5052}
!5052 = !DILocation(line: 2609, column: 2, scope: !5030)
!5053 = !DILocation(line: 2612, column: 6, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !4968, file: !1, line: 2612, column: 6)
!5055 = !DILocation(line: 2612, column: 23, scope: !5054)
!5056 = !DILocation(line: 2612, column: 37, scope: !5054)
!5057 = !DILocation(line: 2612, column: 20, scope: !5054)
!5058 = !DILocation(line: 2612, column: 6, scope: !4968)
!5059 = !DILocation(line: 2613, column: 3, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5054, file: !1, line: 2612, column: 46)
!5061 = !DILocation(line: 2621, column: 24, scope: !4968)
!5062 = !DILocation(line: 2621, column: 22, scope: !4968)
!5063 = !DILocation(line: 2622, column: 23, scope: !4968)
!5064 = !DILocation(line: 2623, column: 22, scope: !4968)
!5065 = !DILocation(line: 2623, column: 20, scope: !4968)
!5066 = !DILocation(line: 2625, column: 20, scope: !4968)
!5067 = !DILocation(line: 2626, column: 13, scope: !4968)
!5068 = !DILocation(line: 2628, column: 2, scope: !4968)
!5069 = !DILocation(line: 2628, column: 10, scope: !4968)
!5070 = !DILocation(line: 2628, column: 9, scope: !4968)
!5071 = !DILocation(line: 2630, column: 17, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !4968, file: !1, line: 2628, column: 29)
!5073 = !DILocation(line: 2630, column: 31, scope: !5072)
!5074 = !DILocation(line: 2630, column: 15, scope: !5072)
!5075 = !DILocation(line: 2633, column: 3, scope: !5072)
!5076 = !DILocation(line: 2634, column: 17, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5072, file: !1, line: 2633, column: 6)
!5078 = !DILocation(line: 2636, column: 8, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5077, file: !1, line: 2636, column: 8)
!5080 = !DILocation(line: 2636, column: 25, scope: !5079)
!5081 = !DILocation(line: 2636, column: 39, scope: !5079)
!5082 = !DILocation(line: 2636, column: 22, scope: !5079)
!5083 = !DILocation(line: 2636, column: 8, scope: !5077)
!5084 = !DILocation(line: 2638, column: 9, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5086, file: !1, line: 2638, column: 9)
!5086 = distinct !DILexicalBlock(scope: !5079, file: !1, line: 2636, column: 48)
!5087 = !DILocation(line: 2638, column: 33, scope: !5085)
!5088 = !DILocation(line: 2638, column: 47, scope: !5085)
!5089 = !DILocation(line: 2638, column: 55, scope: !5085)
!5090 = !DILocation(line: 2638, column: 30, scope: !5085)
!5091 = !DILocation(line: 2638, column: 9, scope: !5086)
!5092 = !DILocation(line: 2639, column: 24, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5085, file: !1, line: 2638, column: 60)
!5094 = !DILocation(line: 2640, column: 17, scope: !5093)
!5095 = !DILocation(line: 2641, column: 6, scope: !5093)
!5096 = !DILocation(line: 2644, column: 24, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5085, file: !1, line: 2643, column: 10)
!5098 = !DILocation(line: 2645, column: 17, scope: !5097)
!5099 = !DILocation(line: 2646, column: 6, scope: !5097)
!5100 = !DILocation(line: 2650, column: 16, scope: !5077)
!5101 = !DILocation(line: 2651, column: 18, scope: !5077)
!5102 = !DILocation(line: 2651, column: 32, scope: !5077)
!5103 = !DILocation(line: 2651, column: 16, scope: !5077)
!5104 = !DILocation(line: 2653, column: 8, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5077, file: !1, line: 2653, column: 8)
!5106 = !DILocation(line: 2653, column: 19, scope: !5105)
!5107 = !DILocation(line: 2653, column: 32, scope: !5105)
!5108 = !DILocation(line: 2653, column: 8, scope: !5077)
!5109 = !DILocation(line: 2654, column: 19, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5105, file: !1, line: 2653, column: 39)
!5111 = !DILocation(line: 2654, column: 30, scope: !5110)
!5112 = !DILocation(line: 2654, column: 17, scope: !5110)
!5113 = !DILocation(line: 2655, column: 4, scope: !5110)
!5114 = !DILocation(line: 2661, column: 3, scope: !5077)
!5115 = !DILocation(line: 2661, column: 12, scope: !5072)
!5116 = !DILocation(line: 2661, column: 27, scope: !5072)
!5117 = !DILocation(line: 2661, column: 24, scope: !5072)
!5118 = distinct !{!5118, !5075, !5119}
!5119 = !DILocation(line: 2661, column: 38, scope: !5072)
!5120 = !DILocation(line: 2663, column: 7, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5072, file: !1, line: 2663, column: 7)
!5122 = !DILocation(line: 2663, column: 7, scope: !5072)
!5123 = !DILocation(line: 2664, column: 4, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5121, file: !1, line: 2663, column: 26)
!5125 = !DILocation(line: 2668, column: 23, scope: !5072)
!5126 = !DILocation(line: 2670, column: 7, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5072, file: !1, line: 2670, column: 7)
!5128 = !DILocation(line: 2670, column: 31, scope: !5127)
!5129 = !DILocation(line: 2670, column: 45, scope: !5127)
!5130 = !DILocation(line: 2670, column: 28, scope: !5127)
!5131 = !DILocation(line: 2670, column: 7, scope: !5072)
!5132 = !DILocation(line: 2673, column: 4, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5127, file: !1, line: 2670, column: 54)
!5134 = !DILocation(line: 2673, column: 11, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5136, file: !1, line: 2673, column: 4)
!5136 = distinct !DILexicalBlock(scope: !5133, file: !1, line: 2673, column: 4)
!5137 = !DILocation(line: 2673, column: 27, scope: !5135)
!5138 = !DILocation(line: 2673, column: 41, scope: !5135)
!5139 = !DILocation(line: 2673, column: 25, scope: !5135)
!5140 = !DILocation(line: 2673, column: 4, scope: !5136)
!5141 = !DILocation(line: 2674, column: 19, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5135, file: !1, line: 2673, column: 83)
!5143 = !DILocation(line: 2674, column: 30, scope: !5142)
!5144 = !DILocation(line: 2674, column: 44, scope: !5142)
!5145 = !DILocation(line: 2674, column: 17, scope: !5142)
!5146 = !DILocation(line: 2675, column: 9, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5142, file: !1, line: 2675, column: 9)
!5148 = !DILocation(line: 2675, column: 24, scope: !5147)
!5149 = !DILocation(line: 2675, column: 21, scope: !5147)
!5150 = !DILocation(line: 2675, column: 9, scope: !5142)
!5151 = !DILocation(line: 2676, column: 24, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5147, file: !1, line: 2675, column: 43)
!5153 = !DILocation(line: 2677, column: 17, scope: !5152)
!5154 = !DILocation(line: 2678, column: 6, scope: !5152)
!5155 = !DILocation(line: 2680, column: 4, scope: !5142)
!5156 = !DILocation(line: 2673, column: 63, scope: !5135)
!5157 = !DILocation(line: 2673, column: 79, scope: !5135)
!5158 = !DILocation(line: 2673, column: 4, scope: !5135)
!5159 = distinct !{!5159, !5140, !5160}
!5160 = !DILocation(line: 2680, column: 4, scope: !5136)
!5161 = !DILocation(line: 2681, column: 9, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5133, file: !1, line: 2681, column: 8)
!5163 = !DILocation(line: 2681, column: 8, scope: !5133)
!5164 = !DILocation(line: 2682, column: 16, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5162, file: !1, line: 2681, column: 28)
!5166 = !DILocation(line: 2683, column: 4, scope: !5165)
!5167 = !DILocation(line: 2684, column: 4, scope: !5133)
!5168 = !DILocation(line: 2688, column: 29, scope: !5072)
!5169 = !DILocation(line: 2688, column: 51, scope: !5072)
!5170 = !DILocation(line: 2688, column: 68, scope: !5072)
!5171 = !DILocation(line: 2688, column: 66, scope: !5072)
!5172 = !DILocation(line: 2688, column: 49, scope: !5072)
!5173 = !DILocation(line: 2688, column: 92, scope: !5072)
!5174 = !DILocation(line: 2688, column: 106, scope: !5072)
!5175 = !DILocation(line: 2688, column: 90, scope: !5072)
!5176 = !DILocation(line: 2688, column: 26, scope: !5072)
!5177 = !DILocation(line: 2689, column: 7, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5072, file: !1, line: 2689, column: 7)
!5179 = !DILocation(line: 2689, column: 30, scope: !5178)
!5180 = !DILocation(line: 2689, column: 7, scope: !5072)
!5181 = !DILocation(line: 2690, column: 30, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5178, file: !1, line: 2689, column: 35)
!5183 = !DILocation(line: 2690, column: 44, scope: !5182)
!5184 = !DILocation(line: 2690, column: 27, scope: !5182)
!5185 = !DILocation(line: 2691, column: 3, scope: !5182)
!5186 = !DILocation(line: 2692, column: 18, scope: !5072)
!5187 = !DILocation(line: 2692, column: 32, scope: !5072)
!5188 = !DILocation(line: 2692, column: 46, scope: !5072)
!5189 = !DILocation(line: 2692, column: 30, scope: !5072)
!5190 = !DILocation(line: 2692, column: 58, scope: !5072)
!5191 = !DILocation(line: 2692, column: 56, scope: !5072)
!5192 = !DILocation(line: 2692, column: 16, scope: !5072)
!5193 = !DILocation(line: 2693, column: 17, scope: !5072)
!5194 = !DILocation(line: 2693, column: 31, scope: !5072)
!5195 = !DILocation(line: 2693, column: 15, scope: !5072)
!5196 = !DILocation(line: 2695, column: 7, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5072, file: !1, line: 2695, column: 7)
!5198 = !DILocation(line: 2695, column: 22, scope: !5197)
!5199 = !DILocation(line: 2695, column: 19, scope: !5197)
!5200 = !DILocation(line: 2695, column: 7, scope: !5072)
!5201 = !DILocation(line: 2696, column: 15, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5197, file: !1, line: 2695, column: 35)
!5203 = !DILocation(line: 2697, column: 4, scope: !5202)
!5204 = distinct !{!5204, !5068, !5205}
!5205 = !DILocation(line: 2699, column: 2, scope: !4968)
!5206 = !DILocation(line: 2700, column: 9, scope: !4968)
!5207 = !DILocation(line: 2700, column: 2, scope: !4968)
!5208 = !DILocation(line: 2701, column: 1, scope: !4968)
!5209 = distinct !DISubprogram(name: "CDDM_calc_edges_tessface", scope: !1, file: !1, line: 3109, type: !1475, scopeLine: 3110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5210 = !DILocalVariable(name: "dm", arg: 1, scope: !5209, file: !1, line: 3109, type: !1477)
!5211 = !DILocation(line: 3109, column: 44, scope: !5209)
!5212 = !DILocalVariable(name: "cddm", scope: !5209, file: !1, line: 3111, type: !201)
!5213 = !DILocation(line: 3111, column: 17, scope: !5209)
!5214 = !DILocation(line: 3111, column: 41, scope: !5209)
!5215 = !DILocation(line: 3111, column: 24, scope: !5209)
!5216 = !DILocalVariable(name: "edgeData", scope: !5209, file: !1, line: 3112, type: !210)
!5217 = !DILocation(line: 3112, column: 13, scope: !5209)
!5218 = !DILocalVariable(name: "ehi", scope: !5209, file: !1, line: 3113, type: !1926)
!5219 = !DILocation(line: 3113, column: 19, scope: !5209)
!5220 = !DILocalVariable(name: "mf", scope: !5209, file: !1, line: 3114, type: !1786)
!5221 = !DILocation(line: 3114, column: 9, scope: !5209)
!5222 = !DILocation(line: 3114, column: 14, scope: !5209)
!5223 = !DILocation(line: 3114, column: 20, scope: !5209)
!5224 = !DILocalVariable(name: "med", scope: !5209, file: !1, line: 3115, type: !1783)
!5225 = !DILocation(line: 3115, column: 9, scope: !5209)
!5226 = !DILocalVariable(name: "eh", scope: !5209, file: !1, line: 3116, type: !5227)
!5227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5228, size: 64)
!5228 = !DIDerivedType(tag: DW_TAG_typedef, name: "EdgeSet", file: !1928, line: 98, baseType: !5229)
!5229 = !DICompositeType(tag: DW_TAG_structure_type, name: "EdgeSet", file: !1928, line: 96, flags: DIFlagFwdDecl)
!5230 = !DILocation(line: 3116, column: 11, scope: !5209)
!5231 = !DILocalVariable(name: "i", scope: !5209, file: !1, line: 3117, type: !219)
!5232 = !DILocation(line: 3117, column: 6, scope: !5209)
!5233 = !DILocalVariable(name: "index", scope: !5209, file: !1, line: 3117, type: !289)
!5234 = !DILocation(line: 3117, column: 10, scope: !5209)
!5235 = !DILocalVariable(name: "numEdges", scope: !5209, file: !1, line: 3117, type: !219)
!5236 = !DILocation(line: 3117, column: 17, scope: !5209)
!5237 = !DILocalVariable(name: "numFaces", scope: !5209, file: !1, line: 3117, type: !219)
!5238 = !DILocation(line: 3117, column: 27, scope: !5209)
!5239 = !DILocation(line: 3117, column: 38, scope: !5209)
!5240 = !DILocation(line: 3117, column: 42, scope: !5209)
!5241 = !DILocation(line: 3119, column: 36, scope: !5209)
!5242 = !DILocation(line: 3119, column: 7, scope: !5209)
!5243 = !DILocation(line: 3119, column: 5, scope: !5209)
!5244 = !DILocation(line: 3121, column: 9, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5209, file: !1, line: 3121, column: 2)
!5246 = !DILocation(line: 3121, column: 7, scope: !5245)
!5247 = !DILocation(line: 3121, column: 14, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5245, file: !1, line: 3121, column: 2)
!5249 = !DILocation(line: 3121, column: 18, scope: !5248)
!5250 = !DILocation(line: 3121, column: 16, scope: !5248)
!5251 = !DILocation(line: 3121, column: 2, scope: !5245)
!5252 = !DILocation(line: 3122, column: 19, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5248, file: !1, line: 3121, column: 39)
!5254 = !DILocation(line: 3122, column: 23, scope: !5253)
!5255 = !DILocation(line: 3122, column: 27, scope: !5253)
!5256 = !DILocation(line: 3122, column: 31, scope: !5253)
!5257 = !DILocation(line: 3122, column: 35, scope: !5253)
!5258 = !DILocation(line: 3122, column: 3, scope: !5253)
!5259 = !DILocation(line: 3123, column: 19, scope: !5253)
!5260 = !DILocation(line: 3123, column: 23, scope: !5253)
!5261 = !DILocation(line: 3123, column: 27, scope: !5253)
!5262 = !DILocation(line: 3123, column: 31, scope: !5253)
!5263 = !DILocation(line: 3123, column: 35, scope: !5253)
!5264 = !DILocation(line: 3123, column: 3, scope: !5253)
!5265 = !DILocation(line: 3125, column: 7, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5253, file: !1, line: 3125, column: 7)
!5267 = !DILocation(line: 3125, column: 11, scope: !5266)
!5268 = !DILocation(line: 3125, column: 7, scope: !5253)
!5269 = !DILocation(line: 3126, column: 20, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5266, file: !1, line: 3125, column: 15)
!5271 = !DILocation(line: 3126, column: 24, scope: !5270)
!5272 = !DILocation(line: 3126, column: 28, scope: !5270)
!5273 = !DILocation(line: 3126, column: 32, scope: !5270)
!5274 = !DILocation(line: 3126, column: 36, scope: !5270)
!5275 = !DILocation(line: 3126, column: 4, scope: !5270)
!5276 = !DILocation(line: 3127, column: 20, scope: !5270)
!5277 = !DILocation(line: 3127, column: 24, scope: !5270)
!5278 = !DILocation(line: 3127, column: 28, scope: !5270)
!5279 = !DILocation(line: 3127, column: 32, scope: !5270)
!5280 = !DILocation(line: 3127, column: 36, scope: !5270)
!5281 = !DILocation(line: 3127, column: 4, scope: !5270)
!5282 = !DILocation(line: 3128, column: 3, scope: !5270)
!5283 = !DILocation(line: 3130, column: 20, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5266, file: !1, line: 3129, column: 8)
!5285 = !DILocation(line: 3130, column: 24, scope: !5284)
!5286 = !DILocation(line: 3130, column: 28, scope: !5284)
!5287 = !DILocation(line: 3130, column: 32, scope: !5284)
!5288 = !DILocation(line: 3130, column: 36, scope: !5284)
!5289 = !DILocation(line: 3130, column: 4, scope: !5284)
!5290 = !DILocation(line: 3132, column: 2, scope: !5253)
!5291 = !DILocation(line: 3121, column: 29, scope: !5248)
!5292 = !DILocation(line: 3121, column: 35, scope: !5248)
!5293 = !DILocation(line: 3121, column: 2, scope: !5248)
!5294 = distinct !{!5294, !5251, !5295}
!5295 = !DILocation(line: 3132, column: 2, scope: !5245)
!5296 = !DILocation(line: 3134, column: 30, scope: !5209)
!5297 = !DILocation(line: 3134, column: 13, scope: !5209)
!5298 = !DILocation(line: 3134, column: 11, scope: !5209)
!5299 = !DILocation(line: 3137, column: 2, scope: !5209)
!5300 = !DILocation(line: 3138, column: 61, scope: !5209)
!5301 = !DILocation(line: 3138, column: 2, scope: !5209)
!5302 = !DILocation(line: 3139, column: 65, scope: !5209)
!5303 = !DILocation(line: 3139, column: 2, scope: !5209)
!5304 = !DILocation(line: 3141, column: 8, scope: !5209)
!5305 = !DILocation(line: 3141, column: 6, scope: !5209)
!5306 = !DILocation(line: 3142, column: 10, scope: !5209)
!5307 = !DILocation(line: 3142, column: 8, scope: !5209)
!5308 = !DILocation(line: 3144, column: 37, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5209, file: !1, line: 3144, column: 2)
!5310 = !DILocation(line: 3144, column: 13, scope: !5309)
!5311 = !DILocation(line: 3144, column: 11, scope: !5309)
!5312 = !DILocation(line: 3144, column: 44, scope: !5309)
!5313 = !DILocation(line: 3144, column: 7, scope: !5309)
!5314 = !DILocation(line: 3145, column: 34, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5309, file: !1, line: 3144, column: 2)
!5316 = !DILocation(line: 3145, column: 7, scope: !5315)
!5317 = !DILocation(line: 3145, column: 39, scope: !5315)
!5318 = !DILocation(line: 3144, column: 2, scope: !5309)
!5319 = !DILocation(line: 3148, column: 30, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5315, file: !1, line: 3147, column: 2)
!5321 = !DILocation(line: 3148, column: 36, scope: !5320)
!5322 = !DILocation(line: 3148, column: 41, scope: !5320)
!5323 = !DILocation(line: 3148, column: 46, scope: !5320)
!5324 = !DILocation(line: 3148, column: 51, scope: !5320)
!5325 = !DILocation(line: 3148, column: 3, scope: !5320)
!5326 = !DILocation(line: 3150, column: 3, scope: !5320)
!5327 = !DILocation(line: 3150, column: 8, scope: !5320)
!5328 = !DILocation(line: 3150, column: 13, scope: !5320)
!5329 = !DILocation(line: 3151, column: 4, scope: !5320)
!5330 = !DILocation(line: 3151, column: 10, scope: !5320)
!5331 = !DILocation(line: 3152, column: 2, scope: !5320)
!5332 = !DILocation(line: 3146, column: 32, scope: !5315)
!5333 = !DILocation(line: 3146, column: 7, scope: !5315)
!5334 = !DILocation(line: 3146, column: 39, scope: !5315)
!5335 = !DILocation(line: 3146, column: 46, scope: !5315)
!5336 = !DILocation(line: 3146, column: 55, scope: !5315)
!5337 = !DILocation(line: 3144, column: 2, scope: !5315)
!5338 = distinct !{!5338, !5318, !5339}
!5339 = !DILocation(line: 3152, column: 2, scope: !5309)
!5340 = !DILocation(line: 3153, column: 27, scope: !5209)
!5341 = !DILocation(line: 3153, column: 2, scope: !5209)
!5342 = !DILocation(line: 3156, column: 19, scope: !5209)
!5343 = !DILocation(line: 3156, column: 23, scope: !5209)
!5344 = !DILocation(line: 3156, column: 33, scope: !5209)
!5345 = !DILocation(line: 3156, column: 37, scope: !5209)
!5346 = !DILocation(line: 3156, column: 2, scope: !5209)
!5347 = !DILocation(line: 3157, column: 2, scope: !5209)
!5348 = !DILocation(line: 3157, column: 6, scope: !5209)
!5349 = !DILocation(line: 3157, column: 17, scope: !5209)
!5350 = !DILocation(line: 3158, column: 20, scope: !5209)
!5351 = !DILocation(line: 3158, column: 2, scope: !5209)
!5352 = !DILocation(line: 3158, column: 6, scope: !5209)
!5353 = !DILocation(line: 3158, column: 18, scope: !5209)
!5354 = !DILocation(line: 3160, column: 38, scope: !5209)
!5355 = !DILocation(line: 3160, column: 42, scope: !5209)
!5356 = !DILocation(line: 3160, column: 16, scope: !5209)
!5357 = !DILocation(line: 3160, column: 2, scope: !5209)
!5358 = !DILocation(line: 3160, column: 8, scope: !5209)
!5359 = !DILocation(line: 3160, column: 14, scope: !5209)
!5360 = !DILocation(line: 3162, column: 19, scope: !5209)
!5361 = !DILocation(line: 3162, column: 2, scope: !5209)
!5362 = !DILocation(line: 3163, column: 1, scope: !5209)
!5363 = distinct !DISubprogram(name: "BLI_edgesetIterator_new", scope: !1928, file: !1928, line: 113, type: !5364, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5364 = !DISubroutineType(types: !5365)
!5365 = !{!1926, !5227}
!5366 = !DILocalVariable(name: "gs", arg: 1, scope: !5363, file: !1928, line: 113, type: !5227)
!5367 = !DILocation(line: 113, column: 62, scope: !5363)
!5368 = !DILocation(line: 113, column: 131, scope: !5363)
!5369 = !DILocation(line: 113, column: 119, scope: !5363)
!5370 = !DILocation(line: 113, column: 94, scope: !5363)
!5371 = !DILocation(line: 113, column: 75, scope: !5363)
!5372 = !DILocation(line: 113, column: 68, scope: !5363)
!5373 = distinct !DISubprogram(name: "BLI_edgesetIterator_isDone", scope: !1928, file: !1928, line: 117, type: !5374, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5374 = !DISubroutineType(types: !5375)
!5375 = !{!309, !1926}
!5376 = !DILocalVariable(name: "esi", arg: 1, scope: !5373, file: !1928, line: 117, type: !1926)
!5377 = !DILocation(line: 117, column: 61, scope: !5373)
!5378 = !DILocation(line: 117, column: 123, scope: !5373)
!5379 = !DILocation(line: 117, column: 103, scope: !5373)
!5380 = !DILocation(line: 117, column: 75, scope: !5373)
!5381 = !DILocation(line: 117, column: 68, scope: !5373)
!5382 = distinct !DISubprogram(name: "BLI_edgesetIterator_getKey", scope: !1928, file: !1928, line: 115, type: !5383, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5383 = !DISubroutineType(types: !5384)
!5384 = !{null, !1926, !788, !788}
!5385 = !DILocalVariable(name: "esi", arg: 1, scope: !5382, file: !1928, line: 115, type: !1926)
!5386 = !DILocation(line: 115, column: 61, scope: !5382)
!5387 = !DILocalVariable(name: "r_v0", arg: 2, scope: !5382, file: !1928, line: 115, type: !788)
!5388 = !DILocation(line: 115, column: 80, scope: !5382)
!5389 = !DILocalVariable(name: "r_v1", arg: 3, scope: !5382, file: !1928, line: 115, type: !788)
!5390 = !DILocation(line: 115, column: 100, scope: !5382)
!5391 = !DILocation(line: 115, column: 156, scope: !5382)
!5392 = !DILocation(line: 115, column: 136, scope: !5382)
!5393 = !DILocation(line: 115, column: 161, scope: !5382)
!5394 = !DILocation(line: 115, column: 167, scope: !5382)
!5395 = !DILocation(line: 115, column: 108, scope: !5382)
!5396 = !DILocation(line: 115, column: 174, scope: !5382)
!5397 = distinct !DISubprogram(name: "BLI_edgesetIterator_step", scope: !1928, file: !1928, line: 116, type: !5398, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5398 = !DISubroutineType(types: !5399)
!5399 = !{null, !1926}
!5400 = !DILocalVariable(name: "esi", arg: 1, scope: !5397, file: !1928, line: 116, type: !1926)
!5401 = !DILocation(line: 116, column: 59, scope: !5397)
!5402 = !DILocation(line: 116, column: 112, scope: !5397)
!5403 = !DILocation(line: 116, column: 92, scope: !5397)
!5404 = !DILocation(line: 116, column: 66, scope: !5397)
!5405 = !DILocation(line: 116, column: 118, scope: !5397)
!5406 = distinct !DISubprogram(name: "BLI_edgesetIterator_free", scope: !1928, file: !1928, line: 114, type: !5398, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5407 = !DILocalVariable(name: "esi", arg: 1, scope: !5406, file: !1928, line: 114, type: !1926)
!5408 = !DILocation(line: 114, column: 59, scope: !5406)
!5409 = !DILocation(line: 114, column: 112, scope: !5406)
!5410 = !DILocation(line: 114, column: 92, scope: !5406)
!5411 = !DILocation(line: 114, column: 66, scope: !5406)
!5412 = !DILocation(line: 114, column: 118, scope: !5406)
!5413 = distinct !DISubprogram(name: "CDDM_calc_edges", scope: !1, file: !1, line: 3166, type: !1475, scopeLine: 3167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5414 = !DILocalVariable(name: "dm", arg: 1, scope: !5413, file: !1, line: 3166, type: !1477)
!5415 = !DILocation(line: 3166, column: 35, scope: !5413)
!5416 = !DILocalVariable(name: "cddm", scope: !5413, file: !1, line: 3168, type: !201)
!5417 = !DILocation(line: 3168, column: 17, scope: !5413)
!5418 = !DILocation(line: 3168, column: 41, scope: !5413)
!5419 = !DILocation(line: 3168, column: 24, scope: !5413)
!5420 = !DILocalVariable(name: "edgeData", scope: !5413, file: !1, line: 3169, type: !210)
!5421 = !DILocation(line: 3169, column: 13, scope: !5413)
!5422 = !DILocalVariable(name: "ehi", scope: !5413, file: !1, line: 3170, type: !1933)
!5423 = !DILocation(line: 3170, column: 20, scope: !5413)
!5424 = !DILocalVariable(name: "mp", scope: !5413, file: !1, line: 3171, type: !1792)
!5425 = !DILocation(line: 3171, column: 9, scope: !5413)
!5426 = !DILocation(line: 3171, column: 14, scope: !5413)
!5427 = !DILocation(line: 3171, column: 20, scope: !5413)
!5428 = !DILocalVariable(name: "ml", scope: !5413, file: !1, line: 3172, type: !1789)
!5429 = !DILocation(line: 3172, column: 9, scope: !5413)
!5430 = !DILocalVariable(name: "med", scope: !5413, file: !1, line: 3173, type: !1783)
!5431 = !DILocation(line: 3173, column: 9, scope: !5413)
!5432 = !DILocalVariable(name: "origmed", scope: !5413, file: !1, line: 3173, type: !1783)
!5433 = !DILocation(line: 3173, column: 15, scope: !5413)
!5434 = !DILocalVariable(name: "eh", scope: !5413, file: !1, line: 3174, type: !1930)
!5435 = !DILocation(line: 3174, column: 12, scope: !5413)
!5436 = !DILocalVariable(name: "eh_reserve", scope: !5413, file: !1, line: 3175, type: !5)
!5437 = !DILocation(line: 3175, column: 15, scope: !5413)
!5438 = !DILocalVariable(name: "v1", scope: !5413, file: !1, line: 3176, type: !219)
!5439 = !DILocation(line: 3176, column: 6, scope: !5413)
!5440 = !DILocalVariable(name: "v2", scope: !5413, file: !1, line: 3176, type: !219)
!5441 = !DILocation(line: 3176, column: 10, scope: !5413)
!5442 = !DILocalVariable(name: "eindex", scope: !5413, file: !1, line: 3177, type: !3982)
!5443 = !DILocation(line: 3177, column: 13, scope: !5413)
!5444 = !DILocalVariable(name: "i", scope: !5413, file: !1, line: 3178, type: !219)
!5445 = !DILocation(line: 3178, column: 6, scope: !5413)
!5446 = !DILocalVariable(name: "j", scope: !5413, file: !1, line: 3178, type: !219)
!5447 = !DILocation(line: 3178, column: 9, scope: !5413)
!5448 = !DILocalVariable(name: "index", scope: !5413, file: !1, line: 3178, type: !289)
!5449 = !DILocation(line: 3178, column: 13, scope: !5413)
!5450 = !DILocalVariable(name: "numFaces", scope: !5413, file: !1, line: 3179, type: !2682)
!5451 = !DILocation(line: 3179, column: 12, scope: !5413)
!5452 = !DILocation(line: 3179, column: 23, scope: !5413)
!5453 = !DILocation(line: 3179, column: 27, scope: !5413)
!5454 = !DILocalVariable(name: "numLoops", scope: !5413, file: !1, line: 3180, type: !2682)
!5455 = !DILocation(line: 3180, column: 12, scope: !5413)
!5456 = !DILocation(line: 3180, column: 23, scope: !5413)
!5457 = !DILocation(line: 3180, column: 27, scope: !5413)
!5458 = !DILocalVariable(name: "numEdges", scope: !5413, file: !1, line: 3181, type: !219)
!5459 = !DILocation(line: 3181, column: 6, scope: !5413)
!5460 = !DILocation(line: 3181, column: 17, scope: !5413)
!5461 = !DILocation(line: 3181, column: 21, scope: !5413)
!5462 = !DILocation(line: 3183, column: 34, scope: !5413)
!5463 = !DILocation(line: 3183, column: 11, scope: !5413)
!5464 = !DILocation(line: 3183, column: 9, scope: !5413)
!5465 = !DILocation(line: 3184, column: 8, scope: !5413)
!5466 = !DILocation(line: 3184, column: 14, scope: !5413)
!5467 = !DILocation(line: 3184, column: 6, scope: !5413)
!5468 = !DILocation(line: 3186, column: 22, scope: !5413)
!5469 = !DILocation(line: 3186, column: 28, scope: !5413)
!5470 = !DILocation(line: 3186, column: 42, scope: !5413)
!5471 = !DILocation(line: 3186, column: 15, scope: !5413)
!5472 = !DILocation(line: 3186, column: 13, scope: !5413)
!5473 = !DILocation(line: 3187, column: 37, scope: !5413)
!5474 = !DILocation(line: 3187, column: 7, scope: !5413)
!5475 = !DILocation(line: 3187, column: 5, scope: !5413)
!5476 = !DILocation(line: 3188, column: 6, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !5413, file: !1, line: 3188, column: 6)
!5478 = !DILocation(line: 3188, column: 6, scope: !5413)
!5479 = !DILocation(line: 3189, column: 10, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5481, file: !1, line: 3189, column: 3)
!5481 = distinct !DILexicalBlock(scope: !5477, file: !1, line: 3188, column: 11)
!5482 = !DILocation(line: 3189, column: 8, scope: !5480)
!5483 = !DILocation(line: 3189, column: 15, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5480, file: !1, line: 3189, column: 3)
!5485 = !DILocation(line: 3189, column: 19, scope: !5484)
!5486 = !DILocation(line: 3189, column: 17, scope: !5484)
!5487 = !DILocation(line: 3189, column: 3, scope: !5480)
!5488 = !DILocation(line: 3190, column: 24, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5484, file: !1, line: 3189, column: 41)
!5490 = !DILocation(line: 3190, column: 28, scope: !5489)
!5491 = !DILocation(line: 3190, column: 33, scope: !5489)
!5492 = !DILocation(line: 3190, column: 37, scope: !5489)
!5493 = !DILocation(line: 3190, column: 42, scope: !5489)
!5494 = !DILocation(line: 3190, column: 46, scope: !5489)
!5495 = !DILocation(line: 3190, column: 4, scope: !5489)
!5496 = !DILocation(line: 3191, column: 3, scope: !5489)
!5497 = !DILocation(line: 3189, column: 30, scope: !5484)
!5498 = !DILocation(line: 3189, column: 37, scope: !5484)
!5499 = !DILocation(line: 3189, column: 3, scope: !5484)
!5500 = distinct !{!5500, !5487, !5501}
!5501 = !DILocation(line: 3191, column: 3, scope: !5480)
!5502 = !DILocation(line: 3192, column: 2, scope: !5481)
!5503 = !DILocation(line: 3194, column: 9, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !5413, file: !1, line: 3194, column: 2)
!5505 = !DILocation(line: 3194, column: 7, scope: !5504)
!5506 = !DILocation(line: 3194, column: 14, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5504, file: !1, line: 3194, column: 2)
!5508 = !DILocation(line: 3194, column: 18, scope: !5507)
!5509 = !DILocation(line: 3194, column: 16, scope: !5507)
!5510 = !DILocation(line: 3194, column: 2, scope: !5504)
!5511 = !DILocation(line: 3195, column: 8, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5507, file: !1, line: 3194, column: 39)
!5513 = !DILocation(line: 3195, column: 14, scope: !5512)
!5514 = !DILocation(line: 3195, column: 22, scope: !5512)
!5515 = !DILocation(line: 3195, column: 26, scope: !5512)
!5516 = !DILocation(line: 3195, column: 20, scope: !5512)
!5517 = !DILocation(line: 3195, column: 6, scope: !5512)
!5518 = !DILocation(line: 3196, column: 10, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5512, file: !1, line: 3196, column: 3)
!5520 = !DILocation(line: 3196, column: 8, scope: !5519)
!5521 = !DILocation(line: 3196, column: 15, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5519, file: !1, line: 3196, column: 3)
!5523 = !DILocation(line: 3196, column: 19, scope: !5522)
!5524 = !DILocation(line: 3196, column: 23, scope: !5522)
!5525 = !DILocation(line: 3196, column: 17, scope: !5522)
!5526 = !DILocation(line: 3196, column: 3, scope: !5519)
!5527 = !DILocation(line: 3197, column: 9, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5522, file: !1, line: 3196, column: 43)
!5529 = !DILocation(line: 3197, column: 13, scope: !5528)
!5530 = !DILocation(line: 3197, column: 7, scope: !5528)
!5531 = !DILocation(line: 3198, column: 9, scope: !5528)
!5532 = !DILocation(line: 3198, column: 48, scope: !5528)
!5533 = !DILocation(line: 3198, column: 7, scope: !5528)
!5534 = !DILocation(line: 3199, column: 26, scope: !5528)
!5535 = !DILocation(line: 3199, column: 30, scope: !5528)
!5536 = !DILocation(line: 3199, column: 34, scope: !5528)
!5537 = !DILocation(line: 3199, column: 4, scope: !5528)
!5538 = !DILocation(line: 3200, column: 3, scope: !5528)
!5539 = !DILocation(line: 3196, column: 33, scope: !5522)
!5540 = !DILocation(line: 3196, column: 39, scope: !5522)
!5541 = !DILocation(line: 3196, column: 3, scope: !5522)
!5542 = distinct !{!5542, !5526, !5543}
!5543 = !DILocation(line: 3200, column: 3, scope: !5519)
!5544 = !DILocation(line: 3201, column: 2, scope: !5512)
!5545 = !DILocation(line: 3194, column: 29, scope: !5507)
!5546 = !DILocation(line: 3194, column: 35, scope: !5507)
!5547 = !DILocation(line: 3194, column: 2, scope: !5507)
!5548 = distinct !{!5548, !5510, !5549}
!5549 = !DILocation(line: 3201, column: 2, scope: !5504)
!5550 = !DILocation(line: 3203, column: 31, scope: !5413)
!5551 = !DILocation(line: 3203, column: 13, scope: !5413)
!5552 = !DILocation(line: 3203, column: 11, scope: !5413)
!5553 = !DILocation(line: 3206, column: 2, scope: !5413)
!5554 = !DILocation(line: 3207, column: 61, scope: !5413)
!5555 = !DILocation(line: 3207, column: 2, scope: !5413)
!5556 = !DILocation(line: 3208, column: 65, scope: !5413)
!5557 = !DILocation(line: 3208, column: 2, scope: !5413)
!5558 = !DILocation(line: 3210, column: 12, scope: !5413)
!5559 = !DILocation(line: 3210, column: 18, scope: !5413)
!5560 = !DILocation(line: 3210, column: 10, scope: !5413)
!5561 = !DILocation(line: 3211, column: 8, scope: !5413)
!5562 = !DILocation(line: 3211, column: 6, scope: !5413)
!5563 = !DILocation(line: 3212, column: 10, scope: !5413)
!5564 = !DILocation(line: 3212, column: 8, scope: !5413)
!5565 = !DILocation(line: 3214, column: 38, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5413, file: !1, line: 3214, column: 2)
!5567 = !DILocation(line: 3214, column: 13, scope: !5566)
!5568 = !DILocation(line: 3214, column: 11, scope: !5566)
!5569 = !DILocation(line: 3214, column: 45, scope: !5566)
!5570 = !DILocation(line: 3214, column: 7, scope: !5566)
!5571 = !DILocation(line: 3215, column: 35, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5566, file: !1, line: 3214, column: 2)
!5573 = !DILocation(line: 3215, column: 7, scope: !5572)
!5574 = !DILocation(line: 3215, column: 40, scope: !5572)
!5575 = !DILocation(line: 3214, column: 2, scope: !5566)
!5576 = !DILocation(line: 3218, column: 31, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5572, file: !1, line: 3217, column: 2)
!5578 = !DILocation(line: 3218, column: 37, scope: !5577)
!5579 = !DILocation(line: 3218, column: 42, scope: !5577)
!5580 = !DILocation(line: 3218, column: 47, scope: !5577)
!5581 = !DILocation(line: 3218, column: 52, scope: !5577)
!5582 = !DILocation(line: 3218, column: 3, scope: !5577)
!5583 = !DILocation(line: 3219, column: 7, scope: !5577)
!5584 = !DILocation(line: 3219, column: 5, scope: !5577)
!5585 = !DILocation(line: 3221, column: 7, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5577, file: !1, line: 3221, column: 7)
!5587 = !DILocation(line: 3221, column: 9, scope: !5586)
!5588 = !DILocation(line: 3221, column: 7, scope: !5577)
!5589 = !DILocation(line: 3222, column: 4, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5586, file: !1, line: 3221, column: 15)
!5591 = !DILocation(line: 3222, column: 9, scope: !5590)
!5592 = !DILocation(line: 3222, column: 14, scope: !5590)
!5593 = !DILocation(line: 3223, column: 5, scope: !5590)
!5594 = !DILocation(line: 3223, column: 11, scope: !5590)
!5595 = !DILocation(line: 3224, column: 3, scope: !5590)
!5596 = !DILocation(line: 3226, column: 46, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5586, file: !1, line: 3225, column: 8)
!5598 = !DILocation(line: 3226, column: 54, scope: !5597)
!5599 = !DILocation(line: 3226, column: 56, scope: !5597)
!5600 = !DILocation(line: 3226, column: 61, scope: !5597)
!5601 = !DILocation(line: 3226, column: 44, scope: !5597)
!5602 = !DILocation(line: 3226, column: 16, scope: !5597)
!5603 = !DILocation(line: 3226, column: 4, scope: !5597)
!5604 = !DILocation(line: 3226, column: 9, scope: !5597)
!5605 = !DILocation(line: 3226, column: 14, scope: !5597)
!5606 = !DILocation(line: 3227, column: 13, scope: !5597)
!5607 = !DILocation(line: 3227, column: 20, scope: !5597)
!5608 = !DILocation(line: 3227, column: 22, scope: !5597)
!5609 = !DILocation(line: 3227, column: 5, scope: !5597)
!5610 = !DILocation(line: 3227, column: 11, scope: !5597)
!5611 = !DILocation(line: 3230, column: 33, scope: !5577)
!5612 = !DILocation(line: 3230, column: 38, scope: !5577)
!5613 = !DILocation(line: 3230, column: 3, scope: !5577)
!5614 = !DILocation(line: 3231, column: 2, scope: !5577)
!5615 = !DILocation(line: 3216, column: 33, scope: !5572)
!5616 = !DILocation(line: 3216, column: 7, scope: !5572)
!5617 = !DILocation(line: 3216, column: 39, scope: !5572)
!5618 = !DILocation(line: 3216, column: 44, scope: !5572)
!5619 = !DILocation(line: 3216, column: 51, scope: !5572)
!5620 = !DILocation(line: 3214, column: 2, scope: !5572)
!5621 = distinct !{!5621, !5575, !5622}
!5622 = !DILocation(line: 3231, column: 2, scope: !5566)
!5623 = !DILocation(line: 3232, column: 28, scope: !5413)
!5624 = !DILocation(line: 3232, column: 2, scope: !5413)
!5625 = !DILocation(line: 3235, column: 19, scope: !5413)
!5626 = !DILocation(line: 3235, column: 23, scope: !5413)
!5627 = !DILocation(line: 3235, column: 33, scope: !5413)
!5628 = !DILocation(line: 3235, column: 37, scope: !5413)
!5629 = !DILocation(line: 3235, column: 2, scope: !5413)
!5630 = !DILocation(line: 3236, column: 2, scope: !5413)
!5631 = !DILocation(line: 3236, column: 6, scope: !5413)
!5632 = !DILocation(line: 3236, column: 17, scope: !5413)
!5633 = !DILocation(line: 3237, column: 20, scope: !5413)
!5634 = !DILocation(line: 3237, column: 2, scope: !5413)
!5635 = !DILocation(line: 3237, column: 6, scope: !5413)
!5636 = !DILocation(line: 3237, column: 18, scope: !5413)
!5637 = !DILocation(line: 3239, column: 38, scope: !5413)
!5638 = !DILocation(line: 3239, column: 42, scope: !5413)
!5639 = !DILocation(line: 3239, column: 16, scope: !5413)
!5640 = !DILocation(line: 3239, column: 2, scope: !5413)
!5641 = !DILocation(line: 3239, column: 8, scope: !5413)
!5642 = !DILocation(line: 3239, column: 14, scope: !5413)
!5643 = !DILocation(line: 3241, column: 7, scope: !5413)
!5644 = !DILocation(line: 3241, column: 13, scope: !5413)
!5645 = !DILocation(line: 3241, column: 5, scope: !5413)
!5646 = !DILocation(line: 3242, column: 9, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5413, file: !1, line: 3242, column: 2)
!5648 = !DILocation(line: 3242, column: 7, scope: !5647)
!5649 = !DILocation(line: 3242, column: 14, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5647, file: !1, line: 3242, column: 2)
!5651 = !DILocation(line: 3242, column: 18, scope: !5650)
!5652 = !DILocation(line: 3242, column: 16, scope: !5650)
!5653 = !DILocation(line: 3242, column: 2, scope: !5647)
!5654 = !DILocation(line: 3243, column: 8, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5650, file: !1, line: 3242, column: 39)
!5656 = !DILocation(line: 3243, column: 14, scope: !5655)
!5657 = !DILocation(line: 3243, column: 22, scope: !5655)
!5658 = !DILocation(line: 3243, column: 26, scope: !5655)
!5659 = !DILocation(line: 3243, column: 20, scope: !5655)
!5660 = !DILocation(line: 3243, column: 6, scope: !5655)
!5661 = !DILocation(line: 3244, column: 10, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5655, file: !1, line: 3244, column: 3)
!5663 = !DILocation(line: 3244, column: 8, scope: !5662)
!5664 = !DILocation(line: 3244, column: 15, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5662, file: !1, line: 3244, column: 3)
!5666 = !DILocation(line: 3244, column: 19, scope: !5665)
!5667 = !DILocation(line: 3244, column: 23, scope: !5665)
!5668 = !DILocation(line: 3244, column: 17, scope: !5665)
!5669 = !DILocation(line: 3244, column: 3, scope: !5662)
!5670 = !DILocation(line: 3245, column: 9, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5665, file: !1, line: 3244, column: 43)
!5672 = !DILocation(line: 3245, column: 13, scope: !5671)
!5673 = !DILocation(line: 3245, column: 7, scope: !5671)
!5674 = !DILocation(line: 3246, column: 9, scope: !5671)
!5675 = !DILocation(line: 3246, column: 48, scope: !5671)
!5676 = !DILocation(line: 3246, column: 7, scope: !5671)
!5677 = !DILocation(line: 3247, column: 12, scope: !5671)
!5678 = !DILocation(line: 3247, column: 4, scope: !5671)
!5679 = !DILocation(line: 3247, column: 8, scope: !5671)
!5680 = !DILocation(line: 3247, column: 10, scope: !5671)
!5681 = !DILocation(line: 3248, column: 3, scope: !5671)
!5682 = !DILocation(line: 3244, column: 33, scope: !5665)
!5683 = !DILocation(line: 3244, column: 39, scope: !5665)
!5684 = !DILocation(line: 3244, column: 3, scope: !5665)
!5685 = distinct !{!5685, !5669, !5686}
!5686 = !DILocation(line: 3248, column: 3, scope: !5662)
!5687 = !DILocation(line: 3249, column: 2, scope: !5655)
!5688 = !DILocation(line: 3242, column: 29, scope: !5650)
!5689 = !DILocation(line: 3242, column: 35, scope: !5650)
!5690 = !DILocation(line: 3242, column: 2, scope: !5650)
!5691 = distinct !{!5691, !5653, !5692}
!5692 = !DILocation(line: 3249, column: 2, scope: !5647)
!5693 = !DILocation(line: 3251, column: 20, scope: !5413)
!5694 = !DILocation(line: 3251, column: 2, scope: !5413)
!5695 = !DILocation(line: 3252, column: 1, scope: !5413)
!5696 = distinct !DISubprogram(name: "max_ii", scope: !5697, file: !5697, line: 215, type: !5698, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5697 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5698 = !DISubroutineType(types: !5699)
!5699 = !{!219, !219, !219}
!5700 = !DILocalVariable(name: "a", arg: 1, scope: !5696, file: !5697, line: 215, type: !219)
!5701 = !DILocation(line: 215, column: 24, scope: !5696)
!5702 = !DILocalVariable(name: "b", arg: 2, scope: !5696, file: !5697, line: 215, type: !219)
!5703 = !DILocation(line: 215, column: 31, scope: !5696)
!5704 = !DILocation(line: 217, column: 10, scope: !5696)
!5705 = !DILocation(line: 217, column: 14, scope: !5696)
!5706 = !DILocation(line: 217, column: 12, scope: !5696)
!5707 = !DILocation(line: 217, column: 9, scope: !5696)
!5708 = !DILocation(line: 217, column: 19, scope: !5696)
!5709 = !DILocation(line: 217, column: 23, scope: !5696)
!5710 = !DILocation(line: 217, column: 2, scope: !5696)
!5711 = distinct !DISubprogram(name: "BLI_edgehashIterator_isDone", scope: !1928, file: !1928, line: 83, type: !5712, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5712 = !DISubroutineType(types: !5713)
!5713 = !{!309, !1933}
!5714 = !DILocalVariable(name: "ehi", arg: 1, scope: !5711, file: !1928, line: 83, type: !1933)
!5715 = !DILocation(line: 83, column: 65, scope: !5711)
!5716 = !DILocation(line: 83, column: 101, scope: !5711)
!5717 = !DILocation(line: 83, column: 106, scope: !5711)
!5718 = !DILocation(line: 83, column: 81, scope: !5711)
!5719 = !DILocation(line: 83, column: 116, scope: !5711)
!5720 = !DILocation(line: 83, column: 79, scope: !5711)
!5721 = !DILocation(line: 83, column: 72, scope: !5711)
!5722 = distinct !DISubprogram(name: "BLI_edgehashIterator_getKey", scope: !1928, file: !1928, line: 78, type: !5723, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5723 = !DISubroutineType(types: !5724)
!5724 = !{null, !1933, !788, !788}
!5725 = !DILocalVariable(name: "ehi", arg: 1, scope: !5722, file: !1928, line: 78, type: !1933)
!5726 = !DILocation(line: 78, column: 65, scope: !5722)
!5727 = !DILocalVariable(name: "r_v0", arg: 2, scope: !5722, file: !1928, line: 78, type: !788)
!5728 = !DILocation(line: 78, column: 84, scope: !5722)
!5729 = !DILocalVariable(name: "r_v1", arg: 3, scope: !5722, file: !1928, line: 78, type: !788)
!5730 = !DILocation(line: 78, column: 104, scope: !5722)
!5731 = !DILocation(line: 79, column: 32, scope: !5722)
!5732 = !DILocation(line: 79, column: 37, scope: !5722)
!5733 = !DILocation(line: 79, column: 48, scope: !5722)
!5734 = !DILocation(line: 79, column: 4, scope: !5722)
!5735 = !DILocation(line: 79, column: 9, scope: !5722)
!5736 = !DILocation(line: 79, column: 81, scope: !5722)
!5737 = !DILocation(line: 79, column: 86, scope: !5722)
!5738 = !DILocation(line: 79, column: 97, scope: !5722)
!5739 = !DILocation(line: 79, column: 53, scope: !5722)
!5740 = !DILocation(line: 79, column: 58, scope: !5722)
!5741 = !DILocation(line: 79, column: 101, scope: !5722)
!5742 = distinct !DISubprogram(name: "BLI_edgehashIterator_getValue", scope: !1928, file: !1928, line: 80, type: !5743, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5743 = !DISubroutineType(types: !5744)
!5744 = !{!233, !1933}
!5745 = !DILocalVariable(name: "ehi", arg: 1, scope: !5742, file: !1928, line: 80, type: !1933)
!5746 = !DILocation(line: 80, column: 67, scope: !5742)
!5747 = !DILocation(line: 80, column: 102, scope: !5742)
!5748 = !DILocation(line: 80, column: 107, scope: !5742)
!5749 = !DILocation(line: 80, column: 118, scope: !5742)
!5750 = !DILocation(line: 80, column: 74, scope: !5742)
!5751 = distinct !DISubprogram(name: "BLI_edgehashIterator_setValue", scope: !1928, file: !1928, line: 82, type: !5752, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5752 = !DISubroutineType(types: !5753)
!5753 = !{null, !1933, !233}
!5754 = !DILocalVariable(name: "ehi", arg: 1, scope: !5751, file: !1928, line: 82, type: !1933)
!5755 = !DILocation(line: 82, column: 67, scope: !5751)
!5756 = !DILocalVariable(name: "val", arg: 2, scope: !5751, file: !1928, line: 82, type: !233)
!5757 = !DILocation(line: 82, column: 78, scope: !5751)
!5758 = !DILocation(line: 82, column: 128, scope: !5751)
!5759 = !DILocation(line: 82, column: 106, scope: !5751)
!5760 = !DILocation(line: 82, column: 111, scope: !5751)
!5761 = !DILocation(line: 82, column: 122, scope: !5751)
!5762 = !DILocation(line: 82, column: 126, scope: !5751)
!5763 = !DILocation(line: 82, column: 133, scope: !5751)
!5764 = distinct !DISubprogram(name: "CDDM_lower_num_verts", scope: !1, file: !1, line: 3254, type: !5765, scopeLine: 3255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5765 = !DISubroutineType(types: !5766)
!5766 = !{null, !1477, !219}
!5767 = !DILocalVariable(name: "dm", arg: 1, scope: !5764, file: !1, line: 3254, type: !1477)
!5768 = !DILocation(line: 3254, column: 40, scope: !5764)
!5769 = !DILocalVariable(name: "numVerts", arg: 2, scope: !5764, file: !1, line: 3254, type: !219)
!5770 = !DILocation(line: 3254, column: 48, scope: !5764)
!5771 = !DILocation(line: 3257, column: 6, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5764, file: !1, line: 3257, column: 6)
!5773 = !DILocation(line: 3257, column: 17, scope: !5772)
!5774 = !DILocation(line: 3257, column: 21, scope: !5772)
!5775 = !DILocation(line: 3257, column: 15, scope: !5772)
!5776 = !DILocation(line: 3257, column: 6, scope: !5764)
!5777 = !DILocation(line: 3258, column: 25, scope: !5772)
!5778 = !DILocation(line: 3258, column: 29, scope: !5772)
!5779 = !DILocation(line: 3258, column: 39, scope: !5772)
!5780 = !DILocation(line: 3258, column: 49, scope: !5772)
!5781 = !DILocation(line: 3258, column: 53, scope: !5772)
!5782 = !DILocation(line: 3258, column: 67, scope: !5772)
!5783 = !DILocation(line: 3258, column: 65, scope: !5772)
!5784 = !DILocation(line: 3258, column: 3, scope: !5772)
!5785 = !DILocation(line: 3260, column: 20, scope: !5764)
!5786 = !DILocation(line: 3260, column: 2, scope: !5764)
!5787 = !DILocation(line: 3260, column: 6, scope: !5764)
!5788 = !DILocation(line: 3260, column: 18, scope: !5764)
!5789 = !DILocation(line: 3261, column: 1, scope: !5764)
!5790 = distinct !DISubprogram(name: "CDDM_lower_num_edges", scope: !1, file: !1, line: 3263, type: !5765, scopeLine: 3264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5791 = !DILocalVariable(name: "dm", arg: 1, scope: !5790, file: !1, line: 3263, type: !1477)
!5792 = !DILocation(line: 3263, column: 40, scope: !5790)
!5793 = !DILocalVariable(name: "numEdges", arg: 2, scope: !5790, file: !1, line: 3263, type: !219)
!5794 = !DILocation(line: 3263, column: 48, scope: !5790)
!5795 = !DILocation(line: 3266, column: 6, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5790, file: !1, line: 3266, column: 6)
!5797 = !DILocation(line: 3266, column: 17, scope: !5796)
!5798 = !DILocation(line: 3266, column: 21, scope: !5796)
!5799 = !DILocation(line: 3266, column: 15, scope: !5796)
!5800 = !DILocation(line: 3266, column: 6, scope: !5790)
!5801 = !DILocation(line: 3267, column: 25, scope: !5796)
!5802 = !DILocation(line: 3267, column: 29, scope: !5796)
!5803 = !DILocation(line: 3267, column: 39, scope: !5796)
!5804 = !DILocation(line: 3267, column: 49, scope: !5796)
!5805 = !DILocation(line: 3267, column: 53, scope: !5796)
!5806 = !DILocation(line: 3267, column: 67, scope: !5796)
!5807 = !DILocation(line: 3267, column: 65, scope: !5796)
!5808 = !DILocation(line: 3267, column: 3, scope: !5796)
!5809 = !DILocation(line: 3269, column: 20, scope: !5790)
!5810 = !DILocation(line: 3269, column: 2, scope: !5790)
!5811 = !DILocation(line: 3269, column: 6, scope: !5790)
!5812 = !DILocation(line: 3269, column: 18, scope: !5790)
!5813 = !DILocation(line: 3270, column: 1, scope: !5790)
!5814 = distinct !DISubprogram(name: "CDDM_lower_num_tessfaces", scope: !1, file: !1, line: 3272, type: !5765, scopeLine: 3273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5815 = !DILocalVariable(name: "dm", arg: 1, scope: !5814, file: !1, line: 3272, type: !1477)
!5816 = !DILocation(line: 3272, column: 44, scope: !5814)
!5817 = !DILocalVariable(name: "numTessFaces", arg: 2, scope: !5814, file: !1, line: 3272, type: !219)
!5818 = !DILocation(line: 3272, column: 52, scope: !5814)
!5819 = !DILocation(line: 3275, column: 6, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5814, file: !1, line: 3275, column: 6)
!5821 = !DILocation(line: 3275, column: 21, scope: !5820)
!5822 = !DILocation(line: 3275, column: 25, scope: !5820)
!5823 = !DILocation(line: 3275, column: 19, scope: !5820)
!5824 = !DILocation(line: 3275, column: 6, scope: !5814)
!5825 = !DILocation(line: 3276, column: 25, scope: !5820)
!5826 = !DILocation(line: 3276, column: 29, scope: !5820)
!5827 = !DILocation(line: 3276, column: 39, scope: !5820)
!5828 = !DILocation(line: 3276, column: 53, scope: !5820)
!5829 = !DILocation(line: 3276, column: 57, scope: !5820)
!5830 = !DILocation(line: 3276, column: 75, scope: !5820)
!5831 = !DILocation(line: 3276, column: 73, scope: !5820)
!5832 = !DILocation(line: 3276, column: 3, scope: !5820)
!5833 = !DILocation(line: 3278, column: 24, scope: !5814)
!5834 = !DILocation(line: 3278, column: 2, scope: !5814)
!5835 = !DILocation(line: 3278, column: 6, scope: !5814)
!5836 = !DILocation(line: 3278, column: 22, scope: !5814)
!5837 = !DILocation(line: 3279, column: 1, scope: !5814)
!5838 = distinct !DISubprogram(name: "CDDM_lower_num_loops", scope: !1, file: !1, line: 3281, type: !5765, scopeLine: 3282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5839 = !DILocalVariable(name: "dm", arg: 1, scope: !5838, file: !1, line: 3281, type: !1477)
!5840 = !DILocation(line: 3281, column: 40, scope: !5838)
!5841 = !DILocalVariable(name: "numLoops", arg: 2, scope: !5838, file: !1, line: 3281, type: !219)
!5842 = !DILocation(line: 3281, column: 48, scope: !5838)
!5843 = !DILocation(line: 3284, column: 6, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5838, file: !1, line: 3284, column: 6)
!5845 = !DILocation(line: 3284, column: 17, scope: !5844)
!5846 = !DILocation(line: 3284, column: 21, scope: !5844)
!5847 = !DILocation(line: 3284, column: 15, scope: !5844)
!5848 = !DILocation(line: 3284, column: 6, scope: !5838)
!5849 = !DILocation(line: 3285, column: 25, scope: !5844)
!5850 = !DILocation(line: 3285, column: 29, scope: !5844)
!5851 = !DILocation(line: 3285, column: 39, scope: !5844)
!5852 = !DILocation(line: 3285, column: 49, scope: !5844)
!5853 = !DILocation(line: 3285, column: 53, scope: !5844)
!5854 = !DILocation(line: 3285, column: 67, scope: !5844)
!5855 = !DILocation(line: 3285, column: 65, scope: !5844)
!5856 = !DILocation(line: 3285, column: 3, scope: !5844)
!5857 = !DILocation(line: 3287, column: 20, scope: !5838)
!5858 = !DILocation(line: 3287, column: 2, scope: !5838)
!5859 = !DILocation(line: 3287, column: 6, scope: !5838)
!5860 = !DILocation(line: 3287, column: 18, scope: !5838)
!5861 = !DILocation(line: 3288, column: 1, scope: !5838)
!5862 = distinct !DISubprogram(name: "CDDM_lower_num_polys", scope: !1, file: !1, line: 3290, type: !5765, scopeLine: 3291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5863 = !DILocalVariable(name: "dm", arg: 1, scope: !5862, file: !1, line: 3290, type: !1477)
!5864 = !DILocation(line: 3290, column: 40, scope: !5862)
!5865 = !DILocalVariable(name: "numPolys", arg: 2, scope: !5862, file: !1, line: 3290, type: !219)
!5866 = !DILocation(line: 3290, column: 48, scope: !5862)
!5867 = !DILocation(line: 3293, column: 6, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5862, file: !1, line: 3293, column: 6)
!5869 = !DILocation(line: 3293, column: 17, scope: !5868)
!5870 = !DILocation(line: 3293, column: 21, scope: !5868)
!5871 = !DILocation(line: 3293, column: 15, scope: !5868)
!5872 = !DILocation(line: 3293, column: 6, scope: !5862)
!5873 = !DILocation(line: 3294, column: 25, scope: !5868)
!5874 = !DILocation(line: 3294, column: 29, scope: !5868)
!5875 = !DILocation(line: 3294, column: 39, scope: !5868)
!5876 = !DILocation(line: 3294, column: 49, scope: !5868)
!5877 = !DILocation(line: 3294, column: 53, scope: !5868)
!5878 = !DILocation(line: 3294, column: 67, scope: !5868)
!5879 = !DILocation(line: 3294, column: 65, scope: !5868)
!5880 = !DILocation(line: 3294, column: 3, scope: !5868)
!5881 = !DILocation(line: 3296, column: 20, scope: !5862)
!5882 = !DILocation(line: 3296, column: 2, scope: !5862)
!5883 = !DILocation(line: 3296, column: 6, scope: !5862)
!5884 = !DILocation(line: 3296, column: 18, scope: !5862)
!5885 = !DILocation(line: 3297, column: 1, scope: !5862)
!5886 = distinct !DISubprogram(name: "CDDM_get_vert", scope: !1, file: !1, line: 3301, type: !5887, scopeLine: 3302, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5887 = !DISubroutineType(types: !5888)
!5888 = !{!570, !1477, !219}
!5889 = !DILocalVariable(name: "dm", arg: 1, scope: !5886, file: !1, line: 3301, type: !1477)
!5890 = !DILocation(line: 3301, column: 35, scope: !5886)
!5891 = !DILocalVariable(name: "index", arg: 2, scope: !5886, file: !1, line: 3301, type: !219)
!5892 = !DILocation(line: 3301, column: 43, scope: !5886)
!5893 = !DILocation(line: 3303, column: 28, scope: !5886)
!5894 = !DILocation(line: 3303, column: 33, scope: !5886)
!5895 = !DILocation(line: 3303, column: 39, scope: !5886)
!5896 = !DILocation(line: 3303, column: 10, scope: !5886)
!5897 = !DILocation(line: 3303, column: 2, scope: !5886)
!5898 = distinct !DISubprogram(name: "CDDM_get_edge", scope: !1, file: !1, line: 3306, type: !5899, scopeLine: 3307, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5899 = !DISubroutineType(types: !5900)
!5900 = !{!1500, !1477, !219}
!5901 = !DILocalVariable(name: "dm", arg: 1, scope: !5898, file: !1, line: 3306, type: !1477)
!5902 = !DILocation(line: 3306, column: 35, scope: !5898)
!5903 = !DILocalVariable(name: "index", arg: 2, scope: !5898, file: !1, line: 3306, type: !219)
!5904 = !DILocation(line: 3306, column: 43, scope: !5898)
!5905 = !DILocation(line: 3308, column: 28, scope: !5898)
!5906 = !DILocation(line: 3308, column: 33, scope: !5898)
!5907 = !DILocation(line: 3308, column: 39, scope: !5898)
!5908 = !DILocation(line: 3308, column: 10, scope: !5898)
!5909 = !DILocation(line: 3308, column: 2, scope: !5898)
!5910 = distinct !DISubprogram(name: "CDDM_get_tessface", scope: !1, file: !1, line: 3311, type: !5911, scopeLine: 3312, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5911 = !DISubroutineType(types: !5912)
!5912 = !{!1512, !1477, !219}
!5913 = !DILocalVariable(name: "dm", arg: 1, scope: !5910, file: !1, line: 3311, type: !1477)
!5914 = !DILocation(line: 3311, column: 39, scope: !5910)
!5915 = !DILocalVariable(name: "index", arg: 2, scope: !5910, file: !1, line: 3311, type: !219)
!5916 = !DILocation(line: 3311, column: 47, scope: !5910)
!5917 = !DILocation(line: 3313, column: 28, scope: !5910)
!5918 = !DILocation(line: 3313, column: 33, scope: !5910)
!5919 = !DILocation(line: 3313, column: 39, scope: !5910)
!5920 = !DILocation(line: 3313, column: 10, scope: !5910)
!5921 = !DILocation(line: 3313, column: 2, scope: !5910)
!5922 = distinct !DISubprogram(name: "CDDM_get_loop", scope: !1, file: !1, line: 3316, type: !5923, scopeLine: 3317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5923 = !DISubroutineType(types: !5924)
!5924 = !{!588, !1477, !219}
!5925 = !DILocalVariable(name: "dm", arg: 1, scope: !5922, file: !1, line: 3316, type: !1477)
!5926 = !DILocation(line: 3316, column: 35, scope: !5922)
!5927 = !DILocalVariable(name: "index", arg: 2, scope: !5922, file: !1, line: 3316, type: !219)
!5928 = !DILocation(line: 3316, column: 43, scope: !5922)
!5929 = !DILocation(line: 3318, column: 28, scope: !5922)
!5930 = !DILocation(line: 3318, column: 33, scope: !5922)
!5931 = !DILocation(line: 3318, column: 39, scope: !5922)
!5932 = !DILocation(line: 3318, column: 10, scope: !5922)
!5933 = !DILocation(line: 3318, column: 2, scope: !5922)
!5934 = distinct !DISubprogram(name: "CDDM_get_poly", scope: !1, file: !1, line: 3321, type: !5935, scopeLine: 3322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5935 = !DISubroutineType(types: !5936)
!5936 = !{!579, !1477, !219}
!5937 = !DILocalVariable(name: "dm", arg: 1, scope: !5934, file: !1, line: 3321, type: !1477)
!5938 = !DILocation(line: 3321, column: 35, scope: !5934)
!5939 = !DILocalVariable(name: "index", arg: 2, scope: !5934, file: !1, line: 3321, type: !219)
!5940 = !DILocation(line: 3321, column: 43, scope: !5934)
!5941 = !DILocation(line: 3323, column: 28, scope: !5934)
!5942 = !DILocation(line: 3323, column: 33, scope: !5934)
!5943 = !DILocation(line: 3323, column: 39, scope: !5934)
!5944 = !DILocation(line: 3323, column: 10, scope: !5934)
!5945 = !DILocation(line: 3323, column: 2, scope: !5934)
!5946 = distinct !DISubprogram(name: "CDDM_get_verts", scope: !1, file: !1, line: 3328, type: !1524, scopeLine: 3329, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5947 = !DILocalVariable(name: "dm", arg: 1, scope: !5946, file: !1, line: 3328, type: !1477)
!5948 = !DILocation(line: 3328, column: 36, scope: !5946)
!5949 = !DILocation(line: 3330, column: 27, scope: !5946)
!5950 = !DILocation(line: 3330, column: 32, scope: !5946)
!5951 = !DILocation(line: 3330, column: 2, scope: !5946)
!5952 = distinct !DISubprogram(name: "CDDM_get_edges", scope: !1, file: !1, line: 3333, type: !1528, scopeLine: 3334, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5953 = !DILocalVariable(name: "dm", arg: 1, scope: !5952, file: !1, line: 3333, type: !1477)
!5954 = !DILocation(line: 3333, column: 36, scope: !5952)
!5955 = !DILocation(line: 3335, column: 27, scope: !5952)
!5956 = !DILocation(line: 3335, column: 32, scope: !5952)
!5957 = !DILocation(line: 3335, column: 2, scope: !5952)
!5958 = distinct !DISubprogram(name: "CDDM_get_tessfaces", scope: !1, file: !1, line: 3338, type: !1532, scopeLine: 3339, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5959 = !DILocalVariable(name: "dm", arg: 1, scope: !5958, file: !1, line: 3338, type: !1477)
!5960 = !DILocation(line: 3338, column: 40, scope: !5958)
!5961 = !DILocation(line: 3340, column: 27, scope: !5958)
!5962 = !DILocation(line: 3340, column: 32, scope: !5958)
!5963 = !DILocation(line: 3340, column: 2, scope: !5958)
!5964 = distinct !DISubprogram(name: "CDDM_tessfaces_to_faces", scope: !1, file: !1, line: 3353, type: !1475, scopeLine: 3354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!5965 = !DILocalVariable(name: "dm", arg: 1, scope: !5964, file: !1, line: 3353, type: !1477)
!5966 = !DILocation(line: 3353, column: 43, scope: !5964)
!5967 = !DILocalVariable(name: "cddm", scope: !5964, file: !1, line: 3356, type: !201)
!5968 = !DILocation(line: 3356, column: 17, scope: !5964)
!5969 = !DILocation(line: 3356, column: 41, scope: !5964)
!5970 = !DILocation(line: 3356, column: 24, scope: !5964)
!5971 = !DILocation(line: 3358, column: 46, scope: !5964)
!5972 = !DILocation(line: 3358, column: 52, scope: !5964)
!5973 = !DILocation(line: 3358, column: 55, scope: !5964)
!5974 = !DILocation(line: 3358, column: 66, scope: !5964)
!5975 = !DILocation(line: 3358, column: 72, scope: !5964)
!5976 = !DILocation(line: 3358, column: 75, scope: !5964)
!5977 = !DILocation(line: 3358, column: 86, scope: !5964)
!5978 = !DILocation(line: 3358, column: 92, scope: !5964)
!5979 = !DILocation(line: 3358, column: 95, scope: !5964)
!5980 = !DILocation(line: 3359, column: 39, scope: !5964)
!5981 = !DILocation(line: 3359, column: 45, scope: !5964)
!5982 = !DILocation(line: 3359, column: 48, scope: !5964)
!5983 = !DILocation(line: 3359, column: 61, scope: !5964)
!5984 = !DILocation(line: 3359, column: 67, scope: !5964)
!5985 = !DILocation(line: 3359, column: 70, scope: !5964)
!5986 = !DILocation(line: 3360, column: 39, scope: !5964)
!5987 = !DILocation(line: 3360, column: 45, scope: !5964)
!5988 = !DILocation(line: 3360, column: 48, scope: !5964)
!5989 = !DILocation(line: 3360, column: 61, scope: !5964)
!5990 = !DILocation(line: 3360, column: 67, scope: !5964)
!5991 = !DILocation(line: 3360, column: 70, scope: !5964)
!5992 = !DILocation(line: 3361, column: 39, scope: !5964)
!5993 = !DILocation(line: 3361, column: 45, scope: !5964)
!5994 = !DILocation(line: 3361, column: 52, scope: !5964)
!5995 = !DILocation(line: 3361, column: 58, scope: !5964)
!5996 = !DILocation(line: 3362, column: 40, scope: !5964)
!5997 = !DILocation(line: 3362, column: 46, scope: !5964)
!5998 = !DILocation(line: 3362, column: 49, scope: !5964)
!5999 = !DILocation(line: 3362, column: 63, scope: !5964)
!6000 = !DILocation(line: 3362, column: 69, scope: !5964)
!6001 = !DILocation(line: 3362, column: 72, scope: !5964)
!6002 = !DILocation(line: 3363, column: 40, scope: !5964)
!6003 = !DILocation(line: 3363, column: 46, scope: !5964)
!6004 = !DILocation(line: 3363, column: 54, scope: !5964)
!6005 = !DILocation(line: 3363, column: 60, scope: !5964)
!6006 = !DILocation(line: 3358, column: 2, scope: !5964)
!6007 = !DILocation(line: 3364, column: 1, scope: !5964)
!6008 = distinct !DISubprogram(name: "CDDM_set_mvert", scope: !1, file: !1, line: 3366, type: !6009, scopeLine: 3367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6009 = !DISubroutineType(types: !6010)
!6010 = !{null, !1477, !1780}
!6011 = !DILocalVariable(name: "dm", arg: 1, scope: !6008, file: !1, line: 3366, type: !1477)
!6012 = !DILocation(line: 3366, column: 34, scope: !6008)
!6013 = !DILocalVariable(name: "mvert", arg: 2, scope: !6008, file: !1, line: 3366, type: !1780)
!6014 = !DILocation(line: 3366, column: 45, scope: !6008)
!6015 = !DILocalVariable(name: "cddm", scope: !6008, file: !1, line: 3368, type: !201)
!6016 = !DILocation(line: 3368, column: 17, scope: !6008)
!6017 = !DILocation(line: 3368, column: 41, scope: !6008)
!6018 = !DILocation(line: 3368, column: 24, scope: !6008)
!6019 = !DILocation(line: 3370, column: 29, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6008, file: !1, line: 3370, column: 6)
!6021 = !DILocation(line: 3370, column: 33, scope: !6020)
!6022 = !DILocation(line: 3370, column: 7, scope: !6020)
!6023 = !DILocation(line: 3370, column: 6, scope: !6008)
!6024 = !DILocation(line: 3371, column: 25, scope: !6020)
!6025 = !DILocation(line: 3371, column: 29, scope: !6020)
!6026 = !DILocation(line: 3371, column: 60, scope: !6020)
!6027 = !DILocation(line: 3371, column: 67, scope: !6020)
!6028 = !DILocation(line: 3371, column: 71, scope: !6020)
!6029 = !DILocation(line: 3371, column: 3, scope: !6020)
!6030 = !DILocation(line: 3373, column: 16, scope: !6008)
!6031 = !DILocation(line: 3373, column: 2, scope: !6008)
!6032 = !DILocation(line: 3373, column: 8, scope: !6008)
!6033 = !DILocation(line: 3373, column: 14, scope: !6008)
!6034 = !DILocation(line: 3374, column: 1, scope: !6008)
!6035 = distinct !DISubprogram(name: "CDDM_set_medge", scope: !1, file: !1, line: 3376, type: !6036, scopeLine: 3377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6036 = !DISubroutineType(types: !6037)
!6037 = !{null, !1477, !1783}
!6038 = !DILocalVariable(name: "dm", arg: 1, scope: !6035, file: !1, line: 3376, type: !1477)
!6039 = !DILocation(line: 3376, column: 34, scope: !6035)
!6040 = !DILocalVariable(name: "medge", arg: 2, scope: !6035, file: !1, line: 3376, type: !1783)
!6041 = !DILocation(line: 3376, column: 45, scope: !6035)
!6042 = !DILocalVariable(name: "cddm", scope: !6035, file: !1, line: 3378, type: !201)
!6043 = !DILocation(line: 3378, column: 17, scope: !6035)
!6044 = !DILocation(line: 3378, column: 41, scope: !6035)
!6045 = !DILocation(line: 3378, column: 24, scope: !6035)
!6046 = !DILocation(line: 3380, column: 29, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6035, file: !1, line: 3380, column: 6)
!6048 = !DILocation(line: 3380, column: 33, scope: !6047)
!6049 = !DILocation(line: 3380, column: 7, scope: !6047)
!6050 = !DILocation(line: 3380, column: 6, scope: !6035)
!6051 = !DILocation(line: 3381, column: 25, scope: !6047)
!6052 = !DILocation(line: 3381, column: 29, scope: !6047)
!6053 = !DILocation(line: 3381, column: 60, scope: !6047)
!6054 = !DILocation(line: 3381, column: 67, scope: !6047)
!6055 = !DILocation(line: 3381, column: 71, scope: !6047)
!6056 = !DILocation(line: 3381, column: 3, scope: !6047)
!6057 = !DILocation(line: 3383, column: 16, scope: !6035)
!6058 = !DILocation(line: 3383, column: 2, scope: !6035)
!6059 = !DILocation(line: 3383, column: 8, scope: !6035)
!6060 = !DILocation(line: 3383, column: 14, scope: !6035)
!6061 = !DILocation(line: 3384, column: 1, scope: !6035)
!6062 = distinct !DISubprogram(name: "CDDM_set_mface", scope: !1, file: !1, line: 3386, type: !6063, scopeLine: 3387, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6063 = !DISubroutineType(types: !6064)
!6064 = !{null, !1477, !1786}
!6065 = !DILocalVariable(name: "dm", arg: 1, scope: !6062, file: !1, line: 3386, type: !1477)
!6066 = !DILocation(line: 3386, column: 34, scope: !6062)
!6067 = !DILocalVariable(name: "mface", arg: 2, scope: !6062, file: !1, line: 3386, type: !1786)
!6068 = !DILocation(line: 3386, column: 45, scope: !6062)
!6069 = !DILocalVariable(name: "cddm", scope: !6062, file: !1, line: 3388, type: !201)
!6070 = !DILocation(line: 3388, column: 17, scope: !6062)
!6071 = !DILocation(line: 3388, column: 41, scope: !6062)
!6072 = !DILocation(line: 3388, column: 24, scope: !6062)
!6073 = !DILocation(line: 3390, column: 29, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !6062, file: !1, line: 3390, column: 6)
!6075 = !DILocation(line: 3390, column: 33, scope: !6074)
!6076 = !DILocation(line: 3390, column: 7, scope: !6074)
!6077 = !DILocation(line: 3390, column: 6, scope: !6062)
!6078 = !DILocation(line: 3391, column: 25, scope: !6074)
!6079 = !DILocation(line: 3391, column: 29, scope: !6074)
!6080 = !DILocation(line: 3391, column: 60, scope: !6074)
!6081 = !DILocation(line: 3391, column: 67, scope: !6074)
!6082 = !DILocation(line: 3391, column: 71, scope: !6074)
!6083 = !DILocation(line: 3391, column: 3, scope: !6074)
!6084 = !DILocation(line: 3393, column: 16, scope: !6062)
!6085 = !DILocation(line: 3393, column: 2, scope: !6062)
!6086 = !DILocation(line: 3393, column: 8, scope: !6062)
!6087 = !DILocation(line: 3393, column: 14, scope: !6062)
!6088 = !DILocation(line: 3394, column: 1, scope: !6062)
!6089 = distinct !DISubprogram(name: "CDDM_set_mloop", scope: !1, file: !1, line: 3396, type: !6090, scopeLine: 3397, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6090 = !DISubroutineType(types: !6091)
!6091 = !{null, !1477, !1789}
!6092 = !DILocalVariable(name: "dm", arg: 1, scope: !6089, file: !1, line: 3396, type: !1477)
!6093 = !DILocation(line: 3396, column: 34, scope: !6089)
!6094 = !DILocalVariable(name: "mloop", arg: 2, scope: !6089, file: !1, line: 3396, type: !1789)
!6095 = !DILocation(line: 3396, column: 45, scope: !6089)
!6096 = !DILocalVariable(name: "cddm", scope: !6089, file: !1, line: 3398, type: !201)
!6097 = !DILocation(line: 3398, column: 17, scope: !6089)
!6098 = !DILocation(line: 3398, column: 41, scope: !6089)
!6099 = !DILocation(line: 3398, column: 24, scope: !6089)
!6100 = !DILocation(line: 3400, column: 29, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6089, file: !1, line: 3400, column: 6)
!6102 = !DILocation(line: 3400, column: 33, scope: !6101)
!6103 = !DILocation(line: 3400, column: 7, scope: !6101)
!6104 = !DILocation(line: 3400, column: 6, scope: !6089)
!6105 = !DILocation(line: 3401, column: 25, scope: !6101)
!6106 = !DILocation(line: 3401, column: 29, scope: !6101)
!6107 = !DILocation(line: 3401, column: 60, scope: !6101)
!6108 = !DILocation(line: 3401, column: 67, scope: !6101)
!6109 = !DILocation(line: 3401, column: 71, scope: !6101)
!6110 = !DILocation(line: 3401, column: 3, scope: !6101)
!6111 = !DILocation(line: 3403, column: 16, scope: !6089)
!6112 = !DILocation(line: 3403, column: 2, scope: !6089)
!6113 = !DILocation(line: 3403, column: 8, scope: !6089)
!6114 = !DILocation(line: 3403, column: 14, scope: !6089)
!6115 = !DILocation(line: 3404, column: 1, scope: !6089)
!6116 = distinct !DISubprogram(name: "CDDM_set_mpoly", scope: !1, file: !1, line: 3406, type: !6117, scopeLine: 3407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6117 = !DISubroutineType(types: !6118)
!6118 = !{null, !1477, !1792}
!6119 = !DILocalVariable(name: "dm", arg: 1, scope: !6116, file: !1, line: 3406, type: !1477)
!6120 = !DILocation(line: 3406, column: 34, scope: !6116)
!6121 = !DILocalVariable(name: "mpoly", arg: 2, scope: !6116, file: !1, line: 3406, type: !1792)
!6122 = !DILocation(line: 3406, column: 45, scope: !6116)
!6123 = !DILocalVariable(name: "cddm", scope: !6116, file: !1, line: 3408, type: !201)
!6124 = !DILocation(line: 3408, column: 17, scope: !6116)
!6125 = !DILocation(line: 3408, column: 41, scope: !6116)
!6126 = !DILocation(line: 3408, column: 24, scope: !6116)
!6127 = !DILocation(line: 3410, column: 29, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !6116, file: !1, line: 3410, column: 6)
!6129 = !DILocation(line: 3410, column: 33, scope: !6128)
!6130 = !DILocation(line: 3410, column: 7, scope: !6128)
!6131 = !DILocation(line: 3410, column: 6, scope: !6116)
!6132 = !DILocation(line: 3411, column: 25, scope: !6128)
!6133 = !DILocation(line: 3411, column: 29, scope: !6128)
!6134 = !DILocation(line: 3411, column: 60, scope: !6128)
!6135 = !DILocation(line: 3411, column: 67, scope: !6128)
!6136 = !DILocation(line: 3411, column: 71, scope: !6128)
!6137 = !DILocation(line: 3411, column: 3, scope: !6128)
!6138 = !DILocation(line: 3413, column: 16, scope: !6116)
!6139 = !DILocation(line: 3413, column: 2, scope: !6116)
!6140 = !DILocation(line: 3413, column: 8, scope: !6116)
!6141 = !DILocation(line: 3413, column: 14, scope: !6116)
!6142 = !DILocation(line: 3414, column: 1, scope: !6116)
!6143 = distinct !DISubprogram(name: "cdDM_getMinMax", scope: !1, file: !1, line: 173, type: !1673, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6144 = !DILocalVariable(name: "dm", arg: 1, scope: !6143, file: !1, line: 173, type: !1477)
!6145 = !DILocation(line: 173, column: 41, scope: !6143)
!6146 = !DILocalVariable(name: "r_min", arg: 2, scope: !6143, file: !1, line: 173, type: !601)
!6147 = !DILocation(line: 173, column: 51, scope: !6143)
!6148 = !DILocalVariable(name: "r_max", arg: 3, scope: !6143, file: !1, line: 173, type: !601)
!6149 = !DILocation(line: 173, column: 67, scope: !6143)
!6150 = !DILocalVariable(name: "cddm", scope: !6143, file: !1, line: 175, type: !201)
!6151 = !DILocation(line: 175, column: 17, scope: !6143)
!6152 = !DILocation(line: 175, column: 42, scope: !6143)
!6153 = !DILocation(line: 175, column: 24, scope: !6143)
!6154 = !DILocalVariable(name: "i", scope: !6143, file: !1, line: 176, type: !219)
!6155 = !DILocation(line: 176, column: 6, scope: !6143)
!6156 = !DILocation(line: 178, column: 6, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6143, file: !1, line: 178, column: 6)
!6158 = !DILocation(line: 178, column: 10, scope: !6157)
!6159 = !DILocation(line: 178, column: 6, scope: !6143)
!6160 = !DILocation(line: 179, column: 10, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6162, file: !1, line: 179, column: 3)
!6162 = distinct !DILexicalBlock(scope: !6157, file: !1, line: 178, column: 23)
!6163 = !DILocation(line: 179, column: 8, scope: !6161)
!6164 = !DILocation(line: 179, column: 15, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6161, file: !1, line: 179, column: 3)
!6166 = !DILocation(line: 179, column: 19, scope: !6165)
!6167 = !DILocation(line: 179, column: 23, scope: !6165)
!6168 = !DILocation(line: 179, column: 17, scope: !6165)
!6169 = !DILocation(line: 179, column: 3, scope: !6161)
!6170 = !DILocation(line: 180, column: 19, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6165, file: !1, line: 179, column: 41)
!6172 = !DILocation(line: 180, column: 26, scope: !6171)
!6173 = !DILocation(line: 180, column: 33, scope: !6171)
!6174 = !DILocation(line: 180, column: 39, scope: !6171)
!6175 = !DILocation(line: 180, column: 45, scope: !6171)
!6176 = !DILocation(line: 180, column: 48, scope: !6171)
!6177 = !DILocation(line: 180, column: 4, scope: !6171)
!6178 = !DILocation(line: 181, column: 3, scope: !6171)
!6179 = !DILocation(line: 179, column: 37, scope: !6165)
!6180 = !DILocation(line: 179, column: 3, scope: !6165)
!6181 = distinct !{!6181, !6169, !6182}
!6182 = !DILocation(line: 181, column: 3, scope: !6161)
!6183 = !DILocation(line: 182, column: 2, scope: !6162)
!6184 = !DILocation(line: 184, column: 11, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6157, file: !1, line: 183, column: 7)
!6186 = !DILocation(line: 184, column: 3, scope: !6185)
!6187 = !DILocation(line: 185, column: 11, scope: !6185)
!6188 = !DILocation(line: 185, column: 3, scope: !6185)
!6189 = !DILocation(line: 187, column: 1, scope: !6143)
!6190 = distinct !DISubprogram(name: "cdDM_getNumVerts", scope: !1, file: !1, line: 93, type: !1486, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6191 = !DILocalVariable(name: "dm", arg: 1, scope: !6190, file: !1, line: 93, type: !1477)
!6192 = !DILocation(line: 93, column: 42, scope: !6190)
!6193 = !DILocation(line: 95, column: 9, scope: !6190)
!6194 = !DILocation(line: 95, column: 13, scope: !6190)
!6195 = !DILocation(line: 95, column: 2, scope: !6190)
!6196 = distinct !DISubprogram(name: "cdDM_getNumEdges", scope: !1, file: !1, line: 98, type: !1486, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6197 = !DILocalVariable(name: "dm", arg: 1, scope: !6196, file: !1, line: 98, type: !1477)
!6198 = !DILocation(line: 98, column: 42, scope: !6196)
!6199 = !DILocation(line: 100, column: 9, scope: !6196)
!6200 = !DILocation(line: 100, column: 13, scope: !6196)
!6201 = !DILocation(line: 100, column: 2, scope: !6196)
!6202 = distinct !DISubprogram(name: "cdDM_getNumTessFaces", scope: !1, file: !1, line: 103, type: !1486, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6203 = !DILocalVariable(name: "dm", arg: 1, scope: !6202, file: !1, line: 103, type: !1477)
!6204 = !DILocation(line: 103, column: 46, scope: !6202)
!6205 = !DILocation(line: 112, column: 9, scope: !6202)
!6206 = !DILocation(line: 112, column: 13, scope: !6202)
!6207 = !DILocation(line: 112, column: 2, scope: !6202)
!6208 = distinct !DISubprogram(name: "cdDM_getNumLoops", scope: !1, file: !1, line: 115, type: !1486, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6209 = !DILocalVariable(name: "dm", arg: 1, scope: !6208, file: !1, line: 115, type: !1477)
!6210 = !DILocation(line: 115, column: 42, scope: !6208)
!6211 = !DILocation(line: 117, column: 9, scope: !6208)
!6212 = !DILocation(line: 117, column: 13, scope: !6208)
!6213 = !DILocation(line: 117, column: 2, scope: !6208)
!6214 = distinct !DISubprogram(name: "cdDM_getNumPolys", scope: !1, file: !1, line: 120, type: !1486, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6215 = !DILocalVariable(name: "dm", arg: 1, scope: !6214, file: !1, line: 120, type: !1477)
!6216 = !DILocation(line: 120, column: 42, scope: !6214)
!6217 = !DILocation(line: 122, column: 9, scope: !6214)
!6218 = !DILocation(line: 122, column: 13, scope: !6214)
!6219 = !DILocation(line: 122, column: 2, scope: !6214)
!6220 = distinct !DISubprogram(name: "cdDM_getVert", scope: !1, file: !1, line: 125, type: !6221, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6221 = !DISubroutineType(types: !6222)
!6222 = !{null, !1477, !219, !1780}
!6223 = !DILocalVariable(name: "dm", arg: 1, scope: !6220, file: !1, line: 125, type: !1477)
!6224 = !DILocation(line: 125, column: 39, scope: !6220)
!6225 = !DILocalVariable(name: "index", arg: 2, scope: !6220, file: !1, line: 125, type: !219)
!6226 = !DILocation(line: 125, column: 47, scope: !6220)
!6227 = !DILocalVariable(name: "r_vert", arg: 3, scope: !6220, file: !1, line: 125, type: !1780)
!6228 = !DILocation(line: 125, column: 61, scope: !6220)
!6229 = !DILocalVariable(name: "cddm", scope: !6220, file: !1, line: 127, type: !201)
!6230 = !DILocation(line: 127, column: 17, scope: !6220)
!6231 = !DILocation(line: 127, column: 41, scope: !6220)
!6232 = !DILocation(line: 127, column: 24, scope: !6220)
!6233 = !DILocation(line: 128, column: 3, scope: !6220)
!6234 = !DILocation(line: 128, column: 12, scope: !6220)
!6235 = !DILocation(line: 128, column: 18, scope: !6220)
!6236 = !DILocation(line: 128, column: 24, scope: !6220)
!6237 = !DILocation(line: 129, column: 1, scope: !6220)
!6238 = distinct !DISubprogram(name: "cdDM_getEdge", scope: !1, file: !1, line: 131, type: !6239, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6239 = !DISubroutineType(types: !6240)
!6240 = !{null, !1477, !219, !1783}
!6241 = !DILocalVariable(name: "dm", arg: 1, scope: !6238, file: !1, line: 131, type: !1477)
!6242 = !DILocation(line: 131, column: 39, scope: !6238)
!6243 = !DILocalVariable(name: "index", arg: 2, scope: !6238, file: !1, line: 131, type: !219)
!6244 = !DILocation(line: 131, column: 47, scope: !6238)
!6245 = !DILocalVariable(name: "r_edge", arg: 3, scope: !6238, file: !1, line: 131, type: !1783)
!6246 = !DILocation(line: 131, column: 61, scope: !6238)
!6247 = !DILocalVariable(name: "cddm", scope: !6238, file: !1, line: 133, type: !201)
!6248 = !DILocation(line: 133, column: 17, scope: !6238)
!6249 = !DILocation(line: 133, column: 41, scope: !6238)
!6250 = !DILocation(line: 133, column: 24, scope: !6238)
!6251 = !DILocation(line: 134, column: 3, scope: !6238)
!6252 = !DILocation(line: 134, column: 12, scope: !6238)
!6253 = !DILocation(line: 134, column: 18, scope: !6238)
!6254 = !DILocation(line: 134, column: 24, scope: !6238)
!6255 = !DILocation(line: 135, column: 1, scope: !6238)
!6256 = distinct !DISubprogram(name: "cdDM_getTessFace", scope: !1, file: !1, line: 137, type: !6257, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6257 = !DISubroutineType(types: !6258)
!6258 = !{null, !1477, !219, !1786}
!6259 = !DILocalVariable(name: "dm", arg: 1, scope: !6256, file: !1, line: 137, type: !1477)
!6260 = !DILocation(line: 137, column: 43, scope: !6256)
!6261 = !DILocalVariable(name: "index", arg: 2, scope: !6256, file: !1, line: 137, type: !219)
!6262 = !DILocation(line: 137, column: 51, scope: !6256)
!6263 = !DILocalVariable(name: "r_face", arg: 3, scope: !6256, file: !1, line: 137, type: !1786)
!6264 = !DILocation(line: 137, column: 65, scope: !6256)
!6265 = !DILocalVariable(name: "cddm", scope: !6256, file: !1, line: 139, type: !201)
!6266 = !DILocation(line: 139, column: 17, scope: !6256)
!6267 = !DILocation(line: 139, column: 41, scope: !6256)
!6268 = !DILocation(line: 139, column: 24, scope: !6256)
!6269 = !DILocation(line: 140, column: 3, scope: !6256)
!6270 = !DILocation(line: 140, column: 12, scope: !6256)
!6271 = !DILocation(line: 140, column: 18, scope: !6256)
!6272 = !DILocation(line: 140, column: 24, scope: !6256)
!6273 = !DILocation(line: 141, column: 1, scope: !6256)
!6274 = distinct !DISubprogram(name: "cdDM_copyVertArray", scope: !1, file: !1, line: 143, type: !6009, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6275 = !DILocalVariable(name: "dm", arg: 1, scope: !6274, file: !1, line: 143, type: !1477)
!6276 = !DILocation(line: 143, column: 45, scope: !6274)
!6277 = !DILocalVariable(name: "r_vert", arg: 2, scope: !6274, file: !1, line: 143, type: !1780)
!6278 = !DILocation(line: 143, column: 56, scope: !6274)
!6279 = !DILocalVariable(name: "cddm", scope: !6274, file: !1, line: 145, type: !201)
!6280 = !DILocation(line: 145, column: 17, scope: !6274)
!6281 = !DILocation(line: 145, column: 41, scope: !6274)
!6282 = !DILocation(line: 145, column: 24, scope: !6274)
!6283 = !DILocation(line: 146, column: 9, scope: !6274)
!6284 = !DILocation(line: 146, column: 2, scope: !6274)
!6285 = !DILocation(line: 146, column: 17, scope: !6274)
!6286 = !DILocation(line: 146, column: 23, scope: !6274)
!6287 = !DILocation(line: 146, column: 48, scope: !6274)
!6288 = !DILocation(line: 146, column: 52, scope: !6274)
!6289 = !DILocation(line: 146, column: 46, scope: !6274)
!6290 = !DILocation(line: 147, column: 1, scope: !6274)
!6291 = distinct !DISubprogram(name: "cdDM_copyEdgeArray", scope: !1, file: !1, line: 149, type: !6036, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6292 = !DILocalVariable(name: "dm", arg: 1, scope: !6291, file: !1, line: 149, type: !1477)
!6293 = !DILocation(line: 149, column: 45, scope: !6291)
!6294 = !DILocalVariable(name: "r_edge", arg: 2, scope: !6291, file: !1, line: 149, type: !1783)
!6295 = !DILocation(line: 149, column: 56, scope: !6291)
!6296 = !DILocalVariable(name: "cddm", scope: !6291, file: !1, line: 151, type: !201)
!6297 = !DILocation(line: 151, column: 17, scope: !6291)
!6298 = !DILocation(line: 151, column: 41, scope: !6291)
!6299 = !DILocation(line: 151, column: 24, scope: !6291)
!6300 = !DILocation(line: 152, column: 9, scope: !6291)
!6301 = !DILocation(line: 152, column: 2, scope: !6291)
!6302 = !DILocation(line: 152, column: 17, scope: !6291)
!6303 = !DILocation(line: 152, column: 23, scope: !6291)
!6304 = !DILocation(line: 152, column: 48, scope: !6291)
!6305 = !DILocation(line: 152, column: 52, scope: !6291)
!6306 = !DILocation(line: 152, column: 46, scope: !6291)
!6307 = !DILocation(line: 153, column: 1, scope: !6291)
!6308 = distinct !DISubprogram(name: "cdDM_copyTessFaceArray", scope: !1, file: !1, line: 155, type: !6063, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6309 = !DILocalVariable(name: "dm", arg: 1, scope: !6308, file: !1, line: 155, type: !1477)
!6310 = !DILocation(line: 155, column: 49, scope: !6308)
!6311 = !DILocalVariable(name: "r_face", arg: 2, scope: !6308, file: !1, line: 155, type: !1786)
!6312 = !DILocation(line: 155, column: 60, scope: !6308)
!6313 = !DILocalVariable(name: "cddm", scope: !6308, file: !1, line: 157, type: !201)
!6314 = !DILocation(line: 157, column: 17, scope: !6308)
!6315 = !DILocation(line: 157, column: 41, scope: !6308)
!6316 = !DILocation(line: 157, column: 24, scope: !6308)
!6317 = !DILocation(line: 158, column: 9, scope: !6308)
!6318 = !DILocation(line: 158, column: 2, scope: !6308)
!6319 = !DILocation(line: 158, column: 17, scope: !6308)
!6320 = !DILocation(line: 158, column: 23, scope: !6308)
!6321 = !DILocation(line: 158, column: 48, scope: !6308)
!6322 = !DILocation(line: 158, column: 52, scope: !6308)
!6323 = !DILocation(line: 158, column: 46, scope: !6308)
!6324 = !DILocation(line: 159, column: 1, scope: !6308)
!6325 = distinct !DISubprogram(name: "cdDM_copyLoopArray", scope: !1, file: !1, line: 161, type: !6090, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6326 = !DILocalVariable(name: "dm", arg: 1, scope: !6325, file: !1, line: 161, type: !1477)
!6327 = !DILocation(line: 161, column: 45, scope: !6325)
!6328 = !DILocalVariable(name: "r_loop", arg: 2, scope: !6325, file: !1, line: 161, type: !1789)
!6329 = !DILocation(line: 161, column: 56, scope: !6325)
!6330 = !DILocalVariable(name: "cddm", scope: !6325, file: !1, line: 163, type: !201)
!6331 = !DILocation(line: 163, column: 17, scope: !6325)
!6332 = !DILocation(line: 163, column: 41, scope: !6325)
!6333 = !DILocation(line: 163, column: 24, scope: !6325)
!6334 = !DILocation(line: 164, column: 9, scope: !6325)
!6335 = !DILocation(line: 164, column: 2, scope: !6325)
!6336 = !DILocation(line: 164, column: 17, scope: !6325)
!6337 = !DILocation(line: 164, column: 23, scope: !6325)
!6338 = !DILocation(line: 164, column: 48, scope: !6325)
!6339 = !DILocation(line: 164, column: 52, scope: !6325)
!6340 = !DILocation(line: 164, column: 46, scope: !6325)
!6341 = !DILocation(line: 165, column: 1, scope: !6325)
!6342 = distinct !DISubprogram(name: "cdDM_copyPolyArray", scope: !1, file: !1, line: 167, type: !6117, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6343 = !DILocalVariable(name: "dm", arg: 1, scope: !6342, file: !1, line: 167, type: !1477)
!6344 = !DILocation(line: 167, column: 45, scope: !6342)
!6345 = !DILocalVariable(name: "r_poly", arg: 2, scope: !6342, file: !1, line: 167, type: !1792)
!6346 = !DILocation(line: 167, column: 56, scope: !6342)
!6347 = !DILocalVariable(name: "cddm", scope: !6342, file: !1, line: 169, type: !201)
!6348 = !DILocation(line: 169, column: 17, scope: !6342)
!6349 = !DILocation(line: 169, column: 41, scope: !6342)
!6350 = !DILocation(line: 169, column: 24, scope: !6342)
!6351 = !DILocation(line: 170, column: 9, scope: !6342)
!6352 = !DILocation(line: 170, column: 2, scope: !6342)
!6353 = !DILocation(line: 170, column: 17, scope: !6342)
!6354 = !DILocation(line: 170, column: 23, scope: !6342)
!6355 = !DILocation(line: 170, column: 48, scope: !6342)
!6356 = !DILocation(line: 170, column: 52, scope: !6342)
!6357 = !DILocation(line: 170, column: 46, scope: !6342)
!6358 = !DILocation(line: 171, column: 1, scope: !6342)
!6359 = distinct !DISubprogram(name: "cdDM_getVertCos", scope: !1, file: !1, line: 196, type: !1681, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6360 = !DILocalVariable(name: "dm", arg: 1, scope: !6359, file: !1, line: 196, type: !1477)
!6361 = !DILocation(line: 196, column: 42, scope: !6359)
!6362 = !DILocalVariable(name: "r_cos", arg: 2, scope: !6359, file: !1, line: 196, type: !596)
!6363 = !DILocation(line: 196, column: 54, scope: !6359)
!6364 = !DILocalVariable(name: "mv", scope: !6359, file: !1, line: 198, type: !1780)
!6365 = !DILocation(line: 198, column: 9, scope: !6359)
!6366 = !DILocation(line: 198, column: 29, scope: !6359)
!6367 = !DILocation(line: 198, column: 14, scope: !6359)
!6368 = !DILocalVariable(name: "i", scope: !6359, file: !1, line: 199, type: !219)
!6369 = !DILocation(line: 199, column: 6, scope: !6359)
!6370 = !DILocation(line: 201, column: 9, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6359, file: !1, line: 201, column: 2)
!6372 = !DILocation(line: 201, column: 7, scope: !6371)
!6373 = !DILocation(line: 201, column: 14, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6371, file: !1, line: 201, column: 2)
!6375 = !DILocation(line: 201, column: 18, scope: !6374)
!6376 = !DILocation(line: 201, column: 22, scope: !6374)
!6377 = !DILocation(line: 201, column: 16, scope: !6374)
!6378 = !DILocation(line: 201, column: 2, scope: !6371)
!6379 = !DILocation(line: 202, column: 14, scope: !6374)
!6380 = !DILocation(line: 202, column: 20, scope: !6374)
!6381 = !DILocation(line: 202, column: 24, scope: !6374)
!6382 = !DILocation(line: 202, column: 28, scope: !6374)
!6383 = !DILocation(line: 202, column: 3, scope: !6374)
!6384 = !DILocation(line: 201, column: 36, scope: !6374)
!6385 = !DILocation(line: 201, column: 42, scope: !6374)
!6386 = !DILocation(line: 201, column: 2, scope: !6374)
!6387 = distinct !{!6387, !6378, !6388}
!6388 = !DILocation(line: 202, column: 30, scope: !6371)
!6389 = !DILocation(line: 203, column: 1, scope: !6359)
!6390 = distinct !DISubprogram(name: "cdDM_getVertCo", scope: !1, file: !1, line: 189, type: !1677, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6391 = !DILocalVariable(name: "dm", arg: 1, scope: !6390, file: !1, line: 189, type: !1477)
!6392 = !DILocation(line: 189, column: 41, scope: !6390)
!6393 = !DILocalVariable(name: "index", arg: 2, scope: !6390, file: !1, line: 189, type: !219)
!6394 = !DILocation(line: 189, column: 49, scope: !6390)
!6395 = !DILocalVariable(name: "r_co", arg: 3, scope: !6390, file: !1, line: 189, type: !601)
!6396 = !DILocation(line: 189, column: 62, scope: !6390)
!6397 = !DILocalVariable(name: "cddm", scope: !6390, file: !1, line: 191, type: !201)
!6398 = !DILocation(line: 191, column: 17, scope: !6390)
!6399 = !DILocation(line: 191, column: 42, scope: !6390)
!6400 = !DILocation(line: 191, column: 24, scope: !6390)
!6401 = !DILocation(line: 193, column: 13, scope: !6390)
!6402 = !DILocation(line: 193, column: 19, scope: !6390)
!6403 = !DILocation(line: 193, column: 25, scope: !6390)
!6404 = !DILocation(line: 193, column: 31, scope: !6390)
!6405 = !DILocation(line: 193, column: 38, scope: !6390)
!6406 = !DILocation(line: 193, column: 2, scope: !6390)
!6407 = !DILocation(line: 194, column: 1, scope: !6390)
!6408 = distinct !DISubprogram(name: "cdDM_getVertNo", scope: !1, file: !1, line: 205, type: !1677, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6409 = !DILocalVariable(name: "dm", arg: 1, scope: !6408, file: !1, line: 205, type: !1477)
!6410 = !DILocation(line: 205, column: 41, scope: !6408)
!6411 = !DILocalVariable(name: "index", arg: 2, scope: !6408, file: !1, line: 205, type: !219)
!6412 = !DILocation(line: 205, column: 49, scope: !6408)
!6413 = !DILocalVariable(name: "r_no", arg: 3, scope: !6408, file: !1, line: 205, type: !601)
!6414 = !DILocation(line: 205, column: 62, scope: !6408)
!6415 = !DILocalVariable(name: "cddm", scope: !6408, file: !1, line: 207, type: !201)
!6416 = !DILocation(line: 207, column: 17, scope: !6408)
!6417 = !DILocation(line: 207, column: 42, scope: !6408)
!6418 = !DILocation(line: 207, column: 24, scope: !6408)
!6419 = !DILocation(line: 208, column: 27, scope: !6408)
!6420 = !DILocation(line: 208, column: 33, scope: !6408)
!6421 = !DILocation(line: 208, column: 39, scope: !6408)
!6422 = !DILocation(line: 208, column: 45, scope: !6408)
!6423 = !DILocation(line: 208, column: 52, scope: !6408)
!6424 = !DILocation(line: 208, column: 2, scope: !6408)
!6425 = !DILocation(line: 209, column: 1, scope: !6408)
!6426 = distinct !DISubprogram(name: "cdDM_getPBVH", scope: !1, file: !1, line: 263, type: !6427, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6427 = !DISubroutineType(types: !6428)
!6428 = !{!6429, !2526, !1477}
!6429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6430, size: 64)
!6430 = !DIDerivedType(tag: DW_TAG_typedef, name: "PBVH", file: !156, line: 46, baseType: !776)
!6431 = !DILocalVariable(name: "ob", arg: 1, scope: !6426, file: !1, line: 263, type: !2526)
!6432 = !DILocation(line: 263, column: 35, scope: !6426)
!6433 = !DILocalVariable(name: "dm", arg: 2, scope: !6426, file: !1, line: 263, type: !1477)
!6434 = !DILocation(line: 263, column: 52, scope: !6426)
!6435 = !DILocalVariable(name: "cddm", scope: !6426, file: !1, line: 265, type: !201)
!6436 = !DILocation(line: 265, column: 17, scope: !6426)
!6437 = !DILocation(line: 265, column: 42, scope: !6426)
!6438 = !DILocation(line: 265, column: 24, scope: !6426)
!6439 = !DILocation(line: 267, column: 7, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6426, file: !1, line: 267, column: 6)
!6441 = !DILocation(line: 267, column: 6, scope: !6426)
!6442 = !DILocation(line: 268, column: 3, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6440, file: !1, line: 267, column: 11)
!6444 = !DILocation(line: 268, column: 9, scope: !6443)
!6445 = !DILocation(line: 268, column: 14, scope: !6443)
!6446 = !DILocation(line: 269, column: 3, scope: !6443)
!6447 = !DILocation(line: 272, column: 7, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6426, file: !1, line: 272, column: 6)
!6449 = !DILocation(line: 272, column: 11, scope: !6448)
!6450 = !DILocation(line: 272, column: 6, scope: !6426)
!6451 = !DILocation(line: 273, column: 3, scope: !6448)
!6452 = !DILocation(line: 275, column: 6, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6426, file: !1, line: 275, column: 6)
!6454 = !DILocation(line: 275, column: 10, scope: !6453)
!6455 = !DILocation(line: 275, column: 18, scope: !6453)
!6456 = !DILocation(line: 275, column: 6, scope: !6426)
!6457 = !DILocation(line: 276, column: 16, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6453, file: !1, line: 275, column: 24)
!6459 = !DILocation(line: 276, column: 20, scope: !6458)
!6460 = !DILocation(line: 276, column: 28, scope: !6458)
!6461 = !DILocation(line: 276, column: 3, scope: !6458)
!6462 = !DILocation(line: 276, column: 9, scope: !6458)
!6463 = !DILocation(line: 276, column: 14, scope: !6458)
!6464 = !DILocation(line: 277, column: 35, scope: !6458)
!6465 = !DILocation(line: 277, column: 39, scope: !6458)
!6466 = !DILocation(line: 277, column: 21, scope: !6458)
!6467 = !DILocation(line: 277, column: 3, scope: !6458)
!6468 = !DILocation(line: 277, column: 9, scope: !6458)
!6469 = !DILocation(line: 277, column: 19, scope: !6458)
!6470 = !DILocation(line: 278, column: 2, scope: !6458)
!6471 = !DILocation(line: 281, column: 7, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6426, file: !1, line: 281, column: 6)
!6473 = !DILocation(line: 281, column: 13, scope: !6472)
!6474 = !DILocation(line: 281, column: 18, scope: !6472)
!6475 = !DILocation(line: 281, column: 21, scope: !6472)
!6476 = !DILocation(line: 281, column: 25, scope: !6472)
!6477 = !DILocation(line: 281, column: 33, scope: !6472)
!6478 = !DILocation(line: 281, column: 6, scope: !6426)
!6479 = !DILocation(line: 282, column: 16, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6472, file: !1, line: 281, column: 37)
!6481 = !DILocation(line: 282, column: 3, scope: !6480)
!6482 = !DILocation(line: 282, column: 9, scope: !6480)
!6483 = !DILocation(line: 282, column: 14, scope: !6480)
!6484 = !DILocation(line: 283, column: 3, scope: !6480)
!6485 = !DILocation(line: 283, column: 9, scope: !6480)
!6486 = !DILocation(line: 283, column: 19, scope: !6480)
!6487 = !DILocation(line: 285, column: 24, scope: !6480)
!6488 = !DILocation(line: 285, column: 30, scope: !6480)
!6489 = !DILocation(line: 285, column: 36, scope: !6480)
!6490 = !DILocation(line: 285, column: 40, scope: !6480)
!6491 = !DILocation(line: 285, column: 48, scope: !6480)
!6492 = !DILocation(line: 286, column: 24, scope: !6480)
!6493 = !DILocation(line: 286, column: 28, scope: !6480)
!6494 = !DILocation(line: 286, column: 36, scope: !6480)
!6495 = !DILocation(line: 287, column: 24, scope: !6480)
!6496 = !DILocation(line: 287, column: 28, scope: !6480)
!6497 = !DILocation(line: 287, column: 36, scope: !6480)
!6498 = !DILocation(line: 287, column: 44, scope: !6480)
!6499 = !DILocation(line: 287, column: 48, scope: !6480)
!6500 = !DILocation(line: 287, column: 56, scope: !6480)
!6501 = !DILocation(line: 288, column: 24, scope: !6480)
!6502 = !DILocation(line: 288, column: 28, scope: !6480)
!6503 = !DILocation(line: 288, column: 36, scope: !6480)
!6504 = !DILocation(line: 285, column: 3, scope: !6480)
!6505 = !DILocation(line: 290, column: 31, scope: !6480)
!6506 = !DILocation(line: 290, column: 37, scope: !6480)
!6507 = !DILocation(line: 290, column: 43, scope: !6480)
!6508 = !DILocation(line: 290, column: 47, scope: !6480)
!6509 = !DILocation(line: 290, column: 55, scope: !6480)
!6510 = !DILocation(line: 290, column: 3, scope: !6480)
!6511 = !DILocation(line: 291, column: 2, scope: !6480)
!6512 = !DILocation(line: 297, column: 7, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6426, file: !1, line: 297, column: 6)
!6514 = !DILocation(line: 297, column: 13, scope: !6513)
!6515 = !DILocation(line: 297, column: 18, scope: !6513)
!6516 = !DILocation(line: 297, column: 21, scope: !6513)
!6517 = !DILocation(line: 297, column: 25, scope: !6513)
!6518 = !DILocation(line: 297, column: 30, scope: !6513)
!6519 = !DILocation(line: 297, column: 6, scope: !6426)
!6520 = !DILocalVariable(name: "me", scope: !6521, file: !1, line: 298, type: !2254)
!6521 = distinct !DILexicalBlock(scope: !6513, file: !1, line: 297, column: 42)
!6522 = !DILocation(line: 298, column: 9, scope: !6521)
!6523 = !DILocation(line: 298, column: 14, scope: !6521)
!6524 = !DILocation(line: 298, column: 18, scope: !6521)
!6525 = !DILocalVariable(name: "deformed", scope: !6521, file: !1, line: 299, type: !309)
!6526 = !DILocation(line: 299, column: 8, scope: !6521)
!6527 = !DILocation(line: 301, column: 16, scope: !6521)
!6528 = !DILocation(line: 301, column: 3, scope: !6521)
!6529 = !DILocation(line: 301, column: 9, scope: !6521)
!6530 = !DILocation(line: 301, column: 14, scope: !6521)
!6531 = !DILocation(line: 302, column: 35, scope: !6521)
!6532 = !DILocation(line: 302, column: 39, scope: !6521)
!6533 = !DILocation(line: 302, column: 21, scope: !6521)
!6534 = !DILocation(line: 302, column: 3, scope: !6521)
!6535 = !DILocation(line: 302, column: 9, scope: !6521)
!6536 = !DILocation(line: 302, column: 19, scope: !6521)
!6537 = !DILocation(line: 304, column: 28, scope: !6521)
!6538 = !DILocation(line: 304, column: 3, scope: !6521)
!6539 = !DILocation(line: 306, column: 23, scope: !6521)
!6540 = !DILocation(line: 306, column: 29, scope: !6521)
!6541 = !DILocation(line: 306, column: 35, scope: !6521)
!6542 = !DILocation(line: 306, column: 39, scope: !6521)
!6543 = !DILocation(line: 306, column: 46, scope: !6521)
!6544 = !DILocation(line: 306, column: 50, scope: !6521)
!6545 = !DILocation(line: 307, column: 23, scope: !6521)
!6546 = !DILocation(line: 307, column: 27, scope: !6521)
!6547 = !DILocation(line: 307, column: 36, scope: !6521)
!6548 = !DILocation(line: 307, column: 40, scope: !6521)
!6549 = !DILocation(line: 307, column: 50, scope: !6521)
!6550 = !DILocation(line: 307, column: 54, scope: !6521)
!6551 = !DILocation(line: 306, column: 3, scope: !6521)
!6552 = !DILocation(line: 309, column: 31, scope: !6521)
!6553 = !DILocation(line: 309, column: 37, scope: !6521)
!6554 = !DILocation(line: 309, column: 43, scope: !6521)
!6555 = !DILocation(line: 309, column: 47, scope: !6521)
!6556 = !DILocation(line: 309, column: 55, scope: !6521)
!6557 = !DILocation(line: 309, column: 3, scope: !6521)
!6558 = !DILocation(line: 311, column: 43, scope: !6521)
!6559 = !DILocation(line: 311, column: 14, scope: !6521)
!6560 = !DILocation(line: 311, column: 12, scope: !6521)
!6561 = !DILocation(line: 313, column: 7, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6521, file: !1, line: 313, column: 7)
!6563 = !DILocation(line: 313, column: 16, scope: !6562)
!6564 = !DILocation(line: 313, column: 19, scope: !6562)
!6565 = !DILocation(line: 313, column: 23, scope: !6562)
!6566 = !DILocation(line: 313, column: 7, scope: !6521)
!6567 = !DILocalVariable(name: "deformdm", scope: !6568, file: !1, line: 314, type: !1477)
!6568 = distinct !DILexicalBlock(scope: !6562, file: !1, line: 313, column: 38)
!6569 = !DILocation(line: 314, column: 17, scope: !6568)
!6570 = !DILocation(line: 314, column: 28, scope: !6568)
!6571 = !DILocation(line: 314, column: 32, scope: !6568)
!6572 = !DILocalVariable(name: "vertCos", scope: !6568, file: !1, line: 315, type: !596)
!6573 = !DILocation(line: 315, column: 12, scope: !6568)
!6574 = !DILocalVariable(name: "totvert", scope: !6568, file: !1, line: 316, type: !219)
!6575 = !DILocation(line: 316, column: 8, scope: !6568)
!6576 = !DILocation(line: 318, column: 14, scope: !6568)
!6577 = !DILocation(line: 318, column: 24, scope: !6568)
!6578 = !DILocation(line: 318, column: 36, scope: !6568)
!6579 = !DILocation(line: 318, column: 12, scope: !6568)
!6580 = !DILocation(line: 319, column: 14, scope: !6568)
!6581 = !DILocation(line: 319, column: 26, scope: !6568)
!6582 = !DILocation(line: 319, column: 34, scope: !6568)
!6583 = !DILocation(line: 319, column: 12, scope: !6568)
!6584 = !DILocation(line: 320, column: 4, scope: !6568)
!6585 = !DILocation(line: 320, column: 14, scope: !6568)
!6586 = !DILocation(line: 320, column: 25, scope: !6568)
!6587 = !DILocation(line: 320, column: 35, scope: !6568)
!6588 = !DILocation(line: 321, column: 27, scope: !6568)
!6589 = !DILocation(line: 321, column: 33, scope: !6568)
!6590 = !DILocation(line: 321, column: 39, scope: !6568)
!6591 = !DILocation(line: 321, column: 4, scope: !6568)
!6592 = !DILocation(line: 322, column: 4, scope: !6568)
!6593 = !DILocation(line: 322, column: 14, scope: !6568)
!6594 = !DILocation(line: 323, column: 3, scope: !6568)
!6595 = !DILocation(line: 324, column: 2, scope: !6521)
!6596 = !DILocation(line: 326, column: 9, scope: !6426)
!6597 = !DILocation(line: 326, column: 15, scope: !6426)
!6598 = !DILocation(line: 326, column: 2, scope: !6426)
!6599 = !DILocation(line: 327, column: 1, scope: !6426)
!6600 = distinct !DISubprogram(name: "cdDM_getPolyMap", scope: !1, file: !1, line: 211, type: !6601, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6601 = !DISubroutineType(types: !6602)
!6602 = !{!6603, !2526, !1477}
!6603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6604, size: 64)
!6604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1798)
!6605 = !DILocalVariable(name: "ob", arg: 1, scope: !6600, file: !1, line: 211, type: !2526)
!6606 = !DILocation(line: 211, column: 51, scope: !6600)
!6607 = !DILocalVariable(name: "dm", arg: 2, scope: !6600, file: !1, line: 211, type: !1477)
!6608 = !DILocation(line: 211, column: 68, scope: !6600)
!6609 = !DILocalVariable(name: "cddm", scope: !6600, file: !1, line: 213, type: !201)
!6610 = !DILocation(line: 213, column: 17, scope: !6600)
!6611 = !DILocation(line: 213, column: 42, scope: !6600)
!6612 = !DILocation(line: 213, column: 24, scope: !6600)
!6613 = !DILocation(line: 215, column: 7, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6600, file: !1, line: 215, column: 6)
!6615 = !DILocation(line: 215, column: 13, scope: !6614)
!6616 = !DILocation(line: 215, column: 18, scope: !6614)
!6617 = !DILocation(line: 215, column: 21, scope: !6614)
!6618 = !DILocation(line: 215, column: 25, scope: !6614)
!6619 = !DILocation(line: 215, column: 30, scope: !6614)
!6620 = !DILocation(line: 215, column: 6, scope: !6600)
!6621 = !DILocalVariable(name: "me", scope: !6622, file: !1, line: 216, type: !2254)
!6622 = distinct !DILexicalBlock(scope: !6614, file: !1, line: 215, column: 42)
!6623 = !DILocation(line: 216, column: 9, scope: !6622)
!6624 = !DILocation(line: 216, column: 14, scope: !6622)
!6625 = !DILocation(line: 216, column: 18, scope: !6622)
!6626 = !DILocation(line: 218, column: 34, scope: !6622)
!6627 = !DILocation(line: 218, column: 40, scope: !6622)
!6628 = !DILocation(line: 218, column: 47, scope: !6622)
!6629 = !DILocation(line: 218, column: 53, scope: !6622)
!6630 = !DILocation(line: 219, column: 24, scope: !6622)
!6631 = !DILocation(line: 219, column: 28, scope: !6622)
!6632 = !DILocation(line: 219, column: 35, scope: !6622)
!6633 = !DILocation(line: 219, column: 39, scope: !6622)
!6634 = !DILocation(line: 220, column: 24, scope: !6622)
!6635 = !DILocation(line: 220, column: 28, scope: !6622)
!6636 = !DILocation(line: 220, column: 37, scope: !6622)
!6637 = !DILocation(line: 220, column: 41, scope: !6622)
!6638 = !DILocation(line: 220, column: 50, scope: !6622)
!6639 = !DILocation(line: 220, column: 54, scope: !6622)
!6640 = !DILocation(line: 218, column: 3, scope: !6622)
!6641 = !DILocation(line: 221, column: 2, scope: !6622)
!6642 = !DILocation(line: 223, column: 9, scope: !6600)
!6643 = !DILocation(line: 223, column: 15, scope: !6600)
!6644 = !DILocation(line: 223, column: 2, scope: !6600)
!6645 = distinct !DISubprogram(name: "cdDM_drawVerts", scope: !1, file: !1, line: 344, type: !1475, scopeLine: 345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6646 = !DILocalVariable(name: "dm", arg: 1, scope: !6645, file: !1, line: 344, type: !1477)
!6647 = !DILocation(line: 344, column: 41, scope: !6645)
!6648 = !DILocalVariable(name: "cddm", scope: !6645, file: !1, line: 346, type: !201)
!6649 = !DILocation(line: 346, column: 17, scope: !6645)
!6650 = !DILocation(line: 346, column: 42, scope: !6645)
!6651 = !DILocation(line: 346, column: 24, scope: !6645)
!6652 = !DILocalVariable(name: "mv", scope: !6645, file: !1, line: 347, type: !1780)
!6653 = !DILocation(line: 347, column: 9, scope: !6645)
!6654 = !DILocation(line: 347, column: 14, scope: !6645)
!6655 = !DILocation(line: 347, column: 20, scope: !6645)
!6656 = !DILocalVariable(name: "i", scope: !6645, file: !1, line: 348, type: !219)
!6657 = !DILocation(line: 348, column: 6, scope: !6645)
!6658 = !DILocation(line: 350, column: 24, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6645, file: !1, line: 350, column: 6)
!6660 = !DILocation(line: 350, column: 6, scope: !6659)
!6661 = !DILocation(line: 350, column: 6, scope: !6645)
!6662 = !DILocation(line: 351, column: 3, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6659, file: !1, line: 350, column: 29)
!6664 = !DILocation(line: 352, column: 10, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6663, file: !1, line: 352, column: 3)
!6666 = !DILocation(line: 352, column: 8, scope: !6665)
!6667 = !DILocation(line: 352, column: 15, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6665, file: !1, line: 352, column: 3)
!6669 = !DILocation(line: 352, column: 19, scope: !6668)
!6670 = !DILocation(line: 352, column: 23, scope: !6668)
!6671 = !DILocation(line: 352, column: 17, scope: !6668)
!6672 = !DILocation(line: 352, column: 3, scope: !6665)
!6673 = !DILocation(line: 353, column: 16, scope: !6668)
!6674 = !DILocation(line: 353, column: 20, scope: !6668)
!6675 = !DILocation(line: 353, column: 4, scope: !6668)
!6676 = !DILocation(line: 352, column: 37, scope: !6668)
!6677 = !DILocation(line: 352, column: 43, scope: !6668)
!6678 = !DILocation(line: 352, column: 3, scope: !6668)
!6679 = distinct !{!6679, !6672, !6680}
!6680 = !DILocation(line: 353, column: 22, scope: !6665)
!6681 = !DILocation(line: 354, column: 3, scope: !6663)
!6682 = !DILocation(line: 355, column: 2, scope: !6663)
!6683 = !DILocation(line: 357, column: 20, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6659, file: !1, line: 356, column: 7)
!6685 = !DILocation(line: 357, column: 3, scope: !6684)
!6686 = !DILocation(line: 358, column: 26, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6684, file: !1, line: 358, column: 7)
!6688 = !DILocation(line: 358, column: 8, scope: !6687)
!6689 = !DILocation(line: 358, column: 7, scope: !6684)
!6690 = !DILocation(line: 359, column: 8, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6692, file: !1, line: 359, column: 8)
!6692 = distinct !DILexicalBlock(scope: !6687, file: !1, line: 358, column: 31)
!6693 = !DILocation(line: 359, column: 12, scope: !6691)
!6694 = !DILocation(line: 359, column: 24, scope: !6691)
!6695 = !DILocation(line: 359, column: 8, scope: !6692)
!6696 = !DILocation(line: 360, column: 32, scope: !6691)
!6697 = !DILocation(line: 360, column: 36, scope: !6691)
!6698 = !DILocation(line: 360, column: 48, scope: !6691)
!6699 = !DILocation(line: 360, column: 5, scope: !6691)
!6700 = !DILocation(line: 362, column: 32, scope: !6691)
!6701 = !DILocation(line: 362, column: 36, scope: !6691)
!6702 = !DILocation(line: 362, column: 48, scope: !6691)
!6703 = !DILocation(line: 362, column: 5, scope: !6691)
!6704 = !DILocation(line: 363, column: 3, scope: !6692)
!6705 = !DILocation(line: 364, column: 3, scope: !6684)
!6706 = !DILocation(line: 366, column: 1, scope: !6645)
!6707 = distinct !DISubprogram(name: "cdDM_drawUVEdges", scope: !1, file: !1, line: 368, type: !1475, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6708 = !DILocalVariable(name: "dm", arg: 1, scope: !6707, file: !1, line: 368, type: !1477)
!6709 = !DILocation(line: 368, column: 43, scope: !6707)
!6710 = !DILocalVariable(name: "cddm", scope: !6707, file: !1, line: 370, type: !201)
!6711 = !DILocation(line: 370, column: 17, scope: !6707)
!6712 = !DILocation(line: 370, column: 42, scope: !6707)
!6713 = !DILocation(line: 370, column: 24, scope: !6707)
!6714 = !DILocalVariable(name: "mf", scope: !6707, file: !1, line: 371, type: !1786)
!6715 = !DILocation(line: 371, column: 9, scope: !6707)
!6716 = !DILocation(line: 371, column: 14, scope: !6707)
!6717 = !DILocation(line: 371, column: 20, scope: !6707)
!6718 = !DILocalVariable(name: "tf", scope: !6707, file: !1, line: 372, type: !6719)
!6719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6720, size: 64)
!6720 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTFace", file: !123, line: 165, baseType: !1719)
!6721 = !DILocation(line: 372, column: 10, scope: !6707)
!6722 = !DILocation(line: 372, column: 42, scope: !6707)
!6723 = !DILocation(line: 372, column: 15, scope: !6707)
!6724 = !DILocalVariable(name: "i", scope: !6707, file: !1, line: 373, type: !219)
!6725 = !DILocation(line: 373, column: 6, scope: !6707)
!6726 = !DILocation(line: 375, column: 6, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6707, file: !1, line: 375, column: 6)
!6728 = !DILocation(line: 375, column: 6, scope: !6707)
!6729 = !DILocation(line: 376, column: 25, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6731, file: !1, line: 376, column: 7)
!6731 = distinct !DILexicalBlock(scope: !6727, file: !1, line: 375, column: 10)
!6732 = !DILocation(line: 376, column: 7, scope: !6730)
!6733 = !DILocation(line: 376, column: 7, scope: !6731)
!6734 = !DILocation(line: 377, column: 4, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6730, file: !1, line: 376, column: 30)
!6736 = !DILocation(line: 378, column: 11, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6735, file: !1, line: 378, column: 4)
!6738 = !DILocation(line: 378, column: 9, scope: !6737)
!6739 = !DILocation(line: 378, column: 16, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6737, file: !1, line: 378, column: 4)
!6741 = !DILocation(line: 378, column: 20, scope: !6740)
!6742 = !DILocation(line: 378, column: 24, scope: !6740)
!6743 = !DILocation(line: 378, column: 18, scope: !6740)
!6744 = !DILocation(line: 378, column: 4, scope: !6737)
!6745 = !DILocation(line: 379, column: 11, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6747, file: !1, line: 379, column: 9)
!6747 = distinct !DILexicalBlock(scope: !6740, file: !1, line: 378, column: 58)
!6748 = !DILocation(line: 379, column: 15, scope: !6746)
!6749 = !DILocation(line: 379, column: 20, scope: !6746)
!6750 = !DILocation(line: 379, column: 9, scope: !6747)
!6751 = !DILocation(line: 380, column: 18, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6746, file: !1, line: 379, column: 32)
!6753 = !DILocation(line: 380, column: 22, scope: !6752)
!6754 = !DILocation(line: 380, column: 6, scope: !6752)
!6755 = !DILocation(line: 381, column: 18, scope: !6752)
!6756 = !DILocation(line: 381, column: 22, scope: !6752)
!6757 = !DILocation(line: 381, column: 6, scope: !6752)
!6758 = !DILocation(line: 383, column: 18, scope: !6752)
!6759 = !DILocation(line: 383, column: 22, scope: !6752)
!6760 = !DILocation(line: 383, column: 6, scope: !6752)
!6761 = !DILocation(line: 384, column: 18, scope: !6752)
!6762 = !DILocation(line: 384, column: 22, scope: !6752)
!6763 = !DILocation(line: 384, column: 6, scope: !6752)
!6764 = !DILocation(line: 386, column: 11, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6752, file: !1, line: 386, column: 10)
!6766 = !DILocation(line: 386, column: 15, scope: !6765)
!6767 = !DILocation(line: 386, column: 10, scope: !6752)
!6768 = !DILocation(line: 387, column: 19, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6765, file: !1, line: 386, column: 19)
!6770 = !DILocation(line: 387, column: 23, scope: !6769)
!6771 = !DILocation(line: 387, column: 7, scope: !6769)
!6772 = !DILocation(line: 388, column: 19, scope: !6769)
!6773 = !DILocation(line: 388, column: 23, scope: !6769)
!6774 = !DILocation(line: 388, column: 7, scope: !6769)
!6775 = !DILocation(line: 389, column: 6, scope: !6769)
!6776 = !DILocation(line: 391, column: 19, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6765, file: !1, line: 390, column: 11)
!6778 = !DILocation(line: 391, column: 23, scope: !6777)
!6779 = !DILocation(line: 391, column: 7, scope: !6777)
!6780 = !DILocation(line: 392, column: 19, scope: !6777)
!6781 = !DILocation(line: 392, column: 23, scope: !6777)
!6782 = !DILocation(line: 392, column: 7, scope: !6777)
!6783 = !DILocation(line: 394, column: 19, scope: !6777)
!6784 = !DILocation(line: 394, column: 23, scope: !6777)
!6785 = !DILocation(line: 394, column: 7, scope: !6777)
!6786 = !DILocation(line: 395, column: 19, scope: !6777)
!6787 = !DILocation(line: 395, column: 23, scope: !6777)
!6788 = !DILocation(line: 395, column: 7, scope: !6777)
!6789 = !DILocation(line: 397, column: 5, scope: !6752)
!6790 = !DILocation(line: 398, column: 4, scope: !6747)
!6791 = !DILocation(line: 378, column: 42, scope: !6740)
!6792 = !DILocation(line: 378, column: 48, scope: !6740)
!6793 = !DILocation(line: 378, column: 54, scope: !6740)
!6794 = !DILocation(line: 378, column: 4, scope: !6740)
!6795 = distinct !{!6795, !6744, !6796}
!6796 = !DILocation(line: 398, column: 4, scope: !6737)
!6797 = !DILocation(line: 399, column: 4, scope: !6735)
!6798 = !DILocation(line: 400, column: 3, scope: !6735)
!6799 = !DILocalVariable(name: "prevstart", scope: !6800, file: !1, line: 402, type: !219)
!6800 = distinct !DILexicalBlock(scope: !6730, file: !1, line: 401, column: 8)
!6801 = !DILocation(line: 402, column: 8, scope: !6800)
!6802 = !DILocalVariable(name: "prevdraw", scope: !6800, file: !1, line: 403, type: !219)
!6803 = !DILocation(line: 403, column: 8, scope: !6800)
!6804 = !DILocalVariable(name: "draw", scope: !6800, file: !1, line: 404, type: !219)
!6805 = !DILocation(line: 404, column: 8, scope: !6800)
!6806 = !DILocalVariable(name: "curpos", scope: !6800, file: !1, line: 405, type: !219)
!6807 = !DILocation(line: 405, column: 8, scope: !6800)
!6808 = !DILocation(line: 407, column: 21, scope: !6800)
!6809 = !DILocation(line: 407, column: 4, scope: !6800)
!6810 = !DILocation(line: 408, column: 27, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6800, file: !1, line: 408, column: 8)
!6812 = !DILocation(line: 408, column: 9, scope: !6811)
!6813 = !DILocation(line: 408, column: 8, scope: !6800)
!6814 = !DILocation(line: 409, column: 12, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6816, file: !1, line: 409, column: 5)
!6816 = distinct !DILexicalBlock(scope: !6811, file: !1, line: 408, column: 32)
!6817 = !DILocation(line: 409, column: 10, scope: !6815)
!6818 = !DILocation(line: 409, column: 17, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6815, file: !1, line: 409, column: 5)
!6820 = !DILocation(line: 409, column: 21, scope: !6819)
!6821 = !DILocation(line: 409, column: 25, scope: !6819)
!6822 = !DILocation(line: 409, column: 19, scope: !6819)
!6823 = !DILocation(line: 409, column: 5, scope: !6815)
!6824 = !DILocation(line: 410, column: 12, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6826, file: !1, line: 410, column: 10)
!6826 = distinct !DILexicalBlock(scope: !6819, file: !1, line: 409, column: 53)
!6827 = !DILocation(line: 410, column: 16, scope: !6825)
!6828 = !DILocation(line: 410, column: 21, scope: !6825)
!6829 = !DILocation(line: 410, column: 10, scope: !6826)
!6830 = !DILocation(line: 411, column: 12, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6825, file: !1, line: 410, column: 33)
!6832 = !DILocation(line: 412, column: 6, scope: !6831)
!6833 = !DILocation(line: 414, column: 12, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6825, file: !1, line: 413, column: 11)
!6835 = !DILocation(line: 416, column: 10, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6826, file: !1, line: 416, column: 10)
!6837 = !DILocation(line: 416, column: 22, scope: !6836)
!6838 = !DILocation(line: 416, column: 19, scope: !6836)
!6839 = !DILocation(line: 416, column: 10, scope: !6826)
!6840 = !DILocation(line: 417, column: 11, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6842, file: !1, line: 417, column: 11)
!6842 = distinct !DILexicalBlock(scope: !6836, file: !1, line: 416, column: 28)
!6843 = !DILocation(line: 417, column: 20, scope: !6841)
!6844 = !DILocation(line: 417, column: 24, scope: !6841)
!6845 = !DILocation(line: 417, column: 28, scope: !6841)
!6846 = !DILocation(line: 417, column: 37, scope: !6841)
!6847 = !DILocation(line: 417, column: 35, scope: !6841)
!6848 = !DILocation(line: 417, column: 48, scope: !6841)
!6849 = !DILocation(line: 417, column: 11, scope: !6842)
!6850 = !DILocation(line: 418, column: 31, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6841, file: !1, line: 417, column: 53)
!6852 = !DILocation(line: 418, column: 42, scope: !6851)
!6853 = !DILocation(line: 418, column: 51, scope: !6851)
!6854 = !DILocation(line: 418, column: 49, scope: !6851)
!6855 = !DILocation(line: 418, column: 8, scope: !6851)
!6856 = !DILocation(line: 419, column: 7, scope: !6851)
!6857 = !DILocation(line: 420, column: 19, scope: !6842)
!6858 = !DILocation(line: 420, column: 17, scope: !6842)
!6859 = !DILocation(line: 421, column: 6, scope: !6842)
!6860 = !DILocation(line: 422, column: 10, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6826, file: !1, line: 422, column: 10)
!6862 = !DILocation(line: 422, column: 14, scope: !6861)
!6863 = !DILocation(line: 422, column: 10, scope: !6826)
!6864 = !DILocation(line: 423, column: 14, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6861, file: !1, line: 422, column: 18)
!6866 = !DILocation(line: 424, column: 6, scope: !6865)
!6867 = !DILocation(line: 426, column: 14, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6861, file: !1, line: 425, column: 11)
!6869 = !DILocation(line: 428, column: 17, scope: !6826)
!6870 = !DILocation(line: 428, column: 15, scope: !6826)
!6871 = !DILocation(line: 429, column: 5, scope: !6826)
!6872 = !DILocation(line: 409, column: 43, scope: !6819)
!6873 = !DILocation(line: 409, column: 49, scope: !6819)
!6874 = !DILocation(line: 409, column: 5, scope: !6819)
!6875 = distinct !{!6875, !6823, !6876}
!6876 = !DILocation(line: 429, column: 5, scope: !6815)
!6877 = !DILocation(line: 430, column: 9, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6816, file: !1, line: 430, column: 9)
!6879 = !DILocation(line: 430, column: 18, scope: !6878)
!6880 = !DILocation(line: 430, column: 22, scope: !6878)
!6881 = !DILocation(line: 430, column: 26, scope: !6878)
!6882 = !DILocation(line: 430, column: 35, scope: !6878)
!6883 = !DILocation(line: 430, column: 33, scope: !6878)
!6884 = !DILocation(line: 430, column: 46, scope: !6878)
!6885 = !DILocation(line: 430, column: 9, scope: !6816)
!6886 = !DILocation(line: 431, column: 29, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 430, column: 51)
!6888 = !DILocation(line: 431, column: 40, scope: !6887)
!6889 = !DILocation(line: 431, column: 49, scope: !6887)
!6890 = !DILocation(line: 431, column: 47, scope: !6887)
!6891 = !DILocation(line: 431, column: 6, scope: !6887)
!6892 = !DILocation(line: 432, column: 5, scope: !6887)
!6893 = !DILocation(line: 433, column: 4, scope: !6816)
!6894 = !DILocation(line: 434, column: 4, scope: !6800)
!6895 = !DILocation(line: 436, column: 2, scope: !6731)
!6896 = !DILocation(line: 437, column: 1, scope: !6707)
!6897 = distinct !DISubprogram(name: "cdDM_drawEdges", scope: !1, file: !1, line: 439, type: !1697, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!6898 = !DILocalVariable(name: "dm", arg: 1, scope: !6897, file: !1, line: 439, type: !1477)
!6899 = !DILocation(line: 439, column: 41, scope: !6897)
!6900 = !DILocalVariable(name: "drawLooseEdges", arg: 2, scope: !6897, file: !1, line: 439, type: !309)
!6901 = !DILocation(line: 439, column: 50, scope: !6897)
!6902 = !DILocalVariable(name: "drawAllEdges", arg: 3, scope: !6897, file: !1, line: 439, type: !309)
!6903 = !DILocation(line: 439, column: 71, scope: !6897)
!6904 = !DILocalVariable(name: "cddm", scope: !6897, file: !1, line: 441, type: !201)
!6905 = !DILocation(line: 441, column: 17, scope: !6897)
!6906 = !DILocation(line: 441, column: 42, scope: !6897)
!6907 = !DILocation(line: 441, column: 24, scope: !6897)
!6908 = !DILocalVariable(name: "mvert", scope: !6897, file: !1, line: 442, type: !1780)
!6909 = !DILocation(line: 442, column: 9, scope: !6897)
!6910 = !DILocation(line: 442, column: 17, scope: !6897)
!6911 = !DILocation(line: 442, column: 23, scope: !6897)
!6912 = !DILocalVariable(name: "medge", scope: !6897, file: !1, line: 443, type: !1783)
!6913 = !DILocation(line: 443, column: 9, scope: !6897)
!6914 = !DILocation(line: 443, column: 17, scope: !6897)
!6915 = !DILocation(line: 443, column: 23, scope: !6897)
!6916 = !DILocalVariable(name: "i", scope: !6897, file: !1, line: 444, type: !219)
!6917 = !DILocation(line: 444, column: 6, scope: !6897)
!6918 = !DILocation(line: 446, column: 6, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6897, file: !1, line: 446, column: 6)
!6920 = !DILocation(line: 446, column: 12, scope: !6919)
!6921 = !DILocation(line: 446, column: 17, scope: !6919)
!6922 = !DILocation(line: 446, column: 20, scope: !6919)
!6923 = !DILocation(line: 446, column: 26, scope: !6919)
!6924 = !DILocation(line: 446, column: 36, scope: !6919)
!6925 = !DILocation(line: 447, column: 20, scope: !6919)
!6926 = !DILocation(line: 447, column: 26, scope: !6919)
!6927 = !DILocation(line: 447, column: 6, scope: !6919)
!6928 = !DILocation(line: 447, column: 32, scope: !6919)
!6929 = !DILocation(line: 446, column: 6, scope: !6897)
!6930 = !DILocation(line: 449, column: 17, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6919, file: !1, line: 448, column: 2)
!6932 = !DILocation(line: 449, column: 23, scope: !6931)
!6933 = !DILocation(line: 449, column: 3, scope: !6931)
!6934 = !DILocation(line: 451, column: 3, scope: !6931)
!6935 = !DILocation(line: 454, column: 24, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6897, file: !1, line: 454, column: 6)
!6937 = !DILocation(line: 454, column: 6, scope: !6936)
!6938 = !DILocation(line: 454, column: 6, scope: !6897)
!6939 = !DILocation(line: 456, column: 3, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6936, file: !1, line: 454, column: 29)
!6941 = !DILocation(line: 457, column: 10, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6940, file: !1, line: 457, column: 3)
!6943 = !DILocation(line: 457, column: 8, scope: !6942)
!6944 = !DILocation(line: 457, column: 15, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6942, file: !1, line: 457, column: 3)
!6946 = !DILocation(line: 457, column: 19, scope: !6945)
!6947 = !DILocation(line: 457, column: 23, scope: !6945)
!6948 = !DILocation(line: 457, column: 17, scope: !6945)
!6949 = !DILocation(line: 457, column: 3, scope: !6942)
!6950 = !DILocation(line: 458, column: 9, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6952, file: !1, line: 458, column: 8)
!6952 = distinct !DILexicalBlock(scope: !6945, file: !1, line: 457, column: 50)
!6953 = !DILocation(line: 458, column: 22, scope: !6951)
!6954 = !DILocation(line: 458, column: 26, scope: !6951)
!6955 = !DILocation(line: 458, column: 33, scope: !6951)
!6956 = !DILocation(line: 458, column: 38, scope: !6951)
!6957 = !DILocation(line: 458, column: 54, scope: !6951)
!6958 = !DILocation(line: 459, column: 9, scope: !6951)
!6959 = !DILocation(line: 459, column: 24, scope: !6951)
!6960 = !DILocation(line: 459, column: 29, scope: !6951)
!6961 = !DILocation(line: 459, column: 36, scope: !6951)
!6962 = !DILocation(line: 459, column: 41, scope: !6951)
!6963 = !DILocation(line: 458, column: 8, scope: !6952)
!6964 = !DILocation(line: 461, column: 17, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6951, file: !1, line: 460, column: 4)
!6966 = !DILocation(line: 461, column: 23, scope: !6965)
!6967 = !DILocation(line: 461, column: 30, scope: !6965)
!6968 = !DILocation(line: 461, column: 34, scope: !6965)
!6969 = !DILocation(line: 461, column: 5, scope: !6965)
!6970 = !DILocation(line: 462, column: 17, scope: !6965)
!6971 = !DILocation(line: 462, column: 23, scope: !6965)
!6972 = !DILocation(line: 462, column: 30, scope: !6965)
!6973 = !DILocation(line: 462, column: 34, scope: !6965)
!6974 = !DILocation(line: 462, column: 5, scope: !6965)
!6975 = !DILocation(line: 463, column: 4, scope: !6965)
!6976 = !DILocation(line: 464, column: 3, scope: !6952)
!6977 = !DILocation(line: 457, column: 37, scope: !6945)
!6978 = !DILocation(line: 457, column: 46, scope: !6945)
!6979 = !DILocation(line: 457, column: 3, scope: !6945)
!6980 = distinct !{!6980, !6949, !6981}
!6981 = !DILocation(line: 464, column: 3, scope: !6942)
!6982 = !DILocation(line: 465, column: 3, scope: !6940)
!6983 = !DILocation(line: 466, column: 2, scope: !6940)
!6984 = !DILocalVariable(name: "prevstart", scope: !6985, file: !1, line: 468, type: !219)
!6985 = distinct !DILexicalBlock(scope: !6936, file: !1, line: 467, column: 7)
!6986 = !DILocation(line: 468, column: 7, scope: !6985)
!6987 = !DILocalVariable(name: "prevdraw", scope: !6985, file: !1, line: 469, type: !219)
!6988 = !DILocation(line: 469, column: 7, scope: !6985)
!6989 = !DILocalVariable(name: "draw", scope: !6985, file: !1, line: 470, type: !309)
!6990 = !DILocation(line: 470, column: 8, scope: !6985)
!6991 = !DILocation(line: 472, column: 18, scope: !6985)
!6992 = !DILocation(line: 472, column: 3, scope: !6985)
!6993 = !DILocation(line: 473, column: 26, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6985, file: !1, line: 473, column: 7)
!6995 = !DILocation(line: 473, column: 8, scope: !6994)
!6996 = !DILocation(line: 473, column: 7, scope: !6985)
!6997 = !DILocation(line: 474, column: 11, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6999, file: !1, line: 474, column: 4)
!6999 = distinct !DILexicalBlock(scope: !6994, file: !1, line: 473, column: 31)
!7000 = !DILocation(line: 474, column: 9, scope: !6998)
!7001 = !DILocation(line: 474, column: 16, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6998, file: !1, line: 474, column: 4)
!7003 = !DILocation(line: 474, column: 20, scope: !7002)
!7004 = !DILocation(line: 474, column: 24, scope: !7002)
!7005 = !DILocation(line: 474, column: 18, scope: !7002)
!7006 = !DILocation(line: 474, column: 4, scope: !6998)
!7007 = !DILocation(line: 475, column: 10, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !7009, file: !1, line: 475, column: 9)
!7009 = distinct !DILexicalBlock(scope: !7002, file: !1, line: 474, column: 51)
!7010 = !DILocation(line: 475, column: 23, scope: !7008)
!7011 = !DILocation(line: 475, column: 27, scope: !7008)
!7012 = !DILocation(line: 475, column: 34, scope: !7008)
!7013 = !DILocation(line: 475, column: 39, scope: !7008)
!7014 = !DILocation(line: 475, column: 55, scope: !7008)
!7015 = !DILocation(line: 476, column: 10, scope: !7008)
!7016 = !DILocation(line: 476, column: 25, scope: !7008)
!7017 = !DILocation(line: 476, column: 30, scope: !7008)
!7018 = !DILocation(line: 476, column: 37, scope: !7008)
!7019 = !DILocation(line: 476, column: 42, scope: !7008)
!7020 = !DILocation(line: 475, column: 9, scope: !7009)
!7021 = !DILocation(line: 478, column: 11, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7008, file: !1, line: 477, column: 5)
!7023 = !DILocation(line: 479, column: 5, scope: !7022)
!7024 = !DILocation(line: 481, column: 11, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7008, file: !1, line: 480, column: 10)
!7026 = !DILocation(line: 483, column: 9, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7009, file: !1, line: 483, column: 9)
!7028 = !DILocation(line: 483, column: 21, scope: !7027)
!7029 = !DILocation(line: 483, column: 18, scope: !7027)
!7030 = !DILocation(line: 483, column: 9, scope: !7009)
!7031 = !DILocation(line: 484, column: 10, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7033, file: !1, line: 484, column: 10)
!7033 = distinct !DILexicalBlock(scope: !7027, file: !1, line: 483, column: 27)
!7034 = !DILocation(line: 484, column: 19, scope: !7032)
!7035 = !DILocation(line: 484, column: 23, scope: !7032)
!7036 = !DILocation(line: 484, column: 27, scope: !7032)
!7037 = !DILocation(line: 484, column: 31, scope: !7032)
!7038 = !DILocation(line: 484, column: 29, scope: !7032)
!7039 = !DILocation(line: 484, column: 42, scope: !7032)
!7040 = !DILocation(line: 484, column: 10, scope: !7033)
!7041 = !DILocation(line: 485, column: 32, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7032, file: !1, line: 484, column: 47)
!7043 = !DILocation(line: 485, column: 36, scope: !7042)
!7044 = !DILocation(line: 485, column: 48, scope: !7042)
!7045 = !DILocation(line: 485, column: 65, scope: !7042)
!7046 = !DILocation(line: 485, column: 75, scope: !7042)
!7047 = !DILocation(line: 485, column: 81, scope: !7042)
!7048 = !DILocation(line: 485, column: 85, scope: !7042)
!7049 = !DILocation(line: 485, column: 83, scope: !7042)
!7050 = !DILocation(line: 485, column: 96, scope: !7042)
!7051 = !DILocation(line: 485, column: 7, scope: !7042)
!7052 = !DILocation(line: 486, column: 6, scope: !7042)
!7053 = !DILocation(line: 487, column: 18, scope: !7033)
!7054 = !DILocation(line: 487, column: 16, scope: !7033)
!7055 = !DILocation(line: 488, column: 5, scope: !7033)
!7056 = !DILocation(line: 489, column: 16, scope: !7009)
!7057 = !DILocation(line: 489, column: 14, scope: !7009)
!7058 = !DILocation(line: 490, column: 4, scope: !7009)
!7059 = !DILocation(line: 474, column: 38, scope: !7002)
!7060 = !DILocation(line: 474, column: 47, scope: !7002)
!7061 = !DILocation(line: 474, column: 4, scope: !7002)
!7062 = distinct !{!7062, !7006, !7063}
!7063 = !DILocation(line: 490, column: 4, scope: !6998)
!7064 = !DILocation(line: 491, column: 8, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !6999, file: !1, line: 491, column: 8)
!7066 = !DILocation(line: 491, column: 17, scope: !7065)
!7067 = !DILocation(line: 491, column: 21, scope: !7065)
!7068 = !DILocation(line: 491, column: 25, scope: !7065)
!7069 = !DILocation(line: 491, column: 29, scope: !7065)
!7070 = !DILocation(line: 491, column: 27, scope: !7065)
!7071 = !DILocation(line: 491, column: 40, scope: !7065)
!7072 = !DILocation(line: 491, column: 8, scope: !6999)
!7073 = !DILocation(line: 492, column: 30, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7065, file: !1, line: 491, column: 45)
!7075 = !DILocation(line: 492, column: 34, scope: !7074)
!7076 = !DILocation(line: 492, column: 46, scope: !7074)
!7077 = !DILocation(line: 492, column: 63, scope: !7074)
!7078 = !DILocation(line: 492, column: 73, scope: !7074)
!7079 = !DILocation(line: 492, column: 79, scope: !7074)
!7080 = !DILocation(line: 492, column: 83, scope: !7074)
!7081 = !DILocation(line: 492, column: 81, scope: !7074)
!7082 = !DILocation(line: 492, column: 94, scope: !7074)
!7083 = !DILocation(line: 492, column: 5, scope: !7074)
!7084 = !DILocation(line: 493, column: 4, scope: !7074)
!7085 = !DILocation(line: 494, column: 3, scope: !6999)
!7086 = !DILocation(line: 495, column: 3, scope: !6985)
!7087 = !DILocation(line: 497, column: 1, scope: !6897)
!7088 = distinct !DISubprogram(name: "cdDM_drawLooseEdges", scope: !1, file: !1, line: 499, type: !1475, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!7089 = !DILocalVariable(name: "dm", arg: 1, scope: !7088, file: !1, line: 499, type: !1477)
!7090 = !DILocation(line: 499, column: 46, scope: !7088)
!7091 = !DILocalVariable(name: "cddm", scope: !7088, file: !1, line: 501, type: !201)
!7092 = !DILocation(line: 501, column: 17, scope: !7088)
!7093 = !DILocation(line: 501, column: 42, scope: !7088)
!7094 = !DILocation(line: 501, column: 24, scope: !7088)
!7095 = !DILocalVariable(name: "mvert", scope: !7088, file: !1, line: 502, type: !1780)
!7096 = !DILocation(line: 502, column: 9, scope: !7088)
!7097 = !DILocation(line: 502, column: 17, scope: !7088)
!7098 = !DILocation(line: 502, column: 23, scope: !7088)
!7099 = !DILocalVariable(name: "medge", scope: !7088, file: !1, line: 503, type: !1783)
!7100 = !DILocation(line: 503, column: 9, scope: !7088)
!7101 = !DILocation(line: 503, column: 17, scope: !7088)
!7102 = !DILocation(line: 503, column: 23, scope: !7088)
!7103 = !DILocalVariable(name: "i", scope: !7088, file: !1, line: 504, type: !219)
!7104 = !DILocation(line: 504, column: 6, scope: !7088)
!7105 = !DILocation(line: 506, column: 24, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7088, file: !1, line: 506, column: 6)
!7107 = !DILocation(line: 506, column: 6, scope: !7106)
!7108 = !DILocation(line: 506, column: 6, scope: !7088)
!7109 = !DILocation(line: 508, column: 3, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7106, file: !1, line: 506, column: 29)
!7111 = !DILocation(line: 509, column: 10, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7110, file: !1, line: 509, column: 3)
!7113 = !DILocation(line: 509, column: 8, scope: !7112)
!7114 = !DILocation(line: 509, column: 15, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7112, file: !1, line: 509, column: 3)
!7116 = !DILocation(line: 509, column: 19, scope: !7115)
!7117 = !DILocation(line: 509, column: 23, scope: !7115)
!7118 = !DILocation(line: 509, column: 17, scope: !7115)
!7119 = !DILocation(line: 509, column: 3, scope: !7112)
!7120 = !DILocation(line: 510, column: 8, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7122, file: !1, line: 510, column: 8)
!7122 = distinct !DILexicalBlock(scope: !7115, file: !1, line: 509, column: 50)
!7123 = !DILocation(line: 510, column: 15, scope: !7121)
!7124 = !DILocation(line: 510, column: 20, scope: !7121)
!7125 = !DILocation(line: 510, column: 8, scope: !7122)
!7126 = !DILocation(line: 511, column: 17, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7121, file: !1, line: 510, column: 36)
!7128 = !DILocation(line: 511, column: 23, scope: !7127)
!7129 = !DILocation(line: 511, column: 30, scope: !7127)
!7130 = !DILocation(line: 511, column: 34, scope: !7127)
!7131 = !DILocation(line: 511, column: 5, scope: !7127)
!7132 = !DILocation(line: 512, column: 17, scope: !7127)
!7133 = !DILocation(line: 512, column: 23, scope: !7127)
!7134 = !DILocation(line: 512, column: 30, scope: !7127)
!7135 = !DILocation(line: 512, column: 34, scope: !7127)
!7136 = !DILocation(line: 512, column: 5, scope: !7127)
!7137 = !DILocation(line: 513, column: 4, scope: !7127)
!7138 = !DILocation(line: 514, column: 3, scope: !7122)
!7139 = !DILocation(line: 509, column: 37, scope: !7115)
!7140 = !DILocation(line: 509, column: 46, scope: !7115)
!7141 = !DILocation(line: 509, column: 3, scope: !7115)
!7142 = distinct !{!7142, !7119, !7143}
!7143 = !DILocation(line: 514, column: 3, scope: !7112)
!7144 = !DILocation(line: 515, column: 3, scope: !7110)
!7145 = !DILocation(line: 516, column: 2, scope: !7110)
!7146 = !DILocalVariable(name: "prevstart", scope: !7147, file: !1, line: 518, type: !219)
!7147 = distinct !DILexicalBlock(scope: !7106, file: !1, line: 517, column: 7)
!7148 = !DILocation(line: 518, column: 7, scope: !7147)
!7149 = !DILocalVariable(name: "prevdraw", scope: !7147, file: !1, line: 519, type: !219)
!7150 = !DILocation(line: 519, column: 7, scope: !7147)
!7151 = !DILocalVariable(name: "draw", scope: !7147, file: !1, line: 520, type: !219)
!7152 = !DILocation(line: 520, column: 7, scope: !7147)
!7153 = !DILocation(line: 522, column: 18, scope: !7147)
!7154 = !DILocation(line: 522, column: 3, scope: !7147)
!7155 = !DILocation(line: 523, column: 26, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7147, file: !1, line: 523, column: 7)
!7157 = !DILocation(line: 523, column: 8, scope: !7156)
!7158 = !DILocation(line: 523, column: 7, scope: !7147)
!7159 = !DILocation(line: 524, column: 11, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7161, file: !1, line: 524, column: 4)
!7161 = distinct !DILexicalBlock(scope: !7156, file: !1, line: 523, column: 31)
!7162 = !DILocation(line: 524, column: 9, scope: !7160)
!7163 = !DILocation(line: 524, column: 16, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7160, file: !1, line: 524, column: 4)
!7165 = !DILocation(line: 524, column: 20, scope: !7164)
!7166 = !DILocation(line: 524, column: 24, scope: !7164)
!7167 = !DILocation(line: 524, column: 18, scope: !7164)
!7168 = !DILocation(line: 524, column: 4, scope: !7160)
!7169 = !DILocation(line: 525, column: 9, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7171, file: !1, line: 525, column: 9)
!7171 = distinct !DILexicalBlock(scope: !7164, file: !1, line: 524, column: 51)
!7172 = !DILocation(line: 525, column: 16, scope: !7170)
!7173 = !DILocation(line: 525, column: 21, scope: !7170)
!7174 = !DILocation(line: 525, column: 9, scope: !7171)
!7175 = !DILocation(line: 526, column: 11, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7170, file: !1, line: 525, column: 37)
!7177 = !DILocation(line: 527, column: 5, scope: !7176)
!7178 = !DILocation(line: 529, column: 11, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7170, file: !1, line: 528, column: 10)
!7180 = !DILocation(line: 531, column: 9, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7171, file: !1, line: 531, column: 9)
!7182 = !DILocation(line: 531, column: 21, scope: !7181)
!7183 = !DILocation(line: 531, column: 18, scope: !7181)
!7184 = !DILocation(line: 531, column: 9, scope: !7171)
!7185 = !DILocation(line: 532, column: 10, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7187, file: !1, line: 532, column: 10)
!7187 = distinct !DILexicalBlock(scope: !7181, file: !1, line: 531, column: 27)
!7188 = !DILocation(line: 532, column: 19, scope: !7186)
!7189 = !DILocation(line: 532, column: 23, scope: !7186)
!7190 = !DILocation(line: 532, column: 27, scope: !7186)
!7191 = !DILocation(line: 532, column: 31, scope: !7186)
!7192 = !DILocation(line: 532, column: 29, scope: !7186)
!7193 = !DILocation(line: 532, column: 42, scope: !7186)
!7194 = !DILocation(line: 532, column: 10, scope: !7187)
!7195 = !DILocation(line: 533, column: 32, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7186, file: !1, line: 532, column: 47)
!7197 = !DILocation(line: 533, column: 36, scope: !7196)
!7198 = !DILocation(line: 533, column: 48, scope: !7196)
!7199 = !DILocation(line: 533, column: 65, scope: !7196)
!7200 = !DILocation(line: 533, column: 75, scope: !7196)
!7201 = !DILocation(line: 533, column: 81, scope: !7196)
!7202 = !DILocation(line: 533, column: 85, scope: !7196)
!7203 = !DILocation(line: 533, column: 83, scope: !7196)
!7204 = !DILocation(line: 533, column: 96, scope: !7196)
!7205 = !DILocation(line: 533, column: 7, scope: !7196)
!7206 = !DILocation(line: 534, column: 6, scope: !7196)
!7207 = !DILocation(line: 535, column: 18, scope: !7187)
!7208 = !DILocation(line: 535, column: 16, scope: !7187)
!7209 = !DILocation(line: 536, column: 5, scope: !7187)
!7210 = !DILocation(line: 537, column: 16, scope: !7171)
!7211 = !DILocation(line: 537, column: 14, scope: !7171)
!7212 = !DILocation(line: 538, column: 4, scope: !7171)
!7213 = !DILocation(line: 524, column: 38, scope: !7164)
!7214 = !DILocation(line: 524, column: 47, scope: !7164)
!7215 = !DILocation(line: 524, column: 4, scope: !7164)
!7216 = distinct !{!7216, !7168, !7217}
!7217 = !DILocation(line: 538, column: 4, scope: !7160)
!7218 = !DILocation(line: 539, column: 8, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7161, file: !1, line: 539, column: 8)
!7220 = !DILocation(line: 539, column: 17, scope: !7219)
!7221 = !DILocation(line: 539, column: 21, scope: !7219)
!7222 = !DILocation(line: 539, column: 25, scope: !7219)
!7223 = !DILocation(line: 539, column: 29, scope: !7219)
!7224 = !DILocation(line: 539, column: 27, scope: !7219)
!7225 = !DILocation(line: 539, column: 40, scope: !7219)
!7226 = !DILocation(line: 539, column: 8, scope: !7161)
!7227 = !DILocation(line: 540, column: 30, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7219, file: !1, line: 539, column: 45)
!7229 = !DILocation(line: 540, column: 34, scope: !7228)
!7230 = !DILocation(line: 540, column: 46, scope: !7228)
!7231 = !DILocation(line: 540, column: 63, scope: !7228)
!7232 = !DILocation(line: 540, column: 73, scope: !7228)
!7233 = !DILocation(line: 540, column: 79, scope: !7228)
!7234 = !DILocation(line: 540, column: 83, scope: !7228)
!7235 = !DILocation(line: 540, column: 81, scope: !7228)
!7236 = !DILocation(line: 540, column: 94, scope: !7228)
!7237 = !DILocation(line: 540, column: 5, scope: !7228)
!7238 = !DILocation(line: 541, column: 4, scope: !7228)
!7239 = !DILocation(line: 542, column: 3, scope: !7161)
!7240 = !DILocation(line: 543, column: 3, scope: !7147)
!7241 = !DILocation(line: 545, column: 1, scope: !7088)
!7242 = distinct !DISubprogram(name: "cdDM_drawMappedEdges", scope: !1, file: !1, line: 1673, type: !1758, scopeLine: 1674, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!7243 = !DILocalVariable(name: "dm", arg: 1, scope: !7242, file: !1, line: 1673, type: !1477)
!7244 = !DILocation(line: 1673, column: 47, scope: !7242)
!7245 = !DILocalVariable(name: "setDrawOptions", arg: 2, scope: !7242, file: !1, line: 1673, type: !1744)
!7246 = !DILocation(line: 1673, column: 68, scope: !7242)
!7247 = !DILocalVariable(name: "userData", arg: 3, scope: !7242, file: !1, line: 1673, type: !233)
!7248 = !DILocation(line: 1673, column: 90, scope: !7242)
!7249 = !DILocalVariable(name: "cddm", scope: !7242, file: !1, line: 1675, type: !201)
!7250 = !DILocation(line: 1675, column: 17, scope: !7242)
!7251 = !DILocation(line: 1675, column: 42, scope: !7242)
!7252 = !DILocation(line: 1675, column: 24, scope: !7242)
!7253 = !DILocalVariable(name: "vert", scope: !7242, file: !1, line: 1676, type: !1780)
!7254 = !DILocation(line: 1676, column: 9, scope: !7242)
!7255 = !DILocation(line: 1676, column: 16, scope: !7242)
!7256 = !DILocation(line: 1676, column: 22, scope: !7242)
!7257 = !DILocalVariable(name: "edge", scope: !7242, file: !1, line: 1677, type: !1783)
!7258 = !DILocation(line: 1677, column: 9, scope: !7242)
!7259 = !DILocation(line: 1677, column: 16, scope: !7242)
!7260 = !DILocation(line: 1677, column: 22, scope: !7242)
!7261 = !DILocalVariable(name: "i", scope: !7242, file: !1, line: 1678, type: !219)
!7262 = !DILocation(line: 1678, column: 6, scope: !7242)
!7263 = !DILocalVariable(name: "orig", scope: !7242, file: !1, line: 1678, type: !219)
!7264 = !DILocation(line: 1678, column: 9, scope: !7242)
!7265 = !DILocalVariable(name: "index", scope: !7242, file: !1, line: 1678, type: !289)
!7266 = !DILocation(line: 1678, column: 16, scope: !7242)
!7267 = !DILocation(line: 1678, column: 47, scope: !7242)
!7268 = !DILocation(line: 1678, column: 24, scope: !7242)
!7269 = !DILocation(line: 1680, column: 2, scope: !7242)
!7270 = !DILocation(line: 1681, column: 9, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7242, file: !1, line: 1681, column: 2)
!7272 = !DILocation(line: 1681, column: 7, scope: !7271)
!7273 = !DILocation(line: 1681, column: 14, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7271, file: !1, line: 1681, column: 2)
!7275 = !DILocation(line: 1681, column: 18, scope: !7274)
!7276 = !DILocation(line: 1681, column: 22, scope: !7274)
!7277 = !DILocation(line: 1681, column: 16, scope: !7274)
!7278 = !DILocation(line: 1681, column: 2, scope: !7271)
!7279 = !DILocation(line: 1682, column: 7, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7281, file: !1, line: 1682, column: 7)
!7281 = distinct !DILexicalBlock(scope: !7274, file: !1, line: 1681, column: 48)
!7282 = !DILocation(line: 1682, column: 7, scope: !7281)
!7283 = !DILocation(line: 1683, column: 17, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7280, file: !1, line: 1682, column: 14)
!7285 = !DILocation(line: 1683, column: 11, scope: !7284)
!7286 = !DILocation(line: 1683, column: 9, scope: !7284)
!7287 = !DILocation(line: 1684, column: 8, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7284, file: !1, line: 1684, column: 8)
!7289 = !DILocation(line: 1684, column: 23, scope: !7288)
!7290 = !DILocation(line: 1684, column: 26, scope: !7288)
!7291 = !DILocation(line: 1684, column: 31, scope: !7288)
!7292 = !DILocation(line: 1684, column: 8, scope: !7284)
!7293 = !DILocation(line: 1684, column: 50, scope: !7288)
!7294 = !DILocation(line: 1685, column: 3, scope: !7284)
!7295 = !DILocation(line: 1687, column: 11, scope: !7280)
!7296 = !DILocation(line: 1687, column: 9, scope: !7280)
!7297 = !DILocation(line: 1689, column: 8, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7281, file: !1, line: 1689, column: 7)
!7299 = !DILocation(line: 1689, column: 23, scope: !7298)
!7300 = !DILocation(line: 1689, column: 27, scope: !7298)
!7301 = !DILocation(line: 1689, column: 42, scope: !7298)
!7302 = !DILocation(line: 1689, column: 52, scope: !7298)
!7303 = !DILocation(line: 1689, column: 58, scope: !7298)
!7304 = !DILocation(line: 1689, column: 7, scope: !7281)
!7305 = !DILocation(line: 1690, column: 16, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7298, file: !1, line: 1689, column: 83)
!7307 = !DILocation(line: 1690, column: 21, scope: !7306)
!7308 = !DILocation(line: 1690, column: 27, scope: !7306)
!7309 = !DILocation(line: 1690, column: 31, scope: !7306)
!7310 = !DILocation(line: 1690, column: 4, scope: !7306)
!7311 = !DILocation(line: 1691, column: 16, scope: !7306)
!7312 = !DILocation(line: 1691, column: 21, scope: !7306)
!7313 = !DILocation(line: 1691, column: 27, scope: !7306)
!7314 = !DILocation(line: 1691, column: 31, scope: !7306)
!7315 = !DILocation(line: 1691, column: 4, scope: !7306)
!7316 = !DILocation(line: 1692, column: 3, scope: !7306)
!7317 = !DILocation(line: 1693, column: 2, scope: !7281)
!7318 = !DILocation(line: 1681, column: 36, scope: !7274)
!7319 = !DILocation(line: 1681, column: 44, scope: !7274)
!7320 = !DILocation(line: 1681, column: 2, scope: !7274)
!7321 = distinct !{!7321, !7278, !7322}
!7322 = !DILocation(line: 1693, column: 2, scope: !7271)
!7323 = !DILocation(line: 1694, column: 2, scope: !7242)
!7324 = !DILocation(line: 1695, column: 1, scope: !7242)
!7325 = distinct !DISubprogram(name: "cdDM_drawFacesSolid", scope: !1, file: !1, line: 547, type: !1702, scopeLine: 550, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!7326 = !DILocalVariable(name: "dm", arg: 1, scope: !7325, file: !1, line: 547, type: !1477)
!7327 = !DILocation(line: 547, column: 46, scope: !7325)
!7328 = !DILocalVariable(name: "partial_redraw_planes", arg: 2, scope: !7325, file: !1, line: 548, type: !1704)
!7329 = !DILocation(line: 548, column: 41, scope: !7325)
!7330 = !DILocalVariable(name: "UNUSED_fast", arg: 3, scope: !7325, file: !1, line: 549, type: !309)
!7331 = !DILocation(line: 549, column: 38, scope: !7325)
!7332 = !DILocalVariable(name: "setMaterial", arg: 4, scope: !7325, file: !1, line: 549, type: !1705)
!7333 = !DILocation(line: 549, column: 66, scope: !7325)
!7334 = !DILocalVariable(name: "cddm", scope: !7325, file: !1, line: 551, type: !201)
!7335 = !DILocation(line: 551, column: 17, scope: !7325)
!7336 = !DILocation(line: 551, column: 42, scope: !7325)
!7337 = !DILocation(line: 551, column: 24, scope: !7325)
!7338 = !DILocalVariable(name: "mvert", scope: !7325, file: !1, line: 552, type: !1780)
!7339 = !DILocation(line: 552, column: 9, scope: !7325)
!7340 = !DILocation(line: 552, column: 17, scope: !7325)
!7341 = !DILocation(line: 552, column: 23, scope: !7325)
!7342 = !DILocalVariable(name: "mface", scope: !7325, file: !1, line: 553, type: !1786)
!7343 = !DILocation(line: 553, column: 9, scope: !7325)
!7344 = !DILocation(line: 553, column: 17, scope: !7325)
!7345 = !DILocation(line: 553, column: 23, scope: !7325)
!7346 = !DILocalVariable(name: "nors", scope: !7325, file: !1, line: 554, type: !1649)
!7347 = !DILocation(line: 554, column: 15, scope: !7325)
!7348 = !DILocation(line: 554, column: 22, scope: !7325)
!7349 = !DILocation(line: 554, column: 26, scope: !7325)
!7350 = !DILocation(line: 554, column: 47, scope: !7325)
!7351 = !DILocalVariable(name: "lnors", scope: !7325, file: !1, line: 555, type: !7352)
!7352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7353, size: 64)
!7353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1651, size: 192, elements: !7354)
!7354 = !{!506, !424}
!7355 = !DILocation(line: 555, column: 16, scope: !7325)
!7356 = !DILocation(line: 555, column: 31, scope: !7325)
!7357 = !DILocation(line: 555, column: 35, scope: !7325)
!7358 = !DILocation(line: 555, column: 56, scope: !7325)
!7359 = !DILocalVariable(name: "a", scope: !7325, file: !1, line: 556, type: !219)
!7360 = !DILocation(line: 556, column: 6, scope: !7325)
!7361 = !DILocalVariable(name: "glmode", scope: !7325, file: !1, line: 556, type: !219)
!7362 = !DILocation(line: 556, column: 9, scope: !7325)
!7363 = !DILocalVariable(name: "shademodel", scope: !7325, file: !1, line: 556, type: !219)
!7364 = !DILocation(line: 556, column: 22, scope: !7325)
!7365 = !DILocalVariable(name: "matnr", scope: !7325, file: !1, line: 556, type: !219)
!7366 = !DILocation(line: 556, column: 39, scope: !7325)
!7367 = !DILocalVariable(name: "drawCurrentMat", scope: !7325, file: !1, line: 556, type: !219)
!7368 = !DILocation(line: 556, column: 51, scope: !7325)
!7369 = !DILocation(line: 558, column: 6, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7325, file: !1, line: 558, column: 6)
!7371 = !DILocation(line: 558, column: 12, scope: !7370)
!7372 = !DILocation(line: 558, column: 17, scope: !7370)
!7373 = !DILocation(line: 558, column: 20, scope: !7370)
!7374 = !DILocation(line: 558, column: 26, scope: !7370)
!7375 = !DILocation(line: 558, column: 6, scope: !7325)
!7376 = !DILocation(line: 559, column: 7, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7378, file: !1, line: 559, column: 7)
!7378 = distinct !DILexicalBlock(scope: !7370, file: !1, line: 558, column: 37)
!7379 = !DILocation(line: 559, column: 11, scope: !7377)
!7380 = !DILocation(line: 559, column: 7, scope: !7378)
!7381 = !DILocalVariable(name: "face_nors", scope: !7382, file: !1, line: 560, type: !596)
!7382 = distinct !DILexicalBlock(scope: !7377, file: !1, line: 559, column: 28)
!7383 = !DILocation(line: 560, column: 12, scope: !7382)
!7384 = !DILocation(line: 560, column: 50, scope: !7382)
!7385 = !DILocation(line: 560, column: 54, scope: !7382)
!7386 = !DILocation(line: 560, column: 28, scope: !7382)
!7387 = !DILocation(line: 562, column: 18, scope: !7382)
!7388 = !DILocation(line: 562, column: 24, scope: !7382)
!7389 = !DILocation(line: 562, column: 30, scope: !7382)
!7390 = !DILocation(line: 562, column: 53, scope: !7382)
!7391 = !DILocation(line: 563, column: 18, scope: !7382)
!7392 = !DILocation(line: 562, column: 4, scope: !7382)
!7393 = !DILocation(line: 564, column: 4, scope: !7382)
!7394 = !DILocation(line: 565, column: 3, scope: !7382)
!7395 = !DILocation(line: 567, column: 3, scope: !7378)
!7396 = !DILocation(line: 570, column: 24, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7325, file: !1, line: 570, column: 6)
!7398 = !DILocation(line: 570, column: 6, scope: !7397)
!7399 = !DILocation(line: 570, column: 6, scope: !7325)
!7400 = !DILocation(line: 572, column: 18, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7397, file: !1, line: 570, column: 29)
!7402 = !DILocation(line: 572, column: 3, scope: !7401)
!7403 = !DILocation(line: 573, column: 10, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7401, file: !1, line: 573, column: 3)
!7405 = !DILocation(line: 573, column: 8, scope: !7404)
!7406 = !DILocation(line: 573, column: 15, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7404, file: !1, line: 573, column: 3)
!7408 = !DILocation(line: 573, column: 19, scope: !7407)
!7409 = !DILocation(line: 573, column: 23, scope: !7407)
!7410 = !DILocation(line: 573, column: 17, scope: !7407)
!7411 = !DILocation(line: 573, column: 3, scope: !7404)
!7412 = !DILocalVariable(name: "new_glmode", scope: !7413, file: !1, line: 574, type: !219)
!7413 = distinct !DILexicalBlock(scope: !7407, file: !1, line: 573, column: 54)
!7414 = !DILocation(line: 574, column: 8, scope: !7413)
!7415 = !DILocalVariable(name: "new_matnr", scope: !7413, file: !1, line: 574, type: !219)
!7416 = !DILocation(line: 574, column: 20, scope: !7413)
!7417 = !DILocalVariable(name: "new_shademodel", scope: !7413, file: !1, line: 574, type: !219)
!7418 = !DILocation(line: 574, column: 31, scope: !7413)
!7419 = !DILocation(line: 576, column: 17, scope: !7413)
!7420 = !DILocation(line: 576, column: 24, scope: !7413)
!7421 = !DILocation(line: 576, column: 15, scope: !7413)
!7422 = !DILocation(line: 577, column: 16, scope: !7413)
!7423 = !DILocation(line: 577, column: 23, scope: !7413)
!7424 = !DILocation(line: 577, column: 30, scope: !7413)
!7425 = !DILocation(line: 577, column: 14, scope: !7413)
!7426 = !DILocation(line: 578, column: 22, scope: !7413)
!7427 = !DILocation(line: 578, column: 28, scope: !7413)
!7428 = !DILocation(line: 578, column: 32, scope: !7413)
!7429 = !DILocation(line: 578, column: 39, scope: !7413)
!7430 = !DILocation(line: 578, column: 44, scope: !7413)
!7431 = !DILocation(line: 578, column: 21, scope: !7413)
!7432 = !DILocation(line: 578, column: 19, scope: !7413)
!7433 = !DILocation(line: 581, column: 9, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7413, file: !1, line: 581, column: 8)
!7435 = !DILocation(line: 581, column: 23, scope: !7434)
!7436 = !DILocation(line: 581, column: 20, scope: !7434)
!7437 = !DILocation(line: 581, column: 31, scope: !7434)
!7438 = !DILocation(line: 581, column: 35, scope: !7434)
!7439 = !DILocation(line: 581, column: 53, scope: !7434)
!7440 = !DILocation(line: 581, column: 50, scope: !7434)
!7441 = !DILocation(line: 581, column: 65, scope: !7434)
!7442 = !DILocation(line: 582, column: 9, scope: !7434)
!7443 = !DILocation(line: 582, column: 21, scope: !7434)
!7444 = !DILocation(line: 582, column: 25, scope: !7434)
!7445 = !DILocation(line: 582, column: 38, scope: !7434)
!7446 = !DILocation(line: 582, column: 35, scope: !7434)
!7447 = !DILocation(line: 581, column: 8, scope: !7413)
!7448 = !DILocation(line: 584, column: 5, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7434, file: !1, line: 583, column: 4)
!7450 = !DILocation(line: 586, column: 9, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7449, file: !1, line: 586, column: 9)
!7452 = !DILocation(line: 586, column: 9, scope: !7449)
!7453 = !DILocation(line: 587, column: 23, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7451, file: !1, line: 586, column: 22)
!7455 = !DILocation(line: 587, column: 43, scope: !7454)
!7456 = !DILocation(line: 587, column: 41, scope: !7454)
!7457 = !DILocation(line: 587, column: 21, scope: !7454)
!7458 = !DILocation(line: 588, column: 5, scope: !7454)
!7459 = !DILocation(line: 590, column: 31, scope: !7449)
!7460 = !DILocation(line: 590, column: 29, scope: !7449)
!7461 = !DILocation(line: 590, column: 5, scope: !7449)
!7462 = !DILocation(line: 591, column: 22, scope: !7449)
!7463 = !DILocation(line: 591, column: 20, scope: !7449)
!7464 = !DILocation(line: 591, column: 5, scope: !7449)
!7465 = !DILocation(line: 592, column: 4, scope: !7449)
!7466 = !DILocation(line: 594, column: 8, scope: !7467)
!7467 = distinct !DILexicalBlock(scope: !7413, file: !1, line: 594, column: 8)
!7468 = !DILocation(line: 594, column: 8, scope: !7413)
!7469 = !DILocation(line: 595, column: 9, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7471, file: !1, line: 595, column: 9)
!7471 = distinct !DILexicalBlock(scope: !7467, file: !1, line: 594, column: 24)
!7472 = !DILocation(line: 595, column: 9, scope: !7471)
!7473 = !DILocation(line: 596, column: 35, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7470, file: !1, line: 595, column: 16)
!7475 = !DILocation(line: 596, column: 6, scope: !7474)
!7476 = !DILocation(line: 597, column: 18, scope: !7474)
!7477 = !DILocation(line: 597, column: 24, scope: !7474)
!7478 = !DILocation(line: 597, column: 31, scope: !7474)
!7479 = !DILocation(line: 597, column: 35, scope: !7474)
!7480 = !DILocation(line: 597, column: 6, scope: !7474)
!7481 = !DILocation(line: 598, column: 35, scope: !7474)
!7482 = !DILocation(line: 598, column: 6, scope: !7474)
!7483 = !DILocation(line: 599, column: 18, scope: !7474)
!7484 = !DILocation(line: 599, column: 24, scope: !7474)
!7485 = !DILocation(line: 599, column: 31, scope: !7474)
!7486 = !DILocation(line: 599, column: 35, scope: !7474)
!7487 = !DILocation(line: 599, column: 6, scope: !7474)
!7488 = !DILocation(line: 600, column: 35, scope: !7474)
!7489 = !DILocation(line: 600, column: 6, scope: !7474)
!7490 = !DILocation(line: 601, column: 18, scope: !7474)
!7491 = !DILocation(line: 601, column: 24, scope: !7474)
!7492 = !DILocation(line: 601, column: 31, scope: !7474)
!7493 = !DILocation(line: 601, column: 35, scope: !7474)
!7494 = !DILocation(line: 601, column: 6, scope: !7474)
!7495 = !DILocation(line: 602, column: 10, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7474, file: !1, line: 602, column: 10)
!7497 = !DILocation(line: 602, column: 17, scope: !7496)
!7498 = !DILocation(line: 602, column: 10, scope: !7474)
!7499 = !DILocation(line: 603, column: 36, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7496, file: !1, line: 602, column: 21)
!7501 = !DILocation(line: 603, column: 7, scope: !7500)
!7502 = !DILocation(line: 604, column: 19, scope: !7500)
!7503 = !DILocation(line: 604, column: 25, scope: !7500)
!7504 = !DILocation(line: 604, column: 32, scope: !7500)
!7505 = !DILocation(line: 604, column: 36, scope: !7500)
!7506 = !DILocation(line: 604, column: 7, scope: !7500)
!7507 = !DILocation(line: 605, column: 6, scope: !7500)
!7508 = !DILocation(line: 606, column: 5, scope: !7474)
!7509 = !DILocation(line: 607, column: 14, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7470, file: !1, line: 607, column: 14)
!7511 = !DILocation(line: 607, column: 25, scope: !7510)
!7512 = !DILocation(line: 607, column: 14, scope: !7470)
!7513 = !DILocation(line: 608, column: 10, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7515, file: !1, line: 608, column: 10)
!7515 = distinct !DILexicalBlock(scope: !7510, file: !1, line: 607, column: 37)
!7516 = !DILocation(line: 608, column: 10, scope: !7515)
!7517 = !DILocation(line: 609, column: 19, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7514, file: !1, line: 608, column: 16)
!7519 = !DILocation(line: 609, column: 7, scope: !7518)
!7520 = !DILocation(line: 610, column: 6, scope: !7518)
!7521 = !DILocalVariable(name: "nor", scope: !7522, file: !1, line: 613, type: !422)
!7522 = distinct !DILexicalBlock(scope: !7514, file: !1, line: 611, column: 11)
!7523 = !DILocation(line: 613, column: 13, scope: !7522)
!7524 = !DILocation(line: 614, column: 11, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7522, file: !1, line: 614, column: 11)
!7526 = !DILocation(line: 614, column: 18, scope: !7525)
!7527 = !DILocation(line: 614, column: 11, scope: !7522)
!7528 = !DILocation(line: 615, column: 23, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7525, file: !1, line: 614, column: 22)
!7530 = !DILocation(line: 615, column: 28, scope: !7529)
!7531 = !DILocation(line: 615, column: 34, scope: !7529)
!7532 = !DILocation(line: 615, column: 41, scope: !7529)
!7533 = !DILocation(line: 615, column: 45, scope: !7529)
!7534 = !DILocation(line: 615, column: 49, scope: !7529)
!7535 = !DILocation(line: 615, column: 55, scope: !7529)
!7536 = !DILocation(line: 615, column: 62, scope: !7529)
!7537 = !DILocation(line: 615, column: 66, scope: !7529)
!7538 = !DILocation(line: 615, column: 70, scope: !7529)
!7539 = !DILocation(line: 615, column: 76, scope: !7529)
!7540 = !DILocation(line: 615, column: 83, scope: !7529)
!7541 = !DILocation(line: 615, column: 87, scope: !7529)
!7542 = !DILocation(line: 615, column: 91, scope: !7529)
!7543 = !DILocation(line: 615, column: 97, scope: !7529)
!7544 = !DILocation(line: 615, column: 104, scope: !7529)
!7545 = !DILocation(line: 615, column: 108, scope: !7529)
!7546 = !DILocation(line: 615, column: 8, scope: !7529)
!7547 = !DILocation(line: 616, column: 7, scope: !7529)
!7548 = !DILocation(line: 618, column: 22, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7525, file: !1, line: 617, column: 12)
!7550 = !DILocation(line: 618, column: 27, scope: !7549)
!7551 = !DILocation(line: 618, column: 33, scope: !7549)
!7552 = !DILocation(line: 618, column: 40, scope: !7549)
!7553 = !DILocation(line: 618, column: 44, scope: !7549)
!7554 = !DILocation(line: 618, column: 48, scope: !7549)
!7555 = !DILocation(line: 618, column: 54, scope: !7549)
!7556 = !DILocation(line: 618, column: 61, scope: !7549)
!7557 = !DILocation(line: 618, column: 65, scope: !7549)
!7558 = !DILocation(line: 618, column: 69, scope: !7549)
!7559 = !DILocation(line: 618, column: 75, scope: !7549)
!7560 = !DILocation(line: 618, column: 82, scope: !7549)
!7561 = !DILocation(line: 618, column: 86, scope: !7549)
!7562 = !DILocation(line: 618, column: 8, scope: !7549)
!7563 = !DILocation(line: 620, column: 19, scope: !7522)
!7564 = !DILocation(line: 620, column: 7, scope: !7522)
!7565 = !DILocation(line: 622, column: 18, scope: !7515)
!7566 = !DILocation(line: 622, column: 24, scope: !7515)
!7567 = !DILocation(line: 622, column: 31, scope: !7515)
!7568 = !DILocation(line: 622, column: 35, scope: !7515)
!7569 = !DILocation(line: 622, column: 6, scope: !7515)
!7570 = !DILocation(line: 623, column: 18, scope: !7515)
!7571 = !DILocation(line: 623, column: 24, scope: !7515)
!7572 = !DILocation(line: 623, column: 31, scope: !7515)
!7573 = !DILocation(line: 623, column: 35, scope: !7515)
!7574 = !DILocation(line: 623, column: 6, scope: !7515)
!7575 = !DILocation(line: 624, column: 18, scope: !7515)
!7576 = !DILocation(line: 624, column: 24, scope: !7515)
!7577 = !DILocation(line: 624, column: 31, scope: !7515)
!7578 = !DILocation(line: 624, column: 35, scope: !7515)
!7579 = !DILocation(line: 624, column: 6, scope: !7515)
!7580 = !DILocation(line: 625, column: 10, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7515, file: !1, line: 625, column: 10)
!7582 = !DILocation(line: 625, column: 17, scope: !7581)
!7583 = !DILocation(line: 625, column: 10, scope: !7515)
!7584 = !DILocation(line: 626, column: 19, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7581, file: !1, line: 625, column: 21)
!7586 = !DILocation(line: 626, column: 25, scope: !7585)
!7587 = !DILocation(line: 626, column: 32, scope: !7585)
!7588 = !DILocation(line: 626, column: 36, scope: !7585)
!7589 = !DILocation(line: 626, column: 7, scope: !7585)
!7590 = !DILocation(line: 627, column: 6, scope: !7585)
!7591 = !DILocation(line: 628, column: 5, scope: !7515)
!7592 = !DILocation(line: 630, column: 18, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7510, file: !1, line: 629, column: 10)
!7594 = !DILocation(line: 630, column: 24, scope: !7593)
!7595 = !DILocation(line: 630, column: 31, scope: !7593)
!7596 = !DILocation(line: 630, column: 35, scope: !7593)
!7597 = !DILocation(line: 630, column: 6, scope: !7593)
!7598 = !DILocation(line: 631, column: 18, scope: !7593)
!7599 = !DILocation(line: 631, column: 24, scope: !7593)
!7600 = !DILocation(line: 631, column: 31, scope: !7593)
!7601 = !DILocation(line: 631, column: 35, scope: !7593)
!7602 = !DILocation(line: 631, column: 6, scope: !7593)
!7603 = !DILocation(line: 632, column: 18, scope: !7593)
!7604 = !DILocation(line: 632, column: 24, scope: !7593)
!7605 = !DILocation(line: 632, column: 31, scope: !7593)
!7606 = !DILocation(line: 632, column: 35, scope: !7593)
!7607 = !DILocation(line: 632, column: 6, scope: !7593)
!7608 = !DILocation(line: 633, column: 18, scope: !7593)
!7609 = !DILocation(line: 633, column: 24, scope: !7593)
!7610 = !DILocation(line: 633, column: 31, scope: !7593)
!7611 = !DILocation(line: 633, column: 35, scope: !7593)
!7612 = !DILocation(line: 633, column: 6, scope: !7593)
!7613 = !DILocation(line: 634, column: 18, scope: !7593)
!7614 = !DILocation(line: 634, column: 24, scope: !7593)
!7615 = !DILocation(line: 634, column: 31, scope: !7593)
!7616 = !DILocation(line: 634, column: 35, scope: !7593)
!7617 = !DILocation(line: 634, column: 6, scope: !7593)
!7618 = !DILocation(line: 635, column: 18, scope: !7593)
!7619 = !DILocation(line: 635, column: 24, scope: !7593)
!7620 = !DILocation(line: 635, column: 31, scope: !7593)
!7621 = !DILocation(line: 635, column: 35, scope: !7593)
!7622 = !DILocation(line: 635, column: 6, scope: !7593)
!7623 = !DILocation(line: 636, column: 10, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7593, file: !1, line: 636, column: 10)
!7625 = !DILocation(line: 636, column: 17, scope: !7624)
!7626 = !DILocation(line: 636, column: 10, scope: !7593)
!7627 = !DILocation(line: 637, column: 19, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7624, file: !1, line: 636, column: 21)
!7629 = !DILocation(line: 637, column: 25, scope: !7628)
!7630 = !DILocation(line: 637, column: 32, scope: !7628)
!7631 = !DILocation(line: 637, column: 36, scope: !7628)
!7632 = !DILocation(line: 637, column: 7, scope: !7628)
!7633 = !DILocation(line: 638, column: 19, scope: !7628)
!7634 = !DILocation(line: 638, column: 25, scope: !7628)
!7635 = !DILocation(line: 638, column: 32, scope: !7628)
!7636 = !DILocation(line: 638, column: 36, scope: !7628)
!7637 = !DILocation(line: 638, column: 7, scope: !7628)
!7638 = !DILocation(line: 639, column: 6, scope: !7628)
!7639 = !DILocation(line: 641, column: 4, scope: !7471)
!7640 = !DILocation(line: 643, column: 8, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7413, file: !1, line: 643, column: 8)
!7642 = !DILocation(line: 643, column: 8, scope: !7413)
!7643 = !DILocation(line: 644, column: 10, scope: !7641)
!7644 = !DILocation(line: 644, column: 5, scope: !7641)
!7645 = !DILocation(line: 645, column: 8, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7413, file: !1, line: 645, column: 8)
!7647 = !DILocation(line: 645, column: 8, scope: !7413)
!7648 = !DILocation(line: 646, column: 10, scope: !7646)
!7649 = !DILocation(line: 646, column: 5, scope: !7646)
!7650 = !DILocation(line: 647, column: 3, scope: !7413)
!7651 = !DILocation(line: 573, column: 41, scope: !7407)
!7652 = !DILocation(line: 573, column: 50, scope: !7407)
!7653 = !DILocation(line: 573, column: 3, scope: !7407)
!7654 = distinct !{!7654, !7411, !7655}
!7655 = !DILocation(line: 647, column: 3, scope: !7404)
!7656 = !DILocation(line: 648, column: 3, scope: !7401)
!7657 = !DILocation(line: 649, column: 2, scope: !7401)
!7658 = !DILocation(line: 651, column: 20, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7397, file: !1, line: 650, column: 7)
!7660 = !DILocation(line: 651, column: 3, scope: !7659)
!7661 = !DILocation(line: 652, column: 20, scope: !7659)
!7662 = !DILocation(line: 652, column: 3, scope: !7659)
!7663 = !DILocation(line: 653, column: 26, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7659, file: !1, line: 653, column: 7)
!7665 = !DILocation(line: 653, column: 8, scope: !7664)
!7666 = !DILocation(line: 653, column: 7, scope: !7659)
!7667 = !DILocation(line: 654, column: 4, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7664, file: !1, line: 653, column: 31)
!7669 = !DILocation(line: 655, column: 11, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7668, file: !1, line: 655, column: 4)
!7671 = !DILocation(line: 655, column: 9, scope: !7670)
!7672 = !DILocation(line: 655, column: 16, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7670, file: !1, line: 655, column: 4)
!7674 = !DILocation(line: 655, column: 20, scope: !7673)
!7675 = !DILocation(line: 655, column: 24, scope: !7673)
!7676 = !DILocation(line: 655, column: 36, scope: !7673)
!7677 = !DILocation(line: 655, column: 18, scope: !7673)
!7678 = !DILocation(line: 655, column: 4, scope: !7670)
!7679 = !DILocation(line: 656, column: 10, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7681, file: !1, line: 656, column: 9)
!7681 = distinct !DILexicalBlock(scope: !7673, file: !1, line: 655, column: 54)
!7682 = !DILocation(line: 656, column: 22, scope: !7680)
!7683 = !DILocation(line: 656, column: 25, scope: !7680)
!7684 = !DILocation(line: 656, column: 37, scope: !7680)
!7685 = !DILocation(line: 656, column: 41, scope: !7680)
!7686 = !DILocation(line: 656, column: 53, scope: !7680)
!7687 = !DILocation(line: 656, column: 63, scope: !7680)
!7688 = !DILocation(line: 656, column: 66, scope: !7680)
!7689 = !DILocation(line: 656, column: 73, scope: !7680)
!7690 = !DILocation(line: 656, column: 9, scope: !7681)
!7691 = !DILocation(line: 657, column: 33, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7680, file: !1, line: 656, column: 85)
!7693 = !DILocation(line: 657, column: 37, scope: !7692)
!7694 = !DILocation(line: 657, column: 49, scope: !7692)
!7695 = !DILocation(line: 657, column: 59, scope: !7692)
!7696 = !DILocation(line: 657, column: 62, scope: !7692)
!7697 = !DILocation(line: 658, column: 19, scope: !7692)
!7698 = !DILocation(line: 658, column: 23, scope: !7692)
!7699 = !DILocation(line: 658, column: 35, scope: !7692)
!7700 = !DILocation(line: 658, column: 45, scope: !7692)
!7701 = !DILocation(line: 658, column: 48, scope: !7692)
!7702 = !DILocation(line: 657, column: 6, scope: !7692)
!7703 = !DILocation(line: 659, column: 5, scope: !7692)
!7704 = !DILocation(line: 660, column: 4, scope: !7681)
!7705 = !DILocation(line: 655, column: 50, scope: !7673)
!7706 = !DILocation(line: 655, column: 4, scope: !7673)
!7707 = distinct !{!7707, !7678, !7708}
!7708 = !DILocation(line: 660, column: 4, scope: !7670)
!7709 = !DILocation(line: 661, column: 3, scope: !7668)
!7710 = !DILocation(line: 662, column: 3, scope: !7659)
!7711 = !DILocation(line: 665, column: 2, scope: !7325)
!7712 = !DILocation(line: 666, column: 1, scope: !7325)
!7713 = distinct !DISubprogram(name: "cdDM_drawFacesTex", scope: !1, file: !1, line: 924, type: !1711, scopeLine: 928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!7714 = !DILocalVariable(name: "dm", arg: 1, scope: !7713, file: !1, line: 924, type: !1477)
!7715 = !DILocation(line: 924, column: 44, scope: !7713)
!7716 = !DILocalVariable(name: "setDrawOptions", arg: 2, scope: !7713, file: !1, line: 925, type: !1713)
!7717 = !DILocation(line: 925, column: 51, scope: !7713)
!7718 = !DILocalVariable(name: "compareDrawOptions", arg: 3, scope: !7713, file: !1, line: 926, type: !1731)
!7719 = !DILocation(line: 926, column: 52, scope: !7713)
!7720 = !DILocalVariable(name: "userData", arg: 4, scope: !7713, file: !1, line: 927, type: !233)
!7721 = !DILocation(line: 927, column: 37, scope: !7713)
!7722 = !DILocalVariable(name: "uvflag", arg: 5, scope: !7713, file: !1, line: 927, type: !1735)
!7723 = !DILocation(line: 927, column: 58, scope: !7713)
!7724 = !DILocation(line: 929, column: 27, scope: !7713)
!7725 = !DILocation(line: 929, column: 31, scope: !7713)
!7726 = !DILocation(line: 929, column: 53, scope: !7713)
!7727 = !DILocation(line: 929, column: 73, scope: !7713)
!7728 = !DILocation(line: 929, column: 83, scope: !7713)
!7729 = !DILocation(line: 929, column: 2, scope: !7713)
!7730 = !DILocation(line: 930, column: 1, scope: !7713)
!7731 = distinct !DISubprogram(name: "cdDM_drawFacesGLSL", scope: !1, file: !1, line: 1561, type: !1738, scopeLine: 1562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!7732 = !DILocalVariable(name: "dm", arg: 1, scope: !7731, file: !1, line: 1561, type: !1477)
!7733 = !DILocation(line: 1561, column: 45, scope: !7731)
!7734 = !DILocalVariable(name: "setMaterial", arg: 2, scope: !7731, file: !1, line: 1561, type: !1705)
!7735 = !DILocation(line: 1561, column: 63, scope: !7731)
!7736 = !DILocation(line: 1563, column: 2, scope: !7731)
!7737 = !DILocation(line: 1563, column: 6, scope: !7731)
!7738 = !DILocation(line: 1563, column: 26, scope: !7731)
!7739 = !DILocation(line: 1563, column: 30, scope: !7731)
!7740 = !DILocation(line: 1564, column: 1, scope: !7731)
!7741 = distinct !DISubprogram(name: "cdDM_drawMappedFaces", scope: !1, file: !1, line: 932, type: !1742, scopeLine: 937, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!7742 = !DILocalVariable(name: "dm", arg: 1, scope: !7741, file: !1, line: 932, type: !1477)
!7743 = !DILocation(line: 932, column: 47, scope: !7741)
!7744 = !DILocalVariable(name: "setDrawOptions", arg: 2, scope: !7741, file: !1, line: 933, type: !1744)
!7745 = !DILocation(line: 933, column: 51, scope: !7741)
!7746 = !DILocalVariable(name: "setMaterial", arg: 3, scope: !7741, file: !1, line: 934, type: !1705)
!7747 = !DILocation(line: 934, column: 48, scope: !7741)
!7748 = !DILocalVariable(name: "compareDrawOptions", arg: 4, scope: !7741, file: !1, line: 935, type: !1731)
!7749 = !DILocation(line: 935, column: 55, scope: !7741)
!7750 = !DILocalVariable(name: "userData", arg: 5, scope: !7741, file: !1, line: 936, type: !233)
!7751 = !DILocation(line: 936, column: 40, scope: !7741)
!7752 = !DILocalVariable(name: "flag", arg: 6, scope: !7741, file: !1, line: 936, type: !1735)
!7753 = !DILocation(line: 936, column: 61, scope: !7741)
!7754 = !DILocalVariable(name: "cddm", scope: !7741, file: !1, line: 938, type: !201)
!7755 = !DILocation(line: 938, column: 17, scope: !7741)
!7756 = !DILocation(line: 938, column: 42, scope: !7741)
!7757 = !DILocation(line: 938, column: 24, scope: !7741)
!7758 = !DILocalVariable(name: "mv", scope: !7741, file: !1, line: 939, type: !1780)
!7759 = !DILocation(line: 939, column: 9, scope: !7741)
!7760 = !DILocation(line: 939, column: 14, scope: !7741)
!7761 = !DILocation(line: 939, column: 20, scope: !7741)
!7762 = !DILocalVariable(name: "mf", scope: !7741, file: !1, line: 940, type: !1786)
!7763 = !DILocation(line: 940, column: 9, scope: !7741)
!7764 = !DILocation(line: 940, column: 14, scope: !7741)
!7765 = !DILocation(line: 940, column: 20, scope: !7741)
!7766 = !DILocalVariable(name: "mcol", scope: !7741, file: !1, line: 941, type: !7767)
!7767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7768, size: 64)
!7768 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCol", file: !123, line: 76, baseType: !2328)
!7769 = !DILocation(line: 941, column: 8, scope: !7741)
!7770 = !DILocalVariable(name: "nors", scope: !7741, file: !1, line: 942, type: !1649)
!7771 = !DILocation(line: 942, column: 15, scope: !7741)
!7772 = !DILocation(line: 942, column: 49, scope: !7741)
!7773 = !DILocation(line: 942, column: 22, scope: !7741)
!7774 = !DILocalVariable(name: "lnors", scope: !7741, file: !1, line: 943, type: !7352)
!7775 = !DILocation(line: 943, column: 16, scope: !7741)
!7776 = !DILocation(line: 943, column: 31, scope: !7741)
!7777 = !DILocation(line: 943, column: 35, scope: !7741)
!7778 = !DILocation(line: 943, column: 56, scope: !7741)
!7779 = !DILocalVariable(name: "colType", scope: !7741, file: !1, line: 944, type: !219)
!7780 = !DILocation(line: 944, column: 6, scope: !7741)
!7781 = !DILocalVariable(name: "useColors", scope: !7741, file: !1, line: 944, type: !219)
!7782 = !DILocation(line: 944, column: 15, scope: !7741)
!7783 = !DILocation(line: 944, column: 27, scope: !7741)
!7784 = !DILocation(line: 944, column: 32, scope: !7741)
!7785 = !DILocalVariable(name: "i", scope: !7741, file: !1, line: 945, type: !219)
!7786 = !DILocation(line: 945, column: 6, scope: !7741)
!7787 = !DILocalVariable(name: "orig", scope: !7741, file: !1, line: 945, type: !219)
!7788 = !DILocation(line: 945, column: 9, scope: !7741)
!7789 = !DILocalVariable(name: "index_mf_to_mpoly", scope: !7741, file: !1, line: 949, type: !3982)
!7790 = !DILocation(line: 949, column: 13, scope: !7741)
!7791 = !DILocation(line: 949, column: 33, scope: !7741)
!7792 = !DILocation(line: 949, column: 37, scope: !7741)
!7793 = !DILocation(line: 949, column: 58, scope: !7741)
!7794 = !DILocalVariable(name: "index_mp_to_orig", scope: !7741, file: !1, line: 950, type: !3982)
!7795 = !DILocation(line: 950, column: 13, scope: !7741)
!7796 = !DILocation(line: 950, column: 33, scope: !7741)
!7797 = !DILocation(line: 950, column: 37, scope: !7741)
!7798 = !DILocation(line: 950, column: 54, scope: !7741)
!7799 = !DILocation(line: 951, column: 6, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7741, file: !1, line: 951, column: 6)
!7801 = !DILocation(line: 951, column: 24, scope: !7800)
!7802 = !DILocation(line: 951, column: 6, scope: !7741)
!7803 = !DILocation(line: 952, column: 20, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7800, file: !1, line: 951, column: 33)
!7805 = !DILocation(line: 953, column: 2, scope: !7804)
!7806 = !DILocation(line: 956, column: 10, scope: !7741)
!7807 = !DILocation(line: 957, column: 36, scope: !7741)
!7808 = !DILocation(line: 957, column: 40, scope: !7741)
!7809 = !DILocation(line: 957, column: 9, scope: !7741)
!7810 = !DILocation(line: 957, column: 7, scope: !7741)
!7811 = !DILocation(line: 958, column: 7, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7741, file: !1, line: 958, column: 6)
!7813 = !DILocation(line: 958, column: 6, scope: !7741)
!7814 = !DILocation(line: 959, column: 11, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7812, file: !1, line: 958, column: 13)
!7816 = !DILocation(line: 960, column: 37, scope: !7815)
!7817 = !DILocation(line: 960, column: 41, scope: !7815)
!7818 = !DILocation(line: 960, column: 10, scope: !7815)
!7819 = !DILocation(line: 960, column: 8, scope: !7815)
!7820 = !DILocation(line: 961, column: 2, scope: !7815)
!7821 = !DILocation(line: 962, column: 7, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7741, file: !1, line: 962, column: 6)
!7823 = !DILocation(line: 962, column: 6, scope: !7741)
!7824 = !DILocation(line: 963, column: 11, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7822, file: !1, line: 962, column: 13)
!7826 = !DILocation(line: 964, column: 37, scope: !7825)
!7827 = !DILocation(line: 964, column: 41, scope: !7825)
!7828 = !DILocation(line: 964, column: 10, scope: !7825)
!7829 = !DILocation(line: 964, column: 8, scope: !7825)
!7830 = !DILocation(line: 965, column: 2, scope: !7825)
!7831 = !DILocation(line: 967, column: 32, scope: !7741)
!7832 = !DILocation(line: 967, column: 2, scope: !7741)
!7833 = !DILocation(line: 971, column: 24, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !7741, file: !1, line: 971, column: 6)
!7835 = !DILocation(line: 971, column: 6, scope: !7834)
!7836 = !DILocation(line: 971, column: 28, scope: !7834)
!7837 = !DILocation(line: 971, column: 33, scope: !7834)
!7838 = !DILocation(line: 971, column: 35, scope: !7834)
!7839 = !DILocation(line: 971, column: 6, scope: !7741)
!7840 = !DILocation(line: 973, column: 10, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7842, file: !1, line: 973, column: 3)
!7842 = distinct !DILexicalBlock(scope: !7834, file: !1, line: 971, column: 51)
!7843 = !DILocation(line: 973, column: 8, scope: !7841)
!7844 = !DILocation(line: 973, column: 15, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7841, file: !1, line: 973, column: 3)
!7846 = !DILocation(line: 973, column: 19, scope: !7845)
!7847 = !DILocation(line: 973, column: 23, scope: !7845)
!7848 = !DILocation(line: 973, column: 17, scope: !7845)
!7849 = !DILocation(line: 973, column: 3, scope: !7841)
!7850 = !DILocalVariable(name: "drawSmooth", scope: !7851, file: !1, line: 974, type: !219)
!7851 = distinct !DILexicalBlock(scope: !7845, file: !1, line: 973, column: 51)
!7852 = !DILocation(line: 974, column: 8, scope: !7851)
!7853 = !DILocation(line: 974, column: 23, scope: !7851)
!7854 = !DILocation(line: 974, column: 28, scope: !7851)
!7855 = !DILocation(line: 974, column: 53, scope: !7851)
!7856 = !DILocation(line: 974, column: 56, scope: !7851)
!7857 = !DILocation(line: 974, column: 21, scope: !7851)
!7858 = !DILocation(line: 974, column: 70, scope: !7851)
!7859 = !DILocation(line: 974, column: 74, scope: !7851)
!7860 = !DILocation(line: 974, column: 79, scope: !7851)
!7861 = !DILocalVariable(name: "draw_option", scope: !7851, file: !1, line: 975, type: !1717)
!7862 = !DILocation(line: 975, column: 17, scope: !7851)
!7863 = !DILocation(line: 977, column: 12, scope: !7851)
!7864 = !DILocation(line: 977, column: 11, scope: !7851)
!7865 = !DILocation(line: 977, column: 58, scope: !7851)
!7866 = !DILocation(line: 977, column: 77, scope: !7851)
!7867 = !DILocation(line: 977, column: 95, scope: !7851)
!7868 = !DILocation(line: 977, column: 33, scope: !7851)
!7869 = !DILocation(line: 977, column: 100, scope: !7851)
!7870 = !DILocation(line: 977, column: 9, scope: !7851)
!7871 = !DILocation(line: 979, column: 8, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7851, file: !1, line: 979, column: 8)
!7873 = !DILocation(line: 979, column: 13, scope: !7872)
!7874 = !DILocation(line: 979, column: 8, scope: !7851)
!7875 = !DILocation(line: 980, column: 19, scope: !7872)
!7876 = !DILocation(line: 980, column: 31, scope: !7872)
!7877 = !DILocation(line: 980, column: 35, scope: !7872)
!7878 = !DILocation(line: 980, column: 42, scope: !7872)
!7879 = !DILocation(line: 980, column: 17, scope: !7872)
!7880 = !DILocation(line: 980, column: 5, scope: !7872)
!7881 = !DILocation(line: 981, column: 13, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7872, file: !1, line: 981, column: 13)
!7883 = !DILocation(line: 981, column: 28, scope: !7882)
!7884 = !DILocation(line: 981, column: 13, scope: !7872)
!7885 = !DILocation(line: 982, column: 19, scope: !7882)
!7886 = !DILocation(line: 982, column: 34, scope: !7882)
!7887 = !DILocation(line: 982, column: 44, scope: !7882)
!7888 = !DILocation(line: 982, column: 17, scope: !7882)
!7889 = !DILocation(line: 982, column: 5, scope: !7882)
!7890 = !DILocation(line: 984, column: 8, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7851, file: !1, line: 984, column: 8)
!7892 = !DILocation(line: 984, column: 20, scope: !7891)
!7893 = !DILocation(line: 984, column: 8, scope: !7851)
!7894 = !DILocalVariable(name: "cp", scope: !7895, file: !1, line: 985, type: !1916)
!7895 = distinct !DILexicalBlock(scope: !7891, file: !1, line: 984, column: 44)
!7896 = !DILocation(line: 985, column: 20, scope: !7895)
!7897 = !DILocation(line: 987, column: 9, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7895, file: !1, line: 987, column: 9)
!7899 = !DILocation(line: 987, column: 21, scope: !7898)
!7900 = !DILocation(line: 987, column: 9, scope: !7895)
!7901 = !DILocation(line: 988, column: 6, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7898, file: !1, line: 987, column: 48)
!7903 = !DILocation(line: 989, column: 6, scope: !7902)
!7904 = !DILocation(line: 990, column: 5, scope: !7902)
!7905 = !DILocation(line: 992, column: 9, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7895, file: !1, line: 992, column: 9)
!7907 = !DILocation(line: 992, column: 19, scope: !7906)
!7908 = !DILocation(line: 992, column: 22, scope: !7906)
!7909 = !DILocation(line: 992, column: 9, scope: !7895)
!7910 = !DILocation(line: 993, column: 29, scope: !7906)
!7911 = !DILocation(line: 993, column: 34, scope: !7906)
!7912 = !DILocation(line: 993, column: 36, scope: !7906)
!7913 = !DILocation(line: 993, column: 11, scope: !7906)
!7914 = !DILocation(line: 993, column: 9, scope: !7906)
!7915 = !DILocation(line: 993, column: 6, scope: !7906)
!7916 = !DILocation(line: 997, column: 5, scope: !7895)
!7917 = !DILocation(line: 998, column: 13, scope: !7895)
!7918 = !DILocation(line: 998, column: 17, scope: !7895)
!7919 = !DILocation(line: 998, column: 5, scope: !7895)
!7920 = !DILocation(line: 1000, column: 9, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7895, file: !1, line: 1000, column: 9)
!7922 = !DILocation(line: 1000, column: 9, scope: !7895)
!7923 = !DILocation(line: 1001, column: 10, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7925, file: !1, line: 1001, column: 10)
!7925 = distinct !DILexicalBlock(scope: !7921, file: !1, line: 1000, column: 16)
!7926 = !DILocation(line: 1001, column: 10, scope: !7925)
!7927 = !DILocation(line: 1001, column: 25, scope: !7924)
!7928 = !DILocation(line: 1001, column: 32, scope: !7924)
!7929 = !DILocation(line: 1001, column: 39, scope: !7924)
!7930 = !DILocation(line: 1001, column: 14, scope: !7924)
!7931 = !DILocation(line: 1002, column: 35, scope: !7925)
!7932 = !DILocation(line: 1002, column: 6, scope: !7925)
!7933 = !DILocation(line: 1003, column: 18, scope: !7925)
!7934 = !DILocation(line: 1003, column: 21, scope: !7925)
!7935 = !DILocation(line: 1003, column: 25, scope: !7925)
!7936 = !DILocation(line: 1003, column: 29, scope: !7925)
!7937 = !DILocation(line: 1003, column: 6, scope: !7925)
!7938 = !DILocation(line: 1004, column: 10, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7925, file: !1, line: 1004, column: 10)
!7940 = !DILocation(line: 1004, column: 10, scope: !7925)
!7941 = !DILocation(line: 1004, column: 25, scope: !7939)
!7942 = !DILocation(line: 1004, column: 32, scope: !7939)
!7943 = !DILocation(line: 1004, column: 39, scope: !7939)
!7944 = !DILocation(line: 1004, column: 14, scope: !7939)
!7945 = !DILocation(line: 1005, column: 35, scope: !7925)
!7946 = !DILocation(line: 1005, column: 6, scope: !7925)
!7947 = !DILocation(line: 1006, column: 18, scope: !7925)
!7948 = !DILocation(line: 1006, column: 21, scope: !7925)
!7949 = !DILocation(line: 1006, column: 25, scope: !7925)
!7950 = !DILocation(line: 1006, column: 29, scope: !7925)
!7951 = !DILocation(line: 1006, column: 6, scope: !7925)
!7952 = !DILocation(line: 1007, column: 10, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7925, file: !1, line: 1007, column: 10)
!7954 = !DILocation(line: 1007, column: 10, scope: !7925)
!7955 = !DILocation(line: 1007, column: 25, scope: !7953)
!7956 = !DILocation(line: 1007, column: 33, scope: !7953)
!7957 = !DILocation(line: 1007, column: 41, scope: !7953)
!7958 = !DILocation(line: 1007, column: 14, scope: !7953)
!7959 = !DILocation(line: 1008, column: 35, scope: !7925)
!7960 = !DILocation(line: 1008, column: 6, scope: !7925)
!7961 = !DILocation(line: 1009, column: 18, scope: !7925)
!7962 = !DILocation(line: 1009, column: 21, scope: !7925)
!7963 = !DILocation(line: 1009, column: 25, scope: !7925)
!7964 = !DILocation(line: 1009, column: 29, scope: !7925)
!7965 = !DILocation(line: 1009, column: 6, scope: !7925)
!7966 = !DILocation(line: 1010, column: 10, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7925, file: !1, line: 1010, column: 10)
!7968 = !DILocation(line: 1010, column: 14, scope: !7967)
!7969 = !DILocation(line: 1010, column: 10, scope: !7925)
!7970 = !DILocation(line: 1011, column: 11, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7972, file: !1, line: 1011, column: 11)
!7972 = distinct !DILexicalBlock(scope: !7967, file: !1, line: 1010, column: 18)
!7973 = !DILocation(line: 1011, column: 11, scope: !7972)
!7974 = !DILocation(line: 1011, column: 26, scope: !7971)
!7975 = !DILocation(line: 1011, column: 34, scope: !7971)
!7976 = !DILocation(line: 1011, column: 42, scope: !7971)
!7977 = !DILocation(line: 1011, column: 15, scope: !7971)
!7978 = !DILocation(line: 1012, column: 36, scope: !7972)
!7979 = !DILocation(line: 1012, column: 7, scope: !7972)
!7980 = !DILocation(line: 1013, column: 19, scope: !7972)
!7981 = !DILocation(line: 1013, column: 22, scope: !7972)
!7982 = !DILocation(line: 1013, column: 26, scope: !7972)
!7983 = !DILocation(line: 1013, column: 30, scope: !7972)
!7984 = !DILocation(line: 1013, column: 7, scope: !7972)
!7985 = !DILocation(line: 1014, column: 6, scope: !7972)
!7986 = !DILocation(line: 1015, column: 5, scope: !7925)
!7987 = !DILocation(line: 1016, column: 15, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7921, file: !1, line: 1016, column: 14)
!7989 = !DILocation(line: 1016, column: 14, scope: !7921)
!7990 = !DILocation(line: 1017, column: 10, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7992, file: !1, line: 1017, column: 10)
!7992 = distinct !DILexicalBlock(scope: !7988, file: !1, line: 1016, column: 27)
!7993 = !DILocation(line: 1017, column: 10, scope: !7992)
!7994 = !DILocation(line: 1018, column: 19, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7991, file: !1, line: 1017, column: 16)
!7996 = !DILocation(line: 1018, column: 7, scope: !7995)
!7997 = !DILocation(line: 1019, column: 6, scope: !7995)
!7998 = !DILocalVariable(name: "nor", scope: !7999, file: !1, line: 1021, type: !422)
!7999 = distinct !DILexicalBlock(scope: !7991, file: !1, line: 1020, column: 11)
!8000 = !DILocation(line: 1021, column: 13, scope: !7999)
!8001 = !DILocation(line: 1022, column: 11, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7999, file: !1, line: 1022, column: 11)
!8003 = !DILocation(line: 1022, column: 15, scope: !8002)
!8004 = !DILocation(line: 1022, column: 11, scope: !7999)
!8005 = !DILocation(line: 1023, column: 23, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8002, file: !1, line: 1022, column: 19)
!8007 = !DILocation(line: 1023, column: 28, scope: !8006)
!8008 = !DILocation(line: 1023, column: 31, scope: !8006)
!8009 = !DILocation(line: 1023, column: 35, scope: !8006)
!8010 = !DILocation(line: 1023, column: 39, scope: !8006)
!8011 = !DILocation(line: 1023, column: 43, scope: !8006)
!8012 = !DILocation(line: 1023, column: 46, scope: !8006)
!8013 = !DILocation(line: 1023, column: 50, scope: !8006)
!8014 = !DILocation(line: 1023, column: 54, scope: !8006)
!8015 = !DILocation(line: 1023, column: 58, scope: !8006)
!8016 = !DILocation(line: 1023, column: 61, scope: !8006)
!8017 = !DILocation(line: 1023, column: 65, scope: !8006)
!8018 = !DILocation(line: 1023, column: 69, scope: !8006)
!8019 = !DILocation(line: 1023, column: 73, scope: !8006)
!8020 = !DILocation(line: 1023, column: 76, scope: !8006)
!8021 = !DILocation(line: 1023, column: 80, scope: !8006)
!8022 = !DILocation(line: 1023, column: 84, scope: !8006)
!8023 = !DILocation(line: 1023, column: 8, scope: !8006)
!8024 = !DILocation(line: 1024, column: 7, scope: !8006)
!8025 = !DILocation(line: 1026, column: 22, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8002, file: !1, line: 1025, column: 12)
!8027 = !DILocation(line: 1026, column: 27, scope: !8026)
!8028 = !DILocation(line: 1026, column: 30, scope: !8026)
!8029 = !DILocation(line: 1026, column: 34, scope: !8026)
!8030 = !DILocation(line: 1026, column: 38, scope: !8026)
!8031 = !DILocation(line: 1026, column: 42, scope: !8026)
!8032 = !DILocation(line: 1026, column: 45, scope: !8026)
!8033 = !DILocation(line: 1026, column: 49, scope: !8026)
!8034 = !DILocation(line: 1026, column: 53, scope: !8026)
!8035 = !DILocation(line: 1026, column: 57, scope: !8026)
!8036 = !DILocation(line: 1026, column: 60, scope: !8026)
!8037 = !DILocation(line: 1026, column: 64, scope: !8026)
!8038 = !DILocation(line: 1026, column: 68, scope: !8026)
!8039 = !DILocation(line: 1026, column: 8, scope: !8026)
!8040 = !DILocation(line: 1028, column: 19, scope: !7999)
!8041 = !DILocation(line: 1028, column: 7, scope: !7999)
!8042 = !DILocation(line: 1031, column: 10, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !7992, file: !1, line: 1031, column: 10)
!8044 = !DILocation(line: 1031, column: 10, scope: !7992)
!8045 = !DILocation(line: 1031, column: 25, scope: !8043)
!8046 = !DILocation(line: 1031, column: 32, scope: !8043)
!8047 = !DILocation(line: 1031, column: 39, scope: !8043)
!8048 = !DILocation(line: 1031, column: 14, scope: !8043)
!8049 = !DILocation(line: 1032, column: 18, scope: !7992)
!8050 = !DILocation(line: 1032, column: 21, scope: !7992)
!8051 = !DILocation(line: 1032, column: 25, scope: !7992)
!8052 = !DILocation(line: 1032, column: 29, scope: !7992)
!8053 = !DILocation(line: 1032, column: 6, scope: !7992)
!8054 = !DILocation(line: 1033, column: 10, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !7992, file: !1, line: 1033, column: 10)
!8056 = !DILocation(line: 1033, column: 10, scope: !7992)
!8057 = !DILocation(line: 1033, column: 25, scope: !8055)
!8058 = !DILocation(line: 1033, column: 32, scope: !8055)
!8059 = !DILocation(line: 1033, column: 39, scope: !8055)
!8060 = !DILocation(line: 1033, column: 14, scope: !8055)
!8061 = !DILocation(line: 1034, column: 18, scope: !7992)
!8062 = !DILocation(line: 1034, column: 21, scope: !7992)
!8063 = !DILocation(line: 1034, column: 25, scope: !7992)
!8064 = !DILocation(line: 1034, column: 29, scope: !7992)
!8065 = !DILocation(line: 1034, column: 6, scope: !7992)
!8066 = !DILocation(line: 1035, column: 10, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !7992, file: !1, line: 1035, column: 10)
!8068 = !DILocation(line: 1035, column: 10, scope: !7992)
!8069 = !DILocation(line: 1035, column: 25, scope: !8067)
!8070 = !DILocation(line: 1035, column: 33, scope: !8067)
!8071 = !DILocation(line: 1035, column: 41, scope: !8067)
!8072 = !DILocation(line: 1035, column: 14, scope: !8067)
!8073 = !DILocation(line: 1036, column: 18, scope: !7992)
!8074 = !DILocation(line: 1036, column: 21, scope: !7992)
!8075 = !DILocation(line: 1036, column: 25, scope: !7992)
!8076 = !DILocation(line: 1036, column: 29, scope: !7992)
!8077 = !DILocation(line: 1036, column: 6, scope: !7992)
!8078 = !DILocation(line: 1037, column: 10, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !7992, file: !1, line: 1037, column: 10)
!8080 = !DILocation(line: 1037, column: 14, scope: !8079)
!8081 = !DILocation(line: 1037, column: 10, scope: !7992)
!8082 = !DILocation(line: 1038, column: 11, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8084, file: !1, line: 1038, column: 11)
!8084 = distinct !DILexicalBlock(scope: !8079, file: !1, line: 1037, column: 18)
!8085 = !DILocation(line: 1038, column: 11, scope: !8084)
!8086 = !DILocation(line: 1038, column: 26, scope: !8083)
!8087 = !DILocation(line: 1038, column: 34, scope: !8083)
!8088 = !DILocation(line: 1038, column: 42, scope: !8083)
!8089 = !DILocation(line: 1038, column: 15, scope: !8083)
!8090 = !DILocation(line: 1039, column: 19, scope: !8084)
!8091 = !DILocation(line: 1039, column: 22, scope: !8084)
!8092 = !DILocation(line: 1039, column: 26, scope: !8084)
!8093 = !DILocation(line: 1039, column: 30, scope: !8084)
!8094 = !DILocation(line: 1039, column: 7, scope: !8084)
!8095 = !DILocation(line: 1040, column: 6, scope: !8084)
!8096 = !DILocation(line: 1041, column: 5, scope: !7992)
!8097 = !DILocation(line: 1043, column: 10, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8099, file: !1, line: 1043, column: 10)
!8099 = distinct !DILexicalBlock(scope: !7988, file: !1, line: 1042, column: 10)
!8100 = !DILocation(line: 1043, column: 10, scope: !8099)
!8101 = !DILocation(line: 1043, column: 25, scope: !8098)
!8102 = !DILocation(line: 1043, column: 32, scope: !8098)
!8103 = !DILocation(line: 1043, column: 39, scope: !8098)
!8104 = !DILocation(line: 1043, column: 14, scope: !8098)
!8105 = !DILocation(line: 1044, column: 18, scope: !8099)
!8106 = !DILocation(line: 1044, column: 21, scope: !8099)
!8107 = !DILocation(line: 1044, column: 25, scope: !8099)
!8108 = !DILocation(line: 1044, column: 29, scope: !8099)
!8109 = !DILocation(line: 1044, column: 6, scope: !8099)
!8110 = !DILocation(line: 1045, column: 18, scope: !8099)
!8111 = !DILocation(line: 1045, column: 21, scope: !8099)
!8112 = !DILocation(line: 1045, column: 25, scope: !8099)
!8113 = !DILocation(line: 1045, column: 29, scope: !8099)
!8114 = !DILocation(line: 1045, column: 6, scope: !8099)
!8115 = !DILocation(line: 1046, column: 10, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8099, file: !1, line: 1046, column: 10)
!8117 = !DILocation(line: 1046, column: 10, scope: !8099)
!8118 = !DILocation(line: 1046, column: 25, scope: !8116)
!8119 = !DILocation(line: 1046, column: 32, scope: !8116)
!8120 = !DILocation(line: 1046, column: 39, scope: !8116)
!8121 = !DILocation(line: 1046, column: 14, scope: !8116)
!8122 = !DILocation(line: 1047, column: 18, scope: !8099)
!8123 = !DILocation(line: 1047, column: 21, scope: !8099)
!8124 = !DILocation(line: 1047, column: 25, scope: !8099)
!8125 = !DILocation(line: 1047, column: 29, scope: !8099)
!8126 = !DILocation(line: 1047, column: 6, scope: !8099)
!8127 = !DILocation(line: 1048, column: 18, scope: !8099)
!8128 = !DILocation(line: 1048, column: 21, scope: !8099)
!8129 = !DILocation(line: 1048, column: 25, scope: !8099)
!8130 = !DILocation(line: 1048, column: 29, scope: !8099)
!8131 = !DILocation(line: 1048, column: 6, scope: !8099)
!8132 = !DILocation(line: 1049, column: 10, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8099, file: !1, line: 1049, column: 10)
!8134 = !DILocation(line: 1049, column: 10, scope: !8099)
!8135 = !DILocation(line: 1049, column: 25, scope: !8133)
!8136 = !DILocation(line: 1049, column: 33, scope: !8133)
!8137 = !DILocation(line: 1049, column: 41, scope: !8133)
!8138 = !DILocation(line: 1049, column: 14, scope: !8133)
!8139 = !DILocation(line: 1050, column: 18, scope: !8099)
!8140 = !DILocation(line: 1050, column: 21, scope: !8099)
!8141 = !DILocation(line: 1050, column: 25, scope: !8099)
!8142 = !DILocation(line: 1050, column: 29, scope: !8099)
!8143 = !DILocation(line: 1050, column: 6, scope: !8099)
!8144 = !DILocation(line: 1051, column: 18, scope: !8099)
!8145 = !DILocation(line: 1051, column: 21, scope: !8099)
!8146 = !DILocation(line: 1051, column: 25, scope: !8099)
!8147 = !DILocation(line: 1051, column: 29, scope: !8099)
!8148 = !DILocation(line: 1051, column: 6, scope: !8099)
!8149 = !DILocation(line: 1052, column: 10, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8099, file: !1, line: 1052, column: 10)
!8151 = !DILocation(line: 1052, column: 14, scope: !8150)
!8152 = !DILocation(line: 1052, column: 10, scope: !8099)
!8153 = !DILocation(line: 1053, column: 11, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8155, file: !1, line: 1053, column: 11)
!8155 = distinct !DILexicalBlock(scope: !8150, file: !1, line: 1052, column: 18)
!8156 = !DILocation(line: 1053, column: 11, scope: !8155)
!8157 = !DILocation(line: 1053, column: 26, scope: !8154)
!8158 = !DILocation(line: 1053, column: 34, scope: !8154)
!8159 = !DILocation(line: 1053, column: 42, scope: !8154)
!8160 = !DILocation(line: 1053, column: 15, scope: !8154)
!8161 = !DILocation(line: 1054, column: 19, scope: !8155)
!8162 = !DILocation(line: 1054, column: 22, scope: !8155)
!8163 = !DILocation(line: 1054, column: 26, scope: !8155)
!8164 = !DILocation(line: 1054, column: 30, scope: !8155)
!8165 = !DILocation(line: 1054, column: 7, scope: !8155)
!8166 = !DILocation(line: 1055, column: 19, scope: !8155)
!8167 = !DILocation(line: 1055, column: 22, scope: !8155)
!8168 = !DILocation(line: 1055, column: 26, scope: !8155)
!8169 = !DILocation(line: 1055, column: 30, scope: !8155)
!8170 = !DILocation(line: 1055, column: 7, scope: !8155)
!8171 = !DILocation(line: 1056, column: 6, scope: !8155)
!8172 = !DILocation(line: 1059, column: 5, scope: !7895)
!8173 = !DILocation(line: 1061, column: 9, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !7895, file: !1, line: 1061, column: 9)
!8175 = !DILocation(line: 1061, column: 21, scope: !8174)
!8176 = !DILocation(line: 1061, column: 9, scope: !7895)
!8177 = !DILocation(line: 1062, column: 6, scope: !8174)
!8178 = !DILocation(line: 1063, column: 4, scope: !7895)
!8179 = !DILocation(line: 1065, column: 8, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !7851, file: !1, line: 1065, column: 8)
!8181 = !DILocation(line: 1065, column: 8, scope: !7851)
!8182 = !DILocation(line: 1066, column: 10, scope: !8180)
!8183 = !DILocation(line: 1066, column: 5, scope: !8180)
!8184 = !DILocation(line: 1067, column: 8, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !7851, file: !1, line: 1067, column: 8)
!8186 = !DILocation(line: 1067, column: 8, scope: !7851)
!8187 = !DILocation(line: 1068, column: 10, scope: !8185)
!8188 = !DILocation(line: 1068, column: 5, scope: !8185)
!8189 = !DILocation(line: 1069, column: 3, scope: !7851)
!8190 = !DILocation(line: 973, column: 41, scope: !7845)
!8191 = !DILocation(line: 973, column: 47, scope: !7845)
!8192 = !DILocation(line: 973, column: 3, scope: !7845)
!8193 = distinct !{!8193, !7849, !8194}
!8194 = !DILocation(line: 1069, column: 3, scope: !7841)
!8195 = !DILocation(line: 1070, column: 2, scope: !7842)
!8196 = !DILocalVariable(name: "prevstart", scope: !8197, file: !1, line: 1072, type: !219)
!8197 = distinct !DILexicalBlock(scope: !7834, file: !1, line: 1071, column: 7)
!8198 = !DILocation(line: 1072, column: 7, scope: !8197)
!8199 = !DILocation(line: 1073, column: 20, scope: !8197)
!8200 = !DILocation(line: 1073, column: 3, scope: !8197)
!8201 = !DILocation(line: 1074, column: 20, scope: !8197)
!8202 = !DILocation(line: 1074, column: 3, scope: !8197)
!8203 = !DILocation(line: 1075, column: 7, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !8197, file: !1, line: 1075, column: 7)
!8205 = !DILocation(line: 1075, column: 17, scope: !8204)
!8206 = !DILocation(line: 1075, column: 20, scope: !8204)
!8207 = !DILocation(line: 1075, column: 7, scope: !8197)
!8208 = !DILocation(line: 1076, column: 20, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8204, file: !1, line: 1075, column: 26)
!8210 = !DILocation(line: 1076, column: 24, scope: !8209)
!8211 = !DILocation(line: 1076, column: 4, scope: !8209)
!8212 = !DILocation(line: 1077, column: 3, scope: !8209)
!8213 = !DILocation(line: 1078, column: 26, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8197, file: !1, line: 1078, column: 7)
!8215 = !DILocation(line: 1078, column: 8, scope: !8214)
!8216 = !DILocation(line: 1078, column: 7, scope: !8197)
!8217 = !DILocalVariable(name: "tottri", scope: !8218, file: !1, line: 1079, type: !219)
!8218 = distinct !DILexicalBlock(scope: !8214, file: !1, line: 1078, column: 31)
!8219 = !DILocation(line: 1079, column: 8, scope: !8218)
!8220 = !DILocation(line: 1079, column: 17, scope: !8218)
!8221 = !DILocation(line: 1079, column: 21, scope: !8218)
!8222 = !DILocation(line: 1079, column: 33, scope: !8218)
!8223 = !DILocation(line: 1079, column: 52, scope: !8218)
!8224 = !DILocation(line: 1080, column: 4, scope: !8218)
!8225 = !DILocation(line: 1082, column: 8, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8218, file: !1, line: 1082, column: 8)
!8227 = !DILocation(line: 1082, column: 15, scope: !8226)
!8228 = !DILocation(line: 1082, column: 8, scope: !8218)
!8229 = !DILocation(line: 1084, column: 4, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8226, file: !1, line: 1082, column: 21)
!8231 = !DILocation(line: 1085, column: 8, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8218, file: !1, line: 1085, column: 8)
!8233 = !DILocation(line: 1085, column: 23, scope: !8232)
!8234 = !DILocation(line: 1085, column: 8, scope: !8218)
!8235 = !DILocation(line: 1087, column: 36, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8232, file: !1, line: 1085, column: 32)
!8237 = !DILocation(line: 1087, column: 44, scope: !8236)
!8238 = !DILocation(line: 1087, column: 5, scope: !8236)
!8239 = !DILocation(line: 1088, column: 4, scope: !8236)
!8240 = !DILocalVariable(name: "next_actualFace", scope: !8241, file: !1, line: 1091, type: !219)
!8241 = distinct !DILexicalBlock(scope: !8232, file: !1, line: 1089, column: 9)
!8242 = !DILocation(line: 1091, column: 9, scope: !8241)
!8243 = !DILocation(line: 1091, column: 27, scope: !8241)
!8244 = !DILocation(line: 1091, column: 31, scope: !8241)
!8245 = !DILocation(line: 1091, column: 43, scope: !8241)
!8246 = !DILocation(line: 1093, column: 12, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8241, file: !1, line: 1093, column: 5)
!8248 = !DILocation(line: 1093, column: 10, scope: !8247)
!8249 = !DILocation(line: 1093, column: 17, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8247, file: !1, line: 1093, column: 5)
!8251 = !DILocation(line: 1093, column: 21, scope: !8250)
!8252 = !DILocation(line: 1093, column: 19, scope: !8250)
!8253 = !DILocation(line: 1093, column: 5, scope: !8247)
!8254 = !DILocalVariable(name: "actualFace", scope: !8255, file: !1, line: 1095, type: !219)
!8255 = distinct !DILexicalBlock(scope: !8250, file: !1, line: 1093, column: 34)
!8256 = !DILocation(line: 1095, column: 10, scope: !8255)
!8257 = !DILocation(line: 1095, column: 23, scope: !8255)
!8258 = !DILocalVariable(name: "mface", scope: !8255, file: !1, line: 1096, type: !1786)
!8259 = !DILocation(line: 1096, column: 13, scope: !8255)
!8260 = !DILocation(line: 1096, column: 21, scope: !8255)
!8261 = !DILocation(line: 1096, column: 26, scope: !8255)
!8262 = !DILocation(line: 1096, column: 24, scope: !8255)
!8263 = !DILocalVariable(name: "draw_option", scope: !8255, file: !1, line: 1098, type: !1717)
!8264 = !DILocation(line: 1098, column: 19, scope: !8255)
!8265 = !DILocalVariable(name: "flush", scope: !8255, file: !1, line: 1099, type: !219)
!8266 = !DILocation(line: 1099, column: 10, scope: !8255)
!8267 = !DILocation(line: 1101, column: 10, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !8255, file: !1, line: 1101, column: 10)
!8269 = !DILocation(line: 1101, column: 15, scope: !8268)
!8270 = !DILocation(line: 1101, column: 22, scope: !8268)
!8271 = !DILocation(line: 1101, column: 12, scope: !8268)
!8272 = !DILocation(line: 1101, column: 10, scope: !8255)
!8273 = !DILocation(line: 1102, column: 25, scope: !8268)
!8274 = !DILocation(line: 1102, column: 29, scope: !8268)
!8275 = !DILocation(line: 1102, column: 41, scope: !8268)
!8276 = !DILocation(line: 1102, column: 59, scope: !8268)
!8277 = !DILocation(line: 1102, column: 61, scope: !8268)
!8278 = !DILocation(line: 1102, column: 23, scope: !8268)
!8279 = !DILocation(line: 1102, column: 7, scope: !8268)
!8280 = !DILocation(line: 1104, column: 14, scope: !8255)
!8281 = !DILocation(line: 1104, column: 13, scope: !8255)
!8282 = !DILocation(line: 1104, column: 60, scope: !8255)
!8283 = !DILocation(line: 1104, column: 79, scope: !8255)
!8284 = !DILocation(line: 1104, column: 97, scope: !8255)
!8285 = !DILocation(line: 1104, column: 35, scope: !8255)
!8286 = !DILocation(line: 1104, column: 111, scope: !8255)
!8287 = !DILocation(line: 1104, column: 11, scope: !8255)
!8288 = !DILocation(line: 1106, column: 10, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8255, file: !1, line: 1106, column: 10)
!8290 = !DILocation(line: 1106, column: 15, scope: !8289)
!8291 = !DILocation(line: 1106, column: 10, scope: !8255)
!8292 = !DILocation(line: 1107, column: 21, scope: !8289)
!8293 = !DILocation(line: 1107, column: 33, scope: !8289)
!8294 = !DILocation(line: 1107, column: 40, scope: !8289)
!8295 = !DILocation(line: 1107, column: 47, scope: !8289)
!8296 = !DILocation(line: 1107, column: 19, scope: !8289)
!8297 = !DILocation(line: 1107, column: 7, scope: !8289)
!8298 = !DILocation(line: 1108, column: 15, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8289, file: !1, line: 1108, column: 15)
!8300 = !DILocation(line: 1108, column: 30, scope: !8299)
!8301 = !DILocation(line: 1108, column: 15, scope: !8289)
!8302 = !DILocation(line: 1109, column: 21, scope: !8299)
!8303 = !DILocation(line: 1109, column: 36, scope: !8299)
!8304 = !DILocation(line: 1109, column: 46, scope: !8299)
!8305 = !DILocation(line: 1109, column: 19, scope: !8299)
!8306 = !DILocation(line: 1109, column: 7, scope: !8299)
!8307 = !DILocation(line: 1111, column: 10, scope: !8308)
!8308 = distinct !DILexicalBlock(scope: !8255, file: !1, line: 1111, column: 10)
!8309 = !DILocation(line: 1111, column: 22, scope: !8308)
!8310 = !DILocation(line: 1111, column: 10, scope: !8255)
!8311 = !DILocation(line: 1112, column: 7, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8308, file: !1, line: 1111, column: 49)
!8313 = !DILocation(line: 1113, column: 7, scope: !8312)
!8314 = !DILocation(line: 1114, column: 6, scope: !8312)
!8315 = !DILocation(line: 1121, column: 15, scope: !8255)
!8316 = !DILocation(line: 1121, column: 79, scope: !8255)
!8317 = !DILocation(line: 1121, column: 83, scope: !8255)
!8318 = !DILocation(line: 1121, column: 88, scope: !8255)
!8319 = !DILocation(line: 1121, column: 95, scope: !8255)
!8320 = !DILocation(line: 1121, column: 85, scope: !8255)
!8321 = !DILocation(line: 1121, column: 12, scope: !8255)
!8322 = !DILocation(line: 1124, column: 15, scope: !8255)
!8323 = !DILocation(line: 1124, column: 18, scope: !8255)
!8324 = !DILocation(line: 1124, column: 30, scope: !8255)
!8325 = !DILocation(line: 1124, column: 40, scope: !8255)
!8326 = !DILocation(line: 1124, column: 43, scope: !8255)
!8327 = !DILocation(line: 1124, column: 60, scope: !8255)
!8328 = !DILocation(line: 1124, column: 37, scope: !8255)
!8329 = !DILocation(line: 1124, column: 12, scope: !8255)
!8330 = !DILocation(line: 1126, column: 11, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8255, file: !1, line: 1126, column: 10)
!8332 = !DILocation(line: 1126, column: 17, scope: !8331)
!8333 = !DILocation(line: 1126, column: 20, scope: !8331)
!8334 = !DILocation(line: 1126, column: 10, scope: !8255)
!8335 = !DILocation(line: 1127, column: 16, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !8331, file: !1, line: 1126, column: 40)
!8337 = !DILocation(line: 1127, column: 35, scope: !8336)
!8338 = !DILocation(line: 1127, column: 45, scope: !8336)
!8339 = !DILocation(line: 1127, column: 57, scope: !8336)
!8340 = !DILocation(line: 1127, column: 74, scope: !8336)
!8341 = !DILocation(line: 1127, column: 13, scope: !8336)
!8342 = !DILocation(line: 1128, column: 6, scope: !8336)
!8343 = !DILocation(line: 1130, column: 10, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8255, file: !1, line: 1130, column: 10)
!8345 = !DILocation(line: 1130, column: 10, scope: !8255)
!8346 = !DILocalVariable(name: "first", scope: !8347, file: !1, line: 1131, type: !219)
!8347 = distinct !DILexicalBlock(scope: !8344, file: !1, line: 1130, column: 17)
!8348 = !DILocation(line: 1131, column: 11, scope: !8347)
!8349 = !DILocation(line: 1131, column: 19, scope: !8347)
!8350 = !DILocation(line: 1131, column: 29, scope: !8347)
!8351 = !DILocalVariable(name: "count", scope: !8347, file: !1, line: 1133, type: !219)
!8352 = !DILocation(line: 1133, column: 11, scope: !8347)
!8353 = !DILocation(line: 1133, column: 20, scope: !8347)
!8354 = !DILocation(line: 1133, column: 24, scope: !8347)
!8355 = !DILocation(line: 1133, column: 22, scope: !8347)
!8356 = !DILocation(line: 1133, column: 37, scope: !8347)
!8357 = !DILocation(line: 1133, column: 49, scope: !8347)
!8358 = !DILocation(line: 1133, column: 34, scope: !8347)
!8359 = !DILocation(line: 1133, column: 82, scope: !8347)
!8360 = !DILocation(line: 1135, column: 11, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8347, file: !1, line: 1135, column: 11)
!8362 = !DILocation(line: 1135, column: 11, scope: !8347)
!8363 = !DILocation(line: 1136, column: 35, scope: !8361)
!8364 = !DILocation(line: 1136, column: 42, scope: !8361)
!8365 = !DILocation(line: 1136, column: 8, scope: !8361)
!8366 = !DILocation(line: 1138, column: 19, scope: !8347)
!8367 = !DILocation(line: 1138, column: 21, scope: !8347)
!8368 = !DILocation(line: 1138, column: 17, scope: !8347)
!8369 = !DILocation(line: 1140, column: 11, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8347, file: !1, line: 1140, column: 11)
!8371 = !DILocation(line: 1140, column: 23, scope: !8370)
!8372 = !DILocation(line: 1140, column: 11, scope: !8347)
!8373 = !DILocation(line: 1141, column: 8, scope: !8370)
!8374 = !DILocation(line: 1142, column: 6, scope: !8347)
!8375 = !DILocation(line: 1143, column: 5, scope: !8255)
!8376 = !DILocation(line: 1093, column: 30, scope: !8250)
!8377 = !DILocation(line: 1093, column: 5, scope: !8250)
!8378 = distinct !{!8378, !8253, !8379}
!8379 = !DILocation(line: 1143, column: 5, scope: !8247)
!8380 = !DILocation(line: 1146, column: 4, scope: !8218)
!8381 = !DILocation(line: 1147, column: 3, scope: !8218)
!8382 = !DILocation(line: 1148, column: 3, scope: !8197)
!8383 = !DILocation(line: 1150, column: 1, scope: !7741)
!8384 = distinct !DISubprogram(name: "cdDM_drawMappedFacesTex", scope: !1, file: !1, line: 1152, type: !1750, scopeLine: 1156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!8385 = !DILocalVariable(name: "dm", arg: 1, scope: !8384, file: !1, line: 1152, type: !1477)
!8386 = !DILocation(line: 1152, column: 50, scope: !8384)
!8387 = !DILocalVariable(name: "setDrawOptions", arg: 2, scope: !8384, file: !1, line: 1153, type: !1744)
!8388 = !DILocation(line: 1153, column: 54, scope: !8384)
!8389 = !DILocalVariable(name: "compareDrawOptions", arg: 3, scope: !8384, file: !1, line: 1154, type: !1731)
!8390 = !DILocation(line: 1154, column: 58, scope: !8384)
!8391 = !DILocalVariable(name: "userData", arg: 4, scope: !8384, file: !1, line: 1155, type: !233)
!8392 = !DILocation(line: 1155, column: 43, scope: !8384)
!8393 = !DILocalVariable(name: "flag", arg: 5, scope: !8384, file: !1, line: 1155, type: !1735)
!8394 = !DILocation(line: 1155, column: 64, scope: !8384)
!8395 = !DILocation(line: 1157, column: 27, scope: !8384)
!8396 = !DILocation(line: 1157, column: 37, scope: !8384)
!8397 = !DILocation(line: 1157, column: 53, scope: !8384)
!8398 = !DILocation(line: 1157, column: 73, scope: !8384)
!8399 = !DILocation(line: 1157, column: 83, scope: !8384)
!8400 = !DILocation(line: 1157, column: 2, scope: !8384)
!8401 = !DILocation(line: 1158, column: 1, scope: !8384)
!8402 = distinct !DISubprogram(name: "cdDM_drawMappedFacesGLSL", scope: !1, file: !1, line: 1229, type: !1754, scopeLine: 1233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!8403 = !DILocalVariable(name: "dm", arg: 1, scope: !8402, file: !1, line: 1229, type: !1477)
!8404 = !DILocation(line: 1229, column: 51, scope: !8402)
!8405 = !DILocalVariable(name: "setMaterial", arg: 2, scope: !8402, file: !1, line: 1230, type: !1705)
!8406 = !DILocation(line: 1230, column: 52, scope: !8402)
!8407 = !DILocalVariable(name: "setDrawOptions", arg: 3, scope: !8402, file: !1, line: 1231, type: !1744)
!8408 = !DILocation(line: 1231, column: 55, scope: !8402)
!8409 = !DILocalVariable(name: "userData", arg: 4, scope: !8402, file: !1, line: 1232, type: !233)
!8410 = !DILocation(line: 1232, column: 44, scope: !8402)
!8411 = !DILocalVariable(name: "cddm", scope: !8402, file: !1, line: 1234, type: !201)
!8412 = !DILocation(line: 1234, column: 17, scope: !8402)
!8413 = !DILocation(line: 1234, column: 42, scope: !8402)
!8414 = !DILocation(line: 1234, column: 24, scope: !8402)
!8415 = !DILocalVariable(name: "gattribs", scope: !8402, file: !1, line: 1235, type: !8416)
!8416 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUVertexAttribs", file: !8417, line: 206, baseType: !8418)
!8417 = !DIFile(filename: "blender/source/blender/gpu/GPU_extensions.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUVertexAttribs", file: !8417, line: 196, size: 20512, elements: !8419)
!8419 = !{!8420, !8429}
!8420 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !8418, file: !8417, line: 203, baseType: !8421, size: 20480)
!8421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8422, size: 20480, elements: !535)
!8422 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8418, file: !8417, line: 197, size: 640, elements: !8423)
!8423 = !{!8424, !8425, !8426, !8427, !8428}
!8424 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8422, file: !8417, line: 198, baseType: !219, size: 32)
!8425 = !DIDerivedType(tag: DW_TAG_member, name: "glindex", scope: !8422, file: !8417, line: 199, baseType: !219, size: 32, offset: 32)
!8426 = !DIDerivedType(tag: DW_TAG_member, name: "gltexco", scope: !8422, file: !8417, line: 200, baseType: !219, size: 32, offset: 64)
!8427 = !DIDerivedType(tag: DW_TAG_member, name: "attribid", scope: !8422, file: !8417, line: 201, baseType: !219, size: 32, offset: 96)
!8428 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8422, file: !8417, line: 202, baseType: !228, size: 512, offset: 128)
!8429 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !8418, file: !8417, line: 205, baseType: !219, size: 32, offset: 20480)
!8430 = !DILocation(line: 1235, column: 19, scope: !8402)
!8431 = !DILocalVariable(name: "attribs", scope: !8402, file: !1, line: 1236, type: !8432)
!8432 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMVertexAttribs", file: !4, line: 743, baseType: !8433)
!8433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMVertexAttribs", file: !4, line: 721, size: 3008, elements: !8434)
!8434 = !{!8435, !8443, !8450, !8456, !8463, !8464, !8465, !8466}
!8435 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !8433, file: !4, line: 725, baseType: !8436, size: 1536)
!8436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8437, size: 1536, elements: !1176)
!8437 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8433, file: !4, line: 722, size: 192, elements: !8438)
!8438 = !{!8439, !8440, !8441, !8442}
!8439 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !8437, file: !4, line: 723, baseType: !1718, size: 64)
!8440 = !DIDerivedType(tag: DW_TAG_member, name: "em_offset", scope: !8437, file: !4, line: 724, baseType: !219, size: 32, offset: 64)
!8441 = !DIDerivedType(tag: DW_TAG_member, name: "gl_index", scope: !8437, file: !4, line: 724, baseType: !219, size: 32, offset: 96)
!8442 = !DIDerivedType(tag: DW_TAG_member, name: "gl_texco", scope: !8437, file: !4, line: 724, baseType: !219, size: 32, offset: 128)
!8443 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !8433, file: !4, line: 730, baseType: !8444, size: 1024, offset: 1536)
!8444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8445, size: 1024, elements: !1176)
!8445 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8433, file: !4, line: 727, size: 128, elements: !8446)
!8446 = !{!8447, !8448, !8449}
!8447 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !8445, file: !4, line: 728, baseType: !2327, size: 64)
!8448 = !DIDerivedType(tag: DW_TAG_member, name: "em_offset", scope: !8445, file: !4, line: 729, baseType: !219, size: 32, offset: 64)
!8449 = !DIDerivedType(tag: DW_TAG_member, name: "gl_index", scope: !8445, file: !4, line: 729, baseType: !219, size: 32, offset: 96)
!8450 = !DIDerivedType(tag: DW_TAG_member, name: "tang", scope: !8433, file: !4, line: 735, baseType: !8451, size: 128, offset: 2560)
!8451 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8433, file: !4, line: 732, size: 128, elements: !8452)
!8452 = !{!8453, !8454, !8455}
!8453 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !8451, file: !4, line: 733, baseType: !1704, size: 64)
!8454 = !DIDerivedType(tag: DW_TAG_member, name: "em_offset", scope: !8451, file: !4, line: 734, baseType: !219, size: 32, offset: 64)
!8455 = !DIDerivedType(tag: DW_TAG_member, name: "gl_index", scope: !8451, file: !4, line: 734, baseType: !219, size: 32, offset: 96)
!8456 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !8433, file: !4, line: 740, baseType: !8457, size: 192, offset: 2688)
!8457 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8433, file: !4, line: 737, size: 192, elements: !8458)
!8458 = !{!8459, !8460, !8461, !8462}
!8459 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !8457, file: !4, line: 738, baseType: !596, size: 64)
!8460 = !DIDerivedType(tag: DW_TAG_member, name: "em_offset", scope: !8457, file: !4, line: 739, baseType: !219, size: 32, offset: 64)
!8461 = !DIDerivedType(tag: DW_TAG_member, name: "gl_index", scope: !8457, file: !4, line: 739, baseType: !219, size: 32, offset: 96)
!8462 = !DIDerivedType(tag: DW_TAG_member, name: "gl_texco", scope: !8457, file: !4, line: 739, baseType: !219, size: 32, offset: 128)
!8463 = !DIDerivedType(tag: DW_TAG_member, name: "tottface", scope: !8433, file: !4, line: 742, baseType: !219, size: 32, offset: 2880)
!8464 = !DIDerivedType(tag: DW_TAG_member, name: "totmcol", scope: !8433, file: !4, line: 742, baseType: !219, size: 32, offset: 2912)
!8465 = !DIDerivedType(tag: DW_TAG_member, name: "tottang", scope: !8433, file: !4, line: 742, baseType: !219, size: 32, offset: 2944)
!8466 = !DIDerivedType(tag: DW_TAG_member, name: "totorco", scope: !8433, file: !4, line: 742, baseType: !219, size: 32, offset: 2976)
!8467 = !DILocation(line: 1236, column: 18, scope: !8402)
!8468 = !DILocalVariable(name: "mvert", scope: !8402, file: !1, line: 1237, type: !8469)
!8469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8470, size: 64)
!8470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1781)
!8471 = !DILocation(line: 1237, column: 15, scope: !8402)
!8472 = !DILocation(line: 1237, column: 23, scope: !8402)
!8473 = !DILocation(line: 1237, column: 29, scope: !8402)
!8474 = !DILocalVariable(name: "mface", scope: !8402, file: !1, line: 1238, type: !8475)
!8475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8476, size: 64)
!8476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1787)
!8477 = !DILocation(line: 1238, column: 15, scope: !8402)
!8478 = !DILocation(line: 1238, column: 23, scope: !8402)
!8479 = !DILocation(line: 1238, column: 29, scope: !8402)
!8480 = !DILocalVariable(name: "nors", scope: !8402, file: !1, line: 1240, type: !8481)
!8481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8482, size: 64)
!8482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1482, size: 96, elements: !423)
!8483 = !DILocation(line: 1240, column: 16, scope: !8402)
!8484 = !DILocation(line: 1240, column: 27, scope: !8402)
!8485 = !DILocation(line: 1240, column: 31, scope: !8402)
!8486 = !DILocation(line: 1240, column: 52, scope: !8402)
!8487 = !DILocalVariable(name: "lnors", scope: !8402, file: !1, line: 1241, type: !7352)
!8488 = !DILocation(line: 1241, column: 16, scope: !8402)
!8489 = !DILocation(line: 1241, column: 31, scope: !8402)
!8490 = !DILocation(line: 1241, column: 35, scope: !8402)
!8491 = !DILocation(line: 1241, column: 56, scope: !8402)
!8492 = !DILocalVariable(name: "a", scope: !8402, file: !1, line: 1242, type: !219)
!8493 = !DILocation(line: 1242, column: 6, scope: !8402)
!8494 = !DILocalVariable(name: "b", scope: !8402, file: !1, line: 1242, type: !219)
!8495 = !DILocation(line: 1242, column: 9, scope: !8402)
!8496 = !DILocalVariable(name: "matnr", scope: !8402, file: !1, line: 1242, type: !219)
!8497 = !DILocation(line: 1242, column: 12, scope: !8402)
!8498 = !DILocalVariable(name: "new_matnr", scope: !8402, file: !1, line: 1242, type: !219)
!8499 = !DILocation(line: 1242, column: 19, scope: !8402)
!8500 = !DILocalVariable(name: "do_draw", scope: !8402, file: !1, line: 1243, type: !309)
!8501 = !DILocation(line: 1243, column: 7, scope: !8402)
!8502 = !DILocalVariable(name: "orig", scope: !8402, file: !1, line: 1244, type: !219)
!8503 = !DILocation(line: 1244, column: 6, scope: !8402)
!8504 = !DILocalVariable(name: "index_mf_to_mpoly", scope: !8402, file: !1, line: 1247, type: !3982)
!8505 = !DILocation(line: 1247, column: 13, scope: !8402)
!8506 = !DILocation(line: 1247, column: 33, scope: !8402)
!8507 = !DILocation(line: 1247, column: 37, scope: !8402)
!8508 = !DILocation(line: 1247, column: 58, scope: !8402)
!8509 = !DILocalVariable(name: "index_mp_to_orig", scope: !8402, file: !1, line: 1248, type: !3982)
!8510 = !DILocation(line: 1248, column: 13, scope: !8402)
!8511 = !DILocation(line: 1248, column: 33, scope: !8402)
!8512 = !DILocation(line: 1248, column: 37, scope: !8402)
!8513 = !DILocation(line: 1248, column: 54, scope: !8402)
!8514 = !DILocation(line: 1249, column: 6, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8402, file: !1, line: 1249, column: 6)
!8516 = !DILocation(line: 1249, column: 24, scope: !8515)
!8517 = !DILocation(line: 1249, column: 6, scope: !8402)
!8518 = !DILocation(line: 1250, column: 20, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !8515, file: !1, line: 1249, column: 33)
!8520 = !DILocation(line: 1251, column: 2, scope: !8519)
!8521 = !DILocation(line: 1257, column: 6, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8402, file: !1, line: 1257, column: 6)
!8523 = !DILocation(line: 1257, column: 12, scope: !8522)
!8524 = !DILocation(line: 1257, column: 17, scope: !8522)
!8525 = !DILocation(line: 1257, column: 20, scope: !8522)
!8526 = !DILocation(line: 1257, column: 26, scope: !8522)
!8527 = !DILocation(line: 1257, column: 36, scope: !8522)
!8528 = !DILocation(line: 1257, column: 53, scope: !8522)
!8529 = !DILocation(line: 1257, column: 59, scope: !8522)
!8530 = !DILocation(line: 1257, column: 39, scope: !8522)
!8531 = !DILocation(line: 1257, column: 65, scope: !8522)
!8532 = !DILocation(line: 1257, column: 6, scope: !8402)
!8533 = !DILocation(line: 1258, column: 7, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8535, file: !1, line: 1258, column: 7)
!8535 = distinct !DILexicalBlock(scope: !8522, file: !1, line: 1257, column: 80)
!8536 = !DILocation(line: 1258, column: 11, scope: !8534)
!8537 = !DILocation(line: 1258, column: 7, scope: !8535)
!8538 = !DILocation(line: 1259, column: 4, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8534, file: !1, line: 1258, column: 28)
!8540 = !DILocation(line: 1259, column: 19, scope: !8539)
!8541 = !DILocation(line: 1260, column: 18, scope: !8539)
!8542 = !DILocation(line: 1260, column: 24, scope: !8539)
!8543 = !DILocation(line: 1260, column: 4, scope: !8539)
!8544 = !DILocation(line: 1261, column: 3, scope: !8539)
!8545 = !DILocation(line: 1263, column: 3, scope: !8535)
!8546 = !DILocation(line: 1266, column: 32, scope: !8402)
!8547 = !DILocation(line: 1266, column: 2, scope: !8402)
!8548 = !DILocation(line: 1268, column: 8, scope: !8402)
!8549 = !DILocation(line: 1269, column: 10, scope: !8402)
!8550 = !DILocation(line: 1271, column: 2, scope: !8402)
!8551 = !DILocation(line: 1273, column: 24, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8402, file: !1, line: 1273, column: 6)
!8553 = !DILocation(line: 1273, column: 6, scope: !8552)
!8554 = !DILocation(line: 1273, column: 28, scope: !8552)
!8555 = !DILocation(line: 1273, column: 31, scope: !8552)
!8556 = !DILocation(line: 1273, column: 46, scope: !8552)
!8557 = !DILocation(line: 1273, column: 6, scope: !8402)
!8558 = !DILocation(line: 1275, column: 3, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8552, file: !1, line: 1273, column: 55)
!8560 = !DILocation(line: 1277, column: 3, scope: !8559)
!8561 = !DILocation(line: 1279, column: 10, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8559, file: !1, line: 1279, column: 3)
!8563 = !DILocation(line: 1279, column: 8, scope: !8562)
!8564 = !DILocation(line: 1279, column: 15, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !8562, file: !1, line: 1279, column: 3)
!8566 = !DILocation(line: 1279, column: 19, scope: !8565)
!8567 = !DILocation(line: 1279, column: 23, scope: !8565)
!8568 = !DILocation(line: 1279, column: 17, scope: !8565)
!8569 = !DILocation(line: 1279, column: 3, scope: !8562)
!8570 = !DILocalVariable(name: "smoothnormal", scope: !8571, file: !1, line: 1280, type: !1730)
!8571 = distinct !DILexicalBlock(scope: !8565, file: !1, line: 1279, column: 54)
!8572 = !DILocation(line: 1280, column: 15, scope: !8571)
!8573 = !DILocation(line: 1280, column: 30, scope: !8571)
!8574 = !DILocation(line: 1280, column: 36, scope: !8571)
!8575 = !DILocation(line: 1280, column: 40, scope: !8571)
!8576 = !DILocation(line: 1280, column: 47, scope: !8571)
!8577 = !DILocation(line: 1280, column: 52, scope: !8571)
!8578 = !DILocalVariable(name: "ln1", scope: !8571, file: !1, line: 1281, type: !8579)
!8579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8580, size: 64)
!8580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1651, size: 48, elements: !423)
!8581 = !DILocation(line: 1281, column: 18, scope: !8571)
!8582 = !DILocalVariable(name: "ln2", scope: !8571, file: !1, line: 1281, type: !8579)
!8583 = !DILocation(line: 1281, column: 36, scope: !8571)
!8584 = !DILocalVariable(name: "ln3", scope: !8571, file: !1, line: 1281, type: !8579)
!8585 = !DILocation(line: 1281, column: 54, scope: !8571)
!8586 = !DILocalVariable(name: "ln4", scope: !8571, file: !1, line: 1281, type: !8579)
!8587 = !DILocation(line: 1281, column: 72, scope: !8571)
!8588 = !DILocation(line: 1282, column: 16, scope: !8571)
!8589 = !DILocation(line: 1282, column: 23, scope: !8571)
!8590 = !DILocation(line: 1282, column: 30, scope: !8571)
!8591 = !DILocation(line: 1282, column: 14, scope: !8571)
!8592 = !DILocation(line: 1284, column: 8, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8571, file: !1, line: 1284, column: 8)
!8594 = !DILocation(line: 1284, column: 21, scope: !8593)
!8595 = !DILocation(line: 1284, column: 18, scope: !8593)
!8596 = !DILocation(line: 1284, column: 8, scope: !8571)
!8597 = !DILocation(line: 1285, column: 5, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !8593, file: !1, line: 1284, column: 28)
!8599 = !DILocation(line: 1287, column: 15, scope: !8598)
!8600 = !DILocation(line: 1287, column: 35, scope: !8598)
!8601 = !DILocation(line: 1287, column: 33, scope: !8598)
!8602 = !DILocation(line: 1287, column: 46, scope: !8598)
!8603 = !DILocation(line: 1287, column: 13, scope: !8598)
!8604 = !DILocation(line: 1288, column: 9, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8598, file: !1, line: 1288, column: 9)
!8606 = !DILocation(line: 1288, column: 9, scope: !8598)
!8607 = !DILocation(line: 1289, column: 36, scope: !8605)
!8608 = !DILocation(line: 1289, column: 6, scope: !8605)
!8609 = !DILocation(line: 1291, column: 5, scope: !8598)
!8610 = !DILocation(line: 1292, column: 4, scope: !8598)
!8611 = !DILocation(line: 1294, column: 9, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8571, file: !1, line: 1294, column: 8)
!8613 = !DILocation(line: 1294, column: 8, scope: !8571)
!8614 = !DILocation(line: 1295, column: 5, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8612, file: !1, line: 1294, column: 18)
!8616 = !DILocation(line: 1297, column: 13, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8612, file: !1, line: 1297, column: 13)
!8618 = !DILocation(line: 1297, column: 13, scope: !8612)
!8619 = !DILocation(line: 1298, column: 13, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8617, file: !1, line: 1297, column: 29)
!8621 = !DILocation(line: 1298, column: 12, scope: !8620)
!8622 = !DILocation(line: 1298, column: 59, scope: !8620)
!8623 = !DILocation(line: 1298, column: 78, scope: !8620)
!8624 = !DILocation(line: 1298, column: 96, scope: !8620)
!8625 = !DILocation(line: 1298, column: 34, scope: !8620)
!8626 = !DILocation(line: 1298, column: 101, scope: !8620)
!8627 = !DILocation(line: 1298, column: 10, scope: !8620)
!8628 = !DILocation(line: 1300, column: 9, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8620, file: !1, line: 1300, column: 9)
!8630 = !DILocation(line: 1300, column: 14, scope: !8629)
!8631 = !DILocation(line: 1300, column: 9, scope: !8620)
!8632 = !DILocation(line: 1305, column: 5, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8629, file: !1, line: 1300, column: 33)
!8634 = !DILocation(line: 1306, column: 14, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8629, file: !1, line: 1306, column: 14)
!8636 = !DILocation(line: 1306, column: 29, scope: !8635)
!8637 = !DILocation(line: 1306, column: 39, scope: !8635)
!8638 = !DILocation(line: 1306, column: 45, scope: !8635)
!8639 = !DILocation(line: 1306, column: 14, scope: !8629)
!8640 = !DILocation(line: 1307, column: 6, scope: !8635)
!8641 = !DILocation(line: 1308, column: 4, scope: !8620)
!8642 = !DILocation(line: 1310, column: 9, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8571, file: !1, line: 1310, column: 8)
!8644 = !DILocation(line: 1310, column: 8, scope: !8571)
!8645 = !DILocation(line: 1311, column: 9, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8647, file: !1, line: 1311, column: 9)
!8647 = distinct !DILexicalBlock(scope: !8643, file: !1, line: 1310, column: 23)
!8648 = !DILocation(line: 1311, column: 9, scope: !8647)
!8649 = !DILocation(line: 1312, column: 18, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8646, file: !1, line: 1311, column: 15)
!8651 = !DILocation(line: 1312, column: 23, scope: !8650)
!8652 = !DILocation(line: 1312, column: 6, scope: !8650)
!8653 = !DILocation(line: 1313, column: 5, scope: !8650)
!8654 = !DILocalVariable(name: "nor", scope: !8655, file: !1, line: 1316, type: !422)
!8655 = distinct !DILexicalBlock(scope: !8646, file: !1, line: 1314, column: 10)
!8656 = !DILocation(line: 1316, column: 12, scope: !8655)
!8657 = !DILocation(line: 1317, column: 10, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8655, file: !1, line: 1317, column: 10)
!8659 = !DILocation(line: 1317, column: 17, scope: !8658)
!8660 = !DILocation(line: 1317, column: 10, scope: !8655)
!8661 = !DILocation(line: 1318, column: 22, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8658, file: !1, line: 1317, column: 21)
!8663 = !DILocation(line: 1318, column: 27, scope: !8662)
!8664 = !DILocation(line: 1318, column: 33, scope: !8662)
!8665 = !DILocation(line: 1318, column: 40, scope: !8662)
!8666 = !DILocation(line: 1318, column: 44, scope: !8662)
!8667 = !DILocation(line: 1318, column: 48, scope: !8662)
!8668 = !DILocation(line: 1318, column: 54, scope: !8662)
!8669 = !DILocation(line: 1318, column: 61, scope: !8662)
!8670 = !DILocation(line: 1318, column: 65, scope: !8662)
!8671 = !DILocation(line: 1318, column: 69, scope: !8662)
!8672 = !DILocation(line: 1318, column: 75, scope: !8662)
!8673 = !DILocation(line: 1318, column: 82, scope: !8662)
!8674 = !DILocation(line: 1318, column: 86, scope: !8662)
!8675 = !DILocation(line: 1318, column: 90, scope: !8662)
!8676 = !DILocation(line: 1318, column: 96, scope: !8662)
!8677 = !DILocation(line: 1318, column: 103, scope: !8662)
!8678 = !DILocation(line: 1318, column: 107, scope: !8662)
!8679 = !DILocation(line: 1318, column: 7, scope: !8662)
!8680 = !DILocation(line: 1319, column: 6, scope: !8662)
!8681 = !DILocation(line: 1321, column: 21, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8658, file: !1, line: 1320, column: 11)
!8683 = !DILocation(line: 1321, column: 26, scope: !8682)
!8684 = !DILocation(line: 1321, column: 32, scope: !8682)
!8685 = !DILocation(line: 1321, column: 39, scope: !8682)
!8686 = !DILocation(line: 1321, column: 43, scope: !8682)
!8687 = !DILocation(line: 1321, column: 47, scope: !8682)
!8688 = !DILocation(line: 1321, column: 53, scope: !8682)
!8689 = !DILocation(line: 1321, column: 60, scope: !8682)
!8690 = !DILocation(line: 1321, column: 64, scope: !8682)
!8691 = !DILocation(line: 1321, column: 68, scope: !8682)
!8692 = !DILocation(line: 1321, column: 74, scope: !8682)
!8693 = !DILocation(line: 1321, column: 81, scope: !8682)
!8694 = !DILocation(line: 1321, column: 85, scope: !8682)
!8695 = !DILocation(line: 1321, column: 7, scope: !8682)
!8696 = !DILocation(line: 1323, column: 18, scope: !8655)
!8697 = !DILocation(line: 1323, column: 6, scope: !8655)
!8698 = !DILocation(line: 1325, column: 4, scope: !8647)
!8699 = !DILocation(line: 1326, column: 13, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8643, file: !1, line: 1326, column: 13)
!8701 = !DILocation(line: 1326, column: 13, scope: !8643)
!8702 = !DILocation(line: 1327, column: 12, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8700, file: !1, line: 1326, column: 20)
!8704 = !DILocation(line: 1327, column: 18, scope: !8703)
!8705 = !DILocation(line: 1327, column: 9, scope: !8703)
!8706 = !DILocation(line: 1328, column: 12, scope: !8703)
!8707 = !DILocation(line: 1328, column: 18, scope: !8703)
!8708 = !DILocation(line: 1328, column: 9, scope: !8703)
!8709 = !DILocation(line: 1329, column: 12, scope: !8703)
!8710 = !DILocation(line: 1329, column: 18, scope: !8703)
!8711 = !DILocation(line: 1329, column: 9, scope: !8703)
!8712 = !DILocation(line: 1330, column: 12, scope: !8703)
!8713 = !DILocation(line: 1330, column: 18, scope: !8703)
!8714 = !DILocation(line: 1330, column: 9, scope: !8703)
!8715 = !DILocation(line: 1331, column: 4, scope: !8703)
!8716 = !DILocation(line: 1333, column: 38, scope: !8571)
!8717 = !DILocation(line: 1333, column: 45, scope: !8571)
!8718 = !DILocation(line: 1333, column: 48, scope: !8571)
!8719 = !DILocation(line: 1333, column: 55, scope: !8571)
!8720 = !DILocation(line: 1333, column: 62, scope: !8571)
!8721 = !DILocation(line: 1333, column: 67, scope: !8571)
!8722 = !DILocation(line: 1333, column: 4, scope: !8571)
!8723 = !DILocation(line: 1334, column: 38, scope: !8571)
!8724 = !DILocation(line: 1334, column: 45, scope: !8571)
!8725 = !DILocation(line: 1334, column: 48, scope: !8571)
!8726 = !DILocation(line: 1334, column: 55, scope: !8571)
!8727 = !DILocation(line: 1334, column: 62, scope: !8571)
!8728 = !DILocation(line: 1334, column: 67, scope: !8571)
!8729 = !DILocation(line: 1334, column: 4, scope: !8571)
!8730 = !DILocation(line: 1335, column: 38, scope: !8571)
!8731 = !DILocation(line: 1335, column: 45, scope: !8571)
!8732 = !DILocation(line: 1335, column: 48, scope: !8571)
!8733 = !DILocation(line: 1335, column: 55, scope: !8571)
!8734 = !DILocation(line: 1335, column: 62, scope: !8571)
!8735 = !DILocation(line: 1335, column: 67, scope: !8571)
!8736 = !DILocation(line: 1335, column: 4, scope: !8571)
!8737 = !DILocation(line: 1337, column: 8, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8571, file: !1, line: 1337, column: 8)
!8739 = !DILocation(line: 1337, column: 15, scope: !8738)
!8740 = !DILocation(line: 1337, column: 8, scope: !8571)
!8741 = !DILocation(line: 1338, column: 39, scope: !8738)
!8742 = !DILocation(line: 1338, column: 46, scope: !8738)
!8743 = !DILocation(line: 1338, column: 49, scope: !8738)
!8744 = !DILocation(line: 1338, column: 56, scope: !8738)
!8745 = !DILocation(line: 1338, column: 63, scope: !8738)
!8746 = !DILocation(line: 1338, column: 68, scope: !8738)
!8747 = !DILocation(line: 1338, column: 5, scope: !8738)
!8748 = !DILocation(line: 1340, column: 39, scope: !8738)
!8749 = !DILocation(line: 1340, column: 46, scope: !8738)
!8750 = !DILocation(line: 1340, column: 49, scope: !8738)
!8751 = !DILocation(line: 1340, column: 56, scope: !8738)
!8752 = !DILocation(line: 1340, column: 63, scope: !8738)
!8753 = !DILocation(line: 1340, column: 68, scope: !8738)
!8754 = !DILocation(line: 1340, column: 5, scope: !8738)
!8755 = !DILocation(line: 1341, column: 3, scope: !8571)
!8756 = !DILocation(line: 1279, column: 41, scope: !8565)
!8757 = !DILocation(line: 1279, column: 50, scope: !8565)
!8758 = !DILocation(line: 1279, column: 3, scope: !8565)
!8759 = distinct !{!8759, !8569, !8760}
!8760 = !DILocation(line: 1341, column: 3, scope: !8562)
!8761 = !DILocation(line: 1342, column: 3, scope: !8559)
!8762 = !DILocation(line: 1343, column: 2, scope: !8559)
!8763 = !DILocalVariable(name: "buffer", scope: !8764, file: !1, line: 1345, type: !276)
!8764 = distinct !DILexicalBlock(scope: !8552, file: !1, line: 1344, column: 7)
!8765 = !DILocation(line: 1345, column: 14, scope: !8764)
!8766 = !DILocalVariable(name: "varray", scope: !8764, file: !1, line: 1346, type: !712)
!8767 = !DILocation(line: 1346, column: 15, scope: !8764)
!8768 = !DILocalVariable(name: "numdata", scope: !8764, file: !1, line: 1347, type: !219)
!8769 = !DILocation(line: 1347, column: 7, scope: !8764)
!8770 = !DILocalVariable(name: "elementsize", scope: !8764, file: !1, line: 1347, type: !219)
!8771 = !DILocation(line: 1347, column: 20, scope: !8764)
!8772 = !DILocalVariable(name: "offset", scope: !8764, file: !1, line: 1347, type: !219)
!8773 = !DILocation(line: 1347, column: 37, scope: !8764)
!8774 = !DILocalVariable(name: "start", scope: !8764, file: !1, line: 1348, type: !219)
!8775 = !DILocation(line: 1348, column: 7, scope: !8764)
!8776 = !DILocalVariable(name: "numfaces", scope: !8764, file: !1, line: 1348, type: !219)
!8777 = !DILocation(line: 1348, column: 18, scope: !8764)
!8778 = !DILocalVariable(name: "curface", scope: !8764, file: !1, line: 1348, type: !219)
!8779 = !DILocation(line: 1348, column: 66, scope: !8764)
!8780 = !DILocalVariable(name: "i", scope: !8764, file: !1, line: 1349, type: !219)
!8781 = !DILocation(line: 1349, column: 7, scope: !8764)
!8782 = !DILocalVariable(name: "mf", scope: !8764, file: !1, line: 1351, type: !8475)
!8783 = !DILocation(line: 1351, column: 16, scope: !8764)
!8784 = !DILocation(line: 1351, column: 21, scope: !8764)
!8785 = !DILocalVariable(name: "datatypes", scope: !8764, file: !1, line: 1352, type: !8786)
!8786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8787, size: 3072, elements: !535)
!8787 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUAttrib", file: !273, line: 127, baseType: !8788)
!8788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUAttrib", file: !273, line: 123, size: 96, elements: !8789)
!8789 = !{!8790, !8791, !8792}
!8790 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !8788, file: !273, line: 124, baseType: !219, size: 32)
!8791 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8788, file: !273, line: 125, baseType: !219, size: 32, offset: 32)
!8792 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8788, file: !273, line: 126, baseType: !219, size: 32, offset: 64)
!8793 = !DILocation(line: 1352, column: 13, scope: !8764)
!8794 = !DILocation(line: 1353, column: 3, scope: !8764)
!8795 = !DILocation(line: 1355, column: 20, scope: !8764)
!8796 = !DILocation(line: 1355, column: 3, scope: !8764)
!8797 = !DILocation(line: 1356, column: 20, scope: !8764)
!8798 = !DILocation(line: 1356, column: 3, scope: !8764)
!8799 = !DILocation(line: 1358, column: 26, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8764, file: !1, line: 1358, column: 7)
!8801 = !DILocation(line: 1358, column: 8, scope: !8800)
!8802 = !DILocation(line: 1358, column: 7, scope: !8764)
!8803 = !DILocation(line: 1359, column: 11, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8805, file: !1, line: 1359, column: 4)
!8805 = distinct !DILexicalBlock(scope: !8800, file: !1, line: 1358, column: 31)
!8806 = !DILocation(line: 1359, column: 9, scope: !8804)
!8807 = !DILocation(line: 1359, column: 16, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8804, file: !1, line: 1359, column: 4)
!8809 = !DILocation(line: 1359, column: 20, scope: !8808)
!8810 = !DILocation(line: 1359, column: 24, scope: !8808)
!8811 = !DILocation(line: 1359, column: 36, scope: !8808)
!8812 = !DILocation(line: 1359, column: 55, scope: !8808)
!8813 = !DILocation(line: 1359, column: 18, scope: !8808)
!8814 = !DILocation(line: 1359, column: 4, scope: !8804)
!8815 = !DILocation(line: 1361, column: 9, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8808, file: !1, line: 1359, column: 65)
!8817 = !DILocation(line: 1361, column: 13, scope: !8816)
!8818 = !DILocation(line: 1361, column: 25, scope: !8816)
!8819 = !DILocation(line: 1361, column: 43, scope: !8816)
!8820 = !DILocation(line: 1361, column: 7, scope: !8816)
!8821 = !DILocation(line: 1363, column: 13, scope: !8816)
!8822 = !DILocation(line: 1363, column: 18, scope: !8816)
!8823 = !DILocation(line: 1363, column: 16, scope: !8816)
!8824 = !DILocation(line: 1363, column: 11, scope: !8816)
!8825 = !DILocation(line: 1364, column: 17, scope: !8816)
!8826 = !DILocation(line: 1364, column: 24, scope: !8816)
!8827 = !DILocation(line: 1364, column: 31, scope: !8816)
!8828 = !DILocation(line: 1364, column: 15, scope: !8816)
!8829 = !DILocation(line: 1366, column: 9, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8816, file: !1, line: 1366, column: 9)
!8831 = !DILocation(line: 1366, column: 22, scope: !8830)
!8832 = !DILocation(line: 1366, column: 19, scope: !8830)
!8833 = !DILocation(line: 1366, column: 9, scope: !8816)
!8834 = !DILocation(line: 1367, column: 17, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8830, file: !1, line: 1366, column: 29)
!8836 = !DILocation(line: 1367, column: 27, scope: !8835)
!8837 = !DILocation(line: 1367, column: 25, scope: !8835)
!8838 = !DILocation(line: 1367, column: 15, scope: !8835)
!8839 = !DILocation(line: 1368, column: 10, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8835, file: !1, line: 1368, column: 10)
!8841 = !DILocation(line: 1368, column: 19, scope: !8840)
!8842 = !DILocation(line: 1368, column: 10, scope: !8835)
!8843 = !DILocation(line: 1370, column: 11, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8845, file: !1, line: 1370, column: 11)
!8845 = distinct !DILexicalBlock(scope: !8840, file: !1, line: 1368, column: 24)
!8846 = !DILocation(line: 1370, column: 11, scope: !8845)
!8847 = !DILocation(line: 1372, column: 12, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8849, file: !1, line: 1372, column: 12)
!8849 = distinct !DILexicalBlock(scope: !8844, file: !1, line: 1370, column: 20)
!8850 = !DILocation(line: 1372, column: 20, scope: !8848)
!8851 = !DILocation(line: 1372, column: 12, scope: !8849)
!8852 = !DILocation(line: 1374, column: 27, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8848, file: !1, line: 1372, column: 26)
!8854 = !DILocation(line: 1374, column: 9, scope: !8853)
!8855 = !DILocation(line: 1376, column: 38, scope: !8853)
!8856 = !DILocation(line: 1376, column: 46, scope: !8853)
!8857 = !DILocation(line: 1376, column: 57, scope: !8853)
!8858 = !DILocation(line: 1376, column: 9, scope: !8853)
!8859 = !DILocation(line: 1377, column: 8, scope: !8853)
!8860 = !DILocation(line: 1379, column: 35, scope: !8849)
!8861 = !DILocation(line: 1379, column: 41, scope: !8849)
!8862 = !DILocation(line: 1379, column: 46, scope: !8849)
!8863 = !DILocation(line: 1379, column: 55, scope: !8849)
!8864 = !DILocation(line: 1379, column: 8, scope: !8849)
!8865 = !DILocation(line: 1381, column: 12, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8849, file: !1, line: 1381, column: 12)
!8867 = !DILocation(line: 1381, column: 20, scope: !8866)
!8868 = !DILocation(line: 1381, column: 12, scope: !8849)
!8869 = !DILocation(line: 1383, column: 25, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8866, file: !1, line: 1381, column: 26)
!8871 = !DILocation(line: 1383, column: 9, scope: !8870)
!8872 = !DILocation(line: 1385, column: 16, scope: !8870)
!8873 = !DILocation(line: 1386, column: 8, scope: !8870)
!8874 = !DILocation(line: 1388, column: 7, scope: !8849)
!8875 = !DILocation(line: 1389, column: 6, scope: !8845)
!8876 = !DILocation(line: 1390, column: 14, scope: !8835)
!8877 = !DILocation(line: 1391, column: 14, scope: !8835)
!8878 = !DILocation(line: 1391, column: 12, scope: !8835)
!8879 = !DILocation(line: 1393, column: 16, scope: !8835)
!8880 = !DILocation(line: 1393, column: 36, scope: !8835)
!8881 = !DILocation(line: 1393, column: 34, scope: !8835)
!8882 = !DILocation(line: 1393, column: 47, scope: !8835)
!8883 = !DILocation(line: 1393, column: 14, scope: !8835)
!8884 = !DILocation(line: 1394, column: 10, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8835, file: !1, line: 1394, column: 10)
!8886 = !DILocation(line: 1394, column: 10, scope: !8835)
!8887 = !DILocation(line: 1395, column: 37, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8885, file: !1, line: 1394, column: 19)
!8889 = !DILocation(line: 1395, column: 7, scope: !8888)
!8890 = !DILocation(line: 1397, column: 19, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8888, file: !1, line: 1397, column: 11)
!8892 = !DILocation(line: 1397, column: 11, scope: !8891)
!8893 = !DILocation(line: 1397, column: 27, scope: !8891)
!8894 = !DILocation(line: 1397, column: 38, scope: !8891)
!8895 = !DILocation(line: 1397, column: 43, scope: !8891)
!8896 = !DILocation(line: 1397, column: 30, scope: !8891)
!8897 = !DILocation(line: 1397, column: 11, scope: !8888)
!8898 = !DILocation(line: 1398, column: 43, scope: !8899)
!8899 = distinct !DILexicalBlock(scope: !8891, file: !1, line: 1397, column: 50)
!8900 = !DILocation(line: 1398, column: 48, scope: !8899)
!8901 = !DILocation(line: 1398, column: 18, scope: !8899)
!8902 = !DILocation(line: 1398, column: 8, scope: !8899)
!8903 = !DILocation(line: 1398, column: 27, scope: !8899)
!8904 = !DILocation(line: 1398, column: 33, scope: !8899)
!8905 = !DILocation(line: 1399, column: 18, scope: !8899)
!8906 = !DILocation(line: 1399, column: 8, scope: !8899)
!8907 = !DILocation(line: 1399, column: 27, scope: !8899)
!8908 = !DILocation(line: 1399, column: 32, scope: !8899)
!8909 = !DILocation(line: 1400, column: 18, scope: !8899)
!8910 = !DILocation(line: 1400, column: 8, scope: !8899)
!8911 = !DILocation(line: 1400, column: 27, scope: !8899)
!8912 = !DILocation(line: 1400, column: 32, scope: !8899)
!8913 = !DILocation(line: 1401, column: 15, scope: !8899)
!8914 = !DILocation(line: 1402, column: 7, scope: !8899)
!8915 = !DILocation(line: 1403, column: 14, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8888, file: !1, line: 1403, column: 7)
!8917 = !DILocation(line: 1403, column: 12, scope: !8916)
!8918 = !DILocation(line: 1403, column: 19, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8916, file: !1, line: 1403, column: 7)
!8920 = !DILocation(line: 1403, column: 31, scope: !8919)
!8921 = !DILocation(line: 1403, column: 21, scope: !8919)
!8922 = !DILocation(line: 1403, column: 7, scope: !8916)
!8923 = !DILocation(line: 1404, column: 20, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8925, file: !1, line: 1404, column: 12)
!8925 = distinct !DILexicalBlock(scope: !8919, file: !1, line: 1403, column: 46)
!8926 = !DILocation(line: 1404, column: 26, scope: !8924)
!8927 = !DILocation(line: 1404, column: 12, scope: !8924)
!8928 = !DILocation(line: 1404, column: 29, scope: !8924)
!8929 = !DILocation(line: 1404, column: 12, scope: !8925)
!8930 = !DILocation(line: 1405, column: 44, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8924, file: !1, line: 1404, column: 36)
!8932 = !DILocation(line: 1405, column: 50, scope: !8931)
!8933 = !DILocation(line: 1405, column: 36, scope: !8931)
!8934 = !DILocation(line: 1405, column: 53, scope: !8931)
!8935 = !DILocation(line: 1405, column: 19, scope: !8931)
!8936 = !DILocation(line: 1405, column: 9, scope: !8931)
!8937 = !DILocation(line: 1405, column: 28, scope: !8931)
!8938 = !DILocation(line: 1405, column: 34, scope: !8931)
!8939 = !DILocation(line: 1406, column: 19, scope: !8931)
!8940 = !DILocation(line: 1406, column: 9, scope: !8931)
!8941 = !DILocation(line: 1406, column: 28, scope: !8931)
!8942 = !DILocation(line: 1406, column: 33, scope: !8931)
!8943 = !DILocation(line: 1407, column: 19, scope: !8931)
!8944 = !DILocation(line: 1407, column: 9, scope: !8931)
!8945 = !DILocation(line: 1407, column: 28, scope: !8931)
!8946 = !DILocation(line: 1407, column: 33, scope: !8931)
!8947 = !DILocation(line: 1408, column: 16, scope: !8931)
!8948 = !DILocation(line: 1409, column: 8, scope: !8931)
!8949 = !DILocation(line: 1410, column: 7, scope: !8925)
!8950 = !DILocation(line: 1403, column: 42, scope: !8919)
!8951 = !DILocation(line: 1403, column: 7, scope: !8919)
!8952 = distinct !{!8952, !8922, !8953}
!8953 = !DILocation(line: 1410, column: 7, scope: !8916)
!8954 = !DILocation(line: 1411, column: 14, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8888, file: !1, line: 1411, column: 7)
!8956 = !DILocation(line: 1411, column: 12, scope: !8955)
!8957 = !DILocation(line: 1411, column: 19, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8955, file: !1, line: 1411, column: 7)
!8959 = !DILocation(line: 1411, column: 31, scope: !8958)
!8960 = !DILocation(line: 1411, column: 21, scope: !8958)
!8961 = !DILocation(line: 1411, column: 7, scope: !8955)
!8962 = !DILocation(line: 1412, column: 20, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8964, file: !1, line: 1412, column: 12)
!8964 = distinct !DILexicalBlock(scope: !8958, file: !1, line: 1411, column: 45)
!8965 = !DILocation(line: 1412, column: 25, scope: !8963)
!8966 = !DILocation(line: 1412, column: 12, scope: !8963)
!8967 = !DILocation(line: 1412, column: 28, scope: !8963)
!8968 = !DILocation(line: 1412, column: 12, scope: !8964)
!8969 = !DILocation(line: 1413, column: 44, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8963, file: !1, line: 1412, column: 35)
!8971 = !DILocation(line: 1413, column: 49, scope: !8970)
!8972 = !DILocation(line: 1413, column: 36, scope: !8970)
!8973 = !DILocation(line: 1413, column: 52, scope: !8970)
!8974 = !DILocation(line: 1413, column: 19, scope: !8970)
!8975 = !DILocation(line: 1413, column: 9, scope: !8970)
!8976 = !DILocation(line: 1413, column: 28, scope: !8970)
!8977 = !DILocation(line: 1413, column: 34, scope: !8970)
!8978 = !DILocation(line: 1414, column: 19, scope: !8970)
!8979 = !DILocation(line: 1414, column: 9, scope: !8970)
!8980 = !DILocation(line: 1414, column: 28, scope: !8970)
!8981 = !DILocation(line: 1414, column: 33, scope: !8970)
!8982 = !DILocation(line: 1415, column: 19, scope: !8970)
!8983 = !DILocation(line: 1415, column: 9, scope: !8970)
!8984 = !DILocation(line: 1415, column: 28, scope: !8970)
!8985 = !DILocation(line: 1415, column: 33, scope: !8970)
!8986 = !DILocation(line: 1416, column: 16, scope: !8970)
!8987 = !DILocation(line: 1417, column: 8, scope: !8970)
!8988 = !DILocation(line: 1418, column: 7, scope: !8964)
!8989 = !DILocation(line: 1411, column: 41, scope: !8958)
!8990 = !DILocation(line: 1411, column: 7, scope: !8958)
!8991 = distinct !{!8991, !8961, !8992}
!8992 = !DILocation(line: 1418, column: 7, scope: !8955)
!8993 = !DILocation(line: 1419, column: 19, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8888, file: !1, line: 1419, column: 11)
!8995 = !DILocation(line: 1419, column: 11, scope: !8994)
!8996 = !DILocation(line: 1419, column: 27, scope: !8994)
!8997 = !DILocation(line: 1419, column: 38, scope: !8994)
!8998 = !DILocation(line: 1419, column: 43, scope: !8994)
!8999 = !DILocation(line: 1419, column: 30, scope: !8994)
!9000 = !DILocation(line: 1419, column: 11, scope: !8888)
!9001 = !DILocation(line: 1420, column: 43, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8994, file: !1, line: 1419, column: 50)
!9003 = !DILocation(line: 1420, column: 48, scope: !9002)
!9004 = !DILocation(line: 1420, column: 18, scope: !9002)
!9005 = !DILocation(line: 1420, column: 8, scope: !9002)
!9006 = !DILocation(line: 1420, column: 27, scope: !9002)
!9007 = !DILocation(line: 1420, column: 33, scope: !9002)
!9008 = !DILocation(line: 1421, column: 18, scope: !9002)
!9009 = !DILocation(line: 1421, column: 8, scope: !9002)
!9010 = !DILocation(line: 1421, column: 27, scope: !9002)
!9011 = !DILocation(line: 1421, column: 32, scope: !9002)
!9012 = !DILocation(line: 1422, column: 18, scope: !9002)
!9013 = !DILocation(line: 1422, column: 8, scope: !9002)
!9014 = !DILocation(line: 1422, column: 27, scope: !9002)
!9015 = !DILocation(line: 1422, column: 32, scope: !9002)
!9016 = !DILocation(line: 1423, column: 15, scope: !9002)
!9017 = !DILocation(line: 1424, column: 7, scope: !9002)
!9018 = !DILocation(line: 1425, column: 11, scope: !9019)
!9019 = distinct !DILexicalBlock(scope: !8888, file: !1, line: 1425, column: 11)
!9020 = !DILocation(line: 1425, column: 19, scope: !9019)
!9021 = !DILocation(line: 1425, column: 11, scope: !8888)
!9022 = !DILocation(line: 1426, column: 46, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9019, file: !1, line: 1425, column: 25)
!9024 = !DILocation(line: 1426, column: 57, scope: !9023)
!9025 = !DILocation(line: 1426, column: 22, scope: !9023)
!9026 = !DILocation(line: 1426, column: 20, scope: !9023)
!9027 = !DILocation(line: 1427, column: 34, scope: !9023)
!9028 = !DILocation(line: 1427, column: 48, scope: !9023)
!9029 = !DILocation(line: 1427, column: 52, scope: !9023)
!9030 = !DILocation(line: 1427, column: 64, scope: !9023)
!9031 = !DILocation(line: 1427, column: 46, scope: !9023)
!9032 = !DILocation(line: 1427, column: 17, scope: !9023)
!9033 = !DILocation(line: 1427, column: 15, scope: !9023)
!9034 = !DILocation(line: 1428, column: 12, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9023, file: !1, line: 1428, column: 12)
!9036 = !DILocation(line: 1428, column: 19, scope: !9035)
!9037 = !DILocation(line: 1428, column: 12, scope: !9023)
!9038 = !DILocation(line: 1429, column: 9, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9035, file: !1, line: 1428, column: 28)
!9040 = !DILocation(line: 1430, column: 9, scope: !9039)
!9041 = !DILocation(line: 1430, column: 13, scope: !9039)
!9042 = !DILocation(line: 1430, column: 25, scope: !9039)
!9043 = !DILocation(line: 1430, column: 32, scope: !9039)
!9044 = !DILocation(line: 1431, column: 9, scope: !9039)
!9045 = !DILocation(line: 1433, column: 40, scope: !9023)
!9046 = !DILocation(line: 1433, column: 17, scope: !9023)
!9047 = !DILocation(line: 1433, column: 15, scope: !9023)
!9048 = !DILocation(line: 1434, column: 12, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9023, file: !1, line: 1434, column: 12)
!9050 = !DILocation(line: 1434, column: 19, scope: !9049)
!9051 = !DILocation(line: 1434, column: 12, scope: !9023)
!9052 = !DILocation(line: 1435, column: 9, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9049, file: !1, line: 1434, column: 28)
!9054 = !DILocation(line: 1436, column: 25, scope: !9053)
!9055 = !DILocation(line: 1436, column: 9, scope: !9053)
!9056 = !DILocation(line: 1437, column: 9, scope: !9053)
!9057 = !DILocation(line: 1437, column: 13, scope: !9053)
!9058 = !DILocation(line: 1437, column: 25, scope: !9053)
!9059 = !DILocation(line: 1437, column: 32, scope: !9053)
!9060 = !DILocation(line: 1438, column: 9, scope: !9053)
!9061 = !DILocation(line: 1440, column: 7, scope: !9023)
!9062 = !DILocation(line: 1445, column: 15, scope: !9063)
!9063 = distinct !DILexicalBlock(scope: !9019, file: !1, line: 1441, column: 12)
!9064 = !DILocation(line: 1447, column: 6, scope: !8888)
!9065 = !DILocation(line: 1448, column: 5, scope: !8835)
!9066 = !DILocation(line: 1450, column: 9, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !8816, file: !1, line: 1450, column: 9)
!9068 = !DILocation(line: 1450, column: 17, scope: !9067)
!9069 = !DILocation(line: 1450, column: 20, scope: !9067)
!9070 = !DILocation(line: 1450, column: 28, scope: !9067)
!9071 = !DILocation(line: 1450, column: 9, scope: !8816)
!9072 = !DILocation(line: 1451, column: 13, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9067, file: !1, line: 1450, column: 34)
!9074 = !DILocation(line: 1452, column: 18, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !9073, file: !1, line: 1452, column: 10)
!9076 = !DILocation(line: 1452, column: 10, scope: !9075)
!9077 = !DILocation(line: 1452, column: 26, scope: !9075)
!9078 = !DILocation(line: 1452, column: 37, scope: !9075)
!9079 = !DILocation(line: 1452, column: 42, scope: !9075)
!9080 = !DILocation(line: 1452, column: 29, scope: !9075)
!9081 = !DILocation(line: 1452, column: 10, scope: !9073)
!9082 = !DILocation(line: 1453, column: 28, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9075, file: !1, line: 1452, column: 49)
!9084 = !DILocation(line: 1453, column: 35, scope: !9083)
!9085 = !DILocation(line: 1453, column: 49, scope: !9083)
!9086 = !DILocation(line: 1453, column: 47, scope: !9083)
!9087 = !DILocation(line: 1453, column: 57, scope: !9083)
!9088 = !DILocation(line: 1453, column: 18, scope: !9083)
!9089 = !DILocation(line: 1453, column: 80, scope: !9083)
!9090 = !DILocation(line: 1453, column: 85, scope: !9083)
!9091 = !DILocation(line: 1453, column: 91, scope: !9083)
!9092 = !DILocation(line: 1453, column: 98, scope: !9083)
!9093 = !DILocation(line: 1453, column: 72, scope: !9083)
!9094 = !DILocation(line: 1453, column: 7, scope: !9083)
!9095 = !DILocation(line: 1454, column: 28, scope: !9083)
!9096 = !DILocation(line: 1454, column: 35, scope: !9083)
!9097 = !DILocation(line: 1454, column: 49, scope: !9083)
!9098 = !DILocation(line: 1454, column: 47, scope: !9083)
!9099 = !DILocation(line: 1454, column: 57, scope: !9083)
!9100 = !DILocation(line: 1454, column: 63, scope: !9083)
!9101 = !DILocation(line: 1454, column: 61, scope: !9083)
!9102 = !DILocation(line: 1454, column: 18, scope: !9083)
!9103 = !DILocation(line: 1454, column: 94, scope: !9083)
!9104 = !DILocation(line: 1454, column: 99, scope: !9083)
!9105 = !DILocation(line: 1454, column: 105, scope: !9083)
!9106 = !DILocation(line: 1454, column: 112, scope: !9083)
!9107 = !DILocation(line: 1454, column: 86, scope: !9083)
!9108 = !DILocation(line: 1454, column: 7, scope: !9083)
!9109 = !DILocation(line: 1455, column: 28, scope: !9083)
!9110 = !DILocation(line: 1455, column: 35, scope: !9083)
!9111 = !DILocation(line: 1455, column: 49, scope: !9083)
!9112 = !DILocation(line: 1455, column: 47, scope: !9083)
!9113 = !DILocation(line: 1455, column: 57, scope: !9083)
!9114 = !DILocation(line: 1455, column: 63, scope: !9083)
!9115 = !DILocation(line: 1455, column: 75, scope: !9083)
!9116 = !DILocation(line: 1455, column: 61, scope: !9083)
!9117 = !DILocation(line: 1455, column: 18, scope: !9083)
!9118 = !DILocation(line: 1455, column: 98, scope: !9083)
!9119 = !DILocation(line: 1455, column: 103, scope: !9083)
!9120 = !DILocation(line: 1455, column: 109, scope: !9083)
!9121 = !DILocation(line: 1455, column: 116, scope: !9083)
!9122 = !DILocation(line: 1455, column: 90, scope: !9083)
!9123 = !DILocation(line: 1455, column: 7, scope: !9083)
!9124 = !DILocation(line: 1456, column: 14, scope: !9083)
!9125 = !DILocation(line: 1457, column: 6, scope: !9083)
!9126 = !DILocation(line: 1458, column: 13, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9073, file: !1, line: 1458, column: 6)
!9128 = !DILocation(line: 1458, column: 11, scope: !9127)
!9129 = !DILocation(line: 1458, column: 18, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9127, file: !1, line: 1458, column: 6)
!9131 = !DILocation(line: 1458, column: 30, scope: !9130)
!9132 = !DILocation(line: 1458, column: 20, scope: !9130)
!9133 = !DILocation(line: 1458, column: 6, scope: !9127)
!9134 = !DILocation(line: 1459, column: 19, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9136, file: !1, line: 1459, column: 11)
!9136 = distinct !DILexicalBlock(scope: !9130, file: !1, line: 1458, column: 45)
!9137 = !DILocation(line: 1459, column: 25, scope: !9135)
!9138 = !DILocation(line: 1459, column: 11, scope: !9135)
!9139 = !DILocation(line: 1459, column: 28, scope: !9135)
!9140 = !DILocation(line: 1459, column: 11, scope: !9136)
!9141 = !DILocalVariable(name: "tf", scope: !9142, file: !1, line: 1460, type: !6719)
!9142 = distinct !DILexicalBlock(scope: !9135, file: !1, line: 1459, column: 35)
!9143 = !DILocation(line: 1460, column: 16, scope: !9142)
!9144 = !DILocation(line: 1460, column: 30, scope: !9142)
!9145 = !DILocation(line: 1460, column: 36, scope: !9142)
!9146 = !DILocation(line: 1460, column: 22, scope: !9142)
!9147 = !DILocation(line: 1460, column: 39, scope: !9142)
!9148 = !DILocation(line: 1460, column: 45, scope: !9142)
!9149 = !DILocation(line: 1461, column: 29, scope: !9142)
!9150 = !DILocation(line: 1461, column: 36, scope: !9142)
!9151 = !DILocation(line: 1461, column: 50, scope: !9142)
!9152 = !DILocation(line: 1461, column: 48, scope: !9142)
!9153 = !DILocation(line: 1461, column: 58, scope: !9142)
!9154 = !DILocation(line: 1461, column: 64, scope: !9142)
!9155 = !DILocation(line: 1461, column: 62, scope: !9142)
!9156 = !DILocation(line: 1461, column: 19, scope: !9142)
!9157 = !DILocation(line: 1461, column: 73, scope: !9142)
!9158 = !DILocation(line: 1461, column: 77, scope: !9142)
!9159 = !DILocation(line: 1461, column: 8, scope: !9142)
!9160 = !DILocation(line: 1462, column: 29, scope: !9142)
!9161 = !DILocation(line: 1462, column: 36, scope: !9142)
!9162 = !DILocation(line: 1462, column: 50, scope: !9142)
!9163 = !DILocation(line: 1462, column: 48, scope: !9142)
!9164 = !DILocation(line: 1462, column: 58, scope: !9142)
!9165 = !DILocation(line: 1462, column: 64, scope: !9142)
!9166 = !DILocation(line: 1462, column: 62, scope: !9142)
!9167 = !DILocation(line: 1462, column: 73, scope: !9142)
!9168 = !DILocation(line: 1462, column: 71, scope: !9142)
!9169 = !DILocation(line: 1462, column: 19, scope: !9142)
!9170 = !DILocation(line: 1462, column: 87, scope: !9142)
!9171 = !DILocation(line: 1462, column: 91, scope: !9142)
!9172 = !DILocation(line: 1462, column: 8, scope: !9142)
!9173 = !DILocation(line: 1464, column: 29, scope: !9142)
!9174 = !DILocation(line: 1464, column: 36, scope: !9142)
!9175 = !DILocation(line: 1464, column: 50, scope: !9142)
!9176 = !DILocation(line: 1464, column: 48, scope: !9142)
!9177 = !DILocation(line: 1464, column: 58, scope: !9142)
!9178 = !DILocation(line: 1464, column: 64, scope: !9142)
!9179 = !DILocation(line: 1464, column: 62, scope: !9142)
!9180 = !DILocation(line: 1464, column: 73, scope: !9142)
!9181 = !DILocation(line: 1464, column: 85, scope: !9142)
!9182 = !DILocation(line: 1464, column: 71, scope: !9142)
!9183 = !DILocation(line: 1464, column: 19, scope: !9142)
!9184 = !DILocation(line: 1464, column: 91, scope: !9142)
!9185 = !DILocation(line: 1464, column: 95, scope: !9142)
!9186 = !DILocation(line: 1464, column: 8, scope: !9142)
!9187 = !DILocation(line: 1465, column: 15, scope: !9142)
!9188 = !DILocation(line: 1466, column: 7, scope: !9142)
!9189 = !DILocation(line: 1467, column: 6, scope: !9136)
!9190 = !DILocation(line: 1458, column: 41, scope: !9130)
!9191 = !DILocation(line: 1458, column: 6, scope: !9130)
!9192 = distinct !{!9192, !9133, !9193}
!9193 = !DILocation(line: 1467, column: 6, scope: !9127)
!9194 = !DILocation(line: 1468, column: 13, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9073, file: !1, line: 1468, column: 6)
!9196 = !DILocation(line: 1468, column: 11, scope: !9195)
!9197 = !DILocation(line: 1468, column: 18, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9195, file: !1, line: 1468, column: 6)
!9199 = !DILocation(line: 1468, column: 30, scope: !9198)
!9200 = !DILocation(line: 1468, column: 20, scope: !9198)
!9201 = !DILocation(line: 1468, column: 6, scope: !9195)
!9202 = !DILocation(line: 1469, column: 19, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !9204, file: !1, line: 1469, column: 11)
!9204 = distinct !DILexicalBlock(scope: !9198, file: !1, line: 1468, column: 44)
!9205 = !DILocation(line: 1469, column: 24, scope: !9203)
!9206 = !DILocation(line: 1469, column: 11, scope: !9203)
!9207 = !DILocation(line: 1469, column: 27, scope: !9203)
!9208 = !DILocation(line: 1469, column: 11, scope: !9204)
!9209 = !DILocalVariable(name: "cp", scope: !9210, file: !1, line: 1470, type: !7767)
!9210 = distinct !DILexicalBlock(scope: !9203, file: !1, line: 1469, column: 34)
!9211 = !DILocation(line: 1470, column: 14, scope: !9210)
!9212 = !DILocation(line: 1470, column: 28, scope: !9210)
!9213 = !DILocation(line: 1470, column: 33, scope: !9210)
!9214 = !DILocation(line: 1470, column: 20, scope: !9210)
!9215 = !DILocation(line: 1470, column: 36, scope: !9210)
!9216 = !DILocation(line: 1470, column: 42, scope: !9210)
!9217 = !DILocation(line: 1470, column: 44, scope: !9210)
!9218 = !DILocation(line: 1470, column: 48, scope: !9210)
!9219 = !DILocalVariable(name: "col", scope: !9210, file: !1, line: 1471, type: !9220)
!9220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9221, size: 32, elements: !505)
!9221 = !DIDerivedType(tag: DW_TAG_typedef, name: "GLubyte", file: !1915, line: 278, baseType: !309)
!9222 = !DILocation(line: 1471, column: 16, scope: !9210)
!9223 = !DILocation(line: 1472, column: 17, scope: !9210)
!9224 = !DILocation(line: 1472, column: 21, scope: !9210)
!9225 = !DILocation(line: 1472, column: 8, scope: !9210)
!9226 = !DILocation(line: 1472, column: 15, scope: !9210)
!9227 = !DILocation(line: 1472, column: 33, scope: !9210)
!9228 = !DILocation(line: 1472, column: 37, scope: !9210)
!9229 = !DILocation(line: 1472, column: 24, scope: !9210)
!9230 = !DILocation(line: 1472, column: 31, scope: !9210)
!9231 = !DILocation(line: 1472, column: 49, scope: !9210)
!9232 = !DILocation(line: 1472, column: 53, scope: !9210)
!9233 = !DILocation(line: 1472, column: 40, scope: !9210)
!9234 = !DILocation(line: 1472, column: 47, scope: !9210)
!9235 = !DILocation(line: 1472, column: 65, scope: !9210)
!9236 = !DILocation(line: 1472, column: 69, scope: !9210)
!9237 = !DILocation(line: 1472, column: 56, scope: !9210)
!9238 = !DILocation(line: 1472, column: 63, scope: !9210)
!9239 = !DILocation(line: 1473, column: 33, scope: !9210)
!9240 = !DILocation(line: 1473, column: 40, scope: !9210)
!9241 = !DILocation(line: 1473, column: 54, scope: !9210)
!9242 = !DILocation(line: 1473, column: 52, scope: !9210)
!9243 = !DILocation(line: 1473, column: 62, scope: !9210)
!9244 = !DILocation(line: 1473, column: 68, scope: !9210)
!9245 = !DILocation(line: 1473, column: 66, scope: !9210)
!9246 = !DILocation(line: 1473, column: 85, scope: !9210)
!9247 = !DILocation(line: 1473, column: 8, scope: !9210)
!9248 = !DILocation(line: 1474, column: 22, scope: !9210)
!9249 = !DILocation(line: 1474, column: 27, scope: !9210)
!9250 = !DILocation(line: 1474, column: 14, scope: !9210)
!9251 = !DILocation(line: 1474, column: 30, scope: !9210)
!9252 = !DILocation(line: 1474, column: 36, scope: !9210)
!9253 = !DILocation(line: 1474, column: 38, scope: !9210)
!9254 = !DILocation(line: 1474, column: 42, scope: !9210)
!9255 = !DILocation(line: 1474, column: 11, scope: !9210)
!9256 = !DILocation(line: 1475, column: 17, scope: !9210)
!9257 = !DILocation(line: 1475, column: 21, scope: !9210)
!9258 = !DILocation(line: 1475, column: 8, scope: !9210)
!9259 = !DILocation(line: 1475, column: 15, scope: !9210)
!9260 = !DILocation(line: 1475, column: 33, scope: !9210)
!9261 = !DILocation(line: 1475, column: 37, scope: !9210)
!9262 = !DILocation(line: 1475, column: 24, scope: !9210)
!9263 = !DILocation(line: 1475, column: 31, scope: !9210)
!9264 = !DILocation(line: 1475, column: 49, scope: !9210)
!9265 = !DILocation(line: 1475, column: 53, scope: !9210)
!9266 = !DILocation(line: 1475, column: 40, scope: !9210)
!9267 = !DILocation(line: 1475, column: 47, scope: !9210)
!9268 = !DILocation(line: 1475, column: 65, scope: !9210)
!9269 = !DILocation(line: 1475, column: 69, scope: !9210)
!9270 = !DILocation(line: 1475, column: 56, scope: !9210)
!9271 = !DILocation(line: 1475, column: 63, scope: !9210)
!9272 = !DILocation(line: 1476, column: 33, scope: !9210)
!9273 = !DILocation(line: 1476, column: 40, scope: !9210)
!9274 = !DILocation(line: 1476, column: 54, scope: !9210)
!9275 = !DILocation(line: 1476, column: 52, scope: !9210)
!9276 = !DILocation(line: 1476, column: 62, scope: !9210)
!9277 = !DILocation(line: 1476, column: 68, scope: !9210)
!9278 = !DILocation(line: 1476, column: 66, scope: !9210)
!9279 = !DILocation(line: 1476, column: 77, scope: !9210)
!9280 = !DILocation(line: 1476, column: 75, scope: !9210)
!9281 = !DILocation(line: 1476, column: 99, scope: !9210)
!9282 = !DILocation(line: 1476, column: 8, scope: !9210)
!9283 = !DILocation(line: 1477, column: 22, scope: !9210)
!9284 = !DILocation(line: 1477, column: 27, scope: !9210)
!9285 = !DILocation(line: 1477, column: 14, scope: !9210)
!9286 = !DILocation(line: 1477, column: 30, scope: !9210)
!9287 = !DILocation(line: 1477, column: 36, scope: !9210)
!9288 = !DILocation(line: 1477, column: 38, scope: !9210)
!9289 = !DILocation(line: 1477, column: 42, scope: !9210)
!9290 = !DILocation(line: 1477, column: 11, scope: !9210)
!9291 = !DILocation(line: 1478, column: 17, scope: !9210)
!9292 = !DILocation(line: 1478, column: 21, scope: !9210)
!9293 = !DILocation(line: 1478, column: 8, scope: !9210)
!9294 = !DILocation(line: 1478, column: 15, scope: !9210)
!9295 = !DILocation(line: 1478, column: 33, scope: !9210)
!9296 = !DILocation(line: 1478, column: 37, scope: !9210)
!9297 = !DILocation(line: 1478, column: 24, scope: !9210)
!9298 = !DILocation(line: 1478, column: 31, scope: !9210)
!9299 = !DILocation(line: 1478, column: 49, scope: !9210)
!9300 = !DILocation(line: 1478, column: 53, scope: !9210)
!9301 = !DILocation(line: 1478, column: 40, scope: !9210)
!9302 = !DILocation(line: 1478, column: 47, scope: !9210)
!9303 = !DILocation(line: 1478, column: 65, scope: !9210)
!9304 = !DILocation(line: 1478, column: 69, scope: !9210)
!9305 = !DILocation(line: 1478, column: 56, scope: !9210)
!9306 = !DILocation(line: 1478, column: 63, scope: !9210)
!9307 = !DILocation(line: 1479, column: 33, scope: !9210)
!9308 = !DILocation(line: 1479, column: 40, scope: !9210)
!9309 = !DILocation(line: 1479, column: 54, scope: !9210)
!9310 = !DILocation(line: 1479, column: 52, scope: !9210)
!9311 = !DILocation(line: 1479, column: 62, scope: !9210)
!9312 = !DILocation(line: 1479, column: 68, scope: !9210)
!9313 = !DILocation(line: 1479, column: 66, scope: !9210)
!9314 = !DILocation(line: 1479, column: 77, scope: !9210)
!9315 = !DILocation(line: 1479, column: 89, scope: !9210)
!9316 = !DILocation(line: 1479, column: 75, scope: !9210)
!9317 = !DILocation(line: 1479, column: 103, scope: !9210)
!9318 = !DILocation(line: 1479, column: 8, scope: !9210)
!9319 = !DILocation(line: 1480, column: 15, scope: !9210)
!9320 = !DILocation(line: 1481, column: 7, scope: !9210)
!9321 = !DILocation(line: 1482, column: 6, scope: !9204)
!9322 = !DILocation(line: 1468, column: 40, scope: !9198)
!9323 = !DILocation(line: 1468, column: 6, scope: !9198)
!9324 = distinct !{!9324, !9201, !9325}
!9325 = !DILocation(line: 1482, column: 6, scope: !9195)
!9326 = !DILocation(line: 1483, column: 18, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9073, file: !1, line: 1483, column: 10)
!9328 = !DILocation(line: 1483, column: 10, scope: !9327)
!9329 = !DILocation(line: 1483, column: 26, scope: !9327)
!9330 = !DILocation(line: 1483, column: 37, scope: !9327)
!9331 = !DILocation(line: 1483, column: 42, scope: !9327)
!9332 = !DILocation(line: 1483, column: 29, scope: !9327)
!9333 = !DILocation(line: 1483, column: 10, scope: !9073)
!9334 = !DILocalVariable(name: "tang", scope: !9335, file: !1, line: 1484, type: !1649)
!9335 = distinct !DILexicalBlock(scope: !9327, file: !1, line: 1483, column: 49)
!9336 = !DILocation(line: 1484, column: 20, scope: !9335)
!9337 = !DILocation(line: 1484, column: 35, scope: !9335)
!9338 = !DILocation(line: 1484, column: 40, scope: !9335)
!9339 = !DILocation(line: 1484, column: 46, scope: !9335)
!9340 = !DILocation(line: 1484, column: 48, scope: !9335)
!9341 = !DILocation(line: 1484, column: 52, scope: !9335)
!9342 = !DILocation(line: 1484, column: 27, scope: !9335)
!9343 = !DILocation(line: 1485, column: 28, scope: !9335)
!9344 = !DILocation(line: 1485, column: 35, scope: !9335)
!9345 = !DILocation(line: 1485, column: 49, scope: !9335)
!9346 = !DILocation(line: 1485, column: 47, scope: !9335)
!9347 = !DILocation(line: 1485, column: 57, scope: !9335)
!9348 = !DILocation(line: 1485, column: 63, scope: !9335)
!9349 = !DILocation(line: 1485, column: 61, scope: !9335)
!9350 = !DILocation(line: 1485, column: 18, scope: !9335)
!9351 = !DILocation(line: 1485, column: 72, scope: !9335)
!9352 = !DILocation(line: 1485, column: 7, scope: !9335)
!9353 = !DILocation(line: 1486, column: 22, scope: !9335)
!9354 = !DILocation(line: 1486, column: 27, scope: !9335)
!9355 = !DILocation(line: 1486, column: 33, scope: !9335)
!9356 = !DILocation(line: 1486, column: 35, scope: !9335)
!9357 = !DILocation(line: 1486, column: 39, scope: !9335)
!9358 = !DILocation(line: 1486, column: 14, scope: !9335)
!9359 = !DILocation(line: 1486, column: 12, scope: !9335)
!9360 = !DILocation(line: 1487, column: 28, scope: !9335)
!9361 = !DILocation(line: 1487, column: 35, scope: !9335)
!9362 = !DILocation(line: 1487, column: 49, scope: !9335)
!9363 = !DILocation(line: 1487, column: 47, scope: !9335)
!9364 = !DILocation(line: 1487, column: 57, scope: !9335)
!9365 = !DILocation(line: 1487, column: 63, scope: !9335)
!9366 = !DILocation(line: 1487, column: 61, scope: !9335)
!9367 = !DILocation(line: 1487, column: 72, scope: !9335)
!9368 = !DILocation(line: 1487, column: 70, scope: !9335)
!9369 = !DILocation(line: 1487, column: 18, scope: !9335)
!9370 = !DILocation(line: 1487, column: 86, scope: !9335)
!9371 = !DILocation(line: 1487, column: 7, scope: !9335)
!9372 = !DILocation(line: 1488, column: 22, scope: !9335)
!9373 = !DILocation(line: 1488, column: 27, scope: !9335)
!9374 = !DILocation(line: 1488, column: 33, scope: !9335)
!9375 = !DILocation(line: 1488, column: 35, scope: !9335)
!9376 = !DILocation(line: 1488, column: 39, scope: !9335)
!9377 = !DILocation(line: 1488, column: 14, scope: !9335)
!9378 = !DILocation(line: 1488, column: 12, scope: !9335)
!9379 = !DILocation(line: 1489, column: 28, scope: !9335)
!9380 = !DILocation(line: 1489, column: 35, scope: !9335)
!9381 = !DILocation(line: 1489, column: 49, scope: !9335)
!9382 = !DILocation(line: 1489, column: 47, scope: !9335)
!9383 = !DILocation(line: 1489, column: 57, scope: !9335)
!9384 = !DILocation(line: 1489, column: 63, scope: !9335)
!9385 = !DILocation(line: 1489, column: 61, scope: !9335)
!9386 = !DILocation(line: 1489, column: 72, scope: !9335)
!9387 = !DILocation(line: 1489, column: 84, scope: !9335)
!9388 = !DILocation(line: 1489, column: 70, scope: !9335)
!9389 = !DILocation(line: 1489, column: 18, scope: !9335)
!9390 = !DILocation(line: 1489, column: 90, scope: !9335)
!9391 = !DILocation(line: 1489, column: 7, scope: !9335)
!9392 = !DILocation(line: 1490, column: 14, scope: !9335)
!9393 = !DILocation(line: 1491, column: 6, scope: !9335)
!9394 = !DILocation(line: 1492, column: 12, scope: !9073)
!9395 = !DILocation(line: 1493, column: 5, scope: !9073)
!9396 = !DILocation(line: 1494, column: 12, scope: !8816)
!9397 = !DILocation(line: 1495, column: 9, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !8816, file: !1, line: 1495, column: 9)
!9399 = !DILocation(line: 1495, column: 16, scope: !9398)
!9400 = !DILocation(line: 1495, column: 9, scope: !8816)
!9401 = !DILocation(line: 1496, column: 10, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9403, file: !1, line: 1496, column: 10)
!9403 = distinct !DILexicalBlock(scope: !9398, file: !1, line: 1495, column: 20)
!9404 = !DILocation(line: 1496, column: 18, scope: !9402)
!9405 = !DILocation(line: 1496, column: 21, scope: !9402)
!9406 = !DILocation(line: 1496, column: 29, scope: !9402)
!9407 = !DILocation(line: 1496, column: 10, scope: !9403)
!9408 = !DILocation(line: 1497, column: 14, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9402, file: !1, line: 1496, column: 35)
!9410 = !DILocation(line: 1498, column: 19, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9409, file: !1, line: 1498, column: 11)
!9412 = !DILocation(line: 1498, column: 11, scope: !9411)
!9413 = !DILocation(line: 1498, column: 27, scope: !9411)
!9414 = !DILocation(line: 1498, column: 38, scope: !9411)
!9415 = !DILocation(line: 1498, column: 43, scope: !9411)
!9416 = !DILocation(line: 1498, column: 30, scope: !9411)
!9417 = !DILocation(line: 1498, column: 11, scope: !9409)
!9418 = !DILocation(line: 1499, column: 29, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9411, file: !1, line: 1498, column: 50)
!9420 = !DILocation(line: 1499, column: 36, scope: !9419)
!9421 = !DILocation(line: 1499, column: 50, scope: !9419)
!9422 = !DILocation(line: 1499, column: 48, scope: !9419)
!9423 = !DILocation(line: 1499, column: 58, scope: !9419)
!9424 = !DILocation(line: 1499, column: 19, scope: !9419)
!9425 = !DILocation(line: 1499, column: 81, scope: !9419)
!9426 = !DILocation(line: 1499, column: 86, scope: !9419)
!9427 = !DILocation(line: 1499, column: 92, scope: !9419)
!9428 = !DILocation(line: 1499, column: 99, scope: !9419)
!9429 = !DILocation(line: 1499, column: 73, scope: !9419)
!9430 = !DILocation(line: 1499, column: 8, scope: !9419)
!9431 = !DILocation(line: 1500, column: 29, scope: !9419)
!9432 = !DILocation(line: 1500, column: 36, scope: !9419)
!9433 = !DILocation(line: 1500, column: 50, scope: !9419)
!9434 = !DILocation(line: 1500, column: 48, scope: !9419)
!9435 = !DILocation(line: 1500, column: 58, scope: !9419)
!9436 = !DILocation(line: 1500, column: 64, scope: !9419)
!9437 = !DILocation(line: 1500, column: 62, scope: !9419)
!9438 = !DILocation(line: 1500, column: 19, scope: !9419)
!9439 = !DILocation(line: 1500, column: 95, scope: !9419)
!9440 = !DILocation(line: 1500, column: 100, scope: !9419)
!9441 = !DILocation(line: 1500, column: 106, scope: !9419)
!9442 = !DILocation(line: 1500, column: 113, scope: !9419)
!9443 = !DILocation(line: 1500, column: 87, scope: !9419)
!9444 = !DILocation(line: 1500, column: 8, scope: !9419)
!9445 = !DILocation(line: 1501, column: 29, scope: !9419)
!9446 = !DILocation(line: 1501, column: 36, scope: !9419)
!9447 = !DILocation(line: 1501, column: 50, scope: !9419)
!9448 = !DILocation(line: 1501, column: 48, scope: !9419)
!9449 = !DILocation(line: 1501, column: 58, scope: !9419)
!9450 = !DILocation(line: 1501, column: 64, scope: !9419)
!9451 = !DILocation(line: 1501, column: 76, scope: !9419)
!9452 = !DILocation(line: 1501, column: 62, scope: !9419)
!9453 = !DILocation(line: 1501, column: 19, scope: !9419)
!9454 = !DILocation(line: 1501, column: 99, scope: !9419)
!9455 = !DILocation(line: 1501, column: 104, scope: !9419)
!9456 = !DILocation(line: 1501, column: 110, scope: !9419)
!9457 = !DILocation(line: 1501, column: 117, scope: !9419)
!9458 = !DILocation(line: 1501, column: 91, scope: !9419)
!9459 = !DILocation(line: 1501, column: 8, scope: !9419)
!9460 = !DILocation(line: 1502, column: 15, scope: !9419)
!9461 = !DILocation(line: 1503, column: 7, scope: !9419)
!9462 = !DILocation(line: 1504, column: 14, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9409, file: !1, line: 1504, column: 7)
!9464 = !DILocation(line: 1504, column: 12, scope: !9463)
!9465 = !DILocation(line: 1504, column: 19, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9463, file: !1, line: 1504, column: 7)
!9467 = !DILocation(line: 1504, column: 31, scope: !9466)
!9468 = !DILocation(line: 1504, column: 21, scope: !9466)
!9469 = !DILocation(line: 1504, column: 7, scope: !9463)
!9470 = !DILocation(line: 1505, column: 20, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9472, file: !1, line: 1505, column: 12)
!9472 = distinct !DILexicalBlock(scope: !9466, file: !1, line: 1504, column: 46)
!9473 = !DILocation(line: 1505, column: 26, scope: !9471)
!9474 = !DILocation(line: 1505, column: 12, scope: !9471)
!9475 = !DILocation(line: 1505, column: 29, scope: !9471)
!9476 = !DILocation(line: 1505, column: 12, scope: !9472)
!9477 = !DILocalVariable(name: "tf", scope: !9478, file: !1, line: 1506, type: !6719)
!9478 = distinct !DILexicalBlock(scope: !9471, file: !1, line: 1505, column: 36)
!9479 = !DILocation(line: 1506, column: 17, scope: !9478)
!9480 = !DILocation(line: 1506, column: 31, scope: !9478)
!9481 = !DILocation(line: 1506, column: 37, scope: !9478)
!9482 = !DILocation(line: 1506, column: 23, scope: !9478)
!9483 = !DILocation(line: 1506, column: 40, scope: !9478)
!9484 = !DILocation(line: 1506, column: 46, scope: !9478)
!9485 = !DILocation(line: 1507, column: 30, scope: !9478)
!9486 = !DILocation(line: 1507, column: 37, scope: !9478)
!9487 = !DILocation(line: 1507, column: 51, scope: !9478)
!9488 = !DILocation(line: 1507, column: 49, scope: !9478)
!9489 = !DILocation(line: 1507, column: 59, scope: !9478)
!9490 = !DILocation(line: 1507, column: 65, scope: !9478)
!9491 = !DILocation(line: 1507, column: 63, scope: !9478)
!9492 = !DILocation(line: 1507, column: 20, scope: !9478)
!9493 = !DILocation(line: 1507, column: 74, scope: !9478)
!9494 = !DILocation(line: 1507, column: 78, scope: !9478)
!9495 = !DILocation(line: 1507, column: 9, scope: !9478)
!9496 = !DILocation(line: 1508, column: 30, scope: !9478)
!9497 = !DILocation(line: 1508, column: 37, scope: !9478)
!9498 = !DILocation(line: 1508, column: 51, scope: !9478)
!9499 = !DILocation(line: 1508, column: 49, scope: !9478)
!9500 = !DILocation(line: 1508, column: 59, scope: !9478)
!9501 = !DILocation(line: 1508, column: 65, scope: !9478)
!9502 = !DILocation(line: 1508, column: 63, scope: !9478)
!9503 = !DILocation(line: 1508, column: 74, scope: !9478)
!9504 = !DILocation(line: 1508, column: 72, scope: !9478)
!9505 = !DILocation(line: 1508, column: 20, scope: !9478)
!9506 = !DILocation(line: 1508, column: 88, scope: !9478)
!9507 = !DILocation(line: 1508, column: 92, scope: !9478)
!9508 = !DILocation(line: 1508, column: 9, scope: !9478)
!9509 = !DILocation(line: 1509, column: 30, scope: !9478)
!9510 = !DILocation(line: 1509, column: 37, scope: !9478)
!9511 = !DILocation(line: 1509, column: 51, scope: !9478)
!9512 = !DILocation(line: 1509, column: 49, scope: !9478)
!9513 = !DILocation(line: 1509, column: 59, scope: !9478)
!9514 = !DILocation(line: 1509, column: 65, scope: !9478)
!9515 = !DILocation(line: 1509, column: 63, scope: !9478)
!9516 = !DILocation(line: 1509, column: 74, scope: !9478)
!9517 = !DILocation(line: 1509, column: 86, scope: !9478)
!9518 = !DILocation(line: 1509, column: 72, scope: !9478)
!9519 = !DILocation(line: 1509, column: 20, scope: !9478)
!9520 = !DILocation(line: 1509, column: 92, scope: !9478)
!9521 = !DILocation(line: 1509, column: 96, scope: !9478)
!9522 = !DILocation(line: 1509, column: 9, scope: !9478)
!9523 = !DILocation(line: 1510, column: 16, scope: !9478)
!9524 = !DILocation(line: 1511, column: 8, scope: !9478)
!9525 = !DILocation(line: 1512, column: 7, scope: !9472)
!9526 = !DILocation(line: 1504, column: 42, scope: !9466)
!9527 = !DILocation(line: 1504, column: 7, scope: !9466)
!9528 = distinct !{!9528, !9469, !9529}
!9529 = !DILocation(line: 1512, column: 7, scope: !9463)
!9530 = !DILocation(line: 1513, column: 14, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9409, file: !1, line: 1513, column: 7)
!9532 = !DILocation(line: 1513, column: 12, scope: !9531)
!9533 = !DILocation(line: 1513, column: 19, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9531, file: !1, line: 1513, column: 7)
!9535 = !DILocation(line: 1513, column: 31, scope: !9534)
!9536 = !DILocation(line: 1513, column: 21, scope: !9534)
!9537 = !DILocation(line: 1513, column: 7, scope: !9531)
!9538 = !DILocation(line: 1514, column: 20, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9540, file: !1, line: 1514, column: 12)
!9540 = distinct !DILexicalBlock(scope: !9534, file: !1, line: 1513, column: 45)
!9541 = !DILocation(line: 1514, column: 25, scope: !9539)
!9542 = !DILocation(line: 1514, column: 12, scope: !9539)
!9543 = !DILocation(line: 1514, column: 28, scope: !9539)
!9544 = !DILocation(line: 1514, column: 12, scope: !9540)
!9545 = !DILocalVariable(name: "cp", scope: !9546, file: !1, line: 1515, type: !7767)
!9546 = distinct !DILexicalBlock(scope: !9539, file: !1, line: 1514, column: 35)
!9547 = !DILocation(line: 1515, column: 15, scope: !9546)
!9548 = !DILocation(line: 1515, column: 29, scope: !9546)
!9549 = !DILocation(line: 1515, column: 34, scope: !9546)
!9550 = !DILocation(line: 1515, column: 21, scope: !9546)
!9551 = !DILocation(line: 1515, column: 37, scope: !9546)
!9552 = !DILocation(line: 1515, column: 43, scope: !9546)
!9553 = !DILocation(line: 1515, column: 45, scope: !9546)
!9554 = !DILocation(line: 1515, column: 49, scope: !9546)
!9555 = !DILocalVariable(name: "col", scope: !9546, file: !1, line: 1516, type: !9220)
!9556 = !DILocation(line: 1516, column: 17, scope: !9546)
!9557 = !DILocation(line: 1517, column: 18, scope: !9546)
!9558 = !DILocation(line: 1517, column: 22, scope: !9546)
!9559 = !DILocation(line: 1517, column: 9, scope: !9546)
!9560 = !DILocation(line: 1517, column: 16, scope: !9546)
!9561 = !DILocation(line: 1517, column: 34, scope: !9546)
!9562 = !DILocation(line: 1517, column: 38, scope: !9546)
!9563 = !DILocation(line: 1517, column: 25, scope: !9546)
!9564 = !DILocation(line: 1517, column: 32, scope: !9546)
!9565 = !DILocation(line: 1517, column: 50, scope: !9546)
!9566 = !DILocation(line: 1517, column: 54, scope: !9546)
!9567 = !DILocation(line: 1517, column: 41, scope: !9546)
!9568 = !DILocation(line: 1517, column: 48, scope: !9546)
!9569 = !DILocation(line: 1517, column: 66, scope: !9546)
!9570 = !DILocation(line: 1517, column: 70, scope: !9546)
!9571 = !DILocation(line: 1517, column: 57, scope: !9546)
!9572 = !DILocation(line: 1517, column: 64, scope: !9546)
!9573 = !DILocation(line: 1518, column: 34, scope: !9546)
!9574 = !DILocation(line: 1518, column: 41, scope: !9546)
!9575 = !DILocation(line: 1518, column: 55, scope: !9546)
!9576 = !DILocation(line: 1518, column: 53, scope: !9546)
!9577 = !DILocation(line: 1518, column: 63, scope: !9546)
!9578 = !DILocation(line: 1518, column: 69, scope: !9546)
!9579 = !DILocation(line: 1518, column: 67, scope: !9546)
!9580 = !DILocation(line: 1518, column: 86, scope: !9546)
!9581 = !DILocation(line: 1518, column: 9, scope: !9546)
!9582 = !DILocation(line: 1519, column: 23, scope: !9546)
!9583 = !DILocation(line: 1519, column: 28, scope: !9546)
!9584 = !DILocation(line: 1519, column: 15, scope: !9546)
!9585 = !DILocation(line: 1519, column: 31, scope: !9546)
!9586 = !DILocation(line: 1519, column: 37, scope: !9546)
!9587 = !DILocation(line: 1519, column: 39, scope: !9546)
!9588 = !DILocation(line: 1519, column: 43, scope: !9546)
!9589 = !DILocation(line: 1519, column: 12, scope: !9546)
!9590 = !DILocation(line: 1520, column: 18, scope: !9546)
!9591 = !DILocation(line: 1520, column: 22, scope: !9546)
!9592 = !DILocation(line: 1520, column: 9, scope: !9546)
!9593 = !DILocation(line: 1520, column: 16, scope: !9546)
!9594 = !DILocation(line: 1520, column: 34, scope: !9546)
!9595 = !DILocation(line: 1520, column: 38, scope: !9546)
!9596 = !DILocation(line: 1520, column: 25, scope: !9546)
!9597 = !DILocation(line: 1520, column: 32, scope: !9546)
!9598 = !DILocation(line: 1520, column: 50, scope: !9546)
!9599 = !DILocation(line: 1520, column: 54, scope: !9546)
!9600 = !DILocation(line: 1520, column: 41, scope: !9546)
!9601 = !DILocation(line: 1520, column: 48, scope: !9546)
!9602 = !DILocation(line: 1520, column: 66, scope: !9546)
!9603 = !DILocation(line: 1520, column: 70, scope: !9546)
!9604 = !DILocation(line: 1520, column: 57, scope: !9546)
!9605 = !DILocation(line: 1520, column: 64, scope: !9546)
!9606 = !DILocation(line: 1521, column: 34, scope: !9546)
!9607 = !DILocation(line: 1521, column: 41, scope: !9546)
!9608 = !DILocation(line: 1521, column: 55, scope: !9546)
!9609 = !DILocation(line: 1521, column: 53, scope: !9546)
!9610 = !DILocation(line: 1521, column: 63, scope: !9546)
!9611 = !DILocation(line: 1521, column: 69, scope: !9546)
!9612 = !DILocation(line: 1521, column: 67, scope: !9546)
!9613 = !DILocation(line: 1521, column: 78, scope: !9546)
!9614 = !DILocation(line: 1521, column: 76, scope: !9546)
!9615 = !DILocation(line: 1521, column: 100, scope: !9546)
!9616 = !DILocation(line: 1521, column: 9, scope: !9546)
!9617 = !DILocation(line: 1522, column: 23, scope: !9546)
!9618 = !DILocation(line: 1522, column: 28, scope: !9546)
!9619 = !DILocation(line: 1522, column: 15, scope: !9546)
!9620 = !DILocation(line: 1522, column: 31, scope: !9546)
!9621 = !DILocation(line: 1522, column: 37, scope: !9546)
!9622 = !DILocation(line: 1522, column: 39, scope: !9546)
!9623 = !DILocation(line: 1522, column: 43, scope: !9546)
!9624 = !DILocation(line: 1522, column: 12, scope: !9546)
!9625 = !DILocation(line: 1523, column: 18, scope: !9546)
!9626 = !DILocation(line: 1523, column: 22, scope: !9546)
!9627 = !DILocation(line: 1523, column: 9, scope: !9546)
!9628 = !DILocation(line: 1523, column: 16, scope: !9546)
!9629 = !DILocation(line: 1523, column: 34, scope: !9546)
!9630 = !DILocation(line: 1523, column: 38, scope: !9546)
!9631 = !DILocation(line: 1523, column: 25, scope: !9546)
!9632 = !DILocation(line: 1523, column: 32, scope: !9546)
!9633 = !DILocation(line: 1523, column: 50, scope: !9546)
!9634 = !DILocation(line: 1523, column: 54, scope: !9546)
!9635 = !DILocation(line: 1523, column: 41, scope: !9546)
!9636 = !DILocation(line: 1523, column: 48, scope: !9546)
!9637 = !DILocation(line: 1523, column: 66, scope: !9546)
!9638 = !DILocation(line: 1523, column: 70, scope: !9546)
!9639 = !DILocation(line: 1523, column: 57, scope: !9546)
!9640 = !DILocation(line: 1523, column: 64, scope: !9546)
!9641 = !DILocation(line: 1524, column: 34, scope: !9546)
!9642 = !DILocation(line: 1524, column: 41, scope: !9546)
!9643 = !DILocation(line: 1524, column: 55, scope: !9546)
!9644 = !DILocation(line: 1524, column: 53, scope: !9546)
!9645 = !DILocation(line: 1524, column: 63, scope: !9546)
!9646 = !DILocation(line: 1524, column: 69, scope: !9546)
!9647 = !DILocation(line: 1524, column: 67, scope: !9546)
!9648 = !DILocation(line: 1524, column: 78, scope: !9546)
!9649 = !DILocation(line: 1524, column: 90, scope: !9546)
!9650 = !DILocation(line: 1524, column: 76, scope: !9546)
!9651 = !DILocation(line: 1524, column: 104, scope: !9546)
!9652 = !DILocation(line: 1524, column: 9, scope: !9546)
!9653 = !DILocation(line: 1525, column: 16, scope: !9546)
!9654 = !DILocation(line: 1526, column: 8, scope: !9546)
!9655 = !DILocation(line: 1527, column: 7, scope: !9540)
!9656 = !DILocation(line: 1513, column: 41, scope: !9534)
!9657 = !DILocation(line: 1513, column: 7, scope: !9534)
!9658 = distinct !{!9658, !9537, !9659}
!9659 = !DILocation(line: 1527, column: 7, scope: !9531)
!9660 = !DILocation(line: 1528, column: 19, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9409, file: !1, line: 1528, column: 11)
!9662 = !DILocation(line: 1528, column: 11, scope: !9661)
!9663 = !DILocation(line: 1528, column: 27, scope: !9661)
!9664 = !DILocation(line: 1528, column: 38, scope: !9661)
!9665 = !DILocation(line: 1528, column: 43, scope: !9661)
!9666 = !DILocation(line: 1528, column: 30, scope: !9661)
!9667 = !DILocation(line: 1528, column: 11, scope: !9409)
!9668 = !DILocalVariable(name: "tang", scope: !9669, file: !1, line: 1529, type: !1649)
!9669 = distinct !DILexicalBlock(scope: !9661, file: !1, line: 1528, column: 50)
!9670 = !DILocation(line: 1529, column: 21, scope: !9669)
!9671 = !DILocation(line: 1529, column: 36, scope: !9669)
!9672 = !DILocation(line: 1529, column: 41, scope: !9669)
!9673 = !DILocation(line: 1529, column: 47, scope: !9669)
!9674 = !DILocation(line: 1529, column: 49, scope: !9669)
!9675 = !DILocation(line: 1529, column: 53, scope: !9669)
!9676 = !DILocation(line: 1529, column: 28, scope: !9669)
!9677 = !DILocation(line: 1530, column: 29, scope: !9669)
!9678 = !DILocation(line: 1530, column: 36, scope: !9669)
!9679 = !DILocation(line: 1530, column: 50, scope: !9669)
!9680 = !DILocation(line: 1530, column: 48, scope: !9669)
!9681 = !DILocation(line: 1530, column: 58, scope: !9669)
!9682 = !DILocation(line: 1530, column: 64, scope: !9669)
!9683 = !DILocation(line: 1530, column: 62, scope: !9669)
!9684 = !DILocation(line: 1530, column: 19, scope: !9669)
!9685 = !DILocation(line: 1530, column: 73, scope: !9669)
!9686 = !DILocation(line: 1530, column: 8, scope: !9669)
!9687 = !DILocation(line: 1531, column: 23, scope: !9669)
!9688 = !DILocation(line: 1531, column: 28, scope: !9669)
!9689 = !DILocation(line: 1531, column: 34, scope: !9669)
!9690 = !DILocation(line: 1531, column: 36, scope: !9669)
!9691 = !DILocation(line: 1531, column: 40, scope: !9669)
!9692 = !DILocation(line: 1531, column: 15, scope: !9669)
!9693 = !DILocation(line: 1531, column: 13, scope: !9669)
!9694 = !DILocation(line: 1532, column: 29, scope: !9669)
!9695 = !DILocation(line: 1532, column: 36, scope: !9669)
!9696 = !DILocation(line: 1532, column: 50, scope: !9669)
!9697 = !DILocation(line: 1532, column: 48, scope: !9669)
!9698 = !DILocation(line: 1532, column: 58, scope: !9669)
!9699 = !DILocation(line: 1532, column: 64, scope: !9669)
!9700 = !DILocation(line: 1532, column: 62, scope: !9669)
!9701 = !DILocation(line: 1532, column: 73, scope: !9669)
!9702 = !DILocation(line: 1532, column: 71, scope: !9669)
!9703 = !DILocation(line: 1532, column: 19, scope: !9669)
!9704 = !DILocation(line: 1532, column: 87, scope: !9669)
!9705 = !DILocation(line: 1532, column: 8, scope: !9669)
!9706 = !DILocation(line: 1533, column: 23, scope: !9669)
!9707 = !DILocation(line: 1533, column: 28, scope: !9669)
!9708 = !DILocation(line: 1533, column: 34, scope: !9669)
!9709 = !DILocation(line: 1533, column: 36, scope: !9669)
!9710 = !DILocation(line: 1533, column: 40, scope: !9669)
!9711 = !DILocation(line: 1533, column: 15, scope: !9669)
!9712 = !DILocation(line: 1533, column: 13, scope: !9669)
!9713 = !DILocation(line: 1534, column: 29, scope: !9669)
!9714 = !DILocation(line: 1534, column: 36, scope: !9669)
!9715 = !DILocation(line: 1534, column: 50, scope: !9669)
!9716 = !DILocation(line: 1534, column: 48, scope: !9669)
!9717 = !DILocation(line: 1534, column: 58, scope: !9669)
!9718 = !DILocation(line: 1534, column: 64, scope: !9669)
!9719 = !DILocation(line: 1534, column: 62, scope: !9669)
!9720 = !DILocation(line: 1534, column: 73, scope: !9669)
!9721 = !DILocation(line: 1534, column: 85, scope: !9669)
!9722 = !DILocation(line: 1534, column: 71, scope: !9669)
!9723 = !DILocation(line: 1534, column: 19, scope: !9669)
!9724 = !DILocation(line: 1534, column: 91, scope: !9669)
!9725 = !DILocation(line: 1534, column: 8, scope: !9669)
!9726 = !DILocation(line: 1535, column: 15, scope: !9669)
!9727 = !DILocation(line: 1536, column: 7, scope: !9669)
!9728 = !DILocation(line: 1537, column: 13, scope: !9409)
!9729 = !DILocation(line: 1538, column: 6, scope: !9409)
!9730 = !DILocation(line: 1539, column: 13, scope: !9403)
!9731 = !DILocation(line: 1540, column: 7, scope: !9403)
!9732 = !DILocation(line: 1541, column: 5, scope: !9403)
!9733 = !DILocation(line: 1542, column: 4, scope: !8816)
!9734 = !DILocation(line: 1359, column: 61, scope: !8808)
!9735 = !DILocation(line: 1359, column: 4, scope: !8808)
!9736 = distinct !{!9736, !8814, !9737}
!9737 = !DILocation(line: 1542, column: 4, scope: !8804)
!9738 = !DILocation(line: 1543, column: 15, scope: !8805)
!9739 = !DILocation(line: 1543, column: 25, scope: !8805)
!9740 = !DILocation(line: 1543, column: 23, scope: !8805)
!9741 = !DILocation(line: 1543, column: 13, scope: !8805)
!9742 = !DILocation(line: 1544, column: 8, scope: !9743)
!9743 = distinct !DILexicalBlock(scope: !8805, file: !1, line: 1544, column: 8)
!9744 = !DILocation(line: 1544, column: 17, scope: !9743)
!9745 = !DILocation(line: 1544, column: 8, scope: !8805)
!9746 = !DILocation(line: 1545, column: 9, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9748, file: !1, line: 1545, column: 9)
!9748 = distinct !DILexicalBlock(scope: !9743, file: !1, line: 1544, column: 22)
!9749 = !DILocation(line: 1545, column: 9, scope: !9748)
!9750 = !DILocation(line: 1546, column: 10, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9752, file: !1, line: 1546, column: 10)
!9752 = distinct !DILexicalBlock(scope: !9747, file: !1, line: 1545, column: 18)
!9753 = !DILocation(line: 1546, column: 18, scope: !9751)
!9754 = !DILocation(line: 1546, column: 10, scope: !9752)
!9755 = !DILocation(line: 1547, column: 25, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9751, file: !1, line: 1546, column: 24)
!9757 = !DILocation(line: 1547, column: 7, scope: !9756)
!9758 = !DILocation(line: 1548, column: 36, scope: !9756)
!9759 = !DILocation(line: 1548, column: 44, scope: !9756)
!9760 = !DILocation(line: 1548, column: 55, scope: !9756)
!9761 = !DILocation(line: 1548, column: 7, scope: !9756)
!9762 = !DILocation(line: 1549, column: 6, scope: !9756)
!9763 = !DILocation(line: 1550, column: 33, scope: !9752)
!9764 = !DILocation(line: 1550, column: 39, scope: !9752)
!9765 = !DILocation(line: 1550, column: 45, scope: !9752)
!9766 = !DILocation(line: 1550, column: 55, scope: !9752)
!9767 = !DILocation(line: 1550, column: 53, scope: !9752)
!9768 = !DILocation(line: 1550, column: 62, scope: !9752)
!9769 = !DILocation(line: 1550, column: 6, scope: !9752)
!9770 = !DILocation(line: 1551, column: 5, scope: !9752)
!9771 = !DILocation(line: 1552, column: 4, scope: !9748)
!9772 = !DILocation(line: 1553, column: 4, scope: !8805)
!9773 = !DILocation(line: 1554, column: 3, scope: !8805)
!9774 = !DILocation(line: 1555, column: 19, scope: !8764)
!9775 = !DILocation(line: 1555, column: 3, scope: !8764)
!9776 = !DILocation(line: 1558, column: 2, scope: !8402)
!9777 = !DILocation(line: 1559, column: 1, scope: !8402)
!9778 = distinct !DISubprogram(name: "cdDM_drawMappedFacesMat", scope: !1, file: !1, line: 1566, type: !1770, scopeLine: 1569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!9779 = !DILocalVariable(name: "dm", arg: 1, scope: !9778, file: !1, line: 1566, type: !1477)
!9780 = !DILocation(line: 1566, column: 50, scope: !9778)
!9781 = !DILocalVariable(name: "setMaterial", arg: 2, scope: !9778, file: !1, line: 1567, type: !1772)
!9782 = !DILocation(line: 1567, column: 44, scope: !9778)
!9783 = !DILocalVariable(name: "setFace", arg: 3, scope: !9778, file: !1, line: 1568, type: !1775)
!9784 = !DILocation(line: 1568, column: 44, scope: !9778)
!9785 = !DILocalVariable(name: "userData", arg: 4, scope: !9778, file: !1, line: 1568, type: !233)
!9786 = !DILocation(line: 1568, column: 87, scope: !9778)
!9787 = !DILocalVariable(name: "cddm", scope: !9778, file: !1, line: 1570, type: !201)
!9788 = !DILocation(line: 1570, column: 17, scope: !9778)
!9789 = !DILocation(line: 1570, column: 42, scope: !9778)
!9790 = !DILocation(line: 1570, column: 24, scope: !9778)
!9791 = !DILocalVariable(name: "gattribs", scope: !9778, file: !1, line: 1571, type: !8416)
!9792 = !DILocation(line: 1571, column: 19, scope: !9778)
!9793 = !DILocalVariable(name: "attribs", scope: !9778, file: !1, line: 1572, type: !8432)
!9794 = !DILocation(line: 1572, column: 18, scope: !9778)
!9795 = !DILocalVariable(name: "mvert", scope: !9778, file: !1, line: 1573, type: !1780)
!9796 = !DILocation(line: 1573, column: 9, scope: !9778)
!9797 = !DILocation(line: 1573, column: 17, scope: !9778)
!9798 = !DILocation(line: 1573, column: 23, scope: !9778)
!9799 = !DILocalVariable(name: "mf", scope: !9778, file: !1, line: 1574, type: !1786)
!9800 = !DILocation(line: 1574, column: 9, scope: !9778)
!9801 = !DILocation(line: 1574, column: 14, scope: !9778)
!9802 = !DILocation(line: 1574, column: 20, scope: !9778)
!9803 = !DILocalVariable(name: "nors", scope: !9778, file: !1, line: 1575, type: !8481)
!9804 = !DILocation(line: 1575, column: 16, scope: !9778)
!9805 = !DILocation(line: 1575, column: 27, scope: !9778)
!9806 = !DILocation(line: 1575, column: 31, scope: !9778)
!9807 = !DILocation(line: 1575, column: 52, scope: !9778)
!9808 = !DILocalVariable(name: "lnors", scope: !9778, file: !1, line: 1576, type: !7352)
!9809 = !DILocation(line: 1576, column: 16, scope: !9778)
!9810 = !DILocation(line: 1576, column: 31, scope: !9778)
!9811 = !DILocation(line: 1576, column: 35, scope: !9778)
!9812 = !DILocation(line: 1576, column: 56, scope: !9778)
!9813 = !DILocalVariable(name: "a", scope: !9778, file: !1, line: 1577, type: !219)
!9814 = !DILocation(line: 1577, column: 6, scope: !9778)
!9815 = !DILocalVariable(name: "matnr", scope: !9778, file: !1, line: 1577, type: !219)
!9816 = !DILocation(line: 1577, column: 9, scope: !9778)
!9817 = !DILocalVariable(name: "new_matnr", scope: !9778, file: !1, line: 1577, type: !219)
!9818 = !DILocation(line: 1577, column: 16, scope: !9778)
!9819 = !DILocalVariable(name: "orig", scope: !9778, file: !1, line: 1578, type: !219)
!9820 = !DILocation(line: 1578, column: 6, scope: !9778)
!9821 = !DILocalVariable(name: "index_mf_to_mpoly", scope: !9778, file: !1, line: 1581, type: !3982)
!9822 = !DILocation(line: 1581, column: 13, scope: !9778)
!9823 = !DILocation(line: 1581, column: 33, scope: !9778)
!9824 = !DILocation(line: 1581, column: 37, scope: !9778)
!9825 = !DILocation(line: 1581, column: 58, scope: !9778)
!9826 = !DILocalVariable(name: "index_mp_to_orig", scope: !9778, file: !1, line: 1582, type: !3982)
!9827 = !DILocation(line: 1582, column: 13, scope: !9778)
!9828 = !DILocation(line: 1582, column: 33, scope: !9778)
!9829 = !DILocation(line: 1582, column: 37, scope: !9778)
!9830 = !DILocation(line: 1582, column: 54, scope: !9778)
!9831 = !DILocation(line: 1583, column: 6, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !9778, file: !1, line: 1583, column: 6)
!9833 = !DILocation(line: 1583, column: 24, scope: !9832)
!9834 = !DILocation(line: 1583, column: 6, scope: !9778)
!9835 = !DILocation(line: 1584, column: 20, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9832, file: !1, line: 1583, column: 33)
!9837 = !DILocation(line: 1585, column: 2, scope: !9836)
!9838 = !DILocation(line: 1591, column: 6, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9778, file: !1, line: 1591, column: 6)
!9840 = !DILocation(line: 1591, column: 12, scope: !9839)
!9841 = !DILocation(line: 1591, column: 17, scope: !9839)
!9842 = !DILocation(line: 1591, column: 20, scope: !9839)
!9843 = !DILocation(line: 1591, column: 26, scope: !9839)
!9844 = !DILocation(line: 1591, column: 36, scope: !9839)
!9845 = !DILocation(line: 1591, column: 53, scope: !9839)
!9846 = !DILocation(line: 1591, column: 59, scope: !9839)
!9847 = !DILocation(line: 1591, column: 39, scope: !9839)
!9848 = !DILocation(line: 1591, column: 65, scope: !9839)
!9849 = !DILocation(line: 1591, column: 6, scope: !9778)
!9850 = !DILocation(line: 1592, column: 7, scope: !9851)
!9851 = distinct !DILexicalBlock(scope: !9852, file: !1, line: 1592, column: 7)
!9852 = distinct !DILexicalBlock(scope: !9839, file: !1, line: 1591, column: 80)
!9853 = !DILocation(line: 1592, column: 11, scope: !9851)
!9854 = !DILocation(line: 1592, column: 7, scope: !9852)
!9855 = !DILocation(line: 1593, column: 4, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9851, file: !1, line: 1592, column: 28)
!9857 = !DILocation(line: 1593, column: 16, scope: !9856)
!9858 = !DILocation(line: 1593, column: 29, scope: !9856)
!9859 = !DILocation(line: 1594, column: 18, scope: !9856)
!9860 = !DILocation(line: 1594, column: 24, scope: !9856)
!9861 = !DILocation(line: 1594, column: 4, scope: !9856)
!9862 = !DILocation(line: 1595, column: 3, scope: !9856)
!9863 = !DILocation(line: 1597, column: 3, scope: !9852)
!9864 = !DILocation(line: 1600, column: 32, scope: !9778)
!9865 = !DILocation(line: 1600, column: 2, scope: !9778)
!9866 = !DILocation(line: 1602, column: 8, scope: !9778)
!9867 = !DILocation(line: 1604, column: 2, scope: !9778)
!9868 = !DILocation(line: 1606, column: 2, scope: !9778)
!9869 = !DILocation(line: 1608, column: 2, scope: !9778)
!9870 = !DILocation(line: 1610, column: 9, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9778, file: !1, line: 1610, column: 2)
!9872 = !DILocation(line: 1610, column: 7, scope: !9871)
!9873 = !DILocation(line: 1610, column: 14, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9871, file: !1, line: 1610, column: 2)
!9875 = !DILocation(line: 1610, column: 18, scope: !9874)
!9876 = !DILocation(line: 1610, column: 22, scope: !9874)
!9877 = !DILocation(line: 1610, column: 16, scope: !9874)
!9878 = !DILocation(line: 1610, column: 2, scope: !9871)
!9879 = !DILocalVariable(name: "smoothnormal", scope: !9880, file: !1, line: 1611, type: !1730)
!9880 = distinct !DILexicalBlock(scope: !9874, file: !1, line: 1610, column: 50)
!9881 = !DILocation(line: 1611, column: 14, scope: !9880)
!9882 = !DILocation(line: 1611, column: 29, scope: !9880)
!9883 = !DILocation(line: 1611, column: 35, scope: !9880)
!9884 = !DILocation(line: 1611, column: 39, scope: !9880)
!9885 = !DILocation(line: 1611, column: 43, scope: !9880)
!9886 = !DILocation(line: 1611, column: 48, scope: !9880)
!9887 = !DILocalVariable(name: "ln1", scope: !9880, file: !1, line: 1612, type: !8579)
!9888 = !DILocation(line: 1612, column: 17, scope: !9880)
!9889 = !DILocalVariable(name: "ln2", scope: !9880, file: !1, line: 1612, type: !8579)
!9890 = !DILocation(line: 1612, column: 35, scope: !9880)
!9891 = !DILocalVariable(name: "ln3", scope: !9880, file: !1, line: 1612, type: !8579)
!9892 = !DILocation(line: 1612, column: 53, scope: !9880)
!9893 = !DILocalVariable(name: "ln4", scope: !9880, file: !1, line: 1612, type: !8579)
!9894 = !DILocation(line: 1612, column: 71, scope: !9880)
!9895 = !DILocation(line: 1615, column: 15, scope: !9880)
!9896 = !DILocation(line: 1615, column: 19, scope: !9880)
!9897 = !DILocation(line: 1615, column: 26, scope: !9880)
!9898 = !DILocation(line: 1615, column: 13, scope: !9880)
!9899 = !DILocation(line: 1617, column: 7, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9880, file: !1, line: 1617, column: 7)
!9901 = !DILocation(line: 1617, column: 20, scope: !9900)
!9902 = !DILocation(line: 1617, column: 17, scope: !9900)
!9903 = !DILocation(line: 1617, column: 7, scope: !9880)
!9904 = !DILocation(line: 1618, column: 4, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9900, file: !1, line: 1617, column: 27)
!9906 = !DILocation(line: 1620, column: 4, scope: !9905)
!9907 = !DILocation(line: 1620, column: 16, scope: !9905)
!9908 = !DILocation(line: 1620, column: 34, scope: !9905)
!9909 = !DILocation(line: 1620, column: 32, scope: !9905)
!9910 = !DILocation(line: 1620, column: 45, scope: !9905)
!9911 = !DILocation(line: 1621, column: 34, scope: !9905)
!9912 = !DILocation(line: 1621, column: 4, scope: !9905)
!9913 = !DILocation(line: 1623, column: 4, scope: !9905)
!9914 = !DILocation(line: 1624, column: 3, scope: !9905)
!9915 = !DILocation(line: 1627, column: 7, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9880, file: !1, line: 1627, column: 7)
!9917 = !DILocation(line: 1627, column: 7, scope: !9880)
!9918 = !DILocation(line: 1628, column: 12, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9916, file: !1, line: 1627, column: 16)
!9920 = !DILocation(line: 1628, column: 11, scope: !9919)
!9921 = !DILocation(line: 1628, column: 58, scope: !9919)
!9922 = !DILocation(line: 1628, column: 77, scope: !9919)
!9923 = !DILocation(line: 1628, column: 95, scope: !9919)
!9924 = !DILocation(line: 1628, column: 33, scope: !9919)
!9925 = !DILocation(line: 1628, column: 100, scope: !9919)
!9926 = !DILocation(line: 1628, column: 9, scope: !9919)
!9927 = !DILocation(line: 1630, column: 8, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9919, file: !1, line: 1630, column: 8)
!9929 = !DILocation(line: 1630, column: 13, scope: !9928)
!9930 = !DILocation(line: 1630, column: 31, scope: !9928)
!9931 = !DILocation(line: 1630, column: 35, scope: !9928)
!9932 = !DILocation(line: 1630, column: 43, scope: !9928)
!9933 = !DILocation(line: 1630, column: 53, scope: !9928)
!9934 = !DILocation(line: 1630, column: 8, scope: !9919)
!9935 = !DILocation(line: 1631, column: 5, scope: !9928)
!9936 = !DILocation(line: 1632, column: 3, scope: !9919)
!9937 = !DILocation(line: 1635, column: 8, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9880, file: !1, line: 1635, column: 7)
!9939 = !DILocation(line: 1635, column: 7, scope: !9880)
!9940 = !DILocation(line: 1636, column: 8, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9942, file: !1, line: 1636, column: 8)
!9942 = distinct !DILexicalBlock(scope: !9938, file: !1, line: 1635, column: 22)
!9943 = !DILocation(line: 1636, column: 8, scope: !9942)
!9944 = !DILocation(line: 1637, column: 17, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9941, file: !1, line: 1636, column: 14)
!9946 = !DILocation(line: 1637, column: 22, scope: !9945)
!9947 = !DILocation(line: 1637, column: 5, scope: !9945)
!9948 = !DILocation(line: 1638, column: 4, scope: !9945)
!9949 = !DILocalVariable(name: "nor", scope: !9950, file: !1, line: 1641, type: !422)
!9950 = distinct !DILexicalBlock(scope: !9941, file: !1, line: 1639, column: 9)
!9951 = !DILocation(line: 1641, column: 11, scope: !9950)
!9952 = !DILocation(line: 1643, column: 9, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9950, file: !1, line: 1643, column: 9)
!9954 = !DILocation(line: 1643, column: 13, scope: !9953)
!9955 = !DILocation(line: 1643, column: 9, scope: !9950)
!9956 = !DILocation(line: 1644, column: 21, scope: !9953)
!9957 = !DILocation(line: 1644, column: 26, scope: !9953)
!9958 = !DILocation(line: 1644, column: 32, scope: !9953)
!9959 = !DILocation(line: 1644, column: 36, scope: !9953)
!9960 = !DILocation(line: 1644, column: 40, scope: !9953)
!9961 = !DILocation(line: 1644, column: 44, scope: !9953)
!9962 = !DILocation(line: 1644, column: 50, scope: !9953)
!9963 = !DILocation(line: 1644, column: 54, scope: !9953)
!9964 = !DILocation(line: 1644, column: 58, scope: !9953)
!9965 = !DILocation(line: 1644, column: 62, scope: !9953)
!9966 = !DILocation(line: 1644, column: 68, scope: !9953)
!9967 = !DILocation(line: 1644, column: 72, scope: !9953)
!9968 = !DILocation(line: 1644, column: 76, scope: !9953)
!9969 = !DILocation(line: 1644, column: 80, scope: !9953)
!9970 = !DILocation(line: 1644, column: 86, scope: !9953)
!9971 = !DILocation(line: 1644, column: 90, scope: !9953)
!9972 = !DILocation(line: 1644, column: 94, scope: !9953)
!9973 = !DILocation(line: 1644, column: 6, scope: !9953)
!9974 = !DILocation(line: 1646, column: 20, scope: !9953)
!9975 = !DILocation(line: 1646, column: 25, scope: !9953)
!9976 = !DILocation(line: 1646, column: 31, scope: !9953)
!9977 = !DILocation(line: 1646, column: 35, scope: !9953)
!9978 = !DILocation(line: 1646, column: 39, scope: !9953)
!9979 = !DILocation(line: 1646, column: 43, scope: !9953)
!9980 = !DILocation(line: 1646, column: 49, scope: !9953)
!9981 = !DILocation(line: 1646, column: 53, scope: !9953)
!9982 = !DILocation(line: 1646, column: 57, scope: !9953)
!9983 = !DILocation(line: 1646, column: 61, scope: !9953)
!9984 = !DILocation(line: 1646, column: 67, scope: !9953)
!9985 = !DILocation(line: 1646, column: 71, scope: !9953)
!9986 = !DILocation(line: 1646, column: 75, scope: !9953)
!9987 = !DILocation(line: 1646, column: 6, scope: !9953)
!9988 = !DILocation(line: 1648, column: 17, scope: !9950)
!9989 = !DILocation(line: 1648, column: 5, scope: !9950)
!9990 = !DILocation(line: 1650, column: 3, scope: !9942)
!9991 = !DILocation(line: 1651, column: 12, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9938, file: !1, line: 1651, column: 12)
!9993 = !DILocation(line: 1651, column: 12, scope: !9938)
!9994 = !DILocation(line: 1652, column: 11, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9992, file: !1, line: 1651, column: 19)
!9996 = !DILocation(line: 1652, column: 17, scope: !9995)
!9997 = !DILocation(line: 1652, column: 8, scope: !9995)
!9998 = !DILocation(line: 1653, column: 11, scope: !9995)
!9999 = !DILocation(line: 1653, column: 17, scope: !9995)
!10000 = !DILocation(line: 1653, column: 8, scope: !9995)
!10001 = !DILocation(line: 1654, column: 11, scope: !9995)
!10002 = !DILocation(line: 1654, column: 17, scope: !9995)
!10003 = !DILocation(line: 1654, column: 8, scope: !9995)
!10004 = !DILocation(line: 1655, column: 11, scope: !9995)
!10005 = !DILocation(line: 1655, column: 17, scope: !9995)
!10006 = !DILocation(line: 1655, column: 8, scope: !9995)
!10007 = !DILocation(line: 1656, column: 3, scope: !9995)
!10008 = !DILocation(line: 1659, column: 37, scope: !9880)
!10009 = !DILocation(line: 1659, column: 44, scope: !9880)
!10010 = !DILocation(line: 1659, column: 47, scope: !9880)
!10011 = !DILocation(line: 1659, column: 51, scope: !9880)
!10012 = !DILocation(line: 1659, column: 58, scope: !9880)
!10013 = !DILocation(line: 1659, column: 63, scope: !9880)
!10014 = !DILocation(line: 1659, column: 3, scope: !9880)
!10015 = !DILocation(line: 1660, column: 37, scope: !9880)
!10016 = !DILocation(line: 1660, column: 44, scope: !9880)
!10017 = !DILocation(line: 1660, column: 47, scope: !9880)
!10018 = !DILocation(line: 1660, column: 51, scope: !9880)
!10019 = !DILocation(line: 1660, column: 58, scope: !9880)
!10020 = !DILocation(line: 1660, column: 63, scope: !9880)
!10021 = !DILocation(line: 1660, column: 3, scope: !9880)
!10022 = !DILocation(line: 1661, column: 37, scope: !9880)
!10023 = !DILocation(line: 1661, column: 44, scope: !9880)
!10024 = !DILocation(line: 1661, column: 47, scope: !9880)
!10025 = !DILocation(line: 1661, column: 51, scope: !9880)
!10026 = !DILocation(line: 1661, column: 58, scope: !9880)
!10027 = !DILocation(line: 1661, column: 63, scope: !9880)
!10028 = !DILocation(line: 1661, column: 3, scope: !9880)
!10029 = !DILocation(line: 1663, column: 7, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !9880, file: !1, line: 1663, column: 7)
!10031 = !DILocation(line: 1663, column: 11, scope: !10030)
!10032 = !DILocation(line: 1663, column: 7, scope: !9880)
!10033 = !DILocation(line: 1664, column: 38, scope: !10030)
!10034 = !DILocation(line: 1664, column: 45, scope: !10030)
!10035 = !DILocation(line: 1664, column: 48, scope: !10030)
!10036 = !DILocation(line: 1664, column: 52, scope: !10030)
!10037 = !DILocation(line: 1664, column: 59, scope: !10030)
!10038 = !DILocation(line: 1664, column: 64, scope: !10030)
!10039 = !DILocation(line: 1664, column: 4, scope: !10030)
!10040 = !DILocation(line: 1666, column: 38, scope: !10030)
!10041 = !DILocation(line: 1666, column: 45, scope: !10030)
!10042 = !DILocation(line: 1666, column: 48, scope: !10030)
!10043 = !DILocation(line: 1666, column: 52, scope: !10030)
!10044 = !DILocation(line: 1666, column: 59, scope: !10030)
!10045 = !DILocation(line: 1666, column: 64, scope: !10030)
!10046 = !DILocation(line: 1666, column: 4, scope: !10030)
!10047 = !DILocation(line: 1667, column: 2, scope: !9880)
!10048 = !DILocation(line: 1610, column: 40, scope: !9874)
!10049 = !DILocation(line: 1610, column: 46, scope: !9874)
!10050 = !DILocation(line: 1610, column: 2, scope: !9874)
!10051 = distinct !{!10051, !9878, !10052}
!10052 = !DILocation(line: 1667, column: 2, scope: !9871)
!10053 = !DILocation(line: 1668, column: 2, scope: !9778)
!10054 = !DILocation(line: 1670, column: 2, scope: !9778)
!10055 = !DILocation(line: 1671, column: 1, scope: !9778)
!10056 = distinct !DISubprogram(name: "cdDM_foreachMappedVert", scope: !1, file: !1, line: 1697, type: !1644, scopeLine: 1702, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!10057 = !DILocalVariable(name: "dm", arg: 1, scope: !10056, file: !1, line: 1698, type: !1477)
!10058 = !DILocation(line: 1698, column: 22, scope: !10056)
!10059 = !DILocalVariable(name: "func", arg: 2, scope: !10056, file: !1, line: 1699, type: !1646)
!10060 = !DILocation(line: 1699, column: 16, scope: !10056)
!10061 = !DILocalVariable(name: "userData", arg: 3, scope: !10056, file: !1, line: 1700, type: !233)
!10062 = !DILocation(line: 1700, column: 15, scope: !10056)
!10063 = !DILocalVariable(name: "flag", arg: 4, scope: !10056, file: !1, line: 1701, type: !1652)
!10064 = !DILocation(line: 1701, column: 23, scope: !10056)
!10065 = !DILocalVariable(name: "mv", scope: !10056, file: !1, line: 1703, type: !1780)
!10066 = !DILocation(line: 1703, column: 9, scope: !10056)
!10067 = !DILocation(line: 1703, column: 29, scope: !10056)
!10068 = !DILocation(line: 1703, column: 14, scope: !10056)
!10069 = !DILocalVariable(name: "index", scope: !10056, file: !1, line: 1704, type: !3982)
!10070 = !DILocation(line: 1704, column: 13, scope: !10056)
!10071 = !DILocation(line: 1704, column: 44, scope: !10056)
!10072 = !DILocation(line: 1704, column: 21, scope: !10056)
!10073 = !DILocalVariable(name: "i", scope: !10056, file: !1, line: 1705, type: !219)
!10074 = !DILocation(line: 1705, column: 6, scope: !10056)
!10075 = !DILocation(line: 1707, column: 6, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !10056, file: !1, line: 1707, column: 6)
!10077 = !DILocation(line: 1707, column: 6, scope: !10056)
!10078 = !DILocation(line: 1708, column: 10, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10080, file: !1, line: 1708, column: 3)
!10080 = distinct !DILexicalBlock(scope: !10076, file: !1, line: 1707, column: 13)
!10081 = !DILocation(line: 1708, column: 8, scope: !10079)
!10082 = !DILocation(line: 1708, column: 15, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10079, file: !1, line: 1708, column: 3)
!10084 = !DILocation(line: 1708, column: 19, scope: !10083)
!10085 = !DILocation(line: 1708, column: 23, scope: !10083)
!10086 = !DILocation(line: 1708, column: 17, scope: !10083)
!10087 = !DILocation(line: 1708, column: 3, scope: !10079)
!10088 = !DILocalVariable(name: "no", scope: !10089, file: !1, line: 1709, type: !1650)
!10089 = distinct !DILexicalBlock(scope: !10083, file: !1, line: 1708, column: 47)
!10090 = !DILocation(line: 1709, column: 17, scope: !10089)
!10091 = !DILocation(line: 1709, column: 23, scope: !10089)
!10092 = !DILocation(line: 1709, column: 28, scope: !10089)
!10093 = !DILocation(line: 1709, column: 22, scope: !10089)
!10094 = !DILocation(line: 1709, column: 55, scope: !10089)
!10095 = !DILocation(line: 1709, column: 59, scope: !10089)
!10096 = !DILocalVariable(name: "orig", scope: !10089, file: !1, line: 1710, type: !2682)
!10097 = !DILocation(line: 1710, column: 14, scope: !10089)
!10098 = !DILocation(line: 1710, column: 27, scope: !10089)
!10099 = !DILocation(line: 1710, column: 21, scope: !10089)
!10100 = !DILocation(line: 1711, column: 8, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10089, file: !1, line: 1711, column: 8)
!10102 = !DILocation(line: 1711, column: 13, scope: !10101)
!10103 = !DILocation(line: 1711, column: 8, scope: !10089)
!10104 = !DILocation(line: 1711, column: 32, scope: !10101)
!10105 = !DILocation(line: 1712, column: 4, scope: !10089)
!10106 = !DILocation(line: 1712, column: 9, scope: !10089)
!10107 = !DILocation(line: 1712, column: 19, scope: !10089)
!10108 = !DILocation(line: 1712, column: 25, scope: !10089)
!10109 = !DILocation(line: 1712, column: 29, scope: !10089)
!10110 = !DILocation(line: 1712, column: 39, scope: !10089)
!10111 = !DILocation(line: 1713, column: 3, scope: !10089)
!10112 = !DILocation(line: 1708, column: 37, scope: !10083)
!10113 = !DILocation(line: 1708, column: 43, scope: !10083)
!10114 = !DILocation(line: 1708, column: 3, scope: !10083)
!10115 = distinct !{!10115, !10087, !10116}
!10116 = !DILocation(line: 1713, column: 3, scope: !10079)
!10117 = !DILocation(line: 1714, column: 2, scope: !10080)
!10118 = !DILocation(line: 1716, column: 10, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10120, file: !1, line: 1716, column: 3)
!10120 = distinct !DILexicalBlock(scope: !10076, file: !1, line: 1715, column: 7)
!10121 = !DILocation(line: 1716, column: 8, scope: !10119)
!10122 = !DILocation(line: 1716, column: 15, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10119, file: !1, line: 1716, column: 3)
!10124 = !DILocation(line: 1716, column: 19, scope: !10123)
!10125 = !DILocation(line: 1716, column: 23, scope: !10123)
!10126 = !DILocation(line: 1716, column: 17, scope: !10123)
!10127 = !DILocation(line: 1716, column: 3, scope: !10119)
!10128 = !DILocalVariable(name: "no", scope: !10129, file: !1, line: 1717, type: !1650)
!10129 = distinct !DILexicalBlock(scope: !10123, file: !1, line: 1716, column: 47)
!10130 = !DILocation(line: 1717, column: 17, scope: !10129)
!10131 = !DILocation(line: 1717, column: 23, scope: !10129)
!10132 = !DILocation(line: 1717, column: 28, scope: !10129)
!10133 = !DILocation(line: 1717, column: 22, scope: !10129)
!10134 = !DILocation(line: 1717, column: 55, scope: !10129)
!10135 = !DILocation(line: 1717, column: 59, scope: !10129)
!10136 = !DILocation(line: 1718, column: 4, scope: !10129)
!10137 = !DILocation(line: 1718, column: 9, scope: !10129)
!10138 = !DILocation(line: 1718, column: 19, scope: !10129)
!10139 = !DILocation(line: 1718, column: 22, scope: !10129)
!10140 = !DILocation(line: 1718, column: 26, scope: !10129)
!10141 = !DILocation(line: 1718, column: 36, scope: !10129)
!10142 = !DILocation(line: 1719, column: 3, scope: !10129)
!10143 = !DILocation(line: 1716, column: 37, scope: !10123)
!10144 = !DILocation(line: 1716, column: 43, scope: !10123)
!10145 = !DILocation(line: 1716, column: 3, scope: !10123)
!10146 = distinct !{!10146, !10127, !10147}
!10147 = !DILocation(line: 1719, column: 3, scope: !10119)
!10148 = !DILocation(line: 1721, column: 1, scope: !10056)
!10149 = distinct !DISubprogram(name: "cdDM_foreachMappedEdge", scope: !1, file: !1, line: 1723, type: !1655, scopeLine: 1727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!10150 = !DILocalVariable(name: "dm", arg: 1, scope: !10149, file: !1, line: 1724, type: !1477)
!10151 = !DILocation(line: 1724, column: 22, scope: !10149)
!10152 = !DILocalVariable(name: "func", arg: 2, scope: !10149, file: !1, line: 1725, type: !1657)
!10153 = !DILocation(line: 1725, column: 16, scope: !10149)
!10154 = !DILocalVariable(name: "userData", arg: 3, scope: !10149, file: !1, line: 1726, type: !233)
!10155 = !DILocation(line: 1726, column: 15, scope: !10149)
!10156 = !DILocalVariable(name: "cddm", scope: !10149, file: !1, line: 1728, type: !201)
!10157 = !DILocation(line: 1728, column: 17, scope: !10149)
!10158 = !DILocation(line: 1728, column: 42, scope: !10149)
!10159 = !DILocation(line: 1728, column: 24, scope: !10149)
!10160 = !DILocalVariable(name: "mv", scope: !10149, file: !1, line: 1729, type: !1780)
!10161 = !DILocation(line: 1729, column: 9, scope: !10149)
!10162 = !DILocation(line: 1729, column: 14, scope: !10149)
!10163 = !DILocation(line: 1729, column: 20, scope: !10149)
!10164 = !DILocalVariable(name: "med", scope: !10149, file: !1, line: 1730, type: !1783)
!10165 = !DILocation(line: 1730, column: 9, scope: !10149)
!10166 = !DILocation(line: 1730, column: 15, scope: !10149)
!10167 = !DILocation(line: 1730, column: 21, scope: !10149)
!10168 = !DILocalVariable(name: "i", scope: !10149, file: !1, line: 1731, type: !219)
!10169 = !DILocation(line: 1731, column: 6, scope: !10149)
!10170 = !DILocalVariable(name: "orig", scope: !10149, file: !1, line: 1731, type: !219)
!10171 = !DILocation(line: 1731, column: 9, scope: !10149)
!10172 = !DILocalVariable(name: "index", scope: !10149, file: !1, line: 1731, type: !289)
!10173 = !DILocation(line: 1731, column: 16, scope: !10149)
!10174 = !DILocation(line: 1731, column: 47, scope: !10149)
!10175 = !DILocation(line: 1731, column: 24, scope: !10149)
!10176 = !DILocation(line: 1733, column: 9, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10149, file: !1, line: 1733, column: 2)
!10178 = !DILocation(line: 1733, column: 7, scope: !10177)
!10179 = !DILocation(line: 1733, column: 14, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10177, file: !1, line: 1733, column: 2)
!10181 = !DILocation(line: 1733, column: 18, scope: !10180)
!10182 = !DILocation(line: 1733, column: 22, scope: !10180)
!10183 = !DILocation(line: 1733, column: 16, scope: !10180)
!10184 = !DILocation(line: 1733, column: 2, scope: !10177)
!10185 = !DILocation(line: 1734, column: 7, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10187, file: !1, line: 1734, column: 7)
!10187 = distinct !DILexicalBlock(scope: !10180, file: !1, line: 1733, column: 47)
!10188 = !DILocation(line: 1734, column: 7, scope: !10187)
!10189 = !DILocation(line: 1735, column: 17, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !10186, file: !1, line: 1734, column: 14)
!10191 = !DILocation(line: 1735, column: 11, scope: !10190)
!10192 = !DILocation(line: 1735, column: 9, scope: !10190)
!10193 = !DILocation(line: 1736, column: 8, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10190, file: !1, line: 1736, column: 8)
!10195 = !DILocation(line: 1736, column: 13, scope: !10194)
!10196 = !DILocation(line: 1736, column: 8, scope: !10190)
!10197 = !DILocation(line: 1736, column: 32, scope: !10194)
!10198 = !DILocation(line: 1737, column: 4, scope: !10190)
!10199 = !DILocation(line: 1737, column: 9, scope: !10190)
!10200 = !DILocation(line: 1737, column: 19, scope: !10190)
!10201 = !DILocation(line: 1737, column: 25, scope: !10190)
!10202 = !DILocation(line: 1737, column: 28, scope: !10190)
!10203 = !DILocation(line: 1737, column: 33, scope: !10190)
!10204 = !DILocation(line: 1737, column: 37, scope: !10190)
!10205 = !DILocation(line: 1737, column: 41, scope: !10190)
!10206 = !DILocation(line: 1737, column: 44, scope: !10190)
!10207 = !DILocation(line: 1737, column: 49, scope: !10190)
!10208 = !DILocation(line: 1737, column: 53, scope: !10190)
!10209 = !DILocation(line: 1738, column: 3, scope: !10190)
!10210 = !DILocation(line: 1740, column: 4, scope: !10186)
!10211 = !DILocation(line: 1740, column: 9, scope: !10186)
!10212 = !DILocation(line: 1740, column: 19, scope: !10186)
!10213 = !DILocation(line: 1740, column: 22, scope: !10186)
!10214 = !DILocation(line: 1740, column: 25, scope: !10186)
!10215 = !DILocation(line: 1740, column: 30, scope: !10186)
!10216 = !DILocation(line: 1740, column: 34, scope: !10186)
!10217 = !DILocation(line: 1740, column: 38, scope: !10186)
!10218 = !DILocation(line: 1740, column: 41, scope: !10186)
!10219 = !DILocation(line: 1740, column: 46, scope: !10186)
!10220 = !DILocation(line: 1740, column: 50, scope: !10186)
!10221 = !DILocation(line: 1741, column: 2, scope: !10187)
!10222 = !DILocation(line: 1733, column: 36, scope: !10180)
!10223 = !DILocation(line: 1733, column: 43, scope: !10180)
!10224 = !DILocation(line: 1733, column: 2, scope: !10180)
!10225 = distinct !{!10225, !10184, !10226}
!10226 = !DILocation(line: 1741, column: 2, scope: !10177)
!10227 = !DILocation(line: 1742, column: 1, scope: !10149)
!10228 = distinct !DISubprogram(name: "cdDM_foreachMappedLoop", scope: !1, file: !1, line: 1744, type: !1662, scopeLine: 1749, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!10229 = !DILocalVariable(name: "dm", arg: 1, scope: !10228, file: !1, line: 1745, type: !1477)
!10230 = !DILocation(line: 1745, column: 22, scope: !10228)
!10231 = !DILocalVariable(name: "func", arg: 2, scope: !10228, file: !1, line: 1746, type: !1664)
!10232 = !DILocation(line: 1746, column: 16, scope: !10228)
!10233 = !DILocalVariable(name: "userData", arg: 3, scope: !10228, file: !1, line: 1747, type: !233)
!10234 = !DILocation(line: 1747, column: 15, scope: !10228)
!10235 = !DILocalVariable(name: "flag", arg: 4, scope: !10228, file: !1, line: 1748, type: !1652)
!10236 = !DILocation(line: 1748, column: 23, scope: !10228)
!10237 = !DILocalVariable(name: "lnors", scope: !10228, file: !1, line: 1752, type: !8481)
!10238 = !DILocation(line: 1752, column: 16, scope: !10228)
!10239 = !DILocation(line: 1752, column: 29, scope: !10228)
!10240 = !DILocation(line: 1752, column: 34, scope: !10228)
!10241 = !DILocation(line: 1752, column: 28, scope: !10228)
!10242 = !DILocation(line: 1752, column: 84, scope: !10228)
!10243 = !DILocation(line: 1752, column: 61, scope: !10228)
!10244 = !DILocalVariable(name: "mv", scope: !10228, file: !1, line: 1754, type: !8469)
!10245 = !DILocation(line: 1754, column: 15, scope: !10228)
!10246 = !DILocation(line: 1754, column: 35, scope: !10228)
!10247 = !DILocation(line: 1754, column: 20, scope: !10228)
!10248 = !DILocalVariable(name: "ml", scope: !10228, file: !1, line: 1755, type: !10249)
!10249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10250, size: 64)
!10250 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1790)
!10251 = !DILocation(line: 1755, column: 15, scope: !10228)
!10252 = !DILocation(line: 1755, column: 35, scope: !10228)
!10253 = !DILocation(line: 1755, column: 20, scope: !10228)
!10254 = !DILocalVariable(name: "mp", scope: !10228, file: !1, line: 1756, type: !10255)
!10255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10256, size: 64)
!10256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1793)
!10257 = !DILocation(line: 1756, column: 15, scope: !10228)
!10258 = !DILocation(line: 1756, column: 35, scope: !10228)
!10259 = !DILocation(line: 1756, column: 20, scope: !10228)
!10260 = !DILocalVariable(name: "v_index", scope: !10228, file: !1, line: 1757, type: !3982)
!10261 = !DILocation(line: 1757, column: 13, scope: !10228)
!10262 = !DILocation(line: 1757, column: 46, scope: !10228)
!10263 = !DILocation(line: 1757, column: 23, scope: !10228)
!10264 = !DILocalVariable(name: "f_index", scope: !10228, file: !1, line: 1758, type: !3982)
!10265 = !DILocation(line: 1758, column: 13, scope: !10228)
!10266 = !DILocation(line: 1758, column: 46, scope: !10228)
!10267 = !DILocation(line: 1758, column: 23, scope: !10228)
!10268 = !DILocalVariable(name: "p_idx", scope: !10228, file: !1, line: 1759, type: !219)
!10269 = !DILocation(line: 1759, column: 6, scope: !10228)
!10270 = !DILocalVariable(name: "i", scope: !10228, file: !1, line: 1759, type: !219)
!10271 = !DILocation(line: 1759, column: 13, scope: !10228)
!10272 = !DILocation(line: 1761, column: 13, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10228, file: !1, line: 1761, column: 2)
!10274 = !DILocation(line: 1761, column: 7, scope: !10273)
!10275 = !DILocation(line: 1761, column: 18, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10273, file: !1, line: 1761, column: 2)
!10277 = !DILocation(line: 1761, column: 26, scope: !10276)
!10278 = !DILocation(line: 1761, column: 30, scope: !10276)
!10279 = !DILocation(line: 1761, column: 24, scope: !10276)
!10280 = !DILocation(line: 1761, column: 2, scope: !10273)
!10281 = !DILocation(line: 1762, column: 10, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10283, file: !1, line: 1762, column: 3)
!10283 = distinct !DILexicalBlock(scope: !10276, file: !1, line: 1761, column: 58)
!10284 = !DILocation(line: 1762, column: 8, scope: !10282)
!10285 = !DILocation(line: 1762, column: 15, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !10282, file: !1, line: 1762, column: 3)
!10287 = !DILocation(line: 1762, column: 19, scope: !10286)
!10288 = !DILocation(line: 1762, column: 23, scope: !10286)
!10289 = !DILocation(line: 1762, column: 17, scope: !10286)
!10290 = !DILocation(line: 1762, column: 3, scope: !10282)
!10291 = !DILocalVariable(name: "v_idx", scope: !10292, file: !1, line: 1763, type: !2682)
!10292 = distinct !DILexicalBlock(scope: !10286, file: !1, line: 1762, column: 43)
!10293 = !DILocation(line: 1763, column: 14, scope: !10292)
!10294 = !DILocation(line: 1763, column: 22, scope: !10292)
!10295 = !DILocation(line: 1763, column: 32, scope: !10292)
!10296 = !DILocation(line: 1763, column: 40, scope: !10292)
!10297 = !DILocation(line: 1763, column: 44, scope: !10292)
!10298 = !DILocation(line: 1763, column: 49, scope: !10292)
!10299 = !DILocation(line: 1763, column: 53, scope: !10292)
!10300 = !DILocalVariable(name: "f_idx", scope: !10292, file: !1, line: 1764, type: !2682)
!10301 = !DILocation(line: 1764, column: 14, scope: !10292)
!10302 = !DILocation(line: 1764, column: 22, scope: !10292)
!10303 = !DILocation(line: 1764, column: 32, scope: !10292)
!10304 = !DILocation(line: 1764, column: 40, scope: !10292)
!10305 = !DILocation(line: 1764, column: 49, scope: !10292)
!10306 = !DILocalVariable(name: "no", scope: !10292, file: !1, line: 1765, type: !1649)
!10307 = !DILocation(line: 1765, column: 17, scope: !10292)
!10308 = !DILocation(line: 1765, column: 22, scope: !10292)
!10309 = !DILocation(line: 1765, column: 36, scope: !10292)
!10310 = !DILocation(line: 1765, column: 30, scope: !10292)
!10311 = !DILocation(line: 1766, column: 9, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10292, file: !1, line: 1766, column: 8)
!10313 = !DILocation(line: 1766, column: 8, scope: !10292)
!10314 = !DILocation(line: 1767, column: 5, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10312, file: !1, line: 1766, column: 45)
!10316 = !DILocation(line: 1767, column: 10, scope: !10315)
!10317 = !DILocation(line: 1767, column: 20, scope: !10315)
!10318 = !DILocation(line: 1767, column: 27, scope: !10315)
!10319 = !DILocation(line: 1767, column: 34, scope: !10315)
!10320 = !DILocation(line: 1767, column: 37, scope: !10315)
!10321 = !DILocation(line: 1767, column: 41, scope: !10315)
!10322 = !DILocation(line: 1767, column: 44, scope: !10315)
!10323 = !DILocation(line: 1767, column: 48, scope: !10315)
!10324 = !DILocation(line: 1768, column: 4, scope: !10315)
!10325 = !DILocation(line: 1769, column: 3, scope: !10292)
!10326 = !DILocation(line: 1762, column: 32, scope: !10286)
!10327 = !DILocation(line: 1762, column: 37, scope: !10286)
!10328 = !DILocation(line: 1762, column: 3, scope: !10286)
!10329 = distinct !{!10329, !10290, !10330}
!10330 = !DILocation(line: 1769, column: 3, scope: !10282)
!10331 = !DILocation(line: 1770, column: 2, scope: !10283)
!10332 = !DILocation(line: 1761, column: 43, scope: !10276)
!10333 = !DILocation(line: 1761, column: 52, scope: !10276)
!10334 = !DILocation(line: 1761, column: 2, scope: !10276)
!10335 = distinct !{!10335, !10280, !10336}
!10336 = !DILocation(line: 1770, column: 2, scope: !10273)
!10337 = !DILocation(line: 1771, column: 1, scope: !10228)
!10338 = distinct !DISubprogram(name: "cdDM_foreachMappedFaceCenter", scope: !1, file: !1, line: 1773, type: !1669, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!10339 = !DILocalVariable(name: "dm", arg: 1, scope: !10338, file: !1, line: 1774, type: !1477)
!10340 = !DILocation(line: 1774, column: 22, scope: !10338)
!10341 = !DILocalVariable(name: "func", arg: 2, scope: !10338, file: !1, line: 1775, type: !1657)
!10342 = !DILocation(line: 1775, column: 16, scope: !10338)
!10343 = !DILocalVariable(name: "userData", arg: 3, scope: !10338, file: !1, line: 1776, type: !233)
!10344 = !DILocation(line: 1776, column: 15, scope: !10338)
!10345 = !DILocalVariable(name: "flag", arg: 4, scope: !10338, file: !1, line: 1777, type: !1652)
!10346 = !DILocation(line: 1777, column: 23, scope: !10338)
!10347 = !DILocalVariable(name: "cddm", scope: !10338, file: !1, line: 1779, type: !201)
!10348 = !DILocation(line: 1779, column: 17, scope: !10338)
!10349 = !DILocation(line: 1779, column: 41, scope: !10338)
!10350 = !DILocation(line: 1779, column: 24, scope: !10338)
!10351 = !DILocalVariable(name: "mvert", scope: !10338, file: !1, line: 1780, type: !1780)
!10352 = !DILocation(line: 1780, column: 9, scope: !10338)
!10353 = !DILocation(line: 1780, column: 17, scope: !10338)
!10354 = !DILocation(line: 1780, column: 23, scope: !10338)
!10355 = !DILocalVariable(name: "mp", scope: !10338, file: !1, line: 1781, type: !1792)
!10356 = !DILocation(line: 1781, column: 9, scope: !10338)
!10357 = !DILocalVariable(name: "ml", scope: !10338, file: !1, line: 1782, type: !1789)
!10358 = !DILocation(line: 1782, column: 9, scope: !10338)
!10359 = !DILocalVariable(name: "i", scope: !10338, file: !1, line: 1783, type: !219)
!10360 = !DILocation(line: 1783, column: 6, scope: !10338)
!10361 = !DILocalVariable(name: "orig", scope: !10338, file: !1, line: 1783, type: !219)
!10362 = !DILocation(line: 1783, column: 9, scope: !10338)
!10363 = !DILocalVariable(name: "index", scope: !10338, file: !1, line: 1783, type: !289)
!10364 = !DILocation(line: 1783, column: 16, scope: !10338)
!10365 = !DILocation(line: 1785, column: 32, scope: !10338)
!10366 = !DILocation(line: 1785, column: 36, scope: !10338)
!10367 = !DILocation(line: 1785, column: 10, scope: !10338)
!10368 = !DILocation(line: 1785, column: 8, scope: !10338)
!10369 = !DILocation(line: 1786, column: 7, scope: !10338)
!10370 = !DILocation(line: 1786, column: 13, scope: !10338)
!10371 = !DILocation(line: 1786, column: 5, scope: !10338)
!10372 = !DILocation(line: 1787, column: 9, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10338, file: !1, line: 1787, column: 2)
!10374 = !DILocation(line: 1787, column: 7, scope: !10373)
!10375 = !DILocation(line: 1787, column: 14, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10373, file: !1, line: 1787, column: 2)
!10377 = !DILocation(line: 1787, column: 18, scope: !10376)
!10378 = !DILocation(line: 1787, column: 22, scope: !10376)
!10379 = !DILocation(line: 1787, column: 16, scope: !10376)
!10380 = !DILocation(line: 1787, column: 2, scope: !10373)
!10381 = !DILocalVariable(name: "cent", scope: !10382, file: !1, line: 1788, type: !422)
!10382 = distinct !DILexicalBlock(scope: !10376, file: !1, line: 1787, column: 46)
!10383 = !DILocation(line: 1788, column: 9, scope: !10382)
!10384 = !DILocalVariable(name: "no", scope: !10382, file: !1, line: 1789, type: !601)
!10385 = !DILocation(line: 1789, column: 10, scope: !10382)
!10386 = !DILocalVariable(name: "_no", scope: !10382, file: !1, line: 1789, type: !422)
!10387 = !DILocation(line: 1789, column: 14, scope: !10382)
!10388 = !DILocation(line: 1791, column: 7, scope: !10389)
!10389 = distinct !DILexicalBlock(scope: !10382, file: !1, line: 1791, column: 7)
!10390 = !DILocation(line: 1791, column: 7, scope: !10382)
!10391 = !DILocation(line: 1792, column: 17, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !10389, file: !1, line: 1791, column: 14)
!10393 = !DILocation(line: 1792, column: 11, scope: !10392)
!10394 = !DILocation(line: 1792, column: 9, scope: !10392)
!10395 = !DILocation(line: 1793, column: 8, scope: !10396)
!10396 = distinct !DILexicalBlock(scope: !10392, file: !1, line: 1793, column: 8)
!10397 = !DILocation(line: 1793, column: 13, scope: !10396)
!10398 = !DILocation(line: 1793, column: 8, scope: !10392)
!10399 = !DILocation(line: 1793, column: 32, scope: !10396)
!10400 = !DILocation(line: 1794, column: 3, scope: !10392)
!10401 = !DILocation(line: 1796, column: 11, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10389, file: !1, line: 1795, column: 8)
!10403 = !DILocation(line: 1796, column: 9, scope: !10402)
!10404 = !DILocation(line: 1799, column: 9, scope: !10382)
!10405 = !DILocation(line: 1799, column: 15, scope: !10382)
!10406 = !DILocation(line: 1799, column: 21, scope: !10382)
!10407 = !DILocation(line: 1799, column: 25, scope: !10382)
!10408 = !DILocation(line: 1799, column: 6, scope: !10382)
!10409 = !DILocation(line: 1800, column: 29, scope: !10382)
!10410 = !DILocation(line: 1800, column: 33, scope: !10382)
!10411 = !DILocation(line: 1800, column: 37, scope: !10382)
!10412 = !DILocation(line: 1800, column: 44, scope: !10382)
!10413 = !DILocation(line: 1800, column: 3, scope: !10382)
!10414 = !DILocation(line: 1802, column: 7, scope: !10415)
!10415 = distinct !DILexicalBlock(scope: !10382, file: !1, line: 1802, column: 7)
!10416 = !DILocation(line: 1802, column: 12, scope: !10415)
!10417 = !DILocation(line: 1802, column: 7, scope: !10382)
!10418 = !DILocation(line: 1803, column: 30, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10415, file: !1, line: 1802, column: 37)
!10420 = !DILocation(line: 1803, column: 34, scope: !10419)
!10421 = !DILocation(line: 1803, column: 38, scope: !10419)
!10422 = !DILocation(line: 1803, column: 51, scope: !10419)
!10423 = !DILocation(line: 1803, column: 49, scope: !10419)
!10424 = !DILocation(line: 1803, column: 4, scope: !10419)
!10425 = !DILocation(line: 1804, column: 3, scope: !10419)
!10426 = !DILocation(line: 1806, column: 7, scope: !10427)
!10427 = distinct !DILexicalBlock(scope: !10415, file: !1, line: 1805, column: 8)
!10428 = !DILocation(line: 1809, column: 3, scope: !10382)
!10429 = !DILocation(line: 1809, column: 8, scope: !10382)
!10430 = !DILocation(line: 1809, column: 18, scope: !10382)
!10431 = !DILocation(line: 1809, column: 24, scope: !10382)
!10432 = !DILocation(line: 1809, column: 30, scope: !10382)
!10433 = !DILocation(line: 1810, column: 2, scope: !10382)
!10434 = !DILocation(line: 1787, column: 36, scope: !10376)
!10435 = !DILocation(line: 1787, column: 42, scope: !10376)
!10436 = !DILocation(line: 1787, column: 2, scope: !10376)
!10437 = distinct !{!10437, !10380, !10438}
!10438 = !DILocation(line: 1810, column: 2, scope: !10373)
!10439 = !DILocation(line: 1812, column: 1, scope: !10338)
!10440 = distinct !DISubprogram(name: "cdDM_release", scope: !1, file: !1, line: 1841, type: !1475, scopeLine: 1842, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!10441 = !DILocalVariable(name: "dm", arg: 1, scope: !10440, file: !1, line: 1841, type: !1477)
!10442 = !DILocation(line: 1841, column: 39, scope: !10440)
!10443 = !DILocalVariable(name: "cddm", scope: !10440, file: !1, line: 1843, type: !201)
!10444 = !DILocation(line: 1843, column: 17, scope: !10440)
!10445 = !DILocation(line: 1843, column: 41, scope: !10440)
!10446 = !DILocation(line: 1843, column: 24, scope: !10440)
!10447 = !DILocation(line: 1845, column: 17, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !10440, file: !1, line: 1845, column: 6)
!10449 = !DILocation(line: 1845, column: 6, scope: !10448)
!10450 = !DILocation(line: 1845, column: 6, scope: !10440)
!10451 = !DILocation(line: 1846, column: 22, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10448, file: !1, line: 1845, column: 22)
!10453 = !DILocation(line: 1846, column: 3, scope: !10452)
!10454 = !DILocation(line: 1847, column: 3, scope: !10452)
!10455 = !DILocation(line: 1847, column: 13, scope: !10452)
!10456 = !DILocation(line: 1848, column: 2, scope: !10452)
!10457 = !DILocation(line: 1849, column: 1, scope: !10440)
!10458 = distinct !DISubprogram(name: "zero_v3", scope: !3595, file: !3595, line: 43, type: !10459, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!10459 = !DISubroutineType(types: !10460)
!10460 = !{null, !601}
!10461 = !DILocalVariable(name: "r", arg: 1, scope: !10458, file: !3595, line: 43, type: !601)
!10462 = !DILocation(line: 43, column: 28, scope: !10458)
!10463 = !DILocation(line: 45, column: 2, scope: !10458)
!10464 = !DILocation(line: 45, column: 7, scope: !10458)
!10465 = !DILocation(line: 46, column: 2, scope: !10458)
!10466 = !DILocation(line: 46, column: 7, scope: !10458)
!10467 = !DILocation(line: 47, column: 2, scope: !10458)
!10468 = !DILocation(line: 47, column: 7, scope: !10458)
!10469 = !DILocation(line: 48, column: 1, scope: !10458)
!10470 = distinct !DISubprogram(name: "normal_short_to_float_v3", scope: !3595, file: !3595, line: 835, type: !10471, scopeLine: 836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!10471 = !DISubroutineType(types: !10472)
!10472 = !{null, !601, !1650}
!10473 = !DILocalVariable(name: "out", arg: 1, scope: !10470, file: !3595, line: 835, type: !601)
!10474 = !DILocation(line: 835, column: 45, scope: !10470)
!10475 = !DILocalVariable(name: "in", arg: 2, scope: !10470, file: !3595, line: 835, type: !1650)
!10476 = !DILocation(line: 835, column: 65, scope: !10470)
!10477 = !DILocation(line: 837, column: 11, scope: !10470)
!10478 = !DILocation(line: 837, column: 17, scope: !10470)
!10479 = !DILocation(line: 837, column: 2, scope: !10470)
!10480 = !DILocation(line: 837, column: 9, scope: !10470)
!10481 = !DILocation(line: 838, column: 11, scope: !10470)
!10482 = !DILocation(line: 838, column: 17, scope: !10470)
!10483 = !DILocation(line: 838, column: 2, scope: !10470)
!10484 = !DILocation(line: 838, column: 9, scope: !10470)
!10485 = !DILocation(line: 839, column: 11, scope: !10470)
!10486 = !DILocation(line: 839, column: 17, scope: !10470)
!10487 = !DILocation(line: 839, column: 2, scope: !10470)
!10488 = !DILocation(line: 839, column: 9, scope: !10470)
!10489 = !DILocation(line: 840, column: 1, scope: !10470)
!10490 = distinct !DISubprogram(name: "can_pbvh_draw", scope: !1, file: !1, line: 250, type: !10491, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!10491 = !DISubroutineType(types: !10492)
!10492 = !{!309, !2526, !1477}
!10493 = !DILocalVariable(name: "ob", arg: 1, scope: !10490, file: !1, line: 250, type: !2526)
!10494 = !DILocation(line: 250, column: 35, scope: !10490)
!10495 = !DILocalVariable(name: "dm", arg: 2, scope: !10490, file: !1, line: 250, type: !1477)
!10496 = !DILocation(line: 250, column: 52, scope: !10490)
!10497 = !DILocalVariable(name: "cddm", scope: !10490, file: !1, line: 252, type: !201)
!10498 = !DILocation(line: 252, column: 17, scope: !10490)
!10499 = !DILocation(line: 252, column: 42, scope: !10490)
!10500 = !DILocation(line: 252, column: 24, scope: !10490)
!10501 = !DILocalVariable(name: "me", scope: !10490, file: !1, line: 253, type: !2254)
!10502 = !DILocation(line: 253, column: 8, scope: !10490)
!10503 = !DILocation(line: 253, column: 13, scope: !10490)
!10504 = !DILocation(line: 253, column: 17, scope: !10490)
!10505 = !DILocalVariable(name: "deformed", scope: !10490, file: !1, line: 254, type: !309)
!10506 = !DILocation(line: 254, column: 7, scope: !10490)
!10507 = !DILocation(line: 254, column: 47, scope: !10490)
!10508 = !DILocation(line: 254, column: 18, scope: !10490)
!10509 = !DILocation(line: 256, column: 6, scope: !10510)
!10510 = distinct !DILexicalBlock(scope: !10490, file: !1, line: 256, column: 6)
!10511 = !DILocation(line: 256, column: 6, scope: !10490)
!10512 = !DILocation(line: 257, column: 3, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10510, file: !1, line: 256, column: 16)
!10514 = !DILocation(line: 260, column: 9, scope: !10490)
!10515 = !DILocation(line: 260, column: 15, scope: !10490)
!10516 = !DILocation(line: 260, column: 24, scope: !10490)
!10517 = !DILocation(line: 260, column: 28, scope: !10490)
!10518 = !DILocation(line: 260, column: 21, scope: !10490)
!10519 = !DILocation(line: 260, column: 34, scope: !10490)
!10520 = !DILocation(line: 260, column: 37, scope: !10490)
!10521 = !DILocation(line: 260, column: 41, scope: !10490)
!10522 = !DILocation(line: 260, column: 49, scope: !10490)
!10523 = !DILocation(line: 260, column: 2, scope: !10490)
!10524 = !DILocation(line: 261, column: 1, scope: !10490)
!10525 = distinct !DISubprogram(name: "check_sculpt_object_deformed", scope: !1, file: !1, line: 226, type: !10526, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!10526 = !DISubroutineType(types: !10527)
!10527 = !{!309, !2526, !309}
!10528 = !DILocalVariable(name: "object", arg: 1, scope: !10525, file: !1, line: 226, type: !2526)
!10529 = !DILocation(line: 226, column: 50, scope: !10525)
!10530 = !DILocalVariable(name: "for_construction", arg: 2, scope: !10525, file: !1, line: 226, type: !309)
!10531 = !DILocation(line: 226, column: 63, scope: !10525)
!10532 = !DILocalVariable(name: "deformed", scope: !10525, file: !1, line: 228, type: !309)
!10533 = !DILocation(line: 228, column: 7, scope: !10525)
!10534 = !DILocation(line: 234, column: 14, scope: !10525)
!10535 = !DILocation(line: 234, column: 22, scope: !10525)
!10536 = !DILocation(line: 234, column: 30, scope: !10525)
!10537 = !DILocation(line: 234, column: 11, scope: !10525)
!10538 = !DILocation(line: 236, column: 6, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10525, file: !1, line: 236, column: 6)
!10540 = !DILocation(line: 236, column: 6, scope: !10525)
!10541 = !DILocation(line: 237, column: 15, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !10539, file: !1, line: 236, column: 24)
!10543 = !DILocation(line: 237, column: 23, scope: !10542)
!10544 = !DILocation(line: 237, column: 31, scope: !10542)
!10545 = !DILocation(line: 237, column: 34, scope: !10542)
!10546 = !DILocation(line: 237, column: 12, scope: !10542)
!10547 = !DILocation(line: 238, column: 2, scope: !10542)
!10548 = !DILocation(line: 244, column: 15, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10539, file: !1, line: 239, column: 7)
!10550 = !DILocation(line: 244, column: 23, scope: !10549)
!10551 = !DILocation(line: 244, column: 31, scope: !10549)
!10552 = !DILocation(line: 244, column: 34, scope: !10549)
!10553 = !DILocation(line: 244, column: 38, scope: !10549)
!10554 = !DILocation(line: 244, column: 46, scope: !10549)
!10555 = !DILocation(line: 244, column: 56, scope: !10549)
!10556 = !DILocation(line: 244, column: 73, scope: !10549)
!10557 = !DILocation(line: 0, scope: !10549)
!10558 = !DILocation(line: 244, column: 12, scope: !10549)
!10559 = !DILocation(line: 247, column: 9, scope: !10525)
!10560 = !DILocation(line: 247, column: 2, scope: !10525)
!10561 = distinct !DISubprogram(name: "cdDM_drawFacesTex_common", scope: !1, file: !1, line: 668, type: !10562, scopeLine: 673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!10562 = !DISubroutineType(types: !10563)
!10563 = !{null, !1477, !1713, !1744, !1731, !233, !1735}
!10564 = !DILocalVariable(name: "dm", arg: 1, scope: !10561, file: !1, line: 668, type: !1477)
!10565 = !DILocation(line: 668, column: 51, scope: !10561)
!10566 = !DILocalVariable(name: "drawParams", arg: 2, scope: !10561, file: !1, line: 669, type: !1713)
!10567 = !DILocation(line: 669, column: 58, scope: !10561)
!10568 = !DILocalVariable(name: "drawParamsMapped", arg: 3, scope: !10561, file: !1, line: 670, type: !1744)
!10569 = !DILocation(line: 670, column: 55, scope: !10561)
!10570 = !DILocalVariable(name: "compareDrawOptions", arg: 4, scope: !10561, file: !1, line: 671, type: !1731)
!10571 = !DILocation(line: 671, column: 59, scope: !10561)
!10572 = !DILocalVariable(name: "userData", arg: 5, scope: !10561, file: !1, line: 672, type: !233)
!10573 = !DILocation(line: 672, column: 44, scope: !10561)
!10574 = !DILocalVariable(name: "uvflag", arg: 6, scope: !10561, file: !1, line: 672, type: !1735)
!10575 = !DILocation(line: 672, column: 65, scope: !10561)
!10576 = !DILocalVariable(name: "cddm", scope: !10561, file: !1, line: 674, type: !201)
!10577 = !DILocation(line: 674, column: 17, scope: !10561)
!10578 = !DILocation(line: 674, column: 42, scope: !10561)
!10579 = !DILocation(line: 674, column: 24, scope: !10561)
!10580 = !DILocalVariable(name: "mv", scope: !10561, file: !1, line: 675, type: !1780)
!10581 = !DILocation(line: 675, column: 9, scope: !10561)
!10582 = !DILocation(line: 675, column: 14, scope: !10561)
!10583 = !DILocation(line: 675, column: 20, scope: !10561)
!10584 = !DILocalVariable(name: "mf", scope: !10561, file: !1, line: 676, type: !8475)
!10585 = !DILocation(line: 676, column: 15, scope: !10561)
!10586 = !DILocation(line: 676, column: 47, scope: !10561)
!10587 = !DILocation(line: 676, column: 20, scope: !10561)
!10588 = !DILocalVariable(name: "nors", scope: !10561, file: !1, line: 677, type: !1649)
!10589 = !DILocation(line: 677, column: 15, scope: !10561)
!10590 = !DILocation(line: 677, column: 22, scope: !10561)
!10591 = !DILocation(line: 677, column: 26, scope: !10561)
!10592 = !DILocation(line: 677, column: 47, scope: !10561)
!10593 = !DILocalVariable(name: "lnors", scope: !10561, file: !1, line: 678, type: !7352)
!10594 = !DILocation(line: 678, column: 16, scope: !10561)
!10595 = !DILocation(line: 678, column: 31, scope: !10561)
!10596 = !DILocation(line: 678, column: 35, scope: !10561)
!10597 = !DILocation(line: 678, column: 56, scope: !10561)
!10598 = !DILocalVariable(name: "tf", scope: !10561, file: !1, line: 679, type: !6719)
!10599 = !DILocation(line: 679, column: 10, scope: !10561)
!10600 = !DILocation(line: 679, column: 42, scope: !10561)
!10601 = !DILocation(line: 679, column: 15, scope: !10561)
!10602 = !DILocalVariable(name: "mcol", scope: !10561, file: !1, line: 680, type: !7767)
!10603 = !DILocation(line: 680, column: 8, scope: !10561)
!10604 = !DILocalVariable(name: "i", scope: !10561, file: !1, line: 681, type: !219)
!10605 = !DILocation(line: 681, column: 6, scope: !10561)
!10606 = !DILocalVariable(name: "orig", scope: !10561, file: !1, line: 681, type: !219)
!10607 = !DILocation(line: 681, column: 9, scope: !10561)
!10608 = !DILocalVariable(name: "colType", scope: !10561, file: !1, line: 682, type: !219)
!10609 = !DILocation(line: 682, column: 6, scope: !10561)
!10610 = !DILocalVariable(name: "startFace", scope: !10561, file: !1, line: 682, type: !219)
!10611 = !DILocation(line: 682, column: 15, scope: !10561)
!10612 = !DILocalVariable(name: "use_tface", scope: !10561, file: !1, line: 683, type: !309)
!10613 = !DILocation(line: 683, column: 7, scope: !10561)
!10614 = !DILocation(line: 683, column: 20, scope: !10561)
!10615 = !DILocation(line: 683, column: 27, scope: !10561)
!10616 = !DILocation(line: 683, column: 52, scope: !10561)
!10617 = !DILocation(line: 683, column: 19, scope: !10561)
!10618 = !DILocalVariable(name: "index_mf_to_mpoly", scope: !10561, file: !1, line: 686, type: !3982)
!10619 = !DILocation(line: 686, column: 13, scope: !10561)
!10620 = !DILocation(line: 686, column: 33, scope: !10561)
!10621 = !DILocation(line: 686, column: 37, scope: !10561)
!10622 = !DILocation(line: 686, column: 58, scope: !10561)
!10623 = !DILocalVariable(name: "index_mp_to_orig", scope: !10561, file: !1, line: 687, type: !3982)
!10624 = !DILocation(line: 687, column: 13, scope: !10561)
!10625 = !DILocation(line: 687, column: 33, scope: !10561)
!10626 = !DILocation(line: 687, column: 37, scope: !10561)
!10627 = !DILocation(line: 687, column: 54, scope: !10561)
!10628 = !DILocation(line: 688, column: 6, scope: !10629)
!10629 = distinct !DILexicalBlock(scope: !10561, file: !1, line: 688, column: 6)
!10630 = !DILocation(line: 688, column: 24, scope: !10629)
!10631 = !DILocation(line: 688, column: 6, scope: !10561)
!10632 = !DILocation(line: 689, column: 20, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10629, file: !1, line: 688, column: 33)
!10634 = !DILocation(line: 690, column: 2, scope: !10633)
!10635 = !DILocation(line: 699, column: 6, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10561, file: !1, line: 699, column: 6)
!10637 = !DILocation(line: 699, column: 12, scope: !10636)
!10638 = !DILocation(line: 699, column: 17, scope: !10636)
!10639 = !DILocation(line: 699, column: 20, scope: !10636)
!10640 = !DILocation(line: 699, column: 26, scope: !10636)
!10641 = !DILocation(line: 699, column: 36, scope: !10636)
!10642 = !DILocation(line: 699, column: 53, scope: !10636)
!10643 = !DILocation(line: 699, column: 59, scope: !10636)
!10644 = !DILocation(line: 699, column: 39, scope: !10636)
!10645 = !DILocation(line: 699, column: 65, scope: !10636)
!10646 = !DILocation(line: 699, column: 6, scope: !10561)
!10647 = !DILocation(line: 700, column: 7, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10649, file: !1, line: 700, column: 7)
!10649 = distinct !DILexicalBlock(scope: !10636, file: !1, line: 699, column: 80)
!10650 = !DILocation(line: 700, column: 11, scope: !10648)
!10651 = !DILocation(line: 700, column: 7, scope: !10649)
!10652 = !DILocation(line: 701, column: 4, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10648, file: !1, line: 700, column: 28)
!10654 = !DILocation(line: 702, column: 18, scope: !10653)
!10655 = !DILocation(line: 702, column: 24, scope: !10653)
!10656 = !DILocation(line: 702, column: 4, scope: !10653)
!10657 = !DILocation(line: 703, column: 3, scope: !10653)
!10658 = !DILocation(line: 705, column: 3, scope: !10649)
!10659 = !DILocation(line: 708, column: 10, scope: !10561)
!10660 = !DILocation(line: 709, column: 9, scope: !10561)
!10661 = !DILocation(line: 709, column: 13, scope: !10561)
!10662 = !DILocation(line: 709, column: 34, scope: !10561)
!10663 = !DILocation(line: 709, column: 38, scope: !10561)
!10664 = !DILocation(line: 709, column: 7, scope: !10561)
!10665 = !DILocation(line: 710, column: 7, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10561, file: !1, line: 710, column: 6)
!10667 = !DILocation(line: 710, column: 6, scope: !10561)
!10668 = !DILocation(line: 711, column: 11, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10666, file: !1, line: 710, column: 13)
!10670 = !DILocation(line: 712, column: 10, scope: !10669)
!10671 = !DILocation(line: 712, column: 14, scope: !10669)
!10672 = !DILocation(line: 712, column: 35, scope: !10669)
!10673 = !DILocation(line: 712, column: 39, scope: !10669)
!10674 = !DILocation(line: 712, column: 8, scope: !10669)
!10675 = !DILocation(line: 713, column: 2, scope: !10669)
!10676 = !DILocation(line: 714, column: 7, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10561, file: !1, line: 714, column: 6)
!10678 = !DILocation(line: 714, column: 6, scope: !10561)
!10679 = !DILocation(line: 715, column: 11, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10677, file: !1, line: 714, column: 13)
!10681 = !DILocation(line: 716, column: 10, scope: !10680)
!10682 = !DILocation(line: 716, column: 14, scope: !10680)
!10683 = !DILocation(line: 716, column: 35, scope: !10680)
!10684 = !DILocation(line: 716, column: 39, scope: !10680)
!10685 = !DILocation(line: 716, column: 8, scope: !10680)
!10686 = !DILocation(line: 717, column: 2, scope: !10680)
!10687 = !DILocation(line: 719, column: 32, scope: !10561)
!10688 = !DILocation(line: 719, column: 2, scope: !10561)
!10689 = !DILocation(line: 721, column: 24, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10561, file: !1, line: 721, column: 6)
!10691 = !DILocation(line: 721, column: 6, scope: !10690)
!10692 = !DILocation(line: 721, column: 6, scope: !10561)
!10693 = !DILocalVariable(name: "mat_nr_cache", scope: !10694, file: !1, line: 722, type: !219)
!10694 = distinct !DILexicalBlock(scope: !10690, file: !1, line: 721, column: 29)
!10695 = !DILocation(line: 722, column: 7, scope: !10694)
!10696 = !DILocalVariable(name: "tf_base", scope: !10694, file: !1, line: 723, type: !6719)
!10697 = !DILocation(line: 723, column: 11, scope: !10694)
!10698 = !DILocation(line: 723, column: 48, scope: !10694)
!10699 = !DILocation(line: 723, column: 21, scope: !10694)
!10700 = !DILocalVariable(name: "tf_stencil_base", scope: !10694, file: !1, line: 724, type: !6719)
!10701 = !DILocation(line: 724, column: 11, scope: !10694)
!10702 = !DILocalVariable(name: "tf_stencil", scope: !10694, file: !1, line: 725, type: !6719)
!10703 = !DILocation(line: 725, column: 11, scope: !10694)
!10704 = !DILocation(line: 727, column: 7, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10694, file: !1, line: 727, column: 7)
!10706 = !DILocation(line: 727, column: 14, scope: !10705)
!10707 = !DILocation(line: 727, column: 7, scope: !10694)
!10708 = !DILocalVariable(name: "stencil", scope: !10709, file: !1, line: 728, type: !219)
!10709 = distinct !DILexicalBlock(scope: !10705, file: !1, line: 727, column: 41)
!10710 = !DILocation(line: 728, column: 8, scope: !10709)
!10711 = !DILocation(line: 728, column: 48, scope: !10709)
!10712 = !DILocation(line: 728, column: 52, scope: !10709)
!10713 = !DILocation(line: 728, column: 18, scope: !10709)
!10714 = !DILocation(line: 729, column: 46, scope: !10709)
!10715 = !DILocation(line: 729, column: 50, scope: !10709)
!10716 = !DILocation(line: 729, column: 71, scope: !10709)
!10717 = !DILocation(line: 729, column: 22, scope: !10709)
!10718 = !DILocation(line: 729, column: 20, scope: !10709)
!10719 = !DILocation(line: 730, column: 3, scope: !10709)
!10720 = !DILocation(line: 733, column: 10, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10694, file: !1, line: 733, column: 3)
!10722 = !DILocation(line: 733, column: 8, scope: !10721)
!10723 = !DILocation(line: 733, column: 15, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10721, file: !1, line: 733, column: 3)
!10725 = !DILocation(line: 733, column: 19, scope: !10724)
!10726 = !DILocation(line: 733, column: 23, scope: !10724)
!10727 = !DILocation(line: 733, column: 17, scope: !10724)
!10728 = !DILocation(line: 733, column: 3, scope: !10721)
!10729 = !DILocalVariable(name: "mvert", scope: !10730, file: !1, line: 734, type: !1780)
!10730 = distinct !DILexicalBlock(scope: !10724, file: !1, line: 733, column: 51)
!10731 = !DILocation(line: 734, column: 11, scope: !10730)
!10732 = !DILocalVariable(name: "draw_option", scope: !10730, file: !1, line: 735, type: !1717)
!10733 = !DILocation(line: 735, column: 17, scope: !10730)
!10734 = !DILocalVariable(name: "cp", scope: !10730, file: !1, line: 736, type: !1916)
!10735 = !DILocation(line: 736, column: 19, scope: !10730)
!10736 = !DILocation(line: 738, column: 8, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10730, file: !1, line: 738, column: 8)
!10738 = !DILocation(line: 738, column: 15, scope: !10737)
!10739 = !DILocation(line: 738, column: 8, scope: !10730)
!10740 = !DILocation(line: 739, column: 9, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10742, file: !1, line: 739, column: 9)
!10742 = distinct !DILexicalBlock(scope: !10737, file: !1, line: 738, column: 42)
!10743 = !DILocation(line: 739, column: 13, scope: !10741)
!10744 = !DILocation(line: 739, column: 23, scope: !10741)
!10745 = !DILocation(line: 739, column: 20, scope: !10741)
!10746 = !DILocation(line: 739, column: 9, scope: !10742)
!10747 = !DILocation(line: 740, column: 44, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10741, file: !1, line: 739, column: 37)
!10749 = !DILocation(line: 740, column: 48, scope: !10748)
!10750 = !DILocation(line: 740, column: 52, scope: !10748)
!10751 = !DILocation(line: 740, column: 16, scope: !10748)
!10752 = !DILocation(line: 740, column: 14, scope: !10748)
!10753 = !DILocation(line: 742, column: 21, scope: !10748)
!10754 = !DILocation(line: 742, column: 25, scope: !10748)
!10755 = !DILocation(line: 742, column: 19, scope: !10748)
!10756 = !DILocation(line: 743, column: 5, scope: !10748)
!10757 = !DILocation(line: 744, column: 4, scope: !10742)
!10758 = !DILocation(line: 746, column: 9, scope: !10730)
!10759 = !DILocation(line: 746, column: 19, scope: !10730)
!10760 = !DILocation(line: 746, column: 29, scope: !10730)
!10761 = !DILocation(line: 746, column: 27, scope: !10730)
!10762 = !DILocation(line: 746, column: 7, scope: !10730)
!10763 = !DILocation(line: 747, column: 17, scope: !10730)
!10764 = !DILocation(line: 747, column: 35, scope: !10730)
!10765 = !DILocation(line: 747, column: 53, scope: !10730)
!10766 = !DILocation(line: 747, column: 51, scope: !10730)
!10767 = !DILocation(line: 747, column: 15, scope: !10730)
!10768 = !DILocation(line: 749, column: 8, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10730, file: !1, line: 749, column: 8)
!10770 = !DILocation(line: 749, column: 8, scope: !10730)
!10771 = !DILocation(line: 750, column: 19, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10769, file: !1, line: 749, column: 20)
!10773 = !DILocation(line: 750, column: 30, scope: !10772)
!10774 = !DILocation(line: 750, column: 42, scope: !10772)
!10775 = !DILocation(line: 750, column: 54, scope: !10772)
!10776 = !DILocation(line: 750, column: 59, scope: !10772)
!10777 = !DILocation(line: 750, column: 53, scope: !10772)
!10778 = !DILocation(line: 750, column: 69, scope: !10772)
!10779 = !DILocation(line: 750, column: 73, scope: !10772)
!10780 = !DILocation(line: 750, column: 17, scope: !10772)
!10781 = !DILocation(line: 751, column: 4, scope: !10772)
!10782 = !DILocation(line: 753, column: 9, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10784, file: !1, line: 753, column: 9)
!10784 = distinct !DILexicalBlock(scope: !10769, file: !1, line: 752, column: 9)
!10785 = !DILocation(line: 753, column: 9, scope: !10784)
!10786 = !DILocation(line: 754, column: 38, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10783, file: !1, line: 753, column: 28)
!10788 = !DILocation(line: 754, column: 57, scope: !10787)
!10789 = !DILocation(line: 754, column: 75, scope: !10787)
!10790 = !DILocation(line: 754, column: 13, scope: !10787)
!10791 = !DILocation(line: 754, column: 11, scope: !10787)
!10792 = !DILocation(line: 755, column: 10, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10787, file: !1, line: 755, column: 10)
!10794 = !DILocation(line: 755, column: 15, scope: !10793)
!10795 = !DILocation(line: 755, column: 10, scope: !10787)
!10796 = !DILocation(line: 759, column: 19, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10793, file: !1, line: 755, column: 34)
!10798 = !DILocation(line: 760, column: 6, scope: !10797)
!10799 = !DILocation(line: 761, column: 15, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10793, file: !1, line: 761, column: 15)
!10801 = !DILocation(line: 761, column: 15, scope: !10793)
!10802 = !DILocation(line: 762, column: 21, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10800, file: !1, line: 761, column: 33)
!10804 = !DILocation(line: 762, column: 38, scope: !10803)
!10805 = !DILocation(line: 762, column: 48, scope: !10803)
!10806 = !DILocation(line: 762, column: 19, scope: !10803)
!10807 = !DILocation(line: 763, column: 6, scope: !10803)
!10808 = !DILocation(line: 765, column: 11, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10810, file: !1, line: 765, column: 11)
!10810 = distinct !DILexicalBlock(scope: !10800, file: !1, line: 764, column: 11)
!10811 = !DILocation(line: 765, column: 11, scope: !10810)
!10812 = !DILocation(line: 766, column: 13, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10809, file: !1, line: 765, column: 17)
!10814 = !DILocation(line: 767, column: 7, scope: !10813)
!10815 = !DILocation(line: 768, column: 7, scope: !10810)
!10816 = !DILocation(line: 770, column: 5, scope: !10787)
!10817 = !DILocation(line: 771, column: 14, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10783, file: !1, line: 771, column: 14)
!10819 = !DILocation(line: 771, column: 14, scope: !10783)
!10820 = !DILocation(line: 772, column: 20, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10818, file: !1, line: 771, column: 32)
!10822 = !DILocation(line: 772, column: 37, scope: !10821)
!10823 = !DILocation(line: 772, column: 47, scope: !10821)
!10824 = !DILocation(line: 772, column: 18, scope: !10821)
!10825 = !DILocation(line: 773, column: 5, scope: !10821)
!10826 = !DILocation(line: 775, column: 10, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10828, file: !1, line: 775, column: 10)
!10828 = distinct !DILexicalBlock(scope: !10818, file: !1, line: 774, column: 10)
!10829 = !DILocation(line: 775, column: 10, scope: !10828)
!10830 = !DILocation(line: 776, column: 12, scope: !10831)
!10831 = distinct !DILexicalBlock(scope: !10827, file: !1, line: 775, column: 16)
!10832 = !DILocation(line: 777, column: 6, scope: !10831)
!10833 = !DILocation(line: 778, column: 6, scope: !10828)
!10834 = !DILocation(line: 782, column: 8, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10730, file: !1, line: 782, column: 8)
!10836 = !DILocation(line: 782, column: 20, scope: !10835)
!10837 = !DILocation(line: 782, column: 8, scope: !10730)
!10838 = !DILocation(line: 783, column: 9, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10840, file: !1, line: 783, column: 9)
!10840 = distinct !DILexicalBlock(scope: !10835, file: !1, line: 782, column: 44)
!10841 = !DILocation(line: 783, column: 21, scope: !10839)
!10842 = !DILocation(line: 783, column: 47, scope: !10839)
!10843 = !DILocation(line: 783, column: 50, scope: !10839)
!10844 = !DILocation(line: 783, column: 9, scope: !10840)
!10845 = !DILocation(line: 784, column: 30, scope: !10839)
!10846 = !DILocation(line: 784, column: 35, scope: !10839)
!10847 = !DILocation(line: 784, column: 37, scope: !10839)
!10848 = !DILocation(line: 784, column: 11, scope: !10839)
!10849 = !DILocation(line: 784, column: 9, scope: !10839)
!10850 = !DILocation(line: 784, column: 6, scope: !10839)
!10851 = !DILocation(line: 786, column: 11, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10840, file: !1, line: 786, column: 9)
!10853 = !DILocation(line: 786, column: 17, scope: !10852)
!10854 = !DILocation(line: 786, column: 21, scope: !10852)
!10855 = !DILocation(line: 786, column: 25, scope: !10852)
!10856 = !DILocation(line: 786, column: 30, scope: !10852)
!10857 = !DILocation(line: 786, column: 9, scope: !10840)
!10858 = !DILocation(line: 787, column: 10, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10860, file: !1, line: 787, column: 10)
!10860 = distinct !DILexicalBlock(scope: !10852, file: !1, line: 786, column: 45)
!10861 = !DILocation(line: 787, column: 10, scope: !10860)
!10862 = !DILocation(line: 788, column: 19, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10859, file: !1, line: 787, column: 16)
!10864 = !DILocation(line: 788, column: 7, scope: !10863)
!10865 = !DILocation(line: 789, column: 6, scope: !10863)
!10866 = !DILocalVariable(name: "nor", scope: !10867, file: !1, line: 791, type: !422)
!10867 = distinct !DILexicalBlock(scope: !10859, file: !1, line: 790, column: 11)
!10868 = !DILocation(line: 791, column: 13, scope: !10867)
!10869 = !DILocation(line: 792, column: 11, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10867, file: !1, line: 792, column: 11)
!10871 = !DILocation(line: 792, column: 15, scope: !10870)
!10872 = !DILocation(line: 792, column: 11, scope: !10867)
!10873 = !DILocation(line: 793, column: 23, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10870, file: !1, line: 792, column: 19)
!10875 = !DILocation(line: 793, column: 28, scope: !10874)
!10876 = !DILocation(line: 793, column: 31, scope: !10874)
!10877 = !DILocation(line: 793, column: 35, scope: !10874)
!10878 = !DILocation(line: 793, column: 39, scope: !10874)
!10879 = !DILocation(line: 793, column: 43, scope: !10874)
!10880 = !DILocation(line: 793, column: 46, scope: !10874)
!10881 = !DILocation(line: 793, column: 50, scope: !10874)
!10882 = !DILocation(line: 793, column: 54, scope: !10874)
!10883 = !DILocation(line: 793, column: 58, scope: !10874)
!10884 = !DILocation(line: 793, column: 61, scope: !10874)
!10885 = !DILocation(line: 793, column: 65, scope: !10874)
!10886 = !DILocation(line: 793, column: 69, scope: !10874)
!10887 = !DILocation(line: 793, column: 73, scope: !10874)
!10888 = !DILocation(line: 793, column: 76, scope: !10874)
!10889 = !DILocation(line: 793, column: 80, scope: !10874)
!10890 = !DILocation(line: 793, column: 84, scope: !10874)
!10891 = !DILocation(line: 793, column: 8, scope: !10874)
!10892 = !DILocation(line: 794, column: 7, scope: !10874)
!10893 = !DILocation(line: 796, column: 22, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10870, file: !1, line: 795, column: 12)
!10895 = !DILocation(line: 796, column: 27, scope: !10894)
!10896 = !DILocation(line: 796, column: 30, scope: !10894)
!10897 = !DILocation(line: 796, column: 34, scope: !10894)
!10898 = !DILocation(line: 796, column: 38, scope: !10894)
!10899 = !DILocation(line: 796, column: 42, scope: !10894)
!10900 = !DILocation(line: 796, column: 45, scope: !10894)
!10901 = !DILocation(line: 796, column: 49, scope: !10894)
!10902 = !DILocation(line: 796, column: 53, scope: !10894)
!10903 = !DILocation(line: 796, column: 57, scope: !10894)
!10904 = !DILocation(line: 796, column: 60, scope: !10894)
!10905 = !DILocation(line: 796, column: 64, scope: !10894)
!10906 = !DILocation(line: 796, column: 68, scope: !10894)
!10907 = !DILocation(line: 796, column: 8, scope: !10894)
!10908 = !DILocation(line: 798, column: 19, scope: !10867)
!10909 = !DILocation(line: 798, column: 7, scope: !10867)
!10910 = !DILocation(line: 800, column: 5, scope: !10860)
!10911 = !DILocation(line: 802, column: 13, scope: !10840)
!10912 = !DILocation(line: 802, column: 17, scope: !10840)
!10913 = !DILocation(line: 802, column: 5, scope: !10840)
!10914 = !DILocation(line: 803, column: 9, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10840, file: !1, line: 803, column: 9)
!10916 = !DILocation(line: 803, column: 9, scope: !10840)
!10917 = !DILocation(line: 803, column: 27, scope: !10915)
!10918 = !DILocation(line: 803, column: 31, scope: !10915)
!10919 = !DILocation(line: 803, column: 13, scope: !10915)
!10920 = !DILocation(line: 804, column: 9, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10840, file: !1, line: 804, column: 9)
!10922 = !DILocation(line: 804, column: 9, scope: !10840)
!10923 = !DILocation(line: 804, column: 21, scope: !10921)
!10924 = !DILocation(line: 804, column: 53, scope: !10921)
!10925 = !DILocation(line: 804, column: 57, scope: !10921)
!10926 = !DILocation(line: 805, column: 9, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10840, file: !1, line: 805, column: 9)
!10928 = !DILocation(line: 805, column: 9, scope: !10840)
!10929 = !DILocation(line: 805, column: 24, scope: !10927)
!10930 = !DILocation(line: 805, column: 31, scope: !10927)
!10931 = !DILocation(line: 805, column: 38, scope: !10927)
!10932 = !DILocation(line: 805, column: 13, scope: !10927)
!10933 = !DILocation(line: 806, column: 14, scope: !10840)
!10934 = !DILocation(line: 806, column: 17, scope: !10840)
!10935 = !DILocation(line: 806, column: 21, scope: !10840)
!10936 = !DILocation(line: 806, column: 11, scope: !10840)
!10937 = !DILocation(line: 807, column: 9, scope: !10938)
!10938 = distinct !DILexicalBlock(scope: !10840, file: !1, line: 807, column: 9)
!10939 = !DILocation(line: 807, column: 9, scope: !10840)
!10940 = !DILocation(line: 807, column: 45, scope: !10938)
!10941 = !DILocation(line: 807, column: 16, scope: !10938)
!10942 = !DILocation(line: 808, column: 14, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10938, file: !1, line: 808, column: 14)
!10944 = !DILocation(line: 808, column: 18, scope: !10943)
!10945 = !DILocation(line: 808, column: 23, scope: !10943)
!10946 = !DILocation(line: 808, column: 14, scope: !10938)
!10947 = !DILocation(line: 808, column: 48, scope: !10943)
!10948 = !DILocation(line: 808, column: 55, scope: !10943)
!10949 = !DILocation(line: 808, column: 36, scope: !10943)
!10950 = !DILocation(line: 809, column: 17, scope: !10840)
!10951 = !DILocation(line: 809, column: 24, scope: !10840)
!10952 = !DILocation(line: 809, column: 5, scope: !10840)
!10953 = !DILocation(line: 811, column: 9, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !10840, file: !1, line: 811, column: 9)
!10955 = !DILocation(line: 811, column: 9, scope: !10840)
!10956 = !DILocation(line: 811, column: 27, scope: !10954)
!10957 = !DILocation(line: 811, column: 31, scope: !10954)
!10958 = !DILocation(line: 811, column: 13, scope: !10954)
!10959 = !DILocation(line: 812, column: 9, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !10840, file: !1, line: 812, column: 9)
!10961 = !DILocation(line: 812, column: 9, scope: !10840)
!10962 = !DILocation(line: 812, column: 21, scope: !10960)
!10963 = !DILocation(line: 812, column: 53, scope: !10960)
!10964 = !DILocation(line: 812, column: 57, scope: !10960)
!10965 = !DILocation(line: 813, column: 9, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10840, file: !1, line: 813, column: 9)
!10967 = !DILocation(line: 813, column: 9, scope: !10840)
!10968 = !DILocation(line: 813, column: 24, scope: !10966)
!10969 = !DILocation(line: 813, column: 31, scope: !10966)
!10970 = !DILocation(line: 813, column: 38, scope: !10966)
!10971 = !DILocation(line: 813, column: 13, scope: !10966)
!10972 = !DILocation(line: 814, column: 14, scope: !10840)
!10973 = !DILocation(line: 814, column: 17, scope: !10840)
!10974 = !DILocation(line: 814, column: 21, scope: !10840)
!10975 = !DILocation(line: 814, column: 11, scope: !10840)
!10976 = !DILocation(line: 815, column: 9, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10840, file: !1, line: 815, column: 9)
!10978 = !DILocation(line: 815, column: 9, scope: !10840)
!10979 = !DILocation(line: 815, column: 45, scope: !10977)
!10980 = !DILocation(line: 815, column: 16, scope: !10977)
!10981 = !DILocation(line: 816, column: 14, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10977, file: !1, line: 816, column: 14)
!10983 = !DILocation(line: 816, column: 18, scope: !10982)
!10984 = !DILocation(line: 816, column: 23, scope: !10982)
!10985 = !DILocation(line: 816, column: 14, scope: !10977)
!10986 = !DILocation(line: 816, column: 48, scope: !10982)
!10987 = !DILocation(line: 816, column: 55, scope: !10982)
!10988 = !DILocation(line: 816, column: 36, scope: !10982)
!10989 = !DILocation(line: 817, column: 17, scope: !10840)
!10990 = !DILocation(line: 817, column: 24, scope: !10840)
!10991 = !DILocation(line: 817, column: 5, scope: !10840)
!10992 = !DILocation(line: 819, column: 9, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10840, file: !1, line: 819, column: 9)
!10994 = !DILocation(line: 819, column: 9, scope: !10840)
!10995 = !DILocation(line: 819, column: 27, scope: !10993)
!10996 = !DILocation(line: 819, column: 31, scope: !10993)
!10997 = !DILocation(line: 819, column: 13, scope: !10993)
!10998 = !DILocation(line: 820, column: 9, scope: !10999)
!10999 = distinct !DILexicalBlock(scope: !10840, file: !1, line: 820, column: 9)
!11000 = !DILocation(line: 820, column: 9, scope: !10840)
!11001 = !DILocation(line: 820, column: 21, scope: !10999)
!11002 = !DILocation(line: 820, column: 53, scope: !10999)
!11003 = !DILocation(line: 820, column: 57, scope: !10999)
!11004 = !DILocation(line: 821, column: 9, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !10840, file: !1, line: 821, column: 9)
!11006 = !DILocation(line: 821, column: 9, scope: !10840)
!11007 = !DILocation(line: 821, column: 24, scope: !11005)
!11008 = !DILocation(line: 821, column: 32, scope: !11005)
!11009 = !DILocation(line: 821, column: 40, scope: !11005)
!11010 = !DILocation(line: 821, column: 13, scope: !11005)
!11011 = !DILocation(line: 822, column: 14, scope: !10840)
!11012 = !DILocation(line: 822, column: 17, scope: !10840)
!11013 = !DILocation(line: 822, column: 21, scope: !10840)
!11014 = !DILocation(line: 822, column: 11, scope: !10840)
!11015 = !DILocation(line: 823, column: 9, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !10840, file: !1, line: 823, column: 9)
!11017 = !DILocation(line: 823, column: 9, scope: !10840)
!11018 = !DILocation(line: 823, column: 45, scope: !11016)
!11019 = !DILocation(line: 823, column: 16, scope: !11016)
!11020 = !DILocation(line: 824, column: 14, scope: !11021)
!11021 = distinct !DILexicalBlock(scope: !11016, file: !1, line: 824, column: 14)
!11022 = !DILocation(line: 824, column: 18, scope: !11021)
!11023 = !DILocation(line: 824, column: 23, scope: !11021)
!11024 = !DILocation(line: 824, column: 14, scope: !11016)
!11025 = !DILocation(line: 824, column: 48, scope: !11021)
!11026 = !DILocation(line: 824, column: 55, scope: !11021)
!11027 = !DILocation(line: 824, column: 36, scope: !11021)
!11028 = !DILocation(line: 825, column: 17, scope: !10840)
!11029 = !DILocation(line: 825, column: 24, scope: !10840)
!11030 = !DILocation(line: 825, column: 5, scope: !10840)
!11031 = !DILocation(line: 827, column: 9, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !10840, file: !1, line: 827, column: 9)
!11033 = !DILocation(line: 827, column: 13, scope: !11032)
!11034 = !DILocation(line: 827, column: 9, scope: !10840)
!11035 = !DILocation(line: 828, column: 10, scope: !11036)
!11036 = distinct !DILexicalBlock(scope: !11037, file: !1, line: 828, column: 10)
!11037 = distinct !DILexicalBlock(scope: !11032, file: !1, line: 827, column: 17)
!11038 = !DILocation(line: 828, column: 10, scope: !11037)
!11039 = !DILocation(line: 828, column: 28, scope: !11036)
!11040 = !DILocation(line: 828, column: 32, scope: !11036)
!11041 = !DILocation(line: 828, column: 14, scope: !11036)
!11042 = !DILocation(line: 829, column: 10, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11037, file: !1, line: 829, column: 10)
!11044 = !DILocation(line: 829, column: 10, scope: !11037)
!11045 = !DILocation(line: 829, column: 22, scope: !11043)
!11046 = !DILocation(line: 829, column: 54, scope: !11043)
!11047 = !DILocation(line: 829, column: 58, scope: !11043)
!11048 = !DILocation(line: 830, column: 10, scope: !11049)
!11049 = distinct !DILexicalBlock(scope: !11037, file: !1, line: 830, column: 10)
!11050 = !DILocation(line: 830, column: 10, scope: !11037)
!11051 = !DILocation(line: 830, column: 25, scope: !11049)
!11052 = !DILocation(line: 830, column: 33, scope: !11049)
!11053 = !DILocation(line: 830, column: 41, scope: !11049)
!11054 = !DILocation(line: 830, column: 14, scope: !11049)
!11055 = !DILocation(line: 831, column: 15, scope: !11037)
!11056 = !DILocation(line: 831, column: 18, scope: !11037)
!11057 = !DILocation(line: 831, column: 22, scope: !11037)
!11058 = !DILocation(line: 831, column: 12, scope: !11037)
!11059 = !DILocation(line: 832, column: 10, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !11037, file: !1, line: 832, column: 10)
!11061 = !DILocation(line: 832, column: 10, scope: !11037)
!11062 = !DILocation(line: 832, column: 46, scope: !11060)
!11063 = !DILocation(line: 832, column: 17, scope: !11060)
!11064 = !DILocation(line: 833, column: 15, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11060, file: !1, line: 833, column: 15)
!11066 = !DILocation(line: 833, column: 19, scope: !11065)
!11067 = !DILocation(line: 833, column: 24, scope: !11065)
!11068 = !DILocation(line: 833, column: 15, scope: !11060)
!11069 = !DILocation(line: 833, column: 49, scope: !11065)
!11070 = !DILocation(line: 833, column: 56, scope: !11065)
!11071 = !DILocation(line: 833, column: 37, scope: !11065)
!11072 = !DILocation(line: 834, column: 18, scope: !11037)
!11073 = !DILocation(line: 834, column: 25, scope: !11037)
!11074 = !DILocation(line: 834, column: 6, scope: !11037)
!11075 = !DILocation(line: 835, column: 5, scope: !11037)
!11076 = !DILocation(line: 836, column: 5, scope: !10840)
!11077 = !DILocation(line: 837, column: 4, scope: !10840)
!11078 = !DILocation(line: 839, column: 8, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !10730, file: !1, line: 839, column: 8)
!11080 = !DILocation(line: 839, column: 8, scope: !10730)
!11081 = !DILocation(line: 840, column: 10, scope: !11079)
!11082 = !DILocation(line: 840, column: 5, scope: !11079)
!11083 = !DILocation(line: 841, column: 8, scope: !11084)
!11084 = distinct !DILexicalBlock(scope: !10730, file: !1, line: 841, column: 8)
!11085 = !DILocation(line: 841, column: 8, scope: !10730)
!11086 = !DILocation(line: 842, column: 10, scope: !11084)
!11087 = !DILocation(line: 842, column: 5, scope: !11084)
!11088 = !DILocation(line: 843, column: 3, scope: !10730)
!11089 = !DILocation(line: 733, column: 41, scope: !10724)
!11090 = !DILocation(line: 733, column: 47, scope: !10724)
!11091 = !DILocation(line: 733, column: 3, scope: !10724)
!11092 = distinct !{!11092, !10728, !11093}
!11093 = !DILocation(line: 843, column: 3, scope: !10721)
!11094 = !DILocation(line: 844, column: 2, scope: !10694)
!11095 = !DILocation(line: 846, column: 20, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !10690, file: !1, line: 845, column: 7)
!11097 = !DILocation(line: 846, column: 3, scope: !11096)
!11098 = !DILocation(line: 847, column: 20, scope: !11096)
!11099 = !DILocation(line: 847, column: 3, scope: !11096)
!11100 = !DILocation(line: 848, column: 7, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11096, file: !1, line: 848, column: 7)
!11102 = !DILocation(line: 848, column: 14, scope: !11101)
!11103 = !DILocation(line: 848, column: 7, scope: !11096)
!11104 = !DILocation(line: 849, column: 26, scope: !11101)
!11105 = !DILocation(line: 849, column: 4, scope: !11101)
!11106 = !DILocation(line: 851, column: 17, scope: !11101)
!11107 = !DILocation(line: 851, column: 4, scope: !11101)
!11108 = !DILocation(line: 852, column: 7, scope: !11109)
!11109 = distinct !DILexicalBlock(scope: !11096, file: !1, line: 852, column: 7)
!11110 = !DILocation(line: 852, column: 7, scope: !11096)
!11111 = !DILocation(line: 853, column: 20, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11109, file: !1, line: 852, column: 13)
!11113 = !DILocation(line: 853, column: 24, scope: !11112)
!11114 = !DILocation(line: 853, column: 4, scope: !11112)
!11115 = !DILocation(line: 854, column: 3, scope: !11112)
!11116 = !DILocation(line: 856, column: 26, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11096, file: !1, line: 856, column: 7)
!11118 = !DILocation(line: 856, column: 8, scope: !11117)
!11119 = !DILocation(line: 856, column: 7, scope: !11096)
!11120 = !DILocalVariable(name: "tottri", scope: !11121, file: !1, line: 857, type: !219)
!11121 = distinct !DILexicalBlock(scope: !11117, file: !1, line: 856, column: 31)
!11122 = !DILocation(line: 857, column: 8, scope: !11121)
!11123 = !DILocation(line: 857, column: 17, scope: !11121)
!11124 = !DILocation(line: 857, column: 21, scope: !11121)
!11125 = !DILocation(line: 857, column: 33, scope: !11121)
!11126 = !DILocation(line: 857, column: 52, scope: !11121)
!11127 = !DILocalVariable(name: "next_actualFace", scope: !11121, file: !1, line: 858, type: !219)
!11128 = !DILocation(line: 858, column: 8, scope: !11121)
!11129 = !DILocation(line: 858, column: 26, scope: !11121)
!11130 = !DILocation(line: 858, column: 30, scope: !11121)
!11131 = !DILocation(line: 858, column: 42, scope: !11121)
!11132 = !DILocation(line: 860, column: 4, scope: !11121)
!11133 = !DILocation(line: 862, column: 11, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11121, file: !1, line: 862, column: 4)
!11135 = !DILocation(line: 862, column: 9, scope: !11134)
!11136 = !DILocation(line: 862, column: 16, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11134, file: !1, line: 862, column: 4)
!11138 = !DILocation(line: 862, column: 20, scope: !11137)
!11139 = !DILocation(line: 862, column: 18, scope: !11137)
!11140 = !DILocation(line: 862, column: 4, scope: !11134)
!11141 = !DILocalVariable(name: "actualFace", scope: !11142, file: !1, line: 863, type: !219)
!11142 = distinct !DILexicalBlock(scope: !11137, file: !1, line: 862, column: 33)
!11143 = !DILocation(line: 863, column: 9, scope: !11142)
!11144 = !DILocation(line: 863, column: 22, scope: !11142)
!11145 = !DILocalVariable(name: "draw_option", scope: !11142, file: !1, line: 864, type: !1717)
!11146 = !DILocation(line: 864, column: 18, scope: !11142)
!11147 = !DILocalVariable(name: "flush", scope: !11142, file: !1, line: 865, type: !219)
!11148 = !DILocation(line: 865, column: 9, scope: !11142)
!11149 = !DILocation(line: 867, column: 9, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11142, file: !1, line: 867, column: 9)
!11151 = !DILocation(line: 867, column: 14, scope: !11150)
!11152 = !DILocation(line: 867, column: 21, scope: !11150)
!11153 = !DILocation(line: 867, column: 11, scope: !11150)
!11154 = !DILocation(line: 867, column: 9, scope: !11142)
!11155 = !DILocation(line: 868, column: 24, scope: !11150)
!11156 = !DILocation(line: 868, column: 28, scope: !11150)
!11157 = !DILocation(line: 868, column: 40, scope: !11150)
!11158 = !DILocation(line: 868, column: 58, scope: !11150)
!11159 = !DILocation(line: 868, column: 60, scope: !11150)
!11160 = !DILocation(line: 868, column: 22, scope: !11150)
!11161 = !DILocation(line: 868, column: 6, scope: !11150)
!11162 = !DILocation(line: 870, column: 9, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11142, file: !1, line: 870, column: 9)
!11164 = !DILocation(line: 870, column: 9, scope: !11142)
!11165 = !DILocation(line: 871, column: 20, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11163, file: !1, line: 870, column: 21)
!11167 = !DILocation(line: 871, column: 31, scope: !11166)
!11168 = !DILocation(line: 871, column: 41, scope: !11166)
!11169 = !DILocation(line: 871, column: 44, scope: !11166)
!11170 = !DILocation(line: 871, column: 50, scope: !11166)
!11171 = !DILocation(line: 871, column: 53, scope: !11166)
!11172 = !DILocation(line: 871, column: 74, scope: !11166)
!11173 = !DILocation(line: 871, column: 79, scope: !11166)
!11174 = !DILocation(line: 871, column: 73, scope: !11166)
!11175 = !DILocation(line: 871, column: 89, scope: !11166)
!11176 = !DILocation(line: 871, column: 92, scope: !11166)
!11177 = !DILocation(line: 871, column: 104, scope: !11166)
!11178 = !DILocation(line: 871, column: 18, scope: !11166)
!11179 = !DILocation(line: 872, column: 5, scope: !11166)
!11180 = !DILocation(line: 874, column: 10, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11182, file: !1, line: 874, column: 10)
!11182 = distinct !DILexicalBlock(scope: !11163, file: !1, line: 873, column: 10)
!11183 = !DILocation(line: 874, column: 10, scope: !11182)
!11184 = !DILocation(line: 875, column: 39, scope: !11185)
!11185 = distinct !DILexicalBlock(scope: !11181, file: !1, line: 874, column: 29)
!11186 = !DILocation(line: 875, column: 58, scope: !11185)
!11187 = !DILocation(line: 875, column: 76, scope: !11185)
!11188 = !DILocation(line: 875, column: 14, scope: !11185)
!11189 = !DILocation(line: 875, column: 12, scope: !11185)
!11190 = !DILocation(line: 876, column: 11, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11185, file: !1, line: 876, column: 11)
!11192 = !DILocation(line: 876, column: 16, scope: !11191)
!11193 = !DILocation(line: 876, column: 11, scope: !11185)
!11194 = !DILocation(line: 880, column: 20, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11191, file: !1, line: 876, column: 35)
!11196 = !DILocation(line: 881, column: 7, scope: !11195)
!11197 = !DILocation(line: 882, column: 16, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11191, file: !1, line: 882, column: 16)
!11199 = !DILocation(line: 882, column: 16, scope: !11191)
!11200 = !DILocation(line: 883, column: 22, scope: !11201)
!11201 = distinct !DILexicalBlock(scope: !11198, file: !1, line: 882, column: 34)
!11202 = !DILocation(line: 883, column: 39, scope: !11201)
!11203 = !DILocation(line: 883, column: 49, scope: !11201)
!11204 = !DILocation(line: 883, column: 20, scope: !11201)
!11205 = !DILocation(line: 884, column: 7, scope: !11201)
!11206 = !DILocation(line: 885, column: 6, scope: !11185)
!11207 = !DILocation(line: 886, column: 15, scope: !11208)
!11208 = distinct !DILexicalBlock(scope: !11181, file: !1, line: 886, column: 15)
!11209 = !DILocation(line: 886, column: 15, scope: !11181)
!11210 = !DILocation(line: 887, column: 21, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11208, file: !1, line: 886, column: 33)
!11212 = !DILocation(line: 887, column: 38, scope: !11211)
!11213 = !DILocation(line: 887, column: 48, scope: !11211)
!11214 = !DILocation(line: 887, column: 19, scope: !11211)
!11215 = !DILocation(line: 888, column: 6, scope: !11211)
!11216 = !DILocation(line: 892, column: 14, scope: !11142)
!11217 = !DILocation(line: 892, column: 26, scope: !11142)
!11218 = !DILocation(line: 892, column: 50, scope: !11142)
!11219 = !DILocation(line: 892, column: 54, scope: !11142)
!11220 = !DILocation(line: 892, column: 59, scope: !11142)
!11221 = !DILocation(line: 892, column: 66, scope: !11142)
!11222 = !DILocation(line: 892, column: 56, scope: !11142)
!11223 = !DILocation(line: 892, column: 11, scope: !11142)
!11224 = !DILocation(line: 894, column: 10, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11142, file: !1, line: 894, column: 9)
!11226 = !DILocation(line: 894, column: 16, scope: !11225)
!11227 = !DILocation(line: 894, column: 19, scope: !11225)
!11228 = !DILocation(line: 894, column: 9, scope: !11142)
!11229 = !DILocation(line: 897, column: 15, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11225, file: !1, line: 894, column: 39)
!11231 = !DILocation(line: 897, column: 34, scope: !11230)
!11232 = !DILocation(line: 897, column: 44, scope: !11230)
!11233 = !DILocation(line: 897, column: 56, scope: !11230)
!11234 = !DILocation(line: 897, column: 73, scope: !11230)
!11235 = !DILocation(line: 897, column: 12, scope: !11230)
!11236 = !DILocation(line: 898, column: 5, scope: !11230)
!11237 = !DILocation(line: 900, column: 9, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11142, file: !1, line: 900, column: 9)
!11239 = !DILocation(line: 900, column: 9, scope: !11142)
!11240 = !DILocalVariable(name: "first", scope: !11241, file: !1, line: 901, type: !219)
!11241 = distinct !DILexicalBlock(scope: !11238, file: !1, line: 900, column: 16)
!11242 = !DILocation(line: 901, column: 10, scope: !11241)
!11243 = !DILocation(line: 901, column: 18, scope: !11241)
!11244 = !DILocation(line: 901, column: 28, scope: !11241)
!11245 = !DILocalVariable(name: "count", scope: !11241, file: !1, line: 903, type: !219)
!11246 = !DILocation(line: 903, column: 10, scope: !11241)
!11247 = !DILocation(line: 903, column: 19, scope: !11241)
!11248 = !DILocation(line: 903, column: 23, scope: !11241)
!11249 = !DILocation(line: 903, column: 21, scope: !11241)
!11250 = !DILocation(line: 903, column: 36, scope: !11241)
!11251 = !DILocation(line: 903, column: 48, scope: !11241)
!11252 = !DILocation(line: 903, column: 33, scope: !11241)
!11253 = !DILocation(line: 903, column: 81, scope: !11241)
!11254 = !DILocation(line: 905, column: 10, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11241, file: !1, line: 905, column: 10)
!11256 = !DILocation(line: 905, column: 10, scope: !11241)
!11257 = !DILocation(line: 906, column: 11, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !11259, file: !1, line: 906, column: 11)
!11259 = distinct !DILexicalBlock(scope: !11255, file: !1, line: 905, column: 17)
!11260 = !DILocation(line: 906, column: 16, scope: !11258)
!11261 = !DILocation(line: 906, column: 19, scope: !11258)
!11262 = !DILocation(line: 906, column: 31, scope: !11258)
!11263 = !DILocation(line: 906, column: 11, scope: !11259)
!11264 = !DILocation(line: 907, column: 8, scope: !11258)
!11265 = !DILocation(line: 909, column: 8, scope: !11258)
!11266 = !DILocation(line: 911, column: 34, scope: !11259)
!11267 = !DILocation(line: 911, column: 41, scope: !11259)
!11268 = !DILocation(line: 911, column: 7, scope: !11259)
!11269 = !DILocation(line: 912, column: 6, scope: !11259)
!11270 = !DILocation(line: 914, column: 18, scope: !11241)
!11271 = !DILocation(line: 914, column: 20, scope: !11241)
!11272 = !DILocation(line: 914, column: 16, scope: !11241)
!11273 = !DILocation(line: 915, column: 5, scope: !11241)
!11274 = !DILocation(line: 916, column: 4, scope: !11142)
!11275 = !DILocation(line: 862, column: 29, scope: !11137)
!11276 = !DILocation(line: 862, column: 4, scope: !11137)
!11277 = distinct !{!11277, !11140, !11278}
!11278 = !DILocation(line: 916, column: 4, scope: !11134)
!11279 = !DILocation(line: 917, column: 3, scope: !11121)
!11280 = !DILocation(line: 919, column: 3, scope: !11096)
!11281 = !DILocation(line: 920, column: 3, scope: !11096)
!11282 = !DILocation(line: 922, column: 1, scope: !10561)
!11283 = distinct !DISubprogram(name: "cdDM_update_normals_from_pbvh", scope: !1, file: !1, line: 331, type: !1475, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!11284 = !DILocalVariable(name: "dm", arg: 1, scope: !11283, file: !1, line: 331, type: !1477)
!11285 = !DILocation(line: 331, column: 56, scope: !11283)
!11286 = !DILocalVariable(name: "cddm", scope: !11283, file: !1, line: 333, type: !201)
!11287 = !DILocation(line: 333, column: 17, scope: !11283)
!11288 = !DILocation(line: 333, column: 42, scope: !11283)
!11289 = !DILocation(line: 333, column: 24, scope: !11283)
!11290 = !DILocalVariable(name: "face_nors", scope: !11283, file: !1, line: 334, type: !596)
!11291 = !DILocation(line: 334, column: 10, scope: !11283)
!11292 = !DILocation(line: 336, column: 7, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11283, file: !1, line: 336, column: 6)
!11294 = !DILocation(line: 336, column: 13, scope: !11293)
!11295 = !DILocation(line: 336, column: 18, scope: !11293)
!11296 = !DILocation(line: 336, column: 22, scope: !11293)
!11297 = !DILocation(line: 336, column: 28, scope: !11293)
!11298 = !DILocation(line: 336, column: 38, scope: !11293)
!11299 = !DILocation(line: 336, column: 42, scope: !11293)
!11300 = !DILocation(line: 336, column: 46, scope: !11293)
!11301 = !DILocation(line: 336, column: 6, scope: !11283)
!11302 = !DILocation(line: 337, column: 3, scope: !11293)
!11303 = !DILocation(line: 339, column: 36, scope: !11283)
!11304 = !DILocation(line: 339, column: 40, scope: !11283)
!11305 = !DILocation(line: 339, column: 14, scope: !11283)
!11306 = !DILocation(line: 339, column: 12, scope: !11283)
!11307 = !DILocation(line: 341, column: 18, scope: !11283)
!11308 = !DILocation(line: 341, column: 24, scope: !11283)
!11309 = !DILocation(line: 341, column: 50, scope: !11283)
!11310 = !DILocation(line: 341, column: 2, scope: !11283)
!11311 = !DILocation(line: 342, column: 1, scope: !11283)
!11312 = distinct !DISubprogram(name: "DM_origindex_mface_mpoly", scope: !4, file: !4, line: 767, type: !11313, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!11313 = !DISubroutineType(types: !11314)
!11314 = !{!219, !3982, !3982, !2682}
!11315 = !DILocalVariable(name: "index_mf_to_mpoly", arg: 1, scope: !11312, file: !4, line: 767, type: !3982)
!11316 = !DILocation(line: 767, column: 52, scope: !11312)
!11317 = !DILocalVariable(name: "index_mp_to_orig", arg: 2, scope: !11312, file: !4, line: 767, type: !3982)
!11318 = !DILocation(line: 767, column: 82, scope: !11312)
!11319 = !DILocalVariable(name: "i", arg: 3, scope: !11312, file: !4, line: 767, type: !2682)
!11320 = !DILocation(line: 767, column: 110, scope: !11312)
!11321 = !DILocalVariable(name: "j", scope: !11312, file: !4, line: 769, type: !2682)
!11322 = !DILocation(line: 769, column: 12, scope: !11312)
!11323 = !DILocation(line: 769, column: 16, scope: !11312)
!11324 = !DILocation(line: 769, column: 34, scope: !11312)
!11325 = !DILocation(line: 770, column: 10, scope: !11312)
!11326 = !DILocation(line: 770, column: 12, scope: !11312)
!11327 = !DILocation(line: 770, column: 9, scope: !11312)
!11328 = !DILocation(line: 770, column: 34, scope: !11312)
!11329 = !DILocation(line: 770, column: 53, scope: !11312)
!11330 = !DILocation(line: 770, column: 70, scope: !11312)
!11331 = !DILocation(line: 770, column: 75, scope: !11312)
!11332 = !DILocation(line: 770, column: 2, scope: !11312)
!11333 = distinct !DISubprogram(name: "cddm_draw_attrib_vertex", scope: !1, file: !1, line: 1160, type: !11334, scopeLine: 1162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!11334 = !DISubroutineType(types: !11335)
!11335 = !{null, !11336, !8469, !219, !219, !219, !8579, !1730}
!11336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8432, size: 64)
!11337 = !DILocalVariable(name: "attribs", arg: 1, scope: !11333, file: !1, line: 1160, type: !11336)
!11338 = !DILocation(line: 1160, column: 54, scope: !11333)
!11339 = !DILocalVariable(name: "mvert", arg: 2, scope: !11333, file: !1, line: 1160, type: !8469)
!11340 = !DILocation(line: 1160, column: 76, scope: !11333)
!11341 = !DILocalVariable(name: "a", arg: 3, scope: !11333, file: !1, line: 1160, type: !219)
!11342 = !DILocation(line: 1160, column: 87, scope: !11333)
!11343 = !DILocalVariable(name: "index", arg: 4, scope: !11333, file: !1, line: 1160, type: !219)
!11344 = !DILocation(line: 1160, column: 94, scope: !11333)
!11345 = !DILocalVariable(name: "vert", arg: 5, scope: !11333, file: !1, line: 1160, type: !219)
!11346 = !DILocation(line: 1160, column: 105, scope: !11333)
!11347 = !DILocalVariable(name: "lnor", arg: 6, scope: !11333, file: !1, line: 1161, type: !8579)
!11348 = !DILocation(line: 1161, column: 51, scope: !11333)
!11349 = !DILocalVariable(name: "smoothnormal", arg: 7, scope: !11333, file: !1, line: 1161, type: !1730)
!11350 = !DILocation(line: 1161, column: 72, scope: !11333)
!11351 = !DILocalVariable(name: "zero", scope: !11333, file: !1, line: 1163, type: !11352)
!11352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1482, size: 128, elements: !505)
!11353 = !DILocation(line: 1163, column: 14, scope: !11333)
!11354 = !DILocalVariable(name: "b", scope: !11333, file: !1, line: 1164, type: !219)
!11355 = !DILocation(line: 1164, column: 6, scope: !11333)
!11356 = !DILocation(line: 1167, column: 6, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11333, file: !1, line: 1167, column: 6)
!11358 = !DILocation(line: 1167, column: 15, scope: !11357)
!11359 = !DILocation(line: 1167, column: 6, scope: !11333)
!11360 = !DILocalVariable(name: "array", scope: !11361, file: !1, line: 1168, type: !596)
!11361 = distinct !DILexicalBlock(scope: !11357, file: !1, line: 1167, column: 24)
!11362 = !DILocation(line: 1168, column: 21, scope: !11361)
!11363 = !DILocation(line: 1168, column: 33, scope: !11361)
!11364 = !DILocation(line: 1168, column: 42, scope: !11361)
!11365 = !DILocation(line: 1168, column: 47, scope: !11361)
!11366 = !DILocalVariable(name: "orco", scope: !11361, file: !1, line: 1169, type: !1649)
!11367 = !DILocation(line: 1169, column: 16, scope: !11361)
!11368 = !DILocation(line: 1169, column: 24, scope: !11361)
!11369 = !DILocation(line: 1169, column: 23, scope: !11361)
!11370 = !DILocation(line: 1169, column: 33, scope: !11361)
!11371 = !DILocation(line: 1169, column: 39, scope: !11361)
!11372 = !DILocation(line: 1169, column: 48, scope: !11361)
!11373 = !DILocation(line: 1171, column: 7, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11361, file: !1, line: 1171, column: 7)
!11375 = !DILocation(line: 1171, column: 16, scope: !11374)
!11376 = !DILocation(line: 1171, column: 21, scope: !11374)
!11377 = !DILocation(line: 1171, column: 7, scope: !11361)
!11378 = !DILocation(line: 1172, column: 18, scope: !11374)
!11379 = !DILocation(line: 1172, column: 4, scope: !11374)
!11380 = !DILocation(line: 1174, column: 4, scope: !11374)
!11381 = !DILocation(line: 1174, column: 25, scope: !11374)
!11382 = !DILocation(line: 1174, column: 34, scope: !11374)
!11383 = !DILocation(line: 1174, column: 39, scope: !11374)
!11384 = !DILocation(line: 1174, column: 49, scope: !11374)
!11385 = !DILocation(line: 1175, column: 2, scope: !11361)
!11386 = !DILocation(line: 1178, column: 9, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11333, file: !1, line: 1178, column: 2)
!11388 = !DILocation(line: 1178, column: 7, scope: !11387)
!11389 = !DILocation(line: 1178, column: 14, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11387, file: !1, line: 1178, column: 2)
!11391 = !DILocation(line: 1178, column: 18, scope: !11390)
!11392 = !DILocation(line: 1178, column: 27, scope: !11390)
!11393 = !DILocation(line: 1178, column: 16, scope: !11390)
!11394 = !DILocation(line: 1178, column: 2, scope: !11387)
!11395 = !DILocalVariable(name: "uv", scope: !11396, file: !1, line: 1179, type: !1649)
!11396 = distinct !DILexicalBlock(scope: !11390, file: !1, line: 1178, column: 42)
!11397 = !DILocation(line: 1179, column: 16, scope: !11396)
!11398 = !DILocation(line: 1181, column: 7, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11396, file: !1, line: 1181, column: 7)
!11400 = !DILocation(line: 1181, column: 16, scope: !11399)
!11401 = !DILocation(line: 1181, column: 22, scope: !11399)
!11402 = !DILocation(line: 1181, column: 25, scope: !11399)
!11403 = !DILocation(line: 1181, column: 7, scope: !11396)
!11404 = !DILocalVariable(name: "tf", scope: !11405, file: !1, line: 1182, type: !6719)
!11405 = distinct !DILexicalBlock(scope: !11399, file: !1, line: 1181, column: 32)
!11406 = !DILocation(line: 1182, column: 12, scope: !11405)
!11407 = !DILocation(line: 1182, column: 18, scope: !11405)
!11408 = !DILocation(line: 1182, column: 27, scope: !11405)
!11409 = !DILocation(line: 1182, column: 33, scope: !11405)
!11410 = !DILocation(line: 1182, column: 36, scope: !11405)
!11411 = !DILocation(line: 1182, column: 42, scope: !11405)
!11412 = !DILocation(line: 1183, column: 9, scope: !11405)
!11413 = !DILocation(line: 1183, column: 13, scope: !11405)
!11414 = !DILocation(line: 1183, column: 16, scope: !11405)
!11415 = !DILocation(line: 1183, column: 7, scope: !11405)
!11416 = !DILocation(line: 1184, column: 3, scope: !11405)
!11417 = !DILocation(line: 1186, column: 9, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11399, file: !1, line: 1185, column: 8)
!11419 = !DILocation(line: 1186, column: 7, scope: !11418)
!11420 = !DILocation(line: 1189, column: 7, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11396, file: !1, line: 1189, column: 7)
!11422 = !DILocation(line: 1189, column: 16, scope: !11421)
!11423 = !DILocation(line: 1189, column: 22, scope: !11421)
!11424 = !DILocation(line: 1189, column: 25, scope: !11421)
!11425 = !DILocation(line: 1189, column: 7, scope: !11396)
!11426 = !DILocation(line: 1190, column: 18, scope: !11421)
!11427 = !DILocation(line: 1190, column: 4, scope: !11421)
!11428 = !DILocation(line: 1192, column: 4, scope: !11421)
!11429 = !DILocation(line: 1192, column: 25, scope: !11421)
!11430 = !DILocation(line: 1192, column: 34, scope: !11421)
!11431 = !DILocation(line: 1192, column: 40, scope: !11421)
!11432 = !DILocation(line: 1192, column: 43, scope: !11421)
!11433 = !DILocation(line: 1192, column: 53, scope: !11421)
!11434 = !DILocation(line: 1193, column: 2, scope: !11396)
!11435 = !DILocation(line: 1178, column: 38, scope: !11390)
!11436 = !DILocation(line: 1178, column: 2, scope: !11390)
!11437 = distinct !{!11437, !11394, !11438}
!11438 = !DILocation(line: 1193, column: 2, scope: !11387)
!11439 = !DILocation(line: 1196, column: 9, scope: !11440)
!11440 = distinct !DILexicalBlock(scope: !11333, file: !1, line: 1196, column: 2)
!11441 = !DILocation(line: 1196, column: 7, scope: !11440)
!11442 = !DILocation(line: 1196, column: 14, scope: !11443)
!11443 = distinct !DILexicalBlock(scope: !11440, file: !1, line: 1196, column: 2)
!11444 = !DILocation(line: 1196, column: 18, scope: !11443)
!11445 = !DILocation(line: 1196, column: 27, scope: !11443)
!11446 = !DILocation(line: 1196, column: 16, scope: !11443)
!11447 = !DILocation(line: 1196, column: 2, scope: !11440)
!11448 = !DILocalVariable(name: "col", scope: !11449, file: !1, line: 1197, type: !9220)
!11449 = distinct !DILexicalBlock(scope: !11443, file: !1, line: 1196, column: 41)
!11450 = !DILocation(line: 1197, column: 11, scope: !11449)
!11451 = !DILocation(line: 1199, column: 7, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11449, file: !1, line: 1199, column: 7)
!11453 = !DILocation(line: 1199, column: 16, scope: !11452)
!11454 = !DILocation(line: 1199, column: 21, scope: !11452)
!11455 = !DILocation(line: 1199, column: 24, scope: !11452)
!11456 = !DILocation(line: 1199, column: 7, scope: !11449)
!11457 = !DILocalVariable(name: "cp", scope: !11458, file: !1, line: 1200, type: !7767)
!11458 = distinct !DILexicalBlock(scope: !11452, file: !1, line: 1199, column: 31)
!11459 = !DILocation(line: 1200, column: 10, scope: !11458)
!11460 = !DILocation(line: 1200, column: 16, scope: !11458)
!11461 = !DILocation(line: 1200, column: 25, scope: !11458)
!11462 = !DILocation(line: 1200, column: 30, scope: !11458)
!11463 = !DILocation(line: 1200, column: 33, scope: !11458)
!11464 = !DILocation(line: 1200, column: 39, scope: !11458)
!11465 = !DILocation(line: 1200, column: 41, scope: !11458)
!11466 = !DILocation(line: 1200, column: 47, scope: !11458)
!11467 = !DILocation(line: 1200, column: 45, scope: !11458)
!11468 = !DILocation(line: 1201, column: 13, scope: !11458)
!11469 = !DILocation(line: 1201, column: 17, scope: !11458)
!11470 = !DILocation(line: 1201, column: 4, scope: !11458)
!11471 = !DILocation(line: 1201, column: 11, scope: !11458)
!11472 = !DILocation(line: 1201, column: 29, scope: !11458)
!11473 = !DILocation(line: 1201, column: 33, scope: !11458)
!11474 = !DILocation(line: 1201, column: 20, scope: !11458)
!11475 = !DILocation(line: 1201, column: 27, scope: !11458)
!11476 = !DILocation(line: 1201, column: 45, scope: !11458)
!11477 = !DILocation(line: 1201, column: 49, scope: !11458)
!11478 = !DILocation(line: 1201, column: 36, scope: !11458)
!11479 = !DILocation(line: 1201, column: 43, scope: !11458)
!11480 = !DILocation(line: 1201, column: 61, scope: !11458)
!11481 = !DILocation(line: 1201, column: 65, scope: !11458)
!11482 = !DILocation(line: 1201, column: 52, scope: !11458)
!11483 = !DILocation(line: 1201, column: 59, scope: !11458)
!11484 = !DILocation(line: 1202, column: 3, scope: !11458)
!11485 = !DILocation(line: 1204, column: 4, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11452, file: !1, line: 1203, column: 8)
!11487 = !DILocation(line: 1204, column: 11, scope: !11486)
!11488 = !DILocation(line: 1204, column: 16, scope: !11486)
!11489 = !DILocation(line: 1204, column: 23, scope: !11486)
!11490 = !DILocation(line: 1204, column: 28, scope: !11486)
!11491 = !DILocation(line: 1204, column: 35, scope: !11486)
!11492 = !DILocation(line: 1204, column: 40, scope: !11486)
!11493 = !DILocation(line: 1204, column: 47, scope: !11486)
!11494 = !DILocation(line: 1207, column: 3, scope: !11449)
!11495 = !DILocation(line: 1207, column: 25, scope: !11449)
!11496 = !DILocation(line: 1207, column: 34, scope: !11449)
!11497 = !DILocation(line: 1207, column: 39, scope: !11449)
!11498 = !DILocation(line: 1207, column: 42, scope: !11449)
!11499 = !DILocation(line: 1207, column: 52, scope: !11449)
!11500 = !DILocation(line: 1208, column: 2, scope: !11449)
!11501 = !DILocation(line: 1196, column: 37, scope: !11443)
!11502 = !DILocation(line: 1196, column: 2, scope: !11443)
!11503 = distinct !{!11503, !11447, !11504}
!11504 = !DILocation(line: 1208, column: 2, scope: !11440)
!11505 = !DILocation(line: 1211, column: 6, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11333, file: !1, line: 1211, column: 6)
!11507 = !DILocation(line: 1211, column: 15, scope: !11506)
!11508 = !DILocation(line: 1211, column: 6, scope: !11333)
!11509 = !DILocalVariable(name: "array", scope: !11510, file: !1, line: 1212, type: !1704)
!11510 = distinct !DILexicalBlock(scope: !11506, file: !1, line: 1211, column: 24)
!11511 = !DILocation(line: 1212, column: 21, scope: !11510)
!11512 = !DILocation(line: 1212, column: 33, scope: !11510)
!11513 = !DILocation(line: 1212, column: 42, scope: !11510)
!11514 = !DILocation(line: 1212, column: 47, scope: !11510)
!11515 = !DILocalVariable(name: "tang", scope: !11510, file: !1, line: 1213, type: !1649)
!11516 = !DILocation(line: 1213, column: 16, scope: !11510)
!11517 = !DILocation(line: 1213, column: 24, scope: !11510)
!11518 = !DILocation(line: 1213, column: 23, scope: !11510)
!11519 = !DILocation(line: 1213, column: 33, scope: !11510)
!11520 = !DILocation(line: 1213, column: 39, scope: !11510)
!11521 = !DILocation(line: 1213, column: 41, scope: !11510)
!11522 = !DILocation(line: 1213, column: 47, scope: !11510)
!11523 = !DILocation(line: 1213, column: 45, scope: !11510)
!11524 = !DILocation(line: 1213, column: 55, scope: !11510)
!11525 = !DILocation(line: 1214, column: 3, scope: !11510)
!11526 = !DILocation(line: 1214, column: 24, scope: !11510)
!11527 = !DILocation(line: 1214, column: 33, scope: !11510)
!11528 = !DILocation(line: 1214, column: 38, scope: !11510)
!11529 = !DILocation(line: 1214, column: 48, scope: !11510)
!11530 = !DILocation(line: 1215, column: 2, scope: !11510)
!11531 = !DILocation(line: 1218, column: 6, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11333, file: !1, line: 1218, column: 6)
!11533 = !DILocation(line: 1218, column: 6, scope: !11333)
!11534 = !DILocation(line: 1219, column: 32, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11532, file: !1, line: 1218, column: 12)
!11536 = !DILocation(line: 1219, column: 15, scope: !11535)
!11537 = !DILocation(line: 1219, column: 3, scope: !11535)
!11538 = !DILocation(line: 1220, column: 2, scope: !11535)
!11539 = !DILocation(line: 1221, column: 11, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11532, file: !1, line: 1221, column: 11)
!11541 = !DILocation(line: 1221, column: 11, scope: !11532)
!11542 = !DILocation(line: 1222, column: 15, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11540, file: !1, line: 1221, column: 25)
!11544 = !DILocation(line: 1222, column: 21, scope: !11543)
!11545 = !DILocation(line: 1222, column: 28, scope: !11543)
!11546 = !DILocation(line: 1222, column: 3, scope: !11543)
!11547 = !DILocation(line: 1223, column: 2, scope: !11543)
!11548 = !DILocation(line: 1226, column: 14, scope: !11333)
!11549 = !DILocation(line: 1226, column: 20, scope: !11333)
!11550 = !DILocation(line: 1226, column: 27, scope: !11333)
!11551 = !DILocation(line: 1226, column: 2, scope: !11333)
!11552 = !DILocation(line: 1227, column: 1, scope: !11333)
!11553 = distinct !DISubprogram(name: "copy_v2_v2", scope: !3595, file: !3595, line: 58, type: !3596, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!11554 = !DILocalVariable(name: "r", arg: 1, scope: !11553, file: !3595, line: 58, type: !601)
!11555 = !DILocation(line: 58, column: 31, scope: !11553)
!11556 = !DILocalVariable(name: "a", arg: 2, scope: !11553, file: !3595, line: 58, type: !1649)
!11557 = !DILocation(line: 58, column: 49, scope: !11553)
!11558 = !DILocation(line: 60, column: 9, scope: !11553)
!11559 = !DILocation(line: 60, column: 2, scope: !11553)
!11560 = !DILocation(line: 60, column: 7, scope: !11553)
!11561 = !DILocation(line: 61, column: 9, scope: !11553)
!11562 = !DILocation(line: 61, column: 2, scope: !11553)
!11563 = !DILocation(line: 61, column: 7, scope: !11553)
!11564 = !DILocation(line: 62, column: 1, scope: !11553)
!11565 = distinct !DISubprogram(name: "copy_v4_v4_char", scope: !3595, file: !3595, line: 114, type: !11566, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!11566 = !DISubroutineType(types: !11567)
!11567 = !{null, !912, !712}
!11568 = !DILocalVariable(name: "r", arg: 1, scope: !11565, file: !3595, line: 114, type: !912)
!11569 = !DILocation(line: 114, column: 35, scope: !11565)
!11570 = !DILocalVariable(name: "a", arg: 2, scope: !11565, file: !3595, line: 114, type: !712)
!11571 = !DILocation(line: 114, column: 52, scope: !11565)
!11572 = !DILocation(line: 116, column: 9, scope: !11565)
!11573 = !DILocation(line: 116, column: 2, scope: !11565)
!11574 = !DILocation(line: 116, column: 7, scope: !11565)
!11575 = !DILocation(line: 117, column: 9, scope: !11565)
!11576 = !DILocation(line: 117, column: 2, scope: !11565)
!11577 = !DILocation(line: 117, column: 7, scope: !11565)
!11578 = !DILocation(line: 118, column: 9, scope: !11565)
!11579 = !DILocation(line: 118, column: 2, scope: !11565)
!11580 = !DILocation(line: 118, column: 7, scope: !11565)
!11581 = !DILocation(line: 119, column: 9, scope: !11565)
!11582 = !DILocation(line: 119, column: 2, scope: !11565)
!11583 = !DILocation(line: 119, column: 7, scope: !11565)
!11584 = !DILocation(line: 120, column: 1, scope: !11565)
!11585 = distinct !DISubprogram(name: "copy_v4_v4", scope: !3595, file: !3595, line: 71, type: !3596, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!11586 = !DILocalVariable(name: "r", arg: 1, scope: !11585, file: !3595, line: 71, type: !601)
!11587 = !DILocation(line: 71, column: 31, scope: !11585)
!11588 = !DILocalVariable(name: "a", arg: 2, scope: !11585, file: !3595, line: 71, type: !1649)
!11589 = !DILocation(line: 71, column: 49, scope: !11585)
!11590 = !DILocation(line: 73, column: 9, scope: !11585)
!11591 = !DILocation(line: 73, column: 2, scope: !11585)
!11592 = !DILocation(line: 73, column: 7, scope: !11585)
!11593 = !DILocation(line: 74, column: 9, scope: !11585)
!11594 = !DILocation(line: 74, column: 2, scope: !11585)
!11595 = !DILocation(line: 74, column: 7, scope: !11585)
!11596 = !DILocation(line: 75, column: 9, scope: !11585)
!11597 = !DILocation(line: 75, column: 2, scope: !11585)
!11598 = !DILocation(line: 75, column: 7, scope: !11585)
!11599 = !DILocation(line: 76, column: 9, scope: !11585)
!11600 = !DILocation(line: 76, column: 2, scope: !11585)
!11601 = !DILocation(line: 76, column: 7, scope: !11585)
!11602 = !DILocation(line: 77, column: 1, scope: !11585)
!11603 = distinct !DISubprogram(name: "cdDM_free_internal", scope: !1, file: !1, line: 1835, type: !11604, scopeLine: 1836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!11604 = !DISubroutineType(types: !11605)
!11605 = !{null, !201}
!11606 = !DILocalVariable(name: "cddm", arg: 1, scope: !11603, file: !1, line: 1835, type: !201)
!11607 = !DILocation(line: 1835, column: 47, scope: !11603)
!11608 = !DILocation(line: 1837, column: 6, scope: !11609)
!11609 = distinct !DILexicalBlock(scope: !11603, file: !1, line: 1837, column: 6)
!11610 = !DILocation(line: 1837, column: 12, scope: !11609)
!11611 = !DILocation(line: 1837, column: 6, scope: !11603)
!11612 = !DILocation(line: 1837, column: 18, scope: !11609)
!11613 = !DILocation(line: 1837, column: 28, scope: !11609)
!11614 = !DILocation(line: 1837, column: 34, scope: !11609)
!11615 = !DILocation(line: 1838, column: 6, scope: !11616)
!11616 = distinct !DILexicalBlock(scope: !11603, file: !1, line: 1838, column: 6)
!11617 = !DILocation(line: 1838, column: 12, scope: !11616)
!11618 = !DILocation(line: 1838, column: 6, scope: !11603)
!11619 = !DILocation(line: 1838, column: 22, scope: !11616)
!11620 = !DILocation(line: 1838, column: 32, scope: !11616)
!11621 = !DILocation(line: 1838, column: 38, scope: !11616)
!11622 = !DILocation(line: 1839, column: 1, scope: !11603)
!11623 = distinct !DISubprogram(name: "BM_iter_new", scope: !11624, file: !11624, line: 172, type: !11625, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!11624 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!11625 = !DISubroutineType(types: !11626)
!11626 = !{!233, !11627, !747, !713, !233}
!11627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 64)
!11628 = !DILocalVariable(name: "iter", arg: 1, scope: !11623, file: !11624, line: 172, type: !11627)
!11629 = !DILocation(line: 172, column: 38, scope: !11623)
!11630 = !DILocalVariable(name: "bm", arg: 2, scope: !11623, file: !11624, line: 172, type: !747)
!11631 = !DILocation(line: 172, column: 51, scope: !11623)
!11632 = !DILocalVariable(name: "itype", arg: 3, scope: !11623, file: !11624, line: 172, type: !713)
!11633 = !DILocation(line: 172, column: 66, scope: !11623)
!11634 = !DILocalVariable(name: "data", arg: 4, scope: !11623, file: !11624, line: 172, type: !233)
!11635 = !DILocation(line: 172, column: 79, scope: !11623)
!11636 = !DILocation(line: 174, column: 6, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11623, file: !11624, line: 174, column: 6)
!11638 = !DILocation(line: 174, column: 6, scope: !11623)
!11639 = !DILocation(line: 175, column: 23, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11637, file: !11624, line: 174, column: 51)
!11641 = !DILocation(line: 175, column: 10, scope: !11640)
!11642 = !DILocation(line: 175, column: 3, scope: !11640)
!11643 = !DILocation(line: 178, column: 3, scope: !11644)
!11644 = distinct !DILexicalBlock(scope: !11637, file: !11624, line: 177, column: 7)
!11645 = !DILocation(line: 180, column: 1, scope: !11623)
!11646 = distinct !DISubprogram(name: "_bm_elem_index_set", scope: !11647, file: !11647, line: 114, type: !11648, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!11647 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!11648 = !DISubroutineType(types: !11649)
!11649 = !{null, !11650, !2682}
!11650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!11651 = !DILocalVariable(name: "head", arg: 1, scope: !11646, file: !11647, line: 114, type: !11650)
!11652 = !DILocation(line: 114, column: 46, scope: !11646)
!11653 = !DILocalVariable(name: "index", arg: 2, scope: !11646, file: !11647, line: 114, type: !2682)
!11654 = !DILocation(line: 114, column: 62, scope: !11646)
!11655 = !DILocation(line: 116, column: 16, scope: !11646)
!11656 = !DILocation(line: 116, column: 2, scope: !11646)
!11657 = !DILocation(line: 116, column: 8, scope: !11646)
!11658 = !DILocation(line: 116, column: 14, scope: !11646)
!11659 = !DILocation(line: 117, column: 1, scope: !11646)
!11660 = distinct !DISubprogram(name: "normal_float_to_short_v3", scope: !3595, file: !3595, line: 842, type: !11661, scopeLine: 843, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!11661 = !DISubroutineType(types: !11662)
!11662 = !{null, !2407, !1649}
!11663 = !DILocalVariable(name: "out", arg: 1, scope: !11660, file: !3595, line: 842, type: !2407)
!11664 = !DILocation(line: 842, column: 45, scope: !11660)
!11665 = !DILocalVariable(name: "in", arg: 2, scope: !11660, file: !3595, line: 842, type: !1649)
!11666 = !DILocation(line: 842, column: 65, scope: !11660)
!11667 = !DILocation(line: 844, column: 20, scope: !11660)
!11668 = !DILocation(line: 844, column: 26, scope: !11660)
!11669 = !DILocation(line: 844, column: 11, scope: !11660)
!11670 = !DILocation(line: 844, column: 2, scope: !11660)
!11671 = !DILocation(line: 844, column: 9, scope: !11660)
!11672 = !DILocation(line: 845, column: 20, scope: !11660)
!11673 = !DILocation(line: 845, column: 26, scope: !11660)
!11674 = !DILocation(line: 845, column: 11, scope: !11660)
!11675 = !DILocation(line: 845, column: 2, scope: !11660)
!11676 = !DILocation(line: 845, column: 9, scope: !11660)
!11677 = !DILocation(line: 846, column: 20, scope: !11660)
!11678 = !DILocation(line: 846, column: 26, scope: !11660)
!11679 = !DILocation(line: 846, column: 11, scope: !11660)
!11680 = !DILocation(line: 846, column: 2, scope: !11660)
!11681 = !DILocation(line: 846, column: 9, scope: !11660)
!11682 = !DILocation(line: 847, column: 1, scope: !11660)
!11683 = distinct !DISubprogram(name: "BM_iter_step", scope: !11624, file: !11624, line: 40, type: !11684, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!11684 = !DISubroutineType(types: !11685)
!11685 = !{!233, !11627}
!11686 = !DILocalVariable(name: "iter", arg: 1, scope: !11683, file: !11624, line: 40, type: !11627)
!11687 = !DILocation(line: 40, column: 39, scope: !11683)
!11688 = !DILocation(line: 42, column: 9, scope: !11683)
!11689 = !DILocation(line: 42, column: 15, scope: !11683)
!11690 = !DILocation(line: 42, column: 20, scope: !11683)
!11691 = !DILocation(line: 42, column: 2, scope: !11683)
!11692 = distinct !DISubprogram(name: "_bm_elem_index_get", scope: !11647, file: !11647, line: 119, type: !11693, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!11693 = !DISubroutineType(types: !11694)
!11694 = !{!219, !11695}
!11695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11696, size: 64)
!11696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !634)
!11697 = !DILocalVariable(name: "head", arg: 1, scope: !11692, file: !11647, line: 119, type: !11695)
!11698 = !DILocation(line: 119, column: 51, scope: !11692)
!11699 = !DILocation(line: 121, column: 9, scope: !11692)
!11700 = !DILocation(line: 121, column: 15, scope: !11692)
!11701 = !DILocation(line: 121, column: 2, scope: !11692)
!11702 = distinct !DISubprogram(name: "loops_to_customdata_corners", scope: !1, file: !1, line: 2048, type: !11703, scopeLine: 2051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!11703 = !DISubroutineType(types: !11704)
!11704 = !{null, !747, !1586, !219, !3092, !219, !219}
!11705 = !DILocalVariable(name: "bm", arg: 1, scope: !11702, file: !1, line: 2048, type: !747)
!11706 = !DILocation(line: 2048, column: 48, scope: !11702)
!11707 = !DILocalVariable(name: "facedata", arg: 2, scope: !11702, file: !1, line: 2048, type: !1586)
!11708 = !DILocation(line: 2048, column: 64, scope: !11702)
!11709 = !DILocalVariable(name: "cdindex", arg: 3, scope: !11702, file: !1, line: 2049, type: !219)
!11710 = !DILocation(line: 2049, column: 45, scope: !11702)
!11711 = !DILocalVariable(name: "l3", arg: 4, scope: !11702, file: !1, line: 2049, type: !3092)
!11712 = !DILocation(line: 2049, column: 68, scope: !11702)
!11713 = !DILocalVariable(name: "numCol", arg: 5, scope: !11702, file: !1, line: 2050, type: !219)
!11714 = !DILocation(line: 2050, column: 45, scope: !11702)
!11715 = !DILocalVariable(name: "numTex", arg: 6, scope: !11702, file: !1, line: 2050, type: !219)
!11716 = !DILocation(line: 2050, column: 57, scope: !11702)
!11717 = !DILocalVariable(name: "l", scope: !11702, file: !1, line: 2052, type: !1907)
!11718 = !DILocation(line: 2052, column: 16, scope: !11702)
!11719 = !DILocalVariable(name: "f", scope: !11702, file: !1, line: 2053, type: !694)
!11720 = !DILocation(line: 2053, column: 10, scope: !11702)
!11721 = !DILocation(line: 2053, column: 14, scope: !11702)
!11722 = !DILocation(line: 2053, column: 21, scope: !11702)
!11723 = !DILocalVariable(name: "texface", scope: !11702, file: !1, line: 2054, type: !6719)
!11724 = !DILocation(line: 2054, column: 10, scope: !11702)
!11725 = !DILocalVariable(name: "texpoly", scope: !11702, file: !1, line: 2055, type: !11726)
!11726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11727, size: 64)
!11727 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTexPoly", file: !123, line: 97, baseType: !2274)
!11728 = !DILocation(line: 2055, column: 12, scope: !11702)
!11729 = !DILocalVariable(name: "mcol", scope: !11702, file: !1, line: 2056, type: !7767)
!11730 = !DILocation(line: 2056, column: 8, scope: !11702)
!11731 = !DILocalVariable(name: "mloopcol", scope: !11702, file: !1, line: 2057, type: !11732)
!11732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11733, size: 64)
!11733 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoopCol", file: !123, line: 131, baseType: !2291)
!11734 = !DILocation(line: 2057, column: 12, scope: !11702)
!11735 = !DILocalVariable(name: "mloopuv", scope: !11702, file: !1, line: 2058, type: !2569)
!11736 = !DILocation(line: 2058, column: 11, scope: !11702)
!11737 = !DILocalVariable(name: "i", scope: !11702, file: !1, line: 2059, type: !219)
!11738 = !DILocation(line: 2059, column: 6, scope: !11702)
!11739 = !DILocalVariable(name: "j", scope: !11702, file: !1, line: 2059, type: !219)
!11740 = !DILocation(line: 2059, column: 9, scope: !11702)
!11741 = !DILocalVariable(name: "hasPCol", scope: !11702, file: !1, line: 2059, type: !219)
!11742 = !DILocation(line: 2059, column: 12, scope: !11702)
!11743 = !DILocation(line: 2059, column: 44, scope: !11702)
!11744 = !DILocation(line: 2059, column: 48, scope: !11702)
!11745 = !DILocation(line: 2059, column: 22, scope: !11702)
!11746 = !DILocation(line: 2061, column: 9, scope: !11747)
!11747 = distinct !DILexicalBlock(scope: !11702, file: !1, line: 2061, column: 2)
!11748 = !DILocation(line: 2061, column: 7, scope: !11747)
!11749 = !DILocation(line: 2061, column: 14, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11747, file: !1, line: 2061, column: 2)
!11751 = !DILocation(line: 2061, column: 18, scope: !11750)
!11752 = !DILocation(line: 2061, column: 16, scope: !11750)
!11753 = !DILocation(line: 2061, column: 2, scope: !11747)
!11754 = !DILocation(line: 2062, column: 30, scope: !11755)
!11755 = distinct !DILexicalBlock(scope: !11750, file: !1, line: 2061, column: 31)
!11756 = !DILocation(line: 2062, column: 51, scope: !11755)
!11757 = !DILocation(line: 2062, column: 60, scope: !11755)
!11758 = !DILocation(line: 2062, column: 13, scope: !11755)
!11759 = !DILocation(line: 2062, column: 11, scope: !11755)
!11760 = !DILocation(line: 2063, column: 37, scope: !11755)
!11761 = !DILocation(line: 2063, column: 41, scope: !11755)
!11762 = !DILocation(line: 2063, column: 48, scope: !11755)
!11763 = !DILocation(line: 2063, column: 51, scope: !11755)
!11764 = !DILocation(line: 2063, column: 56, scope: !11755)
!11765 = !DILocation(line: 2063, column: 75, scope: !11755)
!11766 = !DILocation(line: 2063, column: 13, scope: !11755)
!11767 = !DILocation(line: 2063, column: 11, scope: !11755)
!11768 = !DILocation(line: 2065, column: 3, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11755, file: !1, line: 2065, column: 3)
!11770 = !DILocation(line: 2067, column: 10, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11755, file: !1, line: 2067, column: 3)
!11772 = !DILocation(line: 2067, column: 8, scope: !11771)
!11773 = !DILocation(line: 2067, column: 15, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11771, file: !1, line: 2067, column: 3)
!11775 = !DILocation(line: 2067, column: 17, scope: !11774)
!11776 = !DILocation(line: 2067, column: 3, scope: !11771)
!11777 = !DILocation(line: 2068, column: 8, scope: !11778)
!11778 = distinct !DILexicalBlock(scope: !11774, file: !1, line: 2067, column: 27)
!11779 = !DILocation(line: 2068, column: 11, scope: !11778)
!11780 = !DILocation(line: 2068, column: 6, scope: !11778)
!11781 = !DILocation(line: 2069, column: 38, scope: !11778)
!11782 = !DILocation(line: 2069, column: 42, scope: !11778)
!11783 = !DILocation(line: 2069, column: 49, scope: !11778)
!11784 = !DILocation(line: 2069, column: 52, scope: !11778)
!11785 = !DILocation(line: 2069, column: 57, scope: !11778)
!11786 = !DILocation(line: 2069, column: 75, scope: !11778)
!11787 = !DILocation(line: 2069, column: 14, scope: !11778)
!11788 = !DILocation(line: 2069, column: 12, scope: !11778)
!11789 = !DILocation(line: 2070, column: 15, scope: !11778)
!11790 = !DILocation(line: 2070, column: 24, scope: !11778)
!11791 = !DILocation(line: 2070, column: 27, scope: !11778)
!11792 = !DILocation(line: 2070, column: 31, scope: !11778)
!11793 = !DILocation(line: 2070, column: 40, scope: !11778)
!11794 = !DILocation(line: 2070, column: 4, scope: !11778)
!11795 = !DILocation(line: 2071, column: 3, scope: !11778)
!11796 = !DILocation(line: 2067, column: 23, scope: !11774)
!11797 = !DILocation(line: 2067, column: 3, scope: !11774)
!11798 = distinct !{!11798, !11776, !11799}
!11799 = !DILocation(line: 2071, column: 3, scope: !11771)
!11800 = !DILocation(line: 2072, column: 2, scope: !11755)
!11801 = !DILocation(line: 2061, column: 27, scope: !11750)
!11802 = !DILocation(line: 2061, column: 2, scope: !11750)
!11803 = distinct !{!11803, !11753, !11804}
!11804 = !DILocation(line: 2072, column: 2, scope: !11747)
!11805 = !DILocation(line: 2074, column: 9, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !11702, file: !1, line: 2074, column: 2)
!11807 = !DILocation(line: 2074, column: 7, scope: !11806)
!11808 = !DILocation(line: 2074, column: 14, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11806, file: !1, line: 2074, column: 2)
!11810 = !DILocation(line: 2074, column: 18, scope: !11809)
!11811 = !DILocation(line: 2074, column: 16, scope: !11809)
!11812 = !DILocation(line: 2074, column: 2, scope: !11806)
!11813 = !DILocation(line: 2075, column: 27, scope: !11814)
!11814 = distinct !DILexicalBlock(scope: !11809, file: !1, line: 2074, column: 31)
!11815 = !DILocation(line: 2075, column: 46, scope: !11814)
!11816 = !DILocation(line: 2075, column: 55, scope: !11814)
!11817 = !DILocation(line: 2075, column: 10, scope: !11814)
!11818 = !DILocation(line: 2075, column: 8, scope: !11814)
!11819 = !DILocation(line: 2077, column: 10, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11814, file: !1, line: 2077, column: 3)
!11821 = !DILocation(line: 2077, column: 8, scope: !11820)
!11822 = !DILocation(line: 2077, column: 15, scope: !11823)
!11823 = distinct !DILexicalBlock(scope: !11820, file: !1, line: 2077, column: 3)
!11824 = !DILocation(line: 2077, column: 17, scope: !11823)
!11825 = !DILocation(line: 2077, column: 3, scope: !11820)
!11826 = !DILocation(line: 2078, column: 8, scope: !11827)
!11827 = distinct !DILexicalBlock(scope: !11823, file: !1, line: 2077, column: 27)
!11828 = !DILocation(line: 2078, column: 11, scope: !11827)
!11829 = !DILocation(line: 2078, column: 6, scope: !11827)
!11830 = !DILocation(line: 2079, column: 39, scope: !11827)
!11831 = !DILocation(line: 2079, column: 43, scope: !11827)
!11832 = !DILocation(line: 2079, column: 50, scope: !11827)
!11833 = !DILocation(line: 2079, column: 53, scope: !11827)
!11834 = !DILocation(line: 2079, column: 58, scope: !11827)
!11835 = !DILocation(line: 2079, column: 77, scope: !11827)
!11836 = !DILocation(line: 2079, column: 15, scope: !11827)
!11837 = !DILocation(line: 2079, column: 13, scope: !11827)
!11838 = !DILocalVariable(name: "mloopcol__tmp", scope: !11839, file: !1, line: 2080, type: !11840)
!11839 = distinct !DILexicalBlock(scope: !11827, file: !1, line: 2080, column: 4)
!11840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11841, size: 64)
!11841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11733)
!11842 = !DILocation(line: 2080, column: 4, scope: !11839)
!11843 = !DILocalVariable(name: "mcol__tmp", scope: !11839, file: !1, line: 2080, type: !7767)
!11844 = !DILocation(line: 2081, column: 3, scope: !11827)
!11845 = !DILocation(line: 2077, column: 23, scope: !11823)
!11846 = !DILocation(line: 2077, column: 3, scope: !11823)
!11847 = distinct !{!11847, !11825, !11848}
!11848 = !DILocation(line: 2081, column: 3, scope: !11820)
!11849 = !DILocation(line: 2082, column: 2, scope: !11814)
!11850 = !DILocation(line: 2074, column: 27, scope: !11809)
!11851 = !DILocation(line: 2074, column: 2, scope: !11809)
!11852 = distinct !{!11852, !11812, !11853}
!11853 = !DILocation(line: 2082, column: 2, scope: !11806)
!11854 = !DILocation(line: 2084, column: 6, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11702, file: !1, line: 2084, column: 6)
!11856 = !DILocation(line: 2084, column: 6, scope: !11702)
!11857 = !DILocation(line: 2085, column: 25, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11855, file: !1, line: 2084, column: 15)
!11859 = !DILocation(line: 2085, column: 35, scope: !11858)
!11860 = !DILocation(line: 2085, column: 10, scope: !11858)
!11861 = !DILocation(line: 2085, column: 8, scope: !11858)
!11862 = !DILocation(line: 2087, column: 10, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11858, file: !1, line: 2087, column: 3)
!11864 = !DILocation(line: 2087, column: 8, scope: !11863)
!11865 = !DILocation(line: 2087, column: 15, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11863, file: !1, line: 2087, column: 3)
!11867 = !DILocation(line: 2087, column: 17, scope: !11866)
!11868 = !DILocation(line: 2087, column: 3, scope: !11863)
!11869 = !DILocation(line: 2088, column: 8, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11866, file: !1, line: 2087, column: 27)
!11871 = !DILocation(line: 2088, column: 11, scope: !11870)
!11872 = !DILocation(line: 2088, column: 6, scope: !11870)
!11873 = !DILocation(line: 2089, column: 37, scope: !11870)
!11874 = !DILocation(line: 2089, column: 41, scope: !11870)
!11875 = !DILocation(line: 2089, column: 48, scope: !11870)
!11876 = !DILocation(line: 2089, column: 51, scope: !11870)
!11877 = !DILocation(line: 2089, column: 56, scope: !11870)
!11878 = !DILocation(line: 2089, column: 15, scope: !11870)
!11879 = !DILocation(line: 2089, column: 13, scope: !11870)
!11880 = !DILocalVariable(name: "mloopcol__tmp", scope: !11881, file: !1, line: 2090, type: !11840)
!11881 = distinct !DILexicalBlock(scope: !11870, file: !1, line: 2090, column: 4)
!11882 = !DILocation(line: 2090, column: 4, scope: !11881)
!11883 = !DILocalVariable(name: "mcol__tmp", scope: !11881, file: !1, line: 2090, type: !7767)
!11884 = !DILocation(line: 2091, column: 3, scope: !11870)
!11885 = !DILocation(line: 2087, column: 23, scope: !11866)
!11886 = !DILocation(line: 2087, column: 3, scope: !11866)
!11887 = distinct !{!11887, !11868, !11888}
!11888 = !DILocation(line: 2091, column: 3, scope: !11863)
!11889 = !DILocation(line: 2092, column: 2, scope: !11858)
!11890 = !DILocation(line: 2093, column: 1, scope: !11702)
!11891 = distinct !DISubprogram(name: "BM_iter_init", scope: !11624, file: !11624, line: 53, type: !11892, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1956)
!11892 = !DISubroutineType(types: !11893)
!11893 = !{!309, !11627, !747, !713, !233}
!11894 = !DILocalVariable(name: "iter", arg: 1, scope: !11891, file: !11624, line: 53, type: !11627)
!11895 = !DILocation(line: 53, column: 38, scope: !11891)
!11896 = !DILocalVariable(name: "bm", arg: 2, scope: !11891, file: !11624, line: 53, type: !747)
!11897 = !DILocation(line: 53, column: 51, scope: !11891)
!11898 = !DILocalVariable(name: "itype", arg: 3, scope: !11891, file: !11624, line: 53, type: !713)
!11899 = !DILocation(line: 53, column: 66, scope: !11891)
!11900 = !DILocalVariable(name: "data", arg: 4, scope: !11891, file: !11624, line: 53, type: !233)
!11901 = !DILocation(line: 53, column: 79, scope: !11891)
!11902 = !DILocation(line: 56, column: 16, scope: !11891)
!11903 = !DILocation(line: 56, column: 2, scope: !11891)
!11904 = !DILocation(line: 56, column: 8, scope: !11891)
!11905 = !DILocation(line: 56, column: 14, scope: !11891)
!11906 = !DILocation(line: 59, column: 22, scope: !11891)
!11907 = !DILocation(line: 59, column: 10, scope: !11891)
!11908 = !DILocation(line: 59, column: 2, scope: !11891)
!11909 = !DILocation(line: 63, column: 4, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11891, file: !11624, line: 59, column: 29)
!11911 = !DILocation(line: 63, column: 10, scope: !11910)
!11912 = !DILocation(line: 63, column: 16, scope: !11910)
!11913 = !DILocation(line: 64, column: 4, scope: !11910)
!11914 = !DILocation(line: 64, column: 10, scope: !11910)
!11915 = !DILocation(line: 64, column: 16, scope: !11910)
!11916 = !DILocation(line: 65, column: 44, scope: !11910)
!11917 = !DILocation(line: 65, column: 48, scope: !11910)
!11918 = !DILocation(line: 65, column: 4, scope: !11910)
!11919 = !DILocation(line: 65, column: 10, scope: !11910)
!11920 = !DILocation(line: 65, column: 15, scope: !11910)
!11921 = !DILocation(line: 65, column: 28, scope: !11910)
!11922 = !DILocation(line: 65, column: 37, scope: !11910)
!11923 = !DILocation(line: 65, column: 42, scope: !11910)
!11924 = !DILocation(line: 66, column: 4, scope: !11910)
!11925 = !DILocation(line: 70, column: 4, scope: !11910)
!11926 = !DILocation(line: 70, column: 10, scope: !11910)
!11927 = !DILocation(line: 70, column: 16, scope: !11910)
!11928 = !DILocation(line: 71, column: 4, scope: !11910)
!11929 = !DILocation(line: 71, column: 10, scope: !11910)
!11930 = !DILocation(line: 71, column: 16, scope: !11910)
!11931 = !DILocation(line: 72, column: 44, scope: !11910)
!11932 = !DILocation(line: 72, column: 48, scope: !11910)
!11933 = !DILocation(line: 72, column: 4, scope: !11910)
!11934 = !DILocation(line: 72, column: 10, scope: !11910)
!11935 = !DILocation(line: 72, column: 15, scope: !11910)
!11936 = !DILocation(line: 72, column: 28, scope: !11910)
!11937 = !DILocation(line: 72, column: 37, scope: !11910)
!11938 = !DILocation(line: 72, column: 42, scope: !11910)
!11939 = !DILocation(line: 73, column: 4, scope: !11910)
!11940 = !DILocation(line: 77, column: 4, scope: !11910)
!11941 = !DILocation(line: 77, column: 10, scope: !11910)
!11942 = !DILocation(line: 77, column: 16, scope: !11910)
!11943 = !DILocation(line: 78, column: 4, scope: !11910)
!11944 = !DILocation(line: 78, column: 10, scope: !11910)
!11945 = !DILocation(line: 78, column: 16, scope: !11910)
!11946 = !DILocation(line: 79, column: 44, scope: !11910)
!11947 = !DILocation(line: 79, column: 48, scope: !11910)
!11948 = !DILocation(line: 79, column: 4, scope: !11910)
!11949 = !DILocation(line: 79, column: 10, scope: !11910)
!11950 = !DILocation(line: 79, column: 15, scope: !11910)
!11951 = !DILocation(line: 79, column: 28, scope: !11910)
!11952 = !DILocation(line: 79, column: 37, scope: !11910)
!11953 = !DILocation(line: 79, column: 42, scope: !11910)
!11954 = !DILocation(line: 80, column: 4, scope: !11910)
!11955 = !DILocation(line: 84, column: 4, scope: !11910)
!11956 = !DILocation(line: 84, column: 10, scope: !11910)
!11957 = !DILocation(line: 84, column: 16, scope: !11910)
!11958 = !DILocation(line: 85, column: 4, scope: !11910)
!11959 = !DILocation(line: 85, column: 10, scope: !11910)
!11960 = !DILocation(line: 85, column: 16, scope: !11910)
!11961 = !DILocation(line: 86, column: 46, scope: !11910)
!11962 = !DILocation(line: 86, column: 36, scope: !11910)
!11963 = !DILocation(line: 86, column: 4, scope: !11910)
!11964 = !DILocation(line: 86, column: 10, scope: !11910)
!11965 = !DILocation(line: 86, column: 15, scope: !11910)
!11966 = !DILocation(line: 86, column: 28, scope: !11910)
!11967 = !DILocation(line: 86, column: 34, scope: !11910)
!11968 = !DILocation(line: 87, column: 4, scope: !11910)
!11969 = !DILocation(line: 91, column: 4, scope: !11910)
!11970 = !DILocation(line: 91, column: 10, scope: !11910)
!11971 = !DILocation(line: 91, column: 16, scope: !11910)
!11972 = !DILocation(line: 92, column: 4, scope: !11910)
!11973 = !DILocation(line: 92, column: 10, scope: !11910)
!11974 = !DILocation(line: 92, column: 16, scope: !11910)
!11975 = !DILocation(line: 93, column: 46, scope: !11910)
!11976 = !DILocation(line: 93, column: 36, scope: !11910)
!11977 = !DILocation(line: 93, column: 4, scope: !11910)
!11978 = !DILocation(line: 93, column: 10, scope: !11910)
!11979 = !DILocation(line: 93, column: 15, scope: !11910)
!11980 = !DILocation(line: 93, column: 28, scope: !11910)
!11981 = !DILocation(line: 93, column: 34, scope: !11910)
!11982 = !DILocation(line: 94, column: 4, scope: !11910)
!11983 = !DILocation(line: 98, column: 4, scope: !11910)
!11984 = !DILocation(line: 98, column: 10, scope: !11910)
!11985 = !DILocation(line: 98, column: 16, scope: !11910)
!11986 = !DILocation(line: 99, column: 4, scope: !11910)
!11987 = !DILocation(line: 99, column: 10, scope: !11910)
!11988 = !DILocation(line: 99, column: 16, scope: !11910)
!11989 = !DILocation(line: 100, column: 46, scope: !11910)
!11990 = !DILocation(line: 100, column: 36, scope: !11910)
!11991 = !DILocation(line: 100, column: 4, scope: !11910)
!11992 = !DILocation(line: 100, column: 10, scope: !11910)
!11993 = !DILocation(line: 100, column: 15, scope: !11910)
!11994 = !DILocation(line: 100, column: 28, scope: !11910)
!11995 = !DILocation(line: 100, column: 34, scope: !11910)
!11996 = !DILocation(line: 101, column: 4, scope: !11910)
!11997 = !DILocation(line: 105, column: 4, scope: !11910)
!11998 = !DILocation(line: 105, column: 10, scope: !11910)
!11999 = !DILocation(line: 105, column: 16, scope: !11910)
!12000 = !DILocation(line: 106, column: 4, scope: !11910)
!12001 = !DILocation(line: 106, column: 10, scope: !11910)
!12002 = !DILocation(line: 106, column: 16, scope: !11910)
!12003 = !DILocation(line: 107, column: 46, scope: !11910)
!12004 = !DILocation(line: 107, column: 36, scope: !11910)
!12005 = !DILocation(line: 107, column: 4, scope: !11910)
!12006 = !DILocation(line: 107, column: 10, scope: !11910)
!12007 = !DILocation(line: 107, column: 15, scope: !11910)
!12008 = !DILocation(line: 107, column: 28, scope: !11910)
!12009 = !DILocation(line: 107, column: 34, scope: !11910)
!12010 = !DILocation(line: 108, column: 4, scope: !11910)
!12011 = !DILocation(line: 112, column: 4, scope: !11910)
!12012 = !DILocation(line: 112, column: 10, scope: !11910)
!12013 = !DILocation(line: 112, column: 16, scope: !11910)
!12014 = !DILocation(line: 113, column: 4, scope: !11910)
!12015 = !DILocation(line: 113, column: 10, scope: !11910)
!12016 = !DILocation(line: 113, column: 16, scope: !11910)
!12017 = !DILocation(line: 114, column: 46, scope: !11910)
!12018 = !DILocation(line: 114, column: 36, scope: !11910)
!12019 = !DILocation(line: 114, column: 4, scope: !11910)
!12020 = !DILocation(line: 114, column: 10, scope: !11910)
!12021 = !DILocation(line: 114, column: 15, scope: !11910)
!12022 = !DILocation(line: 114, column: 28, scope: !11910)
!12023 = !DILocation(line: 114, column: 34, scope: !11910)
!12024 = !DILocation(line: 115, column: 4, scope: !11910)
!12025 = !DILocation(line: 119, column: 4, scope: !11910)
!12026 = !DILocation(line: 119, column: 10, scope: !11910)
!12027 = !DILocation(line: 119, column: 16, scope: !11910)
!12028 = !DILocation(line: 120, column: 4, scope: !11910)
!12029 = !DILocation(line: 120, column: 10, scope: !11910)
!12030 = !DILocation(line: 120, column: 16, scope: !11910)
!12031 = !DILocation(line: 121, column: 46, scope: !11910)
!12032 = !DILocation(line: 121, column: 36, scope: !11910)
!12033 = !DILocation(line: 121, column: 4, scope: !11910)
!12034 = !DILocation(line: 121, column: 10, scope: !11910)
!12035 = !DILocation(line: 121, column: 15, scope: !11910)
!12036 = !DILocation(line: 121, column: 28, scope: !11910)
!12037 = !DILocation(line: 121, column: 34, scope: !11910)
!12038 = !DILocation(line: 122, column: 4, scope: !11910)
!12039 = !DILocation(line: 126, column: 4, scope: !11910)
!12040 = !DILocation(line: 126, column: 10, scope: !11910)
!12041 = !DILocation(line: 126, column: 16, scope: !11910)
!12042 = !DILocation(line: 127, column: 4, scope: !11910)
!12043 = !DILocation(line: 127, column: 10, scope: !11910)
!12044 = !DILocation(line: 127, column: 16, scope: !11910)
!12045 = !DILocation(line: 128, column: 46, scope: !11910)
!12046 = !DILocation(line: 128, column: 36, scope: !11910)
!12047 = !DILocation(line: 128, column: 4, scope: !11910)
!12048 = !DILocation(line: 128, column: 10, scope: !11910)
!12049 = !DILocation(line: 128, column: 15, scope: !11910)
!12050 = !DILocation(line: 128, column: 28, scope: !11910)
!12051 = !DILocation(line: 128, column: 34, scope: !11910)
!12052 = !DILocation(line: 129, column: 4, scope: !11910)
!12053 = !DILocation(line: 133, column: 4, scope: !11910)
!12054 = !DILocation(line: 133, column: 10, scope: !11910)
!12055 = !DILocation(line: 133, column: 16, scope: !11910)
!12056 = !DILocation(line: 134, column: 4, scope: !11910)
!12057 = !DILocation(line: 134, column: 10, scope: !11910)
!12058 = !DILocation(line: 134, column: 16, scope: !11910)
!12059 = !DILocation(line: 135, column: 46, scope: !11910)
!12060 = !DILocation(line: 135, column: 36, scope: !11910)
!12061 = !DILocation(line: 135, column: 4, scope: !11910)
!12062 = !DILocation(line: 135, column: 10, scope: !11910)
!12063 = !DILocation(line: 135, column: 15, scope: !11910)
!12064 = !DILocation(line: 135, column: 28, scope: !11910)
!12065 = !DILocation(line: 135, column: 34, scope: !11910)
!12066 = !DILocation(line: 136, column: 4, scope: !11910)
!12067 = !DILocation(line: 140, column: 4, scope: !11910)
!12068 = !DILocation(line: 140, column: 10, scope: !11910)
!12069 = !DILocation(line: 140, column: 16, scope: !11910)
!12070 = !DILocation(line: 141, column: 4, scope: !11910)
!12071 = !DILocation(line: 141, column: 10, scope: !11910)
!12072 = !DILocation(line: 141, column: 16, scope: !11910)
!12073 = !DILocation(line: 142, column: 46, scope: !11910)
!12074 = !DILocation(line: 142, column: 36, scope: !11910)
!12075 = !DILocation(line: 142, column: 4, scope: !11910)
!12076 = !DILocation(line: 142, column: 10, scope: !11910)
!12077 = !DILocation(line: 142, column: 15, scope: !11910)
!12078 = !DILocation(line: 142, column: 28, scope: !11910)
!12079 = !DILocation(line: 142, column: 34, scope: !11910)
!12080 = !DILocation(line: 143, column: 4, scope: !11910)
!12081 = !DILocation(line: 147, column: 4, scope: !11910)
!12082 = !DILocation(line: 147, column: 10, scope: !11910)
!12083 = !DILocation(line: 147, column: 16, scope: !11910)
!12084 = !DILocation(line: 148, column: 4, scope: !11910)
!12085 = !DILocation(line: 148, column: 10, scope: !11910)
!12086 = !DILocation(line: 148, column: 16, scope: !11910)
!12087 = !DILocation(line: 149, column: 46, scope: !11910)
!12088 = !DILocation(line: 149, column: 36, scope: !11910)
!12089 = !DILocation(line: 149, column: 4, scope: !11910)
!12090 = !DILocation(line: 149, column: 10, scope: !11910)
!12091 = !DILocation(line: 149, column: 15, scope: !11910)
!12092 = !DILocation(line: 149, column: 28, scope: !11910)
!12093 = !DILocation(line: 149, column: 34, scope: !11910)
!12094 = !DILocation(line: 150, column: 4, scope: !11910)
!12095 = !DILocation(line: 154, column: 4, scope: !11910)
!12096 = !DILocation(line: 158, column: 2, scope: !11891)
!12097 = !DILocation(line: 158, column: 8, scope: !11891)
!12098 = !DILocation(line: 158, column: 14, scope: !11891)
!12099 = !DILocation(line: 160, column: 2, scope: !11891)
!12100 = !DILocation(line: 161, column: 1, scope: !11891)
